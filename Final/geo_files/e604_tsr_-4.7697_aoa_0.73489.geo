SetFactory("OpenCASCADE");

Point(1) = {0.075023, 0.731154, 0, 1.0};
Point(2) = {0.073413, 0.731693, 0, 1.0};
Point(3) = {0.069337, 0.732986, 0, 1.0};
Point(4) = {0.064521, 0.734464, 0, 1.0};
Point(5) = {0.059071, 0.736116, 0, 1.0};
Point(6) = {0.053092, 0.737901, 0, 1.0};
Point(7) = {0.046685, 0.739770, 0, 1.0};
Point(8) = {0.039944, 0.741657, 0, 1.0};
Point(9) = {0.032962, 0.743502, 0, 1.0};
Point(10) = {0.025816, 0.745237, 0, 1.0};
Point(11) = {0.018586, 0.746794, 0, 1.0};
Point(12) = {0.011338, 0.748095, 0, 1.0};
Point(13) = {0.004091, 0.749065, 0, 1.0};
Point(14) = {-0.003152, 0.749695, 0, 1.0};
Point(15) = {-0.010346, 0.750000, 0, 1.0};
Point(16) = {-0.017444, 0.749992, 0, 1.0};
Point(17) = {-0.024383, 0.749689, 0, 1.0};
Point(18) = {-0.031106, 0.749107, 0, 1.0};
Point(19) = {-0.037549, 0.748274, 0, 1.0};
Point(20) = {-0.043647, 0.747212, 0, 1.0};
Point(21) = {-0.049337, 0.745944, 0, 1.0};
Point(22) = {-0.054564, 0.744492, 0, 1.0};
Point(23) = {-0.059277, 0.742884, 0, 1.0};
Point(24) = {-0.063434, 0.741151, 0, 1.0};
Point(25) = {-0.066999, 0.739328, 0, 1.0};
Point(26) = {-0.069937, 0.737453, 0, 1.0};
Point(27) = {-0.072227, 0.735573, 0, 1.0};
Point(28) = {-0.073850, 0.733748, 0, 1.0};
Point(29) = {-0.074777, 0.732059, 0, 1.0};
Point(30) = {-0.074943, 0.731477, 0, 1.0};
Point(31) = {-0.074987, 0.731187, 0, 1.0};
Point(32) = {-0.074994, 0.730780, 0, 1.0};
Point(33) = {-0.074977, 0.730657, 0, 1.0};
Point(34) = {-0.074947, 0.730539, 0, 1.0};
Point(35) = {-0.074903, 0.730424, 0, 1.0};
Point(36) = {-0.074843, 0.730311, 0, 1.0};
Point(37) = {-0.074770, 0.730194, 0, 1.0};
Point(38) = {-0.074593, 0.729962, 0, 1.0};
Point(39) = {-0.074374, 0.729726, 0, 1.0};
Point(40) = {-0.073976, 0.729369, 0, 1.0};
Point(41) = {-0.072257, 0.728276, 0, 1.0};
Point(42) = {-0.069587, 0.727123, 0, 1.0};
Point(43) = {-0.066119, 0.726032, 0, 1.0};
Point(44) = {-0.061894, 0.725014, 0, 1.0};
Point(45) = {-0.056965, 0.724072, 0, 1.0};
Point(46) = {-0.051400, 0.723213, 0, 1.0};
Point(47) = {-0.045273, 0.722451, 0, 1.0};
Point(48) = {-0.038658, 0.721800, 0, 1.0};
Point(49) = {-0.031637, 0.721271, 0, 1.0};
Point(50) = {-0.024294, 0.720880, 0, 1.0};
Point(51) = {-0.016725, 0.720641, 0, 1.0};
Point(52) = {-0.009026, 0.720576, 0, 1.0};
Point(53) = {-0.001300, 0.720743, 0, 1.0};
Point(54) = {0.006414, 0.721226, 0, 1.0};
Point(55) = {0.014144, 0.722050, 0, 1.0};
Point(56) = {0.021914, 0.723163, 0, 1.0};
Point(57) = {0.029709, 0.724474, 0, 1.0};
Point(58) = {0.037495, 0.725864, 0, 1.0};
Point(59) = {0.045177, 0.727172, 0, 1.0};
Point(60) = {0.052590, 0.728274, 0, 1.0};
Point(61) = {0.059546, 0.729091, 0, 1.0};
Point(62) = {0.065853, 0.729581, 0, 1.0};
Point(63) = {0.071318, 0.729738, 0, 1.0};
Point(64) = {0.075004, 0.729642, 0, 1.0};
Point(65) = {-0.075023, -0.731154, 0, 1.0};
Point(66) = {-0.073413, -0.731693, 0, 1.0};
Point(67) = {-0.069337, -0.732986, 0, 1.0};
Point(68) = {-0.064521, -0.734464, 0, 1.0};
Point(69) = {-0.059071, -0.736116, 0, 1.0};
Point(70) = {-0.053092, -0.737901, 0, 1.0};
Point(71) = {-0.046685, -0.739770, 0, 1.0};
Point(72) = {-0.039944, -0.741657, 0, 1.0};
Point(73) = {-0.032962, -0.743502, 0, 1.0};
Point(74) = {-0.025816, -0.745237, 0, 1.0};
Point(75) = {-0.018586, -0.746794, 0, 1.0};
Point(76) = {-0.011338, -0.748095, 0, 1.0};
Point(77) = {-0.004091, -0.749065, 0, 1.0};
Point(78) = {0.003152, -0.749695, 0, 1.0};
Point(79) = {0.010346, -0.750000, 0, 1.0};
Point(80) = {0.017444, -0.749992, 0, 1.0};
Point(81) = {0.024383, -0.749689, 0, 1.0};
Point(82) = {0.031106, -0.749107, 0, 1.0};
Point(83) = {0.037549, -0.748274, 0, 1.0};
Point(84) = {0.043647, -0.747212, 0, 1.0};
Point(85) = {0.049337, -0.745944, 0, 1.0};
Point(86) = {0.054564, -0.744492, 0, 1.0};
Point(87) = {0.059277, -0.742884, 0, 1.0};
Point(88) = {0.063434, -0.741151, 0, 1.0};
Point(89) = {0.066999, -0.739328, 0, 1.0};
Point(90) = {0.069937, -0.737453, 0, 1.0};
Point(91) = {0.072227, -0.735573, 0, 1.0};
Point(92) = {0.073850, -0.733748, 0, 1.0};
Point(93) = {0.074777, -0.732059, 0, 1.0};
Point(94) = {0.074943, -0.731477, 0, 1.0};
Point(95) = {0.074987, -0.731187, 0, 1.0};
Point(96) = {0.074994, -0.730780, 0, 1.0};
Point(97) = {0.074977, -0.730657, 0, 1.0};
Point(98) = {0.074947, -0.730539, 0, 1.0};
Point(99) = {0.074903, -0.730424, 0, 1.0};
Point(100) = {0.074843, -0.730311, 0, 1.0};
Point(101) = {0.074770, -0.730194, 0, 1.0};
Point(102) = {0.074593, -0.729962, 0, 1.0};
Point(103) = {0.074374, -0.729726, 0, 1.0};
Point(104) = {0.073976, -0.729369, 0, 1.0};
Point(105) = {0.072257, -0.728276, 0, 1.0};
Point(106) = {0.069587, -0.727123, 0, 1.0};
Point(107) = {0.066119, -0.726032, 0, 1.0};
Point(108) = {0.061894, -0.725014, 0, 1.0};
Point(109) = {0.056965, -0.724072, 0, 1.0};
Point(110) = {0.051400, -0.723213, 0, 1.0};
Point(111) = {0.045273, -0.722451, 0, 1.0};
Point(112) = {0.038658, -0.721800, 0, 1.0};
Point(113) = {0.031637, -0.721271, 0, 1.0};
Point(114) = {0.024294, -0.720880, 0, 1.0};
Point(115) = {0.016725, -0.720641, 0, 1.0};
Point(116) = {0.009026, -0.720576, 0, 1.0};
Point(117) = {0.001300, -0.720743, 0, 1.0};
Point(118) = {-0.006414, -0.721226, 0, 1.0};
Point(119) = {-0.014144, -0.722050, 0, 1.0};
Point(120) = {-0.021914, -0.723163, 0, 1.0};
Point(121) = {-0.029709, -0.724474, 0, 1.0};
Point(122) = {-0.037495, -0.725864, 0, 1.0};
Point(123) = {-0.045177, -0.727172, 0, 1.0};
Point(124) = {-0.052590, -0.728274, 0, 1.0};
Point(125) = {-0.059546, -0.729091, 0, 1.0};
Point(126) = {-0.065853, -0.729581, 0, 1.0};
Point(127) = {-0.071318, -0.729738, 0, 1.0};
Point(128) = {-0.075004, -0.729642, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:48};
Spline(3) = {48:64};
Spline(4) = {64,1};

// Lines: second blade (splines 5-8)
Spline(5) = {65:82};
Spline(6) = {82:112};
Spline(7) = {112:128};
Spline(8) = {128,65};

// Outer domain (points 20001-4 and lines)
Point(129) = {-13.50000000, -15.00000000, 0, 1.0};
Point(130) = {-13.50000000, 15.00000000, 0, 1.0};
Point(131) = {36.00000000, 15.00000000, 0, 1.0};
Point(132) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {129, 130};
Line(12) = {130, 131};
Line(13) = {131, 132};
Line(14) = {129, 132};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
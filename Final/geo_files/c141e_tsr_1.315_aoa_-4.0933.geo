SetFactory("OpenCASCADE");

Point(1) = {0.149472, 0.743195, 0, 1.0};
Point(2) = {0.148983, 0.743276, 0, 1.0};
Point(3) = {0.147522, 0.743517, 0, 1.0};
Point(4) = {0.145103, 0.743921, 0, 1.0};
Point(5) = {0.141748, 0.744484, 0, 1.0};
Point(6) = {0.137492, 0.745172, 0, 1.0};
Point(7) = {0.132379, 0.745944, 0, 1.0};
Point(8) = {0.126461, 0.746742, 0, 1.0};
Point(9) = {0.119800, 0.747490, 0, 1.0};
Point(10) = {0.112462, 0.748170, 0, 1.0};
Point(11) = {0.104514, 0.748806, 0, 1.0};
Point(12) = {0.096038, 0.749324, 0, 1.0};
Point(13) = {0.087117, 0.749706, 0, 1.0};
Point(14) = {0.077836, 0.749938, 0, 1.0};
Point(15) = {0.068288, 0.750000, 0, 1.0};
Point(16) = {0.058565, 0.749882, 0, 1.0};
Point(17) = {0.048759, 0.749582, 0, 1.0};
Point(18) = {0.038967, 0.749092, 0, 1.0};
Point(19) = {0.029283, 0.748420, 0, 1.0};
Point(20) = {0.019800, 0.747579, 0, 1.0};
Point(21) = {0.010606, 0.746608, 0, 1.0};
Point(22) = {0.001789, 0.745534, 0, 1.0};
Point(23) = {-0.006567, 0.744370, 0, 1.0};
Point(24) = {-0.014382, 0.743143, 0, 1.0};
Point(25) = {-0.021581, 0.741868, 0, 1.0};
Point(26) = {-0.028089, 0.740490, 0, 1.0};
Point(27) = {-0.033843, 0.738998, 0, 1.0};
Point(28) = {-0.038794, 0.737503, 0, 1.0};
Point(29) = {-0.042890, 0.735953, 0, 1.0};
Point(30) = {-0.046088, 0.734319, 0, 1.0};
Point(31) = {-0.048361, 0.732675, 0, 1.0};
Point(32) = {-0.049675, 0.730866, 0, 1.0};
Point(33) = {-0.050000, 0.728665, 0, 1.0};
Point(34) = {-0.049407, 0.727131, 0, 1.0};
Point(35) = {-0.047869, 0.725803, 0, 1.0};
Point(36) = {-0.045413, 0.724898, 0, 1.0};
Point(37) = {-0.042059, 0.724347, 0, 1.0};
Point(38) = {-0.037835, 0.724099, 0, 1.0};
Point(39) = {-0.032777, 0.724102, 0, 1.0};
Point(40) = {-0.026926, 0.724239, 0, 1.0};
Point(41) = {-0.020335, 0.724468, 0, 1.0};
Point(42) = {-0.013065, 0.724741, 0, 1.0};
Point(43) = {-0.005189, 0.725117, 0, 1.0};
Point(44) = {0.003217, 0.725569, 0, 1.0};
Point(45) = {0.012073, 0.726109, 0, 1.0};
Point(46) = {0.021292, 0.726733, 0, 1.0};
Point(47) = {0.030784, 0.727451, 0, 1.0};
Point(48) = {0.040457, 0.728282, 0, 1.0};
Point(49) = {0.050216, 0.729218, 0, 1.0};
Point(50) = {0.059970, 0.730245, 0, 1.0};
Point(51) = {0.069622, 0.731369, 0, 1.0};
Point(52) = {0.079081, 0.732550, 0, 1.0};
Point(53) = {0.088259, 0.733749, 0, 1.0};
Point(54) = {0.097068, 0.734932, 0, 1.0};
Point(55) = {0.105425, 0.736069, 0, 1.0};
Point(56) = {0.113250, 0.737155, 0, 1.0};
Point(57) = {0.120465, 0.738199, 0, 1.0};
Point(58) = {0.127003, 0.739177, 0, 1.0};
Point(59) = {0.132800, 0.740065, 0, 1.0};
Point(60) = {0.137802, 0.740843, 0, 1.0};
Point(61) = {0.141962, 0.741495, 0, 1.0};
Point(62) = {0.145240, 0.742011, 0, 1.0};
Point(63) = {0.147603, 0.742385, 0, 1.0};
Point(64) = {0.149031, 0.742612, 0, 1.0};
Point(65) = {0.149508, 0.742687, 0, 1.0};
Point(66) = {-0.149472, -0.743195, 0, 1.0};
Point(67) = {-0.148983, -0.743276, 0, 1.0};
Point(68) = {-0.147522, -0.743517, 0, 1.0};
Point(69) = {-0.145103, -0.743921, 0, 1.0};
Point(70) = {-0.141748, -0.744484, 0, 1.0};
Point(71) = {-0.137492, -0.745172, 0, 1.0};
Point(72) = {-0.132379, -0.745944, 0, 1.0};
Point(73) = {-0.126461, -0.746742, 0, 1.0};
Point(74) = {-0.119800, -0.747490, 0, 1.0};
Point(75) = {-0.112462, -0.748170, 0, 1.0};
Point(76) = {-0.104514, -0.748806, 0, 1.0};
Point(77) = {-0.096038, -0.749324, 0, 1.0};
Point(78) = {-0.087117, -0.749706, 0, 1.0};
Point(79) = {-0.077836, -0.749938, 0, 1.0};
Point(80) = {-0.068288, -0.750000, 0, 1.0};
Point(81) = {-0.058565, -0.749882, 0, 1.0};
Point(82) = {-0.048759, -0.749582, 0, 1.0};
Point(83) = {-0.038967, -0.749092, 0, 1.0};
Point(84) = {-0.029283, -0.748420, 0, 1.0};
Point(85) = {-0.019800, -0.747579, 0, 1.0};
Point(86) = {-0.010606, -0.746608, 0, 1.0};
Point(87) = {-0.001789, -0.745534, 0, 1.0};
Point(88) = {0.006567, -0.744370, 0, 1.0};
Point(89) = {0.014382, -0.743143, 0, 1.0};
Point(90) = {0.021581, -0.741868, 0, 1.0};
Point(91) = {0.028089, -0.740490, 0, 1.0};
Point(92) = {0.033843, -0.738998, 0, 1.0};
Point(93) = {0.038794, -0.737503, 0, 1.0};
Point(94) = {0.042890, -0.735953, 0, 1.0};
Point(95) = {0.046088, -0.734319, 0, 1.0};
Point(96) = {0.048361, -0.732675, 0, 1.0};
Point(97) = {0.049675, -0.730866, 0, 1.0};
Point(98) = {0.050000, -0.728665, 0, 1.0};
Point(99) = {0.049407, -0.727131, 0, 1.0};
Point(100) = {0.047869, -0.725803, 0, 1.0};
Point(101) = {0.045413, -0.724898, 0, 1.0};
Point(102) = {0.042059, -0.724347, 0, 1.0};
Point(103) = {0.037835, -0.724099, 0, 1.0};
Point(104) = {0.032777, -0.724102, 0, 1.0};
Point(105) = {0.026926, -0.724239, 0, 1.0};
Point(106) = {0.020335, -0.724468, 0, 1.0};
Point(107) = {0.013065, -0.724741, 0, 1.0};
Point(108) = {0.005189, -0.725117, 0, 1.0};
Point(109) = {-0.003217, -0.725569, 0, 1.0};
Point(110) = {-0.012073, -0.726109, 0, 1.0};
Point(111) = {-0.021292, -0.726733, 0, 1.0};
Point(112) = {-0.030784, -0.727451, 0, 1.0};
Point(113) = {-0.040457, -0.728282, 0, 1.0};
Point(114) = {-0.050216, -0.729218, 0, 1.0};
Point(115) = {-0.059970, -0.730245, 0, 1.0};
Point(116) = {-0.069622, -0.731369, 0, 1.0};
Point(117) = {-0.079081, -0.732550, 0, 1.0};
Point(118) = {-0.088259, -0.733749, 0, 1.0};
Point(119) = {-0.097068, -0.734932, 0, 1.0};
Point(120) = {-0.105425, -0.736069, 0, 1.0};
Point(121) = {-0.113250, -0.737155, 0, 1.0};
Point(122) = {-0.120465, -0.738199, 0, 1.0};
Point(123) = {-0.127003, -0.739177, 0, 1.0};
Point(124) = {-0.132800, -0.740065, 0, 1.0};
Point(125) = {-0.137802, -0.740843, 0, 1.0};
Point(126) = {-0.141962, -0.741495, 0, 1.0};
Point(127) = {-0.145240, -0.742011, 0, 1.0};
Point(128) = {-0.147603, -0.742385, 0, 1.0};
Point(129) = {-0.149031, -0.742612, 0, 1.0};
Point(130) = {-0.149508, -0.742687, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074795, 0.744896, 0, 1.0};
Point(2) = {0.074429, 0.744957, 0, 1.0};
Point(3) = {0.073333, 0.745138, 0, 1.0};
Point(4) = {0.071519, 0.745440, 0, 1.0};
Point(5) = {0.069002, 0.745863, 0, 1.0};
Point(6) = {0.065811, 0.746379, 0, 1.0};
Point(7) = {0.061976, 0.746958, 0, 1.0};
Point(8) = {0.057537, 0.747557, 0, 1.0};
Point(9) = {0.052542, 0.748117, 0, 1.0};
Point(10) = {0.047038, 0.748627, 0, 1.0};
Point(11) = {0.041077, 0.749104, 0, 1.0};
Point(12) = {0.034720, 0.749493, 0, 1.0};
Point(13) = {0.028029, 0.749779, 0, 1.0};
Point(14) = {0.021069, 0.749953, 0, 1.0};
Point(15) = {0.013907, 0.750000, 0, 1.0};
Point(16) = {0.006615, 0.749912, 0, 1.0};
Point(17) = {-0.000740, 0.749686, 0, 1.0};
Point(18) = {-0.008083, 0.749319, 0, 1.0};
Point(19) = {-0.015346, 0.748815, 0, 1.0};
Point(20) = {-0.022459, 0.748184, 0, 1.0};
Point(21) = {-0.029354, 0.747456, 0, 1.0};
Point(22) = {-0.035967, 0.746650, 0, 1.0};
Point(23) = {-0.042234, 0.745777, 0, 1.0};
Point(24) = {-0.048095, 0.744857, 0, 1.0};
Point(25) = {-0.053494, 0.743901, 0, 1.0};
Point(26) = {-0.058376, 0.742868, 0, 1.0};
Point(27) = {-0.062691, 0.741748, 0, 1.0};
Point(28) = {-0.066404, 0.740627, 0, 1.0};
Point(29) = {-0.069476, 0.739465, 0, 1.0};
Point(30) = {-0.071874, 0.738239, 0, 1.0};
Point(31) = {-0.073579, 0.737006, 0, 1.0};
Point(32) = {-0.074565, 0.735650, 0, 1.0};
Point(33) = {-0.074809, 0.733999, 0, 1.0};
Point(34) = {-0.074364, 0.732848, 0, 1.0};
Point(35) = {-0.073210, 0.731852, 0, 1.0};
Point(36) = {-0.071369, 0.731174, 0, 1.0};
Point(37) = {-0.068853, 0.730760, 0, 1.0};
Point(38) = {-0.065685, 0.730575, 0, 1.0};
Point(39) = {-0.061892, 0.730576, 0, 1.0};
Point(40) = {-0.057503, 0.730679, 0, 1.0};
Point(41) = {-0.052560, 0.730851, 0, 1.0};
Point(42) = {-0.047107, 0.731056, 0, 1.0};
Point(43) = {-0.041201, 0.731338, 0, 1.0};
Point(44) = {-0.034896, 0.731677, 0, 1.0};
Point(45) = {-0.028254, 0.732082, 0, 1.0};
Point(46) = {-0.021340, 0.732550, 0, 1.0};
Point(47) = {-0.014221, 0.733088, 0, 1.0};
Point(48) = {-0.006966, 0.733712, 0, 1.0};
Point(49) = {0.000353, 0.734413, 0, 1.0};
Point(50) = {0.007669, 0.735184, 0, 1.0};
Point(51) = {0.014907, 0.736027, 0, 1.0};
Point(52) = {0.022002, 0.736913, 0, 1.0};
Point(53) = {0.028885, 0.737812, 0, 1.0};
Point(54) = {0.035492, 0.738699, 0, 1.0};
Point(55) = {0.041760, 0.739552, 0, 1.0};
Point(56) = {0.047629, 0.740366, 0, 1.0};
Point(57) = {0.053040, 0.741149, 0, 1.0};
Point(58) = {0.057943, 0.741883, 0, 1.0};
Point(59) = {0.062291, 0.742549, 0, 1.0};
Point(60) = {0.066043, 0.743132, 0, 1.0};
Point(61) = {0.069163, 0.743621, 0, 1.0};
Point(62) = {0.071621, 0.744009, 0, 1.0};
Point(63) = {0.073394, 0.744289, 0, 1.0};
Point(64) = {0.074464, 0.744459, 0, 1.0};
Point(65) = {0.074822, 0.744515, 0, 1.0};
Point(66) = {-0.074795, -0.744896, 0, 1.0};
Point(67) = {-0.074429, -0.744957, 0, 1.0};
Point(68) = {-0.073333, -0.745138, 0, 1.0};
Point(69) = {-0.071519, -0.745440, 0, 1.0};
Point(70) = {-0.069002, -0.745863, 0, 1.0};
Point(71) = {-0.065811, -0.746379, 0, 1.0};
Point(72) = {-0.061976, -0.746958, 0, 1.0};
Point(73) = {-0.057537, -0.747557, 0, 1.0};
Point(74) = {-0.052542, -0.748117, 0, 1.0};
Point(75) = {-0.047038, -0.748627, 0, 1.0};
Point(76) = {-0.041077, -0.749104, 0, 1.0};
Point(77) = {-0.034720, -0.749493, 0, 1.0};
Point(78) = {-0.028029, -0.749779, 0, 1.0};
Point(79) = {-0.021069, -0.749953, 0, 1.0};
Point(80) = {-0.013907, -0.750000, 0, 1.0};
Point(81) = {-0.006615, -0.749912, 0, 1.0};
Point(82) = {0.000740, -0.749686, 0, 1.0};
Point(83) = {0.008083, -0.749319, 0, 1.0};
Point(84) = {0.015346, -0.748815, 0, 1.0};
Point(85) = {0.022459, -0.748184, 0, 1.0};
Point(86) = {0.029354, -0.747456, 0, 1.0};
Point(87) = {0.035967, -0.746650, 0, 1.0};
Point(88) = {0.042234, -0.745777, 0, 1.0};
Point(89) = {0.048095, -0.744857, 0, 1.0};
Point(90) = {0.053494, -0.743901, 0, 1.0};
Point(91) = {0.058376, -0.742868, 0, 1.0};
Point(92) = {0.062691, -0.741748, 0, 1.0};
Point(93) = {0.066404, -0.740627, 0, 1.0};
Point(94) = {0.069476, -0.739465, 0, 1.0};
Point(95) = {0.071874, -0.738239, 0, 1.0};
Point(96) = {0.073579, -0.737006, 0, 1.0};
Point(97) = {0.074565, -0.735650, 0, 1.0};
Point(98) = {0.074809, -0.733999, 0, 1.0};
Point(99) = {0.074364, -0.732848, 0, 1.0};
Point(100) = {0.073210, -0.731852, 0, 1.0};
Point(101) = {0.071369, -0.731174, 0, 1.0};
Point(102) = {0.068853, -0.730760, 0, 1.0};
Point(103) = {0.065685, -0.730575, 0, 1.0};
Point(104) = {0.061892, -0.730576, 0, 1.0};
Point(105) = {0.057503, -0.730679, 0, 1.0};
Point(106) = {0.052560, -0.730851, 0, 1.0};
Point(107) = {0.047107, -0.731056, 0, 1.0};
Point(108) = {0.041201, -0.731338, 0, 1.0};
Point(109) = {0.034896, -0.731677, 0, 1.0};
Point(110) = {0.028254, -0.732082, 0, 1.0};
Point(111) = {0.021340, -0.732550, 0, 1.0};
Point(112) = {0.014221, -0.733088, 0, 1.0};
Point(113) = {0.006966, -0.733712, 0, 1.0};
Point(114) = {-0.000353, -0.734413, 0, 1.0};
Point(115) = {-0.007669, -0.735184, 0, 1.0};
Point(116) = {-0.014907, -0.736027, 0, 1.0};
Point(117) = {-0.022002, -0.736913, 0, 1.0};
Point(118) = {-0.028885, -0.737812, 0, 1.0};
Point(119) = {-0.035492, -0.738699, 0, 1.0};
Point(120) = {-0.041760, -0.739552, 0, 1.0};
Point(121) = {-0.047629, -0.740366, 0, 1.0};
Point(122) = {-0.053040, -0.741149, 0, 1.0};
Point(123) = {-0.057943, -0.741883, 0, 1.0};
Point(124) = {-0.062291, -0.742549, 0, 1.0};
Point(125) = {-0.066043, -0.743132, 0, 1.0};
Point(126) = {-0.069163, -0.743621, 0, 1.0};
Point(127) = {-0.071621, -0.744009, 0, 1.0};
Point(128) = {-0.073394, -0.744289, 0, 1.0};
Point(129) = {-0.074464, -0.744459, 0, 1.0};
Point(130) = {-0.074822, -0.744515, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
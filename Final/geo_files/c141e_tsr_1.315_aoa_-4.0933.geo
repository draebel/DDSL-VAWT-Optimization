SetFactory("OpenCASCADE");

Point(1) = {0.074736, 0.746598, 0, 1.0};
Point(2) = {0.074492, 0.746638, 0, 1.0};
Point(3) = {0.073761, 0.746759, 0, 1.0};
Point(4) = {0.072551, 0.746960, 0, 1.0};
Point(5) = {0.070874, 0.747242, 0, 1.0};
Point(6) = {0.068746, 0.747586, 0, 1.0};
Point(7) = {0.066190, 0.747972, 0, 1.0};
Point(8) = {0.063231, 0.748371, 0, 1.0};
Point(9) = {0.059900, 0.748745, 0, 1.0};
Point(10) = {0.056231, 0.749085, 0, 1.0};
Point(11) = {0.052257, 0.749403, 0, 1.0};
Point(12) = {0.048019, 0.749662, 0, 1.0};
Point(13) = {0.043558, 0.749853, 0, 1.0};
Point(14) = {0.038918, 0.749969, 0, 1.0};
Point(15) = {0.034144, 0.750000, 0, 1.0};
Point(16) = {0.029282, 0.749941, 0, 1.0};
Point(17) = {0.024379, 0.749791, 0, 1.0};
Point(18) = {0.019484, 0.749546, 0, 1.0};
Point(19) = {0.014642, 0.749210, 0, 1.0};
Point(20) = {0.009900, 0.748789, 0, 1.0};
Point(21) = {0.005303, 0.748304, 0, 1.0};
Point(22) = {0.000894, 0.747767, 0, 1.0};
Point(23) = {-0.003284, 0.747185, 0, 1.0};
Point(24) = {-0.007191, 0.746572, 0, 1.0};
Point(25) = {-0.010790, 0.745934, 0, 1.0};
Point(26) = {-0.014045, 0.745245, 0, 1.0};
Point(27) = {-0.016922, 0.744499, 0, 1.0};
Point(28) = {-0.019397, 0.743751, 0, 1.0};
Point(29) = {-0.021445, 0.742977, 0, 1.0};
Point(30) = {-0.023044, 0.742160, 0, 1.0};
Point(31) = {-0.024180, 0.741337, 0, 1.0};
Point(32) = {-0.024837, 0.740433, 0, 1.0};
Point(33) = {-0.025000, 0.739333, 0, 1.0};
Point(34) = {-0.024704, 0.738565, 0, 1.0};
Point(35) = {-0.023934, 0.737901, 0, 1.0};
Point(36) = {-0.022707, 0.737449, 0, 1.0};
Point(37) = {-0.021030, 0.737173, 0, 1.0};
Point(38) = {-0.018918, 0.737050, 0, 1.0};
Point(39) = {-0.016389, 0.737051, 0, 1.0};
Point(40) = {-0.013463, 0.737119, 0, 1.0};
Point(41) = {-0.010168, 0.737234, 0, 1.0};
Point(42) = {-0.006532, 0.737370, 0, 1.0};
Point(43) = {-0.002595, 0.737558, 0, 1.0};
Point(44) = {0.001609, 0.737785, 0, 1.0};
Point(45) = {0.006036, 0.738054, 0, 1.0};
Point(46) = {0.010646, 0.738367, 0, 1.0};
Point(47) = {0.015392, 0.738726, 0, 1.0};
Point(48) = {0.020228, 0.739141, 0, 1.0};
Point(49) = {0.025108, 0.739609, 0, 1.0};
Point(50) = {0.029985, 0.740122, 0, 1.0};
Point(51) = {0.034811, 0.740684, 0, 1.0};
Point(52) = {0.039540, 0.741275, 0, 1.0};
Point(53) = {0.044129, 0.741875, 0, 1.0};
Point(54) = {0.048534, 0.742466, 0, 1.0};
Point(55) = {0.052713, 0.743034, 0, 1.0};
Point(56) = {0.056625, 0.743577, 0, 1.0};
Point(57) = {0.060233, 0.744099, 0, 1.0};
Point(58) = {0.063501, 0.744589, 0, 1.0};
Point(59) = {0.066400, 0.745032, 0, 1.0};
Point(60) = {0.068901, 0.745421, 0, 1.0};
Point(61) = {0.070981, 0.745747, 0, 1.0};
Point(62) = {0.072620, 0.746006, 0, 1.0};
Point(63) = {0.073802, 0.746193, 0, 1.0};
Point(64) = {0.074515, 0.746306, 0, 1.0};
Point(65) = {0.074754, 0.746344, 0, 1.0};
Point(66) = {-0.074736, -0.746598, 0, 1.0};
Point(67) = {-0.074492, -0.746638, 0, 1.0};
Point(68) = {-0.073761, -0.746759, 0, 1.0};
Point(69) = {-0.072551, -0.746960, 0, 1.0};
Point(70) = {-0.070874, -0.747242, 0, 1.0};
Point(71) = {-0.068746, -0.747586, 0, 1.0};
Point(72) = {-0.066190, -0.747972, 0, 1.0};
Point(73) = {-0.063231, -0.748371, 0, 1.0};
Point(74) = {-0.059900, -0.748745, 0, 1.0};
Point(75) = {-0.056231, -0.749085, 0, 1.0};
Point(76) = {-0.052257, -0.749403, 0, 1.0};
Point(77) = {-0.048019, -0.749662, 0, 1.0};
Point(78) = {-0.043558, -0.749853, 0, 1.0};
Point(79) = {-0.038918, -0.749969, 0, 1.0};
Point(80) = {-0.034144, -0.750000, 0, 1.0};
Point(81) = {-0.029282, -0.749941, 0, 1.0};
Point(82) = {-0.024379, -0.749791, 0, 1.0};
Point(83) = {-0.019484, -0.749546, 0, 1.0};
Point(84) = {-0.014642, -0.749210, 0, 1.0};
Point(85) = {-0.009900, -0.748789, 0, 1.0};
Point(86) = {-0.005303, -0.748304, 0, 1.0};
Point(87) = {-0.000894, -0.747767, 0, 1.0};
Point(88) = {0.003284, -0.747185, 0, 1.0};
Point(89) = {0.007191, -0.746572, 0, 1.0};
Point(90) = {0.010790, -0.745934, 0, 1.0};
Point(91) = {0.014045, -0.745245, 0, 1.0};
Point(92) = {0.016922, -0.744499, 0, 1.0};
Point(93) = {0.019397, -0.743751, 0, 1.0};
Point(94) = {0.021445, -0.742977, 0, 1.0};
Point(95) = {0.023044, -0.742160, 0, 1.0};
Point(96) = {0.024180, -0.741337, 0, 1.0};
Point(97) = {0.024837, -0.740433, 0, 1.0};
Point(98) = {0.025000, -0.739333, 0, 1.0};
Point(99) = {0.024704, -0.738565, 0, 1.0};
Point(100) = {0.023934, -0.737901, 0, 1.0};
Point(101) = {0.022707, -0.737449, 0, 1.0};
Point(102) = {0.021030, -0.737173, 0, 1.0};
Point(103) = {0.018918, -0.737050, 0, 1.0};
Point(104) = {0.016389, -0.737051, 0, 1.0};
Point(105) = {0.013463, -0.737119, 0, 1.0};
Point(106) = {0.010168, -0.737234, 0, 1.0};
Point(107) = {0.006532, -0.737370, 0, 1.0};
Point(108) = {0.002595, -0.737558, 0, 1.0};
Point(109) = {-0.001609, -0.737785, 0, 1.0};
Point(110) = {-0.006036, -0.738054, 0, 1.0};
Point(111) = {-0.010646, -0.738367, 0, 1.0};
Point(112) = {-0.015392, -0.738726, 0, 1.0};
Point(113) = {-0.020228, -0.739141, 0, 1.0};
Point(114) = {-0.025108, -0.739609, 0, 1.0};
Point(115) = {-0.029985, -0.740122, 0, 1.0};
Point(116) = {-0.034811, -0.740684, 0, 1.0};
Point(117) = {-0.039540, -0.741275, 0, 1.0};
Point(118) = {-0.044129, -0.741875, 0, 1.0};
Point(119) = {-0.048534, -0.742466, 0, 1.0};
Point(120) = {-0.052713, -0.743034, 0, 1.0};
Point(121) = {-0.056625, -0.743577, 0, 1.0};
Point(122) = {-0.060233, -0.744099, 0, 1.0};
Point(123) = {-0.063501, -0.744589, 0, 1.0};
Point(124) = {-0.066400, -0.745032, 0, 1.0};
Point(125) = {-0.068901, -0.745421, 0, 1.0};
Point(126) = {-0.070981, -0.745747, 0, 1.0};
Point(127) = {-0.072620, -0.746006, 0, 1.0};
Point(128) = {-0.073802, -0.746193, 0, 1.0};
Point(129) = {-0.074515, -0.746306, 0, 1.0};
Point(130) = {-0.074754, -0.746344, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073833, 0.748792, 0, 1.0};
Point(2) = {0.072703, 0.748864, 0, 1.0};
Point(3) = {0.068120, 0.749173, 0, 1.0};
Point(4) = {0.062907, 0.749474, 0, 1.0};
Point(5) = {0.057155, 0.749738, 0, 1.0};
Point(6) = {0.050959, 0.749936, 0, 1.0};
Point(7) = {0.044415, 0.750000, 0, 1.0};
Point(8) = {0.037569, 0.749847, 0, 1.0};
Point(9) = {0.030413, 0.749442, 0, 1.0};
Point(10) = {0.022971, 0.748828, 0, 1.0};
Point(11) = {0.015324, 0.748031, 0, 1.0};
Point(12) = {0.007549, 0.747069, 0, 1.0};
Point(13) = {-0.000273, 0.745954, 0, 1.0};
Point(14) = {-0.008060, 0.744706, 0, 1.0};
Point(15) = {-0.015732, 0.743336, 0, 1.0};
Point(16) = {-0.023212, 0.741864, 0, 1.0};
Point(17) = {-0.030421, 0.740308, 0, 1.0};
Point(18) = {-0.037286, 0.738691, 0, 1.0};
Point(19) = {-0.043738, 0.737031, 0, 1.0};
Point(20) = {-0.049710, 0.735352, 0, 1.0};
Point(21) = {-0.055142, 0.733676, 0, 1.0};
Point(22) = {-0.059979, 0.732030, 0, 1.0};
Point(23) = {-0.064172, 0.730438, 0, 1.0};
Point(24) = {-0.067685, 0.728932, 0, 1.0};
Point(25) = {-0.070474, 0.727539, 0, 1.0};
Point(26) = {-0.072516, 0.726296, 0, 1.0};
Point(27) = {-0.073248, 0.725748, 0, 1.0};
Point(28) = {-0.073854, 0.725154, 0, 1.0};
Point(29) = {-0.074103, 0.724820, 0, 1.0};
Point(30) = {-0.074200, 0.724612, 0, 1.0};
Point(31) = {-0.074210, 0.724499, 0, 1.0};
Point(32) = {-0.074164, 0.724396, 0, 1.0};
Point(33) = {-0.074004, 0.724232, 0, 1.0};
Point(34) = {-0.073661, 0.723998, 0, 1.0};
Point(35) = {-0.072897, 0.723637, 0, 1.0};
Point(36) = {-0.072027, 0.723359, 0, 1.0};
Point(37) = {-0.069715, 0.722860, 0, 1.0};
Point(38) = {-0.066672, 0.722472, 0, 1.0};
Point(39) = {-0.062942, 0.722229, 0, 1.0};
Point(40) = {-0.058581, 0.722158, 0, 1.0};
Point(41) = {-0.053643, 0.722295, 0, 1.0};
Point(42) = {-0.048171, 0.722690, 0, 1.0};
Point(43) = {-0.042175, 0.723373, 0, 1.0};
Point(44) = {-0.035679, 0.724324, 0, 1.0};
Point(45) = {-0.028729, 0.725529, 0, 1.0};
Point(46) = {-0.021380, 0.726963, 0, 1.0};
Point(47) = {-0.013690, 0.728601, 0, 1.0};
Point(48) = {-0.005722, 0.730405, 0, 1.0};
Point(49) = {0.002454, 0.732339, 0, 1.0};
Point(50) = {0.010762, 0.734349, 0, 1.0};
Point(51) = {0.019117, 0.736386, 0, 1.0};
Point(52) = {0.027426, 0.738391, 0, 1.0};
Point(53) = {0.035596, 0.740309, 0, 1.0};
Point(54) = {0.043513, 0.742085, 0, 1.0};
Point(55) = {0.051063, 0.743669, 0, 1.0};
Point(56) = {0.058126, 0.745017, 0, 1.0};
Point(57) = {0.064580, 0.746101, 0, 1.0};
Point(58) = {0.070304, 0.746901, 0, 1.0};
Point(59) = {0.074049, 0.747316, 0, 1.0};
Point(60) = {-0.073833, -0.748792, 0, 1.0};
Point(61) = {-0.072703, -0.748864, 0, 1.0};
Point(62) = {-0.068120, -0.749173, 0, 1.0};
Point(63) = {-0.062907, -0.749474, 0, 1.0};
Point(64) = {-0.057155, -0.749738, 0, 1.0};
Point(65) = {-0.050959, -0.749936, 0, 1.0};
Point(66) = {-0.044415, -0.750000, 0, 1.0};
Point(67) = {-0.037569, -0.749847, 0, 1.0};
Point(68) = {-0.030413, -0.749442, 0, 1.0};
Point(69) = {-0.022971, -0.748828, 0, 1.0};
Point(70) = {-0.015324, -0.748031, 0, 1.0};
Point(71) = {-0.007549, -0.747069, 0, 1.0};
Point(72) = {0.000273, -0.745954, 0, 1.0};
Point(73) = {0.008060, -0.744706, 0, 1.0};
Point(74) = {0.015732, -0.743336, 0, 1.0};
Point(75) = {0.023212, -0.741864, 0, 1.0};
Point(76) = {0.030421, -0.740308, 0, 1.0};
Point(77) = {0.037286, -0.738691, 0, 1.0};
Point(78) = {0.043738, -0.737031, 0, 1.0};
Point(79) = {0.049710, -0.735352, 0, 1.0};
Point(80) = {0.055142, -0.733676, 0, 1.0};
Point(81) = {0.059979, -0.732030, 0, 1.0};
Point(82) = {0.064172, -0.730438, 0, 1.0};
Point(83) = {0.067685, -0.728932, 0, 1.0};
Point(84) = {0.070474, -0.727539, 0, 1.0};
Point(85) = {0.072516, -0.726296, 0, 1.0};
Point(86) = {0.073248, -0.725748, 0, 1.0};
Point(87) = {0.073854, -0.725154, 0, 1.0};
Point(88) = {0.074103, -0.724820, 0, 1.0};
Point(89) = {0.074200, -0.724612, 0, 1.0};
Point(90) = {0.074210, -0.724499, 0, 1.0};
Point(91) = {0.074164, -0.724396, 0, 1.0};
Point(92) = {0.074004, -0.724232, 0, 1.0};
Point(93) = {0.073661, -0.723998, 0, 1.0};
Point(94) = {0.072897, -0.723637, 0, 1.0};
Point(95) = {0.072027, -0.723359, 0, 1.0};
Point(96) = {0.069715, -0.722860, 0, 1.0};
Point(97) = {0.066672, -0.722472, 0, 1.0};
Point(98) = {0.062942, -0.722229, 0, 1.0};
Point(99) = {0.058581, -0.722158, 0, 1.0};
Point(100) = {0.053643, -0.722295, 0, 1.0};
Point(101) = {0.048171, -0.722690, 0, 1.0};
Point(102) = {0.042175, -0.723373, 0, 1.0};
Point(103) = {0.035679, -0.724324, 0, 1.0};
Point(104) = {0.028729, -0.725529, 0, 1.0};
Point(105) = {0.021380, -0.726963, 0, 1.0};
Point(106) = {0.013690, -0.728601, 0, 1.0};
Point(107) = {0.005722, -0.730405, 0, 1.0};
Point(108) = {-0.002454, -0.732339, 0, 1.0};
Point(109) = {-0.010762, -0.734349, 0, 1.0};
Point(110) = {-0.019117, -0.736386, 0, 1.0};
Point(111) = {-0.027426, -0.738391, 0, 1.0};
Point(112) = {-0.035596, -0.740309, 0, 1.0};
Point(113) = {-0.043513, -0.742085, 0, 1.0};
Point(114) = {-0.051063, -0.743669, 0, 1.0};
Point(115) = {-0.058126, -0.745017, 0, 1.0};
Point(116) = {-0.064580, -0.746101, 0, 1.0};
Point(117) = {-0.070304, -0.746901, 0, 1.0};
Point(118) = {-0.074049, -0.747316, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:45};
Spline(3) = {45:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:77};
Spline(6) = {77:104};
Spline(7) = {104:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {36.00000000, 15.00000000, 0, 1.0};
Point(122) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
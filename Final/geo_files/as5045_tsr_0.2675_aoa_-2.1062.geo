SetFactory("OpenCASCADE");

Point(1) = {0.074895, 0.741374, 0, 1.0};
Point(2) = {0.072242, 0.741658, 0, 1.0};
Point(3) = {0.068914, 0.741977, 0, 1.0};
Point(4) = {0.065111, 0.742326, 0, 1.0};
Point(5) = {0.060866, 0.742723, 0, 1.0};
Point(6) = {0.056212, 0.743181, 0, 1.0};
Point(7) = {0.051191, 0.743717, 0, 1.0};
Point(8) = {0.045854, 0.744347, 0, 1.0};
Point(9) = {0.040270, 0.745094, 0, 1.0};
Point(10) = {0.034533, 0.745949, 0, 1.0};
Point(11) = {0.028743, 0.746886, 0, 1.0};
Point(12) = {0.022996, 0.747836, 0, 1.0};
Point(13) = {0.017338, 0.748634, 0, 1.0};
Point(14) = {0.011694, 0.749227, 0, 1.0};
Point(15) = {0.006020, 0.749643, 0, 1.0};
Point(16) = {0.000324, 0.749892, 0, 1.0};
Point(17) = {-0.005378, 0.750000, 0, 1.0};
Point(18) = {-0.011050, 0.749986, 0, 1.0};
Point(19) = {-0.016657, 0.749858, 0, 1.0};
Point(20) = {-0.022164, 0.749623, 0, 1.0};
Point(21) = {-0.027538, 0.749282, 0, 1.0};
Point(22) = {-0.032746, 0.748843, 0, 1.0};
Point(23) = {-0.037756, 0.748307, 0, 1.0};
Point(24) = {-0.042542, 0.747678, 0, 1.0};
Point(25) = {-0.047075, 0.746962, 0, 1.0};
Point(26) = {-0.051330, 0.746165, 0, 1.0};
Point(27) = {-0.055284, 0.745292, 0, 1.0};
Point(28) = {-0.058910, 0.744350, 0, 1.0};
Point(29) = {-0.062197, 0.743342, 0, 1.0};
Point(30) = {-0.065132, 0.742276, 0, 1.0};
Point(31) = {-0.067695, 0.741169, 0, 1.0};
Point(32) = {-0.069878, 0.740023, 0, 1.0};
Point(33) = {-0.071683, 0.738864, 0, 1.0};
Point(34) = {-0.073088, 0.737699, 0, 1.0};
Point(35) = {-0.074098, 0.736543, 0, 1.0};
Point(36) = {-0.074716, 0.735425, 0, 1.0};
Point(37) = {-0.074949, 0.734379, 0, 1.0};
Point(38) = {-0.074747, 0.733542, 0, 1.0};
Point(39) = {-0.073971, 0.732848, 0, 1.0};
Point(40) = {-0.072615, 0.732135, 0, 1.0};
Point(41) = {-0.070769, 0.731411, 0, 1.0};
Point(42) = {-0.068475, 0.730685, 0, 1.0};
Point(43) = {-0.065761, 0.729966, 0, 1.0};
Point(44) = {-0.062664, 0.729265, 0, 1.0};
Point(45) = {-0.059214, 0.728605, 0, 1.0};
Point(46) = {-0.055434, 0.728006, 0, 1.0};
Point(47) = {-0.051339, 0.727481, 0, 1.0};
Point(48) = {-0.046949, 0.727040, 0, 1.0};
Point(49) = {-0.042285, 0.726684, 0, 1.0};
Point(50) = {-0.037380, 0.726415, 0, 1.0};
Point(51) = {-0.032263, 0.726239, 0, 1.0};
Point(52) = {-0.026968, 0.726160, 0, 1.0};
Point(53) = {-0.021524, 0.726189, 0, 1.0};
Point(54) = {-0.015964, 0.726326, 0, 1.0};
Point(55) = {-0.010321, 0.726578, 0, 1.0};
Point(56) = {-0.004635, 0.726944, 0, 1.0};
Point(57) = {0.001050, 0.727454, 0, 1.0};
Point(58) = {0.006729, 0.728130, 0, 1.0};
Point(59) = {0.012378, 0.728985, 0, 1.0};
Point(60) = {0.018032, 0.730056, 0, 1.0};
Point(61) = {0.023728, 0.731298, 0, 1.0};
Point(62) = {0.029485, 0.732656, 0, 1.0};
Point(63) = {0.035339, 0.734002, 0, 1.0};
Point(64) = {0.041158, 0.735237, 0, 1.0};
Point(65) = {0.046815, 0.736330, 0, 1.0};
Point(66) = {0.052249, 0.737275, 0, 1.0};
Point(67) = {0.057390, 0.738073, 0, 1.0};
Point(68) = {0.062175, 0.738719, 0, 1.0};
Point(69) = {0.066546, 0.739219, 0, 1.0};
Point(70) = {0.070448, 0.739581, 0, 1.0};
Point(71) = {0.073831, 0.739826, 0, 1.0};
Point(72) = {0.074949, 0.739889, 0, 1.0};
Point(73) = {-0.074895, -0.741374, 0, 1.0};
Point(74) = {-0.072242, -0.741658, 0, 1.0};
Point(75) = {-0.068914, -0.741977, 0, 1.0};
Point(76) = {-0.065111, -0.742326, 0, 1.0};
Point(77) = {-0.060866, -0.742723, 0, 1.0};
Point(78) = {-0.056212, -0.743181, 0, 1.0};
Point(79) = {-0.051191, -0.743717, 0, 1.0};
Point(80) = {-0.045854, -0.744347, 0, 1.0};
Point(81) = {-0.040270, -0.745094, 0, 1.0};
Point(82) = {-0.034533, -0.745949, 0, 1.0};
Point(83) = {-0.028743, -0.746886, 0, 1.0};
Point(84) = {-0.022996, -0.747836, 0, 1.0};
Point(85) = {-0.017338, -0.748634, 0, 1.0};
Point(86) = {-0.011694, -0.749227, 0, 1.0};
Point(87) = {-0.006020, -0.749643, 0, 1.0};
Point(88) = {-0.000324, -0.749892, 0, 1.0};
Point(89) = {0.005378, -0.750000, 0, 1.0};
Point(90) = {0.011050, -0.749986, 0, 1.0};
Point(91) = {0.016657, -0.749858, 0, 1.0};
Point(92) = {0.022164, -0.749623, 0, 1.0};
Point(93) = {0.027538, -0.749282, 0, 1.0};
Point(94) = {0.032746, -0.748843, 0, 1.0};
Point(95) = {0.037756, -0.748307, 0, 1.0};
Point(96) = {0.042542, -0.747678, 0, 1.0};
Point(97) = {0.047075, -0.746962, 0, 1.0};
Point(98) = {0.051330, -0.746165, 0, 1.0};
Point(99) = {0.055284, -0.745292, 0, 1.0};
Point(100) = {0.058910, -0.744350, 0, 1.0};
Point(101) = {0.062197, -0.743342, 0, 1.0};
Point(102) = {0.065132, -0.742276, 0, 1.0};
Point(103) = {0.067695, -0.741169, 0, 1.0};
Point(104) = {0.069878, -0.740023, 0, 1.0};
Point(105) = {0.071683, -0.738864, 0, 1.0};
Point(106) = {0.073088, -0.737699, 0, 1.0};
Point(107) = {0.074098, -0.736543, 0, 1.0};
Point(108) = {0.074716, -0.735425, 0, 1.0};
Point(109) = {0.074949, -0.734379, 0, 1.0};
Point(110) = {0.074747, -0.733542, 0, 1.0};
Point(111) = {0.073971, -0.732848, 0, 1.0};
Point(112) = {0.072615, -0.732135, 0, 1.0};
Point(113) = {0.070769, -0.731411, 0, 1.0};
Point(114) = {0.068475, -0.730685, 0, 1.0};
Point(115) = {0.065761, -0.729966, 0, 1.0};
Point(116) = {0.062664, -0.729265, 0, 1.0};
Point(117) = {0.059214, -0.728605, 0, 1.0};
Point(118) = {0.055434, -0.728006, 0, 1.0};
Point(119) = {0.051339, -0.727481, 0, 1.0};
Point(120) = {0.046949, -0.727040, 0, 1.0};
Point(121) = {0.042285, -0.726684, 0, 1.0};
Point(122) = {0.037380, -0.726415, 0, 1.0};
Point(123) = {0.032263, -0.726239, 0, 1.0};
Point(124) = {0.026968, -0.726160, 0, 1.0};
Point(125) = {0.021524, -0.726189, 0, 1.0};
Point(126) = {0.015964, -0.726326, 0, 1.0};
Point(127) = {0.010321, -0.726578, 0, 1.0};
Point(128) = {0.004635, -0.726944, 0, 1.0};
Point(129) = {-0.001050, -0.727454, 0, 1.0};
Point(130) = {-0.006729, -0.728130, 0, 1.0};
Point(131) = {-0.012378, -0.728985, 0, 1.0};
Point(132) = {-0.018032, -0.730056, 0, 1.0};
Point(133) = {-0.023728, -0.731298, 0, 1.0};
Point(134) = {-0.029485, -0.732656, 0, 1.0};
Point(135) = {-0.035339, -0.734002, 0, 1.0};
Point(136) = {-0.041158, -0.735237, 0, 1.0};
Point(137) = {-0.046815, -0.736330, 0, 1.0};
Point(138) = {-0.052249, -0.737275, 0, 1.0};
Point(139) = {-0.057390, -0.738073, 0, 1.0};
Point(140) = {-0.062175, -0.738719, 0, 1.0};
Point(141) = {-0.066546, -0.739219, 0, 1.0};
Point(142) = {-0.070448, -0.739581, 0, 1.0};
Point(143) = {-0.073831, -0.739826, 0, 1.0};
Point(144) = {-0.074949, -0.739889, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:50};
Spline(3) = {50:72};
Spline(4) = {72,1};

// Lines: second blade (splines 5-8)
Spline(5) = {73:94};
Spline(6) = {94:122};
Spline(7) = {122:144};
Spline(8) = {144,73};

// Outer domain (points 20001-4 and lines)
Point(145) = {-13.50000000, -15.00000000, 0, 1.0};
Point(146) = {-13.50000000, 15.00000000, 0, 1.0};
Point(147) = {36.00000000, 15.00000000, 0, 1.0};
Point(148) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {145, 146};
Line(12) = {146, 147};
Line(13) = {147, 148};
Line(14) = {145, 148};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
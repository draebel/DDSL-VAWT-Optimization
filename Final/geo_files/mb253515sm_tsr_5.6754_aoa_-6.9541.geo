SetFactory("OpenCASCADE");

Point(1) = {0.148529, 0.743859, 0, 1.0};
Point(2) = {0.138352, 0.744697, 0, 1.0};
Point(3) = {0.128184, 0.745474, 0, 1.0};
Point(4) = {0.118010, 0.746286, 0, 1.0};
Point(5) = {0.107835, 0.747114, 0, 1.0};
Point(6) = {0.097663, 0.747920, 0, 1.0};
Point(7) = {0.087498, 0.748661, 0, 1.0};
Point(8) = {0.077347, 0.749291, 0, 1.0};
Point(9) = {0.067217, 0.749756, 0, 1.0};
Point(10) = {0.057113, 0.750000, 0, 1.0};
Point(11) = {0.047043, 0.749965, 0, 1.0};
Point(12) = {0.037013, 0.749604, 0, 1.0};
Point(13) = {0.032014, 0.749288, 0, 1.0};
Point(14) = {0.027027, 0.748879, 0, 1.0};
Point(15) = {0.022051, 0.748375, 0, 1.0};
Point(16) = {0.017087, 0.747782, 0, 1.0};
Point(17) = {0.012132, 0.747105, 0, 1.0};
Point(18) = {0.007188, 0.746341, 0, 1.0};
Point(19) = {0.002256, 0.745481, 0, 1.0};
Point(20) = {-0.002662, 0.744504, 0, 1.0};
Point(21) = {-0.007561, 0.743379, 0, 1.0};
Point(22) = {-0.012440, 0.742079, 0, 1.0};
Point(23) = {-0.017294, 0.740578, 0, 1.0};
Point(24) = {-0.022120, 0.738849, 0, 1.0};
Point(25) = {-0.026914, 0.736858, 0, 1.0};
Point(26) = {-0.031672, 0.734565, 0, 1.0};
Point(27) = {-0.034035, 0.733292, 0, 1.0};
Point(28) = {-0.036387, 0.731931, 0, 1.0};
Point(29) = {-0.038729, 0.730480, 0, 1.0};
Point(30) = {-0.041060, 0.728939, 0, 1.0};
Point(31) = {-0.043377, 0.727288, 0, 1.0};
Point(32) = {-0.045675, 0.725483, 0, 1.0};
Point(33) = {-0.048383, 0.722906, 0, 1.0};
Point(34) = {-0.049990, 0.719563, 0, 1.0};
Point(35) = {-0.047719, 0.717458, 0, 1.0};
Point(36) = {-0.044599, 0.716658, 0, 1.0};
Point(37) = {-0.042032, 0.716266, 0, 1.0};
Point(38) = {-0.039478, 0.715969, 0, 1.0};
Point(39) = {-0.036929, 0.715720, 0, 1.0};
Point(40) = {-0.034384, 0.715502, 0, 1.0};
Point(41) = {-0.031843, 0.715319, 0, 1.0};
Point(42) = {-0.029306, 0.715173, 0, 1.0};
Point(43) = {-0.024249, 0.715006, 0, 1.0};
Point(44) = {-0.019210, 0.714988, 0, 1.0};
Point(45) = {-0.014186, 0.715097, 0, 1.0};
Point(46) = {-0.009175, 0.715311, 0, 1.0};
Point(47) = {-0.004175, 0.715611, 0, 1.0};
Point(48) = {0.000817, 0.715986, 0, 1.0};
Point(49) = {0.005800, 0.716428, 0, 1.0};
Point(50) = {0.010776, 0.716931, 0, 1.0};
Point(51) = {0.015745, 0.717484, 0, 1.0};
Point(52) = {0.020709, 0.718086, 0, 1.0};
Point(53) = {0.025667, 0.718729, 0, 1.0};
Point(54) = {0.030621, 0.719410, 0, 1.0};
Point(55) = {0.035571, 0.720126, 0, 1.0};
Point(56) = {0.040516, 0.720880, 0, 1.0};
Point(57) = {0.050393, 0.722500, 0, 1.0};
Point(58) = {0.060252, 0.724261, 0, 1.0};
Point(59) = {0.070095, 0.726160, 0, 1.0};
Point(60) = {0.079922, 0.728181, 0, 1.0};
Point(61) = {0.089737, 0.730303, 0, 1.0};
Point(62) = {0.099543, 0.732506, 0, 1.0};
Point(63) = {0.109342, 0.734759, 0, 1.0};
Point(64) = {0.119138, 0.737038, 0, 1.0};
Point(65) = {0.128935, 0.739313, 0, 1.0};
Point(66) = {0.138734, 0.741568, 0, 1.0};
Point(67) = {-0.148529, -0.743859, 0, 1.0};
Point(68) = {-0.138352, -0.744697, 0, 1.0};
Point(69) = {-0.128184, -0.745474, 0, 1.0};
Point(70) = {-0.118010, -0.746286, 0, 1.0};
Point(71) = {-0.107835, -0.747114, 0, 1.0};
Point(72) = {-0.097663, -0.747920, 0, 1.0};
Point(73) = {-0.087498, -0.748661, 0, 1.0};
Point(74) = {-0.077347, -0.749291, 0, 1.0};
Point(75) = {-0.067217, -0.749756, 0, 1.0};
Point(76) = {-0.057113, -0.750000, 0, 1.0};
Point(77) = {-0.047043, -0.749965, 0, 1.0};
Point(78) = {-0.037013, -0.749604, 0, 1.0};
Point(79) = {-0.032014, -0.749288, 0, 1.0};
Point(80) = {-0.027027, -0.748879, 0, 1.0};
Point(81) = {-0.022051, -0.748375, 0, 1.0};
Point(82) = {-0.017087, -0.747782, 0, 1.0};
Point(83) = {-0.012132, -0.747105, 0, 1.0};
Point(84) = {-0.007188, -0.746341, 0, 1.0};
Point(85) = {-0.002256, -0.745481, 0, 1.0};
Point(86) = {0.002662, -0.744504, 0, 1.0};
Point(87) = {0.007561, -0.743379, 0, 1.0};
Point(88) = {0.012440, -0.742079, 0, 1.0};
Point(89) = {0.017294, -0.740578, 0, 1.0};
Point(90) = {0.022120, -0.738849, 0, 1.0};
Point(91) = {0.026914, -0.736858, 0, 1.0};
Point(92) = {0.031672, -0.734565, 0, 1.0};
Point(93) = {0.034035, -0.733292, 0, 1.0};
Point(94) = {0.036387, -0.731931, 0, 1.0};
Point(95) = {0.038729, -0.730480, 0, 1.0};
Point(96) = {0.041060, -0.728939, 0, 1.0};
Point(97) = {0.043377, -0.727288, 0, 1.0};
Point(98) = {0.045675, -0.725483, 0, 1.0};
Point(99) = {0.048383, -0.722906, 0, 1.0};
Point(100) = {0.049990, -0.719563, 0, 1.0};
Point(101) = {0.047719, -0.717458, 0, 1.0};
Point(102) = {0.044599, -0.716658, 0, 1.0};
Point(103) = {0.042032, -0.716266, 0, 1.0};
Point(104) = {0.039478, -0.715969, 0, 1.0};
Point(105) = {0.036929, -0.715720, 0, 1.0};
Point(106) = {0.034384, -0.715502, 0, 1.0};
Point(107) = {0.031843, -0.715319, 0, 1.0};
Point(108) = {0.029306, -0.715173, 0, 1.0};
Point(109) = {0.024249, -0.715006, 0, 1.0};
Point(110) = {0.019210, -0.714988, 0, 1.0};
Point(111) = {0.014186, -0.715097, 0, 1.0};
Point(112) = {0.009175, -0.715311, 0, 1.0};
Point(113) = {0.004175, -0.715611, 0, 1.0};
Point(114) = {-0.000817, -0.715986, 0, 1.0};
Point(115) = {-0.005800, -0.716428, 0, 1.0};
Point(116) = {-0.010776, -0.716931, 0, 1.0};
Point(117) = {-0.015745, -0.717484, 0, 1.0};
Point(118) = {-0.020709, -0.718086, 0, 1.0};
Point(119) = {-0.025667, -0.718729, 0, 1.0};
Point(120) = {-0.030621, -0.719410, 0, 1.0};
Point(121) = {-0.035571, -0.720126, 0, 1.0};
Point(122) = {-0.040516, -0.720880, 0, 1.0};
Point(123) = {-0.050393, -0.722500, 0, 1.0};
Point(124) = {-0.060252, -0.724261, 0, 1.0};
Point(125) = {-0.070095, -0.726160, 0, 1.0};
Point(126) = {-0.079922, -0.728181, 0, 1.0};
Point(127) = {-0.089737, -0.730303, 0, 1.0};
Point(128) = {-0.099543, -0.732506, 0, 1.0};
Point(129) = {-0.109342, -0.734759, 0, 1.0};
Point(130) = {-0.119138, -0.737038, 0, 1.0};
Point(131) = {-0.128935, -0.739313, 0, 1.0};
Point(132) = {-0.138734, -0.741568, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:47};
Spline(3) = {47:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:113};
Spline(7) = {113:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
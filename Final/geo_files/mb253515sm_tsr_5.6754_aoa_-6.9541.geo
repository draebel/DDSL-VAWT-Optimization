SetFactory("OpenCASCADE");

Point(1) = {0.111397, 0.745394, 0, 1.0};
Point(2) = {0.103764, 0.746023, 0, 1.0};
Point(3) = {0.096138, 0.746605, 0, 1.0};
Point(4) = {0.088508, 0.747214, 0, 1.0};
Point(5) = {0.080876, 0.747835, 0, 1.0};
Point(6) = {0.073247, 0.748440, 0, 1.0};
Point(7) = {0.065624, 0.748996, 0, 1.0};
Point(8) = {0.058011, 0.749468, 0, 1.0};
Point(9) = {0.050412, 0.749817, 0, 1.0};
Point(10) = {0.042835, 0.750000, 0, 1.0};
Point(11) = {0.035282, 0.749973, 0, 1.0};
Point(12) = {0.027760, 0.749703, 0, 1.0};
Point(13) = {0.024011, 0.749466, 0, 1.0};
Point(14) = {0.020270, 0.749159, 0, 1.0};
Point(15) = {0.016539, 0.748781, 0, 1.0};
Point(16) = {0.012815, 0.748336, 0, 1.0};
Point(17) = {0.009099, 0.747829, 0, 1.0};
Point(18) = {0.005391, 0.747255, 0, 1.0};
Point(19) = {0.001692, 0.746611, 0, 1.0};
Point(20) = {-0.001996, 0.745878, 0, 1.0};
Point(21) = {-0.005671, 0.745034, 0, 1.0};
Point(22) = {-0.009330, 0.744059, 0, 1.0};
Point(23) = {-0.012970, 0.742934, 0, 1.0};
Point(24) = {-0.016590, 0.741637, 0, 1.0};
Point(25) = {-0.020186, 0.740143, 0, 1.0};
Point(26) = {-0.023754, 0.738424, 0, 1.0};
Point(27) = {-0.025526, 0.737469, 0, 1.0};
Point(28) = {-0.027291, 0.736448, 0, 1.0};
Point(29) = {-0.029047, 0.735360, 0, 1.0};
Point(30) = {-0.030795, 0.734204, 0, 1.0};
Point(31) = {-0.032533, 0.732966, 0, 1.0};
Point(32) = {-0.034256, 0.731612, 0, 1.0};
Point(33) = {-0.036287, 0.729679, 0, 1.0};
Point(34) = {-0.037493, 0.727172, 0, 1.0};
Point(35) = {-0.035789, 0.725594, 0, 1.0};
Point(36) = {-0.033449, 0.724994, 0, 1.0};
Point(37) = {-0.031524, 0.724699, 0, 1.0};
Point(38) = {-0.029608, 0.724477, 0, 1.0};
Point(39) = {-0.027697, 0.724290, 0, 1.0};
Point(40) = {-0.025788, 0.724127, 0, 1.0};
Point(41) = {-0.023882, 0.723989, 0, 1.0};
Point(42) = {-0.021980, 0.723880, 0, 1.0};
Point(43) = {-0.018187, 0.723754, 0, 1.0};
Point(44) = {-0.014407, 0.723741, 0, 1.0};
Point(45) = {-0.010639, 0.723823, 0, 1.0};
Point(46) = {-0.006881, 0.723983, 0, 1.0};
Point(47) = {-0.003131, 0.724208, 0, 1.0};
Point(48) = {0.000613, 0.724489, 0, 1.0};
Point(49) = {0.004350, 0.724821, 0, 1.0};
Point(50) = {0.008082, 0.725198, 0, 1.0};
Point(51) = {0.011809, 0.725613, 0, 1.0};
Point(52) = {0.015532, 0.726064, 0, 1.0};
Point(53) = {0.019251, 0.726547, 0, 1.0};
Point(54) = {0.022966, 0.727057, 0, 1.0};
Point(55) = {0.026678, 0.727595, 0, 1.0};
Point(56) = {0.030387, 0.728160, 0, 1.0};
Point(57) = {0.037795, 0.729375, 0, 1.0};
Point(58) = {0.045189, 0.730696, 0, 1.0};
Point(59) = {0.052571, 0.732120, 0, 1.0};
Point(60) = {0.059942, 0.733636, 0, 1.0};
Point(61) = {0.067303, 0.735227, 0, 1.0};
Point(62) = {0.074657, 0.736880, 0, 1.0};
Point(63) = {0.082007, 0.738570, 0, 1.0};
Point(64) = {0.089354, 0.740279, 0, 1.0};
Point(65) = {0.096701, 0.741985, 0, 1.0};
Point(66) = {0.104050, 0.743676, 0, 1.0};
Point(67) = {-0.111397, -0.745394, 0, 1.0};
Point(68) = {-0.103764, -0.746023, 0, 1.0};
Point(69) = {-0.096138, -0.746605, 0, 1.0};
Point(70) = {-0.088508, -0.747214, 0, 1.0};
Point(71) = {-0.080876, -0.747835, 0, 1.0};
Point(72) = {-0.073247, -0.748440, 0, 1.0};
Point(73) = {-0.065624, -0.748996, 0, 1.0};
Point(74) = {-0.058011, -0.749468, 0, 1.0};
Point(75) = {-0.050412, -0.749817, 0, 1.0};
Point(76) = {-0.042835, -0.750000, 0, 1.0};
Point(77) = {-0.035282, -0.749973, 0, 1.0};
Point(78) = {-0.027760, -0.749703, 0, 1.0};
Point(79) = {-0.024011, -0.749466, 0, 1.0};
Point(80) = {-0.020270, -0.749159, 0, 1.0};
Point(81) = {-0.016539, -0.748781, 0, 1.0};
Point(82) = {-0.012815, -0.748336, 0, 1.0};
Point(83) = {-0.009099, -0.747829, 0, 1.0};
Point(84) = {-0.005391, -0.747255, 0, 1.0};
Point(85) = {-0.001692, -0.746611, 0, 1.0};
Point(86) = {0.001996, -0.745878, 0, 1.0};
Point(87) = {0.005671, -0.745034, 0, 1.0};
Point(88) = {0.009330, -0.744059, 0, 1.0};
Point(89) = {0.012970, -0.742934, 0, 1.0};
Point(90) = {0.016590, -0.741637, 0, 1.0};
Point(91) = {0.020186, -0.740143, 0, 1.0};
Point(92) = {0.023754, -0.738424, 0, 1.0};
Point(93) = {0.025526, -0.737469, 0, 1.0};
Point(94) = {0.027291, -0.736448, 0, 1.0};
Point(95) = {0.029047, -0.735360, 0, 1.0};
Point(96) = {0.030795, -0.734204, 0, 1.0};
Point(97) = {0.032533, -0.732966, 0, 1.0};
Point(98) = {0.034256, -0.731612, 0, 1.0};
Point(99) = {0.036287, -0.729679, 0, 1.0};
Point(100) = {0.037493, -0.727172, 0, 1.0};
Point(101) = {0.035789, -0.725594, 0, 1.0};
Point(102) = {0.033449, -0.724994, 0, 1.0};
Point(103) = {0.031524, -0.724699, 0, 1.0};
Point(104) = {0.029608, -0.724477, 0, 1.0};
Point(105) = {0.027697, -0.724290, 0, 1.0};
Point(106) = {0.025788, -0.724127, 0, 1.0};
Point(107) = {0.023882, -0.723989, 0, 1.0};
Point(108) = {0.021980, -0.723880, 0, 1.0};
Point(109) = {0.018187, -0.723754, 0, 1.0};
Point(110) = {0.014407, -0.723741, 0, 1.0};
Point(111) = {0.010639, -0.723823, 0, 1.0};
Point(112) = {0.006881, -0.723983, 0, 1.0};
Point(113) = {0.003131, -0.724208, 0, 1.0};
Point(114) = {-0.000613, -0.724489, 0, 1.0};
Point(115) = {-0.004350, -0.724821, 0, 1.0};
Point(116) = {-0.008082, -0.725198, 0, 1.0};
Point(117) = {-0.011809, -0.725613, 0, 1.0};
Point(118) = {-0.015532, -0.726064, 0, 1.0};
Point(119) = {-0.019251, -0.726547, 0, 1.0};
Point(120) = {-0.022966, -0.727057, 0, 1.0};
Point(121) = {-0.026678, -0.727595, 0, 1.0};
Point(122) = {-0.030387, -0.728160, 0, 1.0};
Point(123) = {-0.037795, -0.729375, 0, 1.0};
Point(124) = {-0.045189, -0.730696, 0, 1.0};
Point(125) = {-0.052571, -0.732120, 0, 1.0};
Point(126) = {-0.059942, -0.733636, 0, 1.0};
Point(127) = {-0.067303, -0.735227, 0, 1.0};
Point(128) = {-0.074657, -0.736880, 0, 1.0};
Point(129) = {-0.082007, -0.738570, 0, 1.0};
Point(130) = {-0.089354, -0.740279, 0, 1.0};
Point(131) = {-0.096701, -0.741985, 0, 1.0};
Point(132) = {-0.104050, -0.743676, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:47};
Spline(3) = {47:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:113};
Spline(7) = {113:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
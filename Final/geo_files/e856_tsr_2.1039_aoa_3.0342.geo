SetFactory("OpenCASCADE");

Point(1) = {0.149720, 0.716735, 0, 1.0};
Point(2) = {0.148974, 0.717063, 0, 1.0};
Point(3) = {0.146978, 0.718054, 0, 1.0};
Point(4) = {0.144076, 0.719538, 0, 1.0};
Point(5) = {0.140315, 0.721205, 0, 1.0};
Point(6) = {0.135559, 0.722959, 0, 1.0};
Point(7) = {0.129802, 0.724871, 0, 1.0};
Point(8) = {0.123153, 0.726955, 0, 1.0};
Point(9) = {0.115711, 0.729193, 0, 1.0};
Point(10) = {0.107595, 0.731551, 0, 1.0};
Point(11) = {0.098922, 0.733992, 0, 1.0};
Point(12) = {0.089816, 0.736465, 0, 1.0};
Point(13) = {0.080396, 0.738913, 0, 1.0};
Point(14) = {0.070788, 0.741277, 0, 1.0};
Point(15) = {0.061102, 0.743493, 0, 1.0};
Point(16) = {0.051450, 0.745493, 0, 1.0};
Point(17) = {0.041934, 0.747211, 0, 1.0};
Point(18) = {0.032647, 0.748586, 0, 1.0};
Point(19) = {0.023673, 0.749543, 0, 1.0};
Point(20) = {0.015048, 0.750000, 0, 1.0};
Point(21) = {0.006767, 0.749942, 0, 1.0};
Point(22) = {-0.001145, 0.749388, 0, 1.0};
Point(23) = {-0.008679, 0.748380, 0, 1.0};
Point(24) = {-0.015789, 0.746996, 0, 1.0};
Point(25) = {-0.022395, 0.745305, 0, 1.0};
Point(26) = {-0.028431, 0.743360, 0, 1.0};
Point(27) = {-0.033824, 0.741215, 0, 1.0};
Point(28) = {-0.038516, 0.738920, 0, 1.0};
Point(29) = {-0.042454, 0.736523, 0, 1.0};
Point(30) = {-0.045602, 0.734078, 0, 1.0};
Point(31) = {-0.047929, 0.731662, 0, 1.0};
Point(32) = {-0.049250, 0.729683, 0, 1.0};
Point(33) = {-0.049795, 0.728392, 0, 1.0};
Point(34) = {-0.049971, 0.727600, 0, 1.0};
Point(35) = {-0.049994, 0.727059, 0, 1.0};
Point(36) = {-0.049943, 0.726731, 0, 1.0};
Point(37) = {-0.049822, 0.726419, 0, 1.0};
Point(38) = {-0.049523, 0.725938, 0, 1.0};
Point(39) = {-0.048945, 0.725279, 0, 1.0};
Point(40) = {-0.047746, 0.724274, 0, 1.0};
Point(41) = {-0.047399, 0.724029, 0, 1.0};
Point(42) = {-0.044414, 0.722379, 0, 1.0};
Point(43) = {-0.040428, 0.720795, 0, 1.0};
Point(44) = {-0.035489, 0.719316, 0, 1.0};
Point(45) = {-0.029647, 0.717955, 0, 1.0};
Point(46) = {-0.022979, 0.716720, 0, 1.0};
Point(47) = {-0.015578, 0.715637, 0, 1.0};
Point(48) = {-0.007541, 0.714736, 0, 1.0};
Point(49) = {0.001035, 0.714079, 0, 1.0};
Point(50) = {0.010089, 0.713740, 0, 1.0};
Point(51) = {0.019605, 0.713752, 0, 1.0};
Point(52) = {0.029569, 0.714119, 0, 1.0};
Point(53) = {0.039986, 0.714781, 0, 1.0};
Point(54) = {0.050796, 0.715586, 0, 1.0};
Point(55) = {0.061842, 0.716422, 0, 1.0};
Point(56) = {0.072959, 0.717205, 0, 1.0};
Point(57) = {0.083967, 0.717867, 0, 1.0};
Point(58) = {0.094681, 0.718363, 0, 1.0};
Point(59) = {0.104909, 0.718664, 0, 1.0};
Point(60) = {0.114465, 0.718756, 0, 1.0};
Point(61) = {0.123166, 0.718655, 0, 1.0};
Point(62) = {0.130843, 0.718390, 0, 1.0};
Point(63) = {0.137346, 0.718022, 0, 1.0};
Point(64) = {0.142577, 0.717626, 0, 1.0};
Point(65) = {0.146468, 0.717238, 0, 1.0};
Point(66) = {0.148893, 0.716889, 0, 1.0};
Point(67) = {-0.149720, -0.716735, 0, 1.0};
Point(68) = {-0.148974, -0.717063, 0, 1.0};
Point(69) = {-0.146978, -0.718054, 0, 1.0};
Point(70) = {-0.144076, -0.719538, 0, 1.0};
Point(71) = {-0.140315, -0.721205, 0, 1.0};
Point(72) = {-0.135559, -0.722959, 0, 1.0};
Point(73) = {-0.129802, -0.724871, 0, 1.0};
Point(74) = {-0.123153, -0.726955, 0, 1.0};
Point(75) = {-0.115711, -0.729193, 0, 1.0};
Point(76) = {-0.107595, -0.731551, 0, 1.0};
Point(77) = {-0.098922, -0.733992, 0, 1.0};
Point(78) = {-0.089816, -0.736465, 0, 1.0};
Point(79) = {-0.080396, -0.738913, 0, 1.0};
Point(80) = {-0.070788, -0.741277, 0, 1.0};
Point(81) = {-0.061102, -0.743493, 0, 1.0};
Point(82) = {-0.051450, -0.745493, 0, 1.0};
Point(83) = {-0.041934, -0.747211, 0, 1.0};
Point(84) = {-0.032647, -0.748586, 0, 1.0};
Point(85) = {-0.023673, -0.749543, 0, 1.0};
Point(86) = {-0.015048, -0.750000, 0, 1.0};
Point(87) = {-0.006767, -0.749942, 0, 1.0};
Point(88) = {0.001145, -0.749388, 0, 1.0};
Point(89) = {0.008679, -0.748380, 0, 1.0};
Point(90) = {0.015789, -0.746996, 0, 1.0};
Point(91) = {0.022395, -0.745305, 0, 1.0};
Point(92) = {0.028431, -0.743360, 0, 1.0};
Point(93) = {0.033824, -0.741215, 0, 1.0};
Point(94) = {0.038516, -0.738920, 0, 1.0};
Point(95) = {0.042454, -0.736523, 0, 1.0};
Point(96) = {0.045602, -0.734078, 0, 1.0};
Point(97) = {0.047929, -0.731662, 0, 1.0};
Point(98) = {0.049250, -0.729683, 0, 1.0};
Point(99) = {0.049795, -0.728392, 0, 1.0};
Point(100) = {0.049971, -0.727600, 0, 1.0};
Point(101) = {0.049994, -0.727059, 0, 1.0};
Point(102) = {0.049943, -0.726731, 0, 1.0};
Point(103) = {0.049822, -0.726419, 0, 1.0};
Point(104) = {0.049523, -0.725938, 0, 1.0};
Point(105) = {0.048945, -0.725279, 0, 1.0};
Point(106) = {0.047746, -0.724274, 0, 1.0};
Point(107) = {0.047399, -0.724029, 0, 1.0};
Point(108) = {0.044414, -0.722379, 0, 1.0};
Point(109) = {0.040428, -0.720795, 0, 1.0};
Point(110) = {0.035489, -0.719316, 0, 1.0};
Point(111) = {0.029647, -0.717955, 0, 1.0};
Point(112) = {0.022979, -0.716720, 0, 1.0};
Point(113) = {0.015578, -0.715637, 0, 1.0};
Point(114) = {0.007541, -0.714736, 0, 1.0};
Point(115) = {-0.001035, -0.714079, 0, 1.0};
Point(116) = {-0.010089, -0.713740, 0, 1.0};
Point(117) = {-0.019605, -0.713752, 0, 1.0};
Point(118) = {-0.029569, -0.714119, 0, 1.0};
Point(119) = {-0.039986, -0.714781, 0, 1.0};
Point(120) = {-0.050796, -0.715586, 0, 1.0};
Point(121) = {-0.061842, -0.716422, 0, 1.0};
Point(122) = {-0.072959, -0.717205, 0, 1.0};
Point(123) = {-0.083967, -0.717867, 0, 1.0};
Point(124) = {-0.094681, -0.718363, 0, 1.0};
Point(125) = {-0.104909, -0.718664, 0, 1.0};
Point(126) = {-0.114465, -0.718756, 0, 1.0};
Point(127) = {-0.123166, -0.718655, 0, 1.0};
Point(128) = {-0.130843, -0.718390, 0, 1.0};
Point(129) = {-0.137346, -0.718022, 0, 1.0};
Point(130) = {-0.142577, -0.717626, 0, 1.0};
Point(131) = {-0.146468, -0.717238, 0, 1.0};
Point(132) = {-0.148893, -0.716889, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
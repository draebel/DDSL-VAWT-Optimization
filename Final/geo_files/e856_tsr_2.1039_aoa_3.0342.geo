SetFactory("OpenCASCADE");

Point(1) = {0.112290, 0.725051, 0, 1.0};
Point(2) = {0.111730, 0.725297, 0, 1.0};
Point(3) = {0.110233, 0.726040, 0, 1.0};
Point(4) = {0.108057, 0.727153, 0, 1.0};
Point(5) = {0.105236, 0.728404, 0, 1.0};
Point(6) = {0.101669, 0.729719, 0, 1.0};
Point(7) = {0.097352, 0.731153, 0, 1.0};
Point(8) = {0.092365, 0.732717, 0, 1.0};
Point(9) = {0.086784, 0.734394, 0, 1.0};
Point(10) = {0.080696, 0.736164, 0, 1.0};
Point(11) = {0.074191, 0.737994, 0, 1.0};
Point(12) = {0.067362, 0.739849, 0, 1.0};
Point(13) = {0.060297, 0.741685, 0, 1.0};
Point(14) = {0.053091, 0.743458, 0, 1.0};
Point(15) = {0.045826, 0.745120, 0, 1.0};
Point(16) = {0.038588, 0.746620, 0, 1.0};
Point(17) = {0.031450, 0.747908, 0, 1.0};
Point(18) = {0.024486, 0.748940, 0, 1.0};
Point(19) = {0.017755, 0.749657, 0, 1.0};
Point(20) = {0.011286, 0.750000, 0, 1.0};
Point(21) = {0.005075, 0.749957, 0, 1.0};
Point(22) = {-0.000859, 0.749541, 0, 1.0};
Point(23) = {-0.006510, 0.748785, 0, 1.0};
Point(24) = {-0.011841, 0.747747, 0, 1.0};
Point(25) = {-0.016797, 0.746479, 0, 1.0};
Point(26) = {-0.021323, 0.745020, 0, 1.0};
Point(27) = {-0.025368, 0.743411, 0, 1.0};
Point(28) = {-0.028887, 0.741690, 0, 1.0};
Point(29) = {-0.031841, 0.739892, 0, 1.0};
Point(30) = {-0.034202, 0.738058, 0, 1.0};
Point(31) = {-0.035947, 0.736246, 0, 1.0};
Point(32) = {-0.036937, 0.734762, 0, 1.0};
Point(33) = {-0.037346, 0.733794, 0, 1.0};
Point(34) = {-0.037478, 0.733200, 0, 1.0};
Point(35) = {-0.037495, 0.732794, 0, 1.0};
Point(36) = {-0.037457, 0.732549, 0, 1.0};
Point(37) = {-0.037366, 0.732314, 0, 1.0};
Point(38) = {-0.037142, 0.731954, 0, 1.0};
Point(39) = {-0.036708, 0.731459, 0, 1.0};
Point(40) = {-0.035810, 0.730705, 0, 1.0};
Point(41) = {-0.035549, 0.730522, 0, 1.0};
Point(42) = {-0.033310, 0.729284, 0, 1.0};
Point(43) = {-0.030321, 0.728097, 0, 1.0};
Point(44) = {-0.026617, 0.726987, 0, 1.0};
Point(45) = {-0.022235, 0.725966, 0, 1.0};
Point(46) = {-0.017234, 0.725040, 0, 1.0};
Point(47) = {-0.011684, 0.724228, 0, 1.0};
Point(48) = {-0.005655, 0.723552, 0, 1.0};
Point(49) = {0.000776, 0.723060, 0, 1.0};
Point(50) = {0.007567, 0.722805, 0, 1.0};
Point(51) = {0.014704, 0.722814, 0, 1.0};
Point(52) = {0.022177, 0.723089, 0, 1.0};
Point(53) = {0.029990, 0.723585, 0, 1.0};
Point(54) = {0.038097, 0.724189, 0, 1.0};
Point(55) = {0.046381, 0.724817, 0, 1.0};
Point(56) = {0.054719, 0.725404, 0, 1.0};
Point(57) = {0.062976, 0.725900, 0, 1.0};
Point(58) = {0.071010, 0.726272, 0, 1.0};
Point(59) = {0.078682, 0.726498, 0, 1.0};
Point(60) = {0.085849, 0.726567, 0, 1.0};
Point(61) = {0.092375, 0.726491, 0, 1.0};
Point(62) = {0.098132, 0.726293, 0, 1.0};
Point(63) = {0.103010, 0.726016, 0, 1.0};
Point(64) = {0.106933, 0.725720, 0, 1.0};
Point(65) = {0.109851, 0.725428, 0, 1.0};
Point(66) = {0.111669, 0.725167, 0, 1.0};
Point(67) = {-0.112290, -0.725051, 0, 1.0};
Point(68) = {-0.111730, -0.725297, 0, 1.0};
Point(69) = {-0.110233, -0.726040, 0, 1.0};
Point(70) = {-0.108057, -0.727153, 0, 1.0};
Point(71) = {-0.105236, -0.728404, 0, 1.0};
Point(72) = {-0.101669, -0.729719, 0, 1.0};
Point(73) = {-0.097352, -0.731153, 0, 1.0};
Point(74) = {-0.092365, -0.732717, 0, 1.0};
Point(75) = {-0.086784, -0.734394, 0, 1.0};
Point(76) = {-0.080696, -0.736164, 0, 1.0};
Point(77) = {-0.074191, -0.737994, 0, 1.0};
Point(78) = {-0.067362, -0.739849, 0, 1.0};
Point(79) = {-0.060297, -0.741685, 0, 1.0};
Point(80) = {-0.053091, -0.743458, 0, 1.0};
Point(81) = {-0.045826, -0.745120, 0, 1.0};
Point(82) = {-0.038588, -0.746620, 0, 1.0};
Point(83) = {-0.031450, -0.747908, 0, 1.0};
Point(84) = {-0.024486, -0.748940, 0, 1.0};
Point(85) = {-0.017755, -0.749657, 0, 1.0};
Point(86) = {-0.011286, -0.750000, 0, 1.0};
Point(87) = {-0.005075, -0.749957, 0, 1.0};
Point(88) = {0.000859, -0.749541, 0, 1.0};
Point(89) = {0.006510, -0.748785, 0, 1.0};
Point(90) = {0.011841, -0.747747, 0, 1.0};
Point(91) = {0.016797, -0.746479, 0, 1.0};
Point(92) = {0.021323, -0.745020, 0, 1.0};
Point(93) = {0.025368, -0.743411, 0, 1.0};
Point(94) = {0.028887, -0.741690, 0, 1.0};
Point(95) = {0.031841, -0.739892, 0, 1.0};
Point(96) = {0.034202, -0.738058, 0, 1.0};
Point(97) = {0.035947, -0.736246, 0, 1.0};
Point(98) = {0.036937, -0.734762, 0, 1.0};
Point(99) = {0.037346, -0.733794, 0, 1.0};
Point(100) = {0.037478, -0.733200, 0, 1.0};
Point(101) = {0.037495, -0.732794, 0, 1.0};
Point(102) = {0.037457, -0.732549, 0, 1.0};
Point(103) = {0.037366, -0.732314, 0, 1.0};
Point(104) = {0.037142, -0.731954, 0, 1.0};
Point(105) = {0.036708, -0.731459, 0, 1.0};
Point(106) = {0.035810, -0.730705, 0, 1.0};
Point(107) = {0.035549, -0.730522, 0, 1.0};
Point(108) = {0.033310, -0.729284, 0, 1.0};
Point(109) = {0.030321, -0.728097, 0, 1.0};
Point(110) = {0.026617, -0.726987, 0, 1.0};
Point(111) = {0.022235, -0.725966, 0, 1.0};
Point(112) = {0.017234, -0.725040, 0, 1.0};
Point(113) = {0.011684, -0.724228, 0, 1.0};
Point(114) = {0.005655, -0.723552, 0, 1.0};
Point(115) = {-0.000776, -0.723060, 0, 1.0};
Point(116) = {-0.007567, -0.722805, 0, 1.0};
Point(117) = {-0.014704, -0.722814, 0, 1.0};
Point(118) = {-0.022177, -0.723089, 0, 1.0};
Point(119) = {-0.029990, -0.723585, 0, 1.0};
Point(120) = {-0.038097, -0.724189, 0, 1.0};
Point(121) = {-0.046381, -0.724817, 0, 1.0};
Point(122) = {-0.054719, -0.725404, 0, 1.0};
Point(123) = {-0.062976, -0.725900, 0, 1.0};
Point(124) = {-0.071010, -0.726272, 0, 1.0};
Point(125) = {-0.078682, -0.726498, 0, 1.0};
Point(126) = {-0.085849, -0.726567, 0, 1.0};
Point(127) = {-0.092375, -0.726491, 0, 1.0};
Point(128) = {-0.098132, -0.726293, 0, 1.0};
Point(129) = {-0.103010, -0.726016, 0, 1.0};
Point(130) = {-0.106933, -0.725720, 0, 1.0};
Point(131) = {-0.109851, -0.725428, 0, 1.0};
Point(132) = {-0.111669, -0.725167, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074884, 0.725049, 0, 1.0};
Point(2) = {0.074324, 0.725295, 0, 1.0};
Point(3) = {0.072827, 0.726039, 0, 1.0};
Point(4) = {0.070651, 0.727152, 0, 1.0};
Point(5) = {0.067830, 0.728402, 0, 1.0};
Point(6) = {0.064263, 0.729718, 0, 1.0};
Point(7) = {0.059945, 0.731152, 0, 1.0};
Point(8) = {0.054958, 0.732715, 0, 1.0};
Point(9) = {0.049376, 0.734393, 0, 1.0};
Point(10) = {0.043288, 0.736163, 0, 1.0};
Point(11) = {0.036783, 0.737993, 0, 1.0};
Point(12) = {0.029953, 0.739848, 0, 1.0};
Point(13) = {0.022888, 0.741685, 0, 1.0};
Point(14) = {0.015681, 0.743458, 0, 1.0};
Point(15) = {0.008416, 0.745120, 0, 1.0};
Point(16) = {0.001176, 0.746619, 0, 1.0};
Point(17) = {-0.005961, 0.747908, 0, 1.0};
Point(18) = {-0.012927, 0.748940, 0, 1.0};
Point(19) = {-0.019657, 0.749657, 0, 1.0};
Point(20) = {-0.026127, 0.750000, 0, 1.0};
Point(21) = {-0.032338, 0.749957, 0, 1.0};
Point(22) = {-0.038273, 0.749541, 0, 1.0};
Point(23) = {-0.043924, 0.748785, 0, 1.0};
Point(24) = {-0.049256, 0.747747, 0, 1.0};
Point(25) = {-0.054212, 0.746479, 0, 1.0};
Point(26) = {-0.058738, 0.745020, 0, 1.0};
Point(27) = {-0.062784, 0.743410, 0, 1.0};
Point(28) = {-0.066303, 0.741689, 0, 1.0};
Point(29) = {-0.069257, 0.739891, 0, 1.0};
Point(30) = {-0.071618, 0.738058, 0, 1.0};
Point(31) = {-0.073363, 0.736245, 0, 1.0};
Point(32) = {-0.074354, 0.734761, 0, 1.0};
Point(33) = {-0.074763, 0.733793, 0, 1.0};
Point(34) = {-0.074895, 0.733199, 0, 1.0};
Point(35) = {-0.074912, 0.732793, 0, 1.0};
Point(36) = {-0.074874, 0.732547, 0, 1.0};
Point(37) = {-0.074783, 0.732313, 0, 1.0};
Point(38) = {-0.074558, 0.731952, 0, 1.0};
Point(39) = {-0.074125, 0.731458, 0, 1.0};
Point(40) = {-0.073226, 0.730704, 0, 1.0};
Point(41) = {-0.072965, 0.730520, 0, 1.0};
Point(42) = {-0.070727, 0.729283, 0, 1.0};
Point(43) = {-0.067737, 0.728095, 0, 1.0};
Point(44) = {-0.064033, 0.726985, 0, 1.0};
Point(45) = {-0.059651, 0.725964, 0, 1.0};
Point(46) = {-0.054649, 0.725038, 0, 1.0};
Point(47) = {-0.049098, 0.724226, 0, 1.0};
Point(48) = {-0.043070, 0.723550, 0, 1.0};
Point(49) = {-0.036638, 0.723058, 0, 1.0};
Point(50) = {-0.029846, 0.722803, 0, 1.0};
Point(51) = {-0.022709, 0.722812, 0, 1.0};
Point(52) = {-0.015236, 0.723087, 0, 1.0};
Point(53) = {-0.007422, 0.723584, 0, 1.0};
Point(54) = {0.000686, 0.724187, 0, 1.0};
Point(55) = {0.008971, 0.724815, 0, 1.0};
Point(56) = {0.017309, 0.725402, 0, 1.0};
Point(57) = {0.025566, 0.725899, 0, 1.0};
Point(58) = {0.033602, 0.726270, 0, 1.0};
Point(59) = {0.041273, 0.726496, 0, 1.0};
Point(60) = {0.048441, 0.726565, 0, 1.0};
Point(61) = {0.054967, 0.726490, 0, 1.0};
Point(62) = {0.060725, 0.726291, 0, 1.0};
Point(63) = {0.065603, 0.726015, 0, 1.0};
Point(64) = {0.069526, 0.725718, 0, 1.0};
Point(65) = {0.072445, 0.725427, 0, 1.0};
Point(66) = {0.074263, 0.725165, 0, 1.0};
Point(67) = {-0.074884, -0.725049, 0, 1.0};
Point(68) = {-0.074324, -0.725295, 0, 1.0};
Point(69) = {-0.072827, -0.726039, 0, 1.0};
Point(70) = {-0.070651, -0.727152, 0, 1.0};
Point(71) = {-0.067830, -0.728402, 0, 1.0};
Point(72) = {-0.064263, -0.729718, 0, 1.0};
Point(73) = {-0.059945, -0.731152, 0, 1.0};
Point(74) = {-0.054958, -0.732715, 0, 1.0};
Point(75) = {-0.049376, -0.734393, 0, 1.0};
Point(76) = {-0.043288, -0.736163, 0, 1.0};
Point(77) = {-0.036783, -0.737993, 0, 1.0};
Point(78) = {-0.029953, -0.739848, 0, 1.0};
Point(79) = {-0.022888, -0.741685, 0, 1.0};
Point(80) = {-0.015681, -0.743458, 0, 1.0};
Point(81) = {-0.008416, -0.745120, 0, 1.0};
Point(82) = {-0.001176, -0.746619, 0, 1.0};
Point(83) = {0.005961, -0.747908, 0, 1.0};
Point(84) = {0.012927, -0.748940, 0, 1.0};
Point(85) = {0.019657, -0.749657, 0, 1.0};
Point(86) = {0.026127, -0.750000, 0, 1.0};
Point(87) = {0.032338, -0.749957, 0, 1.0};
Point(88) = {0.038273, -0.749541, 0, 1.0};
Point(89) = {0.043924, -0.748785, 0, 1.0};
Point(90) = {0.049256, -0.747747, 0, 1.0};
Point(91) = {0.054212, -0.746479, 0, 1.0};
Point(92) = {0.058738, -0.745020, 0, 1.0};
Point(93) = {0.062784, -0.743410, 0, 1.0};
Point(94) = {0.066303, -0.741689, 0, 1.0};
Point(95) = {0.069257, -0.739891, 0, 1.0};
Point(96) = {0.071618, -0.738058, 0, 1.0};
Point(97) = {0.073363, -0.736245, 0, 1.0};
Point(98) = {0.074354, -0.734761, 0, 1.0};
Point(99) = {0.074763, -0.733793, 0, 1.0};
Point(100) = {0.074895, -0.733199, 0, 1.0};
Point(101) = {0.074912, -0.732793, 0, 1.0};
Point(102) = {0.074874, -0.732547, 0, 1.0};
Point(103) = {0.074783, -0.732313, 0, 1.0};
Point(104) = {0.074558, -0.731952, 0, 1.0};
Point(105) = {0.074125, -0.731458, 0, 1.0};
Point(106) = {0.073226, -0.730704, 0, 1.0};
Point(107) = {0.072965, -0.730520, 0, 1.0};
Point(108) = {0.070727, -0.729283, 0, 1.0};
Point(109) = {0.067737, -0.728095, 0, 1.0};
Point(110) = {0.064033, -0.726985, 0, 1.0};
Point(111) = {0.059651, -0.725964, 0, 1.0};
Point(112) = {0.054649, -0.725038, 0, 1.0};
Point(113) = {0.049098, -0.724226, 0, 1.0};
Point(114) = {0.043070, -0.723550, 0, 1.0};
Point(115) = {0.036638, -0.723058, 0, 1.0};
Point(116) = {0.029846, -0.722803, 0, 1.0};
Point(117) = {0.022709, -0.722812, 0, 1.0};
Point(118) = {0.015236, -0.723087, 0, 1.0};
Point(119) = {0.007422, -0.723584, 0, 1.0};
Point(120) = {-0.000686, -0.724187, 0, 1.0};
Point(121) = {-0.008971, -0.724815, 0, 1.0};
Point(122) = {-0.017309, -0.725402, 0, 1.0};
Point(123) = {-0.025566, -0.725899, 0, 1.0};
Point(124) = {-0.033602, -0.726270, 0, 1.0};
Point(125) = {-0.041273, -0.726496, 0, 1.0};
Point(126) = {-0.048441, -0.726565, 0, 1.0};
Point(127) = {-0.054967, -0.726490, 0, 1.0};
Point(128) = {-0.060725, -0.726291, 0, 1.0};
Point(129) = {-0.065603, -0.726015, 0, 1.0};
Point(130) = {-0.069526, -0.725718, 0, 1.0};
Point(131) = {-0.072445, -0.725427, 0, 1.0};
Point(132) = {-0.074263, -0.725165, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
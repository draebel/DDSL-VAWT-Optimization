SetFactory("OpenCASCADE");

Point(1) = {0.112493, 0.741197, 0, 1.0};
Point(2) = {0.112006, 0.741241, 0, 1.0};
Point(3) = {0.110571, 0.741388, 0, 1.0};
Point(4) = {0.108247, 0.741663, 0, 1.0};
Point(5) = {0.105099, 0.742072, 0, 1.0};
Point(6) = {0.101196, 0.742606, 0, 1.0};
Point(7) = {0.096610, 0.743250, 0, 1.0};
Point(8) = {0.091415, 0.743977, 0, 1.0};
Point(9) = {0.085685, 0.744759, 0, 1.0};
Point(10) = {0.079494, 0.745561, 0, 1.0};
Point(11) = {0.072909, 0.746345, 0, 1.0};
Point(12) = {0.065986, 0.747082, 0, 1.0};
Point(13) = {0.058787, 0.747755, 0, 1.0};
Point(14) = {0.051381, 0.748357, 0, 1.0};
Point(15) = {0.043843, 0.748883, 0, 1.0};
Point(16) = {0.036263, 0.749326, 0, 1.0};
Point(17) = {0.028721, 0.749665, 0, 1.0};
Point(18) = {0.021290, 0.749891, 0, 1.0};
Point(19) = {0.014046, 0.750000, 0, 1.0};
Point(20) = {0.007064, 0.749982, 0, 1.0};
Point(21) = {0.000406, 0.749832, 0, 1.0};
Point(22) = {-0.005860, 0.749556, 0, 1.0};
Point(23) = {-0.011671, 0.749150, 0, 1.0};
Point(24) = {-0.016978, 0.748614, 0, 1.0};
Point(25) = {-0.021737, 0.747954, 0, 1.0};
Point(26) = {-0.025911, 0.747183, 0, 1.0};
Point(27) = {-0.029470, 0.746314, 0, 1.0};
Point(28) = {-0.032396, 0.745370, 0, 1.0};
Point(29) = {-0.034671, 0.744383, 0, 1.0};
Point(30) = {-0.036292, 0.743395, 0, 1.0};
Point(31) = {-0.037194, 0.742536, 0, 1.0};
Point(32) = {-0.037360, 0.742278, 0, 1.0};
Point(33) = {-0.037465, 0.742041, 0, 1.0};
Point(34) = {-0.037500, 0.741898, 0, 1.0};
Point(35) = {-0.037496, 0.741774, 0, 1.0};
Point(36) = {-0.037443, 0.741657, 0, 1.0};
Point(37) = {-0.037345, 0.741536, 0, 1.0};
Point(38) = {-0.037132, 0.741347, 0, 1.0};
Point(39) = {-0.036846, 0.741151, 0, 1.0};
Point(40) = {-0.035256, 0.740468, 0, 1.0};
Point(41) = {-0.032986, 0.739871, 0, 1.0};
Point(42) = {-0.029982, 0.739346, 0, 1.0};
Point(43) = {-0.026263, 0.738910, 0, 1.0};
Point(44) = {-0.021857, 0.738573, 0, 1.0};
Point(45) = {-0.016796, 0.738337, 0, 1.0};
Point(46) = {-0.011124, 0.738194, 0, 1.0};
Point(47) = {-0.004895, 0.738138, 0, 1.0};
Point(48) = {0.001826, 0.738157, 0, 1.0};
Point(49) = {0.008968, 0.738244, 0, 1.0};
Point(50) = {0.016452, 0.738387, 0, 1.0};
Point(51) = {0.024196, 0.738579, 0, 1.0};
Point(52) = {0.032114, 0.738808, 0, 1.0};
Point(53) = {0.040116, 0.739065, 0, 1.0};
Point(54) = {0.048113, 0.739340, 0, 1.0};
Point(55) = {0.056013, 0.739623, 0, 1.0};
Point(56) = {0.063725, 0.739901, 0, 1.0};
Point(57) = {0.071156, 0.740168, 0, 1.0};
Point(58) = {0.078218, 0.740413, 0, 1.0};
Point(59) = {0.084824, 0.740629, 0, 1.0};
Point(60) = {0.090891, 0.740809, 0, 1.0};
Point(61) = {0.096337, 0.740950, 0, 1.0};
Point(62) = {0.101091, 0.741052, 0, 1.0};
Point(63) = {0.105085, 0.741119, 0, 1.0};
Point(64) = {0.108263, 0.741158, 0, 1.0};
Point(65) = {0.110579, 0.741183, 0, 1.0};
Point(66) = {0.112005, 0.741196, 0, 1.0};
Point(67) = {-0.112493, -0.741197, 0, 1.0};
Point(68) = {-0.112006, -0.741241, 0, 1.0};
Point(69) = {-0.110571, -0.741388, 0, 1.0};
Point(70) = {-0.108247, -0.741663, 0, 1.0};
Point(71) = {-0.105099, -0.742072, 0, 1.0};
Point(72) = {-0.101196, -0.742606, 0, 1.0};
Point(73) = {-0.096610, -0.743250, 0, 1.0};
Point(74) = {-0.091415, -0.743977, 0, 1.0};
Point(75) = {-0.085685, -0.744759, 0, 1.0};
Point(76) = {-0.079494, -0.745561, 0, 1.0};
Point(77) = {-0.072909, -0.746345, 0, 1.0};
Point(78) = {-0.065986, -0.747082, 0, 1.0};
Point(79) = {-0.058787, -0.747755, 0, 1.0};
Point(80) = {-0.051381, -0.748357, 0, 1.0};
Point(81) = {-0.043843, -0.748883, 0, 1.0};
Point(82) = {-0.036263, -0.749326, 0, 1.0};
Point(83) = {-0.028721, -0.749665, 0, 1.0};
Point(84) = {-0.021290, -0.749891, 0, 1.0};
Point(85) = {-0.014046, -0.750000, 0, 1.0};
Point(86) = {-0.007064, -0.749982, 0, 1.0};
Point(87) = {-0.000406, -0.749832, 0, 1.0};
Point(88) = {0.005860, -0.749556, 0, 1.0};
Point(89) = {0.011671, -0.749150, 0, 1.0};
Point(90) = {0.016978, -0.748614, 0, 1.0};
Point(91) = {0.021737, -0.747954, 0, 1.0};
Point(92) = {0.025911, -0.747183, 0, 1.0};
Point(93) = {0.029470, -0.746314, 0, 1.0};
Point(94) = {0.032396, -0.745370, 0, 1.0};
Point(95) = {0.034671, -0.744383, 0, 1.0};
Point(96) = {0.036292, -0.743395, 0, 1.0};
Point(97) = {0.037194, -0.742536, 0, 1.0};
Point(98) = {0.037360, -0.742278, 0, 1.0};
Point(99) = {0.037465, -0.742041, 0, 1.0};
Point(100) = {0.037500, -0.741898, 0, 1.0};
Point(101) = {0.037496, -0.741774, 0, 1.0};
Point(102) = {0.037443, -0.741657, 0, 1.0};
Point(103) = {0.037345, -0.741536, 0, 1.0};
Point(104) = {0.037132, -0.741347, 0, 1.0};
Point(105) = {0.036846, -0.741151, 0, 1.0};
Point(106) = {0.035256, -0.740468, 0, 1.0};
Point(107) = {0.032986, -0.739871, 0, 1.0};
Point(108) = {0.029982, -0.739346, 0, 1.0};
Point(109) = {0.026263, -0.738910, 0, 1.0};
Point(110) = {0.021857, -0.738573, 0, 1.0};
Point(111) = {0.016796, -0.738337, 0, 1.0};
Point(112) = {0.011124, -0.738194, 0, 1.0};
Point(113) = {0.004895, -0.738138, 0, 1.0};
Point(114) = {-0.001826, -0.738157, 0, 1.0};
Point(115) = {-0.008968, -0.738244, 0, 1.0};
Point(116) = {-0.016452, -0.738387, 0, 1.0};
Point(117) = {-0.024196, -0.738579, 0, 1.0};
Point(118) = {-0.032114, -0.738808, 0, 1.0};
Point(119) = {-0.040116, -0.739065, 0, 1.0};
Point(120) = {-0.048113, -0.739340, 0, 1.0};
Point(121) = {-0.056013, -0.739623, 0, 1.0};
Point(122) = {-0.063725, -0.739901, 0, 1.0};
Point(123) = {-0.071156, -0.740168, 0, 1.0};
Point(124) = {-0.078218, -0.740413, 0, 1.0};
Point(125) = {-0.084824, -0.740629, 0, 1.0};
Point(126) = {-0.090891, -0.740809, 0, 1.0};
Point(127) = {-0.096337, -0.740950, 0, 1.0};
Point(128) = {-0.101091, -0.741052, 0, 1.0};
Point(129) = {-0.105085, -0.741119, 0, 1.0};
Point(130) = {-0.108263, -0.741158, 0, 1.0};
Point(131) = {-0.110579, -0.741183, 0, 1.0};
Point(132) = {-0.112005, -0.741196, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149998, 0.738263, 0, 1.0};
Point(2) = {0.149349, 0.738321, 0, 1.0};
Point(3) = {0.147435, 0.738517, 0, 1.0};
Point(4) = {0.144337, 0.738884, 0, 1.0};
Point(5) = {0.140139, 0.739429, 0, 1.0};
Point(6) = {0.134935, 0.740142, 0, 1.0};
Point(7) = {0.128821, 0.740999, 0, 1.0};
Point(8) = {0.121894, 0.741970, 0, 1.0};
Point(9) = {0.114254, 0.743012, 0, 1.0};
Point(10) = {0.105999, 0.744081, 0, 1.0};
Point(11) = {0.097218, 0.745126, 0, 1.0};
Point(12) = {0.087987, 0.746109, 0, 1.0};
Point(13) = {0.078389, 0.747007, 0, 1.0};
Point(14) = {0.068513, 0.747809, 0, 1.0};
Point(15) = {0.058463, 0.748511, 0, 1.0};
Point(16) = {0.048356, 0.749101, 0, 1.0};
Point(17) = {0.038301, 0.749553, 0, 1.0};
Point(18) = {0.028392, 0.749855, 0, 1.0};
Point(19) = {0.018733, 0.750000, 0, 1.0};
Point(20) = {0.009423, 0.749976, 0, 1.0};
Point(21) = {0.000546, 0.749776, 0, 1.0};
Point(22) = {-0.007809, 0.749408, 0, 1.0};
Point(23) = {-0.015557, 0.748866, 0, 1.0};
Point(24) = {-0.022634, 0.748152, 0, 1.0};
Point(25) = {-0.028979, 0.747272, 0, 1.0};
Point(26) = {-0.034544, 0.746244, 0, 1.0};
Point(27) = {-0.039290, 0.745085, 0, 1.0};
Point(28) = {-0.043190, 0.743827, 0, 1.0};
Point(29) = {-0.046225, 0.742510, 0, 1.0};
Point(30) = {-0.048385, 0.741193, 0, 1.0};
Point(31) = {-0.049589, 0.740047, 0, 1.0};
Point(32) = {-0.049810, 0.739704, 0, 1.0};
Point(33) = {-0.049950, 0.739388, 0, 1.0};
Point(34) = {-0.049996, 0.739197, 0, 1.0};
Point(35) = {-0.049991, 0.739031, 0, 1.0};
Point(36) = {-0.049921, 0.738876, 0, 1.0};
Point(37) = {-0.049790, 0.738714, 0, 1.0};
Point(38) = {-0.049505, 0.738462, 0, 1.0};
Point(39) = {-0.049125, 0.738201, 0, 1.0};
Point(40) = {-0.047004, 0.737290, 0, 1.0};
Point(41) = {-0.043978, 0.736494, 0, 1.0};
Point(42) = {-0.039972, 0.735794, 0, 1.0};
Point(43) = {-0.035013, 0.735213, 0, 1.0};
Point(44) = {-0.029139, 0.734763, 0, 1.0};
Point(45) = {-0.022391, 0.734448, 0, 1.0};
Point(46) = {-0.014827, 0.734258, 0, 1.0};
Point(47) = {-0.006522, 0.734183, 0, 1.0};
Point(48) = {0.002440, 0.734210, 0, 1.0};
Point(49) = {0.011962, 0.734325, 0, 1.0};
Point(50) = {0.021941, 0.734516, 0, 1.0};
Point(51) = {0.032266, 0.734772, 0, 1.0};
Point(52) = {0.042824, 0.735077, 0, 1.0};
Point(53) = {0.053494, 0.735420, 0, 1.0};
Point(54) = {0.064157, 0.735786, 0, 1.0};
Point(55) = {0.074691, 0.736163, 0, 1.0};
Point(56) = {0.084973, 0.736535, 0, 1.0};
Point(57) = {0.094881, 0.736890, 0, 1.0};
Point(58) = {0.104297, 0.737217, 0, 1.0};
Point(59) = {0.113105, 0.737506, 0, 1.0};
Point(60) = {0.121194, 0.737745, 0, 1.0};
Point(61) = {0.128457, 0.737933, 0, 1.0};
Point(62) = {0.134795, 0.738069, 0, 1.0};
Point(63) = {0.140121, 0.738159, 0, 1.0};
Point(64) = {0.144357, 0.738211, 0, 1.0};
Point(65) = {0.147446, 0.738244, 0, 1.0};
Point(66) = {0.149348, 0.738261, 0, 1.0};
Point(67) = {-0.149998, -0.738263, 0, 1.0};
Point(68) = {-0.149349, -0.738321, 0, 1.0};
Point(69) = {-0.147435, -0.738517, 0, 1.0};
Point(70) = {-0.144337, -0.738884, 0, 1.0};
Point(71) = {-0.140139, -0.739429, 0, 1.0};
Point(72) = {-0.134935, -0.740142, 0, 1.0};
Point(73) = {-0.128821, -0.740999, 0, 1.0};
Point(74) = {-0.121894, -0.741970, 0, 1.0};
Point(75) = {-0.114254, -0.743012, 0, 1.0};
Point(76) = {-0.105999, -0.744081, 0, 1.0};
Point(77) = {-0.097218, -0.745126, 0, 1.0};
Point(78) = {-0.087987, -0.746109, 0, 1.0};
Point(79) = {-0.078389, -0.747007, 0, 1.0};
Point(80) = {-0.068513, -0.747809, 0, 1.0};
Point(81) = {-0.058463, -0.748511, 0, 1.0};
Point(82) = {-0.048356, -0.749101, 0, 1.0};
Point(83) = {-0.038301, -0.749553, 0, 1.0};
Point(84) = {-0.028392, -0.749855, 0, 1.0};
Point(85) = {-0.018733, -0.750000, 0, 1.0};
Point(86) = {-0.009423, -0.749976, 0, 1.0};
Point(87) = {-0.000546, -0.749776, 0, 1.0};
Point(88) = {0.007809, -0.749408, 0, 1.0};
Point(89) = {0.015557, -0.748866, 0, 1.0};
Point(90) = {0.022634, -0.748152, 0, 1.0};
Point(91) = {0.028979, -0.747272, 0, 1.0};
Point(92) = {0.034544, -0.746244, 0, 1.0};
Point(93) = {0.039290, -0.745085, 0, 1.0};
Point(94) = {0.043190, -0.743827, 0, 1.0};
Point(95) = {0.046225, -0.742510, 0, 1.0};
Point(96) = {0.048385, -0.741193, 0, 1.0};
Point(97) = {0.049589, -0.740047, 0, 1.0};
Point(98) = {0.049810, -0.739704, 0, 1.0};
Point(99) = {0.049950, -0.739388, 0, 1.0};
Point(100) = {0.049996, -0.739197, 0, 1.0};
Point(101) = {0.049991, -0.739031, 0, 1.0};
Point(102) = {0.049921, -0.738876, 0, 1.0};
Point(103) = {0.049790, -0.738714, 0, 1.0};
Point(104) = {0.049505, -0.738462, 0, 1.0};
Point(105) = {0.049125, -0.738201, 0, 1.0};
Point(106) = {0.047004, -0.737290, 0, 1.0};
Point(107) = {0.043978, -0.736494, 0, 1.0};
Point(108) = {0.039972, -0.735794, 0, 1.0};
Point(109) = {0.035013, -0.735213, 0, 1.0};
Point(110) = {0.029139, -0.734763, 0, 1.0};
Point(111) = {0.022391, -0.734448, 0, 1.0};
Point(112) = {0.014827, -0.734258, 0, 1.0};
Point(113) = {0.006522, -0.734183, 0, 1.0};
Point(114) = {-0.002440, -0.734210, 0, 1.0};
Point(115) = {-0.011962, -0.734325, 0, 1.0};
Point(116) = {-0.021941, -0.734516, 0, 1.0};
Point(117) = {-0.032266, -0.734772, 0, 1.0};
Point(118) = {-0.042824, -0.735077, 0, 1.0};
Point(119) = {-0.053494, -0.735420, 0, 1.0};
Point(120) = {-0.064157, -0.735786, 0, 1.0};
Point(121) = {-0.074691, -0.736163, 0, 1.0};
Point(122) = {-0.084973, -0.736535, 0, 1.0};
Point(123) = {-0.094881, -0.736890, 0, 1.0};
Point(124) = {-0.104297, -0.737217, 0, 1.0};
Point(125) = {-0.113105, -0.737506, 0, 1.0};
Point(126) = {-0.121194, -0.737745, 0, 1.0};
Point(127) = {-0.128457, -0.737933, 0, 1.0};
Point(128) = {-0.134795, -0.738069, 0, 1.0};
Point(129) = {-0.140121, -0.738159, 0, 1.0};
Point(130) = {-0.144357, -0.738211, 0, 1.0};
Point(131) = {-0.147446, -0.738244, 0, 1.0};
Point(132) = {-0.149348, -0.738261, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074709, 0.728120, 0, 1.0};
Point(2) = {0.073466, 0.728431, 0, 1.0};
Point(3) = {0.067271, 0.730116, 0, 1.0};
Point(4) = {0.064177, 0.730992, 0, 1.0};
Point(5) = {0.061084, 0.731868, 0, 1.0};
Point(6) = {0.057990, 0.732739, 0, 1.0};
Point(7) = {0.051797, 0.734445, 0, 1.0};
Point(8) = {0.048698, 0.735274, 0, 1.0};
Point(9) = {0.045597, 0.736082, 0, 1.0};
Point(10) = {0.042493, 0.736867, 0, 1.0};
Point(11) = {0.036277, 0.738354, 0, 1.0};
Point(12) = {0.033164, 0.739055, 0, 1.0};
Point(13) = {0.030048, 0.739726, 0, 1.0};
Point(14) = {0.026928, 0.740369, 0, 1.0};
Point(15) = {0.020681, 0.741575, 0, 1.0};
Point(16) = {0.017553, 0.742142, 0, 1.0};
Point(17) = {0.014423, 0.742686, 0, 1.0};
Point(18) = {0.011290, 0.743211, 0, 1.0};
Point(19) = {0.005019, 0.744202, 0, 1.0};
Point(20) = {0.001881, 0.744669, 0, 1.0};
Point(21) = {-0.001260, 0.745116, 0, 1.0};
Point(22) = {-0.004403, 0.745542, 0, 1.0};
Point(23) = {-0.007549, 0.745949, 0, 1.0};
Point(24) = {-0.013844, 0.746721, 0, 1.0};
Point(25) = {-0.020144, 0.747450, 0, 1.0};
Point(26) = {-0.026202, 0.748117, 0, 1.0};
Point(27) = {-0.034142, 0.748921, 0, 1.0};
Point(28) = {-0.042093, 0.749588, 0, 1.0};
Point(29) = {-0.050066, 0.750000, 0, 1.0};
Point(30) = {-0.058078, 0.749914, 0, 1.0};
Point(31) = {-0.062116, 0.749523, 0, 1.0};
Point(32) = {-0.066189, 0.748703, 0, 1.0};
Point(33) = {-0.070329, 0.747075, 0, 1.0};
Point(34) = {-0.072450, 0.745625, 0, 1.0};
Point(35) = {-0.073316, 0.744780, 0, 1.0};
Point(36) = {-0.073756, 0.744245, 0, 1.0};
Point(37) = {-0.074614, 0.742379, 0, 1.0};
Point(38) = {-0.074357, 0.741375, 0, 1.0};
Point(39) = {-0.073978, 0.741013, 0, 1.0};
Point(40) = {-0.073126, 0.740559, 0, 1.0};
Point(41) = {-0.071247, 0.739946, 0, 1.0};
Point(42) = {-0.069363, 0.739456, 0, 1.0};
Point(43) = {-0.068421, 0.739230, 0, 1.0};
Point(44) = {-0.066535, 0.738808, 0, 1.0};
Point(45) = {-0.062444, 0.737998, 0, 1.0};
Point(46) = {-0.059295, 0.737441, 0, 1.0};
Point(47) = {-0.054570, 0.736664, 0, 1.0};
Point(48) = {-0.050117, 0.735964, 0, 1.0};
Point(49) = {-0.047765, 0.735598, 0, 1.0};
Point(50) = {-0.043060, 0.734870, 0, 1.0};
Point(51) = {-0.038354, 0.734149, 0, 1.0};
Point(52) = {-0.036001, 0.733794, 0, 1.0};
Point(53) = {-0.031292, 0.733102, 0, 1.0};
Point(54) = {-0.026580, 0.732441, 0, 1.0};
Point(55) = {-0.021864, 0.731813, 0, 1.0};
Point(56) = {-0.015569, 0.731034, 0, 1.0};
Point(57) = {-0.009267, 0.730322, 0, 1.0};
Point(58) = {-0.006113, 0.729993, 0, 1.0};
Point(59) = {-0.002958, 0.729681, 0, 1.0};
Point(60) = {0.000200, 0.729387, 0, 1.0};
Point(61) = {0.003360, 0.729112, 0, 1.0};
Point(62) = {0.009686, 0.728621, 0, 1.0};
Point(63) = {0.012852, 0.728404, 0, 1.0};
Point(64) = {0.016020, 0.728205, 0, 1.0};
Point(65) = {0.019190, 0.728023, 0, 1.0};
Point(66) = {0.025535, 0.727706, 0, 1.0};
Point(67) = {0.028711, 0.727571, 0, 1.0};
Point(68) = {0.031888, 0.727450, 0, 1.0};
Point(69) = {0.035066, 0.727342, 0, 1.0};
Point(70) = {0.041426, 0.727166, 0, 1.0};
Point(71) = {0.044608, 0.727093, 0, 1.0};
Point(72) = {0.047791, 0.727029, 0, 1.0};
Point(73) = {0.050975, 0.726972, 0, 1.0};
Point(74) = {0.057344, 0.726871, 0, 1.0};
Point(75) = {0.060529, 0.726827, 0, 1.0};
Point(76) = {0.063715, 0.726787, 0, 1.0};
Point(77) = {0.066901, 0.726751, 0, 1.0};
Point(78) = {0.073272, 0.726672, 0, 1.0};
Point(79) = {0.074560, 0.726647, 0, 1.0};
Point(80) = {-0.074709, -0.728120, 0, 1.0};
Point(81) = {-0.073466, -0.728431, 0, 1.0};
Point(82) = {-0.067271, -0.730116, 0, 1.0};
Point(83) = {-0.064177, -0.730992, 0, 1.0};
Point(84) = {-0.061084, -0.731868, 0, 1.0};
Point(85) = {-0.057990, -0.732739, 0, 1.0};
Point(86) = {-0.051797, -0.734445, 0, 1.0};
Point(87) = {-0.048698, -0.735274, 0, 1.0};
Point(88) = {-0.045597, -0.736082, 0, 1.0};
Point(89) = {-0.042493, -0.736867, 0, 1.0};
Point(90) = {-0.036277, -0.738354, 0, 1.0};
Point(91) = {-0.033164, -0.739055, 0, 1.0};
Point(92) = {-0.030048, -0.739726, 0, 1.0};
Point(93) = {-0.026928, -0.740369, 0, 1.0};
Point(94) = {-0.020681, -0.741575, 0, 1.0};
Point(95) = {-0.017553, -0.742142, 0, 1.0};
Point(96) = {-0.014423, -0.742686, 0, 1.0};
Point(97) = {-0.011290, -0.743211, 0, 1.0};
Point(98) = {-0.005019, -0.744202, 0, 1.0};
Point(99) = {-0.001881, -0.744669, 0, 1.0};
Point(100) = {0.001260, -0.745116, 0, 1.0};
Point(101) = {0.004403, -0.745542, 0, 1.0};
Point(102) = {0.007549, -0.745949, 0, 1.0};
Point(103) = {0.013844, -0.746721, 0, 1.0};
Point(104) = {0.020144, -0.747450, 0, 1.0};
Point(105) = {0.026202, -0.748117, 0, 1.0};
Point(106) = {0.034142, -0.748921, 0, 1.0};
Point(107) = {0.042093, -0.749588, 0, 1.0};
Point(108) = {0.050066, -0.750000, 0, 1.0};
Point(109) = {0.058078, -0.749914, 0, 1.0};
Point(110) = {0.062116, -0.749523, 0, 1.0};
Point(111) = {0.066189, -0.748703, 0, 1.0};
Point(112) = {0.070329, -0.747075, 0, 1.0};
Point(113) = {0.072450, -0.745625, 0, 1.0};
Point(114) = {0.073316, -0.744780, 0, 1.0};
Point(115) = {0.073756, -0.744245, 0, 1.0};
Point(116) = {0.074614, -0.742379, 0, 1.0};
Point(117) = {0.074357, -0.741375, 0, 1.0};
Point(118) = {0.073978, -0.741013, 0, 1.0};
Point(119) = {0.073126, -0.740559, 0, 1.0};
Point(120) = {0.071247, -0.739946, 0, 1.0};
Point(121) = {0.069363, -0.739456, 0, 1.0};
Point(122) = {0.068421, -0.739230, 0, 1.0};
Point(123) = {0.066535, -0.738808, 0, 1.0};
Point(124) = {0.062444, -0.737998, 0, 1.0};
Point(125) = {0.059295, -0.737441, 0, 1.0};
Point(126) = {0.054570, -0.736664, 0, 1.0};
Point(127) = {0.050117, -0.735964, 0, 1.0};
Point(128) = {0.047765, -0.735598, 0, 1.0};
Point(129) = {0.043060, -0.734870, 0, 1.0};
Point(130) = {0.038354, -0.734149, 0, 1.0};
Point(131) = {0.036001, -0.733794, 0, 1.0};
Point(132) = {0.031292, -0.733102, 0, 1.0};
Point(133) = {0.026580, -0.732441, 0, 1.0};
Point(134) = {0.021864, -0.731813, 0, 1.0};
Point(135) = {0.015569, -0.731034, 0, 1.0};
Point(136) = {0.009267, -0.730322, 0, 1.0};
Point(137) = {0.006113, -0.729993, 0, 1.0};
Point(138) = {0.002958, -0.729681, 0, 1.0};
Point(139) = {-0.000200, -0.729387, 0, 1.0};
Point(140) = {-0.003360, -0.729112, 0, 1.0};
Point(141) = {-0.009686, -0.728621, 0, 1.0};
Point(142) = {-0.012852, -0.728404, 0, 1.0};
Point(143) = {-0.016020, -0.728205, 0, 1.0};
Point(144) = {-0.019190, -0.728023, 0, 1.0};
Point(145) = {-0.025535, -0.727706, 0, 1.0};
Point(146) = {-0.028711, -0.727571, 0, 1.0};
Point(147) = {-0.031888, -0.727450, 0, 1.0};
Point(148) = {-0.035066, -0.727342, 0, 1.0};
Point(149) = {-0.041426, -0.727166, 0, 1.0};
Point(150) = {-0.044608, -0.727093, 0, 1.0};
Point(151) = {-0.047791, -0.727029, 0, 1.0};
Point(152) = {-0.050975, -0.726972, 0, 1.0};
Point(153) = {-0.057344, -0.726871, 0, 1.0};
Point(154) = {-0.060529, -0.726827, 0, 1.0};
Point(155) = {-0.063715, -0.726787, 0, 1.0};
Point(156) = {-0.066901, -0.726751, 0, 1.0};
Point(157) = {-0.073272, -0.726672, 0, 1.0};
Point(158) = {-0.074560, -0.726647, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:53};
Spline(3) = {53:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:106};
Spline(6) = {106:132};
Spline(7) = {132:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074935, 0.735584, 0, 1.0};
Point(2) = {0.073893, 0.735883, 0, 1.0};
Point(3) = {0.069903, 0.736972, 0, 1.0};
Point(4) = {0.065188, 0.738195, 0, 1.0};
Point(5) = {0.059833, 0.739543, 0, 1.0};
Point(6) = {0.053928, 0.740982, 0, 1.0};
Point(7) = {0.047565, 0.742483, 0, 1.0};
Point(8) = {0.040845, 0.743999, 0, 1.0};
Point(9) = {0.033866, 0.745479, 0, 1.0};
Point(10) = {0.026727, 0.746850, 0, 1.0};
Point(11) = {0.019492, 0.748021, 0, 1.0};
Point(12) = {0.012186, 0.748937, 0, 1.0};
Point(13) = {0.004840, 0.749578, 0, 1.0};
Point(14) = {-0.002499, 0.749931, 0, 1.0};
Point(15) = {-0.009786, 0.750000, 0, 1.0};
Point(16) = {-0.016964, 0.749795, 0, 1.0};
Point(17) = {-0.023974, 0.749334, 0, 1.0};
Point(18) = {-0.030747, 0.748631, 0, 1.0};
Point(19) = {-0.037219, 0.747704, 0, 1.0};
Point(20) = {-0.043330, 0.746569, 0, 1.0};
Point(21) = {-0.049024, 0.745246, 0, 1.0};
Point(22) = {-0.054246, 0.743757, 0, 1.0};
Point(23) = {-0.058956, 0.742131, 0, 1.0};
Point(24) = {-0.063110, 0.740395, 0, 1.0};
Point(25) = {-0.066678, 0.738583, 0, 1.0};
Point(26) = {-0.069632, 0.736738, 0, 1.0};
Point(27) = {-0.071954, 0.734905, 0, 1.0};
Point(28) = {-0.073628, 0.733141, 0, 1.0};
Point(29) = {-0.074641, 0.731517, 0, 1.0};
Point(30) = {-0.074898, 0.730783, 0, 1.0};
Point(31) = {-0.074970, 0.730378, 0, 1.0};
Point(32) = {-0.074982, 0.730127, 0, 1.0};
Point(33) = {-0.074968, 0.729897, 0, 1.0};
Point(34) = {-0.074948, 0.729791, 0, 1.0};
Point(35) = {-0.074921, 0.729689, 0, 1.0};
Point(36) = {-0.074883, 0.729599, 0, 1.0};
Point(37) = {-0.074828, 0.729514, 0, 1.0};
Point(38) = {-0.074759, 0.729431, 0, 1.0};
Point(39) = {-0.074675, 0.729348, 0, 1.0};
Point(40) = {-0.074474, 0.729185, 0, 1.0};
Point(41) = {-0.074231, 0.729024, 0, 1.0};
Point(42) = {-0.073793, 0.728786, 0, 1.0};
Point(43) = {-0.072883, 0.728403, 0, 1.0};
Point(44) = {-0.070401, 0.727717, 0, 1.0};
Point(45) = {-0.067064, 0.727150, 0, 1.0};
Point(46) = {-0.062911, 0.726698, 0, 1.0};
Point(47) = {-0.057985, 0.726358, 0, 1.0};
Point(48) = {-0.052348, 0.726113, 0, 1.0};
Point(49) = {-0.046074, 0.725954, 0, 1.0};
Point(50) = {-0.039242, 0.725877, 0, 1.0};
Point(51) = {-0.031938, 0.725880, 0, 1.0};
Point(52) = {-0.024255, 0.725956, 0, 1.0};
Point(53) = {-0.016292, 0.726109, 0, 1.0};
Point(54) = {-0.008147, 0.726341, 0, 1.0};
Point(55) = {0.000078, 0.726662, 0, 1.0};
Point(56) = {0.008278, 0.727085, 0, 1.0};
Point(57) = {0.016347, 0.727655, 0, 1.0};
Point(58) = {0.024258, 0.728435, 0, 1.0};
Point(59) = {0.032023, 0.729405, 0, 1.0};
Point(60) = {0.039621, 0.730497, 0, 1.0};
Point(61) = {0.047024, 0.731613, 0, 1.0};
Point(62) = {0.054135, 0.732606, 0, 1.0};
Point(63) = {0.060787, 0.733376, 0, 1.0};
Point(64) = {0.066806, 0.733874, 0, 1.0};
Point(65) = {0.072014, 0.734083, 0, 1.0};
Point(66) = {0.074967, 0.734069, 0, 1.0};
Point(67) = {-0.074935, -0.735584, 0, 1.0};
Point(68) = {-0.073893, -0.735883, 0, 1.0};
Point(69) = {-0.069903, -0.736972, 0, 1.0};
Point(70) = {-0.065188, -0.738195, 0, 1.0};
Point(71) = {-0.059833, -0.739543, 0, 1.0};
Point(72) = {-0.053928, -0.740982, 0, 1.0};
Point(73) = {-0.047565, -0.742483, 0, 1.0};
Point(74) = {-0.040845, -0.743999, 0, 1.0};
Point(75) = {-0.033866, -0.745479, 0, 1.0};
Point(76) = {-0.026727, -0.746850, 0, 1.0};
Point(77) = {-0.019492, -0.748021, 0, 1.0};
Point(78) = {-0.012186, -0.748937, 0, 1.0};
Point(79) = {-0.004840, -0.749578, 0, 1.0};
Point(80) = {0.002499, -0.749931, 0, 1.0};
Point(81) = {0.009786, -0.750000, 0, 1.0};
Point(82) = {0.016964, -0.749795, 0, 1.0};
Point(83) = {0.023974, -0.749334, 0, 1.0};
Point(84) = {0.030747, -0.748631, 0, 1.0};
Point(85) = {0.037219, -0.747704, 0, 1.0};
Point(86) = {0.043330, -0.746569, 0, 1.0};
Point(87) = {0.049024, -0.745246, 0, 1.0};
Point(88) = {0.054246, -0.743757, 0, 1.0};
Point(89) = {0.058956, -0.742131, 0, 1.0};
Point(90) = {0.063110, -0.740395, 0, 1.0};
Point(91) = {0.066678, -0.738583, 0, 1.0};
Point(92) = {0.069632, -0.736738, 0, 1.0};
Point(93) = {0.071954, -0.734905, 0, 1.0};
Point(94) = {0.073628, -0.733141, 0, 1.0};
Point(95) = {0.074641, -0.731517, 0, 1.0};
Point(96) = {0.074898, -0.730783, 0, 1.0};
Point(97) = {0.074970, -0.730378, 0, 1.0};
Point(98) = {0.074982, -0.730127, 0, 1.0};
Point(99) = {0.074968, -0.729897, 0, 1.0};
Point(100) = {0.074948, -0.729791, 0, 1.0};
Point(101) = {0.074921, -0.729689, 0, 1.0};
Point(102) = {0.074883, -0.729599, 0, 1.0};
Point(103) = {0.074828, -0.729514, 0, 1.0};
Point(104) = {0.074759, -0.729431, 0, 1.0};
Point(105) = {0.074675, -0.729348, 0, 1.0};
Point(106) = {0.074474, -0.729185, 0, 1.0};
Point(107) = {0.074231, -0.729024, 0, 1.0};
Point(108) = {0.073793, -0.728786, 0, 1.0};
Point(109) = {0.072883, -0.728403, 0, 1.0};
Point(110) = {0.070401, -0.727717, 0, 1.0};
Point(111) = {0.067064, -0.727150, 0, 1.0};
Point(112) = {0.062911, -0.726698, 0, 1.0};
Point(113) = {0.057985, -0.726358, 0, 1.0};
Point(114) = {0.052348, -0.726113, 0, 1.0};
Point(115) = {0.046074, -0.725954, 0, 1.0};
Point(116) = {0.039242, -0.725877, 0, 1.0};
Point(117) = {0.031938, -0.725880, 0, 1.0};
Point(118) = {0.024255, -0.725956, 0, 1.0};
Point(119) = {0.016292, -0.726109, 0, 1.0};
Point(120) = {0.008147, -0.726341, 0, 1.0};
Point(121) = {-0.000078, -0.726662, 0, 1.0};
Point(122) = {-0.008278, -0.727085, 0, 1.0};
Point(123) = {-0.016347, -0.727655, 0, 1.0};
Point(124) = {-0.024258, -0.728435, 0, 1.0};
Point(125) = {-0.032023, -0.729405, 0, 1.0};
Point(126) = {-0.039621, -0.730497, 0, 1.0};
Point(127) = {-0.047024, -0.731613, 0, 1.0};
Point(128) = {-0.054135, -0.732606, 0, 1.0};
Point(129) = {-0.060787, -0.733376, 0, 1.0};
Point(130) = {-0.066806, -0.733874, 0, 1.0};
Point(131) = {-0.072014, -0.734083, 0, 1.0};
Point(132) = {-0.074967, -0.734069, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {36.00000000, 15.00000000, 0, 1.0};
Point(136) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
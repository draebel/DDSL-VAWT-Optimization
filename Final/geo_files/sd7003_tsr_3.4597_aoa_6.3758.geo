SetFactory("OpenCASCADE");

Point(1) = {0.111762, 0.728117, 0, 1.0};
Point(2) = {0.111292, 0.728216, 0, 1.0};
Point(3) = {0.109914, 0.728522, 0, 1.0};
Point(4) = {0.107693, 0.729039, 0, 1.0};
Point(5) = {0.104689, 0.729732, 0, 1.0};
Point(6) = {0.100929, 0.730571, 0, 1.0};
Point(7) = {0.096452, 0.731546, 0, 1.0};
Point(8) = {0.091313, 0.732656, 0, 1.0};
Point(9) = {0.085583, 0.733885, 0, 1.0};
Point(10) = {0.079335, 0.735217, 0, 1.0};
Point(11) = {0.072648, 0.736628, 0, 1.0};
Point(12) = {0.065606, 0.738098, 0, 1.0};
Point(13) = {0.058295, 0.739597, 0, 1.0};
Point(14) = {0.050803, 0.741094, 0, 1.0};
Point(15) = {0.043207, 0.742558, 0, 1.0};
Point(16) = {0.035594, 0.743960, 0, 1.0};
Point(17) = {0.028044, 0.745274, 0, 1.0};
Point(18) = {0.020634, 0.746470, 0, 1.0};
Point(19) = {0.013441, 0.747525, 0, 1.0};
Point(20) = {0.006531, 0.748413, 0, 1.0};
Point(21) = {-0.000033, 0.749118, 0, 1.0};
Point(22) = {-0.006190, 0.749623, 0, 1.0};
Point(23) = {-0.011888, 0.749919, 0, 1.0};
Point(24) = {-0.017084, 0.750000, 0, 1.0};
Point(25) = {-0.021735, 0.749863, 0, 1.0};
Point(26) = {-0.025813, 0.749515, 0, 1.0};
Point(27) = {-0.029294, 0.748967, 0, 1.0};
Point(28) = {-0.032164, 0.748239, 0, 1.0};
Point(29) = {-0.034416, 0.747366, 0, 1.0};
Point(30) = {-0.036040, 0.746401, 0, 1.0};
Point(31) = {-0.037012, 0.745402, 0, 1.0};
Point(32) = {-0.037268, 0.744489, 0, 1.0};
Point(33) = {-0.036717, 0.743590, 0, 1.0};
Point(34) = {-0.035390, 0.742620, 0, 1.0};
Point(35) = {-0.033336, 0.741676, 0, 1.0};
Point(36) = {-0.030532, 0.740786, 0, 1.0};
Point(37) = {-0.026977, 0.739941, 0, 1.0};
Point(38) = {-0.022705, 0.739128, 0, 1.0};
Point(39) = {-0.017761, 0.738351, 0, 1.0};
Point(40) = {-0.012196, 0.737610, 0, 1.0};
Point(41) = {-0.006060, 0.736906, 0, 1.0};
Point(42) = {0.000581, 0.736236, 0, 1.0};
Point(43) = {0.007658, 0.735597, 0, 1.0};
Point(44) = {0.015089, 0.734984, 0, 1.0};
Point(45) = {0.022788, 0.734395, 0, 1.0};
Point(46) = {0.030670, 0.733833, 0, 1.0};
Point(47) = {0.038644, 0.733299, 0, 1.0};
Point(48) = {0.046620, 0.732796, 0, 1.0};
Point(49) = {0.054511, 0.732326, 0, 1.0};
Point(50) = {0.062234, 0.731890, 0, 1.0};
Point(51) = {0.069710, 0.731477, 0, 1.0};
Point(52) = {0.076849, 0.731070, 0, 1.0};
Point(53) = {0.083554, 0.730661, 0, 1.0};
Point(54) = {0.089729, 0.730247, 0, 1.0};
Point(55) = {0.095290, 0.729833, 0, 1.0};
Point(56) = {0.100154, 0.729426, 0, 1.0};
Point(57) = {0.104247, 0.729035, 0, 1.0};
Point(58) = {0.107500, 0.728679, 0, 1.0};
Point(59) = {0.109858, 0.728385, 0, 1.0};
Point(60) = {0.111286, 0.728186, 0, 1.0};
Point(61) = {0.111764, 0.728116, 0, 1.0};
Point(62) = {-0.111762, -0.728117, 0, 1.0};
Point(63) = {-0.111292, -0.728216, 0, 1.0};
Point(64) = {-0.109914, -0.728522, 0, 1.0};
Point(65) = {-0.107693, -0.729039, 0, 1.0};
Point(66) = {-0.104689, -0.729732, 0, 1.0};
Point(67) = {-0.100929, -0.730571, 0, 1.0};
Point(68) = {-0.096452, -0.731546, 0, 1.0};
Point(69) = {-0.091313, -0.732656, 0, 1.0};
Point(70) = {-0.085583, -0.733885, 0, 1.0};
Point(71) = {-0.079335, -0.735217, 0, 1.0};
Point(72) = {-0.072648, -0.736628, 0, 1.0};
Point(73) = {-0.065606, -0.738098, 0, 1.0};
Point(74) = {-0.058295, -0.739597, 0, 1.0};
Point(75) = {-0.050803, -0.741094, 0, 1.0};
Point(76) = {-0.043207, -0.742558, 0, 1.0};
Point(77) = {-0.035594, -0.743960, 0, 1.0};
Point(78) = {-0.028044, -0.745274, 0, 1.0};
Point(79) = {-0.020634, -0.746470, 0, 1.0};
Point(80) = {-0.013441, -0.747525, 0, 1.0};
Point(81) = {-0.006531, -0.748413, 0, 1.0};
Point(82) = {0.000033, -0.749118, 0, 1.0};
Point(83) = {0.006190, -0.749623, 0, 1.0};
Point(84) = {0.011888, -0.749919, 0, 1.0};
Point(85) = {0.017084, -0.750000, 0, 1.0};
Point(86) = {0.021735, -0.749863, 0, 1.0};
Point(87) = {0.025813, -0.749515, 0, 1.0};
Point(88) = {0.029294, -0.748967, 0, 1.0};
Point(89) = {0.032164, -0.748239, 0, 1.0};
Point(90) = {0.034416, -0.747366, 0, 1.0};
Point(91) = {0.036040, -0.746401, 0, 1.0};
Point(92) = {0.037012, -0.745402, 0, 1.0};
Point(93) = {0.037268, -0.744489, 0, 1.0};
Point(94) = {0.036717, -0.743590, 0, 1.0};
Point(95) = {0.035390, -0.742620, 0, 1.0};
Point(96) = {0.033336, -0.741676, 0, 1.0};
Point(97) = {0.030532, -0.740786, 0, 1.0};
Point(98) = {0.026977, -0.739941, 0, 1.0};
Point(99) = {0.022705, -0.739128, 0, 1.0};
Point(100) = {0.017761, -0.738351, 0, 1.0};
Point(101) = {0.012196, -0.737610, 0, 1.0};
Point(102) = {0.006060, -0.736906, 0, 1.0};
Point(103) = {-0.000581, -0.736236, 0, 1.0};
Point(104) = {-0.007658, -0.735597, 0, 1.0};
Point(105) = {-0.015089, -0.734984, 0, 1.0};
Point(106) = {-0.022788, -0.734395, 0, 1.0};
Point(107) = {-0.030670, -0.733833, 0, 1.0};
Point(108) = {-0.038644, -0.733299, 0, 1.0};
Point(109) = {-0.046620, -0.732796, 0, 1.0};
Point(110) = {-0.054511, -0.732326, 0, 1.0};
Point(111) = {-0.062234, -0.731890, 0, 1.0};
Point(112) = {-0.069710, -0.731477, 0, 1.0};
Point(113) = {-0.076849, -0.731070, 0, 1.0};
Point(114) = {-0.083554, -0.730661, 0, 1.0};
Point(115) = {-0.089729, -0.730247, 0, 1.0};
Point(116) = {-0.095290, -0.729833, 0, 1.0};
Point(117) = {-0.100154, -0.729426, 0, 1.0};
Point(118) = {-0.104247, -0.729035, 0, 1.0};
Point(119) = {-0.107500, -0.728679, 0, 1.0};
Point(120) = {-0.109858, -0.728385, 0, 1.0};
Point(121) = {-0.111286, -0.728186, 0, 1.0};
Point(122) = {-0.111764, -0.728116, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111834, 0.728106, 0, 1.0};
Point(2) = {0.111363, 0.728205, 0, 1.0};
Point(3) = {0.109984, 0.728512, 0, 1.0};
Point(4) = {0.107762, 0.729029, 0, 1.0};
Point(5) = {0.104757, 0.729723, 0, 1.0};
Point(6) = {0.100995, 0.730561, 0, 1.0};
Point(7) = {0.096516, 0.731537, 0, 1.0};
Point(8) = {0.091374, 0.732648, 0, 1.0};
Point(9) = {0.085642, 0.733877, 0, 1.0};
Point(10) = {0.079391, 0.735210, 0, 1.0};
Point(11) = {0.072701, 0.736621, 0, 1.0};
Point(12) = {0.065655, 0.738093, 0, 1.0};
Point(13) = {0.058341, 0.739592, 0, 1.0};
Point(14) = {0.050845, 0.741090, 0, 1.0};
Point(15) = {0.043246, 0.742555, 0, 1.0};
Point(16) = {0.035629, 0.743957, 0, 1.0};
Point(17) = {0.028075, 0.745272, 0, 1.0};
Point(18) = {0.020662, 0.746469, 0, 1.0};
Point(19) = {0.013465, 0.747524, 0, 1.0};
Point(20) = {0.006552, 0.748412, 0, 1.0};
Point(21) = {-0.000015, 0.749117, 0, 1.0};
Point(22) = {-0.006176, 0.749623, 0, 1.0};
Point(23) = {-0.011876, 0.749919, 0, 1.0};
Point(24) = {-0.017074, 0.750000, 0, 1.0};
Point(25) = {-0.021727, 0.749863, 0, 1.0};
Point(26) = {-0.025808, 0.749515, 0, 1.0};
Point(27) = {-0.029290, 0.748966, 0, 1.0};
Point(28) = {-0.032161, 0.748238, 0, 1.0};
Point(29) = {-0.034415, 0.747365, 0, 1.0};
Point(30) = {-0.036040, 0.746399, 0, 1.0};
Point(31) = {-0.037012, 0.745400, 0, 1.0};
Point(32) = {-0.037268, 0.744486, 0, 1.0};
Point(33) = {-0.036716, 0.743587, 0, 1.0};
Point(34) = {-0.035389, 0.742617, 0, 1.0};
Point(35) = {-0.033334, 0.741672, 0, 1.0};
Point(36) = {-0.030529, 0.740782, 0, 1.0};
Point(37) = {-0.026972, 0.739936, 0, 1.0};
Point(38) = {-0.022698, 0.739123, 0, 1.0};
Point(39) = {-0.017751, 0.738345, 0, 1.0};
Point(40) = {-0.012184, 0.737604, 0, 1.0};
Point(41) = {-0.006045, 0.736900, 0, 1.0};
Point(42) = {0.000600, 0.736230, 0, 1.0};
Point(43) = {0.007679, 0.735590, 0, 1.0};
Point(44) = {0.015114, 0.734976, 0, 1.0};
Point(45) = {0.022817, 0.734387, 0, 1.0};
Point(46) = {0.030703, 0.733825, 0, 1.0};
Point(47) = {0.038681, 0.733291, 0, 1.0};
Point(48) = {0.046661, 0.732787, 0, 1.0};
Point(49) = {0.054555, 0.732317, 0, 1.0};
Point(50) = {0.062281, 0.731881, 0, 1.0};
Point(51) = {0.069761, 0.731468, 0, 1.0};
Point(52) = {0.076903, 0.731061, 0, 1.0};
Point(53) = {0.083612, 0.730651, 0, 1.0};
Point(54) = {0.089790, 0.730237, 0, 1.0};
Point(55) = {0.095354, 0.729824, 0, 1.0};
Point(56) = {0.100219, 0.729416, 0, 1.0};
Point(57) = {0.104315, 0.729025, 0, 1.0};
Point(58) = {0.107570, 0.728669, 0, 1.0};
Point(59) = {0.109928, 0.728375, 0, 1.0};
Point(60) = {0.111357, 0.728176, 0, 1.0};
Point(61) = {0.111835, 0.728106, 0, 1.0};
Point(62) = {-0.111834, -0.728106, 0, 1.0};
Point(63) = {-0.111363, -0.728205, 0, 1.0};
Point(64) = {-0.109984, -0.728512, 0, 1.0};
Point(65) = {-0.107762, -0.729029, 0, 1.0};
Point(66) = {-0.104757, -0.729723, 0, 1.0};
Point(67) = {-0.100995, -0.730561, 0, 1.0};
Point(68) = {-0.096516, -0.731537, 0, 1.0};
Point(69) = {-0.091374, -0.732648, 0, 1.0};
Point(70) = {-0.085642, -0.733877, 0, 1.0};
Point(71) = {-0.079391, -0.735210, 0, 1.0};
Point(72) = {-0.072701, -0.736621, 0, 1.0};
Point(73) = {-0.065655, -0.738093, 0, 1.0};
Point(74) = {-0.058341, -0.739592, 0, 1.0};
Point(75) = {-0.050845, -0.741090, 0, 1.0};
Point(76) = {-0.043246, -0.742555, 0, 1.0};
Point(77) = {-0.035629, -0.743957, 0, 1.0};
Point(78) = {-0.028075, -0.745272, 0, 1.0};
Point(79) = {-0.020662, -0.746469, 0, 1.0};
Point(80) = {-0.013465, -0.747524, 0, 1.0};
Point(81) = {-0.006552, -0.748412, 0, 1.0};
Point(82) = {0.000015, -0.749117, 0, 1.0};
Point(83) = {0.006176, -0.749623, 0, 1.0};
Point(84) = {0.011876, -0.749919, 0, 1.0};
Point(85) = {0.017074, -0.750000, 0, 1.0};
Point(86) = {0.021727, -0.749863, 0, 1.0};
Point(87) = {0.025808, -0.749515, 0, 1.0};
Point(88) = {0.029290, -0.748966, 0, 1.0};
Point(89) = {0.032161, -0.748238, 0, 1.0};
Point(90) = {0.034415, -0.747365, 0, 1.0};
Point(91) = {0.036040, -0.746399, 0, 1.0};
Point(92) = {0.037012, -0.745400, 0, 1.0};
Point(93) = {0.037268, -0.744486, 0, 1.0};
Point(94) = {0.036716, -0.743587, 0, 1.0};
Point(95) = {0.035389, -0.742617, 0, 1.0};
Point(96) = {0.033334, -0.741672, 0, 1.0};
Point(97) = {0.030529, -0.740782, 0, 1.0};
Point(98) = {0.026972, -0.739936, 0, 1.0};
Point(99) = {0.022698, -0.739123, 0, 1.0};
Point(100) = {0.017751, -0.738345, 0, 1.0};
Point(101) = {0.012184, -0.737604, 0, 1.0};
Point(102) = {0.006045, -0.736900, 0, 1.0};
Point(103) = {-0.000600, -0.736230, 0, 1.0};
Point(104) = {-0.007679, -0.735590, 0, 1.0};
Point(105) = {-0.015114, -0.734976, 0, 1.0};
Point(106) = {-0.022817, -0.734387, 0, 1.0};
Point(107) = {-0.030703, -0.733825, 0, 1.0};
Point(108) = {-0.038681, -0.733291, 0, 1.0};
Point(109) = {-0.046661, -0.732787, 0, 1.0};
Point(110) = {-0.054555, -0.732317, 0, 1.0};
Point(111) = {-0.062281, -0.731881, 0, 1.0};
Point(112) = {-0.069761, -0.731468, 0, 1.0};
Point(113) = {-0.076903, -0.731061, 0, 1.0};
Point(114) = {-0.083612, -0.730651, 0, 1.0};
Point(115) = {-0.089790, -0.730237, 0, 1.0};
Point(116) = {-0.095354, -0.729824, 0, 1.0};
Point(117) = {-0.100219, -0.729416, 0, 1.0};
Point(118) = {-0.104315, -0.729025, 0, 1.0};
Point(119) = {-0.107570, -0.728669, 0, 1.0};
Point(120) = {-0.109928, -0.728375, 0, 1.0};
Point(121) = {-0.111357, -0.728176, 0, 1.0};
Point(122) = {-0.111835, -0.728106, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
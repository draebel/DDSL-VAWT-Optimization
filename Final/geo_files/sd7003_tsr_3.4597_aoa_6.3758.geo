SetFactory("OpenCASCADE");

Point(1) = {0.074381, 0.735408, 0, 1.0};
Point(2) = {0.074068, 0.735474, 0, 1.0};
Point(3) = {0.073149, 0.735678, 0, 1.0};
Point(4) = {0.071668, 0.736023, 0, 1.0};
Point(5) = {0.069665, 0.736485, 0, 1.0};
Point(6) = {0.067158, 0.737044, 0, 1.0};
Point(7) = {0.064172, 0.737694, 0, 1.0};
Point(8) = {0.060745, 0.738435, 0, 1.0};
Point(9) = {0.056925, 0.739254, 0, 1.0};
Point(10) = {0.052759, 0.740142, 0, 1.0};
Point(11) = {0.048299, 0.741083, 0, 1.0};
Point(12) = {0.043603, 0.742064, 0, 1.0};
Point(13) = {0.038728, 0.743063, 0, 1.0};
Point(14) = {0.033732, 0.744061, 0, 1.0};
Point(15) = {0.028667, 0.745038, 0, 1.0};
Point(16) = {0.023591, 0.745972, 0, 1.0};
Point(17) = {0.018556, 0.746849, 0, 1.0};
Point(18) = {0.013615, 0.747646, 0, 1.0};
Point(19) = {0.008818, 0.748349, 0, 1.0};
Point(20) = {0.004210, 0.748942, 0, 1.0};
Point(21) = {-0.000166, 0.749412, 0, 1.0};
Point(22) = {-0.004272, 0.749749, 0, 1.0};
Point(23) = {-0.008072, 0.749946, 0, 1.0};
Point(24) = {-0.011536, 0.750000, 0, 1.0};
Point(25) = {-0.014638, 0.749909, 0, 1.0};
Point(26) = {-0.017357, 0.749676, 0, 1.0};
Point(27) = {-0.019678, 0.749311, 0, 1.0};
Point(28) = {-0.021592, 0.748825, 0, 1.0};
Point(29) = {-0.023094, 0.748244, 0, 1.0};
Point(30) = {-0.024177, 0.747600, 0, 1.0};
Point(31) = {-0.024825, 0.746934, 0, 1.0};
Point(32) = {-0.024996, 0.746325, 0, 1.0};
Point(33) = {-0.024628, 0.745725, 0, 1.0};
Point(34) = {-0.023743, 0.745079, 0, 1.0};
Point(35) = {-0.022374, 0.744449, 0, 1.0};
Point(36) = {-0.020504, 0.743856, 0, 1.0};
Point(37) = {-0.018133, 0.743292, 0, 1.0};
Point(38) = {-0.015285, 0.742750, 0, 1.0};
Point(39) = {-0.011988, 0.742232, 0, 1.0};
Point(40) = {-0.008277, 0.741738, 0, 1.0};
Point(41) = {-0.004186, 0.741269, 0, 1.0};
Point(42) = {0.000243, 0.740822, 0, 1.0};
Point(43) = {0.004962, 0.740395, 0, 1.0};
Point(44) = {0.009917, 0.739987, 0, 1.0};
Point(45) = {0.015051, 0.739594, 0, 1.0};
Point(46) = {0.020307, 0.739219, 0, 1.0};
Point(47) = {0.025625, 0.738863, 0, 1.0};
Point(48) = {0.030943, 0.738528, 0, 1.0};
Point(49) = {0.036205, 0.738214, 0, 1.0};
Point(50) = {0.041355, 0.737924, 0, 1.0};
Point(51) = {0.046340, 0.737648, 0, 1.0};
Point(52) = {0.051100, 0.737377, 0, 1.0};
Point(53) = {0.055572, 0.737104, 0, 1.0};
Point(54) = {0.059689, 0.736828, 0, 1.0};
Point(55) = {0.063398, 0.736552, 0, 1.0};
Point(56) = {0.066641, 0.736281, 0, 1.0};
Point(57) = {0.069370, 0.736020, 0, 1.0};
Point(58) = {0.071540, 0.735782, 0, 1.0};
Point(59) = {0.073112, 0.735587, 0, 1.0};
Point(60) = {0.074064, 0.735454, 0, 1.0};
Point(61) = {0.074382, 0.735407, 0, 1.0};
Point(62) = {-0.074381, -0.735408, 0, 1.0};
Point(63) = {-0.074068, -0.735474, 0, 1.0};
Point(64) = {-0.073149, -0.735678, 0, 1.0};
Point(65) = {-0.071668, -0.736023, 0, 1.0};
Point(66) = {-0.069665, -0.736485, 0, 1.0};
Point(67) = {-0.067158, -0.737044, 0, 1.0};
Point(68) = {-0.064172, -0.737694, 0, 1.0};
Point(69) = {-0.060745, -0.738435, 0, 1.0};
Point(70) = {-0.056925, -0.739254, 0, 1.0};
Point(71) = {-0.052759, -0.740142, 0, 1.0};
Point(72) = {-0.048299, -0.741083, 0, 1.0};
Point(73) = {-0.043603, -0.742064, 0, 1.0};
Point(74) = {-0.038728, -0.743063, 0, 1.0};
Point(75) = {-0.033732, -0.744061, 0, 1.0};
Point(76) = {-0.028667, -0.745038, 0, 1.0};
Point(77) = {-0.023591, -0.745972, 0, 1.0};
Point(78) = {-0.018556, -0.746849, 0, 1.0};
Point(79) = {-0.013615, -0.747646, 0, 1.0};
Point(80) = {-0.008818, -0.748349, 0, 1.0};
Point(81) = {-0.004210, -0.748942, 0, 1.0};
Point(82) = {0.000166, -0.749412, 0, 1.0};
Point(83) = {0.004272, -0.749749, 0, 1.0};
Point(84) = {0.008072, -0.749946, 0, 1.0};
Point(85) = {0.011536, -0.750000, 0, 1.0};
Point(86) = {0.014638, -0.749909, 0, 1.0};
Point(87) = {0.017357, -0.749676, 0, 1.0};
Point(88) = {0.019678, -0.749311, 0, 1.0};
Point(89) = {0.021592, -0.748825, 0, 1.0};
Point(90) = {0.023094, -0.748244, 0, 1.0};
Point(91) = {0.024177, -0.747600, 0, 1.0};
Point(92) = {0.024825, -0.746934, 0, 1.0};
Point(93) = {0.024996, -0.746325, 0, 1.0};
Point(94) = {0.024628, -0.745725, 0, 1.0};
Point(95) = {0.023743, -0.745079, 0, 1.0};
Point(96) = {0.022374, -0.744449, 0, 1.0};
Point(97) = {0.020504, -0.743856, 0, 1.0};
Point(98) = {0.018133, -0.743292, 0, 1.0};
Point(99) = {0.015285, -0.742750, 0, 1.0};
Point(100) = {0.011988, -0.742232, 0, 1.0};
Point(101) = {0.008277, -0.741738, 0, 1.0};
Point(102) = {0.004186, -0.741269, 0, 1.0};
Point(103) = {-0.000243, -0.740822, 0, 1.0};
Point(104) = {-0.004962, -0.740395, 0, 1.0};
Point(105) = {-0.009917, -0.739987, 0, 1.0};
Point(106) = {-0.015051, -0.739594, 0, 1.0};
Point(107) = {-0.020307, -0.739219, 0, 1.0};
Point(108) = {-0.025625, -0.738863, 0, 1.0};
Point(109) = {-0.030943, -0.738528, 0, 1.0};
Point(110) = {-0.036205, -0.738214, 0, 1.0};
Point(111) = {-0.041355, -0.737924, 0, 1.0};
Point(112) = {-0.046340, -0.737648, 0, 1.0};
Point(113) = {-0.051100, -0.737377, 0, 1.0};
Point(114) = {-0.055572, -0.737104, 0, 1.0};
Point(115) = {-0.059689, -0.736828, 0, 1.0};
Point(116) = {-0.063398, -0.736552, 0, 1.0};
Point(117) = {-0.066641, -0.736281, 0, 1.0};
Point(118) = {-0.069370, -0.736020, 0, 1.0};
Point(119) = {-0.071540, -0.735782, 0, 1.0};
Point(120) = {-0.073112, -0.735587, 0, 1.0};
Point(121) = {-0.074064, -0.735454, 0, 1.0};
Point(122) = {-0.074382, -0.735407, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149371, 0.741338, 0, 1.0};
Point(2) = {0.148786, 0.741372, 0, 1.0};
Point(3) = {0.147035, 0.741472, 0, 1.0};
Point(4) = {0.144143, 0.741651, 0, 1.0};
Point(5) = {0.140162, 0.741938, 0, 1.0};
Point(6) = {0.135161, 0.742335, 0, 1.0};
Point(7) = {0.129219, 0.742836, 0, 1.0};
Point(8) = {0.122420, 0.743433, 0, 1.0};
Point(9) = {0.114860, 0.744114, 0, 1.0};
Point(10) = {0.106639, 0.744860, 0, 1.0};
Point(11) = {0.097868, 0.745655, 0, 1.0};
Point(12) = {0.088660, 0.746474, 0, 1.0};
Point(13) = {0.079136, 0.747292, 0, 1.0};
Point(14) = {0.069417, 0.748076, 0, 1.0};
Point(15) = {0.059631, 0.748792, 0, 1.0};
Point(16) = {0.049901, 0.749397, 0, 1.0};
Point(17) = {0.040351, 0.749829, 0, 1.0};
Point(18) = {0.031070, 0.750000, 0, 1.0};
Point(19) = {0.022097, 0.749860, 0, 1.0};
Point(20) = {0.013473, 0.749385, 0, 1.0};
Point(21) = {0.005236, 0.748568, 0, 1.0};
Point(22) = {-0.002584, 0.747420, 0, 1.0};
Point(23) = {-0.009966, 0.745972, 0, 1.0};
Point(24) = {-0.016868, 0.744288, 0, 1.0};
Point(25) = {-0.023230, 0.742422, 0, 1.0};
Point(26) = {-0.028994, 0.740419, 0, 1.0};
Point(27) = {-0.034111, 0.738318, 0, 1.0};
Point(28) = {-0.038543, 0.736168, 0, 1.0};
Point(29) = {-0.042260, 0.734015, 0, 1.0};
Point(30) = {-0.045244, 0.731908, 0, 1.0};
Point(31) = {-0.047486, 0.729902, 0, 1.0};
Point(32) = {-0.048997, 0.728060, 0, 1.0};
Point(33) = {-0.049805, 0.726467, 0, 1.0};
Point(34) = {-0.049964, 0.725283, 0, 1.0};
Point(35) = {-0.049290, 0.724726, 0, 1.0};
Point(36) = {-0.047652, 0.724742, 0, 1.0};
Point(37) = {-0.045099, 0.725465, 0, 1.0};
Point(38) = {-0.041505, 0.726888, 0, 1.0};
Point(39) = {-0.037239, 0.729007, 0, 1.0};
Point(40) = {-0.032925, 0.731720, 0, 1.0};
Point(41) = {-0.028238, 0.735072, 0, 1.0};
Point(42) = {-0.022960, 0.738669, 0, 1.0};
Point(43) = {-0.016847, 0.741928, 0, 1.0};
Point(44) = {-0.009848, 0.744587, 0, 1.0};
Point(45) = {-0.002510, 0.746415, 0, 1.0};
Point(46) = {0.005323, 0.747579, 0, 1.0};
Point(47) = {0.013658, 0.748322, 0, 1.0};
Point(48) = {0.022298, 0.748715, 0, 1.0};
Point(49) = {0.031166, 0.748812, 0, 1.0};
Point(50) = {0.040647, 0.748671, 0, 1.0};
Point(51) = {0.050193, 0.748321, 0, 1.0};
Point(52) = {0.059717, 0.747792, 0, 1.0};
Point(53) = {0.069636, 0.747090, 0, 1.0};
Point(54) = {0.079339, 0.746301, 0, 1.0};
Point(55) = {0.088731, 0.745485, 0, 1.0};
Point(56) = {0.098024, 0.744663, 0, 1.0};
Point(57) = {0.106792, 0.743871, 0, 1.0};
Point(58) = {0.114941, 0.743115, 0, 1.0};
Point(59) = {0.122537, 0.742409, 0, 1.0};
Point(60) = {0.129324, 0.741867, 0, 1.0};
Point(61) = {0.135230, 0.741538, 0, 1.0};
Point(62) = {0.140241, 0.741397, 0, 1.0};
Point(63) = {0.144199, 0.741353, 0, 1.0};
Point(64) = {0.147061, 0.741341, 0, 1.0};
Point(65) = {0.148791, 0.741339, 0, 1.0};
Point(66) = {-0.149371, -0.741338, 0, 1.0};
Point(67) = {-0.148786, -0.741372, 0, 1.0};
Point(68) = {-0.147035, -0.741472, 0, 1.0};
Point(69) = {-0.144143, -0.741651, 0, 1.0};
Point(70) = {-0.140162, -0.741938, 0, 1.0};
Point(71) = {-0.135161, -0.742335, 0, 1.0};
Point(72) = {-0.129219, -0.742836, 0, 1.0};
Point(73) = {-0.122420, -0.743433, 0, 1.0};
Point(74) = {-0.114860, -0.744114, 0, 1.0};
Point(75) = {-0.106639, -0.744860, 0, 1.0};
Point(76) = {-0.097868, -0.745655, 0, 1.0};
Point(77) = {-0.088660, -0.746474, 0, 1.0};
Point(78) = {-0.079136, -0.747292, 0, 1.0};
Point(79) = {-0.069417, -0.748076, 0, 1.0};
Point(80) = {-0.059631, -0.748792, 0, 1.0};
Point(81) = {-0.049901, -0.749397, 0, 1.0};
Point(82) = {-0.040351, -0.749829, 0, 1.0};
Point(83) = {-0.031070, -0.750000, 0, 1.0};
Point(84) = {-0.022097, -0.749860, 0, 1.0};
Point(85) = {-0.013473, -0.749385, 0, 1.0};
Point(86) = {-0.005236, -0.748568, 0, 1.0};
Point(87) = {0.002584, -0.747420, 0, 1.0};
Point(88) = {0.009966, -0.745972, 0, 1.0};
Point(89) = {0.016868, -0.744288, 0, 1.0};
Point(90) = {0.023230, -0.742422, 0, 1.0};
Point(91) = {0.028994, -0.740419, 0, 1.0};
Point(92) = {0.034111, -0.738318, 0, 1.0};
Point(93) = {0.038543, -0.736168, 0, 1.0};
Point(94) = {0.042260, -0.734015, 0, 1.0};
Point(95) = {0.045244, -0.731908, 0, 1.0};
Point(96) = {0.047486, -0.729902, 0, 1.0};
Point(97) = {0.048997, -0.728060, 0, 1.0};
Point(98) = {0.049805, -0.726467, 0, 1.0};
Point(99) = {0.049964, -0.725283, 0, 1.0};
Point(100) = {0.049290, -0.724726, 0, 1.0};
Point(101) = {0.047652, -0.724742, 0, 1.0};
Point(102) = {0.045099, -0.725465, 0, 1.0};
Point(103) = {0.041505, -0.726888, 0, 1.0};
Point(104) = {0.037239, -0.729007, 0, 1.0};
Point(105) = {0.032925, -0.731720, 0, 1.0};
Point(106) = {0.028238, -0.735072, 0, 1.0};
Point(107) = {0.022960, -0.738669, 0, 1.0};
Point(108) = {0.016847, -0.741928, 0, 1.0};
Point(109) = {0.009848, -0.744587, 0, 1.0};
Point(110) = {0.002510, -0.746415, 0, 1.0};
Point(111) = {-0.005323, -0.747579, 0, 1.0};
Point(112) = {-0.013658, -0.748322, 0, 1.0};
Point(113) = {-0.022298, -0.748715, 0, 1.0};
Point(114) = {-0.031166, -0.748812, 0, 1.0};
Point(115) = {-0.040647, -0.748671, 0, 1.0};
Point(116) = {-0.050193, -0.748321, 0, 1.0};
Point(117) = {-0.059717, -0.747792, 0, 1.0};
Point(118) = {-0.069636, -0.747090, 0, 1.0};
Point(119) = {-0.079339, -0.746301, 0, 1.0};
Point(120) = {-0.088731, -0.745485, 0, 1.0};
Point(121) = {-0.098024, -0.744663, 0, 1.0};
Point(122) = {-0.106792, -0.743871, 0, 1.0};
Point(123) = {-0.114941, -0.743115, 0, 1.0};
Point(124) = {-0.122537, -0.742409, 0, 1.0};
Point(125) = {-0.129324, -0.741867, 0, 1.0};
Point(126) = {-0.135230, -0.741538, 0, 1.0};
Point(127) = {-0.140241, -0.741397, 0, 1.0};
Point(128) = {-0.144199, -0.741353, 0, 1.0};
Point(129) = {-0.147061, -0.741341, 0, 1.0};
Point(130) = {-0.148791, -0.741339, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112104, 0.743505, 0, 1.0};
Point(2) = {0.111666, 0.743530, 0, 1.0};
Point(3) = {0.110352, 0.743604, 0, 1.0};
Point(4) = {0.108184, 0.743739, 0, 1.0};
Point(5) = {0.105198, 0.743954, 0, 1.0};
Point(6) = {0.101448, 0.744252, 0, 1.0};
Point(7) = {0.096991, 0.744627, 0, 1.0};
Point(8) = {0.091893, 0.745075, 0, 1.0};
Point(9) = {0.086224, 0.745586, 0, 1.0};
Point(10) = {0.080058, 0.746146, 0, 1.0};
Point(11) = {0.073481, 0.746742, 0, 1.0};
Point(12) = {0.066576, 0.747356, 0, 1.0};
Point(13) = {0.059433, 0.747969, 0, 1.0};
Point(14) = {0.052145, 0.748557, 0, 1.0};
Point(15) = {0.044806, 0.749094, 0, 1.0};
Point(16) = {0.037509, 0.749548, 0, 1.0};
Point(17) = {0.030347, 0.749872, 0, 1.0};
Point(18) = {0.023387, 0.750000, 0, 1.0};
Point(19) = {0.016658, 0.749895, 0, 1.0};
Point(20) = {0.010191, 0.749539, 0, 1.0};
Point(21) = {0.004014, 0.748926, 0, 1.0};
Point(22) = {-0.001850, 0.748065, 0, 1.0};
Point(23) = {-0.007387, 0.746980, 0, 1.0};
Point(24) = {-0.012563, 0.745716, 0, 1.0};
Point(25) = {-0.017334, 0.744317, 0, 1.0};
Point(26) = {-0.021656, 0.742815, 0, 1.0};
Point(27) = {-0.025494, 0.741240, 0, 1.0};
Point(28) = {-0.028817, 0.739627, 0, 1.0};
Point(29) = {-0.031605, 0.738012, 0, 1.0};
Point(30) = {-0.033843, 0.736432, 0, 1.0};
Point(31) = {-0.035524, 0.734928, 0, 1.0};
Point(32) = {-0.036657, 0.733547, 0, 1.0};
Point(33) = {-0.037263, 0.732352, 0, 1.0};
Point(34) = {-0.037382, 0.731464, 0, 1.0};
Point(35) = {-0.036876, 0.731047, 0, 1.0};
Point(36) = {-0.035648, 0.731059, 0, 1.0};
Point(37) = {-0.033734, 0.731600, 0, 1.0};
Point(38) = {-0.031038, 0.732668, 0, 1.0};
Point(39) = {-0.027839, 0.734257, 0, 1.0};
Point(40) = {-0.024604, 0.736291, 0, 1.0};
Point(41) = {-0.021089, 0.738805, 0, 1.0};
Point(42) = {-0.017131, 0.741503, 0, 1.0};
Point(43) = {-0.012547, 0.743947, 0, 1.0};
Point(44) = {-0.007298, 0.745941, 0, 1.0};
Point(45) = {-0.001795, 0.747311, 0, 1.0};
Point(46) = {0.004079, 0.748185, 0, 1.0};
Point(47) = {0.010330, 0.748742, 0, 1.0};
Point(48) = {0.016809, 0.749036, 0, 1.0};
Point(49) = {0.023460, 0.749109, 0, 1.0};
Point(50) = {0.030570, 0.749003, 0, 1.0};
Point(51) = {0.037728, 0.748741, 0, 1.0};
Point(52) = {0.044870, 0.748344, 0, 1.0};
Point(53) = {0.052309, 0.747818, 0, 1.0};
Point(54) = {0.059585, 0.747226, 0, 1.0};
Point(55) = {0.066629, 0.746614, 0, 1.0};
Point(56) = {0.073597, 0.745997, 0, 1.0};
Point(57) = {0.080173, 0.745404, 0, 1.0};
Point(58) = {0.086285, 0.744837, 0, 1.0};
Point(59) = {0.091981, 0.744307, 0, 1.0};
Point(60) = {0.097070, 0.743901, 0, 1.0};
Point(61) = {0.101500, 0.743654, 0, 1.0};
Point(62) = {0.105258, 0.743548, 0, 1.0};
Point(63) = {0.108226, 0.743515, 0, 1.0};
Point(64) = {0.110372, 0.743507, 0, 1.0};
Point(65) = {0.111669, 0.743505, 0, 1.0};
Point(66) = {-0.112104, -0.743505, 0, 1.0};
Point(67) = {-0.111666, -0.743530, 0, 1.0};
Point(68) = {-0.110352, -0.743604, 0, 1.0};
Point(69) = {-0.108184, -0.743739, 0, 1.0};
Point(70) = {-0.105198, -0.743954, 0, 1.0};
Point(71) = {-0.101448, -0.744252, 0, 1.0};
Point(72) = {-0.096991, -0.744627, 0, 1.0};
Point(73) = {-0.091893, -0.745075, 0, 1.0};
Point(74) = {-0.086224, -0.745586, 0, 1.0};
Point(75) = {-0.080058, -0.746146, 0, 1.0};
Point(76) = {-0.073481, -0.746742, 0, 1.0};
Point(77) = {-0.066576, -0.747356, 0, 1.0};
Point(78) = {-0.059433, -0.747969, 0, 1.0};
Point(79) = {-0.052145, -0.748557, 0, 1.0};
Point(80) = {-0.044806, -0.749094, 0, 1.0};
Point(81) = {-0.037509, -0.749548, 0, 1.0};
Point(82) = {-0.030347, -0.749872, 0, 1.0};
Point(83) = {-0.023387, -0.750000, 0, 1.0};
Point(84) = {-0.016658, -0.749895, 0, 1.0};
Point(85) = {-0.010191, -0.749539, 0, 1.0};
Point(86) = {-0.004014, -0.748926, 0, 1.0};
Point(87) = {0.001850, -0.748065, 0, 1.0};
Point(88) = {0.007387, -0.746980, 0, 1.0};
Point(89) = {0.012563, -0.745716, 0, 1.0};
Point(90) = {0.017334, -0.744317, 0, 1.0};
Point(91) = {0.021656, -0.742815, 0, 1.0};
Point(92) = {0.025494, -0.741240, 0, 1.0};
Point(93) = {0.028817, -0.739627, 0, 1.0};
Point(94) = {0.031605, -0.738012, 0, 1.0};
Point(95) = {0.033843, -0.736432, 0, 1.0};
Point(96) = {0.035524, -0.734928, 0, 1.0};
Point(97) = {0.036657, -0.733547, 0, 1.0};
Point(98) = {0.037263, -0.732352, 0, 1.0};
Point(99) = {0.037382, -0.731464, 0, 1.0};
Point(100) = {0.036876, -0.731047, 0, 1.0};
Point(101) = {0.035648, -0.731059, 0, 1.0};
Point(102) = {0.033734, -0.731600, 0, 1.0};
Point(103) = {0.031038, -0.732668, 0, 1.0};
Point(104) = {0.027839, -0.734257, 0, 1.0};
Point(105) = {0.024604, -0.736291, 0, 1.0};
Point(106) = {0.021089, -0.738805, 0, 1.0};
Point(107) = {0.017131, -0.741503, 0, 1.0};
Point(108) = {0.012547, -0.743947, 0, 1.0};
Point(109) = {0.007298, -0.745941, 0, 1.0};
Point(110) = {0.001795, -0.747311, 0, 1.0};
Point(111) = {-0.004079, -0.748185, 0, 1.0};
Point(112) = {-0.010330, -0.748742, 0, 1.0};
Point(113) = {-0.016809, -0.749036, 0, 1.0};
Point(114) = {-0.023460, -0.749109, 0, 1.0};
Point(115) = {-0.030570, -0.749003, 0, 1.0};
Point(116) = {-0.037728, -0.748741, 0, 1.0};
Point(117) = {-0.044870, -0.748344, 0, 1.0};
Point(118) = {-0.052309, -0.747818, 0, 1.0};
Point(119) = {-0.059585, -0.747226, 0, 1.0};
Point(120) = {-0.066629, -0.746614, 0, 1.0};
Point(121) = {-0.073597, -0.745997, 0, 1.0};
Point(122) = {-0.080173, -0.745404, 0, 1.0};
Point(123) = {-0.086285, -0.744837, 0, 1.0};
Point(124) = {-0.091981, -0.744307, 0, 1.0};
Point(125) = {-0.097070, -0.743901, 0, 1.0};
Point(126) = {-0.101500, -0.743654, 0, 1.0};
Point(127) = {-0.105258, -0.743548, 0, 1.0};
Point(128) = {-0.108226, -0.743515, 0, 1.0};
Point(129) = {-0.110372, -0.743507, 0, 1.0};
Point(130) = {-0.111669, -0.743505, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
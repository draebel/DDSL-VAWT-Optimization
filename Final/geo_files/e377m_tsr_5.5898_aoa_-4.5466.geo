SetFactory("OpenCASCADE");

Point(1) = {0.074752, 0.743503, 0, 1.0};
Point(2) = {0.074313, 0.743529, 0, 1.0};
Point(3) = {0.073000, 0.743603, 0, 1.0};
Point(4) = {0.070831, 0.743738, 0, 1.0};
Point(5) = {0.067845, 0.743953, 0, 1.0};
Point(6) = {0.064093, 0.744251, 0, 1.0};
Point(7) = {0.059636, 0.744626, 0, 1.0};
Point(8) = {0.054537, 0.745074, 0, 1.0};
Point(9) = {0.048866, 0.745585, 0, 1.0};
Point(10) = {0.042700, 0.746145, 0, 1.0};
Point(11) = {0.036121, 0.746741, 0, 1.0};
Point(12) = {0.029215, 0.747355, 0, 1.0};
Point(13) = {0.022070, 0.747969, 0, 1.0};
Point(14) = {0.014781, 0.748557, 0, 1.0};
Point(15) = {0.007441, 0.749094, 0, 1.0};
Point(16) = {0.000142, 0.749548, 0, 1.0};
Point(17) = {-0.007021, 0.749872, 0, 1.0};
Point(18) = {-0.013983, 0.750000, 0, 1.0};
Point(19) = {-0.020713, 0.749895, 0, 1.0};
Point(20) = {-0.027181, 0.749539, 0, 1.0};
Point(21) = {-0.033360, 0.748926, 0, 1.0};
Point(22) = {-0.039225, 0.748065, 0, 1.0};
Point(23) = {-0.044763, 0.746979, 0, 1.0};
Point(24) = {-0.049940, 0.745716, 0, 1.0};
Point(25) = {-0.054712, 0.744316, 0, 1.0};
Point(26) = {-0.059035, 0.742813, 0, 1.0};
Point(27) = {-0.062873, 0.741238, 0, 1.0};
Point(28) = {-0.066197, 0.739625, 0, 1.0};
Point(29) = {-0.068985, 0.738010, 0, 1.0};
Point(30) = {-0.071224, 0.736429, 0, 1.0};
Point(31) = {-0.072906, 0.734925, 0, 1.0};
Point(32) = {-0.074039, 0.733543, 0, 1.0};
Point(33) = {-0.074645, 0.732348, 0, 1.0};
Point(34) = {-0.074764, 0.731460, 0, 1.0};
Point(35) = {-0.074258, 0.731043, 0, 1.0};
Point(36) = {-0.073030, 0.731055, 0, 1.0};
Point(37) = {-0.071115, 0.731597, 0, 1.0};
Point(38) = {-0.068419, 0.732664, 0, 1.0};
Point(39) = {-0.065219, 0.734254, 0, 1.0};
Point(40) = {-0.061983, 0.736288, 0, 1.0};
Point(41) = {-0.058468, 0.738803, 0, 1.0};
Point(42) = {-0.054509, 0.741501, 0, 1.0};
Point(43) = {-0.049924, 0.743946, 0, 1.0};
Point(44) = {-0.044674, 0.745940, 0, 1.0};
Point(45) = {-0.039170, 0.747311, 0, 1.0};
Point(46) = {-0.033295, 0.748184, 0, 1.0};
Point(47) = {-0.027043, 0.748742, 0, 1.0};
Point(48) = {-0.020562, 0.749036, 0, 1.0};
Point(49) = {-0.013910, 0.749109, 0, 1.0};
Point(50) = {-0.006799, 0.749003, 0, 1.0};
Point(51) = {0.000361, 0.748740, 0, 1.0};
Point(52) = {0.007505, 0.748344, 0, 1.0};
Point(53) = {0.014945, 0.747817, 0, 1.0};
Point(54) = {0.022223, 0.747225, 0, 1.0};
Point(55) = {0.029268, 0.746613, 0, 1.0};
Point(56) = {0.036238, 0.745997, 0, 1.0};
Point(57) = {0.042815, 0.745403, 0, 1.0};
Point(58) = {0.048927, 0.744836, 0, 1.0};
Point(59) = {0.054625, 0.744306, 0, 1.0};
Point(60) = {0.059715, 0.743900, 0, 1.0};
Point(61) = {0.064146, 0.743653, 0, 1.0};
Point(62) = {0.067904, 0.743547, 0, 1.0};
Point(63) = {0.070873, 0.743514, 0, 1.0};
Point(64) = {0.073020, 0.743505, 0, 1.0};
Point(65) = {0.074317, 0.743503, 0, 1.0};
Point(66) = {-0.074752, -0.743503, 0, 1.0};
Point(67) = {-0.074313, -0.743529, 0, 1.0};
Point(68) = {-0.073000, -0.743603, 0, 1.0};
Point(69) = {-0.070831, -0.743738, 0, 1.0};
Point(70) = {-0.067845, -0.743953, 0, 1.0};
Point(71) = {-0.064093, -0.744251, 0, 1.0};
Point(72) = {-0.059636, -0.744626, 0, 1.0};
Point(73) = {-0.054537, -0.745074, 0, 1.0};
Point(74) = {-0.048866, -0.745585, 0, 1.0};
Point(75) = {-0.042700, -0.746145, 0, 1.0};
Point(76) = {-0.036121, -0.746741, 0, 1.0};
Point(77) = {-0.029215, -0.747355, 0, 1.0};
Point(78) = {-0.022070, -0.747969, 0, 1.0};
Point(79) = {-0.014781, -0.748557, 0, 1.0};
Point(80) = {-0.007441, -0.749094, 0, 1.0};
Point(81) = {-0.000142, -0.749548, 0, 1.0};
Point(82) = {0.007021, -0.749872, 0, 1.0};
Point(83) = {0.013983, -0.750000, 0, 1.0};
Point(84) = {0.020713, -0.749895, 0, 1.0};
Point(85) = {0.027181, -0.749539, 0, 1.0};
Point(86) = {0.033360, -0.748926, 0, 1.0};
Point(87) = {0.039225, -0.748065, 0, 1.0};
Point(88) = {0.044763, -0.746979, 0, 1.0};
Point(89) = {0.049940, -0.745716, 0, 1.0};
Point(90) = {0.054712, -0.744316, 0, 1.0};
Point(91) = {0.059035, -0.742813, 0, 1.0};
Point(92) = {0.062873, -0.741238, 0, 1.0};
Point(93) = {0.066197, -0.739625, 0, 1.0};
Point(94) = {0.068985, -0.738010, 0, 1.0};
Point(95) = {0.071224, -0.736429, 0, 1.0};
Point(96) = {0.072906, -0.734925, 0, 1.0};
Point(97) = {0.074039, -0.733543, 0, 1.0};
Point(98) = {0.074645, -0.732348, 0, 1.0};
Point(99) = {0.074764, -0.731460, 0, 1.0};
Point(100) = {0.074258, -0.731043, 0, 1.0};
Point(101) = {0.073030, -0.731055, 0, 1.0};
Point(102) = {0.071115, -0.731597, 0, 1.0};
Point(103) = {0.068419, -0.732664, 0, 1.0};
Point(104) = {0.065219, -0.734254, 0, 1.0};
Point(105) = {0.061983, -0.736288, 0, 1.0};
Point(106) = {0.058468, -0.738803, 0, 1.0};
Point(107) = {0.054509, -0.741501, 0, 1.0};
Point(108) = {0.049924, -0.743946, 0, 1.0};
Point(109) = {0.044674, -0.745940, 0, 1.0};
Point(110) = {0.039170, -0.747311, 0, 1.0};
Point(111) = {0.033295, -0.748184, 0, 1.0};
Point(112) = {0.027043, -0.748742, 0, 1.0};
Point(113) = {0.020562, -0.749036, 0, 1.0};
Point(114) = {0.013910, -0.749109, 0, 1.0};
Point(115) = {0.006799, -0.749003, 0, 1.0};
Point(116) = {-0.000361, -0.748740, 0, 1.0};
Point(117) = {-0.007505, -0.748344, 0, 1.0};
Point(118) = {-0.014945, -0.747817, 0, 1.0};
Point(119) = {-0.022223, -0.747225, 0, 1.0};
Point(120) = {-0.029268, -0.746613, 0, 1.0};
Point(121) = {-0.036238, -0.745997, 0, 1.0};
Point(122) = {-0.042815, -0.745403, 0, 1.0};
Point(123) = {-0.048927, -0.744836, 0, 1.0};
Point(124) = {-0.054625, -0.744306, 0, 1.0};
Point(125) = {-0.059715, -0.743900, 0, 1.0};
Point(126) = {-0.064146, -0.743653, 0, 1.0};
Point(127) = {-0.067904, -0.743547, 0, 1.0};
Point(128) = {-0.070873, -0.743514, 0, 1.0};
Point(129) = {-0.073020, -0.743505, 0, 1.0};
Point(130) = {-0.074317, -0.743503, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
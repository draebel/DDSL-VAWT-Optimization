SetFactory("OpenCASCADE");

Point(1) = {0.074685, 0.745669, 0, 1.0};
Point(2) = {0.074393, 0.745686, 0, 1.0};
Point(3) = {0.073517, 0.745736, 0, 1.0};
Point(4) = {0.072072, 0.745826, 0, 1.0};
Point(5) = {0.070081, 0.745969, 0, 1.0};
Point(6) = {0.067580, 0.746168, 0, 1.0};
Point(7) = {0.064609, 0.746418, 0, 1.0};
Point(8) = {0.061210, 0.746716, 0, 1.0};
Point(9) = {0.057430, 0.747057, 0, 1.0};
Point(10) = {0.053319, 0.747430, 0, 1.0};
Point(11) = {0.048934, 0.747828, 0, 1.0};
Point(12) = {0.044330, 0.748237, 0, 1.0};
Point(13) = {0.039568, 0.748646, 0, 1.0};
Point(14) = {0.034708, 0.749038, 0, 1.0};
Point(15) = {0.029816, 0.749396, 0, 1.0};
Point(16) = {0.024950, 0.749698, 0, 1.0};
Point(17) = {0.020175, 0.749915, 0, 1.0};
Point(18) = {0.015535, 0.750000, 0, 1.0};
Point(19) = {0.011048, 0.749930, 0, 1.0};
Point(20) = {0.006737, 0.749693, 0, 1.0};
Point(21) = {0.002618, 0.749284, 0, 1.0};
Point(22) = {-0.001292, 0.748710, 0, 1.0};
Point(23) = {-0.004983, 0.747986, 0, 1.0};
Point(24) = {-0.008434, 0.747144, 0, 1.0};
Point(25) = {-0.011615, 0.746211, 0, 1.0};
Point(26) = {-0.014497, 0.745209, 0, 1.0};
Point(27) = {-0.017056, 0.744159, 0, 1.0};
Point(28) = {-0.019271, 0.743084, 0, 1.0};
Point(29) = {-0.021130, 0.742007, 0, 1.0};
Point(30) = {-0.022622, 0.740954, 0, 1.0};
Point(31) = {-0.023743, 0.739951, 0, 1.0};
Point(32) = {-0.024499, 0.739030, 0, 1.0};
Point(33) = {-0.024903, 0.738233, 0, 1.0};
Point(34) = {-0.024982, 0.737641, 0, 1.0};
Point(35) = {-0.024645, 0.737363, 0, 1.0};
Point(36) = {-0.023826, 0.737371, 0, 1.0};
Point(37) = {-0.022550, 0.737732, 0, 1.0};
Point(38) = {-0.020752, 0.738444, 0, 1.0};
Point(39) = {-0.018620, 0.739504, 0, 1.0};
Point(40) = {-0.016462, 0.740860, 0, 1.0};
Point(41) = {-0.014119, 0.742536, 0, 1.0};
Point(42) = {-0.011480, 0.744335, 0, 1.0};
Point(43) = {-0.008424, 0.745964, 0, 1.0};
Point(44) = {-0.004924, 0.747294, 0, 1.0};
Point(45) = {-0.001255, 0.748207, 0, 1.0};
Point(46) = {0.002661, 0.748790, 0, 1.0};
Point(47) = {0.006829, 0.749161, 0, 1.0};
Point(48) = {0.011149, 0.749357, 0, 1.0};
Point(49) = {0.015583, 0.749406, 0, 1.0};
Point(50) = {0.020324, 0.749336, 0, 1.0};
Point(51) = {0.025097, 0.749160, 0, 1.0};
Point(52) = {0.029858, 0.748896, 0, 1.0};
Point(53) = {0.034818, 0.748545, 0, 1.0};
Point(54) = {0.039669, 0.748150, 0, 1.0};
Point(55) = {0.044366, 0.747742, 0, 1.0};
Point(56) = {0.049012, 0.747331, 0, 1.0};
Point(57) = {0.053396, 0.746936, 0, 1.0};
Point(58) = {0.057471, 0.746557, 0, 1.0};
Point(59) = {0.061269, 0.746204, 0, 1.0};
Point(60) = {0.064662, 0.745934, 0, 1.0};
Point(61) = {0.067615, 0.745769, 0, 1.0};
Point(62) = {0.070121, 0.745698, 0, 1.0};
Point(63) = {0.072100, 0.745676, 0, 1.0};
Point(64) = {0.073531, 0.745671, 0, 1.0};
Point(65) = {0.074395, 0.745669, 0, 1.0};
Point(66) = {-0.074685, -0.745669, 0, 1.0};
Point(67) = {-0.074393, -0.745686, 0, 1.0};
Point(68) = {-0.073517, -0.745736, 0, 1.0};
Point(69) = {-0.072072, -0.745826, 0, 1.0};
Point(70) = {-0.070081, -0.745969, 0, 1.0};
Point(71) = {-0.067580, -0.746168, 0, 1.0};
Point(72) = {-0.064609, -0.746418, 0, 1.0};
Point(73) = {-0.061210, -0.746716, 0, 1.0};
Point(74) = {-0.057430, -0.747057, 0, 1.0};
Point(75) = {-0.053319, -0.747430, 0, 1.0};
Point(76) = {-0.048934, -0.747828, 0, 1.0};
Point(77) = {-0.044330, -0.748237, 0, 1.0};
Point(78) = {-0.039568, -0.748646, 0, 1.0};
Point(79) = {-0.034708, -0.749038, 0, 1.0};
Point(80) = {-0.029816, -0.749396, 0, 1.0};
Point(81) = {-0.024950, -0.749698, 0, 1.0};
Point(82) = {-0.020175, -0.749915, 0, 1.0};
Point(83) = {-0.015535, -0.750000, 0, 1.0};
Point(84) = {-0.011048, -0.749930, 0, 1.0};
Point(85) = {-0.006737, -0.749693, 0, 1.0};
Point(86) = {-0.002618, -0.749284, 0, 1.0};
Point(87) = {0.001292, -0.748710, 0, 1.0};
Point(88) = {0.004983, -0.747986, 0, 1.0};
Point(89) = {0.008434, -0.747144, 0, 1.0};
Point(90) = {0.011615, -0.746211, 0, 1.0};
Point(91) = {0.014497, -0.745209, 0, 1.0};
Point(92) = {0.017056, -0.744159, 0, 1.0};
Point(93) = {0.019271, -0.743084, 0, 1.0};
Point(94) = {0.021130, -0.742007, 0, 1.0};
Point(95) = {0.022622, -0.740954, 0, 1.0};
Point(96) = {0.023743, -0.739951, 0, 1.0};
Point(97) = {0.024499, -0.739030, 0, 1.0};
Point(98) = {0.024903, -0.738233, 0, 1.0};
Point(99) = {0.024982, -0.737641, 0, 1.0};
Point(100) = {0.024645, -0.737363, 0, 1.0};
Point(101) = {0.023826, -0.737371, 0, 1.0};
Point(102) = {0.022550, -0.737732, 0, 1.0};
Point(103) = {0.020752, -0.738444, 0, 1.0};
Point(104) = {0.018620, -0.739504, 0, 1.0};
Point(105) = {0.016462, -0.740860, 0, 1.0};
Point(106) = {0.014119, -0.742536, 0, 1.0};
Point(107) = {0.011480, -0.744335, 0, 1.0};
Point(108) = {0.008424, -0.745964, 0, 1.0};
Point(109) = {0.004924, -0.747294, 0, 1.0};
Point(110) = {0.001255, -0.748207, 0, 1.0};
Point(111) = {-0.002661, -0.748790, 0, 1.0};
Point(112) = {-0.006829, -0.749161, 0, 1.0};
Point(113) = {-0.011149, -0.749357, 0, 1.0};
Point(114) = {-0.015583, -0.749406, 0, 1.0};
Point(115) = {-0.020324, -0.749336, 0, 1.0};
Point(116) = {-0.025097, -0.749160, 0, 1.0};
Point(117) = {-0.029858, -0.748896, 0, 1.0};
Point(118) = {-0.034818, -0.748545, 0, 1.0};
Point(119) = {-0.039669, -0.748150, 0, 1.0};
Point(120) = {-0.044366, -0.747742, 0, 1.0};
Point(121) = {-0.049012, -0.747331, 0, 1.0};
Point(122) = {-0.053396, -0.746936, 0, 1.0};
Point(123) = {-0.057471, -0.746557, 0, 1.0};
Point(124) = {-0.061269, -0.746204, 0, 1.0};
Point(125) = {-0.064662, -0.745934, 0, 1.0};
Point(126) = {-0.067615, -0.745769, 0, 1.0};
Point(127) = {-0.070121, -0.745698, 0, 1.0};
Point(128) = {-0.072100, -0.745676, 0, 1.0};
Point(129) = {-0.073531, -0.745671, 0, 1.0};
Point(130) = {-0.074395, -0.745669, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074974, 0.740562, 0, 1.0};
Point(2) = {0.071210, 0.741071, 0, 1.0};
Point(3) = {0.067444, 0.741627, 0, 1.0};
Point(4) = {0.063678, 0.742186, 0, 1.0};
Point(5) = {0.059913, 0.742719, 0, 1.0};
Point(6) = {0.056147, 0.743262, 0, 1.0};
Point(7) = {0.052381, 0.743813, 0, 1.0};
Point(8) = {0.048615, 0.744384, 0, 1.0};
Point(9) = {0.044849, 0.744959, 0, 1.0};
Point(10) = {0.037318, 0.746057, 0, 1.0};
Point(11) = {0.029789, 0.747063, 0, 1.0};
Point(12) = {0.022263, 0.747951, 0, 1.0};
Point(13) = {0.014740, 0.748716, 0, 1.0};
Point(14) = {0.007222, 0.749320, 0, 1.0};
Point(15) = {-0.000292, 0.749740, 0, 1.0};
Point(16) = {-0.007800, 0.749965, 0, 1.0};
Point(17) = {-0.015304, 0.750000, 0, 1.0};
Point(18) = {-0.019054, 0.749950, 0, 1.0};
Point(19) = {-0.022802, 0.749855, 0, 1.0};
Point(20) = {-0.026550, 0.749704, 0, 1.0};
Point(21) = {-0.030295, 0.749492, 0, 1.0};
Point(22) = {-0.034040, 0.749221, 0, 1.0};
Point(23) = {-0.037783, 0.748904, 0, 1.0};
Point(24) = {-0.041525, 0.748550, 0, 1.0};
Point(25) = {-0.045265, 0.748140, 0, 1.0};
Point(26) = {-0.049004, 0.747650, 0, 1.0};
Point(27) = {-0.052739, 0.747047, 0, 1.0};
Point(28) = {-0.056471, 0.746293, 0, 1.0};
Point(29) = {-0.060198, 0.745364, 0, 1.0};
Point(30) = {-0.063919, 0.744230, 0, 1.0};
Point(31) = {-0.067634, 0.742817, 0, 1.0};
Point(32) = {-0.069487, 0.741960, 0, 1.0};
Point(33) = {-0.071336, 0.740942, 0, 1.0};
Point(34) = {-0.072258, 0.740337, 0, 1.0};
Point(35) = {-0.073176, 0.739603, 0, 1.0};
Point(36) = {-0.073725, 0.739076, 0, 1.0};
Point(37) = {-0.074270, 0.738395, 0, 1.0};
Point(38) = {-0.074629, 0.737772, 0, 1.0};
Point(39) = {-0.074974, 0.736636, 0, 1.0};
Point(40) = {-0.074579, 0.735883, 0, 1.0};
Point(41) = {-0.074195, 0.735533, 0, 1.0};
Point(42) = {-0.073622, 0.735134, 0, 1.0};
Point(43) = {-0.073051, 0.734815, 0, 1.0};
Point(44) = {-0.072102, 0.734392, 0, 1.0};
Point(45) = {-0.071156, 0.734070, 0, 1.0};
Point(46) = {-0.069267, 0.733570, 0, 1.0};
Point(47) = {-0.067382, 0.733195, 0, 1.0};
Point(48) = {-0.063616, 0.732647, 0, 1.0};
Point(49) = {-0.059855, 0.732268, 0, 1.0};
Point(50) = {-0.056097, 0.732002, 0, 1.0};
Point(51) = {-0.052340, 0.731819, 0, 1.0};
Point(52) = {-0.048586, 0.731705, 0, 1.0};
Point(53) = {-0.044833, 0.731642, 0, 1.0};
Point(54) = {-0.041081, 0.731616, 0, 1.0};
Point(55) = {-0.037330, 0.731621, 0, 1.0};
Point(56) = {-0.033580, 0.731653, 0, 1.0};
Point(57) = {-0.029830, 0.731708, 0, 1.0};
Point(58) = {-0.026081, 0.731788, 0, 1.0};
Point(59) = {-0.022332, 0.731901, 0, 1.0};
Point(60) = {-0.018585, 0.732061, 0, 1.0};
Point(61) = {-0.014839, 0.732267, 0, 1.0};
Point(62) = {-0.007350, 0.732783, 0, 1.0};
Point(63) = {0.000135, 0.733438, 0, 1.0};
Point(64) = {0.007617, 0.734215, 0, 1.0};
Point(65) = {0.015097, 0.735093, 0, 1.0};
Point(66) = {0.022575, 0.736038, 0, 1.0};
Point(67) = {0.030052, 0.736988, 0, 1.0};
Point(68) = {0.037531, 0.737909, 0, 1.0};
Point(69) = {0.045012, 0.738747, 0, 1.0};
Point(70) = {0.048753, 0.739116, 0, 1.0};
Point(71) = {0.052496, 0.739447, 0, 1.0};
Point(72) = {0.056240, 0.739719, 0, 1.0};
Point(73) = {0.059985, 0.739952, 0, 1.0};
Point(74) = {0.063732, 0.740128, 0, 1.0};
Point(75) = {0.067478, 0.740313, 0, 1.0};
Point(76) = {0.071226, 0.740457, 0, 1.0};
Point(77) = {-0.074974, -0.740562, 0, 1.0};
Point(78) = {-0.071210, -0.741071, 0, 1.0};
Point(79) = {-0.067444, -0.741627, 0, 1.0};
Point(80) = {-0.063678, -0.742186, 0, 1.0};
Point(81) = {-0.059913, -0.742719, 0, 1.0};
Point(82) = {-0.056147, -0.743262, 0, 1.0};
Point(83) = {-0.052381, -0.743813, 0, 1.0};
Point(84) = {-0.048615, -0.744384, 0, 1.0};
Point(85) = {-0.044849, -0.744959, 0, 1.0};
Point(86) = {-0.037318, -0.746057, 0, 1.0};
Point(87) = {-0.029789, -0.747063, 0, 1.0};
Point(88) = {-0.022263, -0.747951, 0, 1.0};
Point(89) = {-0.014740, -0.748716, 0, 1.0};
Point(90) = {-0.007222, -0.749320, 0, 1.0};
Point(91) = {0.000292, -0.749740, 0, 1.0};
Point(92) = {0.007800, -0.749965, 0, 1.0};
Point(93) = {0.015304, -0.750000, 0, 1.0};
Point(94) = {0.019054, -0.749950, 0, 1.0};
Point(95) = {0.022802, -0.749855, 0, 1.0};
Point(96) = {0.026550, -0.749704, 0, 1.0};
Point(97) = {0.030295, -0.749492, 0, 1.0};
Point(98) = {0.034040, -0.749221, 0, 1.0};
Point(99) = {0.037783, -0.748904, 0, 1.0};
Point(100) = {0.041525, -0.748550, 0, 1.0};
Point(101) = {0.045265, -0.748140, 0, 1.0};
Point(102) = {0.049004, -0.747650, 0, 1.0};
Point(103) = {0.052739, -0.747047, 0, 1.0};
Point(104) = {0.056471, -0.746293, 0, 1.0};
Point(105) = {0.060198, -0.745364, 0, 1.0};
Point(106) = {0.063919, -0.744230, 0, 1.0};
Point(107) = {0.067634, -0.742817, 0, 1.0};
Point(108) = {0.069487, -0.741960, 0, 1.0};
Point(109) = {0.071336, -0.740942, 0, 1.0};
Point(110) = {0.072258, -0.740337, 0, 1.0};
Point(111) = {0.073176, -0.739603, 0, 1.0};
Point(112) = {0.073725, -0.739076, 0, 1.0};
Point(113) = {0.074270, -0.738395, 0, 1.0};
Point(114) = {0.074629, -0.737772, 0, 1.0};
Point(115) = {0.074974, -0.736636, 0, 1.0};
Point(116) = {0.074579, -0.735883, 0, 1.0};
Point(117) = {0.074195, -0.735533, 0, 1.0};
Point(118) = {0.073622, -0.735134, 0, 1.0};
Point(119) = {0.073051, -0.734815, 0, 1.0};
Point(120) = {0.072102, -0.734392, 0, 1.0};
Point(121) = {0.071156, -0.734070, 0, 1.0};
Point(122) = {0.069267, -0.733570, 0, 1.0};
Point(123) = {0.067382, -0.733195, 0, 1.0};
Point(124) = {0.063616, -0.732647, 0, 1.0};
Point(125) = {0.059855, -0.732268, 0, 1.0};
Point(126) = {0.056097, -0.732002, 0, 1.0};
Point(127) = {0.052340, -0.731819, 0, 1.0};
Point(128) = {0.048586, -0.731705, 0, 1.0};
Point(129) = {0.044833, -0.731642, 0, 1.0};
Point(130) = {0.041081, -0.731616, 0, 1.0};
Point(131) = {0.037330, -0.731621, 0, 1.0};
Point(132) = {0.033580, -0.731653, 0, 1.0};
Point(133) = {0.029830, -0.731708, 0, 1.0};
Point(134) = {0.026081, -0.731788, 0, 1.0};
Point(135) = {0.022332, -0.731901, 0, 1.0};
Point(136) = {0.018585, -0.732061, 0, 1.0};
Point(137) = {0.014839, -0.732267, 0, 1.0};
Point(138) = {0.007350, -0.732783, 0, 1.0};
Point(139) = {-0.000135, -0.733438, 0, 1.0};
Point(140) = {-0.007617, -0.734215, 0, 1.0};
Point(141) = {-0.015097, -0.735093, 0, 1.0};
Point(142) = {-0.022575, -0.736038, 0, 1.0};
Point(143) = {-0.030052, -0.736988, 0, 1.0};
Point(144) = {-0.037531, -0.737909, 0, 1.0};
Point(145) = {-0.045012, -0.738747, 0, 1.0};
Point(146) = {-0.048753, -0.739116, 0, 1.0};
Point(147) = {-0.052496, -0.739447, 0, 1.0};
Point(148) = {-0.056240, -0.739719, 0, 1.0};
Point(149) = {-0.059985, -0.739952, 0, 1.0};
Point(150) = {-0.063732, -0.740128, 0, 1.0};
Point(151) = {-0.067478, -0.740313, 0, 1.0};
Point(152) = {-0.071226, -0.740457, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
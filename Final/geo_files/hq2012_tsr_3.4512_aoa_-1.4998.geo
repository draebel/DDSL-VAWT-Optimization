SetFactory("OpenCASCADE");

Point(1) = {0.074966, 0.743708, 0, 1.0};
Point(2) = {0.072456, 0.744048, 0, 1.0};
Point(3) = {0.069945, 0.744418, 0, 1.0};
Point(4) = {0.067435, 0.744790, 0, 1.0};
Point(5) = {0.064925, 0.745146, 0, 1.0};
Point(6) = {0.062414, 0.745508, 0, 1.0};
Point(7) = {0.059904, 0.745876, 0, 1.0};
Point(8) = {0.057393, 0.746256, 0, 1.0};
Point(9) = {0.054882, 0.746639, 0, 1.0};
Point(10) = {0.049861, 0.747371, 0, 1.0};
Point(11) = {0.044842, 0.748042, 0, 1.0};
Point(12) = {0.039825, 0.748634, 0, 1.0};
Point(13) = {0.034810, 0.749144, 0, 1.0};
Point(14) = {0.029797, 0.749547, 0, 1.0};
Point(15) = {0.024788, 0.749827, 0, 1.0};
Point(16) = {0.019783, 0.749977, 0, 1.0};
Point(17) = {0.014780, 0.750000, 0, 1.0};
Point(18) = {0.012280, 0.749967, 0, 1.0};
Point(19) = {0.009781, 0.749903, 0, 1.0};
Point(20) = {0.007283, 0.749803, 0, 1.0};
Point(21) = {0.004786, 0.749661, 0, 1.0};
Point(22) = {0.002290, 0.749481, 0, 1.0};
Point(23) = {-0.000206, 0.749270, 0, 1.0};
Point(24) = {-0.002700, 0.749033, 0, 1.0};
Point(25) = {-0.005194, 0.748760, 0, 1.0};
Point(26) = {-0.007686, 0.748433, 0, 1.0};
Point(27) = {-0.010177, 0.748031, 0, 1.0};
Point(28) = {-0.012664, 0.747529, 0, 1.0};
Point(29) = {-0.015149, 0.746910, 0, 1.0};
Point(30) = {-0.017630, 0.746153, 0, 1.0};
Point(31) = {-0.020106, 0.745211, 0, 1.0};
Point(32) = {-0.021342, 0.744640, 0, 1.0};
Point(33) = {-0.022574, 0.743961, 0, 1.0};
Point(34) = {-0.023189, 0.743558, 0, 1.0};
Point(35) = {-0.023801, 0.743069, 0, 1.0};
Point(36) = {-0.024167, 0.742717, 0, 1.0};
Point(37) = {-0.024531, 0.742263, 0, 1.0};
Point(38) = {-0.024770, 0.741848, 0, 1.0};
Point(39) = {-0.025000, 0.741091, 0, 1.0};
Point(40) = {-0.024737, 0.740588, 0, 1.0};
Point(41) = {-0.024481, 0.740355, 0, 1.0};
Point(42) = {-0.024098, 0.740089, 0, 1.0};
Point(43) = {-0.023718, 0.739877, 0, 1.0};
Point(44) = {-0.023085, 0.739594, 0, 1.0};
Point(45) = {-0.022454, 0.739380, 0, 1.0};
Point(46) = {-0.021195, 0.739047, 0, 1.0};
Point(47) = {-0.019938, 0.738796, 0, 1.0};
Point(48) = {-0.017428, 0.738431, 0, 1.0};
Point(49) = {-0.014920, 0.738179, 0, 1.0};
Point(50) = {-0.012415, 0.738001, 0, 1.0};
Point(51) = {-0.009911, 0.737880, 0, 1.0};
Point(52) = {-0.007408, 0.737803, 0, 1.0};
Point(53) = {-0.004906, 0.737762, 0, 1.0};
Point(54) = {-0.002405, 0.737744, 0, 1.0};
Point(55) = {0.000096, 0.737747, 0, 1.0};
Point(56) = {0.002596, 0.737769, 0, 1.0};
Point(57) = {0.005096, 0.737805, 0, 1.0};
Point(58) = {0.007596, 0.737859, 0, 1.0};
Point(59) = {0.010095, 0.737934, 0, 1.0};
Point(60) = {0.012593, 0.738041, 0, 1.0};
Point(61) = {0.015090, 0.738178, 0, 1.0};
Point(62) = {0.020083, 0.738522, 0, 1.0};
Point(63) = {0.025073, 0.738959, 0, 1.0};
Point(64) = {0.030061, 0.739476, 0, 1.0};
Point(65) = {0.035047, 0.740062, 0, 1.0};
Point(66) = {0.040033, 0.740692, 0, 1.0};
Point(67) = {0.045018, 0.741325, 0, 1.0};
Point(68) = {0.050003, 0.741939, 0, 1.0};
Point(69) = {0.054991, 0.742498, 0, 1.0};
Point(70) = {0.057485, 0.742744, 0, 1.0};
Point(71) = {0.059980, 0.742965, 0, 1.0};
Point(72) = {0.062476, 0.743146, 0, 1.0};
Point(73) = {0.064973, 0.743301, 0, 1.0};
Point(74) = {0.067471, 0.743419, 0, 1.0};
Point(75) = {0.069968, 0.743542, 0, 1.0};
Point(76) = {0.072467, 0.743638, 0, 1.0};
Point(77) = {-0.074966, -0.743708, 0, 1.0};
Point(78) = {-0.072456, -0.744048, 0, 1.0};
Point(79) = {-0.069945, -0.744418, 0, 1.0};
Point(80) = {-0.067435, -0.744790, 0, 1.0};
Point(81) = {-0.064925, -0.745146, 0, 1.0};
Point(82) = {-0.062414, -0.745508, 0, 1.0};
Point(83) = {-0.059904, -0.745876, 0, 1.0};
Point(84) = {-0.057393, -0.746256, 0, 1.0};
Point(85) = {-0.054882, -0.746639, 0, 1.0};
Point(86) = {-0.049861, -0.747371, 0, 1.0};
Point(87) = {-0.044842, -0.748042, 0, 1.0};
Point(88) = {-0.039825, -0.748634, 0, 1.0};
Point(89) = {-0.034810, -0.749144, 0, 1.0};
Point(90) = {-0.029797, -0.749547, 0, 1.0};
Point(91) = {-0.024788, -0.749827, 0, 1.0};
Point(92) = {-0.019783, -0.749977, 0, 1.0};
Point(93) = {-0.014780, -0.750000, 0, 1.0};
Point(94) = {-0.012280, -0.749967, 0, 1.0};
Point(95) = {-0.009781, -0.749903, 0, 1.0};
Point(96) = {-0.007283, -0.749803, 0, 1.0};
Point(97) = {-0.004786, -0.749661, 0, 1.0};
Point(98) = {-0.002290, -0.749481, 0, 1.0};
Point(99) = {0.000206, -0.749270, 0, 1.0};
Point(100) = {0.002700, -0.749033, 0, 1.0};
Point(101) = {0.005194, -0.748760, 0, 1.0};
Point(102) = {0.007686, -0.748433, 0, 1.0};
Point(103) = {0.010177, -0.748031, 0, 1.0};
Point(104) = {0.012664, -0.747529, 0, 1.0};
Point(105) = {0.015149, -0.746910, 0, 1.0};
Point(106) = {0.017630, -0.746153, 0, 1.0};
Point(107) = {0.020106, -0.745211, 0, 1.0};
Point(108) = {0.021342, -0.744640, 0, 1.0};
Point(109) = {0.022574, -0.743961, 0, 1.0};
Point(110) = {0.023189, -0.743558, 0, 1.0};
Point(111) = {0.023801, -0.743069, 0, 1.0};
Point(112) = {0.024167, -0.742717, 0, 1.0};
Point(113) = {0.024531, -0.742263, 0, 1.0};
Point(114) = {0.024770, -0.741848, 0, 1.0};
Point(115) = {0.025000, -0.741091, 0, 1.0};
Point(116) = {0.024737, -0.740588, 0, 1.0};
Point(117) = {0.024481, -0.740355, 0, 1.0};
Point(118) = {0.024098, -0.740089, 0, 1.0};
Point(119) = {0.023718, -0.739877, 0, 1.0};
Point(120) = {0.023085, -0.739594, 0, 1.0};
Point(121) = {0.022454, -0.739380, 0, 1.0};
Point(122) = {0.021195, -0.739047, 0, 1.0};
Point(123) = {0.019938, -0.738796, 0, 1.0};
Point(124) = {0.017428, -0.738431, 0, 1.0};
Point(125) = {0.014920, -0.738179, 0, 1.0};
Point(126) = {0.012415, -0.738001, 0, 1.0};
Point(127) = {0.009911, -0.737880, 0, 1.0};
Point(128) = {0.007408, -0.737803, 0, 1.0};
Point(129) = {0.004906, -0.737762, 0, 1.0};
Point(130) = {0.002405, -0.737744, 0, 1.0};
Point(131) = {-0.000096, -0.737747, 0, 1.0};
Point(132) = {-0.002596, -0.737769, 0, 1.0};
Point(133) = {-0.005096, -0.737805, 0, 1.0};
Point(134) = {-0.007596, -0.737859, 0, 1.0};
Point(135) = {-0.010095, -0.737934, 0, 1.0};
Point(136) = {-0.012593, -0.738041, 0, 1.0};
Point(137) = {-0.015090, -0.738178, 0, 1.0};
Point(138) = {-0.020083, -0.738522, 0, 1.0};
Point(139) = {-0.025073, -0.738959, 0, 1.0};
Point(140) = {-0.030061, -0.739476, 0, 1.0};
Point(141) = {-0.035047, -0.740062, 0, 1.0};
Point(142) = {-0.040033, -0.740692, 0, 1.0};
Point(143) = {-0.045018, -0.741325, 0, 1.0};
Point(144) = {-0.050003, -0.741939, 0, 1.0};
Point(145) = {-0.054991, -0.742498, 0, 1.0};
Point(146) = {-0.057485, -0.742744, 0, 1.0};
Point(147) = {-0.059980, -0.742965, 0, 1.0};
Point(148) = {-0.062476, -0.743146, 0, 1.0};
Point(149) = {-0.064973, -0.743301, 0, 1.0};
Point(150) = {-0.067471, -0.743419, 0, 1.0};
Point(151) = {-0.069968, -0.743542, 0, 1.0};
Point(152) = {-0.072467, -0.743638, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
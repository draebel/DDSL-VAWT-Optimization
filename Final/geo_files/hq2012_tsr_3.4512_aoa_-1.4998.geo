SetFactory("OpenCASCADE");

Point(1) = {0.112461, 0.740562, 0, 1.0};
Point(2) = {0.108697, 0.741071, 0, 1.0};
Point(3) = {0.104931, 0.741627, 0, 1.0};
Point(4) = {0.101165, 0.742186, 0, 1.0};
Point(5) = {0.097400, 0.742719, 0, 1.0};
Point(6) = {0.093634, 0.743262, 0, 1.0};
Point(7) = {0.089869, 0.743813, 0, 1.0};
Point(8) = {0.086102, 0.744384, 0, 1.0};
Point(9) = {0.082336, 0.744959, 0, 1.0};
Point(10) = {0.074805, 0.746057, 0, 1.0};
Point(11) = {0.067276, 0.747063, 0, 1.0};
Point(12) = {0.059750, 0.747951, 0, 1.0};
Point(13) = {0.052227, 0.748716, 0, 1.0};
Point(14) = {0.044709, 0.749320, 0, 1.0};
Point(15) = {0.037195, 0.749740, 0, 1.0};
Point(16) = {0.029687, 0.749965, 0, 1.0};
Point(17) = {0.022184, 0.750000, 0, 1.0};
Point(18) = {0.018434, 0.749950, 0, 1.0};
Point(19) = {0.014685, 0.749855, 0, 1.0};
Point(20) = {0.010937, 0.749704, 0, 1.0};
Point(21) = {0.007192, 0.749492, 0, 1.0};
Point(22) = {0.003447, 0.749221, 0, 1.0};
Point(23) = {-0.000296, 0.748904, 0, 1.0};
Point(24) = {-0.004038, 0.748550, 0, 1.0};
Point(25) = {-0.007778, 0.748140, 0, 1.0};
Point(26) = {-0.011517, 0.747650, 0, 1.0};
Point(27) = {-0.015252, 0.747047, 0, 1.0};
Point(28) = {-0.018984, 0.746293, 0, 1.0};
Point(29) = {-0.022711, 0.745364, 0, 1.0};
Point(30) = {-0.026432, 0.744230, 0, 1.0};
Point(31) = {-0.030146, 0.742817, 0, 1.0};
Point(32) = {-0.032000, 0.741960, 0, 1.0};
Point(33) = {-0.033849, 0.740942, 0, 1.0};
Point(34) = {-0.034771, 0.740337, 0, 1.0};
Point(35) = {-0.035689, 0.739603, 0, 1.0};
Point(36) = {-0.036238, 0.739076, 0, 1.0};
Point(37) = {-0.036783, 0.738395, 0, 1.0};
Point(38) = {-0.037142, 0.737772, 0, 1.0};
Point(39) = {-0.037487, 0.736636, 0, 1.0};
Point(40) = {-0.037092, 0.735883, 0, 1.0};
Point(41) = {-0.036708, 0.735533, 0, 1.0};
Point(42) = {-0.036135, 0.735134, 0, 1.0};
Point(43) = {-0.035564, 0.734815, 0, 1.0};
Point(44) = {-0.034615, 0.734392, 0, 1.0};
Point(45) = {-0.033669, 0.734070, 0, 1.0};
Point(46) = {-0.031780, 0.733570, 0, 1.0};
Point(47) = {-0.029894, 0.733195, 0, 1.0};
Point(48) = {-0.026129, 0.732647, 0, 1.0};
Point(49) = {-0.022368, 0.732268, 0, 1.0};
Point(50) = {-0.018609, 0.732002, 0, 1.0};
Point(51) = {-0.014853, 0.731819, 0, 1.0};
Point(52) = {-0.011099, 0.731705, 0, 1.0};
Point(53) = {-0.007346, 0.731642, 0, 1.0};
Point(54) = {-0.003594, 0.731616, 0, 1.0};
Point(55) = {0.000157, 0.731621, 0, 1.0};
Point(56) = {0.003907, 0.731653, 0, 1.0};
Point(57) = {0.007657, 0.731708, 0, 1.0};
Point(58) = {0.011406, 0.731788, 0, 1.0};
Point(59) = {0.015155, 0.731901, 0, 1.0};
Point(60) = {0.018902, 0.732061, 0, 1.0};
Point(61) = {0.022648, 0.732267, 0, 1.0};
Point(62) = {0.030137, 0.732783, 0, 1.0};
Point(63) = {0.037622, 0.733438, 0, 1.0};
Point(64) = {0.045105, 0.734215, 0, 1.0};
Point(65) = {0.052584, 0.735093, 0, 1.0};
Point(66) = {0.060062, 0.736038, 0, 1.0};
Point(67) = {0.067540, 0.736988, 0, 1.0};
Point(68) = {0.075018, 0.737909, 0, 1.0};
Point(69) = {0.082499, 0.738747, 0, 1.0};
Point(70) = {0.086240, 0.739116, 0, 1.0};
Point(71) = {0.089983, 0.739447, 0, 1.0};
Point(72) = {0.093727, 0.739719, 0, 1.0};
Point(73) = {0.097472, 0.739952, 0, 1.0};
Point(74) = {0.101219, 0.740128, 0, 1.0};
Point(75) = {0.104965, 0.740313, 0, 1.0};
Point(76) = {0.108713, 0.740457, 0, 1.0};
Point(77) = {-0.112461, -0.740562, 0, 1.0};
Point(78) = {-0.108697, -0.741071, 0, 1.0};
Point(79) = {-0.104931, -0.741627, 0, 1.0};
Point(80) = {-0.101165, -0.742186, 0, 1.0};
Point(81) = {-0.097400, -0.742719, 0, 1.0};
Point(82) = {-0.093634, -0.743262, 0, 1.0};
Point(83) = {-0.089869, -0.743813, 0, 1.0};
Point(84) = {-0.086102, -0.744384, 0, 1.0};
Point(85) = {-0.082336, -0.744959, 0, 1.0};
Point(86) = {-0.074805, -0.746057, 0, 1.0};
Point(87) = {-0.067276, -0.747063, 0, 1.0};
Point(88) = {-0.059750, -0.747951, 0, 1.0};
Point(89) = {-0.052227, -0.748716, 0, 1.0};
Point(90) = {-0.044709, -0.749320, 0, 1.0};
Point(91) = {-0.037195, -0.749740, 0, 1.0};
Point(92) = {-0.029687, -0.749965, 0, 1.0};
Point(93) = {-0.022184, -0.750000, 0, 1.0};
Point(94) = {-0.018434, -0.749950, 0, 1.0};
Point(95) = {-0.014685, -0.749855, 0, 1.0};
Point(96) = {-0.010937, -0.749704, 0, 1.0};
Point(97) = {-0.007192, -0.749492, 0, 1.0};
Point(98) = {-0.003447, -0.749221, 0, 1.0};
Point(99) = {0.000296, -0.748904, 0, 1.0};
Point(100) = {0.004038, -0.748550, 0, 1.0};
Point(101) = {0.007778, -0.748140, 0, 1.0};
Point(102) = {0.011517, -0.747650, 0, 1.0};
Point(103) = {0.015252, -0.747047, 0, 1.0};
Point(104) = {0.018984, -0.746293, 0, 1.0};
Point(105) = {0.022711, -0.745364, 0, 1.0};
Point(106) = {0.026432, -0.744230, 0, 1.0};
Point(107) = {0.030146, -0.742817, 0, 1.0};
Point(108) = {0.032000, -0.741960, 0, 1.0};
Point(109) = {0.033849, -0.740942, 0, 1.0};
Point(110) = {0.034771, -0.740337, 0, 1.0};
Point(111) = {0.035689, -0.739603, 0, 1.0};
Point(112) = {0.036238, -0.739076, 0, 1.0};
Point(113) = {0.036783, -0.738395, 0, 1.0};
Point(114) = {0.037142, -0.737772, 0, 1.0};
Point(115) = {0.037487, -0.736636, 0, 1.0};
Point(116) = {0.037092, -0.735883, 0, 1.0};
Point(117) = {0.036708, -0.735533, 0, 1.0};
Point(118) = {0.036135, -0.735134, 0, 1.0};
Point(119) = {0.035564, -0.734815, 0, 1.0};
Point(120) = {0.034615, -0.734392, 0, 1.0};
Point(121) = {0.033669, -0.734070, 0, 1.0};
Point(122) = {0.031780, -0.733570, 0, 1.0};
Point(123) = {0.029894, -0.733195, 0, 1.0};
Point(124) = {0.026129, -0.732647, 0, 1.0};
Point(125) = {0.022368, -0.732268, 0, 1.0};
Point(126) = {0.018609, -0.732002, 0, 1.0};
Point(127) = {0.014853, -0.731819, 0, 1.0};
Point(128) = {0.011099, -0.731705, 0, 1.0};
Point(129) = {0.007346, -0.731642, 0, 1.0};
Point(130) = {0.003594, -0.731616, 0, 1.0};
Point(131) = {-0.000157, -0.731621, 0, 1.0};
Point(132) = {-0.003907, -0.731653, 0, 1.0};
Point(133) = {-0.007657, -0.731708, 0, 1.0};
Point(134) = {-0.011406, -0.731788, 0, 1.0};
Point(135) = {-0.015155, -0.731901, 0, 1.0};
Point(136) = {-0.018902, -0.732061, 0, 1.0};
Point(137) = {-0.022648, -0.732267, 0, 1.0};
Point(138) = {-0.030137, -0.732783, 0, 1.0};
Point(139) = {-0.037622, -0.733438, 0, 1.0};
Point(140) = {-0.045105, -0.734215, 0, 1.0};
Point(141) = {-0.052584, -0.735093, 0, 1.0};
Point(142) = {-0.060062, -0.736038, 0, 1.0};
Point(143) = {-0.067540, -0.736988, 0, 1.0};
Point(144) = {-0.075018, -0.737909, 0, 1.0};
Point(145) = {-0.082499, -0.738747, 0, 1.0};
Point(146) = {-0.086240, -0.739116, 0, 1.0};
Point(147) = {-0.089983, -0.739447, 0, 1.0};
Point(148) = {-0.093727, -0.739719, 0, 1.0};
Point(149) = {-0.097472, -0.739952, 0, 1.0};
Point(150) = {-0.101219, -0.740128, 0, 1.0};
Point(151) = {-0.104965, -0.740313, 0, 1.0};
Point(152) = {-0.108713, -0.740457, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
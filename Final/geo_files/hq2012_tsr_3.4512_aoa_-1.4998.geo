SetFactory("OpenCASCADE");

Point(1) = {0.149931, 0.737416, 0, 1.0};
Point(2) = {0.144912, 0.738095, 0, 1.0};
Point(3) = {0.139891, 0.738836, 0, 1.0};
Point(4) = {0.134870, 0.739581, 0, 1.0};
Point(5) = {0.129849, 0.740292, 0, 1.0};
Point(6) = {0.124829, 0.741016, 0, 1.0};
Point(7) = {0.119808, 0.741751, 0, 1.0};
Point(8) = {0.114786, 0.742512, 0, 1.0};
Point(9) = {0.109764, 0.743279, 0, 1.0};
Point(10) = {0.099723, 0.744743, 0, 1.0};
Point(11) = {0.089684, 0.746084, 0, 1.0};
Point(12) = {0.079650, 0.747268, 0, 1.0};
Point(13) = {0.069619, 0.748288, 0, 1.0};
Point(14) = {0.059595, 0.749094, 0, 1.0};
Point(15) = {0.049577, 0.749654, 0, 1.0};
Point(16) = {0.039566, 0.749954, 0, 1.0};
Point(17) = {0.029561, 0.750000, 0, 1.0};
Point(18) = {0.024561, 0.749933, 0, 1.0};
Point(19) = {0.019563, 0.749806, 0, 1.0};
Point(20) = {0.014566, 0.749605, 0, 1.0};
Point(21) = {0.009572, 0.749323, 0, 1.0};
Point(22) = {0.004579, 0.748962, 0, 1.0};
Point(23) = {-0.000411, 0.748539, 0, 1.0};
Point(24) = {-0.005400, 0.748066, 0, 1.0};
Point(25) = {-0.010388, 0.747520, 0, 1.0};
Point(26) = {-0.015373, 0.746867, 0, 1.0};
Point(27) = {-0.020353, 0.746062, 0, 1.0};
Point(28) = {-0.025329, 0.745058, 0, 1.0};
Point(29) = {-0.030298, 0.743819, 0, 1.0};
Point(30) = {-0.035260, 0.742307, 0, 1.0};
Point(31) = {-0.040212, 0.740423, 0, 1.0};
Point(32) = {-0.042683, 0.739279, 0, 1.0};
Point(33) = {-0.045149, 0.737922, 0, 1.0};
Point(34) = {-0.046378, 0.737116, 0, 1.0};
Point(35) = {-0.047603, 0.736138, 0, 1.0};
Point(36) = {-0.048335, 0.735434, 0, 1.0};
Point(37) = {-0.049061, 0.734527, 0, 1.0};
Point(38) = {-0.049539, 0.733696, 0, 1.0};
Point(39) = {-0.050000, 0.732182, 0, 1.0};
Point(40) = {-0.049474, 0.731177, 0, 1.0};
Point(41) = {-0.048961, 0.730710, 0, 1.0};
Point(42) = {-0.048197, 0.730178, 0, 1.0};
Point(43) = {-0.047436, 0.729754, 0, 1.0};
Point(44) = {-0.046170, 0.729189, 0, 1.0};
Point(45) = {-0.044909, 0.728760, 0, 1.0};
Point(46) = {-0.042390, 0.728093, 0, 1.0};
Point(47) = {-0.039876, 0.727593, 0, 1.0};
Point(48) = {-0.034856, 0.726862, 0, 1.0};
Point(49) = {-0.029841, 0.726357, 0, 1.0};
Point(50) = {-0.024830, 0.726002, 0, 1.0};
Point(51) = {-0.019822, 0.725759, 0, 1.0};
Point(52) = {-0.014816, 0.725606, 0, 1.0};
Point(53) = {-0.009812, 0.725523, 0, 1.0};
Point(54) = {-0.004809, 0.725488, 0, 1.0};
Point(55) = {0.000192, 0.725495, 0, 1.0};
Point(56) = {0.005193, 0.725538, 0, 1.0};
Point(57) = {0.010193, 0.725611, 0, 1.0};
Point(58) = {0.015192, 0.725718, 0, 1.0};
Point(59) = {0.020189, 0.725868, 0, 1.0};
Point(60) = {0.025185, 0.726081, 0, 1.0};
Point(61) = {0.030180, 0.726356, 0, 1.0};
Point(62) = {0.040165, 0.727044, 0, 1.0};
Point(63) = {0.050146, 0.727917, 0, 1.0};
Point(64) = {0.060122, 0.728953, 0, 1.0};
Point(65) = {0.070095, 0.730124, 0, 1.0};
Point(66) = {0.080065, 0.731384, 0, 1.0};
Point(67) = {0.090036, 0.732651, 0, 1.0};
Point(68) = {0.100007, 0.733878, 0, 1.0};
Point(69) = {0.109981, 0.734996, 0, 1.0};
Point(70) = {0.114970, 0.735488, 0, 1.0};
Point(71) = {0.119960, 0.735929, 0, 1.0};
Point(72) = {0.124952, 0.736292, 0, 1.0};
Point(73) = {0.129946, 0.736603, 0, 1.0};
Point(74) = {0.134941, 0.736838, 0, 1.0};
Point(75) = {0.139937, 0.737084, 0, 1.0};
Point(76) = {0.144933, 0.737275, 0, 1.0};
Point(77) = {-0.149931, -0.737416, 0, 1.0};
Point(78) = {-0.144912, -0.738095, 0, 1.0};
Point(79) = {-0.139891, -0.738836, 0, 1.0};
Point(80) = {-0.134870, -0.739581, 0, 1.0};
Point(81) = {-0.129849, -0.740292, 0, 1.0};
Point(82) = {-0.124829, -0.741016, 0, 1.0};
Point(83) = {-0.119808, -0.741751, 0, 1.0};
Point(84) = {-0.114786, -0.742512, 0, 1.0};
Point(85) = {-0.109764, -0.743279, 0, 1.0};
Point(86) = {-0.099723, -0.744743, 0, 1.0};
Point(87) = {-0.089684, -0.746084, 0, 1.0};
Point(88) = {-0.079650, -0.747268, 0, 1.0};
Point(89) = {-0.069619, -0.748288, 0, 1.0};
Point(90) = {-0.059595, -0.749094, 0, 1.0};
Point(91) = {-0.049577, -0.749654, 0, 1.0};
Point(92) = {-0.039566, -0.749954, 0, 1.0};
Point(93) = {-0.029561, -0.750000, 0, 1.0};
Point(94) = {-0.024561, -0.749933, 0, 1.0};
Point(95) = {-0.019563, -0.749806, 0, 1.0};
Point(96) = {-0.014566, -0.749605, 0, 1.0};
Point(97) = {-0.009572, -0.749323, 0, 1.0};
Point(98) = {-0.004579, -0.748962, 0, 1.0};
Point(99) = {0.000411, -0.748539, 0, 1.0};
Point(100) = {0.005400, -0.748066, 0, 1.0};
Point(101) = {0.010388, -0.747520, 0, 1.0};
Point(102) = {0.015373, -0.746867, 0, 1.0};
Point(103) = {0.020353, -0.746062, 0, 1.0};
Point(104) = {0.025329, -0.745058, 0, 1.0};
Point(105) = {0.030298, -0.743819, 0, 1.0};
Point(106) = {0.035260, -0.742307, 0, 1.0};
Point(107) = {0.040212, -0.740423, 0, 1.0};
Point(108) = {0.042683, -0.739279, 0, 1.0};
Point(109) = {0.045149, -0.737922, 0, 1.0};
Point(110) = {0.046378, -0.737116, 0, 1.0};
Point(111) = {0.047603, -0.736138, 0, 1.0};
Point(112) = {0.048335, -0.735434, 0, 1.0};
Point(113) = {0.049061, -0.734527, 0, 1.0};
Point(114) = {0.049539, -0.733696, 0, 1.0};
Point(115) = {0.050000, -0.732182, 0, 1.0};
Point(116) = {0.049474, -0.731177, 0, 1.0};
Point(117) = {0.048961, -0.730710, 0, 1.0};
Point(118) = {0.048197, -0.730178, 0, 1.0};
Point(119) = {0.047436, -0.729754, 0, 1.0};
Point(120) = {0.046170, -0.729189, 0, 1.0};
Point(121) = {0.044909, -0.728760, 0, 1.0};
Point(122) = {0.042390, -0.728093, 0, 1.0};
Point(123) = {0.039876, -0.727593, 0, 1.0};
Point(124) = {0.034856, -0.726862, 0, 1.0};
Point(125) = {0.029841, -0.726357, 0, 1.0};
Point(126) = {0.024830, -0.726002, 0, 1.0};
Point(127) = {0.019822, -0.725759, 0, 1.0};
Point(128) = {0.014816, -0.725606, 0, 1.0};
Point(129) = {0.009812, -0.725523, 0, 1.0};
Point(130) = {0.004809, -0.725488, 0, 1.0};
Point(131) = {-0.000192, -0.725495, 0, 1.0};
Point(132) = {-0.005193, -0.725538, 0, 1.0};
Point(133) = {-0.010193, -0.725611, 0, 1.0};
Point(134) = {-0.015192, -0.725718, 0, 1.0};
Point(135) = {-0.020189, -0.725868, 0, 1.0};
Point(136) = {-0.025185, -0.726081, 0, 1.0};
Point(137) = {-0.030180, -0.726356, 0, 1.0};
Point(138) = {-0.040165, -0.727044, 0, 1.0};
Point(139) = {-0.050146, -0.727917, 0, 1.0};
Point(140) = {-0.060122, -0.728953, 0, 1.0};
Point(141) = {-0.070095, -0.730124, 0, 1.0};
Point(142) = {-0.080065, -0.731384, 0, 1.0};
Point(143) = {-0.090036, -0.732651, 0, 1.0};
Point(144) = {-0.100007, -0.733878, 0, 1.0};
Point(145) = {-0.109981, -0.734996, 0, 1.0};
Point(146) = {-0.114970, -0.735488, 0, 1.0};
Point(147) = {-0.119960, -0.735929, 0, 1.0};
Point(148) = {-0.124952, -0.736292, 0, 1.0};
Point(149) = {-0.129946, -0.736603, 0, 1.0};
Point(150) = {-0.134941, -0.736838, 0, 1.0};
Point(151) = {-0.139937, -0.737084, 0, 1.0};
Point(152) = {-0.144933, -0.737275, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112490, 0.739395, 0, 1.0};
Point(2) = {0.111989, 0.739490, 0, 1.0};
Point(3) = {0.110549, 0.739786, 0, 1.0};
Point(4) = {0.108291, 0.740270, 0, 1.0};
Point(5) = {0.105275, 0.740859, 0, 1.0};
Point(6) = {0.101513, 0.741508, 0, 1.0};
Point(7) = {0.097038, 0.742221, 0, 1.0};
Point(8) = {0.091917, 0.742988, 0, 1.0};
Point(9) = {0.086191, 0.743793, 0, 1.0};
Point(10) = {0.080013, 0.744615, 0, 1.0};
Point(11) = {0.073375, 0.745438, 0, 1.0};
Point(12) = {0.066385, 0.746241, 0, 1.0};
Point(13) = {0.059126, 0.747017, 0, 1.0};
Point(14) = {0.051671, 0.747747, 0, 1.0};
Point(15) = {0.044099, 0.748408, 0, 1.0};
Point(16) = {0.037030, 0.748944, 0, 1.0};
Point(17) = {0.028925, 0.749438, 0, 1.0};
Point(18) = {0.021478, 0.749770, 0, 1.0};
Point(19) = {0.014224, 0.749961, 0, 1.0};
Point(20) = {0.007233, 0.750000, 0, 1.0};
Point(21) = {0.000569, 0.749883, 0, 1.0};
Point(22) = {-0.005704, 0.749606, 0, 1.0};
Point(23) = {-0.011534, 0.749174, 0, 1.0};
Point(24) = {-0.016868, 0.748589, 0, 1.0};
Point(25) = {-0.021663, 0.747867, 0, 1.0};
Point(26) = {-0.025879, 0.747023, 0, 1.0};
Point(27) = {-0.029484, 0.746079, 0, 1.0};
Point(28) = {-0.032446, 0.745059, 0, 1.0};
Point(29) = {-0.034752, 0.743992, 0, 1.0};
Point(30) = {-0.036377, 0.742937, 0, 1.0};
Point(31) = {-0.037341, 0.741905, 0, 1.0};
Point(32) = {-0.037500, 0.741110, 0, 1.0};
Point(33) = {-0.036976, 0.740521, 0, 1.0};
Point(34) = {-0.036083, 0.740040, 0, 1.0};
Point(35) = {-0.034214, 0.739366, 0, 1.0};
Point(36) = {-0.031886, 0.738820, 0, 1.0};
Point(37) = {-0.028897, 0.738322, 0, 1.0};
Point(38) = {-0.025322, 0.737891, 0, 1.0};
Point(39) = {-0.021163, 0.737524, 0, 1.0};
Point(40) = {-0.016455, 0.737219, 0, 1.0};
Point(41) = {-0.011224, 0.736970, 0, 1.0};
Point(42) = {-0.005510, 0.736775, 0, 1.0};
Point(43) = {0.000644, 0.736630, 0, 1.0};
Point(44) = {0.007194, 0.736533, 0, 1.0};
Point(45) = {0.014082, 0.736479, 0, 1.0};
Point(46) = {0.021249, 0.736468, 0, 1.0};
Point(47) = {0.028630, 0.736500, 0, 1.0};
Point(48) = {0.036151, 0.736576, 0, 1.0};
Point(49) = {0.043743, 0.736704, 0, 1.0};
Point(50) = {0.051330, 0.736892, 0, 1.0};
Point(51) = {0.058851, 0.737173, 0, 1.0};
Point(52) = {0.066188, 0.737586, 0, 1.0};
Point(53) = {0.073196, 0.738068, 0, 1.0};
Point(54) = {0.079828, 0.738528, 0, 1.0};
Point(55) = {0.086032, 0.738922, 0, 1.0};
Point(56) = {0.091736, 0.739234, 0, 1.0};
Point(57) = {0.096873, 0.739448, 0, 1.0};
Point(58) = {0.101372, 0.739567, 0, 1.0};
Point(59) = {0.105162, 0.739607, 0, 1.0};
Point(60) = {0.108213, 0.739582, 0, 1.0};
Point(61) = {0.110514, 0.739514, 0, 1.0};
Point(62) = {0.111982, 0.739434, 0, 1.0};
Point(63) = {-0.112490, -0.739395, 0, 1.0};
Point(64) = {-0.111989, -0.739490, 0, 1.0};
Point(65) = {-0.110549, -0.739786, 0, 1.0};
Point(66) = {-0.108291, -0.740270, 0, 1.0};
Point(67) = {-0.105275, -0.740859, 0, 1.0};
Point(68) = {-0.101513, -0.741508, 0, 1.0};
Point(69) = {-0.097038, -0.742221, 0, 1.0};
Point(70) = {-0.091917, -0.742988, 0, 1.0};
Point(71) = {-0.086191, -0.743793, 0, 1.0};
Point(72) = {-0.080013, -0.744615, 0, 1.0};
Point(73) = {-0.073375, -0.745438, 0, 1.0};
Point(74) = {-0.066385, -0.746241, 0, 1.0};
Point(75) = {-0.059126, -0.747017, 0, 1.0};
Point(76) = {-0.051671, -0.747747, 0, 1.0};
Point(77) = {-0.044099, -0.748408, 0, 1.0};
Point(78) = {-0.037030, -0.748944, 0, 1.0};
Point(79) = {-0.028925, -0.749438, 0, 1.0};
Point(80) = {-0.021478, -0.749770, 0, 1.0};
Point(81) = {-0.014224, -0.749961, 0, 1.0};
Point(82) = {-0.007233, -0.750000, 0, 1.0};
Point(83) = {-0.000569, -0.749883, 0, 1.0};
Point(84) = {0.005704, -0.749606, 0, 1.0};
Point(85) = {0.011534, -0.749174, 0, 1.0};
Point(86) = {0.016868, -0.748589, 0, 1.0};
Point(87) = {0.021663, -0.747867, 0, 1.0};
Point(88) = {0.025879, -0.747023, 0, 1.0};
Point(89) = {0.029484, -0.746079, 0, 1.0};
Point(90) = {0.032446, -0.745059, 0, 1.0};
Point(91) = {0.034752, -0.743992, 0, 1.0};
Point(92) = {0.036377, -0.742937, 0, 1.0};
Point(93) = {0.037341, -0.741905, 0, 1.0};
Point(94) = {0.037500, -0.741110, 0, 1.0};
Point(95) = {0.036976, -0.740521, 0, 1.0};
Point(96) = {0.036083, -0.740040, 0, 1.0};
Point(97) = {0.034214, -0.739366, 0, 1.0};
Point(98) = {0.031886, -0.738820, 0, 1.0};
Point(99) = {0.028897, -0.738322, 0, 1.0};
Point(100) = {0.025322, -0.737891, 0, 1.0};
Point(101) = {0.021163, -0.737524, 0, 1.0};
Point(102) = {0.016455, -0.737219, 0, 1.0};
Point(103) = {0.011224, -0.736970, 0, 1.0};
Point(104) = {0.005510, -0.736775, 0, 1.0};
Point(105) = {-0.000644, -0.736630, 0, 1.0};
Point(106) = {-0.007194, -0.736533, 0, 1.0};
Point(107) = {-0.014082, -0.736479, 0, 1.0};
Point(108) = {-0.021249, -0.736468, 0, 1.0};
Point(109) = {-0.028630, -0.736500, 0, 1.0};
Point(110) = {-0.036151, -0.736576, 0, 1.0};
Point(111) = {-0.043743, -0.736704, 0, 1.0};
Point(112) = {-0.051330, -0.736892, 0, 1.0};
Point(113) = {-0.058851, -0.737173, 0, 1.0};
Point(114) = {-0.066188, -0.737586, 0, 1.0};
Point(115) = {-0.073196, -0.738068, 0, 1.0};
Point(116) = {-0.079828, -0.738528, 0, 1.0};
Point(117) = {-0.086032, -0.738922, 0, 1.0};
Point(118) = {-0.091736, -0.739234, 0, 1.0};
Point(119) = {-0.096873, -0.739448, 0, 1.0};
Point(120) = {-0.101372, -0.739567, 0, 1.0};
Point(121) = {-0.105162, -0.739607, 0, 1.0};
Point(122) = {-0.108213, -0.739582, 0, 1.0};
Point(123) = {-0.110514, -0.739514, 0, 1.0};
Point(124) = {-0.111982, -0.739434, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:105};
Spline(7) = {105:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
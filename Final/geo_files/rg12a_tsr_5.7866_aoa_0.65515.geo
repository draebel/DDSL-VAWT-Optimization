SetFactory("OpenCASCADE");

Point(1) = {0.149987, 0.735860, 0, 1.0};
Point(2) = {0.149318, 0.735986, 0, 1.0};
Point(3) = {0.147399, 0.736382, 0, 1.0};
Point(4) = {0.144388, 0.737026, 0, 1.0};
Point(5) = {0.140367, 0.737812, 0, 1.0};
Point(6) = {0.135350, 0.738678, 0, 1.0};
Point(7) = {0.129385, 0.739628, 0, 1.0};
Point(8) = {0.122556, 0.740650, 0, 1.0};
Point(9) = {0.114922, 0.741724, 0, 1.0};
Point(10) = {0.106684, 0.742820, 0, 1.0};
Point(11) = {0.097834, 0.743917, 0, 1.0};
Point(12) = {0.088513, 0.744988, 0, 1.0};
Point(13) = {0.078834, 0.746023, 0, 1.0};
Point(14) = {0.068895, 0.746996, 0, 1.0};
Point(15) = {0.058798, 0.747878, 0, 1.0};
Point(16) = {0.049374, 0.748592, 0, 1.0};
Point(17) = {0.038567, 0.749251, 0, 1.0};
Point(18) = {0.028637, 0.749693, 0, 1.0};
Point(19) = {0.018965, 0.749947, 0, 1.0};
Point(20) = {0.009643, 0.750000, 0, 1.0};
Point(21) = {0.000759, 0.749844, 0, 1.0};
Point(22) = {-0.007606, 0.749475, 0, 1.0};
Point(23) = {-0.015379, 0.748898, 0, 1.0};
Point(24) = {-0.022490, 0.748119, 0, 1.0};
Point(25) = {-0.028884, 0.747156, 0, 1.0};
Point(26) = {-0.034505, 0.746031, 0, 1.0};
Point(27) = {-0.039312, 0.744771, 0, 1.0};
Point(28) = {-0.043261, 0.743412, 0, 1.0};
Point(29) = {-0.046336, 0.741990, 0, 1.0};
Point(30) = {-0.048502, 0.740582, 0, 1.0};
Point(31) = {-0.049788, 0.739207, 0, 1.0};
Point(32) = {-0.050000, 0.738147, 0, 1.0};
Point(33) = {-0.049301, 0.737361, 0, 1.0};
Point(34) = {-0.048110, 0.736720, 0, 1.0};
Point(35) = {-0.045618, 0.735821, 0, 1.0};
Point(36) = {-0.042514, 0.735093, 0, 1.0};
Point(37) = {-0.038530, 0.734430, 0, 1.0};
Point(38) = {-0.033762, 0.733855, 0, 1.0};
Point(39) = {-0.028217, 0.733366, 0, 1.0};
Point(40) = {-0.021940, 0.732958, 0, 1.0};
Point(41) = {-0.014965, 0.732626, 0, 1.0};
Point(42) = {-0.007347, 0.732367, 0, 1.0};
Point(43) = {0.000859, 0.732173, 0, 1.0};
Point(44) = {0.009592, 0.732043, 0, 1.0};
Point(45) = {0.018776, 0.731972, 0, 1.0};
Point(46) = {0.028332, 0.731957, 0, 1.0};
Point(47) = {0.038173, 0.732001, 0, 1.0};
Point(48) = {0.048201, 0.732102, 0, 1.0};
Point(49) = {0.058324, 0.732272, 0, 1.0};
Point(50) = {0.068439, 0.732523, 0, 1.0};
Point(51) = {0.078468, 0.732898, 0, 1.0};
Point(52) = {0.088251, 0.733448, 0, 1.0};
Point(53) = {0.097595, 0.734091, 0, 1.0};
Point(54) = {0.106437, 0.734704, 0, 1.0};
Point(55) = {0.114709, 0.735230, 0, 1.0};
Point(56) = {0.122315, 0.735645, 0, 1.0};
Point(57) = {0.129164, 0.735930, 0, 1.0};
Point(58) = {0.135163, 0.736090, 0, 1.0};
Point(59) = {0.140216, 0.736142, 0, 1.0};
Point(60) = {0.144283, 0.736110, 0, 1.0};
Point(61) = {0.147353, 0.736018, 0, 1.0};
Point(62) = {0.149309, 0.735912, 0, 1.0};
Point(63) = {-0.149987, -0.735860, 0, 1.0};
Point(64) = {-0.149318, -0.735986, 0, 1.0};
Point(65) = {-0.147399, -0.736382, 0, 1.0};
Point(66) = {-0.144388, -0.737026, 0, 1.0};
Point(67) = {-0.140367, -0.737812, 0, 1.0};
Point(68) = {-0.135350, -0.738678, 0, 1.0};
Point(69) = {-0.129385, -0.739628, 0, 1.0};
Point(70) = {-0.122556, -0.740650, 0, 1.0};
Point(71) = {-0.114922, -0.741724, 0, 1.0};
Point(72) = {-0.106684, -0.742820, 0, 1.0};
Point(73) = {-0.097834, -0.743917, 0, 1.0};
Point(74) = {-0.088513, -0.744988, 0, 1.0};
Point(75) = {-0.078834, -0.746023, 0, 1.0};
Point(76) = {-0.068895, -0.746996, 0, 1.0};
Point(77) = {-0.058798, -0.747878, 0, 1.0};
Point(78) = {-0.049374, -0.748592, 0, 1.0};
Point(79) = {-0.038567, -0.749251, 0, 1.0};
Point(80) = {-0.028637, -0.749693, 0, 1.0};
Point(81) = {-0.018965, -0.749947, 0, 1.0};
Point(82) = {-0.009643, -0.750000, 0, 1.0};
Point(83) = {-0.000759, -0.749844, 0, 1.0};
Point(84) = {0.007606, -0.749475, 0, 1.0};
Point(85) = {0.015379, -0.748898, 0, 1.0};
Point(86) = {0.022490, -0.748119, 0, 1.0};
Point(87) = {0.028884, -0.747156, 0, 1.0};
Point(88) = {0.034505, -0.746031, 0, 1.0};
Point(89) = {0.039312, -0.744771, 0, 1.0};
Point(90) = {0.043261, -0.743412, 0, 1.0};
Point(91) = {0.046336, -0.741990, 0, 1.0};
Point(92) = {0.048502, -0.740582, 0, 1.0};
Point(93) = {0.049788, -0.739207, 0, 1.0};
Point(94) = {0.050000, -0.738147, 0, 1.0};
Point(95) = {0.049301, -0.737361, 0, 1.0};
Point(96) = {0.048110, -0.736720, 0, 1.0};
Point(97) = {0.045618, -0.735821, 0, 1.0};
Point(98) = {0.042514, -0.735093, 0, 1.0};
Point(99) = {0.038530, -0.734430, 0, 1.0};
Point(100) = {0.033762, -0.733855, 0, 1.0};
Point(101) = {0.028217, -0.733366, 0, 1.0};
Point(102) = {0.021940, -0.732958, 0, 1.0};
Point(103) = {0.014965, -0.732626, 0, 1.0};
Point(104) = {0.007347, -0.732367, 0, 1.0};
Point(105) = {-0.000859, -0.732173, 0, 1.0};
Point(106) = {-0.009592, -0.732043, 0, 1.0};
Point(107) = {-0.018776, -0.731972, 0, 1.0};
Point(108) = {-0.028332, -0.731957, 0, 1.0};
Point(109) = {-0.038173, -0.732001, 0, 1.0};
Point(110) = {-0.048201, -0.732102, 0, 1.0};
Point(111) = {-0.058324, -0.732272, 0, 1.0};
Point(112) = {-0.068439, -0.732523, 0, 1.0};
Point(113) = {-0.078468, -0.732898, 0, 1.0};
Point(114) = {-0.088251, -0.733448, 0, 1.0};
Point(115) = {-0.097595, -0.734091, 0, 1.0};
Point(116) = {-0.106437, -0.734704, 0, 1.0};
Point(117) = {-0.114709, -0.735230, 0, 1.0};
Point(118) = {-0.122315, -0.735645, 0, 1.0};
Point(119) = {-0.129164, -0.735930, 0, 1.0};
Point(120) = {-0.135163, -0.736090, 0, 1.0};
Point(121) = {-0.140216, -0.736142, 0, 1.0};
Point(122) = {-0.144283, -0.736110, 0, 1.0};
Point(123) = {-0.147353, -0.736018, 0, 1.0};
Point(124) = {-0.149309, -0.735912, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:105};
Spline(7) = {105:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
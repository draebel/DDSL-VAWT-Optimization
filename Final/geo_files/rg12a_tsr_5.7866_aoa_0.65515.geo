SetFactory("OpenCASCADE");

Point(1) = {0.074993, 0.742930, 0, 1.0};
Point(2) = {0.074659, 0.742993, 0, 1.0};
Point(3) = {0.073699, 0.743191, 0, 1.0};
Point(4) = {0.072194, 0.743513, 0, 1.0};
Point(5) = {0.070183, 0.743906, 0, 1.0};
Point(6) = {0.067675, 0.744339, 0, 1.0};
Point(7) = {0.064692, 0.744814, 0, 1.0};
Point(8) = {0.061278, 0.745325, 0, 1.0};
Point(9) = {0.057461, 0.745862, 0, 1.0};
Point(10) = {0.053342, 0.746410, 0, 1.0};
Point(11) = {0.048917, 0.746959, 0, 1.0};
Point(12) = {0.044257, 0.747494, 0, 1.0};
Point(13) = {0.039417, 0.748011, 0, 1.0};
Point(14) = {0.034447, 0.748498, 0, 1.0};
Point(15) = {0.029399, 0.748939, 0, 1.0};
Point(16) = {0.024687, 0.749296, 0, 1.0};
Point(17) = {0.019283, 0.749626, 0, 1.0};
Point(18) = {0.014319, 0.749846, 0, 1.0};
Point(19) = {0.009483, 0.749974, 0, 1.0};
Point(20) = {0.004822, 0.750000, 0, 1.0};
Point(21) = {0.000380, 0.749922, 0, 1.0};
Point(22) = {-0.003803, 0.749738, 0, 1.0};
Point(23) = {-0.007689, 0.749449, 0, 1.0};
Point(24) = {-0.011245, 0.749060, 0, 1.0};
Point(25) = {-0.014442, 0.748578, 0, 1.0};
Point(26) = {-0.017252, 0.748015, 0, 1.0};
Point(27) = {-0.019656, 0.747386, 0, 1.0};
Point(28) = {-0.021631, 0.746706, 0, 1.0};
Point(29) = {-0.023168, 0.745995, 0, 1.0};
Point(30) = {-0.024251, 0.745291, 0, 1.0};
Point(31) = {-0.024894, 0.744603, 0, 1.0};
Point(32) = {-0.025000, 0.744074, 0, 1.0};
Point(33) = {-0.024650, 0.743681, 0, 1.0};
Point(34) = {-0.024055, 0.743360, 0, 1.0};
Point(35) = {-0.022809, 0.742910, 0, 1.0};
Point(36) = {-0.021257, 0.742547, 0, 1.0};
Point(37) = {-0.019265, 0.742215, 0, 1.0};
Point(38) = {-0.016881, 0.741928, 0, 1.0};
Point(39) = {-0.014109, 0.741683, 0, 1.0};
Point(40) = {-0.010970, 0.741479, 0, 1.0};
Point(41) = {-0.007482, 0.741313, 0, 1.0};
Point(42) = {-0.003674, 0.741184, 0, 1.0};
Point(43) = {0.000430, 0.741087, 0, 1.0};
Point(44) = {0.004796, 0.741022, 0, 1.0};
Point(45) = {0.009388, 0.740986, 0, 1.0};
Point(46) = {0.014166, 0.740979, 0, 1.0};
Point(47) = {0.019087, 0.741000, 0, 1.0};
Point(48) = {0.024101, 0.741051, 0, 1.0};
Point(49) = {0.029162, 0.741136, 0, 1.0};
Point(50) = {0.034220, 0.741261, 0, 1.0};
Point(51) = {0.039234, 0.741449, 0, 1.0};
Point(52) = {0.044126, 0.741724, 0, 1.0};
Point(53) = {0.048798, 0.742046, 0, 1.0};
Point(54) = {0.053218, 0.742352, 0, 1.0};
Point(55) = {0.057355, 0.742615, 0, 1.0};
Point(56) = {0.061157, 0.742822, 0, 1.0};
Point(57) = {0.064582, 0.742965, 0, 1.0};
Point(58) = {0.067581, 0.743045, 0, 1.0};
Point(59) = {0.070108, 0.743071, 0, 1.0};
Point(60) = {0.072142, 0.743055, 0, 1.0};
Point(61) = {0.073676, 0.743009, 0, 1.0};
Point(62) = {0.074655, 0.742956, 0, 1.0};
Point(63) = {-0.074993, -0.742930, 0, 1.0};
Point(64) = {-0.074659, -0.742993, 0, 1.0};
Point(65) = {-0.073699, -0.743191, 0, 1.0};
Point(66) = {-0.072194, -0.743513, 0, 1.0};
Point(67) = {-0.070183, -0.743906, 0, 1.0};
Point(68) = {-0.067675, -0.744339, 0, 1.0};
Point(69) = {-0.064692, -0.744814, 0, 1.0};
Point(70) = {-0.061278, -0.745325, 0, 1.0};
Point(71) = {-0.057461, -0.745862, 0, 1.0};
Point(72) = {-0.053342, -0.746410, 0, 1.0};
Point(73) = {-0.048917, -0.746959, 0, 1.0};
Point(74) = {-0.044257, -0.747494, 0, 1.0};
Point(75) = {-0.039417, -0.748011, 0, 1.0};
Point(76) = {-0.034447, -0.748498, 0, 1.0};
Point(77) = {-0.029399, -0.748939, 0, 1.0};
Point(78) = {-0.024687, -0.749296, 0, 1.0};
Point(79) = {-0.019283, -0.749626, 0, 1.0};
Point(80) = {-0.014319, -0.749846, 0, 1.0};
Point(81) = {-0.009483, -0.749974, 0, 1.0};
Point(82) = {-0.004822, -0.750000, 0, 1.0};
Point(83) = {-0.000380, -0.749922, 0, 1.0};
Point(84) = {0.003803, -0.749738, 0, 1.0};
Point(85) = {0.007689, -0.749449, 0, 1.0};
Point(86) = {0.011245, -0.749060, 0, 1.0};
Point(87) = {0.014442, -0.748578, 0, 1.0};
Point(88) = {0.017252, -0.748015, 0, 1.0};
Point(89) = {0.019656, -0.747386, 0, 1.0};
Point(90) = {0.021631, -0.746706, 0, 1.0};
Point(91) = {0.023168, -0.745995, 0, 1.0};
Point(92) = {0.024251, -0.745291, 0, 1.0};
Point(93) = {0.024894, -0.744603, 0, 1.0};
Point(94) = {0.025000, -0.744074, 0, 1.0};
Point(95) = {0.024650, -0.743681, 0, 1.0};
Point(96) = {0.024055, -0.743360, 0, 1.0};
Point(97) = {0.022809, -0.742910, 0, 1.0};
Point(98) = {0.021257, -0.742547, 0, 1.0};
Point(99) = {0.019265, -0.742215, 0, 1.0};
Point(100) = {0.016881, -0.741928, 0, 1.0};
Point(101) = {0.014109, -0.741683, 0, 1.0};
Point(102) = {0.010970, -0.741479, 0, 1.0};
Point(103) = {0.007482, -0.741313, 0, 1.0};
Point(104) = {0.003674, -0.741184, 0, 1.0};
Point(105) = {-0.000430, -0.741087, 0, 1.0};
Point(106) = {-0.004796, -0.741022, 0, 1.0};
Point(107) = {-0.009388, -0.740986, 0, 1.0};
Point(108) = {-0.014166, -0.740979, 0, 1.0};
Point(109) = {-0.019087, -0.741000, 0, 1.0};
Point(110) = {-0.024101, -0.741051, 0, 1.0};
Point(111) = {-0.029162, -0.741136, 0, 1.0};
Point(112) = {-0.034220, -0.741261, 0, 1.0};
Point(113) = {-0.039234, -0.741449, 0, 1.0};
Point(114) = {-0.044126, -0.741724, 0, 1.0};
Point(115) = {-0.048798, -0.742046, 0, 1.0};
Point(116) = {-0.053218, -0.742352, 0, 1.0};
Point(117) = {-0.057355, -0.742615, 0, 1.0};
Point(118) = {-0.061157, -0.742822, 0, 1.0};
Point(119) = {-0.064582, -0.742965, 0, 1.0};
Point(120) = {-0.067581, -0.743045, 0, 1.0};
Point(121) = {-0.070108, -0.743071, 0, 1.0};
Point(122) = {-0.072142, -0.743055, 0, 1.0};
Point(123) = {-0.073676, -0.743009, 0, 1.0};
Point(124) = {-0.074655, -0.742956, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:105};
Spline(7) = {105:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074995, 0.739395, 0, 1.0};
Point(2) = {0.074494, 0.739490, 0, 1.0};
Point(3) = {0.073054, 0.739786, 0, 1.0};
Point(4) = {0.070796, 0.740270, 0, 1.0};
Point(5) = {0.067780, 0.740859, 0, 1.0};
Point(6) = {0.064018, 0.741508, 0, 1.0};
Point(7) = {0.059543, 0.742221, 0, 1.0};
Point(8) = {0.054422, 0.742988, 0, 1.0};
Point(9) = {0.048696, 0.743793, 0, 1.0};
Point(10) = {0.042518, 0.744615, 0, 1.0};
Point(11) = {0.035880, 0.745438, 0, 1.0};
Point(12) = {0.028890, 0.746241, 0, 1.0};
Point(13) = {0.021631, 0.747017, 0, 1.0};
Point(14) = {0.014176, 0.747747, 0, 1.0};
Point(15) = {0.006604, 0.748408, 0, 1.0};
Point(16) = {-0.000465, 0.748944, 0, 1.0};
Point(17) = {-0.008570, 0.749438, 0, 1.0};
Point(18) = {-0.016017, 0.749770, 0, 1.0};
Point(19) = {-0.023271, 0.749961, 0, 1.0};
Point(20) = {-0.030263, 0.750000, 0, 1.0};
Point(21) = {-0.036926, 0.749883, 0, 1.0};
Point(22) = {-0.043199, 0.749606, 0, 1.0};
Point(23) = {-0.049029, 0.749174, 0, 1.0};
Point(24) = {-0.054363, 0.748589, 0, 1.0};
Point(25) = {-0.059158, 0.747867, 0, 1.0};
Point(26) = {-0.063374, 0.747023, 0, 1.0};
Point(27) = {-0.066979, 0.746079, 0, 1.0};
Point(28) = {-0.069941, 0.745059, 0, 1.0};
Point(29) = {-0.072247, 0.743992, 0, 1.0};
Point(30) = {-0.073872, 0.742937, 0, 1.0};
Point(31) = {-0.074836, 0.741905, 0, 1.0};
Point(32) = {-0.074995, 0.741110, 0, 1.0};
Point(33) = {-0.074471, 0.740521, 0, 1.0};
Point(34) = {-0.073578, 0.740040, 0, 1.0};
Point(35) = {-0.071709, 0.739366, 0, 1.0};
Point(36) = {-0.069381, 0.738820, 0, 1.0};
Point(37) = {-0.066392, 0.738322, 0, 1.0};
Point(38) = {-0.062817, 0.737891, 0, 1.0};
Point(39) = {-0.058658, 0.737524, 0, 1.0};
Point(40) = {-0.053950, 0.737219, 0, 1.0};
Point(41) = {-0.048719, 0.736970, 0, 1.0};
Point(42) = {-0.043006, 0.736775, 0, 1.0};
Point(43) = {-0.036851, 0.736630, 0, 1.0};
Point(44) = {-0.030301, 0.736533, 0, 1.0};
Point(45) = {-0.023413, 0.736479, 0, 1.0};
Point(46) = {-0.016246, 0.736468, 0, 1.0};
Point(47) = {-0.008865, 0.736500, 0, 1.0};
Point(48) = {-0.001344, 0.736576, 0, 1.0};
Point(49) = {0.006248, 0.736704, 0, 1.0};
Point(50) = {0.013834, 0.736892, 0, 1.0};
Point(51) = {0.021356, 0.737173, 0, 1.0};
Point(52) = {0.028693, 0.737586, 0, 1.0};
Point(53) = {0.035701, 0.738068, 0, 1.0};
Point(54) = {0.042333, 0.738528, 0, 1.0};
Point(55) = {0.048537, 0.738922, 0, 1.0};
Point(56) = {0.054241, 0.739234, 0, 1.0};
Point(57) = {0.059378, 0.739448, 0, 1.0};
Point(58) = {0.063877, 0.739567, 0, 1.0};
Point(59) = {0.067667, 0.739607, 0, 1.0};
Point(60) = {0.070717, 0.739582, 0, 1.0};
Point(61) = {0.073019, 0.739514, 0, 1.0};
Point(62) = {0.074487, 0.739434, 0, 1.0};
Point(63) = {-0.074995, -0.739395, 0, 1.0};
Point(64) = {-0.074494, -0.739490, 0, 1.0};
Point(65) = {-0.073054, -0.739786, 0, 1.0};
Point(66) = {-0.070796, -0.740270, 0, 1.0};
Point(67) = {-0.067780, -0.740859, 0, 1.0};
Point(68) = {-0.064018, -0.741508, 0, 1.0};
Point(69) = {-0.059543, -0.742221, 0, 1.0};
Point(70) = {-0.054422, -0.742988, 0, 1.0};
Point(71) = {-0.048696, -0.743793, 0, 1.0};
Point(72) = {-0.042518, -0.744615, 0, 1.0};
Point(73) = {-0.035880, -0.745438, 0, 1.0};
Point(74) = {-0.028890, -0.746241, 0, 1.0};
Point(75) = {-0.021631, -0.747017, 0, 1.0};
Point(76) = {-0.014176, -0.747747, 0, 1.0};
Point(77) = {-0.006604, -0.748408, 0, 1.0};
Point(78) = {0.000465, -0.748944, 0, 1.0};
Point(79) = {0.008570, -0.749438, 0, 1.0};
Point(80) = {0.016017, -0.749770, 0, 1.0};
Point(81) = {0.023271, -0.749961, 0, 1.0};
Point(82) = {0.030263, -0.750000, 0, 1.0};
Point(83) = {0.036926, -0.749883, 0, 1.0};
Point(84) = {0.043199, -0.749606, 0, 1.0};
Point(85) = {0.049029, -0.749174, 0, 1.0};
Point(86) = {0.054363, -0.748589, 0, 1.0};
Point(87) = {0.059158, -0.747867, 0, 1.0};
Point(88) = {0.063374, -0.747023, 0, 1.0};
Point(89) = {0.066979, -0.746079, 0, 1.0};
Point(90) = {0.069941, -0.745059, 0, 1.0};
Point(91) = {0.072247, -0.743992, 0, 1.0};
Point(92) = {0.073872, -0.742937, 0, 1.0};
Point(93) = {0.074836, -0.741905, 0, 1.0};
Point(94) = {0.074995, -0.741110, 0, 1.0};
Point(95) = {0.074471, -0.740521, 0, 1.0};
Point(96) = {0.073578, -0.740040, 0, 1.0};
Point(97) = {0.071709, -0.739366, 0, 1.0};
Point(98) = {0.069381, -0.738820, 0, 1.0};
Point(99) = {0.066392, -0.738322, 0, 1.0};
Point(100) = {0.062817, -0.737891, 0, 1.0};
Point(101) = {0.058658, -0.737524, 0, 1.0};
Point(102) = {0.053950, -0.737219, 0, 1.0};
Point(103) = {0.048719, -0.736970, 0, 1.0};
Point(104) = {0.043006, -0.736775, 0, 1.0};
Point(105) = {0.036851, -0.736630, 0, 1.0};
Point(106) = {0.030301, -0.736533, 0, 1.0};
Point(107) = {0.023413, -0.736479, 0, 1.0};
Point(108) = {0.016246, -0.736468, 0, 1.0};
Point(109) = {0.008865, -0.736500, 0, 1.0};
Point(110) = {0.001344, -0.736576, 0, 1.0};
Point(111) = {-0.006248, -0.736704, 0, 1.0};
Point(112) = {-0.013834, -0.736892, 0, 1.0};
Point(113) = {-0.021356, -0.737173, 0, 1.0};
Point(114) = {-0.028693, -0.737586, 0, 1.0};
Point(115) = {-0.035701, -0.738068, 0, 1.0};
Point(116) = {-0.042333, -0.738528, 0, 1.0};
Point(117) = {-0.048537, -0.738922, 0, 1.0};
Point(118) = {-0.054241, -0.739234, 0, 1.0};
Point(119) = {-0.059378, -0.739448, 0, 1.0};
Point(120) = {-0.063877, -0.739567, 0, 1.0};
Point(121) = {-0.067667, -0.739607, 0, 1.0};
Point(122) = {-0.070717, -0.739582, 0, 1.0};
Point(123) = {-0.073019, -0.739514, 0, 1.0};
Point(124) = {-0.074487, -0.739434, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:105};
Spline(7) = {105:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
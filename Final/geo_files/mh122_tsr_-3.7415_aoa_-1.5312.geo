SetFactory("OpenCASCADE");

Point(1) = {0.074912, 0.742188, 0, 1.0};
Point(2) = {0.071685, 0.742887, 0, 1.0};
Point(3) = {0.067260, 0.743773, 0, 1.0};
Point(4) = {0.062195, 0.744729, 0, 1.0};
Point(5) = {0.056577, 0.745731, 0, 1.0};
Point(6) = {0.050499, 0.746744, 0, 1.0};
Point(7) = {0.044055, 0.747711, 0, 1.0};
Point(8) = {0.037310, 0.748552, 0, 1.0};
Point(9) = {0.030295, 0.749215, 0, 1.0};
Point(10) = {0.023040, 0.749674, 0, 1.0};
Point(11) = {0.015578, 0.749928, 0, 1.0};
Point(12) = {0.007964, 0.750000, 0, 1.0};
Point(13) = {0.000278, 0.749907, 0, 1.0};
Point(14) = {-0.007399, 0.749656, 0, 1.0};
Point(15) = {-0.014989, 0.749255, 0, 1.0};
Point(16) = {-0.022413, 0.748714, 0, 1.0};
Point(17) = {-0.029594, 0.748042, 0, 1.0};
Point(18) = {-0.036459, 0.747251, 0, 1.0};
Point(19) = {-0.042936, 0.746354, 0, 1.0};
Point(20) = {-0.048960, 0.745367, 0, 1.0};
Point(21) = {-0.054470, 0.744305, 0, 1.0};
Point(22) = {-0.059407, 0.743186, 0, 1.0};
Point(23) = {-0.063721, 0.742031, 0, 1.0};
Point(24) = {-0.067363, 0.740854, 0, 1.0};
Point(25) = {-0.070304, 0.739667, 0, 1.0};
Point(26) = {-0.072528, 0.738491, 0, 1.0};
Point(27) = {-0.074036, 0.737363, 0, 1.0};
Point(28) = {-0.074697, 0.736592, 0, 1.0};
Point(29) = {-0.074855, 0.736308, 0, 1.0};
Point(30) = {-0.074949, 0.736051, 0, 1.0};
Point(31) = {-0.074973, 0.735899, 0, 1.0};
Point(32) = {-0.074959, 0.735770, 0, 1.0};
Point(33) = {-0.074892, 0.735655, 0, 1.0};
Point(34) = {-0.074777, 0.735539, 0, 1.0};
Point(35) = {-0.074531, 0.735365, 0, 1.0};
Point(36) = {-0.074209, 0.735192, 0, 1.0};
Point(37) = {-0.073868, 0.735040, 0, 1.0};
Point(38) = {-0.072009, 0.734496, 0, 1.0};
Point(39) = {-0.069320, 0.734051, 0, 1.0};
Point(40) = {-0.065818, 0.733701, 0, 1.0};
Point(41) = {-0.061548, 0.733435, 0, 1.0};
Point(42) = {-0.056570, 0.733255, 0, 1.0};
Point(43) = {-0.050946, 0.733164, 0, 1.0};
Point(44) = {-0.044748, 0.733169, 0, 1.0};
Point(45) = {-0.038051, 0.733280, 0, 1.0};
Point(46) = {-0.030937, 0.733520, 0, 1.0};
Point(47) = {-0.023463, 0.733928, 0, 1.0};
Point(48) = {-0.015659, 0.734508, 0, 1.0};
Point(49) = {-0.007569, 0.735238, 0, 1.0};
Point(50) = {0.000758, 0.736078, 0, 1.0};
Point(51) = {0.009248, 0.736963, 0, 1.0};
Point(52) = {0.017796, 0.737833, 0, 1.0};
Point(53) = {0.026286, 0.738645, 0, 1.0};
Point(54) = {0.034597, 0.739362, 0, 1.0};
Point(55) = {0.042606, 0.739955, 0, 1.0};
Point(56) = {0.050189, 0.740404, 0, 1.0};
Point(57) = {0.057224, 0.740702, 0, 1.0};
Point(58) = {0.063593, 0.740848, 0, 1.0};
Point(59) = {0.069188, 0.740856, 0, 1.0};
Point(60) = {0.073910, 0.740748, 0, 1.0};
Point(61) = {0.074952, 0.740706, 0, 1.0};
Point(62) = {-0.074912, -0.742188, 0, 1.0};
Point(63) = {-0.071685, -0.742887, 0, 1.0};
Point(64) = {-0.067260, -0.743773, 0, 1.0};
Point(65) = {-0.062195, -0.744729, 0, 1.0};
Point(66) = {-0.056577, -0.745731, 0, 1.0};
Point(67) = {-0.050499, -0.746744, 0, 1.0};
Point(68) = {-0.044055, -0.747711, 0, 1.0};
Point(69) = {-0.037310, -0.748552, 0, 1.0};
Point(70) = {-0.030295, -0.749215, 0, 1.0};
Point(71) = {-0.023040, -0.749674, 0, 1.0};
Point(72) = {-0.015578, -0.749928, 0, 1.0};
Point(73) = {-0.007964, -0.750000, 0, 1.0};
Point(74) = {-0.000278, -0.749907, 0, 1.0};
Point(75) = {0.007399, -0.749656, 0, 1.0};
Point(76) = {0.014989, -0.749255, 0, 1.0};
Point(77) = {0.022413, -0.748714, 0, 1.0};
Point(78) = {0.029594, -0.748042, 0, 1.0};
Point(79) = {0.036459, -0.747251, 0, 1.0};
Point(80) = {0.042936, -0.746354, 0, 1.0};
Point(81) = {0.048960, -0.745367, 0, 1.0};
Point(82) = {0.054470, -0.744305, 0, 1.0};
Point(83) = {0.059407, -0.743186, 0, 1.0};
Point(84) = {0.063721, -0.742031, 0, 1.0};
Point(85) = {0.067363, -0.740854, 0, 1.0};
Point(86) = {0.070304, -0.739667, 0, 1.0};
Point(87) = {0.072528, -0.738491, 0, 1.0};
Point(88) = {0.074036, -0.737363, 0, 1.0};
Point(89) = {0.074697, -0.736592, 0, 1.0};
Point(90) = {0.074855, -0.736308, 0, 1.0};
Point(91) = {0.074949, -0.736051, 0, 1.0};
Point(92) = {0.074973, -0.735899, 0, 1.0};
Point(93) = {0.074959, -0.735770, 0, 1.0};
Point(94) = {0.074892, -0.735655, 0, 1.0};
Point(95) = {0.074777, -0.735539, 0, 1.0};
Point(96) = {0.074531, -0.735365, 0, 1.0};
Point(97) = {0.074209, -0.735192, 0, 1.0};
Point(98) = {0.073868, -0.735040, 0, 1.0};
Point(99) = {0.072009, -0.734496, 0, 1.0};
Point(100) = {0.069320, -0.734051, 0, 1.0};
Point(101) = {0.065818, -0.733701, 0, 1.0};
Point(102) = {0.061548, -0.733435, 0, 1.0};
Point(103) = {0.056570, -0.733255, 0, 1.0};
Point(104) = {0.050946, -0.733164, 0, 1.0};
Point(105) = {0.044748, -0.733169, 0, 1.0};
Point(106) = {0.038051, -0.733280, 0, 1.0};
Point(107) = {0.030937, -0.733520, 0, 1.0};
Point(108) = {0.023463, -0.733928, 0, 1.0};
Point(109) = {0.015659, -0.734508, 0, 1.0};
Point(110) = {0.007569, -0.735238, 0, 1.0};
Point(111) = {-0.000758, -0.736078, 0, 1.0};
Point(112) = {-0.009248, -0.736963, 0, 1.0};
Point(113) = {-0.017796, -0.737833, 0, 1.0};
Point(114) = {-0.026286, -0.738645, 0, 1.0};
Point(115) = {-0.034597, -0.739362, 0, 1.0};
Point(116) = {-0.042606, -0.739955, 0, 1.0};
Point(117) = {-0.050189, -0.740404, 0, 1.0};
Point(118) = {-0.057224, -0.740702, 0, 1.0};
Point(119) = {-0.063593, -0.740848, 0, 1.0};
Point(120) = {-0.069188, -0.740856, 0, 1.0};
Point(121) = {-0.073910, -0.740748, 0, 1.0};
Point(122) = {-0.074952, -0.740706, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:79};
Spline(6) = {79:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {36.00000000, 15.00000000, 0, 1.0};
Point(126) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
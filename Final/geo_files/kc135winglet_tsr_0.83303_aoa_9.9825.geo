SetFactory("OpenCASCADE");

Point(1) = {0.073451, 0.729937, 0, 1.0};
Point(2) = {0.071090, 0.730942, 0, 1.0};
Point(3) = {0.068716, 0.731878, 0, 1.0};
Point(4) = {0.066339, 0.732793, 0, 1.0};
Point(5) = {0.063956, 0.733680, 0, 1.0};
Point(6) = {0.061571, 0.734547, 0, 1.0};
Point(7) = {0.059181, 0.735394, 0, 1.0};
Point(8) = {0.056790, 0.736231, 0, 1.0};
Point(9) = {0.054394, 0.737038, 0, 1.0};
Point(10) = {0.051992, 0.737816, 0, 1.0};
Point(11) = {0.049591, 0.738595, 0, 1.0};
Point(12) = {0.047184, 0.739343, 0, 1.0};
Point(13) = {0.044774, 0.740072, 0, 1.0};
Point(14) = {0.042359, 0.740771, 0, 1.0};
Point(15) = {0.039940, 0.741451, 0, 1.0};
Point(16) = {0.037514, 0.742091, 0, 1.0};
Point(17) = {0.035083, 0.742702, 0, 1.0};
Point(18) = {0.032647, 0.743283, 0, 1.0};
Point(19) = {0.030206, 0.743834, 0, 1.0};
Point(20) = {0.025314, 0.744888, 0, 1.0};
Point(21) = {0.020406, 0.745843, 0, 1.0};
Point(22) = {0.015483, 0.746720, 0, 1.0};
Point(23) = {0.010547, 0.747518, 0, 1.0};
Point(24) = {0.005595, 0.748227, 0, 1.0};
Point(25) = {0.000629, 0.748857, 0, 1.0};
Point(26) = {-0.004355, 0.749389, 0, 1.0};
Point(27) = {-0.006855, 0.749606, 0, 1.0};
Point(28) = {-0.009362, 0.749783, 0, 1.0};
Point(29) = {-0.011876, 0.749921, 0, 1.0};
Point(30) = {-0.014401, 0.750000, 0, 1.0};
Point(31) = {-0.016939, 0.750000, 0, 1.0};
Point(32) = {-0.019498, 0.749882, 0, 1.0};
Point(33) = {-0.020794, 0.749734, 0, 1.0};
Point(34) = {-0.022106, 0.749488, 0, 1.0};
Point(35) = {-0.023459, 0.749015, 0, 1.0};
Point(36) = {-0.024301, 0.748554, 0, 1.0};
Point(37) = {-0.024670, 0.748193, 0, 1.0};
Point(38) = {-0.025000, 0.747469, 0, 1.0};
Point(39) = {-0.024858, 0.747119, 0, 1.0};
Point(40) = {-0.024579, 0.746979, 0, 1.0};
Point(41) = {-0.023873, 0.746661, 0, 1.0};
Point(42) = {-0.022671, 0.746277, 0, 1.0};
Point(43) = {-0.021463, 0.745933, 0, 1.0};
Point(44) = {-0.020249, 0.745617, 0, 1.0};
Point(45) = {-0.017818, 0.745007, 0, 1.0};
Point(46) = {-0.015380, 0.744436, 0, 1.0};
Point(47) = {-0.012939, 0.743884, 0, 1.0};
Point(48) = {-0.010494, 0.743352, 0, 1.0};
Point(49) = {-0.008044, 0.742850, 0, 1.0};
Point(50) = {-0.005592, 0.742357, 0, 1.0};
Point(51) = {-0.000682, 0.741412, 0, 1.0};
Point(52) = {0.004241, 0.740535, 0, 1.0};
Point(53) = {0.009169, 0.739688, 0, 1.0};
Point(54) = {0.014103, 0.738881, 0, 1.0};
Point(55) = {0.019045, 0.738112, 0, 1.0};
Point(56) = {0.023993, 0.737383, 0, 1.0};
Point(57) = {0.028956, 0.736733, 0, 1.0};
Point(58) = {0.031446, 0.736458, 0, 1.0};
Point(59) = {0.033936, 0.736182, 0, 1.0};
Point(60) = {0.036431, 0.735936, 0, 1.0};
Point(61) = {0.038926, 0.735689, 0, 1.0};
Point(62) = {0.041421, 0.735443, 0, 1.0};
Point(63) = {0.043914, 0.735187, 0, 1.0};
Point(64) = {0.046409, 0.734941, 0, 1.0};
Point(65) = {0.048899, 0.734665, 0, 1.0};
Point(66) = {0.051389, 0.734389, 0, 1.0};
Point(67) = {0.053874, 0.734084, 0, 1.0};
Point(68) = {0.056355, 0.733759, 0, 1.0};
Point(69) = {0.058826, 0.733375, 0, 1.0};
Point(70) = {0.061286, 0.732931, 0, 1.0};
Point(71) = {0.063740, 0.732449, 0, 1.0};
Point(72) = {0.066178, 0.731878, 0, 1.0};
Point(73) = {0.068598, 0.731208, 0, 1.0};
Point(74) = {0.071001, 0.730440, 0, 1.0};
Point(75) = {0.073370, 0.729474, 0, 1.0};
Point(76) = {-0.073451, -0.729937, 0, 1.0};
Point(77) = {-0.071090, -0.730942, 0, 1.0};
Point(78) = {-0.068716, -0.731878, 0, 1.0};
Point(79) = {-0.066339, -0.732793, 0, 1.0};
Point(80) = {-0.063956, -0.733680, 0, 1.0};
Point(81) = {-0.061571, -0.734547, 0, 1.0};
Point(82) = {-0.059181, -0.735394, 0, 1.0};
Point(83) = {-0.056790, -0.736231, 0, 1.0};
Point(84) = {-0.054394, -0.737038, 0, 1.0};
Point(85) = {-0.051992, -0.737816, 0, 1.0};
Point(86) = {-0.049591, -0.738595, 0, 1.0};
Point(87) = {-0.047184, -0.739343, 0, 1.0};
Point(88) = {-0.044774, -0.740072, 0, 1.0};
Point(89) = {-0.042359, -0.740771, 0, 1.0};
Point(90) = {-0.039940, -0.741451, 0, 1.0};
Point(91) = {-0.037514, -0.742091, 0, 1.0};
Point(92) = {-0.035083, -0.742702, 0, 1.0};
Point(93) = {-0.032647, -0.743283, 0, 1.0};
Point(94) = {-0.030206, -0.743834, 0, 1.0};
Point(95) = {-0.025314, -0.744888, 0, 1.0};
Point(96) = {-0.020406, -0.745843, 0, 1.0};
Point(97) = {-0.015483, -0.746720, 0, 1.0};
Point(98) = {-0.010547, -0.747518, 0, 1.0};
Point(99) = {-0.005595, -0.748227, 0, 1.0};
Point(100) = {-0.000629, -0.748857, 0, 1.0};
Point(101) = {0.004355, -0.749389, 0, 1.0};
Point(102) = {0.006855, -0.749606, 0, 1.0};
Point(103) = {0.009362, -0.749783, 0, 1.0};
Point(104) = {0.011876, -0.749921, 0, 1.0};
Point(105) = {0.014401, -0.750000, 0, 1.0};
Point(106) = {0.016939, -0.750000, 0, 1.0};
Point(107) = {0.019498, -0.749882, 0, 1.0};
Point(108) = {0.020794, -0.749734, 0, 1.0};
Point(109) = {0.022106, -0.749488, 0, 1.0};
Point(110) = {0.023459, -0.749015, 0, 1.0};
Point(111) = {0.024301, -0.748554, 0, 1.0};
Point(112) = {0.024670, -0.748193, 0, 1.0};
Point(113) = {0.025000, -0.747469, 0, 1.0};
Point(114) = {0.024858, -0.747119, 0, 1.0};
Point(115) = {0.024579, -0.746979, 0, 1.0};
Point(116) = {0.023873, -0.746661, 0, 1.0};
Point(117) = {0.022671, -0.746277, 0, 1.0};
Point(118) = {0.021463, -0.745933, 0, 1.0};
Point(119) = {0.020249, -0.745617, 0, 1.0};
Point(120) = {0.017818, -0.745007, 0, 1.0};
Point(121) = {0.015380, -0.744436, 0, 1.0};
Point(122) = {0.012939, -0.743884, 0, 1.0};
Point(123) = {0.010494, -0.743352, 0, 1.0};
Point(124) = {0.008044, -0.742850, 0, 1.0};
Point(125) = {0.005592, -0.742357, 0, 1.0};
Point(126) = {0.000682, -0.741412, 0, 1.0};
Point(127) = {-0.004241, -0.740535, 0, 1.0};
Point(128) = {-0.009169, -0.739688, 0, 1.0};
Point(129) = {-0.014103, -0.738881, 0, 1.0};
Point(130) = {-0.019045, -0.738112, 0, 1.0};
Point(131) = {-0.023993, -0.737383, 0, 1.0};
Point(132) = {-0.028956, -0.736733, 0, 1.0};
Point(133) = {-0.031446, -0.736458, 0, 1.0};
Point(134) = {-0.033936, -0.736182, 0, 1.0};
Point(135) = {-0.036431, -0.735936, 0, 1.0};
Point(136) = {-0.038926, -0.735689, 0, 1.0};
Point(137) = {-0.041421, -0.735443, 0, 1.0};
Point(138) = {-0.043914, -0.735187, 0, 1.0};
Point(139) = {-0.046409, -0.734941, 0, 1.0};
Point(140) = {-0.048899, -0.734665, 0, 1.0};
Point(141) = {-0.051389, -0.734389, 0, 1.0};
Point(142) = {-0.053874, -0.734084, 0, 1.0};
Point(143) = {-0.056355, -0.733759, 0, 1.0};
Point(144) = {-0.058826, -0.733375, 0, 1.0};
Point(145) = {-0.061286, -0.732931, 0, 1.0};
Point(146) = {-0.063740, -0.732449, 0, 1.0};
Point(147) = {-0.066178, -0.731878, 0, 1.0};
Point(148) = {-0.068598, -0.731208, 0, 1.0};
Point(149) = {-0.071001, -0.730440, 0, 1.0};
Point(150) = {-0.073370, -0.729474, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:99};
Spline(6) = {99:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
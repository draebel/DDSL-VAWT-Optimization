SetFactory("OpenCASCADE");

Point(1) = {0.073813, 0.719906, 0, 1.0};
Point(2) = {0.070270, 0.721413, 0, 1.0};
Point(3) = {0.066710, 0.722816, 0, 1.0};
Point(4) = {0.063144, 0.724190, 0, 1.0};
Point(5) = {0.059570, 0.725520, 0, 1.0};
Point(6) = {0.055991, 0.726820, 0, 1.0};
Point(7) = {0.052407, 0.728090, 0, 1.0};
Point(8) = {0.048821, 0.729346, 0, 1.0};
Point(9) = {0.045226, 0.730558, 0, 1.0};
Point(10) = {0.041624, 0.731725, 0, 1.0};
Point(11) = {0.038022, 0.732892, 0, 1.0};
Point(12) = {0.034412, 0.734015, 0, 1.0};
Point(13) = {0.030797, 0.735108, 0, 1.0};
Point(14) = {0.027174, 0.736157, 0, 1.0};
Point(15) = {0.023545, 0.737176, 0, 1.0};
Point(16) = {0.019907, 0.738136, 0, 1.0};
Point(17) = {0.016260, 0.739052, 0, 1.0};
Point(18) = {0.012606, 0.739924, 0, 1.0};
Point(19) = {0.008944, 0.740751, 0, 1.0};
Point(20) = {0.001607, 0.742332, 0, 1.0};
Point(21) = {-0.005756, 0.743765, 0, 1.0};
Point(22) = {-0.013140, 0.745080, 0, 1.0};
Point(23) = {-0.020545, 0.746277, 0, 1.0};
Point(24) = {-0.027973, 0.747340, 0, 1.0};
Point(25) = {-0.035422, 0.748286, 0, 1.0};
Point(26) = {-0.042896, 0.749084, 0, 1.0};
Point(27) = {-0.046647, 0.749409, 0, 1.0};
Point(28) = {-0.050408, 0.749675, 0, 1.0};
Point(29) = {-0.054179, 0.749882, 0, 1.0};
Point(30) = {-0.057966, 0.750000, 0, 1.0};
Point(31) = {-0.061773, 0.750000, 0, 1.0};
Point(32) = {-0.065612, 0.749823, 0, 1.0};
Point(33) = {-0.067555, 0.749601, 0, 1.0};
Point(34) = {-0.069524, 0.749232, 0, 1.0};
Point(35) = {-0.071553, 0.748523, 0, 1.0};
Point(36) = {-0.072816, 0.747831, 0, 1.0};
Point(37) = {-0.073369, 0.747289, 0, 1.0};
Point(38) = {-0.073865, 0.746203, 0, 1.0};
Point(39) = {-0.073652, 0.745679, 0, 1.0};
Point(40) = {-0.073233, 0.745468, 0, 1.0};
Point(41) = {-0.072174, 0.744992, 0, 1.0};
Point(42) = {-0.070372, 0.744416, 0, 1.0};
Point(43) = {-0.068559, 0.743899, 0, 1.0};
Point(44) = {-0.066738, 0.743426, 0, 1.0};
Point(45) = {-0.063092, 0.742510, 0, 1.0};
Point(46) = {-0.059435, 0.741653, 0, 1.0};
Point(47) = {-0.055773, 0.740826, 0, 1.0};
Point(48) = {-0.052106, 0.740028, 0, 1.0};
Point(49) = {-0.048431, 0.739275, 0, 1.0};
Point(50) = {-0.044753, 0.738536, 0, 1.0};
Point(51) = {-0.037387, 0.737118, 0, 1.0};
Point(52) = {-0.030003, 0.735803, 0, 1.0};
Point(53) = {-0.022612, 0.734532, 0, 1.0};
Point(54) = {-0.015210, 0.733321, 0, 1.0};
Point(55) = {-0.007797, 0.732168, 0, 1.0};
Point(56) = {-0.000374, 0.731075, 0, 1.0};
Point(57) = {0.007069, 0.730100, 0, 1.0};
Point(58) = {0.010804, 0.729686, 0, 1.0};
Point(59) = {0.014539, 0.729273, 0, 1.0};
Point(60) = {0.018282, 0.728903, 0, 1.0};
Point(61) = {0.022024, 0.728534, 0, 1.0};
Point(62) = {0.025767, 0.728165, 0, 1.0};
Point(63) = {0.029507, 0.727780, 0, 1.0};
Point(64) = {0.033249, 0.727411, 0, 1.0};
Point(65) = {0.036984, 0.726997, 0, 1.0};
Point(66) = {0.040719, 0.726584, 0, 1.0};
Point(67) = {0.044446, 0.726126, 0, 1.0};
Point(68) = {0.048168, 0.725638, 0, 1.0};
Point(69) = {0.051874, 0.725062, 0, 1.0};
Point(70) = {0.055565, 0.724397, 0, 1.0};
Point(71) = {0.059245, 0.723673, 0, 1.0};
Point(72) = {0.062902, 0.722816, 0, 1.0};
Point(73) = {0.066533, 0.721812, 0, 1.0};
Point(74) = {0.070138, 0.720659, 0, 1.0};
Point(75) = {0.073690, 0.719212, 0, 1.0};
Point(76) = {-0.073813, -0.719906, 0, 1.0};
Point(77) = {-0.070270, -0.721413, 0, 1.0};
Point(78) = {-0.066710, -0.722816, 0, 1.0};
Point(79) = {-0.063144, -0.724190, 0, 1.0};
Point(80) = {-0.059570, -0.725520, 0, 1.0};
Point(81) = {-0.055991, -0.726820, 0, 1.0};
Point(82) = {-0.052407, -0.728090, 0, 1.0};
Point(83) = {-0.048821, -0.729346, 0, 1.0};
Point(84) = {-0.045226, -0.730558, 0, 1.0};
Point(85) = {-0.041624, -0.731725, 0, 1.0};
Point(86) = {-0.038022, -0.732892, 0, 1.0};
Point(87) = {-0.034412, -0.734015, 0, 1.0};
Point(88) = {-0.030797, -0.735108, 0, 1.0};
Point(89) = {-0.027174, -0.736157, 0, 1.0};
Point(90) = {-0.023545, -0.737176, 0, 1.0};
Point(91) = {-0.019907, -0.738136, 0, 1.0};
Point(92) = {-0.016260, -0.739052, 0, 1.0};
Point(93) = {-0.012606, -0.739924, 0, 1.0};
Point(94) = {-0.008944, -0.740751, 0, 1.0};
Point(95) = {-0.001607, -0.742332, 0, 1.0};
Point(96) = {0.005756, -0.743765, 0, 1.0};
Point(97) = {0.013140, -0.745080, 0, 1.0};
Point(98) = {0.020545, -0.746277, 0, 1.0};
Point(99) = {0.027973, -0.747340, 0, 1.0};
Point(100) = {0.035422, -0.748286, 0, 1.0};
Point(101) = {0.042896, -0.749084, 0, 1.0};
Point(102) = {0.046647, -0.749409, 0, 1.0};
Point(103) = {0.050408, -0.749675, 0, 1.0};
Point(104) = {0.054179, -0.749882, 0, 1.0};
Point(105) = {0.057966, -0.750000, 0, 1.0};
Point(106) = {0.061773, -0.750000, 0, 1.0};
Point(107) = {0.065612, -0.749823, 0, 1.0};
Point(108) = {0.067555, -0.749601, 0, 1.0};
Point(109) = {0.069524, -0.749232, 0, 1.0};
Point(110) = {0.071553, -0.748523, 0, 1.0};
Point(111) = {0.072816, -0.747831, 0, 1.0};
Point(112) = {0.073369, -0.747289, 0, 1.0};
Point(113) = {0.073865, -0.746203, 0, 1.0};
Point(114) = {0.073652, -0.745679, 0, 1.0};
Point(115) = {0.073233, -0.745468, 0, 1.0};
Point(116) = {0.072174, -0.744992, 0, 1.0};
Point(117) = {0.070372, -0.744416, 0, 1.0};
Point(118) = {0.068559, -0.743899, 0, 1.0};
Point(119) = {0.066738, -0.743426, 0, 1.0};
Point(120) = {0.063092, -0.742510, 0, 1.0};
Point(121) = {0.059435, -0.741653, 0, 1.0};
Point(122) = {0.055773, -0.740826, 0, 1.0};
Point(123) = {0.052106, -0.740028, 0, 1.0};
Point(124) = {0.048431, -0.739275, 0, 1.0};
Point(125) = {0.044753, -0.738536, 0, 1.0};
Point(126) = {0.037387, -0.737118, 0, 1.0};
Point(127) = {0.030003, -0.735803, 0, 1.0};
Point(128) = {0.022612, -0.734532, 0, 1.0};
Point(129) = {0.015210, -0.733321, 0, 1.0};
Point(130) = {0.007797, -0.732168, 0, 1.0};
Point(131) = {0.000374, -0.731075, 0, 1.0};
Point(132) = {-0.007069, -0.730100, 0, 1.0};
Point(133) = {-0.010804, -0.729686, 0, 1.0};
Point(134) = {-0.014539, -0.729273, 0, 1.0};
Point(135) = {-0.018282, -0.728903, 0, 1.0};
Point(136) = {-0.022024, -0.728534, 0, 1.0};
Point(137) = {-0.025767, -0.728165, 0, 1.0};
Point(138) = {-0.029507, -0.727780, 0, 1.0};
Point(139) = {-0.033249, -0.727411, 0, 1.0};
Point(140) = {-0.036984, -0.726997, 0, 1.0};
Point(141) = {-0.040719, -0.726584, 0, 1.0};
Point(142) = {-0.044446, -0.726126, 0, 1.0};
Point(143) = {-0.048168, -0.725638, 0, 1.0};
Point(144) = {-0.051874, -0.725062, 0, 1.0};
Point(145) = {-0.055565, -0.724397, 0, 1.0};
Point(146) = {-0.059245, -0.723673, 0, 1.0};
Point(147) = {-0.062902, -0.722816, 0, 1.0};
Point(148) = {-0.066533, -0.721812, 0, 1.0};
Point(149) = {-0.070138, -0.720659, 0, 1.0};
Point(150) = {-0.073690, -0.719212, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:99};
Spline(6) = {99:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
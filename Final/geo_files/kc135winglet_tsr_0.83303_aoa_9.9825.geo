SetFactory("OpenCASCADE");

Point(1) = {0.146903, 0.709875, 0, 1.0};
Point(2) = {0.142180, 0.711884, 0, 1.0};
Point(3) = {0.137432, 0.713755, 0, 1.0};
Point(4) = {0.132678, 0.715587, 0, 1.0};
Point(5) = {0.127913, 0.717360, 0, 1.0};
Point(6) = {0.123141, 0.719093, 0, 1.0};
Point(7) = {0.118362, 0.720787, 0, 1.0};
Point(8) = {0.113580, 0.722462, 0, 1.0};
Point(9) = {0.108788, 0.724077, 0, 1.0};
Point(10) = {0.103985, 0.725633, 0, 1.0};
Point(11) = {0.099182, 0.727189, 0, 1.0};
Point(12) = {0.094368, 0.728686, 0, 1.0};
Point(13) = {0.089548, 0.730144, 0, 1.0};
Point(14) = {0.084717, 0.731542, 0, 1.0};
Point(15) = {0.079880, 0.732901, 0, 1.0};
Point(16) = {0.075028, 0.734182, 0, 1.0};
Point(17) = {0.070166, 0.735403, 0, 1.0};
Point(18) = {0.065294, 0.736565, 0, 1.0};
Point(19) = {0.060411, 0.737668, 0, 1.0};
Point(20) = {0.050629, 0.739776, 0, 1.0};
Point(21) = {0.040811, 0.741687, 0, 1.0};
Point(22) = {0.030966, 0.743440, 0, 1.0};
Point(23) = {0.021093, 0.745036, 0, 1.0};
Point(24) = {0.011189, 0.746454, 0, 1.0};
Point(25) = {0.001257, 0.747715, 0, 1.0};
Point(26) = {-0.008709, 0.748778, 0, 1.0};
Point(27) = {-0.013710, 0.749212, 0, 1.0};
Point(28) = {-0.018724, 0.749566, 0, 1.0};
Point(29) = {-0.023752, 0.749842, 0, 1.0};
Point(30) = {-0.028802, 0.750000, 0, 1.0};
Point(31) = {-0.033878, 0.750000, 0, 1.0};
Point(32) = {-0.038997, 0.749764, 0, 1.0};
Point(33) = {-0.041587, 0.749468, 0, 1.0};
Point(34) = {-0.044212, 0.748976, 0, 1.0};
Point(35) = {-0.046917, 0.748030, 0, 1.0};
Point(36) = {-0.048603, 0.747109, 0, 1.0};
Point(37) = {-0.049339, 0.746385, 0, 1.0};
Point(38) = {-0.050000, 0.744938, 0, 1.0};
Point(39) = {-0.049717, 0.744238, 0, 1.0};
Point(40) = {-0.049157, 0.743957, 0, 1.0};
Point(41) = {-0.047746, 0.743323, 0, 1.0};
Point(42) = {-0.045343, 0.742555, 0, 1.0};
Point(43) = {-0.042926, 0.741865, 0, 1.0};
Point(44) = {-0.040498, 0.741235, 0, 1.0};
Point(45) = {-0.035636, 0.740014, 0, 1.0};
Point(46) = {-0.030760, 0.738871, 0, 1.0};
Point(47) = {-0.025878, 0.737768, 0, 1.0};
Point(48) = {-0.020988, 0.736704, 0, 1.0};
Point(49) = {-0.016088, 0.735700, 0, 1.0};
Point(50) = {-0.011185, 0.734715, 0, 1.0};
Point(51) = {-0.001364, 0.732824, 0, 1.0};
Point(52) = {0.008481, 0.731070, 0, 1.0};
Point(53) = {0.018337, 0.729376, 0, 1.0};
Point(54) = {0.028206, 0.727761, 0, 1.0};
Point(55) = {0.038090, 0.726225, 0, 1.0};
Point(56) = {0.047987, 0.724767, 0, 1.0};
Point(57) = {0.057912, 0.723467, 0, 1.0};
Point(58) = {0.062891, 0.722915, 0, 1.0};
Point(59) = {0.067871, 0.722364, 0, 1.0};
Point(60) = {0.072861, 0.721871, 0, 1.0};
Point(61) = {0.077852, 0.721379, 0, 1.0};
Point(62) = {0.082842, 0.720886, 0, 1.0};
Point(63) = {0.087829, 0.720374, 0, 1.0};
Point(64) = {0.092819, 0.719881, 0, 1.0};
Point(65) = {0.097798, 0.719330, 0, 1.0};
Point(66) = {0.102778, 0.718778, 0, 1.0};
Point(67) = {0.107748, 0.718168, 0, 1.0};
Point(68) = {0.112710, 0.717518, 0, 1.0};
Point(69) = {0.117652, 0.716749, 0, 1.0};
Point(70) = {0.122573, 0.715863, 0, 1.0};
Point(71) = {0.127479, 0.714898, 0, 1.0};
Point(72) = {0.132355, 0.713755, 0, 1.0};
Point(73) = {0.137196, 0.712416, 0, 1.0};
Point(74) = {0.142003, 0.710879, 0, 1.0};
Point(75) = {0.146740, 0.708949, 0, 1.0};
Point(76) = {-0.146903, -0.709875, 0, 1.0};
Point(77) = {-0.142180, -0.711884, 0, 1.0};
Point(78) = {-0.137432, -0.713755, 0, 1.0};
Point(79) = {-0.132678, -0.715587, 0, 1.0};
Point(80) = {-0.127913, -0.717360, 0, 1.0};
Point(81) = {-0.123141, -0.719093, 0, 1.0};
Point(82) = {-0.118362, -0.720787, 0, 1.0};
Point(83) = {-0.113580, -0.722462, 0, 1.0};
Point(84) = {-0.108788, -0.724077, 0, 1.0};
Point(85) = {-0.103985, -0.725633, 0, 1.0};
Point(86) = {-0.099182, -0.727189, 0, 1.0};
Point(87) = {-0.094368, -0.728686, 0, 1.0};
Point(88) = {-0.089548, -0.730144, 0, 1.0};
Point(89) = {-0.084717, -0.731542, 0, 1.0};
Point(90) = {-0.079880, -0.732901, 0, 1.0};
Point(91) = {-0.075028, -0.734182, 0, 1.0};
Point(92) = {-0.070166, -0.735403, 0, 1.0};
Point(93) = {-0.065294, -0.736565, 0, 1.0};
Point(94) = {-0.060411, -0.737668, 0, 1.0};
Point(95) = {-0.050629, -0.739776, 0, 1.0};
Point(96) = {-0.040811, -0.741687, 0, 1.0};
Point(97) = {-0.030966, -0.743440, 0, 1.0};
Point(98) = {-0.021093, -0.745036, 0, 1.0};
Point(99) = {-0.011189, -0.746454, 0, 1.0};
Point(100) = {-0.001257, -0.747715, 0, 1.0};
Point(101) = {0.008709, -0.748778, 0, 1.0};
Point(102) = {0.013710, -0.749212, 0, 1.0};
Point(103) = {0.018724, -0.749566, 0, 1.0};
Point(104) = {0.023752, -0.749842, 0, 1.0};
Point(105) = {0.028802, -0.750000, 0, 1.0};
Point(106) = {0.033878, -0.750000, 0, 1.0};
Point(107) = {0.038997, -0.749764, 0, 1.0};
Point(108) = {0.041587, -0.749468, 0, 1.0};
Point(109) = {0.044212, -0.748976, 0, 1.0};
Point(110) = {0.046917, -0.748030, 0, 1.0};
Point(111) = {0.048603, -0.747109, 0, 1.0};
Point(112) = {0.049339, -0.746385, 0, 1.0};
Point(113) = {0.050000, -0.744938, 0, 1.0};
Point(114) = {0.049717, -0.744238, 0, 1.0};
Point(115) = {0.049157, -0.743957, 0, 1.0};
Point(116) = {0.047746, -0.743323, 0, 1.0};
Point(117) = {0.045343, -0.742555, 0, 1.0};
Point(118) = {0.042926, -0.741865, 0, 1.0};
Point(119) = {0.040498, -0.741235, 0, 1.0};
Point(120) = {0.035636, -0.740014, 0, 1.0};
Point(121) = {0.030760, -0.738871, 0, 1.0};
Point(122) = {0.025878, -0.737768, 0, 1.0};
Point(123) = {0.020988, -0.736704, 0, 1.0};
Point(124) = {0.016088, -0.735700, 0, 1.0};
Point(125) = {0.011185, -0.734715, 0, 1.0};
Point(126) = {0.001364, -0.732824, 0, 1.0};
Point(127) = {-0.008481, -0.731070, 0, 1.0};
Point(128) = {-0.018337, -0.729376, 0, 1.0};
Point(129) = {-0.028206, -0.727761, 0, 1.0};
Point(130) = {-0.038090, -0.726225, 0, 1.0};
Point(131) = {-0.047987, -0.724767, 0, 1.0};
Point(132) = {-0.057912, -0.723467, 0, 1.0};
Point(133) = {-0.062891, -0.722915, 0, 1.0};
Point(134) = {-0.067871, -0.722364, 0, 1.0};
Point(135) = {-0.072861, -0.721871, 0, 1.0};
Point(136) = {-0.077852, -0.721379, 0, 1.0};
Point(137) = {-0.082842, -0.720886, 0, 1.0};
Point(138) = {-0.087829, -0.720374, 0, 1.0};
Point(139) = {-0.092819, -0.719881, 0, 1.0};
Point(140) = {-0.097798, -0.719330, 0, 1.0};
Point(141) = {-0.102778, -0.718778, 0, 1.0};
Point(142) = {-0.107748, -0.718168, 0, 1.0};
Point(143) = {-0.112710, -0.717518, 0, 1.0};
Point(144) = {-0.117652, -0.716749, 0, 1.0};
Point(145) = {-0.122573, -0.715863, 0, 1.0};
Point(146) = {-0.127479, -0.714898, 0, 1.0};
Point(147) = {-0.132355, -0.713755, 0, 1.0};
Point(148) = {-0.137196, -0.712416, 0, 1.0};
Point(149) = {-0.142003, -0.710879, 0, 1.0};
Point(150) = {-0.146740, -0.708949, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:99};
Spline(6) = {99:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
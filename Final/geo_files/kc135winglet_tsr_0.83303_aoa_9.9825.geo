SetFactory("OpenCASCADE");

Point(1) = {0.110177, 0.719906, 0, 1.0};
Point(2) = {0.106635, 0.721413, 0, 1.0};
Point(3) = {0.103074, 0.722816, 0, 1.0};
Point(4) = {0.099508, 0.724190, 0, 1.0};
Point(5) = {0.095935, 0.725520, 0, 1.0};
Point(6) = {0.092356, 0.726820, 0, 1.0};
Point(7) = {0.088772, 0.728090, 0, 1.0};
Point(8) = {0.085185, 0.729346, 0, 1.0};
Point(9) = {0.081591, 0.730558, 0, 1.0};
Point(10) = {0.077989, 0.731725, 0, 1.0};
Point(11) = {0.074386, 0.732892, 0, 1.0};
Point(12) = {0.070776, 0.734015, 0, 1.0};
Point(13) = {0.067161, 0.735108, 0, 1.0};
Point(14) = {0.063538, 0.736157, 0, 1.0};
Point(15) = {0.059910, 0.737176, 0, 1.0};
Point(16) = {0.056271, 0.738136, 0, 1.0};
Point(17) = {0.052625, 0.739052, 0, 1.0};
Point(18) = {0.048971, 0.739924, 0, 1.0};
Point(19) = {0.045309, 0.740751, 0, 1.0};
Point(20) = {0.037971, 0.742332, 0, 1.0};
Point(21) = {0.030608, 0.743765, 0, 1.0};
Point(22) = {0.023225, 0.745080, 0, 1.0};
Point(23) = {0.015820, 0.746277, 0, 1.0};
Point(24) = {0.008392, 0.747340, 0, 1.0};
Point(25) = {0.000943, 0.748286, 0, 1.0};
Point(26) = {-0.006532, 0.749084, 0, 1.0};
Point(27) = {-0.010282, 0.749409, 0, 1.0};
Point(28) = {-0.014043, 0.749675, 0, 1.0};
Point(29) = {-0.017814, 0.749882, 0, 1.0};
Point(30) = {-0.021601, 0.750000, 0, 1.0};
Point(31) = {-0.025409, 0.750000, 0, 1.0};
Point(32) = {-0.029248, 0.749823, 0, 1.0};
Point(33) = {-0.031190, 0.749601, 0, 1.0};
Point(34) = {-0.033159, 0.749232, 0, 1.0};
Point(35) = {-0.035188, 0.748523, 0, 1.0};
Point(36) = {-0.036452, 0.747831, 0, 1.0};
Point(37) = {-0.037004, 0.747289, 0, 1.0};
Point(38) = {-0.037500, 0.746203, 0, 1.0};
Point(39) = {-0.037288, 0.745679, 0, 1.0};
Point(40) = {-0.036868, 0.745468, 0, 1.0};
Point(41) = {-0.035809, 0.744992, 0, 1.0};
Point(42) = {-0.034007, 0.744416, 0, 1.0};
Point(43) = {-0.032194, 0.743899, 0, 1.0};
Point(44) = {-0.030374, 0.743426, 0, 1.0};
Point(45) = {-0.026727, 0.742510, 0, 1.0};
Point(46) = {-0.023070, 0.741653, 0, 1.0};
Point(47) = {-0.019408, 0.740826, 0, 1.0};
Point(48) = {-0.015741, 0.740028, 0, 1.0};
Point(49) = {-0.012066, 0.739275, 0, 1.0};
Point(50) = {-0.008388, 0.738536, 0, 1.0};
Point(51) = {-0.001023, 0.737118, 0, 1.0};
Point(52) = {0.006361, 0.735803, 0, 1.0};
Point(53) = {0.013753, 0.734532, 0, 1.0};
Point(54) = {0.021155, 0.733321, 0, 1.0};
Point(55) = {0.028567, 0.732168, 0, 1.0};
Point(56) = {0.035990, 0.731075, 0, 1.0};
Point(57) = {0.043434, 0.730100, 0, 1.0};
Point(58) = {0.047169, 0.729686, 0, 1.0};
Point(59) = {0.050903, 0.729273, 0, 1.0};
Point(60) = {0.054646, 0.728903, 0, 1.0};
Point(61) = {0.058389, 0.728534, 0, 1.0};
Point(62) = {0.062131, 0.728165, 0, 1.0};
Point(63) = {0.065871, 0.727780, 0, 1.0};
Point(64) = {0.069614, 0.727411, 0, 1.0};
Point(65) = {0.073349, 0.726997, 0, 1.0};
Point(66) = {0.077084, 0.726584, 0, 1.0};
Point(67) = {0.080811, 0.726126, 0, 1.0};
Point(68) = {0.084533, 0.725638, 0, 1.0};
Point(69) = {0.088239, 0.725062, 0, 1.0};
Point(70) = {0.091929, 0.724397, 0, 1.0};
Point(71) = {0.095610, 0.723673, 0, 1.0};
Point(72) = {0.099266, 0.722816, 0, 1.0};
Point(73) = {0.102897, 0.721812, 0, 1.0};
Point(74) = {0.106502, 0.720659, 0, 1.0};
Point(75) = {0.110055, 0.719212, 0, 1.0};
Point(76) = {-0.110177, -0.719906, 0, 1.0};
Point(77) = {-0.106635, -0.721413, 0, 1.0};
Point(78) = {-0.103074, -0.722816, 0, 1.0};
Point(79) = {-0.099508, -0.724190, 0, 1.0};
Point(80) = {-0.095935, -0.725520, 0, 1.0};
Point(81) = {-0.092356, -0.726820, 0, 1.0};
Point(82) = {-0.088772, -0.728090, 0, 1.0};
Point(83) = {-0.085185, -0.729346, 0, 1.0};
Point(84) = {-0.081591, -0.730558, 0, 1.0};
Point(85) = {-0.077989, -0.731725, 0, 1.0};
Point(86) = {-0.074386, -0.732892, 0, 1.0};
Point(87) = {-0.070776, -0.734015, 0, 1.0};
Point(88) = {-0.067161, -0.735108, 0, 1.0};
Point(89) = {-0.063538, -0.736157, 0, 1.0};
Point(90) = {-0.059910, -0.737176, 0, 1.0};
Point(91) = {-0.056271, -0.738136, 0, 1.0};
Point(92) = {-0.052625, -0.739052, 0, 1.0};
Point(93) = {-0.048971, -0.739924, 0, 1.0};
Point(94) = {-0.045309, -0.740751, 0, 1.0};
Point(95) = {-0.037971, -0.742332, 0, 1.0};
Point(96) = {-0.030608, -0.743765, 0, 1.0};
Point(97) = {-0.023225, -0.745080, 0, 1.0};
Point(98) = {-0.015820, -0.746277, 0, 1.0};
Point(99) = {-0.008392, -0.747340, 0, 1.0};
Point(100) = {-0.000943, -0.748286, 0, 1.0};
Point(101) = {0.006532, -0.749084, 0, 1.0};
Point(102) = {0.010282, -0.749409, 0, 1.0};
Point(103) = {0.014043, -0.749675, 0, 1.0};
Point(104) = {0.017814, -0.749882, 0, 1.0};
Point(105) = {0.021601, -0.750000, 0, 1.0};
Point(106) = {0.025409, -0.750000, 0, 1.0};
Point(107) = {0.029248, -0.749823, 0, 1.0};
Point(108) = {0.031190, -0.749601, 0, 1.0};
Point(109) = {0.033159, -0.749232, 0, 1.0};
Point(110) = {0.035188, -0.748523, 0, 1.0};
Point(111) = {0.036452, -0.747831, 0, 1.0};
Point(112) = {0.037004, -0.747289, 0, 1.0};
Point(113) = {0.037500, -0.746203, 0, 1.0};
Point(114) = {0.037288, -0.745679, 0, 1.0};
Point(115) = {0.036868, -0.745468, 0, 1.0};
Point(116) = {0.035809, -0.744992, 0, 1.0};
Point(117) = {0.034007, -0.744416, 0, 1.0};
Point(118) = {0.032194, -0.743899, 0, 1.0};
Point(119) = {0.030374, -0.743426, 0, 1.0};
Point(120) = {0.026727, -0.742510, 0, 1.0};
Point(121) = {0.023070, -0.741653, 0, 1.0};
Point(122) = {0.019408, -0.740826, 0, 1.0};
Point(123) = {0.015741, -0.740028, 0, 1.0};
Point(124) = {0.012066, -0.739275, 0, 1.0};
Point(125) = {0.008388, -0.738536, 0, 1.0};
Point(126) = {0.001023, -0.737118, 0, 1.0};
Point(127) = {-0.006361, -0.735803, 0, 1.0};
Point(128) = {-0.013753, -0.734532, 0, 1.0};
Point(129) = {-0.021155, -0.733321, 0, 1.0};
Point(130) = {-0.028567, -0.732168, 0, 1.0};
Point(131) = {-0.035990, -0.731075, 0, 1.0};
Point(132) = {-0.043434, -0.730100, 0, 1.0};
Point(133) = {-0.047169, -0.729686, 0, 1.0};
Point(134) = {-0.050903, -0.729273, 0, 1.0};
Point(135) = {-0.054646, -0.728903, 0, 1.0};
Point(136) = {-0.058389, -0.728534, 0, 1.0};
Point(137) = {-0.062131, -0.728165, 0, 1.0};
Point(138) = {-0.065871, -0.727780, 0, 1.0};
Point(139) = {-0.069614, -0.727411, 0, 1.0};
Point(140) = {-0.073349, -0.726997, 0, 1.0};
Point(141) = {-0.077084, -0.726584, 0, 1.0};
Point(142) = {-0.080811, -0.726126, 0, 1.0};
Point(143) = {-0.084533, -0.725638, 0, 1.0};
Point(144) = {-0.088239, -0.725062, 0, 1.0};
Point(145) = {-0.091929, -0.724397, 0, 1.0};
Point(146) = {-0.095610, -0.723673, 0, 1.0};
Point(147) = {-0.099266, -0.722816, 0, 1.0};
Point(148) = {-0.102897, -0.721812, 0, 1.0};
Point(149) = {-0.106502, -0.720659, 0, 1.0};
Point(150) = {-0.110055, -0.719212, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:99};
Spline(6) = {99:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.075015, 0.731130, 0, 1.0};
Point(2) = {0.074380, 0.731248, 0, 1.0};
Point(3) = {0.071955, 0.731773, 0, 1.0};
Point(4) = {0.069239, 0.732352, 0, 1.0};
Point(5) = {0.066245, 0.732991, 0, 1.0};
Point(6) = {0.062983, 0.733692, 0, 1.0};
Point(7) = {0.059467, 0.734462, 0, 1.0};
Point(8) = {0.055714, 0.735304, 0, 1.0};
Point(9) = {0.051740, 0.736215, 0, 1.0};
Point(10) = {0.047562, 0.737196, 0, 1.0};
Point(11) = {0.043196, 0.738240, 0, 1.0};
Point(12) = {0.038661, 0.739340, 0, 1.0};
Point(13) = {0.033979, 0.740480, 0, 1.0};
Point(14) = {0.029168, 0.741653, 0, 1.0};
Point(15) = {0.024249, 0.742846, 0, 1.0};
Point(16) = {0.019243, 0.744043, 0, 1.0};
Point(17) = {0.014169, 0.745229, 0, 1.0};
Point(18) = {0.009052, 0.746370, 0, 1.0};
Point(19) = {0.003913, 0.747427, 0, 1.0};
Point(20) = {-0.001228, 0.748348, 0, 1.0};
Point(21) = {-0.006349, 0.749088, 0, 1.0};
Point(22) = {-0.011429, 0.749618, 0, 1.0};
Point(23) = {-0.016444, 0.749922, 0, 1.0};
Point(24) = {-0.021374, 0.750000, 0, 1.0};
Point(25) = {-0.026198, 0.749861, 0, 1.0};
Point(26) = {-0.030894, 0.749520, 0, 1.0};
Point(27) = {-0.035445, 0.748994, 0, 1.0};
Point(28) = {-0.039828, 0.748305, 0, 1.0};
Point(29) = {-0.044024, 0.747475, 0, 1.0};
Point(30) = {-0.048016, 0.746526, 0, 1.0};
Point(31) = {-0.051787, 0.745472, 0, 1.0};
Point(32) = {-0.055322, 0.744328, 0, 1.0};
Point(33) = {-0.058603, 0.743110, 0, 1.0};
Point(34) = {-0.061616, 0.741832, 0, 1.0};
Point(35) = {-0.064350, 0.740511, 0, 1.0};
Point(36) = {-0.066793, 0.739165, 0, 1.0};
Point(37) = {-0.068933, 0.737809, 0, 1.0};
Point(38) = {-0.070762, 0.736468, 0, 1.0};
Point(39) = {-0.072269, 0.735156, 0, 1.0};
Point(40) = {-0.073452, 0.733899, 0, 1.0};
Point(41) = {-0.074302, 0.732732, 0, 1.0};
Point(42) = {-0.074818, 0.731669, 0, 1.0};
Point(43) = {-0.074996, 0.730696, 0, 1.0};
Point(44) = {-0.074837, 0.729743, 0, 1.0};
Point(45) = {-0.074341, 0.728794, 0, 1.0};
Point(46) = {-0.073511, 0.727874, 0, 1.0};
Point(47) = {-0.072349, 0.727016, 0, 1.0};
Point(48) = {-0.070862, 0.726233, 0, 1.0};
Point(49) = {-0.069053, 0.725524, 0, 1.0};
Point(50) = {-0.066933, 0.724896, 0, 1.0};
Point(51) = {-0.064508, 0.724346, 0, 1.0};
Point(52) = {-0.061791, 0.723872, 0, 1.0};
Point(53) = {-0.058795, 0.723470, 0, 1.0};
Point(54) = {-0.055529, 0.723138, 0, 1.0};
Point(55) = {-0.052008, 0.722874, 0, 1.0};
Point(56) = {-0.048249, 0.722672, 0, 1.0};
Point(57) = {-0.044268, 0.722527, 0, 1.0};
Point(58) = {-0.040081, 0.722438, 0, 1.0};
Point(59) = {-0.035705, 0.722398, 0, 1.0};
Point(60) = {-0.031159, 0.722404, 0, 1.0};
Point(61) = {-0.026466, 0.722457, 0, 1.0};
Point(62) = {-0.021642, 0.722557, 0, 1.0};
Point(63) = {-0.016710, 0.722702, 0, 1.0};
Point(64) = {-0.011690, 0.722896, 0, 1.0};
Point(65) = {-0.006603, 0.723134, 0, 1.0};
Point(66) = {-0.001472, 0.723419, 0, 1.0};
Point(67) = {0.003681, 0.723748, 0, 1.0};
Point(68) = {0.008835, 0.724119, 0, 1.0};
Point(69) = {0.013967, 0.724527, 0, 1.0};
Point(70) = {0.019056, 0.724967, 0, 1.0};
Point(71) = {0.024079, 0.725433, 0, 1.0};
Point(72) = {0.029015, 0.725917, 0, 1.0};
Point(73) = {0.033842, 0.726410, 0, 1.0};
Point(74) = {0.038540, 0.726902, 0, 1.0};
Point(75) = {0.043090, 0.727384, 0, 1.0};
Point(76) = {0.047471, 0.727840, 0, 1.0};
Point(77) = {0.051663, 0.728262, 0, 1.0};
Point(78) = {0.055649, 0.728638, 0, 1.0};
Point(79) = {0.059413, 0.728957, 0, 1.0};
Point(80) = {0.062939, 0.729217, 0, 1.0};
Point(81) = {0.066210, 0.729413, 0, 1.0};
Point(82) = {0.069212, 0.729543, 0, 1.0};
Point(83) = {0.071934, 0.729608, 0, 1.0};
Point(84) = {0.074364, 0.729612, 0, 1.0};
Point(85) = {0.075000, 0.729603, 0, 1.0};
Point(86) = {-0.075015, -0.731130, 0, 1.0};
Point(87) = {-0.074380, -0.731248, 0, 1.0};
Point(88) = {-0.071955, -0.731773, 0, 1.0};
Point(89) = {-0.069239, -0.732352, 0, 1.0};
Point(90) = {-0.066245, -0.732991, 0, 1.0};
Point(91) = {-0.062983, -0.733692, 0, 1.0};
Point(92) = {-0.059467, -0.734462, 0, 1.0};
Point(93) = {-0.055714, -0.735304, 0, 1.0};
Point(94) = {-0.051740, -0.736215, 0, 1.0};
Point(95) = {-0.047562, -0.737196, 0, 1.0};
Point(96) = {-0.043196, -0.738240, 0, 1.0};
Point(97) = {-0.038661, -0.739340, 0, 1.0};
Point(98) = {-0.033979, -0.740480, 0, 1.0};
Point(99) = {-0.029168, -0.741653, 0, 1.0};
Point(100) = {-0.024249, -0.742846, 0, 1.0};
Point(101) = {-0.019243, -0.744043, 0, 1.0};
Point(102) = {-0.014169, -0.745229, 0, 1.0};
Point(103) = {-0.009052, -0.746370, 0, 1.0};
Point(104) = {-0.003913, -0.747427, 0, 1.0};
Point(105) = {0.001228, -0.748348, 0, 1.0};
Point(106) = {0.006349, -0.749088, 0, 1.0};
Point(107) = {0.011429, -0.749618, 0, 1.0};
Point(108) = {0.016444, -0.749922, 0, 1.0};
Point(109) = {0.021374, -0.750000, 0, 1.0};
Point(110) = {0.026198, -0.749861, 0, 1.0};
Point(111) = {0.030894, -0.749520, 0, 1.0};
Point(112) = {0.035445, -0.748994, 0, 1.0};
Point(113) = {0.039828, -0.748305, 0, 1.0};
Point(114) = {0.044024, -0.747475, 0, 1.0};
Point(115) = {0.048016, -0.746526, 0, 1.0};
Point(116) = {0.051787, -0.745472, 0, 1.0};
Point(117) = {0.055322, -0.744328, 0, 1.0};
Point(118) = {0.058603, -0.743110, 0, 1.0};
Point(119) = {0.061616, -0.741832, 0, 1.0};
Point(120) = {0.064350, -0.740511, 0, 1.0};
Point(121) = {0.066793, -0.739165, 0, 1.0};
Point(122) = {0.068933, -0.737809, 0, 1.0};
Point(123) = {0.070762, -0.736468, 0, 1.0};
Point(124) = {0.072269, -0.735156, 0, 1.0};
Point(125) = {0.073452, -0.733899, 0, 1.0};
Point(126) = {0.074302, -0.732732, 0, 1.0};
Point(127) = {0.074818, -0.731669, 0, 1.0};
Point(128) = {0.074996, -0.730696, 0, 1.0};
Point(129) = {0.074837, -0.729743, 0, 1.0};
Point(130) = {0.074341, -0.728794, 0, 1.0};
Point(131) = {0.073511, -0.727874, 0, 1.0};
Point(132) = {0.072349, -0.727016, 0, 1.0};
Point(133) = {0.070862, -0.726233, 0, 1.0};
Point(134) = {0.069053, -0.725524, 0, 1.0};
Point(135) = {0.066933, -0.724896, 0, 1.0};
Point(136) = {0.064508, -0.724346, 0, 1.0};
Point(137) = {0.061791, -0.723872, 0, 1.0};
Point(138) = {0.058795, -0.723470, 0, 1.0};
Point(139) = {0.055529, -0.723138, 0, 1.0};
Point(140) = {0.052008, -0.722874, 0, 1.0};
Point(141) = {0.048249, -0.722672, 0, 1.0};
Point(142) = {0.044268, -0.722527, 0, 1.0};
Point(143) = {0.040081, -0.722438, 0, 1.0};
Point(144) = {0.035705, -0.722398, 0, 1.0};
Point(145) = {0.031159, -0.722404, 0, 1.0};
Point(146) = {0.026466, -0.722457, 0, 1.0};
Point(147) = {0.021642, -0.722557, 0, 1.0};
Point(148) = {0.016710, -0.722702, 0, 1.0};
Point(149) = {0.011690, -0.722896, 0, 1.0};
Point(150) = {0.006603, -0.723134, 0, 1.0};
Point(151) = {0.001472, -0.723419, 0, 1.0};
Point(152) = {-0.003681, -0.723748, 0, 1.0};
Point(153) = {-0.008835, -0.724119, 0, 1.0};
Point(154) = {-0.013967, -0.724527, 0, 1.0};
Point(155) = {-0.019056, -0.724967, 0, 1.0};
Point(156) = {-0.024079, -0.725433, 0, 1.0};
Point(157) = {-0.029015, -0.725917, 0, 1.0};
Point(158) = {-0.033842, -0.726410, 0, 1.0};
Point(159) = {-0.038540, -0.726902, 0, 1.0};
Point(160) = {-0.043090, -0.727384, 0, 1.0};
Point(161) = {-0.047471, -0.727840, 0, 1.0};
Point(162) = {-0.051663, -0.728262, 0, 1.0};
Point(163) = {-0.055649, -0.728638, 0, 1.0};
Point(164) = {-0.059413, -0.728957, 0, 1.0};
Point(165) = {-0.062939, -0.729217, 0, 1.0};
Point(166) = {-0.066210, -0.729413, 0, 1.0};
Point(167) = {-0.069212, -0.729543, 0, 1.0};
Point(168) = {-0.071934, -0.729608, 0, 1.0};
Point(169) = {-0.074364, -0.729612, 0, 1.0};
Point(170) = {-0.075000, -0.729603, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
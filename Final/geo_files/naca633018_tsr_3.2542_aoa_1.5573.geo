SetFactory("OpenCASCADE");

Point(1) = {0.074993, 0.733716, 0, 1.0};
Point(2) = {0.074150, 0.733838, 0, 1.0};
Point(3) = {0.071399, 0.734268, 0, 1.0};
Point(4) = {0.068366, 0.734789, 0, 1.0};
Point(5) = {0.065063, 0.735397, 0, 1.0};
Point(6) = {0.061504, 0.736087, 0, 1.0};
Point(7) = {0.057706, 0.736860, 0, 1.0};
Point(8) = {0.053685, 0.737711, 0, 1.0};
Point(9) = {0.049457, 0.738632, 0, 1.0};
Point(10) = {0.045040, 0.739613, 0, 1.0};
Point(11) = {0.040452, 0.740635, 0, 1.0};
Point(12) = {0.035715, 0.741686, 0, 1.0};
Point(13) = {0.030847, 0.742746, 0, 1.0};
Point(14) = {0.025869, 0.743800, 0, 1.0};
Point(15) = {0.020801, 0.744825, 0, 1.0};
Point(16) = {0.015664, 0.745807, 0, 1.0};
Point(17) = {0.010482, 0.746725, 0, 1.0};
Point(18) = {0.005275, 0.747561, 0, 1.0};
Point(19) = {0.000066, 0.748298, 0, 1.0};
Point(20) = {-0.005124, 0.748917, 0, 1.0};
Point(21) = {-0.010275, 0.749407, 0, 1.0};
Point(22) = {-0.015361, 0.749753, 0, 1.0};
Point(23) = {-0.020362, 0.749950, 0, 1.0};
Point(24) = {-0.025258, 0.750000, 0, 1.0};
Point(25) = {-0.030026, 0.749914, 0, 1.0};
Point(26) = {-0.034647, 0.749705, 0, 1.0};
Point(27) = {-0.039100, 0.749386, 0, 1.0};
Point(28) = {-0.043364, 0.748963, 0, 1.0};
Point(29) = {-0.047422, 0.748447, 0, 1.0};
Point(30) = {-0.051258, 0.747849, 0, 1.0};
Point(31) = {-0.054853, 0.747179, 0, 1.0};
Point(32) = {-0.058193, 0.746443, 0, 1.0};
Point(33) = {-0.061261, 0.745645, 0, 1.0};
Point(34) = {-0.064048, 0.744795, 0, 1.0};
Point(35) = {-0.066540, 0.743905, 0, 1.0};
Point(36) = {-0.068724, 0.742990, 0, 1.0};
Point(37) = {-0.070593, 0.742051, 0, 1.0};
Point(38) = {-0.072138, 0.741049, 0, 1.0};
Point(39) = {-0.073356, 0.739963, 0, 1.0};
Point(40) = {-0.074238, 0.738872, 0, 1.0};
Point(41) = {-0.074778, 0.737887, 0, 1.0};
Point(42) = {-0.074972, 0.737031, 0, 1.0};
Point(43) = {-0.074825, 0.736165, 0, 1.0};
Point(44) = {-0.074339, 0.735152, 0, 1.0};
Point(45) = {-0.073517, 0.734015, 0, 1.0};
Point(46) = {-0.072360, 0.732864, 0, 1.0};
Point(47) = {-0.070872, 0.731779, 0, 1.0};
Point(48) = {-0.069057, 0.730740, 0, 1.0};
Point(49) = {-0.066926, 0.729708, 0, 1.0};
Point(50) = {-0.064486, 0.728684, 0, 1.0};
Point(51) = {-0.061750, 0.727683, 0, 1.0};
Point(52) = {-0.058729, 0.726720, 0, 1.0};
Point(53) = {-0.055434, 0.725804, 0, 1.0};
Point(54) = {-0.051880, 0.724939, 0, 1.0};
Point(55) = {-0.048083, 0.724134, 0, 1.0};
Point(56) = {-0.044059, 0.723398, 0, 1.0};
Point(57) = {-0.039824, 0.722744, 0, 1.0};
Point(58) = {-0.035395, 0.722184, 0, 1.0};
Point(59) = {-0.030792, 0.721724, 0, 1.0};
Point(60) = {-0.026036, 0.721379, 0, 1.0};
Point(61) = {-0.021145, 0.721163, 0, 1.0};
Point(62) = {-0.016140, 0.721088, 0, 1.0};
Point(63) = {-0.011043, 0.721157, 0, 1.0};
Point(64) = {-0.005873, 0.721367, 0, 1.0};
Point(65) = {-0.000657, 0.721703, 0, 1.0};
Point(66) = {0.004585, 0.722155, 0, 1.0};
Point(67) = {0.009829, 0.722707, 0, 1.0};
Point(68) = {0.015053, 0.723342, 0, 1.0};
Point(69) = {0.020236, 0.724044, 0, 1.0};
Point(70) = {0.025352, 0.724792, 0, 1.0};
Point(71) = {0.030380, 0.725574, 0, 1.0};
Point(72) = {0.035299, 0.726367, 0, 1.0};
Point(73) = {0.040086, 0.727160, 0, 1.0};
Point(74) = {0.044722, 0.727931, 0, 1.0};
Point(75) = {0.049187, 0.728670, 0, 1.0};
Point(76) = {0.053458, 0.729360, 0, 1.0};
Point(77) = {0.057519, 0.729992, 0, 1.0};
Point(78) = {0.061354, 0.730558, 0, 1.0};
Point(79) = {0.064945, 0.731053, 0, 1.0};
Point(80) = {0.068276, 0.731481, 0, 1.0};
Point(81) = {0.071332, 0.731836, 0, 1.0};
Point(82) = {0.074104, 0.732116, 0, 1.0};
Point(83) = {0.074952, 0.732191, 0, 1.0};
Point(84) = {-0.074993, -0.733716, 0, 1.0};
Point(85) = {-0.074150, -0.733838, 0, 1.0};
Point(86) = {-0.071399, -0.734268, 0, 1.0};
Point(87) = {-0.068366, -0.734789, 0, 1.0};
Point(88) = {-0.065063, -0.735397, 0, 1.0};
Point(89) = {-0.061504, -0.736087, 0, 1.0};
Point(90) = {-0.057706, -0.736860, 0, 1.0};
Point(91) = {-0.053685, -0.737711, 0, 1.0};
Point(92) = {-0.049457, -0.738632, 0, 1.0};
Point(93) = {-0.045040, -0.739613, 0, 1.0};
Point(94) = {-0.040452, -0.740635, 0, 1.0};
Point(95) = {-0.035715, -0.741686, 0, 1.0};
Point(96) = {-0.030847, -0.742746, 0, 1.0};
Point(97) = {-0.025869, -0.743800, 0, 1.0};
Point(98) = {-0.020801, -0.744825, 0, 1.0};
Point(99) = {-0.015664, -0.745807, 0, 1.0};
Point(100) = {-0.010482, -0.746725, 0, 1.0};
Point(101) = {-0.005275, -0.747561, 0, 1.0};
Point(102) = {-0.000066, -0.748298, 0, 1.0};
Point(103) = {0.005124, -0.748917, 0, 1.0};
Point(104) = {0.010275, -0.749407, 0, 1.0};
Point(105) = {0.015361, -0.749753, 0, 1.0};
Point(106) = {0.020362, -0.749950, 0, 1.0};
Point(107) = {0.025258, -0.750000, 0, 1.0};
Point(108) = {0.030026, -0.749914, 0, 1.0};
Point(109) = {0.034647, -0.749705, 0, 1.0};
Point(110) = {0.039100, -0.749386, 0, 1.0};
Point(111) = {0.043364, -0.748963, 0, 1.0};
Point(112) = {0.047422, -0.748447, 0, 1.0};
Point(113) = {0.051258, -0.747849, 0, 1.0};
Point(114) = {0.054853, -0.747179, 0, 1.0};
Point(115) = {0.058193, -0.746443, 0, 1.0};
Point(116) = {0.061261, -0.745645, 0, 1.0};
Point(117) = {0.064048, -0.744795, 0, 1.0};
Point(118) = {0.066540, -0.743905, 0, 1.0};
Point(119) = {0.068724, -0.742990, 0, 1.0};
Point(120) = {0.070593, -0.742051, 0, 1.0};
Point(121) = {0.072138, -0.741049, 0, 1.0};
Point(122) = {0.073356, -0.739963, 0, 1.0};
Point(123) = {0.074238, -0.738872, 0, 1.0};
Point(124) = {0.074778, -0.737887, 0, 1.0};
Point(125) = {0.074972, -0.737031, 0, 1.0};
Point(126) = {0.074825, -0.736165, 0, 1.0};
Point(127) = {0.074339, -0.735152, 0, 1.0};
Point(128) = {0.073517, -0.734015, 0, 1.0};
Point(129) = {0.072360, -0.732864, 0, 1.0};
Point(130) = {0.070872, -0.731779, 0, 1.0};
Point(131) = {0.069057, -0.730740, 0, 1.0};
Point(132) = {0.066926, -0.729708, 0, 1.0};
Point(133) = {0.064486, -0.728684, 0, 1.0};
Point(134) = {0.061750, -0.727683, 0, 1.0};
Point(135) = {0.058729, -0.726720, 0, 1.0};
Point(136) = {0.055434, -0.725804, 0, 1.0};
Point(137) = {0.051880, -0.724939, 0, 1.0};
Point(138) = {0.048083, -0.724134, 0, 1.0};
Point(139) = {0.044059, -0.723398, 0, 1.0};
Point(140) = {0.039824, -0.722744, 0, 1.0};
Point(141) = {0.035395, -0.722184, 0, 1.0};
Point(142) = {0.030792, -0.721724, 0, 1.0};
Point(143) = {0.026036, -0.721379, 0, 1.0};
Point(144) = {0.021145, -0.721163, 0, 1.0};
Point(145) = {0.016140, -0.721088, 0, 1.0};
Point(146) = {0.011043, -0.721157, 0, 1.0};
Point(147) = {0.005873, -0.721367, 0, 1.0};
Point(148) = {0.000657, -0.721703, 0, 1.0};
Point(149) = {-0.004585, -0.722155, 0, 1.0};
Point(150) = {-0.009829, -0.722707, 0, 1.0};
Point(151) = {-0.015053, -0.723342, 0, 1.0};
Point(152) = {-0.020236, -0.724044, 0, 1.0};
Point(153) = {-0.025352, -0.724792, 0, 1.0};
Point(154) = {-0.030380, -0.725574, 0, 1.0};
Point(155) = {-0.035299, -0.726367, 0, 1.0};
Point(156) = {-0.040086, -0.727160, 0, 1.0};
Point(157) = {-0.044722, -0.727931, 0, 1.0};
Point(158) = {-0.049187, -0.728670, 0, 1.0};
Point(159) = {-0.053458, -0.729360, 0, 1.0};
Point(160) = {-0.057519, -0.729992, 0, 1.0};
Point(161) = {-0.061354, -0.730558, 0, 1.0};
Point(162) = {-0.064945, -0.731053, 0, 1.0};
Point(163) = {-0.068276, -0.731481, 0, 1.0};
Point(164) = {-0.071332, -0.731836, 0, 1.0};
Point(165) = {-0.074104, -0.732116, 0, 1.0};
Point(166) = {-0.074952, -0.732191, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
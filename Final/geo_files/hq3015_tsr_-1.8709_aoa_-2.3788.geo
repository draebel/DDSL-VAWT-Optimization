SetFactory("OpenCASCADE");

Point(1) = {0.074870, 0.739007, 0, 1.0};
Point(2) = {0.073786, 0.739188, 0, 1.0};
Point(3) = {0.069831, 0.739970, 0, 1.0};
Point(4) = {0.065878, 0.740717, 0, 1.0};
Point(5) = {0.061924, 0.741477, 0, 1.0};
Point(6) = {0.057970, 0.742231, 0, 1.0};
Point(7) = {0.054016, 0.742989, 0, 1.0};
Point(8) = {0.050062, 0.743743, 0, 1.0};
Point(9) = {0.042158, 0.745170, 0, 1.0};
Point(10) = {0.034259, 0.746472, 0, 1.0};
Point(11) = {0.026367, 0.747606, 0, 1.0};
Point(12) = {0.018482, 0.748565, 0, 1.0};
Point(13) = {0.010607, 0.749297, 0, 1.0};
Point(14) = {0.002742, 0.749779, 0, 1.0};
Point(15) = {-0.005112, 0.750000, 0, 1.0};
Point(16) = {-0.012956, 0.749968, 0, 1.0};
Point(17) = {-0.016874, 0.749861, 0, 1.0};
Point(18) = {-0.020789, 0.749689, 0, 1.0};
Point(19) = {-0.024701, 0.749444, 0, 1.0};
Point(20) = {-0.028610, 0.749120, 0, 1.0};
Point(21) = {-0.032516, 0.748725, 0, 1.0};
Point(22) = {-0.036420, 0.748263, 0, 1.0};
Point(23) = {-0.040320, 0.747728, 0, 1.0};
Point(24) = {-0.044216, 0.747092, 0, 1.0};
Point(25) = {-0.048107, 0.746334, 0, 1.0};
Point(26) = {-0.051992, 0.745442, 0, 1.0};
Point(27) = {-0.055871, 0.744394, 0, 1.0};
Point(28) = {-0.059741, 0.743137, 0, 1.0};
Point(29) = {-0.063600, 0.741600, 0, 1.0};
Point(30) = {-0.067442, 0.739652, 0, 1.0};
Point(31) = {-0.069353, 0.738456, 0, 1.0};
Point(32) = {-0.071255, 0.737027, 0, 1.0};
Point(33) = {-0.072200, 0.736181, 0, 1.0};
Point(34) = {-0.073139, 0.735181, 0, 1.0};
Point(35) = {-0.073698, 0.734466, 0, 1.0};
Point(36) = {-0.074249, 0.733556, 0, 1.0};
Point(37) = {-0.074606, 0.732725, 0, 1.0};
Point(38) = {-0.074935, 0.731201, 0, 1.0};
Point(39) = {-0.074505, 0.730274, 0, 1.0};
Point(40) = {-0.074095, 0.729847, 0, 1.0};
Point(41) = {-0.073486, 0.729353, 0, 1.0};
Point(42) = {-0.072881, 0.728959, 0, 1.0};
Point(43) = {-0.071879, 0.728446, 0, 1.0};
Point(44) = {-0.070883, 0.728071, 0, 1.0};
Point(45) = {-0.068898, 0.727506, 0, 1.0};
Point(46) = {-0.066920, 0.727100, 0, 1.0};
Point(47) = {-0.062974, 0.726528, 0, 1.0};
Point(48) = {-0.059036, 0.726146, 0, 1.0};
Point(49) = {-0.055102, 0.725879, 0, 1.0};
Point(50) = {-0.051172, 0.725707, 0, 1.0};
Point(51) = {-0.047246, 0.725617, 0, 1.0};
Point(52) = {-0.043323, 0.725595, 0, 1.0};
Point(53) = {-0.039402, 0.725623, 0, 1.0};
Point(54) = {-0.035482, 0.725690, 0, 1.0};
Point(55) = {-0.031564, 0.725793, 0, 1.0};
Point(56) = {-0.027646, 0.725915, 0, 1.0};
Point(57) = {-0.023730, 0.726054, 0, 1.0};
Point(58) = {-0.019814, 0.726222, 0, 1.0};
Point(59) = {-0.015901, 0.726458, 0, 1.0};
Point(60) = {-0.011992, 0.726766, 0, 1.0};
Point(61) = {-0.004179, 0.727532, 0, 1.0};
Point(62) = {0.003627, 0.728482, 0, 1.0};
Point(63) = {0.011426, 0.729570, 0, 1.0};
Point(64) = {0.019221, 0.730769, 0, 1.0};
Point(65) = {0.027014, 0.732030, 0, 1.0};
Point(66) = {0.034807, 0.733287, 0, 1.0};
Point(67) = {0.042601, 0.734497, 0, 1.0};
Point(68) = {0.050401, 0.735593, 0, 1.0};
Point(69) = {0.054303, 0.736069, 0, 1.0};
Point(70) = {0.058209, 0.736486, 0, 1.0};
Point(71) = {0.062117, 0.736819, 0, 1.0};
Point(72) = {0.066028, 0.737099, 0, 1.0};
Point(73) = {0.069942, 0.737296, 0, 1.0};
Point(74) = {0.073856, 0.737501, 0, 1.0};
Point(75) = {0.074930, 0.737548, 0, 1.0};
Point(76) = {-0.074870, -0.739007, 0, 1.0};
Point(77) = {-0.073786, -0.739188, 0, 1.0};
Point(78) = {-0.069831, -0.739970, 0, 1.0};
Point(79) = {-0.065878, -0.740717, 0, 1.0};
Point(80) = {-0.061924, -0.741477, 0, 1.0};
Point(81) = {-0.057970, -0.742231, 0, 1.0};
Point(82) = {-0.054016, -0.742989, 0, 1.0};
Point(83) = {-0.050062, -0.743743, 0, 1.0};
Point(84) = {-0.042158, -0.745170, 0, 1.0};
Point(85) = {-0.034259, -0.746472, 0, 1.0};
Point(86) = {-0.026367, -0.747606, 0, 1.0};
Point(87) = {-0.018482, -0.748565, 0, 1.0};
Point(88) = {-0.010607, -0.749297, 0, 1.0};
Point(89) = {-0.002742, -0.749779, 0, 1.0};
Point(90) = {0.005112, -0.750000, 0, 1.0};
Point(91) = {0.012956, -0.749968, 0, 1.0};
Point(92) = {0.016874, -0.749861, 0, 1.0};
Point(93) = {0.020789, -0.749689, 0, 1.0};
Point(94) = {0.024701, -0.749444, 0, 1.0};
Point(95) = {0.028610, -0.749120, 0, 1.0};
Point(96) = {0.032516, -0.748725, 0, 1.0};
Point(97) = {0.036420, -0.748263, 0, 1.0};
Point(98) = {0.040320, -0.747728, 0, 1.0};
Point(99) = {0.044216, -0.747092, 0, 1.0};
Point(100) = {0.048107, -0.746334, 0, 1.0};
Point(101) = {0.051992, -0.745442, 0, 1.0};
Point(102) = {0.055871, -0.744394, 0, 1.0};
Point(103) = {0.059741, -0.743137, 0, 1.0};
Point(104) = {0.063600, -0.741600, 0, 1.0};
Point(105) = {0.067442, -0.739652, 0, 1.0};
Point(106) = {0.069353, -0.738456, 0, 1.0};
Point(107) = {0.071255, -0.737027, 0, 1.0};
Point(108) = {0.072200, -0.736181, 0, 1.0};
Point(109) = {0.073139, -0.735181, 0, 1.0};
Point(110) = {0.073698, -0.734466, 0, 1.0};
Point(111) = {0.074249, -0.733556, 0, 1.0};
Point(112) = {0.074606, -0.732725, 0, 1.0};
Point(113) = {0.074935, -0.731201, 0, 1.0};
Point(114) = {0.074505, -0.730274, 0, 1.0};
Point(115) = {0.074095, -0.729847, 0, 1.0};
Point(116) = {0.073486, -0.729353, 0, 1.0};
Point(117) = {0.072881, -0.728959, 0, 1.0};
Point(118) = {0.071879, -0.728446, 0, 1.0};
Point(119) = {0.070883, -0.728071, 0, 1.0};
Point(120) = {0.068898, -0.727506, 0, 1.0};
Point(121) = {0.066920, -0.727100, 0, 1.0};
Point(122) = {0.062974, -0.726528, 0, 1.0};
Point(123) = {0.059036, -0.726146, 0, 1.0};
Point(124) = {0.055102, -0.725879, 0, 1.0};
Point(125) = {0.051172, -0.725707, 0, 1.0};
Point(126) = {0.047246, -0.725617, 0, 1.0};
Point(127) = {0.043323, -0.725595, 0, 1.0};
Point(128) = {0.039402, -0.725623, 0, 1.0};
Point(129) = {0.035482, -0.725690, 0, 1.0};
Point(130) = {0.031564, -0.725793, 0, 1.0};
Point(131) = {0.027646, -0.725915, 0, 1.0};
Point(132) = {0.023730, -0.726054, 0, 1.0};
Point(133) = {0.019814, -0.726222, 0, 1.0};
Point(134) = {0.015901, -0.726458, 0, 1.0};
Point(135) = {0.011992, -0.726766, 0, 1.0};
Point(136) = {0.004179, -0.727532, 0, 1.0};
Point(137) = {-0.003627, -0.728482, 0, 1.0};
Point(138) = {-0.011426, -0.729570, 0, 1.0};
Point(139) = {-0.019221, -0.730769, 0, 1.0};
Point(140) = {-0.027014, -0.732030, 0, 1.0};
Point(141) = {-0.034807, -0.733287, 0, 1.0};
Point(142) = {-0.042601, -0.734497, 0, 1.0};
Point(143) = {-0.050401, -0.735593, 0, 1.0};
Point(144) = {-0.054303, -0.736069, 0, 1.0};
Point(145) = {-0.058209, -0.736486, 0, 1.0};
Point(146) = {-0.062117, -0.736819, 0, 1.0};
Point(147) = {-0.066028, -0.737099, 0, 1.0};
Point(148) = {-0.069942, -0.737296, 0, 1.0};
Point(149) = {-0.073856, -0.737501, 0, 1.0};
Point(150) = {-0.074930, -0.737548, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:97};
Spline(6) = {97:130};
Spline(7) = {130:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {36.00000000, 15.00000000, 0, 1.0};
Point(154) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
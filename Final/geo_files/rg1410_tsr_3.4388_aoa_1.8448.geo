SetFactory("OpenCASCADE");

Point(1) = {0.149896, 0.732345, 0, 1.0};
Point(2) = {0.149218, 0.732465, 0, 1.0};
Point(3) = {0.147220, 0.732875, 0, 1.0};
Point(4) = {0.143985, 0.733574, 0, 1.0};
Point(5) = {0.139593, 0.734464, 0, 1.0};
Point(6) = {0.134115, 0.735484, 0, 1.0};
Point(7) = {0.127645, 0.736649, 0, 1.0};
Point(8) = {0.120303, 0.737924, 0, 1.0};
Point(9) = {0.112214, 0.739283, 0, 1.0};
Point(10) = {0.103519, 0.740682, 0, 1.0};
Point(11) = {0.094327, 0.742083, 0, 1.0};
Point(12) = {0.084674, 0.743460, 0, 1.0};
Point(13) = {0.074608, 0.744793, 0, 1.0};
Point(14) = {0.064251, 0.746039, 0, 1.0};
Point(15) = {0.053726, 0.747170, 0, 1.0};
Point(16) = {0.043152, 0.748155, 0, 1.0};
Point(17) = {0.032658, 0.748952, 0, 1.0};
Point(18) = {0.022362, 0.749541, 0, 1.0};
Point(19) = {0.012386, 0.749895, 0, 1.0};
Point(20) = {0.002842, 0.750000, 0, 1.0};
Point(21) = {-0.006161, 0.749844, 0, 1.0};
Point(22) = {-0.014521, 0.749419, 0, 1.0};
Point(23) = {-0.022153, 0.748730, 0, 1.0};
Point(24) = {-0.028969, 0.747917, 0, 1.0};
Point(25) = {-0.034909, 0.746844, 0, 1.0};
Point(26) = {-0.039914, 0.745582, 0, 1.0};
Point(27) = {-0.043948, 0.744147, 0, 1.0};
Point(28) = {-0.046983, 0.742568, 0, 1.0};
Point(29) = {-0.049001, 0.740896, 0, 1.0};
Point(30) = {-0.050000, 0.738783, 0, 1.0};
Point(31) = {-0.049117, 0.737302, 0, 1.0};
Point(32) = {-0.047191, 0.736088, 0, 1.0};
Point(33) = {-0.044244, 0.734958, 0, 1.0};
Point(34) = {-0.040289, 0.733930, 0, 1.0};
Point(35) = {-0.035354, 0.733023, 0, 1.0};
Point(36) = {-0.029474, 0.732231, 0, 1.0};
Point(37) = {-0.022706, 0.731559, 0, 1.0};
Point(38) = {-0.015115, 0.730994, 0, 1.0};
Point(39) = {-0.006783, 0.730538, 0, 1.0};
Point(40) = {0.002204, 0.730176, 0, 1.0};
Point(41) = {0.011742, 0.729905, 0, 1.0};
Point(42) = {0.021723, 0.729720, 0, 1.0};
Point(43) = {0.032035, 0.729608, 0, 1.0};
Point(44) = {0.042553, 0.729561, 0, 1.0};
Point(45) = {0.053159, 0.729582, 0, 1.0};
Point(46) = {0.063723, 0.729658, 0, 1.0};
Point(47) = {0.074125, 0.729795, 0, 1.0};
Point(48) = {0.084241, 0.729991, 0, 1.0};
Point(49) = {0.093947, 0.730283, 0, 1.0};
Point(50) = {0.103197, 0.730697, 0, 1.0};
Point(51) = {0.111953, 0.731170, 0, 1.0};
Point(52) = {0.120099, 0.731598, 0, 1.0};
Point(53) = {0.127494, 0.731942, 0, 1.0};
Point(54) = {0.134009, 0.732188, 0, 1.0};
Point(55) = {0.139525, 0.732337, 0, 1.0};
Point(56) = {0.143947, 0.732412, 0, 1.0};
Point(57) = {0.147205, 0.732419, 0, 1.0};
Point(58) = {0.149215, 0.732377, 0, 1.0};
Point(59) = {-0.149896, -0.732345, 0, 1.0};
Point(60) = {-0.149218, -0.732465, 0, 1.0};
Point(61) = {-0.147220, -0.732875, 0, 1.0};
Point(62) = {-0.143985, -0.733574, 0, 1.0};
Point(63) = {-0.139593, -0.734464, 0, 1.0};
Point(64) = {-0.134115, -0.735484, 0, 1.0};
Point(65) = {-0.127645, -0.736649, 0, 1.0};
Point(66) = {-0.120303, -0.737924, 0, 1.0};
Point(67) = {-0.112214, -0.739283, 0, 1.0};
Point(68) = {-0.103519, -0.740682, 0, 1.0};
Point(69) = {-0.094327, -0.742083, 0, 1.0};
Point(70) = {-0.084674, -0.743460, 0, 1.0};
Point(71) = {-0.074608, -0.744793, 0, 1.0};
Point(72) = {-0.064251, -0.746039, 0, 1.0};
Point(73) = {-0.053726, -0.747170, 0, 1.0};
Point(74) = {-0.043152, -0.748155, 0, 1.0};
Point(75) = {-0.032658, -0.748952, 0, 1.0};
Point(76) = {-0.022362, -0.749541, 0, 1.0};
Point(77) = {-0.012386, -0.749895, 0, 1.0};
Point(78) = {-0.002842, -0.750000, 0, 1.0};
Point(79) = {0.006161, -0.749844, 0, 1.0};
Point(80) = {0.014521, -0.749419, 0, 1.0};
Point(81) = {0.022153, -0.748730, 0, 1.0};
Point(82) = {0.028969, -0.747917, 0, 1.0};
Point(83) = {0.034909, -0.746844, 0, 1.0};
Point(84) = {0.039914, -0.745582, 0, 1.0};
Point(85) = {0.043948, -0.744147, 0, 1.0};
Point(86) = {0.046983, -0.742568, 0, 1.0};
Point(87) = {0.049001, -0.740896, 0, 1.0};
Point(88) = {0.050000, -0.738783, 0, 1.0};
Point(89) = {0.049117, -0.737302, 0, 1.0};
Point(90) = {0.047191, -0.736088, 0, 1.0};
Point(91) = {0.044244, -0.734958, 0, 1.0};
Point(92) = {0.040289, -0.733930, 0, 1.0};
Point(93) = {0.035354, -0.733023, 0, 1.0};
Point(94) = {0.029474, -0.732231, 0, 1.0};
Point(95) = {0.022706, -0.731559, 0, 1.0};
Point(96) = {0.015115, -0.730994, 0, 1.0};
Point(97) = {0.006783, -0.730538, 0, 1.0};
Point(98) = {-0.002204, -0.730176, 0, 1.0};
Point(99) = {-0.011742, -0.729905, 0, 1.0};
Point(100) = {-0.021723, -0.729720, 0, 1.0};
Point(101) = {-0.032035, -0.729608, 0, 1.0};
Point(102) = {-0.042553, -0.729561, 0, 1.0};
Point(103) = {-0.053159, -0.729582, 0, 1.0};
Point(104) = {-0.063723, -0.729658, 0, 1.0};
Point(105) = {-0.074125, -0.729795, 0, 1.0};
Point(106) = {-0.084241, -0.729991, 0, 1.0};
Point(107) = {-0.093947, -0.730283, 0, 1.0};
Point(108) = {-0.103197, -0.730697, 0, 1.0};
Point(109) = {-0.111953, -0.731170, 0, 1.0};
Point(110) = {-0.120099, -0.731598, 0, 1.0};
Point(111) = {-0.127494, -0.731942, 0, 1.0};
Point(112) = {-0.134009, -0.732188, 0, 1.0};
Point(113) = {-0.139525, -0.732337, 0, 1.0};
Point(114) = {-0.143947, -0.732412, 0, 1.0};
Point(115) = {-0.147205, -0.732419, 0, 1.0};
Point(116) = {-0.149215, -0.732377, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:78};
Spline(6) = {78:99};
Spline(7) = {99:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
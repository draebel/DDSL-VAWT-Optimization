SetFactory("OpenCASCADE");

Point(1) = {0.149533, 0.713761, 0, 1.0};
Point(2) = {0.148805, 0.713988, 0, 1.0};
Point(3) = {0.146761, 0.714702, 0, 1.0};
Point(4) = {0.143633, 0.715837, 0, 1.0};
Point(5) = {0.139492, 0.717220, 0, 1.0};
Point(6) = {0.134289, 0.718784, 0, 1.0};
Point(7) = {0.128053, 0.720578, 0, 1.0};
Point(8) = {0.120900, 0.722619, 0, 1.0};
Point(9) = {0.112949, 0.724887, 0, 1.0};
Point(10) = {0.104329, 0.727354, 0, 1.0};
Point(11) = {0.095179, 0.729972, 0, 1.0};
Point(12) = {0.085630, 0.732685, 0, 1.0};
Point(13) = {0.075819, 0.735428, 0, 1.0};
Point(14) = {0.065870, 0.738126, 0, 1.0};
Point(15) = {0.055902, 0.740707, 0, 1.0};
Point(16) = {0.046022, 0.743096, 0, 1.0};
Point(17) = {0.036331, 0.745224, 0, 1.0};
Point(18) = {0.026910, 0.747024, 0, 1.0};
Point(19) = {0.017842, 0.748440, 0, 1.0};
Point(20) = {0.009189, 0.749432, 0, 1.0};
Point(21) = {0.001012, 0.749962, 0, 1.0};
Point(22) = {-0.006634, 0.750000, 0, 1.0};
Point(23) = {-0.013723, 0.749527, 0, 1.0};
Point(24) = {-0.020237, 0.748553, 0, 1.0};
Point(25) = {-0.026151, 0.747095, 0, 1.0};
Point(26) = {-0.031481, 0.745188, 0, 1.0};
Point(27) = {-0.036223, 0.742931, 0, 1.0};
Point(28) = {-0.040325, 0.740418, 0, 1.0};
Point(29) = {-0.043748, 0.737717, 0, 1.0};
Point(30) = {-0.046455, 0.734908, 0, 1.0};
Point(31) = {-0.048416, 0.732069, 0, 1.0};
Point(32) = {-0.050000, 0.727420, 0, 1.0};
Point(33) = {-0.049329, 0.724494, 0, 1.0};
Point(34) = {-0.047511, 0.722366, 0, 1.0};
Point(35) = {-0.044753, 0.720286, 0, 1.0};
Point(36) = {-0.041134, 0.718366, 0, 1.0};
Point(37) = {-0.036692, 0.716703, 0, 1.0};
Point(38) = {-0.031432, 0.715381, 0, 1.0};
Point(39) = {-0.025345, 0.714474, 0, 1.0};
Point(40) = {-0.018379, 0.714034, 0, 1.0};
Point(41) = {-0.010438, 0.714003, 0, 1.0};
Point(42) = {-0.001550, 0.714221, 0, 1.0};
Point(43) = {0.008151, 0.714566, 0, 1.0};
Point(44) = {0.018520, 0.714983, 0, 1.0};
Point(45) = {0.029407, 0.715415, 0, 1.0};
Point(46) = {0.040658, 0.715825, 0, 1.0};
Point(47) = {0.052109, 0.716179, 0, 1.0};
Point(48) = {0.063602, 0.716454, 0, 1.0};
Point(49) = {0.074969, 0.716631, 0, 1.0};
Point(50) = {0.086046, 0.716698, 0, 1.0};
Point(51) = {0.096676, 0.716653, 0, 1.0};
Point(52) = {0.106701, 0.716494, 0, 1.0};
Point(53) = {0.115973, 0.716232, 0, 1.0};
Point(54) = {0.124351, 0.715883, 0, 1.0};
Point(55) = {0.131704, 0.715468, 0, 1.0};
Point(56) = {0.137914, 0.715019, 0, 1.0};
Point(57) = {0.142886, 0.714581, 0, 1.0};
Point(58) = {0.146533, 0.714186, 0, 1.0};
Point(59) = {0.148776, 0.713882, 0, 1.0};
Point(60) = {-0.149533, -0.713761, 0, 1.0};
Point(61) = {-0.148805, -0.713988, 0, 1.0};
Point(62) = {-0.146761, -0.714702, 0, 1.0};
Point(63) = {-0.143633, -0.715837, 0, 1.0};
Point(64) = {-0.139492, -0.717220, 0, 1.0};
Point(65) = {-0.134289, -0.718784, 0, 1.0};
Point(66) = {-0.128053, -0.720578, 0, 1.0};
Point(67) = {-0.120900, -0.722619, 0, 1.0};
Point(68) = {-0.112949, -0.724887, 0, 1.0};
Point(69) = {-0.104329, -0.727354, 0, 1.0};
Point(70) = {-0.095179, -0.729972, 0, 1.0};
Point(71) = {-0.085630, -0.732685, 0, 1.0};
Point(72) = {-0.075819, -0.735428, 0, 1.0};
Point(73) = {-0.065870, -0.738126, 0, 1.0};
Point(74) = {-0.055902, -0.740707, 0, 1.0};
Point(75) = {-0.046022, -0.743096, 0, 1.0};
Point(76) = {-0.036331, -0.745224, 0, 1.0};
Point(77) = {-0.026910, -0.747024, 0, 1.0};
Point(78) = {-0.017842, -0.748440, 0, 1.0};
Point(79) = {-0.009189, -0.749432, 0, 1.0};
Point(80) = {-0.001012, -0.749962, 0, 1.0};
Point(81) = {0.006634, -0.750000, 0, 1.0};
Point(82) = {0.013723, -0.749527, 0, 1.0};
Point(83) = {0.020237, -0.748553, 0, 1.0};
Point(84) = {0.026151, -0.747095, 0, 1.0};
Point(85) = {0.031481, -0.745188, 0, 1.0};
Point(86) = {0.036223, -0.742931, 0, 1.0};
Point(87) = {0.040325, -0.740418, 0, 1.0};
Point(88) = {0.043748, -0.737717, 0, 1.0};
Point(89) = {0.046455, -0.734908, 0, 1.0};
Point(90) = {0.048416, -0.732069, 0, 1.0};
Point(91) = {0.050000, -0.727420, 0, 1.0};
Point(92) = {0.049329, -0.724494, 0, 1.0};
Point(93) = {0.047511, -0.722366, 0, 1.0};
Point(94) = {0.044753, -0.720286, 0, 1.0};
Point(95) = {0.041134, -0.718366, 0, 1.0};
Point(96) = {0.036692, -0.716703, 0, 1.0};
Point(97) = {0.031432, -0.715381, 0, 1.0};
Point(98) = {0.025345, -0.714474, 0, 1.0};
Point(99) = {0.018379, -0.714034, 0, 1.0};
Point(100) = {0.010438, -0.714003, 0, 1.0};
Point(101) = {0.001550, -0.714221, 0, 1.0};
Point(102) = {-0.008151, -0.714566, 0, 1.0};
Point(103) = {-0.018520, -0.714983, 0, 1.0};
Point(104) = {-0.029407, -0.715415, 0, 1.0};
Point(105) = {-0.040658, -0.715825, 0, 1.0};
Point(106) = {-0.052109, -0.716179, 0, 1.0};
Point(107) = {-0.063602, -0.716454, 0, 1.0};
Point(108) = {-0.074969, -0.716631, 0, 1.0};
Point(109) = {-0.086046, -0.716698, 0, 1.0};
Point(110) = {-0.096676, -0.716653, 0, 1.0};
Point(111) = {-0.106701, -0.716494, 0, 1.0};
Point(112) = {-0.115973, -0.716232, 0, 1.0};
Point(113) = {-0.124351, -0.715883, 0, 1.0};
Point(114) = {-0.131704, -0.715468, 0, 1.0};
Point(115) = {-0.137914, -0.715019, 0, 1.0};
Point(116) = {-0.142886, -0.714581, 0, 1.0};
Point(117) = {-0.146533, -0.714186, 0, 1.0};
Point(118) = {-0.148776, -0.713882, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:80};
Spline(6) = {80:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
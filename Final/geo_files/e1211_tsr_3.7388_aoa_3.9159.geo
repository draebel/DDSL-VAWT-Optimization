SetFactory("OpenCASCADE");

Point(1) = {0.074825, 0.722821, 0, 1.0};
Point(2) = {0.074279, 0.722991, 0, 1.0};
Point(3) = {0.072746, 0.723526, 0, 1.0};
Point(4) = {0.070400, 0.724378, 0, 1.0};
Point(5) = {0.067294, 0.725415, 0, 1.0};
Point(6) = {0.063392, 0.726588, 0, 1.0};
Point(7) = {0.058715, 0.727934, 0, 1.0};
Point(8) = {0.053350, 0.729464, 0, 1.0};
Point(9) = {0.047387, 0.731166, 0, 1.0};
Point(10) = {0.040922, 0.733016, 0, 1.0};
Point(11) = {0.034060, 0.734979, 0, 1.0};
Point(12) = {0.026898, 0.737014, 0, 1.0};
Point(13) = {0.019539, 0.739071, 0, 1.0};
Point(14) = {0.012078, 0.741095, 0, 1.0};
Point(15) = {0.004601, 0.743031, 0, 1.0};
Point(16) = {-0.002808, 0.744822, 0, 1.0};
Point(17) = {-0.010077, 0.746418, 0, 1.0};
Point(18) = {-0.017142, 0.747768, 0, 1.0};
Point(19) = {-0.023944, 0.748830, 0, 1.0};
Point(20) = {-0.030433, 0.749574, 0, 1.0};
Point(21) = {-0.036566, 0.749971, 0, 1.0};
Point(22) = {-0.042300, 0.750000, 0, 1.0};
Point(23) = {-0.047617, 0.749645, 0, 1.0};
Point(24) = {-0.052503, 0.748915, 0, 1.0};
Point(25) = {-0.056938, 0.747821, 0, 1.0};
Point(26) = {-0.060935, 0.746391, 0, 1.0};
Point(27) = {-0.064492, 0.744699, 0, 1.0};
Point(28) = {-0.067568, 0.742814, 0, 1.0};
Point(29) = {-0.070136, 0.740788, 0, 1.0};
Point(30) = {-0.072166, 0.738681, 0, 1.0};
Point(31) = {-0.073637, 0.736552, 0, 1.0};
Point(32) = {-0.074825, 0.733065, 0, 1.0};
Point(33) = {-0.074322, 0.730870, 0, 1.0};
Point(34) = {-0.072958, 0.729275, 0, 1.0};
Point(35) = {-0.070890, 0.727715, 0, 1.0};
Point(36) = {-0.068175, 0.726274, 0, 1.0};
Point(37) = {-0.064844, 0.725027, 0, 1.0};
Point(38) = {-0.060899, 0.724036, 0, 1.0};
Point(39) = {-0.056334, 0.723356, 0, 1.0};
Point(40) = {-0.051109, 0.723025, 0, 1.0};
Point(41) = {-0.045154, 0.723002, 0, 1.0};
Point(42) = {-0.038488, 0.723165, 0, 1.0};
Point(43) = {-0.031212, 0.723425, 0, 1.0};
Point(44) = {-0.023435, 0.723737, 0, 1.0};
Point(45) = {-0.015270, 0.724062, 0, 1.0};
Point(46) = {-0.006831, 0.724369, 0, 1.0};
Point(47) = {0.001757, 0.724634, 0, 1.0};
Point(48) = {0.010376, 0.724840, 0, 1.0};
Point(49) = {0.018902, 0.724973, 0, 1.0};
Point(50) = {0.027209, 0.725024, 0, 1.0};
Point(51) = {0.035182, 0.724990, 0, 1.0};
Point(52) = {0.042701, 0.724870, 0, 1.0};
Point(53) = {0.049655, 0.724674, 0, 1.0};
Point(54) = {0.055938, 0.724412, 0, 1.0};
Point(55) = {0.061453, 0.724101, 0, 1.0};
Point(56) = {0.066110, 0.723764, 0, 1.0};
Point(57) = {0.069839, 0.723436, 0, 1.0};
Point(58) = {0.072575, 0.723140, 0, 1.0};
Point(59) = {0.074257, 0.722911, 0, 1.0};
Point(60) = {-0.074825, -0.722821, 0, 1.0};
Point(61) = {-0.074279, -0.722991, 0, 1.0};
Point(62) = {-0.072746, -0.723526, 0, 1.0};
Point(63) = {-0.070400, -0.724378, 0, 1.0};
Point(64) = {-0.067294, -0.725415, 0, 1.0};
Point(65) = {-0.063392, -0.726588, 0, 1.0};
Point(66) = {-0.058715, -0.727934, 0, 1.0};
Point(67) = {-0.053350, -0.729464, 0, 1.0};
Point(68) = {-0.047387, -0.731166, 0, 1.0};
Point(69) = {-0.040922, -0.733016, 0, 1.0};
Point(70) = {-0.034060, -0.734979, 0, 1.0};
Point(71) = {-0.026898, -0.737014, 0, 1.0};
Point(72) = {-0.019539, -0.739071, 0, 1.0};
Point(73) = {-0.012078, -0.741095, 0, 1.0};
Point(74) = {-0.004601, -0.743031, 0, 1.0};
Point(75) = {0.002808, -0.744822, 0, 1.0};
Point(76) = {0.010077, -0.746418, 0, 1.0};
Point(77) = {0.017142, -0.747768, 0, 1.0};
Point(78) = {0.023944, -0.748830, 0, 1.0};
Point(79) = {0.030433, -0.749574, 0, 1.0};
Point(80) = {0.036566, -0.749971, 0, 1.0};
Point(81) = {0.042300, -0.750000, 0, 1.0};
Point(82) = {0.047617, -0.749645, 0, 1.0};
Point(83) = {0.052503, -0.748915, 0, 1.0};
Point(84) = {0.056938, -0.747821, 0, 1.0};
Point(85) = {0.060935, -0.746391, 0, 1.0};
Point(86) = {0.064492, -0.744699, 0, 1.0};
Point(87) = {0.067568, -0.742814, 0, 1.0};
Point(88) = {0.070136, -0.740788, 0, 1.0};
Point(89) = {0.072166, -0.738681, 0, 1.0};
Point(90) = {0.073637, -0.736552, 0, 1.0};
Point(91) = {0.074825, -0.733065, 0, 1.0};
Point(92) = {0.074322, -0.730870, 0, 1.0};
Point(93) = {0.072958, -0.729275, 0, 1.0};
Point(94) = {0.070890, -0.727715, 0, 1.0};
Point(95) = {0.068175, -0.726274, 0, 1.0};
Point(96) = {0.064844, -0.725027, 0, 1.0};
Point(97) = {0.060899, -0.724036, 0, 1.0};
Point(98) = {0.056334, -0.723356, 0, 1.0};
Point(99) = {0.051109, -0.723025, 0, 1.0};
Point(100) = {0.045154, -0.723002, 0, 1.0};
Point(101) = {0.038488, -0.723165, 0, 1.0};
Point(102) = {0.031212, -0.723425, 0, 1.0};
Point(103) = {0.023435, -0.723737, 0, 1.0};
Point(104) = {0.015270, -0.724062, 0, 1.0};
Point(105) = {0.006831, -0.724369, 0, 1.0};
Point(106) = {-0.001757, -0.724634, 0, 1.0};
Point(107) = {-0.010376, -0.724840, 0, 1.0};
Point(108) = {-0.018902, -0.724973, 0, 1.0};
Point(109) = {-0.027209, -0.725024, 0, 1.0};
Point(110) = {-0.035182, -0.724990, 0, 1.0};
Point(111) = {-0.042701, -0.724870, 0, 1.0};
Point(112) = {-0.049655, -0.724674, 0, 1.0};
Point(113) = {-0.055938, -0.724412, 0, 1.0};
Point(114) = {-0.061453, -0.724101, 0, 1.0};
Point(115) = {-0.066110, -0.723764, 0, 1.0};
Point(116) = {-0.069839, -0.723436, 0, 1.0};
Point(117) = {-0.072575, -0.723140, 0, 1.0};
Point(118) = {-0.074257, -0.722911, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:80};
Spline(6) = {80:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
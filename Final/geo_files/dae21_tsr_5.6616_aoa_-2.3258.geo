SetFactory("OpenCASCADE");

Point(1) = {0.112376, 0.735239, 0, 1.0};
Point(2) = {0.110370, 0.735520, 0, 1.0};
Point(3) = {0.107901, 0.735881, 0, 1.0};
Point(4) = {0.104475, 0.736431, 0, 1.0};
Point(5) = {0.099940, 0.737247, 0, 1.0};
Point(6) = {0.095337, 0.738167, 0, 1.0};
Point(7) = {0.090773, 0.739160, 0, 1.0};
Point(8) = {0.086182, 0.740222, 0, 1.0};
Point(9) = {0.081542, 0.741339, 0, 1.0};
Point(10) = {0.076845, 0.742492, 0, 1.0};
Point(11) = {0.072128, 0.743649, 0, 1.0};
Point(12) = {0.067456, 0.744766, 0, 1.0};
Point(13) = {0.062837, 0.745815, 0, 1.0};
Point(14) = {0.058272, 0.746766, 0, 1.0};
Point(15) = {0.053751, 0.747599, 0, 1.0};
Point(16) = {0.049272, 0.748308, 0, 1.0};
Point(17) = {0.044827, 0.748892, 0, 1.0};
Point(18) = {0.040411, 0.749352, 0, 1.0};
Point(19) = {0.036013, 0.749687, 0, 1.0};
Point(20) = {0.031620, 0.749902, 0, 1.0};
Point(21) = {0.027226, 0.750000, 0, 1.0};
Point(22) = {0.022830, 0.749981, 0, 1.0};
Point(23) = {0.018439, 0.749843, 0, 1.0};
Point(24) = {0.014060, 0.749585, 0, 1.0};
Point(25) = {0.009700, 0.749204, 0, 1.0};
Point(26) = {0.005367, 0.748699, 0, 1.0};
Point(27) = {0.001071, 0.748066, 0, 1.0};
Point(28) = {-0.003176, 0.747303, 0, 1.0};
Point(29) = {-0.007356, 0.746407, 0, 1.0};
Point(30) = {-0.011450, 0.745375, 0, 1.0};
Point(31) = {-0.015430, 0.744202, 0, 1.0};
Point(32) = {-0.019267, 0.742884, 0, 1.0};
Point(33) = {-0.022920, 0.741425, 0, 1.0};
Point(34) = {-0.026328, 0.739833, 0, 1.0};
Point(35) = {-0.029410, 0.738137, 0, 1.0};
Point(36) = {-0.032063, 0.736389, 0, 1.0};
Point(37) = {-0.034189, 0.734669, 0, 1.0};
Point(38) = {-0.035732, 0.733082, 0, 1.0};
Point(39) = {-0.036722, 0.731710, 0, 1.0};
Point(40) = {-0.037265, 0.730574, 0, 1.0};
Point(41) = {-0.037500, 0.729152, 0, 1.0};
Point(42) = {-0.037356, 0.728383, 0, 1.0};
Point(43) = {-0.037126, 0.727965, 0, 1.0};
Point(44) = {-0.036783, 0.727644, 0, 1.0};
Point(45) = {-0.036258, 0.727391, 0, 1.0};
Point(46) = {-0.035372, 0.727209, 0, 1.0};
Point(47) = {-0.033774, 0.727110, 0, 1.0};
Point(48) = {-0.031164, 0.727154, 0, 1.0};
Point(49) = {-0.027525, 0.727395, 0, 1.0};
Point(50) = {-0.023248, 0.727778, 0, 1.0};
Point(51) = {-0.018658, 0.728256, 0, 1.0};
Point(52) = {-0.013929, 0.728781, 0, 1.0};
Point(53) = {-0.009131, 0.729330, 0, 1.0};
Point(54) = {-0.004296, 0.729886, 0, 1.0};
Point(55) = {0.000536, 0.730439, 0, 1.0};
Point(56) = {0.005353, 0.730983, 0, 1.0};
Point(57) = {0.010158, 0.731515, 0, 1.0};
Point(58) = {0.014953, 0.732031, 0, 1.0};
Point(59) = {0.019739, 0.732530, 0, 1.0};
Point(60) = {0.024513, 0.733006, 0, 1.0};
Point(61) = {0.029278, 0.733457, 0, 1.0};
Point(62) = {0.034032, 0.733879, 0, 1.0};
Point(63) = {0.038776, 0.734268, 0, 1.0};
Point(64) = {0.043513, 0.734621, 0, 1.0};
Point(65) = {0.048249, 0.734937, 0, 1.0};
Point(66) = {0.052983, 0.735215, 0, 1.0};
Point(67) = {0.057714, 0.735455, 0, 1.0};
Point(68) = {0.062445, 0.735654, 0, 1.0};
Point(69) = {0.067176, 0.735811, 0, 1.0};
Point(70) = {0.071908, 0.735931, 0, 1.0};
Point(71) = {0.076636, 0.736009, 0, 1.0};
Point(72) = {0.081359, 0.736044, 0, 1.0};
Point(73) = {0.086081, 0.736035, 0, 1.0};
Point(74) = {0.090810, 0.735981, 0, 1.0};
Point(75) = {0.095570, 0.735884, 0, 1.0};
Point(76) = {0.100352, 0.735746, 0, 1.0};
Point(77) = {0.104631, 0.735592, 0, 1.0};
Point(78) = {0.107898, 0.735454, 0, 1.0};
Point(79) = {0.110356, 0.735337, 0, 1.0};
Point(80) = {-0.112376, -0.735239, 0, 1.0};
Point(81) = {-0.110370, -0.735520, 0, 1.0};
Point(82) = {-0.107901, -0.735881, 0, 1.0};
Point(83) = {-0.104475, -0.736431, 0, 1.0};
Point(84) = {-0.099940, -0.737247, 0, 1.0};
Point(85) = {-0.095337, -0.738167, 0, 1.0};
Point(86) = {-0.090773, -0.739160, 0, 1.0};
Point(87) = {-0.086182, -0.740222, 0, 1.0};
Point(88) = {-0.081542, -0.741339, 0, 1.0};
Point(89) = {-0.076845, -0.742492, 0, 1.0};
Point(90) = {-0.072128, -0.743649, 0, 1.0};
Point(91) = {-0.067456, -0.744766, 0, 1.0};
Point(92) = {-0.062837, -0.745815, 0, 1.0};
Point(93) = {-0.058272, -0.746766, 0, 1.0};
Point(94) = {-0.053751, -0.747599, 0, 1.0};
Point(95) = {-0.049272, -0.748308, 0, 1.0};
Point(96) = {-0.044827, -0.748892, 0, 1.0};
Point(97) = {-0.040411, -0.749352, 0, 1.0};
Point(98) = {-0.036013, -0.749687, 0, 1.0};
Point(99) = {-0.031620, -0.749902, 0, 1.0};
Point(100) = {-0.027226, -0.750000, 0, 1.0};
Point(101) = {-0.022830, -0.749981, 0, 1.0};
Point(102) = {-0.018439, -0.749843, 0, 1.0};
Point(103) = {-0.014060, -0.749585, 0, 1.0};
Point(104) = {-0.009700, -0.749204, 0, 1.0};
Point(105) = {-0.005367, -0.748699, 0, 1.0};
Point(106) = {-0.001071, -0.748066, 0, 1.0};
Point(107) = {0.003176, -0.747303, 0, 1.0};
Point(108) = {0.007356, -0.746407, 0, 1.0};
Point(109) = {0.011450, -0.745375, 0, 1.0};
Point(110) = {0.015430, -0.744202, 0, 1.0};
Point(111) = {0.019267, -0.742884, 0, 1.0};
Point(112) = {0.022920, -0.741425, 0, 1.0};
Point(113) = {0.026328, -0.739833, 0, 1.0};
Point(114) = {0.029410, -0.738137, 0, 1.0};
Point(115) = {0.032063, -0.736389, 0, 1.0};
Point(116) = {0.034189, -0.734669, 0, 1.0};
Point(117) = {0.035732, -0.733082, 0, 1.0};
Point(118) = {0.036722, -0.731710, 0, 1.0};
Point(119) = {0.037265, -0.730574, 0, 1.0};
Point(120) = {0.037500, -0.729152, 0, 1.0};
Point(121) = {0.037356, -0.728383, 0, 1.0};
Point(122) = {0.037126, -0.727965, 0, 1.0};
Point(123) = {0.036783, -0.727644, 0, 1.0};
Point(124) = {0.036258, -0.727391, 0, 1.0};
Point(125) = {0.035372, -0.727209, 0, 1.0};
Point(126) = {0.033774, -0.727110, 0, 1.0};
Point(127) = {0.031164, -0.727154, 0, 1.0};
Point(128) = {0.027525, -0.727395, 0, 1.0};
Point(129) = {0.023248, -0.727778, 0, 1.0};
Point(130) = {0.018658, -0.728256, 0, 1.0};
Point(131) = {0.013929, -0.728781, 0, 1.0};
Point(132) = {0.009131, -0.729330, 0, 1.0};
Point(133) = {0.004296, -0.729886, 0, 1.0};
Point(134) = {-0.000536, -0.730439, 0, 1.0};
Point(135) = {-0.005353, -0.730983, 0, 1.0};
Point(136) = {-0.010158, -0.731515, 0, 1.0};
Point(137) = {-0.014953, -0.732031, 0, 1.0};
Point(138) = {-0.019739, -0.732530, 0, 1.0};
Point(139) = {-0.024513, -0.733006, 0, 1.0};
Point(140) = {-0.029278, -0.733457, 0, 1.0};
Point(141) = {-0.034032, -0.733879, 0, 1.0};
Point(142) = {-0.038776, -0.734268, 0, 1.0};
Point(143) = {-0.043513, -0.734621, 0, 1.0};
Point(144) = {-0.048249, -0.734937, 0, 1.0};
Point(145) = {-0.052983, -0.735215, 0, 1.0};
Point(146) = {-0.057714, -0.735455, 0, 1.0};
Point(147) = {-0.062445, -0.735654, 0, 1.0};
Point(148) = {-0.067176, -0.735811, 0, 1.0};
Point(149) = {-0.071908, -0.735931, 0, 1.0};
Point(150) = {-0.076636, -0.736009, 0, 1.0};
Point(151) = {-0.081359, -0.736044, 0, 1.0};
Point(152) = {-0.086081, -0.736035, 0, 1.0};
Point(153) = {-0.090810, -0.735981, 0, 1.0};
Point(154) = {-0.095570, -0.735884, 0, 1.0};
Point(155) = {-0.100352, -0.735746, 0, 1.0};
Point(156) = {-0.104631, -0.735592, 0, 1.0};
Point(157) = {-0.107898, -0.735454, 0, 1.0};
Point(158) = {-0.110356, -0.735337, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:55};
Spline(3) = {55:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:134};
Spline(7) = {134:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
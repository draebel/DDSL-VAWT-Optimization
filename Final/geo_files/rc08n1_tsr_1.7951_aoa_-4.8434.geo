SetFactory("OpenCASCADE");

Point(1) = {0.149275, 0.748558, 0, 1.0};
Point(2) = {0.144255, 0.748381, 0, 1.0};
Point(3) = {0.139252, 0.748263, 0, 1.0};
Point(4) = {0.134247, 0.748186, 0, 1.0};
Point(5) = {0.129237, 0.748147, 0, 1.0};
Point(6) = {0.124229, 0.748146, 0, 1.0};
Point(7) = {0.119233, 0.748182, 0, 1.0};
Point(8) = {0.114241, 0.748255, 0, 1.0};
Point(9) = {0.109257, 0.748369, 0, 1.0};
Point(10) = {0.104283, 0.748524, 0, 1.0};
Point(11) = {0.099276, 0.748718, 0, 1.0};
Point(12) = {0.094249, 0.748936, 0, 1.0};
Point(13) = {0.089237, 0.749166, 0, 1.0};
Point(14) = {0.084208, 0.749386, 0, 1.0};
Point(15) = {0.079164, 0.749583, 0, 1.0};
Point(16) = {0.074126, 0.749748, 0, 1.0};
Point(17) = {0.069089, 0.749875, 0, 1.0};
Point(18) = {0.064057, 0.749960, 0, 1.0};
Point(19) = {0.059034, 0.750000, 0, 1.0};
Point(20) = {0.054009, 0.749996, 0, 1.0};
Point(21) = {0.048985, 0.749943, 0, 1.0};
Point(22) = {0.043967, 0.749837, 0, 1.0};
Point(23) = {0.038948, 0.749675, 0, 1.0};
Point(24) = {0.033928, 0.749450, 0, 1.0};
Point(25) = {0.028913, 0.749167, 0, 1.0};
Point(26) = {0.023904, 0.748825, 0, 1.0};
Point(27) = {0.018893, 0.748428, 0, 1.0};
Point(28) = {0.008885, 0.747468, 0, 1.0};
Point(29) = {-0.001107, 0.746269, 0, 1.0};
Point(30) = {-0.006099, 0.745569, 0, 1.0};
Point(31) = {-0.011101, 0.744786, 0, 1.0};
Point(32) = {-0.016105, 0.743914, 0, 1.0};
Point(33) = {-0.021085, 0.742948, 0, 1.0};
Point(34) = {-0.026049, 0.741876, 0, 1.0};
Point(35) = {-0.030992, 0.740697, 0, 1.0};
Point(36) = {-0.035912, 0.739348, 0, 1.0};
Point(37) = {-0.040888, 0.737710, 0, 1.0};
Point(38) = {-0.045683, 0.735624, 0, 1.0};
Point(39) = {-0.048258, 0.734007, 0, 1.0};
Point(40) = {-0.049441, 0.732879, 0, 1.0};
Point(41) = {-0.049889, 0.732148, 0, 1.0};
Point(42) = {-0.050000, 0.731544, 0, 1.0};
Point(43) = {-0.049081, 0.730652, 0, 1.0};
Point(44) = {-0.048580, 0.730522, 0, 1.0};
Point(45) = {-0.046849, 0.730498, 0, 1.0};
Point(46) = {-0.044529, 0.730287, 0, 1.0};
Point(47) = {-0.039475, 0.730330, 0, 1.0};
Point(48) = {-0.034564, 0.730409, 0, 1.0};
Point(49) = {-0.029573, 0.730499, 0, 1.0};
Point(50) = {-0.024592, 0.730603, 0, 1.0};
Point(51) = {-0.019625, 0.730735, 0, 1.0};
Point(52) = {-0.014665, 0.730890, 0, 1.0};
Point(53) = {-0.009723, 0.731064, 0, 1.0};
Point(54) = {-0.004772, 0.731256, 0, 1.0};
Point(55) = {0.000195, 0.731464, 0, 1.0};
Point(56) = {0.010129, 0.731943, 0, 1.0};
Point(57) = {0.020064, 0.732511, 0, 1.0};
Point(58) = {0.025029, 0.732834, 0, 1.0};
Point(59) = {0.029997, 0.733184, 0, 1.0};
Point(60) = {0.034965, 0.733565, 0, 1.0};
Point(61) = {0.039926, 0.733979, 0, 1.0};
Point(62) = {0.044891, 0.734430, 0, 1.0};
Point(63) = {0.049858, 0.734915, 0, 1.0};
Point(64) = {0.054825, 0.735435, 0, 1.0};
Point(65) = {0.059790, 0.735982, 0, 1.0};
Point(66) = {0.064757, 0.736555, 0, 1.0};
Point(67) = {0.069720, 0.737149, 0, 1.0};
Point(68) = {0.074680, 0.737751, 0, 1.0};
Point(69) = {0.079641, 0.738361, 0, 1.0};
Point(70) = {0.084601, 0.738963, 0, 1.0};
Point(71) = {0.089578, 0.739554, 0, 1.0};
Point(72) = {0.094575, 0.740130, 0, 1.0};
Point(73) = {0.099554, 0.740699, 0, 1.0};
Point(74) = {0.104552, 0.741275, 0, 1.0};
Point(75) = {0.109578, 0.741886, 0, 1.0};
Point(76) = {0.114585, 0.742545, 0, 1.0};
Point(77) = {0.119577, 0.743259, 0, 1.0};
Point(78) = {0.124553, 0.744020, 0, 1.0};
Point(79) = {0.129512, 0.744812, 0, 1.0};
Point(80) = {0.134468, 0.745617, 0, 1.0};
Point(81) = {0.139421, 0.746434, 0, 1.0};
Point(82) = {0.144373, 0.747292, 0, 1.0};
Point(83) = {0.149297, 0.748303, 0, 1.0};
Point(84) = {-0.149275, -0.748558, 0, 1.0};
Point(85) = {-0.144255, -0.748381, 0, 1.0};
Point(86) = {-0.139252, -0.748263, 0, 1.0};
Point(87) = {-0.134247, -0.748186, 0, 1.0};
Point(88) = {-0.129237, -0.748147, 0, 1.0};
Point(89) = {-0.124229, -0.748146, 0, 1.0};
Point(90) = {-0.119233, -0.748182, 0, 1.0};
Point(91) = {-0.114241, -0.748255, 0, 1.0};
Point(92) = {-0.109257, -0.748369, 0, 1.0};
Point(93) = {-0.104283, -0.748524, 0, 1.0};
Point(94) = {-0.099276, -0.748718, 0, 1.0};
Point(95) = {-0.094249, -0.748936, 0, 1.0};
Point(96) = {-0.089237, -0.749166, 0, 1.0};
Point(97) = {-0.084208, -0.749386, 0, 1.0};
Point(98) = {-0.079164, -0.749583, 0, 1.0};
Point(99) = {-0.074126, -0.749748, 0, 1.0};
Point(100) = {-0.069089, -0.749875, 0, 1.0};
Point(101) = {-0.064057, -0.749960, 0, 1.0};
Point(102) = {-0.059034, -0.750000, 0, 1.0};
Point(103) = {-0.054009, -0.749996, 0, 1.0};
Point(104) = {-0.048985, -0.749943, 0, 1.0};
Point(105) = {-0.043967, -0.749837, 0, 1.0};
Point(106) = {-0.038948, -0.749675, 0, 1.0};
Point(107) = {-0.033928, -0.749450, 0, 1.0};
Point(108) = {-0.028913, -0.749167, 0, 1.0};
Point(109) = {-0.023904, -0.748825, 0, 1.0};
Point(110) = {-0.018893, -0.748428, 0, 1.0};
Point(111) = {-0.008885, -0.747468, 0, 1.0};
Point(112) = {0.001107, -0.746269, 0, 1.0};
Point(113) = {0.006099, -0.745569, 0, 1.0};
Point(114) = {0.011101, -0.744786, 0, 1.0};
Point(115) = {0.016105, -0.743914, 0, 1.0};
Point(116) = {0.021085, -0.742948, 0, 1.0};
Point(117) = {0.026049, -0.741876, 0, 1.0};
Point(118) = {0.030992, -0.740697, 0, 1.0};
Point(119) = {0.035912, -0.739348, 0, 1.0};
Point(120) = {0.040888, -0.737710, 0, 1.0};
Point(121) = {0.045683, -0.735624, 0, 1.0};
Point(122) = {0.048258, -0.734007, 0, 1.0};
Point(123) = {0.049441, -0.732879, 0, 1.0};
Point(124) = {0.049889, -0.732148, 0, 1.0};
Point(125) = {0.050000, -0.731544, 0, 1.0};
Point(126) = {0.049081, -0.730652, 0, 1.0};
Point(127) = {0.048580, -0.730522, 0, 1.0};
Point(128) = {0.046849, -0.730498, 0, 1.0};
Point(129) = {0.044529, -0.730287, 0, 1.0};
Point(130) = {0.039475, -0.730330, 0, 1.0};
Point(131) = {0.034564, -0.730409, 0, 1.0};
Point(132) = {0.029573, -0.730499, 0, 1.0};
Point(133) = {0.024592, -0.730603, 0, 1.0};
Point(134) = {0.019625, -0.730735, 0, 1.0};
Point(135) = {0.014665, -0.730890, 0, 1.0};
Point(136) = {0.009723, -0.731064, 0, 1.0};
Point(137) = {0.004772, -0.731256, 0, 1.0};
Point(138) = {-0.000195, -0.731464, 0, 1.0};
Point(139) = {-0.010129, -0.731943, 0, 1.0};
Point(140) = {-0.020064, -0.732511, 0, 1.0};
Point(141) = {-0.025029, -0.732834, 0, 1.0};
Point(142) = {-0.029997, -0.733184, 0, 1.0};
Point(143) = {-0.034965, -0.733565, 0, 1.0};
Point(144) = {-0.039926, -0.733979, 0, 1.0};
Point(145) = {-0.044891, -0.734430, 0, 1.0};
Point(146) = {-0.049858, -0.734915, 0, 1.0};
Point(147) = {-0.054825, -0.735435, 0, 1.0};
Point(148) = {-0.059790, -0.735982, 0, 1.0};
Point(149) = {-0.064757, -0.736555, 0, 1.0};
Point(150) = {-0.069720, -0.737149, 0, 1.0};
Point(151) = {-0.074680, -0.737751, 0, 1.0};
Point(152) = {-0.079641, -0.738361, 0, 1.0};
Point(153) = {-0.084601, -0.738963, 0, 1.0};
Point(154) = {-0.089578, -0.739554, 0, 1.0};
Point(155) = {-0.094575, -0.740130, 0, 1.0};
Point(156) = {-0.099554, -0.740699, 0, 1.0};
Point(157) = {-0.104552, -0.741275, 0, 1.0};
Point(158) = {-0.109578, -0.741886, 0, 1.0};
Point(159) = {-0.114585, -0.742545, 0, 1.0};
Point(160) = {-0.119577, -0.743259, 0, 1.0};
Point(161) = {-0.124553, -0.744020, 0, 1.0};
Point(162) = {-0.129512, -0.744812, 0, 1.0};
Point(163) = {-0.134468, -0.745617, 0, 1.0};
Point(164) = {-0.139421, -0.746434, 0, 1.0};
Point(165) = {-0.144373, -0.747292, 0, 1.0};
Point(166) = {-0.149297, -0.748303, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:55};
Spline(3) = {55:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:111};
Spline(6) = {111:138};
Spline(7) = {138:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
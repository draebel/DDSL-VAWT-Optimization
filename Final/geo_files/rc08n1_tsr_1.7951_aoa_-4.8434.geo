SetFactory("OpenCASCADE");

Point(1) = {0.074638, 0.749279, 0, 1.0};
Point(2) = {0.072128, 0.749191, 0, 1.0};
Point(3) = {0.069626, 0.749131, 0, 1.0};
Point(4) = {0.067124, 0.749093, 0, 1.0};
Point(5) = {0.064619, 0.749073, 0, 1.0};
Point(6) = {0.062115, 0.749073, 0, 1.0};
Point(7) = {0.059616, 0.749091, 0, 1.0};
Point(8) = {0.057120, 0.749127, 0, 1.0};
Point(9) = {0.054628, 0.749184, 0, 1.0};
Point(10) = {0.052142, 0.749262, 0, 1.0};
Point(11) = {0.049638, 0.749359, 0, 1.0};
Point(12) = {0.047125, 0.749468, 0, 1.0};
Point(13) = {0.044619, 0.749583, 0, 1.0};
Point(14) = {0.042104, 0.749693, 0, 1.0};
Point(15) = {0.039582, 0.749791, 0, 1.0};
Point(16) = {0.037063, 0.749874, 0, 1.0};
Point(17) = {0.034544, 0.749937, 0, 1.0};
Point(18) = {0.032029, 0.749980, 0, 1.0};
Point(19) = {0.029517, 0.750000, 0, 1.0};
Point(20) = {0.027004, 0.749998, 0, 1.0};
Point(21) = {0.024493, 0.749972, 0, 1.0};
Point(22) = {0.021984, 0.749919, 0, 1.0};
Point(23) = {0.019474, 0.749837, 0, 1.0};
Point(24) = {0.016964, 0.749725, 0, 1.0};
Point(25) = {0.014457, 0.749584, 0, 1.0};
Point(26) = {0.011952, 0.749412, 0, 1.0};
Point(27) = {0.009447, 0.749214, 0, 1.0};
Point(28) = {0.004443, 0.748734, 0, 1.0};
Point(29) = {-0.000554, 0.748135, 0, 1.0};
Point(30) = {-0.003049, 0.747785, 0, 1.0};
Point(31) = {-0.005551, 0.747393, 0, 1.0};
Point(32) = {-0.008053, 0.746957, 0, 1.0};
Point(33) = {-0.010543, 0.746474, 0, 1.0};
Point(34) = {-0.013025, 0.745938, 0, 1.0};
Point(35) = {-0.015496, 0.745348, 0, 1.0};
Point(36) = {-0.017956, 0.744674, 0, 1.0};
Point(37) = {-0.020444, 0.743855, 0, 1.0};
Point(38) = {-0.022842, 0.742812, 0, 1.0};
Point(39) = {-0.024129, 0.742003, 0, 1.0};
Point(40) = {-0.024720, 0.741440, 0, 1.0};
Point(41) = {-0.024945, 0.741074, 0, 1.0};
Point(42) = {-0.025000, 0.740772, 0, 1.0};
Point(43) = {-0.024541, 0.740326, 0, 1.0};
Point(44) = {-0.024290, 0.740261, 0, 1.0};
Point(45) = {-0.023424, 0.740249, 0, 1.0};
Point(46) = {-0.022264, 0.740144, 0, 1.0};
Point(47) = {-0.019737, 0.740165, 0, 1.0};
Point(48) = {-0.017282, 0.740204, 0, 1.0};
Point(49) = {-0.014786, 0.740249, 0, 1.0};
Point(50) = {-0.012296, 0.740302, 0, 1.0};
Point(51) = {-0.009812, 0.740368, 0, 1.0};
Point(52) = {-0.007332, 0.740445, 0, 1.0};
Point(53) = {-0.004861, 0.740532, 0, 1.0};
Point(54) = {-0.002386, 0.740628, 0, 1.0};
Point(55) = {0.000097, 0.740732, 0, 1.0};
Point(56) = {0.005065, 0.740971, 0, 1.0};
Point(57) = {0.010032, 0.741256, 0, 1.0};
Point(58) = {0.012514, 0.741417, 0, 1.0};
Point(59) = {0.014999, 0.741592, 0, 1.0};
Point(60) = {0.017483, 0.741783, 0, 1.0};
Point(61) = {0.019963, 0.741990, 0, 1.0};
Point(62) = {0.022446, 0.742215, 0, 1.0};
Point(63) = {0.024929, 0.742458, 0, 1.0};
Point(64) = {0.027413, 0.742717, 0, 1.0};
Point(65) = {0.029895, 0.742991, 0, 1.0};
Point(66) = {0.032378, 0.743278, 0, 1.0};
Point(67) = {0.034860, 0.743574, 0, 1.0};
Point(68) = {0.037340, 0.743876, 0, 1.0};
Point(69) = {0.039820, 0.744180, 0, 1.0};
Point(70) = {0.042300, 0.744482, 0, 1.0};
Point(71) = {0.044789, 0.744777, 0, 1.0};
Point(72) = {0.047287, 0.745065, 0, 1.0};
Point(73) = {0.049777, 0.745349, 0, 1.0};
Point(74) = {0.052276, 0.745637, 0, 1.0};
Point(75) = {0.054789, 0.745943, 0, 1.0};
Point(76) = {0.057293, 0.746273, 0, 1.0};
Point(77) = {0.059789, 0.746630, 0, 1.0};
Point(78) = {0.062277, 0.747010, 0, 1.0};
Point(79) = {0.064756, 0.747406, 0, 1.0};
Point(80) = {0.067234, 0.747809, 0, 1.0};
Point(81) = {0.069711, 0.748217, 0, 1.0};
Point(82) = {0.072186, 0.748646, 0, 1.0};
Point(83) = {0.074648, 0.749152, 0, 1.0};
Point(84) = {-0.074638, -0.749279, 0, 1.0};
Point(85) = {-0.072128, -0.749191, 0, 1.0};
Point(86) = {-0.069626, -0.749131, 0, 1.0};
Point(87) = {-0.067124, -0.749093, 0, 1.0};
Point(88) = {-0.064619, -0.749073, 0, 1.0};
Point(89) = {-0.062115, -0.749073, 0, 1.0};
Point(90) = {-0.059616, -0.749091, 0, 1.0};
Point(91) = {-0.057120, -0.749127, 0, 1.0};
Point(92) = {-0.054628, -0.749184, 0, 1.0};
Point(93) = {-0.052142, -0.749262, 0, 1.0};
Point(94) = {-0.049638, -0.749359, 0, 1.0};
Point(95) = {-0.047125, -0.749468, 0, 1.0};
Point(96) = {-0.044619, -0.749583, 0, 1.0};
Point(97) = {-0.042104, -0.749693, 0, 1.0};
Point(98) = {-0.039582, -0.749791, 0, 1.0};
Point(99) = {-0.037063, -0.749874, 0, 1.0};
Point(100) = {-0.034544, -0.749937, 0, 1.0};
Point(101) = {-0.032029, -0.749980, 0, 1.0};
Point(102) = {-0.029517, -0.750000, 0, 1.0};
Point(103) = {-0.027004, -0.749998, 0, 1.0};
Point(104) = {-0.024493, -0.749972, 0, 1.0};
Point(105) = {-0.021984, -0.749919, 0, 1.0};
Point(106) = {-0.019474, -0.749837, 0, 1.0};
Point(107) = {-0.016964, -0.749725, 0, 1.0};
Point(108) = {-0.014457, -0.749584, 0, 1.0};
Point(109) = {-0.011952, -0.749412, 0, 1.0};
Point(110) = {-0.009447, -0.749214, 0, 1.0};
Point(111) = {-0.004443, -0.748734, 0, 1.0};
Point(112) = {0.000554, -0.748135, 0, 1.0};
Point(113) = {0.003049, -0.747785, 0, 1.0};
Point(114) = {0.005551, -0.747393, 0, 1.0};
Point(115) = {0.008053, -0.746957, 0, 1.0};
Point(116) = {0.010543, -0.746474, 0, 1.0};
Point(117) = {0.013025, -0.745938, 0, 1.0};
Point(118) = {0.015496, -0.745348, 0, 1.0};
Point(119) = {0.017956, -0.744674, 0, 1.0};
Point(120) = {0.020444, -0.743855, 0, 1.0};
Point(121) = {0.022842, -0.742812, 0, 1.0};
Point(122) = {0.024129, -0.742003, 0, 1.0};
Point(123) = {0.024720, -0.741440, 0, 1.0};
Point(124) = {0.024945, -0.741074, 0, 1.0};
Point(125) = {0.025000, -0.740772, 0, 1.0};
Point(126) = {0.024541, -0.740326, 0, 1.0};
Point(127) = {0.024290, -0.740261, 0, 1.0};
Point(128) = {0.023424, -0.740249, 0, 1.0};
Point(129) = {0.022264, -0.740144, 0, 1.0};
Point(130) = {0.019737, -0.740165, 0, 1.0};
Point(131) = {0.017282, -0.740204, 0, 1.0};
Point(132) = {0.014786, -0.740249, 0, 1.0};
Point(133) = {0.012296, -0.740302, 0, 1.0};
Point(134) = {0.009812, -0.740368, 0, 1.0};
Point(135) = {0.007332, -0.740445, 0, 1.0};
Point(136) = {0.004861, -0.740532, 0, 1.0};
Point(137) = {0.002386, -0.740628, 0, 1.0};
Point(138) = {-0.000097, -0.740732, 0, 1.0};
Point(139) = {-0.005065, -0.740971, 0, 1.0};
Point(140) = {-0.010032, -0.741256, 0, 1.0};
Point(141) = {-0.012514, -0.741417, 0, 1.0};
Point(142) = {-0.014999, -0.741592, 0, 1.0};
Point(143) = {-0.017483, -0.741783, 0, 1.0};
Point(144) = {-0.019963, -0.741990, 0, 1.0};
Point(145) = {-0.022446, -0.742215, 0, 1.0};
Point(146) = {-0.024929, -0.742458, 0, 1.0};
Point(147) = {-0.027413, -0.742717, 0, 1.0};
Point(148) = {-0.029895, -0.742991, 0, 1.0};
Point(149) = {-0.032378, -0.743278, 0, 1.0};
Point(150) = {-0.034860, -0.743574, 0, 1.0};
Point(151) = {-0.037340, -0.743876, 0, 1.0};
Point(152) = {-0.039820, -0.744180, 0, 1.0};
Point(153) = {-0.042300, -0.744482, 0, 1.0};
Point(154) = {-0.044789, -0.744777, 0, 1.0};
Point(155) = {-0.047287, -0.745065, 0, 1.0};
Point(156) = {-0.049777, -0.745349, 0, 1.0};
Point(157) = {-0.052276, -0.745637, 0, 1.0};
Point(158) = {-0.054789, -0.745943, 0, 1.0};
Point(159) = {-0.057293, -0.746273, 0, 1.0};
Point(160) = {-0.059789, -0.746630, 0, 1.0};
Point(161) = {-0.062277, -0.747010, 0, 1.0};
Point(162) = {-0.064756, -0.747406, 0, 1.0};
Point(163) = {-0.067234, -0.747809, 0, 1.0};
Point(164) = {-0.069711, -0.748217, 0, 1.0};
Point(165) = {-0.072186, -0.748646, 0, 1.0};
Point(166) = {-0.074648, -0.749152, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:55};
Spline(3) = {55:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:111};
Spline(6) = {111:138};
Spline(7) = {138:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
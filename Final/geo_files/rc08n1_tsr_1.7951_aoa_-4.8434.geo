SetFactory("OpenCASCADE");

Point(1) = {0.112090, 0.748919, 0, 1.0};
Point(2) = {0.108325, 0.748786, 0, 1.0};
Point(3) = {0.104573, 0.748697, 0, 1.0};
Point(4) = {0.100819, 0.748639, 0, 1.0};
Point(5) = {0.097062, 0.748610, 0, 1.0};
Point(6) = {0.093306, 0.748609, 0, 1.0};
Point(7) = {0.089558, 0.748636, 0, 1.0};
Point(8) = {0.085814, 0.748691, 0, 1.0};
Point(9) = {0.082076, 0.748777, 0, 1.0};
Point(10) = {0.078346, 0.748893, 0, 1.0};
Point(11) = {0.074591, 0.749038, 0, 1.0};
Point(12) = {0.070821, 0.749202, 0, 1.0};
Point(13) = {0.067062, 0.749374, 0, 1.0};
Point(14) = {0.063290, 0.749539, 0, 1.0};
Point(15) = {0.059507, 0.749687, 0, 1.0};
Point(16) = {0.055728, 0.749811, 0, 1.0};
Point(17) = {0.051950, 0.749906, 0, 1.0};
Point(18) = {0.048177, 0.749970, 0, 1.0};
Point(19) = {0.044409, 0.750000, 0, 1.0};
Point(20) = {0.040640, 0.749997, 0, 1.0};
Point(21) = {0.036873, 0.749957, 0, 1.0};
Point(22) = {0.033109, 0.749878, 0, 1.0};
Point(23) = {0.029345, 0.749756, 0, 1.0};
Point(24) = {0.025580, 0.749587, 0, 1.0};
Point(25) = {0.021819, 0.749375, 0, 1.0};
Point(26) = {0.018062, 0.749119, 0, 1.0};
Point(27) = {0.014304, 0.748821, 0, 1.0};
Point(28) = {0.006798, 0.748101, 0, 1.0};
Point(29) = {-0.000697, 0.747202, 0, 1.0};
Point(30) = {-0.004440, 0.746677, 0, 1.0};
Point(31) = {-0.008192, 0.746089, 0, 1.0};
Point(32) = {-0.011945, 0.745435, 0, 1.0};
Point(33) = {-0.015680, 0.744711, 0, 1.0};
Point(34) = {-0.019403, 0.743907, 0, 1.0};
Point(35) = {-0.023110, 0.743023, 0, 1.0};
Point(36) = {-0.026800, 0.742011, 0, 1.0};
Point(37) = {-0.030532, 0.740782, 0, 1.0};
Point(38) = {-0.034129, 0.739218, 0, 1.0};
Point(39) = {-0.036060, 0.738005, 0, 1.0};
Point(40) = {-0.036946, 0.737159, 0, 1.0};
Point(41) = {-0.037283, 0.736611, 0, 1.0};
Point(42) = {-0.037366, 0.736158, 0, 1.0};
Point(43) = {-0.036677, 0.735489, 0, 1.0};
Point(44) = {-0.036301, 0.735392, 0, 1.0};
Point(45) = {-0.035003, 0.735373, 0, 1.0};
Point(46) = {-0.033263, 0.735215, 0, 1.0};
Point(47) = {-0.029472, 0.735248, 0, 1.0};
Point(48) = {-0.025789, 0.735307, 0, 1.0};
Point(49) = {-0.022046, 0.735374, 0, 1.0};
Point(50) = {-0.018310, 0.735452, 0, 1.0};
Point(51) = {-0.014585, 0.735551, 0, 1.0};
Point(52) = {-0.010865, 0.735668, 0, 1.0};
Point(53) = {-0.007158, 0.735798, 0, 1.0};
Point(54) = {-0.003445, 0.735942, 0, 1.0};
Point(55) = {0.000280, 0.736098, 0, 1.0};
Point(56) = {0.007731, 0.736457, 0, 1.0};
Point(57) = {0.015182, 0.736884, 0, 1.0};
Point(58) = {0.018906, 0.737125, 0, 1.0};
Point(59) = {0.022632, 0.737388, 0, 1.0};
Point(60) = {0.026358, 0.737674, 0, 1.0};
Point(61) = {0.030078, 0.737985, 0, 1.0};
Point(62) = {0.033802, 0.738323, 0, 1.0};
Point(63) = {0.037527, 0.738687, 0, 1.0};
Point(64) = {0.041253, 0.739076, 0, 1.0};
Point(65) = {0.044977, 0.739486, 0, 1.0};
Point(66) = {0.048702, 0.739916, 0, 1.0};
Point(67) = {0.052424, 0.740361, 0, 1.0};
Point(68) = {0.056144, 0.740814, 0, 1.0};
Point(69) = {0.059865, 0.741270, 0, 1.0};
Point(70) = {0.063585, 0.741723, 0, 1.0};
Point(71) = {0.067318, 0.742165, 0, 1.0};
Point(72) = {0.071065, 0.742597, 0, 1.0};
Point(73) = {0.074799, 0.743024, 0, 1.0};
Point(74) = {0.078548, 0.743456, 0, 1.0};
Point(75) = {0.082317, 0.743914, 0, 1.0};
Point(76) = {0.086073, 0.744409, 0, 1.0};
Point(77) = {0.089817, 0.744944, 0, 1.0};
Point(78) = {0.093549, 0.745515, 0, 1.0};
Point(79) = {0.097268, 0.746109, 0, 1.0};
Point(80) = {0.100985, 0.746713, 0, 1.0};
Point(81) = {0.104700, 0.747326, 0, 1.0};
Point(82) = {0.108413, 0.747969, 0, 1.0};
Point(83) = {0.112106, 0.748727, 0, 1.0};
Point(84) = {-0.112090, -0.748919, 0, 1.0};
Point(85) = {-0.108325, -0.748786, 0, 1.0};
Point(86) = {-0.104573, -0.748697, 0, 1.0};
Point(87) = {-0.100819, -0.748639, 0, 1.0};
Point(88) = {-0.097062, -0.748610, 0, 1.0};
Point(89) = {-0.093306, -0.748609, 0, 1.0};
Point(90) = {-0.089558, -0.748636, 0, 1.0};
Point(91) = {-0.085814, -0.748691, 0, 1.0};
Point(92) = {-0.082076, -0.748777, 0, 1.0};
Point(93) = {-0.078346, -0.748893, 0, 1.0};
Point(94) = {-0.074591, -0.749038, 0, 1.0};
Point(95) = {-0.070821, -0.749202, 0, 1.0};
Point(96) = {-0.067062, -0.749374, 0, 1.0};
Point(97) = {-0.063290, -0.749539, 0, 1.0};
Point(98) = {-0.059507, -0.749687, 0, 1.0};
Point(99) = {-0.055728, -0.749811, 0, 1.0};
Point(100) = {-0.051950, -0.749906, 0, 1.0};
Point(101) = {-0.048177, -0.749970, 0, 1.0};
Point(102) = {-0.044409, -0.750000, 0, 1.0};
Point(103) = {-0.040640, -0.749997, 0, 1.0};
Point(104) = {-0.036873, -0.749957, 0, 1.0};
Point(105) = {-0.033109, -0.749878, 0, 1.0};
Point(106) = {-0.029345, -0.749756, 0, 1.0};
Point(107) = {-0.025580, -0.749587, 0, 1.0};
Point(108) = {-0.021819, -0.749375, 0, 1.0};
Point(109) = {-0.018062, -0.749119, 0, 1.0};
Point(110) = {-0.014304, -0.748821, 0, 1.0};
Point(111) = {-0.006798, -0.748101, 0, 1.0};
Point(112) = {0.000697, -0.747202, 0, 1.0};
Point(113) = {0.004440, -0.746677, 0, 1.0};
Point(114) = {0.008192, -0.746089, 0, 1.0};
Point(115) = {0.011945, -0.745435, 0, 1.0};
Point(116) = {0.015680, -0.744711, 0, 1.0};
Point(117) = {0.019403, -0.743907, 0, 1.0};
Point(118) = {0.023110, -0.743023, 0, 1.0};
Point(119) = {0.026800, -0.742011, 0, 1.0};
Point(120) = {0.030532, -0.740782, 0, 1.0};
Point(121) = {0.034129, -0.739218, 0, 1.0};
Point(122) = {0.036060, -0.738005, 0, 1.0};
Point(123) = {0.036946, -0.737159, 0, 1.0};
Point(124) = {0.037283, -0.736611, 0, 1.0};
Point(125) = {0.037366, -0.736158, 0, 1.0};
Point(126) = {0.036677, -0.735489, 0, 1.0};
Point(127) = {0.036301, -0.735392, 0, 1.0};
Point(128) = {0.035003, -0.735373, 0, 1.0};
Point(129) = {0.033263, -0.735215, 0, 1.0};
Point(130) = {0.029472, -0.735248, 0, 1.0};
Point(131) = {0.025789, -0.735307, 0, 1.0};
Point(132) = {0.022046, -0.735374, 0, 1.0};
Point(133) = {0.018310, -0.735452, 0, 1.0};
Point(134) = {0.014585, -0.735551, 0, 1.0};
Point(135) = {0.010865, -0.735668, 0, 1.0};
Point(136) = {0.007158, -0.735798, 0, 1.0};
Point(137) = {0.003445, -0.735942, 0, 1.0};
Point(138) = {-0.000280, -0.736098, 0, 1.0};
Point(139) = {-0.007731, -0.736457, 0, 1.0};
Point(140) = {-0.015182, -0.736884, 0, 1.0};
Point(141) = {-0.018906, -0.737125, 0, 1.0};
Point(142) = {-0.022632, -0.737388, 0, 1.0};
Point(143) = {-0.026358, -0.737674, 0, 1.0};
Point(144) = {-0.030078, -0.737985, 0, 1.0};
Point(145) = {-0.033802, -0.738323, 0, 1.0};
Point(146) = {-0.037527, -0.738687, 0, 1.0};
Point(147) = {-0.041253, -0.739076, 0, 1.0};
Point(148) = {-0.044977, -0.739486, 0, 1.0};
Point(149) = {-0.048702, -0.739916, 0, 1.0};
Point(150) = {-0.052424, -0.740361, 0, 1.0};
Point(151) = {-0.056144, -0.740814, 0, 1.0};
Point(152) = {-0.059865, -0.741270, 0, 1.0};
Point(153) = {-0.063585, -0.741723, 0, 1.0};
Point(154) = {-0.067318, -0.742165, 0, 1.0};
Point(155) = {-0.071065, -0.742597, 0, 1.0};
Point(156) = {-0.074799, -0.743024, 0, 1.0};
Point(157) = {-0.078548, -0.743456, 0, 1.0};
Point(158) = {-0.082317, -0.743914, 0, 1.0};
Point(159) = {-0.086073, -0.744409, 0, 1.0};
Point(160) = {-0.089817, -0.744944, 0, 1.0};
Point(161) = {-0.093549, -0.745515, 0, 1.0};
Point(162) = {-0.097268, -0.746109, 0, 1.0};
Point(163) = {-0.100985, -0.746713, 0, 1.0};
Point(164) = {-0.104700, -0.747326, 0, 1.0};
Point(165) = {-0.108413, -0.747969, 0, 1.0};
Point(166) = {-0.112106, -0.748727, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:55};
Spline(3) = {55:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:111};
Spline(6) = {111:138};
Spline(7) = {138:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
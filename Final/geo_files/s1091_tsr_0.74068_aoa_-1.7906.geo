SetFactory("OpenCASCADE");

Point(1) = {0.112435, 0.741107, 0, 1.0};
Point(2) = {0.112164, 0.741170, 0, 1.0};
Point(3) = {0.111393, 0.741370, 0, 1.0};
Point(4) = {0.110178, 0.741695, 0, 1.0};
Point(5) = {0.108554, 0.742112, 0, 1.0};
Point(6) = {0.106547, 0.742594, 0, 1.0};
Point(7) = {0.104173, 0.743114, 0, 1.0};
Point(8) = {0.101437, 0.743638, 0, 1.0};
Point(9) = {0.098330, 0.744152, 0, 1.0};
Point(10) = {0.094853, 0.744666, 0, 1.0};
Point(11) = {0.091034, 0.745186, 0, 1.0};
Point(12) = {0.086899, 0.745711, 0, 1.0};
Point(13) = {0.082476, 0.746234, 0, 1.0};
Point(14) = {0.077796, 0.746756, 0, 1.0};
Point(15) = {0.072891, 0.747269, 0, 1.0};
Point(16) = {0.067795, 0.747767, 0, 1.0};
Point(17) = {0.062546, 0.748242, 0, 1.0};
Point(18) = {0.057178, 0.748688, 0, 1.0};
Point(19) = {0.051728, 0.749095, 0, 1.0};
Point(20) = {0.046235, 0.749449, 0, 1.0};
Point(21) = {0.040737, 0.749736, 0, 1.0};
Point(22) = {0.035254, 0.749922, 0, 1.0};
Point(23) = {0.029790, 0.750000, 0, 1.0};
Point(24) = {0.024369, 0.749994, 0, 1.0};
Point(25) = {0.019019, 0.749903, 0, 1.0};
Point(26) = {0.013775, 0.749733, 0, 1.0};
Point(27) = {0.008667, 0.749485, 0, 1.0};
Point(28) = {0.003725, 0.749160, 0, 1.0};
Point(29) = {-0.001021, 0.748755, 0, 1.0};
Point(30) = {-0.005550, 0.748269, 0, 1.0};
Point(31) = {-0.009839, 0.747703, 0, 1.0};
Point(32) = {-0.013874, 0.747064, 0, 1.0};
Point(33) = {-0.017635, 0.746359, 0, 1.0};
Point(34) = {-0.021105, 0.745598, 0, 1.0};
Point(35) = {-0.024262, 0.744790, 0, 1.0};
Point(36) = {-0.027096, 0.743940, 0, 1.0};
Point(37) = {-0.029590, 0.743059, 0, 1.0};
Point(38) = {-0.031728, 0.742154, 0, 1.0};
Point(39) = {-0.033502, 0.741231, 0, 1.0};
Point(40) = {-0.034908, 0.740267, 0, 1.0};
Point(41) = {-0.035985, 0.739265, 0, 1.0};
Point(42) = {-0.036773, 0.738283, 0, 1.0};
Point(43) = {-0.037271, 0.737370, 0, 1.0};
Point(44) = {-0.037482, 0.736580, 0, 1.0};
Point(45) = {-0.037423, 0.736000, 0, 1.0};
Point(46) = {-0.036936, 0.735733, 0, 1.0};
Point(47) = {-0.035890, 0.735695, 0, 1.0};
Point(48) = {-0.034348, 0.735787, 0, 1.0};
Point(49) = {-0.032332, 0.736014, 0, 1.0};
Point(50) = {-0.029858, 0.736388, 0, 1.0};
Point(51) = {-0.026914, 0.736923, 0, 1.0};
Point(52) = {-0.023473, 0.737586, 0, 1.0};
Point(53) = {-0.019550, 0.738358, 0, 1.0};
Point(54) = {-0.015166, 0.739203, 0, 1.0};
Point(55) = {-0.010337, 0.740099, 0, 1.0};
Point(56) = {-0.005091, 0.741016, 0, 1.0};
Point(57) = {0.000538, 0.741929, 0, 1.0};
Point(58) = {0.006513, 0.742809, 0, 1.0};
Point(59) = {0.012795, 0.743633, 0, 1.0};
Point(60) = {0.019340, 0.744367, 0, 1.0};
Point(61) = {0.026098, 0.744988, 0, 1.0};
Point(62) = {0.033016, 0.745456, 0, 1.0};
Point(63) = {0.040040, 0.745737, 0, 1.0};
Point(64) = {0.047079, 0.745740, 0, 1.0};
Point(65) = {0.054001, 0.745430, 0, 1.0};
Point(66) = {0.060508, 0.744946, 0, 1.0};
Point(67) = {0.066548, 0.744450, 0, 1.0};
Point(68) = {0.072308, 0.744034, 0, 1.0};
Point(69) = {0.077776, 0.743661, 0, 1.0};
Point(70) = {0.082935, 0.743313, 0, 1.0};
Point(71) = {0.087762, 0.742991, 0, 1.0};
Point(72) = {0.092232, 0.742687, 0, 1.0};
Point(73) = {0.096317, 0.742399, 0, 1.0};
Point(74) = {0.099991, 0.742125, 0, 1.0};
Point(75) = {0.103227, 0.741866, 0, 1.0};
Point(76) = {0.105996, 0.741627, 0, 1.0};
Point(77) = {0.108276, 0.741425, 0, 1.0};
Point(78) = {0.110060, 0.741275, 0, 1.0};
Point(79) = {0.111357, 0.741181, 0, 1.0};
Point(80) = {0.112160, 0.741128, 0, 1.0};
Point(81) = {-0.112435, -0.741107, 0, 1.0};
Point(82) = {-0.112164, -0.741170, 0, 1.0};
Point(83) = {-0.111393, -0.741370, 0, 1.0};
Point(84) = {-0.110178, -0.741695, 0, 1.0};
Point(85) = {-0.108554, -0.742112, 0, 1.0};
Point(86) = {-0.106547, -0.742594, 0, 1.0};
Point(87) = {-0.104173, -0.743114, 0, 1.0};
Point(88) = {-0.101437, -0.743638, 0, 1.0};
Point(89) = {-0.098330, -0.744152, 0, 1.0};
Point(90) = {-0.094853, -0.744666, 0, 1.0};
Point(91) = {-0.091034, -0.745186, 0, 1.0};
Point(92) = {-0.086899, -0.745711, 0, 1.0};
Point(93) = {-0.082476, -0.746234, 0, 1.0};
Point(94) = {-0.077796, -0.746756, 0, 1.0};
Point(95) = {-0.072891, -0.747269, 0, 1.0};
Point(96) = {-0.067795, -0.747767, 0, 1.0};
Point(97) = {-0.062546, -0.748242, 0, 1.0};
Point(98) = {-0.057178, -0.748688, 0, 1.0};
Point(99) = {-0.051728, -0.749095, 0, 1.0};
Point(100) = {-0.046235, -0.749449, 0, 1.0};
Point(101) = {-0.040737, -0.749736, 0, 1.0};
Point(102) = {-0.035254, -0.749922, 0, 1.0};
Point(103) = {-0.029790, -0.750000, 0, 1.0};
Point(104) = {-0.024369, -0.749994, 0, 1.0};
Point(105) = {-0.019019, -0.749903, 0, 1.0};
Point(106) = {-0.013775, -0.749733, 0, 1.0};
Point(107) = {-0.008667, -0.749485, 0, 1.0};
Point(108) = {-0.003725, -0.749160, 0, 1.0};
Point(109) = {0.001021, -0.748755, 0, 1.0};
Point(110) = {0.005550, -0.748269, 0, 1.0};
Point(111) = {0.009839, -0.747703, 0, 1.0};
Point(112) = {0.013874, -0.747064, 0, 1.0};
Point(113) = {0.017635, -0.746359, 0, 1.0};
Point(114) = {0.021105, -0.745598, 0, 1.0};
Point(115) = {0.024262, -0.744790, 0, 1.0};
Point(116) = {0.027096, -0.743940, 0, 1.0};
Point(117) = {0.029590, -0.743059, 0, 1.0};
Point(118) = {0.031728, -0.742154, 0, 1.0};
Point(119) = {0.033502, -0.741231, 0, 1.0};
Point(120) = {0.034908, -0.740267, 0, 1.0};
Point(121) = {0.035985, -0.739265, 0, 1.0};
Point(122) = {0.036773, -0.738283, 0, 1.0};
Point(123) = {0.037271, -0.737370, 0, 1.0};
Point(124) = {0.037482, -0.736580, 0, 1.0};
Point(125) = {0.037423, -0.736000, 0, 1.0};
Point(126) = {0.036936, -0.735733, 0, 1.0};
Point(127) = {0.035890, -0.735695, 0, 1.0};
Point(128) = {0.034348, -0.735787, 0, 1.0};
Point(129) = {0.032332, -0.736014, 0, 1.0};
Point(130) = {0.029858, -0.736388, 0, 1.0};
Point(131) = {0.026914, -0.736923, 0, 1.0};
Point(132) = {0.023473, -0.737586, 0, 1.0};
Point(133) = {0.019550, -0.738358, 0, 1.0};
Point(134) = {0.015166, -0.739203, 0, 1.0};
Point(135) = {0.010337, -0.740099, 0, 1.0};
Point(136) = {0.005091, -0.741016, 0, 1.0};
Point(137) = {-0.000538, -0.741929, 0, 1.0};
Point(138) = {-0.006513, -0.742809, 0, 1.0};
Point(139) = {-0.012795, -0.743633, 0, 1.0};
Point(140) = {-0.019340, -0.744367, 0, 1.0};
Point(141) = {-0.026098, -0.744988, 0, 1.0};
Point(142) = {-0.033016, -0.745456, 0, 1.0};
Point(143) = {-0.040040, -0.745737, 0, 1.0};
Point(144) = {-0.047079, -0.745740, 0, 1.0};
Point(145) = {-0.054001, -0.745430, 0, 1.0};
Point(146) = {-0.060508, -0.744946, 0, 1.0};
Point(147) = {-0.066548, -0.744450, 0, 1.0};
Point(148) = {-0.072308, -0.744034, 0, 1.0};
Point(149) = {-0.077776, -0.743661, 0, 1.0};
Point(150) = {-0.082935, -0.743313, 0, 1.0};
Point(151) = {-0.087762, -0.742991, 0, 1.0};
Point(152) = {-0.092232, -0.742687, 0, 1.0};
Point(153) = {-0.096317, -0.742399, 0, 1.0};
Point(154) = {-0.099991, -0.742125, 0, 1.0};
Point(155) = {-0.103227, -0.741866, 0, 1.0};
Point(156) = {-0.105996, -0.741627, 0, 1.0};
Point(157) = {-0.108276, -0.741425, 0, 1.0};
Point(158) = {-0.110060, -0.741275, 0, 1.0};
Point(159) = {-0.111357, -0.741181, 0, 1.0};
Point(160) = {-0.112160, -0.741128, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:57};
Spline(3) = {57:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:108};
Spline(6) = {108:137};
Spline(7) = {137:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
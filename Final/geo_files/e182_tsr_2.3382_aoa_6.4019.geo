SetFactory("OpenCASCADE");

Point(1) = {0.074496, 0.728583, 0, 1.0};
Point(2) = {0.074012, 0.728632, 0, 1.0};
Point(3) = {0.072570, 0.728791, 0, 1.0};
Point(4) = {0.070180, 0.729094, 0, 1.0};
Point(5) = {0.066878, 0.729585, 0, 1.0};
Point(6) = {0.062735, 0.730307, 0, 1.0};
Point(7) = {0.057854, 0.731267, 0, 1.0};
Point(8) = {0.052332, 0.732448, 0, 1.0};
Point(9) = {0.046260, 0.733826, 0, 1.0};
Point(10) = {0.039735, 0.735369, 0, 1.0};
Point(11) = {0.032855, 0.737045, 0, 1.0};
Point(12) = {0.025723, 0.738809, 0, 1.0};
Point(13) = {0.018438, 0.740609, 0, 1.0};
Point(14) = {0.011101, 0.742372, 0, 1.0};
Point(15) = {0.003766, 0.744020, 0, 1.0};
Point(16) = {-0.003522, 0.745503, 0, 1.0};
Point(17) = {-0.010719, 0.746786, 0, 1.0};
Point(18) = {-0.017780, 0.747849, 0, 1.0};
Point(19) = {-0.024673, 0.748675, 0, 1.0};
Point(20) = {-0.031363, 0.749284, 0, 1.0};
Point(21) = {-0.037779, 0.749702, 0, 1.0};
Point(22) = {-0.043855, 0.749938, 0, 1.0};
Point(23) = {-0.049522, 0.750000, 0, 1.0};
Point(24) = {-0.054721, 0.749895, 0, 1.0};
Point(25) = {-0.059400, 0.749630, 0, 1.0};
Point(26) = {-0.063514, 0.749216, 0, 1.0};
Point(27) = {-0.067022, 0.748665, 0, 1.0};
Point(28) = {-0.069895, 0.747996, 0, 1.0};
Point(29) = {-0.072116, 0.747232, 0, 1.0};
Point(30) = {-0.073671, 0.746418, 0, 1.0};
Point(31) = {-0.074532, 0.745630, 0, 1.0};
Point(32) = {-0.074544, 0.744890, 0, 1.0};
Point(33) = {-0.073691, 0.744112, 0, 1.0};
Point(34) = {-0.072072, 0.743279, 0, 1.0};
Point(35) = {-0.069690, 0.742432, 0, 1.0};
Point(36) = {-0.066563, 0.741592, 0, 1.0};
Point(37) = {-0.062706, 0.740765, 0, 1.0};
Point(38) = {-0.058150, 0.739952, 0, 1.0};
Point(39) = {-0.052939, 0.739154, 0, 1.0};
Point(40) = {-0.047127, 0.738372, 0, 1.0};
Point(41) = {-0.040771, 0.737604, 0, 1.0};
Point(42) = {-0.033942, 0.736850, 0, 1.0};
Point(43) = {-0.026716, 0.736109, 0, 1.0};
Point(44) = {-0.019174, 0.735382, 0, 1.0};
Point(45) = {-0.011403, 0.734670, 0, 1.0};
Point(46) = {-0.003493, 0.733973, 0, 1.0};
Point(47) = {0.004464, 0.733298, 0, 1.0};
Point(48) = {0.012377, 0.732647, 0, 1.0};
Point(49) = {0.020152, 0.732027, 0, 1.0};
Point(50) = {0.027700, 0.731440, 0, 1.0};
Point(51) = {0.034935, 0.730894, 0, 1.0};
Point(52) = {0.041771, 0.730392, 0, 1.0};
Point(53) = {0.048128, 0.729943, 0, 1.0};
Point(54) = {0.053932, 0.729549, 0, 1.0};
Point(55) = {0.059117, 0.729216, 0, 1.0};
Point(56) = {0.063618, 0.728951, 0, 1.0};
Point(57) = {0.067383, 0.728766, 0, 1.0};
Point(58) = {0.070386, 0.728668, 0, 1.0};
Point(59) = {0.072617, 0.728629, 0, 1.0};
Point(60) = {0.074016, 0.728599, 0, 1.0};
Point(61) = {-0.074496, -0.728583, 0, 1.0};
Point(62) = {-0.074012, -0.728632, 0, 1.0};
Point(63) = {-0.072570, -0.728791, 0, 1.0};
Point(64) = {-0.070180, -0.729094, 0, 1.0};
Point(65) = {-0.066878, -0.729585, 0, 1.0};
Point(66) = {-0.062735, -0.730307, 0, 1.0};
Point(67) = {-0.057854, -0.731267, 0, 1.0};
Point(68) = {-0.052332, -0.732448, 0, 1.0};
Point(69) = {-0.046260, -0.733826, 0, 1.0};
Point(70) = {-0.039735, -0.735369, 0, 1.0};
Point(71) = {-0.032855, -0.737045, 0, 1.0};
Point(72) = {-0.025723, -0.738809, 0, 1.0};
Point(73) = {-0.018438, -0.740609, 0, 1.0};
Point(74) = {-0.011101, -0.742372, 0, 1.0};
Point(75) = {-0.003766, -0.744020, 0, 1.0};
Point(76) = {0.003522, -0.745503, 0, 1.0};
Point(77) = {0.010719, -0.746786, 0, 1.0};
Point(78) = {0.017780, -0.747849, 0, 1.0};
Point(79) = {0.024673, -0.748675, 0, 1.0};
Point(80) = {0.031363, -0.749284, 0, 1.0};
Point(81) = {0.037779, -0.749702, 0, 1.0};
Point(82) = {0.043855, -0.749938, 0, 1.0};
Point(83) = {0.049522, -0.750000, 0, 1.0};
Point(84) = {0.054721, -0.749895, 0, 1.0};
Point(85) = {0.059400, -0.749630, 0, 1.0};
Point(86) = {0.063514, -0.749216, 0, 1.0};
Point(87) = {0.067022, -0.748665, 0, 1.0};
Point(88) = {0.069895, -0.747996, 0, 1.0};
Point(89) = {0.072116, -0.747232, 0, 1.0};
Point(90) = {0.073671, -0.746418, 0, 1.0};
Point(91) = {0.074532, -0.745630, 0, 1.0};
Point(92) = {0.074544, -0.744890, 0, 1.0};
Point(93) = {0.073691, -0.744112, 0, 1.0};
Point(94) = {0.072072, -0.743279, 0, 1.0};
Point(95) = {0.069690, -0.742432, 0, 1.0};
Point(96) = {0.066563, -0.741592, 0, 1.0};
Point(97) = {0.062706, -0.740765, 0, 1.0};
Point(98) = {0.058150, -0.739952, 0, 1.0};
Point(99) = {0.052939, -0.739154, 0, 1.0};
Point(100) = {0.047127, -0.738372, 0, 1.0};
Point(101) = {0.040771, -0.737604, 0, 1.0};
Point(102) = {0.033942, -0.736850, 0, 1.0};
Point(103) = {0.026716, -0.736109, 0, 1.0};
Point(104) = {0.019174, -0.735382, 0, 1.0};
Point(105) = {0.011403, -0.734670, 0, 1.0};
Point(106) = {0.003493, -0.733973, 0, 1.0};
Point(107) = {-0.004464, -0.733298, 0, 1.0};
Point(108) = {-0.012377, -0.732647, 0, 1.0};
Point(109) = {-0.020152, -0.732027, 0, 1.0};
Point(110) = {-0.027700, -0.731440, 0, 1.0};
Point(111) = {-0.034935, -0.730894, 0, 1.0};
Point(112) = {-0.041771, -0.730392, 0, 1.0};
Point(113) = {-0.048128, -0.729943, 0, 1.0};
Point(114) = {-0.053932, -0.729549, 0, 1.0};
Point(115) = {-0.059117, -0.729216, 0, 1.0};
Point(116) = {-0.063618, -0.728951, 0, 1.0};
Point(117) = {-0.067383, -0.728766, 0, 1.0};
Point(118) = {-0.070386, -0.728668, 0, 1.0};
Point(119) = {-0.072617, -0.728629, 0, 1.0};
Point(120) = {-0.074016, -0.728599, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
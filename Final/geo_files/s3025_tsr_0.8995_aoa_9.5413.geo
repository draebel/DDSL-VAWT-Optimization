SetFactory("OpenCASCADE");

Point(1) = {0.073617, 0.729300, 0, 1.0};
Point(2) = {0.073295, 0.729406, 0, 1.0};
Point(3) = {0.072362, 0.729737, 0, 1.0};
Point(4) = {0.070884, 0.730295, 0, 1.0};
Point(5) = {0.068920, 0.731051, 0, 1.0};
Point(6) = {0.066504, 0.731959, 0, 1.0};
Point(7) = {0.063650, 0.732988, 0, 1.0};
Point(8) = {0.060379, 0.734132, 0, 1.0};
Point(9) = {0.056739, 0.735380, 0, 1.0};
Point(10) = {0.052779, 0.736717, 0, 1.0};
Point(11) = {0.048552, 0.738119, 0, 1.0};
Point(12) = {0.044112, 0.739560, 0, 1.0};
Point(13) = {0.039516, 0.741011, 0, 1.0};
Point(14) = {0.034820, 0.742437, 0, 1.0};
Point(15) = {0.030068, 0.743802, 0, 1.0};
Point(16) = {0.025304, 0.745072, 0, 1.0};
Point(17) = {0.020562, 0.746221, 0, 1.0};
Point(18) = {0.015875, 0.747231, 0, 1.0};
Point(19) = {0.011280, 0.748091, 0, 1.0};
Point(20) = {0.006815, 0.748792, 0, 1.0};
Point(21) = {0.002513, 0.749335, 0, 1.0};
Point(22) = {-0.001583, 0.749718, 0, 1.0};
Point(23) = {-0.005435, 0.749940, 0, 1.0};
Point(24) = {-0.009010, 0.750000, 0, 1.0};
Point(25) = {-0.012281, 0.749902, 0, 1.0};
Point(26) = {-0.015221, 0.749658, 0, 1.0};
Point(27) = {-0.017808, 0.749277, 0, 1.0};
Point(28) = {-0.020022, 0.748778, 0, 1.0};
Point(29) = {-0.021849, 0.748181, 0, 1.0};
Point(30) = {-0.023277, 0.747513, 0, 1.0};
Point(31) = {-0.024300, 0.746813, 0, 1.0};
Point(32) = {-0.024901, 0.746145, 0, 1.0};
Point(33) = {-0.024974, 0.745594, 0, 1.0};
Point(34) = {-0.024440, 0.745094, 0, 1.0};
Point(35) = {-0.023329, 0.744550, 0, 1.0};
Point(36) = {-0.021674, 0.743988, 0, 1.0};
Point(37) = {-0.019493, 0.743419, 0, 1.0};
Point(38) = {-0.016799, 0.742844, 0, 1.0};
Point(39) = {-0.013617, 0.742263, 0, 1.0};
Point(40) = {-0.009978, 0.741673, 0, 1.0};
Point(41) = {-0.005918, 0.741070, 0, 1.0};
Point(42) = {-0.001480, 0.740448, 0, 1.0};
Point(43) = {0.003283, 0.739802, 0, 1.0};
Point(44) = {0.008313, 0.739131, 0, 1.0};
Point(45) = {0.013548, 0.738433, 0, 1.0};
Point(46) = {0.018921, 0.737709, 0, 1.0};
Point(47) = {0.024366, 0.736964, 0, 1.0};
Point(48) = {0.029815, 0.736207, 0, 1.0};
Point(49) = {0.035199, 0.735441, 0, 1.0};
Point(50) = {0.040453, 0.734676, 0, 1.0};
Point(51) = {0.045510, 0.733922, 0, 1.0};
Point(52) = {0.050309, 0.733191, 0, 1.0};
Point(53) = {0.054791, 0.732491, 0, 1.0};
Point(54) = {0.058901, 0.731835, 0, 1.0};
Point(55) = {0.062587, 0.731232, 0, 1.0};
Point(56) = {0.065802, 0.730698, 0, 1.0};
Point(57) = {0.068515, 0.730246, 0, 1.0};
Point(58) = {0.070695, 0.729873, 0, 1.0};
Point(59) = {0.072300, 0.729578, 0, 1.0};
Point(60) = {0.073285, 0.729375, 0, 1.0};
Point(61) = {0.073618, 0.729299, 0, 1.0};
Point(62) = {-0.073617, -0.729300, 0, 1.0};
Point(63) = {-0.073295, -0.729406, 0, 1.0};
Point(64) = {-0.072362, -0.729737, 0, 1.0};
Point(65) = {-0.070884, -0.730295, 0, 1.0};
Point(66) = {-0.068920, -0.731051, 0, 1.0};
Point(67) = {-0.066504, -0.731959, 0, 1.0};
Point(68) = {-0.063650, -0.732988, 0, 1.0};
Point(69) = {-0.060379, -0.734132, 0, 1.0};
Point(70) = {-0.056739, -0.735380, 0, 1.0};
Point(71) = {-0.052779, -0.736717, 0, 1.0};
Point(72) = {-0.048552, -0.738119, 0, 1.0};
Point(73) = {-0.044112, -0.739560, 0, 1.0};
Point(74) = {-0.039516, -0.741011, 0, 1.0};
Point(75) = {-0.034820, -0.742437, 0, 1.0};
Point(76) = {-0.030068, -0.743802, 0, 1.0};
Point(77) = {-0.025304, -0.745072, 0, 1.0};
Point(78) = {-0.020562, -0.746221, 0, 1.0};
Point(79) = {-0.015875, -0.747231, 0, 1.0};
Point(80) = {-0.011280, -0.748091, 0, 1.0};
Point(81) = {-0.006815, -0.748792, 0, 1.0};
Point(82) = {-0.002513, -0.749335, 0, 1.0};
Point(83) = {0.001583, -0.749718, 0, 1.0};
Point(84) = {0.005435, -0.749940, 0, 1.0};
Point(85) = {0.009010, -0.750000, 0, 1.0};
Point(86) = {0.012281, -0.749902, 0, 1.0};
Point(87) = {0.015221, -0.749658, 0, 1.0};
Point(88) = {0.017808, -0.749277, 0, 1.0};
Point(89) = {0.020022, -0.748778, 0, 1.0};
Point(90) = {0.021849, -0.748181, 0, 1.0};
Point(91) = {0.023277, -0.747513, 0, 1.0};
Point(92) = {0.024300, -0.746813, 0, 1.0};
Point(93) = {0.024901, -0.746145, 0, 1.0};
Point(94) = {0.024974, -0.745594, 0, 1.0};
Point(95) = {0.024440, -0.745094, 0, 1.0};
Point(96) = {0.023329, -0.744550, 0, 1.0};
Point(97) = {0.021674, -0.743988, 0, 1.0};
Point(98) = {0.019493, -0.743419, 0, 1.0};
Point(99) = {0.016799, -0.742844, 0, 1.0};
Point(100) = {0.013617, -0.742263, 0, 1.0};
Point(101) = {0.009978, -0.741673, 0, 1.0};
Point(102) = {0.005918, -0.741070, 0, 1.0};
Point(103) = {0.001480, -0.740448, 0, 1.0};
Point(104) = {-0.003283, -0.739802, 0, 1.0};
Point(105) = {-0.008313, -0.739131, 0, 1.0};
Point(106) = {-0.013548, -0.738433, 0, 1.0};
Point(107) = {-0.018921, -0.737709, 0, 1.0};
Point(108) = {-0.024366, -0.736964, 0, 1.0};
Point(109) = {-0.029815, -0.736207, 0, 1.0};
Point(110) = {-0.035199, -0.735441, 0, 1.0};
Point(111) = {-0.040453, -0.734676, 0, 1.0};
Point(112) = {-0.045510, -0.733922, 0, 1.0};
Point(113) = {-0.050309, -0.733191, 0, 1.0};
Point(114) = {-0.054791, -0.732491, 0, 1.0};
Point(115) = {-0.058901, -0.731835, 0, 1.0};
Point(116) = {-0.062587, -0.731232, 0, 1.0};
Point(117) = {-0.065802, -0.730698, 0, 1.0};
Point(118) = {-0.068515, -0.730246, 0, 1.0};
Point(119) = {-0.070695, -0.729873, 0, 1.0};
Point(120) = {-0.072300, -0.729578, 0, 1.0};
Point(121) = {-0.073285, -0.729375, 0, 1.0};
Point(122) = {-0.073618, -0.729299, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
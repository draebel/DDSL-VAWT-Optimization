SetFactory("OpenCASCADE");

Point(1) = {0.110718, 0.718966, 0, 1.0};
Point(2) = {0.110236, 0.719126, 0, 1.0};
Point(3) = {0.108837, 0.719621, 0, 1.0};
Point(4) = {0.106621, 0.720458, 0, 1.0};
Point(5) = {0.103677, 0.721592, 0, 1.0};
Point(6) = {0.100055, 0.722953, 0, 1.0};
Point(7) = {0.095776, 0.724495, 0, 1.0};
Point(8) = {0.090873, 0.726210, 0, 1.0};
Point(9) = {0.085415, 0.728082, 0, 1.0};
Point(10) = {0.079478, 0.730086, 0, 1.0};
Point(11) = {0.073141, 0.732188, 0, 1.0};
Point(12) = {0.066485, 0.734348, 0, 1.0};
Point(13) = {0.059594, 0.736524, 0, 1.0};
Point(14) = {0.052553, 0.738662, 0, 1.0};
Point(15) = {0.045429, 0.740707, 0, 1.0};
Point(16) = {0.038287, 0.742612, 0, 1.0};
Point(17) = {0.031177, 0.744334, 0, 1.0};
Point(18) = {0.024151, 0.745848, 0, 1.0};
Point(19) = {0.017262, 0.747138, 0, 1.0};
Point(20) = {0.010567, 0.748189, 0, 1.0};
Point(21) = {0.004118, 0.749003, 0, 1.0};
Point(22) = {-0.002023, 0.749577, 0, 1.0};
Point(23) = {-0.007797, 0.749911, 0, 1.0};
Point(24) = {-0.013157, 0.750000, 0, 1.0};
Point(25) = {-0.018061, 0.749853, 0, 1.0};
Point(26) = {-0.022468, 0.749487, 0, 1.0};
Point(27) = {-0.026347, 0.748916, 0, 1.0};
Point(28) = {-0.029666, 0.748169, 0, 1.0};
Point(29) = {-0.032406, 0.747273, 0, 1.0};
Point(30) = {-0.034546, 0.746272, 0, 1.0};
Point(31) = {-0.036080, 0.745222, 0, 1.0};
Point(32) = {-0.036981, 0.744220, 0, 1.0};
Point(33) = {-0.037091, 0.743395, 0, 1.0};
Point(34) = {-0.036290, 0.742644, 0, 1.0};
Point(35) = {-0.034624, 0.741829, 0, 1.0};
Point(36) = {-0.032143, 0.740987, 0, 1.0};
Point(37) = {-0.028874, 0.740133, 0, 1.0};
Point(38) = {-0.024835, 0.739272, 0, 1.0};
Point(39) = {-0.020065, 0.738400, 0, 1.0};
Point(40) = {-0.014608, 0.737516, 0, 1.0};
Point(41) = {-0.008521, 0.736612, 0, 1.0};
Point(42) = {-0.001869, 0.735679, 0, 1.0};
Point(43) = {0.005272, 0.734711, 0, 1.0};
Point(44) = {0.012814, 0.733705, 0, 1.0};
Point(45) = {0.020662, 0.732658, 0, 1.0};
Point(46) = {0.028718, 0.731573, 0, 1.0};
Point(47) = {0.036881, 0.730457, 0, 1.0};
Point(48) = {0.045049, 0.729321, 0, 1.0};
Point(49) = {0.053122, 0.728172, 0, 1.0};
Point(50) = {0.060999, 0.727026, 0, 1.0};
Point(51) = {0.068580, 0.725896, 0, 1.0};
Point(52) = {0.075775, 0.724799, 0, 1.0};
Point(53) = {0.082495, 0.723750, 0, 1.0};
Point(54) = {0.088657, 0.722766, 0, 1.0};
Point(55) = {0.094183, 0.721862, 0, 1.0};
Point(56) = {0.099003, 0.721062, 0, 1.0};
Point(57) = {0.103070, 0.720385, 0, 1.0};
Point(58) = {0.106339, 0.719825, 0, 1.0};
Point(59) = {0.108744, 0.719383, 0, 1.0};
Point(60) = {0.110222, 0.719078, 0, 1.0};
Point(61) = {0.110720, 0.718965, 0, 1.0};
Point(62) = {-0.110718, -0.718966, 0, 1.0};
Point(63) = {-0.110236, -0.719126, 0, 1.0};
Point(64) = {-0.108837, -0.719621, 0, 1.0};
Point(65) = {-0.106621, -0.720458, 0, 1.0};
Point(66) = {-0.103677, -0.721592, 0, 1.0};
Point(67) = {-0.100055, -0.722953, 0, 1.0};
Point(68) = {-0.095776, -0.724495, 0, 1.0};
Point(69) = {-0.090873, -0.726210, 0, 1.0};
Point(70) = {-0.085415, -0.728082, 0, 1.0};
Point(71) = {-0.079478, -0.730086, 0, 1.0};
Point(72) = {-0.073141, -0.732188, 0, 1.0};
Point(73) = {-0.066485, -0.734348, 0, 1.0};
Point(74) = {-0.059594, -0.736524, 0, 1.0};
Point(75) = {-0.052553, -0.738662, 0, 1.0};
Point(76) = {-0.045429, -0.740707, 0, 1.0};
Point(77) = {-0.038287, -0.742612, 0, 1.0};
Point(78) = {-0.031177, -0.744334, 0, 1.0};
Point(79) = {-0.024151, -0.745848, 0, 1.0};
Point(80) = {-0.017262, -0.747138, 0, 1.0};
Point(81) = {-0.010567, -0.748189, 0, 1.0};
Point(82) = {-0.004118, -0.749003, 0, 1.0};
Point(83) = {0.002023, -0.749577, 0, 1.0};
Point(84) = {0.007797, -0.749911, 0, 1.0};
Point(85) = {0.013157, -0.750000, 0, 1.0};
Point(86) = {0.018061, -0.749853, 0, 1.0};
Point(87) = {0.022468, -0.749487, 0, 1.0};
Point(88) = {0.026347, -0.748916, 0, 1.0};
Point(89) = {0.029666, -0.748169, 0, 1.0};
Point(90) = {0.032406, -0.747273, 0, 1.0};
Point(91) = {0.034546, -0.746272, 0, 1.0};
Point(92) = {0.036080, -0.745222, 0, 1.0};
Point(93) = {0.036981, -0.744220, 0, 1.0};
Point(94) = {0.037091, -0.743395, 0, 1.0};
Point(95) = {0.036290, -0.742644, 0, 1.0};
Point(96) = {0.034624, -0.741829, 0, 1.0};
Point(97) = {0.032143, -0.740987, 0, 1.0};
Point(98) = {0.028874, -0.740133, 0, 1.0};
Point(99) = {0.024835, -0.739272, 0, 1.0};
Point(100) = {0.020065, -0.738400, 0, 1.0};
Point(101) = {0.014608, -0.737516, 0, 1.0};
Point(102) = {0.008521, -0.736612, 0, 1.0};
Point(103) = {0.001869, -0.735679, 0, 1.0};
Point(104) = {-0.005272, -0.734711, 0, 1.0};
Point(105) = {-0.012814, -0.733705, 0, 1.0};
Point(106) = {-0.020662, -0.732658, 0, 1.0};
Point(107) = {-0.028718, -0.731573, 0, 1.0};
Point(108) = {-0.036881, -0.730457, 0, 1.0};
Point(109) = {-0.045049, -0.729321, 0, 1.0};
Point(110) = {-0.053122, -0.728172, 0, 1.0};
Point(111) = {-0.060999, -0.727026, 0, 1.0};
Point(112) = {-0.068580, -0.725896, 0, 1.0};
Point(113) = {-0.075775, -0.724799, 0, 1.0};
Point(114) = {-0.082495, -0.723750, 0, 1.0};
Point(115) = {-0.088657, -0.722766, 0, 1.0};
Point(116) = {-0.094183, -0.721862, 0, 1.0};
Point(117) = {-0.099003, -0.721062, 0, 1.0};
Point(118) = {-0.103070, -0.720385, 0, 1.0};
Point(119) = {-0.106339, -0.719825, 0, 1.0};
Point(120) = {-0.108744, -0.719383, 0, 1.0};
Point(121) = {-0.110222, -0.719078, 0, 1.0};
Point(122) = {-0.110720, -0.718965, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.110425, 0.718949, 0, 1.0};
Point(2) = {0.109942, 0.719110, 0, 1.0};
Point(3) = {0.108543, 0.719605, 0, 1.0};
Point(4) = {0.106326, 0.720443, 0, 1.0};
Point(5) = {0.103380, 0.721577, 0, 1.0};
Point(6) = {0.099756, 0.722939, 0, 1.0};
Point(7) = {0.095475, 0.724481, 0, 1.0};
Point(8) = {0.090569, 0.726197, 0, 1.0};
Point(9) = {0.085109, 0.728070, 0, 1.0};
Point(10) = {0.079168, 0.730076, 0, 1.0};
Point(11) = {0.072828, 0.732179, 0, 1.0};
Point(12) = {0.066168, 0.734340, 0, 1.0};
Point(13) = {0.059274, 0.736517, 0, 1.0};
Point(14) = {0.052229, 0.738656, 0, 1.0};
Point(15) = {0.045102, 0.740703, 0, 1.0};
Point(16) = {0.037956, 0.742608, 0, 1.0};
Point(17) = {0.030842, 0.744331, 0, 1.0};
Point(18) = {0.023813, 0.745846, 0, 1.0};
Point(19) = {0.016920, 0.747137, 0, 1.0};
Point(20) = {0.010222, 0.748188, 0, 1.0};
Point(21) = {0.003770, 0.749002, 0, 1.0};
Point(22) = {-0.002375, 0.749577, 0, 1.0};
Point(23) = {-0.008152, 0.749911, 0, 1.0};
Point(24) = {-0.013515, 0.750000, 0, 1.0};
Point(25) = {-0.018421, 0.749853, 0, 1.0};
Point(26) = {-0.022831, 0.749487, 0, 1.0};
Point(27) = {-0.026711, 0.748916, 0, 1.0};
Point(28) = {-0.030033, 0.748168, 0, 1.0};
Point(29) = {-0.032774, 0.747272, 0, 1.0};
Point(30) = {-0.034915, 0.746270, 0, 1.0};
Point(31) = {-0.036450, 0.745220, 0, 1.0};
Point(32) = {-0.037351, 0.744217, 0, 1.0};
Point(33) = {-0.037461, 0.743391, 0, 1.0};
Point(34) = {-0.036660, 0.742641, 0, 1.0};
Point(35) = {-0.034993, 0.741825, 0, 1.0};
Point(36) = {-0.032511, 0.740982, 0, 1.0};
Point(37) = {-0.029240, 0.740128, 0, 1.0};
Point(38) = {-0.025199, 0.739266, 0, 1.0};
Point(39) = {-0.020426, 0.738394, 0, 1.0};
Point(40) = {-0.014967, 0.737510, 0, 1.0};
Point(41) = {-0.008876, 0.736605, 0, 1.0};
Point(42) = {-0.002220, 0.735672, 0, 1.0};
Point(43) = {0.004924, 0.734703, 0, 1.0};
Point(44) = {0.012469, 0.733697, 0, 1.0};
Point(45) = {0.020321, 0.732649, 0, 1.0};
Point(46) = {0.028381, 0.731564, 0, 1.0};
Point(47) = {0.036549, 0.730447, 0, 1.0};
Point(48) = {0.044722, 0.729310, 0, 1.0};
Point(49) = {0.052799, 0.728161, 0, 1.0};
Point(50) = {0.060680, 0.727014, 0, 1.0};
Point(51) = {0.068265, 0.725884, 0, 1.0};
Point(52) = {0.075464, 0.724786, 0, 1.0};
Point(53) = {0.082187, 0.723737, 0, 1.0};
Point(54) = {0.088352, 0.722752, 0, 1.0};
Point(55) = {0.093881, 0.721847, 0, 1.0};
Point(56) = {0.098704, 0.721047, 0, 1.0};
Point(57) = {0.102772, 0.720369, 0, 1.0};
Point(58) = {0.106043, 0.719809, 0, 1.0};
Point(59) = {0.108449, 0.719367, 0, 1.0};
Point(60) = {0.109928, 0.719062, 0, 1.0};
Point(61) = {0.110426, 0.718949, 0, 1.0};
Point(62) = {-0.110425, -0.718949, 0, 1.0};
Point(63) = {-0.109942, -0.719110, 0, 1.0};
Point(64) = {-0.108543, -0.719605, 0, 1.0};
Point(65) = {-0.106326, -0.720443, 0, 1.0};
Point(66) = {-0.103380, -0.721577, 0, 1.0};
Point(67) = {-0.099756, -0.722939, 0, 1.0};
Point(68) = {-0.095475, -0.724481, 0, 1.0};
Point(69) = {-0.090569, -0.726197, 0, 1.0};
Point(70) = {-0.085109, -0.728070, 0, 1.0};
Point(71) = {-0.079168, -0.730076, 0, 1.0};
Point(72) = {-0.072828, -0.732179, 0, 1.0};
Point(73) = {-0.066168, -0.734340, 0, 1.0};
Point(74) = {-0.059274, -0.736517, 0, 1.0};
Point(75) = {-0.052229, -0.738656, 0, 1.0};
Point(76) = {-0.045102, -0.740703, 0, 1.0};
Point(77) = {-0.037956, -0.742608, 0, 1.0};
Point(78) = {-0.030842, -0.744331, 0, 1.0};
Point(79) = {-0.023813, -0.745846, 0, 1.0};
Point(80) = {-0.016920, -0.747137, 0, 1.0};
Point(81) = {-0.010222, -0.748188, 0, 1.0};
Point(82) = {-0.003770, -0.749002, 0, 1.0};
Point(83) = {0.002375, -0.749577, 0, 1.0};
Point(84) = {0.008152, -0.749911, 0, 1.0};
Point(85) = {0.013515, -0.750000, 0, 1.0};
Point(86) = {0.018421, -0.749853, 0, 1.0};
Point(87) = {0.022831, -0.749487, 0, 1.0};
Point(88) = {0.026711, -0.748916, 0, 1.0};
Point(89) = {0.030033, -0.748168, 0, 1.0};
Point(90) = {0.032774, -0.747272, 0, 1.0};
Point(91) = {0.034915, -0.746270, 0, 1.0};
Point(92) = {0.036450, -0.745220, 0, 1.0};
Point(93) = {0.037351, -0.744217, 0, 1.0};
Point(94) = {0.037461, -0.743391, 0, 1.0};
Point(95) = {0.036660, -0.742641, 0, 1.0};
Point(96) = {0.034993, -0.741825, 0, 1.0};
Point(97) = {0.032511, -0.740982, 0, 1.0};
Point(98) = {0.029240, -0.740128, 0, 1.0};
Point(99) = {0.025199, -0.739266, 0, 1.0};
Point(100) = {0.020426, -0.738394, 0, 1.0};
Point(101) = {0.014967, -0.737510, 0, 1.0};
Point(102) = {0.008876, -0.736605, 0, 1.0};
Point(103) = {0.002220, -0.735672, 0, 1.0};
Point(104) = {-0.004924, -0.734703, 0, 1.0};
Point(105) = {-0.012469, -0.733697, 0, 1.0};
Point(106) = {-0.020321, -0.732649, 0, 1.0};
Point(107) = {-0.028381, -0.731564, 0, 1.0};
Point(108) = {-0.036549, -0.730447, 0, 1.0};
Point(109) = {-0.044722, -0.729310, 0, 1.0};
Point(110) = {-0.052799, -0.728161, 0, 1.0};
Point(111) = {-0.060680, -0.727014, 0, 1.0};
Point(112) = {-0.068265, -0.725884, 0, 1.0};
Point(113) = {-0.075464, -0.724786, 0, 1.0};
Point(114) = {-0.082187, -0.723737, 0, 1.0};
Point(115) = {-0.088352, -0.722752, 0, 1.0};
Point(116) = {-0.093881, -0.721847, 0, 1.0};
Point(117) = {-0.098704, -0.721047, 0, 1.0};
Point(118) = {-0.102772, -0.720369, 0, 1.0};
Point(119) = {-0.106043, -0.719809, 0, 1.0};
Point(120) = {-0.108449, -0.719367, 0, 1.0};
Point(121) = {-0.109928, -0.719062, 0, 1.0};
Point(122) = {-0.110426, -0.718949, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.110872, 0.718933, 0, 1.0};
Point(2) = {0.110389, 0.719094, 0, 1.0};
Point(3) = {0.108989, 0.719589, 0, 1.0};
Point(4) = {0.106771, 0.720428, 0, 1.0};
Point(5) = {0.103824, 0.721562, 0, 1.0};
Point(6) = {0.100198, 0.722925, 0, 1.0};
Point(7) = {0.095914, 0.724468, 0, 1.0};
Point(8) = {0.091006, 0.726185, 0, 1.0};
Point(9) = {0.085543, 0.728059, 0, 1.0};
Point(10) = {0.079599, 0.730065, 0, 1.0};
Point(11) = {0.073255, 0.732170, 0, 1.0};
Point(12) = {0.066592, 0.734332, 0, 1.0};
Point(13) = {0.059695, 0.736510, 0, 1.0};
Point(14) = {0.052646, 0.738650, 0, 1.0};
Point(15) = {0.045515, 0.740698, 0, 1.0};
Point(16) = {0.038365, 0.742604, 0, 1.0};
Point(17) = {0.031248, 0.744329, 0, 1.0};
Point(18) = {0.024215, 0.745844, 0, 1.0};
Point(19) = {0.017319, 0.747135, 0, 1.0};
Point(20) = {0.010617, 0.748187, 0, 1.0};
Point(21) = {0.004161, 0.749002, 0, 1.0};
Point(22) = {-0.001986, 0.749577, 0, 1.0};
Point(23) = {-0.007766, 0.749911, 0, 1.0};
Point(24) = {-0.013133, 0.750000, 0, 1.0};
Point(25) = {-0.018041, 0.749853, 0, 1.0};
Point(26) = {-0.022453, 0.749486, 0, 1.0};
Point(27) = {-0.026336, 0.748915, 0, 1.0};
Point(28) = {-0.029659, 0.748167, 0, 1.0};
Point(29) = {-0.032401, 0.747270, 0, 1.0};
Point(30) = {-0.034543, 0.746268, 0, 1.0};
Point(31) = {-0.036079, 0.745217, 0, 1.0};
Point(32) = {-0.036981, 0.744214, 0, 1.0};
Point(33) = {-0.037091, 0.743388, 0, 1.0};
Point(34) = {-0.036289, 0.742637, 0, 1.0};
Point(35) = {-0.034621, 0.741821, 0, 1.0};
Point(36) = {-0.032138, 0.740977, 0, 1.0};
Point(37) = {-0.028865, 0.740123, 0, 1.0};
Point(38) = {-0.024822, 0.739261, 0, 1.0};
Point(39) = {-0.020047, 0.738388, 0, 1.0};
Point(40) = {-0.014585, 0.737503, 0, 1.0};
Point(41) = {-0.008491, 0.736598, 0, 1.0};
Point(42) = {-0.001832, 0.735664, 0, 1.0};
Point(43) = {0.005316, 0.734696, 0, 1.0};
Point(44) = {0.012866, 0.733688, 0, 1.0};
Point(45) = {0.020722, 0.732640, 0, 1.0};
Point(46) = {0.028786, 0.731554, 0, 1.0};
Point(47) = {0.036957, 0.730436, 0, 1.0};
Point(48) = {0.045135, 0.729299, 0, 1.0};
Point(49) = {0.053216, 0.728149, 0, 1.0};
Point(50) = {0.061101, 0.727002, 0, 1.0};
Point(51) = {0.068690, 0.725871, 0, 1.0};
Point(52) = {0.075893, 0.724773, 0, 1.0};
Point(53) = {0.082619, 0.723723, 0, 1.0};
Point(54) = {0.088788, 0.722738, 0, 1.0};
Point(55) = {0.094319, 0.721833, 0, 1.0};
Point(56) = {0.099145, 0.721032, 0, 1.0};
Point(57) = {0.103216, 0.720354, 0, 1.0};
Point(58) = {0.106488, 0.719793, 0, 1.0};
Point(59) = {0.108895, 0.719351, 0, 1.0};
Point(60) = {0.110375, 0.719046, 0, 1.0};
Point(61) = {0.110874, 0.718933, 0, 1.0};
Point(62) = {-0.110872, -0.718933, 0, 1.0};
Point(63) = {-0.110389, -0.719094, 0, 1.0};
Point(64) = {-0.108989, -0.719589, 0, 1.0};
Point(65) = {-0.106771, -0.720428, 0, 1.0};
Point(66) = {-0.103824, -0.721562, 0, 1.0};
Point(67) = {-0.100198, -0.722925, 0, 1.0};
Point(68) = {-0.095914, -0.724468, 0, 1.0};
Point(69) = {-0.091006, -0.726185, 0, 1.0};
Point(70) = {-0.085543, -0.728059, 0, 1.0};
Point(71) = {-0.079599, -0.730065, 0, 1.0};
Point(72) = {-0.073255, -0.732170, 0, 1.0};
Point(73) = {-0.066592, -0.734332, 0, 1.0};
Point(74) = {-0.059695, -0.736510, 0, 1.0};
Point(75) = {-0.052646, -0.738650, 0, 1.0};
Point(76) = {-0.045515, -0.740698, 0, 1.0};
Point(77) = {-0.038365, -0.742604, 0, 1.0};
Point(78) = {-0.031248, -0.744329, 0, 1.0};
Point(79) = {-0.024215, -0.745844, 0, 1.0};
Point(80) = {-0.017319, -0.747135, 0, 1.0};
Point(81) = {-0.010617, -0.748187, 0, 1.0};
Point(82) = {-0.004161, -0.749002, 0, 1.0};
Point(83) = {0.001986, -0.749577, 0, 1.0};
Point(84) = {0.007766, -0.749911, 0, 1.0};
Point(85) = {0.013133, -0.750000, 0, 1.0};
Point(86) = {0.018041, -0.749853, 0, 1.0};
Point(87) = {0.022453, -0.749486, 0, 1.0};
Point(88) = {0.026336, -0.748915, 0, 1.0};
Point(89) = {0.029659, -0.748167, 0, 1.0};
Point(90) = {0.032401, -0.747270, 0, 1.0};
Point(91) = {0.034543, -0.746268, 0, 1.0};
Point(92) = {0.036079, -0.745217, 0, 1.0};
Point(93) = {0.036981, -0.744214, 0, 1.0};
Point(94) = {0.037091, -0.743388, 0, 1.0};
Point(95) = {0.036289, -0.742637, 0, 1.0};
Point(96) = {0.034621, -0.741821, 0, 1.0};
Point(97) = {0.032138, -0.740977, 0, 1.0};
Point(98) = {0.028865, -0.740123, 0, 1.0};
Point(99) = {0.024822, -0.739261, 0, 1.0};
Point(100) = {0.020047, -0.738388, 0, 1.0};
Point(101) = {0.014585, -0.737503, 0, 1.0};
Point(102) = {0.008491, -0.736598, 0, 1.0};
Point(103) = {0.001832, -0.735664, 0, 1.0};
Point(104) = {-0.005316, -0.734696, 0, 1.0};
Point(105) = {-0.012866, -0.733688, 0, 1.0};
Point(106) = {-0.020722, -0.732640, 0, 1.0};
Point(107) = {-0.028786, -0.731554, 0, 1.0};
Point(108) = {-0.036957, -0.730436, 0, 1.0};
Point(109) = {-0.045135, -0.729299, 0, 1.0};
Point(110) = {-0.053216, -0.728149, 0, 1.0};
Point(111) = {-0.061101, -0.727002, 0, 1.0};
Point(112) = {-0.068690, -0.725871, 0, 1.0};
Point(113) = {-0.075893, -0.724773, 0, 1.0};
Point(114) = {-0.082619, -0.723723, 0, 1.0};
Point(115) = {-0.088788, -0.722738, 0, 1.0};
Point(116) = {-0.094319, -0.721833, 0, 1.0};
Point(117) = {-0.099145, -0.721032, 0, 1.0};
Point(118) = {-0.103216, -0.720354, 0, 1.0};
Point(119) = {-0.106488, -0.719793, 0, 1.0};
Point(120) = {-0.108895, -0.719351, 0, 1.0};
Point(121) = {-0.110375, -0.719046, 0, 1.0};
Point(122) = {-0.110874, -0.718933, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
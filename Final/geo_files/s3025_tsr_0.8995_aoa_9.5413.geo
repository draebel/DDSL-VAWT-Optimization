SetFactory("OpenCASCADE");

Point(1) = {0.147233, 0.708599, 0, 1.0};
Point(2) = {0.146590, 0.708813, 0, 1.0};
Point(3) = {0.144723, 0.709473, 0, 1.0};
Point(4) = {0.141768, 0.710591, 0, 1.0};
Point(5) = {0.137840, 0.712103, 0, 1.0};
Point(6) = {0.133008, 0.713919, 0, 1.0};
Point(7) = {0.127300, 0.715975, 0, 1.0};
Point(8) = {0.120759, 0.718263, 0, 1.0};
Point(9) = {0.113478, 0.720761, 0, 1.0};
Point(10) = {0.105558, 0.723434, 0, 1.0};
Point(11) = {0.097104, 0.726239, 0, 1.0};
Point(12) = {0.088225, 0.729120, 0, 1.0};
Point(13) = {0.079032, 0.732022, 0, 1.0};
Point(14) = {0.069639, 0.734874, 0, 1.0};
Point(15) = {0.060136, 0.737603, 0, 1.0};
Point(16) = {0.050607, 0.740144, 0, 1.0};
Point(17) = {0.041123, 0.742442, 0, 1.0};
Point(18) = {0.031750, 0.744462, 0, 1.0};
Point(19) = {0.022560, 0.746183, 0, 1.0};
Point(20) = {0.013629, 0.747584, 0, 1.0};
Point(21) = {0.005026, 0.748669, 0, 1.0};
Point(22) = {-0.003166, 0.749436, 0, 1.0};
Point(23) = {-0.010869, 0.749881, 0, 1.0};
Point(24) = {-0.018020, 0.750000, 0, 1.0};
Point(25) = {-0.024561, 0.749804, 0, 1.0};
Point(26) = {-0.030442, 0.749315, 0, 1.0};
Point(27) = {-0.035615, 0.748555, 0, 1.0};
Point(28) = {-0.040044, 0.747557, 0, 1.0};
Point(29) = {-0.043698, 0.746362, 0, 1.0};
Point(30) = {-0.046553, 0.745027, 0, 1.0};
Point(31) = {-0.048600, 0.743627, 0, 1.0};
Point(32) = {-0.049802, 0.742289, 0, 1.0};
Point(33) = {-0.049948, 0.741188, 0, 1.0};
Point(34) = {-0.048880, 0.740187, 0, 1.0};
Point(35) = {-0.046657, 0.739100, 0, 1.0};
Point(36) = {-0.043348, 0.737976, 0, 1.0};
Point(37) = {-0.038986, 0.736837, 0, 1.0};
Point(38) = {-0.033598, 0.735688, 0, 1.0};
Point(39) = {-0.027235, 0.734525, 0, 1.0};
Point(40) = {-0.019955, 0.733346, 0, 1.0};
Point(41) = {-0.011835, 0.732140, 0, 1.0};
Point(42) = {-0.002961, 0.730895, 0, 1.0};
Point(43) = {0.006565, 0.729605, 0, 1.0};
Point(44) = {0.016626, 0.728262, 0, 1.0};
Point(45) = {0.027095, 0.726866, 0, 1.0};
Point(46) = {0.037842, 0.725418, 0, 1.0};
Point(47) = {0.048732, 0.723929, 0, 1.0};
Point(48) = {0.059629, 0.722413, 0, 1.0};
Point(49) = {0.070398, 0.720881, 0, 1.0};
Point(50) = {0.080906, 0.719352, 0, 1.0};
Point(51) = {0.091020, 0.717845, 0, 1.0};
Point(52) = {0.100618, 0.716382, 0, 1.0};
Point(53) = {0.109583, 0.714982, 0, 1.0};
Point(54) = {0.117803, 0.713670, 0, 1.0};
Point(55) = {0.125175, 0.712463, 0, 1.0};
Point(56) = {0.131605, 0.711396, 0, 1.0};
Point(57) = {0.137030, 0.710493, 0, 1.0};
Point(58) = {0.141390, 0.709746, 0, 1.0};
Point(59) = {0.144599, 0.709156, 0, 1.0};
Point(60) = {0.146571, 0.708749, 0, 1.0};
Point(61) = {0.147235, 0.708599, 0, 1.0};
Point(62) = {-0.147233, -0.708599, 0, 1.0};
Point(63) = {-0.146590, -0.708813, 0, 1.0};
Point(64) = {-0.144723, -0.709473, 0, 1.0};
Point(65) = {-0.141768, -0.710591, 0, 1.0};
Point(66) = {-0.137840, -0.712103, 0, 1.0};
Point(67) = {-0.133008, -0.713919, 0, 1.0};
Point(68) = {-0.127300, -0.715975, 0, 1.0};
Point(69) = {-0.120759, -0.718263, 0, 1.0};
Point(70) = {-0.113478, -0.720761, 0, 1.0};
Point(71) = {-0.105558, -0.723434, 0, 1.0};
Point(72) = {-0.097104, -0.726239, 0, 1.0};
Point(73) = {-0.088225, -0.729120, 0, 1.0};
Point(74) = {-0.079032, -0.732022, 0, 1.0};
Point(75) = {-0.069639, -0.734874, 0, 1.0};
Point(76) = {-0.060136, -0.737603, 0, 1.0};
Point(77) = {-0.050607, -0.740144, 0, 1.0};
Point(78) = {-0.041123, -0.742442, 0, 1.0};
Point(79) = {-0.031750, -0.744462, 0, 1.0};
Point(80) = {-0.022560, -0.746183, 0, 1.0};
Point(81) = {-0.013629, -0.747584, 0, 1.0};
Point(82) = {-0.005026, -0.748669, 0, 1.0};
Point(83) = {0.003166, -0.749436, 0, 1.0};
Point(84) = {0.010869, -0.749881, 0, 1.0};
Point(85) = {0.018020, -0.750000, 0, 1.0};
Point(86) = {0.024561, -0.749804, 0, 1.0};
Point(87) = {0.030442, -0.749315, 0, 1.0};
Point(88) = {0.035615, -0.748555, 0, 1.0};
Point(89) = {0.040044, -0.747557, 0, 1.0};
Point(90) = {0.043698, -0.746362, 0, 1.0};
Point(91) = {0.046553, -0.745027, 0, 1.0};
Point(92) = {0.048600, -0.743627, 0, 1.0};
Point(93) = {0.049802, -0.742289, 0, 1.0};
Point(94) = {0.049948, -0.741188, 0, 1.0};
Point(95) = {0.048880, -0.740187, 0, 1.0};
Point(96) = {0.046657, -0.739100, 0, 1.0};
Point(97) = {0.043348, -0.737976, 0, 1.0};
Point(98) = {0.038986, -0.736837, 0, 1.0};
Point(99) = {0.033598, -0.735688, 0, 1.0};
Point(100) = {0.027235, -0.734525, 0, 1.0};
Point(101) = {0.019955, -0.733346, 0, 1.0};
Point(102) = {0.011835, -0.732140, 0, 1.0};
Point(103) = {0.002961, -0.730895, 0, 1.0};
Point(104) = {-0.006565, -0.729605, 0, 1.0};
Point(105) = {-0.016626, -0.728262, 0, 1.0};
Point(106) = {-0.027095, -0.726866, 0, 1.0};
Point(107) = {-0.037842, -0.725418, 0, 1.0};
Point(108) = {-0.048732, -0.723929, 0, 1.0};
Point(109) = {-0.059629, -0.722413, 0, 1.0};
Point(110) = {-0.070398, -0.720881, 0, 1.0};
Point(111) = {-0.080906, -0.719352, 0, 1.0};
Point(112) = {-0.091020, -0.717845, 0, 1.0};
Point(113) = {-0.100618, -0.716382, 0, 1.0};
Point(114) = {-0.109583, -0.714982, 0, 1.0};
Point(115) = {-0.117803, -0.713670, 0, 1.0};
Point(116) = {-0.125175, -0.712463, 0, 1.0};
Point(117) = {-0.131605, -0.711396, 0, 1.0};
Point(118) = {-0.137030, -0.710493, 0, 1.0};
Point(119) = {-0.141390, -0.709746, 0, 1.0};
Point(120) = {-0.144599, -0.709156, 0, 1.0};
Point(121) = {-0.146571, -0.708749, 0, 1.0};
Point(122) = {-0.147235, -0.708599, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
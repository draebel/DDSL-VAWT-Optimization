SetFactory("OpenCASCADE");

Point(1) = {0.148750, 0.718713, 0, 1.0};
Point(2) = {0.148085, 0.718830, 0, 1.0};
Point(3) = {0.146123, 0.719207, 0, 1.0};
Point(4) = {0.142934, 0.719898, 0, 1.0};
Point(5) = {0.138613, 0.720922, 0, 1.0};
Point(6) = {0.133268, 0.722286, 0, 1.0};
Point(7) = {0.127012, 0.723960, 0, 1.0};
Point(8) = {0.119968, 0.725911, 0, 1.0};
Point(9) = {0.112252, 0.728080, 0, 1.0};
Point(10) = {0.103983, 0.730403, 0, 1.0};
Point(11) = {0.095272, 0.732795, 0, 1.0};
Point(12) = {0.086198, 0.735168, 0, 1.0};
Point(13) = {0.076821, 0.737461, 0, 1.0};
Point(14) = {0.067219, 0.739645, 0, 1.0};
Point(15) = {0.057480, 0.741689, 0, 1.0};
Point(16) = {0.047702, 0.743556, 0, 1.0};
Point(17) = {0.037971, 0.745220, 0, 1.0};
Point(18) = {0.028375, 0.746657, 0, 1.0};
Point(19) = {0.019007, 0.747848, 0, 1.0};
Point(20) = {0.009947, 0.748779, 0, 1.0};
Point(21) = {0.001282, 0.749452, 0, 1.0};
Point(22) = {-0.006898, 0.749862, 0, 1.0};
Point(23) = {-0.014506, 0.750000, 0, 1.0};
Point(24) = {-0.021474, 0.749851, 0, 1.0};
Point(25) = {-0.027756, 0.749413, 0, 1.0};
Point(26) = {-0.033312, 0.748705, 0, 1.0};
Point(27) = {-0.038107, 0.747746, 0, 1.0};
Point(28) = {-0.042119, 0.746573, 0, 1.0};
Point(29) = {-0.045327, 0.745231, 0, 1.0};
Point(30) = {-0.047723, 0.743785, 0, 1.0};
Point(31) = {-0.049295, 0.742331, 0, 1.0};
Point(32) = {-0.050001, 0.741032, 0, 1.0};
Point(33) = {-0.049553, 0.739929, 0, 1.0};
Point(34) = {-0.047866, 0.738842, 0, 1.0};
Point(35) = {-0.045121, 0.737707, 0, 1.0};
Point(36) = {-0.041353, 0.736583, 0, 1.0};
Point(37) = {-0.036589, 0.735494, 0, 1.0};
Point(38) = {-0.030858, 0.734452, 0, 1.0};
Point(39) = {-0.024207, 0.733454, 0, 1.0};
Point(40) = {-0.016697, 0.732495, 0, 1.0};
Point(41) = {-0.008403, 0.731566, 0, 1.0};
Point(42) = {0.000583, 0.730657, 0, 1.0};
Point(43) = {0.010158, 0.729764, 0, 1.0};
Point(44) = {0.020210, 0.728885, 0, 1.0};
Point(45) = {0.030624, 0.728017, 0, 1.0};
Point(46) = {0.041279, 0.727160, 0, 1.0};
Point(47) = {0.052048, 0.726315, 0, 1.0};
Point(48) = {0.062809, 0.725483, 0, 1.0};
Point(49) = {0.073428, 0.724666, 0, 1.0};
Point(50) = {0.083782, 0.723869, 0, 1.0};
Point(51) = {0.093741, 0.723095, 0, 1.0};
Point(52) = {0.103187, 0.722350, 0, 1.0};
Point(53) = {0.112002, 0.721643, 0, 1.0};
Point(54) = {0.120074, 0.720984, 0, 1.0};
Point(55) = {0.127303, 0.720384, 0, 1.0};
Point(56) = {0.133593, 0.719858, 0, 1.0};
Point(57) = {0.138866, 0.719423, 0, 1.0};
Point(58) = {0.143060, 0.719103, 0, 1.0};
Point(59) = {0.146153, 0.718900, 0, 1.0};
Point(60) = {0.148088, 0.718767, 0, 1.0};
Point(61) = {0.148752, 0.718713, 0, 1.0};
Point(62) = {-0.148750, -0.718713, 0, 1.0};
Point(63) = {-0.148085, -0.718830, 0, 1.0};
Point(64) = {-0.146123, -0.719207, 0, 1.0};
Point(65) = {-0.142934, -0.719898, 0, 1.0};
Point(66) = {-0.138613, -0.720922, 0, 1.0};
Point(67) = {-0.133268, -0.722286, 0, 1.0};
Point(68) = {-0.127012, -0.723960, 0, 1.0};
Point(69) = {-0.119968, -0.725911, 0, 1.0};
Point(70) = {-0.112252, -0.728080, 0, 1.0};
Point(71) = {-0.103983, -0.730403, 0, 1.0};
Point(72) = {-0.095272, -0.732795, 0, 1.0};
Point(73) = {-0.086198, -0.735168, 0, 1.0};
Point(74) = {-0.076821, -0.737461, 0, 1.0};
Point(75) = {-0.067219, -0.739645, 0, 1.0};
Point(76) = {-0.057480, -0.741689, 0, 1.0};
Point(77) = {-0.047702, -0.743556, 0, 1.0};
Point(78) = {-0.037971, -0.745220, 0, 1.0};
Point(79) = {-0.028375, -0.746657, 0, 1.0};
Point(80) = {-0.019007, -0.747848, 0, 1.0};
Point(81) = {-0.009947, -0.748779, 0, 1.0};
Point(82) = {-0.001282, -0.749452, 0, 1.0};
Point(83) = {0.006898, -0.749862, 0, 1.0};
Point(84) = {0.014506, -0.750000, 0, 1.0};
Point(85) = {0.021474, -0.749851, 0, 1.0};
Point(86) = {0.027756, -0.749413, 0, 1.0};
Point(87) = {0.033312, -0.748705, 0, 1.0};
Point(88) = {0.038107, -0.747746, 0, 1.0};
Point(89) = {0.042119, -0.746573, 0, 1.0};
Point(90) = {0.045327, -0.745231, 0, 1.0};
Point(91) = {0.047723, -0.743785, 0, 1.0};
Point(92) = {0.049295, -0.742331, 0, 1.0};
Point(93) = {0.050001, -0.741032, 0, 1.0};
Point(94) = {0.049553, -0.739929, 0, 1.0};
Point(95) = {0.047866, -0.738842, 0, 1.0};
Point(96) = {0.045121, -0.737707, 0, 1.0};
Point(97) = {0.041353, -0.736583, 0, 1.0};
Point(98) = {0.036589, -0.735494, 0, 1.0};
Point(99) = {0.030858, -0.734452, 0, 1.0};
Point(100) = {0.024207, -0.733454, 0, 1.0};
Point(101) = {0.016697, -0.732495, 0, 1.0};
Point(102) = {0.008403, -0.731566, 0, 1.0};
Point(103) = {-0.000583, -0.730657, 0, 1.0};
Point(104) = {-0.010158, -0.729764, 0, 1.0};
Point(105) = {-0.020210, -0.728885, 0, 1.0};
Point(106) = {-0.030624, -0.728017, 0, 1.0};
Point(107) = {-0.041279, -0.727160, 0, 1.0};
Point(108) = {-0.052048, -0.726315, 0, 1.0};
Point(109) = {-0.062809, -0.725483, 0, 1.0};
Point(110) = {-0.073428, -0.724666, 0, 1.0};
Point(111) = {-0.083782, -0.723869, 0, 1.0};
Point(112) = {-0.093741, -0.723095, 0, 1.0};
Point(113) = {-0.103187, -0.722350, 0, 1.0};
Point(114) = {-0.112002, -0.721643, 0, 1.0};
Point(115) = {-0.120074, -0.720984, 0, 1.0};
Point(116) = {-0.127303, -0.720384, 0, 1.0};
Point(117) = {-0.133593, -0.719858, 0, 1.0};
Point(118) = {-0.138866, -0.719423, 0, 1.0};
Point(119) = {-0.143060, -0.719103, 0, 1.0};
Point(120) = {-0.146153, -0.718900, 0, 1.0};
Point(121) = {-0.148088, -0.718767, 0, 1.0};
Point(122) = {-0.148752, -0.718713, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
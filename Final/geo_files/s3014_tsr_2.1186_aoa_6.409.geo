SetFactory("OpenCASCADE");

Point(1) = {0.074375, 0.734357, 0, 1.0};
Point(2) = {0.074042, 0.734415, 0, 1.0};
Point(3) = {0.073061, 0.734604, 0, 1.0};
Point(4) = {0.071467, 0.734949, 0, 1.0};
Point(5) = {0.069307, 0.735461, 0, 1.0};
Point(6) = {0.066634, 0.736143, 0, 1.0};
Point(7) = {0.063506, 0.736980, 0, 1.0};
Point(8) = {0.059984, 0.737955, 0, 1.0};
Point(9) = {0.056126, 0.739040, 0, 1.0};
Point(10) = {0.051992, 0.740202, 0, 1.0};
Point(11) = {0.047636, 0.741397, 0, 1.0};
Point(12) = {0.043099, 0.742584, 0, 1.0};
Point(13) = {0.038411, 0.743731, 0, 1.0};
Point(14) = {0.033610, 0.744822, 0, 1.0};
Point(15) = {0.028740, 0.745844, 0, 1.0};
Point(16) = {0.023851, 0.746778, 0, 1.0};
Point(17) = {0.018985, 0.747610, 0, 1.0};
Point(18) = {0.014187, 0.748328, 0, 1.0};
Point(19) = {0.009504, 0.748924, 0, 1.0};
Point(20) = {0.004973, 0.749389, 0, 1.0};
Point(21) = {0.000641, 0.749726, 0, 1.0};
Point(22) = {-0.003449, 0.749931, 0, 1.0};
Point(23) = {-0.007253, 0.750000, 0, 1.0};
Point(24) = {-0.010737, 0.749925, 0, 1.0};
Point(25) = {-0.013878, 0.749707, 0, 1.0};
Point(26) = {-0.016656, 0.749353, 0, 1.0};
Point(27) = {-0.019053, 0.748873, 0, 1.0};
Point(28) = {-0.021059, 0.748286, 0, 1.0};
Point(29) = {-0.022663, 0.747615, 0, 1.0};
Point(30) = {-0.023862, 0.746893, 0, 1.0};
Point(31) = {-0.024648, 0.746166, 0, 1.0};
Point(32) = {-0.025000, 0.745516, 0, 1.0};
Point(33) = {-0.024776, 0.744965, 0, 1.0};
Point(34) = {-0.023933, 0.744421, 0, 1.0};
Point(35) = {-0.022561, 0.743853, 0, 1.0};
Point(36) = {-0.020677, 0.743291, 0, 1.0};
Point(37) = {-0.018294, 0.742747, 0, 1.0};
Point(38) = {-0.015429, 0.742226, 0, 1.0};
Point(39) = {-0.012104, 0.741727, 0, 1.0};
Point(40) = {-0.008349, 0.741248, 0, 1.0};
Point(41) = {-0.004202, 0.740783, 0, 1.0};
Point(42) = {0.000292, 0.740328, 0, 1.0};
Point(43) = {0.005079, 0.739882, 0, 1.0};
Point(44) = {0.010105, 0.739442, 0, 1.0};
Point(45) = {0.015312, 0.739008, 0, 1.0};
Point(46) = {0.020640, 0.738580, 0, 1.0};
Point(47) = {0.026024, 0.738157, 0, 1.0};
Point(48) = {0.031404, 0.737741, 0, 1.0};
Point(49) = {0.036714, 0.737333, 0, 1.0};
Point(50) = {0.041891, 0.736935, 0, 1.0};
Point(51) = {0.046871, 0.736547, 0, 1.0};
Point(52) = {0.051594, 0.736175, 0, 1.0};
Point(53) = {0.056001, 0.735822, 0, 1.0};
Point(54) = {0.060037, 0.735492, 0, 1.0};
Point(55) = {0.063651, 0.735192, 0, 1.0};
Point(56) = {0.066797, 0.734929, 0, 1.0};
Point(57) = {0.069433, 0.734711, 0, 1.0};
Point(58) = {0.071530, 0.734551, 0, 1.0};
Point(59) = {0.073076, 0.734450, 0, 1.0};
Point(60) = {0.074044, 0.734384, 0, 1.0};
Point(61) = {0.074376, 0.734356, 0, 1.0};
Point(62) = {-0.074375, -0.734357, 0, 1.0};
Point(63) = {-0.074042, -0.734415, 0, 1.0};
Point(64) = {-0.073061, -0.734604, 0, 1.0};
Point(65) = {-0.071467, -0.734949, 0, 1.0};
Point(66) = {-0.069307, -0.735461, 0, 1.0};
Point(67) = {-0.066634, -0.736143, 0, 1.0};
Point(68) = {-0.063506, -0.736980, 0, 1.0};
Point(69) = {-0.059984, -0.737955, 0, 1.0};
Point(70) = {-0.056126, -0.739040, 0, 1.0};
Point(71) = {-0.051992, -0.740202, 0, 1.0};
Point(72) = {-0.047636, -0.741397, 0, 1.0};
Point(73) = {-0.043099, -0.742584, 0, 1.0};
Point(74) = {-0.038411, -0.743731, 0, 1.0};
Point(75) = {-0.033610, -0.744822, 0, 1.0};
Point(76) = {-0.028740, -0.745844, 0, 1.0};
Point(77) = {-0.023851, -0.746778, 0, 1.0};
Point(78) = {-0.018985, -0.747610, 0, 1.0};
Point(79) = {-0.014187, -0.748328, 0, 1.0};
Point(80) = {-0.009504, -0.748924, 0, 1.0};
Point(81) = {-0.004973, -0.749389, 0, 1.0};
Point(82) = {-0.000641, -0.749726, 0, 1.0};
Point(83) = {0.003449, -0.749931, 0, 1.0};
Point(84) = {0.007253, -0.750000, 0, 1.0};
Point(85) = {0.010737, -0.749925, 0, 1.0};
Point(86) = {0.013878, -0.749707, 0, 1.0};
Point(87) = {0.016656, -0.749353, 0, 1.0};
Point(88) = {0.019053, -0.748873, 0, 1.0};
Point(89) = {0.021059, -0.748286, 0, 1.0};
Point(90) = {0.022663, -0.747615, 0, 1.0};
Point(91) = {0.023862, -0.746893, 0, 1.0};
Point(92) = {0.024648, -0.746166, 0, 1.0};
Point(93) = {0.025000, -0.745516, 0, 1.0};
Point(94) = {0.024776, -0.744965, 0, 1.0};
Point(95) = {0.023933, -0.744421, 0, 1.0};
Point(96) = {0.022561, -0.743853, 0, 1.0};
Point(97) = {0.020677, -0.743291, 0, 1.0};
Point(98) = {0.018294, -0.742747, 0, 1.0};
Point(99) = {0.015429, -0.742226, 0, 1.0};
Point(100) = {0.012104, -0.741727, 0, 1.0};
Point(101) = {0.008349, -0.741248, 0, 1.0};
Point(102) = {0.004202, -0.740783, 0, 1.0};
Point(103) = {-0.000292, -0.740328, 0, 1.0};
Point(104) = {-0.005079, -0.739882, 0, 1.0};
Point(105) = {-0.010105, -0.739442, 0, 1.0};
Point(106) = {-0.015312, -0.739008, 0, 1.0};
Point(107) = {-0.020640, -0.738580, 0, 1.0};
Point(108) = {-0.026024, -0.738157, 0, 1.0};
Point(109) = {-0.031404, -0.737741, 0, 1.0};
Point(110) = {-0.036714, -0.737333, 0, 1.0};
Point(111) = {-0.041891, -0.736935, 0, 1.0};
Point(112) = {-0.046871, -0.736547, 0, 1.0};
Point(113) = {-0.051594, -0.736175, 0, 1.0};
Point(114) = {-0.056001, -0.735822, 0, 1.0};
Point(115) = {-0.060037, -0.735492, 0, 1.0};
Point(116) = {-0.063651, -0.735192, 0, 1.0};
Point(117) = {-0.066797, -0.734929, 0, 1.0};
Point(118) = {-0.069433, -0.734711, 0, 1.0};
Point(119) = {-0.071530, -0.734551, 0, 1.0};
Point(120) = {-0.073076, -0.734450, 0, 1.0};
Point(121) = {-0.074044, -0.734384, 0, 1.0};
Point(122) = {-0.074376, -0.734356, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074530, 0.726535, 0, 1.0};
Point(2) = {0.074031, 0.726623, 0, 1.0};
Point(3) = {0.072560, 0.726906, 0, 1.0};
Point(4) = {0.070168, 0.727423, 0, 1.0};
Point(5) = {0.066928, 0.728192, 0, 1.0};
Point(6) = {0.062919, 0.729214, 0, 1.0};
Point(7) = {0.058227, 0.730470, 0, 1.0};
Point(8) = {0.052944, 0.731933, 0, 1.0};
Point(9) = {0.047157, 0.733560, 0, 1.0};
Point(10) = {0.040955, 0.735303, 0, 1.0};
Point(11) = {0.034422, 0.737096, 0, 1.0};
Point(12) = {0.027617, 0.738876, 0, 1.0};
Point(13) = {0.020584, 0.740596, 0, 1.0};
Point(14) = {0.013383, 0.742234, 0, 1.0};
Point(15) = {0.006079, 0.743767, 0, 1.0};
Point(16) = {-0.001255, 0.745167, 0, 1.0};
Point(17) = {-0.008553, 0.746415, 0, 1.0};
Point(18) = {-0.015750, 0.747492, 0, 1.0};
Point(19) = {-0.022776, 0.748386, 0, 1.0};
Point(20) = {-0.029571, 0.749084, 0, 1.0};
Point(21) = {-0.036070, 0.749589, 0, 1.0};
Point(22) = {-0.042204, 0.749896, 0, 1.0};
Point(23) = {-0.047910, 0.750000, 0, 1.0};
Point(24) = {-0.053136, 0.749888, 0, 1.0};
Point(25) = {-0.057848, 0.749560, 0, 1.0};
Point(26) = {-0.062015, 0.749029, 0, 1.0};
Point(27) = {-0.065611, 0.748310, 0, 1.0};
Point(28) = {-0.068620, 0.747430, 0, 1.0};
Point(29) = {-0.071026, 0.746423, 0, 1.0};
Point(30) = {-0.072823, 0.745339, 0, 1.0};
Point(31) = {-0.074002, 0.744249, 0, 1.0};
Point(32) = {-0.074531, 0.743274, 0, 1.0};
Point(33) = {-0.074196, 0.742447, 0, 1.0};
Point(34) = {-0.072930, 0.741632, 0, 1.0};
Point(35) = {-0.070872, 0.740780, 0, 1.0};
Point(36) = {-0.068046, 0.739937, 0, 1.0};
Point(37) = {-0.064473, 0.739121, 0, 1.0};
Point(38) = {-0.060174, 0.738339, 0, 1.0};
Point(39) = {-0.055187, 0.737590, 0, 1.0};
Point(40) = {-0.049554, 0.736872, 0, 1.0};
Point(41) = {-0.043334, 0.736174, 0, 1.0};
Point(42) = {-0.036594, 0.735493, 0, 1.0};
Point(43) = {-0.029413, 0.734824, 0, 1.0};
Point(44) = {-0.021874, 0.734164, 0, 1.0};
Point(45) = {-0.014063, 0.733513, 0, 1.0};
Point(46) = {-0.006072, 0.732870, 0, 1.0};
Point(47) = {0.002005, 0.732236, 0, 1.0};
Point(48) = {0.010075, 0.731612, 0, 1.0};
Point(49) = {0.018039, 0.731000, 0, 1.0};
Point(50) = {0.025804, 0.730402, 0, 1.0};
Point(51) = {0.033274, 0.729821, 0, 1.0};
Point(52) = {0.040359, 0.729263, 0, 1.0};
Point(53) = {0.046969, 0.728733, 0, 1.0};
Point(54) = {0.053024, 0.728238, 0, 1.0};
Point(55) = {0.058445, 0.727788, 0, 1.0};
Point(56) = {0.063163, 0.727394, 0, 1.0};
Point(57) = {0.067117, 0.727067, 0, 1.0};
Point(58) = {0.070263, 0.726827, 0, 1.0};
Point(59) = {0.072582, 0.726675, 0, 1.0};
Point(60) = {0.074034, 0.726576, 0, 1.0};
Point(61) = {0.074532, 0.726535, 0, 1.0};
Point(62) = {-0.074530, -0.726535, 0, 1.0};
Point(63) = {-0.074031, -0.726623, 0, 1.0};
Point(64) = {-0.072560, -0.726906, 0, 1.0};
Point(65) = {-0.070168, -0.727423, 0, 1.0};
Point(66) = {-0.066928, -0.728192, 0, 1.0};
Point(67) = {-0.062919, -0.729214, 0, 1.0};
Point(68) = {-0.058227, -0.730470, 0, 1.0};
Point(69) = {-0.052944, -0.731933, 0, 1.0};
Point(70) = {-0.047157, -0.733560, 0, 1.0};
Point(71) = {-0.040955, -0.735303, 0, 1.0};
Point(72) = {-0.034422, -0.737096, 0, 1.0};
Point(73) = {-0.027617, -0.738876, 0, 1.0};
Point(74) = {-0.020584, -0.740596, 0, 1.0};
Point(75) = {-0.013383, -0.742234, 0, 1.0};
Point(76) = {-0.006079, -0.743767, 0, 1.0};
Point(77) = {0.001255, -0.745167, 0, 1.0};
Point(78) = {0.008553, -0.746415, 0, 1.0};
Point(79) = {0.015750, -0.747492, 0, 1.0};
Point(80) = {0.022776, -0.748386, 0, 1.0};
Point(81) = {0.029571, -0.749084, 0, 1.0};
Point(82) = {0.036070, -0.749589, 0, 1.0};
Point(83) = {0.042204, -0.749896, 0, 1.0};
Point(84) = {0.047910, -0.750000, 0, 1.0};
Point(85) = {0.053136, -0.749888, 0, 1.0};
Point(86) = {0.057848, -0.749560, 0, 1.0};
Point(87) = {0.062015, -0.749029, 0, 1.0};
Point(88) = {0.065611, -0.748310, 0, 1.0};
Point(89) = {0.068620, -0.747430, 0, 1.0};
Point(90) = {0.071026, -0.746423, 0, 1.0};
Point(91) = {0.072823, -0.745339, 0, 1.0};
Point(92) = {0.074002, -0.744249, 0, 1.0};
Point(93) = {0.074531, -0.743274, 0, 1.0};
Point(94) = {0.074196, -0.742447, 0, 1.0};
Point(95) = {0.072930, -0.741632, 0, 1.0};
Point(96) = {0.070872, -0.740780, 0, 1.0};
Point(97) = {0.068046, -0.739937, 0, 1.0};
Point(98) = {0.064473, -0.739121, 0, 1.0};
Point(99) = {0.060174, -0.738339, 0, 1.0};
Point(100) = {0.055187, -0.737590, 0, 1.0};
Point(101) = {0.049554, -0.736872, 0, 1.0};
Point(102) = {0.043334, -0.736174, 0, 1.0};
Point(103) = {0.036594, -0.735493, 0, 1.0};
Point(104) = {0.029413, -0.734824, 0, 1.0};
Point(105) = {0.021874, -0.734164, 0, 1.0};
Point(106) = {0.014063, -0.733513, 0, 1.0};
Point(107) = {0.006072, -0.732870, 0, 1.0};
Point(108) = {-0.002005, -0.732236, 0, 1.0};
Point(109) = {-0.010075, -0.731612, 0, 1.0};
Point(110) = {-0.018039, -0.731000, 0, 1.0};
Point(111) = {-0.025804, -0.730402, 0, 1.0};
Point(112) = {-0.033274, -0.729821, 0, 1.0};
Point(113) = {-0.040359, -0.729263, 0, 1.0};
Point(114) = {-0.046969, -0.728733, 0, 1.0};
Point(115) = {-0.053024, -0.728238, 0, 1.0};
Point(116) = {-0.058445, -0.727788, 0, 1.0};
Point(117) = {-0.063163, -0.727394, 0, 1.0};
Point(118) = {-0.067117, -0.727067, 0, 1.0};
Point(119) = {-0.070263, -0.726827, 0, 1.0};
Point(120) = {-0.072582, -0.726675, 0, 1.0};
Point(121) = {-0.074034, -0.726576, 0, 1.0};
Point(122) = {-0.074532, -0.726535, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
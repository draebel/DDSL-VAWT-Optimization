SetFactory("OpenCASCADE");

Point(1) = {0.074839, 0.742306, 0, 1.0};
Point(2) = {0.073931, 0.742354, 0, 1.0};
Point(3) = {0.069231, 0.742735, 0, 1.0};
Point(4) = {0.063795, 0.743317, 0, 1.0};
Point(5) = {0.057743, 0.744067, 0, 1.0};
Point(6) = {0.051190, 0.744939, 0, 1.0};
Point(7) = {0.044238, 0.745885, 0, 1.0};
Point(8) = {0.036986, 0.746849, 0, 1.0};
Point(9) = {0.029523, 0.747780, 0, 1.0};
Point(10) = {0.021937, 0.748627, 0, 1.0};
Point(11) = {0.014322, 0.749334, 0, 1.0};
Point(12) = {0.006742, 0.749810, 0, 1.0};
Point(13) = {-0.000808, 0.750000, 0, 1.0};
Point(14) = {-0.008322, 0.749934, 0, 1.0};
Point(15) = {-0.015734, 0.749655, 0, 1.0};
Point(16) = {-0.022959, 0.749180, 0, 1.0};
Point(17) = {-0.029921, 0.748516, 0, 1.0};
Point(18) = {-0.036553, 0.747666, 0, 1.0};
Point(19) = {-0.042796, 0.746641, 0, 1.0};
Point(20) = {-0.048598, 0.745451, 0, 1.0};
Point(21) = {-0.053917, 0.744120, 0, 1.0};
Point(22) = {-0.058709, 0.742675, 0, 1.0};
Point(23) = {-0.062936, 0.741149, 0, 1.0};
Point(24) = {-0.066561, 0.739575, 0, 1.0};
Point(25) = {-0.069562, 0.737990, 0, 1.0};
Point(26) = {-0.071914, 0.736445, 0, 1.0};
Point(27) = {-0.073599, 0.734997, 0, 1.0};
Point(28) = {-0.074590, 0.733722, 0, 1.0};
Point(29) = {-0.074750, 0.733382, 0, 1.0};
Point(30) = {-0.074844, 0.733078, 0, 1.0};
Point(31) = {-0.074866, 0.732897, 0, 1.0};
Point(32) = {-0.074846, 0.732741, 0, 1.0};
Point(33) = {-0.074773, 0.732599, 0, 1.0};
Point(34) = {-0.074649, 0.732454, 0, 1.0};
Point(35) = {-0.074388, 0.732235, 0, 1.0};
Point(36) = {-0.074047, 0.732013, 0, 1.0};
Point(37) = {-0.072382, 0.731326, 0, 1.0};
Point(38) = {-0.069910, 0.730749, 0, 1.0};
Point(39) = {-0.066650, 0.730327, 0, 1.0};
Point(40) = {-0.062618, 0.730066, 0, 1.0};
Point(41) = {-0.057843, 0.729968, 0, 1.0};
Point(42) = {-0.052362, 0.730024, 0, 1.0};
Point(43) = {-0.046225, 0.730219, 0, 1.0};
Point(44) = {-0.039492, 0.730532, 0, 1.0};
Point(45) = {-0.032241, 0.730941, 0, 1.0};
Point(46) = {-0.024559, 0.731429, 0, 1.0};
Point(47) = {-0.016541, 0.731980, 0, 1.0};
Point(48) = {-0.008284, 0.732588, 0, 1.0};
Point(49) = {0.000117, 0.733242, 0, 1.0};
Point(50) = {0.008564, 0.733933, 0, 1.0};
Point(51) = {0.016961, 0.734651, 0, 1.0};
Point(52) = {0.025209, 0.735385, 0, 1.0};
Point(53) = {0.033214, 0.736126, 0, 1.0};
Point(54) = {0.040882, 0.736866, 0, 1.0};
Point(55) = {0.048125, 0.737594, 0, 1.0};
Point(56) = {0.054857, 0.738302, 0, 1.0};
Point(57) = {0.060999, 0.738984, 0, 1.0};
Point(58) = {0.066479, 0.739633, 0, 1.0};
Point(59) = {0.071230, 0.740244, 0, 1.0};
Point(60) = {0.074931, 0.740783, 0, 1.0};
Point(61) = {-0.074839, -0.742306, 0, 1.0};
Point(62) = {-0.073931, -0.742354, 0, 1.0};
Point(63) = {-0.069231, -0.742735, 0, 1.0};
Point(64) = {-0.063795, -0.743317, 0, 1.0};
Point(65) = {-0.057743, -0.744067, 0, 1.0};
Point(66) = {-0.051190, -0.744939, 0, 1.0};
Point(67) = {-0.044238, -0.745885, 0, 1.0};
Point(68) = {-0.036986, -0.746849, 0, 1.0};
Point(69) = {-0.029523, -0.747780, 0, 1.0};
Point(70) = {-0.021937, -0.748627, 0, 1.0};
Point(71) = {-0.014322, -0.749334, 0, 1.0};
Point(72) = {-0.006742, -0.749810, 0, 1.0};
Point(73) = {0.000808, -0.750000, 0, 1.0};
Point(74) = {0.008322, -0.749934, 0, 1.0};
Point(75) = {0.015734, -0.749655, 0, 1.0};
Point(76) = {0.022959, -0.749180, 0, 1.0};
Point(77) = {0.029921, -0.748516, 0, 1.0};
Point(78) = {0.036553, -0.747666, 0, 1.0};
Point(79) = {0.042796, -0.746641, 0, 1.0};
Point(80) = {0.048598, -0.745451, 0, 1.0};
Point(81) = {0.053917, -0.744120, 0, 1.0};
Point(82) = {0.058709, -0.742675, 0, 1.0};
Point(83) = {0.062936, -0.741149, 0, 1.0};
Point(84) = {0.066561, -0.739575, 0, 1.0};
Point(85) = {0.069562, -0.737990, 0, 1.0};
Point(86) = {0.071914, -0.736445, 0, 1.0};
Point(87) = {0.073599, -0.734997, 0, 1.0};
Point(88) = {0.074590, -0.733722, 0, 1.0};
Point(89) = {0.074750, -0.733382, 0, 1.0};
Point(90) = {0.074844, -0.733078, 0, 1.0};
Point(91) = {0.074866, -0.732897, 0, 1.0};
Point(92) = {0.074846, -0.732741, 0, 1.0};
Point(93) = {0.074773, -0.732599, 0, 1.0};
Point(94) = {0.074649, -0.732454, 0, 1.0};
Point(95) = {0.074388, -0.732235, 0, 1.0};
Point(96) = {0.074047, -0.732013, 0, 1.0};
Point(97) = {0.072382, -0.731326, 0, 1.0};
Point(98) = {0.069910, -0.730749, 0, 1.0};
Point(99) = {0.066650, -0.730327, 0, 1.0};
Point(100) = {0.062618, -0.730066, 0, 1.0};
Point(101) = {0.057843, -0.729968, 0, 1.0};
Point(102) = {0.052362, -0.730024, 0, 1.0};
Point(103) = {0.046225, -0.730219, 0, 1.0};
Point(104) = {0.039492, -0.730532, 0, 1.0};
Point(105) = {0.032241, -0.730941, 0, 1.0};
Point(106) = {0.024559, -0.731429, 0, 1.0};
Point(107) = {0.016541, -0.731980, 0, 1.0};
Point(108) = {0.008284, -0.732588, 0, 1.0};
Point(109) = {-0.000117, -0.733242, 0, 1.0};
Point(110) = {-0.008564, -0.733933, 0, 1.0};
Point(111) = {-0.016961, -0.734651, 0, 1.0};
Point(112) = {-0.025209, -0.735385, 0, 1.0};
Point(113) = {-0.033214, -0.736126, 0, 1.0};
Point(114) = {-0.040882, -0.736866, 0, 1.0};
Point(115) = {-0.048125, -0.737594, 0, 1.0};
Point(116) = {-0.054857, -0.738302, 0, 1.0};
Point(117) = {-0.060999, -0.738984, 0, 1.0};
Point(118) = {-0.066479, -0.739633, 0, 1.0};
Point(119) = {-0.071230, -0.740244, 0, 1.0};
Point(120) = {-0.074931, -0.740783, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:45};
Spline(3) = {45:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:105};
Spline(7) = {105:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {36.00000000, 15.00000000, 0, 1.0};
Point(124) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
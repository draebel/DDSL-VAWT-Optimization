SetFactory("OpenCASCADE");

Point(1) = {0.149890, 0.734502, 0, 1.0};
Point(2) = {0.149207, 0.734533, 0, 1.0};
Point(3) = {0.147186, 0.734656, 0, 1.0};
Point(4) = {0.143897, 0.734933, 0, 1.0};
Point(5) = {0.139428, 0.735399, 0, 1.0};
Point(6) = {0.133887, 0.736067, 0, 1.0};
Point(7) = {0.127388, 0.736920, 0, 1.0};
Point(8) = {0.120038, 0.737934, 0, 1.0};
Point(9) = {0.111945, 0.739074, 0, 1.0};
Point(10) = {0.103221, 0.740310, 0, 1.0};
Point(11) = {0.093975, 0.741598, 0, 1.0};
Point(12) = {0.084317, 0.742903, 0, 1.0};
Point(13) = {0.074358, 0.744185, 0, 1.0};
Point(14) = {0.064202, 0.745410, 0, 1.0};
Point(15) = {0.053958, 0.746543, 0, 1.0};
Point(16) = {0.043734, 0.747556, 0, 1.0};
Point(17) = {0.033629, 0.748421, 0, 1.0};
Point(18) = {0.023745, 0.749114, 0, 1.0};
Point(19) = {0.014174, 0.749617, 0, 1.0};
Point(20) = {0.005009, 0.749917, 0, 1.0};
Point(21) = {-0.003669, 0.750000, 0, 1.0};
Point(22) = {-0.011780, 0.749864, 0, 1.0};
Point(23) = {-0.019254, 0.749511, 0, 1.0};
Point(24) = {-0.026028, 0.748947, 0, 1.0};
Point(25) = {-0.032046, 0.748186, 0, 1.0};
Point(26) = {-0.037256, 0.747250, 0, 1.0};
Point(27) = {-0.041617, 0.746160, 0, 1.0};
Point(28) = {-0.045101, 0.744942, 0, 1.0};
Point(29) = {-0.047681, 0.743651, 0, 1.0};
Point(30) = {-0.049335, 0.742339, 0, 1.0};
Point(31) = {-0.049999, 0.741162, 0, 1.0};
Point(32) = {-0.049495, 0.739997, 0, 1.0};
Point(33) = {-0.047884, 0.738673, 0, 1.0};
Point(34) = {-0.045316, 0.737305, 0, 1.0};
Point(35) = {-0.041826, 0.735955, 0, 1.0};
Point(36) = {-0.037438, 0.734677, 0, 1.0};
Point(37) = {-0.032180, 0.733500, 0, 1.0};
Point(38) = {-0.026088, 0.732454, 0, 1.0};
Point(39) = {-0.019206, 0.731550, 0, 1.0};
Point(40) = {-0.011595, 0.730796, 0, 1.0};
Point(41) = {-0.003320, 0.730200, 0, 1.0};
Point(42) = {0.005545, 0.729762, 0, 1.0};
Point(43) = {0.014918, 0.729474, 0, 1.0};
Point(44) = {0.024703, 0.729328, 0, 1.0};
Point(45) = {0.034802, 0.729312, 0, 1.0};
Point(46) = {0.045107, 0.729411, 0, 1.0};
Point(47) = {0.055509, 0.729615, 0, 1.0};
Point(48) = {0.065890, 0.729905, 0, 1.0};
Point(49) = {0.076142, 0.730266, 0, 1.0};
Point(50) = {0.086145, 0.730682, 0, 1.0};
Point(51) = {0.095785, 0.731135, 0, 1.0};
Point(52) = {0.104950, 0.731606, 0, 1.0};
Point(53) = {0.113530, 0.732080, 0, 1.0};
Point(54) = {0.121418, 0.732539, 0, 1.0};
Point(55) = {0.128514, 0.732973, 0, 1.0};
Point(56) = {0.134718, 0.733362, 0, 1.0};
Point(57) = {0.139939, 0.733717, 0, 1.0};
Point(58) = {0.144124, 0.734049, 0, 1.0};
Point(59) = {0.147245, 0.734318, 0, 1.0};
Point(60) = {0.149213, 0.734465, 0, 1.0};
Point(61) = {-0.149890, -0.734502, 0, 1.0};
Point(62) = {-0.149207, -0.734533, 0, 1.0};
Point(63) = {-0.147186, -0.734656, 0, 1.0};
Point(64) = {-0.143897, -0.734933, 0, 1.0};
Point(65) = {-0.139428, -0.735399, 0, 1.0};
Point(66) = {-0.133887, -0.736067, 0, 1.0};
Point(67) = {-0.127388, -0.736920, 0, 1.0};
Point(68) = {-0.120038, -0.737934, 0, 1.0};
Point(69) = {-0.111945, -0.739074, 0, 1.0};
Point(70) = {-0.103221, -0.740310, 0, 1.0};
Point(71) = {-0.093975, -0.741598, 0, 1.0};
Point(72) = {-0.084317, -0.742903, 0, 1.0};
Point(73) = {-0.074358, -0.744185, 0, 1.0};
Point(74) = {-0.064202, -0.745410, 0, 1.0};
Point(75) = {-0.053958, -0.746543, 0, 1.0};
Point(76) = {-0.043734, -0.747556, 0, 1.0};
Point(77) = {-0.033629, -0.748421, 0, 1.0};
Point(78) = {-0.023745, -0.749114, 0, 1.0};
Point(79) = {-0.014174, -0.749617, 0, 1.0};
Point(80) = {-0.005009, -0.749917, 0, 1.0};
Point(81) = {0.003669, -0.750000, 0, 1.0};
Point(82) = {0.011780, -0.749864, 0, 1.0};
Point(83) = {0.019254, -0.749511, 0, 1.0};
Point(84) = {0.026028, -0.748947, 0, 1.0};
Point(85) = {0.032046, -0.748186, 0, 1.0};
Point(86) = {0.037256, -0.747250, 0, 1.0};
Point(87) = {0.041617, -0.746160, 0, 1.0};
Point(88) = {0.045101, -0.744942, 0, 1.0};
Point(89) = {0.047681, -0.743651, 0, 1.0};
Point(90) = {0.049335, -0.742339, 0, 1.0};
Point(91) = {0.049999, -0.741162, 0, 1.0};
Point(92) = {0.049495, -0.739997, 0, 1.0};
Point(93) = {0.047884, -0.738673, 0, 1.0};
Point(94) = {0.045316, -0.737305, 0, 1.0};
Point(95) = {0.041826, -0.735955, 0, 1.0};
Point(96) = {0.037438, -0.734677, 0, 1.0};
Point(97) = {0.032180, -0.733500, 0, 1.0};
Point(98) = {0.026088, -0.732454, 0, 1.0};
Point(99) = {0.019206, -0.731550, 0, 1.0};
Point(100) = {0.011595, -0.730796, 0, 1.0};
Point(101) = {0.003320, -0.730200, 0, 1.0};
Point(102) = {-0.005545, -0.729762, 0, 1.0};
Point(103) = {-0.014918, -0.729474, 0, 1.0};
Point(104) = {-0.024703, -0.729328, 0, 1.0};
Point(105) = {-0.034802, -0.729312, 0, 1.0};
Point(106) = {-0.045107, -0.729411, 0, 1.0};
Point(107) = {-0.055509, -0.729615, 0, 1.0};
Point(108) = {-0.065890, -0.729905, 0, 1.0};
Point(109) = {-0.076142, -0.730266, 0, 1.0};
Point(110) = {-0.086145, -0.730682, 0, 1.0};
Point(111) = {-0.095785, -0.731135, 0, 1.0};
Point(112) = {-0.104950, -0.731606, 0, 1.0};
Point(113) = {-0.113530, -0.732080, 0, 1.0};
Point(114) = {-0.121418, -0.732539, 0, 1.0};
Point(115) = {-0.128514, -0.732973, 0, 1.0};
Point(116) = {-0.134718, -0.733362, 0, 1.0};
Point(117) = {-0.139939, -0.733717, 0, 1.0};
Point(118) = {-0.144124, -0.734049, 0, 1.0};
Point(119) = {-0.147245, -0.734318, 0, 1.0};
Point(120) = {-0.149213, -0.734465, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112500, 0.735146, 0, 1.0};
Point(2) = {0.111975, 0.735208, 0, 1.0};
Point(3) = {0.110426, 0.735422, 0, 1.0};
Point(4) = {0.107922, 0.735831, 0, 1.0};
Point(5) = {0.104545, 0.736456, 0, 1.0};
Point(6) = {0.100387, 0.737294, 0, 1.0};
Point(7) = {0.095550, 0.738328, 0, 1.0};
Point(8) = {0.090127, 0.739521, 0, 1.0};
Point(9) = {0.084210, 0.740829, 0, 1.0};
Point(10) = {0.077889, 0.742204, 0, 1.0};
Point(11) = {0.071242, 0.743595, 0, 1.0};
Point(12) = {0.064347, 0.744951, 0, 1.0};
Point(13) = {0.057277, 0.746227, 0, 1.0};
Point(14) = {0.050102, 0.747379, 0, 1.0};
Point(15) = {0.042893, 0.748363, 0, 1.0};
Point(16) = {0.035709, 0.749138, 0, 1.0};
Point(17) = {0.028595, 0.749674, 0, 1.0};
Point(18) = {0.021594, 0.749962, 0, 1.0};
Point(19) = {0.014761, 0.750000, 0, 1.0};
Point(20) = {0.008153, 0.749789, 0, 1.0};
Point(21) = {0.001819, 0.749334, 0, 1.0};
Point(22) = {-0.004194, 0.748647, 0, 1.0};
Point(23) = {-0.009834, 0.747746, 0, 1.0};
Point(24) = {-0.015061, 0.746650, 0, 1.0};
Point(25) = {-0.019834, 0.745391, 0, 1.0};
Point(26) = {-0.024113, 0.744000, 0, 1.0};
Point(27) = {-0.027856, 0.742517, 0, 1.0};
Point(28) = {-0.031031, 0.740979, 0, 1.0};
Point(29) = {-0.033604, 0.739424, 0, 1.0};
Point(30) = {-0.035555, 0.737901, 0, 1.0};
Point(31) = {-0.036853, 0.736468, 0, 1.0};
Point(32) = {-0.037475, 0.735194, 0, 1.0};
Point(33) = {-0.037265, 0.734188, 0, 1.0};
Point(34) = {-0.036124, 0.733335, 0, 1.0};
Point(35) = {-0.034141, 0.732493, 0, 1.0};
Point(36) = {-0.031392, 0.731713, 0, 1.0};
Point(37) = {-0.027912, 0.731021, 0, 1.0};
Point(38) = {-0.023737, 0.730436, 0, 1.0};
Point(39) = {-0.018904, 0.729966, 0, 1.0};
Point(40) = {-0.013465, 0.729617, 0, 1.0};
Point(41) = {-0.007472, 0.729394, 0, 1.0};
Point(42) = {-0.000984, 0.729302, 0, 1.0};
Point(43) = {0.005933, 0.729333, 0, 1.0};
Point(44) = {0.013211, 0.729488, 0, 1.0};
Point(45) = {0.020777, 0.729762, 0, 1.0};
Point(46) = {0.028555, 0.730146, 0, 1.0};
Point(47) = {0.036469, 0.730630, 0, 1.0};
Point(48) = {0.044445, 0.731206, 0, 1.0};
Point(49) = {0.052413, 0.731847, 0, 1.0};
Point(50) = {0.060304, 0.732513, 0, 1.0};
Point(51) = {0.068016, 0.733150, 0, 1.0};
Point(52) = {0.075437, 0.733725, 0, 1.0};
Point(53) = {0.082452, 0.734213, 0, 1.0};
Point(54) = {0.088951, 0.734605, 0, 1.0};
Point(55) = {0.094830, 0.734896, 0, 1.0};
Point(56) = {0.099997, 0.735088, 0, 1.0};
Point(57) = {0.104364, 0.735194, 0, 1.0};
Point(58) = {0.107857, 0.735226, 0, 1.0};
Point(59) = {0.110412, 0.735208, 0, 1.0};
Point(60) = {0.111975, 0.735166, 0, 1.0};
Point(61) = {0.112501, 0.735146, 0, 1.0};
Point(62) = {-0.112500, -0.735146, 0, 1.0};
Point(63) = {-0.111975, -0.735208, 0, 1.0};
Point(64) = {-0.110426, -0.735422, 0, 1.0};
Point(65) = {-0.107922, -0.735831, 0, 1.0};
Point(66) = {-0.104545, -0.736456, 0, 1.0};
Point(67) = {-0.100387, -0.737294, 0, 1.0};
Point(68) = {-0.095550, -0.738328, 0, 1.0};
Point(69) = {-0.090127, -0.739521, 0, 1.0};
Point(70) = {-0.084210, -0.740829, 0, 1.0};
Point(71) = {-0.077889, -0.742204, 0, 1.0};
Point(72) = {-0.071242, -0.743595, 0, 1.0};
Point(73) = {-0.064347, -0.744951, 0, 1.0};
Point(74) = {-0.057277, -0.746227, 0, 1.0};
Point(75) = {-0.050102, -0.747379, 0, 1.0};
Point(76) = {-0.042893, -0.748363, 0, 1.0};
Point(77) = {-0.035709, -0.749138, 0, 1.0};
Point(78) = {-0.028595, -0.749674, 0, 1.0};
Point(79) = {-0.021594, -0.749962, 0, 1.0};
Point(80) = {-0.014761, -0.750000, 0, 1.0};
Point(81) = {-0.008153, -0.749789, 0, 1.0};
Point(82) = {-0.001819, -0.749334, 0, 1.0};
Point(83) = {0.004194, -0.748647, 0, 1.0};
Point(84) = {0.009834, -0.747746, 0, 1.0};
Point(85) = {0.015061, -0.746650, 0, 1.0};
Point(86) = {0.019834, -0.745391, 0, 1.0};
Point(87) = {0.024113, -0.744000, 0, 1.0};
Point(88) = {0.027856, -0.742517, 0, 1.0};
Point(89) = {0.031031, -0.740979, 0, 1.0};
Point(90) = {0.033604, -0.739424, 0, 1.0};
Point(91) = {0.035555, -0.737901, 0, 1.0};
Point(92) = {0.036853, -0.736468, 0, 1.0};
Point(93) = {0.037475, -0.735194, 0, 1.0};
Point(94) = {0.037265, -0.734188, 0, 1.0};
Point(95) = {0.036124, -0.733335, 0, 1.0};
Point(96) = {0.034141, -0.732493, 0, 1.0};
Point(97) = {0.031392, -0.731713, 0, 1.0};
Point(98) = {0.027912, -0.731021, 0, 1.0};
Point(99) = {0.023737, -0.730436, 0, 1.0};
Point(100) = {0.018904, -0.729966, 0, 1.0};
Point(101) = {0.013465, -0.729617, 0, 1.0};
Point(102) = {0.007472, -0.729394, 0, 1.0};
Point(103) = {0.000984, -0.729302, 0, 1.0};
Point(104) = {-0.005933, -0.729333, 0, 1.0};
Point(105) = {-0.013211, -0.729488, 0, 1.0};
Point(106) = {-0.020777, -0.729762, 0, 1.0};
Point(107) = {-0.028555, -0.730146, 0, 1.0};
Point(108) = {-0.036469, -0.730630, 0, 1.0};
Point(109) = {-0.044445, -0.731206, 0, 1.0};
Point(110) = {-0.052413, -0.731847, 0, 1.0};
Point(111) = {-0.060304, -0.732513, 0, 1.0};
Point(112) = {-0.068016, -0.733150, 0, 1.0};
Point(113) = {-0.075437, -0.733725, 0, 1.0};
Point(114) = {-0.082452, -0.734213, 0, 1.0};
Point(115) = {-0.088951, -0.734605, 0, 1.0};
Point(116) = {-0.094830, -0.734896, 0, 1.0};
Point(117) = {-0.099997, -0.735088, 0, 1.0};
Point(118) = {-0.104364, -0.735194, 0, 1.0};
Point(119) = {-0.107857, -0.735226, 0, 1.0};
Point(120) = {-0.110412, -0.735208, 0, 1.0};
Point(121) = {-0.111975, -0.735166, 0, 1.0};
Point(122) = {-0.112501, -0.735146, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
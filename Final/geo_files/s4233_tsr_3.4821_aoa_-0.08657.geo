SetFactory("OpenCASCADE");

Point(1) = {0.074999, 0.735144, 0, 1.0};
Point(2) = {0.074474, 0.735206, 0, 1.0};
Point(3) = {0.072925, 0.735420, 0, 1.0};
Point(4) = {0.070421, 0.735828, 0, 1.0};
Point(5) = {0.067043, 0.736453, 0, 1.0};
Point(6) = {0.062884, 0.737292, 0, 1.0};
Point(7) = {0.058046, 0.738326, 0, 1.0};
Point(8) = {0.052622, 0.739519, 0, 1.0};
Point(9) = {0.046705, 0.740827, 0, 1.0};
Point(10) = {0.040382, 0.742203, 0, 1.0};
Point(11) = {0.033734, 0.743594, 0, 1.0};
Point(12) = {0.026838, 0.744950, 0, 1.0};
Point(13) = {0.019767, 0.746227, 0, 1.0};
Point(14) = {0.012591, 0.747378, 0, 1.0};
Point(15) = {0.005381, 0.748362, 0, 1.0};
Point(16) = {-0.001805, 0.749138, 0, 1.0};
Point(17) = {-0.008920, 0.749674, 0, 1.0};
Point(18) = {-0.015922, 0.749962, 0, 1.0};
Point(19) = {-0.022755, 0.750000, 0, 1.0};
Point(20) = {-0.029365, 0.749789, 0, 1.0};
Point(21) = {-0.035700, 0.749334, 0, 1.0};
Point(22) = {-0.041713, 0.748647, 0, 1.0};
Point(23) = {-0.047354, 0.747745, 0, 1.0};
Point(24) = {-0.052583, 0.746650, 0, 1.0};
Point(25) = {-0.057356, 0.745390, 0, 1.0};
Point(26) = {-0.061636, 0.743999, 0, 1.0};
Point(27) = {-0.065379, 0.742515, 0, 1.0};
Point(28) = {-0.068555, 0.740977, 0, 1.0};
Point(29) = {-0.071128, 0.739422, 0, 1.0};
Point(30) = {-0.073079, 0.737900, 0, 1.0};
Point(31) = {-0.074378, 0.736466, 0, 1.0};
Point(32) = {-0.075000, 0.735192, 0, 1.0};
Point(33) = {-0.074790, 0.734185, 0, 1.0};
Point(34) = {-0.073648, 0.733332, 0, 1.0};
Point(35) = {-0.071665, 0.732490, 0, 1.0};
Point(36) = {-0.068916, 0.731710, 0, 1.0};
Point(37) = {-0.065436, 0.731017, 0, 1.0};
Point(38) = {-0.061260, 0.730433, 0, 1.0};
Point(39) = {-0.056427, 0.729963, 0, 1.0};
Point(40) = {-0.050986, 0.729614, 0, 1.0};
Point(41) = {-0.044992, 0.729391, 0, 1.0};
Point(42) = {-0.038504, 0.729298, 0, 1.0};
Point(43) = {-0.031585, 0.729330, 0, 1.0};
Point(44) = {-0.024306, 0.729485, 0, 1.0};
Point(45) = {-0.016739, 0.729759, 0, 1.0};
Point(46) = {-0.008959, 0.730143, 0, 1.0};
Point(47) = {-0.001045, 0.730627, 0, 1.0};
Point(48) = {0.006933, 0.731203, 0, 1.0};
Point(49) = {0.014903, 0.731844, 0, 1.0};
Point(50) = {0.022794, 0.732510, 0, 1.0};
Point(51) = {0.030508, 0.733147, 0, 1.0};
Point(52) = {0.037930, 0.733723, 0, 1.0};
Point(53) = {0.044946, 0.734210, 0, 1.0};
Point(54) = {0.051446, 0.734603, 0, 1.0};
Point(55) = {0.057326, 0.734894, 0, 1.0};
Point(56) = {0.062494, 0.735086, 0, 1.0};
Point(57) = {0.066861, 0.735191, 0, 1.0};
Point(58) = {0.070355, 0.735224, 0, 1.0};
Point(59) = {0.072910, 0.735205, 0, 1.0};
Point(60) = {0.074474, 0.735164, 0, 1.0};
Point(61) = {0.075000, 0.735144, 0, 1.0};
Point(62) = {-0.074999, -0.735144, 0, 1.0};
Point(63) = {-0.074474, -0.735206, 0, 1.0};
Point(64) = {-0.072925, -0.735420, 0, 1.0};
Point(65) = {-0.070421, -0.735828, 0, 1.0};
Point(66) = {-0.067043, -0.736453, 0, 1.0};
Point(67) = {-0.062884, -0.737292, 0, 1.0};
Point(68) = {-0.058046, -0.738326, 0, 1.0};
Point(69) = {-0.052622, -0.739519, 0, 1.0};
Point(70) = {-0.046705, -0.740827, 0, 1.0};
Point(71) = {-0.040382, -0.742203, 0, 1.0};
Point(72) = {-0.033734, -0.743594, 0, 1.0};
Point(73) = {-0.026838, -0.744950, 0, 1.0};
Point(74) = {-0.019767, -0.746227, 0, 1.0};
Point(75) = {-0.012591, -0.747378, 0, 1.0};
Point(76) = {-0.005381, -0.748362, 0, 1.0};
Point(77) = {0.001805, -0.749138, 0, 1.0};
Point(78) = {0.008920, -0.749674, 0, 1.0};
Point(79) = {0.015922, -0.749962, 0, 1.0};
Point(80) = {0.022755, -0.750000, 0, 1.0};
Point(81) = {0.029365, -0.749789, 0, 1.0};
Point(82) = {0.035700, -0.749334, 0, 1.0};
Point(83) = {0.041713, -0.748647, 0, 1.0};
Point(84) = {0.047354, -0.747745, 0, 1.0};
Point(85) = {0.052583, -0.746650, 0, 1.0};
Point(86) = {0.057356, -0.745390, 0, 1.0};
Point(87) = {0.061636, -0.743999, 0, 1.0};
Point(88) = {0.065379, -0.742515, 0, 1.0};
Point(89) = {0.068555, -0.740977, 0, 1.0};
Point(90) = {0.071128, -0.739422, 0, 1.0};
Point(91) = {0.073079, -0.737900, 0, 1.0};
Point(92) = {0.074378, -0.736466, 0, 1.0};
Point(93) = {0.075000, -0.735192, 0, 1.0};
Point(94) = {0.074790, -0.734185, 0, 1.0};
Point(95) = {0.073648, -0.733332, 0, 1.0};
Point(96) = {0.071665, -0.732490, 0, 1.0};
Point(97) = {0.068916, -0.731710, 0, 1.0};
Point(98) = {0.065436, -0.731017, 0, 1.0};
Point(99) = {0.061260, -0.730433, 0, 1.0};
Point(100) = {0.056427, -0.729963, 0, 1.0};
Point(101) = {0.050986, -0.729614, 0, 1.0};
Point(102) = {0.044992, -0.729391, 0, 1.0};
Point(103) = {0.038504, -0.729298, 0, 1.0};
Point(104) = {0.031585, -0.729330, 0, 1.0};
Point(105) = {0.024306, -0.729485, 0, 1.0};
Point(106) = {0.016739, -0.729759, 0, 1.0};
Point(107) = {0.008959, -0.730143, 0, 1.0};
Point(108) = {0.001045, -0.730627, 0, 1.0};
Point(109) = {-0.006933, -0.731203, 0, 1.0};
Point(110) = {-0.014903, -0.731844, 0, 1.0};
Point(111) = {-0.022794, -0.732510, 0, 1.0};
Point(112) = {-0.030508, -0.733147, 0, 1.0};
Point(113) = {-0.037930, -0.733723, 0, 1.0};
Point(114) = {-0.044946, -0.734210, 0, 1.0};
Point(115) = {-0.051446, -0.734603, 0, 1.0};
Point(116) = {-0.057326, -0.734894, 0, 1.0};
Point(117) = {-0.062494, -0.735086, 0, 1.0};
Point(118) = {-0.066861, -0.735191, 0, 1.0};
Point(119) = {-0.070355, -0.735224, 0, 1.0};
Point(120) = {-0.072910, -0.735205, 0, 1.0};
Point(121) = {-0.074474, -0.735164, 0, 1.0};
Point(122) = {-0.075000, -0.735144, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
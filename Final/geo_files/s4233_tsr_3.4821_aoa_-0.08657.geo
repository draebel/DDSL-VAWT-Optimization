SetFactory("OpenCASCADE");

Point(1) = {0.075000, 0.740097, 0, 1.0};
Point(2) = {0.074650, 0.740139, 0, 1.0};
Point(3) = {0.073618, 0.740281, 0, 1.0};
Point(4) = {0.071948, 0.740554, 0, 1.0};
Point(5) = {0.069697, 0.740970, 0, 1.0};
Point(6) = {0.066925, 0.741529, 0, 1.0};
Point(7) = {0.063700, 0.742218, 0, 1.0};
Point(8) = {0.060084, 0.743014, 0, 1.0};
Point(9) = {0.056140, 0.743886, 0, 1.0};
Point(10) = {0.051926, 0.744803, 0, 1.0};
Point(11) = {0.047494, 0.745730, 0, 1.0};
Point(12) = {0.042898, 0.746634, 0, 1.0};
Point(13) = {0.038185, 0.747485, 0, 1.0};
Point(14) = {0.033402, 0.748253, 0, 1.0};
Point(15) = {0.028596, 0.748908, 0, 1.0};
Point(16) = {0.023806, 0.749425, 0, 1.0};
Point(17) = {0.019063, 0.749783, 0, 1.0};
Point(18) = {0.014396, 0.749975, 0, 1.0};
Point(19) = {0.009841, 0.750000, 0, 1.0};
Point(20) = {0.005435, 0.749859, 0, 1.0};
Point(21) = {0.001213, 0.749556, 0, 1.0};
Point(22) = {-0.002796, 0.749098, 0, 1.0};
Point(23) = {-0.006556, 0.748497, 0, 1.0};
Point(24) = {-0.010041, 0.747767, 0, 1.0};
Point(25) = {-0.013223, 0.746927, 0, 1.0};
Point(26) = {-0.016075, 0.746000, 0, 1.0};
Point(27) = {-0.018571, 0.745011, 0, 1.0};
Point(28) = {-0.020687, 0.743986, 0, 1.0};
Point(29) = {-0.022403, 0.742949, 0, 1.0};
Point(30) = {-0.023703, 0.741934, 0, 1.0};
Point(31) = {-0.024569, 0.740979, 0, 1.0};
Point(32) = {-0.024983, 0.740129, 0, 1.0};
Point(33) = {-0.024843, 0.739459, 0, 1.0};
Point(34) = {-0.024082, 0.738890, 0, 1.0};
Point(35) = {-0.022761, 0.738329, 0, 1.0};
Point(36) = {-0.020928, 0.737808, 0, 1.0};
Point(37) = {-0.018608, 0.737347, 0, 1.0};
Point(38) = {-0.015824, 0.736957, 0, 1.0};
Point(39) = {-0.012603, 0.736644, 0, 1.0};
Point(40) = {-0.008977, 0.736412, 0, 1.0};
Point(41) = {-0.004981, 0.736263, 0, 1.0};
Point(42) = {-0.000656, 0.736201, 0, 1.0};
Point(43) = {0.003956, 0.736222, 0, 1.0};
Point(44) = {0.008808, 0.736325, 0, 1.0};
Point(45) = {0.013851, 0.736508, 0, 1.0};
Point(46) = {0.019037, 0.736764, 0, 1.0};
Point(47) = {0.024312, 0.737087, 0, 1.0};
Point(48) = {0.029630, 0.737471, 0, 1.0};
Point(49) = {0.034942, 0.737898, 0, 1.0};
Point(50) = {0.040202, 0.738342, 0, 1.0};
Point(51) = {0.045344, 0.738767, 0, 1.0};
Point(52) = {0.050291, 0.739150, 0, 1.0};
Point(53) = {0.054968, 0.739475, 0, 1.0};
Point(54) = {0.059300, 0.739737, 0, 1.0};
Point(55) = {0.063220, 0.739931, 0, 1.0};
Point(56) = {0.066665, 0.740059, 0, 1.0};
Point(57) = {0.069576, 0.740129, 0, 1.0};
Point(58) = {0.071905, 0.740151, 0, 1.0};
Point(59) = {0.073608, 0.740138, 0, 1.0};
Point(60) = {0.074650, 0.740111, 0, 1.0};
Point(61) = {0.075001, 0.740097, 0, 1.0};
Point(62) = {-0.075000, -0.740097, 0, 1.0};
Point(63) = {-0.074650, -0.740139, 0, 1.0};
Point(64) = {-0.073618, -0.740281, 0, 1.0};
Point(65) = {-0.071948, -0.740554, 0, 1.0};
Point(66) = {-0.069697, -0.740970, 0, 1.0};
Point(67) = {-0.066925, -0.741529, 0, 1.0};
Point(68) = {-0.063700, -0.742218, 0, 1.0};
Point(69) = {-0.060084, -0.743014, 0, 1.0};
Point(70) = {-0.056140, -0.743886, 0, 1.0};
Point(71) = {-0.051926, -0.744803, 0, 1.0};
Point(72) = {-0.047494, -0.745730, 0, 1.0};
Point(73) = {-0.042898, -0.746634, 0, 1.0};
Point(74) = {-0.038185, -0.747485, 0, 1.0};
Point(75) = {-0.033402, -0.748253, 0, 1.0};
Point(76) = {-0.028596, -0.748908, 0, 1.0};
Point(77) = {-0.023806, -0.749425, 0, 1.0};
Point(78) = {-0.019063, -0.749783, 0, 1.0};
Point(79) = {-0.014396, -0.749975, 0, 1.0};
Point(80) = {-0.009841, -0.750000, 0, 1.0};
Point(81) = {-0.005435, -0.749859, 0, 1.0};
Point(82) = {-0.001213, -0.749556, 0, 1.0};
Point(83) = {0.002796, -0.749098, 0, 1.0};
Point(84) = {0.006556, -0.748497, 0, 1.0};
Point(85) = {0.010041, -0.747767, 0, 1.0};
Point(86) = {0.013223, -0.746927, 0, 1.0};
Point(87) = {0.016075, -0.746000, 0, 1.0};
Point(88) = {0.018571, -0.745011, 0, 1.0};
Point(89) = {0.020687, -0.743986, 0, 1.0};
Point(90) = {0.022403, -0.742949, 0, 1.0};
Point(91) = {0.023703, -0.741934, 0, 1.0};
Point(92) = {0.024569, -0.740979, 0, 1.0};
Point(93) = {0.024983, -0.740129, 0, 1.0};
Point(94) = {0.024843, -0.739459, 0, 1.0};
Point(95) = {0.024082, -0.738890, 0, 1.0};
Point(96) = {0.022761, -0.738329, 0, 1.0};
Point(97) = {0.020928, -0.737808, 0, 1.0};
Point(98) = {0.018608, -0.737347, 0, 1.0};
Point(99) = {0.015824, -0.736957, 0, 1.0};
Point(100) = {0.012603, -0.736644, 0, 1.0};
Point(101) = {0.008977, -0.736412, 0, 1.0};
Point(102) = {0.004981, -0.736263, 0, 1.0};
Point(103) = {0.000656, -0.736201, 0, 1.0};
Point(104) = {-0.003956, -0.736222, 0, 1.0};
Point(105) = {-0.008808, -0.736325, 0, 1.0};
Point(106) = {-0.013851, -0.736508, 0, 1.0};
Point(107) = {-0.019037, -0.736764, 0, 1.0};
Point(108) = {-0.024312, -0.737087, 0, 1.0};
Point(109) = {-0.029630, -0.737471, 0, 1.0};
Point(110) = {-0.034942, -0.737898, 0, 1.0};
Point(111) = {-0.040202, -0.738342, 0, 1.0};
Point(112) = {-0.045344, -0.738767, 0, 1.0};
Point(113) = {-0.050291, -0.739150, 0, 1.0};
Point(114) = {-0.054968, -0.739475, 0, 1.0};
Point(115) = {-0.059300, -0.739737, 0, 1.0};
Point(116) = {-0.063220, -0.739931, 0, 1.0};
Point(117) = {-0.066665, -0.740059, 0, 1.0};
Point(118) = {-0.069576, -0.740129, 0, 1.0};
Point(119) = {-0.071905, -0.740151, 0, 1.0};
Point(120) = {-0.073608, -0.740138, 0, 1.0};
Point(121) = {-0.074650, -0.740111, 0, 1.0};
Point(122) = {-0.075001, -0.740097, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
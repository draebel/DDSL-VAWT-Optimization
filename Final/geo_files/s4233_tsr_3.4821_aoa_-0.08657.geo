SetFactory("OpenCASCADE");

Point(1) = {0.112451, 0.735149, 0, 1.0};
Point(2) = {0.111926, 0.735211, 0, 1.0};
Point(3) = {0.110378, 0.735424, 0, 1.0};
Point(4) = {0.107874, 0.735833, 0, 1.0};
Point(5) = {0.104497, 0.736458, 0, 1.0};
Point(6) = {0.100340, 0.737296, 0, 1.0};
Point(7) = {0.095503, 0.738329, 0, 1.0};
Point(8) = {0.090081, 0.739523, 0, 1.0};
Point(9) = {0.084166, 0.740830, 0, 1.0};
Point(10) = {0.077845, 0.742205, 0, 1.0};
Point(11) = {0.071199, 0.743596, 0, 1.0};
Point(12) = {0.064306, 0.744952, 0, 1.0};
Point(13) = {0.057237, 0.746228, 0, 1.0};
Point(14) = {0.050063, 0.747379, 0, 1.0};
Point(15) = {0.042855, 0.748363, 0, 1.0};
Point(16) = {0.035672, 0.749138, 0, 1.0};
Point(17) = {0.028559, 0.749674, 0, 1.0};
Point(18) = {0.021559, 0.749962, 0, 1.0};
Point(19) = {0.014728, 0.750000, 0, 1.0};
Point(20) = {0.008120, 0.749789, 0, 1.0};
Point(21) = {0.001787, 0.749334, 0, 1.0};
Point(22) = {-0.004224, 0.748647, 0, 1.0};
Point(23) = {-0.009863, 0.747746, 0, 1.0};
Point(24) = {-0.015090, 0.746651, 0, 1.0};
Point(25) = {-0.019862, 0.745391, 0, 1.0};
Point(26) = {-0.024140, 0.744001, 0, 1.0};
Point(27) = {-0.027883, 0.742518, 0, 1.0};
Point(28) = {-0.031057, 0.740980, 0, 1.0};
Point(29) = {-0.033629, 0.739426, 0, 1.0};
Point(30) = {-0.035580, 0.737903, 0, 1.0};
Point(31) = {-0.036878, 0.736471, 0, 1.0};
Point(32) = {-0.037500, 0.735196, 0, 1.0};
Point(33) = {-0.037290, 0.734190, 0, 1.0};
Point(34) = {-0.036149, 0.733337, 0, 1.0};
Point(35) = {-0.034166, 0.732496, 0, 1.0};
Point(36) = {-0.031418, 0.731716, 0, 1.0};
Point(37) = {-0.027939, 0.731024, 0, 1.0};
Point(38) = {-0.023764, 0.730439, 0, 1.0};
Point(39) = {-0.018933, 0.729969, 0, 1.0};
Point(40) = {-0.013494, 0.729621, 0, 1.0};
Point(41) = {-0.007502, 0.729397, 0, 1.0};
Point(42) = {-0.001015, 0.729305, 0, 1.0};
Point(43) = {0.005902, 0.729336, 0, 1.0};
Point(44) = {0.013178, 0.729491, 0, 1.0};
Point(45) = {0.020742, 0.729765, 0, 1.0};
Point(46) = {0.028520, 0.730149, 0, 1.0};
Point(47) = {0.036432, 0.730633, 0, 1.0};
Point(48) = {0.044407, 0.731209, 0, 1.0};
Point(49) = {0.052374, 0.731850, 0, 1.0};
Point(50) = {0.060263, 0.732516, 0, 1.0};
Point(51) = {0.067974, 0.733153, 0, 1.0};
Point(52) = {0.075394, 0.733728, 0, 1.0};
Point(53) = {0.082407, 0.734215, 0, 1.0};
Point(54) = {0.088905, 0.734608, 0, 1.0};
Point(55) = {0.094784, 0.734898, 0, 1.0};
Point(56) = {0.099950, 0.735091, 0, 1.0};
Point(57) = {0.104316, 0.735196, 0, 1.0};
Point(58) = {0.107809, 0.735229, 0, 1.0};
Point(59) = {0.110363, 0.735210, 0, 1.0};
Point(60) = {0.111926, 0.735169, 0, 1.0};
Point(61) = {0.112452, 0.735149, 0, 1.0};
Point(62) = {-0.112451, -0.735149, 0, 1.0};
Point(63) = {-0.111926, -0.735211, 0, 1.0};
Point(64) = {-0.110378, -0.735424, 0, 1.0};
Point(65) = {-0.107874, -0.735833, 0, 1.0};
Point(66) = {-0.104497, -0.736458, 0, 1.0};
Point(67) = {-0.100340, -0.737296, 0, 1.0};
Point(68) = {-0.095503, -0.738329, 0, 1.0};
Point(69) = {-0.090081, -0.739523, 0, 1.0};
Point(70) = {-0.084166, -0.740830, 0, 1.0};
Point(71) = {-0.077845, -0.742205, 0, 1.0};
Point(72) = {-0.071199, -0.743596, 0, 1.0};
Point(73) = {-0.064306, -0.744952, 0, 1.0};
Point(74) = {-0.057237, -0.746228, 0, 1.0};
Point(75) = {-0.050063, -0.747379, 0, 1.0};
Point(76) = {-0.042855, -0.748363, 0, 1.0};
Point(77) = {-0.035672, -0.749138, 0, 1.0};
Point(78) = {-0.028559, -0.749674, 0, 1.0};
Point(79) = {-0.021559, -0.749962, 0, 1.0};
Point(80) = {-0.014728, -0.750000, 0, 1.0};
Point(81) = {-0.008120, -0.749789, 0, 1.0};
Point(82) = {-0.001787, -0.749334, 0, 1.0};
Point(83) = {0.004224, -0.748647, 0, 1.0};
Point(84) = {0.009863, -0.747746, 0, 1.0};
Point(85) = {0.015090, -0.746651, 0, 1.0};
Point(86) = {0.019862, -0.745391, 0, 1.0};
Point(87) = {0.024140, -0.744001, 0, 1.0};
Point(88) = {0.027883, -0.742518, 0, 1.0};
Point(89) = {0.031057, -0.740980, 0, 1.0};
Point(90) = {0.033629, -0.739426, 0, 1.0};
Point(91) = {0.035580, -0.737903, 0, 1.0};
Point(92) = {0.036878, -0.736471, 0, 1.0};
Point(93) = {0.037500, -0.735196, 0, 1.0};
Point(94) = {0.037290, -0.734190, 0, 1.0};
Point(95) = {0.036149, -0.733337, 0, 1.0};
Point(96) = {0.034166, -0.732496, 0, 1.0};
Point(97) = {0.031418, -0.731716, 0, 1.0};
Point(98) = {0.027939, -0.731024, 0, 1.0};
Point(99) = {0.023764, -0.730439, 0, 1.0};
Point(100) = {0.018933, -0.729969, 0, 1.0};
Point(101) = {0.013494, -0.729621, 0, 1.0};
Point(102) = {0.007502, -0.729397, 0, 1.0};
Point(103) = {0.001015, -0.729305, 0, 1.0};
Point(104) = {-0.005902, -0.729336, 0, 1.0};
Point(105) = {-0.013178, -0.729491, 0, 1.0};
Point(106) = {-0.020742, -0.729765, 0, 1.0};
Point(107) = {-0.028520, -0.730149, 0, 1.0};
Point(108) = {-0.036432, -0.730633, 0, 1.0};
Point(109) = {-0.044407, -0.731209, 0, 1.0};
Point(110) = {-0.052374, -0.731850, 0, 1.0};
Point(111) = {-0.060263, -0.732516, 0, 1.0};
Point(112) = {-0.067974, -0.733153, 0, 1.0};
Point(113) = {-0.075394, -0.733728, 0, 1.0};
Point(114) = {-0.082407, -0.734215, 0, 1.0};
Point(115) = {-0.088905, -0.734608, 0, 1.0};
Point(116) = {-0.094784, -0.734898, 0, 1.0};
Point(117) = {-0.099950, -0.735091, 0, 1.0};
Point(118) = {-0.104316, -0.735196, 0, 1.0};
Point(119) = {-0.107809, -0.735229, 0, 1.0};
Point(120) = {-0.110363, -0.735210, 0, 1.0};
Point(121) = {-0.111926, -0.735169, 0, 1.0};
Point(122) = {-0.112452, -0.735149, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
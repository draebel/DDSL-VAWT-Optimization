SetFactory("OpenCASCADE");

Point(1) = {0.150000, 0.730195, 0, 1.0};
Point(2) = {0.149300, 0.730278, 0, 1.0};
Point(3) = {0.147235, 0.730563, 0, 1.0};
Point(4) = {0.143896, 0.731108, 0, 1.0};
Point(5) = {0.139393, 0.731941, 0, 1.0};
Point(6) = {0.133849, 0.733058, 0, 1.0};
Point(7) = {0.127399, 0.734437, 0, 1.0};
Point(8) = {0.120169, 0.736028, 0, 1.0};
Point(9) = {0.112280, 0.737772, 0, 1.0};
Point(10) = {0.103852, 0.739605, 0, 1.0};
Point(11) = {0.094989, 0.741460, 0, 1.0};
Point(12) = {0.085796, 0.743268, 0, 1.0};
Point(13) = {0.076369, 0.744970, 0, 1.0};
Point(14) = {0.066803, 0.746505, 0, 1.0};
Point(15) = {0.057191, 0.747817, 0, 1.0};
Point(16) = {0.047611, 0.748850, 0, 1.0};
Point(17) = {0.038126, 0.749566, 0, 1.0};
Point(18) = {0.028792, 0.749950, 0, 1.0};
Point(19) = {0.019682, 0.750000, 0, 1.0};
Point(20) = {0.010870, 0.749719, 0, 1.0};
Point(21) = {0.002425, 0.749112, 0, 1.0};
Point(22) = {-0.005592, 0.748196, 0, 1.0};
Point(23) = {-0.013112, 0.746994, 0, 1.0};
Point(24) = {-0.020082, 0.745534, 0, 1.0};
Point(25) = {-0.026445, 0.743854, 0, 1.0};
Point(26) = {-0.032150, 0.742000, 0, 1.0};
Point(27) = {-0.037141, 0.740022, 0, 1.0};
Point(28) = {-0.041374, 0.737972, 0, 1.0};
Point(29) = {-0.044805, 0.735899, 0, 1.0};
Point(30) = {-0.047406, 0.733869, 0, 1.0};
Point(31) = {-0.049137, 0.731958, 0, 1.0};
Point(32) = {-0.049967, 0.730259, 0, 1.0};
Point(33) = {-0.049687, 0.728917, 0, 1.0};
Point(34) = {-0.048165, 0.727779, 0, 1.0};
Point(35) = {-0.045521, 0.726657, 0, 1.0};
Point(36) = {-0.041856, 0.725617, 0, 1.0};
Point(37) = {-0.037216, 0.724694, 0, 1.0};
Point(38) = {-0.031649, 0.723914, 0, 1.0};
Point(39) = {-0.025206, 0.723288, 0, 1.0};
Point(40) = {-0.017953, 0.722823, 0, 1.0};
Point(41) = {-0.009963, 0.722525, 0, 1.0};
Point(42) = {-0.001313, 0.722402, 0, 1.0};
Point(43) = {0.007911, 0.722444, 0, 1.0};
Point(44) = {0.017615, 0.722651, 0, 1.0};
Point(45) = {0.027702, 0.723016, 0, 1.0};
Point(46) = {0.038074, 0.723528, 0, 1.0};
Point(47) = {0.048625, 0.724174, 0, 1.0};
Point(48) = {0.059260, 0.724942, 0, 1.0};
Point(49) = {0.069884, 0.725796, 0, 1.0};
Point(50) = {0.080405, 0.726684, 0, 1.0};
Point(51) = {0.090688, 0.727533, 0, 1.0};
Point(52) = {0.100583, 0.728300, 0, 1.0};
Point(53) = {0.109936, 0.728950, 0, 1.0};
Point(54) = {0.118601, 0.729473, 0, 1.0};
Point(55) = {0.126440, 0.729861, 0, 1.0};
Point(56) = {0.133330, 0.730118, 0, 1.0};
Point(57) = {0.139152, 0.730258, 0, 1.0};
Point(58) = {0.143810, 0.730302, 0, 1.0};
Point(59) = {0.147216, 0.730277, 0, 1.0};
Point(60) = {0.149300, 0.730222, 0, 1.0};
Point(61) = {0.150002, 0.730195, 0, 1.0};
Point(62) = {-0.150000, -0.730195, 0, 1.0};
Point(63) = {-0.149300, -0.730278, 0, 1.0};
Point(64) = {-0.147235, -0.730563, 0, 1.0};
Point(65) = {-0.143896, -0.731108, 0, 1.0};
Point(66) = {-0.139393, -0.731941, 0, 1.0};
Point(67) = {-0.133849, -0.733058, 0, 1.0};
Point(68) = {-0.127399, -0.734437, 0, 1.0};
Point(69) = {-0.120169, -0.736028, 0, 1.0};
Point(70) = {-0.112280, -0.737772, 0, 1.0};
Point(71) = {-0.103852, -0.739605, 0, 1.0};
Point(72) = {-0.094989, -0.741460, 0, 1.0};
Point(73) = {-0.085796, -0.743268, 0, 1.0};
Point(74) = {-0.076369, -0.744970, 0, 1.0};
Point(75) = {-0.066803, -0.746505, 0, 1.0};
Point(76) = {-0.057191, -0.747817, 0, 1.0};
Point(77) = {-0.047611, -0.748850, 0, 1.0};
Point(78) = {-0.038126, -0.749566, 0, 1.0};
Point(79) = {-0.028792, -0.749950, 0, 1.0};
Point(80) = {-0.019682, -0.750000, 0, 1.0};
Point(81) = {-0.010870, -0.749719, 0, 1.0};
Point(82) = {-0.002425, -0.749112, 0, 1.0};
Point(83) = {0.005592, -0.748196, 0, 1.0};
Point(84) = {0.013112, -0.746994, 0, 1.0};
Point(85) = {0.020082, -0.745534, 0, 1.0};
Point(86) = {0.026445, -0.743854, 0, 1.0};
Point(87) = {0.032150, -0.742000, 0, 1.0};
Point(88) = {0.037141, -0.740022, 0, 1.0};
Point(89) = {0.041374, -0.737972, 0, 1.0};
Point(90) = {0.044805, -0.735899, 0, 1.0};
Point(91) = {0.047406, -0.733869, 0, 1.0};
Point(92) = {0.049137, -0.731958, 0, 1.0};
Point(93) = {0.049967, -0.730259, 0, 1.0};
Point(94) = {0.049687, -0.728917, 0, 1.0};
Point(95) = {0.048165, -0.727779, 0, 1.0};
Point(96) = {0.045521, -0.726657, 0, 1.0};
Point(97) = {0.041856, -0.725617, 0, 1.0};
Point(98) = {0.037216, -0.724694, 0, 1.0};
Point(99) = {0.031649, -0.723914, 0, 1.0};
Point(100) = {0.025206, -0.723288, 0, 1.0};
Point(101) = {0.017953, -0.722823, 0, 1.0};
Point(102) = {0.009963, -0.722525, 0, 1.0};
Point(103) = {0.001313, -0.722402, 0, 1.0};
Point(104) = {-0.007911, -0.722444, 0, 1.0};
Point(105) = {-0.017615, -0.722651, 0, 1.0};
Point(106) = {-0.027702, -0.723016, 0, 1.0};
Point(107) = {-0.038074, -0.723528, 0, 1.0};
Point(108) = {-0.048625, -0.724174, 0, 1.0};
Point(109) = {-0.059260, -0.724942, 0, 1.0};
Point(110) = {-0.069884, -0.725796, 0, 1.0};
Point(111) = {-0.080405, -0.726684, 0, 1.0};
Point(112) = {-0.090688, -0.727533, 0, 1.0};
Point(113) = {-0.100583, -0.728300, 0, 1.0};
Point(114) = {-0.109936, -0.728950, 0, 1.0};
Point(115) = {-0.118601, -0.729473, 0, 1.0};
Point(116) = {-0.126440, -0.729861, 0, 1.0};
Point(117) = {-0.133330, -0.730118, 0, 1.0};
Point(118) = {-0.139152, -0.730258, 0, 1.0};
Point(119) = {-0.143810, -0.730302, 0, 1.0};
Point(120) = {-0.147216, -0.730277, 0, 1.0};
Point(121) = {-0.149300, -0.730222, 0, 1.0};
Point(122) = {-0.150002, -0.730195, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
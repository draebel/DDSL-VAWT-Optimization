SetFactory("OpenCASCADE");

Point(1) = {0.075011, 0.730270, 0, 1.0};
Point(2) = {0.073713, 0.730615, 0, 1.0};
Point(3) = {0.071319, 0.731289, 0, 1.0};
Point(4) = {0.068638, 0.732045, 0, 1.0};
Point(5) = {0.065683, 0.732898, 0, 1.0};
Point(6) = {0.062463, 0.733843, 0, 1.0};
Point(7) = {0.058994, 0.734862, 0, 1.0};
Point(8) = {0.055291, 0.735931, 0, 1.0};
Point(9) = {0.051367, 0.737045, 0, 1.0};
Point(10) = {0.047242, 0.738213, 0, 1.0};
Point(11) = {0.042931, 0.739435, 0, 1.0};
Point(12) = {0.038453, 0.740692, 0, 1.0};
Point(13) = {0.033828, 0.741952, 0, 1.0};
Point(14) = {0.029073, 0.743189, 0, 1.0};
Point(15) = {0.024208, 0.744381, 0, 1.0};
Point(16) = {0.019255, 0.745508, 0, 1.0};
Point(17) = {0.014230, 0.746547, 0, 1.0};
Point(18) = {0.009159, 0.747472, 0, 1.0};
Point(19) = {0.004060, 0.748259, 0, 1.0};
Point(20) = {-0.001045, 0.748897, 0, 1.0};
Point(21) = {-0.006134, 0.749384, 0, 1.0};
Point(22) = {-0.011187, 0.749732, 0, 1.0};
Point(23) = {-0.016177, 0.749938, 0, 1.0};
Point(24) = {-0.021087, 0.750000, 0, 1.0};
Point(25) = {-0.025895, 0.749910, 0, 1.0};
Point(26) = {-0.030580, 0.749674, 0, 1.0};
Point(27) = {-0.035123, 0.749300, 0, 1.0};
Point(28) = {-0.039503, 0.748812, 0, 1.0};
Point(29) = {-0.043698, 0.748220, 0, 1.0};
Point(30) = {-0.047694, 0.747538, 0, 1.0};
Point(31) = {-0.051471, 0.746763, 0, 1.0};
Point(32) = {-0.055015, 0.745904, 0, 1.0};
Point(33) = {-0.058310, 0.744966, 0, 1.0};
Point(34) = {-0.061339, 0.743962, 0, 1.0};
Point(35) = {-0.064093, 0.742906, 0, 1.0};
Point(36) = {-0.066557, 0.741825, 0, 1.0};
Point(37) = {-0.068719, 0.740724, 0, 1.0};
Point(38) = {-0.070573, 0.739600, 0, 1.0};
Point(39) = {-0.072107, 0.738462, 0, 1.0};
Point(40) = {-0.073320, 0.737301, 0, 1.0};
Point(41) = {-0.074201, 0.736185, 0, 1.0};
Point(42) = {-0.074742, 0.735245, 0, 1.0};
Point(43) = {-0.074940, 0.734488, 0, 1.0};
Point(44) = {-0.074798, 0.733854, 0, 1.0};
Point(45) = {-0.074319, 0.733221, 0, 1.0};
Point(46) = {-0.073510, 0.732545, 0, 1.0};
Point(47) = {-0.072371, 0.731883, 0, 1.0};
Point(48) = {-0.070908, 0.731224, 0, 1.0};
Point(49) = {-0.069126, 0.730544, 0, 1.0};
Point(50) = {-0.067036, 0.729854, 0, 1.0};
Point(51) = {-0.064642, 0.729178, 0, 1.0};
Point(52) = {-0.061957, 0.728532, 0, 1.0};
Point(53) = {-0.058993, 0.727904, 0, 1.0};
Point(54) = {-0.055761, 0.727269, 0, 1.0};
Point(55) = {-0.052277, 0.726634, 0, 1.0};
Point(56) = {-0.048554, 0.726033, 0, 1.0};
Point(57) = {-0.044608, 0.725497, 0, 1.0};
Point(58) = {-0.040455, 0.725025, 0, 1.0};
Point(59) = {-0.036111, 0.724603, 0, 1.0};
Point(60) = {-0.031598, 0.724224, 0, 1.0};
Point(61) = {-0.026936, 0.723905, 0, 1.0};
Point(62) = {-0.022141, 0.723674, 0, 1.0};
Point(63) = {-0.017234, 0.723533, 0, 1.0};
Point(64) = {-0.012238, 0.723464, 0, 1.0};
Point(65) = {-0.007171, 0.723475, 0, 1.0};
Point(66) = {-0.002058, 0.723595, 0, 1.0};
Point(67) = {0.003083, 0.723857, 0, 1.0};
Point(68) = {0.008230, 0.724272, 0, 1.0};
Point(69) = {0.013361, 0.724823, 0, 1.0};
Point(70) = {0.018453, 0.725478, 0, 1.0};
Point(71) = {0.023481, 0.726202, 0, 1.0};
Point(72) = {0.028424, 0.726962, 0, 1.0};
Point(73) = {0.033258, 0.727714, 0, 1.0};
Point(74) = {0.037961, 0.728408, 0, 1.0};
Point(75) = {0.042512, 0.728980, 0, 1.0};
Point(76) = {0.046889, 0.729386, 0, 1.0};
Point(77) = {0.051070, 0.729617, 0, 1.0};
Point(78) = {0.055041, 0.729701, 0, 1.0};
Point(79) = {0.058787, 0.729670, 0, 1.0};
Point(80) = {0.062292, 0.729557, 0, 1.0};
Point(81) = {0.065542, 0.729386, 0, 1.0};
Point(82) = {0.068523, 0.729191, 0, 1.0};
Point(83) = {0.071227, 0.729003, 0, 1.0};
Point(84) = {0.073641, 0.728834, 0, 1.0};
Point(85) = {0.074950, 0.728744, 0, 1.0};
Point(86) = {-0.075011, -0.730270, 0, 1.0};
Point(87) = {-0.073713, -0.730615, 0, 1.0};
Point(88) = {-0.071319, -0.731289, 0, 1.0};
Point(89) = {-0.068638, -0.732045, 0, 1.0};
Point(90) = {-0.065683, -0.732898, 0, 1.0};
Point(91) = {-0.062463, -0.733843, 0, 1.0};
Point(92) = {-0.058994, -0.734862, 0, 1.0};
Point(93) = {-0.055291, -0.735931, 0, 1.0};
Point(94) = {-0.051367, -0.737045, 0, 1.0};
Point(95) = {-0.047242, -0.738213, 0, 1.0};
Point(96) = {-0.042931, -0.739435, 0, 1.0};
Point(97) = {-0.038453, -0.740692, 0, 1.0};
Point(98) = {-0.033828, -0.741952, 0, 1.0};
Point(99) = {-0.029073, -0.743189, 0, 1.0};
Point(100) = {-0.024208, -0.744381, 0, 1.0};
Point(101) = {-0.019255, -0.745508, 0, 1.0};
Point(102) = {-0.014230, -0.746547, 0, 1.0};
Point(103) = {-0.009159, -0.747472, 0, 1.0};
Point(104) = {-0.004060, -0.748259, 0, 1.0};
Point(105) = {0.001045, -0.748897, 0, 1.0};
Point(106) = {0.006134, -0.749384, 0, 1.0};
Point(107) = {0.011187, -0.749732, 0, 1.0};
Point(108) = {0.016177, -0.749938, 0, 1.0};
Point(109) = {0.021087, -0.750000, 0, 1.0};
Point(110) = {0.025895, -0.749910, 0, 1.0};
Point(111) = {0.030580, -0.749674, 0, 1.0};
Point(112) = {0.035123, -0.749300, 0, 1.0};
Point(113) = {0.039503, -0.748812, 0, 1.0};
Point(114) = {0.043698, -0.748220, 0, 1.0};
Point(115) = {0.047694, -0.747538, 0, 1.0};
Point(116) = {0.051471, -0.746763, 0, 1.0};
Point(117) = {0.055015, -0.745904, 0, 1.0};
Point(118) = {0.058310, -0.744966, 0, 1.0};
Point(119) = {0.061339, -0.743962, 0, 1.0};
Point(120) = {0.064093, -0.742906, 0, 1.0};
Point(121) = {0.066557, -0.741825, 0, 1.0};
Point(122) = {0.068719, -0.740724, 0, 1.0};
Point(123) = {0.070573, -0.739600, 0, 1.0};
Point(124) = {0.072107, -0.738462, 0, 1.0};
Point(125) = {0.073320, -0.737301, 0, 1.0};
Point(126) = {0.074201, -0.736185, 0, 1.0};
Point(127) = {0.074742, -0.735245, 0, 1.0};
Point(128) = {0.074940, -0.734488, 0, 1.0};
Point(129) = {0.074798, -0.733854, 0, 1.0};
Point(130) = {0.074319, -0.733221, 0, 1.0};
Point(131) = {0.073510, -0.732545, 0, 1.0};
Point(132) = {0.072371, -0.731883, 0, 1.0};
Point(133) = {0.070908, -0.731224, 0, 1.0};
Point(134) = {0.069126, -0.730544, 0, 1.0};
Point(135) = {0.067036, -0.729854, 0, 1.0};
Point(136) = {0.064642, -0.729178, 0, 1.0};
Point(137) = {0.061957, -0.728532, 0, 1.0};
Point(138) = {0.058993, -0.727904, 0, 1.0};
Point(139) = {0.055761, -0.727269, 0, 1.0};
Point(140) = {0.052277, -0.726634, 0, 1.0};
Point(141) = {0.048554, -0.726033, 0, 1.0};
Point(142) = {0.044608, -0.725497, 0, 1.0};
Point(143) = {0.040455, -0.725025, 0, 1.0};
Point(144) = {0.036111, -0.724603, 0, 1.0};
Point(145) = {0.031598, -0.724224, 0, 1.0};
Point(146) = {0.026936, -0.723905, 0, 1.0};
Point(147) = {0.022141, -0.723674, 0, 1.0};
Point(148) = {0.017234, -0.723533, 0, 1.0};
Point(149) = {0.012238, -0.723464, 0, 1.0};
Point(150) = {0.007171, -0.723475, 0, 1.0};
Point(151) = {0.002058, -0.723595, 0, 1.0};
Point(152) = {-0.003083, -0.723857, 0, 1.0};
Point(153) = {-0.008230, -0.724272, 0, 1.0};
Point(154) = {-0.013361, -0.724823, 0, 1.0};
Point(155) = {-0.018453, -0.725478, 0, 1.0};
Point(156) = {-0.023481, -0.726202, 0, 1.0};
Point(157) = {-0.028424, -0.726962, 0, 1.0};
Point(158) = {-0.033258, -0.727714, 0, 1.0};
Point(159) = {-0.037961, -0.728408, 0, 1.0};
Point(160) = {-0.042512, -0.728980, 0, 1.0};
Point(161) = {-0.046889, -0.729386, 0, 1.0};
Point(162) = {-0.051070, -0.729617, 0, 1.0};
Point(163) = {-0.055041, -0.729701, 0, 1.0};
Point(164) = {-0.058787, -0.729670, 0, 1.0};
Point(165) = {-0.062292, -0.729557, 0, 1.0};
Point(166) = {-0.065542, -0.729386, 0, 1.0};
Point(167) = {-0.068523, -0.729191, 0, 1.0};
Point(168) = {-0.071227, -0.729003, 0, 1.0};
Point(169) = {-0.073641, -0.728834, 0, 1.0};
Point(170) = {-0.074950, -0.728744, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:60};
Spline(3) = {60:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:145};
Spline(7) = {145:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
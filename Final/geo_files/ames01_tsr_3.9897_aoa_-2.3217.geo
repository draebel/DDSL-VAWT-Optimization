SetFactory("OpenCASCADE");

Point(1) = {0.074906, 0.746378, 0, 1.0};
Point(2) = {0.073906, 0.746360, 0, 1.0};
Point(3) = {0.072404, 0.746370, 0, 1.0};
Point(4) = {0.069898, 0.746474, 0, 1.0};
Point(5) = {0.067388, 0.746674, 0, 1.0};
Point(6) = {0.064875, 0.746933, 0, 1.0};
Point(7) = {0.059847, 0.747534, 0, 1.0};
Point(8) = {0.054818, 0.748127, 0, 1.0};
Point(9) = {0.049793, 0.748663, 0, 1.0};
Point(10) = {0.044771, 0.749106, 0, 1.0};
Point(11) = {0.039753, 0.749449, 0, 1.0};
Point(12) = {0.034738, 0.749703, 0, 1.0};
Point(13) = {0.029727, 0.749875, 0, 1.0};
Point(14) = {0.024719, 0.749973, 0, 1.0};
Point(15) = {0.019714, 0.750000, 0, 1.0};
Point(16) = {0.014711, 0.749959, 0, 1.0};
Point(17) = {0.009712, 0.749850, 0, 1.0};
Point(18) = {0.004714, 0.749684, 0, 1.0};
Point(19) = {-0.000281, 0.749467, 0, 1.0};
Point(20) = {-0.005273, 0.749177, 0, 1.0};
Point(21) = {-0.010259, 0.748729, 0, 1.0};
Point(22) = {-0.012746, 0.748359, 0, 1.0};
Point(23) = {-0.015228, 0.747850, 0, 1.0};
Point(24) = {-0.017208, 0.747309, 0, 1.0};
Point(25) = {-0.018689, 0.746811, 0, 1.0};
Point(26) = {-0.020166, 0.746218, 0, 1.0};
Point(27) = {-0.021638, 0.745502, 0, 1.0};
Point(28) = {-0.022616, 0.744928, 0, 1.0};
Point(29) = {-0.023103, 0.744597, 0, 1.0};
Point(30) = {-0.023491, 0.744305, 0, 1.0};
Point(31) = {-0.023830, 0.744022, 0, 1.0};
Point(32) = {-0.024071, 0.743799, 0, 1.0};
Point(33) = {-0.024263, 0.743602, 0, 1.0};
Point(34) = {-0.024407, 0.743441, 0, 1.0};
Point(35) = {-0.024550, 0.743261, 0, 1.0};
Point(36) = {-0.024691, 0.743054, 0, 1.0};
Point(37) = {-0.024831, 0.742802, 0, 1.0};
Point(38) = {-0.024922, 0.742573, 0, 1.0};
Point(39) = {-0.024965, 0.742407, 0, 1.0};
Point(40) = {-0.024990, 0.742267, 0, 1.0};
Point(41) = {-0.025000, 0.742028, 0, 1.0};
Point(42) = {-0.024971, 0.741796, 0, 1.0};
Point(43) = {-0.024934, 0.741642, 0, 1.0};
Point(44) = {-0.024881, 0.741561, 0, 1.0};
Point(45) = {-0.024774, 0.741386, 0, 1.0};
Point(46) = {-0.024616, 0.741199, 0, 1.0};
Point(47) = {-0.024460, 0.741054, 0, 1.0};
Point(48) = {-0.024305, 0.740935, 0, 1.0};
Point(49) = {-0.024151, 0.740834, 0, 1.0};
Point(50) = {-0.023946, 0.740720, 0, 1.0};
Point(51) = {-0.023691, 0.740598, 0, 1.0};
Point(52) = {-0.023335, 0.740460, 0, 1.0};
Point(53) = {-0.022930, 0.740334, 0, 1.0};
Point(54) = {-0.022424, 0.740209, 0, 1.0};
Point(55) = {-0.021416, 0.740035, 0, 1.0};
Point(56) = {-0.019908, 0.739868, 0, 1.0};
Point(57) = {-0.018402, 0.739744, 0, 1.0};
Point(58) = {-0.016897, 0.739644, 0, 1.0};
Point(59) = {-0.014891, 0.739534, 0, 1.0};
Point(60) = {-0.012385, 0.739433, 0, 1.0};
Point(61) = {-0.009880, 0.739361, 0, 1.0};
Point(62) = {-0.004873, 0.739290, 0, 1.0};
Point(63) = {0.000130, 0.739317, 0, 1.0};
Point(64) = {0.005130, 0.739419, 0, 1.0};
Point(65) = {0.010128, 0.739583, 0, 1.0};
Point(66) = {0.015123, 0.739804, 0, 1.0};
Point(67) = {0.020116, 0.740072, 0, 1.0};
Point(68) = {0.025107, 0.740392, 0, 1.0};
Point(69) = {0.030097, 0.740758, 0, 1.0};
Point(70) = {0.035084, 0.741164, 0, 1.0};
Point(71) = {0.040070, 0.741608, 0, 1.0};
Point(72) = {0.045055, 0.742081, 0, 1.0};
Point(73) = {0.050039, 0.742582, 0, 1.0};
Point(74) = {0.055022, 0.743118, 0, 1.0};
Point(75) = {0.060003, 0.743687, 0, 1.0};
Point(76) = {0.064982, 0.744301, 0, 1.0};
Point(77) = {0.067470, 0.744632, 0, 1.0};
Point(78) = {0.069958, 0.744989, 0, 1.0};
Point(79) = {0.072444, 0.745375, 0, 1.0};
Point(80) = {0.073936, 0.745618, 0, 1.0};
Point(81) = {0.074930, 0.745779, 0, 1.0};
Point(82) = {-0.074906, -0.746378, 0, 1.0};
Point(83) = {-0.073906, -0.746360, 0, 1.0};
Point(84) = {-0.072404, -0.746370, 0, 1.0};
Point(85) = {-0.069898, -0.746474, 0, 1.0};
Point(86) = {-0.067388, -0.746674, 0, 1.0};
Point(87) = {-0.064875, -0.746933, 0, 1.0};
Point(88) = {-0.059847, -0.747534, 0, 1.0};
Point(89) = {-0.054818, -0.748127, 0, 1.0};
Point(90) = {-0.049793, -0.748663, 0, 1.0};
Point(91) = {-0.044771, -0.749106, 0, 1.0};
Point(92) = {-0.039753, -0.749449, 0, 1.0};
Point(93) = {-0.034738, -0.749703, 0, 1.0};
Point(94) = {-0.029727, -0.749875, 0, 1.0};
Point(95) = {-0.024719, -0.749973, 0, 1.0};
Point(96) = {-0.019714, -0.750000, 0, 1.0};
Point(97) = {-0.014711, -0.749959, 0, 1.0};
Point(98) = {-0.009712, -0.749850, 0, 1.0};
Point(99) = {-0.004714, -0.749684, 0, 1.0};
Point(100) = {0.000281, -0.749467, 0, 1.0};
Point(101) = {0.005273, -0.749177, 0, 1.0};
Point(102) = {0.010259, -0.748729, 0, 1.0};
Point(103) = {0.012746, -0.748359, 0, 1.0};
Point(104) = {0.015228, -0.747850, 0, 1.0};
Point(105) = {0.017208, -0.747309, 0, 1.0};
Point(106) = {0.018689, -0.746811, 0, 1.0};
Point(107) = {0.020166, -0.746218, 0, 1.0};
Point(108) = {0.021638, -0.745502, 0, 1.0};
Point(109) = {0.022616, -0.744928, 0, 1.0};
Point(110) = {0.023103, -0.744597, 0, 1.0};
Point(111) = {0.023491, -0.744305, 0, 1.0};
Point(112) = {0.023830, -0.744022, 0, 1.0};
Point(113) = {0.024071, -0.743799, 0, 1.0};
Point(114) = {0.024263, -0.743602, 0, 1.0};
Point(115) = {0.024407, -0.743441, 0, 1.0};
Point(116) = {0.024550, -0.743261, 0, 1.0};
Point(117) = {0.024691, -0.743054, 0, 1.0};
Point(118) = {0.024831, -0.742802, 0, 1.0};
Point(119) = {0.024922, -0.742573, 0, 1.0};
Point(120) = {0.024965, -0.742407, 0, 1.0};
Point(121) = {0.024990, -0.742267, 0, 1.0};
Point(122) = {0.025000, -0.742028, 0, 1.0};
Point(123) = {0.024971, -0.741796, 0, 1.0};
Point(124) = {0.024934, -0.741642, 0, 1.0};
Point(125) = {0.024881, -0.741561, 0, 1.0};
Point(126) = {0.024774, -0.741386, 0, 1.0};
Point(127) = {0.024616, -0.741199, 0, 1.0};
Point(128) = {0.024460, -0.741054, 0, 1.0};
Point(129) = {0.024305, -0.740935, 0, 1.0};
Point(130) = {0.024151, -0.740834, 0, 1.0};
Point(131) = {0.023946, -0.740720, 0, 1.0};
Point(132) = {0.023691, -0.740598, 0, 1.0};
Point(133) = {0.023335, -0.740460, 0, 1.0};
Point(134) = {0.022930, -0.740334, 0, 1.0};
Point(135) = {0.022424, -0.740209, 0, 1.0};
Point(136) = {0.021416, -0.740035, 0, 1.0};
Point(137) = {0.019908, -0.739868, 0, 1.0};
Point(138) = {0.018402, -0.739744, 0, 1.0};
Point(139) = {0.016897, -0.739644, 0, 1.0};
Point(140) = {0.014891, -0.739534, 0, 1.0};
Point(141) = {0.012385, -0.739433, 0, 1.0};
Point(142) = {0.009880, -0.739361, 0, 1.0};
Point(143) = {0.004873, -0.739290, 0, 1.0};
Point(144) = {-0.000130, -0.739317, 0, 1.0};
Point(145) = {-0.005130, -0.739419, 0, 1.0};
Point(146) = {-0.010128, -0.739583, 0, 1.0};
Point(147) = {-0.015123, -0.739804, 0, 1.0};
Point(148) = {-0.020116, -0.740072, 0, 1.0};
Point(149) = {-0.025107, -0.740392, 0, 1.0};
Point(150) = {-0.030097, -0.740758, 0, 1.0};
Point(151) = {-0.035084, -0.741164, 0, 1.0};
Point(152) = {-0.040070, -0.741608, 0, 1.0};
Point(153) = {-0.045055, -0.742081, 0, 1.0};
Point(154) = {-0.050039, -0.742582, 0, 1.0};
Point(155) = {-0.055022, -0.743118, 0, 1.0};
Point(156) = {-0.060003, -0.743687, 0, 1.0};
Point(157) = {-0.064982, -0.744301, 0, 1.0};
Point(158) = {-0.067470, -0.744632, 0, 1.0};
Point(159) = {-0.069958, -0.744989, 0, 1.0};
Point(160) = {-0.072444, -0.745375, 0, 1.0};
Point(161) = {-0.073936, -0.745618, 0, 1.0};
Point(162) = {-0.074930, -0.745779, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:64};
Spline(3) = {64:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:100};
Spline(6) = {100:145};
Spline(7) = {145:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
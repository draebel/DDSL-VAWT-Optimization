SetFactory("OpenCASCADE");

Point(1) = {0.149812, 0.742756, 0, 1.0};
Point(2) = {0.147811, 0.742721, 0, 1.0};
Point(3) = {0.144808, 0.742739, 0, 1.0};
Point(4) = {0.139796, 0.742948, 0, 1.0};
Point(5) = {0.134775, 0.743347, 0, 1.0};
Point(6) = {0.129750, 0.743866, 0, 1.0};
Point(7) = {0.119693, 0.745068, 0, 1.0};
Point(8) = {0.109637, 0.746253, 0, 1.0};
Point(9) = {0.099585, 0.747327, 0, 1.0};
Point(10) = {0.089541, 0.748213, 0, 1.0};
Point(11) = {0.079505, 0.748899, 0, 1.0};
Point(12) = {0.069476, 0.749407, 0, 1.0};
Point(13) = {0.059454, 0.749749, 0, 1.0};
Point(14) = {0.049438, 0.749945, 0, 1.0};
Point(15) = {0.039428, 0.750000, 0, 1.0};
Point(16) = {0.029423, 0.749919, 0, 1.0};
Point(17) = {0.019423, 0.749699, 0, 1.0};
Point(18) = {0.009428, 0.749368, 0, 1.0};
Point(19) = {-0.000562, 0.748933, 0, 1.0};
Point(20) = {-0.010547, 0.748354, 0, 1.0};
Point(21) = {-0.020519, 0.747457, 0, 1.0};
Point(22) = {-0.025493, 0.746717, 0, 1.0};
Point(23) = {-0.030456, 0.745699, 0, 1.0};
Point(24) = {-0.034415, 0.744618, 0, 1.0};
Point(25) = {-0.037377, 0.743621, 0, 1.0};
Point(26) = {-0.040332, 0.742437, 0, 1.0};
Point(27) = {-0.043276, 0.741004, 0, 1.0};
Point(28) = {-0.045231, 0.739856, 0, 1.0};
Point(29) = {-0.046205, 0.739194, 0, 1.0};
Point(30) = {-0.046982, 0.738610, 0, 1.0};
Point(31) = {-0.047660, 0.738044, 0, 1.0};
Point(32) = {-0.048142, 0.737598, 0, 1.0};
Point(33) = {-0.048526, 0.737204, 0, 1.0};
Point(34) = {-0.048814, 0.736883, 0, 1.0};
Point(35) = {-0.049099, 0.736523, 0, 1.0};
Point(36) = {-0.049383, 0.736109, 0, 1.0};
Point(37) = {-0.049662, 0.735603, 0, 1.0};
Point(38) = {-0.049844, 0.735145, 0, 1.0};
Point(39) = {-0.049931, 0.734814, 0, 1.0};
Point(40) = {-0.049979, 0.734533, 0, 1.0};
Point(41) = {-0.050000, 0.734056, 0, 1.0};
Point(42) = {-0.049941, 0.733592, 0, 1.0};
Point(43) = {-0.049869, 0.733285, 0, 1.0};
Point(44) = {-0.049762, 0.733121, 0, 1.0};
Point(45) = {-0.049548, 0.732771, 0, 1.0};
Point(46) = {-0.049232, 0.732398, 0, 1.0};
Point(47) = {-0.048920, 0.732108, 0, 1.0};
Point(48) = {-0.048610, 0.731871, 0, 1.0};
Point(49) = {-0.048302, 0.731669, 0, 1.0};
Point(50) = {-0.047892, 0.731439, 0, 1.0};
Point(51) = {-0.047382, 0.731196, 0, 1.0};
Point(52) = {-0.046670, 0.730920, 0, 1.0};
Point(53) = {-0.045859, 0.730667, 0, 1.0};
Point(54) = {-0.044848, 0.730418, 0, 1.0};
Point(55) = {-0.042833, 0.730069, 0, 1.0};
Point(56) = {-0.039817, 0.729735, 0, 1.0};
Point(57) = {-0.036804, 0.729489, 0, 1.0};
Point(58) = {-0.033794, 0.729289, 0, 1.0};
Point(59) = {-0.029781, 0.729067, 0, 1.0};
Point(60) = {-0.024769, 0.728866, 0, 1.0};
Point(61) = {-0.019759, 0.728723, 0, 1.0};
Point(62) = {-0.009745, 0.728580, 0, 1.0};
Point(63) = {0.000261, 0.728634, 0, 1.0};
Point(64) = {0.010261, 0.728837, 0, 1.0};
Point(65) = {0.020256, 0.729166, 0, 1.0};
Point(66) = {0.030246, 0.729607, 0, 1.0};
Point(67) = {0.040233, 0.730144, 0, 1.0};
Point(68) = {0.050215, 0.730783, 0, 1.0};
Point(69) = {0.060193, 0.731516, 0, 1.0};
Point(70) = {0.070169, 0.732329, 0, 1.0};
Point(71) = {0.080141, 0.733216, 0, 1.0};
Point(72) = {0.090111, 0.734162, 0, 1.0};
Point(73) = {0.100078, 0.735165, 0, 1.0};
Point(74) = {0.110043, 0.736235, 0, 1.0};
Point(75) = {0.120005, 0.737374, 0, 1.0};
Point(76) = {0.129964, 0.738602, 0, 1.0};
Point(77) = {0.134941, 0.739265, 0, 1.0};
Point(78) = {0.139916, 0.739979, 0, 1.0};
Point(79) = {0.144889, 0.740751, 0, 1.0};
Point(80) = {0.147872, 0.741236, 0, 1.0};
Point(81) = {0.149860, 0.741559, 0, 1.0};
Point(82) = {-0.149812, -0.742756, 0, 1.0};
Point(83) = {-0.147811, -0.742721, 0, 1.0};
Point(84) = {-0.144808, -0.742739, 0, 1.0};
Point(85) = {-0.139796, -0.742948, 0, 1.0};
Point(86) = {-0.134775, -0.743347, 0, 1.0};
Point(87) = {-0.129750, -0.743866, 0, 1.0};
Point(88) = {-0.119693, -0.745068, 0, 1.0};
Point(89) = {-0.109637, -0.746253, 0, 1.0};
Point(90) = {-0.099585, -0.747327, 0, 1.0};
Point(91) = {-0.089541, -0.748213, 0, 1.0};
Point(92) = {-0.079505, -0.748899, 0, 1.0};
Point(93) = {-0.069476, -0.749407, 0, 1.0};
Point(94) = {-0.059454, -0.749749, 0, 1.0};
Point(95) = {-0.049438, -0.749945, 0, 1.0};
Point(96) = {-0.039428, -0.750000, 0, 1.0};
Point(97) = {-0.029423, -0.749919, 0, 1.0};
Point(98) = {-0.019423, -0.749699, 0, 1.0};
Point(99) = {-0.009428, -0.749368, 0, 1.0};
Point(100) = {0.000562, -0.748933, 0, 1.0};
Point(101) = {0.010547, -0.748354, 0, 1.0};
Point(102) = {0.020519, -0.747457, 0, 1.0};
Point(103) = {0.025493, -0.746717, 0, 1.0};
Point(104) = {0.030456, -0.745699, 0, 1.0};
Point(105) = {0.034415, -0.744618, 0, 1.0};
Point(106) = {0.037377, -0.743621, 0, 1.0};
Point(107) = {0.040332, -0.742437, 0, 1.0};
Point(108) = {0.043276, -0.741004, 0, 1.0};
Point(109) = {0.045231, -0.739856, 0, 1.0};
Point(110) = {0.046205, -0.739194, 0, 1.0};
Point(111) = {0.046982, -0.738610, 0, 1.0};
Point(112) = {0.047660, -0.738044, 0, 1.0};
Point(113) = {0.048142, -0.737598, 0, 1.0};
Point(114) = {0.048526, -0.737204, 0, 1.0};
Point(115) = {0.048814, -0.736883, 0, 1.0};
Point(116) = {0.049099, -0.736523, 0, 1.0};
Point(117) = {0.049383, -0.736109, 0, 1.0};
Point(118) = {0.049662, -0.735603, 0, 1.0};
Point(119) = {0.049844, -0.735145, 0, 1.0};
Point(120) = {0.049931, -0.734814, 0, 1.0};
Point(121) = {0.049979, -0.734533, 0, 1.0};
Point(122) = {0.050000, -0.734056, 0, 1.0};
Point(123) = {0.049941, -0.733592, 0, 1.0};
Point(124) = {0.049869, -0.733285, 0, 1.0};
Point(125) = {0.049762, -0.733121, 0, 1.0};
Point(126) = {0.049548, -0.732771, 0, 1.0};
Point(127) = {0.049232, -0.732398, 0, 1.0};
Point(128) = {0.048920, -0.732108, 0, 1.0};
Point(129) = {0.048610, -0.731871, 0, 1.0};
Point(130) = {0.048302, -0.731669, 0, 1.0};
Point(131) = {0.047892, -0.731439, 0, 1.0};
Point(132) = {0.047382, -0.731196, 0, 1.0};
Point(133) = {0.046670, -0.730920, 0, 1.0};
Point(134) = {0.045859, -0.730667, 0, 1.0};
Point(135) = {0.044848, -0.730418, 0, 1.0};
Point(136) = {0.042833, -0.730069, 0, 1.0};
Point(137) = {0.039817, -0.729735, 0, 1.0};
Point(138) = {0.036804, -0.729489, 0, 1.0};
Point(139) = {0.033794, -0.729289, 0, 1.0};
Point(140) = {0.029781, -0.729067, 0, 1.0};
Point(141) = {0.024769, -0.728866, 0, 1.0};
Point(142) = {0.019759, -0.728723, 0, 1.0};
Point(143) = {0.009745, -0.728580, 0, 1.0};
Point(144) = {-0.000261, -0.728634, 0, 1.0};
Point(145) = {-0.010261, -0.728837, 0, 1.0};
Point(146) = {-0.020256, -0.729166, 0, 1.0};
Point(147) = {-0.030246, -0.729607, 0, 1.0};
Point(148) = {-0.040233, -0.730144, 0, 1.0};
Point(149) = {-0.050215, -0.730783, 0, 1.0};
Point(150) = {-0.060193, -0.731516, 0, 1.0};
Point(151) = {-0.070169, -0.732329, 0, 1.0};
Point(152) = {-0.080141, -0.733216, 0, 1.0};
Point(153) = {-0.090111, -0.734162, 0, 1.0};
Point(154) = {-0.100078, -0.735165, 0, 1.0};
Point(155) = {-0.110043, -0.736235, 0, 1.0};
Point(156) = {-0.120005, -0.737374, 0, 1.0};
Point(157) = {-0.129964, -0.738602, 0, 1.0};
Point(158) = {-0.134941, -0.739265, 0, 1.0};
Point(159) = {-0.139916, -0.739979, 0, 1.0};
Point(160) = {-0.144889, -0.740751, 0, 1.0};
Point(161) = {-0.147872, -0.741236, 0, 1.0};
Point(162) = {-0.149860, -0.741559, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:64};
Spline(3) = {64:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:100};
Spline(6) = {100:145};
Spline(7) = {145:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
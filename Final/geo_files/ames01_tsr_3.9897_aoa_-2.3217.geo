SetFactory("OpenCASCADE");

Point(1) = {0.112359, 0.744567, 0, 1.0};
Point(2) = {0.110859, 0.744541, 0, 1.0};
Point(3) = {0.108606, 0.744554, 0, 1.0};
Point(4) = {0.104847, 0.744711, 0, 1.0};
Point(5) = {0.101081, 0.745010, 0, 1.0};
Point(6) = {0.097313, 0.745400, 0, 1.0};
Point(7) = {0.089770, 0.746301, 0, 1.0};
Point(8) = {0.082228, 0.747190, 0, 1.0};
Point(9) = {0.074689, 0.747995, 0, 1.0};
Point(10) = {0.067156, 0.748660, 0, 1.0};
Point(11) = {0.059629, 0.749174, 0, 1.0};
Point(12) = {0.052107, 0.749555, 0, 1.0};
Point(13) = {0.044591, 0.749812, 0, 1.0};
Point(14) = {0.037078, 0.749959, 0, 1.0};
Point(15) = {0.029571, 0.750000, 0, 1.0};
Point(16) = {0.022067, 0.749939, 0, 1.0};
Point(17) = {0.014567, 0.749775, 0, 1.0};
Point(18) = {0.007071, 0.749526, 0, 1.0};
Point(19) = {-0.000422, 0.749200, 0, 1.0};
Point(20) = {-0.007910, 0.748766, 0, 1.0};
Point(21) = {-0.015389, 0.748093, 0, 1.0};
Point(22) = {-0.019120, 0.747538, 0, 1.0};
Point(23) = {-0.022842, 0.746775, 0, 1.0};
Point(24) = {-0.025811, 0.745964, 0, 1.0};
Point(25) = {-0.028033, 0.745216, 0, 1.0};
Point(26) = {-0.030249, 0.744328, 0, 1.0};
Point(27) = {-0.032457, 0.743253, 0, 1.0};
Point(28) = {-0.033923, 0.742392, 0, 1.0};
Point(29) = {-0.034654, 0.741896, 0, 1.0};
Point(30) = {-0.035237, 0.741458, 0, 1.0};
Point(31) = {-0.035745, 0.741033, 0, 1.0};
Point(32) = {-0.036106, 0.740699, 0, 1.0};
Point(33) = {-0.036395, 0.740403, 0, 1.0};
Point(34) = {-0.036610, 0.740162, 0, 1.0};
Point(35) = {-0.036824, 0.739892, 0, 1.0};
Point(36) = {-0.037037, 0.739582, 0, 1.0};
Point(37) = {-0.037247, 0.739202, 0, 1.0};
Point(38) = {-0.037383, 0.738859, 0, 1.0};
Point(39) = {-0.037448, 0.738610, 0, 1.0};
Point(40) = {-0.037484, 0.738400, 0, 1.0};
Point(41) = {-0.037500, 0.738042, 0, 1.0};
Point(42) = {-0.037456, 0.737694, 0, 1.0};
Point(43) = {-0.037401, 0.737464, 0, 1.0};
Point(44) = {-0.037321, 0.737341, 0, 1.0};
Point(45) = {-0.037161, 0.737079, 0, 1.0};
Point(46) = {-0.036924, 0.736798, 0, 1.0};
Point(47) = {-0.036690, 0.736581, 0, 1.0};
Point(48) = {-0.036458, 0.736403, 0, 1.0};
Point(49) = {-0.036226, 0.736252, 0, 1.0};
Point(50) = {-0.035919, 0.736080, 0, 1.0};
Point(51) = {-0.035536, 0.735897, 0, 1.0};
Point(52) = {-0.035003, 0.735690, 0, 1.0};
Point(53) = {-0.034394, 0.735500, 0, 1.0};
Point(54) = {-0.033636, 0.735313, 0, 1.0};
Point(55) = {-0.032124, 0.735052, 0, 1.0};
Point(56) = {-0.029862, 0.734801, 0, 1.0};
Point(57) = {-0.027603, 0.734617, 0, 1.0};
Point(58) = {-0.025345, 0.734467, 0, 1.0};
Point(59) = {-0.022336, 0.734300, 0, 1.0};
Point(60) = {-0.018577, 0.734150, 0, 1.0};
Point(61) = {-0.014819, 0.734042, 0, 1.0};
Point(62) = {-0.007309, 0.733935, 0, 1.0};
Point(63) = {0.000196, 0.733975, 0, 1.0};
Point(64) = {0.007696, 0.734128, 0, 1.0};
Point(65) = {0.015192, 0.734375, 0, 1.0};
Point(66) = {0.022685, 0.734705, 0, 1.0};
Point(67) = {0.030174, 0.735108, 0, 1.0};
Point(68) = {0.037661, 0.735587, 0, 1.0};
Point(69) = {0.045145, 0.736137, 0, 1.0};
Point(70) = {0.052626, 0.736747, 0, 1.0};
Point(71) = {0.060106, 0.737412, 0, 1.0};
Point(72) = {0.067583, 0.738122, 0, 1.0};
Point(73) = {0.075059, 0.738874, 0, 1.0};
Point(74) = {0.082532, 0.739677, 0, 1.0};
Point(75) = {0.090004, 0.740530, 0, 1.0};
Point(76) = {0.097473, 0.741452, 0, 1.0};
Point(77) = {0.101206, 0.741948, 0, 1.0};
Point(78) = {0.104937, 0.742484, 0, 1.0};
Point(79) = {0.108667, 0.743063, 0, 1.0};
Point(80) = {0.110904, 0.743427, 0, 1.0};
Point(81) = {0.112395, 0.743669, 0, 1.0};
Point(82) = {-0.112359, -0.744567, 0, 1.0};
Point(83) = {-0.110859, -0.744541, 0, 1.0};
Point(84) = {-0.108606, -0.744554, 0, 1.0};
Point(85) = {-0.104847, -0.744711, 0, 1.0};
Point(86) = {-0.101081, -0.745010, 0, 1.0};
Point(87) = {-0.097313, -0.745400, 0, 1.0};
Point(88) = {-0.089770, -0.746301, 0, 1.0};
Point(89) = {-0.082228, -0.747190, 0, 1.0};
Point(90) = {-0.074689, -0.747995, 0, 1.0};
Point(91) = {-0.067156, -0.748660, 0, 1.0};
Point(92) = {-0.059629, -0.749174, 0, 1.0};
Point(93) = {-0.052107, -0.749555, 0, 1.0};
Point(94) = {-0.044591, -0.749812, 0, 1.0};
Point(95) = {-0.037078, -0.749959, 0, 1.0};
Point(96) = {-0.029571, -0.750000, 0, 1.0};
Point(97) = {-0.022067, -0.749939, 0, 1.0};
Point(98) = {-0.014567, -0.749775, 0, 1.0};
Point(99) = {-0.007071, -0.749526, 0, 1.0};
Point(100) = {0.000422, -0.749200, 0, 1.0};
Point(101) = {0.007910, -0.748766, 0, 1.0};
Point(102) = {0.015389, -0.748093, 0, 1.0};
Point(103) = {0.019120, -0.747538, 0, 1.0};
Point(104) = {0.022842, -0.746775, 0, 1.0};
Point(105) = {0.025811, -0.745964, 0, 1.0};
Point(106) = {0.028033, -0.745216, 0, 1.0};
Point(107) = {0.030249, -0.744328, 0, 1.0};
Point(108) = {0.032457, -0.743253, 0, 1.0};
Point(109) = {0.033923, -0.742392, 0, 1.0};
Point(110) = {0.034654, -0.741896, 0, 1.0};
Point(111) = {0.035237, -0.741458, 0, 1.0};
Point(112) = {0.035745, -0.741033, 0, 1.0};
Point(113) = {0.036106, -0.740699, 0, 1.0};
Point(114) = {0.036395, -0.740403, 0, 1.0};
Point(115) = {0.036610, -0.740162, 0, 1.0};
Point(116) = {0.036824, -0.739892, 0, 1.0};
Point(117) = {0.037037, -0.739582, 0, 1.0};
Point(118) = {0.037247, -0.739202, 0, 1.0};
Point(119) = {0.037383, -0.738859, 0, 1.0};
Point(120) = {0.037448, -0.738610, 0, 1.0};
Point(121) = {0.037484, -0.738400, 0, 1.0};
Point(122) = {0.037500, -0.738042, 0, 1.0};
Point(123) = {0.037456, -0.737694, 0, 1.0};
Point(124) = {0.037401, -0.737464, 0, 1.0};
Point(125) = {0.037321, -0.737341, 0, 1.0};
Point(126) = {0.037161, -0.737079, 0, 1.0};
Point(127) = {0.036924, -0.736798, 0, 1.0};
Point(128) = {0.036690, -0.736581, 0, 1.0};
Point(129) = {0.036458, -0.736403, 0, 1.0};
Point(130) = {0.036226, -0.736252, 0, 1.0};
Point(131) = {0.035919, -0.736080, 0, 1.0};
Point(132) = {0.035536, -0.735897, 0, 1.0};
Point(133) = {0.035003, -0.735690, 0, 1.0};
Point(134) = {0.034394, -0.735500, 0, 1.0};
Point(135) = {0.033636, -0.735313, 0, 1.0};
Point(136) = {0.032124, -0.735052, 0, 1.0};
Point(137) = {0.029862, -0.734801, 0, 1.0};
Point(138) = {0.027603, -0.734617, 0, 1.0};
Point(139) = {0.025345, -0.734467, 0, 1.0};
Point(140) = {0.022336, -0.734300, 0, 1.0};
Point(141) = {0.018577, -0.734150, 0, 1.0};
Point(142) = {0.014819, -0.734042, 0, 1.0};
Point(143) = {0.007309, -0.733935, 0, 1.0};
Point(144) = {-0.000196, -0.733975, 0, 1.0};
Point(145) = {-0.007696, -0.734128, 0, 1.0};
Point(146) = {-0.015192, -0.734375, 0, 1.0};
Point(147) = {-0.022685, -0.734705, 0, 1.0};
Point(148) = {-0.030174, -0.735108, 0, 1.0};
Point(149) = {-0.037661, -0.735587, 0, 1.0};
Point(150) = {-0.045145, -0.736137, 0, 1.0};
Point(151) = {-0.052626, -0.736747, 0, 1.0};
Point(152) = {-0.060106, -0.737412, 0, 1.0};
Point(153) = {-0.067583, -0.738122, 0, 1.0};
Point(154) = {-0.075059, -0.738874, 0, 1.0};
Point(155) = {-0.082532, -0.739677, 0, 1.0};
Point(156) = {-0.090004, -0.740530, 0, 1.0};
Point(157) = {-0.097473, -0.741452, 0, 1.0};
Point(158) = {-0.101206, -0.741948, 0, 1.0};
Point(159) = {-0.104937, -0.742484, 0, 1.0};
Point(160) = {-0.108667, -0.743063, 0, 1.0};
Point(161) = {-0.110904, -0.743427, 0, 1.0};
Point(162) = {-0.112395, -0.743669, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:64};
Spline(3) = {64:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:100};
Spline(6) = {100:145};
Spline(7) = {145:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074268, 0.748211, 0, 1.0};
Point(2) = {0.072145, 0.748335, 0, 1.0};
Point(3) = {0.068094, 0.748552, 0, 1.0};
Point(4) = {0.064042, 0.748770, 0, 1.0};
Point(5) = {0.059992, 0.748979, 0, 1.0};
Point(6) = {0.055942, 0.749185, 0, 1.0};
Point(7) = {0.051893, 0.749381, 0, 1.0};
Point(8) = {0.043803, 0.749700, 0, 1.0};
Point(9) = {0.035726, 0.749914, 0, 1.0};
Point(10) = {0.027665, 0.750000, 0, 1.0};
Point(11) = {0.019619, 0.749954, 0, 1.0};
Point(12) = {0.011593, 0.749741, 0, 1.0};
Point(13) = {0.003588, 0.749347, 0, 1.0};
Point(14) = {-0.004394, 0.748766, 0, 1.0};
Point(15) = {-0.012355, 0.748009, 0, 1.0};
Point(16) = {-0.016328, 0.747567, 0, 1.0};
Point(17) = {-0.020296, 0.747080, 0, 1.0};
Point(18) = {-0.024258, 0.746543, 0, 1.0};
Point(19) = {-0.028213, 0.745948, 0, 1.0};
Point(20) = {-0.032162, 0.745302, 0, 1.0};
Point(21) = {-0.036105, 0.744608, 0, 1.0};
Point(22) = {-0.040042, 0.743864, 0, 1.0};
Point(23) = {-0.043971, 0.743052, 0, 1.0};
Point(24) = {-0.047889, 0.742152, 0, 1.0};
Point(25) = {-0.051796, 0.741153, 0, 1.0};
Point(26) = {-0.055689, 0.740034, 0, 1.0};
Point(27) = {-0.059563, 0.738758, 0, 1.0};
Point(28) = {-0.063412, 0.737281, 0, 1.0};
Point(29) = {-0.067225, 0.735492, 0, 1.0};
Point(30) = {-0.069112, 0.734429, 0, 1.0};
Point(31) = {-0.070975, 0.733172, 0, 1.0};
Point(32) = {-0.071894, 0.732442, 0, 1.0};
Point(33) = {-0.072800, 0.731592, 0, 1.0};
Point(34) = {-0.073334, 0.731005, 0, 1.0};
Point(35) = {-0.073855, 0.730315, 0, 1.0};
Point(36) = {-0.074189, 0.729738, 0, 1.0};
Point(37) = {-0.074475, 0.728752, 0, 1.0};
Point(38) = {-0.074008, 0.728218, 0, 1.0};
Point(39) = {-0.073578, 0.727986, 0, 1.0};
Point(40) = {-0.072944, 0.727733, 0, 1.0};
Point(41) = {-0.072318, 0.727543, 0, 1.0};
Point(42) = {-0.071285, 0.727322, 0, 1.0};
Point(43) = {-0.070263, 0.727194, 0, 1.0};
Point(44) = {-0.068234, 0.727054, 0, 1.0};
Point(45) = {-0.066216, 0.727013, 0, 1.0};
Point(46) = {-0.062198, 0.727079, 0, 1.0};
Point(47) = {-0.058194, 0.727256, 0, 1.0};
Point(48) = {-0.054197, 0.727497, 0, 1.0};
Point(49) = {-0.050206, 0.727790, 0, 1.0};
Point(50) = {-0.046221, 0.728130, 0, 1.0};
Point(51) = {-0.042240, 0.728509, 0, 1.0};
Point(52) = {-0.038263, 0.728916, 0, 1.0};
Point(53) = {-0.034289, 0.729348, 0, 1.0};
Point(54) = {-0.030316, 0.729793, 0, 1.0};
Point(55) = {-0.026345, 0.730257, 0, 1.0};
Point(56) = {-0.022377, 0.730742, 0, 1.0};
Point(57) = {-0.018413, 0.731258, 0, 1.0};
Point(58) = {-0.014453, 0.731809, 0, 1.0};
Point(59) = {-0.010497, 0.732393, 0, 1.0};
Point(60) = {-0.002594, 0.733638, 0, 1.0};
Point(61) = {0.005298, 0.734983, 0, 1.0};
Point(62) = {0.013178, 0.736420, 0, 1.0};
Point(63) = {0.021050, 0.737930, 0, 1.0};
Point(64) = {0.028917, 0.739476, 0, 1.0};
Point(65) = {0.036786, 0.741008, 0, 1.0};
Point(66) = {0.044661, 0.742490, 0, 1.0};
Point(67) = {0.052549, 0.743866, 0, 1.0};
Point(68) = {0.056499, 0.744498, 0, 1.0};
Point(69) = {0.060455, 0.745083, 0, 1.0};
Point(70) = {0.064419, 0.745606, 0, 1.0};
Point(71) = {0.068387, 0.746091, 0, 1.0};
Point(72) = {0.072362, 0.746516, 0, 1.0};
Point(73) = {0.074443, 0.746742, 0, 1.0};
Point(74) = {-0.074268, -0.748211, 0, 1.0};
Point(75) = {-0.072145, -0.748335, 0, 1.0};
Point(76) = {-0.068094, -0.748552, 0, 1.0};
Point(77) = {-0.064042, -0.748770, 0, 1.0};
Point(78) = {-0.059992, -0.748979, 0, 1.0};
Point(79) = {-0.055942, -0.749185, 0, 1.0};
Point(80) = {-0.051893, -0.749381, 0, 1.0};
Point(81) = {-0.043803, -0.749700, 0, 1.0};
Point(82) = {-0.035726, -0.749914, 0, 1.0};
Point(83) = {-0.027665, -0.750000, 0, 1.0};
Point(84) = {-0.019619, -0.749954, 0, 1.0};
Point(85) = {-0.011593, -0.749741, 0, 1.0};
Point(86) = {-0.003588, -0.749347, 0, 1.0};
Point(87) = {0.004394, -0.748766, 0, 1.0};
Point(88) = {0.012355, -0.748009, 0, 1.0};
Point(89) = {0.016328, -0.747567, 0, 1.0};
Point(90) = {0.020296, -0.747080, 0, 1.0};
Point(91) = {0.024258, -0.746543, 0, 1.0};
Point(92) = {0.028213, -0.745948, 0, 1.0};
Point(93) = {0.032162, -0.745302, 0, 1.0};
Point(94) = {0.036105, -0.744608, 0, 1.0};
Point(95) = {0.040042, -0.743864, 0, 1.0};
Point(96) = {0.043971, -0.743052, 0, 1.0};
Point(97) = {0.047889, -0.742152, 0, 1.0};
Point(98) = {0.051796, -0.741153, 0, 1.0};
Point(99) = {0.055689, -0.740034, 0, 1.0};
Point(100) = {0.059563, -0.738758, 0, 1.0};
Point(101) = {0.063412, -0.737281, 0, 1.0};
Point(102) = {0.067225, -0.735492, 0, 1.0};
Point(103) = {0.069112, -0.734429, 0, 1.0};
Point(104) = {0.070975, -0.733172, 0, 1.0};
Point(105) = {0.071894, -0.732442, 0, 1.0};
Point(106) = {0.072800, -0.731592, 0, 1.0};
Point(107) = {0.073334, -0.731005, 0, 1.0};
Point(108) = {0.073855, -0.730315, 0, 1.0};
Point(109) = {0.074189, -0.729738, 0, 1.0};
Point(110) = {0.074475, -0.728752, 0, 1.0};
Point(111) = {0.074008, -0.728218, 0, 1.0};
Point(112) = {0.073578, -0.727986, 0, 1.0};
Point(113) = {0.072944, -0.727733, 0, 1.0};
Point(114) = {0.072318, -0.727543, 0, 1.0};
Point(115) = {0.071285, -0.727322, 0, 1.0};
Point(116) = {0.070263, -0.727194, 0, 1.0};
Point(117) = {0.068234, -0.727054, 0, 1.0};
Point(118) = {0.066216, -0.727013, 0, 1.0};
Point(119) = {0.062198, -0.727079, 0, 1.0};
Point(120) = {0.058194, -0.727256, 0, 1.0};
Point(121) = {0.054197, -0.727497, 0, 1.0};
Point(122) = {0.050206, -0.727790, 0, 1.0};
Point(123) = {0.046221, -0.728130, 0, 1.0};
Point(124) = {0.042240, -0.728509, 0, 1.0};
Point(125) = {0.038263, -0.728916, 0, 1.0};
Point(126) = {0.034289, -0.729348, 0, 1.0};
Point(127) = {0.030316, -0.729793, 0, 1.0};
Point(128) = {0.026345, -0.730257, 0, 1.0};
Point(129) = {0.022377, -0.730742, 0, 1.0};
Point(130) = {0.018413, -0.731258, 0, 1.0};
Point(131) = {0.014453, -0.731809, 0, 1.0};
Point(132) = {0.010497, -0.732393, 0, 1.0};
Point(133) = {0.002594, -0.733638, 0, 1.0};
Point(134) = {-0.005298, -0.734983, 0, 1.0};
Point(135) = {-0.013178, -0.736420, 0, 1.0};
Point(136) = {-0.021050, -0.737930, 0, 1.0};
Point(137) = {-0.028917, -0.739476, 0, 1.0};
Point(138) = {-0.036786, -0.741008, 0, 1.0};
Point(139) = {-0.044661, -0.742490, 0, 1.0};
Point(140) = {-0.052549, -0.743866, 0, 1.0};
Point(141) = {-0.056499, -0.744498, 0, 1.0};
Point(142) = {-0.060455, -0.745083, 0, 1.0};
Point(143) = {-0.064419, -0.745606, 0, 1.0};
Point(144) = {-0.068387, -0.746091, 0, 1.0};
Point(145) = {-0.072362, -0.746516, 0, 1.0};
Point(146) = {-0.074443, -0.746742, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {36.00000000, 15.00000000, 0, 1.0};
Point(150) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
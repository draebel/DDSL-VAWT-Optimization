SetFactory("OpenCASCADE");

Point(1) = {0.074960, 0.735830, 0, 1.0};
Point(2) = {0.072796, 0.736445, 0, 1.0};
Point(3) = {0.069613, 0.737349, 0, 1.0};
Point(4) = {0.065782, 0.738370, 0, 1.0};
Point(5) = {0.061340, 0.739500, 0, 1.0};
Point(6) = {0.056328, 0.740665, 0, 1.0};
Point(7) = {0.050794, 0.741868, 0, 1.0};
Point(8) = {0.044790, 0.743088, 0, 1.0};
Point(9) = {0.038373, 0.744260, 0, 1.0};
Point(10) = {0.031603, 0.745365, 0, 1.0};
Point(11) = {0.024545, 0.746390, 0, 1.0};
Point(12) = {0.017268, 0.747311, 0, 1.0};
Point(13) = {0.009840, 0.748110, 0, 1.0};
Point(14) = {0.002333, 0.748778, 0, 1.0};
Point(15) = {-0.005180, 0.749300, 0, 1.0};
Point(16) = {-0.012629, 0.749675, 0, 1.0};
Point(17) = {-0.019940, 0.749901, 0, 1.0};
Point(18) = {-0.027043, 0.750000, 0, 1.0};
Point(19) = {-0.033868, 0.749980, 0, 1.0};
Point(20) = {-0.040349, 0.749840, 0, 1.0};
Point(21) = {-0.046424, 0.749596, 0, 1.0};
Point(22) = {-0.052034, 0.749252, 0, 1.0};
Point(23) = {-0.057126, 0.748788, 0, 1.0};
Point(24) = {-0.061650, 0.748219, 0, 1.0};
Point(25) = {-0.065563, 0.747569, 0, 1.0};
Point(26) = {-0.068828, 0.746787, 0, 1.0};
Point(27) = {-0.071418, 0.745838, 0, 1.0};
Point(28) = {-0.073304, 0.744770, 0, 1.0};
Point(29) = {-0.074469, 0.743595, 0, 1.0};
Point(30) = {-0.074911, 0.742129, 0, 1.0};
Point(31) = {-0.074605, 0.740801, 0, 1.0};
Point(32) = {-0.073547, 0.739800, 0, 1.0};
Point(33) = {-0.071757, 0.738890, 0, 1.0};
Point(34) = {-0.069252, 0.738117, 0, 1.0};
Point(35) = {-0.066057, 0.737443, 0, 1.0};
Point(36) = {-0.062204, 0.736878, 0, 1.0};
Point(37) = {-0.057736, 0.736292, 0, 1.0};
Point(38) = {-0.052692, 0.735763, 0, 1.0};
Point(39) = {-0.047125, 0.735242, 0, 1.0};
Point(40) = {-0.041085, 0.734752, 0, 1.0};
Point(41) = {-0.034633, 0.734287, 0, 1.0};
Point(42) = {-0.027830, 0.733860, 0, 1.0};
Point(43) = {-0.020742, 0.733477, 0, 1.0};
Point(44) = {-0.013436, 0.733152, 0, 1.0};
Point(45) = {-0.005981, 0.732904, 0, 1.0};
Point(46) = {0.001550, 0.732731, 0, 1.0};
Point(47) = {0.009085, 0.732633, 0, 1.0};
Point(48) = {0.016552, 0.732628, 0, 1.0};
Point(49) = {0.023876, 0.732682, 0, 1.0};
Point(50) = {0.030989, 0.732795, 0, 1.0};
Point(51) = {0.037820, 0.732942, 0, 1.0};
Point(52) = {0.044302, 0.733099, 0, 1.0};
Point(53) = {0.050373, 0.733258, 0, 1.0};
Point(54) = {0.055975, 0.733441, 0, 1.0};
Point(55) = {0.061054, 0.733639, 0, 1.0};
Point(56) = {0.065560, 0.733837, 0, 1.0};
Point(57) = {0.069450, 0.734019, 0, 1.0};
Point(58) = {0.072685, 0.734178, 0, 1.0};
Point(59) = {0.074885, 0.734284, 0, 1.0};
Point(60) = {-0.074960, -0.735830, 0, 1.0};
Point(61) = {-0.072796, -0.736445, 0, 1.0};
Point(62) = {-0.069613, -0.737349, 0, 1.0};
Point(63) = {-0.065782, -0.738370, 0, 1.0};
Point(64) = {-0.061340, -0.739500, 0, 1.0};
Point(65) = {-0.056328, -0.740665, 0, 1.0};
Point(66) = {-0.050794, -0.741868, 0, 1.0};
Point(67) = {-0.044790, -0.743088, 0, 1.0};
Point(68) = {-0.038373, -0.744260, 0, 1.0};
Point(69) = {-0.031603, -0.745365, 0, 1.0};
Point(70) = {-0.024545, -0.746390, 0, 1.0};
Point(71) = {-0.017268, -0.747311, 0, 1.0};
Point(72) = {-0.009840, -0.748110, 0, 1.0};
Point(73) = {-0.002333, -0.748778, 0, 1.0};
Point(74) = {0.005180, -0.749300, 0, 1.0};
Point(75) = {0.012629, -0.749675, 0, 1.0};
Point(76) = {0.019940, -0.749901, 0, 1.0};
Point(77) = {0.027043, -0.750000, 0, 1.0};
Point(78) = {0.033868, -0.749980, 0, 1.0};
Point(79) = {0.040349, -0.749840, 0, 1.0};
Point(80) = {0.046424, -0.749596, 0, 1.0};
Point(81) = {0.052034, -0.749252, 0, 1.0};
Point(82) = {0.057126, -0.748788, 0, 1.0};
Point(83) = {0.061650, -0.748219, 0, 1.0};
Point(84) = {0.065563, -0.747569, 0, 1.0};
Point(85) = {0.068828, -0.746787, 0, 1.0};
Point(86) = {0.071418, -0.745838, 0, 1.0};
Point(87) = {0.073304, -0.744770, 0, 1.0};
Point(88) = {0.074469, -0.743595, 0, 1.0};
Point(89) = {0.074911, -0.742129, 0, 1.0};
Point(90) = {0.074605, -0.740801, 0, 1.0};
Point(91) = {0.073547, -0.739800, 0, 1.0};
Point(92) = {0.071757, -0.738890, 0, 1.0};
Point(93) = {0.069252, -0.738117, 0, 1.0};
Point(94) = {0.066057, -0.737443, 0, 1.0};
Point(95) = {0.062204, -0.736878, 0, 1.0};
Point(96) = {0.057736, -0.736292, 0, 1.0};
Point(97) = {0.052692, -0.735763, 0, 1.0};
Point(98) = {0.047125, -0.735242, 0, 1.0};
Point(99) = {0.041085, -0.734752, 0, 1.0};
Point(100) = {0.034633, -0.734287, 0, 1.0};
Point(101) = {0.027830, -0.733860, 0, 1.0};
Point(102) = {0.020742, -0.733477, 0, 1.0};
Point(103) = {0.013436, -0.733152, 0, 1.0};
Point(104) = {0.005981, -0.732904, 0, 1.0};
Point(105) = {-0.001550, -0.732731, 0, 1.0};
Point(106) = {-0.009085, -0.732633, 0, 1.0};
Point(107) = {-0.016552, -0.732628, 0, 1.0};
Point(108) = {-0.023876, -0.732682, 0, 1.0};
Point(109) = {-0.030989, -0.732795, 0, 1.0};
Point(110) = {-0.037820, -0.732942, 0, 1.0};
Point(111) = {-0.044302, -0.733099, 0, 1.0};
Point(112) = {-0.050373, -0.733258, 0, 1.0};
Point(113) = {-0.055975, -0.733441, 0, 1.0};
Point(114) = {-0.061054, -0.733639, 0, 1.0};
Point(115) = {-0.065560, -0.733837, 0, 1.0};
Point(116) = {-0.069450, -0.734019, 0, 1.0};
Point(117) = {-0.072685, -0.734178, 0, 1.0};
Point(118) = {-0.074885, -0.734284, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:41};
Spline(3) = {41:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:78};
Spline(6) = {78:100};
Spline(7) = {100:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {36.00000000, 15.00000000, 0, 1.0};
Point(122) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074978, 0.732007, 0, 1.0};
Point(2) = {0.074416, 0.732108, 0, 1.0};
Point(3) = {0.072798, 0.732457, 0, 1.0};
Point(4) = {0.070273, 0.733086, 0, 1.0};
Point(5) = {0.066962, 0.733936, 0, 1.0};
Point(6) = {0.062912, 0.734924, 0, 1.0};
Point(7) = {0.058127, 0.736035, 0, 1.0};
Point(8) = {0.052667, 0.737301, 0, 1.0};
Point(9) = {0.046642, 0.738729, 0, 1.0};
Point(10) = {0.040169, 0.740301, 0, 1.0};
Point(11) = {0.033372, 0.741983, 0, 1.0};
Point(12) = {0.026381, 0.743717, 0, 1.0};
Point(13) = {0.019324, 0.745430, 0, 1.0};
Point(14) = {0.012320, 0.746991, 0, 1.0};
Point(15) = {0.005383, 0.748229, 0, 1.0};
Point(16) = {-0.001577, 0.749097, 0, 1.0};
Point(17) = {-0.008561, 0.749662, 0, 1.0};
Point(18) = {-0.015496, 0.749961, 0, 1.0};
Point(19) = {-0.022312, 0.750000, 0, 1.0};
Point(20) = {-0.028950, 0.749794, 0, 1.0};
Point(21) = {-0.035346, 0.749358, 0, 1.0};
Point(22) = {-0.041435, 0.748708, 0, 1.0};
Point(23) = {-0.047157, 0.747859, 0, 1.0};
Point(24) = {-0.052457, 0.746830, 0, 1.0};
Point(25) = {-0.057284, 0.745643, 0, 1.0};
Point(26) = {-0.061594, 0.744315, 0, 1.0};
Point(27) = {-0.065348, 0.742873, 0, 1.0};
Point(28) = {-0.068525, 0.741348, 0, 1.0};
Point(29) = {-0.071102, 0.739790, 0, 1.0};
Point(30) = {-0.073051, 0.738249, 0, 1.0};
Point(31) = {-0.074351, 0.736779, 0, 1.0};
Point(32) = {-0.074982, 0.735473, 0, 1.0};
Point(33) = {-0.074759, 0.734443, 0, 1.0};
Point(34) = {-0.073571, 0.733568, 0, 1.0};
Point(35) = {-0.071510, 0.732702, 0, 1.0};
Point(36) = {-0.068638, 0.731886, 0, 1.0};
Point(37) = {-0.064990, 0.731131, 0, 1.0};
Point(38) = {-0.060601, 0.730442, 0, 1.0};
Point(39) = {-0.055520, 0.729810, 0, 1.0};
Point(40) = {-0.049815, 0.729234, 0, 1.0};
Point(41) = {-0.043556, 0.728717, 0, 1.0};
Point(42) = {-0.036816, 0.728262, 0, 1.0};
Point(43) = {-0.029679, 0.727872, 0, 1.0};
Point(44) = {-0.022226, 0.727553, 0, 1.0};
Point(45) = {-0.014544, 0.727304, 0, 1.0};
Point(46) = {-0.006724, 0.727134, 0, 1.0};
Point(47) = {0.001142, 0.727042, 0, 1.0};
Point(48) = {0.008964, 0.727034, 0, 1.0};
Point(49) = {0.016644, 0.727113, 0, 1.0};
Point(50) = {0.024086, 0.727291, 0, 1.0};
Point(51) = {0.031194, 0.727589, 0, 1.0};
Point(52) = {0.037876, 0.728077, 0, 1.0};
Point(53) = {0.044182, 0.728864, 0, 1.0};
Point(54) = {0.050265, 0.729844, 0, 1.0};
Point(55) = {0.056080, 0.730754, 0, 1.0};
Point(56) = {0.061416, 0.731449, 0, 1.0};
Point(57) = {0.066077, 0.731889, 0, 1.0};
Point(58) = {0.069884, 0.732088, 0, 1.0};
Point(59) = {0.072692, 0.732108, 0, 1.0};
Point(60) = {0.074404, 0.732045, 0, 1.0};
Point(61) = {-0.074978, -0.732007, 0, 1.0};
Point(62) = {-0.074416, -0.732108, 0, 1.0};
Point(63) = {-0.072798, -0.732457, 0, 1.0};
Point(64) = {-0.070273, -0.733086, 0, 1.0};
Point(65) = {-0.066962, -0.733936, 0, 1.0};
Point(66) = {-0.062912, -0.734924, 0, 1.0};
Point(67) = {-0.058127, -0.736035, 0, 1.0};
Point(68) = {-0.052667, -0.737301, 0, 1.0};
Point(69) = {-0.046642, -0.738729, 0, 1.0};
Point(70) = {-0.040169, -0.740301, 0, 1.0};
Point(71) = {-0.033372, -0.741983, 0, 1.0};
Point(72) = {-0.026381, -0.743717, 0, 1.0};
Point(73) = {-0.019324, -0.745430, 0, 1.0};
Point(74) = {-0.012320, -0.746991, 0, 1.0};
Point(75) = {-0.005383, -0.748229, 0, 1.0};
Point(76) = {0.001577, -0.749097, 0, 1.0};
Point(77) = {0.008561, -0.749662, 0, 1.0};
Point(78) = {0.015496, -0.749961, 0, 1.0};
Point(79) = {0.022312, -0.750000, 0, 1.0};
Point(80) = {0.028950, -0.749794, 0, 1.0};
Point(81) = {0.035346, -0.749358, 0, 1.0};
Point(82) = {0.041435, -0.748708, 0, 1.0};
Point(83) = {0.047157, -0.747859, 0, 1.0};
Point(84) = {0.052457, -0.746830, 0, 1.0};
Point(85) = {0.057284, -0.745643, 0, 1.0};
Point(86) = {0.061594, -0.744315, 0, 1.0};
Point(87) = {0.065348, -0.742873, 0, 1.0};
Point(88) = {0.068525, -0.741348, 0, 1.0};
Point(89) = {0.071102, -0.739790, 0, 1.0};
Point(90) = {0.073051, -0.738249, 0, 1.0};
Point(91) = {0.074351, -0.736779, 0, 1.0};
Point(92) = {0.074982, -0.735473, 0, 1.0};
Point(93) = {0.074759, -0.734443, 0, 1.0};
Point(94) = {0.073571, -0.733568, 0, 1.0};
Point(95) = {0.071510, -0.732702, 0, 1.0};
Point(96) = {0.068638, -0.731886, 0, 1.0};
Point(97) = {0.064990, -0.731131, 0, 1.0};
Point(98) = {0.060601, -0.730442, 0, 1.0};
Point(99) = {0.055520, -0.729810, 0, 1.0};
Point(100) = {0.049815, -0.729234, 0, 1.0};
Point(101) = {0.043556, -0.728717, 0, 1.0};
Point(102) = {0.036816, -0.728262, 0, 1.0};
Point(103) = {0.029679, -0.727872, 0, 1.0};
Point(104) = {0.022226, -0.727553, 0, 1.0};
Point(105) = {0.014544, -0.727304, 0, 1.0};
Point(106) = {0.006724, -0.727134, 0, 1.0};
Point(107) = {-0.001142, -0.727042, 0, 1.0};
Point(108) = {-0.008964, -0.727034, 0, 1.0};
Point(109) = {-0.016644, -0.727113, 0, 1.0};
Point(110) = {-0.024086, -0.727291, 0, 1.0};
Point(111) = {-0.031194, -0.727589, 0, 1.0};
Point(112) = {-0.037876, -0.728077, 0, 1.0};
Point(113) = {-0.044182, -0.728864, 0, 1.0};
Point(114) = {-0.050265, -0.729844, 0, 1.0};
Point(115) = {-0.056080, -0.730754, 0, 1.0};
Point(116) = {-0.061416, -0.731449, 0, 1.0};
Point(117) = {-0.066077, -0.731889, 0, 1.0};
Point(118) = {-0.069884, -0.732088, 0, 1.0};
Point(119) = {-0.072692, -0.732108, 0, 1.0};
Point(120) = {-0.074404, -0.732045, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
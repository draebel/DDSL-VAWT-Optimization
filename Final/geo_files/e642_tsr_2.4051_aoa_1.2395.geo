SetFactory("OpenCASCADE");

Point(1) = {0.149953, 0.726013, 0, 1.0};
Point(2) = {0.149204, 0.726147, 0, 1.0};
Point(3) = {0.147047, 0.726612, 0, 1.0};
Point(4) = {0.143681, 0.727451, 0, 1.0};
Point(5) = {0.139266, 0.728585, 0, 1.0};
Point(6) = {0.133868, 0.729902, 0, 1.0};
Point(7) = {0.127488, 0.731382, 0, 1.0};
Point(8) = {0.120209, 0.733070, 0, 1.0};
Point(9) = {0.112176, 0.734974, 0, 1.0};
Point(10) = {0.103548, 0.737069, 0, 1.0};
Point(11) = {0.094486, 0.739312, 0, 1.0};
Point(12) = {0.085166, 0.741624, 0, 1.0};
Point(13) = {0.075757, 0.743908, 0, 1.0};
Point(14) = {0.066420, 0.745988, 0, 1.0};
Point(15) = {0.057171, 0.747639, 0, 1.0};
Point(16) = {0.047892, 0.748796, 0, 1.0};
Point(17) = {0.038582, 0.749549, 0, 1.0};
Point(18) = {0.029337, 0.749947, 0, 1.0};
Point(19) = {0.020250, 0.750000, 0, 1.0};
Point(20) = {0.011400, 0.749725, 0, 1.0};
Point(21) = {0.002873, 0.749144, 0, 1.0};
Point(22) = {-0.005246, 0.748277, 0, 1.0};
Point(23) = {-0.012874, 0.747146, 0, 1.0};
Point(24) = {-0.019939, 0.745774, 0, 1.0};
Point(25) = {-0.026375, 0.744191, 0, 1.0};
Point(26) = {-0.032120, 0.742421, 0, 1.0};
Point(27) = {-0.037125, 0.740499, 0, 1.0};
Point(28) = {-0.041360, 0.738466, 0, 1.0};
Point(29) = {-0.044796, 0.736388, 0, 1.0};
Point(30) = {-0.047395, 0.734334, 0, 1.0};
Point(31) = {-0.049128, 0.732375, 0, 1.0};
Point(32) = {-0.049970, 0.730632, 0, 1.0};
Point(33) = {-0.049671, 0.729260, 0, 1.0};
Point(34) = {-0.048088, 0.728093, 0, 1.0};
Point(35) = {-0.045340, 0.726939, 0, 1.0};
Point(36) = {-0.041511, 0.725850, 0, 1.0};
Point(37) = {-0.036648, 0.724845, 0, 1.0};
Point(38) = {-0.030796, 0.723926, 0, 1.0};
Point(39) = {-0.024023, 0.723083, 0, 1.0};
Point(40) = {-0.016418, 0.722315, 0, 1.0};
Point(41) = {-0.008073, 0.721626, 0, 1.0};
Point(42) = {0.000912, 0.721020, 0, 1.0};
Point(43) = {0.010427, 0.720500, 0, 1.0};
Point(44) = {0.020364, 0.720075, 0, 1.0};
Point(45) = {0.030606, 0.719743, 0, 1.0};
Point(46) = {0.041031, 0.719515, 0, 1.0};
Point(47) = {0.051517, 0.719392, 0, 1.0};
Point(48) = {0.061945, 0.719383, 0, 1.0};
Point(49) = {0.072184, 0.719487, 0, 1.0};
Point(50) = {0.082105, 0.719725, 0, 1.0};
Point(51) = {0.091582, 0.720122, 0, 1.0};
Point(52) = {0.100490, 0.720773, 0, 1.0};
Point(53) = {0.108897, 0.721822, 0, 1.0};
Point(54) = {0.117007, 0.723129, 0, 1.0};
Point(55) = {0.124759, 0.724341, 0, 1.0};
Point(56) = {0.131873, 0.725268, 0, 1.0};
Point(57) = {0.138087, 0.725855, 0, 1.0};
Point(58) = {0.143162, 0.726120, 0, 1.0};
Point(59) = {0.146905, 0.726147, 0, 1.0};
Point(60) = {0.149188, 0.726063, 0, 1.0};
Point(61) = {-0.149953, -0.726013, 0, 1.0};
Point(62) = {-0.149204, -0.726147, 0, 1.0};
Point(63) = {-0.147047, -0.726612, 0, 1.0};
Point(64) = {-0.143681, -0.727451, 0, 1.0};
Point(65) = {-0.139266, -0.728585, 0, 1.0};
Point(66) = {-0.133868, -0.729902, 0, 1.0};
Point(67) = {-0.127488, -0.731382, 0, 1.0};
Point(68) = {-0.120209, -0.733070, 0, 1.0};
Point(69) = {-0.112176, -0.734974, 0, 1.0};
Point(70) = {-0.103548, -0.737069, 0, 1.0};
Point(71) = {-0.094486, -0.739312, 0, 1.0};
Point(72) = {-0.085166, -0.741624, 0, 1.0};
Point(73) = {-0.075757, -0.743908, 0, 1.0};
Point(74) = {-0.066420, -0.745988, 0, 1.0};
Point(75) = {-0.057171, -0.747639, 0, 1.0};
Point(76) = {-0.047892, -0.748796, 0, 1.0};
Point(77) = {-0.038582, -0.749549, 0, 1.0};
Point(78) = {-0.029337, -0.749947, 0, 1.0};
Point(79) = {-0.020250, -0.750000, 0, 1.0};
Point(80) = {-0.011400, -0.749725, 0, 1.0};
Point(81) = {-0.002873, -0.749144, 0, 1.0};
Point(82) = {0.005246, -0.748277, 0, 1.0};
Point(83) = {0.012874, -0.747146, 0, 1.0};
Point(84) = {0.019939, -0.745774, 0, 1.0};
Point(85) = {0.026375, -0.744191, 0, 1.0};
Point(86) = {0.032120, -0.742421, 0, 1.0};
Point(87) = {0.037125, -0.740499, 0, 1.0};
Point(88) = {0.041360, -0.738466, 0, 1.0};
Point(89) = {0.044796, -0.736388, 0, 1.0};
Point(90) = {0.047395, -0.734334, 0, 1.0};
Point(91) = {0.049128, -0.732375, 0, 1.0};
Point(92) = {0.049970, -0.730632, 0, 1.0};
Point(93) = {0.049671, -0.729260, 0, 1.0};
Point(94) = {0.048088, -0.728093, 0, 1.0};
Point(95) = {0.045340, -0.726939, 0, 1.0};
Point(96) = {0.041511, -0.725850, 0, 1.0};
Point(97) = {0.036648, -0.724845, 0, 1.0};
Point(98) = {0.030796, -0.723926, 0, 1.0};
Point(99) = {0.024023, -0.723083, 0, 1.0};
Point(100) = {0.016418, -0.722315, 0, 1.0};
Point(101) = {0.008073, -0.721626, 0, 1.0};
Point(102) = {-0.000912, -0.721020, 0, 1.0};
Point(103) = {-0.010427, -0.720500, 0, 1.0};
Point(104) = {-0.020364, -0.720075, 0, 1.0};
Point(105) = {-0.030606, -0.719743, 0, 1.0};
Point(106) = {-0.041031, -0.719515, 0, 1.0};
Point(107) = {-0.051517, -0.719392, 0, 1.0};
Point(108) = {-0.061945, -0.719383, 0, 1.0};
Point(109) = {-0.072184, -0.719487, 0, 1.0};
Point(110) = {-0.082105, -0.719725, 0, 1.0};
Point(111) = {-0.091582, -0.720122, 0, 1.0};
Point(112) = {-0.100490, -0.720773, 0, 1.0};
Point(113) = {-0.108897, -0.721822, 0, 1.0};
Point(114) = {-0.117007, -0.723129, 0, 1.0};
Point(115) = {-0.124759, -0.724341, 0, 1.0};
Point(116) = {-0.131873, -0.725268, 0, 1.0};
Point(117) = {-0.138087, -0.725855, 0, 1.0};
Point(118) = {-0.143162, -0.726120, 0, 1.0};
Point(119) = {-0.146905, -0.726147, 0, 1.0};
Point(120) = {-0.149188, -0.726063, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
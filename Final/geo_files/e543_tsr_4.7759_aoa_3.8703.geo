SetFactory("OpenCASCADE");

Point(1) = {0.074772, 0.735235, 0, 1.0};
Point(2) = {0.074399, 0.735358, 0, 1.0};
Point(3) = {0.073376, 0.735722, 0, 1.0};
Point(4) = {0.071808, 0.736255, 0, 1.0};
Point(5) = {0.069687, 0.736898, 0, 1.0};
Point(6) = {0.067025, 0.737673, 0, 1.0};
Point(7) = {0.063883, 0.738587, 0, 1.0};
Point(8) = {0.060325, 0.739626, 0, 1.0};
Point(9) = {0.056418, 0.740767, 0, 1.0};
Point(10) = {0.052225, 0.741980, 0, 1.0};
Point(11) = {0.047810, 0.743230, 0, 1.0};
Point(12) = {0.043230, 0.744477, 0, 1.0};
Point(13) = {0.038541, 0.745682, 0, 1.0};
Point(14) = {0.033792, 0.746805, 0, 1.0};
Point(15) = {0.029030, 0.747809, 0, 1.0};
Point(16) = {0.024297, 0.748648, 0, 1.0};
Point(17) = {0.019607, 0.749284, 0, 1.0};
Point(18) = {0.014966, 0.749709, 0, 1.0};
Point(19) = {0.010390, 0.749940, 0, 1.0};
Point(20) = {0.005920, 0.750000, 0, 1.0};
Point(21) = {0.001607, 0.749903, 0, 1.0};
Point(22) = {-0.002505, 0.749656, 0, 1.0};
Point(23) = {-0.006372, 0.749268, 0, 1.0};
Point(24) = {-0.009956, 0.748750, 0, 1.0};
Point(25) = {-0.013222, 0.748114, 0, 1.0};
Point(26) = {-0.016139, 0.747374, 0, 1.0};
Point(27) = {-0.018678, 0.746545, 0, 1.0};
Point(28) = {-0.020817, 0.745651, 0, 1.0};
Point(29) = {-0.022536, 0.744714, 0, 1.0};
Point(30) = {-0.023819, 0.743765, 0, 1.0};
Point(31) = {-0.024647, 0.742849, 0, 1.0};
Point(32) = {-0.024796, 0.742601, 0, 1.0};
Point(33) = {-0.024912, 0.742350, 0, 1.0};
Point(34) = {-0.024964, 0.742190, 0, 1.0};
Point(35) = {-0.024994, 0.742038, 0, 1.0};
Point(36) = {-0.025000, 0.741967, 0, 1.0};
Point(37) = {-0.025001, 0.741899, 0, 1.0};
Point(38) = {-0.024992, 0.741834, 0, 1.0};
Point(39) = {-0.024972, 0.741770, 0, 1.0};
Point(40) = {-0.024944, 0.741705, 0, 1.0};
Point(41) = {-0.024906, 0.741639, 0, 1.0};
Point(42) = {-0.024810, 0.741503, 0, 1.0};
Point(43) = {-0.024688, 0.741362, 0, 1.0};
Point(44) = {-0.024460, 0.741143, 0, 1.0};
Point(45) = {-0.023711, 0.740596, 0, 1.0};
Point(46) = {-0.022204, 0.739794, 0, 1.0};
Point(47) = {-0.020184, 0.738973, 0, 1.0};
Point(48) = {-0.017677, 0.738145, 0, 1.0};
Point(49) = {-0.014712, 0.737322, 0, 1.0};
Point(50) = {-0.011324, 0.736508, 0, 1.0};
Point(51) = {-0.007560, 0.735710, 0, 1.0};
Point(52) = {-0.003467, 0.734940, 0, 1.0};
Point(53) = {0.000901, 0.734210, 0, 1.0};
Point(54) = {0.005491, 0.733535, 0, 1.0};
Point(55) = {0.010249, 0.732929, 0, 1.0};
Point(56) = {0.015118, 0.732407, 0, 1.0};
Point(57) = {0.020042, 0.731986, 0, 1.0};
Point(58) = {0.024963, 0.731683, 0, 1.0};
Point(59) = {0.029825, 0.731519, 0, 1.0};
Point(60) = {0.034568, 0.731542, 0, 1.0};
Point(61) = {0.039200, 0.731818, 0, 1.0};
Point(62) = {0.043778, 0.732346, 0, 1.0};
Point(63) = {0.048355, 0.733046, 0, 1.0};
Point(64) = {0.052908, 0.733775, 0, 1.0};
Point(65) = {0.057323, 0.734419, 0, 1.0};
Point(66) = {0.061480, 0.734922, 0, 1.0};
Point(67) = {0.065251, 0.735258, 0, 1.0};
Point(68) = {0.068518, 0.735426, 0, 1.0};
Point(69) = {0.071178, 0.735457, 0, 1.0};
Point(70) = {0.073150, 0.735391, 0, 1.0};
Point(71) = {0.074362, 0.735287, 0, 1.0};
Point(72) = {-0.074772, -0.735235, 0, 1.0};
Point(73) = {-0.074399, -0.735358, 0, 1.0};
Point(74) = {-0.073376, -0.735722, 0, 1.0};
Point(75) = {-0.071808, -0.736255, 0, 1.0};
Point(76) = {-0.069687, -0.736898, 0, 1.0};
Point(77) = {-0.067025, -0.737673, 0, 1.0};
Point(78) = {-0.063883, -0.738587, 0, 1.0};
Point(79) = {-0.060325, -0.739626, 0, 1.0};
Point(80) = {-0.056418, -0.740767, 0, 1.0};
Point(81) = {-0.052225, -0.741980, 0, 1.0};
Point(82) = {-0.047810, -0.743230, 0, 1.0};
Point(83) = {-0.043230, -0.744477, 0, 1.0};
Point(84) = {-0.038541, -0.745682, 0, 1.0};
Point(85) = {-0.033792, -0.746805, 0, 1.0};
Point(86) = {-0.029030, -0.747809, 0, 1.0};
Point(87) = {-0.024297, -0.748648, 0, 1.0};
Point(88) = {-0.019607, -0.749284, 0, 1.0};
Point(89) = {-0.014966, -0.749709, 0, 1.0};
Point(90) = {-0.010390, -0.749940, 0, 1.0};
Point(91) = {-0.005920, -0.750000, 0, 1.0};
Point(92) = {-0.001607, -0.749903, 0, 1.0};
Point(93) = {0.002505, -0.749656, 0, 1.0};
Point(94) = {0.006372, -0.749268, 0, 1.0};
Point(95) = {0.009956, -0.748750, 0, 1.0};
Point(96) = {0.013222, -0.748114, 0, 1.0};
Point(97) = {0.016139, -0.747374, 0, 1.0};
Point(98) = {0.018678, -0.746545, 0, 1.0};
Point(99) = {0.020817, -0.745651, 0, 1.0};
Point(100) = {0.022536, -0.744714, 0, 1.0};
Point(101) = {0.023819, -0.743765, 0, 1.0};
Point(102) = {0.024647, -0.742849, 0, 1.0};
Point(103) = {0.024796, -0.742601, 0, 1.0};
Point(104) = {0.024912, -0.742350, 0, 1.0};
Point(105) = {0.024964, -0.742190, 0, 1.0};
Point(106) = {0.024994, -0.742038, 0, 1.0};
Point(107) = {0.025000, -0.741967, 0, 1.0};
Point(108) = {0.025001, -0.741899, 0, 1.0};
Point(109) = {0.024992, -0.741834, 0, 1.0};
Point(110) = {0.024972, -0.741770, 0, 1.0};
Point(111) = {0.024944, -0.741705, 0, 1.0};
Point(112) = {0.024906, -0.741639, 0, 1.0};
Point(113) = {0.024810, -0.741503, 0, 1.0};
Point(114) = {0.024688, -0.741362, 0, 1.0};
Point(115) = {0.024460, -0.741143, 0, 1.0};
Point(116) = {0.023711, -0.740596, 0, 1.0};
Point(117) = {0.022204, -0.739794, 0, 1.0};
Point(118) = {0.020184, -0.738973, 0, 1.0};
Point(119) = {0.017677, -0.738145, 0, 1.0};
Point(120) = {0.014712, -0.737322, 0, 1.0};
Point(121) = {0.011324, -0.736508, 0, 1.0};
Point(122) = {0.007560, -0.735710, 0, 1.0};
Point(123) = {0.003467, -0.734940, 0, 1.0};
Point(124) = {-0.000901, -0.734210, 0, 1.0};
Point(125) = {-0.005491, -0.733535, 0, 1.0};
Point(126) = {-0.010249, -0.732929, 0, 1.0};
Point(127) = {-0.015118, -0.732407, 0, 1.0};
Point(128) = {-0.020042, -0.731986, 0, 1.0};
Point(129) = {-0.024963, -0.731683, 0, 1.0};
Point(130) = {-0.029825, -0.731519, 0, 1.0};
Point(131) = {-0.034568, -0.731542, 0, 1.0};
Point(132) = {-0.039200, -0.731818, 0, 1.0};
Point(133) = {-0.043778, -0.732346, 0, 1.0};
Point(134) = {-0.048355, -0.733046, 0, 1.0};
Point(135) = {-0.052908, -0.733775, 0, 1.0};
Point(136) = {-0.057323, -0.734419, 0, 1.0};
Point(137) = {-0.061480, -0.734922, 0, 1.0};
Point(138) = {-0.065251, -0.735258, 0, 1.0};
Point(139) = {-0.068518, -0.735426, 0, 1.0};
Point(140) = {-0.071178, -0.735457, 0, 1.0};
Point(141) = {-0.073150, -0.735391, 0, 1.0};
Point(142) = {-0.074362, -0.735287, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:53};
Spline(3) = {53:71};
Spline(4) = {71,1};

// Lines: second blade (splines 5-8)
Spline(5) = {72:92};
Spline(6) = {92:124};
Spline(7) = {124:142};
Spline(8) = {142,72};

// Outer domain (points 20001-4 and lines)
Point(143) = {-13.50000000, -15.00000000, 0, 1.0};
Point(144) = {-13.50000000, 15.00000000, 0, 1.0};
Point(145) = {13.50000000, 15.00000000, 0, 1.0};
Point(146) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {143, 144};
Line(12) = {144, 145};
Line(13) = {145, 146};
Line(14) = {143, 146};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111306, 0.728369, 0, 1.0};
Point(2) = {0.107997, 0.728743, 0, 1.0};
Point(3) = {0.104039, 0.729358, 0, 1.0};
Point(4) = {0.102205, 0.729695, 0, 1.0};
Point(5) = {0.099322, 0.730274, 0, 1.0};
Point(6) = {0.096444, 0.730892, 0, 1.0};
Point(7) = {0.093569, 0.731531, 0, 1.0};
Point(8) = {0.092131, 0.731853, 0, 1.0};
Point(9) = {0.089256, 0.732494, 0, 1.0};
Point(10) = {0.086380, 0.733126, 0, 1.0};
Point(11) = {0.082783, 0.733903, 0, 1.0};
Point(12) = {0.079185, 0.734667, 0, 1.0};
Point(13) = {0.075584, 0.735418, 0, 1.0};
Point(14) = {0.071983, 0.736158, 0, 1.0};
Point(15) = {0.068380, 0.736887, 0, 1.0};
Point(16) = {0.064775, 0.737605, 0, 1.0};
Point(17) = {0.061169, 0.738310, 0, 1.0};
Point(18) = {0.057561, 0.739002, 0, 1.0};
Point(19) = {0.053952, 0.739681, 0, 1.0};
Point(20) = {0.050340, 0.740346, 0, 1.0};
Point(21) = {0.046727, 0.740996, 0, 1.0};
Point(22) = {0.043112, 0.741633, 0, 1.0};
Point(23) = {0.039495, 0.742254, 0, 1.0};
Point(24) = {0.035876, 0.742860, 0, 1.0};
Point(25) = {0.032255, 0.743449, 0, 1.0};
Point(26) = {0.028632, 0.744023, 0, 1.0};
Point(27) = {0.025007, 0.744581, 0, 1.0};
Point(28) = {0.021380, 0.745127, 0, 1.0};
Point(29) = {0.017752, 0.745664, 0, 1.0};
Point(30) = {0.014123, 0.746195, 0, 1.0};
Point(31) = {0.010494, 0.746722, 0, 1.0};
Point(32) = {0.006863, 0.747239, 0, 1.0};
Point(33) = {0.003231, 0.747738, 0, 1.0};
Point(34) = {-0.000406, 0.748211, 0, 1.0};
Point(35) = {-0.004046, 0.748647, 0, 1.0};
Point(36) = {-0.007693, 0.749038, 0, 1.0};
Point(37) = {-0.011347, 0.749378, 0, 1.0};
Point(38) = {-0.015008, 0.749658, 0, 1.0};
Point(39) = {-0.018677, 0.749868, 0, 1.0};
Point(40) = {-0.023098, 0.749997, 0, 1.0};
Point(41) = {-0.024576, 0.750000, 0, 1.0};
Point(42) = {-0.026058, 0.749976, 0, 1.0};
Point(43) = {-0.027544, 0.749921, 0, 1.0};
Point(44) = {-0.029035, 0.749825, 0, 1.0};
Point(45) = {-0.030382, 0.749699, 0, 1.0};
Point(46) = {-0.031284, 0.749591, 0, 1.0};
Point(47) = {-0.031886, 0.749505, 0, 1.0};
Point(48) = {-0.032793, 0.749357, 0, 1.0};
Point(49) = {-0.033855, 0.749144, 0, 1.0};
Point(50) = {-0.034925, 0.748876, 0, 1.0};
Point(51) = {-0.035851, 0.748575, 0, 1.0};
Point(52) = {-0.036288, 0.748396, 0, 1.0};
Point(53) = {-0.036636, 0.748223, 0, 1.0};
Point(54) = {-0.037156, 0.747863, 0, 1.0};
Point(55) = {-0.037328, 0.747672, 0, 1.0};
Point(56) = {-0.037422, 0.747517, 0, 1.0};
Point(57) = {-0.037500, 0.747258, 0, 1.0};
Point(58) = {-0.037491, 0.746982, 0, 1.0};
Point(59) = {-0.037440, 0.746805, 0, 1.0};
Point(60) = {-0.037321, 0.746582, 0, 1.0};
Point(61) = {-0.036900, 0.746171, 0, 1.0};
Point(62) = {-0.036599, 0.745985, 0, 1.0};
Point(63) = {-0.036209, 0.745797, 0, 1.0};
Point(64) = {-0.035362, 0.745485, 0, 1.0};
Point(65) = {-0.034364, 0.745195, 0, 1.0};
Point(66) = {-0.033361, 0.744944, 0, 1.0};
Point(67) = {-0.032499, 0.744746, 0, 1.0};
Point(68) = {-0.031924, 0.744620, 0, 1.0};
Point(69) = {-0.031060, 0.744439, 0, 1.0};
Point(70) = {-0.029763, 0.744178, 0, 1.0};
Point(71) = {-0.028320, 0.743897, 0, 1.0};
Point(72) = {-0.026877, 0.743623, 0, 1.0};
Point(73) = {-0.025432, 0.743354, 0, 1.0};
Point(74) = {-0.023988, 0.743088, 0, 1.0};
Point(75) = {-0.019651, 0.742313, 0, 1.0};
Point(76) = {-0.016034, 0.741690, 0, 1.0};
Point(77) = {-0.012415, 0.741086, 0, 1.0};
Point(78) = {-0.008793, 0.740500, 0, 1.0};
Point(79) = {-0.005170, 0.739930, 0, 1.0};
Point(80) = {-0.001544, 0.739374, 0, 1.0};
Point(81) = {0.002083, 0.738832, 0, 1.0};
Point(82) = {0.005712, 0.738302, 0, 1.0};
Point(83) = {0.009342, 0.737785, 0, 1.0};
Point(84) = {0.012974, 0.737276, 0, 1.0};
Point(85) = {0.016606, 0.736775, 0, 1.0};
Point(86) = {0.020240, 0.736279, 0, 1.0};
Point(87) = {0.023874, 0.735791, 0, 1.0};
Point(88) = {0.027509, 0.735312, 0, 1.0};
Point(89) = {0.031146, 0.734846, 0, 1.0};
Point(90) = {0.034785, 0.734394, 0, 1.0};
Point(91) = {0.038426, 0.733957, 0, 1.0};
Point(92) = {0.042068, 0.733534, 0, 1.0};
Point(93) = {0.045713, 0.733124, 0, 1.0};
Point(94) = {0.049359, 0.732729, 0, 1.0};
Point(95) = {0.053007, 0.732347, 0, 1.0};
Point(96) = {0.056656, 0.731980, 0, 1.0};
Point(97) = {0.060308, 0.731628, 0, 1.0};
Point(98) = {0.063962, 0.731292, 0, 1.0};
Point(99) = {0.067617, 0.730971, 0, 1.0};
Point(100) = {0.071275, 0.730667, 0, 1.0};
Point(101) = {0.074935, 0.730379, 0, 1.0};
Point(102) = {0.078597, 0.730109, 0, 1.0};
Point(103) = {0.082262, 0.729859, 0, 1.0};
Point(104) = {0.085930, 0.729634, 0, 1.0};
Point(105) = {0.088867, 0.729472, 0, 1.0};
Point(106) = {0.091806, 0.729327, 0, 1.0};
Point(107) = {0.093276, 0.729259, 0, 1.0};
Point(108) = {0.096216, 0.729126, 0, 1.0};
Point(109) = {0.099155, 0.728983, 0, 1.0};
Point(110) = {0.102091, 0.728812, 0, 1.0};
Point(111) = {0.103952, 0.728679, 0, 1.0};
Point(112) = {0.107941, 0.728302, 0, 1.0};
Point(113) = {0.111242, 0.727871, 0, 1.0};
Point(114) = {-0.111306, -0.728369, 0, 1.0};
Point(115) = {-0.107997, -0.728743, 0, 1.0};
Point(116) = {-0.104039, -0.729358, 0, 1.0};
Point(117) = {-0.102205, -0.729695, 0, 1.0};
Point(118) = {-0.099322, -0.730274, 0, 1.0};
Point(119) = {-0.096444, -0.730892, 0, 1.0};
Point(120) = {-0.093569, -0.731531, 0, 1.0};
Point(121) = {-0.092131, -0.731853, 0, 1.0};
Point(122) = {-0.089256, -0.732494, 0, 1.0};
Point(123) = {-0.086380, -0.733126, 0, 1.0};
Point(124) = {-0.082783, -0.733903, 0, 1.0};
Point(125) = {-0.079185, -0.734667, 0, 1.0};
Point(126) = {-0.075584, -0.735418, 0, 1.0};
Point(127) = {-0.071983, -0.736158, 0, 1.0};
Point(128) = {-0.068380, -0.736887, 0, 1.0};
Point(129) = {-0.064775, -0.737605, 0, 1.0};
Point(130) = {-0.061169, -0.738310, 0, 1.0};
Point(131) = {-0.057561, -0.739002, 0, 1.0};
Point(132) = {-0.053952, -0.739681, 0, 1.0};
Point(133) = {-0.050340, -0.740346, 0, 1.0};
Point(134) = {-0.046727, -0.740996, 0, 1.0};
Point(135) = {-0.043112, -0.741633, 0, 1.0};
Point(136) = {-0.039495, -0.742254, 0, 1.0};
Point(137) = {-0.035876, -0.742860, 0, 1.0};
Point(138) = {-0.032255, -0.743449, 0, 1.0};
Point(139) = {-0.028632, -0.744023, 0, 1.0};
Point(140) = {-0.025007, -0.744581, 0, 1.0};
Point(141) = {-0.021380, -0.745127, 0, 1.0};
Point(142) = {-0.017752, -0.745664, 0, 1.0};
Point(143) = {-0.014123, -0.746195, 0, 1.0};
Point(144) = {-0.010494, -0.746722, 0, 1.0};
Point(145) = {-0.006863, -0.747239, 0, 1.0};
Point(146) = {-0.003231, -0.747738, 0, 1.0};
Point(147) = {0.000406, -0.748211, 0, 1.0};
Point(148) = {0.004046, -0.748647, 0, 1.0};
Point(149) = {0.007693, -0.749038, 0, 1.0};
Point(150) = {0.011347, -0.749378, 0, 1.0};
Point(151) = {0.015008, -0.749658, 0, 1.0};
Point(152) = {0.018677, -0.749868, 0, 1.0};
Point(153) = {0.023098, -0.749997, 0, 1.0};
Point(154) = {0.024576, -0.750000, 0, 1.0};
Point(155) = {0.026058, -0.749976, 0, 1.0};
Point(156) = {0.027544, -0.749921, 0, 1.0};
Point(157) = {0.029035, -0.749825, 0, 1.0};
Point(158) = {0.030382, -0.749699, 0, 1.0};
Point(159) = {0.031284, -0.749591, 0, 1.0};
Point(160) = {0.031886, -0.749505, 0, 1.0};
Point(161) = {0.032793, -0.749357, 0, 1.0};
Point(162) = {0.033855, -0.749144, 0, 1.0};
Point(163) = {0.034925, -0.748876, 0, 1.0};
Point(164) = {0.035851, -0.748575, 0, 1.0};
Point(165) = {0.036288, -0.748396, 0, 1.0};
Point(166) = {0.036636, -0.748223, 0, 1.0};
Point(167) = {0.037156, -0.747863, 0, 1.0};
Point(168) = {0.037328, -0.747672, 0, 1.0};
Point(169) = {0.037422, -0.747517, 0, 1.0};
Point(170) = {0.037500, -0.747258, 0, 1.0};
Point(171) = {0.037491, -0.746982, 0, 1.0};
Point(172) = {0.037440, -0.746805, 0, 1.0};
Point(173) = {0.037321, -0.746582, 0, 1.0};
Point(174) = {0.036900, -0.746171, 0, 1.0};
Point(175) = {0.036599, -0.745985, 0, 1.0};
Point(176) = {0.036209, -0.745797, 0, 1.0};
Point(177) = {0.035362, -0.745485, 0, 1.0};
Point(178) = {0.034364, -0.745195, 0, 1.0};
Point(179) = {0.033361, -0.744944, 0, 1.0};
Point(180) = {0.032499, -0.744746, 0, 1.0};
Point(181) = {0.031924, -0.744620, 0, 1.0};
Point(182) = {0.031060, -0.744439, 0, 1.0};
Point(183) = {0.029763, -0.744178, 0, 1.0};
Point(184) = {0.028320, -0.743897, 0, 1.0};
Point(185) = {0.026877, -0.743623, 0, 1.0};
Point(186) = {0.025432, -0.743354, 0, 1.0};
Point(187) = {0.023988, -0.743088, 0, 1.0};
Point(188) = {0.019651, -0.742313, 0, 1.0};
Point(189) = {0.016034, -0.741690, 0, 1.0};
Point(190) = {0.012415, -0.741086, 0, 1.0};
Point(191) = {0.008793, -0.740500, 0, 1.0};
Point(192) = {0.005170, -0.739930, 0, 1.0};
Point(193) = {0.001544, -0.739374, 0, 1.0};
Point(194) = {-0.002083, -0.738832, 0, 1.0};
Point(195) = {-0.005712, -0.738302, 0, 1.0};
Point(196) = {-0.009342, -0.737785, 0, 1.0};
Point(197) = {-0.012974, -0.737276, 0, 1.0};
Point(198) = {-0.016606, -0.736775, 0, 1.0};
Point(199) = {-0.020240, -0.736279, 0, 1.0};
Point(200) = {-0.023874, -0.735791, 0, 1.0};
Point(201) = {-0.027509, -0.735312, 0, 1.0};
Point(202) = {-0.031146, -0.734846, 0, 1.0};
Point(203) = {-0.034785, -0.734394, 0, 1.0};
Point(204) = {-0.038426, -0.733957, 0, 1.0};
Point(205) = {-0.042068, -0.733534, 0, 1.0};
Point(206) = {-0.045713, -0.733124, 0, 1.0};
Point(207) = {-0.049359, -0.732729, 0, 1.0};
Point(208) = {-0.053007, -0.732347, 0, 1.0};
Point(209) = {-0.056656, -0.731980, 0, 1.0};
Point(210) = {-0.060308, -0.731628, 0, 1.0};
Point(211) = {-0.063962, -0.731292, 0, 1.0};
Point(212) = {-0.067617, -0.730971, 0, 1.0};
Point(213) = {-0.071275, -0.730667, 0, 1.0};
Point(214) = {-0.074935, -0.730379, 0, 1.0};
Point(215) = {-0.078597, -0.730109, 0, 1.0};
Point(216) = {-0.082262, -0.729859, 0, 1.0};
Point(217) = {-0.085930, -0.729634, 0, 1.0};
Point(218) = {-0.088867, -0.729472, 0, 1.0};
Point(219) = {-0.091806, -0.729327, 0, 1.0};
Point(220) = {-0.093276, -0.729259, 0, 1.0};
Point(221) = {-0.096216, -0.729126, 0, 1.0};
Point(222) = {-0.099155, -0.728983, 0, 1.0};
Point(223) = {-0.102091, -0.728812, 0, 1.0};
Point(224) = {-0.103952, -0.728679, 0, 1.0};
Point(225) = {-0.107941, -0.728302, 0, 1.0};
Point(226) = {-0.111242, -0.727871, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:33};
Spline(2) = {33:82};
Spline(3) = {82:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:146};
Spline(6) = {146:195};
Spline(7) = {195:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
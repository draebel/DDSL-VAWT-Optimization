SetFactory("OpenCASCADE");

Point(1) = {0.148408, 0.721159, 0, 1.0};
Point(2) = {0.143997, 0.721658, 0, 1.0};
Point(3) = {0.138719, 0.722477, 0, 1.0};
Point(4) = {0.136273, 0.722926, 0, 1.0};
Point(5) = {0.132429, 0.723698, 0, 1.0};
Point(6) = {0.128592, 0.724523, 0, 1.0};
Point(7) = {0.124758, 0.725375, 0, 1.0};
Point(8) = {0.122842, 0.725804, 0, 1.0};
Point(9) = {0.119008, 0.726658, 0, 1.0};
Point(10) = {0.115173, 0.727501, 0, 1.0};
Point(11) = {0.110378, 0.728538, 0, 1.0};
Point(12) = {0.105580, 0.729556, 0, 1.0};
Point(13) = {0.100779, 0.730557, 0, 1.0};
Point(14) = {0.095977, 0.731544, 0, 1.0};
Point(15) = {0.091173, 0.732516, 0, 1.0};
Point(16) = {0.086367, 0.733473, 0, 1.0};
Point(17) = {0.081559, 0.734414, 0, 1.0};
Point(18) = {0.076748, 0.735336, 0, 1.0};
Point(19) = {0.071935, 0.736241, 0, 1.0};
Point(20) = {0.067120, 0.737128, 0, 1.0};
Point(21) = {0.062302, 0.737995, 0, 1.0};
Point(22) = {0.057483, 0.738844, 0, 1.0};
Point(23) = {0.052660, 0.739673, 0, 1.0};
Point(24) = {0.047835, 0.740480, 0, 1.0};
Point(25) = {0.043007, 0.741266, 0, 1.0};
Point(26) = {0.038176, 0.742030, 0, 1.0};
Point(27) = {0.033342, 0.742775, 0, 1.0};
Point(28) = {0.028506, 0.743503, 0, 1.0};
Point(29) = {0.023669, 0.744219, 0, 1.0};
Point(30) = {0.018831, 0.744927, 0, 1.0};
Point(31) = {0.013992, 0.745629, 0, 1.0};
Point(32) = {0.009151, 0.746318, 0, 1.0};
Point(33) = {0.004308, 0.746985, 0, 1.0};
Point(34) = {-0.000541, 0.747614, 0, 1.0};
Point(35) = {-0.005395, 0.748195, 0, 1.0};
Point(36) = {-0.010258, 0.748717, 0, 1.0};
Point(37) = {-0.015129, 0.749170, 0, 1.0};
Point(38) = {-0.020010, 0.749544, 0, 1.0};
Point(39) = {-0.024903, 0.749825, 0, 1.0};
Point(40) = {-0.030797, 0.749996, 0, 1.0};
Point(41) = {-0.032768, 0.750000, 0, 1.0};
Point(42) = {-0.034744, 0.749968, 0, 1.0};
Point(43) = {-0.036725, 0.749894, 0, 1.0};
Point(44) = {-0.038713, 0.749767, 0, 1.0};
Point(45) = {-0.040510, 0.749599, 0, 1.0};
Point(46) = {-0.041712, 0.749454, 0, 1.0};
Point(47) = {-0.042515, 0.749341, 0, 1.0};
Point(48) = {-0.043724, 0.749142, 0, 1.0};
Point(49) = {-0.045140, 0.748859, 0, 1.0};
Point(50) = {-0.046567, 0.748502, 0, 1.0};
Point(51) = {-0.047802, 0.748100, 0, 1.0};
Point(52) = {-0.048384, 0.747861, 0, 1.0};
Point(53) = {-0.048848, 0.747631, 0, 1.0};
Point(54) = {-0.049541, 0.747150, 0, 1.0};
Point(55) = {-0.049771, 0.746896, 0, 1.0};
Point(56) = {-0.049896, 0.746690, 0, 1.0};
Point(57) = {-0.050000, 0.746344, 0, 1.0};
Point(58) = {-0.049988, 0.745976, 0, 1.0};
Point(59) = {-0.049920, 0.745740, 0, 1.0};
Point(60) = {-0.049761, 0.745442, 0, 1.0};
Point(61) = {-0.049201, 0.744894, 0, 1.0};
Point(62) = {-0.048799, 0.744646, 0, 1.0};
Point(63) = {-0.048279, 0.744396, 0, 1.0};
Point(64) = {-0.047149, 0.743980, 0, 1.0};
Point(65) = {-0.045819, 0.743594, 0, 1.0};
Point(66) = {-0.044482, 0.743258, 0, 1.0};
Point(67) = {-0.043332, 0.742994, 0, 1.0};
Point(68) = {-0.042565, 0.742827, 0, 1.0};
Point(69) = {-0.041414, 0.742585, 0, 1.0};
Point(70) = {-0.039684, 0.742237, 0, 1.0};
Point(71) = {-0.037760, 0.741863, 0, 1.0};
Point(72) = {-0.035835, 0.741498, 0, 1.0};
Point(73) = {-0.033910, 0.741138, 0, 1.0};
Point(74) = {-0.031984, 0.740784, 0, 1.0};
Point(75) = {-0.026202, 0.739750, 0, 1.0};
Point(76) = {-0.021379, 0.738919, 0, 1.0};
Point(77) = {-0.016553, 0.738115, 0, 1.0};
Point(78) = {-0.011724, 0.737333, 0, 1.0};
Point(79) = {-0.006893, 0.736573, 0, 1.0};
Point(80) = {-0.002059, 0.735832, 0, 1.0};
Point(81) = {0.002777, 0.735109, 0, 1.0};
Point(82) = {0.007616, 0.734403, 0, 1.0};
Point(83) = {0.012456, 0.733713, 0, 1.0};
Point(84) = {0.017298, 0.733035, 0, 1.0};
Point(85) = {0.022142, 0.732366, 0, 1.0};
Point(86) = {0.026986, 0.731705, 0, 1.0};
Point(87) = {0.031832, 0.731054, 0, 1.0};
Point(88) = {0.036679, 0.730416, 0, 1.0};
Point(89) = {0.041528, 0.729795, 0, 1.0};
Point(90) = {0.046380, 0.729192, 0, 1.0};
Point(91) = {0.051234, 0.728609, 0, 1.0};
Point(92) = {0.056091, 0.728045, 0, 1.0};
Point(93) = {0.060950, 0.727499, 0, 1.0};
Point(94) = {0.065811, 0.726972, 0, 1.0};
Point(95) = {0.070675, 0.726462, 0, 1.0};
Point(96) = {0.075542, 0.725973, 0, 1.0};
Point(97) = {0.080411, 0.725504, 0, 1.0};
Point(98) = {0.085282, 0.725055, 0, 1.0};
Point(99) = {0.090157, 0.724628, 0, 1.0};
Point(100) = {0.095034, 0.724222, 0, 1.0};
Point(101) = {0.099913, 0.723838, 0, 1.0};
Point(102) = {0.104796, 0.723478, 0, 1.0};
Point(103) = {0.109683, 0.723146, 0, 1.0};
Point(104) = {0.114574, 0.722845, 0, 1.0};
Point(105) = {0.118489, 0.722630, 0, 1.0};
Point(106) = {0.122408, 0.722436, 0, 1.0};
Point(107) = {0.124368, 0.722345, 0, 1.0};
Point(108) = {0.128288, 0.722168, 0, 1.0};
Point(109) = {0.132207, 0.721978, 0, 1.0};
Point(110) = {0.136121, 0.721749, 0, 1.0};
Point(111) = {0.138603, 0.721572, 0, 1.0};
Point(112) = {0.143921, 0.721069, 0, 1.0};
Point(113) = {0.148323, 0.720495, 0, 1.0};
Point(114) = {-0.148408, -0.721159, 0, 1.0};
Point(115) = {-0.143997, -0.721658, 0, 1.0};
Point(116) = {-0.138719, -0.722477, 0, 1.0};
Point(117) = {-0.136273, -0.722926, 0, 1.0};
Point(118) = {-0.132429, -0.723698, 0, 1.0};
Point(119) = {-0.128592, -0.724523, 0, 1.0};
Point(120) = {-0.124758, -0.725375, 0, 1.0};
Point(121) = {-0.122842, -0.725804, 0, 1.0};
Point(122) = {-0.119008, -0.726658, 0, 1.0};
Point(123) = {-0.115173, -0.727501, 0, 1.0};
Point(124) = {-0.110378, -0.728538, 0, 1.0};
Point(125) = {-0.105580, -0.729556, 0, 1.0};
Point(126) = {-0.100779, -0.730557, 0, 1.0};
Point(127) = {-0.095977, -0.731544, 0, 1.0};
Point(128) = {-0.091173, -0.732516, 0, 1.0};
Point(129) = {-0.086367, -0.733473, 0, 1.0};
Point(130) = {-0.081559, -0.734414, 0, 1.0};
Point(131) = {-0.076748, -0.735336, 0, 1.0};
Point(132) = {-0.071935, -0.736241, 0, 1.0};
Point(133) = {-0.067120, -0.737128, 0, 1.0};
Point(134) = {-0.062302, -0.737995, 0, 1.0};
Point(135) = {-0.057483, -0.738844, 0, 1.0};
Point(136) = {-0.052660, -0.739673, 0, 1.0};
Point(137) = {-0.047835, -0.740480, 0, 1.0};
Point(138) = {-0.043007, -0.741266, 0, 1.0};
Point(139) = {-0.038176, -0.742030, 0, 1.0};
Point(140) = {-0.033342, -0.742775, 0, 1.0};
Point(141) = {-0.028506, -0.743503, 0, 1.0};
Point(142) = {-0.023669, -0.744219, 0, 1.0};
Point(143) = {-0.018831, -0.744927, 0, 1.0};
Point(144) = {-0.013992, -0.745629, 0, 1.0};
Point(145) = {-0.009151, -0.746318, 0, 1.0};
Point(146) = {-0.004308, -0.746985, 0, 1.0};
Point(147) = {0.000541, -0.747614, 0, 1.0};
Point(148) = {0.005395, -0.748195, 0, 1.0};
Point(149) = {0.010258, -0.748717, 0, 1.0};
Point(150) = {0.015129, -0.749170, 0, 1.0};
Point(151) = {0.020010, -0.749544, 0, 1.0};
Point(152) = {0.024903, -0.749825, 0, 1.0};
Point(153) = {0.030797, -0.749996, 0, 1.0};
Point(154) = {0.032768, -0.750000, 0, 1.0};
Point(155) = {0.034744, -0.749968, 0, 1.0};
Point(156) = {0.036725, -0.749894, 0, 1.0};
Point(157) = {0.038713, -0.749767, 0, 1.0};
Point(158) = {0.040510, -0.749599, 0, 1.0};
Point(159) = {0.041712, -0.749454, 0, 1.0};
Point(160) = {0.042515, -0.749341, 0, 1.0};
Point(161) = {0.043724, -0.749142, 0, 1.0};
Point(162) = {0.045140, -0.748859, 0, 1.0};
Point(163) = {0.046567, -0.748502, 0, 1.0};
Point(164) = {0.047802, -0.748100, 0, 1.0};
Point(165) = {0.048384, -0.747861, 0, 1.0};
Point(166) = {0.048848, -0.747631, 0, 1.0};
Point(167) = {0.049541, -0.747150, 0, 1.0};
Point(168) = {0.049771, -0.746896, 0, 1.0};
Point(169) = {0.049896, -0.746690, 0, 1.0};
Point(170) = {0.050000, -0.746344, 0, 1.0};
Point(171) = {0.049988, -0.745976, 0, 1.0};
Point(172) = {0.049920, -0.745740, 0, 1.0};
Point(173) = {0.049761, -0.745442, 0, 1.0};
Point(174) = {0.049201, -0.744894, 0, 1.0};
Point(175) = {0.048799, -0.744646, 0, 1.0};
Point(176) = {0.048279, -0.744396, 0, 1.0};
Point(177) = {0.047149, -0.743980, 0, 1.0};
Point(178) = {0.045819, -0.743594, 0, 1.0};
Point(179) = {0.044482, -0.743258, 0, 1.0};
Point(180) = {0.043332, -0.742994, 0, 1.0};
Point(181) = {0.042565, -0.742827, 0, 1.0};
Point(182) = {0.041414, -0.742585, 0, 1.0};
Point(183) = {0.039684, -0.742237, 0, 1.0};
Point(184) = {0.037760, -0.741863, 0, 1.0};
Point(185) = {0.035835, -0.741498, 0, 1.0};
Point(186) = {0.033910, -0.741138, 0, 1.0};
Point(187) = {0.031984, -0.740784, 0, 1.0};
Point(188) = {0.026202, -0.739750, 0, 1.0};
Point(189) = {0.021379, -0.738919, 0, 1.0};
Point(190) = {0.016553, -0.738115, 0, 1.0};
Point(191) = {0.011724, -0.737333, 0, 1.0};
Point(192) = {0.006893, -0.736573, 0, 1.0};
Point(193) = {0.002059, -0.735832, 0, 1.0};
Point(194) = {-0.002777, -0.735109, 0, 1.0};
Point(195) = {-0.007616, -0.734403, 0, 1.0};
Point(196) = {-0.012456, -0.733713, 0, 1.0};
Point(197) = {-0.017298, -0.733035, 0, 1.0};
Point(198) = {-0.022142, -0.732366, 0, 1.0};
Point(199) = {-0.026986, -0.731705, 0, 1.0};
Point(200) = {-0.031832, -0.731054, 0, 1.0};
Point(201) = {-0.036679, -0.730416, 0, 1.0};
Point(202) = {-0.041528, -0.729795, 0, 1.0};
Point(203) = {-0.046380, -0.729192, 0, 1.0};
Point(204) = {-0.051234, -0.728609, 0, 1.0};
Point(205) = {-0.056091, -0.728045, 0, 1.0};
Point(206) = {-0.060950, -0.727499, 0, 1.0};
Point(207) = {-0.065811, -0.726972, 0, 1.0};
Point(208) = {-0.070675, -0.726462, 0, 1.0};
Point(209) = {-0.075542, -0.725973, 0, 1.0};
Point(210) = {-0.080411, -0.725504, 0, 1.0};
Point(211) = {-0.085282, -0.725055, 0, 1.0};
Point(212) = {-0.090157, -0.724628, 0, 1.0};
Point(213) = {-0.095034, -0.724222, 0, 1.0};
Point(214) = {-0.099913, -0.723838, 0, 1.0};
Point(215) = {-0.104796, -0.723478, 0, 1.0};
Point(216) = {-0.109683, -0.723146, 0, 1.0};
Point(217) = {-0.114574, -0.722845, 0, 1.0};
Point(218) = {-0.118489, -0.722630, 0, 1.0};
Point(219) = {-0.122408, -0.722436, 0, 1.0};
Point(220) = {-0.124368, -0.722345, 0, 1.0};
Point(221) = {-0.128288, -0.722168, 0, 1.0};
Point(222) = {-0.132207, -0.721978, 0, 1.0};
Point(223) = {-0.136121, -0.721749, 0, 1.0};
Point(224) = {-0.138603, -0.721572, 0, 1.0};
Point(225) = {-0.143921, -0.721069, 0, 1.0};
Point(226) = {-0.148323, -0.720495, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:33};
Spline(2) = {33:82};
Spline(3) = {82:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:146};
Spline(6) = {146:195};
Spline(7) = {195:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
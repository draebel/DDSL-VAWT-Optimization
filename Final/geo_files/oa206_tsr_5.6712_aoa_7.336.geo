SetFactory("OpenCASCADE");

Point(1) = {0.074204, 0.735580, 0, 1.0};
Point(2) = {0.071998, 0.735829, 0, 1.0};
Point(3) = {0.069360, 0.736239, 0, 1.0};
Point(4) = {0.068137, 0.736463, 0, 1.0};
Point(5) = {0.066215, 0.736849, 0, 1.0};
Point(6) = {0.064296, 0.737261, 0, 1.0};
Point(7) = {0.062379, 0.737688, 0, 1.0};
Point(8) = {0.061421, 0.737902, 0, 1.0};
Point(9) = {0.059504, 0.738329, 0, 1.0};
Point(10) = {0.057587, 0.738751, 0, 1.0};
Point(11) = {0.055189, 0.739269, 0, 1.0};
Point(12) = {0.052790, 0.739778, 0, 1.0};
Point(13) = {0.050390, 0.740278, 0, 1.0};
Point(14) = {0.047989, 0.740772, 0, 1.0};
Point(15) = {0.045587, 0.741258, 0, 1.0};
Point(16) = {0.043183, 0.741737, 0, 1.0};
Point(17) = {0.040779, 0.742207, 0, 1.0};
Point(18) = {0.038374, 0.742668, 0, 1.0};
Point(19) = {0.035968, 0.743121, 0, 1.0};
Point(20) = {0.033560, 0.743564, 0, 1.0};
Point(21) = {0.031151, 0.743997, 0, 1.0};
Point(22) = {0.028741, 0.744422, 0, 1.0};
Point(23) = {0.026330, 0.744836, 0, 1.0};
Point(24) = {0.023917, 0.745240, 0, 1.0};
Point(25) = {0.021503, 0.745633, 0, 1.0};
Point(26) = {0.019088, 0.746015, 0, 1.0};
Point(27) = {0.016671, 0.746387, 0, 1.0};
Point(28) = {0.014253, 0.746751, 0, 1.0};
Point(29) = {0.011835, 0.747109, 0, 1.0};
Point(30) = {0.009415, 0.747464, 0, 1.0};
Point(31) = {0.006996, 0.747814, 0, 1.0};
Point(32) = {0.004576, 0.748159, 0, 1.0};
Point(33) = {0.002154, 0.748492, 0, 1.0};
Point(34) = {-0.000270, 0.748807, 0, 1.0};
Point(35) = {-0.002698, 0.749098, 0, 1.0};
Point(36) = {-0.005129, 0.749359, 0, 1.0};
Point(37) = {-0.007564, 0.749585, 0, 1.0};
Point(38) = {-0.010005, 0.749772, 0, 1.0};
Point(39) = {-0.012452, 0.749912, 0, 1.0};
Point(40) = {-0.015398, 0.749998, 0, 1.0};
Point(41) = {-0.016384, 0.750000, 0, 1.0};
Point(42) = {-0.017372, 0.749984, 0, 1.0};
Point(43) = {-0.018363, 0.749947, 0, 1.0};
Point(44) = {-0.019357, 0.749884, 0, 1.0};
Point(45) = {-0.020255, 0.749800, 0, 1.0};
Point(46) = {-0.020856, 0.749727, 0, 1.0};
Point(47) = {-0.021257, 0.749670, 0, 1.0};
Point(48) = {-0.021862, 0.749571, 0, 1.0};
Point(49) = {-0.022570, 0.749430, 0, 1.0};
Point(50) = {-0.023283, 0.749251, 0, 1.0};
Point(51) = {-0.023901, 0.749050, 0, 1.0};
Point(52) = {-0.024192, 0.748930, 0, 1.0};
Point(53) = {-0.024424, 0.748815, 0, 1.0};
Point(54) = {-0.024771, 0.748575, 0, 1.0};
Point(55) = {-0.024885, 0.748448, 0, 1.0};
Point(56) = {-0.024948, 0.748345, 0, 1.0};
Point(57) = {-0.025000, 0.748172, 0, 1.0};
Point(58) = {-0.024994, 0.747988, 0, 1.0};
Point(59) = {-0.024960, 0.747870, 0, 1.0};
Point(60) = {-0.024881, 0.747721, 0, 1.0};
Point(61) = {-0.024600, 0.747447, 0, 1.0};
Point(62) = {-0.024399, 0.747323, 0, 1.0};
Point(63) = {-0.024139, 0.747198, 0, 1.0};
Point(64) = {-0.023575, 0.746990, 0, 1.0};
Point(65) = {-0.022909, 0.746797, 0, 1.0};
Point(66) = {-0.022241, 0.746629, 0, 1.0};
Point(67) = {-0.021666, 0.746497, 0, 1.0};
Point(68) = {-0.021283, 0.746413, 0, 1.0};
Point(69) = {-0.020707, 0.746292, 0, 1.0};
Point(70) = {-0.019842, 0.746118, 0, 1.0};
Point(71) = {-0.018880, 0.745932, 0, 1.0};
Point(72) = {-0.017918, 0.745749, 0, 1.0};
Point(73) = {-0.016955, 0.745569, 0, 1.0};
Point(74) = {-0.015992, 0.745392, 0, 1.0};
Point(75) = {-0.013101, 0.744875, 0, 1.0};
Point(76) = {-0.010690, 0.744460, 0, 1.0};
Point(77) = {-0.008277, 0.744057, 0, 1.0};
Point(78) = {-0.005862, 0.743667, 0, 1.0};
Point(79) = {-0.003446, 0.743286, 0, 1.0};
Point(80) = {-0.001029, 0.742916, 0, 1.0};
Point(81) = {0.001389, 0.742554, 0, 1.0};
Point(82) = {0.003808, 0.742201, 0, 1.0};
Point(83) = {0.006228, 0.741856, 0, 1.0};
Point(84) = {0.008649, 0.741518, 0, 1.0};
Point(85) = {0.011071, 0.741183, 0, 1.0};
Point(86) = {0.013493, 0.740853, 0, 1.0};
Point(87) = {0.015916, 0.740527, 0, 1.0};
Point(88) = {0.018339, 0.740208, 0, 1.0};
Point(89) = {0.020764, 0.739898, 0, 1.0};
Point(90) = {0.023190, 0.739596, 0, 1.0};
Point(91) = {0.025617, 0.739305, 0, 1.0};
Point(92) = {0.028046, 0.739022, 0, 1.0};
Point(93) = {0.030475, 0.738750, 0, 1.0};
Point(94) = {0.032906, 0.738486, 0, 1.0};
Point(95) = {0.035338, 0.738231, 0, 1.0};
Point(96) = {0.037771, 0.737986, 0, 1.0};
Point(97) = {0.040205, 0.737752, 0, 1.0};
Point(98) = {0.042641, 0.737528, 0, 1.0};
Point(99) = {0.045078, 0.737314, 0, 1.0};
Point(100) = {0.047517, 0.737111, 0, 1.0};
Point(101) = {0.049957, 0.736919, 0, 1.0};
Point(102) = {0.052398, 0.736739, 0, 1.0};
Point(103) = {0.054842, 0.736573, 0, 1.0};
Point(104) = {0.057287, 0.736423, 0, 1.0};
Point(105) = {0.059245, 0.736315, 0, 1.0};
Point(106) = {0.061204, 0.736218, 0, 1.0};
Point(107) = {0.062184, 0.736173, 0, 1.0};
Point(108) = {0.064144, 0.736084, 0, 1.0};
Point(109) = {0.066104, 0.735989, 0, 1.0};
Point(110) = {0.068061, 0.735875, 0, 1.0};
Point(111) = {0.069301, 0.735786, 0, 1.0};
Point(112) = {0.071960, 0.735534, 0, 1.0};
Point(113) = {0.074161, 0.735247, 0, 1.0};
Point(114) = {-0.074204, -0.735580, 0, 1.0};
Point(115) = {-0.071998, -0.735829, 0, 1.0};
Point(116) = {-0.069360, -0.736239, 0, 1.0};
Point(117) = {-0.068137, -0.736463, 0, 1.0};
Point(118) = {-0.066215, -0.736849, 0, 1.0};
Point(119) = {-0.064296, -0.737261, 0, 1.0};
Point(120) = {-0.062379, -0.737688, 0, 1.0};
Point(121) = {-0.061421, -0.737902, 0, 1.0};
Point(122) = {-0.059504, -0.738329, 0, 1.0};
Point(123) = {-0.057587, -0.738751, 0, 1.0};
Point(124) = {-0.055189, -0.739269, 0, 1.0};
Point(125) = {-0.052790, -0.739778, 0, 1.0};
Point(126) = {-0.050390, -0.740278, 0, 1.0};
Point(127) = {-0.047989, -0.740772, 0, 1.0};
Point(128) = {-0.045587, -0.741258, 0, 1.0};
Point(129) = {-0.043183, -0.741737, 0, 1.0};
Point(130) = {-0.040779, -0.742207, 0, 1.0};
Point(131) = {-0.038374, -0.742668, 0, 1.0};
Point(132) = {-0.035968, -0.743121, 0, 1.0};
Point(133) = {-0.033560, -0.743564, 0, 1.0};
Point(134) = {-0.031151, -0.743997, 0, 1.0};
Point(135) = {-0.028741, -0.744422, 0, 1.0};
Point(136) = {-0.026330, -0.744836, 0, 1.0};
Point(137) = {-0.023917, -0.745240, 0, 1.0};
Point(138) = {-0.021503, -0.745633, 0, 1.0};
Point(139) = {-0.019088, -0.746015, 0, 1.0};
Point(140) = {-0.016671, -0.746387, 0, 1.0};
Point(141) = {-0.014253, -0.746751, 0, 1.0};
Point(142) = {-0.011835, -0.747109, 0, 1.0};
Point(143) = {-0.009415, -0.747464, 0, 1.0};
Point(144) = {-0.006996, -0.747814, 0, 1.0};
Point(145) = {-0.004576, -0.748159, 0, 1.0};
Point(146) = {-0.002154, -0.748492, 0, 1.0};
Point(147) = {0.000270, -0.748807, 0, 1.0};
Point(148) = {0.002698, -0.749098, 0, 1.0};
Point(149) = {0.005129, -0.749359, 0, 1.0};
Point(150) = {0.007564, -0.749585, 0, 1.0};
Point(151) = {0.010005, -0.749772, 0, 1.0};
Point(152) = {0.012452, -0.749912, 0, 1.0};
Point(153) = {0.015398, -0.749998, 0, 1.0};
Point(154) = {0.016384, -0.750000, 0, 1.0};
Point(155) = {0.017372, -0.749984, 0, 1.0};
Point(156) = {0.018363, -0.749947, 0, 1.0};
Point(157) = {0.019357, -0.749884, 0, 1.0};
Point(158) = {0.020255, -0.749800, 0, 1.0};
Point(159) = {0.020856, -0.749727, 0, 1.0};
Point(160) = {0.021257, -0.749670, 0, 1.0};
Point(161) = {0.021862, -0.749571, 0, 1.0};
Point(162) = {0.022570, -0.749430, 0, 1.0};
Point(163) = {0.023283, -0.749251, 0, 1.0};
Point(164) = {0.023901, -0.749050, 0, 1.0};
Point(165) = {0.024192, -0.748930, 0, 1.0};
Point(166) = {0.024424, -0.748815, 0, 1.0};
Point(167) = {0.024771, -0.748575, 0, 1.0};
Point(168) = {0.024885, -0.748448, 0, 1.0};
Point(169) = {0.024948, -0.748345, 0, 1.0};
Point(170) = {0.025000, -0.748172, 0, 1.0};
Point(171) = {0.024994, -0.747988, 0, 1.0};
Point(172) = {0.024960, -0.747870, 0, 1.0};
Point(173) = {0.024881, -0.747721, 0, 1.0};
Point(174) = {0.024600, -0.747447, 0, 1.0};
Point(175) = {0.024399, -0.747323, 0, 1.0};
Point(176) = {0.024139, -0.747198, 0, 1.0};
Point(177) = {0.023575, -0.746990, 0, 1.0};
Point(178) = {0.022909, -0.746797, 0, 1.0};
Point(179) = {0.022241, -0.746629, 0, 1.0};
Point(180) = {0.021666, -0.746497, 0, 1.0};
Point(181) = {0.021283, -0.746413, 0, 1.0};
Point(182) = {0.020707, -0.746292, 0, 1.0};
Point(183) = {0.019842, -0.746118, 0, 1.0};
Point(184) = {0.018880, -0.745932, 0, 1.0};
Point(185) = {0.017918, -0.745749, 0, 1.0};
Point(186) = {0.016955, -0.745569, 0, 1.0};
Point(187) = {0.015992, -0.745392, 0, 1.0};
Point(188) = {0.013101, -0.744875, 0, 1.0};
Point(189) = {0.010690, -0.744460, 0, 1.0};
Point(190) = {0.008277, -0.744057, 0, 1.0};
Point(191) = {0.005862, -0.743667, 0, 1.0};
Point(192) = {0.003446, -0.743286, 0, 1.0};
Point(193) = {0.001029, -0.742916, 0, 1.0};
Point(194) = {-0.001389, -0.742554, 0, 1.0};
Point(195) = {-0.003808, -0.742201, 0, 1.0};
Point(196) = {-0.006228, -0.741856, 0, 1.0};
Point(197) = {-0.008649, -0.741518, 0, 1.0};
Point(198) = {-0.011071, -0.741183, 0, 1.0};
Point(199) = {-0.013493, -0.740853, 0, 1.0};
Point(200) = {-0.015916, -0.740527, 0, 1.0};
Point(201) = {-0.018339, -0.740208, 0, 1.0};
Point(202) = {-0.020764, -0.739898, 0, 1.0};
Point(203) = {-0.023190, -0.739596, 0, 1.0};
Point(204) = {-0.025617, -0.739305, 0, 1.0};
Point(205) = {-0.028046, -0.739022, 0, 1.0};
Point(206) = {-0.030475, -0.738750, 0, 1.0};
Point(207) = {-0.032906, -0.738486, 0, 1.0};
Point(208) = {-0.035338, -0.738231, 0, 1.0};
Point(209) = {-0.037771, -0.737986, 0, 1.0};
Point(210) = {-0.040205, -0.737752, 0, 1.0};
Point(211) = {-0.042641, -0.737528, 0, 1.0};
Point(212) = {-0.045078, -0.737314, 0, 1.0};
Point(213) = {-0.047517, -0.737111, 0, 1.0};
Point(214) = {-0.049957, -0.736919, 0, 1.0};
Point(215) = {-0.052398, -0.736739, 0, 1.0};
Point(216) = {-0.054842, -0.736573, 0, 1.0};
Point(217) = {-0.057287, -0.736423, 0, 1.0};
Point(218) = {-0.059245, -0.736315, 0, 1.0};
Point(219) = {-0.061204, -0.736218, 0, 1.0};
Point(220) = {-0.062184, -0.736173, 0, 1.0};
Point(221) = {-0.064144, -0.736084, 0, 1.0};
Point(222) = {-0.066104, -0.735989, 0, 1.0};
Point(223) = {-0.068061, -0.735875, 0, 1.0};
Point(224) = {-0.069301, -0.735786, 0, 1.0};
Point(225) = {-0.071960, -0.735534, 0, 1.0};
Point(226) = {-0.074161, -0.735247, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:33};
Spline(2) = {33:82};
Spline(3) = {82:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:146};
Spline(6) = {146:195};
Spline(7) = {195:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
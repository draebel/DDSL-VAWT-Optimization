SetFactory("OpenCASCADE");

Point(1) = {0.074873, 0.739072, 0, 1.0};
Point(2) = {0.072525, 0.739568, 0, 1.0};
Point(3) = {0.069771, 0.740120, 0, 1.0};
Point(4) = {0.066701, 0.740699, 0, 1.0};
Point(5) = {0.063429, 0.741311, 0, 1.0};
Point(6) = {0.059861, 0.741949, 0, 1.0};
Point(7) = {0.056072, 0.742604, 0, 1.0};
Point(8) = {0.052036, 0.743269, 0, 1.0};
Point(9) = {0.047799, 0.743931, 0, 1.0};
Point(10) = {0.043379, 0.744593, 0, 1.0};
Point(11) = {0.038798, 0.745248, 0, 1.0};
Point(12) = {0.034055, 0.745889, 0, 1.0};
Point(13) = {0.029191, 0.746509, 0, 1.0};
Point(14) = {0.024206, 0.747105, 0, 1.0};
Point(15) = {0.019140, 0.747672, 0, 1.0};
Point(16) = {0.014016, 0.748204, 0, 1.0};
Point(17) = {0.008852, 0.748688, 0, 1.0};
Point(18) = {0.003649, 0.749116, 0, 1.0};
Point(19) = {-0.001531, 0.749475, 0, 1.0};
Point(20) = {-0.006709, 0.749754, 0, 1.0};
Point(21) = {-0.011823, 0.749932, 0, 1.0};
Point(22) = {-0.016872, 0.750000, 0, 1.0};
Point(23) = {-0.021815, 0.749931, 0, 1.0};
Point(24) = {-0.026673, 0.749728, 0, 1.0};
Point(25) = {-0.031365, 0.749377, 0, 1.0};
Point(26) = {-0.035931, 0.748890, 0, 1.0};
Point(27) = {-0.040308, 0.748257, 0, 1.0};
Point(28) = {-0.044501, 0.747500, 0, 1.0};
Point(29) = {-0.048524, 0.746606, 0, 1.0};
Point(30) = {-0.052224, 0.745612, 0, 1.0};
Point(31) = {-0.055736, 0.744515, 0, 1.0};
Point(32) = {-0.058982, 0.743357, 0, 1.0};
Point(33) = {-0.061965, 0.742138, 0, 1.0};
Point(34) = {-0.064661, 0.740889, 0, 1.0};
Point(35) = {-0.067053, 0.739616, 0, 1.0};
Point(36) = {-0.069160, 0.738343, 0, 1.0};
Point(37) = {-0.070943, 0.737077, 0, 1.0};
Point(38) = {-0.072406, 0.735855, 0, 1.0};
Point(39) = {-0.073544, 0.734707, 0, 1.0};
Point(40) = {-0.074361, 0.733613, 0, 1.0};
Point(41) = {-0.074835, 0.732594, 0, 1.0};
Point(42) = {-0.074962, 0.731501, 0, 1.0};
Point(43) = {-0.074792, 0.731243, 0, 1.0};
Point(44) = {-0.074270, 0.730771, 0, 1.0};
Point(45) = {-0.073403, 0.730301, 0, 1.0};
Point(46) = {-0.072214, 0.729848, 0, 1.0};
Point(47) = {-0.070698, 0.729406, 0, 1.0};
Point(48) = {-0.068861, 0.728991, 0, 1.0};
Point(49) = {-0.066701, 0.728596, 0, 1.0};
Point(50) = {-0.064257, 0.728219, 0, 1.0};
Point(51) = {-0.061509, 0.727861, 0, 1.0};
Point(52) = {-0.058477, 0.727531, 0, 1.0};
Point(53) = {-0.055185, 0.727234, 0, 1.0};
Point(54) = {-0.051629, 0.726977, 0, 1.0};
Point(55) = {-0.047890, 0.726756, 0, 1.0};
Point(56) = {-0.043834, 0.726588, 0, 1.0};
Point(57) = {-0.039613, 0.726466, 0, 1.0};
Point(58) = {-0.035213, 0.726399, 0, 1.0};
Point(59) = {-0.030632, 0.726392, 0, 1.0};
Point(60) = {-0.025930, 0.726447, 0, 1.0};
Point(61) = {-0.021070, 0.726572, 0, 1.0};
Point(62) = {-0.016130, 0.726769, 0, 1.0};
Point(63) = {-0.011092, 0.727042, 0, 1.0};
Point(64) = {-0.005995, 0.727400, 0, 1.0};
Point(65) = {-0.000841, 0.727842, 0, 1.0};
Point(66) = {0.004311, 0.728372, 0, 1.0};
Point(67) = {0.009481, 0.728990, 0, 1.0};
Point(68) = {0.014607, 0.729689, 0, 1.0};
Point(69) = {0.019688, 0.730481, 0, 1.0};
Point(70) = {0.024709, 0.731363, 0, 1.0};
Point(71) = {0.029644, 0.732319, 0, 1.0};
Point(72) = {0.034457, 0.733299, 0, 1.0};
Point(73) = {0.039149, 0.734249, 0, 1.0};
Point(74) = {0.043682, 0.735106, 0, 1.0};
Point(75) = {0.048058, 0.735848, 0, 1.0};
Point(76) = {0.052253, 0.736461, 0, 1.0};
Point(77) = {0.056252, 0.736945, 0, 1.0};
Point(78) = {0.060010, 0.737296, 0, 1.0};
Point(79) = {0.063550, 0.737525, 0, 1.0};
Point(80) = {0.066798, 0.737649, 0, 1.0};
Point(81) = {0.069849, 0.737691, 0, 1.0};
Point(82) = {0.072586, 0.737663, 0, 1.0};
Point(83) = {0.074920, 0.737595, 0, 1.0};
Point(84) = {-0.074873, -0.739072, 0, 1.0};
Point(85) = {-0.072525, -0.739568, 0, 1.0};
Point(86) = {-0.069771, -0.740120, 0, 1.0};
Point(87) = {-0.066701, -0.740699, 0, 1.0};
Point(88) = {-0.063429, -0.741311, 0, 1.0};
Point(89) = {-0.059861, -0.741949, 0, 1.0};
Point(90) = {-0.056072, -0.742604, 0, 1.0};
Point(91) = {-0.052036, -0.743269, 0, 1.0};
Point(92) = {-0.047799, -0.743931, 0, 1.0};
Point(93) = {-0.043379, -0.744593, 0, 1.0};
Point(94) = {-0.038798, -0.745248, 0, 1.0};
Point(95) = {-0.034055, -0.745889, 0, 1.0};
Point(96) = {-0.029191, -0.746509, 0, 1.0};
Point(97) = {-0.024206, -0.747105, 0, 1.0};
Point(98) = {-0.019140, -0.747672, 0, 1.0};
Point(99) = {-0.014016, -0.748204, 0, 1.0};
Point(100) = {-0.008852, -0.748688, 0, 1.0};
Point(101) = {-0.003649, -0.749116, 0, 1.0};
Point(102) = {0.001531, -0.749475, 0, 1.0};
Point(103) = {0.006709, -0.749754, 0, 1.0};
Point(104) = {0.011823, -0.749932, 0, 1.0};
Point(105) = {0.016872, -0.750000, 0, 1.0};
Point(106) = {0.021815, -0.749931, 0, 1.0};
Point(107) = {0.026673, -0.749728, 0, 1.0};
Point(108) = {0.031365, -0.749377, 0, 1.0};
Point(109) = {0.035931, -0.748890, 0, 1.0};
Point(110) = {0.040308, -0.748257, 0, 1.0};
Point(111) = {0.044501, -0.747500, 0, 1.0};
Point(112) = {0.048524, -0.746606, 0, 1.0};
Point(113) = {0.052224, -0.745612, 0, 1.0};
Point(114) = {0.055736, -0.744515, 0, 1.0};
Point(115) = {0.058982, -0.743357, 0, 1.0};
Point(116) = {0.061965, -0.742138, 0, 1.0};
Point(117) = {0.064661, -0.740889, 0, 1.0};
Point(118) = {0.067053, -0.739616, 0, 1.0};
Point(119) = {0.069160, -0.738343, 0, 1.0};
Point(120) = {0.070943, -0.737077, 0, 1.0};
Point(121) = {0.072406, -0.735855, 0, 1.0};
Point(122) = {0.073544, -0.734707, 0, 1.0};
Point(123) = {0.074361, -0.733613, 0, 1.0};
Point(124) = {0.074835, -0.732594, 0, 1.0};
Point(125) = {0.074962, -0.731501, 0, 1.0};
Point(126) = {0.074792, -0.731243, 0, 1.0};
Point(127) = {0.074270, -0.730771, 0, 1.0};
Point(128) = {0.073403, -0.730301, 0, 1.0};
Point(129) = {0.072214, -0.729848, 0, 1.0};
Point(130) = {0.070698, -0.729406, 0, 1.0};
Point(131) = {0.068861, -0.728991, 0, 1.0};
Point(132) = {0.066701, -0.728596, 0, 1.0};
Point(133) = {0.064257, -0.728219, 0, 1.0};
Point(134) = {0.061509, -0.727861, 0, 1.0};
Point(135) = {0.058477, -0.727531, 0, 1.0};
Point(136) = {0.055185, -0.727234, 0, 1.0};
Point(137) = {0.051629, -0.726977, 0, 1.0};
Point(138) = {0.047890, -0.726756, 0, 1.0};
Point(139) = {0.043834, -0.726588, 0, 1.0};
Point(140) = {0.039613, -0.726466, 0, 1.0};
Point(141) = {0.035213, -0.726399, 0, 1.0};
Point(142) = {0.030632, -0.726392, 0, 1.0};
Point(143) = {0.025930, -0.726447, 0, 1.0};
Point(144) = {0.021070, -0.726572, 0, 1.0};
Point(145) = {0.016130, -0.726769, 0, 1.0};
Point(146) = {0.011092, -0.727042, 0, 1.0};
Point(147) = {0.005995, -0.727400, 0, 1.0};
Point(148) = {0.000841, -0.727842, 0, 1.0};
Point(149) = {-0.004311, -0.728372, 0, 1.0};
Point(150) = {-0.009481, -0.728990, 0, 1.0};
Point(151) = {-0.014607, -0.729689, 0, 1.0};
Point(152) = {-0.019688, -0.730481, 0, 1.0};
Point(153) = {-0.024709, -0.731363, 0, 1.0};
Point(154) = {-0.029644, -0.732319, 0, 1.0};
Point(155) = {-0.034457, -0.733299, 0, 1.0};
Point(156) = {-0.039149, -0.734249, 0, 1.0};
Point(157) = {-0.043682, -0.735106, 0, 1.0};
Point(158) = {-0.048058, -0.735848, 0, 1.0};
Point(159) = {-0.052253, -0.736461, 0, 1.0};
Point(160) = {-0.056252, -0.736945, 0, 1.0};
Point(161) = {-0.060010, -0.737296, 0, 1.0};
Point(162) = {-0.063550, -0.737525, 0, 1.0};
Point(163) = {-0.066798, -0.737649, 0, 1.0};
Point(164) = {-0.069849, -0.737691, 0, 1.0};
Point(165) = {-0.072586, -0.737663, 0, 1.0};
Point(166) = {-0.074920, -0.737595, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
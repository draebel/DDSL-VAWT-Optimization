SetFactory("OpenCASCADE");

Point(1) = {0.112500, 0.732501, 0, 1.0};
Point(2) = {0.111921, 0.732600, 0, 1.0};
Point(3) = {0.110251, 0.732970, 0, 1.0};
Point(4) = {0.107648, 0.733661, 0, 1.0};
Point(5) = {0.104269, 0.734627, 0, 1.0};
Point(6) = {0.100212, 0.735769, 0, 1.0};
Point(7) = {0.095508, 0.736992, 0, 1.0};
Point(8) = {0.090147, 0.738286, 0, 1.0};
Point(9) = {0.084213, 0.739683, 0, 1.0};
Point(10) = {0.077813, 0.741170, 0, 1.0};
Point(11) = {0.071061, 0.742720, 0, 1.0};
Point(12) = {0.064068, 0.744288, 0, 1.0};
Point(13) = {0.056945, 0.745821, 0, 1.0};
Point(14) = {0.049799, 0.747253, 0, 1.0};
Point(15) = {0.042729, 0.748506, 0, 1.0};
Point(16) = {0.035827, 0.749479, 0, 1.0};
Point(17) = {0.029124, 0.749980, 0, 1.0};
Point(18) = {0.022410, 0.750000, 0, 1.0};
Point(19) = {0.015724, 0.749688, 0, 1.0};
Point(20) = {0.009146, 0.749100, 0, 1.0};
Point(21) = {0.002748, 0.748274, 0, 1.0};
Point(22) = {-0.003394, 0.747242, 0, 1.0};
Point(23) = {-0.009217, 0.746036, 0, 1.0};
Point(24) = {-0.014650, 0.744687, 0, 1.0};
Point(25) = {-0.019635, 0.743227, 0, 1.0};
Point(26) = {-0.024109, 0.741691, 0, 1.0};
Point(27) = {-0.028021, 0.740111, 0, 1.0};
Point(28) = {-0.031310, 0.738524, 0, 1.0};
Point(29) = {-0.033928, 0.736951, 0, 1.0};
Point(30) = {-0.035855, 0.735424, 0, 1.0};
Point(31) = {-0.037047, 0.733996, 0, 1.0};
Point(32) = {-0.037466, 0.732989, 0, 1.0};
Point(33) = {-0.037499, 0.732736, 0, 1.0};
Point(34) = {-0.037500, 0.732705, 0, 1.0};
Point(35) = {-0.037474, 0.732453, 0, 1.0};
Point(36) = {-0.037359, 0.732218, 0, 1.0};
Point(37) = {-0.037170, 0.731975, 0, 1.0};
Point(38) = {-0.036951, 0.731755, 0, 1.0};
Point(39) = {-0.035392, 0.730744, 0, 1.0};
Point(40) = {-0.032931, 0.729704, 0, 1.0};
Point(41) = {-0.029623, 0.728641, 0, 1.0};
Point(42) = {-0.025482, 0.727517, 0, 1.0};
Point(43) = {-0.020613, 0.726227, 0, 1.0};
Point(44) = {-0.015241, 0.724806, 0, 1.0};
Point(45) = {-0.009453, 0.723319, 0, 1.0};
Point(46) = {-0.003383, 0.721819, 0, 1.0};
Point(47) = {0.002836, 0.720297, 0, 1.0};
Point(48) = {0.008873, 0.718984, 0, 1.0};
Point(49) = {0.014785, 0.718327, 0, 1.0};
Point(50) = {0.020974, 0.718362, 0, 1.0};
Point(51) = {0.027454, 0.718933, 0, 1.0};
Point(52) = {0.034278, 0.719960, 0, 1.0};
Point(53) = {0.041408, 0.721305, 0, 1.0};
Point(54) = {0.048775, 0.722864, 0, 1.0};
Point(55) = {0.056296, 0.724539, 0, 1.0};
Point(56) = {0.063872, 0.726233, 0, 1.0};
Point(57) = {0.071388, 0.727856, 0, 1.0};
Point(58) = {0.078713, 0.729324, 0, 1.0};
Point(59) = {0.085699, 0.730571, 0, 1.0};
Point(60) = {0.092192, 0.731547, 0, 1.0};
Point(61) = {0.098032, 0.732230, 0, 1.0};
Point(62) = {0.103061, 0.732624, 0, 1.0};
Point(63) = {0.107137, 0.732761, 0, 1.0};
Point(64) = {0.110124, 0.732699, 0, 1.0};
Point(65) = {0.111911, 0.732566, 0, 1.0};
Point(66) = {-0.112500, -0.732501, 0, 1.0};
Point(67) = {-0.111921, -0.732600, 0, 1.0};
Point(68) = {-0.110251, -0.732970, 0, 1.0};
Point(69) = {-0.107648, -0.733661, 0, 1.0};
Point(70) = {-0.104269, -0.734627, 0, 1.0};
Point(71) = {-0.100212, -0.735769, 0, 1.0};
Point(72) = {-0.095508, -0.736992, 0, 1.0};
Point(73) = {-0.090147, -0.738286, 0, 1.0};
Point(74) = {-0.084213, -0.739683, 0, 1.0};
Point(75) = {-0.077813, -0.741170, 0, 1.0};
Point(76) = {-0.071061, -0.742720, 0, 1.0};
Point(77) = {-0.064068, -0.744288, 0, 1.0};
Point(78) = {-0.056945, -0.745821, 0, 1.0};
Point(79) = {-0.049799, -0.747253, 0, 1.0};
Point(80) = {-0.042729, -0.748506, 0, 1.0};
Point(81) = {-0.035827, -0.749479, 0, 1.0};
Point(82) = {-0.029124, -0.749980, 0, 1.0};
Point(83) = {-0.022410, -0.750000, 0, 1.0};
Point(84) = {-0.015724, -0.749688, 0, 1.0};
Point(85) = {-0.009146, -0.749100, 0, 1.0};
Point(86) = {-0.002748, -0.748274, 0, 1.0};
Point(87) = {0.003394, -0.747242, 0, 1.0};
Point(88) = {0.009217, -0.746036, 0, 1.0};
Point(89) = {0.014650, -0.744687, 0, 1.0};
Point(90) = {0.019635, -0.743227, 0, 1.0};
Point(91) = {0.024109, -0.741691, 0, 1.0};
Point(92) = {0.028021, -0.740111, 0, 1.0};
Point(93) = {0.031310, -0.738524, 0, 1.0};
Point(94) = {0.033928, -0.736951, 0, 1.0};
Point(95) = {0.035855, -0.735424, 0, 1.0};
Point(96) = {0.037047, -0.733996, 0, 1.0};
Point(97) = {0.037466, -0.732989, 0, 1.0};
Point(98) = {0.037499, -0.732736, 0, 1.0};
Point(99) = {0.037500, -0.732705, 0, 1.0};
Point(100) = {0.037474, -0.732453, 0, 1.0};
Point(101) = {0.037359, -0.732218, 0, 1.0};
Point(102) = {0.037170, -0.731975, 0, 1.0};
Point(103) = {0.036951, -0.731755, 0, 1.0};
Point(104) = {0.035392, -0.730744, 0, 1.0};
Point(105) = {0.032931, -0.729704, 0, 1.0};
Point(106) = {0.029623, -0.728641, 0, 1.0};
Point(107) = {0.025482, -0.727517, 0, 1.0};
Point(108) = {0.020613, -0.726227, 0, 1.0};
Point(109) = {0.015241, -0.724806, 0, 1.0};
Point(110) = {0.009453, -0.723319, 0, 1.0};
Point(111) = {0.003383, -0.721819, 0, 1.0};
Point(112) = {-0.002836, -0.720297, 0, 1.0};
Point(113) = {-0.008873, -0.718984, 0, 1.0};
Point(114) = {-0.014785, -0.718327, 0, 1.0};
Point(115) = {-0.020974, -0.718362, 0, 1.0};
Point(116) = {-0.027454, -0.718933, 0, 1.0};
Point(117) = {-0.034278, -0.719960, 0, 1.0};
Point(118) = {-0.041408, -0.721305, 0, 1.0};
Point(119) = {-0.048775, -0.722864, 0, 1.0};
Point(120) = {-0.056296, -0.724539, 0, 1.0};
Point(121) = {-0.063872, -0.726233, 0, 1.0};
Point(122) = {-0.071388, -0.727856, 0, 1.0};
Point(123) = {-0.078713, -0.729324, 0, 1.0};
Point(124) = {-0.085699, -0.730571, 0, 1.0};
Point(125) = {-0.092192, -0.731547, 0, 1.0};
Point(126) = {-0.098032, -0.732230, 0, 1.0};
Point(127) = {-0.103061, -0.732624, 0, 1.0};
Point(128) = {-0.107137, -0.732761, 0, 1.0};
Point(129) = {-0.110124, -0.732699, 0, 1.0};
Point(130) = {-0.111911, -0.732566, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:47};
Spline(3) = {47:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:112};
Spline(7) = {112:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
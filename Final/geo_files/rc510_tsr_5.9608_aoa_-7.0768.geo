SetFactory("OpenCASCADE");

Point(1) = {0.111343, 0.749457, 0, 1.0};
Point(2) = {0.107587, 0.749302, 0, 1.0};
Point(3) = {0.103845, 0.749179, 0, 1.0};
Point(4) = {0.100101, 0.749089, 0, 1.0};
Point(5) = {0.096352, 0.749031, 0, 1.0};
Point(6) = {0.092604, 0.749002, 0, 1.0};
Point(7) = {0.088866, 0.749001, 0, 1.0};
Point(8) = {0.085134, 0.749028, 0, 1.0};
Point(9) = {0.081409, 0.749084, 0, 1.0};
Point(10) = {0.077692, 0.749170, 0, 1.0};
Point(11) = {0.073945, 0.749285, 0, 1.0};
Point(12) = {0.070179, 0.749421, 0, 1.0};
Point(13) = {0.066425, 0.749564, 0, 1.0};
Point(14) = {0.062656, 0.749702, 0, 1.0};
Point(15) = {0.058876, 0.749823, 0, 1.0};
Point(16) = {0.055100, 0.749916, 0, 1.0};
Point(17) = {0.051325, 0.749976, 0, 1.0};
Point(18) = {0.047556, 0.750000, 0, 1.0};
Point(19) = {0.043794, 0.749987, 0, 1.0};
Point(20) = {0.040034, 0.749935, 0, 1.0};
Point(21) = {0.036274, 0.749838, 0, 1.0};
Point(22) = {0.032531, 0.749688, 0, 1.0};
Point(23) = {0.028744, 0.749473, 0, 1.0};
Point(24) = {0.024954, 0.749191, 0, 1.0};
Point(25) = {0.021200, 0.748847, 0, 1.0};
Point(26) = {0.017443, 0.748444, 0, 1.0};
Point(27) = {0.013716, 0.747994, 0, 1.0};
Point(28) = {0.006276, 0.746971, 0, 1.0};
Point(29) = {-0.001175, 0.745805, 0, 1.0};
Point(30) = {-0.004908, 0.745168, 0, 1.0};
Point(31) = {-0.008636, 0.744489, 0, 1.0};
Point(32) = {-0.012375, 0.743754, 0, 1.0};
Point(33) = {-0.016110, 0.742943, 0, 1.0};
Point(34) = {-0.019870, 0.742012, 0, 1.0};
Point(35) = {-0.023641, 0.740902, 0, 1.0};
Point(36) = {-0.027443, 0.739507, 0, 1.0};
Point(37) = {-0.031196, 0.737696, 0, 1.0};
Point(38) = {-0.034505, 0.735452, 0, 1.0};
Point(39) = {-0.036416, 0.733520, 0, 1.0};
Point(40) = {-0.037233, 0.732200, 0, 1.0};
Point(41) = {-0.037500, 0.730859, 0, 1.0};
Point(42) = {-0.036848, 0.729793, 0, 1.0};
Point(43) = {-0.035503, 0.729233, 0, 1.0};
Point(44) = {-0.035165, 0.729158, 0, 1.0};
Point(45) = {-0.033857, 0.728972, 0, 1.0};
Point(46) = {-0.032219, 0.728879, 0, 1.0};
Point(47) = {-0.028278, 0.728981, 0, 1.0};
Point(48) = {-0.024752, 0.729274, 0, 1.0};
Point(49) = {-0.021237, 0.729650, 0, 1.0};
Point(50) = {-0.017660, 0.730055, 0, 1.0};
Point(51) = {-0.014050, 0.730448, 0, 1.0};
Point(52) = {-0.010398, 0.730813, 0, 1.0};
Point(53) = {-0.006738, 0.731155, 0, 1.0};
Point(54) = {-0.003060, 0.731489, 0, 1.0};
Point(55) = {0.000617, 0.731821, 0, 1.0};
Point(56) = {0.007999, 0.732502, 0, 1.0};
Point(57) = {0.015404, 0.733218, 0, 1.0};
Point(58) = {0.019104, 0.733597, 0, 1.0};
Point(59) = {0.022779, 0.733992, 0, 1.0};
Point(60) = {0.026460, 0.734410, 0, 1.0};
Point(61) = {0.030109, 0.734853, 0, 1.0};
Point(62) = {0.033766, 0.735325, 0, 1.0};
Point(63) = {0.037470, 0.735836, 0, 1.0};
Point(64) = {0.041160, 0.736374, 0, 1.0};
Point(65) = {0.044852, 0.736937, 0, 1.0};
Point(66) = {0.048544, 0.737519, 0, 1.0};
Point(67) = {0.052234, 0.738115, 0, 1.0};
Point(68) = {0.055919, 0.738719, 0, 1.0};
Point(69) = {0.059607, 0.739328, 0, 1.0};
Point(70) = {0.063293, 0.739939, 0, 1.0};
Point(71) = {0.066993, 0.740552, 0, 1.0};
Point(72) = {0.070708, 0.741168, 0, 1.0};
Point(73) = {0.074409, 0.741786, 0, 1.0};
Point(74) = {0.078126, 0.742415, 0, 1.0};
Point(75) = {0.081868, 0.743063, 0, 1.0};
Point(76) = {0.085595, 0.743732, 0, 1.0};
Point(77) = {0.089310, 0.744429, 0, 1.0};
Point(78) = {0.093010, 0.745159, 0, 1.0};
Point(79) = {0.096693, 0.745924, 0, 1.0};
Point(80) = {0.100372, 0.746698, 0, 1.0};
Point(81) = {0.104050, 0.747477, 0, 1.0};
Point(82) = {0.107723, 0.748287, 0, 1.0};
Point(83) = {0.111372, 0.749221, 0, 1.0};
Point(84) = {-0.111343, -0.749457, 0, 1.0};
Point(85) = {-0.107587, -0.749302, 0, 1.0};
Point(86) = {-0.103845, -0.749179, 0, 1.0};
Point(87) = {-0.100101, -0.749089, 0, 1.0};
Point(88) = {-0.096352, -0.749031, 0, 1.0};
Point(89) = {-0.092604, -0.749002, 0, 1.0};
Point(90) = {-0.088866, -0.749001, 0, 1.0};
Point(91) = {-0.085134, -0.749028, 0, 1.0};
Point(92) = {-0.081409, -0.749084, 0, 1.0};
Point(93) = {-0.077692, -0.749170, 0, 1.0};
Point(94) = {-0.073945, -0.749285, 0, 1.0};
Point(95) = {-0.070179, -0.749421, 0, 1.0};
Point(96) = {-0.066425, -0.749564, 0, 1.0};
Point(97) = {-0.062656, -0.749702, 0, 1.0};
Point(98) = {-0.058876, -0.749823, 0, 1.0};
Point(99) = {-0.055100, -0.749916, 0, 1.0};
Point(100) = {-0.051325, -0.749976, 0, 1.0};
Point(101) = {-0.047556, -0.750000, 0, 1.0};
Point(102) = {-0.043794, -0.749987, 0, 1.0};
Point(103) = {-0.040034, -0.749935, 0, 1.0};
Point(104) = {-0.036274, -0.749838, 0, 1.0};
Point(105) = {-0.032531, -0.749688, 0, 1.0};
Point(106) = {-0.028744, -0.749473, 0, 1.0};
Point(107) = {-0.024954, -0.749191, 0, 1.0};
Point(108) = {-0.021200, -0.748847, 0, 1.0};
Point(109) = {-0.017443, -0.748444, 0, 1.0};
Point(110) = {-0.013716, -0.747994, 0, 1.0};
Point(111) = {-0.006276, -0.746971, 0, 1.0};
Point(112) = {0.001175, -0.745805, 0, 1.0};
Point(113) = {0.004908, -0.745168, 0, 1.0};
Point(114) = {0.008636, -0.744489, 0, 1.0};
Point(115) = {0.012375, -0.743754, 0, 1.0};
Point(116) = {0.016110, -0.742943, 0, 1.0};
Point(117) = {0.019870, -0.742012, 0, 1.0};
Point(118) = {0.023641, -0.740902, 0, 1.0};
Point(119) = {0.027443, -0.739507, 0, 1.0};
Point(120) = {0.031196, -0.737696, 0, 1.0};
Point(121) = {0.034505, -0.735452, 0, 1.0};
Point(122) = {0.036416, -0.733520, 0, 1.0};
Point(123) = {0.037233, -0.732200, 0, 1.0};
Point(124) = {0.037500, -0.730859, 0, 1.0};
Point(125) = {0.036848, -0.729793, 0, 1.0};
Point(126) = {0.035503, -0.729233, 0, 1.0};
Point(127) = {0.035165, -0.729158, 0, 1.0};
Point(128) = {0.033857, -0.728972, 0, 1.0};
Point(129) = {0.032219, -0.728879, 0, 1.0};
Point(130) = {0.028278, -0.728981, 0, 1.0};
Point(131) = {0.024752, -0.729274, 0, 1.0};
Point(132) = {0.021237, -0.729650, 0, 1.0};
Point(133) = {0.017660, -0.730055, 0, 1.0};
Point(134) = {0.014050, -0.730448, 0, 1.0};
Point(135) = {0.010398, -0.730813, 0, 1.0};
Point(136) = {0.006738, -0.731155, 0, 1.0};
Point(137) = {0.003060, -0.731489, 0, 1.0};
Point(138) = {-0.000617, -0.731821, 0, 1.0};
Point(139) = {-0.007999, -0.732502, 0, 1.0};
Point(140) = {-0.015404, -0.733218, 0, 1.0};
Point(141) = {-0.019104, -0.733597, 0, 1.0};
Point(142) = {-0.022779, -0.733992, 0, 1.0};
Point(143) = {-0.026460, -0.734410, 0, 1.0};
Point(144) = {-0.030109, -0.734853, 0, 1.0};
Point(145) = {-0.033766, -0.735325, 0, 1.0};
Point(146) = {-0.037470, -0.735836, 0, 1.0};
Point(147) = {-0.041160, -0.736374, 0, 1.0};
Point(148) = {-0.044852, -0.736937, 0, 1.0};
Point(149) = {-0.048544, -0.737519, 0, 1.0};
Point(150) = {-0.052234, -0.738115, 0, 1.0};
Point(151) = {-0.055919, -0.738719, 0, 1.0};
Point(152) = {-0.059607, -0.739328, 0, 1.0};
Point(153) = {-0.063293, -0.739939, 0, 1.0};
Point(154) = {-0.066993, -0.740552, 0, 1.0};
Point(155) = {-0.070708, -0.741168, 0, 1.0};
Point(156) = {-0.074409, -0.741786, 0, 1.0};
Point(157) = {-0.078126, -0.742415, 0, 1.0};
Point(158) = {-0.081868, -0.743063, 0, 1.0};
Point(159) = {-0.085595, -0.743732, 0, 1.0};
Point(160) = {-0.089310, -0.744429, 0, 1.0};
Point(161) = {-0.093010, -0.745159, 0, 1.0};
Point(162) = {-0.096693, -0.745924, 0, 1.0};
Point(163) = {-0.100372, -0.746698, 0, 1.0};
Point(164) = {-0.104050, -0.747477, 0, 1.0};
Point(165) = {-0.107723, -0.748287, 0, 1.0};
Point(166) = {-0.111372, -0.749221, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:56};
Spline(3) = {56:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:112};
Spline(6) = {112:139};
Spline(7) = {139:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074347, 0.749191, 0, 1.0};
Point(2) = {0.072863, 0.749145, 0, 1.0};
Point(3) = {0.068961, 0.749051, 0, 1.0};
Point(4) = {0.065054, 0.748990, 0, 1.0};
Point(5) = {0.061149, 0.748960, 0, 1.0};
Point(6) = {0.057253, 0.748959, 0, 1.0};
Point(7) = {0.053365, 0.748987, 0, 1.0};
Point(8) = {0.049483, 0.749046, 0, 1.0};
Point(9) = {0.045610, 0.749135, 0, 1.0};
Point(10) = {0.041705, 0.749255, 0, 1.0};
Point(11) = {0.037780, 0.749396, 0, 1.0};
Point(12) = {0.033869, 0.749546, 0, 1.0};
Point(13) = {0.029941, 0.749690, 0, 1.0};
Point(14) = {0.026002, 0.749815, 0, 1.0};
Point(15) = {0.022067, 0.749912, 0, 1.0};
Point(16) = {0.018133, 0.749975, 0, 1.0};
Point(17) = {0.014206, 0.750000, 0, 1.0};
Point(18) = {0.010285, 0.749987, 0, 1.0};
Point(19) = {0.006367, 0.749932, 0, 1.0};
Point(20) = {0.002449, 0.749831, 0, 1.0};
Point(21) = {-0.001451, 0.749674, 0, 1.0};
Point(22) = {-0.005398, 0.749451, 0, 1.0};
Point(23) = {-0.009348, 0.749157, 0, 1.0};
Point(24) = {-0.013259, 0.748799, 0, 1.0};
Point(25) = {-0.017174, 0.748379, 0, 1.0};
Point(26) = {-0.021058, 0.747909, 0, 1.0};
Point(27) = {-0.028811, 0.746843, 0, 1.0};
Point(28) = {-0.036576, 0.745629, 0, 1.0};
Point(29) = {-0.040466, 0.744965, 0, 1.0};
Point(30) = {-0.044351, 0.744257, 0, 1.0};
Point(31) = {-0.048246, 0.743491, 0, 1.0};
Point(32) = {-0.052138, 0.742646, 0, 1.0};
Point(33) = {-0.056057, 0.741676, 0, 1.0};
Point(34) = {-0.059986, 0.740519, 0, 1.0};
Point(35) = {-0.063948, 0.739066, 0, 1.0};
Point(36) = {-0.067860, 0.737179, 0, 1.0};
Point(37) = {-0.071308, 0.734840, 0, 1.0};
Point(38) = {-0.073299, 0.732827, 0, 1.0};
Point(39) = {-0.074150, 0.731451, 0, 1.0};
Point(40) = {-0.074429, 0.730054, 0, 1.0};
Point(41) = {-0.073749, 0.728943, 0, 1.0};
Point(42) = {-0.072348, 0.728359, 0, 1.0};
Point(43) = {-0.071996, 0.728282, 0, 1.0};
Point(44) = {-0.070632, 0.728087, 0, 1.0};
Point(45) = {-0.068926, 0.727990, 0, 1.0};
Point(46) = {-0.064818, 0.728096, 0, 1.0};
Point(47) = {-0.061145, 0.728402, 0, 1.0};
Point(48) = {-0.057481, 0.728794, 0, 1.0};
Point(49) = {-0.053754, 0.729216, 0, 1.0};
Point(50) = {-0.049993, 0.729625, 0, 1.0};
Point(51) = {-0.046187, 0.730006, 0, 1.0};
Point(52) = {-0.042373, 0.730363, 0, 1.0};
Point(53) = {-0.038540, 0.730710, 0, 1.0};
Point(54) = {-0.034708, 0.731057, 0, 1.0};
Point(55) = {-0.027016, 0.731766, 0, 1.0};
Point(56) = {-0.019299, 0.732513, 0, 1.0};
Point(57) = {-0.015443, 0.732907, 0, 1.0};
Point(58) = {-0.011614, 0.733318, 0, 1.0};
Point(59) = {-0.007778, 0.733754, 0, 1.0};
Point(60) = {-0.003975, 0.734215, 0, 1.0};
Point(61) = {-0.000164, 0.734707, 0, 1.0};
Point(62) = {0.003695, 0.735240, 0, 1.0};
Point(63) = {0.007541, 0.735801, 0, 1.0};
Point(64) = {0.011388, 0.736388, 0, 1.0};
Point(65) = {0.015236, 0.736994, 0, 1.0};
Point(66) = {0.019080, 0.737615, 0, 1.0};
Point(67) = {0.022920, 0.738244, 0, 1.0};
Point(68) = {0.026763, 0.738879, 0, 1.0};
Point(69) = {0.030605, 0.739516, 0, 1.0};
Point(70) = {0.034460, 0.740154, 0, 1.0};
Point(71) = {0.038332, 0.740797, 0, 1.0};
Point(72) = {0.042188, 0.741440, 0, 1.0};
Point(73) = {0.046062, 0.742096, 0, 1.0};
Point(74) = {0.049961, 0.742771, 0, 1.0};
Point(75) = {0.053845, 0.743468, 0, 1.0};
Point(76) = {0.057716, 0.744195, 0, 1.0};
Point(77) = {0.061571, 0.744955, 0, 1.0};
Point(78) = {0.065410, 0.745753, 0, 1.0};
Point(79) = {0.069243, 0.746559, 0, 1.0};
Point(80) = {0.073076, 0.747371, 0, 1.0};
Point(81) = {0.074534, 0.747684, 0, 1.0};
Point(82) = {-0.074347, -0.749191, 0, 1.0};
Point(83) = {-0.072863, -0.749145, 0, 1.0};
Point(84) = {-0.068961, -0.749051, 0, 1.0};
Point(85) = {-0.065054, -0.748990, 0, 1.0};
Point(86) = {-0.061149, -0.748960, 0, 1.0};
Point(87) = {-0.057253, -0.748959, 0, 1.0};
Point(88) = {-0.053365, -0.748987, 0, 1.0};
Point(89) = {-0.049483, -0.749046, 0, 1.0};
Point(90) = {-0.045610, -0.749135, 0, 1.0};
Point(91) = {-0.041705, -0.749255, 0, 1.0};
Point(92) = {-0.037780, -0.749396, 0, 1.0};
Point(93) = {-0.033869, -0.749546, 0, 1.0};
Point(94) = {-0.029941, -0.749690, 0, 1.0};
Point(95) = {-0.026002, -0.749815, 0, 1.0};
Point(96) = {-0.022067, -0.749912, 0, 1.0};
Point(97) = {-0.018133, -0.749975, 0, 1.0};
Point(98) = {-0.014206, -0.750000, 0, 1.0};
Point(99) = {-0.010285, -0.749987, 0, 1.0};
Point(100) = {-0.006367, -0.749932, 0, 1.0};
Point(101) = {-0.002449, -0.749831, 0, 1.0};
Point(102) = {0.001451, -0.749674, 0, 1.0};
Point(103) = {0.005398, -0.749451, 0, 1.0};
Point(104) = {0.009348, -0.749157, 0, 1.0};
Point(105) = {0.013259, -0.748799, 0, 1.0};
Point(106) = {0.017174, -0.748379, 0, 1.0};
Point(107) = {0.021058, -0.747909, 0, 1.0};
Point(108) = {0.028811, -0.746843, 0, 1.0};
Point(109) = {0.036576, -0.745629, 0, 1.0};
Point(110) = {0.040466, -0.744965, 0, 1.0};
Point(111) = {0.044351, -0.744257, 0, 1.0};
Point(112) = {0.048246, -0.743491, 0, 1.0};
Point(113) = {0.052138, -0.742646, 0, 1.0};
Point(114) = {0.056057, -0.741676, 0, 1.0};
Point(115) = {0.059986, -0.740519, 0, 1.0};
Point(116) = {0.063948, -0.739066, 0, 1.0};
Point(117) = {0.067860, -0.737179, 0, 1.0};
Point(118) = {0.071308, -0.734840, 0, 1.0};
Point(119) = {0.073299, -0.732827, 0, 1.0};
Point(120) = {0.074150, -0.731451, 0, 1.0};
Point(121) = {0.074429, -0.730054, 0, 1.0};
Point(122) = {0.073749, -0.728943, 0, 1.0};
Point(123) = {0.072348, -0.728359, 0, 1.0};
Point(124) = {0.071996, -0.728282, 0, 1.0};
Point(125) = {0.070632, -0.728087, 0, 1.0};
Point(126) = {0.068926, -0.727990, 0, 1.0};
Point(127) = {0.064818, -0.728096, 0, 1.0};
Point(128) = {0.061145, -0.728402, 0, 1.0};
Point(129) = {0.057481, -0.728794, 0, 1.0};
Point(130) = {0.053754, -0.729216, 0, 1.0};
Point(131) = {0.049993, -0.729625, 0, 1.0};
Point(132) = {0.046187, -0.730006, 0, 1.0};
Point(133) = {0.042373, -0.730363, 0, 1.0};
Point(134) = {0.038540, -0.730710, 0, 1.0};
Point(135) = {0.034708, -0.731057, 0, 1.0};
Point(136) = {0.027016, -0.731766, 0, 1.0};
Point(137) = {0.019299, -0.732513, 0, 1.0};
Point(138) = {0.015443, -0.732907, 0, 1.0};
Point(139) = {0.011614, -0.733318, 0, 1.0};
Point(140) = {0.007778, -0.733754, 0, 1.0};
Point(141) = {0.003975, -0.734215, 0, 1.0};
Point(142) = {0.000164, -0.734707, 0, 1.0};
Point(143) = {-0.003695, -0.735240, 0, 1.0};
Point(144) = {-0.007541, -0.735801, 0, 1.0};
Point(145) = {-0.011388, -0.736388, 0, 1.0};
Point(146) = {-0.015236, -0.736994, 0, 1.0};
Point(147) = {-0.019080, -0.737615, 0, 1.0};
Point(148) = {-0.022920, -0.738244, 0, 1.0};
Point(149) = {-0.026763, -0.738879, 0, 1.0};
Point(150) = {-0.030605, -0.739516, 0, 1.0};
Point(151) = {-0.034460, -0.740154, 0, 1.0};
Point(152) = {-0.038332, -0.740797, 0, 1.0};
Point(153) = {-0.042188, -0.741440, 0, 1.0};
Point(154) = {-0.046062, -0.742096, 0, 1.0};
Point(155) = {-0.049961, -0.742771, 0, 1.0};
Point(156) = {-0.053845, -0.743468, 0, 1.0};
Point(157) = {-0.057716, -0.744195, 0, 1.0};
Point(158) = {-0.061571, -0.744955, 0, 1.0};
Point(159) = {-0.065410, -0.745753, 0, 1.0};
Point(160) = {-0.069243, -0.746559, 0, 1.0};
Point(161) = {-0.073076, -0.747371, 0, 1.0};
Point(162) = {-0.074534, -0.747684, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:54};
Spline(3) = {54:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:109};
Spline(6) = {109:135};
Spline(7) = {135:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
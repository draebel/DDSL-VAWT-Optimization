SetFactory("OpenCASCADE");

Point(1) = {0.148457, 0.749276, 0, 1.0};
Point(2) = {0.143449, 0.749069, 0, 1.0};
Point(3) = {0.138460, 0.748905, 0, 1.0};
Point(4) = {0.133468, 0.748785, 0, 1.0};
Point(5) = {0.128469, 0.748707, 0, 1.0};
Point(6) = {0.123473, 0.748669, 0, 1.0};
Point(7) = {0.118488, 0.748668, 0, 1.0};
Point(8) = {0.113512, 0.748704, 0, 1.0};
Point(9) = {0.108545, 0.748779, 0, 1.0};
Point(10) = {0.103590, 0.748894, 0, 1.0};
Point(11) = {0.098593, 0.749047, 0, 1.0};
Point(12) = {0.093572, 0.749228, 0, 1.0};
Point(13) = {0.088567, 0.749419, 0, 1.0};
Point(14) = {0.083542, 0.749603, 0, 1.0};
Point(15) = {0.078501, 0.749764, 0, 1.0};
Point(16) = {0.073466, 0.749888, 0, 1.0};
Point(17) = {0.068433, 0.749968, 0, 1.0};
Point(18) = {0.063408, 0.750000, 0, 1.0};
Point(19) = {0.058392, 0.749983, 0, 1.0};
Point(20) = {0.053379, 0.749913, 0, 1.0};
Point(21) = {0.048365, 0.749783, 0, 1.0};
Point(22) = {0.043375, 0.749583, 0, 1.0};
Point(23) = {0.038325, 0.749297, 0, 1.0};
Point(24) = {0.033271, 0.748922, 0, 1.0};
Point(25) = {0.028266, 0.748463, 0, 1.0};
Point(26) = {0.023258, 0.747925, 0, 1.0};
Point(27) = {0.018288, 0.747325, 0, 1.0};
Point(28) = {0.008369, 0.745961, 0, 1.0};
Point(29) = {-0.001567, 0.744407, 0, 1.0};
Point(30) = {-0.006544, 0.743558, 0, 1.0};
Point(31) = {-0.011515, 0.742652, 0, 1.0};
Point(32) = {-0.016500, 0.741672, 0, 1.0};
Point(33) = {-0.021479, 0.740590, 0, 1.0};
Point(34) = {-0.026493, 0.739349, 0, 1.0};
Point(35) = {-0.031521, 0.737870, 0, 1.0};
Point(36) = {-0.036590, 0.736010, 0, 1.0};
Point(37) = {-0.041595, 0.733595, 0, 1.0};
Point(38) = {-0.046007, 0.730603, 0, 1.0};
Point(39) = {-0.048555, 0.728027, 0, 1.0};
Point(40) = {-0.049643, 0.726267, 0, 1.0};
Point(41) = {-0.050000, 0.724479, 0, 1.0};
Point(42) = {-0.049131, 0.723057, 0, 1.0};
Point(43) = {-0.047337, 0.722311, 0, 1.0};
Point(44) = {-0.046887, 0.722211, 0, 1.0};
Point(45) = {-0.045142, 0.721962, 0, 1.0};
Point(46) = {-0.042959, 0.721838, 0, 1.0};
Point(47) = {-0.037704, 0.721974, 0, 1.0};
Point(48) = {-0.033003, 0.722365, 0, 1.0};
Point(49) = {-0.028315, 0.722867, 0, 1.0};
Point(50) = {-0.023547, 0.723407, 0, 1.0};
Point(51) = {-0.018734, 0.723930, 0, 1.0};
Point(52) = {-0.013865, 0.724418, 0, 1.0};
Point(53) = {-0.008984, 0.724874, 0, 1.0};
Point(54) = {-0.004081, 0.725318, 0, 1.0};
Point(55) = {0.000823, 0.725762, 0, 1.0};
Point(56) = {0.010665, 0.726669, 0, 1.0};
Point(57) = {0.020539, 0.727625, 0, 1.0};
Point(58) = {0.025473, 0.728129, 0, 1.0};
Point(59) = {0.030372, 0.728655, 0, 1.0};
Point(60) = {0.035280, 0.729213, 0, 1.0};
Point(61) = {0.040146, 0.729803, 0, 1.0};
Point(62) = {0.045022, 0.730433, 0, 1.0};
Point(63) = {0.049960, 0.731115, 0, 1.0};
Point(64) = {0.054880, 0.731832, 0, 1.0};
Point(65) = {0.059803, 0.732583, 0, 1.0};
Point(66) = {0.064726, 0.733359, 0, 1.0};
Point(67) = {0.069645, 0.734154, 0, 1.0};
Point(68) = {0.074558, 0.734959, 0, 1.0};
Point(69) = {0.079475, 0.735771, 0, 1.0};
Point(70) = {0.084391, 0.736585, 0, 1.0};
Point(71) = {0.089323, 0.737403, 0, 1.0};
Point(72) = {0.094277, 0.738224, 0, 1.0};
Point(73) = {0.099212, 0.739048, 0, 1.0};
Point(74) = {0.104169, 0.739886, 0, 1.0};
Point(75) = {0.109157, 0.740751, 0, 1.0};
Point(76) = {0.114127, 0.741643, 0, 1.0};
Point(77) = {0.119080, 0.742572, 0, 1.0};
Point(78) = {0.124013, 0.743545, 0, 1.0};
Point(79) = {0.128924, 0.744566, 0, 1.0};
Point(80) = {0.133829, 0.745597, 0, 1.0};
Point(81) = {0.138733, 0.746636, 0, 1.0};
Point(82) = {0.143631, 0.747716, 0, 1.0};
Point(83) = {0.148496, 0.748962, 0, 1.0};
Point(84) = {-0.148457, -0.749276, 0, 1.0};
Point(85) = {-0.143449, -0.749069, 0, 1.0};
Point(86) = {-0.138460, -0.748905, 0, 1.0};
Point(87) = {-0.133468, -0.748785, 0, 1.0};
Point(88) = {-0.128469, -0.748707, 0, 1.0};
Point(89) = {-0.123473, -0.748669, 0, 1.0};
Point(90) = {-0.118488, -0.748668, 0, 1.0};
Point(91) = {-0.113512, -0.748704, 0, 1.0};
Point(92) = {-0.108545, -0.748779, 0, 1.0};
Point(93) = {-0.103590, -0.748894, 0, 1.0};
Point(94) = {-0.098593, -0.749047, 0, 1.0};
Point(95) = {-0.093572, -0.749228, 0, 1.0};
Point(96) = {-0.088567, -0.749419, 0, 1.0};
Point(97) = {-0.083542, -0.749603, 0, 1.0};
Point(98) = {-0.078501, -0.749764, 0, 1.0};
Point(99) = {-0.073466, -0.749888, 0, 1.0};
Point(100) = {-0.068433, -0.749968, 0, 1.0};
Point(101) = {-0.063408, -0.750000, 0, 1.0};
Point(102) = {-0.058392, -0.749983, 0, 1.0};
Point(103) = {-0.053379, -0.749913, 0, 1.0};
Point(104) = {-0.048365, -0.749783, 0, 1.0};
Point(105) = {-0.043375, -0.749583, 0, 1.0};
Point(106) = {-0.038325, -0.749297, 0, 1.0};
Point(107) = {-0.033271, -0.748922, 0, 1.0};
Point(108) = {-0.028266, -0.748463, 0, 1.0};
Point(109) = {-0.023258, -0.747925, 0, 1.0};
Point(110) = {-0.018288, -0.747325, 0, 1.0};
Point(111) = {-0.008369, -0.745961, 0, 1.0};
Point(112) = {0.001567, -0.744407, 0, 1.0};
Point(113) = {0.006544, -0.743558, 0, 1.0};
Point(114) = {0.011515, -0.742652, 0, 1.0};
Point(115) = {0.016500, -0.741672, 0, 1.0};
Point(116) = {0.021479, -0.740590, 0, 1.0};
Point(117) = {0.026493, -0.739349, 0, 1.0};
Point(118) = {0.031521, -0.737870, 0, 1.0};
Point(119) = {0.036590, -0.736010, 0, 1.0};
Point(120) = {0.041595, -0.733595, 0, 1.0};
Point(121) = {0.046007, -0.730603, 0, 1.0};
Point(122) = {0.048555, -0.728027, 0, 1.0};
Point(123) = {0.049643, -0.726267, 0, 1.0};
Point(124) = {0.050000, -0.724479, 0, 1.0};
Point(125) = {0.049131, -0.723057, 0, 1.0};
Point(126) = {0.047337, -0.722311, 0, 1.0};
Point(127) = {0.046887, -0.722211, 0, 1.0};
Point(128) = {0.045142, -0.721962, 0, 1.0};
Point(129) = {0.042959, -0.721838, 0, 1.0};
Point(130) = {0.037704, -0.721974, 0, 1.0};
Point(131) = {0.033003, -0.722365, 0, 1.0};
Point(132) = {0.028315, -0.722867, 0, 1.0};
Point(133) = {0.023547, -0.723407, 0, 1.0};
Point(134) = {0.018734, -0.723930, 0, 1.0};
Point(135) = {0.013865, -0.724418, 0, 1.0};
Point(136) = {0.008984, -0.724874, 0, 1.0};
Point(137) = {0.004081, -0.725318, 0, 1.0};
Point(138) = {-0.000823, -0.725762, 0, 1.0};
Point(139) = {-0.010665, -0.726669, 0, 1.0};
Point(140) = {-0.020539, -0.727625, 0, 1.0};
Point(141) = {-0.025473, -0.728129, 0, 1.0};
Point(142) = {-0.030372, -0.728655, 0, 1.0};
Point(143) = {-0.035280, -0.729213, 0, 1.0};
Point(144) = {-0.040146, -0.729803, 0, 1.0};
Point(145) = {-0.045022, -0.730433, 0, 1.0};
Point(146) = {-0.049960, -0.731115, 0, 1.0};
Point(147) = {-0.054880, -0.731832, 0, 1.0};
Point(148) = {-0.059803, -0.732583, 0, 1.0};
Point(149) = {-0.064726, -0.733359, 0, 1.0};
Point(150) = {-0.069645, -0.734154, 0, 1.0};
Point(151) = {-0.074558, -0.734959, 0, 1.0};
Point(152) = {-0.079475, -0.735771, 0, 1.0};
Point(153) = {-0.084391, -0.736585, 0, 1.0};
Point(154) = {-0.089323, -0.737403, 0, 1.0};
Point(155) = {-0.094277, -0.738224, 0, 1.0};
Point(156) = {-0.099212, -0.739048, 0, 1.0};
Point(157) = {-0.104169, -0.739886, 0, 1.0};
Point(158) = {-0.109157, -0.740751, 0, 1.0};
Point(159) = {-0.114127, -0.741643, 0, 1.0};
Point(160) = {-0.119080, -0.742572, 0, 1.0};
Point(161) = {-0.124013, -0.743545, 0, 1.0};
Point(162) = {-0.128924, -0.744566, 0, 1.0};
Point(163) = {-0.133829, -0.745597, 0, 1.0};
Point(164) = {-0.138733, -0.746636, 0, 1.0};
Point(165) = {-0.143631, -0.747716, 0, 1.0};
Point(166) = {-0.148496, -0.748962, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:56};
Spline(3) = {56:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:112};
Spline(6) = {112:139};
Spline(7) = {139:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
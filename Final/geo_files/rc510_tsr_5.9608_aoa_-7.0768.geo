SetFactory("OpenCASCADE");

Point(1) = {0.074228, 0.749638, 0, 1.0};
Point(2) = {0.071725, 0.749535, 0, 1.0};
Point(3) = {0.069230, 0.749453, 0, 1.0};
Point(4) = {0.066734, 0.749393, 0, 1.0};
Point(5) = {0.064235, 0.749354, 0, 1.0};
Point(6) = {0.061736, 0.749335, 0, 1.0};
Point(7) = {0.059244, 0.749334, 0, 1.0};
Point(8) = {0.056756, 0.749352, 0, 1.0};
Point(9) = {0.054273, 0.749390, 0, 1.0};
Point(10) = {0.051795, 0.749447, 0, 1.0};
Point(11) = {0.049297, 0.749523, 0, 1.0};
Point(12) = {0.046786, 0.749614, 0, 1.0};
Point(13) = {0.044284, 0.749709, 0, 1.0};
Point(14) = {0.041771, 0.749802, 0, 1.0};
Point(15) = {0.039251, 0.749882, 0, 1.0};
Point(16) = {0.036733, 0.749944, 0, 1.0};
Point(17) = {0.034216, 0.749984, 0, 1.0};
Point(18) = {0.031704, 0.750000, 0, 1.0};
Point(19) = {0.029196, 0.749991, 0, 1.0};
Point(20) = {0.026689, 0.749957, 0, 1.0};
Point(21) = {0.024183, 0.749892, 0, 1.0};
Point(22) = {0.021687, 0.749792, 0, 1.0};
Point(23) = {0.019163, 0.749649, 0, 1.0};
Point(24) = {0.016636, 0.749461, 0, 1.0};
Point(25) = {0.014133, 0.749231, 0, 1.0};
Point(26) = {0.011629, 0.748963, 0, 1.0};
Point(27) = {0.009144, 0.748662, 0, 1.0};
Point(28) = {0.004184, 0.747980, 0, 1.0};
Point(29) = {-0.000783, 0.747204, 0, 1.0};
Point(30) = {-0.003272, 0.746779, 0, 1.0};
Point(31) = {-0.005758, 0.746326, 0, 1.0};
Point(32) = {-0.008250, 0.745836, 0, 1.0};
Point(33) = {-0.010740, 0.745295, 0, 1.0};
Point(34) = {-0.013247, 0.744675, 0, 1.0};
Point(35) = {-0.015761, 0.743935, 0, 1.0};
Point(36) = {-0.018295, 0.743005, 0, 1.0};
Point(37) = {-0.020798, 0.741797, 0, 1.0};
Point(38) = {-0.023003, 0.740301, 0, 1.0};
Point(39) = {-0.024277, 0.739013, 0, 1.0};
Point(40) = {-0.024822, 0.738133, 0, 1.0};
Point(41) = {-0.025000, 0.737240, 0, 1.0};
Point(42) = {-0.024565, 0.736529, 0, 1.0};
Point(43) = {-0.023669, 0.736155, 0, 1.0};
Point(44) = {-0.023443, 0.736106, 0, 1.0};
Point(45) = {-0.022571, 0.735981, 0, 1.0};
Point(46) = {-0.021480, 0.735919, 0, 1.0};
Point(47) = {-0.018852, 0.735987, 0, 1.0};
Point(48) = {-0.016502, 0.736183, 0, 1.0};
Point(49) = {-0.014158, 0.736433, 0, 1.0};
Point(50) = {-0.011773, 0.736704, 0, 1.0};
Point(51) = {-0.009367, 0.736965, 0, 1.0};
Point(52) = {-0.006932, 0.737209, 0, 1.0};
Point(53) = {-0.004492, 0.737437, 0, 1.0};
Point(54) = {-0.002040, 0.737659, 0, 1.0};
Point(55) = {0.000411, 0.737881, 0, 1.0};
Point(56) = {0.005332, 0.738334, 0, 1.0};
Point(57) = {0.010269, 0.738812, 0, 1.0};
Point(58) = {0.012736, 0.739065, 0, 1.0};
Point(59) = {0.015186, 0.739328, 0, 1.0};
Point(60) = {0.017640, 0.739607, 0, 1.0};
Point(61) = {0.020073, 0.739902, 0, 1.0};
Point(62) = {0.022511, 0.740216, 0, 1.0};
Point(63) = {0.024980, 0.740557, 0, 1.0};
Point(64) = {0.027440, 0.740916, 0, 1.0};
Point(65) = {0.029901, 0.741292, 0, 1.0};
Point(66) = {0.032363, 0.741680, 0, 1.0};
Point(67) = {0.034822, 0.742077, 0, 1.0};
Point(68) = {0.037279, 0.742479, 0, 1.0};
Point(69) = {0.039738, 0.742886, 0, 1.0};
Point(70) = {0.042195, 0.743293, 0, 1.0};
Point(71) = {0.044662, 0.743701, 0, 1.0};
Point(72) = {0.047139, 0.744112, 0, 1.0};
Point(73) = {0.049606, 0.744524, 0, 1.0};
Point(74) = {0.052084, 0.744943, 0, 1.0};
Point(75) = {0.054579, 0.745375, 0, 1.0};
Point(76) = {0.057064, 0.745821, 0, 1.0};
Point(77) = {0.059540, 0.746286, 0, 1.0};
Point(78) = {0.062006, 0.746772, 0, 1.0};
Point(79) = {0.064462, 0.747283, 0, 1.0};
Point(80) = {0.066914, 0.747799, 0, 1.0};
Point(81) = {0.069367, 0.748318, 0, 1.0};
Point(82) = {0.071816, 0.748858, 0, 1.0};
Point(83) = {0.074248, 0.749481, 0, 1.0};
Point(84) = {-0.074228, -0.749638, 0, 1.0};
Point(85) = {-0.071725, -0.749535, 0, 1.0};
Point(86) = {-0.069230, -0.749453, 0, 1.0};
Point(87) = {-0.066734, -0.749393, 0, 1.0};
Point(88) = {-0.064235, -0.749354, 0, 1.0};
Point(89) = {-0.061736, -0.749335, 0, 1.0};
Point(90) = {-0.059244, -0.749334, 0, 1.0};
Point(91) = {-0.056756, -0.749352, 0, 1.0};
Point(92) = {-0.054273, -0.749390, 0, 1.0};
Point(93) = {-0.051795, -0.749447, 0, 1.0};
Point(94) = {-0.049297, -0.749523, 0, 1.0};
Point(95) = {-0.046786, -0.749614, 0, 1.0};
Point(96) = {-0.044284, -0.749709, 0, 1.0};
Point(97) = {-0.041771, -0.749802, 0, 1.0};
Point(98) = {-0.039251, -0.749882, 0, 1.0};
Point(99) = {-0.036733, -0.749944, 0, 1.0};
Point(100) = {-0.034216, -0.749984, 0, 1.0};
Point(101) = {-0.031704, -0.750000, 0, 1.0};
Point(102) = {-0.029196, -0.749991, 0, 1.0};
Point(103) = {-0.026689, -0.749957, 0, 1.0};
Point(104) = {-0.024183, -0.749892, 0, 1.0};
Point(105) = {-0.021687, -0.749792, 0, 1.0};
Point(106) = {-0.019163, -0.749649, 0, 1.0};
Point(107) = {-0.016636, -0.749461, 0, 1.0};
Point(108) = {-0.014133, -0.749231, 0, 1.0};
Point(109) = {-0.011629, -0.748963, 0, 1.0};
Point(110) = {-0.009144, -0.748662, 0, 1.0};
Point(111) = {-0.004184, -0.747980, 0, 1.0};
Point(112) = {0.000783, -0.747204, 0, 1.0};
Point(113) = {0.003272, -0.746779, 0, 1.0};
Point(114) = {0.005758, -0.746326, 0, 1.0};
Point(115) = {0.008250, -0.745836, 0, 1.0};
Point(116) = {0.010740, -0.745295, 0, 1.0};
Point(117) = {0.013247, -0.744675, 0, 1.0};
Point(118) = {0.015761, -0.743935, 0, 1.0};
Point(119) = {0.018295, -0.743005, 0, 1.0};
Point(120) = {0.020798, -0.741797, 0, 1.0};
Point(121) = {0.023003, -0.740301, 0, 1.0};
Point(122) = {0.024277, -0.739013, 0, 1.0};
Point(123) = {0.024822, -0.738133, 0, 1.0};
Point(124) = {0.025000, -0.737240, 0, 1.0};
Point(125) = {0.024565, -0.736529, 0, 1.0};
Point(126) = {0.023669, -0.736155, 0, 1.0};
Point(127) = {0.023443, -0.736106, 0, 1.0};
Point(128) = {0.022571, -0.735981, 0, 1.0};
Point(129) = {0.021480, -0.735919, 0, 1.0};
Point(130) = {0.018852, -0.735987, 0, 1.0};
Point(131) = {0.016502, -0.736183, 0, 1.0};
Point(132) = {0.014158, -0.736433, 0, 1.0};
Point(133) = {0.011773, -0.736704, 0, 1.0};
Point(134) = {0.009367, -0.736965, 0, 1.0};
Point(135) = {0.006932, -0.737209, 0, 1.0};
Point(136) = {0.004492, -0.737437, 0, 1.0};
Point(137) = {0.002040, -0.737659, 0, 1.0};
Point(138) = {-0.000411, -0.737881, 0, 1.0};
Point(139) = {-0.005332, -0.738334, 0, 1.0};
Point(140) = {-0.010269, -0.738812, 0, 1.0};
Point(141) = {-0.012736, -0.739065, 0, 1.0};
Point(142) = {-0.015186, -0.739328, 0, 1.0};
Point(143) = {-0.017640, -0.739607, 0, 1.0};
Point(144) = {-0.020073, -0.739902, 0, 1.0};
Point(145) = {-0.022511, -0.740216, 0, 1.0};
Point(146) = {-0.024980, -0.740557, 0, 1.0};
Point(147) = {-0.027440, -0.740916, 0, 1.0};
Point(148) = {-0.029901, -0.741292, 0, 1.0};
Point(149) = {-0.032363, -0.741680, 0, 1.0};
Point(150) = {-0.034822, -0.742077, 0, 1.0};
Point(151) = {-0.037279, -0.742479, 0, 1.0};
Point(152) = {-0.039738, -0.742886, 0, 1.0};
Point(153) = {-0.042195, -0.743293, 0, 1.0};
Point(154) = {-0.044662, -0.743701, 0, 1.0};
Point(155) = {-0.047139, -0.744112, 0, 1.0};
Point(156) = {-0.049606, -0.744524, 0, 1.0};
Point(157) = {-0.052084, -0.744943, 0, 1.0};
Point(158) = {-0.054579, -0.745375, 0, 1.0};
Point(159) = {-0.057064, -0.745821, 0, 1.0};
Point(160) = {-0.059540, -0.746286, 0, 1.0};
Point(161) = {-0.062006, -0.746772, 0, 1.0};
Point(162) = {-0.064462, -0.747283, 0, 1.0};
Point(163) = {-0.066914, -0.747799, 0, 1.0};
Point(164) = {-0.069367, -0.748318, 0, 1.0};
Point(165) = {-0.071816, -0.748858, 0, 1.0};
Point(166) = {-0.074248, -0.749481, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:56};
Spline(3) = {56:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:112};
Spline(6) = {112:139};
Spline(7) = {139:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
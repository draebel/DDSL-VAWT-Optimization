SetFactory("OpenCASCADE");

Point(1) = {0.148288, 0.749580, 0, 1.0};
Point(2) = {0.142712, 0.749659, 0, 1.0};
Point(3) = {0.137141, 0.749698, 0, 1.0};
Point(4) = {0.131776, 0.749752, 0, 1.0};
Point(5) = {0.125995, 0.749827, 0, 1.0};
Point(6) = {0.120419, 0.749906, 0, 1.0};
Point(7) = {0.114847, 0.749969, 0, 1.0};
Point(8) = {0.109277, 0.750000, 0, 1.0};
Point(9) = {0.103713, 0.750000, 0, 1.0};
Point(10) = {0.098152, 0.749971, 0, 1.0};
Point(11) = {0.092593, 0.749917, 0, 1.0};
Point(12) = {0.087121, 0.749848, 0, 1.0};
Point(13) = {0.081608, 0.749757, 0, 1.0};
Point(14) = {0.076008, 0.749647, 0, 1.0};
Point(15) = {0.070412, 0.749513, 0, 1.0};
Point(16) = {0.065171, 0.749360, 0, 1.0};
Point(17) = {0.059932, 0.749174, 0, 1.0};
Point(18) = {0.054177, 0.748918, 0, 1.0};
Point(19) = {0.048431, 0.748597, 0, 1.0};
Point(20) = {0.043389, 0.748252, 0, 1.0};
Point(21) = {0.038009, 0.747808, 0, 1.0};
Point(22) = {0.032123, 0.747226, 0, 1.0};
Point(23) = {0.026249, 0.746535, 0, 1.0};
Point(24) = {0.021081, 0.745825, 0, 1.0};
Point(25) = {0.015924, 0.745018, 0, 1.0};
Point(26) = {0.009907, 0.743960, 0, 1.0};
Point(27) = {0.004478, 0.742906, 0, 1.0};
Point(28) = {-0.000939, 0.741777, 0, 1.0};
Point(29) = {-0.006342, 0.740571, 0, 1.0};
Point(30) = {-0.011737, 0.739281, 0, 1.0};
Point(31) = {-0.016063, 0.738169, 0, 1.0};
Point(32) = {-0.019365, 0.737258, 0, 1.0};
Point(33) = {-0.022573, 0.736313, 0, 1.0};
Point(34) = {-0.025156, 0.735507, 0, 1.0};
Point(35) = {-0.027820, 0.734634, 0, 1.0};
Point(36) = {-0.030483, 0.733728, 0, 1.0};
Point(37) = {-0.033144, 0.732795, 0, 1.0};
Point(38) = {-0.035798, 0.731828, 0, 1.0};
Point(39) = {-0.038446, 0.730814, 0, 1.0};
Point(40) = {-0.041087, 0.729713, 0, 1.0};
Point(41) = {-0.043705, 0.728481, 0, 1.0};
Point(42) = {-0.045003, 0.727787, 0, 1.0};
Point(43) = {-0.046295, 0.727028, 0, 1.0};
Point(44) = {-0.047577, 0.726192, 0, 1.0};
Point(45) = {-0.048841, 0.725235, 0, 1.0};
Point(46) = {-0.049454, 0.724654, 0, 1.0};
Point(47) = {-0.050000, 0.723466, 0, 1.0};
Point(48) = {-0.049167, 0.722472, 0, 1.0};
Point(49) = {-0.048426, 0.722086, 0, 1.0};
Point(50) = {-0.046965, 0.721544, 0, 1.0};
Point(51) = {-0.045520, 0.721141, 0, 1.0};
Point(52) = {-0.044087, 0.720826, 0, 1.0};
Point(53) = {-0.042664, 0.720577, 0, 1.0};
Point(54) = {-0.039835, 0.720205, 0, 1.0};
Point(55) = {-0.036904, 0.719928, 0, 1.0};
Point(56) = {-0.034071, 0.719722, 0, 1.0};
Point(57) = {-0.031244, 0.719566, 0, 1.0};
Point(58) = {-0.028598, 0.719464, 0, 1.0};
Point(59) = {-0.025784, 0.719399, 0, 1.0};
Point(60) = {-0.022624, 0.719376, 0, 1.0};
Point(61) = {-0.019817, 0.719386, 0, 1.0};
Point(62) = {-0.016839, 0.719417, 0, 1.0};
Point(63) = {-0.013776, 0.719468, 0, 1.0};
Point(64) = {-0.009142, 0.719572, 0, 1.0};
Point(65) = {-0.003600, 0.719757, 0, 1.0};
Point(66) = {0.001927, 0.720019, 0, 1.0};
Point(67) = {0.007939, 0.720409, 0, 1.0};
Point(68) = {0.012955, 0.720817, 0, 1.0};
Point(69) = {0.018448, 0.721349, 0, 1.0};
Point(70) = {0.023933, 0.721965, 0, 1.0};
Point(71) = {0.029405, 0.722661, 0, 1.0};
Point(72) = {0.034867, 0.723433, 0, 1.0};
Point(73) = {0.040321, 0.724276, 0, 1.0};
Point(74) = {0.045768, 0.725181, 0, 1.0};
Point(75) = {0.051205, 0.726145, 0, 1.0};
Point(76) = {0.056517, 0.727150, 0, 1.0};
Point(77) = {0.062054, 0.728274, 0, 1.0};
Point(78) = {0.067467, 0.729445, 0, 1.0};
Point(79) = {0.072869, 0.730659, 0, 1.0};
Point(80) = {0.078259, 0.731883, 0, 1.0};
Point(81) = {0.083711, 0.733117, 0, 1.0};
Point(82) = {0.089082, 0.734335, 0, 1.0};
Point(83) = {0.094516, 0.735591, 0, 1.0};
Point(84) = {0.099876, 0.736876, 0, 1.0};
Point(85) = {0.105265, 0.738221, 0, 1.0};
Point(86) = {0.110999, 0.739695, 0, 1.0};
Point(87) = {0.116028, 0.741002, 0, 1.0};
Point(88) = {0.121407, 0.742399, 0, 1.0};
Point(89) = {0.126604, 0.743745, 0, 1.0};
Point(90) = {0.132171, 0.745188, 0, 1.0};
Point(91) = {0.137549, 0.746600, 0, 1.0};
Point(92) = {0.142923, 0.748053, 0, 1.0};
Point(93) = {-0.148288, -0.749580, 0, 1.0};
Point(94) = {-0.142712, -0.749659, 0, 1.0};
Point(95) = {-0.137141, -0.749698, 0, 1.0};
Point(96) = {-0.131776, -0.749752, 0, 1.0};
Point(97) = {-0.125995, -0.749827, 0, 1.0};
Point(98) = {-0.120419, -0.749906, 0, 1.0};
Point(99) = {-0.114847, -0.749969, 0, 1.0};
Point(100) = {-0.109277, -0.750000, 0, 1.0};
Point(101) = {-0.103713, -0.750000, 0, 1.0};
Point(102) = {-0.098152, -0.749971, 0, 1.0};
Point(103) = {-0.092593, -0.749917, 0, 1.0};
Point(104) = {-0.087121, -0.749848, 0, 1.0};
Point(105) = {-0.081608, -0.749757, 0, 1.0};
Point(106) = {-0.076008, -0.749647, 0, 1.0};
Point(107) = {-0.070412, -0.749513, 0, 1.0};
Point(108) = {-0.065171, -0.749360, 0, 1.0};
Point(109) = {-0.059932, -0.749174, 0, 1.0};
Point(110) = {-0.054177, -0.748918, 0, 1.0};
Point(111) = {-0.048431, -0.748597, 0, 1.0};
Point(112) = {-0.043389, -0.748252, 0, 1.0};
Point(113) = {-0.038009, -0.747808, 0, 1.0};
Point(114) = {-0.032123, -0.747226, 0, 1.0};
Point(115) = {-0.026249, -0.746535, 0, 1.0};
Point(116) = {-0.021081, -0.745825, 0, 1.0};
Point(117) = {-0.015924, -0.745018, 0, 1.0};
Point(118) = {-0.009907, -0.743960, 0, 1.0};
Point(119) = {-0.004478, -0.742906, 0, 1.0};
Point(120) = {0.000939, -0.741777, 0, 1.0};
Point(121) = {0.006342, -0.740571, 0, 1.0};
Point(122) = {0.011737, -0.739281, 0, 1.0};
Point(123) = {0.016063, -0.738169, 0, 1.0};
Point(124) = {0.019365, -0.737258, 0, 1.0};
Point(125) = {0.022573, -0.736313, 0, 1.0};
Point(126) = {0.025156, -0.735507, 0, 1.0};
Point(127) = {0.027820, -0.734634, 0, 1.0};
Point(128) = {0.030483, -0.733728, 0, 1.0};
Point(129) = {0.033144, -0.732795, 0, 1.0};
Point(130) = {0.035798, -0.731828, 0, 1.0};
Point(131) = {0.038446, -0.730814, 0, 1.0};
Point(132) = {0.041087, -0.729713, 0, 1.0};
Point(133) = {0.043705, -0.728481, 0, 1.0};
Point(134) = {0.045003, -0.727787, 0, 1.0};
Point(135) = {0.046295, -0.727028, 0, 1.0};
Point(136) = {0.047577, -0.726192, 0, 1.0};
Point(137) = {0.048841, -0.725235, 0, 1.0};
Point(138) = {0.049454, -0.724654, 0, 1.0};
Point(139) = {0.050000, -0.723466, 0, 1.0};
Point(140) = {0.049167, -0.722472, 0, 1.0};
Point(141) = {0.048426, -0.722086, 0, 1.0};
Point(142) = {0.046965, -0.721544, 0, 1.0};
Point(143) = {0.045520, -0.721141, 0, 1.0};
Point(144) = {0.044087, -0.720826, 0, 1.0};
Point(145) = {0.042664, -0.720577, 0, 1.0};
Point(146) = {0.039835, -0.720205, 0, 1.0};
Point(147) = {0.036904, -0.719928, 0, 1.0};
Point(148) = {0.034071, -0.719722, 0, 1.0};
Point(149) = {0.031244, -0.719566, 0, 1.0};
Point(150) = {0.028598, -0.719464, 0, 1.0};
Point(151) = {0.025784, -0.719399, 0, 1.0};
Point(152) = {0.022624, -0.719376, 0, 1.0};
Point(153) = {0.019817, -0.719386, 0, 1.0};
Point(154) = {0.016839, -0.719417, 0, 1.0};
Point(155) = {0.013776, -0.719468, 0, 1.0};
Point(156) = {0.009142, -0.719572, 0, 1.0};
Point(157) = {0.003600, -0.719757, 0, 1.0};
Point(158) = {-0.001927, -0.720019, 0, 1.0};
Point(159) = {-0.007939, -0.720409, 0, 1.0};
Point(160) = {-0.012955, -0.720817, 0, 1.0};
Point(161) = {-0.018448, -0.721349, 0, 1.0};
Point(162) = {-0.023933, -0.721965, 0, 1.0};
Point(163) = {-0.029405, -0.722661, 0, 1.0};
Point(164) = {-0.034867, -0.723433, 0, 1.0};
Point(165) = {-0.040321, -0.724276, 0, 1.0};
Point(166) = {-0.045768, -0.725181, 0, 1.0};
Point(167) = {-0.051205, -0.726145, 0, 1.0};
Point(168) = {-0.056517, -0.727150, 0, 1.0};
Point(169) = {-0.062054, -0.728274, 0, 1.0};
Point(170) = {-0.067467, -0.729445, 0, 1.0};
Point(171) = {-0.072869, -0.730659, 0, 1.0};
Point(172) = {-0.078259, -0.731883, 0, 1.0};
Point(173) = {-0.083711, -0.733117, 0, 1.0};
Point(174) = {-0.089082, -0.734335, 0, 1.0};
Point(175) = {-0.094516, -0.735591, 0, 1.0};
Point(176) = {-0.099876, -0.736876, 0, 1.0};
Point(177) = {-0.105265, -0.738221, 0, 1.0};
Point(178) = {-0.110999, -0.739695, 0, 1.0};
Point(179) = {-0.116028, -0.741002, 0, 1.0};
Point(180) = {-0.121407, -0.742399, 0, 1.0};
Point(181) = {-0.126604, -0.743745, 0, 1.0};
Point(182) = {-0.132171, -0.745188, 0, 1.0};
Point(183) = {-0.137549, -0.746600, 0, 1.0};
Point(184) = {-0.142923, -0.748053, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:66};
Spline(3) = {66:92};
Spline(4) = {92,1};

// Lines: second blade (splines 5-8)
Spline(5) = {93:119};
Spline(6) = {119:158};
Spline(7) = {158:184};
Spline(8) = {184,93};

// Outer domain (points 20001-4 and lines)
Point(185) = {-13.50000000, -15.00000000, 0, 1.0};
Point(186) = {-13.50000000, 15.00000000, 0, 1.0};
Point(187) = {13.50000000, 15.00000000, 0, 1.0};
Point(188) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {185, 186};
Line(12) = {186, 187};
Line(13) = {187, 188};
Line(14) = {185, 188};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
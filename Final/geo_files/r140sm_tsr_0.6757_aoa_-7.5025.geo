SetFactory("OpenCASCADE");

Point(1) = {0.074358, 0.749685, 0, 1.0};
Point(2) = {0.070176, 0.749744, 0, 1.0};
Point(3) = {0.065998, 0.749773, 0, 1.0};
Point(4) = {0.061974, 0.749814, 0, 1.0};
Point(5) = {0.057638, 0.749871, 0, 1.0};
Point(6) = {0.053456, 0.749929, 0, 1.0};
Point(7) = {0.049277, 0.749977, 0, 1.0};
Point(8) = {0.045100, 0.750000, 0, 1.0};
Point(9) = {0.040927, 0.750000, 0, 1.0};
Point(10) = {0.036756, 0.749978, 0, 1.0};
Point(11) = {0.032587, 0.749938, 0, 1.0};
Point(12) = {0.028483, 0.749886, 0, 1.0};
Point(13) = {0.024348, 0.749818, 0, 1.0};
Point(14) = {0.020148, 0.749735, 0, 1.0};
Point(15) = {0.015951, 0.749635, 0, 1.0};
Point(16) = {0.012020, 0.749520, 0, 1.0};
Point(17) = {0.008091, 0.749381, 0, 1.0};
Point(18) = {0.003774, 0.749189, 0, 1.0};
Point(19) = {-0.000534, 0.748948, 0, 1.0};
Point(20) = {-0.004316, 0.748689, 0, 1.0};
Point(21) = {-0.008351, 0.748356, 0, 1.0};
Point(22) = {-0.012766, 0.747920, 0, 1.0};
Point(23) = {-0.017171, 0.747402, 0, 1.0};
Point(24) = {-0.021047, 0.746868, 0, 1.0};
Point(25) = {-0.024915, 0.746264, 0, 1.0};
Point(26) = {-0.029428, 0.745470, 0, 1.0};
Point(27) = {-0.033499, 0.744679, 0, 1.0};
Point(28) = {-0.037562, 0.743833, 0, 1.0};
Point(29) = {-0.041614, 0.742928, 0, 1.0};
Point(30) = {-0.045661, 0.741961, 0, 1.0};
Point(31) = {-0.048905, 0.741127, 0, 1.0};
Point(32) = {-0.051381, 0.740444, 0, 1.0};
Point(33) = {-0.053787, 0.739735, 0, 1.0};
Point(34) = {-0.055725, 0.739130, 0, 1.0};
Point(35) = {-0.057723, 0.738475, 0, 1.0};
Point(36) = {-0.059720, 0.737796, 0, 1.0};
Point(37) = {-0.061716, 0.737096, 0, 1.0};
Point(38) = {-0.063707, 0.736371, 0, 1.0};
Point(39) = {-0.065693, 0.735610, 0, 1.0};
Point(40) = {-0.067673, 0.734785, 0, 1.0};
Point(41) = {-0.069637, 0.733861, 0, 1.0};
Point(42) = {-0.070611, 0.733341, 0, 1.0};
Point(43) = {-0.071579, 0.732771, 0, 1.0};
Point(44) = {-0.072541, 0.732144, 0, 1.0};
Point(45) = {-0.073489, 0.731426, 0, 1.0};
Point(46) = {-0.073949, 0.730990, 0, 1.0};
Point(47) = {-0.074358, 0.730100, 0, 1.0};
Point(48) = {-0.073733, 0.729354, 0, 1.0};
Point(49) = {-0.073178, 0.729064, 0, 1.0};
Point(50) = {-0.072082, 0.728658, 0, 1.0};
Point(51) = {-0.070998, 0.728356, 0, 1.0};
Point(52) = {-0.069923, 0.728119, 0, 1.0};
Point(53) = {-0.068856, 0.727933, 0, 1.0};
Point(54) = {-0.066734, 0.727654, 0, 1.0};
Point(55) = {-0.064536, 0.727446, 0, 1.0};
Point(56) = {-0.062411, 0.727291, 0, 1.0};
Point(57) = {-0.060291, 0.727174, 0, 1.0};
Point(58) = {-0.058307, 0.727098, 0, 1.0};
Point(59) = {-0.056196, 0.727049, 0, 1.0};
Point(60) = {-0.053826, 0.727032, 0, 1.0};
Point(61) = {-0.051721, 0.727040, 0, 1.0};
Point(62) = {-0.049488, 0.727063, 0, 1.0};
Point(63) = {-0.047190, 0.727101, 0, 1.0};
Point(64) = {-0.043714, 0.727179, 0, 1.0};
Point(65) = {-0.039558, 0.727318, 0, 1.0};
Point(66) = {-0.035413, 0.727514, 0, 1.0};
Point(67) = {-0.030904, 0.727807, 0, 1.0};
Point(68) = {-0.027142, 0.728113, 0, 1.0};
Point(69) = {-0.023022, 0.728512, 0, 1.0};
Point(70) = {-0.018908, 0.728973, 0, 1.0};
Point(71) = {-0.014804, 0.729496, 0, 1.0};
Point(72) = {-0.010708, 0.730075, 0, 1.0};
Point(73) = {-0.006617, 0.730707, 0, 1.0};
Point(74) = {-0.002532, 0.731386, 0, 1.0};
Point(75) = {0.001545, 0.732109, 0, 1.0};
Point(76) = {0.005530, 0.732862, 0, 1.0};
Point(77) = {0.009682, 0.733706, 0, 1.0};
Point(78) = {0.013742, 0.734584, 0, 1.0};
Point(79) = {0.017794, 0.735494, 0, 1.0};
Point(80) = {0.021836, 0.736412, 0, 1.0};
Point(81) = {0.025925, 0.737338, 0, 1.0};
Point(82) = {0.029953, 0.738251, 0, 1.0};
Point(83) = {0.034029, 0.739193, 0, 1.0};
Point(84) = {0.038049, 0.740157, 0, 1.0};
Point(85) = {0.042091, 0.741166, 0, 1.0};
Point(86) = {0.046392, 0.742271, 0, 1.0};
Point(87) = {0.050163, 0.743252, 0, 1.0};
Point(88) = {0.054198, 0.744299, 0, 1.0};
Point(89) = {0.058095, 0.745309, 0, 1.0};
Point(90) = {0.062271, 0.746391, 0, 1.0};
Point(91) = {0.066304, 0.747450, 0, 1.0};
Point(92) = {0.070335, 0.748539, 0, 1.0};
Point(93) = {-0.074358, -0.749685, 0, 1.0};
Point(94) = {-0.070176, -0.749744, 0, 1.0};
Point(95) = {-0.065998, -0.749773, 0, 1.0};
Point(96) = {-0.061974, -0.749814, 0, 1.0};
Point(97) = {-0.057638, -0.749871, 0, 1.0};
Point(98) = {-0.053456, -0.749929, 0, 1.0};
Point(99) = {-0.049277, -0.749977, 0, 1.0};
Point(100) = {-0.045100, -0.750000, 0, 1.0};
Point(101) = {-0.040927, -0.750000, 0, 1.0};
Point(102) = {-0.036756, -0.749978, 0, 1.0};
Point(103) = {-0.032587, -0.749938, 0, 1.0};
Point(104) = {-0.028483, -0.749886, 0, 1.0};
Point(105) = {-0.024348, -0.749818, 0, 1.0};
Point(106) = {-0.020148, -0.749735, 0, 1.0};
Point(107) = {-0.015951, -0.749635, 0, 1.0};
Point(108) = {-0.012020, -0.749520, 0, 1.0};
Point(109) = {-0.008091, -0.749381, 0, 1.0};
Point(110) = {-0.003774, -0.749189, 0, 1.0};
Point(111) = {0.000534, -0.748948, 0, 1.0};
Point(112) = {0.004316, -0.748689, 0, 1.0};
Point(113) = {0.008351, -0.748356, 0, 1.0};
Point(114) = {0.012766, -0.747920, 0, 1.0};
Point(115) = {0.017171, -0.747402, 0, 1.0};
Point(116) = {0.021047, -0.746868, 0, 1.0};
Point(117) = {0.024915, -0.746264, 0, 1.0};
Point(118) = {0.029428, -0.745470, 0, 1.0};
Point(119) = {0.033499, -0.744679, 0, 1.0};
Point(120) = {0.037562, -0.743833, 0, 1.0};
Point(121) = {0.041614, -0.742928, 0, 1.0};
Point(122) = {0.045661, -0.741961, 0, 1.0};
Point(123) = {0.048905, -0.741127, 0, 1.0};
Point(124) = {0.051381, -0.740444, 0, 1.0};
Point(125) = {0.053787, -0.739735, 0, 1.0};
Point(126) = {0.055725, -0.739130, 0, 1.0};
Point(127) = {0.057723, -0.738475, 0, 1.0};
Point(128) = {0.059720, -0.737796, 0, 1.0};
Point(129) = {0.061716, -0.737096, 0, 1.0};
Point(130) = {0.063707, -0.736371, 0, 1.0};
Point(131) = {0.065693, -0.735610, 0, 1.0};
Point(132) = {0.067673, -0.734785, 0, 1.0};
Point(133) = {0.069637, -0.733861, 0, 1.0};
Point(134) = {0.070611, -0.733341, 0, 1.0};
Point(135) = {0.071579, -0.732771, 0, 1.0};
Point(136) = {0.072541, -0.732144, 0, 1.0};
Point(137) = {0.073489, -0.731426, 0, 1.0};
Point(138) = {0.073949, -0.730990, 0, 1.0};
Point(139) = {0.074358, -0.730100, 0, 1.0};
Point(140) = {0.073733, -0.729354, 0, 1.0};
Point(141) = {0.073178, -0.729064, 0, 1.0};
Point(142) = {0.072082, -0.728658, 0, 1.0};
Point(143) = {0.070998, -0.728356, 0, 1.0};
Point(144) = {0.069923, -0.728119, 0, 1.0};
Point(145) = {0.068856, -0.727933, 0, 1.0};
Point(146) = {0.066734, -0.727654, 0, 1.0};
Point(147) = {0.064536, -0.727446, 0, 1.0};
Point(148) = {0.062411, -0.727291, 0, 1.0};
Point(149) = {0.060291, -0.727174, 0, 1.0};
Point(150) = {0.058307, -0.727098, 0, 1.0};
Point(151) = {0.056196, -0.727049, 0, 1.0};
Point(152) = {0.053826, -0.727032, 0, 1.0};
Point(153) = {0.051721, -0.727040, 0, 1.0};
Point(154) = {0.049488, -0.727063, 0, 1.0};
Point(155) = {0.047190, -0.727101, 0, 1.0};
Point(156) = {0.043714, -0.727179, 0, 1.0};
Point(157) = {0.039558, -0.727318, 0, 1.0};
Point(158) = {0.035413, -0.727514, 0, 1.0};
Point(159) = {0.030904, -0.727807, 0, 1.0};
Point(160) = {0.027142, -0.728113, 0, 1.0};
Point(161) = {0.023022, -0.728512, 0, 1.0};
Point(162) = {0.018908, -0.728973, 0, 1.0};
Point(163) = {0.014804, -0.729496, 0, 1.0};
Point(164) = {0.010708, -0.730075, 0, 1.0};
Point(165) = {0.006617, -0.730707, 0, 1.0};
Point(166) = {0.002532, -0.731386, 0, 1.0};
Point(167) = {-0.001545, -0.732109, 0, 1.0};
Point(168) = {-0.005530, -0.732862, 0, 1.0};
Point(169) = {-0.009682, -0.733706, 0, 1.0};
Point(170) = {-0.013742, -0.734584, 0, 1.0};
Point(171) = {-0.017794, -0.735494, 0, 1.0};
Point(172) = {-0.021836, -0.736412, 0, 1.0};
Point(173) = {-0.025925, -0.737338, 0, 1.0};
Point(174) = {-0.029953, -0.738251, 0, 1.0};
Point(175) = {-0.034029, -0.739193, 0, 1.0};
Point(176) = {-0.038049, -0.740157, 0, 1.0};
Point(177) = {-0.042091, -0.741166, 0, 1.0};
Point(178) = {-0.046392, -0.742271, 0, 1.0};
Point(179) = {-0.050163, -0.743252, 0, 1.0};
Point(180) = {-0.054198, -0.744299, 0, 1.0};
Point(181) = {-0.058095, -0.745309, 0, 1.0};
Point(182) = {-0.062271, -0.746391, 0, 1.0};
Point(183) = {-0.066304, -0.747450, 0, 1.0};
Point(184) = {-0.070335, -0.748539, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:66};
Spline(3) = {66:92};
Spline(4) = {92,1};

// Lines: second blade (splines 5-8)
Spline(5) = {93:119};
Spline(6) = {119:158};
Spline(7) = {158:184};
Spline(8) = {184,93};

// Outer domain (points 20001-4 and lines)
Point(185) = {-13.50000000, -15.00000000, 0, 1.0};
Point(186) = {-13.50000000, 15.00000000, 0, 1.0};
Point(187) = {13.50000000, 15.00000000, 0, 1.0};
Point(188) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {185, 186};
Line(12) = {186, 187};
Line(13) = {187, 188};
Line(14) = {185, 188};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
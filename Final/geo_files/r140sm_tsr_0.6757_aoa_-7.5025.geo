SetFactory("OpenCASCADE");

Point(1) = {0.111537, 0.749685, 0, 1.0};
Point(2) = {0.107355, 0.749744, 0, 1.0};
Point(3) = {0.103177, 0.749773, 0, 1.0};
Point(4) = {0.099153, 0.749814, 0, 1.0};
Point(5) = {0.094817, 0.749871, 0, 1.0};
Point(6) = {0.090635, 0.749929, 0, 1.0};
Point(7) = {0.086456, 0.749977, 0, 1.0};
Point(8) = {0.082279, 0.750000, 0, 1.0};
Point(9) = {0.078106, 0.750000, 0, 1.0};
Point(10) = {0.073935, 0.749978, 0, 1.0};
Point(11) = {0.069766, 0.749938, 0, 1.0};
Point(12) = {0.065662, 0.749886, 0, 1.0};
Point(13) = {0.061527, 0.749818, 0, 1.0};
Point(14) = {0.057327, 0.749735, 0, 1.0};
Point(15) = {0.053130, 0.749635, 0, 1.0};
Point(16) = {0.049199, 0.749520, 0, 1.0};
Point(17) = {0.045270, 0.749381, 0, 1.0};
Point(18) = {0.040953, 0.749189, 0, 1.0};
Point(19) = {0.036644, 0.748948, 0, 1.0};
Point(20) = {0.032863, 0.748689, 0, 1.0};
Point(21) = {0.028828, 0.748356, 0, 1.0};
Point(22) = {0.024413, 0.747920, 0, 1.0};
Point(23) = {0.020007, 0.747402, 0, 1.0};
Point(24) = {0.016132, 0.746868, 0, 1.0};
Point(25) = {0.012264, 0.746264, 0, 1.0};
Point(26) = {0.007751, 0.745470, 0, 1.0};
Point(27) = {0.003680, 0.744679, 0, 1.0};
Point(28) = {-0.000383, 0.743833, 0, 1.0};
Point(29) = {-0.004435, 0.742928, 0, 1.0};
Point(30) = {-0.008482, 0.741961, 0, 1.0};
Point(31) = {-0.011726, 0.741127, 0, 1.0};
Point(32) = {-0.014202, 0.740444, 0, 1.0};
Point(33) = {-0.016608, 0.739735, 0, 1.0};
Point(34) = {-0.018546, 0.739130, 0, 1.0};
Point(35) = {-0.020544, 0.738475, 0, 1.0};
Point(36) = {-0.022541, 0.737796, 0, 1.0};
Point(37) = {-0.024537, 0.737096, 0, 1.0};
Point(38) = {-0.026528, 0.736371, 0, 1.0};
Point(39) = {-0.028514, 0.735610, 0, 1.0};
Point(40) = {-0.030495, 0.734785, 0, 1.0};
Point(41) = {-0.032458, 0.733861, 0, 1.0};
Point(42) = {-0.033432, 0.733341, 0, 1.0};
Point(43) = {-0.034401, 0.732771, 0, 1.0};
Point(44) = {-0.035362, 0.732144, 0, 1.0};
Point(45) = {-0.036310, 0.731426, 0, 1.0};
Point(46) = {-0.036770, 0.730990, 0, 1.0};
Point(47) = {-0.037179, 0.730100, 0, 1.0};
Point(48) = {-0.036554, 0.729354, 0, 1.0};
Point(49) = {-0.035999, 0.729064, 0, 1.0};
Point(50) = {-0.034903, 0.728658, 0, 1.0};
Point(51) = {-0.033819, 0.728356, 0, 1.0};
Point(52) = {-0.032744, 0.728119, 0, 1.0};
Point(53) = {-0.031677, 0.727933, 0, 1.0};
Point(54) = {-0.029555, 0.727654, 0, 1.0};
Point(55) = {-0.027357, 0.727446, 0, 1.0};
Point(56) = {-0.025232, 0.727291, 0, 1.0};
Point(57) = {-0.023112, 0.727174, 0, 1.0};
Point(58) = {-0.021128, 0.727098, 0, 1.0};
Point(59) = {-0.019017, 0.727049, 0, 1.0};
Point(60) = {-0.016647, 0.727032, 0, 1.0};
Point(61) = {-0.014542, 0.727040, 0, 1.0};
Point(62) = {-0.012309, 0.727063, 0, 1.0};
Point(63) = {-0.010011, 0.727101, 0, 1.0};
Point(64) = {-0.006535, 0.727179, 0, 1.0};
Point(65) = {-0.002379, 0.727318, 0, 1.0};
Point(66) = {0.001766, 0.727514, 0, 1.0};
Point(67) = {0.006275, 0.727807, 0, 1.0};
Point(68) = {0.010037, 0.728113, 0, 1.0};
Point(69) = {0.014157, 0.728512, 0, 1.0};
Point(70) = {0.018271, 0.728973, 0, 1.0};
Point(71) = {0.022375, 0.729496, 0, 1.0};
Point(72) = {0.026471, 0.730075, 0, 1.0};
Point(73) = {0.030562, 0.730707, 0, 1.0};
Point(74) = {0.034647, 0.731386, 0, 1.0};
Point(75) = {0.038724, 0.732109, 0, 1.0};
Point(76) = {0.042709, 0.732862, 0, 1.0};
Point(77) = {0.046861, 0.733706, 0, 1.0};
Point(78) = {0.050921, 0.734584, 0, 1.0};
Point(79) = {0.054973, 0.735494, 0, 1.0};
Point(80) = {0.059015, 0.736412, 0, 1.0};
Point(81) = {0.063104, 0.737338, 0, 1.0};
Point(82) = {0.067132, 0.738251, 0, 1.0};
Point(83) = {0.071208, 0.739193, 0, 1.0};
Point(84) = {0.075228, 0.740157, 0, 1.0};
Point(85) = {0.079269, 0.741166, 0, 1.0};
Point(86) = {0.083571, 0.742271, 0, 1.0};
Point(87) = {0.087342, 0.743252, 0, 1.0};
Point(88) = {0.091377, 0.744299, 0, 1.0};
Point(89) = {0.095274, 0.745309, 0, 1.0};
Point(90) = {0.099450, 0.746391, 0, 1.0};
Point(91) = {0.103483, 0.747450, 0, 1.0};
Point(92) = {0.107514, 0.748539, 0, 1.0};
Point(93) = {-0.111537, -0.749685, 0, 1.0};
Point(94) = {-0.107355, -0.749744, 0, 1.0};
Point(95) = {-0.103177, -0.749773, 0, 1.0};
Point(96) = {-0.099153, -0.749814, 0, 1.0};
Point(97) = {-0.094817, -0.749871, 0, 1.0};
Point(98) = {-0.090635, -0.749929, 0, 1.0};
Point(99) = {-0.086456, -0.749977, 0, 1.0};
Point(100) = {-0.082279, -0.750000, 0, 1.0};
Point(101) = {-0.078106, -0.750000, 0, 1.0};
Point(102) = {-0.073935, -0.749978, 0, 1.0};
Point(103) = {-0.069766, -0.749938, 0, 1.0};
Point(104) = {-0.065662, -0.749886, 0, 1.0};
Point(105) = {-0.061527, -0.749818, 0, 1.0};
Point(106) = {-0.057327, -0.749735, 0, 1.0};
Point(107) = {-0.053130, -0.749635, 0, 1.0};
Point(108) = {-0.049199, -0.749520, 0, 1.0};
Point(109) = {-0.045270, -0.749381, 0, 1.0};
Point(110) = {-0.040953, -0.749189, 0, 1.0};
Point(111) = {-0.036644, -0.748948, 0, 1.0};
Point(112) = {-0.032863, -0.748689, 0, 1.0};
Point(113) = {-0.028828, -0.748356, 0, 1.0};
Point(114) = {-0.024413, -0.747920, 0, 1.0};
Point(115) = {-0.020007, -0.747402, 0, 1.0};
Point(116) = {-0.016132, -0.746868, 0, 1.0};
Point(117) = {-0.012264, -0.746264, 0, 1.0};
Point(118) = {-0.007751, -0.745470, 0, 1.0};
Point(119) = {-0.003680, -0.744679, 0, 1.0};
Point(120) = {0.000383, -0.743833, 0, 1.0};
Point(121) = {0.004435, -0.742928, 0, 1.0};
Point(122) = {0.008482, -0.741961, 0, 1.0};
Point(123) = {0.011726, -0.741127, 0, 1.0};
Point(124) = {0.014202, -0.740444, 0, 1.0};
Point(125) = {0.016608, -0.739735, 0, 1.0};
Point(126) = {0.018546, -0.739130, 0, 1.0};
Point(127) = {0.020544, -0.738475, 0, 1.0};
Point(128) = {0.022541, -0.737796, 0, 1.0};
Point(129) = {0.024537, -0.737096, 0, 1.0};
Point(130) = {0.026528, -0.736371, 0, 1.0};
Point(131) = {0.028514, -0.735610, 0, 1.0};
Point(132) = {0.030495, -0.734785, 0, 1.0};
Point(133) = {0.032458, -0.733861, 0, 1.0};
Point(134) = {0.033432, -0.733341, 0, 1.0};
Point(135) = {0.034401, -0.732771, 0, 1.0};
Point(136) = {0.035362, -0.732144, 0, 1.0};
Point(137) = {0.036310, -0.731426, 0, 1.0};
Point(138) = {0.036770, -0.730990, 0, 1.0};
Point(139) = {0.037179, -0.730100, 0, 1.0};
Point(140) = {0.036554, -0.729354, 0, 1.0};
Point(141) = {0.035999, -0.729064, 0, 1.0};
Point(142) = {0.034903, -0.728658, 0, 1.0};
Point(143) = {0.033819, -0.728356, 0, 1.0};
Point(144) = {0.032744, -0.728119, 0, 1.0};
Point(145) = {0.031677, -0.727933, 0, 1.0};
Point(146) = {0.029555, -0.727654, 0, 1.0};
Point(147) = {0.027357, -0.727446, 0, 1.0};
Point(148) = {0.025232, -0.727291, 0, 1.0};
Point(149) = {0.023112, -0.727174, 0, 1.0};
Point(150) = {0.021128, -0.727098, 0, 1.0};
Point(151) = {0.019017, -0.727049, 0, 1.0};
Point(152) = {0.016647, -0.727032, 0, 1.0};
Point(153) = {0.014542, -0.727040, 0, 1.0};
Point(154) = {0.012309, -0.727063, 0, 1.0};
Point(155) = {0.010011, -0.727101, 0, 1.0};
Point(156) = {0.006535, -0.727179, 0, 1.0};
Point(157) = {0.002379, -0.727318, 0, 1.0};
Point(158) = {-0.001766, -0.727514, 0, 1.0};
Point(159) = {-0.006275, -0.727807, 0, 1.0};
Point(160) = {-0.010037, -0.728113, 0, 1.0};
Point(161) = {-0.014157, -0.728512, 0, 1.0};
Point(162) = {-0.018271, -0.728973, 0, 1.0};
Point(163) = {-0.022375, -0.729496, 0, 1.0};
Point(164) = {-0.026471, -0.730075, 0, 1.0};
Point(165) = {-0.030562, -0.730707, 0, 1.0};
Point(166) = {-0.034647, -0.731386, 0, 1.0};
Point(167) = {-0.038724, -0.732109, 0, 1.0};
Point(168) = {-0.042709, -0.732862, 0, 1.0};
Point(169) = {-0.046861, -0.733706, 0, 1.0};
Point(170) = {-0.050921, -0.734584, 0, 1.0};
Point(171) = {-0.054973, -0.735494, 0, 1.0};
Point(172) = {-0.059015, -0.736412, 0, 1.0};
Point(173) = {-0.063104, -0.737338, 0, 1.0};
Point(174) = {-0.067132, -0.738251, 0, 1.0};
Point(175) = {-0.071208, -0.739193, 0, 1.0};
Point(176) = {-0.075228, -0.740157, 0, 1.0};
Point(177) = {-0.079269, -0.741166, 0, 1.0};
Point(178) = {-0.083571, -0.742271, 0, 1.0};
Point(179) = {-0.087342, -0.743252, 0, 1.0};
Point(180) = {-0.091377, -0.744299, 0, 1.0};
Point(181) = {-0.095274, -0.745309, 0, 1.0};
Point(182) = {-0.099450, -0.746391, 0, 1.0};
Point(183) = {-0.103483, -0.747450, 0, 1.0};
Point(184) = {-0.107514, -0.748539, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:66};
Spline(3) = {66:92};
Spline(4) = {92,1};

// Lines: second blade (splines 5-8)
Spline(5) = {93:119};
Spline(6) = {119:158};
Spline(7) = {158:184};
Spline(8) = {184,93};

// Outer domain (points 20001-4 and lines)
Point(185) = {-13.50000000, -15.00000000, 0, 1.0};
Point(186) = {-13.50000000, 15.00000000, 0, 1.0};
Point(187) = {13.50000000, 15.00000000, 0, 1.0};
Point(188) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {185, 186};
Line(12) = {186, 187};
Line(13) = {187, 188};
Line(14) = {185, 188};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
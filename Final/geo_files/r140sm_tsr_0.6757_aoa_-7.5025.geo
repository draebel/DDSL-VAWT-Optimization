SetFactory("OpenCASCADE");

Point(1) = {0.074144, 0.749790, 0, 1.0};
Point(2) = {0.071356, 0.749829, 0, 1.0};
Point(3) = {0.068571, 0.749849, 0, 1.0};
Point(4) = {0.065888, 0.749876, 0, 1.0};
Point(5) = {0.062997, 0.749914, 0, 1.0};
Point(6) = {0.060209, 0.749953, 0, 1.0};
Point(7) = {0.057423, 0.749984, 0, 1.0};
Point(8) = {0.054639, 0.750000, 0, 1.0};
Point(9) = {0.051857, 0.750000, 0, 1.0};
Point(10) = {0.049076, 0.749986, 0, 1.0};
Point(11) = {0.046297, 0.749958, 0, 1.0};
Point(12) = {0.043561, 0.749924, 0, 1.0};
Point(13) = {0.040804, 0.749879, 0, 1.0};
Point(14) = {0.038004, 0.749824, 0, 1.0};
Point(15) = {0.035206, 0.749757, 0, 1.0};
Point(16) = {0.032586, 0.749680, 0, 1.0};
Point(17) = {0.029966, 0.749587, 0, 1.0};
Point(18) = {0.027088, 0.749459, 0, 1.0};
Point(19) = {0.024216, 0.749299, 0, 1.0};
Point(20) = {0.021695, 0.749126, 0, 1.0};
Point(21) = {0.019005, 0.748904, 0, 1.0};
Point(22) = {0.016061, 0.748613, 0, 1.0};
Point(23) = {0.013124, 0.748268, 0, 1.0};
Point(24) = {0.010541, 0.747912, 0, 1.0};
Point(25) = {0.007962, 0.747509, 0, 1.0};
Point(26) = {0.004954, 0.746980, 0, 1.0};
Point(27) = {0.002239, 0.746453, 0, 1.0};
Point(28) = {-0.000469, 0.745888, 0, 1.0};
Point(29) = {-0.003171, 0.745285, 0, 1.0};
Point(30) = {-0.005869, 0.744641, 0, 1.0};
Point(31) = {-0.008032, 0.744085, 0, 1.0};
Point(32) = {-0.009682, 0.743629, 0, 1.0};
Point(33) = {-0.011286, 0.743157, 0, 1.0};
Point(34) = {-0.012578, 0.742754, 0, 1.0};
Point(35) = {-0.013910, 0.742317, 0, 1.0};
Point(36) = {-0.015241, 0.741864, 0, 1.0};
Point(37) = {-0.016572, 0.741397, 0, 1.0};
Point(38) = {-0.017899, 0.740914, 0, 1.0};
Point(39) = {-0.019223, 0.740407, 0, 1.0};
Point(40) = {-0.020544, 0.739857, 0, 1.0};
Point(41) = {-0.021852, 0.739240, 0, 1.0};
Point(42) = {-0.022502, 0.738894, 0, 1.0};
Point(43) = {-0.023148, 0.738514, 0, 1.0};
Point(44) = {-0.023789, 0.738096, 0, 1.0};
Point(45) = {-0.024420, 0.737617, 0, 1.0};
Point(46) = {-0.024727, 0.737327, 0, 1.0};
Point(47) = {-0.025000, 0.736733, 0, 1.0};
Point(48) = {-0.024584, 0.736236, 0, 1.0};
Point(49) = {-0.024213, 0.736043, 0, 1.0};
Point(50) = {-0.023483, 0.735772, 0, 1.0};
Point(51) = {-0.022760, 0.735571, 0, 1.0};
Point(52) = {-0.022043, 0.735413, 0, 1.0};
Point(53) = {-0.021332, 0.735289, 0, 1.0};
Point(54) = {-0.019918, 0.735103, 0, 1.0};
Point(55) = {-0.018452, 0.734964, 0, 1.0};
Point(56) = {-0.017035, 0.734861, 0, 1.0};
Point(57) = {-0.015622, 0.734783, 0, 1.0};
Point(58) = {-0.014299, 0.734732, 0, 1.0};
Point(59) = {-0.012892, 0.734700, 0, 1.0};
Point(60) = {-0.011312, 0.734688, 0, 1.0};
Point(61) = {-0.009908, 0.734693, 0, 1.0};
Point(62) = {-0.008420, 0.734709, 0, 1.0};
Point(63) = {-0.006888, 0.734734, 0, 1.0};
Point(64) = {-0.004571, 0.734786, 0, 1.0};
Point(65) = {-0.001800, 0.734878, 0, 1.0};
Point(66) = {0.000963, 0.735009, 0, 1.0};
Point(67) = {0.003970, 0.735205, 0, 1.0};
Point(68) = {0.006477, 0.735409, 0, 1.0};
Point(69) = {0.009224, 0.735675, 0, 1.0};
Point(70) = {0.011966, 0.735982, 0, 1.0};
Point(71) = {0.014702, 0.736331, 0, 1.0};
Point(72) = {0.017433, 0.736716, 0, 1.0};
Point(73) = {0.020161, 0.737138, 0, 1.0};
Point(74) = {0.022884, 0.737591, 0, 1.0};
Point(75) = {0.025602, 0.738073, 0, 1.0};
Point(76) = {0.028258, 0.738575, 0, 1.0};
Point(77) = {0.031027, 0.739137, 0, 1.0};
Point(78) = {0.033733, 0.739722, 0, 1.0};
Point(79) = {0.036434, 0.740329, 0, 1.0};
Point(80) = {0.039130, 0.740941, 0, 1.0};
Point(81) = {0.041855, 0.741559, 0, 1.0};
Point(82) = {0.044541, 0.742167, 0, 1.0};
Point(83) = {0.047258, 0.742796, 0, 1.0};
Point(84) = {0.049938, 0.743438, 0, 1.0};
Point(85) = {0.052632, 0.744111, 0, 1.0};
Point(86) = {0.055500, 0.744847, 0, 1.0};
Point(87) = {0.058014, 0.745501, 0, 1.0};
Point(88) = {0.060704, 0.746199, 0, 1.0};
Point(89) = {0.063302, 0.746872, 0, 1.0};
Point(90) = {0.066086, 0.747594, 0, 1.0};
Point(91) = {0.068774, 0.748300, 0, 1.0};
Point(92) = {0.071462, 0.749026, 0, 1.0};
Point(93) = {-0.074144, -0.749790, 0, 1.0};
Point(94) = {-0.071356, -0.749829, 0, 1.0};
Point(95) = {-0.068571, -0.749849, 0, 1.0};
Point(96) = {-0.065888, -0.749876, 0, 1.0};
Point(97) = {-0.062997, -0.749914, 0, 1.0};
Point(98) = {-0.060209, -0.749953, 0, 1.0};
Point(99) = {-0.057423, -0.749984, 0, 1.0};
Point(100) = {-0.054639, -0.750000, 0, 1.0};
Point(101) = {-0.051857, -0.750000, 0, 1.0};
Point(102) = {-0.049076, -0.749986, 0, 1.0};
Point(103) = {-0.046297, -0.749958, 0, 1.0};
Point(104) = {-0.043561, -0.749924, 0, 1.0};
Point(105) = {-0.040804, -0.749879, 0, 1.0};
Point(106) = {-0.038004, -0.749824, 0, 1.0};
Point(107) = {-0.035206, -0.749757, 0, 1.0};
Point(108) = {-0.032586, -0.749680, 0, 1.0};
Point(109) = {-0.029966, -0.749587, 0, 1.0};
Point(110) = {-0.027088, -0.749459, 0, 1.0};
Point(111) = {-0.024216, -0.749299, 0, 1.0};
Point(112) = {-0.021695, -0.749126, 0, 1.0};
Point(113) = {-0.019005, -0.748904, 0, 1.0};
Point(114) = {-0.016061, -0.748613, 0, 1.0};
Point(115) = {-0.013124, -0.748268, 0, 1.0};
Point(116) = {-0.010541, -0.747912, 0, 1.0};
Point(117) = {-0.007962, -0.747509, 0, 1.0};
Point(118) = {-0.004954, -0.746980, 0, 1.0};
Point(119) = {-0.002239, -0.746453, 0, 1.0};
Point(120) = {0.000469, -0.745888, 0, 1.0};
Point(121) = {0.003171, -0.745285, 0, 1.0};
Point(122) = {0.005869, -0.744641, 0, 1.0};
Point(123) = {0.008032, -0.744085, 0, 1.0};
Point(124) = {0.009682, -0.743629, 0, 1.0};
Point(125) = {0.011286, -0.743157, 0, 1.0};
Point(126) = {0.012578, -0.742754, 0, 1.0};
Point(127) = {0.013910, -0.742317, 0, 1.0};
Point(128) = {0.015241, -0.741864, 0, 1.0};
Point(129) = {0.016572, -0.741397, 0, 1.0};
Point(130) = {0.017899, -0.740914, 0, 1.0};
Point(131) = {0.019223, -0.740407, 0, 1.0};
Point(132) = {0.020544, -0.739857, 0, 1.0};
Point(133) = {0.021852, -0.739240, 0, 1.0};
Point(134) = {0.022502, -0.738894, 0, 1.0};
Point(135) = {0.023148, -0.738514, 0, 1.0};
Point(136) = {0.023789, -0.738096, 0, 1.0};
Point(137) = {0.024420, -0.737617, 0, 1.0};
Point(138) = {0.024727, -0.737327, 0, 1.0};
Point(139) = {0.025000, -0.736733, 0, 1.0};
Point(140) = {0.024584, -0.736236, 0, 1.0};
Point(141) = {0.024213, -0.736043, 0, 1.0};
Point(142) = {0.023483, -0.735772, 0, 1.0};
Point(143) = {0.022760, -0.735571, 0, 1.0};
Point(144) = {0.022043, -0.735413, 0, 1.0};
Point(145) = {0.021332, -0.735289, 0, 1.0};
Point(146) = {0.019918, -0.735103, 0, 1.0};
Point(147) = {0.018452, -0.734964, 0, 1.0};
Point(148) = {0.017035, -0.734861, 0, 1.0};
Point(149) = {0.015622, -0.734783, 0, 1.0};
Point(150) = {0.014299, -0.734732, 0, 1.0};
Point(151) = {0.012892, -0.734700, 0, 1.0};
Point(152) = {0.011312, -0.734688, 0, 1.0};
Point(153) = {0.009908, -0.734693, 0, 1.0};
Point(154) = {0.008420, -0.734709, 0, 1.0};
Point(155) = {0.006888, -0.734734, 0, 1.0};
Point(156) = {0.004571, -0.734786, 0, 1.0};
Point(157) = {0.001800, -0.734878, 0, 1.0};
Point(158) = {-0.000963, -0.735009, 0, 1.0};
Point(159) = {-0.003970, -0.735205, 0, 1.0};
Point(160) = {-0.006477, -0.735409, 0, 1.0};
Point(161) = {-0.009224, -0.735675, 0, 1.0};
Point(162) = {-0.011966, -0.735982, 0, 1.0};
Point(163) = {-0.014702, -0.736331, 0, 1.0};
Point(164) = {-0.017433, -0.736716, 0, 1.0};
Point(165) = {-0.020161, -0.737138, 0, 1.0};
Point(166) = {-0.022884, -0.737591, 0, 1.0};
Point(167) = {-0.025602, -0.738073, 0, 1.0};
Point(168) = {-0.028258, -0.738575, 0, 1.0};
Point(169) = {-0.031027, -0.739137, 0, 1.0};
Point(170) = {-0.033733, -0.739722, 0, 1.0};
Point(171) = {-0.036434, -0.740329, 0, 1.0};
Point(172) = {-0.039130, -0.740941, 0, 1.0};
Point(173) = {-0.041855, -0.741559, 0, 1.0};
Point(174) = {-0.044541, -0.742167, 0, 1.0};
Point(175) = {-0.047258, -0.742796, 0, 1.0};
Point(176) = {-0.049938, -0.743438, 0, 1.0};
Point(177) = {-0.052632, -0.744111, 0, 1.0};
Point(178) = {-0.055500, -0.744847, 0, 1.0};
Point(179) = {-0.058014, -0.745501, 0, 1.0};
Point(180) = {-0.060704, -0.746199, 0, 1.0};
Point(181) = {-0.063302, -0.746872, 0, 1.0};
Point(182) = {-0.066086, -0.747594, 0, 1.0};
Point(183) = {-0.068774, -0.748300, 0, 1.0};
Point(184) = {-0.071462, -0.749026, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:66};
Spline(3) = {66:92};
Spline(4) = {92,1};

// Lines: second blade (splines 5-8)
Spline(5) = {93:119};
Spline(6) = {119:158};
Spline(7) = {158:184};
Spline(8) = {184,93};

// Outer domain (points 20001-4 and lines)
Point(185) = {-13.50000000, -15.00000000, 0, 1.0};
Point(186) = {-13.50000000, 15.00000000, 0, 1.0};
Point(187) = {13.50000000, 15.00000000, 0, 1.0};
Point(188) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {185, 186};
Line(12) = {186, 187};
Line(13) = {187, 188};
Line(14) = {185, 188};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
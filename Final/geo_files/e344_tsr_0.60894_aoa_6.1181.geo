SetFactory("OpenCASCADE");

Point(1) = {0.074685, 0.721359, 0, 1.0};
Point(2) = {0.071966, 0.722298, 0, 1.0};
Point(3) = {0.067942, 0.723558, 0, 1.0};
Point(4) = {0.063118, 0.725006, 0, 1.0};
Point(5) = {0.057587, 0.726661, 0, 1.0};
Point(6) = {0.051439, 0.728507, 0, 1.0};
Point(7) = {0.044780, 0.730525, 0, 1.0};
Point(8) = {0.037714, 0.732679, 0, 1.0};
Point(9) = {0.030350, 0.734928, 0, 1.0};
Point(10) = {0.022791, 0.737219, 0, 1.0};
Point(11) = {0.015141, 0.739498, 0, 1.0};
Point(12) = {0.007489, 0.741700, 0, 1.0};
Point(13) = {-0.000072, 0.743767, 0, 1.0};
Point(14) = {-0.007467, 0.745634, 0, 1.0};
Point(15) = {-0.014627, 0.747243, 0, 1.0};
Point(16) = {-0.021493, 0.748541, 0, 1.0};
Point(17) = {-0.028012, 0.749465, 0, 1.0};
Point(18) = {-0.034184, 0.749948, 0, 1.0};
Point(19) = {-0.040041, 0.750000, 0, 1.0};
Point(20) = {-0.045571, 0.749670, 0, 1.0};
Point(21) = {-0.050738, 0.749008, 0, 1.0};
Point(22) = {-0.055502, 0.748059, 0, 1.0};
Point(23) = {-0.059816, 0.746864, 0, 1.0};
Point(24) = {-0.063640, 0.745465, 0, 1.0};
Point(25) = {-0.066938, 0.743910, 0, 1.0};
Point(26) = {-0.069676, 0.742244, 0, 1.0};
Point(27) = {-0.071834, 0.740519, 0, 1.0};
Point(28) = {-0.073388, 0.738801, 0, 1.0};
Point(29) = {-0.074321, 0.737170, 0, 1.0};
Point(30) = {-0.074573, 0.736296, 0, 1.0};
Point(31) = {-0.074610, 0.735888, 0, 1.0};
Point(32) = {-0.074600, 0.735632, 0, 1.0};
Point(33) = {-0.074563, 0.735396, 0, 1.0};
Point(34) = {-0.074533, 0.735285, 0, 1.0};
Point(35) = {-0.074495, 0.735182, 0, 1.0};
Point(36) = {-0.074446, 0.735088, 0, 1.0};
Point(37) = {-0.074381, 0.735000, 0, 1.0};
Point(38) = {-0.074299, 0.734913, 0, 1.0};
Point(39) = {-0.074205, 0.734828, 0, 1.0};
Point(40) = {-0.073980, 0.734661, 0, 1.0};
Point(41) = {-0.073708, 0.734498, 0, 1.0};
Point(42) = {-0.073224, 0.734254, 0, 1.0};
Point(43) = {-0.072411, 0.733920, 0, 1.0};
Point(44) = {-0.069735, 0.733124, 0, 1.0};
Point(45) = {-0.066113, 0.732338, 0, 1.0};
Point(46) = {-0.061596, 0.731525, 0, 1.0};
Point(47) = {-0.056263, 0.730646, 0, 1.0};
Point(48) = {-0.050229, 0.729687, 0, 1.0};
Point(49) = {-0.043595, 0.728663, 0, 1.0};
Point(50) = {-0.036465, 0.727599, 0, 1.0};
Point(51) = {-0.028931, 0.726523, 0, 1.0};
Point(52) = {-0.021076, 0.725459, 0, 1.0};
Point(53) = {-0.012992, 0.724424, 0, 1.0};
Point(54) = {-0.004771, 0.723434, 0, 1.0};
Point(55) = {0.003495, 0.722502, 0, 1.0};
Point(56) = {0.011709, 0.721647, 0, 1.0};
Point(57) = {0.019778, 0.720880, 0, 1.0};
Point(58) = {0.027610, 0.720219, 0, 1.0};
Point(59) = {0.035116, 0.719680, 0, 1.0};
Point(60) = {0.042209, 0.719285, 0, 1.0};
Point(61) = {0.048805, 0.719084, 0, 1.0};
Point(62) = {0.054913, 0.719146, 0, 1.0};
Point(63) = {0.060620, 0.719408, 0, 1.0};
Point(64) = {0.065883, 0.719689, 0, 1.0};
Point(65) = {0.070551, 0.719866, 0, 1.0};
Point(66) = {0.074526, 0.719870, 0, 1.0};
Point(67) = {-0.074685, -0.721359, 0, 1.0};
Point(68) = {-0.071966, -0.722298, 0, 1.0};
Point(69) = {-0.067942, -0.723558, 0, 1.0};
Point(70) = {-0.063118, -0.725006, 0, 1.0};
Point(71) = {-0.057587, -0.726661, 0, 1.0};
Point(72) = {-0.051439, -0.728507, 0, 1.0};
Point(73) = {-0.044780, -0.730525, 0, 1.0};
Point(74) = {-0.037714, -0.732679, 0, 1.0};
Point(75) = {-0.030350, -0.734928, 0, 1.0};
Point(76) = {-0.022791, -0.737219, 0, 1.0};
Point(77) = {-0.015141, -0.739498, 0, 1.0};
Point(78) = {-0.007489, -0.741700, 0, 1.0};
Point(79) = {0.000072, -0.743767, 0, 1.0};
Point(80) = {0.007467, -0.745634, 0, 1.0};
Point(81) = {0.014627, -0.747243, 0, 1.0};
Point(82) = {0.021493, -0.748541, 0, 1.0};
Point(83) = {0.028012, -0.749465, 0, 1.0};
Point(84) = {0.034184, -0.749948, 0, 1.0};
Point(85) = {0.040041, -0.750000, 0, 1.0};
Point(86) = {0.045571, -0.749670, 0, 1.0};
Point(87) = {0.050738, -0.749008, 0, 1.0};
Point(88) = {0.055502, -0.748059, 0, 1.0};
Point(89) = {0.059816, -0.746864, 0, 1.0};
Point(90) = {0.063640, -0.745465, 0, 1.0};
Point(91) = {0.066938, -0.743910, 0, 1.0};
Point(92) = {0.069676, -0.742244, 0, 1.0};
Point(93) = {0.071834, -0.740519, 0, 1.0};
Point(94) = {0.073388, -0.738801, 0, 1.0};
Point(95) = {0.074321, -0.737170, 0, 1.0};
Point(96) = {0.074573, -0.736296, 0, 1.0};
Point(97) = {0.074610, -0.735888, 0, 1.0};
Point(98) = {0.074600, -0.735632, 0, 1.0};
Point(99) = {0.074563, -0.735396, 0, 1.0};
Point(100) = {0.074533, -0.735285, 0, 1.0};
Point(101) = {0.074495, -0.735182, 0, 1.0};
Point(102) = {0.074446, -0.735088, 0, 1.0};
Point(103) = {0.074381, -0.735000, 0, 1.0};
Point(104) = {0.074299, -0.734913, 0, 1.0};
Point(105) = {0.074205, -0.734828, 0, 1.0};
Point(106) = {0.073980, -0.734661, 0, 1.0};
Point(107) = {0.073708, -0.734498, 0, 1.0};
Point(108) = {0.073224, -0.734254, 0, 1.0};
Point(109) = {0.072411, -0.733920, 0, 1.0};
Point(110) = {0.069735, -0.733124, 0, 1.0};
Point(111) = {0.066113, -0.732338, 0, 1.0};
Point(112) = {0.061596, -0.731525, 0, 1.0};
Point(113) = {0.056263, -0.730646, 0, 1.0};
Point(114) = {0.050229, -0.729687, 0, 1.0};
Point(115) = {0.043595, -0.728663, 0, 1.0};
Point(116) = {0.036465, -0.727599, 0, 1.0};
Point(117) = {0.028931, -0.726523, 0, 1.0};
Point(118) = {0.021076, -0.725459, 0, 1.0};
Point(119) = {0.012992, -0.724424, 0, 1.0};
Point(120) = {0.004771, -0.723434, 0, 1.0};
Point(121) = {-0.003495, -0.722502, 0, 1.0};
Point(122) = {-0.011709, -0.721647, 0, 1.0};
Point(123) = {-0.019778, -0.720880, 0, 1.0};
Point(124) = {-0.027610, -0.720219, 0, 1.0};
Point(125) = {-0.035116, -0.719680, 0, 1.0};
Point(126) = {-0.042209, -0.719285, 0, 1.0};
Point(127) = {-0.048805, -0.719084, 0, 1.0};
Point(128) = {-0.054913, -0.719146, 0, 1.0};
Point(129) = {-0.060620, -0.719408, 0, 1.0};
Point(130) = {-0.065883, -0.719689, 0, 1.0};
Point(131) = {-0.070551, -0.719866, 0, 1.0};
Point(132) = {-0.074526, -0.719870, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
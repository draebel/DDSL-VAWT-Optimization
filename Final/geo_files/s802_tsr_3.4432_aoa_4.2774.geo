SetFactory("OpenCASCADE");

Point(1) = {0.074721, 0.735829, 0, 1.0};
Point(2) = {0.074396, 0.735959, 0, 1.0};
Point(3) = {0.073487, 0.736350, 0, 1.0};
Point(4) = {0.072100, 0.736951, 0, 1.0};
Point(5) = {0.070262, 0.737667, 0, 1.0};
Point(6) = {0.067947, 0.738462, 0, 1.0};
Point(7) = {0.065165, 0.739348, 0, 1.0};
Point(8) = {0.061962, 0.740324, 0, 1.0};
Point(9) = {0.058390, 0.741377, 0, 1.0};
Point(10) = {0.054499, 0.742485, 0, 1.0};
Point(11) = {0.050346, 0.743626, 0, 1.0};
Point(12) = {0.045988, 0.744771, 0, 1.0};
Point(13) = {0.041483, 0.745887, 0, 1.0};
Point(14) = {0.036886, 0.746937, 0, 1.0};
Point(15) = {0.032249, 0.747868, 0, 1.0};
Point(16) = {0.027588, 0.748620, 0, 1.0};
Point(17) = {0.022884, 0.749184, 0, 1.0};
Point(18) = {0.018159, 0.749590, 0, 1.0};
Point(19) = {0.013468, 0.749858, 0, 1.0};
Point(20) = {0.008858, 0.749993, 0, 1.0};
Point(21) = {0.004380, 0.750000, 0, 1.0};
Point(22) = {0.000082, 0.749886, 0, 1.0};
Point(23) = {-0.003992, 0.749657, 0, 1.0};
Point(24) = {-0.007800, 0.749319, 0, 1.0};
Point(25) = {-0.011303, 0.748880, 0, 1.0};
Point(26) = {-0.014461, 0.748349, 0, 1.0};
Point(27) = {-0.017246, 0.747737, 0, 1.0};
Point(28) = {-0.019626, 0.747053, 0, 1.0};
Point(29) = {-0.021583, 0.746310, 0, 1.0};
Point(30) = {-0.023099, 0.745521, 0, 1.0};
Point(31) = {-0.024168, 0.744701, 0, 1.0};
Point(32) = {-0.024802, 0.743880, 0, 1.0};
Point(33) = {-0.025000, 0.743288, 0, 1.0};
Point(34) = {-0.024998, 0.743123, 0, 1.0};
Point(35) = {-0.024660, 0.742506, 0, 1.0};
Point(36) = {-0.023727, 0.741979, 0, 1.0};
Point(37) = {-0.022232, 0.741476, 0, 1.0};
Point(38) = {-0.020200, 0.741010, 0, 1.0};
Point(39) = {-0.017653, 0.740580, 0, 1.0};
Point(40) = {-0.014615, 0.740186, 0, 1.0};
Point(41) = {-0.011120, 0.739828, 0, 1.0};
Point(42) = {-0.007204, 0.739500, 0, 1.0};
Point(43) = {-0.002911, 0.739198, 0, 1.0};
Point(44) = {0.001709, 0.738918, 0, 1.0};
Point(45) = {0.006600, 0.738659, 0, 1.0};
Point(46) = {0.011702, 0.738420, 0, 1.0};
Point(47) = {0.016953, 0.738199, 0, 1.0};
Point(48) = {0.022288, 0.738002, 0, 1.0};
Point(49) = {0.027641, 0.737834, 0, 1.0};
Point(50) = {0.032944, 0.737713, 0, 1.0};
Point(51) = {0.038145, 0.737671, 0, 1.0};
Point(52) = {0.043246, 0.737738, 0, 1.0};
Point(53) = {0.048266, 0.737855, 0, 1.0};
Point(54) = {0.053146, 0.737927, 0, 1.0};
Point(55) = {0.057778, 0.737897, 0, 1.0};
Point(56) = {0.062055, 0.737734, 0, 1.0};
Point(57) = {0.065854, 0.737427, 0, 1.0};
Point(58) = {0.069045, 0.737012, 0, 1.0};
Point(59) = {0.071545, 0.736569, 0, 1.0};
Point(60) = {0.073319, 0.736185, 0, 1.0};
Point(61) = {0.074373, 0.735922, 0, 1.0};
Point(62) = {-0.074721, -0.735829, 0, 1.0};
Point(63) = {-0.074396, -0.735959, 0, 1.0};
Point(64) = {-0.073487, -0.736350, 0, 1.0};
Point(65) = {-0.072100, -0.736951, 0, 1.0};
Point(66) = {-0.070262, -0.737667, 0, 1.0};
Point(67) = {-0.067947, -0.738462, 0, 1.0};
Point(68) = {-0.065165, -0.739348, 0, 1.0};
Point(69) = {-0.061962, -0.740324, 0, 1.0};
Point(70) = {-0.058390, -0.741377, 0, 1.0};
Point(71) = {-0.054499, -0.742485, 0, 1.0};
Point(72) = {-0.050346, -0.743626, 0, 1.0};
Point(73) = {-0.045988, -0.744771, 0, 1.0};
Point(74) = {-0.041483, -0.745887, 0, 1.0};
Point(75) = {-0.036886, -0.746937, 0, 1.0};
Point(76) = {-0.032249, -0.747868, 0, 1.0};
Point(77) = {-0.027588, -0.748620, 0, 1.0};
Point(78) = {-0.022884, -0.749184, 0, 1.0};
Point(79) = {-0.018159, -0.749590, 0, 1.0};
Point(80) = {-0.013468, -0.749858, 0, 1.0};
Point(81) = {-0.008858, -0.749993, 0, 1.0};
Point(82) = {-0.004380, -0.750000, 0, 1.0};
Point(83) = {-0.000082, -0.749886, 0, 1.0};
Point(84) = {0.003992, -0.749657, 0, 1.0};
Point(85) = {0.007800, -0.749319, 0, 1.0};
Point(86) = {0.011303, -0.748880, 0, 1.0};
Point(87) = {0.014461, -0.748349, 0, 1.0};
Point(88) = {0.017246, -0.747737, 0, 1.0};
Point(89) = {0.019626, -0.747053, 0, 1.0};
Point(90) = {0.021583, -0.746310, 0, 1.0};
Point(91) = {0.023099, -0.745521, 0, 1.0};
Point(92) = {0.024168, -0.744701, 0, 1.0};
Point(93) = {0.024802, -0.743880, 0, 1.0};
Point(94) = {0.025000, -0.743288, 0, 1.0};
Point(95) = {0.024998, -0.743123, 0, 1.0};
Point(96) = {0.024660, -0.742506, 0, 1.0};
Point(97) = {0.023727, -0.741979, 0, 1.0};
Point(98) = {0.022232, -0.741476, 0, 1.0};
Point(99) = {0.020200, -0.741010, 0, 1.0};
Point(100) = {0.017653, -0.740580, 0, 1.0};
Point(101) = {0.014615, -0.740186, 0, 1.0};
Point(102) = {0.011120, -0.739828, 0, 1.0};
Point(103) = {0.007204, -0.739500, 0, 1.0};
Point(104) = {0.002911, -0.739198, 0, 1.0};
Point(105) = {-0.001709, -0.738918, 0, 1.0};
Point(106) = {-0.006600, -0.738659, 0, 1.0};
Point(107) = {-0.011702, -0.738420, 0, 1.0};
Point(108) = {-0.016953, -0.738199, 0, 1.0};
Point(109) = {-0.022288, -0.738002, 0, 1.0};
Point(110) = {-0.027641, -0.737834, 0, 1.0};
Point(111) = {-0.032944, -0.737713, 0, 1.0};
Point(112) = {-0.038145, -0.737671, 0, 1.0};
Point(113) = {-0.043246, -0.737738, 0, 1.0};
Point(114) = {-0.048266, -0.737855, 0, 1.0};
Point(115) = {-0.053146, -0.737927, 0, 1.0};
Point(116) = {-0.057778, -0.737897, 0, 1.0};
Point(117) = {-0.062055, -0.737734, 0, 1.0};
Point(118) = {-0.065854, -0.737427, 0, 1.0};
Point(119) = {-0.069045, -0.737012, 0, 1.0};
Point(120) = {-0.071545, -0.736569, 0, 1.0};
Point(121) = {-0.073319, -0.736185, 0, 1.0};
Point(122) = {-0.074373, -0.735922, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149443, 0.721658, 0, 1.0};
Point(2) = {0.148792, 0.721917, 0, 1.0};
Point(3) = {0.146974, 0.722699, 0, 1.0};
Point(4) = {0.144200, 0.723902, 0, 1.0};
Point(5) = {0.140524, 0.725334, 0, 1.0};
Point(6) = {0.135894, 0.726923, 0, 1.0};
Point(7) = {0.130331, 0.728695, 0, 1.0};
Point(8) = {0.123924, 0.730649, 0, 1.0};
Point(9) = {0.116779, 0.732753, 0, 1.0};
Point(10) = {0.108997, 0.734970, 0, 1.0};
Point(11) = {0.100692, 0.737252, 0, 1.0};
Point(12) = {0.091977, 0.739542, 0, 1.0};
Point(13) = {0.082966, 0.741774, 0, 1.0};
Point(14) = {0.073771, 0.743874, 0, 1.0};
Point(15) = {0.064498, 0.745737, 0, 1.0};
Point(16) = {0.055176, 0.747240, 0, 1.0};
Point(17) = {0.045768, 0.748367, 0, 1.0};
Point(18) = {0.036319, 0.749180, 0, 1.0};
Point(19) = {0.026936, 0.749716, 0, 1.0};
Point(20) = {0.017717, 0.749986, 0, 1.0};
Point(21) = {0.008761, 0.750000, 0, 1.0};
Point(22) = {0.000164, 0.749773, 0, 1.0};
Point(23) = {-0.007985, 0.749313, 0, 1.0};
Point(24) = {-0.015601, 0.748637, 0, 1.0};
Point(25) = {-0.022606, 0.747759, 0, 1.0};
Point(26) = {-0.028922, 0.746697, 0, 1.0};
Point(27) = {-0.034491, 0.745473, 0, 1.0};
Point(28) = {-0.039252, 0.744107, 0, 1.0};
Point(29) = {-0.043166, 0.742620, 0, 1.0};
Point(30) = {-0.046198, 0.741042, 0, 1.0};
Point(31) = {-0.048337, 0.739401, 0, 1.0};
Point(32) = {-0.049605, 0.737759, 0, 1.0};
Point(33) = {-0.050000, 0.736575, 0, 1.0};
Point(34) = {-0.049997, 0.736246, 0, 1.0};
Point(35) = {-0.049321, 0.735012, 0, 1.0};
Point(36) = {-0.047454, 0.733958, 0, 1.0};
Point(37) = {-0.044465, 0.732952, 0, 1.0};
Point(38) = {-0.040401, 0.732021, 0, 1.0};
Point(39) = {-0.035307, 0.731160, 0, 1.0};
Point(40) = {-0.029231, 0.730373, 0, 1.0};
Point(41) = {-0.022241, 0.729656, 0, 1.0};
Point(42) = {-0.014408, 0.729000, 0, 1.0};
Point(43) = {-0.005821, 0.728395, 0, 1.0};
Point(44) = {0.003417, 0.727837, 0, 1.0};
Point(45) = {0.013200, 0.727318, 0, 1.0};
Point(46) = {0.023404, 0.726839, 0, 1.0};
Point(47) = {0.033907, 0.726399, 0, 1.0};
Point(48) = {0.044577, 0.726004, 0, 1.0};
Point(49) = {0.055282, 0.725668, 0, 1.0};
Point(50) = {0.065887, 0.725427, 0, 1.0};
Point(51) = {0.076290, 0.725343, 0, 1.0};
Point(52) = {0.086492, 0.725476, 0, 1.0};
Point(53) = {0.096532, 0.725710, 0, 1.0};
Point(54) = {0.106292, 0.725854, 0, 1.0};
Point(55) = {0.115557, 0.725793, 0, 1.0};
Point(56) = {0.124111, 0.725468, 0, 1.0};
Point(57) = {0.131708, 0.724854, 0, 1.0};
Point(58) = {0.138090, 0.724024, 0, 1.0};
Point(59) = {0.143090, 0.723138, 0, 1.0};
Point(60) = {0.146638, 0.722369, 0, 1.0};
Point(61) = {0.148747, 0.721845, 0, 1.0};
Point(62) = {-0.149443, -0.721658, 0, 1.0};
Point(63) = {-0.148792, -0.721917, 0, 1.0};
Point(64) = {-0.146974, -0.722699, 0, 1.0};
Point(65) = {-0.144200, -0.723902, 0, 1.0};
Point(66) = {-0.140524, -0.725334, 0, 1.0};
Point(67) = {-0.135894, -0.726923, 0, 1.0};
Point(68) = {-0.130331, -0.728695, 0, 1.0};
Point(69) = {-0.123924, -0.730649, 0, 1.0};
Point(70) = {-0.116779, -0.732753, 0, 1.0};
Point(71) = {-0.108997, -0.734970, 0, 1.0};
Point(72) = {-0.100692, -0.737252, 0, 1.0};
Point(73) = {-0.091977, -0.739542, 0, 1.0};
Point(74) = {-0.082966, -0.741774, 0, 1.0};
Point(75) = {-0.073771, -0.743874, 0, 1.0};
Point(76) = {-0.064498, -0.745737, 0, 1.0};
Point(77) = {-0.055176, -0.747240, 0, 1.0};
Point(78) = {-0.045768, -0.748367, 0, 1.0};
Point(79) = {-0.036319, -0.749180, 0, 1.0};
Point(80) = {-0.026936, -0.749716, 0, 1.0};
Point(81) = {-0.017717, -0.749986, 0, 1.0};
Point(82) = {-0.008761, -0.750000, 0, 1.0};
Point(83) = {-0.000164, -0.749773, 0, 1.0};
Point(84) = {0.007985, -0.749313, 0, 1.0};
Point(85) = {0.015601, -0.748637, 0, 1.0};
Point(86) = {0.022606, -0.747759, 0, 1.0};
Point(87) = {0.028922, -0.746697, 0, 1.0};
Point(88) = {0.034491, -0.745473, 0, 1.0};
Point(89) = {0.039252, -0.744107, 0, 1.0};
Point(90) = {0.043166, -0.742620, 0, 1.0};
Point(91) = {0.046198, -0.741042, 0, 1.0};
Point(92) = {0.048337, -0.739401, 0, 1.0};
Point(93) = {0.049605, -0.737759, 0, 1.0};
Point(94) = {0.050000, -0.736575, 0, 1.0};
Point(95) = {0.049997, -0.736246, 0, 1.0};
Point(96) = {0.049321, -0.735012, 0, 1.0};
Point(97) = {0.047454, -0.733958, 0, 1.0};
Point(98) = {0.044465, -0.732952, 0, 1.0};
Point(99) = {0.040401, -0.732021, 0, 1.0};
Point(100) = {0.035307, -0.731160, 0, 1.0};
Point(101) = {0.029231, -0.730373, 0, 1.0};
Point(102) = {0.022241, -0.729656, 0, 1.0};
Point(103) = {0.014408, -0.729000, 0, 1.0};
Point(104) = {0.005821, -0.728395, 0, 1.0};
Point(105) = {-0.003417, -0.727837, 0, 1.0};
Point(106) = {-0.013200, -0.727318, 0, 1.0};
Point(107) = {-0.023404, -0.726839, 0, 1.0};
Point(108) = {-0.033907, -0.726399, 0, 1.0};
Point(109) = {-0.044577, -0.726004, 0, 1.0};
Point(110) = {-0.055282, -0.725668, 0, 1.0};
Point(111) = {-0.065887, -0.725427, 0, 1.0};
Point(112) = {-0.076290, -0.725343, 0, 1.0};
Point(113) = {-0.086492, -0.725476, 0, 1.0};
Point(114) = {-0.096532, -0.725710, 0, 1.0};
Point(115) = {-0.106292, -0.725854, 0, 1.0};
Point(116) = {-0.115557, -0.725793, 0, 1.0};
Point(117) = {-0.124111, -0.725468, 0, 1.0};
Point(118) = {-0.131708, -0.724854, 0, 1.0};
Point(119) = {-0.138090, -0.724024, 0, 1.0};
Point(120) = {-0.143090, -0.723138, 0, 1.0};
Point(121) = {-0.146638, -0.722369, 0, 1.0};
Point(122) = {-0.148747, -0.721845, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
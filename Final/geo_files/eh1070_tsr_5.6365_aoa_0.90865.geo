SetFactory("OpenCASCADE");

Point(1) = {0.075003, 0.741767, 0, 1.0};
Point(2) = {0.072227, 0.742002, 0, 1.0};
Point(3) = {0.069097, 0.742273, 0, 1.0};
Point(4) = {0.065719, 0.742571, 0, 1.0};
Point(5) = {0.062109, 0.742893, 0, 1.0};
Point(6) = {0.058280, 0.743245, 0, 1.0};
Point(7) = {0.054245, 0.743619, 0, 1.0};
Point(8) = {0.050022, 0.744014, 0, 1.0};
Point(9) = {0.045629, 0.744428, 0, 1.0};
Point(10) = {0.041079, 0.744858, 0, 1.0};
Point(11) = {0.036393, 0.745300, 0, 1.0};
Point(12) = {0.031590, 0.745751, 0, 1.0};
Point(13) = {0.026688, 0.746209, 0, 1.0};
Point(14) = {0.021704, 0.746666, 0, 1.0};
Point(15) = {0.016662, 0.747119, 0, 1.0};
Point(16) = {0.011579, 0.747561, 0, 1.0};
Point(17) = {0.006474, 0.747987, 0, 1.0};
Point(18) = {0.001371, 0.748388, 0, 1.0};
Point(19) = {-0.003715, 0.748759, 0, 1.0};
Point(20) = {-0.008759, 0.749096, 0, 1.0};
Point(21) = {-0.013744, 0.749388, 0, 1.0};
Point(22) = {-0.018651, 0.749631, 0, 1.0};
Point(23) = {-0.023532, 0.749817, 0, 1.0};
Point(24) = {-0.028150, 0.749941, 0, 1.0};
Point(25) = {-0.032705, 0.750000, 0, 1.0};
Point(26) = {-0.037105, 0.749992, 0, 1.0};
Point(27) = {-0.041336, 0.749912, 0, 1.0};
Point(28) = {-0.045378, 0.749761, 0, 1.0};
Point(29) = {-0.049217, 0.749539, 0, 1.0};
Point(30) = {-0.052886, 0.749251, 0, 1.0};
Point(31) = {-0.056225, 0.748900, 0, 1.0};
Point(32) = {-0.059365, 0.748489, 0, 1.0};
Point(33) = {-0.062246, 0.748028, 0, 1.0};
Point(34) = {-0.064857, 0.747524, 0, 1.0};
Point(35) = {-0.067187, 0.746987, 0, 1.0};
Point(36) = {-0.069227, 0.746425, 0, 1.0};
Point(37) = {-0.070968, 0.745852, 0, 1.0};
Point(38) = {-0.072403, 0.745279, 0, 1.0};
Point(39) = {-0.073527, 0.744732, 0, 1.0};
Point(40) = {-0.074336, 0.744229, 0, 1.0};
Point(41) = {-0.074823, 0.743781, 0, 1.0};
Point(42) = {-0.074991, 0.743380, 0, 1.0};
Point(43) = {-0.074835, 0.743004, 0, 1.0};
Point(44) = {-0.074361, 0.742631, 0, 1.0};
Point(45) = {-0.073566, 0.742248, 0, 1.0};
Point(46) = {-0.072457, 0.741860, 0, 1.0};
Point(47) = {-0.071037, 0.741482, 0, 1.0};
Point(48) = {-0.069311, 0.741128, 0, 1.0};
Point(49) = {-0.067285, 0.740796, 0, 1.0};
Point(50) = {-0.064968, 0.740491, 0, 1.0};
Point(51) = {-0.062370, 0.740214, 0, 1.0};
Point(52) = {-0.059501, 0.739960, 0, 1.0};
Point(53) = {-0.056371, 0.739726, 0, 1.0};
Point(54) = {-0.053040, 0.739515, 0, 1.0};
Point(55) = {-0.049379, 0.739316, 0, 1.0};
Point(56) = {-0.045547, 0.739134, 0, 1.0};
Point(57) = {-0.041509, 0.738969, 0, 1.0};
Point(58) = {-0.037283, 0.738816, 0, 1.0};
Point(59) = {-0.032885, 0.738676, 0, 1.0};
Point(60) = {-0.028331, 0.738549, 0, 1.0};
Point(61) = {-0.023712, 0.738440, 0, 1.0};
Point(62) = {-0.018831, 0.738340, 0, 1.0};
Point(63) = {-0.013921, 0.738258, 0, 1.0};
Point(64) = {-0.008932, 0.738194, 0, 1.0};
Point(65) = {-0.003884, 0.738150, 0, 1.0};
Point(66) = {0.001208, 0.738126, 0, 1.0};
Point(67) = {0.006318, 0.738125, 0, 1.0};
Point(68) = {0.011429, 0.738146, 0, 1.0};
Point(69) = {0.016520, 0.738192, 0, 1.0};
Point(70) = {0.021571, 0.738260, 0, 1.0};
Point(71) = {0.026563, 0.738350, 0, 1.0};
Point(72) = {0.031475, 0.738463, 0, 1.0};
Point(73) = {0.036287, 0.738595, 0, 1.0};
Point(74) = {0.040982, 0.738744, 0, 1.0};
Point(75) = {0.045541, 0.738906, 0, 1.0};
Point(76) = {0.049944, 0.739077, 0, 1.0};
Point(77) = {0.054176, 0.739257, 0, 1.0};
Point(78) = {0.058219, 0.739437, 0, 1.0};
Point(79) = {0.062058, 0.739643, 0, 1.0};
Point(80) = {0.065675, 0.739791, 0, 1.0};
Point(81) = {0.069061, 0.739957, 0, 1.0};
Point(82) = {0.072197, 0.740112, 0, 1.0};
Point(83) = {0.074979, 0.740248, 0, 1.0};
Point(84) = {-0.075003, -0.741767, 0, 1.0};
Point(85) = {-0.072227, -0.742002, 0, 1.0};
Point(86) = {-0.069097, -0.742273, 0, 1.0};
Point(87) = {-0.065719, -0.742571, 0, 1.0};
Point(88) = {-0.062109, -0.742893, 0, 1.0};
Point(89) = {-0.058280, -0.743245, 0, 1.0};
Point(90) = {-0.054245, -0.743619, 0, 1.0};
Point(91) = {-0.050022, -0.744014, 0, 1.0};
Point(92) = {-0.045629, -0.744428, 0, 1.0};
Point(93) = {-0.041079, -0.744858, 0, 1.0};
Point(94) = {-0.036393, -0.745300, 0, 1.0};
Point(95) = {-0.031590, -0.745751, 0, 1.0};
Point(96) = {-0.026688, -0.746209, 0, 1.0};
Point(97) = {-0.021704, -0.746666, 0, 1.0};
Point(98) = {-0.016662, -0.747119, 0, 1.0};
Point(99) = {-0.011579, -0.747561, 0, 1.0};
Point(100) = {-0.006474, -0.747987, 0, 1.0};
Point(101) = {-0.001371, -0.748388, 0, 1.0};
Point(102) = {0.003715, -0.748759, 0, 1.0};
Point(103) = {0.008759, -0.749096, 0, 1.0};
Point(104) = {0.013744, -0.749388, 0, 1.0};
Point(105) = {0.018651, -0.749631, 0, 1.0};
Point(106) = {0.023532, -0.749817, 0, 1.0};
Point(107) = {0.028150, -0.749941, 0, 1.0};
Point(108) = {0.032705, -0.750000, 0, 1.0};
Point(109) = {0.037105, -0.749992, 0, 1.0};
Point(110) = {0.041336, -0.749912, 0, 1.0};
Point(111) = {0.045378, -0.749761, 0, 1.0};
Point(112) = {0.049217, -0.749539, 0, 1.0};
Point(113) = {0.052886, -0.749251, 0, 1.0};
Point(114) = {0.056225, -0.748900, 0, 1.0};
Point(115) = {0.059365, -0.748489, 0, 1.0};
Point(116) = {0.062246, -0.748028, 0, 1.0};
Point(117) = {0.064857, -0.747524, 0, 1.0};
Point(118) = {0.067187, -0.746987, 0, 1.0};
Point(119) = {0.069227, -0.746425, 0, 1.0};
Point(120) = {0.070968, -0.745852, 0, 1.0};
Point(121) = {0.072403, -0.745279, 0, 1.0};
Point(122) = {0.073527, -0.744732, 0, 1.0};
Point(123) = {0.074336, -0.744229, 0, 1.0};
Point(124) = {0.074823, -0.743781, 0, 1.0};
Point(125) = {0.074991, -0.743380, 0, 1.0};
Point(126) = {0.074835, -0.743004, 0, 1.0};
Point(127) = {0.074361, -0.742631, 0, 1.0};
Point(128) = {0.073566, -0.742248, 0, 1.0};
Point(129) = {0.072457, -0.741860, 0, 1.0};
Point(130) = {0.071037, -0.741482, 0, 1.0};
Point(131) = {0.069311, -0.741128, 0, 1.0};
Point(132) = {0.067285, -0.740796, 0, 1.0};
Point(133) = {0.064968, -0.740491, 0, 1.0};
Point(134) = {0.062370, -0.740214, 0, 1.0};
Point(135) = {0.059501, -0.739960, 0, 1.0};
Point(136) = {0.056371, -0.739726, 0, 1.0};
Point(137) = {0.053040, -0.739515, 0, 1.0};
Point(138) = {0.049379, -0.739316, 0, 1.0};
Point(139) = {0.045547, -0.739134, 0, 1.0};
Point(140) = {0.041509, -0.738969, 0, 1.0};
Point(141) = {0.037283, -0.738816, 0, 1.0};
Point(142) = {0.032885, -0.738676, 0, 1.0};
Point(143) = {0.028331, -0.738549, 0, 1.0};
Point(144) = {0.023712, -0.738440, 0, 1.0};
Point(145) = {0.018831, -0.738340, 0, 1.0};
Point(146) = {0.013921, -0.738258, 0, 1.0};
Point(147) = {0.008932, -0.738194, 0, 1.0};
Point(148) = {0.003884, -0.738150, 0, 1.0};
Point(149) = {-0.001208, -0.738126, 0, 1.0};
Point(150) = {-0.006318, -0.738125, 0, 1.0};
Point(151) = {-0.011429, -0.738146, 0, 1.0};
Point(152) = {-0.016520, -0.738192, 0, 1.0};
Point(153) = {-0.021571, -0.738260, 0, 1.0};
Point(154) = {-0.026563, -0.738350, 0, 1.0};
Point(155) = {-0.031475, -0.738463, 0, 1.0};
Point(156) = {-0.036287, -0.738595, 0, 1.0};
Point(157) = {-0.040982, -0.738744, 0, 1.0};
Point(158) = {-0.045541, -0.738906, 0, 1.0};
Point(159) = {-0.049944, -0.739077, 0, 1.0};
Point(160) = {-0.054176, -0.739257, 0, 1.0};
Point(161) = {-0.058219, -0.739437, 0, 1.0};
Point(162) = {-0.062058, -0.739643, 0, 1.0};
Point(163) = {-0.065675, -0.739791, 0, 1.0};
Point(164) = {-0.069061, -0.739957, 0, 1.0};
Point(165) = {-0.072197, -0.740112, 0, 1.0};
Point(166) = {-0.074979, -0.740248, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:59};
Spline(3) = {59:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:108};
Spline(6) = {108:142};
Spline(7) = {142:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111356, 0.746613, 0, 1.0};
Point(2) = {0.110855, 0.746667, 0, 1.0};
Point(3) = {0.109413, 0.746862, 0, 1.0};
Point(4) = {0.107141, 0.747193, 0, 1.0};
Point(5) = {0.104103, 0.747571, 0, 1.0};
Point(6) = {0.100315, 0.747944, 0, 1.0};
Point(7) = {0.095814, 0.748318, 0, 1.0};
Point(8) = {0.090663, 0.748694, 0, 1.0};
Point(9) = {0.084929, 0.749055, 0, 1.0};
Point(10) = {0.078685, 0.749384, 0, 1.0};
Point(11) = {0.072007, 0.749661, 0, 1.0};
Point(12) = {0.064974, 0.749870, 0, 1.0};
Point(13) = {0.057672, 0.749988, 0, 1.0};
Point(14) = {0.050192, 0.750000, 0, 1.0};
Point(15) = {0.042621, 0.749888, 0, 1.0};
Point(16) = {0.035015, 0.749632, 0, 1.0};
Point(17) = {0.027455, 0.749222, 0, 1.0};
Point(18) = {0.020004, 0.748647, 0, 1.0};
Point(19) = {0.012761, 0.747903, 0, 1.0};
Point(20) = {0.005791, 0.746986, 0, 1.0};
Point(21) = {-0.000836, 0.745897, 0, 1.0};
Point(22) = {-0.007058, 0.744641, 0, 1.0};
Point(23) = {-0.012820, 0.743227, 0, 1.0};
Point(24) = {-0.018068, 0.741672, 0, 1.0};
Point(25) = {-0.022757, 0.740000, 0, 1.0};
Point(26) = {-0.026848, 0.738234, 0, 1.0};
Point(27) = {-0.030307, 0.736411, 0, 1.0};
Point(28) = {-0.033119, 0.734564, 0, 1.0};
Point(29) = {-0.035233, 0.732740, 0, 1.0};
Point(30) = {-0.036717, 0.730982, 0, 1.0};
Point(31) = {-0.037424, 0.729410, 0, 1.0};
Point(32) = {-0.037500, 0.728123, 0, 1.0};
Point(33) = {-0.036687, 0.727104, 0, 1.0};
Point(34) = {-0.035077, 0.726324, 0, 1.0};
Point(35) = {-0.033196, 0.725734, 0, 1.0};
Point(36) = {-0.030598, 0.725270, 0, 1.0};
Point(37) = {-0.027500, 0.724988, 0, 1.0};
Point(38) = {-0.023684, 0.724892, 0, 1.0};
Point(39) = {-0.019606, 0.724944, 0, 1.0};
Point(40) = {-0.014879, 0.725180, 0, 1.0};
Point(41) = {-0.009666, 0.725584, 0, 1.0};
Point(42) = {-0.003999, 0.726143, 0, 1.0};
Point(43) = {0.002080, 0.726848, 0, 1.0};
Point(44) = {0.008533, 0.727688, 0, 1.0};
Point(45) = {0.015306, 0.728653, 0, 1.0};
Point(46) = {0.022341, 0.729731, 0, 1.0};
Point(47) = {0.029578, 0.730915, 0, 1.0};
Point(48) = {0.036949, 0.732198, 0, 1.0};
Point(49) = {0.044403, 0.733594, 0, 1.0};
Point(50) = {0.051835, 0.735136, 0, 1.0};
Point(51) = {0.059100, 0.736762, 0, 1.0};
Point(52) = {0.066138, 0.738380, 0, 1.0};
Point(53) = {0.072911, 0.739924, 0, 1.0};
Point(54) = {0.079351, 0.741353, 0, 1.0};
Point(55) = {0.085392, 0.742629, 0, 1.0};
Point(56) = {0.090959, 0.743732, 0, 1.0};
Point(57) = {0.095985, 0.744645, 0, 1.0};
Point(58) = {0.100397, 0.745367, 0, 1.0};
Point(59) = {0.104119, 0.745903, 0, 1.0};
Point(60) = {0.107127, 0.746272, 0, 1.0};
Point(61) = {0.109402, 0.746498, 0, 1.0};
Point(62) = {0.110854, 0.746593, 0, 1.0};
Point(63) = {-0.111356, -0.746613, 0, 1.0};
Point(64) = {-0.110855, -0.746667, 0, 1.0};
Point(65) = {-0.109413, -0.746862, 0, 1.0};
Point(66) = {-0.107141, -0.747193, 0, 1.0};
Point(67) = {-0.104103, -0.747571, 0, 1.0};
Point(68) = {-0.100315, -0.747944, 0, 1.0};
Point(69) = {-0.095814, -0.748318, 0, 1.0};
Point(70) = {-0.090663, -0.748694, 0, 1.0};
Point(71) = {-0.084929, -0.749055, 0, 1.0};
Point(72) = {-0.078685, -0.749384, 0, 1.0};
Point(73) = {-0.072007, -0.749661, 0, 1.0};
Point(74) = {-0.064974, -0.749870, 0, 1.0};
Point(75) = {-0.057672, -0.749988, 0, 1.0};
Point(76) = {-0.050192, -0.750000, 0, 1.0};
Point(77) = {-0.042621, -0.749888, 0, 1.0};
Point(78) = {-0.035015, -0.749632, 0, 1.0};
Point(79) = {-0.027455, -0.749222, 0, 1.0};
Point(80) = {-0.020004, -0.748647, 0, 1.0};
Point(81) = {-0.012761, -0.747903, 0, 1.0};
Point(82) = {-0.005791, -0.746986, 0, 1.0};
Point(83) = {0.000836, -0.745897, 0, 1.0};
Point(84) = {0.007058, -0.744641, 0, 1.0};
Point(85) = {0.012820, -0.743227, 0, 1.0};
Point(86) = {0.018068, -0.741672, 0, 1.0};
Point(87) = {0.022757, -0.740000, 0, 1.0};
Point(88) = {0.026848, -0.738234, 0, 1.0};
Point(89) = {0.030307, -0.736411, 0, 1.0};
Point(90) = {0.033119, -0.734564, 0, 1.0};
Point(91) = {0.035233, -0.732740, 0, 1.0};
Point(92) = {0.036717, -0.730982, 0, 1.0};
Point(93) = {0.037424, -0.729410, 0, 1.0};
Point(94) = {0.037500, -0.728123, 0, 1.0};
Point(95) = {0.036687, -0.727104, 0, 1.0};
Point(96) = {0.035077, -0.726324, 0, 1.0};
Point(97) = {0.033196, -0.725734, 0, 1.0};
Point(98) = {0.030598, -0.725270, 0, 1.0};
Point(99) = {0.027500, -0.724988, 0, 1.0};
Point(100) = {0.023684, -0.724892, 0, 1.0};
Point(101) = {0.019606, -0.724944, 0, 1.0};
Point(102) = {0.014879, -0.725180, 0, 1.0};
Point(103) = {0.009666, -0.725584, 0, 1.0};
Point(104) = {0.003999, -0.726143, 0, 1.0};
Point(105) = {-0.002080, -0.726848, 0, 1.0};
Point(106) = {-0.008533, -0.727688, 0, 1.0};
Point(107) = {-0.015306, -0.728653, 0, 1.0};
Point(108) = {-0.022341, -0.729731, 0, 1.0};
Point(109) = {-0.029578, -0.730915, 0, 1.0};
Point(110) = {-0.036949, -0.732198, 0, 1.0};
Point(111) = {-0.044403, -0.733594, 0, 1.0};
Point(112) = {-0.051835, -0.735136, 0, 1.0};
Point(113) = {-0.059100, -0.736762, 0, 1.0};
Point(114) = {-0.066138, -0.738380, 0, 1.0};
Point(115) = {-0.072911, -0.739924, 0, 1.0};
Point(116) = {-0.079351, -0.741353, 0, 1.0};
Point(117) = {-0.085392, -0.742629, 0, 1.0};
Point(118) = {-0.090959, -0.743732, 0, 1.0};
Point(119) = {-0.095985, -0.744645, 0, 1.0};
Point(120) = {-0.100397, -0.745367, 0, 1.0};
Point(121) = {-0.104119, -0.745903, 0, 1.0};
Point(122) = {-0.107127, -0.746272, 0, 1.0};
Point(123) = {-0.109402, -0.746498, 0, 1.0};
Point(124) = {-0.110854, -0.746593, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:83};
Spline(6) = {83:106};
Spline(7) = {106:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
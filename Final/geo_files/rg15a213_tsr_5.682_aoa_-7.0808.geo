SetFactory("OpenCASCADE");

Point(1) = {0.148475, 0.745484, 0, 1.0};
Point(2) = {0.147807, 0.745557, 0, 1.0};
Point(3) = {0.145884, 0.745816, 0, 1.0};
Point(4) = {0.142855, 0.746258, 0, 1.0};
Point(5) = {0.138803, 0.746762, 0, 1.0};
Point(6) = {0.133754, 0.747259, 0, 1.0};
Point(7) = {0.127752, 0.747757, 0, 1.0};
Point(8) = {0.120884, 0.748259, 0, 1.0};
Point(9) = {0.113239, 0.748740, 0, 1.0};
Point(10) = {0.104913, 0.749179, 0, 1.0};
Point(11) = {0.096010, 0.749548, 0, 1.0};
Point(12) = {0.086632, 0.749826, 0, 1.0};
Point(13) = {0.076896, 0.749983, 0, 1.0};
Point(14) = {0.066922, 0.750000, 0, 1.0};
Point(15) = {0.056828, 0.749851, 0, 1.0};
Point(16) = {0.046686, 0.749510, 0, 1.0};
Point(17) = {0.036607, 0.748963, 0, 1.0};
Point(18) = {0.026671, 0.748197, 0, 1.0};
Point(19) = {0.017014, 0.747205, 0, 1.0};
Point(20) = {0.007722, 0.745982, 0, 1.0};
Point(21) = {-0.001114, 0.744530, 0, 1.0};
Point(22) = {-0.009411, 0.742854, 0, 1.0};
Point(23) = {-0.017093, 0.740969, 0, 1.0};
Point(24) = {-0.024091, 0.738896, 0, 1.0};
Point(25) = {-0.030342, 0.736667, 0, 1.0};
Point(26) = {-0.035798, 0.734312, 0, 1.0};
Point(27) = {-0.040409, 0.731881, 0, 1.0};
Point(28) = {-0.044158, 0.729418, 0, 1.0};
Point(29) = {-0.046978, 0.726986, 0, 1.0};
Point(30) = {-0.048956, 0.724643, 0, 1.0};
Point(31) = {-0.049899, 0.722546, 0, 1.0};
Point(32) = {-0.050000, 0.720831, 0, 1.0};
Point(33) = {-0.048916, 0.719472, 0, 1.0};
Point(34) = {-0.046770, 0.718433, 0, 1.0};
Point(35) = {-0.044262, 0.717646, 0, 1.0};
Point(36) = {-0.040797, 0.717026, 0, 1.0};
Point(37) = {-0.036667, 0.716650, 0, 1.0};
Point(38) = {-0.031578, 0.716523, 0, 1.0};
Point(39) = {-0.026141, 0.716591, 0, 1.0};
Point(40) = {-0.019838, 0.716907, 0, 1.0};
Point(41) = {-0.012888, 0.717446, 0, 1.0};
Point(42) = {-0.005332, 0.718191, 0, 1.0};
Point(43) = {0.002774, 0.719131, 0, 1.0};
Point(44) = {0.011378, 0.720250, 0, 1.0};
Point(45) = {0.020408, 0.721537, 0, 1.0};
Point(46) = {0.029788, 0.722974, 0, 1.0};
Point(47) = {0.039437, 0.724554, 0, 1.0};
Point(48) = {0.049265, 0.726264, 0, 1.0};
Point(49) = {0.059204, 0.728126, 0, 1.0};
Point(50) = {0.069114, 0.730181, 0, 1.0};
Point(51) = {0.078800, 0.732350, 0, 1.0};
Point(52) = {0.088184, 0.734507, 0, 1.0};
Point(53) = {0.097215, 0.736566, 0, 1.0};
Point(54) = {0.105802, 0.738471, 0, 1.0};
Point(55) = {0.113855, 0.740172, 0, 1.0};
Point(56) = {0.121279, 0.741643, 0, 1.0};
Point(57) = {0.127980, 0.742860, 0, 1.0};
Point(58) = {0.133862, 0.743822, 0, 1.0};
Point(59) = {0.138826, 0.744538, 0, 1.0};
Point(60) = {0.142836, 0.745030, 0, 1.0};
Point(61) = {0.145870, 0.745330, 0, 1.0};
Point(62) = {0.147805, 0.745458, 0, 1.0};
Point(63) = {-0.148475, -0.745484, 0, 1.0};
Point(64) = {-0.147807, -0.745557, 0, 1.0};
Point(65) = {-0.145884, -0.745816, 0, 1.0};
Point(66) = {-0.142855, -0.746258, 0, 1.0};
Point(67) = {-0.138803, -0.746762, 0, 1.0};
Point(68) = {-0.133754, -0.747259, 0, 1.0};
Point(69) = {-0.127752, -0.747757, 0, 1.0};
Point(70) = {-0.120884, -0.748259, 0, 1.0};
Point(71) = {-0.113239, -0.748740, 0, 1.0};
Point(72) = {-0.104913, -0.749179, 0, 1.0};
Point(73) = {-0.096010, -0.749548, 0, 1.0};
Point(74) = {-0.086632, -0.749826, 0, 1.0};
Point(75) = {-0.076896, -0.749983, 0, 1.0};
Point(76) = {-0.066922, -0.750000, 0, 1.0};
Point(77) = {-0.056828, -0.749851, 0, 1.0};
Point(78) = {-0.046686, -0.749510, 0, 1.0};
Point(79) = {-0.036607, -0.748963, 0, 1.0};
Point(80) = {-0.026671, -0.748197, 0, 1.0};
Point(81) = {-0.017014, -0.747205, 0, 1.0};
Point(82) = {-0.007722, -0.745982, 0, 1.0};
Point(83) = {0.001114, -0.744530, 0, 1.0};
Point(84) = {0.009411, -0.742854, 0, 1.0};
Point(85) = {0.017093, -0.740969, 0, 1.0};
Point(86) = {0.024091, -0.738896, 0, 1.0};
Point(87) = {0.030342, -0.736667, 0, 1.0};
Point(88) = {0.035798, -0.734312, 0, 1.0};
Point(89) = {0.040409, -0.731881, 0, 1.0};
Point(90) = {0.044158, -0.729418, 0, 1.0};
Point(91) = {0.046978, -0.726986, 0, 1.0};
Point(92) = {0.048956, -0.724643, 0, 1.0};
Point(93) = {0.049899, -0.722546, 0, 1.0};
Point(94) = {0.050000, -0.720831, 0, 1.0};
Point(95) = {0.048916, -0.719472, 0, 1.0};
Point(96) = {0.046770, -0.718433, 0, 1.0};
Point(97) = {0.044262, -0.717646, 0, 1.0};
Point(98) = {0.040797, -0.717026, 0, 1.0};
Point(99) = {0.036667, -0.716650, 0, 1.0};
Point(100) = {0.031578, -0.716523, 0, 1.0};
Point(101) = {0.026141, -0.716591, 0, 1.0};
Point(102) = {0.019838, -0.716907, 0, 1.0};
Point(103) = {0.012888, -0.717446, 0, 1.0};
Point(104) = {0.005332, -0.718191, 0, 1.0};
Point(105) = {-0.002774, -0.719131, 0, 1.0};
Point(106) = {-0.011378, -0.720250, 0, 1.0};
Point(107) = {-0.020408, -0.721537, 0, 1.0};
Point(108) = {-0.029788, -0.722974, 0, 1.0};
Point(109) = {-0.039437, -0.724554, 0, 1.0};
Point(110) = {-0.049265, -0.726264, 0, 1.0};
Point(111) = {-0.059204, -0.728126, 0, 1.0};
Point(112) = {-0.069114, -0.730181, 0, 1.0};
Point(113) = {-0.078800, -0.732350, 0, 1.0};
Point(114) = {-0.088184, -0.734507, 0, 1.0};
Point(115) = {-0.097215, -0.736566, 0, 1.0};
Point(116) = {-0.105802, -0.738471, 0, 1.0};
Point(117) = {-0.113855, -0.740172, 0, 1.0};
Point(118) = {-0.121279, -0.741643, 0, 1.0};
Point(119) = {-0.127980, -0.742860, 0, 1.0};
Point(120) = {-0.133862, -0.743822, 0, 1.0};
Point(121) = {-0.138826, -0.744538, 0, 1.0};
Point(122) = {-0.142836, -0.745030, 0, 1.0};
Point(123) = {-0.145870, -0.745330, 0, 1.0};
Point(124) = {-0.147805, -0.745458, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:83};
Spline(6) = {83:106};
Spline(7) = {106:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
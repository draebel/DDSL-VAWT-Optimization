SetFactory("OpenCASCADE");

Point(1) = {0.073807, 0.731234, 0, 1.0};
Point(2) = {0.071607, 0.731529, 0, 1.0};
Point(3) = {0.068995, 0.732105, 0, 1.0};
Point(4) = {0.067789, 0.732430, 0, 1.0};
Point(5) = {0.065898, 0.732989, 0, 1.0};
Point(6) = {0.064012, 0.733581, 0, 1.0};
Point(7) = {0.062127, 0.734183, 0, 1.0};
Point(8) = {0.061184, 0.734482, 0, 1.0};
Point(9) = {0.059298, 0.735072, 0, 1.0};
Point(10) = {0.057409, 0.735648, 0, 1.0};
Point(11) = {0.055045, 0.736349, 0, 1.0};
Point(12) = {0.052678, 0.737034, 0, 1.0};
Point(13) = {0.050309, 0.737703, 0, 1.0};
Point(14) = {0.047938, 0.738359, 0, 1.0};
Point(15) = {0.045565, 0.739002, 0, 1.0};
Point(16) = {0.043190, 0.739631, 0, 1.0};
Point(17) = {0.040812, 0.740245, 0, 1.0};
Point(18) = {0.038432, 0.740845, 0, 1.0};
Point(19) = {0.036050, 0.741430, 0, 1.0};
Point(20) = {0.033665, 0.742001, 0, 1.0};
Point(21) = {0.031278, 0.742558, 0, 1.0};
Point(22) = {0.028889, 0.743101, 0, 1.0};
Point(23) = {0.026498, 0.743630, 0, 1.0};
Point(24) = {0.024105, 0.744145, 0, 1.0};
Point(25) = {0.021709, 0.744643, 0, 1.0};
Point(26) = {0.019310, 0.745127, 0, 1.0};
Point(27) = {0.016910, 0.745596, 0, 1.0};
Point(28) = {0.014507, 0.746055, 0, 1.0};
Point(29) = {0.012103, 0.746505, 0, 1.0};
Point(30) = {0.009699, 0.746950, 0, 1.0};
Point(31) = {0.007294, 0.747390, 0, 1.0};
Point(32) = {0.004887, 0.747823, 0, 1.0};
Point(33) = {0.002479, 0.748243, 0, 1.0};
Point(34) = {0.000067, 0.748642, 0, 1.0};
Point(35) = {-0.002349, 0.749012, 0, 1.0};
Point(36) = {-0.004772, 0.749343, 0, 1.0};
Point(37) = {-0.007202, 0.749624, 0, 1.0};
Point(38) = {-0.009643, 0.749842, 0, 1.0};
Point(39) = {-0.012096, 0.749978, 0, 1.0};
Point(40) = {-0.015063, 0.750000, 0, 1.0};
Point(41) = {-0.016058, 0.749963, 0, 1.0};
Point(42) = {-0.017059, 0.749898, 0, 1.0};
Point(43) = {-0.018064, 0.749801, 0, 1.0};
Point(44) = {-0.019076, 0.749664, 0, 1.0};
Point(45) = {-0.019993, 0.749499, 0, 1.0};
Point(46) = {-0.020608, 0.749364, 0, 1.0};
Point(47) = {-0.021020, 0.749261, 0, 1.0};
Point(48) = {-0.021643, 0.749083, 0, 1.0};
Point(49) = {-0.022375, 0.748835, 0, 1.0};
Point(50) = {-0.023117, 0.748524, 0, 1.0};
Point(51) = {-0.023766, 0.748175, 0, 1.0};
Point(52) = {-0.024077, 0.747964, 0, 1.0};
Point(53) = {-0.024327, 0.747758, 0, 1.0};
Point(54) = {-0.024713, 0.747320, 0, 1.0};
Point(55) = {-0.024849, 0.747090, 0, 1.0};
Point(56) = {-0.024926, 0.746911, 0, 1.0};
Point(57) = {-0.025000, 0.746634, 0, 1.0};
Point(58) = {-0.025012, 0.746373, 0, 1.0};
Point(59) = {-0.024986, 0.746219, 0, 1.0};
Point(60) = {-0.024917, 0.746035, 0, 1.0};
Point(61) = {-0.024652, 0.745706, 0, 1.0};
Point(62) = {-0.024458, 0.745556, 0, 1.0};
Point(63) = {-0.024205, 0.745403, 0, 1.0};
Point(64) = {-0.023652, 0.745143, 0, 1.0};
Point(65) = {-0.022998, 0.744898, 0, 1.0};
Point(66) = {-0.022339, 0.744684, 0, 1.0};
Point(67) = {-0.021771, 0.744516, 0, 1.0};
Point(68) = {-0.021392, 0.744409, 0, 1.0};
Point(69) = {-0.020823, 0.744255, 0, 1.0};
Point(70) = {-0.019967, 0.744034, 0, 1.0};
Point(71) = {-0.019014, 0.743798, 0, 1.0};
Point(72) = {-0.018060, 0.743568, 0, 1.0};
Point(73) = {-0.017106, 0.743342, 0, 1.0};
Point(74) = {-0.016152, 0.743117, 0, 1.0};
Point(75) = {-0.013287, 0.742450, 0, 1.0};
Point(76) = {-0.010899, 0.741902, 0, 1.0};
Point(77) = {-0.008510, 0.741363, 0, 1.0};
Point(78) = {-0.006118, 0.740836, 0, 1.0};
Point(79) = {-0.003724, 0.740327, 0, 1.0};
Point(80) = {-0.001326, 0.739838, 0, 1.0};
Point(81) = {0.001075, 0.739372, 0, 1.0};
Point(82) = {0.003479, 0.738925, 0, 1.0};
Point(83) = {0.005886, 0.738492, 0, 1.0};
Point(84) = {0.008294, 0.738070, 0, 1.0};
Point(85) = {0.010703, 0.737653, 0, 1.0};
Point(86) = {0.013113, 0.737242, 0, 1.0};
Point(87) = {0.015524, 0.736839, 0, 1.0};
Point(88) = {0.017937, 0.736448, 0, 1.0};
Point(89) = {0.020352, 0.736070, 0, 1.0};
Point(90) = {0.022770, 0.735708, 0, 1.0};
Point(91) = {0.025190, 0.735362, 0, 1.0};
Point(92) = {0.027612, 0.735031, 0, 1.0};
Point(93) = {0.030037, 0.734714, 0, 1.0};
Point(94) = {0.032464, 0.734410, 0, 1.0};
Point(95) = {0.034893, 0.734120, 0, 1.0};
Point(96) = {0.037324, 0.733844, 0, 1.0};
Point(97) = {0.039758, 0.733583, 0, 1.0};
Point(98) = {0.042194, 0.733336, 0, 1.0};
Point(99) = {0.044632, 0.733104, 0, 1.0};
Point(100) = {0.047072, 0.732885, 0, 1.0};
Point(101) = {0.049515, 0.732680, 0, 1.0};
Point(102) = {0.051959, 0.732489, 0, 1.0};
Point(103) = {0.054407, 0.732314, 0, 1.0};
Point(104) = {0.056857, 0.732157, 0, 1.0};
Point(105) = {0.058819, 0.732047, 0, 1.0};
Point(106) = {0.060784, 0.731949, 0, 1.0};
Point(107) = {0.061766, 0.731904, 0, 1.0};
Point(108) = {0.063732, 0.731812, 0, 1.0};
Point(109) = {0.065694, 0.731703, 0, 1.0};
Point(110) = {0.067651, 0.731557, 0, 1.0};
Point(111) = {0.068890, 0.731437, 0, 1.0};
Point(112) = {0.071538, 0.731093, 0, 1.0};
Point(113) = {0.073729, 0.730738, 0, 1.0};
Point(114) = {-0.073807, -0.731234, 0, 1.0};
Point(115) = {-0.071607, -0.731529, 0, 1.0};
Point(116) = {-0.068995, -0.732105, 0, 1.0};
Point(117) = {-0.067789, -0.732430, 0, 1.0};
Point(118) = {-0.065898, -0.732989, 0, 1.0};
Point(119) = {-0.064012, -0.733581, 0, 1.0};
Point(120) = {-0.062127, -0.734183, 0, 1.0};
Point(121) = {-0.061184, -0.734482, 0, 1.0};
Point(122) = {-0.059298, -0.735072, 0, 1.0};
Point(123) = {-0.057409, -0.735648, 0, 1.0};
Point(124) = {-0.055045, -0.736349, 0, 1.0};
Point(125) = {-0.052678, -0.737034, 0, 1.0};
Point(126) = {-0.050309, -0.737703, 0, 1.0};
Point(127) = {-0.047938, -0.738359, 0, 1.0};
Point(128) = {-0.045565, -0.739002, 0, 1.0};
Point(129) = {-0.043190, -0.739631, 0, 1.0};
Point(130) = {-0.040812, -0.740245, 0, 1.0};
Point(131) = {-0.038432, -0.740845, 0, 1.0};
Point(132) = {-0.036050, -0.741430, 0, 1.0};
Point(133) = {-0.033665, -0.742001, 0, 1.0};
Point(134) = {-0.031278, -0.742558, 0, 1.0};
Point(135) = {-0.028889, -0.743101, 0, 1.0};
Point(136) = {-0.026498, -0.743630, 0, 1.0};
Point(137) = {-0.024105, -0.744145, 0, 1.0};
Point(138) = {-0.021709, -0.744643, 0, 1.0};
Point(139) = {-0.019310, -0.745127, 0, 1.0};
Point(140) = {-0.016910, -0.745596, 0, 1.0};
Point(141) = {-0.014507, -0.746055, 0, 1.0};
Point(142) = {-0.012103, -0.746505, 0, 1.0};
Point(143) = {-0.009699, -0.746950, 0, 1.0};
Point(144) = {-0.007294, -0.747390, 0, 1.0};
Point(145) = {-0.004887, -0.747823, 0, 1.0};
Point(146) = {-0.002479, -0.748243, 0, 1.0};
Point(147) = {-0.000067, -0.748642, 0, 1.0};
Point(148) = {0.002349, -0.749012, 0, 1.0};
Point(149) = {0.004772, -0.749343, 0, 1.0};
Point(150) = {0.007202, -0.749624, 0, 1.0};
Point(151) = {0.009643, -0.749842, 0, 1.0};
Point(152) = {0.012096, -0.749978, 0, 1.0};
Point(153) = {0.015063, -0.750000, 0, 1.0};
Point(154) = {0.016058, -0.749963, 0, 1.0};
Point(155) = {0.017059, -0.749898, 0, 1.0};
Point(156) = {0.018064, -0.749801, 0, 1.0};
Point(157) = {0.019076, -0.749664, 0, 1.0};
Point(158) = {0.019993, -0.749499, 0, 1.0};
Point(159) = {0.020608, -0.749364, 0, 1.0};
Point(160) = {0.021020, -0.749261, 0, 1.0};
Point(161) = {0.021643, -0.749083, 0, 1.0};
Point(162) = {0.022375, -0.748835, 0, 1.0};
Point(163) = {0.023117, -0.748524, 0, 1.0};
Point(164) = {0.023766, -0.748175, 0, 1.0};
Point(165) = {0.024077, -0.747964, 0, 1.0};
Point(166) = {0.024327, -0.747758, 0, 1.0};
Point(167) = {0.024713, -0.747320, 0, 1.0};
Point(168) = {0.024849, -0.747090, 0, 1.0};
Point(169) = {0.024926, -0.746911, 0, 1.0};
Point(170) = {0.025000, -0.746634, 0, 1.0};
Point(171) = {0.025012, -0.746373, 0, 1.0};
Point(172) = {0.024986, -0.746219, 0, 1.0};
Point(173) = {0.024917, -0.746035, 0, 1.0};
Point(174) = {0.024652, -0.745706, 0, 1.0};
Point(175) = {0.024458, -0.745556, 0, 1.0};
Point(176) = {0.024205, -0.745403, 0, 1.0};
Point(177) = {0.023652, -0.745143, 0, 1.0};
Point(178) = {0.022998, -0.744898, 0, 1.0};
Point(179) = {0.022339, -0.744684, 0, 1.0};
Point(180) = {0.021771, -0.744516, 0, 1.0};
Point(181) = {0.021392, -0.744409, 0, 1.0};
Point(182) = {0.020823, -0.744255, 0, 1.0};
Point(183) = {0.019967, -0.744034, 0, 1.0};
Point(184) = {0.019014, -0.743798, 0, 1.0};
Point(185) = {0.018060, -0.743568, 0, 1.0};
Point(186) = {0.017106, -0.743342, 0, 1.0};
Point(187) = {0.016152, -0.743117, 0, 1.0};
Point(188) = {0.013287, -0.742450, 0, 1.0};
Point(189) = {0.010899, -0.741902, 0, 1.0};
Point(190) = {0.008510, -0.741363, 0, 1.0};
Point(191) = {0.006118, -0.740836, 0, 1.0};
Point(192) = {0.003724, -0.740327, 0, 1.0};
Point(193) = {0.001326, -0.739838, 0, 1.0};
Point(194) = {-0.001075, -0.739372, 0, 1.0};
Point(195) = {-0.003479, -0.738925, 0, 1.0};
Point(196) = {-0.005886, -0.738492, 0, 1.0};
Point(197) = {-0.008294, -0.738070, 0, 1.0};
Point(198) = {-0.010703, -0.737653, 0, 1.0};
Point(199) = {-0.013113, -0.737242, 0, 1.0};
Point(200) = {-0.015524, -0.736839, 0, 1.0};
Point(201) = {-0.017937, -0.736448, 0, 1.0};
Point(202) = {-0.020352, -0.736070, 0, 1.0};
Point(203) = {-0.022770, -0.735708, 0, 1.0};
Point(204) = {-0.025190, -0.735362, 0, 1.0};
Point(205) = {-0.027612, -0.735031, 0, 1.0};
Point(206) = {-0.030037, -0.734714, 0, 1.0};
Point(207) = {-0.032464, -0.734410, 0, 1.0};
Point(208) = {-0.034893, -0.734120, 0, 1.0};
Point(209) = {-0.037324, -0.733844, 0, 1.0};
Point(210) = {-0.039758, -0.733583, 0, 1.0};
Point(211) = {-0.042194, -0.733336, 0, 1.0};
Point(212) = {-0.044632, -0.733104, 0, 1.0};
Point(213) = {-0.047072, -0.732885, 0, 1.0};
Point(214) = {-0.049515, -0.732680, 0, 1.0};
Point(215) = {-0.051959, -0.732489, 0, 1.0};
Point(216) = {-0.054407, -0.732314, 0, 1.0};
Point(217) = {-0.056857, -0.732157, 0, 1.0};
Point(218) = {-0.058819, -0.732047, 0, 1.0};
Point(219) = {-0.060784, -0.731949, 0, 1.0};
Point(220) = {-0.061766, -0.731904, 0, 1.0};
Point(221) = {-0.063732, -0.731812, 0, 1.0};
Point(222) = {-0.065694, -0.731703, 0, 1.0};
Point(223) = {-0.067651, -0.731557, 0, 1.0};
Point(224) = {-0.068890, -0.731437, 0, 1.0};
Point(225) = {-0.071538, -0.731093, 0, 1.0};
Point(226) = {-0.073729, -0.730738, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:33};
Spline(2) = {33:82};
Spline(3) = {82:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:146};
Spline(6) = {146:195};
Spline(7) = {195:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.147615, 0.712469, 0, 1.0};
Point(2) = {0.143214, 0.713058, 0, 1.0};
Point(3) = {0.137990, 0.714209, 0, 1.0};
Point(4) = {0.135579, 0.714860, 0, 1.0};
Point(5) = {0.131796, 0.715978, 0, 1.0};
Point(6) = {0.128023, 0.717162, 0, 1.0};
Point(7) = {0.124254, 0.718366, 0, 1.0};
Point(8) = {0.122369, 0.718964, 0, 1.0};
Point(9) = {0.118595, 0.720144, 0, 1.0};
Point(10) = {0.114818, 0.721295, 0, 1.0};
Point(11) = {0.110090, 0.722699, 0, 1.0};
Point(12) = {0.105357, 0.724067, 0, 1.0};
Point(13) = {0.100619, 0.725407, 0, 1.0};
Point(14) = {0.095877, 0.726719, 0, 1.0};
Point(15) = {0.091130, 0.728004, 0, 1.0};
Point(16) = {0.086379, 0.729262, 0, 1.0};
Point(17) = {0.081624, 0.730490, 0, 1.0};
Point(18) = {0.076864, 0.731689, 0, 1.0};
Point(19) = {0.072099, 0.732859, 0, 1.0};
Point(20) = {0.067330, 0.734002, 0, 1.0};
Point(21) = {0.062557, 0.735116, 0, 1.0};
Point(22) = {0.057779, 0.736203, 0, 1.0};
Point(23) = {0.052996, 0.737261, 0, 1.0};
Point(24) = {0.048209, 0.738289, 0, 1.0};
Point(25) = {0.043417, 0.739287, 0, 1.0};
Point(26) = {0.038620, 0.740254, 0, 1.0};
Point(27) = {0.033819, 0.741193, 0, 1.0};
Point(28) = {0.029014, 0.742109, 0, 1.0};
Point(29) = {0.024207, 0.743010, 0, 1.0};
Point(30) = {0.019398, 0.743900, 0, 1.0};
Point(31) = {0.014587, 0.744780, 0, 1.0};
Point(32) = {0.009774, 0.745646, 0, 1.0};
Point(33) = {0.004957, 0.746486, 0, 1.0};
Point(34) = {0.000134, 0.747284, 0, 1.0};
Point(35) = {-0.004699, 0.748024, 0, 1.0};
Point(36) = {-0.009544, 0.748687, 0, 1.0};
Point(37) = {-0.014405, 0.749249, 0, 1.0};
Point(38) = {-0.019286, 0.749683, 0, 1.0};
Point(39) = {-0.024193, 0.749956, 0, 1.0};
Point(40) = {-0.030125, 0.750000, 0, 1.0};
Point(41) = {-0.032117, 0.749926, 0, 1.0};
Point(42) = {-0.034118, 0.749797, 0, 1.0};
Point(43) = {-0.036128, 0.749601, 0, 1.0};
Point(44) = {-0.038152, 0.749327, 0, 1.0};
Point(45) = {-0.039985, 0.748999, 0, 1.0};
Point(46) = {-0.041216, 0.748728, 0, 1.0};
Point(47) = {-0.042041, 0.748521, 0, 1.0};
Point(48) = {-0.043285, 0.748166, 0, 1.0};
Point(49) = {-0.044750, 0.747669, 0, 1.0};
Point(50) = {-0.046234, 0.747048, 0, 1.0};
Point(51) = {-0.047532, 0.746350, 0, 1.0};
Point(52) = {-0.048154, 0.745928, 0, 1.0};
Point(53) = {-0.048654, 0.745517, 0, 1.0};
Point(54) = {-0.049426, 0.744640, 0, 1.0};
Point(55) = {-0.049697, 0.744181, 0, 1.0};
Point(56) = {-0.049853, 0.743822, 0, 1.0};
Point(57) = {-0.050000, 0.743268, 0, 1.0};
Point(58) = {-0.050023, 0.742745, 0, 1.0};
Point(59) = {-0.049973, 0.742438, 0, 1.0};
Point(60) = {-0.049833, 0.742069, 0, 1.0};
Point(61) = {-0.049304, 0.741412, 0, 1.0};
Point(62) = {-0.048915, 0.741113, 0, 1.0};
Point(63) = {-0.048410, 0.740806, 0, 1.0};
Point(64) = {-0.047304, 0.740287, 0, 1.0};
Point(65) = {-0.045995, 0.739797, 0, 1.0};
Point(66) = {-0.044677, 0.739368, 0, 1.0};
Point(67) = {-0.043543, 0.739031, 0, 1.0};
Point(68) = {-0.042784, 0.738818, 0, 1.0};
Point(69) = {-0.041645, 0.738510, 0, 1.0};
Point(70) = {-0.039933, 0.738069, 0, 1.0};
Point(71) = {-0.038028, 0.737597, 0, 1.0};
Point(72) = {-0.036121, 0.737136, 0, 1.0};
Point(73) = {-0.034212, 0.736683, 0, 1.0};
Point(74) = {-0.032304, 0.736234, 0, 1.0};
Point(75) = {-0.026575, 0.734901, 0, 1.0};
Point(76) = {-0.021798, 0.733804, 0, 1.0};
Point(77) = {-0.017019, 0.732725, 0, 1.0};
Point(78) = {-0.012236, 0.731672, 0, 1.0};
Point(79) = {-0.007447, 0.730654, 0, 1.0};
Point(80) = {-0.002652, 0.729677, 0, 1.0};
Point(81) = {0.002150, 0.728744, 0, 1.0};
Point(82) = {0.006958, 0.727849, 0, 1.0};
Point(83) = {0.011771, 0.726985, 0, 1.0};
Point(84) = {0.016587, 0.726139, 0, 1.0};
Point(85) = {0.021406, 0.725306, 0, 1.0};
Point(86) = {0.026225, 0.724484, 0, 1.0};
Point(87) = {0.031048, 0.723678, 0, 1.0};
Point(88) = {0.035874, 0.722895, 0, 1.0};
Point(89) = {0.040704, 0.722140, 0, 1.0};
Point(90) = {0.045539, 0.721417, 0, 1.0};
Point(91) = {0.050380, 0.720724, 0, 1.0};
Point(92) = {0.055225, 0.720062, 0, 1.0};
Point(93) = {0.060074, 0.719427, 0, 1.0};
Point(94) = {0.064928, 0.718820, 0, 1.0};
Point(95) = {0.069786, 0.718240, 0, 1.0};
Point(96) = {0.074649, 0.717689, 0, 1.0};
Point(97) = {0.079516, 0.717166, 0, 1.0};
Point(98) = {0.084387, 0.716673, 0, 1.0};
Point(99) = {0.089264, 0.716208, 0, 1.0};
Point(100) = {0.094145, 0.715771, 0, 1.0};
Point(101) = {0.099029, 0.715360, 0, 1.0};
Point(102) = {0.103919, 0.714978, 0, 1.0};
Point(103) = {0.108813, 0.714628, 0, 1.0};
Point(104) = {0.113713, 0.714314, 0, 1.0};
Point(105) = {0.117638, 0.714093, 0, 1.0};
Point(106) = {0.121567, 0.713898, 0, 1.0};
Point(107) = {0.123533, 0.713808, 0, 1.0};
Point(108) = {0.127464, 0.713624, 0, 1.0};
Point(109) = {0.131389, 0.713406, 0, 1.0};
Point(110) = {0.135303, 0.713114, 0, 1.0};
Point(111) = {0.137779, 0.712874, 0, 1.0};
Point(112) = {0.143076, 0.712187, 0, 1.0};
Point(113) = {0.147458, 0.711476, 0, 1.0};
Point(114) = {-0.147615, -0.712469, 0, 1.0};
Point(115) = {-0.143214, -0.713058, 0, 1.0};
Point(116) = {-0.137990, -0.714209, 0, 1.0};
Point(117) = {-0.135579, -0.714860, 0, 1.0};
Point(118) = {-0.131796, -0.715978, 0, 1.0};
Point(119) = {-0.128023, -0.717162, 0, 1.0};
Point(120) = {-0.124254, -0.718366, 0, 1.0};
Point(121) = {-0.122369, -0.718964, 0, 1.0};
Point(122) = {-0.118595, -0.720144, 0, 1.0};
Point(123) = {-0.114818, -0.721295, 0, 1.0};
Point(124) = {-0.110090, -0.722699, 0, 1.0};
Point(125) = {-0.105357, -0.724067, 0, 1.0};
Point(126) = {-0.100619, -0.725407, 0, 1.0};
Point(127) = {-0.095877, -0.726719, 0, 1.0};
Point(128) = {-0.091130, -0.728004, 0, 1.0};
Point(129) = {-0.086379, -0.729262, 0, 1.0};
Point(130) = {-0.081624, -0.730490, 0, 1.0};
Point(131) = {-0.076864, -0.731689, 0, 1.0};
Point(132) = {-0.072099, -0.732859, 0, 1.0};
Point(133) = {-0.067330, -0.734002, 0, 1.0};
Point(134) = {-0.062557, -0.735116, 0, 1.0};
Point(135) = {-0.057779, -0.736203, 0, 1.0};
Point(136) = {-0.052996, -0.737261, 0, 1.0};
Point(137) = {-0.048209, -0.738289, 0, 1.0};
Point(138) = {-0.043417, -0.739287, 0, 1.0};
Point(139) = {-0.038620, -0.740254, 0, 1.0};
Point(140) = {-0.033819, -0.741193, 0, 1.0};
Point(141) = {-0.029014, -0.742109, 0, 1.0};
Point(142) = {-0.024207, -0.743010, 0, 1.0};
Point(143) = {-0.019398, -0.743900, 0, 1.0};
Point(144) = {-0.014587, -0.744780, 0, 1.0};
Point(145) = {-0.009774, -0.745646, 0, 1.0};
Point(146) = {-0.004957, -0.746486, 0, 1.0};
Point(147) = {-0.000134, -0.747284, 0, 1.0};
Point(148) = {0.004699, -0.748024, 0, 1.0};
Point(149) = {0.009544, -0.748687, 0, 1.0};
Point(150) = {0.014405, -0.749249, 0, 1.0};
Point(151) = {0.019286, -0.749683, 0, 1.0};
Point(152) = {0.024193, -0.749956, 0, 1.0};
Point(153) = {0.030125, -0.750000, 0, 1.0};
Point(154) = {0.032117, -0.749926, 0, 1.0};
Point(155) = {0.034118, -0.749797, 0, 1.0};
Point(156) = {0.036128, -0.749601, 0, 1.0};
Point(157) = {0.038152, -0.749327, 0, 1.0};
Point(158) = {0.039985, -0.748999, 0, 1.0};
Point(159) = {0.041216, -0.748728, 0, 1.0};
Point(160) = {0.042041, -0.748521, 0, 1.0};
Point(161) = {0.043285, -0.748166, 0, 1.0};
Point(162) = {0.044750, -0.747669, 0, 1.0};
Point(163) = {0.046234, -0.747048, 0, 1.0};
Point(164) = {0.047532, -0.746350, 0, 1.0};
Point(165) = {0.048154, -0.745928, 0, 1.0};
Point(166) = {0.048654, -0.745517, 0, 1.0};
Point(167) = {0.049426, -0.744640, 0, 1.0};
Point(168) = {0.049697, -0.744181, 0, 1.0};
Point(169) = {0.049853, -0.743822, 0, 1.0};
Point(170) = {0.050000, -0.743268, 0, 1.0};
Point(171) = {0.050023, -0.742745, 0, 1.0};
Point(172) = {0.049973, -0.742438, 0, 1.0};
Point(173) = {0.049833, -0.742069, 0, 1.0};
Point(174) = {0.049304, -0.741412, 0, 1.0};
Point(175) = {0.048915, -0.741113, 0, 1.0};
Point(176) = {0.048410, -0.740806, 0, 1.0};
Point(177) = {0.047304, -0.740287, 0, 1.0};
Point(178) = {0.045995, -0.739797, 0, 1.0};
Point(179) = {0.044677, -0.739368, 0, 1.0};
Point(180) = {0.043543, -0.739031, 0, 1.0};
Point(181) = {0.042784, -0.738818, 0, 1.0};
Point(182) = {0.041645, -0.738510, 0, 1.0};
Point(183) = {0.039933, -0.738069, 0, 1.0};
Point(184) = {0.038028, -0.737597, 0, 1.0};
Point(185) = {0.036121, -0.737136, 0, 1.0};
Point(186) = {0.034212, -0.736683, 0, 1.0};
Point(187) = {0.032304, -0.736234, 0, 1.0};
Point(188) = {0.026575, -0.734901, 0, 1.0};
Point(189) = {0.021798, -0.733804, 0, 1.0};
Point(190) = {0.017019, -0.732725, 0, 1.0};
Point(191) = {0.012236, -0.731672, 0, 1.0};
Point(192) = {0.007447, -0.730654, 0, 1.0};
Point(193) = {0.002652, -0.729677, 0, 1.0};
Point(194) = {-0.002150, -0.728744, 0, 1.0};
Point(195) = {-0.006958, -0.727849, 0, 1.0};
Point(196) = {-0.011771, -0.726985, 0, 1.0};
Point(197) = {-0.016587, -0.726139, 0, 1.0};
Point(198) = {-0.021406, -0.725306, 0, 1.0};
Point(199) = {-0.026225, -0.724484, 0, 1.0};
Point(200) = {-0.031048, -0.723678, 0, 1.0};
Point(201) = {-0.035874, -0.722895, 0, 1.0};
Point(202) = {-0.040704, -0.722140, 0, 1.0};
Point(203) = {-0.045539, -0.721417, 0, 1.0};
Point(204) = {-0.050380, -0.720724, 0, 1.0};
Point(205) = {-0.055225, -0.720062, 0, 1.0};
Point(206) = {-0.060074, -0.719427, 0, 1.0};
Point(207) = {-0.064928, -0.718820, 0, 1.0};
Point(208) = {-0.069786, -0.718240, 0, 1.0};
Point(209) = {-0.074649, -0.717689, 0, 1.0};
Point(210) = {-0.079516, -0.717166, 0, 1.0};
Point(211) = {-0.084387, -0.716673, 0, 1.0};
Point(212) = {-0.089264, -0.716208, 0, 1.0};
Point(213) = {-0.094145, -0.715771, 0, 1.0};
Point(214) = {-0.099029, -0.715360, 0, 1.0};
Point(215) = {-0.103919, -0.714978, 0, 1.0};
Point(216) = {-0.108813, -0.714628, 0, 1.0};
Point(217) = {-0.113713, -0.714314, 0, 1.0};
Point(218) = {-0.117638, -0.714093, 0, 1.0};
Point(219) = {-0.121567, -0.713898, 0, 1.0};
Point(220) = {-0.123533, -0.713808, 0, 1.0};
Point(221) = {-0.127464, -0.713624, 0, 1.0};
Point(222) = {-0.131389, -0.713406, 0, 1.0};
Point(223) = {-0.135303, -0.713114, 0, 1.0};
Point(224) = {-0.137779, -0.712874, 0, 1.0};
Point(225) = {-0.143076, -0.712187, 0, 1.0};
Point(226) = {-0.147458, -0.711476, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:33};
Spline(2) = {33:82};
Spline(3) = {82:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:146};
Spline(6) = {146:195};
Spline(7) = {195:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074135, 0.721852, 0, 1.0};
Point(2) = {0.070834, 0.722293, 0, 1.0};
Point(3) = {0.066917, 0.723157, 0, 1.0};
Point(4) = {0.065108, 0.723645, 0, 1.0};
Point(5) = {0.062271, 0.724484, 0, 1.0};
Point(6) = {0.059441, 0.725371, 0, 1.0};
Point(7) = {0.056614, 0.726274, 0, 1.0};
Point(8) = {0.055200, 0.726723, 0, 1.0};
Point(9) = {0.052370, 0.727608, 0, 1.0};
Point(10) = {0.049537, 0.728471, 0, 1.0};
Point(11) = {0.045991, 0.729524, 0, 1.0};
Point(12) = {0.042442, 0.730550, 0, 1.0};
Point(13) = {0.038888, 0.731555, 0, 1.0};
Point(14) = {0.035332, 0.732539, 0, 1.0};
Point(15) = {0.031772, 0.733503, 0, 1.0};
Point(16) = {0.028208, 0.734446, 0, 1.0};
Point(17) = {0.024642, 0.735368, 0, 1.0};
Point(18) = {0.021072, 0.736267, 0, 1.0};
Point(19) = {0.017498, 0.737145, 0, 1.0};
Point(20) = {0.013921, 0.738001, 0, 1.0};
Point(21) = {0.010341, 0.738837, 0, 1.0};
Point(22) = {0.006758, 0.739652, 0, 1.0};
Point(23) = {0.003171, 0.740446, 0, 1.0};
Point(24) = {-0.000419, 0.741217, 0, 1.0};
Point(25) = {-0.004013, 0.741965, 0, 1.0};
Point(26) = {-0.007611, 0.742691, 0, 1.0};
Point(27) = {-0.011212, 0.743395, 0, 1.0};
Point(28) = {-0.014816, 0.744082, 0, 1.0};
Point(29) = {-0.018421, 0.744757, 0, 1.0};
Point(30) = {-0.022028, 0.745425, 0, 1.0};
Point(31) = {-0.025636, 0.746085, 0, 1.0};
Point(32) = {-0.029245, 0.746735, 0, 1.0};
Point(33) = {-0.032858, 0.747364, 0, 1.0};
Point(34) = {-0.036476, 0.747963, 0, 1.0};
Point(35) = {-0.040100, 0.748518, 0, 1.0};
Point(36) = {-0.043734, 0.749015, 0, 1.0};
Point(37) = {-0.047380, 0.749437, 0, 1.0};
Point(38) = {-0.051041, 0.749763, 0, 1.0};
Point(39) = {-0.054720, 0.749967, 0, 1.0};
Point(40) = {-0.059170, 0.750000, 0, 1.0};
Point(41) = {-0.060664, 0.749945, 0, 1.0};
Point(42) = {-0.062164, 0.749847, 0, 1.0};
Point(43) = {-0.063672, 0.749701, 0, 1.0};
Point(44) = {-0.065190, 0.749495, 0, 1.0};
Point(45) = {-0.066565, 0.749249, 0, 1.0};
Point(46) = {-0.067488, 0.749046, 0, 1.0};
Point(47) = {-0.068107, 0.748891, 0, 1.0};
Point(48) = {-0.069040, 0.748625, 0, 1.0};
Point(49) = {-0.070138, 0.748252, 0, 1.0};
Point(50) = {-0.071251, 0.747786, 0, 1.0};
Point(51) = {-0.072225, 0.747263, 0, 1.0};
Point(52) = {-0.072691, 0.746946, 0, 1.0};
Point(53) = {-0.073067, 0.746637, 0, 1.0};
Point(54) = {-0.073646, 0.745980, 0, 1.0};
Point(55) = {-0.073849, 0.745636, 0, 1.0};
Point(56) = {-0.073966, 0.745367, 0, 1.0};
Point(57) = {-0.074076, 0.744951, 0, 1.0};
Point(58) = {-0.074094, 0.744559, 0, 1.0};
Point(59) = {-0.074056, 0.744328, 0, 1.0};
Point(60) = {-0.073951, 0.744052, 0, 1.0};
Point(61) = {-0.073554, 0.743559, 0, 1.0};
Point(62) = {-0.073263, 0.743334, 0, 1.0};
Point(63) = {-0.072883, 0.743105, 0, 1.0};
Point(64) = {-0.072054, 0.742715, 0, 1.0};
Point(65) = {-0.071073, 0.742347, 0, 1.0};
Point(66) = {-0.070084, 0.742026, 0, 1.0};
Point(67) = {-0.069233, 0.741774, 0, 1.0};
Point(68) = {-0.068664, 0.741613, 0, 1.0};
Point(69) = {-0.067810, 0.741382, 0, 1.0};
Point(70) = {-0.066526, 0.741051, 0, 1.0};
Point(71) = {-0.065097, 0.740698, 0, 1.0};
Point(72) = {-0.063667, 0.740352, 0, 1.0};
Point(73) = {-0.062235, 0.740012, 0, 1.0};
Point(74) = {-0.060804, 0.739675, 0, 1.0};
Point(75) = {-0.056507, 0.738676, 0, 1.0};
Point(76) = {-0.052925, 0.737853, 0, 1.0};
Point(77) = {-0.049340, 0.737044, 0, 1.0};
Point(78) = {-0.045753, 0.736254, 0, 1.0};
Point(79) = {-0.042162, 0.735490, 0, 1.0};
Point(80) = {-0.038565, 0.734758, 0, 1.0};
Point(81) = {-0.034964, 0.734058, 0, 1.0};
Point(82) = {-0.031357, 0.733387, 0, 1.0};
Point(83) = {-0.027748, 0.732738, 0, 1.0};
Point(84) = {-0.024136, 0.732104, 0, 1.0};
Point(85) = {-0.020522, 0.731479, 0, 1.0};
Point(86) = {-0.016907, 0.730863, 0, 1.0};
Point(87) = {-0.013290, 0.730259, 0, 1.0};
Point(88) = {-0.009671, 0.729671, 0, 1.0};
Point(89) = {-0.006048, 0.729105, 0, 1.0};
Point(90) = {-0.002421, 0.728562, 0, 1.0};
Point(91) = {0.001209, 0.728043, 0, 1.0};
Point(92) = {0.004842, 0.727546, 0, 1.0};
Point(93) = {0.008479, 0.727070, 0, 1.0};
Point(94) = {0.012120, 0.726615, 0, 1.0};
Point(95) = {0.015763, 0.726180, 0, 1.0};
Point(96) = {0.019410, 0.725767, 0, 1.0};
Point(97) = {0.023061, 0.725375, 0, 1.0};
Point(98) = {0.026714, 0.725004, 0, 1.0};
Point(99) = {0.030372, 0.724656, 0, 1.0};
Point(100) = {0.034032, 0.724328, 0, 1.0};
Point(101) = {0.037696, 0.724020, 0, 1.0};
Point(102) = {0.041363, 0.723734, 0, 1.0};
Point(103) = {0.045034, 0.723471, 0, 1.0};
Point(104) = {0.048709, 0.723236, 0, 1.0};
Point(105) = {0.051653, 0.723070, 0, 1.0};
Point(106) = {0.054599, 0.722924, 0, 1.0};
Point(107) = {0.056074, 0.722856, 0, 1.0};
Point(108) = {0.059022, 0.722718, 0, 1.0};
Point(109) = {0.061966, 0.722555, 0, 1.0};
Point(110) = {0.064901, 0.722336, 0, 1.0};
Point(111) = {0.066758, 0.722155, 0, 1.0};
Point(112) = {0.070731, 0.721640, 0, 1.0};
Point(113) = {0.074017, 0.721107, 0, 1.0};
Point(114) = {-0.074135, -0.721852, 0, 1.0};
Point(115) = {-0.070834, -0.722293, 0, 1.0};
Point(116) = {-0.066917, -0.723157, 0, 1.0};
Point(117) = {-0.065108, -0.723645, 0, 1.0};
Point(118) = {-0.062271, -0.724484, 0, 1.0};
Point(119) = {-0.059441, -0.725371, 0, 1.0};
Point(120) = {-0.056614, -0.726274, 0, 1.0};
Point(121) = {-0.055200, -0.726723, 0, 1.0};
Point(122) = {-0.052370, -0.727608, 0, 1.0};
Point(123) = {-0.049537, -0.728471, 0, 1.0};
Point(124) = {-0.045991, -0.729524, 0, 1.0};
Point(125) = {-0.042442, -0.730550, 0, 1.0};
Point(126) = {-0.038888, -0.731555, 0, 1.0};
Point(127) = {-0.035332, -0.732539, 0, 1.0};
Point(128) = {-0.031772, -0.733503, 0, 1.0};
Point(129) = {-0.028208, -0.734446, 0, 1.0};
Point(130) = {-0.024642, -0.735368, 0, 1.0};
Point(131) = {-0.021072, -0.736267, 0, 1.0};
Point(132) = {-0.017498, -0.737145, 0, 1.0};
Point(133) = {-0.013921, -0.738001, 0, 1.0};
Point(134) = {-0.010341, -0.738837, 0, 1.0};
Point(135) = {-0.006758, -0.739652, 0, 1.0};
Point(136) = {-0.003171, -0.740446, 0, 1.0};
Point(137) = {0.000419, -0.741217, 0, 1.0};
Point(138) = {0.004013, -0.741965, 0, 1.0};
Point(139) = {0.007611, -0.742691, 0, 1.0};
Point(140) = {0.011212, -0.743395, 0, 1.0};
Point(141) = {0.014816, -0.744082, 0, 1.0};
Point(142) = {0.018421, -0.744757, 0, 1.0};
Point(143) = {0.022028, -0.745425, 0, 1.0};
Point(144) = {0.025636, -0.746085, 0, 1.0};
Point(145) = {0.029245, -0.746735, 0, 1.0};
Point(146) = {0.032858, -0.747364, 0, 1.0};
Point(147) = {0.036476, -0.747963, 0, 1.0};
Point(148) = {0.040100, -0.748518, 0, 1.0};
Point(149) = {0.043734, -0.749015, 0, 1.0};
Point(150) = {0.047380, -0.749437, 0, 1.0};
Point(151) = {0.051041, -0.749763, 0, 1.0};
Point(152) = {0.054720, -0.749967, 0, 1.0};
Point(153) = {0.059170, -0.750000, 0, 1.0};
Point(154) = {0.060664, -0.749945, 0, 1.0};
Point(155) = {0.062164, -0.749847, 0, 1.0};
Point(156) = {0.063672, -0.749701, 0, 1.0};
Point(157) = {0.065190, -0.749495, 0, 1.0};
Point(158) = {0.066565, -0.749249, 0, 1.0};
Point(159) = {0.067488, -0.749046, 0, 1.0};
Point(160) = {0.068107, -0.748891, 0, 1.0};
Point(161) = {0.069040, -0.748625, 0, 1.0};
Point(162) = {0.070138, -0.748252, 0, 1.0};
Point(163) = {0.071251, -0.747786, 0, 1.0};
Point(164) = {0.072225, -0.747263, 0, 1.0};
Point(165) = {0.072691, -0.746946, 0, 1.0};
Point(166) = {0.073067, -0.746637, 0, 1.0};
Point(167) = {0.073646, -0.745980, 0, 1.0};
Point(168) = {0.073849, -0.745636, 0, 1.0};
Point(169) = {0.073966, -0.745367, 0, 1.0};
Point(170) = {0.074076, -0.744951, 0, 1.0};
Point(171) = {0.074094, -0.744559, 0, 1.0};
Point(172) = {0.074056, -0.744328, 0, 1.0};
Point(173) = {0.073951, -0.744052, 0, 1.0};
Point(174) = {0.073554, -0.743559, 0, 1.0};
Point(175) = {0.073263, -0.743334, 0, 1.0};
Point(176) = {0.072883, -0.743105, 0, 1.0};
Point(177) = {0.072054, -0.742715, 0, 1.0};
Point(178) = {0.071073, -0.742347, 0, 1.0};
Point(179) = {0.070084, -0.742026, 0, 1.0};
Point(180) = {0.069233, -0.741774, 0, 1.0};
Point(181) = {0.068664, -0.741613, 0, 1.0};
Point(182) = {0.067810, -0.741382, 0, 1.0};
Point(183) = {0.066526, -0.741051, 0, 1.0};
Point(184) = {0.065097, -0.740698, 0, 1.0};
Point(185) = {0.063667, -0.740352, 0, 1.0};
Point(186) = {0.062235, -0.740012, 0, 1.0};
Point(187) = {0.060804, -0.739675, 0, 1.0};
Point(188) = {0.056507, -0.738676, 0, 1.0};
Point(189) = {0.052925, -0.737853, 0, 1.0};
Point(190) = {0.049340, -0.737044, 0, 1.0};
Point(191) = {0.045753, -0.736254, 0, 1.0};
Point(192) = {0.042162, -0.735490, 0, 1.0};
Point(193) = {0.038565, -0.734758, 0, 1.0};
Point(194) = {0.034964, -0.734058, 0, 1.0};
Point(195) = {0.031357, -0.733387, 0, 1.0};
Point(196) = {0.027748, -0.732738, 0, 1.0};
Point(197) = {0.024136, -0.732104, 0, 1.0};
Point(198) = {0.020522, -0.731479, 0, 1.0};
Point(199) = {0.016907, -0.730863, 0, 1.0};
Point(200) = {0.013290, -0.730259, 0, 1.0};
Point(201) = {0.009671, -0.729671, 0, 1.0};
Point(202) = {0.006048, -0.729105, 0, 1.0};
Point(203) = {0.002421, -0.728562, 0, 1.0};
Point(204) = {-0.001209, -0.728043, 0, 1.0};
Point(205) = {-0.004842, -0.727546, 0, 1.0};
Point(206) = {-0.008479, -0.727070, 0, 1.0};
Point(207) = {-0.012120, -0.726615, 0, 1.0};
Point(208) = {-0.015763, -0.726180, 0, 1.0};
Point(209) = {-0.019410, -0.725767, 0, 1.0};
Point(210) = {-0.023061, -0.725375, 0, 1.0};
Point(211) = {-0.026714, -0.725004, 0, 1.0};
Point(212) = {-0.030372, -0.724656, 0, 1.0};
Point(213) = {-0.034032, -0.724328, 0, 1.0};
Point(214) = {-0.037696, -0.724020, 0, 1.0};
Point(215) = {-0.041363, -0.723734, 0, 1.0};
Point(216) = {-0.045034, -0.723471, 0, 1.0};
Point(217) = {-0.048709, -0.723236, 0, 1.0};
Point(218) = {-0.051653, -0.723070, 0, 1.0};
Point(219) = {-0.054599, -0.722924, 0, 1.0};
Point(220) = {-0.056074, -0.722856, 0, 1.0};
Point(221) = {-0.059022, -0.722718, 0, 1.0};
Point(222) = {-0.061966, -0.722555, 0, 1.0};
Point(223) = {-0.064901, -0.722336, 0, 1.0};
Point(224) = {-0.066758, -0.722155, 0, 1.0};
Point(225) = {-0.070731, -0.721640, 0, 1.0};
Point(226) = {-0.074017, -0.721107, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:33};
Spline(2) = {33:82};
Spline(3) = {82:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:146};
Spline(6) = {146:195};
Spline(7) = {195:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
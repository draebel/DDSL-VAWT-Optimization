SetFactory("OpenCASCADE");

Point(1) = {0.073883, 0.750000, 0, 1.0};
Point(2) = {0.066559, 0.748771, 0, 1.0};
Point(3) = {0.064317, 0.748672, 0, 1.0};
Point(4) = {0.060597, 0.748405, 0, 1.0};
Point(5) = {0.056133, 0.748088, 0, 1.0};
Point(6) = {0.050181, 0.747661, 0, 1.0};
Point(7) = {0.042741, 0.747124, 0, 1.0};
Point(8) = {0.035302, 0.746584, 0, 1.0};
Point(9) = {0.027861, 0.746058, 0, 1.0};
Point(10) = {0.020420, 0.745533, 0, 1.0};
Point(11) = {0.012981, 0.744992, 0, 1.0};
Point(12) = {0.005544, 0.744438, 0, 1.0};
Point(13) = {-0.001880, 0.743809, 0, 1.0};
Point(14) = {-0.009289, 0.743094, 0, 1.0};
Point(15) = {-0.016669, 0.742202, 0, 1.0};
Point(16) = {-0.024017, 0.741120, 0, 1.0};
Point(17) = {-0.031328, 0.739818, 0, 1.0};
Point(18) = {-0.038603, 0.738296, 0, 1.0};
Point(19) = {-0.045852, 0.736628, 0, 1.0};
Point(20) = {-0.051622, 0.735118, 0, 1.0};
Point(21) = {-0.056646, 0.733643, 0, 1.0};
Point(22) = {-0.060929, 0.732246, 0, 1.0};
Point(23) = {-0.064473, 0.730929, 0, 1.0};
Point(24) = {-0.067284, 0.729735, 0, 1.0};
Point(25) = {-0.069373, 0.728722, 0, 1.0};
Point(26) = {-0.070754, 0.727978, 0, 1.0};
Point(27) = {-0.071387, 0.727262, 0, 1.0};
Point(28) = {-0.072790, 0.726650, 0, 1.0};
Point(29) = {-0.073443, 0.726051, 0, 1.0};
Point(30) = {-0.073966, 0.724683, 0, 1.0};
Point(31) = {-0.073102, 0.724022, 0, 1.0};
Point(32) = {-0.072321, 0.723849, 0, 1.0};
Point(33) = {-0.070821, 0.723886, 0, 1.0};
Point(34) = {-0.070037, 0.723701, 0, 1.0};
Point(35) = {-0.068532, 0.723705, 0, 1.0};
Point(36) = {-0.066283, 0.723766, 0, 1.0};
Point(37) = {-0.063300, 0.723935, 0, 1.0};
Point(38) = {-0.059585, 0.724235, 0, 1.0};
Point(39) = {-0.055137, 0.724650, 0, 1.0};
Point(40) = {-0.049961, 0.725217, 0, 1.0};
Point(41) = {-0.044058, 0.725936, 0, 1.0};
Point(42) = {-0.036696, 0.726930, 0, 1.0};
Point(43) = {-0.029345, 0.727998, 0, 1.0};
Point(44) = {-0.022014, 0.729182, 0, 1.0};
Point(45) = {-0.014701, 0.730470, 0, 1.0};
Point(46) = {-0.007405, 0.731859, 0, 1.0};
Point(47) = {-0.000125, 0.733352, 0, 1.0};
Point(48) = {0.007144, 0.734903, 0, 1.0};
Point(49) = {0.014406, 0.736497, 0, 1.0};
Point(50) = {0.021668, 0.738092, 0, 1.0};
Point(51) = {0.028930, 0.739687, 0, 1.0};
Point(52) = {0.036192, 0.741282, 0, 1.0};
Point(53) = {0.043454, 0.742877, 0, 1.0};
Point(54) = {0.050716, 0.744471, 0, 1.0};
Point(55) = {0.056525, 0.745747, 0, 1.0};
Point(56) = {0.060882, 0.746704, 0, 1.0};
Point(57) = {0.064513, 0.747501, 0, 1.0};
Point(58) = {0.066682, 0.748039, 0, 1.0};
Point(59) = {0.074006, 0.749268, 0, 1.0};
Point(60) = {-0.073883, -0.750000, 0, 1.0};
Point(61) = {-0.066559, -0.748771, 0, 1.0};
Point(62) = {-0.064317, -0.748672, 0, 1.0};
Point(63) = {-0.060597, -0.748405, 0, 1.0};
Point(64) = {-0.056133, -0.748088, 0, 1.0};
Point(65) = {-0.050181, -0.747661, 0, 1.0};
Point(66) = {-0.042741, -0.747124, 0, 1.0};
Point(67) = {-0.035302, -0.746584, 0, 1.0};
Point(68) = {-0.027861, -0.746058, 0, 1.0};
Point(69) = {-0.020420, -0.745533, 0, 1.0};
Point(70) = {-0.012981, -0.744992, 0, 1.0};
Point(71) = {-0.005544, -0.744438, 0, 1.0};
Point(72) = {0.001880, -0.743809, 0, 1.0};
Point(73) = {0.009289, -0.743094, 0, 1.0};
Point(74) = {0.016669, -0.742202, 0, 1.0};
Point(75) = {0.024017, -0.741120, 0, 1.0};
Point(76) = {0.031328, -0.739818, 0, 1.0};
Point(77) = {0.038603, -0.738296, 0, 1.0};
Point(78) = {0.045852, -0.736628, 0, 1.0};
Point(79) = {0.051622, -0.735118, 0, 1.0};
Point(80) = {0.056646, -0.733643, 0, 1.0};
Point(81) = {0.060929, -0.732246, 0, 1.0};
Point(82) = {0.064473, -0.730929, 0, 1.0};
Point(83) = {0.067284, -0.729735, 0, 1.0};
Point(84) = {0.069373, -0.728722, 0, 1.0};
Point(85) = {0.070754, -0.727978, 0, 1.0};
Point(86) = {0.071387, -0.727262, 0, 1.0};
Point(87) = {0.072790, -0.726650, 0, 1.0};
Point(88) = {0.073443, -0.726051, 0, 1.0};
Point(89) = {0.073966, -0.724683, 0, 1.0};
Point(90) = {0.073102, -0.724022, 0, 1.0};
Point(91) = {0.072321, -0.723849, 0, 1.0};
Point(92) = {0.070821, -0.723886, 0, 1.0};
Point(93) = {0.070037, -0.723701, 0, 1.0};
Point(94) = {0.068532, -0.723705, 0, 1.0};
Point(95) = {0.066283, -0.723766, 0, 1.0};
Point(96) = {0.063300, -0.723935, 0, 1.0};
Point(97) = {0.059585, -0.724235, 0, 1.0};
Point(98) = {0.055137, -0.724650, 0, 1.0};
Point(99) = {0.049961, -0.725217, 0, 1.0};
Point(100) = {0.044058, -0.725936, 0, 1.0};
Point(101) = {0.036696, -0.726930, 0, 1.0};
Point(102) = {0.029345, -0.727998, 0, 1.0};
Point(103) = {0.022014, -0.729182, 0, 1.0};
Point(104) = {0.014701, -0.730470, 0, 1.0};
Point(105) = {0.007405, -0.731859, 0, 1.0};
Point(106) = {0.000125, -0.733352, 0, 1.0};
Point(107) = {-0.007144, -0.734903, 0, 1.0};
Point(108) = {-0.014406, -0.736497, 0, 1.0};
Point(109) = {-0.021668, -0.738092, 0, 1.0};
Point(110) = {-0.028930, -0.739687, 0, 1.0};
Point(111) = {-0.036192, -0.741282, 0, 1.0};
Point(112) = {-0.043454, -0.742877, 0, 1.0};
Point(113) = {-0.050716, -0.744471, 0, 1.0};
Point(114) = {-0.056525, -0.745747, 0, 1.0};
Point(115) = {-0.060882, -0.746704, 0, 1.0};
Point(116) = {-0.064513, -0.747501, 0, 1.0};
Point(117) = {-0.066682, -0.748039, 0, 1.0};
Point(118) = {-0.074006, -0.749268, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:42};
Spline(3) = {42:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:76};
Spline(6) = {76:101};
Spline(7) = {101:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
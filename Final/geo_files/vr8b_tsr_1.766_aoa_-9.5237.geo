SetFactory("OpenCASCADE");

Point(1) = {0.149103, 0.750000, 0, 1.0};
Point(2) = {0.139241, 0.748345, 0, 1.0};
Point(3) = {0.136222, 0.748211, 0, 1.0};
Point(4) = {0.131212, 0.747851, 0, 1.0};
Point(5) = {0.125200, 0.747425, 0, 1.0};
Point(6) = {0.117184, 0.746851, 0, 1.0};
Point(7) = {0.107166, 0.746127, 0, 1.0};
Point(8) = {0.097148, 0.745400, 0, 1.0};
Point(9) = {0.087127, 0.744692, 0, 1.0};
Point(10) = {0.077106, 0.743984, 0, 1.0};
Point(11) = {0.067089, 0.743257, 0, 1.0};
Point(12) = {0.057074, 0.742509, 0, 1.0};
Point(13) = {0.047076, 0.741663, 0, 1.0};
Point(14) = {0.037098, 0.740699, 0, 1.0};
Point(15) = {0.027160, 0.739498, 0, 1.0};
Point(16) = {0.017265, 0.738041, 0, 1.0};
Point(17) = {0.007419, 0.736288, 0, 1.0};
Point(18) = {-0.002377, 0.734239, 0, 1.0};
Point(19) = {-0.012140, 0.731993, 0, 1.0};
Point(20) = {-0.019910, 0.729959, 0, 1.0};
Point(21) = {-0.026675, 0.727972, 0, 1.0};
Point(22) = {-0.032443, 0.726092, 0, 1.0};
Point(23) = {-0.037215, 0.724318, 0, 1.0};
Point(24) = {-0.041002, 0.722709, 0, 1.0};
Point(25) = {-0.043815, 0.721345, 0, 1.0};
Point(26) = {-0.045674, 0.720344, 0, 1.0};
Point(27) = {-0.046527, 0.719379, 0, 1.0};
Point(28) = {-0.048416, 0.718555, 0, 1.0};
Point(29) = {-0.049295, 0.717749, 0, 1.0};
Point(30) = {-0.050000, 0.715907, 0, 1.0};
Point(31) = {-0.048837, 0.715017, 0, 1.0};
Point(32) = {-0.047784, 0.714784, 0, 1.0};
Point(33) = {-0.045764, 0.714833, 0, 1.0};
Point(34) = {-0.044708, 0.714584, 0, 1.0};
Point(35) = {-0.042681, 0.714589, 0, 1.0};
Point(36) = {-0.039653, 0.714672, 0, 1.0};
Point(37) = {-0.035635, 0.714900, 0, 1.0};
Point(38) = {-0.030633, 0.715303, 0, 1.0};
Point(39) = {-0.024643, 0.715862, 0, 1.0};
Point(40) = {-0.017673, 0.716625, 0, 1.0};
Point(41) = {-0.009724, 0.717594, 0, 1.0};
Point(42) = {0.000191, 0.718933, 0, 1.0};
Point(43) = {0.010090, 0.720370, 0, 1.0};
Point(44) = {0.019962, 0.721966, 0, 1.0};
Point(45) = {0.029811, 0.723699, 0, 1.0};
Point(46) = {0.039636, 0.725571, 0, 1.0};
Point(47) = {0.049439, 0.727580, 0, 1.0};
Point(48) = {0.059228, 0.729669, 0, 1.0};
Point(49) = {0.069008, 0.731816, 0, 1.0};
Point(50) = {0.078787, 0.733964, 0, 1.0};
Point(51) = {0.088567, 0.736112, 0, 1.0};
Point(52) = {0.098346, 0.738259, 0, 1.0};
Point(53) = {0.108126, 0.740407, 0, 1.0};
Point(54) = {0.117905, 0.742555, 0, 1.0};
Point(55) = {0.125729, 0.744273, 0, 1.0};
Point(56) = {0.131596, 0.745561, 0, 1.0};
Point(57) = {0.136486, 0.746635, 0, 1.0};
Point(58) = {0.139407, 0.747359, 0, 1.0};
Point(59) = {0.149269, 0.749014, 0, 1.0};
Point(60) = {-0.149103, -0.750000, 0, 1.0};
Point(61) = {-0.139241, -0.748345, 0, 1.0};
Point(62) = {-0.136222, -0.748211, 0, 1.0};
Point(63) = {-0.131212, -0.747851, 0, 1.0};
Point(64) = {-0.125200, -0.747425, 0, 1.0};
Point(65) = {-0.117184, -0.746851, 0, 1.0};
Point(66) = {-0.107166, -0.746127, 0, 1.0};
Point(67) = {-0.097148, -0.745400, 0, 1.0};
Point(68) = {-0.087127, -0.744692, 0, 1.0};
Point(69) = {-0.077106, -0.743984, 0, 1.0};
Point(70) = {-0.067089, -0.743257, 0, 1.0};
Point(71) = {-0.057074, -0.742509, 0, 1.0};
Point(72) = {-0.047076, -0.741663, 0, 1.0};
Point(73) = {-0.037098, -0.740699, 0, 1.0};
Point(74) = {-0.027160, -0.739498, 0, 1.0};
Point(75) = {-0.017265, -0.738041, 0, 1.0};
Point(76) = {-0.007419, -0.736288, 0, 1.0};
Point(77) = {0.002377, -0.734239, 0, 1.0};
Point(78) = {0.012140, -0.731993, 0, 1.0};
Point(79) = {0.019910, -0.729959, 0, 1.0};
Point(80) = {0.026675, -0.727972, 0, 1.0};
Point(81) = {0.032443, -0.726092, 0, 1.0};
Point(82) = {0.037215, -0.724318, 0, 1.0};
Point(83) = {0.041002, -0.722709, 0, 1.0};
Point(84) = {0.043815, -0.721345, 0, 1.0};
Point(85) = {0.045674, -0.720344, 0, 1.0};
Point(86) = {0.046527, -0.719379, 0, 1.0};
Point(87) = {0.048416, -0.718555, 0, 1.0};
Point(88) = {0.049295, -0.717749, 0, 1.0};
Point(89) = {0.050000, -0.715907, 0, 1.0};
Point(90) = {0.048837, -0.715017, 0, 1.0};
Point(91) = {0.047784, -0.714784, 0, 1.0};
Point(92) = {0.045764, -0.714833, 0, 1.0};
Point(93) = {0.044708, -0.714584, 0, 1.0};
Point(94) = {0.042681, -0.714589, 0, 1.0};
Point(95) = {0.039653, -0.714672, 0, 1.0};
Point(96) = {0.035635, -0.714900, 0, 1.0};
Point(97) = {0.030633, -0.715303, 0, 1.0};
Point(98) = {0.024643, -0.715862, 0, 1.0};
Point(99) = {0.017673, -0.716625, 0, 1.0};
Point(100) = {0.009724, -0.717594, 0, 1.0};
Point(101) = {-0.000191, -0.718933, 0, 1.0};
Point(102) = {-0.010090, -0.720370, 0, 1.0};
Point(103) = {-0.019962, -0.721966, 0, 1.0};
Point(104) = {-0.029811, -0.723699, 0, 1.0};
Point(105) = {-0.039636, -0.725571, 0, 1.0};
Point(106) = {-0.049439, -0.727580, 0, 1.0};
Point(107) = {-0.059228, -0.729669, 0, 1.0};
Point(108) = {-0.069008, -0.731816, 0, 1.0};
Point(109) = {-0.078787, -0.733964, 0, 1.0};
Point(110) = {-0.088567, -0.736112, 0, 1.0};
Point(111) = {-0.098346, -0.738259, 0, 1.0};
Point(112) = {-0.108126, -0.740407, 0, 1.0};
Point(113) = {-0.117905, -0.742555, 0, 1.0};
Point(114) = {-0.125729, -0.744273, 0, 1.0};
Point(115) = {-0.131596, -0.745561, 0, 1.0};
Point(116) = {-0.136486, -0.746635, 0, 1.0};
Point(117) = {-0.139407, -0.747359, 0, 1.0};
Point(118) = {-0.149269, -0.749014, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:42};
Spline(3) = {42:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:76};
Spline(6) = {76:101};
Spline(7) = {101:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
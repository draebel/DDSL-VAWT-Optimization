SetFactory("OpenCASCADE");

Point(1) = {0.074645, 0.743728, 0, 1.0};
Point(2) = {0.073675, 0.743796, 0, 1.0};
Point(3) = {0.072088, 0.743933, 0, 1.0};
Point(4) = {0.069919, 0.744153, 0, 1.0};
Point(5) = {0.067216, 0.744460, 0, 1.0};
Point(6) = {0.064031, 0.744854, 0, 1.0};
Point(7) = {0.060422, 0.745323, 0, 1.0};
Point(8) = {0.056446, 0.745853, 0, 1.0};
Point(9) = {0.052162, 0.746426, 0, 1.0};
Point(10) = {0.047624, 0.747017, 0, 1.0};
Point(11) = {0.042891, 0.747604, 0, 1.0};
Point(12) = {0.038013, 0.748167, 0, 1.0};
Point(13) = {0.033044, 0.748683, 0, 1.0};
Point(14) = {0.028033, 0.749134, 0, 1.0};
Point(15) = {0.023032, 0.749503, 0, 1.0};
Point(16) = {0.018086, 0.749779, 0, 1.0};
Point(17) = {0.013244, 0.749948, 0, 1.0};
Point(18) = {0.008553, 0.750000, 0, 1.0};
Point(19) = {0.004054, 0.749925, 0, 1.0};
Point(20) = {-0.000223, 0.749717, 0, 1.0};
Point(21) = {-0.004242, 0.749381, 0, 1.0};
Point(22) = {-0.007970, 0.748921, 0, 1.0};
Point(23) = {-0.011378, 0.748344, 0, 1.0};
Point(24) = {-0.014442, 0.747658, 0, 1.0};
Point(25) = {-0.017140, 0.746878, 0, 1.0};
Point(26) = {-0.019455, 0.746018, 0, 1.0};
Point(27) = {-0.021376, 0.745099, 0, 1.0};
Point(28) = {-0.022893, 0.744146, 0, 1.0};
Point(29) = {-0.024002, 0.743188, 0, 1.0};
Point(30) = {-0.024703, 0.742263, 0, 1.0};
Point(31) = {-0.024997, 0.741429, 0, 1.0};
Point(32) = {-0.024806, 0.740791, 0, 1.0};
Point(33) = {-0.024043, 0.740304, 0, 1.0};
Point(34) = {-0.022726, 0.739877, 0, 1.0};
Point(35) = {-0.020895, 0.739532, 0, 1.0};
Point(36) = {-0.018568, 0.739279, 0, 1.0};
Point(37) = {-0.015765, 0.739121, 0, 1.0};
Point(38) = {-0.012507, 0.739059, 0, 1.0};
Point(39) = {-0.008823, 0.739088, 0, 1.0};
Point(40) = {-0.004744, 0.739201, 0, 1.0};
Point(41) = {-0.000312, 0.739385, 0, 1.0};
Point(42) = {0.004425, 0.739630, 0, 1.0};
Point(43) = {0.009414, 0.739927, 0, 1.0};
Point(44) = {0.014602, 0.740262, 0, 1.0};
Point(45) = {0.019928, 0.740629, 0, 1.0};
Point(46) = {0.025334, 0.741013, 0, 1.0};
Point(47) = {0.030757, 0.741404, 0, 1.0};
Point(48) = {0.036133, 0.741790, 0, 1.0};
Point(49) = {0.041398, 0.742160, 0, 1.0};
Point(50) = {0.046487, 0.742505, 0, 1.0};
Point(51) = {0.051336, 0.742814, 0, 1.0};
Point(52) = {0.055882, 0.743082, 0, 1.0};
Point(53) = {0.060064, 0.743303, 0, 1.0};
Point(54) = {0.063825, 0.743474, 0, 1.0};
Point(55) = {0.067112, 0.743597, 0, 1.0};
Point(56) = {0.069876, 0.743673, 0, 1.0};
Point(57) = {0.072075, 0.743712, 0, 1.0};
Point(58) = {0.073674, 0.743720, 0, 1.0};
Point(59) = {0.074645, 0.743714, 0, 1.0};
Point(60) = {-0.074645, -0.743728, 0, 1.0};
Point(61) = {-0.073675, -0.743796, 0, 1.0};
Point(62) = {-0.072088, -0.743933, 0, 1.0};
Point(63) = {-0.069919, -0.744153, 0, 1.0};
Point(64) = {-0.067216, -0.744460, 0, 1.0};
Point(65) = {-0.064031, -0.744854, 0, 1.0};
Point(66) = {-0.060422, -0.745323, 0, 1.0};
Point(67) = {-0.056446, -0.745853, 0, 1.0};
Point(68) = {-0.052162, -0.746426, 0, 1.0};
Point(69) = {-0.047624, -0.747017, 0, 1.0};
Point(70) = {-0.042891, -0.747604, 0, 1.0};
Point(71) = {-0.038013, -0.748167, 0, 1.0};
Point(72) = {-0.033044, -0.748683, 0, 1.0};
Point(73) = {-0.028033, -0.749134, 0, 1.0};
Point(74) = {-0.023032, -0.749503, 0, 1.0};
Point(75) = {-0.018086, -0.749779, 0, 1.0};
Point(76) = {-0.013244, -0.749948, 0, 1.0};
Point(77) = {-0.008553, -0.750000, 0, 1.0};
Point(78) = {-0.004054, -0.749925, 0, 1.0};
Point(79) = {0.000223, -0.749717, 0, 1.0};
Point(80) = {0.004242, -0.749381, 0, 1.0};
Point(81) = {0.007970, -0.748921, 0, 1.0};
Point(82) = {0.011378, -0.748344, 0, 1.0};
Point(83) = {0.014442, -0.747658, 0, 1.0};
Point(84) = {0.017140, -0.746878, 0, 1.0};
Point(85) = {0.019455, -0.746018, 0, 1.0};
Point(86) = {0.021376, -0.745099, 0, 1.0};
Point(87) = {0.022893, -0.744146, 0, 1.0};
Point(88) = {0.024002, -0.743188, 0, 1.0};
Point(89) = {0.024703, -0.742263, 0, 1.0};
Point(90) = {0.024997, -0.741429, 0, 1.0};
Point(91) = {0.024806, -0.740791, 0, 1.0};
Point(92) = {0.024043, -0.740304, 0, 1.0};
Point(93) = {0.022726, -0.739877, 0, 1.0};
Point(94) = {0.020895, -0.739532, 0, 1.0};
Point(95) = {0.018568, -0.739279, 0, 1.0};
Point(96) = {0.015765, -0.739121, 0, 1.0};
Point(97) = {0.012507, -0.739059, 0, 1.0};
Point(98) = {0.008823, -0.739088, 0, 1.0};
Point(99) = {0.004744, -0.739201, 0, 1.0};
Point(100) = {0.000312, -0.739385, 0, 1.0};
Point(101) = {-0.004425, -0.739630, 0, 1.0};
Point(102) = {-0.009414, -0.739927, 0, 1.0};
Point(103) = {-0.014602, -0.740262, 0, 1.0};
Point(104) = {-0.019928, -0.740629, 0, 1.0};
Point(105) = {-0.025334, -0.741013, 0, 1.0};
Point(106) = {-0.030757, -0.741404, 0, 1.0};
Point(107) = {-0.036133, -0.741790, 0, 1.0};
Point(108) = {-0.041398, -0.742160, 0, 1.0};
Point(109) = {-0.046487, -0.742505, 0, 1.0};
Point(110) = {-0.051336, -0.742814, 0, 1.0};
Point(111) = {-0.055882, -0.743082, 0, 1.0};
Point(112) = {-0.060064, -0.743303, 0, 1.0};
Point(113) = {-0.063825, -0.743474, 0, 1.0};
Point(114) = {-0.067112, -0.743597, 0, 1.0};
Point(115) = {-0.069876, -0.743673, 0, 1.0};
Point(116) = {-0.072075, -0.743712, 0, 1.0};
Point(117) = {-0.073674, -0.743720, 0, 1.0};
Point(118) = {-0.074645, -0.743714, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:41};
Spline(3) = {41:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:78};
Spline(6) = {78:100};
Spline(7) = {100:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149290, 0.737456, 0, 1.0};
Point(2) = {0.147350, 0.737592, 0, 1.0};
Point(3) = {0.144175, 0.737866, 0, 1.0};
Point(4) = {0.139837, 0.738305, 0, 1.0};
Point(5) = {0.134431, 0.738921, 0, 1.0};
Point(6) = {0.128063, 0.739707, 0, 1.0};
Point(7) = {0.120844, 0.740646, 0, 1.0};
Point(8) = {0.112893, 0.741707, 0, 1.0};
Point(9) = {0.104323, 0.742851, 0, 1.0};
Point(10) = {0.095248, 0.744034, 0, 1.0};
Point(11) = {0.085782, 0.745209, 0, 1.0};
Point(12) = {0.076026, 0.746335, 0, 1.0};
Point(13) = {0.066089, 0.747367, 0, 1.0};
Point(14) = {0.056067, 0.748269, 0, 1.0};
Point(15) = {0.046064, 0.749007, 0, 1.0};
Point(16) = {0.036172, 0.749558, 0, 1.0};
Point(17) = {0.026488, 0.749895, 0, 1.0};
Point(18) = {0.017106, 0.750000, 0, 1.0};
Point(19) = {0.008107, 0.749850, 0, 1.0};
Point(20) = {-0.000445, 0.749434, 0, 1.0};
Point(21) = {-0.008483, 0.748763, 0, 1.0};
Point(22) = {-0.015940, 0.747841, 0, 1.0};
Point(23) = {-0.022756, 0.746689, 0, 1.0};
Point(24) = {-0.028883, 0.745316, 0, 1.0};
Point(25) = {-0.034280, 0.743755, 0, 1.0};
Point(26) = {-0.038910, 0.742037, 0, 1.0};
Point(27) = {-0.042751, 0.740199, 0, 1.0};
Point(28) = {-0.045787, 0.738292, 0, 1.0};
Point(29) = {-0.048004, 0.736377, 0, 1.0};
Point(30) = {-0.049406, 0.734527, 0, 1.0};
Point(31) = {-0.049995, 0.732858, 0, 1.0};
Point(32) = {-0.049612, 0.731581, 0, 1.0};
Point(33) = {-0.048087, 0.730607, 0, 1.0};
Point(34) = {-0.045452, 0.729754, 0, 1.0};
Point(35) = {-0.041790, 0.729065, 0, 1.0};
Point(36) = {-0.037137, 0.728557, 0, 1.0};
Point(37) = {-0.031530, 0.728243, 0, 1.0};
Point(38) = {-0.025015, 0.728118, 0, 1.0};
Point(39) = {-0.017646, 0.728177, 0, 1.0};
Point(40) = {-0.009487, 0.728401, 0, 1.0};
Point(41) = {-0.000623, 0.728770, 0, 1.0};
Point(42) = {0.008850, 0.729260, 0, 1.0};
Point(43) = {0.018828, 0.729853, 0, 1.0};
Point(44) = {0.029203, 0.730524, 0, 1.0};
Point(45) = {0.039857, 0.731258, 0, 1.0};
Point(46) = {0.050668, 0.732026, 0, 1.0};
Point(47) = {0.061514, 0.732808, 0, 1.0};
Point(48) = {0.072267, 0.733580, 0, 1.0};
Point(49) = {0.082796, 0.734321, 0, 1.0};
Point(50) = {0.092975, 0.735009, 0, 1.0};
Point(51) = {0.102673, 0.735628, 0, 1.0};
Point(52) = {0.111764, 0.736164, 0, 1.0};
Point(53) = {0.120128, 0.736606, 0, 1.0};
Point(54) = {0.127650, 0.736949, 0, 1.0};
Point(55) = {0.134224, 0.737193, 0, 1.0};
Point(56) = {0.139752, 0.737347, 0, 1.0};
Point(57) = {0.144150, 0.737423, 0, 1.0};
Point(58) = {0.147348, 0.737440, 0, 1.0};
Point(59) = {0.149291, 0.737428, 0, 1.0};
Point(60) = {-0.149290, -0.737456, 0, 1.0};
Point(61) = {-0.147350, -0.737592, 0, 1.0};
Point(62) = {-0.144175, -0.737866, 0, 1.0};
Point(63) = {-0.139837, -0.738305, 0, 1.0};
Point(64) = {-0.134431, -0.738921, 0, 1.0};
Point(65) = {-0.128063, -0.739707, 0, 1.0};
Point(66) = {-0.120844, -0.740646, 0, 1.0};
Point(67) = {-0.112893, -0.741707, 0, 1.0};
Point(68) = {-0.104323, -0.742851, 0, 1.0};
Point(69) = {-0.095248, -0.744034, 0, 1.0};
Point(70) = {-0.085782, -0.745209, 0, 1.0};
Point(71) = {-0.076026, -0.746335, 0, 1.0};
Point(72) = {-0.066089, -0.747367, 0, 1.0};
Point(73) = {-0.056067, -0.748269, 0, 1.0};
Point(74) = {-0.046064, -0.749007, 0, 1.0};
Point(75) = {-0.036172, -0.749558, 0, 1.0};
Point(76) = {-0.026488, -0.749895, 0, 1.0};
Point(77) = {-0.017106, -0.750000, 0, 1.0};
Point(78) = {-0.008107, -0.749850, 0, 1.0};
Point(79) = {0.000445, -0.749434, 0, 1.0};
Point(80) = {0.008483, -0.748763, 0, 1.0};
Point(81) = {0.015940, -0.747841, 0, 1.0};
Point(82) = {0.022756, -0.746689, 0, 1.0};
Point(83) = {0.028883, -0.745316, 0, 1.0};
Point(84) = {0.034280, -0.743755, 0, 1.0};
Point(85) = {0.038910, -0.742037, 0, 1.0};
Point(86) = {0.042751, -0.740199, 0, 1.0};
Point(87) = {0.045787, -0.738292, 0, 1.0};
Point(88) = {0.048004, -0.736377, 0, 1.0};
Point(89) = {0.049406, -0.734527, 0, 1.0};
Point(90) = {0.049995, -0.732858, 0, 1.0};
Point(91) = {0.049612, -0.731581, 0, 1.0};
Point(92) = {0.048087, -0.730607, 0, 1.0};
Point(93) = {0.045452, -0.729754, 0, 1.0};
Point(94) = {0.041790, -0.729065, 0, 1.0};
Point(95) = {0.037137, -0.728557, 0, 1.0};
Point(96) = {0.031530, -0.728243, 0, 1.0};
Point(97) = {0.025015, -0.728118, 0, 1.0};
Point(98) = {0.017646, -0.728177, 0, 1.0};
Point(99) = {0.009487, -0.728401, 0, 1.0};
Point(100) = {0.000623, -0.728770, 0, 1.0};
Point(101) = {-0.008850, -0.729260, 0, 1.0};
Point(102) = {-0.018828, -0.729853, 0, 1.0};
Point(103) = {-0.029203, -0.730524, 0, 1.0};
Point(104) = {-0.039857, -0.731258, 0, 1.0};
Point(105) = {-0.050668, -0.732026, 0, 1.0};
Point(106) = {-0.061514, -0.732808, 0, 1.0};
Point(107) = {-0.072267, -0.733580, 0, 1.0};
Point(108) = {-0.082796, -0.734321, 0, 1.0};
Point(109) = {-0.092975, -0.735009, 0, 1.0};
Point(110) = {-0.102673, -0.735628, 0, 1.0};
Point(111) = {-0.111764, -0.736164, 0, 1.0};
Point(112) = {-0.120128, -0.736606, 0, 1.0};
Point(113) = {-0.127650, -0.736949, 0, 1.0};
Point(114) = {-0.134224, -0.737193, 0, 1.0};
Point(115) = {-0.139752, -0.737347, 0, 1.0};
Point(116) = {-0.144150, -0.737423, 0, 1.0};
Point(117) = {-0.147348, -0.737440, 0, 1.0};
Point(118) = {-0.149291, -0.737428, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:41};
Spline(3) = {41:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:78};
Spline(6) = {78:100};
Spline(7) = {100:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
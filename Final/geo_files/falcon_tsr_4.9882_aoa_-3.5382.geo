SetFactory("OpenCASCADE");

Point(1) = {0.074801, 0.745907, 0, 1.0};
Point(2) = {0.074547, 0.746034, 0, 1.0};
Point(3) = {0.073846, 0.746277, 0, 1.0};
Point(4) = {0.072801, 0.746451, 0, 1.0};
Point(5) = {0.071454, 0.746537, 0, 1.0};
Point(6) = {0.069792, 0.746612, 0, 1.0};
Point(7) = {0.067800, 0.746749, 0, 1.0};
Point(8) = {0.065494, 0.746952, 0, 1.0};
Point(9) = {0.062901, 0.747200, 0, 1.0};
Point(10) = {0.060046, 0.747472, 0, 1.0};
Point(11) = {0.056962, 0.747752, 0, 1.0};
Point(12) = {0.053678, 0.748032, 0, 1.0};
Point(13) = {0.050222, 0.748309, 0, 1.0};
Point(14) = {0.046626, 0.748577, 0, 1.0};
Point(15) = {0.042919, 0.748833, 0, 1.0};
Point(16) = {0.039132, 0.749073, 0, 1.0};
Point(17) = {0.035295, 0.749296, 0, 1.0};
Point(18) = {0.031434, 0.749500, 0, 1.0};
Point(19) = {0.027577, 0.749681, 0, 1.0};
Point(20) = {0.023727, 0.749832, 0, 1.0};
Point(21) = {0.019882, 0.749942, 0, 1.0};
Point(22) = {0.016075, 0.750000, 0, 1.0};
Point(23) = {0.012316, 0.749999, 0, 1.0};
Point(24) = {0.008631, 0.749931, 0, 1.0};
Point(25) = {0.005037, 0.749791, 0, 1.0};
Point(26) = {0.001555, 0.749572, 0, 1.0};
Point(27) = {-0.001792, 0.749267, 0, 1.0};
Point(28) = {-0.004985, 0.748871, 0, 1.0};
Point(29) = {-0.008005, 0.748380, 0, 1.0};
Point(30) = {-0.010831, 0.747801, 0, 1.0};
Point(31) = {-0.013444, 0.747140, 0, 1.0};
Point(32) = {-0.015826, 0.746397, 0, 1.0};
Point(33) = {-0.017960, 0.745566, 0, 1.0};
Point(34) = {-0.019833, 0.744638, 0, 1.0};
Point(35) = {-0.021431, 0.743635, 0, 1.0};
Point(36) = {-0.022749, 0.742617, 0, 1.0};
Point(37) = {-0.023787, 0.741659, 0, 1.0};
Point(38) = {-0.024525, 0.740804, 0, 1.0};
Point(39) = {-0.024929, 0.740044, 0, 1.0};
Point(40) = {-0.024996, 0.739532, 0, 1.0};
Point(41) = {-0.024867, 0.739042, 0, 1.0};
Point(42) = {-0.024378, 0.738421, 0, 1.0};
Point(43) = {-0.023553, 0.737886, 0, 1.0};
Point(44) = {-0.022428, 0.737430, 0, 1.0};
Point(45) = {-0.021023, 0.737040, 0, 1.0};
Point(46) = {-0.019343, 0.736718, 0, 1.0};
Point(47) = {-0.017397, 0.736473, 0, 1.0};
Point(48) = {-0.015202, 0.736302, 0, 1.0};
Point(49) = {-0.012767, 0.736187, 0, 1.0};
Point(50) = {-0.010108, 0.736109, 0, 1.0};
Point(51) = {-0.007243, 0.736052, 0, 1.0};
Point(52) = {-0.004190, 0.736011, 0, 1.0};
Point(53) = {-0.000971, 0.735992, 0, 1.0};
Point(54) = {0.002393, 0.736026, 0, 1.0};
Point(55) = {0.005882, 0.736139, 0, 1.0};
Point(56) = {0.009472, 0.736330, 0, 1.0};
Point(57) = {0.013146, 0.736582, 0, 1.0};
Point(58) = {0.016886, 0.736882, 0, 1.0};
Point(59) = {0.020669, 0.737225, 0, 1.0};
Point(60) = {0.024482, 0.737610, 0, 1.0};
Point(61) = {0.028298, 0.738031, 0, 1.0};
Point(62) = {0.032115, 0.738483, 0, 1.0};
Point(63) = {0.035934, 0.738963, 0, 1.0};
Point(64) = {0.039726, 0.739467, 0, 1.0};
Point(65) = {0.043465, 0.739998, 0, 1.0};
Point(66) = {0.047122, 0.740552, 0, 1.0};
Point(67) = {0.050667, 0.741118, 0, 1.0};
Point(68) = {0.054070, 0.741680, 0, 1.0};
Point(69) = {0.057304, 0.742225, 0, 1.0};
Point(70) = {0.060339, 0.742743, 0, 1.0};
Point(71) = {0.063146, 0.743230, 0, 1.0};
Point(72) = {0.065696, 0.743678, 0, 1.0};
Point(73) = {0.067965, 0.744077, 0, 1.0};
Point(74) = {0.069928, 0.744406, 0, 1.0};
Point(75) = {0.071570, 0.744650, 0, 1.0};
Point(76) = {0.072899, 0.744855, 0, 1.0};
Point(77) = {0.073917, 0.745131, 0, 1.0};
Point(78) = {0.074582, 0.745458, 0, 1.0};
Point(79) = {0.074819, 0.745618, 0, 1.0};
Point(80) = {-0.074801, -0.745907, 0, 1.0};
Point(81) = {-0.074547, -0.746034, 0, 1.0};
Point(82) = {-0.073846, -0.746277, 0, 1.0};
Point(83) = {-0.072801, -0.746451, 0, 1.0};
Point(84) = {-0.071454, -0.746537, 0, 1.0};
Point(85) = {-0.069792, -0.746612, 0, 1.0};
Point(86) = {-0.067800, -0.746749, 0, 1.0};
Point(87) = {-0.065494, -0.746952, 0, 1.0};
Point(88) = {-0.062901, -0.747200, 0, 1.0};
Point(89) = {-0.060046, -0.747472, 0, 1.0};
Point(90) = {-0.056962, -0.747752, 0, 1.0};
Point(91) = {-0.053678, -0.748032, 0, 1.0};
Point(92) = {-0.050222, -0.748309, 0, 1.0};
Point(93) = {-0.046626, -0.748577, 0, 1.0};
Point(94) = {-0.042919, -0.748833, 0, 1.0};
Point(95) = {-0.039132, -0.749073, 0, 1.0};
Point(96) = {-0.035295, -0.749296, 0, 1.0};
Point(97) = {-0.031434, -0.749500, 0, 1.0};
Point(98) = {-0.027577, -0.749681, 0, 1.0};
Point(99) = {-0.023727, -0.749832, 0, 1.0};
Point(100) = {-0.019882, -0.749942, 0, 1.0};
Point(101) = {-0.016075, -0.750000, 0, 1.0};
Point(102) = {-0.012316, -0.749999, 0, 1.0};
Point(103) = {-0.008631, -0.749931, 0, 1.0};
Point(104) = {-0.005037, -0.749791, 0, 1.0};
Point(105) = {-0.001555, -0.749572, 0, 1.0};
Point(106) = {0.001792, -0.749267, 0, 1.0};
Point(107) = {0.004985, -0.748871, 0, 1.0};
Point(108) = {0.008005, -0.748380, 0, 1.0};
Point(109) = {0.010831, -0.747801, 0, 1.0};
Point(110) = {0.013444, -0.747140, 0, 1.0};
Point(111) = {0.015826, -0.746397, 0, 1.0};
Point(112) = {0.017960, -0.745566, 0, 1.0};
Point(113) = {0.019833, -0.744638, 0, 1.0};
Point(114) = {0.021431, -0.743635, 0, 1.0};
Point(115) = {0.022749, -0.742617, 0, 1.0};
Point(116) = {0.023787, -0.741659, 0, 1.0};
Point(117) = {0.024525, -0.740804, 0, 1.0};
Point(118) = {0.024929, -0.740044, 0, 1.0};
Point(119) = {0.024996, -0.739532, 0, 1.0};
Point(120) = {0.024867, -0.739042, 0, 1.0};
Point(121) = {0.024378, -0.738421, 0, 1.0};
Point(122) = {0.023553, -0.737886, 0, 1.0};
Point(123) = {0.022428, -0.737430, 0, 1.0};
Point(124) = {0.021023, -0.737040, 0, 1.0};
Point(125) = {0.019343, -0.736718, 0, 1.0};
Point(126) = {0.017397, -0.736473, 0, 1.0};
Point(127) = {0.015202, -0.736302, 0, 1.0};
Point(128) = {0.012767, -0.736187, 0, 1.0};
Point(129) = {0.010108, -0.736109, 0, 1.0};
Point(130) = {0.007243, -0.736052, 0, 1.0};
Point(131) = {0.004190, -0.736011, 0, 1.0};
Point(132) = {0.000971, -0.735992, 0, 1.0};
Point(133) = {-0.002393, -0.736026, 0, 1.0};
Point(134) = {-0.005882, -0.736139, 0, 1.0};
Point(135) = {-0.009472, -0.736330, 0, 1.0};
Point(136) = {-0.013146, -0.736582, 0, 1.0};
Point(137) = {-0.016886, -0.736882, 0, 1.0};
Point(138) = {-0.020669, -0.737225, 0, 1.0};
Point(139) = {-0.024482, -0.737610, 0, 1.0};
Point(140) = {-0.028298, -0.738031, 0, 1.0};
Point(141) = {-0.032115, -0.738483, 0, 1.0};
Point(142) = {-0.035934, -0.738963, 0, 1.0};
Point(143) = {-0.039726, -0.739467, 0, 1.0};
Point(144) = {-0.043465, -0.739998, 0, 1.0};
Point(145) = {-0.047122, -0.740552, 0, 1.0};
Point(146) = {-0.050667, -0.741118, 0, 1.0};
Point(147) = {-0.054070, -0.741680, 0, 1.0};
Point(148) = {-0.057304, -0.742225, 0, 1.0};
Point(149) = {-0.060339, -0.742743, 0, 1.0};
Point(150) = {-0.063146, -0.743230, 0, 1.0};
Point(151) = {-0.065696, -0.743678, 0, 1.0};
Point(152) = {-0.067965, -0.744077, 0, 1.0};
Point(153) = {-0.069928, -0.744406, 0, 1.0};
Point(154) = {-0.071570, -0.744650, 0, 1.0};
Point(155) = {-0.072899, -0.744855, 0, 1.0};
Point(156) = {-0.073917, -0.745131, 0, 1.0};
Point(157) = {-0.074582, -0.745458, 0, 1.0};
Point(158) = {-0.074819, -0.745618, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
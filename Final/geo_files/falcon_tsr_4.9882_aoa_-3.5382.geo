SetFactory("OpenCASCADE");

Point(1) = {0.074838, 0.743860, 0, 1.0};
Point(2) = {0.074457, 0.744051, 0, 1.0};
Point(3) = {0.073406, 0.744416, 0, 1.0};
Point(4) = {0.071838, 0.744677, 0, 1.0};
Point(5) = {0.069817, 0.744805, 0, 1.0};
Point(6) = {0.067325, 0.744919, 0, 1.0};
Point(7) = {0.064336, 0.745123, 0, 1.0};
Point(8) = {0.060877, 0.745428, 0, 1.0};
Point(9) = {0.056987, 0.745800, 0, 1.0};
Point(10) = {0.052706, 0.746207, 0, 1.0};
Point(11) = {0.048080, 0.746628, 0, 1.0};
Point(12) = {0.043153, 0.747048, 0, 1.0};
Point(13) = {0.037970, 0.747463, 0, 1.0};
Point(14) = {0.032575, 0.747866, 0, 1.0};
Point(15) = {0.027015, 0.748250, 0, 1.0};
Point(16) = {0.021334, 0.748610, 0, 1.0};
Point(17) = {0.015578, 0.748944, 0, 1.0};
Point(18) = {0.009787, 0.749250, 0, 1.0};
Point(19) = {0.004002, 0.749522, 0, 1.0};
Point(20) = {-0.001774, 0.749748, 0, 1.0};
Point(21) = {-0.007540, 0.749912, 0, 1.0};
Point(22) = {-0.013252, 0.750000, 0, 1.0};
Point(23) = {-0.018889, 0.749998, 0, 1.0};
Point(24) = {-0.024418, 0.749897, 0, 1.0};
Point(25) = {-0.029807, 0.749687, 0, 1.0};
Point(26) = {-0.035031, 0.749358, 0, 1.0};
Point(27) = {-0.040052, 0.748901, 0, 1.0};
Point(28) = {-0.044841, 0.748306, 0, 1.0};
Point(29) = {-0.049372, 0.747570, 0, 1.0};
Point(30) = {-0.053610, 0.746701, 0, 1.0};
Point(31) = {-0.057530, 0.745710, 0, 1.0};
Point(32) = {-0.061102, 0.744596, 0, 1.0};
Point(33) = {-0.064303, 0.743349, 0, 1.0};
Point(34) = {-0.067113, 0.741957, 0, 1.0};
Point(35) = {-0.069510, 0.740452, 0, 1.0};
Point(36) = {-0.071487, 0.738926, 0, 1.0};
Point(37) = {-0.073043, 0.737488, 0, 1.0};
Point(38) = {-0.074151, 0.736206, 0, 1.0};
Point(39) = {-0.074757, 0.735066, 0, 1.0};
Point(40) = {-0.074857, 0.734298, 0, 1.0};
Point(41) = {-0.074664, 0.733563, 0, 1.0};
Point(42) = {-0.073930, 0.732631, 0, 1.0};
Point(43) = {-0.072694, 0.731829, 0, 1.0};
Point(44) = {-0.071006, 0.731144, 0, 1.0};
Point(45) = {-0.068898, 0.730560, 0, 1.0};
Point(46) = {-0.066378, 0.730077, 0, 1.0};
Point(47) = {-0.063460, 0.729710, 0, 1.0};
Point(48) = {-0.060166, 0.729454, 0, 1.0};
Point(49) = {-0.056514, 0.729281, 0, 1.0};
Point(50) = {-0.052526, 0.729163, 0, 1.0};
Point(51) = {-0.048228, 0.729079, 0, 1.0};
Point(52) = {-0.043648, 0.729016, 0, 1.0};
Point(53) = {-0.038821, 0.728989, 0, 1.0};
Point(54) = {-0.033774, 0.729039, 0, 1.0};
Point(55) = {-0.028541, 0.729209, 0, 1.0};
Point(56) = {-0.023156, 0.729496, 0, 1.0};
Point(57) = {-0.017644, 0.729873, 0, 1.0};
Point(58) = {-0.012035, 0.730323, 0, 1.0};
Point(59) = {-0.006360, 0.730838, 0, 1.0};
Point(60) = {-0.000640, 0.731415, 0, 1.0};
Point(61) = {0.005083, 0.732047, 0, 1.0};
Point(62) = {0.010809, 0.732725, 0, 1.0};
Point(63) = {0.016537, 0.733444, 0, 1.0};
Point(64) = {0.022225, 0.734201, 0, 1.0};
Point(65) = {0.027834, 0.734997, 0, 1.0};
Point(66) = {0.033319, 0.735828, 0, 1.0};
Point(67) = {0.038637, 0.736676, 0, 1.0};
Point(68) = {0.043742, 0.737520, 0, 1.0};
Point(69) = {0.048592, 0.738337, 0, 1.0};
Point(70) = {0.053145, 0.739115, 0, 1.0};
Point(71) = {0.057356, 0.739844, 0, 1.0};
Point(72) = {0.061181, 0.740517, 0, 1.0};
Point(73) = {0.064584, 0.741116, 0, 1.0};
Point(74) = {0.067529, 0.741610, 0, 1.0};
Point(75) = {0.069992, 0.741976, 0, 1.0};
Point(76) = {0.071986, 0.742282, 0, 1.0};
Point(77) = {0.073513, 0.742696, 0, 1.0};
Point(78) = {0.074510, 0.743187, 0, 1.0};
Point(79) = {0.074865, 0.743427, 0, 1.0};
Point(80) = {-0.074838, -0.743860, 0, 1.0};
Point(81) = {-0.074457, -0.744051, 0, 1.0};
Point(82) = {-0.073406, -0.744416, 0, 1.0};
Point(83) = {-0.071838, -0.744677, 0, 1.0};
Point(84) = {-0.069817, -0.744805, 0, 1.0};
Point(85) = {-0.067325, -0.744919, 0, 1.0};
Point(86) = {-0.064336, -0.745123, 0, 1.0};
Point(87) = {-0.060877, -0.745428, 0, 1.0};
Point(88) = {-0.056987, -0.745800, 0, 1.0};
Point(89) = {-0.052706, -0.746207, 0, 1.0};
Point(90) = {-0.048080, -0.746628, 0, 1.0};
Point(91) = {-0.043153, -0.747048, 0, 1.0};
Point(92) = {-0.037970, -0.747463, 0, 1.0};
Point(93) = {-0.032575, -0.747866, 0, 1.0};
Point(94) = {-0.027015, -0.748250, 0, 1.0};
Point(95) = {-0.021334, -0.748610, 0, 1.0};
Point(96) = {-0.015578, -0.748944, 0, 1.0};
Point(97) = {-0.009787, -0.749250, 0, 1.0};
Point(98) = {-0.004002, -0.749522, 0, 1.0};
Point(99) = {0.001774, -0.749748, 0, 1.0};
Point(100) = {0.007540, -0.749912, 0, 1.0};
Point(101) = {0.013252, -0.750000, 0, 1.0};
Point(102) = {0.018889, -0.749998, 0, 1.0};
Point(103) = {0.024418, -0.749897, 0, 1.0};
Point(104) = {0.029807, -0.749687, 0, 1.0};
Point(105) = {0.035031, -0.749358, 0, 1.0};
Point(106) = {0.040052, -0.748901, 0, 1.0};
Point(107) = {0.044841, -0.748306, 0, 1.0};
Point(108) = {0.049372, -0.747570, 0, 1.0};
Point(109) = {0.053610, -0.746701, 0, 1.0};
Point(110) = {0.057530, -0.745710, 0, 1.0};
Point(111) = {0.061102, -0.744596, 0, 1.0};
Point(112) = {0.064303, -0.743349, 0, 1.0};
Point(113) = {0.067113, -0.741957, 0, 1.0};
Point(114) = {0.069510, -0.740452, 0, 1.0};
Point(115) = {0.071487, -0.738926, 0, 1.0};
Point(116) = {0.073043, -0.737488, 0, 1.0};
Point(117) = {0.074151, -0.736206, 0, 1.0};
Point(118) = {0.074757, -0.735066, 0, 1.0};
Point(119) = {0.074857, -0.734298, 0, 1.0};
Point(120) = {0.074664, -0.733563, 0, 1.0};
Point(121) = {0.073930, -0.732631, 0, 1.0};
Point(122) = {0.072694, -0.731829, 0, 1.0};
Point(123) = {0.071006, -0.731144, 0, 1.0};
Point(124) = {0.068898, -0.730560, 0, 1.0};
Point(125) = {0.066378, -0.730077, 0, 1.0};
Point(126) = {0.063460, -0.729710, 0, 1.0};
Point(127) = {0.060166, -0.729454, 0, 1.0};
Point(128) = {0.056514, -0.729281, 0, 1.0};
Point(129) = {0.052526, -0.729163, 0, 1.0};
Point(130) = {0.048228, -0.729079, 0, 1.0};
Point(131) = {0.043648, -0.729016, 0, 1.0};
Point(132) = {0.038821, -0.728989, 0, 1.0};
Point(133) = {0.033774, -0.729039, 0, 1.0};
Point(134) = {0.028541, -0.729209, 0, 1.0};
Point(135) = {0.023156, -0.729496, 0, 1.0};
Point(136) = {0.017644, -0.729873, 0, 1.0};
Point(137) = {0.012035, -0.730323, 0, 1.0};
Point(138) = {0.006360, -0.730838, 0, 1.0};
Point(139) = {0.000640, -0.731415, 0, 1.0};
Point(140) = {-0.005083, -0.732047, 0, 1.0};
Point(141) = {-0.010809, -0.732725, 0, 1.0};
Point(142) = {-0.016537, -0.733444, 0, 1.0};
Point(143) = {-0.022225, -0.734201, 0, 1.0};
Point(144) = {-0.027834, -0.734997, 0, 1.0};
Point(145) = {-0.033319, -0.735828, 0, 1.0};
Point(146) = {-0.038637, -0.736676, 0, 1.0};
Point(147) = {-0.043742, -0.737520, 0, 1.0};
Point(148) = {-0.048592, -0.738337, 0, 1.0};
Point(149) = {-0.053145, -0.739115, 0, 1.0};
Point(150) = {-0.057356, -0.739844, 0, 1.0};
Point(151) = {-0.061181, -0.740517, 0, 1.0};
Point(152) = {-0.064584, -0.741116, 0, 1.0};
Point(153) = {-0.067529, -0.741610, 0, 1.0};
Point(154) = {-0.069992, -0.741976, 0, 1.0};
Point(155) = {-0.071986, -0.742282, 0, 1.0};
Point(156) = {-0.073513, -0.742696, 0, 1.0};
Point(157) = {-0.074510, -0.743187, 0, 1.0};
Point(158) = {-0.074865, -0.743427, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149602, 0.741813, 0, 1.0};
Point(2) = {0.149094, 0.742069, 0, 1.0};
Point(3) = {0.147693, 0.742555, 0, 1.0};
Point(4) = {0.145601, 0.742902, 0, 1.0};
Point(5) = {0.142908, 0.743073, 0, 1.0};
Point(6) = {0.139584, 0.743225, 0, 1.0};
Point(7) = {0.135600, 0.743498, 0, 1.0};
Point(8) = {0.130988, 0.743903, 0, 1.0};
Point(9) = {0.125801, 0.744400, 0, 1.0};
Point(10) = {0.120093, 0.744943, 0, 1.0};
Point(11) = {0.113924, 0.745504, 0, 1.0};
Point(12) = {0.107355, 0.746065, 0, 1.0};
Point(13) = {0.100444, 0.746617, 0, 1.0};
Point(14) = {0.093251, 0.747154, 0, 1.0};
Point(15) = {0.085837, 0.747666, 0, 1.0};
Point(16) = {0.078263, 0.748147, 0, 1.0};
Point(17) = {0.070589, 0.748592, 0, 1.0};
Point(18) = {0.062867, 0.749000, 0, 1.0};
Point(19) = {0.055154, 0.749363, 0, 1.0};
Point(20) = {0.047453, 0.749664, 0, 1.0};
Point(21) = {0.039765, 0.749883, 0, 1.0};
Point(22) = {0.032149, 0.750000, 0, 1.0};
Point(23) = {0.024633, 0.749997, 0, 1.0};
Point(24) = {0.017261, 0.749862, 0, 1.0};
Point(25) = {0.010075, 0.749582, 0, 1.0};
Point(26) = {0.003111, 0.749144, 0, 1.0};
Point(27) = {-0.003585, 0.748535, 0, 1.0};
Point(28) = {-0.009970, 0.747742, 0, 1.0};
Point(29) = {-0.016011, 0.746761, 0, 1.0};
Point(30) = {-0.021662, 0.745602, 0, 1.0};
Point(31) = {-0.026888, 0.744280, 0, 1.0};
Point(32) = {-0.031652, 0.742794, 0, 1.0};
Point(33) = {-0.035919, 0.741131, 0, 1.0};
Point(34) = {-0.039666, 0.739277, 0, 1.0};
Point(35) = {-0.042862, 0.737269, 0, 1.0};
Point(36) = {-0.045498, 0.735234, 0, 1.0};
Point(37) = {-0.047573, 0.733318, 0, 1.0};
Point(38) = {-0.049051, 0.731607, 0, 1.0};
Point(39) = {-0.049858, 0.730089, 0, 1.0};
Point(40) = {-0.049991, 0.729064, 0, 1.0};
Point(41) = {-0.049734, 0.728083, 0, 1.0};
Point(42) = {-0.048756, 0.726841, 0, 1.0};
Point(43) = {-0.047107, 0.725771, 0, 1.0};
Point(44) = {-0.044856, 0.724859, 0, 1.0};
Point(45) = {-0.042047, 0.724080, 0, 1.0};
Point(46) = {-0.038687, 0.723436, 0, 1.0};
Point(47) = {-0.034795, 0.722947, 0, 1.0};
Point(48) = {-0.030403, 0.722605, 0, 1.0};
Point(49) = {-0.025534, 0.722375, 0, 1.0};
Point(50) = {-0.020216, 0.722218, 0, 1.0};
Point(51) = {-0.014486, 0.722105, 0, 1.0};
Point(52) = {-0.008379, 0.722021, 0, 1.0};
Point(53) = {-0.001943, 0.721985, 0, 1.0};
Point(54) = {0.004786, 0.722052, 0, 1.0};
Point(55) = {0.011763, 0.722279, 0, 1.0};
Point(56) = {0.018943, 0.722661, 0, 1.0};
Point(57) = {0.026292, 0.723164, 0, 1.0};
Point(58) = {0.033771, 0.723764, 0, 1.0};
Point(59) = {0.041337, 0.724451, 0, 1.0};
Point(60) = {0.048964, 0.725220, 0, 1.0};
Point(61) = {0.056595, 0.726062, 0, 1.0};
Point(62) = {0.064230, 0.726966, 0, 1.0};
Point(63) = {0.071867, 0.727925, 0, 1.0};
Point(64) = {0.079451, 0.728934, 0, 1.0};
Point(65) = {0.086930, 0.729997, 0, 1.0};
Point(66) = {0.094244, 0.731104, 0, 1.0};
Point(67) = {0.101333, 0.732235, 0, 1.0};
Point(68) = {0.108141, 0.733359, 0, 1.0};
Point(69) = {0.114608, 0.734450, 0, 1.0};
Point(70) = {0.120678, 0.735487, 0, 1.0};
Point(71) = {0.126292, 0.736459, 0, 1.0};
Point(72) = {0.131393, 0.737356, 0, 1.0};
Point(73) = {0.135930, 0.738155, 0, 1.0};
Point(74) = {0.139857, 0.738813, 0, 1.0};
Point(75) = {0.143141, 0.739301, 0, 1.0};
Point(76) = {0.145799, 0.739709, 0, 1.0};
Point(77) = {0.147835, 0.740261, 0, 1.0};
Point(78) = {0.149165, 0.740916, 0, 1.0};
Point(79) = {0.149638, 0.741236, 0, 1.0};
Point(80) = {-0.149602, -0.741813, 0, 1.0};
Point(81) = {-0.149094, -0.742069, 0, 1.0};
Point(82) = {-0.147693, -0.742555, 0, 1.0};
Point(83) = {-0.145601, -0.742902, 0, 1.0};
Point(84) = {-0.142908, -0.743073, 0, 1.0};
Point(85) = {-0.139584, -0.743225, 0, 1.0};
Point(86) = {-0.135600, -0.743498, 0, 1.0};
Point(87) = {-0.130988, -0.743903, 0, 1.0};
Point(88) = {-0.125801, -0.744400, 0, 1.0};
Point(89) = {-0.120093, -0.744943, 0, 1.0};
Point(90) = {-0.113924, -0.745504, 0, 1.0};
Point(91) = {-0.107355, -0.746065, 0, 1.0};
Point(92) = {-0.100444, -0.746617, 0, 1.0};
Point(93) = {-0.093251, -0.747154, 0, 1.0};
Point(94) = {-0.085837, -0.747666, 0, 1.0};
Point(95) = {-0.078263, -0.748147, 0, 1.0};
Point(96) = {-0.070589, -0.748592, 0, 1.0};
Point(97) = {-0.062867, -0.749000, 0, 1.0};
Point(98) = {-0.055154, -0.749363, 0, 1.0};
Point(99) = {-0.047453, -0.749664, 0, 1.0};
Point(100) = {-0.039765, -0.749883, 0, 1.0};
Point(101) = {-0.032149, -0.750000, 0, 1.0};
Point(102) = {-0.024633, -0.749997, 0, 1.0};
Point(103) = {-0.017261, -0.749862, 0, 1.0};
Point(104) = {-0.010075, -0.749582, 0, 1.0};
Point(105) = {-0.003111, -0.749144, 0, 1.0};
Point(106) = {0.003585, -0.748535, 0, 1.0};
Point(107) = {0.009970, -0.747742, 0, 1.0};
Point(108) = {0.016011, -0.746761, 0, 1.0};
Point(109) = {0.021662, -0.745602, 0, 1.0};
Point(110) = {0.026888, -0.744280, 0, 1.0};
Point(111) = {0.031652, -0.742794, 0, 1.0};
Point(112) = {0.035919, -0.741131, 0, 1.0};
Point(113) = {0.039666, -0.739277, 0, 1.0};
Point(114) = {0.042862, -0.737269, 0, 1.0};
Point(115) = {0.045498, -0.735234, 0, 1.0};
Point(116) = {0.047573, -0.733318, 0, 1.0};
Point(117) = {0.049051, -0.731607, 0, 1.0};
Point(118) = {0.049858, -0.730089, 0, 1.0};
Point(119) = {0.049991, -0.729064, 0, 1.0};
Point(120) = {0.049734, -0.728083, 0, 1.0};
Point(121) = {0.048756, -0.726841, 0, 1.0};
Point(122) = {0.047107, -0.725771, 0, 1.0};
Point(123) = {0.044856, -0.724859, 0, 1.0};
Point(124) = {0.042047, -0.724080, 0, 1.0};
Point(125) = {0.038687, -0.723436, 0, 1.0};
Point(126) = {0.034795, -0.722947, 0, 1.0};
Point(127) = {0.030403, -0.722605, 0, 1.0};
Point(128) = {0.025534, -0.722375, 0, 1.0};
Point(129) = {0.020216, -0.722218, 0, 1.0};
Point(130) = {0.014486, -0.722105, 0, 1.0};
Point(131) = {0.008379, -0.722021, 0, 1.0};
Point(132) = {0.001943, -0.721985, 0, 1.0};
Point(133) = {-0.004786, -0.722052, 0, 1.0};
Point(134) = {-0.011763, -0.722279, 0, 1.0};
Point(135) = {-0.018943, -0.722661, 0, 1.0};
Point(136) = {-0.026292, -0.723164, 0, 1.0};
Point(137) = {-0.033771, -0.723764, 0, 1.0};
Point(138) = {-0.041337, -0.724451, 0, 1.0};
Point(139) = {-0.048964, -0.725220, 0, 1.0};
Point(140) = {-0.056595, -0.726062, 0, 1.0};
Point(141) = {-0.064230, -0.726966, 0, 1.0};
Point(142) = {-0.071867, -0.727925, 0, 1.0};
Point(143) = {-0.079451, -0.728934, 0, 1.0};
Point(144) = {-0.086930, -0.729997, 0, 1.0};
Point(145) = {-0.094244, -0.731104, 0, 1.0};
Point(146) = {-0.101333, -0.732235, 0, 1.0};
Point(147) = {-0.108141, -0.733359, 0, 1.0};
Point(148) = {-0.114608, -0.734450, 0, 1.0};
Point(149) = {-0.120678, -0.735487, 0, 1.0};
Point(150) = {-0.126292, -0.736459, 0, 1.0};
Point(151) = {-0.131393, -0.737356, 0, 1.0};
Point(152) = {-0.135930, -0.738155, 0, 1.0};
Point(153) = {-0.139857, -0.738813, 0, 1.0};
Point(154) = {-0.143141, -0.739301, 0, 1.0};
Point(155) = {-0.145799, -0.739709, 0, 1.0};
Point(156) = {-0.147835, -0.740261, 0, 1.0};
Point(157) = {-0.149165, -0.740916, 0, 1.0};
Point(158) = {-0.149638, -0.741236, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
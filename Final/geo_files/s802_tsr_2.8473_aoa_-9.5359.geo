SetFactory("OpenCASCADE");

Point(1) = {0.110945, 0.747253, 0, 1.0};
Point(2) = {0.110425, 0.747325, 0, 1.0};
Point(3) = {0.108961, 0.747569, 0, 1.0};
Point(4) = {0.106725, 0.747948, 0, 1.0};
Point(5) = {0.103792, 0.748333, 0, 1.0};
Point(6) = {0.100135, 0.748662, 0, 1.0};
Point(7) = {0.095766, 0.748956, 0, 1.0};
Point(8) = {0.090750, 0.749231, 0, 1.0};
Point(9) = {0.085170, 0.749485, 0, 1.0};
Point(10) = {0.079105, 0.749706, 0, 1.0};
Point(11) = {0.072648, 0.749880, 0, 1.0};
Point(12) = {0.065890, 0.749988, 0, 1.0};
Point(13) = {0.058928, 0.750000, 0, 1.0};
Point(14) = {0.051855, 0.749883, 0, 1.0};
Point(15) = {0.044768, 0.749579, 0, 1.0};
Point(16) = {0.037709, 0.749005, 0, 1.0};
Point(17) = {0.030656, 0.748141, 0, 1.0};
Point(18) = {0.023628, 0.747041, 0, 1.0};
Point(19) = {0.016699, 0.745750, 0, 1.0};
Point(20) = {0.009936, 0.744296, 0, 1.0};
Point(21) = {0.003410, 0.742703, 0, 1.0};
Point(22) = {-0.002810, 0.740998, 0, 1.0};
Point(23) = {-0.008663, 0.739204, 0, 1.0};
Point(24) = {-0.014088, 0.737348, 0, 1.0};
Point(25) = {-0.019033, 0.735454, 0, 1.0};
Point(26) = {-0.023443, 0.733550, 0, 1.0};
Point(27) = {-0.027280, 0.731661, 0, 1.0};
Point(28) = {-0.030503, 0.729813, 0, 1.0};
Point(29) = {-0.033087, 0.728030, 0, 1.0};
Point(30) = {-0.035013, 0.726337, 0, 1.0};
Point(31) = {-0.036276, 0.724759, 0, 1.0};
Point(32) = {-0.036906, 0.723336, 0, 1.0};
Point(33) = {-0.036982, 0.722403, 0, 1.0};
Point(34) = {-0.036920, 0.722164, 0, 1.0};
Point(35) = {-0.036207, 0.721387, 0, 1.0};
Point(36) = {-0.034659, 0.720953, 0, 1.0};
Point(37) = {-0.032302, 0.720756, 0, 1.0};
Point(38) = {-0.029175, 0.720805, 0, 1.0};
Point(39) = {-0.025311, 0.721091, 0, 1.0};
Point(40) = {-0.020745, 0.721605, 0, 1.0};
Point(41) = {-0.015525, 0.722334, 0, 1.0};
Point(42) = {-0.009703, 0.723259, 0, 1.0};
Point(43) = {-0.003341, 0.724357, 0, 1.0};
Point(44) = {0.003487, 0.725604, 0, 1.0};
Point(45) = {0.010705, 0.726978, 0, 1.0};
Point(46) = {0.018223, 0.728457, 0, 1.0};
Point(47) = {0.025950, 0.730017, 0, 1.0};
Point(48) = {0.033792, 0.731640, 0, 1.0};
Point(49) = {0.041649, 0.733312, 0, 1.0};
Point(50) = {0.049416, 0.735036, 0, 1.0};
Point(51) = {0.057008, 0.736837, 0, 1.0};
Point(52) = {0.064414, 0.738761, 0, 1.0};
Point(53) = {0.071684, 0.740729, 0, 1.0};
Point(54) = {0.078767, 0.742582, 0, 1.0};
Point(55) = {0.085526, 0.744197, 0, 1.0};
Point(56) = {0.091813, 0.745492, 0, 1.0};
Point(57) = {0.097457, 0.746405, 0, 1.0};
Point(58) = {0.102253, 0.746943, 0, 1.0};
Point(59) = {0.106053, 0.747193, 0, 1.0};
Point(60) = {0.108775, 0.747269, 0, 1.0};
Point(61) = {0.110405, 0.747264, 0, 1.0};
Point(62) = {-0.110945, -0.747253, 0, 1.0};
Point(63) = {-0.110425, -0.747325, 0, 1.0};
Point(64) = {-0.108961, -0.747569, 0, 1.0};
Point(65) = {-0.106725, -0.747948, 0, 1.0};
Point(66) = {-0.103792, -0.748333, 0, 1.0};
Point(67) = {-0.100135, -0.748662, 0, 1.0};
Point(68) = {-0.095766, -0.748956, 0, 1.0};
Point(69) = {-0.090750, -0.749231, 0, 1.0};
Point(70) = {-0.085170, -0.749485, 0, 1.0};
Point(71) = {-0.079105, -0.749706, 0, 1.0};
Point(72) = {-0.072648, -0.749880, 0, 1.0};
Point(73) = {-0.065890, -0.749988, 0, 1.0};
Point(74) = {-0.058928, -0.750000, 0, 1.0};
Point(75) = {-0.051855, -0.749883, 0, 1.0};
Point(76) = {-0.044768, -0.749579, 0, 1.0};
Point(77) = {-0.037709, -0.749005, 0, 1.0};
Point(78) = {-0.030656, -0.748141, 0, 1.0};
Point(79) = {-0.023628, -0.747041, 0, 1.0};
Point(80) = {-0.016699, -0.745750, 0, 1.0};
Point(81) = {-0.009936, -0.744296, 0, 1.0};
Point(82) = {-0.003410, -0.742703, 0, 1.0};
Point(83) = {0.002810, -0.740998, 0, 1.0};
Point(84) = {0.008663, -0.739204, 0, 1.0};
Point(85) = {0.014088, -0.737348, 0, 1.0};
Point(86) = {0.019033, -0.735454, 0, 1.0};
Point(87) = {0.023443, -0.733550, 0, 1.0};
Point(88) = {0.027280, -0.731661, 0, 1.0};
Point(89) = {0.030503, -0.729813, 0, 1.0};
Point(90) = {0.033087, -0.728030, 0, 1.0};
Point(91) = {0.035013, -0.726337, 0, 1.0};
Point(92) = {0.036276, -0.724759, 0, 1.0};
Point(93) = {0.036906, -0.723336, 0, 1.0};
Point(94) = {0.036982, -0.722403, 0, 1.0};
Point(95) = {0.036920, -0.722164, 0, 1.0};
Point(96) = {0.036207, -0.721387, 0, 1.0};
Point(97) = {0.034659, -0.720953, 0, 1.0};
Point(98) = {0.032302, -0.720756, 0, 1.0};
Point(99) = {0.029175, -0.720805, 0, 1.0};
Point(100) = {0.025311, -0.721091, 0, 1.0};
Point(101) = {0.020745, -0.721605, 0, 1.0};
Point(102) = {0.015525, -0.722334, 0, 1.0};
Point(103) = {0.009703, -0.723259, 0, 1.0};
Point(104) = {0.003341, -0.724357, 0, 1.0};
Point(105) = {-0.003487, -0.725604, 0, 1.0};
Point(106) = {-0.010705, -0.726978, 0, 1.0};
Point(107) = {-0.018223, -0.728457, 0, 1.0};
Point(108) = {-0.025950, -0.730017, 0, 1.0};
Point(109) = {-0.033792, -0.731640, 0, 1.0};
Point(110) = {-0.041649, -0.733312, 0, 1.0};
Point(111) = {-0.049416, -0.735036, 0, 1.0};
Point(112) = {-0.057008, -0.736837, 0, 1.0};
Point(113) = {-0.064414, -0.738761, 0, 1.0};
Point(114) = {-0.071684, -0.740729, 0, 1.0};
Point(115) = {-0.078767, -0.742582, 0, 1.0};
Point(116) = {-0.085526, -0.744197, 0, 1.0};
Point(117) = {-0.091813, -0.745492, 0, 1.0};
Point(118) = {-0.097457, -0.746405, 0, 1.0};
Point(119) = {-0.102253, -0.746943, 0, 1.0};
Point(120) = {-0.106053, -0.747193, 0, 1.0};
Point(121) = {-0.108775, -0.747269, 0, 1.0};
Point(122) = {-0.110405, -0.747264, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
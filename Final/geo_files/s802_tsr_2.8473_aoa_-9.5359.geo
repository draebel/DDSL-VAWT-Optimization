SetFactory("OpenCASCADE");

Point(1) = {0.147236, 0.746337, 0, 1.0};
Point(2) = {0.146543, 0.746434, 0, 1.0};
Point(3) = {0.144590, 0.746759, 0, 1.0};
Point(4) = {0.141609, 0.747264, 0, 1.0};
Point(5) = {0.137698, 0.747777, 0, 1.0};
Point(6) = {0.132822, 0.748215, 0, 1.0};
Point(7) = {0.126997, 0.748608, 0, 1.0};
Point(8) = {0.120309, 0.748975, 0, 1.0};
Point(9) = {0.112869, 0.749313, 0, 1.0};
Point(10) = {0.104782, 0.749607, 0, 1.0};
Point(11) = {0.096172, 0.749840, 0, 1.0};
Point(12) = {0.087162, 0.749984, 0, 1.0};
Point(13) = {0.077879, 0.750000, 0, 1.0};
Point(14) = {0.068449, 0.749844, 0, 1.0};
Point(15) = {0.058999, 0.749439, 0, 1.0};
Point(16) = {0.049588, 0.748673, 0, 1.0};
Point(17) = {0.040183, 0.747521, 0, 1.0};
Point(18) = {0.030813, 0.746054, 0, 1.0};
Point(19) = {0.021574, 0.744334, 0, 1.0};
Point(20) = {0.012556, 0.742395, 0, 1.0};
Point(21) = {0.003856, 0.740271, 0, 1.0};
Point(22) = {-0.004438, 0.737997, 0, 1.0};
Point(23) = {-0.012241, 0.735605, 0, 1.0};
Point(24) = {-0.019475, 0.733131, 0, 1.0};
Point(25) = {-0.026068, 0.730606, 0, 1.0};
Point(26) = {-0.031949, 0.728066, 0, 1.0};
Point(27) = {-0.037064, 0.725548, 0, 1.0};
Point(28) = {-0.041361, 0.723084, 0, 1.0};
Point(29) = {-0.044807, 0.720706, 0, 1.0};
Point(30) = {-0.047375, 0.718450, 0, 1.0};
Point(31) = {-0.049059, 0.716346, 0, 1.0};
Point(32) = {-0.049899, 0.714448, 0, 1.0};
Point(33) = {-0.050000, 0.713204, 0, 1.0};
Point(34) = {-0.049918, 0.712886, 0, 1.0};
Point(35) = {-0.048967, 0.711849, 0, 1.0};
Point(36) = {-0.046903, 0.711271, 0, 1.0};
Point(37) = {-0.043760, 0.711008, 0, 1.0};
Point(38) = {-0.039591, 0.711073, 0, 1.0};
Point(39) = {-0.034439, 0.711454, 0, 1.0};
Point(40) = {-0.028351, 0.712140, 0, 1.0};
Point(41) = {-0.021391, 0.713113, 0, 1.0};
Point(42) = {-0.013628, 0.714346, 0, 1.0};
Point(43) = {-0.005146, 0.715809, 0, 1.0};
Point(44) = {0.003959, 0.717472, 0, 1.0};
Point(45) = {0.013582, 0.719304, 0, 1.0};
Point(46) = {0.023606, 0.721276, 0, 1.0};
Point(47) = {0.033910, 0.723356, 0, 1.0};
Point(48) = {0.044366, 0.725520, 0, 1.0};
Point(49) = {0.054841, 0.727750, 0, 1.0};
Point(50) = {0.065197, 0.730047, 0, 1.0};
Point(51) = {0.075319, 0.732449, 0, 1.0};
Point(52) = {0.085195, 0.735015, 0, 1.0};
Point(53) = {0.094888, 0.737639, 0, 1.0};
Point(54) = {0.104331, 0.740110, 0, 1.0};
Point(55) = {0.113343, 0.742262, 0, 1.0};
Point(56) = {0.121727, 0.743989, 0, 1.0};
Point(57) = {0.129251, 0.745206, 0, 1.0};
Point(58) = {0.135647, 0.745924, 0, 1.0};
Point(59) = {0.140713, 0.746258, 0, 1.0};
Point(60) = {0.144343, 0.746358, 0, 1.0};
Point(61) = {0.146516, 0.746352, 0, 1.0};
Point(62) = {-0.147236, -0.746337, 0, 1.0};
Point(63) = {-0.146543, -0.746434, 0, 1.0};
Point(64) = {-0.144590, -0.746759, 0, 1.0};
Point(65) = {-0.141609, -0.747264, 0, 1.0};
Point(66) = {-0.137698, -0.747777, 0, 1.0};
Point(67) = {-0.132822, -0.748215, 0, 1.0};
Point(68) = {-0.126997, -0.748608, 0, 1.0};
Point(69) = {-0.120309, -0.748975, 0, 1.0};
Point(70) = {-0.112869, -0.749313, 0, 1.0};
Point(71) = {-0.104782, -0.749607, 0, 1.0};
Point(72) = {-0.096172, -0.749840, 0, 1.0};
Point(73) = {-0.087162, -0.749984, 0, 1.0};
Point(74) = {-0.077879, -0.750000, 0, 1.0};
Point(75) = {-0.068449, -0.749844, 0, 1.0};
Point(76) = {-0.058999, -0.749439, 0, 1.0};
Point(77) = {-0.049588, -0.748673, 0, 1.0};
Point(78) = {-0.040183, -0.747521, 0, 1.0};
Point(79) = {-0.030813, -0.746054, 0, 1.0};
Point(80) = {-0.021574, -0.744334, 0, 1.0};
Point(81) = {-0.012556, -0.742395, 0, 1.0};
Point(82) = {-0.003856, -0.740271, 0, 1.0};
Point(83) = {0.004438, -0.737997, 0, 1.0};
Point(84) = {0.012241, -0.735605, 0, 1.0};
Point(85) = {0.019475, -0.733131, 0, 1.0};
Point(86) = {0.026068, -0.730606, 0, 1.0};
Point(87) = {0.031949, -0.728066, 0, 1.0};
Point(88) = {0.037064, -0.725548, 0, 1.0};
Point(89) = {0.041361, -0.723084, 0, 1.0};
Point(90) = {0.044807, -0.720706, 0, 1.0};
Point(91) = {0.047375, -0.718450, 0, 1.0};
Point(92) = {0.049059, -0.716346, 0, 1.0};
Point(93) = {0.049899, -0.714448, 0, 1.0};
Point(94) = {0.050000, -0.713204, 0, 1.0};
Point(95) = {0.049918, -0.712886, 0, 1.0};
Point(96) = {0.048967, -0.711849, 0, 1.0};
Point(97) = {0.046903, -0.711271, 0, 1.0};
Point(98) = {0.043760, -0.711008, 0, 1.0};
Point(99) = {0.039591, -0.711073, 0, 1.0};
Point(100) = {0.034439, -0.711454, 0, 1.0};
Point(101) = {0.028351, -0.712140, 0, 1.0};
Point(102) = {0.021391, -0.713113, 0, 1.0};
Point(103) = {0.013628, -0.714346, 0, 1.0};
Point(104) = {0.005146, -0.715809, 0, 1.0};
Point(105) = {-0.003959, -0.717472, 0, 1.0};
Point(106) = {-0.013582, -0.719304, 0, 1.0};
Point(107) = {-0.023606, -0.721276, 0, 1.0};
Point(108) = {-0.033910, -0.723356, 0, 1.0};
Point(109) = {-0.044366, -0.725520, 0, 1.0};
Point(110) = {-0.054841, -0.727750, 0, 1.0};
Point(111) = {-0.065197, -0.730047, 0, 1.0};
Point(112) = {-0.075319, -0.732449, 0, 1.0};
Point(113) = {-0.085195, -0.735015, 0, 1.0};
Point(114) = {-0.094888, -0.737639, 0, 1.0};
Point(115) = {-0.104331, -0.740110, 0, 1.0};
Point(116) = {-0.113343, -0.742262, 0, 1.0};
Point(117) = {-0.121727, -0.743989, 0, 1.0};
Point(118) = {-0.129251, -0.745206, 0, 1.0};
Point(119) = {-0.135647, -0.745924, 0, 1.0};
Point(120) = {-0.140713, -0.746258, 0, 1.0};
Point(121) = {-0.144343, -0.746358, 0, 1.0};
Point(122) = {-0.146516, -0.746352, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
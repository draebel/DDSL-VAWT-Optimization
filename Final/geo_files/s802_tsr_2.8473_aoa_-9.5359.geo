SetFactory("OpenCASCADE");

Point(1) = {0.073618, 0.748169, 0, 1.0};
Point(2) = {0.073271, 0.748217, 0, 1.0};
Point(3) = {0.072295, 0.748379, 0, 1.0};
Point(4) = {0.070805, 0.748632, 0, 1.0};
Point(5) = {0.068849, 0.748889, 0, 1.0};
Point(6) = {0.066411, 0.749108, 0, 1.0};
Point(7) = {0.063498, 0.749304, 0, 1.0};
Point(8) = {0.060155, 0.749488, 0, 1.0};
Point(9) = {0.056434, 0.749657, 0, 1.0};
Point(10) = {0.052391, 0.749804, 0, 1.0};
Point(11) = {0.048086, 0.749920, 0, 1.0};
Point(12) = {0.043581, 0.749992, 0, 1.0};
Point(13) = {0.038940, 0.750000, 0, 1.0};
Point(14) = {0.034224, 0.749922, 0, 1.0};
Point(15) = {0.029500, 0.749719, 0, 1.0};
Point(16) = {0.024794, 0.749336, 0, 1.0};
Point(17) = {0.020092, 0.748760, 0, 1.0};
Point(18) = {0.015406, 0.748027, 0, 1.0};
Point(19) = {0.010787, 0.747167, 0, 1.0};
Point(20) = {0.006278, 0.746198, 0, 1.0};
Point(21) = {0.001928, 0.745135, 0, 1.0};
Point(22) = {-0.002219, 0.743999, 0, 1.0};
Point(23) = {-0.006121, 0.742803, 0, 1.0};
Point(24) = {-0.009738, 0.741565, 0, 1.0};
Point(25) = {-0.013034, 0.740303, 0, 1.0};
Point(26) = {-0.015974, 0.739033, 0, 1.0};
Point(27) = {-0.018532, 0.737774, 0, 1.0};
Point(28) = {-0.020681, 0.736542, 0, 1.0};
Point(29) = {-0.022404, 0.735353, 0, 1.0};
Point(30) = {-0.023687, 0.734225, 0, 1.0};
Point(31) = {-0.024530, 0.733173, 0, 1.0};
Point(32) = {-0.024949, 0.732224, 0, 1.0};
Point(33) = {-0.025000, 0.731602, 0, 1.0};
Point(34) = {-0.024959, 0.731443, 0, 1.0};
Point(35) = {-0.024484, 0.730924, 0, 1.0};
Point(36) = {-0.023451, 0.730635, 0, 1.0};
Point(37) = {-0.021880, 0.730504, 0, 1.0};
Point(38) = {-0.019796, 0.730537, 0, 1.0};
Point(39) = {-0.017220, 0.730727, 0, 1.0};
Point(40) = {-0.014175, 0.731070, 0, 1.0};
Point(41) = {-0.010696, 0.731556, 0, 1.0};
Point(42) = {-0.006814, 0.732173, 0, 1.0};
Point(43) = {-0.002573, 0.732905, 0, 1.0};
Point(44) = {0.001979, 0.733736, 0, 1.0};
Point(45) = {0.006791, 0.734652, 0, 1.0};
Point(46) = {0.011803, 0.735638, 0, 1.0};
Point(47) = {0.016955, 0.736678, 0, 1.0};
Point(48) = {0.022183, 0.737760, 0, 1.0};
Point(49) = {0.027421, 0.738875, 0, 1.0};
Point(50) = {0.032599, 0.740024, 0, 1.0};
Point(51) = {0.037660, 0.741225, 0, 1.0};
Point(52) = {0.042597, 0.742507, 0, 1.0};
Point(53) = {0.047444, 0.743819, 0, 1.0};
Point(54) = {0.052166, 0.745055, 0, 1.0};
Point(55) = {0.056672, 0.746131, 0, 1.0};
Point(56) = {0.060863, 0.746994, 0, 1.0};
Point(57) = {0.064626, 0.747603, 0, 1.0};
Point(58) = {0.067823, 0.747962, 0, 1.0};
Point(59) = {0.070357, 0.748129, 0, 1.0};
Point(60) = {0.072171, 0.748179, 0, 1.0};
Point(61) = {0.073258, 0.748176, 0, 1.0};
Point(62) = {-0.073618, -0.748169, 0, 1.0};
Point(63) = {-0.073271, -0.748217, 0, 1.0};
Point(64) = {-0.072295, -0.748379, 0, 1.0};
Point(65) = {-0.070805, -0.748632, 0, 1.0};
Point(66) = {-0.068849, -0.748889, 0, 1.0};
Point(67) = {-0.066411, -0.749108, 0, 1.0};
Point(68) = {-0.063498, -0.749304, 0, 1.0};
Point(69) = {-0.060155, -0.749488, 0, 1.0};
Point(70) = {-0.056434, -0.749657, 0, 1.0};
Point(71) = {-0.052391, -0.749804, 0, 1.0};
Point(72) = {-0.048086, -0.749920, 0, 1.0};
Point(73) = {-0.043581, -0.749992, 0, 1.0};
Point(74) = {-0.038940, -0.750000, 0, 1.0};
Point(75) = {-0.034224, -0.749922, 0, 1.0};
Point(76) = {-0.029500, -0.749719, 0, 1.0};
Point(77) = {-0.024794, -0.749336, 0, 1.0};
Point(78) = {-0.020092, -0.748760, 0, 1.0};
Point(79) = {-0.015406, -0.748027, 0, 1.0};
Point(80) = {-0.010787, -0.747167, 0, 1.0};
Point(81) = {-0.006278, -0.746198, 0, 1.0};
Point(82) = {-0.001928, -0.745135, 0, 1.0};
Point(83) = {0.002219, -0.743999, 0, 1.0};
Point(84) = {0.006121, -0.742803, 0, 1.0};
Point(85) = {0.009738, -0.741565, 0, 1.0};
Point(86) = {0.013034, -0.740303, 0, 1.0};
Point(87) = {0.015974, -0.739033, 0, 1.0};
Point(88) = {0.018532, -0.737774, 0, 1.0};
Point(89) = {0.020681, -0.736542, 0, 1.0};
Point(90) = {0.022404, -0.735353, 0, 1.0};
Point(91) = {0.023687, -0.734225, 0, 1.0};
Point(92) = {0.024530, -0.733173, 0, 1.0};
Point(93) = {0.024949, -0.732224, 0, 1.0};
Point(94) = {0.025000, -0.731602, 0, 1.0};
Point(95) = {0.024959, -0.731443, 0, 1.0};
Point(96) = {0.024484, -0.730924, 0, 1.0};
Point(97) = {0.023451, -0.730635, 0, 1.0};
Point(98) = {0.021880, -0.730504, 0, 1.0};
Point(99) = {0.019796, -0.730537, 0, 1.0};
Point(100) = {0.017220, -0.730727, 0, 1.0};
Point(101) = {0.014175, -0.731070, 0, 1.0};
Point(102) = {0.010696, -0.731556, 0, 1.0};
Point(103) = {0.006814, -0.732173, 0, 1.0};
Point(104) = {0.002573, -0.732905, 0, 1.0};
Point(105) = {-0.001979, -0.733736, 0, 1.0};
Point(106) = {-0.006791, -0.734652, 0, 1.0};
Point(107) = {-0.011803, -0.735638, 0, 1.0};
Point(108) = {-0.016955, -0.736678, 0, 1.0};
Point(109) = {-0.022183, -0.737760, 0, 1.0};
Point(110) = {-0.027421, -0.738875, 0, 1.0};
Point(111) = {-0.032599, -0.740024, 0, 1.0};
Point(112) = {-0.037660, -0.741225, 0, 1.0};
Point(113) = {-0.042597, -0.742507, 0, 1.0};
Point(114) = {-0.047444, -0.743819, 0, 1.0};
Point(115) = {-0.052166, -0.745055, 0, 1.0};
Point(116) = {-0.056672, -0.746131, 0, 1.0};
Point(117) = {-0.060863, -0.746994, 0, 1.0};
Point(118) = {-0.064626, -0.747603, 0, 1.0};
Point(119) = {-0.067823, -0.747962, 0, 1.0};
Point(120) = {-0.070357, -0.748129, 0, 1.0};
Point(121) = {-0.072171, -0.748179, 0, 1.0};
Point(122) = {-0.073258, -0.748176, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.147394, 0.705812, 0, 1.0};
Point(2) = {0.142637, 0.707712, 0, 1.0};
Point(3) = {0.137895, 0.709697, 0, 1.0};
Point(4) = {0.133154, 0.711692, 0, 1.0};
Point(5) = {0.128406, 0.713644, 0, 1.0};
Point(6) = {0.123661, 0.715611, 0, 1.0};
Point(7) = {0.118915, 0.717570, 0, 1.0};
Point(8) = {0.114169, 0.719535, 0, 1.0};
Point(9) = {0.109422, 0.721495, 0, 1.0};
Point(10) = {0.099913, 0.725313, 0, 1.0};
Point(11) = {0.090378, 0.728973, 0, 1.0};
Point(12) = {0.080808, 0.732421, 0, 1.0};
Point(13) = {0.071202, 0.735649, 0, 1.0};
Point(14) = {0.061550, 0.738591, 0, 1.0};
Point(15) = {0.051846, 0.741217, 0, 1.0};
Point(16) = {0.042088, 0.743515, 0, 1.0};
Point(17) = {0.032279, 0.745493, 0, 1.0};
Point(18) = {0.027355, 0.746368, 0, 1.0};
Point(19) = {0.022419, 0.747161, 0, 1.0};
Point(20) = {0.017467, 0.747861, 0, 1.0};
Point(21) = {0.012499, 0.748462, 0, 1.0};
Point(22) = {0.007516, 0.748975, 0, 1.0};
Point(23) = {0.002520, 0.749402, 0, 1.0};
Point(24) = {-0.002491, 0.749737, 0, 1.0};
Point(25) = {-0.007523, 0.749946, 0, 1.0};
Point(26) = {-0.012581, 0.750000, 0, 1.0};
Point(27) = {-0.017665, 0.749885, 0, 1.0};
Point(28) = {-0.022782, 0.749574, 0, 1.0};
Point(29) = {-0.027942, 0.748999, 0, 1.0};
Point(30) = {-0.033159, 0.748072, 0, 1.0};
Point(31) = {-0.038461, 0.746626, 0, 1.0};
Point(32) = {-0.041157, 0.745623, 0, 1.0};
Point(33) = {-0.043901, 0.744328, 0, 1.0};
Point(34) = {-0.045301, 0.743515, 0, 1.0};
Point(35) = {-0.046732, 0.742506, 0, 1.0};
Point(36) = {-0.047614, 0.741756, 0, 1.0};
Point(37) = {-0.048536, 0.740761, 0, 1.0};
Point(38) = {-0.049197, 0.739815, 0, 1.0};
Point(39) = {-0.050000, 0.737995, 0, 1.0};
Point(40) = {-0.049700, 0.736726, 0, 1.0};
Point(41) = {-0.049298, 0.736087, 0, 1.0};
Point(42) = {-0.048664, 0.735313, 0, 1.0};
Point(43) = {-0.048010, 0.734665, 0, 1.0};
Point(44) = {-0.046890, 0.733765, 0, 1.0};
Point(45) = {-0.045742, 0.733041, 0, 1.0};
Point(46) = {-0.043407, 0.731824, 0, 1.0};
Point(47) = {-0.041040, 0.730807, 0, 1.0};
Point(48) = {-0.036256, 0.729077, 0, 1.0};
Point(49) = {-0.031433, 0.727586, 0, 1.0};
Point(50) = {-0.026586, 0.726240, 0, 1.0};
Point(51) = {-0.021720, 0.725013, 0, 1.0};
Point(52) = {-0.016837, 0.723891, 0, 1.0};
Point(53) = {-0.011941, 0.722853, 0, 1.0};
Point(54) = {-0.007033, 0.721879, 0, 1.0};
Point(55) = {-0.002118, 0.720954, 0, 1.0};
Point(56) = {0.002804, 0.720074, 0, 1.0};
Point(57) = {0.007731, 0.719218, 0, 1.0};
Point(58) = {0.012661, 0.718384, 0, 1.0};
Point(59) = {0.017597, 0.717586, 0, 1.0};
Point(60) = {0.022547, 0.716874, 0, 1.0};
Point(61) = {0.027512, 0.716253, 0, 1.0};
Point(62) = {0.037472, 0.715198, 0, 1.0};
Point(63) = {0.047470, 0.714377, 0, 1.0};
Point(64) = {0.057496, 0.713729, 0, 1.0};
Point(65) = {0.067545, 0.713221, 0, 1.0};
Point(66) = {0.077607, 0.712791, 0, 1.0};
Point(67) = {0.087668, 0.712356, 0, 1.0};
Point(68) = {0.097720, 0.711862, 0, 1.0};
Point(69) = {0.107748, 0.711224, 0, 1.0};
Point(70) = {0.112747, 0.710814, 0, 1.0};
Point(71) = {0.117734, 0.710330, 0, 1.0};
Point(72) = {0.122704, 0.709740, 0, 1.0};
Point(73) = {0.127663, 0.709084, 0, 1.0};
Point(74) = {0.132605, 0.708323, 0, 1.0};
Point(75) = {0.137548, 0.707571, 0, 1.0};
Point(76) = {0.142478, 0.706735, 0, 1.0};
Point(77) = {-0.147394, -0.705812, 0, 1.0};
Point(78) = {-0.142637, -0.707712, 0, 1.0};
Point(79) = {-0.137895, -0.709697, 0, 1.0};
Point(80) = {-0.133154, -0.711692, 0, 1.0};
Point(81) = {-0.128406, -0.713644, 0, 1.0};
Point(82) = {-0.123661, -0.715611, 0, 1.0};
Point(83) = {-0.118915, -0.717570, 0, 1.0};
Point(84) = {-0.114169, -0.719535, 0, 1.0};
Point(85) = {-0.109422, -0.721495, 0, 1.0};
Point(86) = {-0.099913, -0.725313, 0, 1.0};
Point(87) = {-0.090378, -0.728973, 0, 1.0};
Point(88) = {-0.080808, -0.732421, 0, 1.0};
Point(89) = {-0.071202, -0.735649, 0, 1.0};
Point(90) = {-0.061550, -0.738591, 0, 1.0};
Point(91) = {-0.051846, -0.741217, 0, 1.0};
Point(92) = {-0.042088, -0.743515, 0, 1.0};
Point(93) = {-0.032279, -0.745493, 0, 1.0};
Point(94) = {-0.027355, -0.746368, 0, 1.0};
Point(95) = {-0.022419, -0.747161, 0, 1.0};
Point(96) = {-0.017467, -0.747861, 0, 1.0};
Point(97) = {-0.012499, -0.748462, 0, 1.0};
Point(98) = {-0.007516, -0.748975, 0, 1.0};
Point(99) = {-0.002520, -0.749402, 0, 1.0};
Point(100) = {0.002491, -0.749737, 0, 1.0};
Point(101) = {0.007523, -0.749946, 0, 1.0};
Point(102) = {0.012581, -0.750000, 0, 1.0};
Point(103) = {0.017665, -0.749885, 0, 1.0};
Point(104) = {0.022782, -0.749574, 0, 1.0};
Point(105) = {0.027942, -0.748999, 0, 1.0};
Point(106) = {0.033159, -0.748072, 0, 1.0};
Point(107) = {0.038461, -0.746626, 0, 1.0};
Point(108) = {0.041157, -0.745623, 0, 1.0};
Point(109) = {0.043901, -0.744328, 0, 1.0};
Point(110) = {0.045301, -0.743515, 0, 1.0};
Point(111) = {0.046732, -0.742506, 0, 1.0};
Point(112) = {0.047614, -0.741756, 0, 1.0};
Point(113) = {0.048536, -0.740761, 0, 1.0};
Point(114) = {0.049197, -0.739815, 0, 1.0};
Point(115) = {0.050000, -0.737995, 0, 1.0};
Point(116) = {0.049700, -0.736726, 0, 1.0};
Point(117) = {0.049298, -0.736087, 0, 1.0};
Point(118) = {0.048664, -0.735313, 0, 1.0};
Point(119) = {0.048010, -0.734665, 0, 1.0};
Point(120) = {0.046890, -0.733765, 0, 1.0};
Point(121) = {0.045742, -0.733041, 0, 1.0};
Point(122) = {0.043407, -0.731824, 0, 1.0};
Point(123) = {0.041040, -0.730807, 0, 1.0};
Point(124) = {0.036256, -0.729077, 0, 1.0};
Point(125) = {0.031433, -0.727586, 0, 1.0};
Point(126) = {0.026586, -0.726240, 0, 1.0};
Point(127) = {0.021720, -0.725013, 0, 1.0};
Point(128) = {0.016837, -0.723891, 0, 1.0};
Point(129) = {0.011941, -0.722853, 0, 1.0};
Point(130) = {0.007033, -0.721879, 0, 1.0};
Point(131) = {0.002118, -0.720954, 0, 1.0};
Point(132) = {-0.002804, -0.720074, 0, 1.0};
Point(133) = {-0.007731, -0.719218, 0, 1.0};
Point(134) = {-0.012661, -0.718384, 0, 1.0};
Point(135) = {-0.017597, -0.717586, 0, 1.0};
Point(136) = {-0.022547, -0.716874, 0, 1.0};
Point(137) = {-0.027512, -0.716253, 0, 1.0};
Point(138) = {-0.037472, -0.715198, 0, 1.0};
Point(139) = {-0.047470, -0.714377, 0, 1.0};
Point(140) = {-0.057496, -0.713729, 0, 1.0};
Point(141) = {-0.067545, -0.713221, 0, 1.0};
Point(142) = {-0.077607, -0.712791, 0, 1.0};
Point(143) = {-0.087668, -0.712356, 0, 1.0};
Point(144) = {-0.097720, -0.711862, 0, 1.0};
Point(145) = {-0.107748, -0.711224, 0, 1.0};
Point(146) = {-0.112747, -0.710814, 0, 1.0};
Point(147) = {-0.117734, -0.710330, 0, 1.0};
Point(148) = {-0.122704, -0.709740, 0, 1.0};
Point(149) = {-0.127663, -0.709084, 0, 1.0};
Point(150) = {-0.132605, -0.708323, 0, 1.0};
Point(151) = {-0.137548, -0.707571, 0, 1.0};
Point(152) = {-0.142478, -0.706735, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
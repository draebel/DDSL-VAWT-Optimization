SetFactory("OpenCASCADE");

Point(1) = {0.074023, 0.716859, 0, 1.0};
Point(2) = {0.070455, 0.718284, 0, 1.0};
Point(3) = {0.066899, 0.719773, 0, 1.0};
Point(4) = {0.063343, 0.721269, 0, 1.0};
Point(5) = {0.059782, 0.722733, 0, 1.0};
Point(6) = {0.056223, 0.724208, 0, 1.0};
Point(7) = {0.052663, 0.725678, 0, 1.0};
Point(8) = {0.049104, 0.727151, 0, 1.0};
Point(9) = {0.045544, 0.728621, 0, 1.0};
Point(10) = {0.038412, 0.731484, 0, 1.0};
Point(11) = {0.031261, 0.734229, 0, 1.0};
Point(12) = {0.024083, 0.736816, 0, 1.0};
Point(13) = {0.016879, 0.739237, 0, 1.0};
Point(14) = {0.009640, 0.741443, 0, 1.0};
Point(15) = {0.002362, 0.743412, 0, 1.0};
Point(16) = {-0.004956, 0.745136, 0, 1.0};
Point(17) = {-0.012314, 0.746620, 0, 1.0};
Point(18) = {-0.016006, 0.747276, 0, 1.0};
Point(19) = {-0.019709, 0.747871, 0, 1.0};
Point(20) = {-0.023423, 0.748396, 0, 1.0};
Point(21) = {-0.027149, 0.748847, 0, 1.0};
Point(22) = {-0.030885, 0.749231, 0, 1.0};
Point(23) = {-0.034633, 0.749552, 0, 1.0};
Point(24) = {-0.038391, 0.749803, 0, 1.0};
Point(25) = {-0.042165, 0.749959, 0, 1.0};
Point(26) = {-0.045958, 0.750000, 0, 1.0};
Point(27) = {-0.049772, 0.749914, 0, 1.0};
Point(28) = {-0.053609, 0.749681, 0, 1.0};
Point(29) = {-0.057479, 0.749249, 0, 1.0};
Point(30) = {-0.061392, 0.748554, 0, 1.0};
Point(31) = {-0.065368, 0.747470, 0, 1.0};
Point(32) = {-0.067391, 0.746717, 0, 1.0};
Point(33) = {-0.069449, 0.745746, 0, 1.0};
Point(34) = {-0.070498, 0.745136, 0, 1.0};
Point(35) = {-0.071571, 0.744379, 0, 1.0};
Point(36) = {-0.072233, 0.743817, 0, 1.0};
Point(37) = {-0.072924, 0.743071, 0, 1.0};
Point(38) = {-0.073420, 0.742361, 0, 1.0};
Point(39) = {-0.074023, 0.740996, 0, 1.0};
Point(40) = {-0.073798, 0.740045, 0, 1.0};
Point(41) = {-0.073496, 0.739565, 0, 1.0};
Point(42) = {-0.073021, 0.738985, 0, 1.0};
Point(43) = {-0.072530, 0.738499, 0, 1.0};
Point(44) = {-0.071690, 0.737824, 0, 1.0};
Point(45) = {-0.070829, 0.737281, 0, 1.0};
Point(46) = {-0.069078, 0.736368, 0, 1.0};
Point(47) = {-0.067302, 0.735606, 0, 1.0};
Point(48) = {-0.063715, 0.734308, 0, 1.0};
Point(49) = {-0.060097, 0.733189, 0, 1.0};
Point(50) = {-0.056462, 0.732180, 0, 1.0};
Point(51) = {-0.052813, 0.731260, 0, 1.0};
Point(52) = {-0.049151, 0.730418, 0, 1.0};
Point(53) = {-0.045478, 0.729640, 0, 1.0};
Point(54) = {-0.041798, 0.728909, 0, 1.0};
Point(55) = {-0.038111, 0.728215, 0, 1.0};
Point(56) = {-0.034419, 0.727556, 0, 1.0};
Point(57) = {-0.030724, 0.726914, 0, 1.0};
Point(58) = {-0.027027, 0.726288, 0, 1.0};
Point(59) = {-0.023325, 0.725689, 0, 1.0};
Point(60) = {-0.019613, 0.725155, 0, 1.0};
Point(61) = {-0.015889, 0.724690, 0, 1.0};
Point(62) = {-0.008419, 0.723899, 0, 1.0};
Point(63) = {-0.000920, 0.723283, 0, 1.0};
Point(64) = {0.006599, 0.722797, 0, 1.0};
Point(65) = {0.014136, 0.722416, 0, 1.0};
Point(66) = {0.021683, 0.722093, 0, 1.0};
Point(67) = {0.029229, 0.721767, 0, 1.0};
Point(68) = {0.036767, 0.721397, 0, 1.0};
Point(69) = {0.044288, 0.720918, 0, 1.0};
Point(70) = {0.048038, 0.720611, 0, 1.0};
Point(71) = {0.051778, 0.720247, 0, 1.0};
Point(72) = {0.055505, 0.719805, 0, 1.0};
Point(73) = {0.059225, 0.719313, 0, 1.0};
Point(74) = {0.062931, 0.718742, 0, 1.0};
Point(75) = {0.066639, 0.718179, 0, 1.0};
Point(76) = {0.070336, 0.717551, 0, 1.0};
Point(77) = {-0.074023, -0.716859, 0, 1.0};
Point(78) = {-0.070455, -0.718284, 0, 1.0};
Point(79) = {-0.066899, -0.719773, 0, 1.0};
Point(80) = {-0.063343, -0.721269, 0, 1.0};
Point(81) = {-0.059782, -0.722733, 0, 1.0};
Point(82) = {-0.056223, -0.724208, 0, 1.0};
Point(83) = {-0.052663, -0.725678, 0, 1.0};
Point(84) = {-0.049104, -0.727151, 0, 1.0};
Point(85) = {-0.045544, -0.728621, 0, 1.0};
Point(86) = {-0.038412, -0.731484, 0, 1.0};
Point(87) = {-0.031261, -0.734229, 0, 1.0};
Point(88) = {-0.024083, -0.736816, 0, 1.0};
Point(89) = {-0.016879, -0.739237, 0, 1.0};
Point(90) = {-0.009640, -0.741443, 0, 1.0};
Point(91) = {-0.002362, -0.743412, 0, 1.0};
Point(92) = {0.004956, -0.745136, 0, 1.0};
Point(93) = {0.012314, -0.746620, 0, 1.0};
Point(94) = {0.016006, -0.747276, 0, 1.0};
Point(95) = {0.019709, -0.747871, 0, 1.0};
Point(96) = {0.023423, -0.748396, 0, 1.0};
Point(97) = {0.027149, -0.748847, 0, 1.0};
Point(98) = {0.030885, -0.749231, 0, 1.0};
Point(99) = {0.034633, -0.749552, 0, 1.0};
Point(100) = {0.038391, -0.749803, 0, 1.0};
Point(101) = {0.042165, -0.749959, 0, 1.0};
Point(102) = {0.045958, -0.750000, 0, 1.0};
Point(103) = {0.049772, -0.749914, 0, 1.0};
Point(104) = {0.053609, -0.749681, 0, 1.0};
Point(105) = {0.057479, -0.749249, 0, 1.0};
Point(106) = {0.061392, -0.748554, 0, 1.0};
Point(107) = {0.065368, -0.747470, 0, 1.0};
Point(108) = {0.067391, -0.746717, 0, 1.0};
Point(109) = {0.069449, -0.745746, 0, 1.0};
Point(110) = {0.070498, -0.745136, 0, 1.0};
Point(111) = {0.071571, -0.744379, 0, 1.0};
Point(112) = {0.072233, -0.743817, 0, 1.0};
Point(113) = {0.072924, -0.743071, 0, 1.0};
Point(114) = {0.073420, -0.742361, 0, 1.0};
Point(115) = {0.074023, -0.740996, 0, 1.0};
Point(116) = {0.073798, -0.740045, 0, 1.0};
Point(117) = {0.073496, -0.739565, 0, 1.0};
Point(118) = {0.073021, -0.738985, 0, 1.0};
Point(119) = {0.072530, -0.738499, 0, 1.0};
Point(120) = {0.071690, -0.737824, 0, 1.0};
Point(121) = {0.070829, -0.737281, 0, 1.0};
Point(122) = {0.069078, -0.736368, 0, 1.0};
Point(123) = {0.067302, -0.735606, 0, 1.0};
Point(124) = {0.063715, -0.734308, 0, 1.0};
Point(125) = {0.060097, -0.733189, 0, 1.0};
Point(126) = {0.056462, -0.732180, 0, 1.0};
Point(127) = {0.052813, -0.731260, 0, 1.0};
Point(128) = {0.049151, -0.730418, 0, 1.0};
Point(129) = {0.045478, -0.729640, 0, 1.0};
Point(130) = {0.041798, -0.728909, 0, 1.0};
Point(131) = {0.038111, -0.728215, 0, 1.0};
Point(132) = {0.034419, -0.727556, 0, 1.0};
Point(133) = {0.030724, -0.726914, 0, 1.0};
Point(134) = {0.027027, -0.726288, 0, 1.0};
Point(135) = {0.023325, -0.725689, 0, 1.0};
Point(136) = {0.019613, -0.725155, 0, 1.0};
Point(137) = {0.015889, -0.724690, 0, 1.0};
Point(138) = {0.008419, -0.723899, 0, 1.0};
Point(139) = {0.000920, -0.723283, 0, 1.0};
Point(140) = {-0.006599, -0.722797, 0, 1.0};
Point(141) = {-0.014136, -0.722416, 0, 1.0};
Point(142) = {-0.021683, -0.722093, 0, 1.0};
Point(143) = {-0.029229, -0.721767, 0, 1.0};
Point(144) = {-0.036767, -0.721397, 0, 1.0};
Point(145) = {-0.044288, -0.720918, 0, 1.0};
Point(146) = {-0.048038, -0.720611, 0, 1.0};
Point(147) = {-0.051778, -0.720247, 0, 1.0};
Point(148) = {-0.055505, -0.719805, 0, 1.0};
Point(149) = {-0.059225, -0.719313, 0, 1.0};
Point(150) = {-0.062931, -0.718742, 0, 1.0};
Point(151) = {-0.066639, -0.718179, 0, 1.0};
Point(152) = {-0.070336, -0.717551, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
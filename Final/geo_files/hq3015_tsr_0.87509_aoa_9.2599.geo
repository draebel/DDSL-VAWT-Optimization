SetFactory("OpenCASCADE");

Point(1) = {0.073697, 0.727906, 0, 1.0};
Point(2) = {0.071319, 0.728856, 0, 1.0};
Point(3) = {0.068948, 0.729849, 0, 1.0};
Point(4) = {0.066577, 0.730846, 0, 1.0};
Point(5) = {0.064203, 0.731822, 0, 1.0};
Point(6) = {0.061831, 0.732805, 0, 1.0};
Point(7) = {0.059457, 0.733785, 0, 1.0};
Point(8) = {0.057084, 0.734768, 0, 1.0};
Point(9) = {0.054711, 0.735747, 0, 1.0};
Point(10) = {0.049956, 0.737656, 0, 1.0};
Point(11) = {0.045189, 0.739486, 0, 1.0};
Point(12) = {0.040404, 0.741211, 0, 1.0};
Point(13) = {0.035601, 0.742825, 0, 1.0};
Point(14) = {0.030775, 0.744295, 0, 1.0};
Point(15) = {0.025923, 0.745608, 0, 1.0};
Point(16) = {0.021044, 0.746757, 0, 1.0};
Point(17) = {0.016139, 0.747746, 0, 1.0};
Point(18) = {0.013678, 0.748184, 0, 1.0};
Point(19) = {0.011209, 0.748581, 0, 1.0};
Point(20) = {0.008733, 0.748931, 0, 1.0};
Point(21) = {0.006249, 0.749231, 0, 1.0};
Point(22) = {0.003758, 0.749487, 0, 1.0};
Point(23) = {0.001260, 0.749701, 0, 1.0};
Point(24) = {-0.001246, 0.749869, 0, 1.0};
Point(25) = {-0.003762, 0.749973, 0, 1.0};
Point(26) = {-0.006290, 0.750000, 0, 1.0};
Point(27) = {-0.008833, 0.749942, 0, 1.0};
Point(28) = {-0.011391, 0.749787, 0, 1.0};
Point(29) = {-0.013971, 0.749499, 0, 1.0};
Point(30) = {-0.016579, 0.749036, 0, 1.0};
Point(31) = {-0.019230, 0.748313, 0, 1.0};
Point(32) = {-0.020579, 0.747812, 0, 1.0};
Point(33) = {-0.021951, 0.747164, 0, 1.0};
Point(34) = {-0.022650, 0.746757, 0, 1.0};
Point(35) = {-0.023366, 0.746253, 0, 1.0};
Point(36) = {-0.023807, 0.745878, 0, 1.0};
Point(37) = {-0.024268, 0.745381, 0, 1.0};
Point(38) = {-0.024598, 0.744908, 0, 1.0};
Point(39) = {-0.025000, 0.743997, 0, 1.0};
Point(40) = {-0.024850, 0.743363, 0, 1.0};
Point(41) = {-0.024649, 0.743043, 0, 1.0};
Point(42) = {-0.024332, 0.742656, 0, 1.0};
Point(43) = {-0.024005, 0.742333, 0, 1.0};
Point(44) = {-0.023445, 0.741883, 0, 1.0};
Point(45) = {-0.022871, 0.741521, 0, 1.0};
Point(46) = {-0.021704, 0.740912, 0, 1.0};
Point(47) = {-0.020520, 0.740404, 0, 1.0};
Point(48) = {-0.018128, 0.739539, 0, 1.0};
Point(49) = {-0.015717, 0.738793, 0, 1.0};
Point(50) = {-0.013293, 0.738120, 0, 1.0};
Point(51) = {-0.010860, 0.737507, 0, 1.0};
Point(52) = {-0.008419, 0.736945, 0, 1.0};
Point(53) = {-0.005970, 0.736427, 0, 1.0};
Point(54) = {-0.003517, 0.735939, 0, 1.0};
Point(55) = {-0.001059, 0.735477, 0, 1.0};
Point(56) = {0.001402, 0.735037, 0, 1.0};
Point(57) = {0.003865, 0.734609, 0, 1.0};
Point(58) = {0.006330, 0.734192, 0, 1.0};
Point(59) = {0.008798, 0.733793, 0, 1.0};
Point(60) = {0.011273, 0.733437, 0, 1.0};
Point(61) = {0.013756, 0.733126, 0, 1.0};
Point(62) = {0.018736, 0.732599, 0, 1.0};
Point(63) = {0.023735, 0.732188, 0, 1.0};
Point(64) = {0.028748, 0.731865, 0, 1.0};
Point(65) = {0.033773, 0.731611, 0, 1.0};
Point(66) = {0.038804, 0.731395, 0, 1.0};
Point(67) = {0.043834, 0.731178, 0, 1.0};
Point(68) = {0.048860, 0.730931, 0, 1.0};
Point(69) = {0.053874, 0.730612, 0, 1.0};
Point(70) = {0.056374, 0.730407, 0, 1.0};
Point(71) = {0.058867, 0.730165, 0, 1.0};
Point(72) = {0.061352, 0.729870, 0, 1.0};
Point(73) = {0.063832, 0.729542, 0, 1.0};
Point(74) = {0.066302, 0.729161, 0, 1.0};
Point(75) = {0.068774, 0.728786, 0, 1.0};
Point(76) = {0.071239, 0.728368, 0, 1.0};
Point(77) = {-0.073697, -0.727906, 0, 1.0};
Point(78) = {-0.071319, -0.728856, 0, 1.0};
Point(79) = {-0.068948, -0.729849, 0, 1.0};
Point(80) = {-0.066577, -0.730846, 0, 1.0};
Point(81) = {-0.064203, -0.731822, 0, 1.0};
Point(82) = {-0.061831, -0.732805, 0, 1.0};
Point(83) = {-0.059457, -0.733785, 0, 1.0};
Point(84) = {-0.057084, -0.734768, 0, 1.0};
Point(85) = {-0.054711, -0.735747, 0, 1.0};
Point(86) = {-0.049956, -0.737656, 0, 1.0};
Point(87) = {-0.045189, -0.739486, 0, 1.0};
Point(88) = {-0.040404, -0.741211, 0, 1.0};
Point(89) = {-0.035601, -0.742825, 0, 1.0};
Point(90) = {-0.030775, -0.744295, 0, 1.0};
Point(91) = {-0.025923, -0.745608, 0, 1.0};
Point(92) = {-0.021044, -0.746757, 0, 1.0};
Point(93) = {-0.016139, -0.747746, 0, 1.0};
Point(94) = {-0.013678, -0.748184, 0, 1.0};
Point(95) = {-0.011209, -0.748581, 0, 1.0};
Point(96) = {-0.008733, -0.748931, 0, 1.0};
Point(97) = {-0.006249, -0.749231, 0, 1.0};
Point(98) = {-0.003758, -0.749487, 0, 1.0};
Point(99) = {-0.001260, -0.749701, 0, 1.0};
Point(100) = {0.001246, -0.749869, 0, 1.0};
Point(101) = {0.003762, -0.749973, 0, 1.0};
Point(102) = {0.006290, -0.750000, 0, 1.0};
Point(103) = {0.008833, -0.749942, 0, 1.0};
Point(104) = {0.011391, -0.749787, 0, 1.0};
Point(105) = {0.013971, -0.749499, 0, 1.0};
Point(106) = {0.016579, -0.749036, 0, 1.0};
Point(107) = {0.019230, -0.748313, 0, 1.0};
Point(108) = {0.020579, -0.747812, 0, 1.0};
Point(109) = {0.021951, -0.747164, 0, 1.0};
Point(110) = {0.022650, -0.746757, 0, 1.0};
Point(111) = {0.023366, -0.746253, 0, 1.0};
Point(112) = {0.023807, -0.745878, 0, 1.0};
Point(113) = {0.024268, -0.745381, 0, 1.0};
Point(114) = {0.024598, -0.744908, 0, 1.0};
Point(115) = {0.025000, -0.743997, 0, 1.0};
Point(116) = {0.024850, -0.743363, 0, 1.0};
Point(117) = {0.024649, -0.743043, 0, 1.0};
Point(118) = {0.024332, -0.742656, 0, 1.0};
Point(119) = {0.024005, -0.742333, 0, 1.0};
Point(120) = {0.023445, -0.741883, 0, 1.0};
Point(121) = {0.022871, -0.741521, 0, 1.0};
Point(122) = {0.021704, -0.740912, 0, 1.0};
Point(123) = {0.020520, -0.740404, 0, 1.0};
Point(124) = {0.018128, -0.739539, 0, 1.0};
Point(125) = {0.015717, -0.738793, 0, 1.0};
Point(126) = {0.013293, -0.738120, 0, 1.0};
Point(127) = {0.010860, -0.737507, 0, 1.0};
Point(128) = {0.008419, -0.736945, 0, 1.0};
Point(129) = {0.005970, -0.736427, 0, 1.0};
Point(130) = {0.003517, -0.735939, 0, 1.0};
Point(131) = {0.001059, -0.735477, 0, 1.0};
Point(132) = {-0.001402, -0.735037, 0, 1.0};
Point(133) = {-0.003865, -0.734609, 0, 1.0};
Point(134) = {-0.006330, -0.734192, 0, 1.0};
Point(135) = {-0.008798, -0.733793, 0, 1.0};
Point(136) = {-0.011273, -0.733437, 0, 1.0};
Point(137) = {-0.013756, -0.733126, 0, 1.0};
Point(138) = {-0.018736, -0.732599, 0, 1.0};
Point(139) = {-0.023735, -0.732188, 0, 1.0};
Point(140) = {-0.028748, -0.731865, 0, 1.0};
Point(141) = {-0.033773, -0.731611, 0, 1.0};
Point(142) = {-0.038804, -0.731395, 0, 1.0};
Point(143) = {-0.043834, -0.731178, 0, 1.0};
Point(144) = {-0.048860, -0.730931, 0, 1.0};
Point(145) = {-0.053874, -0.730612, 0, 1.0};
Point(146) = {-0.056374, -0.730407, 0, 1.0};
Point(147) = {-0.058867, -0.730165, 0, 1.0};
Point(148) = {-0.061352, -0.729870, 0, 1.0};
Point(149) = {-0.063832, -0.729542, 0, 1.0};
Point(150) = {-0.066302, -0.729161, 0, 1.0};
Point(151) = {-0.068774, -0.728786, 0, 1.0};
Point(152) = {-0.071239, -0.728368, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
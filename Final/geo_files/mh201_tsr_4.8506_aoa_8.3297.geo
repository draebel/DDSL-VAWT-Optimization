SetFactory("OpenCASCADE");

Point(1) = {0.073945, 0.730422, 0, 1.0};
Point(2) = {0.073619, 0.730566, 0, 1.0};
Point(3) = {0.072703, 0.730997, 0, 1.0};
Point(4) = {0.071295, 0.731670, 0, 1.0};
Point(5) = {0.069425, 0.732501, 0, 1.0};
Point(6) = {0.067080, 0.733455, 0, 1.0};
Point(7) = {0.064277, 0.734536, 0, 1.0};
Point(8) = {0.061065, 0.735736, 0, 1.0};
Point(9) = {0.057492, 0.737032, 0, 1.0};
Point(10) = {0.053609, 0.738399, 0, 1.0};
Point(11) = {0.049470, 0.739807, 0, 1.0};
Point(12) = {0.045129, 0.741222, 0, 1.0};
Point(13) = {0.040638, 0.742599, 0, 1.0};
Point(14) = {0.036026, 0.743886, 0, 1.0};
Point(15) = {0.031304, 0.745064, 0, 1.0};
Point(16) = {0.026510, 0.746137, 0, 1.0};
Point(17) = {0.021697, 0.747096, 0, 1.0};
Point(18) = {0.016907, 0.747929, 0, 1.0};
Point(19) = {0.012189, 0.748630, 0, 1.0};
Point(20) = {0.007591, 0.749193, 0, 1.0};
Point(21) = {0.003157, 0.749611, 0, 1.0};
Point(22) = {-0.001068, 0.749881, 0, 1.0};
Point(23) = {-0.005044, 0.750000, 0, 1.0};
Point(24) = {-0.008732, 0.749968, 0, 1.0};
Point(25) = {-0.012100, 0.749787, 0, 1.0};
Point(26) = {-0.015119, 0.749461, 0, 1.0};
Point(27) = {-0.017765, 0.749001, 0, 1.0};
Point(28) = {-0.020017, 0.748417, 0, 1.0};
Point(29) = {-0.021861, 0.747725, 0, 1.0};
Point(30) = {-0.023289, 0.746949, 0, 1.0};
Point(31) = {-0.024298, 0.746127, 0, 1.0};
Point(32) = {-0.024846, 0.745374, 0, 1.0};
Point(33) = {-0.024943, 0.745139, 0, 1.0};
Point(34) = {-0.024999, 0.744918, 0, 1.0};
Point(35) = {-0.025010, 0.744781, 0, 1.0};
Point(36) = {-0.024996, 0.744656, 0, 1.0};
Point(37) = {-0.024946, 0.744536, 0, 1.0};
Point(38) = {-0.024862, 0.744411, 0, 1.0};
Point(39) = {-0.024688, 0.744214, 0, 1.0};
Point(40) = {-0.024459, 0.744007, 0, 1.0};
Point(41) = {-0.023233, 0.743206, 0, 1.0};
Point(42) = {-0.021558, 0.742406, 0, 1.0};
Point(43) = {-0.019395, 0.741583, 0, 1.0};
Point(44) = {-0.016761, 0.740754, 0, 1.0};
Point(45) = {-0.013682, 0.739928, 0, 1.0};
Point(46) = {-0.010188, 0.739117, 0, 1.0};
Point(47) = {-0.006313, 0.738326, 0, 1.0};
Point(48) = {-0.002097, 0.737559, 0, 1.0};
Point(49) = {0.002413, 0.736819, 0, 1.0};
Point(50) = {0.007159, 0.736114, 0, 1.0};
Point(51) = {0.012091, 0.735457, 0, 1.0};
Point(52) = {0.017160, 0.734857, 0, 1.0};
Point(53) = {0.022307, 0.734315, 0, 1.0};
Point(54) = {0.027470, 0.733846, 0, 1.0};
Point(55) = {0.032599, 0.733473, 0, 1.0};
Point(56) = {0.037662, 0.733213, 0, 1.0};
Point(57) = {0.042646, 0.733075, 0, 1.0};
Point(58) = {0.047559, 0.733013, 0, 1.0};
Point(59) = {0.052344, 0.732936, 0, 1.0};
Point(60) = {0.056897, 0.732790, 0, 1.0};
Point(61) = {0.061110, 0.732550, 0, 1.0};
Point(62) = {0.064881, 0.732214, 0, 1.0};
Point(63) = {0.068108, 0.731788, 0, 1.0};
Point(64) = {0.070683, 0.731305, 0, 1.0};
Point(65) = {0.072516, 0.730851, 0, 1.0};
Point(66) = {0.073592, 0.730534, 0, 1.0};
Point(67) = {-0.073945, -0.730422, 0, 1.0};
Point(68) = {-0.073619, -0.730566, 0, 1.0};
Point(69) = {-0.072703, -0.730997, 0, 1.0};
Point(70) = {-0.071295, -0.731670, 0, 1.0};
Point(71) = {-0.069425, -0.732501, 0, 1.0};
Point(72) = {-0.067080, -0.733455, 0, 1.0};
Point(73) = {-0.064277, -0.734536, 0, 1.0};
Point(74) = {-0.061065, -0.735736, 0, 1.0};
Point(75) = {-0.057492, -0.737032, 0, 1.0};
Point(76) = {-0.053609, -0.738399, 0, 1.0};
Point(77) = {-0.049470, -0.739807, 0, 1.0};
Point(78) = {-0.045129, -0.741222, 0, 1.0};
Point(79) = {-0.040638, -0.742599, 0, 1.0};
Point(80) = {-0.036026, -0.743886, 0, 1.0};
Point(81) = {-0.031304, -0.745064, 0, 1.0};
Point(82) = {-0.026510, -0.746137, 0, 1.0};
Point(83) = {-0.021697, -0.747096, 0, 1.0};
Point(84) = {-0.016907, -0.747929, 0, 1.0};
Point(85) = {-0.012189, -0.748630, 0, 1.0};
Point(86) = {-0.007591, -0.749193, 0, 1.0};
Point(87) = {-0.003157, -0.749611, 0, 1.0};
Point(88) = {0.001068, -0.749881, 0, 1.0};
Point(89) = {0.005044, -0.750000, 0, 1.0};
Point(90) = {0.008732, -0.749968, 0, 1.0};
Point(91) = {0.012100, -0.749787, 0, 1.0};
Point(92) = {0.015119, -0.749461, 0, 1.0};
Point(93) = {0.017765, -0.749001, 0, 1.0};
Point(94) = {0.020017, -0.748417, 0, 1.0};
Point(95) = {0.021861, -0.747725, 0, 1.0};
Point(96) = {0.023289, -0.746949, 0, 1.0};
Point(97) = {0.024298, -0.746127, 0, 1.0};
Point(98) = {0.024846, -0.745374, 0, 1.0};
Point(99) = {0.024943, -0.745139, 0, 1.0};
Point(100) = {0.024999, -0.744918, 0, 1.0};
Point(101) = {0.025010, -0.744781, 0, 1.0};
Point(102) = {0.024996, -0.744656, 0, 1.0};
Point(103) = {0.024946, -0.744536, 0, 1.0};
Point(104) = {0.024862, -0.744411, 0, 1.0};
Point(105) = {0.024688, -0.744214, 0, 1.0};
Point(106) = {0.024459, -0.744007, 0, 1.0};
Point(107) = {0.023233, -0.743206, 0, 1.0};
Point(108) = {0.021558, -0.742406, 0, 1.0};
Point(109) = {0.019395, -0.741583, 0, 1.0};
Point(110) = {0.016761, -0.740754, 0, 1.0};
Point(111) = {0.013682, -0.739928, 0, 1.0};
Point(112) = {0.010188, -0.739117, 0, 1.0};
Point(113) = {0.006313, -0.738326, 0, 1.0};
Point(114) = {0.002097, -0.737559, 0, 1.0};
Point(115) = {-0.002413, -0.736819, 0, 1.0};
Point(116) = {-0.007159, -0.736114, 0, 1.0};
Point(117) = {-0.012091, -0.735457, 0, 1.0};
Point(118) = {-0.017160, -0.734857, 0, 1.0};
Point(119) = {-0.022307, -0.734315, 0, 1.0};
Point(120) = {-0.027470, -0.733846, 0, 1.0};
Point(121) = {-0.032599, -0.733473, 0, 1.0};
Point(122) = {-0.037662, -0.733213, 0, 1.0};
Point(123) = {-0.042646, -0.733075, 0, 1.0};
Point(124) = {-0.047559, -0.733013, 0, 1.0};
Point(125) = {-0.052344, -0.732936, 0, 1.0};
Point(126) = {-0.056897, -0.732790, 0, 1.0};
Point(127) = {-0.061110, -0.732550, 0, 1.0};
Point(128) = {-0.064881, -0.732214, 0, 1.0};
Point(129) = {-0.068108, -0.731788, 0, 1.0};
Point(130) = {-0.070683, -0.731305, 0, 1.0};
Point(131) = {-0.072516, -0.730851, 0, 1.0};
Point(132) = {-0.073592, -0.730534, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
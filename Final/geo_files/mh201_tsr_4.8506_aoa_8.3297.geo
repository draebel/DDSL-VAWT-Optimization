SetFactory("OpenCASCADE");

Point(1) = {0.074207, 0.720632, 0, 1.0};
Point(2) = {0.073718, 0.720849, 0, 1.0};
Point(3) = {0.072344, 0.721496, 0, 1.0};
Point(4) = {0.070231, 0.722505, 0, 1.0};
Point(5) = {0.067427, 0.723752, 0, 1.0};
Point(6) = {0.063908, 0.725182, 0, 1.0};
Point(7) = {0.059704, 0.726805, 0, 1.0};
Point(8) = {0.054886, 0.728604, 0, 1.0};
Point(9) = {0.049527, 0.730548, 0, 1.0};
Point(10) = {0.043703, 0.732599, 0, 1.0};
Point(11) = {0.037494, 0.734711, 0, 1.0};
Point(12) = {0.030982, 0.736834, 0, 1.0};
Point(13) = {0.024246, 0.738898, 0, 1.0};
Point(14) = {0.017328, 0.740828, 0, 1.0};
Point(15) = {0.010245, 0.742596, 0, 1.0};
Point(16) = {0.003055, 0.744206, 0, 1.0};
Point(17) = {-0.004166, 0.745644, 0, 1.0};
Point(18) = {-0.011350, 0.746893, 0, 1.0};
Point(19) = {-0.018427, 0.747945, 0, 1.0};
Point(20) = {-0.025325, 0.748789, 0, 1.0};
Point(21) = {-0.031975, 0.749416, 0, 1.0};
Point(22) = {-0.038313, 0.749821, 0, 1.0};
Point(23) = {-0.044277, 0.750000, 0, 1.0};
Point(24) = {-0.049809, 0.749952, 0, 1.0};
Point(25) = {-0.054861, 0.749680, 0, 1.0};
Point(26) = {-0.059390, 0.749192, 0, 1.0};
Point(27) = {-0.063359, 0.748501, 0, 1.0};
Point(28) = {-0.066737, 0.747625, 0, 1.0};
Point(29) = {-0.069502, 0.746587, 0, 1.0};
Point(30) = {-0.071645, 0.745424, 0, 1.0};
Point(31) = {-0.073157, 0.744190, 0, 1.0};
Point(32) = {-0.073980, 0.743061, 0, 1.0};
Point(33) = {-0.074125, 0.742709, 0, 1.0};
Point(34) = {-0.074209, 0.742377, 0, 1.0};
Point(35) = {-0.074227, 0.742171, 0, 1.0};
Point(36) = {-0.074204, 0.741984, 0, 1.0};
Point(37) = {-0.074130, 0.741805, 0, 1.0};
Point(38) = {-0.074005, 0.741616, 0, 1.0};
Point(39) = {-0.073742, 0.741321, 0, 1.0};
Point(40) = {-0.073399, 0.741010, 0, 1.0};
Point(41) = {-0.071560, 0.739809, 0, 1.0};
Point(42) = {-0.069048, 0.738610, 0, 1.0};
Point(43) = {-0.065803, 0.737375, 0, 1.0};
Point(44) = {-0.061852, 0.736130, 0, 1.0};
Point(45) = {-0.057235, 0.734892, 0, 1.0};
Point(46) = {-0.051994, 0.733675, 0, 1.0};
Point(47) = {-0.046181, 0.732489, 0, 1.0};
Point(48) = {-0.039856, 0.731339, 0, 1.0};
Point(49) = {-0.033092, 0.730228, 0, 1.0};
Point(50) = {-0.025972, 0.729171, 0, 1.0};
Point(51) = {-0.018574, 0.728186, 0, 1.0};
Point(52) = {-0.010971, 0.727286, 0, 1.0};
Point(53) = {-0.003250, 0.726472, 0, 1.0};
Point(54) = {0.004493, 0.725768, 0, 1.0};
Point(55) = {0.012188, 0.725209, 0, 1.0};
Point(56) = {0.019782, 0.724820, 0, 1.0};
Point(57) = {0.027259, 0.724613, 0, 1.0};
Point(58) = {0.034627, 0.724520, 0, 1.0};
Point(59) = {0.041806, 0.724404, 0, 1.0};
Point(60) = {0.048634, 0.724184, 0, 1.0};
Point(61) = {0.054955, 0.723825, 0, 1.0};
Point(62) = {0.060610, 0.723320, 0, 1.0};
Point(63) = {0.065451, 0.722683, 0, 1.0};
Point(64) = {0.069314, 0.721958, 0, 1.0};
Point(65) = {0.072063, 0.721276, 0, 1.0};
Point(66) = {0.073678, 0.720801, 0, 1.0};
Point(67) = {-0.074207, -0.720632, 0, 1.0};
Point(68) = {-0.073718, -0.720849, 0, 1.0};
Point(69) = {-0.072344, -0.721496, 0, 1.0};
Point(70) = {-0.070231, -0.722505, 0, 1.0};
Point(71) = {-0.067427, -0.723752, 0, 1.0};
Point(72) = {-0.063908, -0.725182, 0, 1.0};
Point(73) = {-0.059704, -0.726805, 0, 1.0};
Point(74) = {-0.054886, -0.728604, 0, 1.0};
Point(75) = {-0.049527, -0.730548, 0, 1.0};
Point(76) = {-0.043703, -0.732599, 0, 1.0};
Point(77) = {-0.037494, -0.734711, 0, 1.0};
Point(78) = {-0.030982, -0.736834, 0, 1.0};
Point(79) = {-0.024246, -0.738898, 0, 1.0};
Point(80) = {-0.017328, -0.740828, 0, 1.0};
Point(81) = {-0.010245, -0.742596, 0, 1.0};
Point(82) = {-0.003055, -0.744206, 0, 1.0};
Point(83) = {0.004166, -0.745644, 0, 1.0};
Point(84) = {0.011350, -0.746893, 0, 1.0};
Point(85) = {0.018427, -0.747945, 0, 1.0};
Point(86) = {0.025325, -0.748789, 0, 1.0};
Point(87) = {0.031975, -0.749416, 0, 1.0};
Point(88) = {0.038313, -0.749821, 0, 1.0};
Point(89) = {0.044277, -0.750000, 0, 1.0};
Point(90) = {0.049809, -0.749952, 0, 1.0};
Point(91) = {0.054861, -0.749680, 0, 1.0};
Point(92) = {0.059390, -0.749192, 0, 1.0};
Point(93) = {0.063359, -0.748501, 0, 1.0};
Point(94) = {0.066737, -0.747625, 0, 1.0};
Point(95) = {0.069502, -0.746587, 0, 1.0};
Point(96) = {0.071645, -0.745424, 0, 1.0};
Point(97) = {0.073157, -0.744190, 0, 1.0};
Point(98) = {0.073980, -0.743061, 0, 1.0};
Point(99) = {0.074125, -0.742709, 0, 1.0};
Point(100) = {0.074209, -0.742377, 0, 1.0};
Point(101) = {0.074227, -0.742171, 0, 1.0};
Point(102) = {0.074204, -0.741984, 0, 1.0};
Point(103) = {0.074130, -0.741805, 0, 1.0};
Point(104) = {0.074005, -0.741616, 0, 1.0};
Point(105) = {0.073742, -0.741321, 0, 1.0};
Point(106) = {0.073399, -0.741010, 0, 1.0};
Point(107) = {0.071560, -0.739809, 0, 1.0};
Point(108) = {0.069048, -0.738610, 0, 1.0};
Point(109) = {0.065803, -0.737375, 0, 1.0};
Point(110) = {0.061852, -0.736130, 0, 1.0};
Point(111) = {0.057235, -0.734892, 0, 1.0};
Point(112) = {0.051994, -0.733675, 0, 1.0};
Point(113) = {0.046181, -0.732489, 0, 1.0};
Point(114) = {0.039856, -0.731339, 0, 1.0};
Point(115) = {0.033092, -0.730228, 0, 1.0};
Point(116) = {0.025972, -0.729171, 0, 1.0};
Point(117) = {0.018574, -0.728186, 0, 1.0};
Point(118) = {0.010971, -0.727286, 0, 1.0};
Point(119) = {0.003250, -0.726472, 0, 1.0};
Point(120) = {-0.004493, -0.725768, 0, 1.0};
Point(121) = {-0.012188, -0.725209, 0, 1.0};
Point(122) = {-0.019782, -0.724820, 0, 1.0};
Point(123) = {-0.027259, -0.724613, 0, 1.0};
Point(124) = {-0.034627, -0.724520, 0, 1.0};
Point(125) = {-0.041806, -0.724404, 0, 1.0};
Point(126) = {-0.048634, -0.724184, 0, 1.0};
Point(127) = {-0.054955, -0.723825, 0, 1.0};
Point(128) = {-0.060610, -0.723320, 0, 1.0};
Point(129) = {-0.065451, -0.722683, 0, 1.0};
Point(130) = {-0.069314, -0.721958, 0, 1.0};
Point(131) = {-0.072063, -0.721276, 0, 1.0};
Point(132) = {-0.073678, -0.720801, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
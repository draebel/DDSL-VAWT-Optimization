SetFactory("OpenCASCADE");

Point(1) = {0.074198, 0.723277, 0, 1.0};
Point(2) = {0.072230, 0.723760, 0, 1.0};
Point(3) = {0.069219, 0.724568, 0, 1.0};
Point(4) = {0.065460, 0.725612, 0, 1.0};
Point(5) = {0.060950, 0.726865, 0, 1.0};
Point(6) = {0.055689, 0.728335, 0, 1.0};
Point(7) = {0.050426, 0.729791, 0, 1.0};
Point(8) = {0.044404, 0.731408, 0, 1.0};
Point(9) = {0.038380, 0.733012, 0, 1.0};
Point(10) = {0.032352, 0.734592, 0, 1.0};
Point(11) = {0.026315, 0.736112, 0, 1.0};
Point(12) = {0.018754, 0.737920, 0, 1.0};
Point(13) = {0.011174, 0.739597, 0, 1.0};
Point(14) = {0.003578, 0.741175, 0, 1.0};
Point(15) = {-0.004036, 0.742636, 0, 1.0};
Point(16) = {-0.011660, 0.744034, 0, 1.0};
Point(17) = {-0.019300, 0.745326, 0, 1.0};
Point(18) = {-0.026953, 0.746533, 0, 1.0};
Point(19) = {-0.034619, 0.747660, 0, 1.0};
Point(20) = {-0.042299, 0.748692, 0, 1.0};
Point(21) = {-0.050008, 0.749533, 0, 1.0};
Point(22) = {-0.055594, 0.749916, 0, 1.0};
Point(23) = {-0.059657, 0.750000, 0, 1.0};
Point(24) = {-0.062730, 0.749898, 0, 1.0};
Point(25) = {-0.065119, 0.749659, 0, 1.0};
Point(26) = {-0.067030, 0.749362, 0, 1.0};
Point(27) = {-0.068575, 0.749053, 0, 1.0};
Point(28) = {-0.069811, 0.748714, 0, 1.0};
Point(29) = {-0.070787, 0.748385, 0, 1.0};
Point(30) = {-0.071531, 0.748085, 0, 1.0};
Point(31) = {-0.072055, 0.747836, 0, 1.0};
Point(32) = {-0.072406, 0.747646, 0, 1.0};
Point(33) = {-0.072752, 0.747433, 0, 1.0};
Point(34) = {-0.073069, 0.747206, 0, 1.0};
Point(35) = {-0.073395, 0.746928, 0, 1.0};
Point(36) = {-0.073667, 0.746633, 0, 1.0};
Point(37) = {-0.073900, 0.746291, 0, 1.0};
Point(38) = {-0.074067, 0.745904, 0, 1.0};
Point(39) = {-0.074124, 0.745652, 0, 1.0};
Point(40) = {-0.074093, 0.745294, 0, 1.0};
Point(41) = {-0.073918, 0.744956, 0, 1.0};
Point(42) = {-0.073655, 0.744626, 0, 1.0};
Point(43) = {-0.073353, 0.744347, 0, 1.0};
Point(44) = {-0.073016, 0.744093, 0, 1.0};
Point(45) = {-0.072673, 0.743882, 0, 1.0};
Point(46) = {-0.072142, 0.743610, 0, 1.0};
Point(47) = {-0.071417, 0.743329, 0, 1.0};
Point(48) = {-0.070434, 0.742994, 0, 1.0};
Point(49) = {-0.069213, 0.742629, 0, 1.0};
Point(50) = {-0.067681, 0.742202, 0, 1.0};
Point(51) = {-0.065812, 0.741702, 0, 1.0};
Point(52) = {-0.063465, 0.741115, 0, 1.0};
Point(53) = {-0.060444, 0.740423, 0, 1.0};
Point(54) = {-0.056484, 0.739565, 0, 1.0};
Point(55) = {-0.051696, 0.738588, 0, 1.0};
Point(56) = {-0.044082, 0.737124, 0, 1.0};
Point(57) = {-0.036457, 0.735737, 0, 1.0};
Point(58) = {-0.028821, 0.734419, 0, 1.0};
Point(59) = {-0.021178, 0.733142, 0, 1.0};
Point(60) = {-0.013527, 0.731920, 0, 1.0};
Point(61) = {-0.005868, 0.730754, 0, 1.0};
Point(62) = {0.001797, 0.729621, 0, 1.0};
Point(63) = {0.009468, 0.728531, 0, 1.0};
Point(64) = {0.017145, 0.727479, 0, 1.0};
Point(65) = {0.024830, 0.726480, 0, 1.0};
Point(66) = {0.030984, 0.725719, 0, 1.0};
Point(67) = {0.037144, 0.724995, 0, 1.0};
Point(68) = {0.043311, 0.724315, 0, 1.0};
Point(69) = {0.049483, 0.723673, 0, 1.0};
Point(70) = {0.054890, 0.723149, 0, 1.0};
Point(71) = {0.060302, 0.722663, 0, 1.0};
Point(72) = {0.064955, 0.722332, 0, 1.0};
Point(73) = {0.068836, 0.722084, 0, 1.0};
Point(74) = {0.071943, 0.721897, 0, 1.0};
Point(75) = {0.073974, 0.721823, 0, 1.0};
Point(76) = {-0.074198, -0.723277, 0, 1.0};
Point(77) = {-0.072230, -0.723760, 0, 1.0};
Point(78) = {-0.069219, -0.724568, 0, 1.0};
Point(79) = {-0.065460, -0.725612, 0, 1.0};
Point(80) = {-0.060950, -0.726865, 0, 1.0};
Point(81) = {-0.055689, -0.728335, 0, 1.0};
Point(82) = {-0.050426, -0.729791, 0, 1.0};
Point(83) = {-0.044404, -0.731408, 0, 1.0};
Point(84) = {-0.038380, -0.733012, 0, 1.0};
Point(85) = {-0.032352, -0.734592, 0, 1.0};
Point(86) = {-0.026315, -0.736112, 0, 1.0};
Point(87) = {-0.018754, -0.737920, 0, 1.0};
Point(88) = {-0.011174, -0.739597, 0, 1.0};
Point(89) = {-0.003578, -0.741175, 0, 1.0};
Point(90) = {0.004036, -0.742636, 0, 1.0};
Point(91) = {0.011660, -0.744034, 0, 1.0};
Point(92) = {0.019300, -0.745326, 0, 1.0};
Point(93) = {0.026953, -0.746533, 0, 1.0};
Point(94) = {0.034619, -0.747660, 0, 1.0};
Point(95) = {0.042299, -0.748692, 0, 1.0};
Point(96) = {0.050008, -0.749533, 0, 1.0};
Point(97) = {0.055594, -0.749916, 0, 1.0};
Point(98) = {0.059657, -0.750000, 0, 1.0};
Point(99) = {0.062730, -0.749898, 0, 1.0};
Point(100) = {0.065119, -0.749659, 0, 1.0};
Point(101) = {0.067030, -0.749362, 0, 1.0};
Point(102) = {0.068575, -0.749053, 0, 1.0};
Point(103) = {0.069811, -0.748714, 0, 1.0};
Point(104) = {0.070787, -0.748385, 0, 1.0};
Point(105) = {0.071531, -0.748085, 0, 1.0};
Point(106) = {0.072055, -0.747836, 0, 1.0};
Point(107) = {0.072406, -0.747646, 0, 1.0};
Point(108) = {0.072752, -0.747433, 0, 1.0};
Point(109) = {0.073069, -0.747206, 0, 1.0};
Point(110) = {0.073395, -0.746928, 0, 1.0};
Point(111) = {0.073667, -0.746633, 0, 1.0};
Point(112) = {0.073900, -0.746291, 0, 1.0};
Point(113) = {0.074067, -0.745904, 0, 1.0};
Point(114) = {0.074124, -0.745652, 0, 1.0};
Point(115) = {0.074093, -0.745294, 0, 1.0};
Point(116) = {0.073918, -0.744956, 0, 1.0};
Point(117) = {0.073655, -0.744626, 0, 1.0};
Point(118) = {0.073353, -0.744347, 0, 1.0};
Point(119) = {0.073016, -0.744093, 0, 1.0};
Point(120) = {0.072673, -0.743882, 0, 1.0};
Point(121) = {0.072142, -0.743610, 0, 1.0};
Point(122) = {0.071417, -0.743329, 0, 1.0};
Point(123) = {0.070434, -0.742994, 0, 1.0};
Point(124) = {0.069213, -0.742629, 0, 1.0};
Point(125) = {0.067681, -0.742202, 0, 1.0};
Point(126) = {0.065812, -0.741702, 0, 1.0};
Point(127) = {0.063465, -0.741115, 0, 1.0};
Point(128) = {0.060444, -0.740423, 0, 1.0};
Point(129) = {0.056484, -0.739565, 0, 1.0};
Point(130) = {0.051696, -0.738588, 0, 1.0};
Point(131) = {0.044082, -0.737124, 0, 1.0};
Point(132) = {0.036457, -0.735737, 0, 1.0};
Point(133) = {0.028821, -0.734419, 0, 1.0};
Point(134) = {0.021178, -0.733142, 0, 1.0};
Point(135) = {0.013527, -0.731920, 0, 1.0};
Point(136) = {0.005868, -0.730754, 0, 1.0};
Point(137) = {-0.001797, -0.729621, 0, 1.0};
Point(138) = {-0.009468, -0.728531, 0, 1.0};
Point(139) = {-0.017145, -0.727479, 0, 1.0};
Point(140) = {-0.024830, -0.726480, 0, 1.0};
Point(141) = {-0.030984, -0.725719, 0, 1.0};
Point(142) = {-0.037144, -0.724995, 0, 1.0};
Point(143) = {-0.043311, -0.724315, 0, 1.0};
Point(144) = {-0.049483, -0.723673, 0, 1.0};
Point(145) = {-0.054890, -0.723149, 0, 1.0};
Point(146) = {-0.060302, -0.722663, 0, 1.0};
Point(147) = {-0.064955, -0.722332, 0, 1.0};
Point(148) = {-0.068836, -0.722084, 0, 1.0};
Point(149) = {-0.071943, -0.721897, 0, 1.0};
Point(150) = {-0.073974, -0.721823, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:58};
Spline(3) = {58:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:94};
Spline(6) = {94:133};
Spline(7) = {133:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {36.00000000, 15.00000000, 0, 1.0};
Point(154) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
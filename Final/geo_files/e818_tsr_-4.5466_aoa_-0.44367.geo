SetFactory("OpenCASCADE");

Point(1) = {0.074978, 0.742618, 0, 1.0};
Point(2) = {0.073869, 0.742844, 0, 1.0};
Point(3) = {0.069371, 0.743778, 0, 1.0};
Point(4) = {0.064249, 0.744791, 0, 1.0};
Point(5) = {0.058587, 0.745842, 0, 1.0};
Point(6) = {0.052476, 0.746887, 0, 1.0};
Point(7) = {0.046003, 0.747848, 0, 1.0};
Point(8) = {0.039201, 0.748635, 0, 1.0};
Point(9) = {0.032057, 0.749215, 0, 1.0};
Point(10) = {0.024601, 0.749627, 0, 1.0};
Point(11) = {0.016917, 0.749886, 0, 1.0};
Point(12) = {0.009084, 0.750000, 0, 1.0};
Point(13) = {0.001183, 0.749968, 0, 1.0};
Point(14) = {-0.006702, 0.749799, 0, 1.0};
Point(15) = {-0.014489, 0.749494, 0, 1.0};
Point(16) = {-0.022100, 0.749063, 0, 1.0};
Point(17) = {-0.029455, 0.748510, 0, 1.0};
Point(18) = {-0.036477, 0.747849, 0, 1.0};
Point(19) = {-0.043096, 0.747089, 0, 1.0};
Point(20) = {-0.049242, 0.746245, 0, 1.0};
Point(21) = {-0.054851, 0.745330, 0, 1.0};
Point(22) = {-0.059869, 0.744363, 0, 1.0};
Point(23) = {-0.064241, 0.743361, 0, 1.0};
Point(24) = {-0.067927, 0.742350, 0, 1.0};
Point(25) = {-0.070880, 0.741353, 0, 1.0};
Point(26) = {-0.073074, 0.740402, 0, 1.0};
Point(27) = {-0.073874, 0.739959, 0, 1.0};
Point(28) = {-0.074556, 0.739455, 0, 1.0};
Point(29) = {-0.074848, 0.739158, 0, 1.0};
Point(30) = {-0.074973, 0.738965, 0, 1.0};
Point(31) = {-0.074998, 0.738855, 0, 1.0};
Point(32) = {-0.074967, 0.738746, 0, 1.0};
Point(33) = {-0.074831, 0.738562, 0, 1.0};
Point(34) = {-0.074523, 0.738283, 0, 1.0};
Point(35) = {-0.073816, 0.737821, 0, 1.0};
Point(36) = {-0.072992, 0.737426, 0, 1.0};
Point(37) = {-0.070770, 0.736614, 0, 1.0};
Point(38) = {-0.067809, 0.735813, 0, 1.0};
Point(39) = {-0.064148, 0.735061, 0, 1.0};
Point(40) = {-0.059838, 0.734392, 0, 1.0};
Point(41) = {-0.054927, 0.733851, 0, 1.0};
Point(42) = {-0.049453, 0.733492, 0, 1.0};
Point(43) = {-0.043420, 0.733347, 0, 1.0};
Point(44) = {-0.036855, 0.733397, 0, 1.0};
Point(45) = {-0.029805, 0.733638, 0, 1.0};
Point(46) = {-0.022330, 0.734051, 0, 1.0};
Point(47) = {-0.014487, 0.734619, 0, 1.0};
Point(48) = {-0.006347, 0.735313, 0, 1.0};
Point(49) = {0.002017, 0.736108, 0, 1.0};
Point(50) = {0.010522, 0.736959, 0, 1.0};
Point(51) = {0.019077, 0.737832, 0, 1.0};
Point(52) = {0.027583, 0.738678, 0, 1.0};
Point(53) = {0.035938, 0.739458, 0, 1.0};
Point(54) = {0.044024, 0.740132, 0, 1.0};
Point(55) = {0.051720, 0.740665, 0, 1.0};
Point(56) = {0.058901, 0.741032, 0, 1.0};
Point(57) = {0.065443, 0.741220, 0, 1.0};
Point(58) = {0.071222, 0.741228, 0, 1.0};
Point(59) = {0.074989, 0.741126, 0, 1.0};
Point(60) = {-0.074978, -0.742618, 0, 1.0};
Point(61) = {-0.073869, -0.742844, 0, 1.0};
Point(62) = {-0.069371, -0.743778, 0, 1.0};
Point(63) = {-0.064249, -0.744791, 0, 1.0};
Point(64) = {-0.058587, -0.745842, 0, 1.0};
Point(65) = {-0.052476, -0.746887, 0, 1.0};
Point(66) = {-0.046003, -0.747848, 0, 1.0};
Point(67) = {-0.039201, -0.748635, 0, 1.0};
Point(68) = {-0.032057, -0.749215, 0, 1.0};
Point(69) = {-0.024601, -0.749627, 0, 1.0};
Point(70) = {-0.016917, -0.749886, 0, 1.0};
Point(71) = {-0.009084, -0.750000, 0, 1.0};
Point(72) = {-0.001183, -0.749968, 0, 1.0};
Point(73) = {0.006702, -0.749799, 0, 1.0};
Point(74) = {0.014489, -0.749494, 0, 1.0};
Point(75) = {0.022100, -0.749063, 0, 1.0};
Point(76) = {0.029455, -0.748510, 0, 1.0};
Point(77) = {0.036477, -0.747849, 0, 1.0};
Point(78) = {0.043096, -0.747089, 0, 1.0};
Point(79) = {0.049242, -0.746245, 0, 1.0};
Point(80) = {0.054851, -0.745330, 0, 1.0};
Point(81) = {0.059869, -0.744363, 0, 1.0};
Point(82) = {0.064241, -0.743361, 0, 1.0};
Point(83) = {0.067927, -0.742350, 0, 1.0};
Point(84) = {0.070880, -0.741353, 0, 1.0};
Point(85) = {0.073074, -0.740402, 0, 1.0};
Point(86) = {0.073874, -0.739959, 0, 1.0};
Point(87) = {0.074556, -0.739455, 0, 1.0};
Point(88) = {0.074848, -0.739158, 0, 1.0};
Point(89) = {0.074973, -0.738965, 0, 1.0};
Point(90) = {0.074998, -0.738855, 0, 1.0};
Point(91) = {0.074967, -0.738746, 0, 1.0};
Point(92) = {0.074831, -0.738562, 0, 1.0};
Point(93) = {0.074523, -0.738283, 0, 1.0};
Point(94) = {0.073816, -0.737821, 0, 1.0};
Point(95) = {0.072992, -0.737426, 0, 1.0};
Point(96) = {0.070770, -0.736614, 0, 1.0};
Point(97) = {0.067809, -0.735813, 0, 1.0};
Point(98) = {0.064148, -0.735061, 0, 1.0};
Point(99) = {0.059838, -0.734392, 0, 1.0};
Point(100) = {0.054927, -0.733851, 0, 1.0};
Point(101) = {0.049453, -0.733492, 0, 1.0};
Point(102) = {0.043420, -0.733347, 0, 1.0};
Point(103) = {0.036855, -0.733397, 0, 1.0};
Point(104) = {0.029805, -0.733638, 0, 1.0};
Point(105) = {0.022330, -0.734051, 0, 1.0};
Point(106) = {0.014487, -0.734619, 0, 1.0};
Point(107) = {0.006347, -0.735313, 0, 1.0};
Point(108) = {-0.002017, -0.736108, 0, 1.0};
Point(109) = {-0.010522, -0.736959, 0, 1.0};
Point(110) = {-0.019077, -0.737832, 0, 1.0};
Point(111) = {-0.027583, -0.738678, 0, 1.0};
Point(112) = {-0.035938, -0.739458, 0, 1.0};
Point(113) = {-0.044024, -0.740132, 0, 1.0};
Point(114) = {-0.051720, -0.740665, 0, 1.0};
Point(115) = {-0.058901, -0.741032, 0, 1.0};
Point(116) = {-0.065443, -0.741220, 0, 1.0};
Point(117) = {-0.071222, -0.741228, 0, 1.0};
Point(118) = {-0.074989, -0.741126, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:45};
Spline(3) = {45:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:77};
Spline(6) = {77:104};
Spline(7) = {104:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {36.00000000, 15.00000000, 0, 1.0};
Point(122) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
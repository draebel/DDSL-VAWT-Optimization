SetFactory("OpenCASCADE");

Point(1) = {0.074657, 0.745375, 0, 1.0};
Point(2) = {0.071322, 0.745446, 0, 1.0};
Point(3) = {0.066835, 0.745521, 0, 1.0};
Point(4) = {0.061496, 0.745629, 0, 1.0};
Point(5) = {0.055400, 0.745812, 0, 1.0};
Point(6) = {0.048652, 0.746085, 0, 1.0};
Point(7) = {0.041366, 0.746452, 0, 1.0};
Point(8) = {0.033668, 0.746908, 0, 1.0};
Point(9) = {0.025677, 0.747431, 0, 1.0};
Point(10) = {0.017518, 0.747998, 0, 1.0};
Point(11) = {0.009308, 0.748566, 0, 1.0};
Point(12) = {0.001157, 0.749097, 0, 1.0};
Point(13) = {-0.006835, 0.749542, 0, 1.0};
Point(14) = {-0.014574, 0.749859, 0, 1.0};
Point(15) = {-0.021984, 0.750000, 0, 1.0};
Point(16) = {-0.028996, 0.749921, 0, 1.0};
Point(17) = {-0.035550, 0.749575, 0, 1.0};
Point(18) = {-0.041631, 0.748905, 0, 1.0};
Point(19) = {-0.047264, 0.747914, 0, 1.0};
Point(20) = {-0.052442, 0.746645, 0, 1.0};
Point(21) = {-0.057148, 0.745144, 0, 1.0};
Point(22) = {-0.061354, 0.743466, 0, 1.0};
Point(23) = {-0.065028, 0.741661, 0, 1.0};
Point(24) = {-0.068144, 0.739778, 0, 1.0};
Point(25) = {-0.070675, 0.737872, 0, 1.0};
Point(26) = {-0.072605, 0.735996, 0, 1.0};
Point(27) = {-0.073919, 0.734216, 0, 1.0};
Point(28) = {-0.074612, 0.732615, 0, 1.0};
Point(29) = {-0.074690, 0.732218, 0, 1.0};
Point(30) = {-0.074722, 0.731822, 0, 1.0};
Point(31) = {-0.074708, 0.731577, 0, 1.0};
Point(32) = {-0.074670, 0.731350, 0, 1.0};
Point(33) = {-0.074640, 0.731245, 0, 1.0};
Point(34) = {-0.074602, 0.731147, 0, 1.0};
Point(35) = {-0.074553, 0.731059, 0, 1.0};
Point(36) = {-0.074489, 0.730978, 0, 1.0};
Point(37) = {-0.074410, 0.730897, 0, 1.0};
Point(38) = {-0.074319, 0.730821, 0, 1.0};
Point(39) = {-0.074100, 0.730671, 0, 1.0};
Point(40) = {-0.073839, 0.730525, 0, 1.0};
Point(41) = {-0.073373, 0.730317, 0, 1.0};
Point(42) = {-0.071921, 0.729848, 0, 1.0};
Point(43) = {-0.069159, 0.729312, 0, 1.0};
Point(44) = {-0.065560, 0.728911, 0, 1.0};
Point(45) = {-0.061167, 0.728642, 0, 1.0};
Point(46) = {-0.056021, 0.728484, 0, 1.0};
Point(47) = {-0.050194, 0.728410, 0, 1.0};
Point(48) = {-0.043780, 0.728405, 0, 1.0};
Point(49) = {-0.036875, 0.728473, 0, 1.0};
Point(50) = {-0.029573, 0.728625, 0, 1.0};
Point(51) = {-0.021964, 0.728874, 0, 1.0};
Point(52) = {-0.014128, 0.729227, 0, 1.0};
Point(53) = {-0.006150, 0.729687, 0, 1.0};
Point(54) = {0.001881, 0.730256, 0, 1.0};
Point(55) = {0.009880, 0.730930, 0, 1.0};
Point(56) = {0.017760, 0.731705, 0, 1.0};
Point(57) = {0.025433, 0.732577, 0, 1.0};
Point(58) = {0.032819, 0.733542, 0, 1.0};
Point(59) = {0.039831, 0.734597, 0, 1.0};
Point(60) = {0.046395, 0.735739, 0, 1.0};
Point(61) = {0.052427, 0.736994, 0, 1.0};
Point(62) = {0.057922, 0.738425, 0, 1.0};
Point(63) = {0.062971, 0.739989, 0, 1.0};
Point(64) = {0.067581, 0.741520, 0, 1.0};
Point(65) = {0.071651, 0.742873, 0, 1.0};
Point(66) = {0.074788, 0.743896, 0, 1.0};
Point(67) = {-0.074657, -0.745375, 0, 1.0};
Point(68) = {-0.071322, -0.745446, 0, 1.0};
Point(69) = {-0.066835, -0.745521, 0, 1.0};
Point(70) = {-0.061496, -0.745629, 0, 1.0};
Point(71) = {-0.055400, -0.745812, 0, 1.0};
Point(72) = {-0.048652, -0.746085, 0, 1.0};
Point(73) = {-0.041366, -0.746452, 0, 1.0};
Point(74) = {-0.033668, -0.746908, 0, 1.0};
Point(75) = {-0.025677, -0.747431, 0, 1.0};
Point(76) = {-0.017518, -0.747998, 0, 1.0};
Point(77) = {-0.009308, -0.748566, 0, 1.0};
Point(78) = {-0.001157, -0.749097, 0, 1.0};
Point(79) = {0.006835, -0.749542, 0, 1.0};
Point(80) = {0.014574, -0.749859, 0, 1.0};
Point(81) = {0.021984, -0.750000, 0, 1.0};
Point(82) = {0.028996, -0.749921, 0, 1.0};
Point(83) = {0.035550, -0.749575, 0, 1.0};
Point(84) = {0.041631, -0.748905, 0, 1.0};
Point(85) = {0.047264, -0.747914, 0, 1.0};
Point(86) = {0.052442, -0.746645, 0, 1.0};
Point(87) = {0.057148, -0.745144, 0, 1.0};
Point(88) = {0.061354, -0.743466, 0, 1.0};
Point(89) = {0.065028, -0.741661, 0, 1.0};
Point(90) = {0.068144, -0.739778, 0, 1.0};
Point(91) = {0.070675, -0.737872, 0, 1.0};
Point(92) = {0.072605, -0.735996, 0, 1.0};
Point(93) = {0.073919, -0.734216, 0, 1.0};
Point(94) = {0.074612, -0.732615, 0, 1.0};
Point(95) = {0.074690, -0.732218, 0, 1.0};
Point(96) = {0.074722, -0.731822, 0, 1.0};
Point(97) = {0.074708, -0.731577, 0, 1.0};
Point(98) = {0.074670, -0.731350, 0, 1.0};
Point(99) = {0.074640, -0.731245, 0, 1.0};
Point(100) = {0.074602, -0.731147, 0, 1.0};
Point(101) = {0.074553, -0.731059, 0, 1.0};
Point(102) = {0.074489, -0.730978, 0, 1.0};
Point(103) = {0.074410, -0.730897, 0, 1.0};
Point(104) = {0.074319, -0.730821, 0, 1.0};
Point(105) = {0.074100, -0.730671, 0, 1.0};
Point(106) = {0.073839, -0.730525, 0, 1.0};
Point(107) = {0.073373, -0.730317, 0, 1.0};
Point(108) = {0.071921, -0.729848, 0, 1.0};
Point(109) = {0.069159, -0.729312, 0, 1.0};
Point(110) = {0.065560, -0.728911, 0, 1.0};
Point(111) = {0.061167, -0.728642, 0, 1.0};
Point(112) = {0.056021, -0.728484, 0, 1.0};
Point(113) = {0.050194, -0.728410, 0, 1.0};
Point(114) = {0.043780, -0.728405, 0, 1.0};
Point(115) = {0.036875, -0.728473, 0, 1.0};
Point(116) = {0.029573, -0.728625, 0, 1.0};
Point(117) = {0.021964, -0.728874, 0, 1.0};
Point(118) = {0.014128, -0.729227, 0, 1.0};
Point(119) = {0.006150, -0.729687, 0, 1.0};
Point(120) = {-0.001881, -0.730256, 0, 1.0};
Point(121) = {-0.009880, -0.730930, 0, 1.0};
Point(122) = {-0.017760, -0.731705, 0, 1.0};
Point(123) = {-0.025433, -0.732577, 0, 1.0};
Point(124) = {-0.032819, -0.733542, 0, 1.0};
Point(125) = {-0.039831, -0.734597, 0, 1.0};
Point(126) = {-0.046395, -0.735739, 0, 1.0};
Point(127) = {-0.052427, -0.736994, 0, 1.0};
Point(128) = {-0.057922, -0.738425, 0, 1.0};
Point(129) = {-0.062971, -0.739989, 0, 1.0};
Point(130) = {-0.067581, -0.741520, 0, 1.0};
Point(131) = {-0.071651, -0.742873, 0, 1.0};
Point(132) = {-0.074788, -0.743896, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:83};
Spline(6) = {83:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
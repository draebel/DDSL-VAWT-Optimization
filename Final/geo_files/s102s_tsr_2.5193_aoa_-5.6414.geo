SetFactory("OpenCASCADE");

Point(1) = {0.074461, 0.744617, 0, 1.0};
Point(2) = {0.074026, 0.744654, 0, 1.0};
Point(3) = {0.069849, 0.745264, 0, 1.0};
Point(4) = {0.064986, 0.745874, 0, 1.0};
Point(5) = {0.059444, 0.746466, 0, 1.0};
Point(6) = {0.053287, 0.747069, 0, 1.0};
Point(7) = {0.046616, 0.747688, 0, 1.0};
Point(8) = {0.039540, 0.748305, 0, 1.0};
Point(9) = {0.032172, 0.748892, 0, 1.0};
Point(10) = {0.024620, 0.749410, 0, 1.0};
Point(11) = {0.016992, 0.749807, 0, 1.0};
Point(12) = {0.009396, 0.750000, 0, 1.0};
Point(13) = {0.001855, 0.749878, 0, 1.0};
Point(14) = {-0.005686, 0.749420, 0, 1.0};
Point(15) = {-0.013210, 0.748710, 0, 1.0};
Point(16) = {-0.020636, 0.747809, 0, 1.0};
Point(17) = {-0.027877, 0.746749, 0, 1.0};
Point(18) = {-0.034847, 0.745563, 0, 1.0};
Point(19) = {-0.041463, 0.744275, 0, 1.0};
Point(20) = {-0.047642, 0.742914, 0, 1.0};
Point(21) = {-0.053299, 0.741497, 0, 1.0};
Point(22) = {-0.058352, 0.740046, 0, 1.0};
Point(23) = {-0.062702, 0.738546, 0, 1.0};
Point(24) = {-0.066312, 0.736928, 0, 1.0};
Point(25) = {-0.069242, 0.735172, 0, 1.0};
Point(26) = {-0.071542, 0.733350, 0, 1.0};
Point(27) = {-0.073209, 0.731550, 0, 1.0};
Point(28) = {-0.074246, 0.729852, 0, 1.0};
Point(29) = {-0.074639, 0.728379, 0, 1.0};
Point(30) = {-0.074637, 0.728097, 0, 1.0};
Point(31) = {-0.074595, 0.727806, 0, 1.0};
Point(32) = {-0.074500, 0.727561, 0, 1.0};
Point(33) = {-0.074325, 0.727346, 0, 1.0};
Point(34) = {-0.074068, 0.727140, 0, 1.0};
Point(35) = {-0.072869, 0.726522, 0, 1.0};
Point(36) = {-0.070526, 0.725810, 0, 1.0};
Point(37) = {-0.067340, 0.725201, 0, 1.0};
Point(38) = {-0.063371, 0.724692, 0, 1.0};
Point(39) = {-0.058680, 0.724290, 0, 1.0};
Point(40) = {-0.053341, 0.723995, 0, 1.0};
Point(41) = {-0.047424, 0.723817, 0, 1.0};
Point(42) = {-0.041013, 0.723762, 0, 1.0};
Point(43) = {-0.034193, 0.723842, 0, 1.0};
Point(44) = {-0.027053, 0.724070, 0, 1.0};
Point(45) = {-0.019686, 0.724463, 0, 1.0};
Point(46) = {-0.012187, 0.725048, 0, 1.0};
Point(47) = {-0.004653, 0.725856, 0, 1.0};
Point(48) = {0.002807, 0.726975, 0, 1.0};
Point(49) = {0.010231, 0.728564, 0, 1.0};
Point(50) = {0.017824, 0.730587, 0, 1.0};
Point(51) = {0.025625, 0.732784, 0, 1.0};
Point(52) = {0.033496, 0.734958, 0, 1.0};
Point(53) = {0.041279, 0.736994, 0, 1.0};
Point(54) = {0.048814, 0.738803, 0, 1.0};
Point(55) = {0.055933, 0.740335, 0, 1.0};
Point(56) = {0.062483, 0.741551, 0, 1.0};
Point(57) = {0.068308, 0.742441, 0, 1.0};
Point(58) = {0.073252, 0.743021, 0, 1.0};
Point(59) = {0.074607, 0.743148, 0, 1.0};
Point(60) = {-0.074461, -0.744617, 0, 1.0};
Point(61) = {-0.074026, -0.744654, 0, 1.0};
Point(62) = {-0.069849, -0.745264, 0, 1.0};
Point(63) = {-0.064986, -0.745874, 0, 1.0};
Point(64) = {-0.059444, -0.746466, 0, 1.0};
Point(65) = {-0.053287, -0.747069, 0, 1.0};
Point(66) = {-0.046616, -0.747688, 0, 1.0};
Point(67) = {-0.039540, -0.748305, 0, 1.0};
Point(68) = {-0.032172, -0.748892, 0, 1.0};
Point(69) = {-0.024620, -0.749410, 0, 1.0};
Point(70) = {-0.016992, -0.749807, 0, 1.0};
Point(71) = {-0.009396, -0.750000, 0, 1.0};
Point(72) = {-0.001855, -0.749878, 0, 1.0};
Point(73) = {0.005686, -0.749420, 0, 1.0};
Point(74) = {0.013210, -0.748710, 0, 1.0};
Point(75) = {0.020636, -0.747809, 0, 1.0};
Point(76) = {0.027877, -0.746749, 0, 1.0};
Point(77) = {0.034847, -0.745563, 0, 1.0};
Point(78) = {0.041463, -0.744275, 0, 1.0};
Point(79) = {0.047642, -0.742914, 0, 1.0};
Point(80) = {0.053299, -0.741497, 0, 1.0};
Point(81) = {0.058352, -0.740046, 0, 1.0};
Point(82) = {0.062702, -0.738546, 0, 1.0};
Point(83) = {0.066312, -0.736928, 0, 1.0};
Point(84) = {0.069242, -0.735172, 0, 1.0};
Point(85) = {0.071542, -0.733350, 0, 1.0};
Point(86) = {0.073209, -0.731550, 0, 1.0};
Point(87) = {0.074246, -0.729852, 0, 1.0};
Point(88) = {0.074639, -0.728379, 0, 1.0};
Point(89) = {0.074637, -0.728097, 0, 1.0};
Point(90) = {0.074595, -0.727806, 0, 1.0};
Point(91) = {0.074500, -0.727561, 0, 1.0};
Point(92) = {0.074325, -0.727346, 0, 1.0};
Point(93) = {0.074068, -0.727140, 0, 1.0};
Point(94) = {0.072869, -0.726522, 0, 1.0};
Point(95) = {0.070526, -0.725810, 0, 1.0};
Point(96) = {0.067340, -0.725201, 0, 1.0};
Point(97) = {0.063371, -0.724692, 0, 1.0};
Point(98) = {0.058680, -0.724290, 0, 1.0};
Point(99) = {0.053341, -0.723995, 0, 1.0};
Point(100) = {0.047424, -0.723817, 0, 1.0};
Point(101) = {0.041013, -0.723762, 0, 1.0};
Point(102) = {0.034193, -0.723842, 0, 1.0};
Point(103) = {0.027053, -0.724070, 0, 1.0};
Point(104) = {0.019686, -0.724463, 0, 1.0};
Point(105) = {0.012187, -0.725048, 0, 1.0};
Point(106) = {0.004653, -0.725856, 0, 1.0};
Point(107) = {-0.002807, -0.726975, 0, 1.0};
Point(108) = {-0.010231, -0.728564, 0, 1.0};
Point(109) = {-0.017824, -0.730587, 0, 1.0};
Point(110) = {-0.025625, -0.732784, 0, 1.0};
Point(111) = {-0.033496, -0.734958, 0, 1.0};
Point(112) = {-0.041279, -0.736994, 0, 1.0};
Point(113) = {-0.048814, -0.738803, 0, 1.0};
Point(114) = {-0.055933, -0.740335, 0, 1.0};
Point(115) = {-0.062483, -0.741551, 0, 1.0};
Point(116) = {-0.068308, -0.742441, 0, 1.0};
Point(117) = {-0.073252, -0.743021, 0, 1.0};
Point(118) = {-0.074607, -0.743148, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:77};
Spline(6) = {77:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
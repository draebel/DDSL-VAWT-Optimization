SetFactory("OpenCASCADE");

Point(1) = {0.074451, 0.724766, 0, 1.0};
Point(2) = {0.074340, 0.724791, 0, 1.0};
Point(3) = {0.071934, 0.725269, 0, 1.0};
Point(4) = {0.069264, 0.725909, 0, 1.0};
Point(5) = {0.066286, 0.726622, 0, 1.0};
Point(6) = {0.063106, 0.727329, 0, 1.0};
Point(7) = {0.059646, 0.728169, 0, 1.0};
Point(8) = {0.055967, 0.729038, 0, 1.0};
Point(9) = {0.052058, 0.730034, 0, 1.0};
Point(10) = {0.047975, 0.731243, 0, 1.0};
Point(11) = {0.043676, 0.732226, 0, 1.0};
Point(12) = {0.039231, 0.733324, 0, 1.0};
Point(13) = {0.034646, 0.734600, 0, 1.0};
Point(14) = {0.029945, 0.735923, 0, 1.0};
Point(15) = {0.025111, 0.737168, 0, 1.0};
Point(16) = {0.020213, 0.738565, 0, 1.0};
Point(17) = {0.015250, 0.739907, 0, 1.0};
Point(18) = {0.010252, 0.741301, 0, 1.0};
Point(19) = {0.005197, 0.742575, 0, 1.0};
Point(20) = {0.000167, 0.743878, 0, 1.0};
Point(21) = {-0.004885, 0.745025, 0, 1.0};
Point(22) = {-0.009893, 0.746038, 0, 1.0};
Point(23) = {-0.014853, 0.746949, 0, 1.0};
Point(24) = {-0.019725, 0.747753, 0, 1.0};
Point(25) = {-0.024533, 0.748420, 0, 1.0};
Point(26) = {-0.029195, 0.748973, 0, 1.0};
Point(27) = {-0.033752, 0.749384, 0, 1.0};
Point(28) = {-0.038135, 0.749709, 0, 1.0};
Point(29) = {-0.042353, 0.749916, 0, 1.0};
Point(30) = {-0.046361, 0.750000, 0, 1.0};
Point(31) = {-0.050177, 0.749995, 0, 1.0};
Point(32) = {-0.053757, 0.749926, 0, 1.0};
Point(33) = {-0.057083, 0.749760, 0, 1.0};
Point(34) = {-0.060155, 0.749529, 0, 1.0};
Point(35) = {-0.062962, 0.749135, 0, 1.0};
Point(36) = {-0.065468, 0.748701, 0, 1.0};
Point(37) = {-0.067704, 0.748136, 0, 1.0};
Point(38) = {-0.069617, 0.747560, 0, 1.0};
Point(39) = {-0.071222, 0.746848, 0, 1.0};
Point(40) = {-0.072513, 0.746031, 0, 1.0};
Point(41) = {-0.073488, 0.745139, 0, 1.0};
Point(42) = {-0.074106, 0.744328, 0, 1.0};
Point(43) = {-0.074353, 0.743692, 0, 1.0};
Point(44) = {-0.074280, 0.743012, 0, 1.0};
Point(45) = {-0.073894, 0.742069, 0, 1.0};
Point(46) = {-0.073184, 0.740955, 0, 1.0};
Point(47) = {-0.072150, 0.739830, 0, 1.0};
Point(48) = {-0.070785, 0.738725, 0, 1.0};
Point(49) = {-0.069088, 0.737671, 0, 1.0};
Point(50) = {-0.067076, 0.736544, 0, 1.0};
Point(51) = {-0.064769, 0.735474, 0, 1.0};
Point(52) = {-0.062161, 0.734364, 0, 1.0};
Point(53) = {-0.059255, 0.733342, 0, 1.0};
Point(54) = {-0.056086, 0.732317, 0, 1.0};
Point(55) = {-0.052647, 0.731320, 0, 1.0};
Point(56) = {-0.048963, 0.730323, 0, 1.0};
Point(57) = {-0.045071, 0.729362, 0, 1.0};
Point(58) = {-0.040945, 0.728466, 0, 1.0};
Point(59) = {-0.036628, 0.727640, 0, 1.0};
Point(60) = {-0.032120, 0.726852, 0, 1.0};
Point(61) = {-0.027476, 0.726174, 0, 1.0};
Point(62) = {-0.022659, 0.725569, 0, 1.0};
Point(63) = {-0.017745, 0.725078, 0, 1.0};
Point(64) = {-0.012719, 0.724669, 0, 1.0};
Point(65) = {-0.007620, 0.724345, 0, 1.0};
Point(66) = {-0.002444, 0.724139, 0, 1.0};
Point(67) = {0.002752, 0.724089, 0, 1.0};
Point(68) = {0.007965, 0.724005, 0, 1.0};
Point(69) = {0.013153, 0.724053, 0, 1.0};
Point(70) = {0.018295, 0.724058, 0, 1.0};
Point(71) = {0.023387, 0.724134, 0, 1.0};
Point(72) = {0.028378, 0.724079, 0, 1.0};
Point(73) = {0.033262, 0.724135, 0, 1.0};
Point(74) = {0.038021, 0.724175, 0, 1.0};
Point(75) = {0.042599, 0.724080, 0, 1.0};
Point(76) = {0.047005, 0.723911, 0, 1.0};
Point(77) = {0.051262, 0.724018, 0, 1.0};
Point(78) = {0.055296, 0.723962, 0, 1.0};
Point(79) = {0.059074, 0.723845, 0, 1.0};
Point(80) = {0.062633, 0.723757, 0, 1.0};
Point(81) = {0.065888, 0.723614, 0, 1.0};
Point(82) = {0.068949, 0.723528, 0, 1.0};
Point(83) = {0.071693, 0.723452, 0, 1.0};
Point(84) = {0.074141, 0.723287, 0, 1.0};
Point(85) = {0.074254, 0.723283, 0, 1.0};
Point(86) = {-0.074451, -0.724766, 0, 1.0};
Point(87) = {-0.074340, -0.724791, 0, 1.0};
Point(88) = {-0.071934, -0.725269, 0, 1.0};
Point(89) = {-0.069264, -0.725909, 0, 1.0};
Point(90) = {-0.066286, -0.726622, 0, 1.0};
Point(91) = {-0.063106, -0.727329, 0, 1.0};
Point(92) = {-0.059646, -0.728169, 0, 1.0};
Point(93) = {-0.055967, -0.729038, 0, 1.0};
Point(94) = {-0.052058, -0.730034, 0, 1.0};
Point(95) = {-0.047975, -0.731243, 0, 1.0};
Point(96) = {-0.043676, -0.732226, 0, 1.0};
Point(97) = {-0.039231, -0.733324, 0, 1.0};
Point(98) = {-0.034646, -0.734600, 0, 1.0};
Point(99) = {-0.029945, -0.735923, 0, 1.0};
Point(100) = {-0.025111, -0.737168, 0, 1.0};
Point(101) = {-0.020213, -0.738565, 0, 1.0};
Point(102) = {-0.015250, -0.739907, 0, 1.0};
Point(103) = {-0.010252, -0.741301, 0, 1.0};
Point(104) = {-0.005197, -0.742575, 0, 1.0};
Point(105) = {-0.000167, -0.743878, 0, 1.0};
Point(106) = {0.004885, -0.745025, 0, 1.0};
Point(107) = {0.009893, -0.746038, 0, 1.0};
Point(108) = {0.014853, -0.746949, 0, 1.0};
Point(109) = {0.019725, -0.747753, 0, 1.0};
Point(110) = {0.024533, -0.748420, 0, 1.0};
Point(111) = {0.029195, -0.748973, 0, 1.0};
Point(112) = {0.033752, -0.749384, 0, 1.0};
Point(113) = {0.038135, -0.749709, 0, 1.0};
Point(114) = {0.042353, -0.749916, 0, 1.0};
Point(115) = {0.046361, -0.750000, 0, 1.0};
Point(116) = {0.050177, -0.749995, 0, 1.0};
Point(117) = {0.053757, -0.749926, 0, 1.0};
Point(118) = {0.057083, -0.749760, 0, 1.0};
Point(119) = {0.060155, -0.749529, 0, 1.0};
Point(120) = {0.062962, -0.749135, 0, 1.0};
Point(121) = {0.065468, -0.748701, 0, 1.0};
Point(122) = {0.067704, -0.748136, 0, 1.0};
Point(123) = {0.069617, -0.747560, 0, 1.0};
Point(124) = {0.071222, -0.746848, 0, 1.0};
Point(125) = {0.072513, -0.746031, 0, 1.0};
Point(126) = {0.073488, -0.745139, 0, 1.0};
Point(127) = {0.074106, -0.744328, 0, 1.0};
Point(128) = {0.074353, -0.743692, 0, 1.0};
Point(129) = {0.074280, -0.743012, 0, 1.0};
Point(130) = {0.073894, -0.742069, 0, 1.0};
Point(131) = {0.073184, -0.740955, 0, 1.0};
Point(132) = {0.072150, -0.739830, 0, 1.0};
Point(133) = {0.070785, -0.738725, 0, 1.0};
Point(134) = {0.069088, -0.737671, 0, 1.0};
Point(135) = {0.067076, -0.736544, 0, 1.0};
Point(136) = {0.064769, -0.735474, 0, 1.0};
Point(137) = {0.062161, -0.734364, 0, 1.0};
Point(138) = {0.059255, -0.733342, 0, 1.0};
Point(139) = {0.056086, -0.732317, 0, 1.0};
Point(140) = {0.052647, -0.731320, 0, 1.0};
Point(141) = {0.048963, -0.730323, 0, 1.0};
Point(142) = {0.045071, -0.729362, 0, 1.0};
Point(143) = {0.040945, -0.728466, 0, 1.0};
Point(144) = {0.036628, -0.727640, 0, 1.0};
Point(145) = {0.032120, -0.726852, 0, 1.0};
Point(146) = {0.027476, -0.726174, 0, 1.0};
Point(147) = {0.022659, -0.725569, 0, 1.0};
Point(148) = {0.017745, -0.725078, 0, 1.0};
Point(149) = {0.012719, -0.724669, 0, 1.0};
Point(150) = {0.007620, -0.724345, 0, 1.0};
Point(151) = {0.002444, -0.724139, 0, 1.0};
Point(152) = {-0.002752, -0.724089, 0, 1.0};
Point(153) = {-0.007965, -0.724005, 0, 1.0};
Point(154) = {-0.013153, -0.724053, 0, 1.0};
Point(155) = {-0.018295, -0.724058, 0, 1.0};
Point(156) = {-0.023387, -0.724134, 0, 1.0};
Point(157) = {-0.028378, -0.724079, 0, 1.0};
Point(158) = {-0.033262, -0.724135, 0, 1.0};
Point(159) = {-0.038021, -0.724175, 0, 1.0};
Point(160) = {-0.042599, -0.724080, 0, 1.0};
Point(161) = {-0.047005, -0.723911, 0, 1.0};
Point(162) = {-0.051262, -0.724018, 0, 1.0};
Point(163) = {-0.055296, -0.723962, 0, 1.0};
Point(164) = {-0.059074, -0.723845, 0, 1.0};
Point(165) = {-0.062633, -0.723757, 0, 1.0};
Point(166) = {-0.065888, -0.723614, 0, 1.0};
Point(167) = {-0.068949, -0.723528, 0, 1.0};
Point(168) = {-0.071693, -0.723452, 0, 1.0};
Point(169) = {-0.074141, -0.723287, 0, 1.0};
Point(170) = {-0.074254, -0.723283, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
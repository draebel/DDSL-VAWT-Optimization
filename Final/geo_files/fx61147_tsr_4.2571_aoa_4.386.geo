SetFactory("OpenCASCADE");

Point(1) = {0.074993, 0.728245, 0, 1.0};
Point(2) = {0.072713, 0.728993, 0, 1.0};
Point(3) = {0.070035, 0.729839, 0, 1.0};
Point(4) = {0.067046, 0.730748, 0, 1.0};
Point(5) = {0.063859, 0.731710, 0, 1.0};
Point(6) = {0.060382, 0.732731, 0, 1.0};
Point(7) = {0.056685, 0.733792, 0, 1.0};
Point(8) = {0.052745, 0.734889, 0, 1.0};
Point(9) = {0.048605, 0.736007, 0, 1.0};
Point(10) = {0.044283, 0.737143, 0, 1.0};
Point(11) = {0.039799, 0.738291, 0, 1.0};
Point(12) = {0.035153, 0.739441, 0, 1.0};
Point(13) = {0.030385, 0.740584, 0, 1.0};
Point(14) = {0.025494, 0.741716, 0, 1.0};
Point(15) = {0.020519, 0.742828, 0, 1.0};
Point(16) = {0.015482, 0.743911, 0, 1.0};
Point(17) = {0.010401, 0.744952, 0, 1.0};
Point(18) = {0.005275, 0.745940, 0, 1.0};
Point(19) = {0.000164, 0.746858, 0, 1.0};
Point(20) = {-0.004952, 0.747696, 0, 1.0};
Point(21) = {-0.010017, 0.748426, 0, 1.0};
Point(22) = {-0.015029, 0.749041, 0, 1.0};
Point(23) = {-0.019951, 0.749507, 0, 1.0};
Point(24) = {-0.024803, 0.749832, 0, 1.0};
Point(25) = {-0.029505, 0.749991, 0, 1.0};
Point(26) = {-0.034097, 0.750000, 0, 1.0};
Point(27) = {-0.038517, 0.749845, 0, 1.0};
Point(28) = {-0.042767, 0.749546, 0, 1.0};
Point(29) = {-0.046862, 0.749093, 0, 1.0};
Point(30) = {-0.050649, 0.748506, 0, 1.0};
Point(31) = {-0.054259, 0.747795, 0, 1.0};
Point(32) = {-0.057611, 0.746995, 0, 1.0};
Point(33) = {-0.060708, 0.746106, 0, 1.0};
Point(34) = {-0.063524, 0.745157, 0, 1.0};
Point(35) = {-0.066039, 0.744149, 0, 1.0};
Point(36) = {-0.068271, 0.743113, 0, 1.0};
Point(37) = {-0.070182, 0.742046, 0, 1.0};
Point(38) = {-0.071768, 0.740990, 0, 1.0};
Point(39) = {-0.073024, 0.739972, 0, 1.0};
Point(40) = {-0.073954, 0.738974, 0, 1.0};
Point(41) = {-0.074536, 0.738012, 0, 1.0};
Point(42) = {-0.074780, 0.736938, 0, 1.0};
Point(43) = {-0.074639, 0.736664, 0, 1.0};
Point(44) = {-0.074172, 0.736138, 0, 1.0};
Point(45) = {-0.073361, 0.735577, 0, 1.0};
Point(46) = {-0.072227, 0.734998, 0, 1.0};
Point(47) = {-0.070769, 0.734394, 0, 1.0};
Point(48) = {-0.068987, 0.733783, 0, 1.0};
Point(49) = {-0.066883, 0.733156, 0, 1.0};
Point(50) = {-0.064493, 0.732517, 0, 1.0};
Point(51) = {-0.061801, 0.731863, 0, 1.0};
Point(52) = {-0.058822, 0.731208, 0, 1.0};
Point(53) = {-0.055581, 0.730556, 0, 1.0};
Point(54) = {-0.052075, 0.729916, 0, 1.0};
Point(55) = {-0.048381, 0.729291, 0, 1.0};
Point(56) = {-0.044367, 0.728685, 0, 1.0};
Point(57) = {-0.040184, 0.728107, 0, 1.0};
Point(58) = {-0.035818, 0.727564, 0, 1.0};
Point(59) = {-0.031264, 0.727061, 0, 1.0};
Point(60) = {-0.026584, 0.726606, 0, 1.0};
Point(61) = {-0.021738, 0.726205, 0, 1.0};
Point(62) = {-0.016807, 0.725866, 0, 1.0};
Point(63) = {-0.011769, 0.725592, 0, 1.0};
Point(64) = {-0.006663, 0.725396, 0, 1.0};
Point(65) = {-0.001491, 0.725277, 0, 1.0};
Point(66) = {0.003688, 0.725247, 0, 1.0};
Point(67) = {0.008894, 0.725301, 0, 1.0};
Point(68) = {0.014066, 0.725441, 0, 1.0};
Point(69) = {0.019203, 0.725679, 0, 1.0};
Point(70) = {0.024289, 0.726013, 0, 1.0};
Point(71) = {0.029299, 0.726428, 0, 1.0};
Point(72) = {0.034190, 0.726882, 0, 1.0};
Point(73) = {0.038957, 0.727318, 0, 1.0};
Point(74) = {0.043557, 0.727679, 0, 1.0};
Point(75) = {0.047987, 0.727943, 0, 1.0};
Point(76) = {0.052224, 0.728099, 0, 1.0};
Point(77) = {0.056252, 0.728147, 0, 1.0};
Point(78) = {0.060026, 0.728089, 0, 1.0};
Point(79) = {0.063569, 0.727933, 0, 1.0};
Point(80) = {0.066812, 0.727705, 0, 1.0};
Point(81) = {0.069849, 0.727417, 0, 1.0};
Point(82) = {0.072567, 0.727093, 0, 1.0};
Point(83) = {0.074880, 0.726772, 0, 1.0};
Point(84) = {-0.074993, -0.728245, 0, 1.0};
Point(85) = {-0.072713, -0.728993, 0, 1.0};
Point(86) = {-0.070035, -0.729839, 0, 1.0};
Point(87) = {-0.067046, -0.730748, 0, 1.0};
Point(88) = {-0.063859, -0.731710, 0, 1.0};
Point(89) = {-0.060382, -0.732731, 0, 1.0};
Point(90) = {-0.056685, -0.733792, 0, 1.0};
Point(91) = {-0.052745, -0.734889, 0, 1.0};
Point(92) = {-0.048605, -0.736007, 0, 1.0};
Point(93) = {-0.044283, -0.737143, 0, 1.0};
Point(94) = {-0.039799, -0.738291, 0, 1.0};
Point(95) = {-0.035153, -0.739441, 0, 1.0};
Point(96) = {-0.030385, -0.740584, 0, 1.0};
Point(97) = {-0.025494, -0.741716, 0, 1.0};
Point(98) = {-0.020519, -0.742828, 0, 1.0};
Point(99) = {-0.015482, -0.743911, 0, 1.0};
Point(100) = {-0.010401, -0.744952, 0, 1.0};
Point(101) = {-0.005275, -0.745940, 0, 1.0};
Point(102) = {-0.000164, -0.746858, 0, 1.0};
Point(103) = {0.004952, -0.747696, 0, 1.0};
Point(104) = {0.010017, -0.748426, 0, 1.0};
Point(105) = {0.015029, -0.749041, 0, 1.0};
Point(106) = {0.019951, -0.749507, 0, 1.0};
Point(107) = {0.024803, -0.749832, 0, 1.0};
Point(108) = {0.029505, -0.749991, 0, 1.0};
Point(109) = {0.034097, -0.750000, 0, 1.0};
Point(110) = {0.038517, -0.749845, 0, 1.0};
Point(111) = {0.042767, -0.749546, 0, 1.0};
Point(112) = {0.046862, -0.749093, 0, 1.0};
Point(113) = {0.050649, -0.748506, 0, 1.0};
Point(114) = {0.054259, -0.747795, 0, 1.0};
Point(115) = {0.057611, -0.746995, 0, 1.0};
Point(116) = {0.060708, -0.746106, 0, 1.0};
Point(117) = {0.063524, -0.745157, 0, 1.0};
Point(118) = {0.066039, -0.744149, 0, 1.0};
Point(119) = {0.068271, -0.743113, 0, 1.0};
Point(120) = {0.070182, -0.742046, 0, 1.0};
Point(121) = {0.071768, -0.740990, 0, 1.0};
Point(122) = {0.073024, -0.739972, 0, 1.0};
Point(123) = {0.073954, -0.738974, 0, 1.0};
Point(124) = {0.074536, -0.738012, 0, 1.0};
Point(125) = {0.074780, -0.736938, 0, 1.0};
Point(126) = {0.074639, -0.736664, 0, 1.0};
Point(127) = {0.074172, -0.736138, 0, 1.0};
Point(128) = {0.073361, -0.735577, 0, 1.0};
Point(129) = {0.072227, -0.734998, 0, 1.0};
Point(130) = {0.070769, -0.734394, 0, 1.0};
Point(131) = {0.068987, -0.733783, 0, 1.0};
Point(132) = {0.066883, -0.733156, 0, 1.0};
Point(133) = {0.064493, -0.732517, 0, 1.0};
Point(134) = {0.061801, -0.731863, 0, 1.0};
Point(135) = {0.058822, -0.731208, 0, 1.0};
Point(136) = {0.055581, -0.730556, 0, 1.0};
Point(137) = {0.052075, -0.729916, 0, 1.0};
Point(138) = {0.048381, -0.729291, 0, 1.0};
Point(139) = {0.044367, -0.728685, 0, 1.0};
Point(140) = {0.040184, -0.728107, 0, 1.0};
Point(141) = {0.035818, -0.727564, 0, 1.0};
Point(142) = {0.031264, -0.727061, 0, 1.0};
Point(143) = {0.026584, -0.726606, 0, 1.0};
Point(144) = {0.021738, -0.726205, 0, 1.0};
Point(145) = {0.016807, -0.725866, 0, 1.0};
Point(146) = {0.011769, -0.725592, 0, 1.0};
Point(147) = {0.006663, -0.725396, 0, 1.0};
Point(148) = {0.001491, -0.725277, 0, 1.0};
Point(149) = {-0.003688, -0.725247, 0, 1.0};
Point(150) = {-0.008894, -0.725301, 0, 1.0};
Point(151) = {-0.014066, -0.725441, 0, 1.0};
Point(152) = {-0.019203, -0.725679, 0, 1.0};
Point(153) = {-0.024289, -0.726013, 0, 1.0};
Point(154) = {-0.029299, -0.726428, 0, 1.0};
Point(155) = {-0.034190, -0.726882, 0, 1.0};
Point(156) = {-0.038957, -0.727318, 0, 1.0};
Point(157) = {-0.043557, -0.727679, 0, 1.0};
Point(158) = {-0.047987, -0.727943, 0, 1.0};
Point(159) = {-0.052224, -0.728099, 0, 1.0};
Point(160) = {-0.056252, -0.728147, 0, 1.0};
Point(161) = {-0.060026, -0.728089, 0, 1.0};
Point(162) = {-0.063569, -0.727933, 0, 1.0};
Point(163) = {-0.066812, -0.727705, 0, 1.0};
Point(164) = {-0.069849, -0.727417, 0, 1.0};
Point(165) = {-0.072567, -0.727093, 0, 1.0};
Point(166) = {-0.074880, -0.726772, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
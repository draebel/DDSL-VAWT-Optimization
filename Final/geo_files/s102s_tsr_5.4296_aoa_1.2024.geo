SetFactory("OpenCASCADE");

Point(1) = {0.112471, 0.734293, 0, 1.0};
Point(2) = {0.111936, 0.734397, 0, 1.0};
Point(3) = {0.110385, 0.734754, 0, 1.0};
Point(4) = {0.107941, 0.735397, 0, 1.0};
Point(5) = {0.104738, 0.736286, 0, 1.0};
Point(6) = {0.100864, 0.737335, 0, 1.0};
Point(7) = {0.096342, 0.738462, 0, 1.0};
Point(8) = {0.091177, 0.739649, 0, 1.0};
Point(9) = {0.085432, 0.740916, 0, 1.0};
Point(10) = {0.079204, 0.742256, 0, 1.0};
Point(11) = {0.072594, 0.743640, 0, 1.0};
Point(12) = {0.065703, 0.745030, 0, 1.0};
Point(13) = {0.058632, 0.746374, 0, 1.0};
Point(14) = {0.051476, 0.747614, 0, 1.0};
Point(15) = {0.044327, 0.748656, 0, 1.0};
Point(16) = {0.037193, 0.749396, 0, 1.0};
Point(17) = {0.030021, 0.749818, 0, 1.0};
Point(18) = {0.022837, 0.750000, 0, 1.0};
Point(19) = {0.015724, 0.749990, 0, 1.0};
Point(20) = {0.008768, 0.749811, 0, 1.0};
Point(21) = {0.002053, 0.749481, 0, 1.0};
Point(22) = {-0.004339, 0.749015, 0, 1.0};
Point(23) = {-0.010327, 0.748429, 0, 1.0};
Point(24) = {-0.015828, 0.747733, 0, 1.0};
Point(25) = {-0.020763, 0.746935, 0, 1.0};
Point(26) = {-0.025040, 0.746012, 0, 1.0};
Point(27) = {-0.028632, 0.744893, 0, 1.0};
Point(28) = {-0.031597, 0.743567, 0, 1.0};
Point(29) = {-0.033974, 0.742108, 0, 1.0};
Point(30) = {-0.035752, 0.740597, 0, 1.0};
Point(31) = {-0.036924, 0.739112, 0, 1.0};
Point(32) = {-0.037462, 0.737766, 0, 1.0};
Point(33) = {-0.037492, 0.737499, 0, 1.0};
Point(34) = {-0.037486, 0.737220, 0, 1.0};
Point(35) = {-0.037423, 0.736977, 0, 1.0};
Point(36) = {-0.037282, 0.736755, 0, 1.0};
Point(37) = {-0.037063, 0.736532, 0, 1.0};
Point(38) = {-0.036001, 0.735812, 0, 1.0};
Point(39) = {-0.033870, 0.734874, 0, 1.0};
Point(40) = {-0.030931, 0.733938, 0, 1.0};
Point(41) = {-0.027241, 0.733008, 0, 1.0};
Point(42) = {-0.022859, 0.732097, 0, 1.0};
Point(43) = {-0.017851, 0.731213, 0, 1.0};
Point(44) = {-0.012284, 0.730375, 0, 1.0};
Point(45) = {-0.006238, 0.729597, 0, 1.0};
Point(46) = {0.000209, 0.728899, 0, 1.0};
Point(47) = {0.006977, 0.728305, 0, 1.0};
Point(48) = {0.013976, 0.727842, 0, 1.0};
Point(49) = {0.021122, 0.727545, 0, 1.0};
Point(50) = {0.028326, 0.727454, 0, 1.0};
Point(51) = {0.035496, 0.727665, 0, 1.0};
Point(52) = {0.042686, 0.728324, 0, 1.0};
Point(53) = {0.050084, 0.729373, 0, 1.0};
Point(54) = {0.057697, 0.730564, 0, 1.0};
Point(55) = {0.065375, 0.731725, 0, 1.0};
Point(56) = {0.072954, 0.732764, 0, 1.0};
Point(57) = {0.080272, 0.733619, 0, 1.0};
Point(58) = {0.087167, 0.734259, 0, 1.0};
Point(59) = {0.093489, 0.734665, 0, 1.0};
Point(60) = {0.099089, 0.734844, 0, 1.0};
Point(61) = {0.103822, 0.734832, 0, 1.0};
Point(62) = {0.107579, 0.734694, 0, 1.0};
Point(63) = {0.110291, 0.734512, 0, 1.0};
Point(64) = {0.111926, 0.734356, 0, 1.0};
Point(65) = {-0.112471, -0.734293, 0, 1.0};
Point(66) = {-0.111936, -0.734397, 0, 1.0};
Point(67) = {-0.110385, -0.734754, 0, 1.0};
Point(68) = {-0.107941, -0.735397, 0, 1.0};
Point(69) = {-0.104738, -0.736286, 0, 1.0};
Point(70) = {-0.100864, -0.737335, 0, 1.0};
Point(71) = {-0.096342, -0.738462, 0, 1.0};
Point(72) = {-0.091177, -0.739649, 0, 1.0};
Point(73) = {-0.085432, -0.740916, 0, 1.0};
Point(74) = {-0.079204, -0.742256, 0, 1.0};
Point(75) = {-0.072594, -0.743640, 0, 1.0};
Point(76) = {-0.065703, -0.745030, 0, 1.0};
Point(77) = {-0.058632, -0.746374, 0, 1.0};
Point(78) = {-0.051476, -0.747614, 0, 1.0};
Point(79) = {-0.044327, -0.748656, 0, 1.0};
Point(80) = {-0.037193, -0.749396, 0, 1.0};
Point(81) = {-0.030021, -0.749818, 0, 1.0};
Point(82) = {-0.022837, -0.750000, 0, 1.0};
Point(83) = {-0.015724, -0.749990, 0, 1.0};
Point(84) = {-0.008768, -0.749811, 0, 1.0};
Point(85) = {-0.002053, -0.749481, 0, 1.0};
Point(86) = {0.004339, -0.749015, 0, 1.0};
Point(87) = {0.010327, -0.748429, 0, 1.0};
Point(88) = {0.015828, -0.747733, 0, 1.0};
Point(89) = {0.020763, -0.746935, 0, 1.0};
Point(90) = {0.025040, -0.746012, 0, 1.0};
Point(91) = {0.028632, -0.744893, 0, 1.0};
Point(92) = {0.031597, -0.743567, 0, 1.0};
Point(93) = {0.033974, -0.742108, 0, 1.0};
Point(94) = {0.035752, -0.740597, 0, 1.0};
Point(95) = {0.036924, -0.739112, 0, 1.0};
Point(96) = {0.037462, -0.737766, 0, 1.0};
Point(97) = {0.037492, -0.737499, 0, 1.0};
Point(98) = {0.037486, -0.737220, 0, 1.0};
Point(99) = {0.037423, -0.736977, 0, 1.0};
Point(100) = {0.037282, -0.736755, 0, 1.0};
Point(101) = {0.037063, -0.736532, 0, 1.0};
Point(102) = {0.036001, -0.735812, 0, 1.0};
Point(103) = {0.033870, -0.734874, 0, 1.0};
Point(104) = {0.030931, -0.733938, 0, 1.0};
Point(105) = {0.027241, -0.733008, 0, 1.0};
Point(106) = {0.022859, -0.732097, 0, 1.0};
Point(107) = {0.017851, -0.731213, 0, 1.0};
Point(108) = {0.012284, -0.730375, 0, 1.0};
Point(109) = {0.006238, -0.729597, 0, 1.0};
Point(110) = {-0.000209, -0.728899, 0, 1.0};
Point(111) = {-0.006977, -0.728305, 0, 1.0};
Point(112) = {-0.013976, -0.727842, 0, 1.0};
Point(113) = {-0.021122, -0.727545, 0, 1.0};
Point(114) = {-0.028326, -0.727454, 0, 1.0};
Point(115) = {-0.035496, -0.727665, 0, 1.0};
Point(116) = {-0.042686, -0.728324, 0, 1.0};
Point(117) = {-0.050084, -0.729373, 0, 1.0};
Point(118) = {-0.057697, -0.730564, 0, 1.0};
Point(119) = {-0.065375, -0.731725, 0, 1.0};
Point(120) = {-0.072954, -0.732764, 0, 1.0};
Point(121) = {-0.080272, -0.733619, 0, 1.0};
Point(122) = {-0.087167, -0.734259, 0, 1.0};
Point(123) = {-0.093489, -0.734665, 0, 1.0};
Point(124) = {-0.099089, -0.734844, 0, 1.0};
Point(125) = {-0.103822, -0.734832, 0, 1.0};
Point(126) = {-0.107579, -0.734694, 0, 1.0};
Point(127) = {-0.110291, -0.734512, 0, 1.0};
Point(128) = {-0.111926, -0.734356, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:47};
Spline(3) = {47:64};
Spline(4) = {64,1};

// Lines: second blade (splines 5-8)
Spline(5) = {65:85};
Spline(6) = {85:111};
Spline(7) = {111:128};
Spline(8) = {128,65};

// Outer domain (points 20001-4 and lines)
Point(129) = {-13.50000000, -15.00000000, 0, 1.0};
Point(130) = {-13.50000000, 15.00000000, 0, 1.0};
Point(131) = {13.50000000, 15.00000000, 0, 1.0};
Point(132) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {129, 130};
Line(12) = {130, 131};
Line(13) = {131, 132};
Line(14) = {129, 132};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
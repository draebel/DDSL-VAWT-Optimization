SetFactory("OpenCASCADE");

Point(1) = {0.074982, 0.734293, 0, 1.0};
Point(2) = {0.074447, 0.734397, 0, 1.0};
Point(3) = {0.072896, 0.734754, 0, 1.0};
Point(4) = {0.070452, 0.735396, 0, 1.0};
Point(5) = {0.067249, 0.736286, 0, 1.0};
Point(6) = {0.063375, 0.737335, 0, 1.0};
Point(7) = {0.058853, 0.738462, 0, 1.0};
Point(8) = {0.053688, 0.739649, 0, 1.0};
Point(9) = {0.047943, 0.740916, 0, 1.0};
Point(10) = {0.041714, 0.742256, 0, 1.0};
Point(11) = {0.035104, 0.743640, 0, 1.0};
Point(12) = {0.028214, 0.745030, 0, 1.0};
Point(13) = {0.021142, 0.746374, 0, 1.0};
Point(14) = {0.013986, 0.747613, 0, 1.0};
Point(15) = {0.006836, 0.748656, 0, 1.0};
Point(16) = {-0.000297, 0.749396, 0, 1.0};
Point(17) = {-0.007469, 0.749818, 0, 1.0};
Point(18) = {-0.014653, 0.750000, 0, 1.0};
Point(19) = {-0.021767, 0.749990, 0, 1.0};
Point(20) = {-0.028723, 0.749811, 0, 1.0};
Point(21) = {-0.035438, 0.749481, 0, 1.0};
Point(22) = {-0.041830, 0.749015, 0, 1.0};
Point(23) = {-0.047818, 0.748429, 0, 1.0};
Point(24) = {-0.053320, 0.747733, 0, 1.0};
Point(25) = {-0.058255, 0.746935, 0, 1.0};
Point(26) = {-0.062532, 0.746012, 0, 1.0};
Point(27) = {-0.066123, 0.744893, 0, 1.0};
Point(28) = {-0.069089, 0.743567, 0, 1.0};
Point(29) = {-0.071466, 0.742108, 0, 1.0};
Point(30) = {-0.073244, 0.740597, 0, 1.0};
Point(31) = {-0.074416, 0.739112, 0, 1.0};
Point(32) = {-0.074954, 0.737766, 0, 1.0};
Point(33) = {-0.074983, 0.737499, 0, 1.0};
Point(34) = {-0.074977, 0.737220, 0, 1.0};
Point(35) = {-0.074915, 0.736977, 0, 1.0};
Point(36) = {-0.074774, 0.736755, 0, 1.0};
Point(37) = {-0.074555, 0.736531, 0, 1.0};
Point(38) = {-0.073493, 0.735811, 0, 1.0};
Point(39) = {-0.071361, 0.734874, 0, 1.0};
Point(40) = {-0.068422, 0.733938, 0, 1.0};
Point(41) = {-0.064733, 0.733008, 0, 1.0};
Point(42) = {-0.060350, 0.732097, 0, 1.0};
Point(43) = {-0.055342, 0.731213, 0, 1.0};
Point(44) = {-0.049776, 0.730375, 0, 1.0};
Point(45) = {-0.043729, 0.729596, 0, 1.0};
Point(46) = {-0.037282, 0.728898, 0, 1.0};
Point(47) = {-0.030514, 0.728305, 0, 1.0};
Point(48) = {-0.023514, 0.727841, 0, 1.0};
Point(49) = {-0.016368, 0.727544, 0, 1.0};
Point(50) = {-0.009164, 0.727453, 0, 1.0};
Point(51) = {-0.001994, 0.727664, 0, 1.0};
Point(52) = {0.005196, 0.728323, 0, 1.0};
Point(53) = {0.012594, 0.729373, 0, 1.0};
Point(54) = {0.020207, 0.730563, 0, 1.0};
Point(55) = {0.027885, 0.731724, 0, 1.0};
Point(56) = {0.035464, 0.732764, 0, 1.0};
Point(57) = {0.042783, 0.733618, 0, 1.0};
Point(58) = {0.049678, 0.734258, 0, 1.0};
Point(59) = {0.056000, 0.734664, 0, 1.0};
Point(60) = {0.061600, 0.734844, 0, 1.0};
Point(61) = {0.066334, 0.734832, 0, 1.0};
Point(62) = {0.070091, 0.734694, 0, 1.0};
Point(63) = {0.072802, 0.734511, 0, 1.0};
Point(64) = {0.074437, 0.734355, 0, 1.0};
Point(65) = {-0.074982, -0.734293, 0, 1.0};
Point(66) = {-0.074447, -0.734397, 0, 1.0};
Point(67) = {-0.072896, -0.734754, 0, 1.0};
Point(68) = {-0.070452, -0.735396, 0, 1.0};
Point(69) = {-0.067249, -0.736286, 0, 1.0};
Point(70) = {-0.063375, -0.737335, 0, 1.0};
Point(71) = {-0.058853, -0.738462, 0, 1.0};
Point(72) = {-0.053688, -0.739649, 0, 1.0};
Point(73) = {-0.047943, -0.740916, 0, 1.0};
Point(74) = {-0.041714, -0.742256, 0, 1.0};
Point(75) = {-0.035104, -0.743640, 0, 1.0};
Point(76) = {-0.028214, -0.745030, 0, 1.0};
Point(77) = {-0.021142, -0.746374, 0, 1.0};
Point(78) = {-0.013986, -0.747613, 0, 1.0};
Point(79) = {-0.006836, -0.748656, 0, 1.0};
Point(80) = {0.000297, -0.749396, 0, 1.0};
Point(81) = {0.007469, -0.749818, 0, 1.0};
Point(82) = {0.014653, -0.750000, 0, 1.0};
Point(83) = {0.021767, -0.749990, 0, 1.0};
Point(84) = {0.028723, -0.749811, 0, 1.0};
Point(85) = {0.035438, -0.749481, 0, 1.0};
Point(86) = {0.041830, -0.749015, 0, 1.0};
Point(87) = {0.047818, -0.748429, 0, 1.0};
Point(88) = {0.053320, -0.747733, 0, 1.0};
Point(89) = {0.058255, -0.746935, 0, 1.0};
Point(90) = {0.062532, -0.746012, 0, 1.0};
Point(91) = {0.066123, -0.744893, 0, 1.0};
Point(92) = {0.069089, -0.743567, 0, 1.0};
Point(93) = {0.071466, -0.742108, 0, 1.0};
Point(94) = {0.073244, -0.740597, 0, 1.0};
Point(95) = {0.074416, -0.739112, 0, 1.0};
Point(96) = {0.074954, -0.737766, 0, 1.0};
Point(97) = {0.074983, -0.737499, 0, 1.0};
Point(98) = {0.074977, -0.737220, 0, 1.0};
Point(99) = {0.074915, -0.736977, 0, 1.0};
Point(100) = {0.074774, -0.736755, 0, 1.0};
Point(101) = {0.074555, -0.736531, 0, 1.0};
Point(102) = {0.073493, -0.735811, 0, 1.0};
Point(103) = {0.071361, -0.734874, 0, 1.0};
Point(104) = {0.068422, -0.733938, 0, 1.0};
Point(105) = {0.064733, -0.733008, 0, 1.0};
Point(106) = {0.060350, -0.732097, 0, 1.0};
Point(107) = {0.055342, -0.731213, 0, 1.0};
Point(108) = {0.049776, -0.730375, 0, 1.0};
Point(109) = {0.043729, -0.729596, 0, 1.0};
Point(110) = {0.037282, -0.728898, 0, 1.0};
Point(111) = {0.030514, -0.728305, 0, 1.0};
Point(112) = {0.023514, -0.727841, 0, 1.0};
Point(113) = {0.016368, -0.727544, 0, 1.0};
Point(114) = {0.009164, -0.727453, 0, 1.0};
Point(115) = {0.001994, -0.727664, 0, 1.0};
Point(116) = {-0.005196, -0.728323, 0, 1.0};
Point(117) = {-0.012594, -0.729373, 0, 1.0};
Point(118) = {-0.020207, -0.730563, 0, 1.0};
Point(119) = {-0.027885, -0.731724, 0, 1.0};
Point(120) = {-0.035464, -0.732764, 0, 1.0};
Point(121) = {-0.042783, -0.733618, 0, 1.0};
Point(122) = {-0.049678, -0.734258, 0, 1.0};
Point(123) = {-0.056000, -0.734664, 0, 1.0};
Point(124) = {-0.061600, -0.734844, 0, 1.0};
Point(125) = {-0.066334, -0.734832, 0, 1.0};
Point(126) = {-0.070091, -0.734694, 0, 1.0};
Point(127) = {-0.072802, -0.734511, 0, 1.0};
Point(128) = {-0.074437, -0.734355, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:47};
Spline(3) = {47:64};
Spline(4) = {64,1};

// Lines: second blade (splines 5-8)
Spline(5) = {65:85};
Spline(6) = {85:111};
Spline(7) = {111:128};
Spline(8) = {128,65};

// Outer domain (points 20001-4 and lines)
Point(129) = {-13.50000000, -15.00000000, 0, 1.0};
Point(130) = {-13.50000000, 15.00000000, 0, 1.0};
Point(131) = {13.50000000, 15.00000000, 0, 1.0};
Point(132) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {129, 130};
Line(12) = {130, 131};
Line(13) = {131, 132};
Line(14) = {129, 132};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
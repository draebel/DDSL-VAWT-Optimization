SetFactory("OpenCASCADE");

Point(1) = {0.111675, 0.747066, 0, 1.0};
Point(2) = {0.111165, 0.747127, 0, 1.0};
Point(3) = {0.109718, 0.747336, 0, 1.0};
Point(4) = {0.107489, 0.747676, 0, 1.0};
Point(5) = {0.104550, 0.748035, 0, 1.0};
Point(6) = {0.100887, 0.748358, 0, 1.0};
Point(7) = {0.096518, 0.748666, 0, 1.0};
Point(8) = {0.091509, 0.748971, 0, 1.0};
Point(9) = {0.085940, 0.749267, 0, 1.0};
Point(10) = {0.079896, 0.749542, 0, 1.0};
Point(11) = {0.073464, 0.749777, 0, 1.0};
Point(12) = {0.066737, 0.749943, 0, 1.0};
Point(13) = {0.059810, 0.750000, 0, 1.0};
Point(14) = {0.052747, 0.749888, 0, 1.0};
Point(15) = {0.045589, 0.749573, 0, 1.0};
Point(16) = {0.038369, 0.749046, 0, 1.0};
Point(17) = {0.031130, 0.748313, 0, 1.0};
Point(18) = {0.023920, 0.747409, 0, 1.0};
Point(19) = {0.016819, 0.746359, 0, 1.0};
Point(20) = {0.009896, 0.745183, 0, 1.0};
Point(21) = {0.003223, 0.743902, 0, 1.0};
Point(22) = {-0.003128, 0.742536, 0, 1.0};
Point(23) = {-0.009096, 0.741105, 0, 1.0};
Point(24) = {-0.014616, 0.739630, 0, 1.0};
Point(25) = {-0.019634, 0.738133, 0, 1.0};
Point(26) = {-0.024098, 0.736639, 0, 1.0};
Point(27) = {-0.027960, 0.735171, 0, 1.0};
Point(28) = {-0.031180, 0.733752, 0, 1.0};
Point(29) = {-0.033729, 0.732400, 0, 1.0};
Point(30) = {-0.035592, 0.731142, 0, 1.0};
Point(31) = {-0.036534, 0.730282, 0, 1.0};
Point(32) = {-0.037002, 0.729669, 0, 1.0};
Point(33) = {-0.037180, 0.729312, 0, 1.0};
Point(34) = {-0.037235, 0.729081, 0, 1.0};
Point(35) = {-0.037227, 0.728954, 0, 1.0};
Point(36) = {-0.037168, 0.728839, 0, 1.0};
Point(37) = {-0.036997, 0.728662, 0, 1.0};
Point(38) = {-0.036648, 0.728427, 0, 1.0};
Point(39) = {-0.035893, 0.728096, 0, 1.0};
Point(40) = {-0.035502, 0.727971, 0, 1.0};
Point(41) = {-0.033437, 0.727545, 0, 1.0};
Point(42) = {-0.030629, 0.727263, 0, 1.0};
Point(43) = {-0.027101, 0.727139, 0, 1.0};
Point(44) = {-0.022885, 0.727166, 0, 1.0};
Point(45) = {-0.018034, 0.727337, 0, 1.0};
Point(46) = {-0.012612, 0.727654, 0, 1.0};
Point(47) = {-0.006683, 0.728119, 0, 1.0};
Point(48) = {-0.000321, 0.728738, 0, 1.0};
Point(49) = {0.006395, 0.729524, 0, 1.0};
Point(50) = {0.013407, 0.730505, 0, 1.0};
Point(51) = {0.020673, 0.731692, 0, 1.0};
Point(52) = {0.028158, 0.733079, 0, 1.0};
Point(53) = {0.035838, 0.734630, 0, 1.0};
Point(54) = {0.043664, 0.736269, 0, 1.0};
Point(55) = {0.051543, 0.737921, 0, 1.0};
Point(56) = {0.059371, 0.739533, 0, 1.0};
Point(57) = {0.067041, 0.741053, 0, 1.0};
Point(58) = {0.074440, 0.742441, 0, 1.0};
Point(59) = {0.081455, 0.743666, 0, 1.0};
Point(60) = {0.087973, 0.744701, 0, 1.0};
Point(61) = {0.093884, 0.745538, 0, 1.0};
Point(62) = {0.099088, 0.746174, 0, 1.0};
Point(63) = {0.103490, 0.746617, 0, 1.0};
Point(64) = {0.107011, 0.746893, 0, 1.0};
Point(65) = {0.109580, 0.747028, 0, 1.0};
Point(66) = {0.111148, 0.747066, 0, 1.0};
Point(67) = {-0.111675, -0.747066, 0, 1.0};
Point(68) = {-0.111165, -0.747127, 0, 1.0};
Point(69) = {-0.109718, -0.747336, 0, 1.0};
Point(70) = {-0.107489, -0.747676, 0, 1.0};
Point(71) = {-0.104550, -0.748035, 0, 1.0};
Point(72) = {-0.100887, -0.748358, 0, 1.0};
Point(73) = {-0.096518, -0.748666, 0, 1.0};
Point(74) = {-0.091509, -0.748971, 0, 1.0};
Point(75) = {-0.085940, -0.749267, 0, 1.0};
Point(76) = {-0.079896, -0.749542, 0, 1.0};
Point(77) = {-0.073464, -0.749777, 0, 1.0};
Point(78) = {-0.066737, -0.749943, 0, 1.0};
Point(79) = {-0.059810, -0.750000, 0, 1.0};
Point(80) = {-0.052747, -0.749888, 0, 1.0};
Point(81) = {-0.045589, -0.749573, 0, 1.0};
Point(82) = {-0.038369, -0.749046, 0, 1.0};
Point(83) = {-0.031130, -0.748313, 0, 1.0};
Point(84) = {-0.023920, -0.747409, 0, 1.0};
Point(85) = {-0.016819, -0.746359, 0, 1.0};
Point(86) = {-0.009896, -0.745183, 0, 1.0};
Point(87) = {-0.003223, -0.743902, 0, 1.0};
Point(88) = {0.003128, -0.742536, 0, 1.0};
Point(89) = {0.009096, -0.741105, 0, 1.0};
Point(90) = {0.014616, -0.739630, 0, 1.0};
Point(91) = {0.019634, -0.738133, 0, 1.0};
Point(92) = {0.024098, -0.736639, 0, 1.0};
Point(93) = {0.027960, -0.735171, 0, 1.0};
Point(94) = {0.031180, -0.733752, 0, 1.0};
Point(95) = {0.033729, -0.732400, 0, 1.0};
Point(96) = {0.035592, -0.731142, 0, 1.0};
Point(97) = {0.036534, -0.730282, 0, 1.0};
Point(98) = {0.037002, -0.729669, 0, 1.0};
Point(99) = {0.037180, -0.729312, 0, 1.0};
Point(100) = {0.037235, -0.729081, 0, 1.0};
Point(101) = {0.037227, -0.728954, 0, 1.0};
Point(102) = {0.037168, -0.728839, 0, 1.0};
Point(103) = {0.036997, -0.728662, 0, 1.0};
Point(104) = {0.036648, -0.728427, 0, 1.0};
Point(105) = {0.035893, -0.728096, 0, 1.0};
Point(106) = {0.035502, -0.727971, 0, 1.0};
Point(107) = {0.033437, -0.727545, 0, 1.0};
Point(108) = {0.030629, -0.727263, 0, 1.0};
Point(109) = {0.027101, -0.727139, 0, 1.0};
Point(110) = {0.022885, -0.727166, 0, 1.0};
Point(111) = {0.018034, -0.727337, 0, 1.0};
Point(112) = {0.012612, -0.727654, 0, 1.0};
Point(113) = {0.006683, -0.728119, 0, 1.0};
Point(114) = {0.000321, -0.728738, 0, 1.0};
Point(115) = {-0.006395, -0.729524, 0, 1.0};
Point(116) = {-0.013407, -0.730505, 0, 1.0};
Point(117) = {-0.020673, -0.731692, 0, 1.0};
Point(118) = {-0.028158, -0.733079, 0, 1.0};
Point(119) = {-0.035838, -0.734630, 0, 1.0};
Point(120) = {-0.043664, -0.736269, 0, 1.0};
Point(121) = {-0.051543, -0.737921, 0, 1.0};
Point(122) = {-0.059371, -0.739533, 0, 1.0};
Point(123) = {-0.067041, -0.741053, 0, 1.0};
Point(124) = {-0.074440, -0.742441, 0, 1.0};
Point(125) = {-0.081455, -0.743666, 0, 1.0};
Point(126) = {-0.087973, -0.744701, 0, 1.0};
Point(127) = {-0.093884, -0.745538, 0, 1.0};
Point(128) = {-0.099088, -0.746174, 0, 1.0};
Point(129) = {-0.103490, -0.746617, 0, 1.0};
Point(130) = {-0.107011, -0.746893, 0, 1.0};
Point(131) = {-0.109580, -0.747028, 0, 1.0};
Point(132) = {-0.111148, -0.747066, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074448, 0.747066, 0, 1.0};
Point(2) = {0.073938, 0.747127, 0, 1.0};
Point(3) = {0.072491, 0.747336, 0, 1.0};
Point(4) = {0.070261, 0.747676, 0, 1.0};
Point(5) = {0.067323, 0.748035, 0, 1.0};
Point(6) = {0.063660, 0.748358, 0, 1.0};
Point(7) = {0.059291, 0.748666, 0, 1.0};
Point(8) = {0.054282, 0.748971, 0, 1.0};
Point(9) = {0.048713, 0.749267, 0, 1.0};
Point(10) = {0.042669, 0.749542, 0, 1.0};
Point(11) = {0.036237, 0.749777, 0, 1.0};
Point(12) = {0.029510, 0.749943, 0, 1.0};
Point(13) = {0.022583, 0.750000, 0, 1.0};
Point(14) = {0.015520, 0.749888, 0, 1.0};
Point(15) = {0.008362, 0.749573, 0, 1.0};
Point(16) = {0.001142, 0.749046, 0, 1.0};
Point(17) = {-0.006097, 0.748313, 0, 1.0};
Point(18) = {-0.013307, 0.747409, 0, 1.0};
Point(19) = {-0.020408, 0.746359, 0, 1.0};
Point(20) = {-0.027331, 0.745183, 0, 1.0};
Point(21) = {-0.034004, 0.743902, 0, 1.0};
Point(22) = {-0.040355, 0.742536, 0, 1.0};
Point(23) = {-0.046323, 0.741105, 0, 1.0};
Point(24) = {-0.051843, 0.739630, 0, 1.0};
Point(25) = {-0.056861, 0.738133, 0, 1.0};
Point(26) = {-0.061325, 0.736639, 0, 1.0};
Point(27) = {-0.065187, 0.735171, 0, 1.0};
Point(28) = {-0.068407, 0.733752, 0, 1.0};
Point(29) = {-0.070956, 0.732400, 0, 1.0};
Point(30) = {-0.072819, 0.731142, 0, 1.0};
Point(31) = {-0.073761, 0.730282, 0, 1.0};
Point(32) = {-0.074229, 0.729669, 0, 1.0};
Point(33) = {-0.074407, 0.729312, 0, 1.0};
Point(34) = {-0.074462, 0.729081, 0, 1.0};
Point(35) = {-0.074454, 0.728954, 0, 1.0};
Point(36) = {-0.074395, 0.728839, 0, 1.0};
Point(37) = {-0.074224, 0.728662, 0, 1.0};
Point(38) = {-0.073875, 0.728427, 0, 1.0};
Point(39) = {-0.073120, 0.728096, 0, 1.0};
Point(40) = {-0.072729, 0.727971, 0, 1.0};
Point(41) = {-0.070664, 0.727545, 0, 1.0};
Point(42) = {-0.067856, 0.727263, 0, 1.0};
Point(43) = {-0.064328, 0.727139, 0, 1.0};
Point(44) = {-0.060112, 0.727166, 0, 1.0};
Point(45) = {-0.055261, 0.727337, 0, 1.0};
Point(46) = {-0.049839, 0.727654, 0, 1.0};
Point(47) = {-0.043910, 0.728119, 0, 1.0};
Point(48) = {-0.037548, 0.728738, 0, 1.0};
Point(49) = {-0.030832, 0.729524, 0, 1.0};
Point(50) = {-0.023820, 0.730505, 0, 1.0};
Point(51) = {-0.016554, 0.731692, 0, 1.0};
Point(52) = {-0.009069, 0.733079, 0, 1.0};
Point(53) = {-0.001389, 0.734630, 0, 1.0};
Point(54) = {0.006437, 0.736269, 0, 1.0};
Point(55) = {0.014316, 0.737921, 0, 1.0};
Point(56) = {0.022144, 0.739533, 0, 1.0};
Point(57) = {0.029814, 0.741053, 0, 1.0};
Point(58) = {0.037213, 0.742441, 0, 1.0};
Point(59) = {0.044228, 0.743666, 0, 1.0};
Point(60) = {0.050746, 0.744701, 0, 1.0};
Point(61) = {0.056657, 0.745538, 0, 1.0};
Point(62) = {0.061861, 0.746174, 0, 1.0};
Point(63) = {0.066263, 0.746617, 0, 1.0};
Point(64) = {0.069784, 0.746893, 0, 1.0};
Point(65) = {0.072353, 0.747028, 0, 1.0};
Point(66) = {0.073921, 0.747066, 0, 1.0};
Point(67) = {-0.074448, -0.747066, 0, 1.0};
Point(68) = {-0.073938, -0.747127, 0, 1.0};
Point(69) = {-0.072491, -0.747336, 0, 1.0};
Point(70) = {-0.070261, -0.747676, 0, 1.0};
Point(71) = {-0.067323, -0.748035, 0, 1.0};
Point(72) = {-0.063660, -0.748358, 0, 1.0};
Point(73) = {-0.059291, -0.748666, 0, 1.0};
Point(74) = {-0.054282, -0.748971, 0, 1.0};
Point(75) = {-0.048713, -0.749267, 0, 1.0};
Point(76) = {-0.042669, -0.749542, 0, 1.0};
Point(77) = {-0.036237, -0.749777, 0, 1.0};
Point(78) = {-0.029510, -0.749943, 0, 1.0};
Point(79) = {-0.022583, -0.750000, 0, 1.0};
Point(80) = {-0.015520, -0.749888, 0, 1.0};
Point(81) = {-0.008362, -0.749573, 0, 1.0};
Point(82) = {-0.001142, -0.749046, 0, 1.0};
Point(83) = {0.006097, -0.748313, 0, 1.0};
Point(84) = {0.013307, -0.747409, 0, 1.0};
Point(85) = {0.020408, -0.746359, 0, 1.0};
Point(86) = {0.027331, -0.745183, 0, 1.0};
Point(87) = {0.034004, -0.743902, 0, 1.0};
Point(88) = {0.040355, -0.742536, 0, 1.0};
Point(89) = {0.046323, -0.741105, 0, 1.0};
Point(90) = {0.051843, -0.739630, 0, 1.0};
Point(91) = {0.056861, -0.738133, 0, 1.0};
Point(92) = {0.061325, -0.736639, 0, 1.0};
Point(93) = {0.065187, -0.735171, 0, 1.0};
Point(94) = {0.068407, -0.733752, 0, 1.0};
Point(95) = {0.070956, -0.732400, 0, 1.0};
Point(96) = {0.072819, -0.731142, 0, 1.0};
Point(97) = {0.073761, -0.730282, 0, 1.0};
Point(98) = {0.074229, -0.729669, 0, 1.0};
Point(99) = {0.074407, -0.729312, 0, 1.0};
Point(100) = {0.074462, -0.729081, 0, 1.0};
Point(101) = {0.074454, -0.728954, 0, 1.0};
Point(102) = {0.074395, -0.728839, 0, 1.0};
Point(103) = {0.074224, -0.728662, 0, 1.0};
Point(104) = {0.073875, -0.728427, 0, 1.0};
Point(105) = {0.073120, -0.728096, 0, 1.0};
Point(106) = {0.072729, -0.727971, 0, 1.0};
Point(107) = {0.070664, -0.727545, 0, 1.0};
Point(108) = {0.067856, -0.727263, 0, 1.0};
Point(109) = {0.064328, -0.727139, 0, 1.0};
Point(110) = {0.060112, -0.727166, 0, 1.0};
Point(111) = {0.055261, -0.727337, 0, 1.0};
Point(112) = {0.049839, -0.727654, 0, 1.0};
Point(113) = {0.043910, -0.728119, 0, 1.0};
Point(114) = {0.037548, -0.728738, 0, 1.0};
Point(115) = {0.030832, -0.729524, 0, 1.0};
Point(116) = {0.023820, -0.730505, 0, 1.0};
Point(117) = {0.016554, -0.731692, 0, 1.0};
Point(118) = {0.009069, -0.733079, 0, 1.0};
Point(119) = {0.001389, -0.734630, 0, 1.0};
Point(120) = {-0.006437, -0.736269, 0, 1.0};
Point(121) = {-0.014316, -0.737921, 0, 1.0};
Point(122) = {-0.022144, -0.739533, 0, 1.0};
Point(123) = {-0.029814, -0.741053, 0, 1.0};
Point(124) = {-0.037213, -0.742441, 0, 1.0};
Point(125) = {-0.044228, -0.743666, 0, 1.0};
Point(126) = {-0.050746, -0.744701, 0, 1.0};
Point(127) = {-0.056657, -0.745538, 0, 1.0};
Point(128) = {-0.061861, -0.746174, 0, 1.0};
Point(129) = {-0.066263, -0.746617, 0, 1.0};
Point(130) = {-0.069784, -0.746893, 0, 1.0};
Point(131) = {-0.072353, -0.747028, 0, 1.0};
Point(132) = {-0.073921, -0.747066, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
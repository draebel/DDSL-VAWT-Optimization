SetFactory("OpenCASCADE");

Point(1) = {0.148537, 0.746088, 0, 1.0};
Point(2) = {0.147856, 0.746169, 0, 1.0};
Point(3) = {0.145926, 0.746448, 0, 1.0};
Point(4) = {0.142954, 0.746902, 0, 1.0};
Point(5) = {0.139036, 0.747379, 0, 1.0};
Point(6) = {0.134152, 0.747810, 0, 1.0};
Point(7) = {0.128326, 0.748222, 0, 1.0};
Point(8) = {0.121648, 0.748628, 0, 1.0};
Point(9) = {0.114223, 0.749023, 0, 1.0};
Point(10) = {0.106164, 0.749389, 0, 1.0};
Point(11) = {0.097587, 0.749702, 0, 1.0};
Point(12) = {0.088619, 0.749924, 0, 1.0};
Point(13) = {0.079383, 0.750000, 0, 1.0};
Point(14) = {0.069966, 0.749851, 0, 1.0};
Point(15) = {0.060421, 0.749430, 0, 1.0};
Point(16) = {0.050795, 0.748728, 0, 1.0};
Point(17) = {0.041143, 0.747750, 0, 1.0};
Point(18) = {0.031529, 0.746545, 0, 1.0};
Point(19) = {0.022061, 0.745145, 0, 1.0};
Point(20) = {0.012830, 0.743578, 0, 1.0};
Point(21) = {0.003933, 0.741870, 0, 1.0};
Point(22) = {-0.004535, 0.740048, 0, 1.0};
Point(23) = {-0.012491, 0.738140, 0, 1.0};
Point(24) = {-0.019852, 0.736173, 0, 1.0};
Point(25) = {-0.026543, 0.734177, 0, 1.0};
Point(26) = {-0.032494, 0.732186, 0, 1.0};
Point(27) = {-0.037644, 0.730227, 0, 1.0};
Point(28) = {-0.041938, 0.728336, 0, 1.0};
Point(29) = {-0.045335, 0.726534, 0, 1.0};
Point(30) = {-0.047820, 0.724857, 0, 1.0};
Point(31) = {-0.049076, 0.723709, 0, 1.0};
Point(32) = {-0.049701, 0.722892, 0, 1.0};
Point(33) = {-0.049937, 0.722416, 0, 1.0};
Point(34) = {-0.050011, 0.722109, 0, 1.0};
Point(35) = {-0.050000, 0.721939, 0, 1.0};
Point(36) = {-0.049921, 0.721785, 0, 1.0};
Point(37) = {-0.049693, 0.721549, 0, 1.0};
Point(38) = {-0.049228, 0.721237, 0, 1.0};
Point(39) = {-0.048221, 0.720795, 0, 1.0};
Point(40) = {-0.047699, 0.720628, 0, 1.0};
Point(41) = {-0.044947, 0.720060, 0, 1.0};
Point(42) = {-0.041202, 0.719684, 0, 1.0};
Point(43) = {-0.036498, 0.719519, 0, 1.0};
Point(44) = {-0.030877, 0.719554, 0, 1.0};
Point(45) = {-0.024410, 0.719783, 0, 1.0};
Point(46) = {-0.017180, 0.720205, 0, 1.0};
Point(47) = {-0.009275, 0.720825, 0, 1.0};
Point(48) = {-0.000792, 0.721651, 0, 1.0};
Point(49) = {0.008163, 0.722699, 0, 1.0};
Point(50) = {0.017512, 0.724007, 0, 1.0};
Point(51) = {0.027200, 0.725589, 0, 1.0};
Point(52) = {0.037180, 0.727438, 0, 1.0};
Point(53) = {0.047420, 0.729507, 0, 1.0};
Point(54) = {0.057855, 0.731692, 0, 1.0};
Point(55) = {0.068360, 0.733895, 0, 1.0};
Point(56) = {0.078797, 0.736044, 0, 1.0};
Point(57) = {0.089024, 0.738070, 0, 1.0};
Point(58) = {0.098889, 0.739922, 0, 1.0};
Point(59) = {0.108243, 0.741554, 0, 1.0};
Point(60) = {0.116934, 0.742935, 0, 1.0};
Point(61) = {0.124815, 0.744050, 0, 1.0};
Point(62) = {0.131753, 0.744898, 0, 1.0};
Point(63) = {0.137623, 0.745489, 0, 1.0};
Point(64) = {0.142317, 0.745857, 0, 1.0};
Point(65) = {0.145742, 0.746037, 0, 1.0};
Point(66) = {0.147834, 0.746088, 0, 1.0};
Point(67) = {-0.148537, -0.746088, 0, 1.0};
Point(68) = {-0.147856, -0.746169, 0, 1.0};
Point(69) = {-0.145926, -0.746448, 0, 1.0};
Point(70) = {-0.142954, -0.746902, 0, 1.0};
Point(71) = {-0.139036, -0.747379, 0, 1.0};
Point(72) = {-0.134152, -0.747810, 0, 1.0};
Point(73) = {-0.128326, -0.748222, 0, 1.0};
Point(74) = {-0.121648, -0.748628, 0, 1.0};
Point(75) = {-0.114223, -0.749023, 0, 1.0};
Point(76) = {-0.106164, -0.749389, 0, 1.0};
Point(77) = {-0.097587, -0.749702, 0, 1.0};
Point(78) = {-0.088619, -0.749924, 0, 1.0};
Point(79) = {-0.079383, -0.750000, 0, 1.0};
Point(80) = {-0.069966, -0.749851, 0, 1.0};
Point(81) = {-0.060421, -0.749430, 0, 1.0};
Point(82) = {-0.050795, -0.748728, 0, 1.0};
Point(83) = {-0.041143, -0.747750, 0, 1.0};
Point(84) = {-0.031529, -0.746545, 0, 1.0};
Point(85) = {-0.022061, -0.745145, 0, 1.0};
Point(86) = {-0.012830, -0.743578, 0, 1.0};
Point(87) = {-0.003933, -0.741870, 0, 1.0};
Point(88) = {0.004535, -0.740048, 0, 1.0};
Point(89) = {0.012491, -0.738140, 0, 1.0};
Point(90) = {0.019852, -0.736173, 0, 1.0};
Point(91) = {0.026543, -0.734177, 0, 1.0};
Point(92) = {0.032494, -0.732186, 0, 1.0};
Point(93) = {0.037644, -0.730227, 0, 1.0};
Point(94) = {0.041938, -0.728336, 0, 1.0};
Point(95) = {0.045335, -0.726534, 0, 1.0};
Point(96) = {0.047820, -0.724857, 0, 1.0};
Point(97) = {0.049076, -0.723709, 0, 1.0};
Point(98) = {0.049701, -0.722892, 0, 1.0};
Point(99) = {0.049937, -0.722416, 0, 1.0};
Point(100) = {0.050011, -0.722109, 0, 1.0};
Point(101) = {0.050000, -0.721939, 0, 1.0};
Point(102) = {0.049921, -0.721785, 0, 1.0};
Point(103) = {0.049693, -0.721549, 0, 1.0};
Point(104) = {0.049228, -0.721237, 0, 1.0};
Point(105) = {0.048221, -0.720795, 0, 1.0};
Point(106) = {0.047699, -0.720628, 0, 1.0};
Point(107) = {0.044947, -0.720060, 0, 1.0};
Point(108) = {0.041202, -0.719684, 0, 1.0};
Point(109) = {0.036498, -0.719519, 0, 1.0};
Point(110) = {0.030877, -0.719554, 0, 1.0};
Point(111) = {0.024410, -0.719783, 0, 1.0};
Point(112) = {0.017180, -0.720205, 0, 1.0};
Point(113) = {0.009275, -0.720825, 0, 1.0};
Point(114) = {0.000792, -0.721651, 0, 1.0};
Point(115) = {-0.008163, -0.722699, 0, 1.0};
Point(116) = {-0.017512, -0.724007, 0, 1.0};
Point(117) = {-0.027200, -0.725589, 0, 1.0};
Point(118) = {-0.037180, -0.727438, 0, 1.0};
Point(119) = {-0.047420, -0.729507, 0, 1.0};
Point(120) = {-0.057855, -0.731692, 0, 1.0};
Point(121) = {-0.068360, -0.733895, 0, 1.0};
Point(122) = {-0.078797, -0.736044, 0, 1.0};
Point(123) = {-0.089024, -0.738070, 0, 1.0};
Point(124) = {-0.098889, -0.739922, 0, 1.0};
Point(125) = {-0.108243, -0.741554, 0, 1.0};
Point(126) = {-0.116934, -0.742935, 0, 1.0};
Point(127) = {-0.124815, -0.744050, 0, 1.0};
Point(128) = {-0.131753, -0.744898, 0, 1.0};
Point(129) = {-0.137623, -0.745489, 0, 1.0};
Point(130) = {-0.142317, -0.745857, 0, 1.0};
Point(131) = {-0.145742, -0.746037, 0, 1.0};
Point(132) = {-0.147834, -0.746088, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
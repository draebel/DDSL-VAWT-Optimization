SetFactory("OpenCASCADE");

Point(1) = {0.074268, 0.748044, 0, 1.0};
Point(2) = {0.073928, 0.748084, 0, 1.0};
Point(3) = {0.072963, 0.748224, 0, 1.0};
Point(4) = {0.071477, 0.748451, 0, 1.0};
Point(5) = {0.069518, 0.748690, 0, 1.0};
Point(6) = {0.067076, 0.748905, 0, 1.0};
Point(7) = {0.064163, 0.749111, 0, 1.0};
Point(8) = {0.060824, 0.749314, 0, 1.0};
Point(9) = {0.057111, 0.749512, 0, 1.0};
Point(10) = {0.053082, 0.749695, 0, 1.0};
Point(11) = {0.048794, 0.749851, 0, 1.0};
Point(12) = {0.044310, 0.749962, 0, 1.0};
Point(13) = {0.039691, 0.750000, 0, 1.0};
Point(14) = {0.034983, 0.749925, 0, 1.0};
Point(15) = {0.030210, 0.749715, 0, 1.0};
Point(16) = {0.025398, 0.749364, 0, 1.0};
Point(17) = {0.020571, 0.748875, 0, 1.0};
Point(18) = {0.015765, 0.748273, 0, 1.0};
Point(19) = {0.011031, 0.747572, 0, 1.0};
Point(20) = {0.006415, 0.746789, 0, 1.0};
Point(21) = {0.001967, 0.745935, 0, 1.0};
Point(22) = {-0.002268, 0.745024, 0, 1.0};
Point(23) = {-0.006246, 0.744070, 0, 1.0};
Point(24) = {-0.009926, 0.743087, 0, 1.0};
Point(25) = {-0.013271, 0.742089, 0, 1.0};
Point(26) = {-0.016247, 0.741093, 0, 1.0};
Point(27) = {-0.018822, 0.740114, 0, 1.0};
Point(28) = {-0.020969, 0.739168, 0, 1.0};
Point(29) = {-0.022668, 0.738267, 0, 1.0};
Point(30) = {-0.023910, 0.737428, 0, 1.0};
Point(31) = {-0.024538, 0.736854, 0, 1.0};
Point(32) = {-0.024850, 0.736446, 0, 1.0};
Point(33) = {-0.024968, 0.736208, 0, 1.0};
Point(34) = {-0.025005, 0.736054, 0, 1.0};
Point(35) = {-0.025000, 0.735969, 0, 1.0};
Point(36) = {-0.024960, 0.735893, 0, 1.0};
Point(37) = {-0.024846, 0.735774, 0, 1.0};
Point(38) = {-0.024614, 0.735618, 0, 1.0};
Point(39) = {-0.024111, 0.735397, 0, 1.0};
Point(40) = {-0.023850, 0.735314, 0, 1.0};
Point(41) = {-0.022473, 0.735030, 0, 1.0};
Point(42) = {-0.020601, 0.734842, 0, 1.0};
Point(43) = {-0.018249, 0.734760, 0, 1.0};
Point(44) = {-0.015439, 0.734777, 0, 1.0};
Point(45) = {-0.012205, 0.734892, 0, 1.0};
Point(46) = {-0.008590, 0.735102, 0, 1.0};
Point(47) = {-0.004637, 0.735413, 0, 1.0};
Point(48) = {-0.000396, 0.735825, 0, 1.0};
Point(49) = {0.004081, 0.736350, 0, 1.0};
Point(50) = {0.008756, 0.737003, 0, 1.0};
Point(51) = {0.013600, 0.737795, 0, 1.0};
Point(52) = {0.018590, 0.738719, 0, 1.0};
Point(53) = {0.023710, 0.739753, 0, 1.0};
Point(54) = {0.028927, 0.740846, 0, 1.0};
Point(55) = {0.034180, 0.741947, 0, 1.0};
Point(56) = {0.039399, 0.743022, 0, 1.0};
Point(57) = {0.044512, 0.744035, 0, 1.0};
Point(58) = {0.049444, 0.744961, 0, 1.0};
Point(59) = {0.054121, 0.745777, 0, 1.0};
Point(60) = {0.058467, 0.746468, 0, 1.0};
Point(61) = {0.062408, 0.747025, 0, 1.0};
Point(62) = {0.065877, 0.747449, 0, 1.0};
Point(63) = {0.068812, 0.747745, 0, 1.0};
Point(64) = {0.071158, 0.747929, 0, 1.0};
Point(65) = {0.072871, 0.748019, 0, 1.0};
Point(66) = {0.073917, 0.748044, 0, 1.0};
Point(67) = {-0.074268, -0.748044, 0, 1.0};
Point(68) = {-0.073928, -0.748084, 0, 1.0};
Point(69) = {-0.072963, -0.748224, 0, 1.0};
Point(70) = {-0.071477, -0.748451, 0, 1.0};
Point(71) = {-0.069518, -0.748690, 0, 1.0};
Point(72) = {-0.067076, -0.748905, 0, 1.0};
Point(73) = {-0.064163, -0.749111, 0, 1.0};
Point(74) = {-0.060824, -0.749314, 0, 1.0};
Point(75) = {-0.057111, -0.749512, 0, 1.0};
Point(76) = {-0.053082, -0.749695, 0, 1.0};
Point(77) = {-0.048794, -0.749851, 0, 1.0};
Point(78) = {-0.044310, -0.749962, 0, 1.0};
Point(79) = {-0.039691, -0.750000, 0, 1.0};
Point(80) = {-0.034983, -0.749925, 0, 1.0};
Point(81) = {-0.030210, -0.749715, 0, 1.0};
Point(82) = {-0.025398, -0.749364, 0, 1.0};
Point(83) = {-0.020571, -0.748875, 0, 1.0};
Point(84) = {-0.015765, -0.748273, 0, 1.0};
Point(85) = {-0.011031, -0.747572, 0, 1.0};
Point(86) = {-0.006415, -0.746789, 0, 1.0};
Point(87) = {-0.001967, -0.745935, 0, 1.0};
Point(88) = {0.002268, -0.745024, 0, 1.0};
Point(89) = {0.006246, -0.744070, 0, 1.0};
Point(90) = {0.009926, -0.743087, 0, 1.0};
Point(91) = {0.013271, -0.742089, 0, 1.0};
Point(92) = {0.016247, -0.741093, 0, 1.0};
Point(93) = {0.018822, -0.740114, 0, 1.0};
Point(94) = {0.020969, -0.739168, 0, 1.0};
Point(95) = {0.022668, -0.738267, 0, 1.0};
Point(96) = {0.023910, -0.737428, 0, 1.0};
Point(97) = {0.024538, -0.736854, 0, 1.0};
Point(98) = {0.024850, -0.736446, 0, 1.0};
Point(99) = {0.024968, -0.736208, 0, 1.0};
Point(100) = {0.025005, -0.736054, 0, 1.0};
Point(101) = {0.025000, -0.735969, 0, 1.0};
Point(102) = {0.024960, -0.735893, 0, 1.0};
Point(103) = {0.024846, -0.735774, 0, 1.0};
Point(104) = {0.024614, -0.735618, 0, 1.0};
Point(105) = {0.024111, -0.735397, 0, 1.0};
Point(106) = {0.023850, -0.735314, 0, 1.0};
Point(107) = {0.022473, -0.735030, 0, 1.0};
Point(108) = {0.020601, -0.734842, 0, 1.0};
Point(109) = {0.018249, -0.734760, 0, 1.0};
Point(110) = {0.015439, -0.734777, 0, 1.0};
Point(111) = {0.012205, -0.734892, 0, 1.0};
Point(112) = {0.008590, -0.735102, 0, 1.0};
Point(113) = {0.004637, -0.735413, 0, 1.0};
Point(114) = {0.000396, -0.735825, 0, 1.0};
Point(115) = {-0.004081, -0.736350, 0, 1.0};
Point(116) = {-0.008756, -0.737003, 0, 1.0};
Point(117) = {-0.013600, -0.737795, 0, 1.0};
Point(118) = {-0.018590, -0.738719, 0, 1.0};
Point(119) = {-0.023710, -0.739753, 0, 1.0};
Point(120) = {-0.028927, -0.740846, 0, 1.0};
Point(121) = {-0.034180, -0.741947, 0, 1.0};
Point(122) = {-0.039399, -0.743022, 0, 1.0};
Point(123) = {-0.044512, -0.744035, 0, 1.0};
Point(124) = {-0.049444, -0.744961, 0, 1.0};
Point(125) = {-0.054121, -0.745777, 0, 1.0};
Point(126) = {-0.058467, -0.746468, 0, 1.0};
Point(127) = {-0.062408, -0.747025, 0, 1.0};
Point(128) = {-0.065877, -0.747449, 0, 1.0};
Point(129) = {-0.068812, -0.747745, 0, 1.0};
Point(130) = {-0.071158, -0.747929, 0, 1.0};
Point(131) = {-0.072871, -0.748019, 0, 1.0};
Point(132) = {-0.073917, -0.748044, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074144, 0.721559, 0, 1.0};
Point(2) = {0.070310, 0.722571, 0, 1.0};
Point(3) = {0.064334, 0.724240, 0, 1.0};
Point(4) = {0.057786, 0.726154, 0, 1.0};
Point(5) = {0.050769, 0.728263, 0, 1.0};
Point(6) = {0.043386, 0.730508, 0, 1.0};
Point(7) = {0.035732, 0.732822, 0, 1.0};
Point(8) = {0.027886, 0.735130, 0, 1.0};
Point(9) = {0.019912, 0.737373, 0, 1.0};
Point(10) = {0.011870, 0.739506, 0, 1.0};
Point(11) = {0.003821, 0.741498, 0, 1.0};
Point(12) = {-0.004166, 0.743328, 0, 1.0};
Point(13) = {-0.012012, 0.744978, 0, 1.0};
Point(14) = {-0.019640, 0.746425, 0, 1.0};
Point(15) = {-0.026976, 0.747648, 0, 1.0};
Point(16) = {-0.033952, 0.748627, 0, 1.0};
Point(17) = {-0.040513, 0.749348, 0, 1.0};
Point(18) = {-0.046602, 0.749806, 0, 1.0};
Point(19) = {-0.052173, 0.750000, 0, 1.0};
Point(20) = {-0.057181, 0.749938, 0, 1.0};
Point(21) = {-0.061586, 0.749632, 0, 1.0};
Point(22) = {-0.065359, 0.749094, 0, 1.0};
Point(23) = {-0.068483, 0.748355, 0, 1.0};
Point(24) = {-0.070940, 0.747459, 0, 1.0};
Point(25) = {-0.072713, 0.746467, 0, 1.0};
Point(26) = {-0.073608, 0.745671, 0, 1.0};
Point(27) = {-0.073825, 0.745376, 0, 1.0};
Point(28) = {-0.073972, 0.745095, 0, 1.0};
Point(29) = {-0.074027, 0.744920, 0, 1.0};
Point(30) = {-0.074038, 0.744760, 0, 1.0};
Point(31) = {-0.073993, 0.744602, 0, 1.0};
Point(32) = {-0.073898, 0.744430, 0, 1.0};
Point(33) = {-0.073681, 0.744153, 0, 1.0};
Point(34) = {-0.073384, 0.743856, 0, 1.0};
Point(35) = {-0.073131, 0.743635, 0, 1.0};
Point(36) = {-0.071422, 0.742523, 0, 1.0};
Point(37) = {-0.068900, 0.741316, 0, 1.0};
Point(38) = {-0.065598, 0.740056, 0, 1.0};
Point(39) = {-0.061545, 0.738776, 0, 1.0};
Point(40) = {-0.056769, 0.737510, 0, 1.0};
Point(41) = {-0.051296, 0.736276, 0, 1.0};
Point(42) = {-0.045165, 0.735079, 0, 1.0};
Point(43) = {-0.038422, 0.733922, 0, 1.0};
Point(44) = {-0.031132, 0.732795, 0, 1.0};
Point(45) = {-0.023372, 0.731696, 0, 1.0};
Point(46) = {-0.015224, 0.730621, 0, 1.0};
Point(47) = {-0.006778, 0.729566, 0, 1.0};
Point(48) = {0.001870, 0.728525, 0, 1.0};
Point(49) = {0.010613, 0.727497, 0, 1.0};
Point(50) = {0.019346, 0.726481, 0, 1.0};
Point(51) = {0.027959, 0.725482, 0, 1.0};
Point(52) = {0.036346, 0.724507, 0, 1.0};
Point(53) = {0.044403, 0.723567, 0, 1.0};
Point(54) = {0.052031, 0.722671, 0, 1.0};
Point(55) = {0.059138, 0.721831, 0, 1.0};
Point(56) = {0.065635, 0.721056, 0, 1.0};
Point(57) = {0.071439, 0.720360, 0, 1.0};
Point(58) = {0.073901, 0.720064, 0, 1.0};
Point(59) = {-0.074144, -0.721559, 0, 1.0};
Point(60) = {-0.070310, -0.722571, 0, 1.0};
Point(61) = {-0.064334, -0.724240, 0, 1.0};
Point(62) = {-0.057786, -0.726154, 0, 1.0};
Point(63) = {-0.050769, -0.728263, 0, 1.0};
Point(64) = {-0.043386, -0.730508, 0, 1.0};
Point(65) = {-0.035732, -0.732822, 0, 1.0};
Point(66) = {-0.027886, -0.735130, 0, 1.0};
Point(67) = {-0.019912, -0.737373, 0, 1.0};
Point(68) = {-0.011870, -0.739506, 0, 1.0};
Point(69) = {-0.003821, -0.741498, 0, 1.0};
Point(70) = {0.004166, -0.743328, 0, 1.0};
Point(71) = {0.012012, -0.744978, 0, 1.0};
Point(72) = {0.019640, -0.746425, 0, 1.0};
Point(73) = {0.026976, -0.747648, 0, 1.0};
Point(74) = {0.033952, -0.748627, 0, 1.0};
Point(75) = {0.040513, -0.749348, 0, 1.0};
Point(76) = {0.046602, -0.749806, 0, 1.0};
Point(77) = {0.052173, -0.750000, 0, 1.0};
Point(78) = {0.057181, -0.749938, 0, 1.0};
Point(79) = {0.061586, -0.749632, 0, 1.0};
Point(80) = {0.065359, -0.749094, 0, 1.0};
Point(81) = {0.068483, -0.748355, 0, 1.0};
Point(82) = {0.070940, -0.747459, 0, 1.0};
Point(83) = {0.072713, -0.746467, 0, 1.0};
Point(84) = {0.073608, -0.745671, 0, 1.0};
Point(85) = {0.073825, -0.745376, 0, 1.0};
Point(86) = {0.073972, -0.745095, 0, 1.0};
Point(87) = {0.074027, -0.744920, 0, 1.0};
Point(88) = {0.074038, -0.744760, 0, 1.0};
Point(89) = {0.073993, -0.744602, 0, 1.0};
Point(90) = {0.073898, -0.744430, 0, 1.0};
Point(91) = {0.073681, -0.744153, 0, 1.0};
Point(92) = {0.073384, -0.743856, 0, 1.0};
Point(93) = {0.073131, -0.743635, 0, 1.0};
Point(94) = {0.071422, -0.742523, 0, 1.0};
Point(95) = {0.068900, -0.741316, 0, 1.0};
Point(96) = {0.065598, -0.740056, 0, 1.0};
Point(97) = {0.061545, -0.738776, 0, 1.0};
Point(98) = {0.056769, -0.737510, 0, 1.0};
Point(99) = {0.051296, -0.736276, 0, 1.0};
Point(100) = {0.045165, -0.735079, 0, 1.0};
Point(101) = {0.038422, -0.733922, 0, 1.0};
Point(102) = {0.031132, -0.732795, 0, 1.0};
Point(103) = {0.023372, -0.731696, 0, 1.0};
Point(104) = {0.015224, -0.730621, 0, 1.0};
Point(105) = {0.006778, -0.729566, 0, 1.0};
Point(106) = {-0.001870, -0.728525, 0, 1.0};
Point(107) = {-0.010613, -0.727497, 0, 1.0};
Point(108) = {-0.019346, -0.726481, 0, 1.0};
Point(109) = {-0.027959, -0.725482, 0, 1.0};
Point(110) = {-0.036346, -0.724507, 0, 1.0};
Point(111) = {-0.044403, -0.723567, 0, 1.0};
Point(112) = {-0.052031, -0.722671, 0, 1.0};
Point(113) = {-0.059138, -0.721831, 0, 1.0};
Point(114) = {-0.065635, -0.721056, 0, 1.0};
Point(115) = {-0.071439, -0.720360, 0, 1.0};
Point(116) = {-0.073901, -0.720064, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:44};
Spline(3) = {44:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:74};
Spline(6) = {74:102};
Spline(7) = {102:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {36.00000000, 15.00000000, 0, 1.0};
Point(120) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
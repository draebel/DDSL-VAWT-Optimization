SetFactory("OpenCASCADE");

Point(1) = {0.074480, 0.714508, 0, 1.0};
Point(2) = {0.072489, 0.715234, 0, 1.0};
Point(3) = {0.069864, 0.716198, 0, 1.0};
Point(4) = {0.066970, 0.717262, 0, 1.0};
Point(5) = {0.063818, 0.718427, 0, 1.0};
Point(6) = {0.060422, 0.719686, 0, 1.0};
Point(7) = {0.056796, 0.721026, 0, 1.0};
Point(8) = {0.052956, 0.722446, 0, 1.0};
Point(9) = {0.048919, 0.723946, 0, 1.0};
Point(10) = {0.044702, 0.725522, 0, 1.0};
Point(11) = {0.040324, 0.727166, 0, 1.0};
Point(12) = {0.035803, 0.728865, 0, 1.0};
Point(13) = {0.031158, 0.730615, 0, 1.0};
Point(14) = {0.026408, 0.732404, 0, 1.0};
Point(15) = {0.021575, 0.734218, 0, 1.0};
Point(16) = {0.016674, 0.736043, 0, 1.0};
Point(17) = {0.011728, 0.737863, 0, 1.0};
Point(18) = {0.006757, 0.739658, 0, 1.0};
Point(19) = {0.001779, 0.741407, 0, 1.0};
Point(20) = {-0.003188, 0.743087, 0, 1.0};
Point(21) = {-0.008125, 0.744676, 0, 1.0};
Point(22) = {-0.013011, 0.746143, 0, 1.0};
Point(23) = {-0.017835, 0.747438, 0, 1.0};
Point(24) = {-0.022586, 0.748492, 0, 1.0};
Point(25) = {-0.027247, 0.749266, 0, 1.0};
Point(26) = {-0.031800, 0.749759, 0, 1.0};
Point(27) = {-0.036220, 0.750000, 0, 1.0};
Point(28) = {-0.040486, 0.749986, 0, 1.0};
Point(29) = {-0.044584, 0.749703, 0, 1.0};
Point(30) = {-0.048495, 0.749168, 0, 1.0};
Point(31) = {-0.052195, 0.748420, 0, 1.0};
Point(32) = {-0.055663, 0.747505, 0, 1.0};
Point(33) = {-0.058877, 0.746451, 0, 1.0};
Point(34) = {-0.061827, 0.745273, 0, 1.0};
Point(35) = {-0.064495, 0.743997, 0, 1.0};
Point(36) = {-0.066861, 0.742670, 0, 1.0};
Point(37) = {-0.068916, 0.741313, 0, 1.0};
Point(38) = {-0.070646, 0.739939, 0, 1.0};
Point(39) = {-0.072045, 0.738567, 0, 1.0};
Point(40) = {-0.073099, 0.737255, 0, 1.0};
Point(41) = {-0.073799, 0.736032, 0, 1.0};
Point(42) = {-0.074152, 0.734838, 0, 1.0};
Point(43) = {-0.074164, 0.733627, 0, 1.0};
Point(44) = {-0.073834, 0.732408, 0, 1.0};
Point(45) = {-0.073148, 0.731294, 0, 1.0};
Point(46) = {-0.072098, 0.730365, 0, 1.0};
Point(47) = {-0.070689, 0.729622, 0, 1.0};
Point(48) = {-0.068931, 0.729023, 0, 1.0};
Point(49) = {-0.066843, 0.728514, 0, 1.0};
Point(50) = {-0.064434, 0.728083, 0, 1.0};
Point(51) = {-0.061721, 0.727699, 0, 1.0};
Point(52) = {-0.058719, 0.727354, 0, 1.0};
Point(53) = {-0.055437, 0.727043, 0, 1.0};
Point(54) = {-0.051892, 0.726766, 0, 1.0};
Point(55) = {-0.048097, 0.726542, 0, 1.0};
Point(56) = {-0.044072, 0.726341, 0, 1.0};
Point(57) = {-0.039838, 0.726146, 0, 1.0};
Point(58) = {-0.035412, 0.725944, 0, 1.0};
Point(59) = {-0.030818, 0.725718, 0, 1.0};
Point(60) = {-0.026078, 0.725468, 0, 1.0};
Point(61) = {-0.021209, 0.725192, 0, 1.0};
Point(62) = {-0.016234, 0.724890, 0, 1.0};
Point(63) = {-0.011177, 0.724549, 0, 1.0};
Point(64) = {-0.006057, 0.724165, 0, 1.0};
Point(65) = {-0.000900, 0.723743, 0, 1.0};
Point(66) = {0.004274, 0.723286, 0, 1.0};
Point(67) = {0.009444, 0.722798, 0, 1.0};
Point(68) = {0.014586, 0.722277, 0, 1.0};
Point(69) = {0.019680, 0.721725, 0, 1.0};
Point(70) = {0.024700, 0.721141, 0, 1.0};
Point(71) = {0.029628, 0.720528, 0, 1.0};
Point(72) = {0.034442, 0.719891, 0, 1.0};
Point(73) = {0.039122, 0.719243, 0, 1.0};
Point(74) = {0.043649, 0.718581, 0, 1.0};
Point(75) = {0.048004, 0.717910, 0, 1.0};
Point(76) = {0.052164, 0.717228, 0, 1.0};
Point(77) = {0.056117, 0.716548, 0, 1.0};
Point(78) = {0.059845, 0.715882, 0, 1.0};
Point(79) = {0.063334, 0.715232, 0, 1.0};
Point(80) = {0.066568, 0.714608, 0, 1.0};
Point(81) = {0.069532, 0.714011, 0, 1.0};
Point(82) = {0.072218, 0.713449, 0, 1.0};
Point(83) = {0.074252, 0.713003, 0, 1.0};
Point(84) = {-0.074480, -0.714508, 0, 1.0};
Point(85) = {-0.072489, -0.715234, 0, 1.0};
Point(86) = {-0.069864, -0.716198, 0, 1.0};
Point(87) = {-0.066970, -0.717262, 0, 1.0};
Point(88) = {-0.063818, -0.718427, 0, 1.0};
Point(89) = {-0.060422, -0.719686, 0, 1.0};
Point(90) = {-0.056796, -0.721026, 0, 1.0};
Point(91) = {-0.052956, -0.722446, 0, 1.0};
Point(92) = {-0.048919, -0.723946, 0, 1.0};
Point(93) = {-0.044702, -0.725522, 0, 1.0};
Point(94) = {-0.040324, -0.727166, 0, 1.0};
Point(95) = {-0.035803, -0.728865, 0, 1.0};
Point(96) = {-0.031158, -0.730615, 0, 1.0};
Point(97) = {-0.026408, -0.732404, 0, 1.0};
Point(98) = {-0.021575, -0.734218, 0, 1.0};
Point(99) = {-0.016674, -0.736043, 0, 1.0};
Point(100) = {-0.011728, -0.737863, 0, 1.0};
Point(101) = {-0.006757, -0.739658, 0, 1.0};
Point(102) = {-0.001779, -0.741407, 0, 1.0};
Point(103) = {0.003188, -0.743087, 0, 1.0};
Point(104) = {0.008125, -0.744676, 0, 1.0};
Point(105) = {0.013011, -0.746143, 0, 1.0};
Point(106) = {0.017835, -0.747438, 0, 1.0};
Point(107) = {0.022586, -0.748492, 0, 1.0};
Point(108) = {0.027247, -0.749266, 0, 1.0};
Point(109) = {0.031800, -0.749759, 0, 1.0};
Point(110) = {0.036220, -0.750000, 0, 1.0};
Point(111) = {0.040486, -0.749986, 0, 1.0};
Point(112) = {0.044584, -0.749703, 0, 1.0};
Point(113) = {0.048495, -0.749168, 0, 1.0};
Point(114) = {0.052195, -0.748420, 0, 1.0};
Point(115) = {0.055663, -0.747505, 0, 1.0};
Point(116) = {0.058877, -0.746451, 0, 1.0};
Point(117) = {0.061827, -0.745273, 0, 1.0};
Point(118) = {0.064495, -0.743997, 0, 1.0};
Point(119) = {0.066861, -0.742670, 0, 1.0};
Point(120) = {0.068916, -0.741313, 0, 1.0};
Point(121) = {0.070646, -0.739939, 0, 1.0};
Point(122) = {0.072045, -0.738567, 0, 1.0};
Point(123) = {0.073099, -0.737255, 0, 1.0};
Point(124) = {0.073799, -0.736032, 0, 1.0};
Point(125) = {0.074152, -0.734838, 0, 1.0};
Point(126) = {0.074164, -0.733627, 0, 1.0};
Point(127) = {0.073834, -0.732408, 0, 1.0};
Point(128) = {0.073148, -0.731294, 0, 1.0};
Point(129) = {0.072098, -0.730365, 0, 1.0};
Point(130) = {0.070689, -0.729622, 0, 1.0};
Point(131) = {0.068931, -0.729023, 0, 1.0};
Point(132) = {0.066843, -0.728514, 0, 1.0};
Point(133) = {0.064434, -0.728083, 0, 1.0};
Point(134) = {0.061721, -0.727699, 0, 1.0};
Point(135) = {0.058719, -0.727354, 0, 1.0};
Point(136) = {0.055437, -0.727043, 0, 1.0};
Point(137) = {0.051892, -0.726766, 0, 1.0};
Point(138) = {0.048097, -0.726542, 0, 1.0};
Point(139) = {0.044072, -0.726341, 0, 1.0};
Point(140) = {0.039838, -0.726146, 0, 1.0};
Point(141) = {0.035412, -0.725944, 0, 1.0};
Point(142) = {0.030818, -0.725718, 0, 1.0};
Point(143) = {0.026078, -0.725468, 0, 1.0};
Point(144) = {0.021209, -0.725192, 0, 1.0};
Point(145) = {0.016234, -0.724890, 0, 1.0};
Point(146) = {0.011177, -0.724549, 0, 1.0};
Point(147) = {0.006057, -0.724165, 0, 1.0};
Point(148) = {0.000900, -0.723743, 0, 1.0};
Point(149) = {-0.004274, -0.723286, 0, 1.0};
Point(150) = {-0.009444, -0.722798, 0, 1.0};
Point(151) = {-0.014586, -0.722277, 0, 1.0};
Point(152) = {-0.019680, -0.721725, 0, 1.0};
Point(153) = {-0.024700, -0.721141, 0, 1.0};
Point(154) = {-0.029628, -0.720528, 0, 1.0};
Point(155) = {-0.034442, -0.719891, 0, 1.0};
Point(156) = {-0.039122, -0.719243, 0, 1.0};
Point(157) = {-0.043649, -0.718581, 0, 1.0};
Point(158) = {-0.048004, -0.717910, 0, 1.0};
Point(159) = {-0.052164, -0.717228, 0, 1.0};
Point(160) = {-0.056117, -0.716548, 0, 1.0};
Point(161) = {-0.059845, -0.715882, 0, 1.0};
Point(162) = {-0.063334, -0.715232, 0, 1.0};
Point(163) = {-0.066568, -0.714608, 0, 1.0};
Point(164) = {-0.069532, -0.714011, 0, 1.0};
Point(165) = {-0.072218, -0.713449, 0, 1.0};
Point(166) = {-0.074252, -0.713003, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
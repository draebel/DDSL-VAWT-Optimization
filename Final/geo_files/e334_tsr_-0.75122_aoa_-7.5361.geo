SetFactory("OpenCASCADE");

Point(1) = {0.074190, 0.747948, 0, 1.0};
Point(2) = {0.072503, 0.748037, 0, 1.0};
Point(3) = {0.068347, 0.748189, 0, 1.0};
Point(4) = {0.063383, 0.748327, 0, 1.0};
Point(5) = {0.057689, 0.748483, 0, 1.0};
Point(6) = {0.051354, 0.748666, 0, 1.0};
Point(7) = {0.044476, 0.748882, 0, 1.0};
Point(8) = {0.037163, 0.749122, 0, 1.0};
Point(9) = {0.029521, 0.749373, 0, 1.0};
Point(10) = {0.021660, 0.749615, 0, 1.0};
Point(11) = {0.013687, 0.749821, 0, 1.0};
Point(12) = {0.005707, 0.749960, 0, 1.0};
Point(13) = {-0.002188, 0.750000, 0, 1.0};
Point(14) = {-0.009905, 0.749906, 0, 1.0};
Point(15) = {-0.017366, 0.749646, 0, 1.0};
Point(16) = {-0.024497, 0.749186, 0, 1.0};
Point(17) = {-0.031236, 0.748493, 0, 1.0};
Point(18) = {-0.037553, 0.747525, 0, 1.0};
Point(19) = {-0.043446, 0.746280, 0, 1.0};
Point(20) = {-0.048901, 0.744791, 0, 1.0};
Point(21) = {-0.053898, 0.743094, 0, 1.0};
Point(22) = {-0.058410, 0.741240, 0, 1.0};
Point(23) = {-0.062404, 0.739272, 0, 1.0};
Point(24) = {-0.065853, 0.737237, 0, 1.0};
Point(25) = {-0.068734, 0.735185, 0, 1.0};
Point(26) = {-0.071026, 0.733162, 0, 1.0};
Point(27) = {-0.072723, 0.731222, 0, 1.0};
Point(28) = {-0.073824, 0.729433, 0, 1.0};
Point(29) = {-0.074334, 0.727876, 0, 1.0};
Point(30) = {-0.074376, 0.727408, 0, 1.0};
Point(31) = {-0.074352, 0.727049, 0, 1.0};
Point(32) = {-0.074310, 0.726834, 0, 1.0};
Point(33) = {-0.074243, 0.726639, 0, 1.0};
Point(34) = {-0.074201, 0.726552, 0, 1.0};
Point(35) = {-0.074152, 0.726473, 0, 1.0};
Point(36) = {-0.074095, 0.726405, 0, 1.0};
Point(37) = {-0.074024, 0.726347, 0, 1.0};
Point(38) = {-0.073939, 0.726293, 0, 1.0};
Point(39) = {-0.073839, 0.726245, 0, 1.0};
Point(40) = {-0.073607, 0.726159, 0, 1.0};
Point(41) = {-0.073333, 0.726087, 0, 1.0};
Point(42) = {-0.072847, 0.726003, 0, 1.0};
Point(43) = {-0.071502, 0.725891, 0, 1.0};
Point(44) = {-0.068653, 0.725930, 0, 1.0};
Point(45) = {-0.064891, 0.726201, 0, 1.0};
Point(46) = {-0.060252, 0.726652, 0, 1.0};
Point(47) = {-0.054803, 0.727223, 0, 1.0};
Point(48) = {-0.048646, 0.727872, 0, 1.0};
Point(49) = {-0.041886, 0.728585, 0, 1.0};
Point(50) = {-0.034631, 0.729358, 0, 1.0};
Point(51) = {-0.026976, 0.730197, 0, 1.0};
Point(52) = {-0.019009, 0.731103, 0, 1.0};
Point(53) = {-0.010826, 0.732070, 0, 1.0};
Point(54) = {-0.002515, 0.733091, 0, 1.0};
Point(55) = {0.005824, 0.734158, 0, 1.0};
Point(56) = {0.014096, 0.735260, 0, 1.0};
Point(57) = {0.022208, 0.736392, 0, 1.0};
Point(58) = {0.030066, 0.737543, 0, 1.0};
Point(59) = {0.037577, 0.738710, 0, 1.0};
Point(60) = {0.044654, 0.739888, 0, 1.0};
Point(61) = {0.051209, 0.741095, 0, 1.0};
Point(62) = {0.057218, 0.742380, 0, 1.0};
Point(63) = {0.062728, 0.743699, 0, 1.0};
Point(64) = {0.067707, 0.744914, 0, 1.0};
Point(65) = {0.072043, 0.745929, 0, 1.0};
Point(66) = {0.074391, 0.746430, 0, 1.0};
Point(67) = {-0.074190, -0.747948, 0, 1.0};
Point(68) = {-0.072503, -0.748037, 0, 1.0};
Point(69) = {-0.068347, -0.748189, 0, 1.0};
Point(70) = {-0.063383, -0.748327, 0, 1.0};
Point(71) = {-0.057689, -0.748483, 0, 1.0};
Point(72) = {-0.051354, -0.748666, 0, 1.0};
Point(73) = {-0.044476, -0.748882, 0, 1.0};
Point(74) = {-0.037163, -0.749122, 0, 1.0};
Point(75) = {-0.029521, -0.749373, 0, 1.0};
Point(76) = {-0.021660, -0.749615, 0, 1.0};
Point(77) = {-0.013687, -0.749821, 0, 1.0};
Point(78) = {-0.005707, -0.749960, 0, 1.0};
Point(79) = {0.002188, -0.750000, 0, 1.0};
Point(80) = {0.009905, -0.749906, 0, 1.0};
Point(81) = {0.017366, -0.749646, 0, 1.0};
Point(82) = {0.024497, -0.749186, 0, 1.0};
Point(83) = {0.031236, -0.748493, 0, 1.0};
Point(84) = {0.037553, -0.747525, 0, 1.0};
Point(85) = {0.043446, -0.746280, 0, 1.0};
Point(86) = {0.048901, -0.744791, 0, 1.0};
Point(87) = {0.053898, -0.743094, 0, 1.0};
Point(88) = {0.058410, -0.741240, 0, 1.0};
Point(89) = {0.062404, -0.739272, 0, 1.0};
Point(90) = {0.065853, -0.737237, 0, 1.0};
Point(91) = {0.068734, -0.735185, 0, 1.0};
Point(92) = {0.071026, -0.733162, 0, 1.0};
Point(93) = {0.072723, -0.731222, 0, 1.0};
Point(94) = {0.073824, -0.729433, 0, 1.0};
Point(95) = {0.074334, -0.727876, 0, 1.0};
Point(96) = {0.074376, -0.727408, 0, 1.0};
Point(97) = {0.074352, -0.727049, 0, 1.0};
Point(98) = {0.074310, -0.726834, 0, 1.0};
Point(99) = {0.074243, -0.726639, 0, 1.0};
Point(100) = {0.074201, -0.726552, 0, 1.0};
Point(101) = {0.074152, -0.726473, 0, 1.0};
Point(102) = {0.074095, -0.726405, 0, 1.0};
Point(103) = {0.074024, -0.726347, 0, 1.0};
Point(104) = {0.073939, -0.726293, 0, 1.0};
Point(105) = {0.073839, -0.726245, 0, 1.0};
Point(106) = {0.073607, -0.726159, 0, 1.0};
Point(107) = {0.073333, -0.726087, 0, 1.0};
Point(108) = {0.072847, -0.726003, 0, 1.0};
Point(109) = {0.071502, -0.725891, 0, 1.0};
Point(110) = {0.068653, -0.725930, 0, 1.0};
Point(111) = {0.064891, -0.726201, 0, 1.0};
Point(112) = {0.060252, -0.726652, 0, 1.0};
Point(113) = {0.054803, -0.727223, 0, 1.0};
Point(114) = {0.048646, -0.727872, 0, 1.0};
Point(115) = {0.041886, -0.728585, 0, 1.0};
Point(116) = {0.034631, -0.729358, 0, 1.0};
Point(117) = {0.026976, -0.730197, 0, 1.0};
Point(118) = {0.019009, -0.731103, 0, 1.0};
Point(119) = {0.010826, -0.732070, 0, 1.0};
Point(120) = {0.002515, -0.733091, 0, 1.0};
Point(121) = {-0.005824, -0.734158, 0, 1.0};
Point(122) = {-0.014096, -0.735260, 0, 1.0};
Point(123) = {-0.022208, -0.736392, 0, 1.0};
Point(124) = {-0.030066, -0.737543, 0, 1.0};
Point(125) = {-0.037577, -0.738710, 0, 1.0};
Point(126) = {-0.044654, -0.739888, 0, 1.0};
Point(127) = {-0.051209, -0.741095, 0, 1.0};
Point(128) = {-0.057218, -0.742380, 0, 1.0};
Point(129) = {-0.062728, -0.743699, 0, 1.0};
Point(130) = {-0.067707, -0.744914, 0, 1.0};
Point(131) = {-0.072043, -0.745929, 0, 1.0};
Point(132) = {-0.074391, -0.746430, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {36.00000000, 15.00000000, 0, 1.0};
Point(136) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
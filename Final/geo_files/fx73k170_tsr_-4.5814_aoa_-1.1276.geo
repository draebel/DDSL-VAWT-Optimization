SetFactory("OpenCASCADE");

Point(1) = {0.074944, 0.733464, 0, 1.0};
Point(2) = {0.073562, 0.733784, 0, 1.0};
Point(3) = {0.071132, 0.734363, 0, 1.0};
Point(4) = {0.068411, 0.735025, 0, 1.0};
Point(5) = {0.065410, 0.735787, 0, 1.0};
Point(6) = {0.062139, 0.736655, 0, 1.0};
Point(7) = {0.058614, 0.737637, 0, 1.0};
Point(8) = {0.054850, 0.738729, 0, 1.0};
Point(9) = {0.050862, 0.739924, 0, 1.0};
Point(10) = {0.046669, 0.741206, 0, 1.0};
Point(11) = {0.042287, 0.742542, 0, 1.0};
Point(12) = {0.037738, 0.743875, 0, 1.0};
Point(13) = {0.033042, 0.745145, 0, 1.0};
Point(14) = {0.028220, 0.746286, 0, 1.0};
Point(15) = {0.023294, 0.747280, 0, 1.0};
Point(16) = {0.018283, 0.748139, 0, 1.0};
Point(17) = {0.013208, 0.748850, 0, 1.0};
Point(18) = {0.008094, 0.749406, 0, 1.0};
Point(19) = {0.002961, 0.749781, 0, 1.0};
Point(20) = {-0.002168, 0.749973, 0, 1.0};
Point(21) = {-0.007272, 0.750000, 0, 1.0};
Point(22) = {-0.012330, 0.749861, 0, 1.0};
Point(23) = {-0.017318, 0.749570, 0, 1.0};
Point(24) = {-0.022216, 0.749138, 0, 1.0};
Point(25) = {-0.027005, 0.748574, 0, 1.0};
Point(26) = {-0.031662, 0.747882, 0, 1.0};
Point(27) = {-0.036169, 0.747074, 0, 1.0};
Point(28) = {-0.040507, 0.746158, 0, 1.0};
Point(29) = {-0.044654, 0.745147, 0, 1.0};
Point(30) = {-0.048597, 0.744052, 0, 1.0};
Point(31) = {-0.052317, 0.742885, 0, 1.0};
Point(32) = {-0.055799, 0.741656, 0, 1.0};
Point(33) = {-0.059027, 0.740380, 0, 1.0};
Point(34) = {-0.061987, 0.739066, 0, 1.0};
Point(35) = {-0.064669, 0.737731, 0, 1.0};
Point(36) = {-0.067061, 0.736391, 0, 1.0};
Point(37) = {-0.069151, 0.735058, 0, 1.0};
Point(38) = {-0.070932, 0.733755, 0, 1.0};
Point(39) = {-0.072395, 0.732506, 0, 1.0};
Point(40) = {-0.073537, 0.731331, 0, 1.0};
Point(41) = {-0.074350, 0.730221, 0, 1.0};
Point(42) = {-0.074834, 0.729224, 0, 1.0};
Point(43) = {-0.074985, 0.728411, 0, 1.0};
Point(44) = {-0.074805, 0.727776, 0, 1.0};
Point(45) = {-0.074292, 0.727262, 0, 1.0};
Point(46) = {-0.073447, 0.726758, 0, 1.0};
Point(47) = {-0.072272, 0.726240, 0, 1.0};
Point(48) = {-0.070775, 0.725743, 0, 1.0};
Point(49) = {-0.068958, 0.725268, 0, 1.0};
Point(50) = {-0.066834, 0.724821, 0, 1.0};
Point(51) = {-0.064407, 0.724401, 0, 1.0};
Point(52) = {-0.061691, 0.724014, 0, 1.0};
Point(53) = {-0.058698, 0.723664, 0, 1.0};
Point(54) = {-0.055438, 0.723352, 0, 1.0};
Point(55) = {-0.051927, 0.723084, 0, 1.0};
Point(56) = {-0.048180, 0.722862, 0, 1.0};
Point(57) = {-0.044212, 0.722689, 0, 1.0};
Point(58) = {-0.040042, 0.722567, 0, 1.0};
Point(59) = {-0.035685, 0.722501, 0, 1.0};
Point(60) = {-0.031162, 0.722493, 0, 1.0};
Point(61) = {-0.026492, 0.722546, 0, 1.0};
Point(62) = {-0.021695, 0.722661, 0, 1.0};
Point(63) = {-0.016792, 0.722846, 0, 1.0};
Point(64) = {-0.011803, 0.723104, 0, 1.0};
Point(65) = {-0.006749, 0.723447, 0, 1.0};
Point(66) = {-0.001654, 0.723887, 0, 1.0};
Point(67) = {0.003460, 0.724430, 0, 1.0};
Point(68) = {0.008573, 0.725084, 0, 1.0};
Point(69) = {0.013661, 0.725845, 0, 1.0};
Point(70) = {0.018705, 0.726680, 0, 1.0};
Point(71) = {0.023682, 0.727538, 0, 1.0};
Point(72) = {0.028573, 0.728365, 0, 1.0};
Point(73) = {0.033358, 0.729123, 0, 1.0};
Point(74) = {0.038015, 0.729803, 0, 1.0};
Point(75) = {0.042527, 0.730393, 0, 1.0};
Point(76) = {0.046872, 0.730895, 0, 1.0};
Point(77) = {0.051032, 0.731308, 0, 1.0};
Point(78) = {0.054989, 0.731634, 0, 1.0};
Point(79) = {0.058727, 0.731873, 0, 1.0};
Point(80) = {0.062230, 0.732032, 0, 1.0};
Point(81) = {0.065483, 0.732114, 0, 1.0};
Point(82) = {0.068468, 0.732134, 0, 1.0};
Point(83) = {0.071177, 0.732098, 0, 1.0};
Point(84) = {0.073597, 0.732023, 0, 1.0};
Point(85) = {0.074974, 0.731961, 0, 1.0};
Point(86) = {-0.074944, -0.733464, 0, 1.0};
Point(87) = {-0.073562, -0.733784, 0, 1.0};
Point(88) = {-0.071132, -0.734363, 0, 1.0};
Point(89) = {-0.068411, -0.735025, 0, 1.0};
Point(90) = {-0.065410, -0.735787, 0, 1.0};
Point(91) = {-0.062139, -0.736655, 0, 1.0};
Point(92) = {-0.058614, -0.737637, 0, 1.0};
Point(93) = {-0.054850, -0.738729, 0, 1.0};
Point(94) = {-0.050862, -0.739924, 0, 1.0};
Point(95) = {-0.046669, -0.741206, 0, 1.0};
Point(96) = {-0.042287, -0.742542, 0, 1.0};
Point(97) = {-0.037738, -0.743875, 0, 1.0};
Point(98) = {-0.033042, -0.745145, 0, 1.0};
Point(99) = {-0.028220, -0.746286, 0, 1.0};
Point(100) = {-0.023294, -0.747280, 0, 1.0};
Point(101) = {-0.018283, -0.748139, 0, 1.0};
Point(102) = {-0.013208, -0.748850, 0, 1.0};
Point(103) = {-0.008094, -0.749406, 0, 1.0};
Point(104) = {-0.002961, -0.749781, 0, 1.0};
Point(105) = {0.002168, -0.749973, 0, 1.0};
Point(106) = {0.007272, -0.750000, 0, 1.0};
Point(107) = {0.012330, -0.749861, 0, 1.0};
Point(108) = {0.017318, -0.749570, 0, 1.0};
Point(109) = {0.022216, -0.749138, 0, 1.0};
Point(110) = {0.027005, -0.748574, 0, 1.0};
Point(111) = {0.031662, -0.747882, 0, 1.0};
Point(112) = {0.036169, -0.747074, 0, 1.0};
Point(113) = {0.040507, -0.746158, 0, 1.0};
Point(114) = {0.044654, -0.745147, 0, 1.0};
Point(115) = {0.048597, -0.744052, 0, 1.0};
Point(116) = {0.052317, -0.742885, 0, 1.0};
Point(117) = {0.055799, -0.741656, 0, 1.0};
Point(118) = {0.059027, -0.740380, 0, 1.0};
Point(119) = {0.061987, -0.739066, 0, 1.0};
Point(120) = {0.064669, -0.737731, 0, 1.0};
Point(121) = {0.067061, -0.736391, 0, 1.0};
Point(122) = {0.069151, -0.735058, 0, 1.0};
Point(123) = {0.070932, -0.733755, 0, 1.0};
Point(124) = {0.072395, -0.732506, 0, 1.0};
Point(125) = {0.073537, -0.731331, 0, 1.0};
Point(126) = {0.074350, -0.730221, 0, 1.0};
Point(127) = {0.074834, -0.729224, 0, 1.0};
Point(128) = {0.074985, -0.728411, 0, 1.0};
Point(129) = {0.074805, -0.727776, 0, 1.0};
Point(130) = {0.074292, -0.727262, 0, 1.0};
Point(131) = {0.073447, -0.726758, 0, 1.0};
Point(132) = {0.072272, -0.726240, 0, 1.0};
Point(133) = {0.070775, -0.725743, 0, 1.0};
Point(134) = {0.068958, -0.725268, 0, 1.0};
Point(135) = {0.066834, -0.724821, 0, 1.0};
Point(136) = {0.064407, -0.724401, 0, 1.0};
Point(137) = {0.061691, -0.724014, 0, 1.0};
Point(138) = {0.058698, -0.723664, 0, 1.0};
Point(139) = {0.055438, -0.723352, 0, 1.0};
Point(140) = {0.051927, -0.723084, 0, 1.0};
Point(141) = {0.048180, -0.722862, 0, 1.0};
Point(142) = {0.044212, -0.722689, 0, 1.0};
Point(143) = {0.040042, -0.722567, 0, 1.0};
Point(144) = {0.035685, -0.722501, 0, 1.0};
Point(145) = {0.031162, -0.722493, 0, 1.0};
Point(146) = {0.026492, -0.722546, 0, 1.0};
Point(147) = {0.021695, -0.722661, 0, 1.0};
Point(148) = {0.016792, -0.722846, 0, 1.0};
Point(149) = {0.011803, -0.723104, 0, 1.0};
Point(150) = {0.006749, -0.723447, 0, 1.0};
Point(151) = {0.001654, -0.723887, 0, 1.0};
Point(152) = {-0.003460, -0.724430, 0, 1.0};
Point(153) = {-0.008573, -0.725084, 0, 1.0};
Point(154) = {-0.013661, -0.725845, 0, 1.0};
Point(155) = {-0.018705, -0.726680, 0, 1.0};
Point(156) = {-0.023682, -0.727538, 0, 1.0};
Point(157) = {-0.028573, -0.728365, 0, 1.0};
Point(158) = {-0.033358, -0.729123, 0, 1.0};
Point(159) = {-0.038015, -0.729803, 0, 1.0};
Point(160) = {-0.042527, -0.730393, 0, 1.0};
Point(161) = {-0.046872, -0.730895, 0, 1.0};
Point(162) = {-0.051032, -0.731308, 0, 1.0};
Point(163) = {-0.054989, -0.731634, 0, 1.0};
Point(164) = {-0.058727, -0.731873, 0, 1.0};
Point(165) = {-0.062230, -0.732032, 0, 1.0};
Point(166) = {-0.065483, -0.732114, 0, 1.0};
Point(167) = {-0.068468, -0.732134, 0, 1.0};
Point(168) = {-0.071177, -0.732098, 0, 1.0};
Point(169) = {-0.073597, -0.732023, 0, 1.0};
Point(170) = {-0.074974, -0.731961, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149857, 0.742606, 0, 1.0};
Point(2) = {0.149172, 0.742674, 0, 1.0};
Point(3) = {0.147151, 0.742924, 0, 1.0};
Point(4) = {0.143876, 0.743358, 0, 1.0};
Point(5) = {0.139435, 0.743890, 0, 1.0};
Point(6) = {0.133901, 0.744469, 0, 1.0};
Point(7) = {0.127368, 0.745107, 0, 1.0};
Point(8) = {0.119957, 0.745785, 0, 1.0};
Point(9) = {0.111797, 0.746483, 0, 1.0};
Point(10) = {0.103028, 0.747177, 0, 1.0};
Point(11) = {0.093765, 0.747843, 0, 1.0};
Point(12) = {0.084042, 0.748458, 0, 1.0};
Point(13) = {0.073910, 0.749003, 0, 1.0};
Point(14) = {0.063494, 0.749453, 0, 1.0};
Point(15) = {0.052918, 0.749786, 0, 1.0};
Point(16) = {0.042303, 0.749976, 0, 1.0};
Point(17) = {0.031781, 0.750000, 0, 1.0};
Point(18) = {0.021469, 0.749844, 0, 1.0};
Point(19) = {0.011493, 0.749490, 0, 1.0};
Point(20) = {0.001965, 0.748935, 0, 1.0};
Point(21) = {-0.007006, 0.748173, 0, 1.0};
Point(22) = {-0.015318, 0.747208, 0, 1.0};
Point(23) = {-0.022885, 0.746051, 0, 1.0};
Point(24) = {-0.029630, 0.744835, 0, 1.0};
Point(25) = {-0.035484, 0.743445, 0, 1.0};
Point(26) = {-0.040392, 0.741944, 0, 1.0};
Point(27) = {-0.044321, 0.740354, 0, 1.0};
Point(28) = {-0.047243, 0.738702, 0, 1.0};
Point(29) = {-0.049145, 0.737029, 0, 1.0};
Point(30) = {-0.050000, 0.735039, 0, 1.0};
Point(31) = {-0.049022, 0.733795, 0, 1.0};
Point(32) = {-0.047022, 0.732871, 0, 1.0};
Point(33) = {-0.044008, 0.732086, 0, 1.0};
Point(34) = {-0.039995, 0.731461, 0, 1.0};
Point(35) = {-0.035013, 0.731009, 0, 1.0};
Point(36) = {-0.029096, 0.730723, 0, 1.0};
Point(37) = {-0.022300, 0.730602, 0, 1.0};
Point(38) = {-0.014690, 0.730630, 0, 1.0};
Point(39) = {-0.006348, 0.730802, 0, 1.0};
Point(40) = {0.002641, 0.731098, 0, 1.0};
Point(41) = {0.012174, 0.731503, 0, 1.0};
Point(42) = {0.022144, 0.732009, 0, 1.0};
Point(43) = {0.032440, 0.732594, 0, 1.0};
Point(44) = {0.042936, 0.733248, 0, 1.0};
Point(45) = {0.053517, 0.733959, 0, 1.0};
Point(46) = {0.064052, 0.734714, 0, 1.0};
Point(47) = {0.074421, 0.735511, 0, 1.0};
Point(48) = {0.084501, 0.736339, 0, 1.0};
Point(49) = {0.094167, 0.737225, 0, 1.0};
Point(50) = {0.103368, 0.738194, 0, 1.0};
Point(51) = {0.112073, 0.739182, 0, 1.0};
Point(52) = {0.120173, 0.740091, 0, 1.0};
Point(53) = {0.127528, 0.740872, 0, 1.0};
Point(54) = {0.134013, 0.741502, 0, 1.0};
Point(55) = {0.139507, 0.741976, 0, 1.0};
Point(56) = {0.143916, 0.742313, 0, 1.0};
Point(57) = {0.147166, 0.742516, 0, 1.0};
Point(58) = {0.149175, 0.742594, 0, 1.0};
Point(59) = {-0.149857, -0.742606, 0, 1.0};
Point(60) = {-0.149172, -0.742674, 0, 1.0};
Point(61) = {-0.147151, -0.742924, 0, 1.0};
Point(62) = {-0.143876, -0.743358, 0, 1.0};
Point(63) = {-0.139435, -0.743890, 0, 1.0};
Point(64) = {-0.133901, -0.744469, 0, 1.0};
Point(65) = {-0.127368, -0.745107, 0, 1.0};
Point(66) = {-0.119957, -0.745785, 0, 1.0};
Point(67) = {-0.111797, -0.746483, 0, 1.0};
Point(68) = {-0.103028, -0.747177, 0, 1.0};
Point(69) = {-0.093765, -0.747843, 0, 1.0};
Point(70) = {-0.084042, -0.748458, 0, 1.0};
Point(71) = {-0.073910, -0.749003, 0, 1.0};
Point(72) = {-0.063494, -0.749453, 0, 1.0};
Point(73) = {-0.052918, -0.749786, 0, 1.0};
Point(74) = {-0.042303, -0.749976, 0, 1.0};
Point(75) = {-0.031781, -0.750000, 0, 1.0};
Point(76) = {-0.021469, -0.749844, 0, 1.0};
Point(77) = {-0.011493, -0.749490, 0, 1.0};
Point(78) = {-0.001965, -0.748935, 0, 1.0};
Point(79) = {0.007006, -0.748173, 0, 1.0};
Point(80) = {0.015318, -0.747208, 0, 1.0};
Point(81) = {0.022885, -0.746051, 0, 1.0};
Point(82) = {0.029630, -0.744835, 0, 1.0};
Point(83) = {0.035484, -0.743445, 0, 1.0};
Point(84) = {0.040392, -0.741944, 0, 1.0};
Point(85) = {0.044321, -0.740354, 0, 1.0};
Point(86) = {0.047243, -0.738702, 0, 1.0};
Point(87) = {0.049145, -0.737029, 0, 1.0};
Point(88) = {0.050000, -0.735039, 0, 1.0};
Point(89) = {0.049022, -0.733795, 0, 1.0};
Point(90) = {0.047022, -0.732871, 0, 1.0};
Point(91) = {0.044008, -0.732086, 0, 1.0};
Point(92) = {0.039995, -0.731461, 0, 1.0};
Point(93) = {0.035013, -0.731009, 0, 1.0};
Point(94) = {0.029096, -0.730723, 0, 1.0};
Point(95) = {0.022300, -0.730602, 0, 1.0};
Point(96) = {0.014690, -0.730630, 0, 1.0};
Point(97) = {0.006348, -0.730802, 0, 1.0};
Point(98) = {-0.002641, -0.731098, 0, 1.0};
Point(99) = {-0.012174, -0.731503, 0, 1.0};
Point(100) = {-0.022144, -0.732009, 0, 1.0};
Point(101) = {-0.032440, -0.732594, 0, 1.0};
Point(102) = {-0.042936, -0.733248, 0, 1.0};
Point(103) = {-0.053517, -0.733959, 0, 1.0};
Point(104) = {-0.064052, -0.734714, 0, 1.0};
Point(105) = {-0.074421, -0.735511, 0, 1.0};
Point(106) = {-0.084501, -0.736339, 0, 1.0};
Point(107) = {-0.094167, -0.737225, 0, 1.0};
Point(108) = {-0.103368, -0.738194, 0, 1.0};
Point(109) = {-0.112073, -0.739182, 0, 1.0};
Point(110) = {-0.120173, -0.740091, 0, 1.0};
Point(111) = {-0.127528, -0.740872, 0, 1.0};
Point(112) = {-0.134013, -0.741502, 0, 1.0};
Point(113) = {-0.139507, -0.741976, 0, 1.0};
Point(114) = {-0.143916, -0.742313, 0, 1.0};
Point(115) = {-0.147166, -0.742516, 0, 1.0};
Point(116) = {-0.149175, -0.742594, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:78};
Spline(6) = {78:99};
Spline(7) = {99:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
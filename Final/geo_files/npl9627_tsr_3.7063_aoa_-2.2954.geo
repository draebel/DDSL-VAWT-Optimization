SetFactory("OpenCASCADE");

Point(1) = {0.074915, 0.745801, 0, 1.0};
Point(2) = {0.074675, 0.745829, 0, 1.0};
Point(3) = {0.073953, 0.745912, 0, 1.0};
Point(4) = {0.072757, 0.746047, 0, 1.0};
Point(5) = {0.071100, 0.746231, 0, 1.0};
Point(6) = {0.068996, 0.746458, 0, 1.0};
Point(7) = {0.066466, 0.746722, 0, 1.0};
Point(8) = {0.063537, 0.747016, 0, 1.0};
Point(9) = {0.060232, 0.747333, 0, 1.0};
Point(10) = {0.056589, 0.747665, 0, 1.0};
Point(11) = {0.052639, 0.748006, 0, 1.0};
Point(12) = {0.048421, 0.748346, 0, 1.0};
Point(13) = {0.043976, 0.748679, 0, 1.0};
Point(14) = {0.039348, 0.748996, 0, 1.0};
Point(15) = {0.034581, 0.749289, 0, 1.0};
Point(16) = {0.029720, 0.749549, 0, 1.0};
Point(17) = {0.024813, 0.749765, 0, 1.0};
Point(18) = {0.019908, 0.749927, 0, 1.0};
Point(19) = {0.015051, 0.750000, 0, 1.0};
Point(20) = {0.010291, 0.749987, 0, 1.0};
Point(21) = {0.005674, 0.749859, 0, 1.0};
Point(22) = {0.001243, 0.749634, 0, 1.0};
Point(23) = {-0.002959, 0.749305, 0, 1.0};
Point(24) = {-0.006891, 0.748881, 0, 1.0};
Point(25) = {-0.010513, 0.748345, 0, 1.0};
Point(26) = {-0.013795, 0.747723, 0, 1.0};
Point(27) = {-0.016700, 0.747019, 0, 1.0};
Point(28) = {-0.019206, 0.746283, 0, 1.0};
Point(29) = {-0.021287, 0.745543, 0, 1.0};
Point(30) = {-0.022919, 0.744657, 0, 1.0};
Point(31) = {-0.023561, 0.744201, 0, 1.0};
Point(32) = {-0.024088, 0.743708, 0, 1.0};
Point(33) = {-0.024245, 0.743532, 0, 1.0};
Point(34) = {-0.024390, 0.743345, 0, 1.0};
Point(35) = {-0.024536, 0.743150, 0, 1.0};
Point(36) = {-0.024679, 0.742889, 0, 1.0};
Point(37) = {-0.024784, 0.742693, 0, 1.0};
Point(38) = {-0.024860, 0.742510, 0, 1.0};
Point(39) = {-0.024916, 0.742337, 0, 1.0};
Point(40) = {-0.024961, 0.742144, 0, 1.0};
Point(41) = {-0.024987, 0.741969, 0, 1.0};
Point(42) = {-0.025000, 0.741670, 0, 1.0};
Point(43) = {-0.024974, 0.741429, 0, 1.0};
Point(44) = {-0.024941, 0.741289, 0, 1.0};
Point(45) = {-0.024887, 0.741136, 0, 1.0};
Point(46) = {-0.024824, 0.741002, 0, 1.0};
Point(47) = {-0.024740, 0.740864, 0, 1.0};
Point(48) = {-0.024627, 0.740732, 0, 1.0};
Point(49) = {-0.024474, 0.740590, 0, 1.0};
Point(50) = {-0.024321, 0.740449, 0, 1.0};
Point(51) = {-0.024168, 0.740333, 0, 1.0};
Point(52) = {-0.024004, 0.740237, 0, 1.0};
Point(53) = {-0.023458, 0.739929, 0, 1.0};
Point(54) = {-0.022798, 0.739667, 0, 1.0};
Point(55) = {-0.021133, 0.739159, 0, 1.0};
Point(56) = {-0.019022, 0.738651, 0, 1.0};
Point(57) = {-0.016488, 0.738195, 0, 1.0};
Point(58) = {-0.013557, 0.737837, 0, 1.0};
Point(59) = {-0.010254, 0.737589, 0, 1.0};
Point(60) = {-0.006615, 0.737450, 0, 1.0};
Point(61) = {-0.002673, 0.737424, 0, 1.0};
Point(62) = {0.001534, 0.737508, 0, 1.0};
Point(63) = {0.005967, 0.737701, 0, 1.0};
Point(64) = {0.010580, 0.737991, 0, 1.0};
Point(65) = {0.015331, 0.738364, 0, 1.0};
Point(66) = {0.020176, 0.738756, 0, 1.0};
Point(67) = {0.025068, 0.739180, 0, 1.0};
Point(68) = {0.029959, 0.739632, 0, 1.0};
Point(69) = {0.034802, 0.740125, 0, 1.0};
Point(70) = {0.039549, 0.740647, 0, 1.0};
Point(71) = {0.044157, 0.741187, 0, 1.0};
Point(72) = {0.048580, 0.741732, 0, 1.0};
Point(73) = {0.052777, 0.742275, 0, 1.0};
Point(74) = {0.056706, 0.742806, 0, 1.0};
Point(75) = {0.060329, 0.743312, 0, 1.0};
Point(76) = {0.063614, 0.743789, 0, 1.0};
Point(77) = {0.066526, 0.744223, 0, 1.0};
Point(78) = {0.069040, 0.744608, 0, 1.0};
Point(79) = {0.071131, 0.744936, 0, 1.0};
Point(80) = {0.072778, 0.745199, 0, 1.0};
Point(81) = {0.073965, 0.745392, 0, 1.0};
Point(82) = {0.074683, 0.745509, 0, 1.0};
Point(83) = {0.074925, 0.745549, 0, 1.0};
Point(84) = {-0.074915, -0.745801, 0, 1.0};
Point(85) = {-0.074675, -0.745829, 0, 1.0};
Point(86) = {-0.073953, -0.745912, 0, 1.0};
Point(87) = {-0.072757, -0.746047, 0, 1.0};
Point(88) = {-0.071100, -0.746231, 0, 1.0};
Point(89) = {-0.068996, -0.746458, 0, 1.0};
Point(90) = {-0.066466, -0.746722, 0, 1.0};
Point(91) = {-0.063537, -0.747016, 0, 1.0};
Point(92) = {-0.060232, -0.747333, 0, 1.0};
Point(93) = {-0.056589, -0.747665, 0, 1.0};
Point(94) = {-0.052639, -0.748006, 0, 1.0};
Point(95) = {-0.048421, -0.748346, 0, 1.0};
Point(96) = {-0.043976, -0.748679, 0, 1.0};
Point(97) = {-0.039348, -0.748996, 0, 1.0};
Point(98) = {-0.034581, -0.749289, 0, 1.0};
Point(99) = {-0.029720, -0.749549, 0, 1.0};
Point(100) = {-0.024813, -0.749765, 0, 1.0};
Point(101) = {-0.019908, -0.749927, 0, 1.0};
Point(102) = {-0.015051, -0.750000, 0, 1.0};
Point(103) = {-0.010291, -0.749987, 0, 1.0};
Point(104) = {-0.005674, -0.749859, 0, 1.0};
Point(105) = {-0.001243, -0.749634, 0, 1.0};
Point(106) = {0.002959, -0.749305, 0, 1.0};
Point(107) = {0.006891, -0.748881, 0, 1.0};
Point(108) = {0.010513, -0.748345, 0, 1.0};
Point(109) = {0.013795, -0.747723, 0, 1.0};
Point(110) = {0.016700, -0.747019, 0, 1.0};
Point(111) = {0.019206, -0.746283, 0, 1.0};
Point(112) = {0.021287, -0.745543, 0, 1.0};
Point(113) = {0.022919, -0.744657, 0, 1.0};
Point(114) = {0.023561, -0.744201, 0, 1.0};
Point(115) = {0.024088, -0.743708, 0, 1.0};
Point(116) = {0.024245, -0.743532, 0, 1.0};
Point(117) = {0.024390, -0.743345, 0, 1.0};
Point(118) = {0.024536, -0.743150, 0, 1.0};
Point(119) = {0.024679, -0.742889, 0, 1.0};
Point(120) = {0.024784, -0.742693, 0, 1.0};
Point(121) = {0.024860, -0.742510, 0, 1.0};
Point(122) = {0.024916, -0.742337, 0, 1.0};
Point(123) = {0.024961, -0.742144, 0, 1.0};
Point(124) = {0.024987, -0.741969, 0, 1.0};
Point(125) = {0.025000, -0.741670, 0, 1.0};
Point(126) = {0.024974, -0.741429, 0, 1.0};
Point(127) = {0.024941, -0.741289, 0, 1.0};
Point(128) = {0.024887, -0.741136, 0, 1.0};
Point(129) = {0.024824, -0.741002, 0, 1.0};
Point(130) = {0.024740, -0.740864, 0, 1.0};
Point(131) = {0.024627, -0.740732, 0, 1.0};
Point(132) = {0.024474, -0.740590, 0, 1.0};
Point(133) = {0.024321, -0.740449, 0, 1.0};
Point(134) = {0.024168, -0.740333, 0, 1.0};
Point(135) = {0.024004, -0.740237, 0, 1.0};
Point(136) = {0.023458, -0.739929, 0, 1.0};
Point(137) = {0.022798, -0.739667, 0, 1.0};
Point(138) = {0.021133, -0.739159, 0, 1.0};
Point(139) = {0.019022, -0.738651, 0, 1.0};
Point(140) = {0.016488, -0.738195, 0, 1.0};
Point(141) = {0.013557, -0.737837, 0, 1.0};
Point(142) = {0.010254, -0.737589, 0, 1.0};
Point(143) = {0.006615, -0.737450, 0, 1.0};
Point(144) = {0.002673, -0.737424, 0, 1.0};
Point(145) = {-0.001534, -0.737508, 0, 1.0};
Point(146) = {-0.005967, -0.737701, 0, 1.0};
Point(147) = {-0.010580, -0.737991, 0, 1.0};
Point(148) = {-0.015331, -0.738364, 0, 1.0};
Point(149) = {-0.020176, -0.738756, 0, 1.0};
Point(150) = {-0.025068, -0.739180, 0, 1.0};
Point(151) = {-0.029959, -0.739632, 0, 1.0};
Point(152) = {-0.034802, -0.740125, 0, 1.0};
Point(153) = {-0.039549, -0.740647, 0, 1.0};
Point(154) = {-0.044157, -0.741187, 0, 1.0};
Point(155) = {-0.048580, -0.741732, 0, 1.0};
Point(156) = {-0.052777, -0.742275, 0, 1.0};
Point(157) = {-0.056706, -0.742806, 0, 1.0};
Point(158) = {-0.060329, -0.743312, 0, 1.0};
Point(159) = {-0.063614, -0.743789, 0, 1.0};
Point(160) = {-0.066526, -0.744223, 0, 1.0};
Point(161) = {-0.069040, -0.744608, 0, 1.0};
Point(162) = {-0.071131, -0.744936, 0, 1.0};
Point(163) = {-0.072778, -0.745199, 0, 1.0};
Point(164) = {-0.073965, -0.745392, 0, 1.0};
Point(165) = {-0.074683, -0.745509, 0, 1.0};
Point(166) = {-0.074925, -0.745549, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
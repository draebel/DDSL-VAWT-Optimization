SetFactory("OpenCASCADE");

Point(1) = {0.074932, 0.743702, 0, 1.0};
Point(2) = {0.074573, 0.743744, 0, 1.0};
Point(3) = {0.073490, 0.743868, 0, 1.0};
Point(4) = {0.071696, 0.744071, 0, 1.0};
Point(5) = {0.069210, 0.744347, 0, 1.0};
Point(6) = {0.066054, 0.744687, 0, 1.0};
Point(7) = {0.062260, 0.745083, 0, 1.0};
Point(8) = {0.057865, 0.745524, 0, 1.0};
Point(9) = {0.052909, 0.746000, 0, 1.0};
Point(10) = {0.047444, 0.746497, 0, 1.0};
Point(11) = {0.041519, 0.747009, 0, 1.0};
Point(12) = {0.035192, 0.747520, 0, 1.0};
Point(13) = {0.028525, 0.748018, 0, 1.0};
Point(14) = {0.021582, 0.748494, 0, 1.0};
Point(15) = {0.014432, 0.748933, 0, 1.0};
Point(16) = {0.007141, 0.749323, 0, 1.0};
Point(17) = {-0.000220, 0.749647, 0, 1.0};
Point(18) = {-0.007579, 0.749890, 0, 1.0};
Point(19) = {-0.014863, 0.750000, 0, 1.0};
Point(20) = {-0.022003, 0.749981, 0, 1.0};
Point(21) = {-0.028929, 0.749789, 0, 1.0};
Point(22) = {-0.035576, 0.749450, 0, 1.0};
Point(23) = {-0.041879, 0.748957, 0, 1.0};
Point(24) = {-0.047776, 0.748321, 0, 1.0};
Point(25) = {-0.053210, 0.747518, 0, 1.0};
Point(26) = {-0.058132, 0.746585, 0, 1.0};
Point(27) = {-0.062490, 0.745529, 0, 1.0};
Point(28) = {-0.066249, 0.744424, 0, 1.0};
Point(29) = {-0.069370, 0.743315, 0, 1.0};
Point(30) = {-0.071818, 0.741985, 0, 1.0};
Point(31) = {-0.072781, 0.741302, 0, 1.0};
Point(32) = {-0.073572, 0.740561, 0, 1.0};
Point(33) = {-0.073807, 0.740298, 0, 1.0};
Point(34) = {-0.074025, 0.740018, 0, 1.0};
Point(35) = {-0.074243, 0.739724, 0, 1.0};
Point(36) = {-0.074459, 0.739334, 0, 1.0};
Point(37) = {-0.074615, 0.739039, 0, 1.0};
Point(38) = {-0.074730, 0.738764, 0, 1.0};
Point(39) = {-0.074814, 0.738506, 0, 1.0};
Point(40) = {-0.074882, 0.738216, 0, 1.0};
Point(41) = {-0.074921, 0.737954, 0, 1.0};
Point(42) = {-0.074940, 0.737505, 0, 1.0};
Point(43) = {-0.074901, 0.737143, 0, 1.0};
Point(44) = {-0.074851, 0.736934, 0, 1.0};
Point(45) = {-0.074770, 0.736703, 0, 1.0};
Point(46) = {-0.074676, 0.736503, 0, 1.0};
Point(47) = {-0.074549, 0.736296, 0, 1.0};
Point(48) = {-0.074381, 0.736098, 0, 1.0};
Point(49) = {-0.074151, 0.735886, 0, 1.0};
Point(50) = {-0.073921, 0.735674, 0, 1.0};
Point(51) = {-0.073691, 0.735499, 0, 1.0};
Point(52) = {-0.073446, 0.735355, 0, 1.0};
Point(53) = {-0.072627, 0.734893, 0, 1.0};
Point(54) = {-0.071637, 0.734501, 0, 1.0};
Point(55) = {-0.069139, 0.733739, 0, 1.0};
Point(56) = {-0.065973, 0.732977, 0, 1.0};
Point(57) = {-0.062172, 0.732292, 0, 1.0};
Point(58) = {-0.057775, 0.731756, 0, 1.0};
Point(59) = {-0.052821, 0.731383, 0, 1.0};
Point(60) = {-0.047363, 0.731175, 0, 1.0};
Point(61) = {-0.041450, 0.731136, 0, 1.0};
Point(62) = {-0.035138, 0.731262, 0, 1.0};
Point(63) = {-0.028490, 0.731551, 0, 1.0};
Point(64) = {-0.021569, 0.731987, 0, 1.0};
Point(65) = {-0.014443, 0.732547, 0, 1.0};
Point(66) = {-0.007175, 0.733134, 0, 1.0};
Point(67) = {0.000162, 0.733770, 0, 1.0};
Point(68) = {0.007499, 0.734447, 0, 1.0};
Point(69) = {0.014763, 0.735188, 0, 1.0};
Point(70) = {0.021884, 0.735970, 0, 1.0};
Point(71) = {0.028795, 0.736780, 0, 1.0};
Point(72) = {0.035431, 0.737598, 0, 1.0};
Point(73) = {0.041726, 0.738413, 0, 1.0};
Point(74) = {0.047619, 0.739209, 0, 1.0};
Point(75) = {0.053054, 0.739969, 0, 1.0};
Point(76) = {0.057982, 0.740683, 0, 1.0};
Point(77) = {0.062350, 0.741334, 0, 1.0};
Point(78) = {0.066121, 0.741913, 0, 1.0};
Point(79) = {0.069257, 0.742404, 0, 1.0};
Point(80) = {0.071727, 0.742799, 0, 1.0};
Point(81) = {0.073508, 0.743088, 0, 1.0};
Point(82) = {0.074584, 0.743264, 0, 1.0};
Point(83) = {0.074947, 0.743324, 0, 1.0};
Point(84) = {-0.074932, -0.743702, 0, 1.0};
Point(85) = {-0.074573, -0.743744, 0, 1.0};
Point(86) = {-0.073490, -0.743868, 0, 1.0};
Point(87) = {-0.071696, -0.744071, 0, 1.0};
Point(88) = {-0.069210, -0.744347, 0, 1.0};
Point(89) = {-0.066054, -0.744687, 0, 1.0};
Point(90) = {-0.062260, -0.745083, 0, 1.0};
Point(91) = {-0.057865, -0.745524, 0, 1.0};
Point(92) = {-0.052909, -0.746000, 0, 1.0};
Point(93) = {-0.047444, -0.746497, 0, 1.0};
Point(94) = {-0.041519, -0.747009, 0, 1.0};
Point(95) = {-0.035192, -0.747520, 0, 1.0};
Point(96) = {-0.028525, -0.748018, 0, 1.0};
Point(97) = {-0.021582, -0.748494, 0, 1.0};
Point(98) = {-0.014432, -0.748933, 0, 1.0};
Point(99) = {-0.007141, -0.749323, 0, 1.0};
Point(100) = {0.000220, -0.749647, 0, 1.0};
Point(101) = {0.007579, -0.749890, 0, 1.0};
Point(102) = {0.014863, -0.750000, 0, 1.0};
Point(103) = {0.022003, -0.749981, 0, 1.0};
Point(104) = {0.028929, -0.749789, 0, 1.0};
Point(105) = {0.035576, -0.749450, 0, 1.0};
Point(106) = {0.041879, -0.748957, 0, 1.0};
Point(107) = {0.047776, -0.748321, 0, 1.0};
Point(108) = {0.053210, -0.747518, 0, 1.0};
Point(109) = {0.058132, -0.746585, 0, 1.0};
Point(110) = {0.062490, -0.745529, 0, 1.0};
Point(111) = {0.066249, -0.744424, 0, 1.0};
Point(112) = {0.069370, -0.743315, 0, 1.0};
Point(113) = {0.071818, -0.741985, 0, 1.0};
Point(114) = {0.072781, -0.741302, 0, 1.0};
Point(115) = {0.073572, -0.740561, 0, 1.0};
Point(116) = {0.073807, -0.740298, 0, 1.0};
Point(117) = {0.074025, -0.740018, 0, 1.0};
Point(118) = {0.074243, -0.739724, 0, 1.0};
Point(119) = {0.074459, -0.739334, 0, 1.0};
Point(120) = {0.074615, -0.739039, 0, 1.0};
Point(121) = {0.074730, -0.738764, 0, 1.0};
Point(122) = {0.074814, -0.738506, 0, 1.0};
Point(123) = {0.074882, -0.738216, 0, 1.0};
Point(124) = {0.074921, -0.737954, 0, 1.0};
Point(125) = {0.074940, -0.737505, 0, 1.0};
Point(126) = {0.074901, -0.737143, 0, 1.0};
Point(127) = {0.074851, -0.736934, 0, 1.0};
Point(128) = {0.074770, -0.736703, 0, 1.0};
Point(129) = {0.074676, -0.736503, 0, 1.0};
Point(130) = {0.074549, -0.736296, 0, 1.0};
Point(131) = {0.074381, -0.736098, 0, 1.0};
Point(132) = {0.074151, -0.735886, 0, 1.0};
Point(133) = {0.073921, -0.735674, 0, 1.0};
Point(134) = {0.073691, -0.735499, 0, 1.0};
Point(135) = {0.073446, -0.735355, 0, 1.0};
Point(136) = {0.072627, -0.734893, 0, 1.0};
Point(137) = {0.071637, -0.734501, 0, 1.0};
Point(138) = {0.069139, -0.733739, 0, 1.0};
Point(139) = {0.065973, -0.732977, 0, 1.0};
Point(140) = {0.062172, -0.732292, 0, 1.0};
Point(141) = {0.057775, -0.731756, 0, 1.0};
Point(142) = {0.052821, -0.731383, 0, 1.0};
Point(143) = {0.047363, -0.731175, 0, 1.0};
Point(144) = {0.041450, -0.731136, 0, 1.0};
Point(145) = {0.035138, -0.731262, 0, 1.0};
Point(146) = {0.028490, -0.731551, 0, 1.0};
Point(147) = {0.021569, -0.731987, 0, 1.0};
Point(148) = {0.014443, -0.732547, 0, 1.0};
Point(149) = {0.007175, -0.733134, 0, 1.0};
Point(150) = {-0.000162, -0.733770, 0, 1.0};
Point(151) = {-0.007499, -0.734447, 0, 1.0};
Point(152) = {-0.014763, -0.735188, 0, 1.0};
Point(153) = {-0.021884, -0.735970, 0, 1.0};
Point(154) = {-0.028795, -0.736780, 0, 1.0};
Point(155) = {-0.035431, -0.737598, 0, 1.0};
Point(156) = {-0.041726, -0.738413, 0, 1.0};
Point(157) = {-0.047619, -0.739209, 0, 1.0};
Point(158) = {-0.053054, -0.739969, 0, 1.0};
Point(159) = {-0.057982, -0.740683, 0, 1.0};
Point(160) = {-0.062350, -0.741334, 0, 1.0};
Point(161) = {-0.066121, -0.741913, 0, 1.0};
Point(162) = {-0.069257, -0.742404, 0, 1.0};
Point(163) = {-0.071727, -0.742799, 0, 1.0};
Point(164) = {-0.073508, -0.743088, 0, 1.0};
Point(165) = {-0.074584, -0.743264, 0, 1.0};
Point(166) = {-0.074947, -0.743324, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
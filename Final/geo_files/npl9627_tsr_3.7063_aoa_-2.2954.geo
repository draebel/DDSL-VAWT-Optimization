SetFactory("OpenCASCADE");

Point(1) = {0.149829, 0.741602, 0, 1.0};
Point(2) = {0.149350, 0.741659, 0, 1.0};
Point(3) = {0.147906, 0.741824, 0, 1.0};
Point(4) = {0.145515, 0.742094, 0, 1.0};
Point(5) = {0.142199, 0.742463, 0, 1.0};
Point(6) = {0.137992, 0.742916, 0, 1.0};
Point(7) = {0.132933, 0.743444, 0, 1.0};
Point(8) = {0.127073, 0.744031, 0, 1.0};
Point(9) = {0.120465, 0.744666, 0, 1.0};
Point(10) = {0.113178, 0.745329, 0, 1.0};
Point(11) = {0.105278, 0.746011, 0, 1.0};
Point(12) = {0.096842, 0.746693, 0, 1.0};
Point(13) = {0.087953, 0.747357, 0, 1.0};
Point(14) = {0.078696, 0.747993, 0, 1.0};
Point(15) = {0.069163, 0.748577, 0, 1.0};
Point(16) = {0.059441, 0.749098, 0, 1.0};
Point(17) = {0.049627, 0.749530, 0, 1.0};
Point(18) = {0.039815, 0.749854, 0, 1.0};
Point(19) = {0.030102, 0.750000, 0, 1.0};
Point(20) = {0.020583, 0.749975, 0, 1.0};
Point(21) = {0.011348, 0.749719, 0, 1.0};
Point(22) = {0.002485, 0.749267, 0, 1.0};
Point(23) = {-0.005918, 0.748609, 0, 1.0};
Point(24) = {-0.013781, 0.747762, 0, 1.0};
Point(25) = {-0.021027, 0.746691, 0, 1.0};
Point(26) = {-0.027590, 0.745447, 0, 1.0};
Point(27) = {-0.033401, 0.744038, 0, 1.0};
Point(28) = {-0.038412, 0.742566, 0, 1.0};
Point(29) = {-0.042573, 0.741087, 0, 1.0};
Point(30) = {-0.045837, 0.739314, 0, 1.0};
Point(31) = {-0.047121, 0.738403, 0, 1.0};
Point(32) = {-0.048176, 0.737415, 0, 1.0};
Point(33) = {-0.048489, 0.737064, 0, 1.0};
Point(34) = {-0.048780, 0.736690, 0, 1.0};
Point(35) = {-0.049071, 0.736299, 0, 1.0};
Point(36) = {-0.049359, 0.735778, 0, 1.0};
Point(37) = {-0.049567, 0.735385, 0, 1.0};
Point(38) = {-0.049720, 0.735019, 0, 1.0};
Point(39) = {-0.049832, 0.734674, 0, 1.0};
Point(40) = {-0.049923, 0.734288, 0, 1.0};
Point(41) = {-0.049974, 0.733939, 0, 1.0};
Point(42) = {-0.050000, 0.733340, 0, 1.0};
Point(43) = {-0.049948, 0.732857, 0, 1.0};
Point(44) = {-0.049882, 0.732579, 0, 1.0};
Point(45) = {-0.049774, 0.732271, 0, 1.0};
Point(46) = {-0.049648, 0.732004, 0, 1.0};
Point(47) = {-0.049479, 0.731728, 0, 1.0};
Point(48) = {-0.049255, 0.731463, 0, 1.0};
Point(49) = {-0.048948, 0.731181, 0, 1.0};
Point(50) = {-0.048641, 0.730898, 0, 1.0};
Point(51) = {-0.048335, 0.730665, 0, 1.0};
Point(52) = {-0.048009, 0.730473, 0, 1.0};
Point(53) = {-0.046916, 0.729857, 0, 1.0};
Point(54) = {-0.045597, 0.729335, 0, 1.0};
Point(55) = {-0.042266, 0.728319, 0, 1.0};
Point(56) = {-0.038045, 0.727302, 0, 1.0};
Point(57) = {-0.032976, 0.726390, 0, 1.0};
Point(58) = {-0.027114, 0.725675, 0, 1.0};
Point(59) = {-0.020509, 0.725177, 0, 1.0};
Point(60) = {-0.013231, 0.724900, 0, 1.0};
Point(61) = {-0.005346, 0.724848, 0, 1.0};
Point(62) = {0.003069, 0.725016, 0, 1.0};
Point(63) = {0.011933, 0.725402, 0, 1.0};
Point(64) = {0.021161, 0.725982, 0, 1.0};
Point(65) = {0.030662, 0.726729, 0, 1.0};
Point(66) = {0.040353, 0.727512, 0, 1.0};
Point(67) = {0.050136, 0.728360, 0, 1.0};
Point(68) = {0.059918, 0.729263, 0, 1.0};
Point(69) = {0.069604, 0.730251, 0, 1.0};
Point(70) = {0.079098, 0.731294, 0, 1.0};
Point(71) = {0.088314, 0.732373, 0, 1.0};
Point(72) = {0.097161, 0.733465, 0, 1.0};
Point(73) = {0.105554, 0.734551, 0, 1.0};
Point(74) = {0.113412, 0.735612, 0, 1.0};
Point(75) = {0.120659, 0.736625, 0, 1.0};
Point(76) = {0.127229, 0.737577, 0, 1.0};
Point(77) = {0.133053, 0.738446, 0, 1.0};
Point(78) = {0.138081, 0.739217, 0, 1.0};
Point(79) = {0.142262, 0.739872, 0, 1.0};
Point(80) = {0.145556, 0.740399, 0, 1.0};
Point(81) = {0.147931, 0.740784, 0, 1.0};
Point(82) = {0.149365, 0.741019, 0, 1.0};
Point(83) = {0.149850, 0.741098, 0, 1.0};
Point(84) = {-0.149829, -0.741602, 0, 1.0};
Point(85) = {-0.149350, -0.741659, 0, 1.0};
Point(86) = {-0.147906, -0.741824, 0, 1.0};
Point(87) = {-0.145515, -0.742094, 0, 1.0};
Point(88) = {-0.142199, -0.742463, 0, 1.0};
Point(89) = {-0.137992, -0.742916, 0, 1.0};
Point(90) = {-0.132933, -0.743444, 0, 1.0};
Point(91) = {-0.127073, -0.744031, 0, 1.0};
Point(92) = {-0.120465, -0.744666, 0, 1.0};
Point(93) = {-0.113178, -0.745329, 0, 1.0};
Point(94) = {-0.105278, -0.746011, 0, 1.0};
Point(95) = {-0.096842, -0.746693, 0, 1.0};
Point(96) = {-0.087953, -0.747357, 0, 1.0};
Point(97) = {-0.078696, -0.747993, 0, 1.0};
Point(98) = {-0.069163, -0.748577, 0, 1.0};
Point(99) = {-0.059441, -0.749098, 0, 1.0};
Point(100) = {-0.049627, -0.749530, 0, 1.0};
Point(101) = {-0.039815, -0.749854, 0, 1.0};
Point(102) = {-0.030102, -0.750000, 0, 1.0};
Point(103) = {-0.020583, -0.749975, 0, 1.0};
Point(104) = {-0.011348, -0.749719, 0, 1.0};
Point(105) = {-0.002485, -0.749267, 0, 1.0};
Point(106) = {0.005918, -0.748609, 0, 1.0};
Point(107) = {0.013781, -0.747762, 0, 1.0};
Point(108) = {0.021027, -0.746691, 0, 1.0};
Point(109) = {0.027590, -0.745447, 0, 1.0};
Point(110) = {0.033401, -0.744038, 0, 1.0};
Point(111) = {0.038412, -0.742566, 0, 1.0};
Point(112) = {0.042573, -0.741087, 0, 1.0};
Point(113) = {0.045837, -0.739314, 0, 1.0};
Point(114) = {0.047121, -0.738403, 0, 1.0};
Point(115) = {0.048176, -0.737415, 0, 1.0};
Point(116) = {0.048489, -0.737064, 0, 1.0};
Point(117) = {0.048780, -0.736690, 0, 1.0};
Point(118) = {0.049071, -0.736299, 0, 1.0};
Point(119) = {0.049359, -0.735778, 0, 1.0};
Point(120) = {0.049567, -0.735385, 0, 1.0};
Point(121) = {0.049720, -0.735019, 0, 1.0};
Point(122) = {0.049832, -0.734674, 0, 1.0};
Point(123) = {0.049923, -0.734288, 0, 1.0};
Point(124) = {0.049974, -0.733939, 0, 1.0};
Point(125) = {0.050000, -0.733340, 0, 1.0};
Point(126) = {0.049948, -0.732857, 0, 1.0};
Point(127) = {0.049882, -0.732579, 0, 1.0};
Point(128) = {0.049774, -0.732271, 0, 1.0};
Point(129) = {0.049648, -0.732004, 0, 1.0};
Point(130) = {0.049479, -0.731728, 0, 1.0};
Point(131) = {0.049255, -0.731463, 0, 1.0};
Point(132) = {0.048948, -0.731181, 0, 1.0};
Point(133) = {0.048641, -0.730898, 0, 1.0};
Point(134) = {0.048335, -0.730665, 0, 1.0};
Point(135) = {0.048009, -0.730473, 0, 1.0};
Point(136) = {0.046916, -0.729857, 0, 1.0};
Point(137) = {0.045597, -0.729335, 0, 1.0};
Point(138) = {0.042266, -0.728319, 0, 1.0};
Point(139) = {0.038045, -0.727302, 0, 1.0};
Point(140) = {0.032976, -0.726390, 0, 1.0};
Point(141) = {0.027114, -0.725675, 0, 1.0};
Point(142) = {0.020509, -0.725177, 0, 1.0};
Point(143) = {0.013231, -0.724900, 0, 1.0};
Point(144) = {0.005346, -0.724848, 0, 1.0};
Point(145) = {-0.003069, -0.725016, 0, 1.0};
Point(146) = {-0.011933, -0.725402, 0, 1.0};
Point(147) = {-0.021161, -0.725982, 0, 1.0};
Point(148) = {-0.030662, -0.726729, 0, 1.0};
Point(149) = {-0.040353, -0.727512, 0, 1.0};
Point(150) = {-0.050136, -0.728360, 0, 1.0};
Point(151) = {-0.059918, -0.729263, 0, 1.0};
Point(152) = {-0.069604, -0.730251, 0, 1.0};
Point(153) = {-0.079098, -0.731294, 0, 1.0};
Point(154) = {-0.088314, -0.732373, 0, 1.0};
Point(155) = {-0.097161, -0.733465, 0, 1.0};
Point(156) = {-0.105554, -0.734551, 0, 1.0};
Point(157) = {-0.113412, -0.735612, 0, 1.0};
Point(158) = {-0.120659, -0.736625, 0, 1.0};
Point(159) = {-0.127229, -0.737577, 0, 1.0};
Point(160) = {-0.133053, -0.738446, 0, 1.0};
Point(161) = {-0.138081, -0.739217, 0, 1.0};
Point(162) = {-0.142262, -0.739872, 0, 1.0};
Point(163) = {-0.145556, -0.740399, 0, 1.0};
Point(164) = {-0.147931, -0.740784, 0, 1.0};
Point(165) = {-0.149365, -0.741019, 0, 1.0};
Point(166) = {-0.149850, -0.741098, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
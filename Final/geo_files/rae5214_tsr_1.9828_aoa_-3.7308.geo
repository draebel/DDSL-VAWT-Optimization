SetFactory("OpenCASCADE");

Point(1) = {0.074788, 0.747712, 0, 1.0};
Point(2) = {0.074545, 0.747730, 0, 1.0};
Point(3) = {0.073820, 0.747782, 0, 1.0};
Point(4) = {0.072620, 0.747873, 0, 1.0};
Point(5) = {0.070954, 0.748025, 0, 1.0};
Point(6) = {0.068840, 0.748196, 0, 1.0};
Point(7) = {0.066299, 0.748397, 0, 1.0};
Point(8) = {0.063356, 0.748611, 0, 1.0};
Point(9) = {0.060038, 0.748848, 0, 1.0};
Point(10) = {0.056379, 0.749098, 0, 1.0};
Point(11) = {0.052414, 0.749341, 0, 1.0};
Point(12) = {0.048181, 0.749570, 0, 1.0};
Point(13) = {0.043723, 0.749766, 0, 1.0};
Point(14) = {0.039083, 0.749917, 0, 1.0};
Point(15) = {0.034308, 0.750000, 0, 1.0};
Point(16) = {0.029444, 0.750000, 0, 1.0};
Point(17) = {0.024538, 0.749925, 0, 1.0};
Point(18) = {0.019636, 0.749769, 0, 1.0};
Point(19) = {0.014786, 0.749553, 0, 1.0};
Point(20) = {0.010035, 0.749280, 0, 1.0};
Point(21) = {0.005427, 0.748945, 0, 1.0};
Point(22) = {0.001007, 0.748553, 0, 1.0};
Point(23) = {-0.003183, 0.748119, 0, 1.0};
Point(24) = {-0.007102, 0.747659, 0, 1.0};
Point(25) = {-0.010714, 0.747192, 0, 1.0};
Point(26) = {-0.013986, 0.746709, 0, 1.0};
Point(27) = {-0.016879, 0.746178, 0, 1.0};
Point(28) = {-0.019371, 0.745609, 0, 1.0};
Point(29) = {-0.021430, 0.744941, 0, 1.0};
Point(30) = {-0.022216, 0.744609, 0, 1.0};
Point(31) = {-0.023036, 0.744180, 0, 1.0};
Point(32) = {-0.023665, 0.743777, 0, 1.0};
Point(33) = {-0.024177, 0.743353, 0, 1.0};
Point(34) = {-0.024328, 0.743193, 0, 1.0};
Point(35) = {-0.024467, 0.743021, 0, 1.0};
Point(36) = {-0.024604, 0.742814, 0, 1.0};
Point(37) = {-0.024738, 0.742568, 0, 1.0};
Point(38) = {-0.024833, 0.742346, 0, 1.0};
Point(39) = {-0.024901, 0.742138, 0, 1.0};
Point(40) = {-0.024948, 0.741942, 0, 1.0};
Point(41) = {-0.024984, 0.741729, 0, 1.0};
Point(42) = {-0.025000, 0.741205, 0, 1.0};
Point(43) = {-0.024923, 0.740799, 0, 1.0};
Point(44) = {-0.024865, 0.740667, 0, 1.0};
Point(45) = {-0.024797, 0.740552, 0, 1.0};
Point(46) = {-0.024708, 0.740437, 0, 1.0};
Point(47) = {-0.024592, 0.740329, 0, 1.0};
Point(48) = {-0.024434, 0.740209, 0, 1.0};
Point(49) = {-0.024277, 0.740110, 0, 1.0};
Point(50) = {-0.024122, 0.740031, 0, 1.0};
Point(51) = {-0.023955, 0.739954, 0, 1.0};
Point(52) = {-0.023403, 0.739773, 0, 1.0};
Point(53) = {-0.022739, 0.739621, 0, 1.0};
Point(54) = {-0.021880, 0.739457, 0, 1.0};
Point(55) = {-0.021064, 0.739339, 0, 1.0};
Point(56) = {-0.018949, 0.739135, 0, 1.0};
Point(57) = {-0.016410, 0.738973, 0, 1.0};
Point(58) = {-0.013475, 0.738876, 0, 1.0};
Point(59) = {-0.010169, 0.738833, 0, 1.0};
Point(60) = {-0.006527, 0.738846, 0, 1.0};
Point(61) = {-0.002583, 0.738928, 0, 1.0};
Point(62) = {0.001625, 0.739077, 0, 1.0};
Point(63) = {0.006055, 0.739306, 0, 1.0};
Point(64) = {0.010664, 0.739633, 0, 1.0};
Point(65) = {0.015405, 0.740058, 0, 1.0};
Point(66) = {0.020235, 0.740587, 0, 1.0};
Point(67) = {0.025104, 0.741233, 0, 1.0};
Point(68) = {0.029966, 0.741995, 0, 1.0};
Point(69) = {0.034776, 0.742831, 0, 1.0};
Point(70) = {0.039489, 0.743690, 0, 1.0};
Point(71) = {0.044066, 0.744507, 0, 1.0};
Point(72) = {0.048464, 0.745225, 0, 1.0};
Point(73) = {0.052642, 0.745843, 0, 1.0};
Point(74) = {0.056558, 0.746348, 0, 1.0};
Point(75) = {0.060175, 0.746749, 0, 1.0};
Point(76) = {0.063458, 0.747058, 0, 1.0};
Point(77) = {0.066370, 0.747293, 0, 1.0};
Point(78) = {0.068888, 0.747453, 0, 1.0};
Point(79) = {0.070984, 0.747562, 0, 1.0};
Point(80) = {0.072636, 0.747633, 0, 1.0};
Point(81) = {0.073827, 0.747678, 0, 1.0};
Point(82) = {0.074547, 0.747702, 0, 1.0};
Point(83) = {-0.074788, -0.747712, 0, 1.0};
Point(84) = {-0.074545, -0.747730, 0, 1.0};
Point(85) = {-0.073820, -0.747782, 0, 1.0};
Point(86) = {-0.072620, -0.747873, 0, 1.0};
Point(87) = {-0.070954, -0.748025, 0, 1.0};
Point(88) = {-0.068840, -0.748196, 0, 1.0};
Point(89) = {-0.066299, -0.748397, 0, 1.0};
Point(90) = {-0.063356, -0.748611, 0, 1.0};
Point(91) = {-0.060038, -0.748848, 0, 1.0};
Point(92) = {-0.056379, -0.749098, 0, 1.0};
Point(93) = {-0.052414, -0.749341, 0, 1.0};
Point(94) = {-0.048181, -0.749570, 0, 1.0};
Point(95) = {-0.043723, -0.749766, 0, 1.0};
Point(96) = {-0.039083, -0.749917, 0, 1.0};
Point(97) = {-0.034308, -0.750000, 0, 1.0};
Point(98) = {-0.029444, -0.750000, 0, 1.0};
Point(99) = {-0.024538, -0.749925, 0, 1.0};
Point(100) = {-0.019636, -0.749769, 0, 1.0};
Point(101) = {-0.014786, -0.749553, 0, 1.0};
Point(102) = {-0.010035, -0.749280, 0, 1.0};
Point(103) = {-0.005427, -0.748945, 0, 1.0};
Point(104) = {-0.001007, -0.748553, 0, 1.0};
Point(105) = {0.003183, -0.748119, 0, 1.0};
Point(106) = {0.007102, -0.747659, 0, 1.0};
Point(107) = {0.010714, -0.747192, 0, 1.0};
Point(108) = {0.013986, -0.746709, 0, 1.0};
Point(109) = {0.016879, -0.746178, 0, 1.0};
Point(110) = {0.019371, -0.745609, 0, 1.0};
Point(111) = {0.021430, -0.744941, 0, 1.0};
Point(112) = {0.022216, -0.744609, 0, 1.0};
Point(113) = {0.023036, -0.744180, 0, 1.0};
Point(114) = {0.023665, -0.743777, 0, 1.0};
Point(115) = {0.024177, -0.743353, 0, 1.0};
Point(116) = {0.024328, -0.743193, 0, 1.0};
Point(117) = {0.024467, -0.743021, 0, 1.0};
Point(118) = {0.024604, -0.742814, 0, 1.0};
Point(119) = {0.024738, -0.742568, 0, 1.0};
Point(120) = {0.024833, -0.742346, 0, 1.0};
Point(121) = {0.024901, -0.742138, 0, 1.0};
Point(122) = {0.024948, -0.741942, 0, 1.0};
Point(123) = {0.024984, -0.741729, 0, 1.0};
Point(124) = {0.025000, -0.741205, 0, 1.0};
Point(125) = {0.024923, -0.740799, 0, 1.0};
Point(126) = {0.024865, -0.740667, 0, 1.0};
Point(127) = {0.024797, -0.740552, 0, 1.0};
Point(128) = {0.024708, -0.740437, 0, 1.0};
Point(129) = {0.024592, -0.740329, 0, 1.0};
Point(130) = {0.024434, -0.740209, 0, 1.0};
Point(131) = {0.024277, -0.740110, 0, 1.0};
Point(132) = {0.024122, -0.740031, 0, 1.0};
Point(133) = {0.023955, -0.739954, 0, 1.0};
Point(134) = {0.023403, -0.739773, 0, 1.0};
Point(135) = {0.022739, -0.739621, 0, 1.0};
Point(136) = {0.021880, -0.739457, 0, 1.0};
Point(137) = {0.021064, -0.739339, 0, 1.0};
Point(138) = {0.018949, -0.739135, 0, 1.0};
Point(139) = {0.016410, -0.738973, 0, 1.0};
Point(140) = {0.013475, -0.738876, 0, 1.0};
Point(141) = {0.010169, -0.738833, 0, 1.0};
Point(142) = {0.006527, -0.738846, 0, 1.0};
Point(143) = {0.002583, -0.738928, 0, 1.0};
Point(144) = {-0.001625, -0.739077, 0, 1.0};
Point(145) = {-0.006055, -0.739306, 0, 1.0};
Point(146) = {-0.010664, -0.739633, 0, 1.0};
Point(147) = {-0.015405, -0.740058, 0, 1.0};
Point(148) = {-0.020235, -0.740587, 0, 1.0};
Point(149) = {-0.025104, -0.741233, 0, 1.0};
Point(150) = {-0.029966, -0.741995, 0, 1.0};
Point(151) = {-0.034776, -0.742831, 0, 1.0};
Point(152) = {-0.039489, -0.743690, 0, 1.0};
Point(153) = {-0.044066, -0.744507, 0, 1.0};
Point(154) = {-0.048464, -0.745225, 0, 1.0};
Point(155) = {-0.052642, -0.745843, 0, 1.0};
Point(156) = {-0.056558, -0.746348, 0, 1.0};
Point(157) = {-0.060175, -0.746749, 0, 1.0};
Point(158) = {-0.063458, -0.747058, 0, 1.0};
Point(159) = {-0.066370, -0.747293, 0, 1.0};
Point(160) = {-0.068888, -0.747453, 0, 1.0};
Point(161) = {-0.070984, -0.747562, 0, 1.0};
Point(162) = {-0.072636, -0.747633, 0, 1.0};
Point(163) = {-0.073827, -0.747678, 0, 1.0};
Point(164) = {-0.074547, -0.747702, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:82};
Spline(4) = {82,1};

// Lines: second blade (splines 5-8)
Spline(5) = {83:104};
Spline(6) = {104:144};
Spline(7) = {144:164};
Spline(8) = {164,83};

// Outer domain (points 20001-4 and lines)
Point(165) = {-13.50000000, -15.00000000, 0, 1.0};
Point(166) = {-13.50000000, 15.00000000, 0, 1.0};
Point(167) = {13.50000000, 15.00000000, 0, 1.0};
Point(168) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {165, 166};
Line(12) = {166, 167};
Line(13) = {167, 168};
Line(14) = {165, 168};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
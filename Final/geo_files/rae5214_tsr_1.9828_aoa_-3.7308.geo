SetFactory("OpenCASCADE");

Point(1) = {0.149576, 0.745423, 0, 1.0};
Point(2) = {0.149091, 0.745460, 0, 1.0};
Point(3) = {0.147641, 0.745564, 0, 1.0};
Point(4) = {0.145240, 0.745746, 0, 1.0};
Point(5) = {0.141907, 0.746050, 0, 1.0};
Point(6) = {0.137680, 0.746391, 0, 1.0};
Point(7) = {0.132597, 0.746793, 0, 1.0};
Point(8) = {0.126713, 0.747221, 0, 1.0};
Point(9) = {0.120076, 0.747697, 0, 1.0};
Point(10) = {0.112758, 0.748195, 0, 1.0};
Point(11) = {0.104827, 0.748682, 0, 1.0};
Point(12) = {0.096362, 0.749141, 0, 1.0};
Point(13) = {0.087445, 0.749531, 0, 1.0};
Point(14) = {0.078166, 0.749834, 0, 1.0};
Point(15) = {0.068617, 0.749999, 0, 1.0};
Point(16) = {0.058888, 0.750000, 0, 1.0};
Point(17) = {0.049075, 0.749849, 0, 1.0};
Point(18) = {0.039273, 0.749539, 0, 1.0};
Point(19) = {0.029572, 0.749107, 0, 1.0};
Point(20) = {0.020070, 0.748559, 0, 1.0};
Point(21) = {0.010854, 0.747890, 0, 1.0};
Point(22) = {0.002014, 0.747105, 0, 1.0};
Point(23) = {-0.006365, 0.746238, 0, 1.0};
Point(24) = {-0.014204, 0.745318, 0, 1.0};
Point(25) = {-0.021429, 0.744384, 0, 1.0};
Point(26) = {-0.027972, 0.743418, 0, 1.0};
Point(27) = {-0.033759, 0.742355, 0, 1.0};
Point(28) = {-0.038741, 0.741219, 0, 1.0};
Point(29) = {-0.042859, 0.739882, 0, 1.0};
Point(30) = {-0.044431, 0.739218, 0, 1.0};
Point(31) = {-0.046073, 0.738360, 0, 1.0};
Point(32) = {-0.047329, 0.737554, 0, 1.0};
Point(33) = {-0.048354, 0.736706, 0, 1.0};
Point(34) = {-0.048656, 0.736385, 0, 1.0};
Point(35) = {-0.048934, 0.736043, 0, 1.0};
Point(36) = {-0.049208, 0.735628, 0, 1.0};
Point(37) = {-0.049476, 0.735135, 0, 1.0};
Point(38) = {-0.049666, 0.734692, 0, 1.0};
Point(39) = {-0.049801, 0.734276, 0, 1.0};
Point(40) = {-0.049896, 0.733883, 0, 1.0};
Point(41) = {-0.049968, 0.733458, 0, 1.0};
Point(42) = {-0.050000, 0.732409, 0, 1.0};
Point(43) = {-0.049847, 0.731598, 0, 1.0};
Point(44) = {-0.049729, 0.731335, 0, 1.0};
Point(45) = {-0.049594, 0.731103, 0, 1.0};
Point(46) = {-0.049417, 0.730874, 0, 1.0};
Point(47) = {-0.049184, 0.730659, 0, 1.0};
Point(48) = {-0.048868, 0.730419, 0, 1.0};
Point(49) = {-0.048555, 0.730221, 0, 1.0};
Point(50) = {-0.048244, 0.730063, 0, 1.0};
Point(51) = {-0.047911, 0.729908, 0, 1.0};
Point(52) = {-0.046807, 0.729545, 0, 1.0};
Point(53) = {-0.045478, 0.729243, 0, 1.0};
Point(54) = {-0.043759, 0.728914, 0, 1.0};
Point(55) = {-0.042128, 0.728678, 0, 1.0};
Point(56) = {-0.037897, 0.728270, 0, 1.0};
Point(57) = {-0.032819, 0.727946, 0, 1.0};
Point(58) = {-0.026950, 0.727751, 0, 1.0};
Point(59) = {-0.020338, 0.727665, 0, 1.0};
Point(60) = {-0.013055, 0.727691, 0, 1.0};
Point(61) = {-0.005167, 0.727855, 0, 1.0};
Point(62) = {0.003250, 0.728153, 0, 1.0};
Point(63) = {0.012111, 0.728613, 0, 1.0};
Point(64) = {0.021328, 0.729266, 0, 1.0};
Point(65) = {0.030810, 0.730117, 0, 1.0};
Point(66) = {0.040470, 0.731174, 0, 1.0};
Point(67) = {0.050209, 0.732466, 0, 1.0};
Point(68) = {0.059932, 0.733990, 0, 1.0};
Point(69) = {0.069552, 0.735661, 0, 1.0};
Point(70) = {0.078978, 0.737380, 0, 1.0};
Point(71) = {0.088131, 0.739014, 0, 1.0};
Point(72) = {0.096928, 0.740451, 0, 1.0};
Point(73) = {0.105284, 0.741685, 0, 1.0};
Point(74) = {0.113116, 0.742695, 0, 1.0};
Point(75) = {0.120350, 0.743497, 0, 1.0};
Point(76) = {0.126915, 0.744116, 0, 1.0};
Point(77) = {0.132741, 0.744586, 0, 1.0};
Point(78) = {0.137777, 0.744906, 0, 1.0};
Point(79) = {0.141968, 0.745124, 0, 1.0};
Point(80) = {0.145271, 0.745267, 0, 1.0};
Point(81) = {0.147654, 0.745356, 0, 1.0};
Point(82) = {0.149094, 0.745404, 0, 1.0};
Point(83) = {-0.149576, -0.745423, 0, 1.0};
Point(84) = {-0.149091, -0.745460, 0, 1.0};
Point(85) = {-0.147641, -0.745564, 0, 1.0};
Point(86) = {-0.145240, -0.745746, 0, 1.0};
Point(87) = {-0.141907, -0.746050, 0, 1.0};
Point(88) = {-0.137680, -0.746391, 0, 1.0};
Point(89) = {-0.132597, -0.746793, 0, 1.0};
Point(90) = {-0.126713, -0.747221, 0, 1.0};
Point(91) = {-0.120076, -0.747697, 0, 1.0};
Point(92) = {-0.112758, -0.748195, 0, 1.0};
Point(93) = {-0.104827, -0.748682, 0, 1.0};
Point(94) = {-0.096362, -0.749141, 0, 1.0};
Point(95) = {-0.087445, -0.749531, 0, 1.0};
Point(96) = {-0.078166, -0.749834, 0, 1.0};
Point(97) = {-0.068617, -0.749999, 0, 1.0};
Point(98) = {-0.058888, -0.750000, 0, 1.0};
Point(99) = {-0.049075, -0.749849, 0, 1.0};
Point(100) = {-0.039273, -0.749539, 0, 1.0};
Point(101) = {-0.029572, -0.749107, 0, 1.0};
Point(102) = {-0.020070, -0.748559, 0, 1.0};
Point(103) = {-0.010854, -0.747890, 0, 1.0};
Point(104) = {-0.002014, -0.747105, 0, 1.0};
Point(105) = {0.006365, -0.746238, 0, 1.0};
Point(106) = {0.014204, -0.745318, 0, 1.0};
Point(107) = {0.021429, -0.744384, 0, 1.0};
Point(108) = {0.027972, -0.743418, 0, 1.0};
Point(109) = {0.033759, -0.742355, 0, 1.0};
Point(110) = {0.038741, -0.741219, 0, 1.0};
Point(111) = {0.042859, -0.739882, 0, 1.0};
Point(112) = {0.044431, -0.739218, 0, 1.0};
Point(113) = {0.046073, -0.738360, 0, 1.0};
Point(114) = {0.047329, -0.737554, 0, 1.0};
Point(115) = {0.048354, -0.736706, 0, 1.0};
Point(116) = {0.048656, -0.736385, 0, 1.0};
Point(117) = {0.048934, -0.736043, 0, 1.0};
Point(118) = {0.049208, -0.735628, 0, 1.0};
Point(119) = {0.049476, -0.735135, 0, 1.0};
Point(120) = {0.049666, -0.734692, 0, 1.0};
Point(121) = {0.049801, -0.734276, 0, 1.0};
Point(122) = {0.049896, -0.733883, 0, 1.0};
Point(123) = {0.049968, -0.733458, 0, 1.0};
Point(124) = {0.050000, -0.732409, 0, 1.0};
Point(125) = {0.049847, -0.731598, 0, 1.0};
Point(126) = {0.049729, -0.731335, 0, 1.0};
Point(127) = {0.049594, -0.731103, 0, 1.0};
Point(128) = {0.049417, -0.730874, 0, 1.0};
Point(129) = {0.049184, -0.730659, 0, 1.0};
Point(130) = {0.048868, -0.730419, 0, 1.0};
Point(131) = {0.048555, -0.730221, 0, 1.0};
Point(132) = {0.048244, -0.730063, 0, 1.0};
Point(133) = {0.047911, -0.729908, 0, 1.0};
Point(134) = {0.046807, -0.729545, 0, 1.0};
Point(135) = {0.045478, -0.729243, 0, 1.0};
Point(136) = {0.043759, -0.728914, 0, 1.0};
Point(137) = {0.042128, -0.728678, 0, 1.0};
Point(138) = {0.037897, -0.728270, 0, 1.0};
Point(139) = {0.032819, -0.727946, 0, 1.0};
Point(140) = {0.026950, -0.727751, 0, 1.0};
Point(141) = {0.020338, -0.727665, 0, 1.0};
Point(142) = {0.013055, -0.727691, 0, 1.0};
Point(143) = {0.005167, -0.727855, 0, 1.0};
Point(144) = {-0.003250, -0.728153, 0, 1.0};
Point(145) = {-0.012111, -0.728613, 0, 1.0};
Point(146) = {-0.021328, -0.729266, 0, 1.0};
Point(147) = {-0.030810, -0.730117, 0, 1.0};
Point(148) = {-0.040470, -0.731174, 0, 1.0};
Point(149) = {-0.050209, -0.732466, 0, 1.0};
Point(150) = {-0.059932, -0.733990, 0, 1.0};
Point(151) = {-0.069552, -0.735661, 0, 1.0};
Point(152) = {-0.078978, -0.737380, 0, 1.0};
Point(153) = {-0.088131, -0.739014, 0, 1.0};
Point(154) = {-0.096928, -0.740451, 0, 1.0};
Point(155) = {-0.105284, -0.741685, 0, 1.0};
Point(156) = {-0.113116, -0.742695, 0, 1.0};
Point(157) = {-0.120350, -0.743497, 0, 1.0};
Point(158) = {-0.126915, -0.744116, 0, 1.0};
Point(159) = {-0.132741, -0.744586, 0, 1.0};
Point(160) = {-0.137777, -0.744906, 0, 1.0};
Point(161) = {-0.141968, -0.745124, 0, 1.0};
Point(162) = {-0.145271, -0.745267, 0, 1.0};
Point(163) = {-0.147654, -0.745356, 0, 1.0};
Point(164) = {-0.149094, -0.745404, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:82};
Spline(4) = {82,1};

// Lines: second blade (splines 5-8)
Spline(5) = {83:104};
Spline(6) = {104:144};
Spline(7) = {144:164};
Spline(8) = {164,83};

// Outer domain (points 20001-4 and lines)
Point(165) = {-13.50000000, -15.00000000, 0, 1.0};
Point(166) = {-13.50000000, 15.00000000, 0, 1.0};
Point(167) = {13.50000000, 15.00000000, 0, 1.0};
Point(168) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {165, 166};
Line(12) = {166, 167};
Line(13) = {167, 168};
Line(14) = {165, 168};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
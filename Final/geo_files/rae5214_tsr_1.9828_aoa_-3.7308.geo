SetFactory("OpenCASCADE");

Point(1) = {0.074841, 0.746567, 0, 1.0};
Point(2) = {0.074477, 0.746595, 0, 1.0};
Point(3) = {0.073390, 0.746673, 0, 1.0};
Point(4) = {0.071589, 0.746809, 0, 1.0};
Point(5) = {0.069089, 0.747037, 0, 1.0};
Point(6) = {0.065919, 0.747293, 0, 1.0};
Point(7) = {0.062107, 0.747595, 0, 1.0};
Point(8) = {0.057693, 0.747916, 0, 1.0};
Point(9) = {0.052716, 0.748272, 0, 1.0};
Point(10) = {0.047227, 0.748647, 0, 1.0};
Point(11) = {0.041279, 0.749012, 0, 1.0};
Point(12) = {0.034930, 0.749355, 0, 1.0};
Point(13) = {0.028243, 0.749648, 0, 1.0};
Point(14) = {0.021283, 0.749876, 0, 1.0};
Point(15) = {0.014122, 0.749999, 0, 1.0};
Point(16) = {0.006825, 0.750000, 0, 1.0};
Point(17) = {-0.000535, 0.749887, 0, 1.0};
Point(18) = {-0.007887, 0.749654, 0, 1.0};
Point(19) = {-0.015162, 0.749330, 0, 1.0};
Point(20) = {-0.022289, 0.748919, 0, 1.0};
Point(21) = {-0.029201, 0.748417, 0, 1.0};
Point(22) = {-0.035831, 0.747829, 0, 1.0};
Point(23) = {-0.042115, 0.747179, 0, 1.0};
Point(24) = {-0.047994, 0.746489, 0, 1.0};
Point(25) = {-0.053413, 0.745788, 0, 1.0};
Point(26) = {-0.058320, 0.745064, 0, 1.0};
Point(27) = {-0.062660, 0.744267, 0, 1.0};
Point(28) = {-0.066397, 0.743414, 0, 1.0};
Point(29) = {-0.069485, 0.742411, 0, 1.0};
Point(30) = {-0.070664, 0.741914, 0, 1.0};
Point(31) = {-0.071896, 0.741270, 0, 1.0};
Point(32) = {-0.072838, 0.740666, 0, 1.0};
Point(33) = {-0.073607, 0.740029, 0, 1.0};
Point(34) = {-0.073833, 0.739789, 0, 1.0};
Point(35) = {-0.074042, 0.739532, 0, 1.0};
Point(36) = {-0.074247, 0.739221, 0, 1.0};
Point(37) = {-0.074448, 0.738852, 0, 1.0};
Point(38) = {-0.074590, 0.738519, 0, 1.0};
Point(39) = {-0.074692, 0.738207, 0, 1.0};
Point(40) = {-0.074763, 0.737913, 0, 1.0};
Point(41) = {-0.074817, 0.737593, 0, 1.0};
Point(42) = {-0.074841, 0.736807, 0, 1.0};
Point(43) = {-0.074726, 0.736198, 0, 1.0};
Point(44) = {-0.074638, 0.736001, 0, 1.0};
Point(45) = {-0.074537, 0.735827, 0, 1.0};
Point(46) = {-0.074404, 0.735656, 0, 1.0};
Point(47) = {-0.074229, 0.735494, 0, 1.0};
Point(48) = {-0.073992, 0.735314, 0, 1.0};
Point(49) = {-0.073757, 0.735166, 0, 1.0};
Point(50) = {-0.073524, 0.735047, 0, 1.0};
Point(51) = {-0.073274, 0.734931, 0, 1.0};
Point(52) = {-0.072446, 0.734659, 0, 1.0};
Point(53) = {-0.071450, 0.734432, 0, 1.0};
Point(54) = {-0.070161, 0.734186, 0, 1.0};
Point(55) = {-0.068937, 0.734008, 0, 1.0};
Point(56) = {-0.065764, 0.733703, 0, 1.0};
Point(57) = {-0.061955, 0.733459, 0, 1.0};
Point(58) = {-0.057554, 0.733314, 0, 1.0};
Point(59) = {-0.052595, 0.733249, 0, 1.0};
Point(60) = {-0.047132, 0.733269, 0, 1.0};
Point(61) = {-0.041216, 0.733391, 0, 1.0};
Point(62) = {-0.034904, 0.733615, 0, 1.0};
Point(63) = {-0.028258, 0.733960, 0, 1.0};
Point(64) = {-0.021345, 0.734450, 0, 1.0};
Point(65) = {-0.014233, 0.735088, 0, 1.0};
Point(66) = {-0.006988, 0.735880, 0, 1.0};
Point(67) = {0.000315, 0.736850, 0, 1.0};
Point(68) = {0.007608, 0.737993, 0, 1.0};
Point(69) = {0.014823, 0.739246, 0, 1.0};
Point(70) = {0.021892, 0.740535, 0, 1.0};
Point(71) = {0.028757, 0.741760, 0, 1.0};
Point(72) = {0.035355, 0.742838, 0, 1.0};
Point(73) = {0.041622, 0.743764, 0, 1.0};
Point(74) = {0.047496, 0.744521, 0, 1.0};
Point(75) = {0.052921, 0.745123, 0, 1.0};
Point(76) = {0.057845, 0.745587, 0, 1.0};
Point(77) = {0.062215, 0.745940, 0, 1.0};
Point(78) = {0.065992, 0.746180, 0, 1.0};
Point(79) = {0.069135, 0.746343, 0, 1.0};
Point(80) = {0.071612, 0.746450, 0, 1.0};
Point(81) = {0.073400, 0.746517, 0, 1.0};
Point(82) = {0.074480, 0.746553, 0, 1.0};
Point(83) = {-0.074841, -0.746567, 0, 1.0};
Point(84) = {-0.074477, -0.746595, 0, 1.0};
Point(85) = {-0.073390, -0.746673, 0, 1.0};
Point(86) = {-0.071589, -0.746809, 0, 1.0};
Point(87) = {-0.069089, -0.747037, 0, 1.0};
Point(88) = {-0.065919, -0.747293, 0, 1.0};
Point(89) = {-0.062107, -0.747595, 0, 1.0};
Point(90) = {-0.057693, -0.747916, 0, 1.0};
Point(91) = {-0.052716, -0.748272, 0, 1.0};
Point(92) = {-0.047227, -0.748647, 0, 1.0};
Point(93) = {-0.041279, -0.749012, 0, 1.0};
Point(94) = {-0.034930, -0.749355, 0, 1.0};
Point(95) = {-0.028243, -0.749648, 0, 1.0};
Point(96) = {-0.021283, -0.749876, 0, 1.0};
Point(97) = {-0.014122, -0.749999, 0, 1.0};
Point(98) = {-0.006825, -0.750000, 0, 1.0};
Point(99) = {0.000535, -0.749887, 0, 1.0};
Point(100) = {0.007887, -0.749654, 0, 1.0};
Point(101) = {0.015162, -0.749330, 0, 1.0};
Point(102) = {0.022289, -0.748919, 0, 1.0};
Point(103) = {0.029201, -0.748417, 0, 1.0};
Point(104) = {0.035831, -0.747829, 0, 1.0};
Point(105) = {0.042115, -0.747179, 0, 1.0};
Point(106) = {0.047994, -0.746489, 0, 1.0};
Point(107) = {0.053413, -0.745788, 0, 1.0};
Point(108) = {0.058320, -0.745064, 0, 1.0};
Point(109) = {0.062660, -0.744267, 0, 1.0};
Point(110) = {0.066397, -0.743414, 0, 1.0};
Point(111) = {0.069485, -0.742411, 0, 1.0};
Point(112) = {0.070664, -0.741914, 0, 1.0};
Point(113) = {0.071896, -0.741270, 0, 1.0};
Point(114) = {0.072838, -0.740666, 0, 1.0};
Point(115) = {0.073607, -0.740029, 0, 1.0};
Point(116) = {0.073833, -0.739789, 0, 1.0};
Point(117) = {0.074042, -0.739532, 0, 1.0};
Point(118) = {0.074247, -0.739221, 0, 1.0};
Point(119) = {0.074448, -0.738852, 0, 1.0};
Point(120) = {0.074590, -0.738519, 0, 1.0};
Point(121) = {0.074692, -0.738207, 0, 1.0};
Point(122) = {0.074763, -0.737913, 0, 1.0};
Point(123) = {0.074817, -0.737593, 0, 1.0};
Point(124) = {0.074841, -0.736807, 0, 1.0};
Point(125) = {0.074726, -0.736198, 0, 1.0};
Point(126) = {0.074638, -0.736001, 0, 1.0};
Point(127) = {0.074537, -0.735827, 0, 1.0};
Point(128) = {0.074404, -0.735656, 0, 1.0};
Point(129) = {0.074229, -0.735494, 0, 1.0};
Point(130) = {0.073992, -0.735314, 0, 1.0};
Point(131) = {0.073757, -0.735166, 0, 1.0};
Point(132) = {0.073524, -0.735047, 0, 1.0};
Point(133) = {0.073274, -0.734931, 0, 1.0};
Point(134) = {0.072446, -0.734659, 0, 1.0};
Point(135) = {0.071450, -0.734432, 0, 1.0};
Point(136) = {0.070161, -0.734186, 0, 1.0};
Point(137) = {0.068937, -0.734008, 0, 1.0};
Point(138) = {0.065764, -0.733703, 0, 1.0};
Point(139) = {0.061955, -0.733459, 0, 1.0};
Point(140) = {0.057554, -0.733314, 0, 1.0};
Point(141) = {0.052595, -0.733249, 0, 1.0};
Point(142) = {0.047132, -0.733269, 0, 1.0};
Point(143) = {0.041216, -0.733391, 0, 1.0};
Point(144) = {0.034904, -0.733615, 0, 1.0};
Point(145) = {0.028258, -0.733960, 0, 1.0};
Point(146) = {0.021345, -0.734450, 0, 1.0};
Point(147) = {0.014233, -0.735088, 0, 1.0};
Point(148) = {0.006988, -0.735880, 0, 1.0};
Point(149) = {-0.000315, -0.736850, 0, 1.0};
Point(150) = {-0.007608, -0.737993, 0, 1.0};
Point(151) = {-0.014823, -0.739246, 0, 1.0};
Point(152) = {-0.021892, -0.740535, 0, 1.0};
Point(153) = {-0.028757, -0.741760, 0, 1.0};
Point(154) = {-0.035355, -0.742838, 0, 1.0};
Point(155) = {-0.041622, -0.743764, 0, 1.0};
Point(156) = {-0.047496, -0.744521, 0, 1.0};
Point(157) = {-0.052921, -0.745123, 0, 1.0};
Point(158) = {-0.057845, -0.745587, 0, 1.0};
Point(159) = {-0.062215, -0.745940, 0, 1.0};
Point(160) = {-0.065992, -0.746180, 0, 1.0};
Point(161) = {-0.069135, -0.746343, 0, 1.0};
Point(162) = {-0.071612, -0.746450, 0, 1.0};
Point(163) = {-0.073400, -0.746517, 0, 1.0};
Point(164) = {-0.074480, -0.746553, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:82};
Spline(4) = {82,1};

// Lines: second blade (splines 5-8)
Spline(5) = {83:104};
Spline(6) = {104:144};
Spline(7) = {144:164};
Spline(8) = {164,83};

// Outer domain (points 20001-4 and lines)
Point(165) = {-13.50000000, -15.00000000, 0, 1.0};
Point(166) = {-13.50000000, 15.00000000, 0, 1.0};
Point(167) = {13.50000000, 15.00000000, 0, 1.0};
Point(168) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {165, 166};
Line(12) = {166, 167};
Line(13) = {167, 168};
Line(14) = {165, 168};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
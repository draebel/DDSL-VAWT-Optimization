SetFactory("OpenCASCADE");

Point(1) = {0.074825, 0.741331, 0, 1.0};
Point(2) = {0.074385, 0.741532, 0, 1.0};
Point(3) = {0.073075, 0.742051, 0, 1.0};
Point(4) = {0.070929, 0.742745, 0, 1.0};
Point(5) = {0.067985, 0.743512, 0, 1.0};
Point(6) = {0.064297, 0.744329, 0, 1.0};
Point(7) = {0.059925, 0.745214, 0, 1.0};
Point(8) = {0.054943, 0.746165, 0, 1.0};
Point(9) = {0.049437, 0.747145, 0, 1.0};
Point(10) = {0.043505, 0.748087, 0, 1.0};
Point(11) = {0.037252, 0.748911, 0, 1.0};
Point(12) = {0.030789, 0.749541, 0, 1.0};
Point(13) = {0.024229, 0.749918, 0, 1.0};
Point(14) = {0.017687, 0.750000, 0, 1.0};
Point(15) = {0.011274, 0.749769, 0, 1.0};
Point(16) = {0.008152, 0.749534, 0, 1.0};
Point(17) = {0.005103, 0.749222, 0, 1.0};
Point(18) = {0.002141, 0.748832, 0, 1.0};
Point(19) = {-0.000723, 0.748369, 0, 1.0};
Point(20) = {-0.003475, 0.747836, 0, 1.0};
Point(21) = {-0.006104, 0.747238, 0, 1.0};
Point(22) = {-0.008598, 0.746577, 0, 1.0};
Point(23) = {-0.010948, 0.745860, 0, 1.0};
Point(24) = {-0.013143, 0.745092, 0, 1.0};
Point(25) = {-0.015175, 0.744286, 0, 1.0};
Point(26) = {-0.017034, 0.743456, 0, 1.0};
Point(27) = {-0.018715, 0.742615, 0, 1.0};
Point(28) = {-0.020211, 0.741766, 0, 1.0};
Point(29) = {-0.021512, 0.740899, 0, 1.0};
Point(30) = {-0.022614, 0.739999, 0, 1.0};
Point(31) = {-0.023509, 0.739063, 0, 1.0};
Point(32) = {-0.024197, 0.738108, 0, 1.0};
Point(33) = {-0.024676, 0.737184, 0, 1.0};
Point(34) = {-0.024948, 0.736351, 0, 1.0};
Point(35) = {-0.025014, 0.735660, 0, 1.0};
Point(36) = {-0.024876, 0.735131, 0, 1.0};
Point(37) = {-0.024531, 0.734744, 0, 1.0};
Point(38) = {-0.023981, 0.734463, 0, 1.0};
Point(39) = {-0.023224, 0.734248, 0, 1.0};
Point(40) = {-0.022263, 0.734076, 0, 1.0};
Point(41) = {-0.021100, 0.733941, 0, 1.0};
Point(42) = {-0.019742, 0.733849, 0, 1.0};
Point(43) = {-0.018193, 0.733801, 0, 1.0};
Point(44) = {-0.016462, 0.733799, 0, 1.0};
Point(45) = {-0.014556, 0.733836, 0, 1.0};
Point(46) = {-0.012481, 0.733909, 0, 1.0};
Point(47) = {-0.010246, 0.734018, 0, 1.0};
Point(48) = {-0.007863, 0.734164, 0, 1.0};
Point(49) = {-0.005340, 0.734350, 0, 1.0};
Point(50) = {-0.002690, 0.734580, 0, 1.0};
Point(51) = {0.000077, 0.734858, 0, 1.0};
Point(52) = {0.002949, 0.735188, 0, 1.0};
Point(53) = {0.005911, 0.735572, 0, 1.0};
Point(54) = {0.008952, 0.736010, 0, 1.0};
Point(55) = {0.012060, 0.736495, 0, 1.0};
Point(56) = {0.018423, 0.737569, 0, 1.0};
Point(57) = {0.024892, 0.738716, 0, 1.0};
Point(58) = {0.031363, 0.739851, 0, 1.0};
Point(59) = {0.037727, 0.740898, 0, 1.0};
Point(60) = {0.043878, 0.741790, 0, 1.0};
Point(61) = {0.049713, 0.742478, 0, 1.0};
Point(62) = {0.055134, 0.742928, 0, 1.0};
Point(63) = {0.060048, 0.743122, 0, 1.0};
Point(64) = {0.064373, 0.743059, 0, 1.0};
Point(65) = {0.068029, 0.742773, 0, 1.0};
Point(66) = {0.070953, 0.742333, 0, 1.0};
Point(67) = {0.073087, 0.741852, 0, 1.0};
Point(68) = {0.074388, 0.741475, 0, 1.0};
Point(69) = {-0.074825, -0.741331, 0, 1.0};
Point(70) = {-0.074385, -0.741532, 0, 1.0};
Point(71) = {-0.073075, -0.742051, 0, 1.0};
Point(72) = {-0.070929, -0.742745, 0, 1.0};
Point(73) = {-0.067985, -0.743512, 0, 1.0};
Point(74) = {-0.064297, -0.744329, 0, 1.0};
Point(75) = {-0.059925, -0.745214, 0, 1.0};
Point(76) = {-0.054943, -0.746165, 0, 1.0};
Point(77) = {-0.049437, -0.747145, 0, 1.0};
Point(78) = {-0.043505, -0.748087, 0, 1.0};
Point(79) = {-0.037252, -0.748911, 0, 1.0};
Point(80) = {-0.030789, -0.749541, 0, 1.0};
Point(81) = {-0.024229, -0.749918, 0, 1.0};
Point(82) = {-0.017687, -0.750000, 0, 1.0};
Point(83) = {-0.011274, -0.749769, 0, 1.0};
Point(84) = {-0.008152, -0.749534, 0, 1.0};
Point(85) = {-0.005103, -0.749222, 0, 1.0};
Point(86) = {-0.002141, -0.748832, 0, 1.0};
Point(87) = {0.000723, -0.748369, 0, 1.0};
Point(88) = {0.003475, -0.747836, 0, 1.0};
Point(89) = {0.006104, -0.747238, 0, 1.0};
Point(90) = {0.008598, -0.746577, 0, 1.0};
Point(91) = {0.010948, -0.745860, 0, 1.0};
Point(92) = {0.013143, -0.745092, 0, 1.0};
Point(93) = {0.015175, -0.744286, 0, 1.0};
Point(94) = {0.017034, -0.743456, 0, 1.0};
Point(95) = {0.018715, -0.742615, 0, 1.0};
Point(96) = {0.020211, -0.741766, 0, 1.0};
Point(97) = {0.021512, -0.740899, 0, 1.0};
Point(98) = {0.022614, -0.739999, 0, 1.0};
Point(99) = {0.023509, -0.739063, 0, 1.0};
Point(100) = {0.024197, -0.738108, 0, 1.0};
Point(101) = {0.024676, -0.737184, 0, 1.0};
Point(102) = {0.024948, -0.736351, 0, 1.0};
Point(103) = {0.025014, -0.735660, 0, 1.0};
Point(104) = {0.024876, -0.735131, 0, 1.0};
Point(105) = {0.024531, -0.734744, 0, 1.0};
Point(106) = {0.023981, -0.734463, 0, 1.0};
Point(107) = {0.023224, -0.734248, 0, 1.0};
Point(108) = {0.022263, -0.734076, 0, 1.0};
Point(109) = {0.021100, -0.733941, 0, 1.0};
Point(110) = {0.019742, -0.733849, 0, 1.0};
Point(111) = {0.018193, -0.733801, 0, 1.0};
Point(112) = {0.016462, -0.733799, 0, 1.0};
Point(113) = {0.014556, -0.733836, 0, 1.0};
Point(114) = {0.012481, -0.733909, 0, 1.0};
Point(115) = {0.010246, -0.734018, 0, 1.0};
Point(116) = {0.007863, -0.734164, 0, 1.0};
Point(117) = {0.005340, -0.734350, 0, 1.0};
Point(118) = {0.002690, -0.734580, 0, 1.0};
Point(119) = {-0.000077, -0.734858, 0, 1.0};
Point(120) = {-0.002949, -0.735188, 0, 1.0};
Point(121) = {-0.005911, -0.735572, 0, 1.0};
Point(122) = {-0.008952, -0.736010, 0, 1.0};
Point(123) = {-0.012060, -0.736495, 0, 1.0};
Point(124) = {-0.018423, -0.737569, 0, 1.0};
Point(125) = {-0.024892, -0.738716, 0, 1.0};
Point(126) = {-0.031363, -0.739851, 0, 1.0};
Point(127) = {-0.037727, -0.740898, 0, 1.0};
Point(128) = {-0.043878, -0.741790, 0, 1.0};
Point(129) = {-0.049713, -0.742478, 0, 1.0};
Point(130) = {-0.055134, -0.742928, 0, 1.0};
Point(131) = {-0.060048, -0.743122, 0, 1.0};
Point(132) = {-0.064373, -0.743059, 0, 1.0};
Point(133) = {-0.068029, -0.742773, 0, 1.0};
Point(134) = {-0.070953, -0.742333, 0, 1.0};
Point(135) = {-0.073087, -0.741852, 0, 1.0};
Point(136) = {-0.074388, -0.741475, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:51};
Spline(3) = {51:68};
Spline(4) = {68,1};

// Lines: second blade (splines 5-8)
Spline(5) = {69:86};
Spline(6) = {86:119};
Spline(7) = {119:136};
Spline(8) = {136,69};

// Outer domain (points 20001-4 and lines)
Point(137) = {-13.50000000, -15.00000000, 0, 1.0};
Point(138) = {-13.50000000, 15.00000000, 0, 1.0};
Point(139) = {13.50000000, 15.00000000, 0, 1.0};
Point(140) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {137, 138};
Line(12) = {138, 139};
Line(13) = {139, 140};
Line(14) = {137, 140};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
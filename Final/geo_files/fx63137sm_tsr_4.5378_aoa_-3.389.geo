SetFactory("OpenCASCADE");

Point(1) = {0.074602, 0.739953, 0, 1.0};
Point(2) = {0.070950, 0.740742, 0, 1.0};
Point(3) = {0.063810, 0.742186, 0, 1.0};
Point(4) = {0.055676, 0.743738, 0, 1.0};
Point(5) = {0.046688, 0.745339, 0, 1.0};
Point(6) = {0.037002, 0.746877, 0, 1.0};
Point(7) = {0.026794, 0.748222, 0, 1.0};
Point(8) = {0.016241, 0.749251, 0, 1.0};
Point(9) = {0.005531, 0.749865, 0, 1.0};
Point(10) = {-0.005151, 0.750000, 0, 1.0};
Point(11) = {-0.015621, 0.749623, 0, 1.0};
Point(12) = {-0.020719, 0.749240, 0, 1.0};
Point(13) = {-0.025697, 0.748729, 0, 1.0};
Point(14) = {-0.030533, 0.748094, 0, 1.0};
Point(15) = {-0.035209, 0.747338, 0, 1.0};
Point(16) = {-0.039702, 0.746467, 0, 1.0};
Point(17) = {-0.043993, 0.745490, 0, 1.0};
Point(18) = {-0.048066, 0.744412, 0, 1.0};
Point(19) = {-0.051902, 0.743240, 0, 1.0};
Point(20) = {-0.055487, 0.741987, 0, 1.0};
Point(21) = {-0.058804, 0.740671, 0, 1.0};
Point(22) = {-0.061840, 0.739316, 0, 1.0};
Point(23) = {-0.064585, 0.737943, 0, 1.0};
Point(24) = {-0.067026, 0.736556, 0, 1.0};
Point(25) = {-0.069150, 0.735141, 0, 1.0};
Point(26) = {-0.070949, 0.733671, 0, 1.0};
Point(27) = {-0.072411, 0.732143, 0, 1.0};
Point(28) = {-0.073534, 0.730584, 0, 1.0};
Point(29) = {-0.074316, 0.729075, 0, 1.0};
Point(30) = {-0.074761, 0.727715, 0, 1.0};
Point(31) = {-0.074869, 0.726588, 0, 1.0};
Point(32) = {-0.074643, 0.725723, 0, 1.0};
Point(33) = {-0.074080, 0.725092, 0, 1.0};
Point(34) = {-0.073181, 0.724632, 0, 1.0};
Point(35) = {-0.071945, 0.724281, 0, 1.0};
Point(36) = {-0.070376, 0.724001, 0, 1.0};
Point(37) = {-0.068478, 0.723781, 0, 1.0};
Point(38) = {-0.066261, 0.723630, 0, 1.0};
Point(39) = {-0.063733, 0.723553, 0, 1.0};
Point(40) = {-0.060906, 0.723548, 0, 1.0};
Point(41) = {-0.057794, 0.723608, 0, 1.0};
Point(42) = {-0.054406, 0.723728, 0, 1.0};
Point(43) = {-0.050757, 0.723906, 0, 1.0};
Point(44) = {-0.046866, 0.724144, 0, 1.0};
Point(45) = {-0.042747, 0.724449, 0, 1.0};
Point(46) = {-0.038421, 0.724824, 0, 1.0};
Point(47) = {-0.033902, 0.725278, 0, 1.0};
Point(48) = {-0.029214, 0.725816, 0, 1.0};
Point(49) = {-0.024377, 0.726444, 0, 1.0};
Point(50) = {-0.019411, 0.727158, 0, 1.0};
Point(51) = {-0.014337, 0.727950, 0, 1.0};
Point(52) = {-0.003949, 0.729705, 0, 1.0};
Point(53) = {0.006614, 0.731576, 0, 1.0};
Point(54) = {0.017177, 0.733430, 0, 1.0};
Point(55) = {0.027568, 0.735139, 0, 1.0};
Point(56) = {0.037611, 0.736595, 0, 1.0};
Point(57) = {0.047139, 0.737719, 0, 1.0};
Point(58) = {0.055989, 0.738454, 0, 1.0};
Point(59) = {0.064013, 0.738770, 0, 1.0};
Point(60) = {0.071073, 0.738668, 0, 1.0};
Point(61) = {0.074692, 0.738449, 0, 1.0};
Point(62) = {-0.074602, -0.739953, 0, 1.0};
Point(63) = {-0.070950, -0.740742, 0, 1.0};
Point(64) = {-0.063810, -0.742186, 0, 1.0};
Point(65) = {-0.055676, -0.743738, 0, 1.0};
Point(66) = {-0.046688, -0.745339, 0, 1.0};
Point(67) = {-0.037002, -0.746877, 0, 1.0};
Point(68) = {-0.026794, -0.748222, 0, 1.0};
Point(69) = {-0.016241, -0.749251, 0, 1.0};
Point(70) = {-0.005531, -0.749865, 0, 1.0};
Point(71) = {0.005151, -0.750000, 0, 1.0};
Point(72) = {0.015621, -0.749623, 0, 1.0};
Point(73) = {0.020719, -0.749240, 0, 1.0};
Point(74) = {0.025697, -0.748729, 0, 1.0};
Point(75) = {0.030533, -0.748094, 0, 1.0};
Point(76) = {0.035209, -0.747338, 0, 1.0};
Point(77) = {0.039702, -0.746467, 0, 1.0};
Point(78) = {0.043993, -0.745490, 0, 1.0};
Point(79) = {0.048066, -0.744412, 0, 1.0};
Point(80) = {0.051902, -0.743240, 0, 1.0};
Point(81) = {0.055487, -0.741987, 0, 1.0};
Point(82) = {0.058804, -0.740671, 0, 1.0};
Point(83) = {0.061840, -0.739316, 0, 1.0};
Point(84) = {0.064585, -0.737943, 0, 1.0};
Point(85) = {0.067026, -0.736556, 0, 1.0};
Point(86) = {0.069150, -0.735141, 0, 1.0};
Point(87) = {0.070949, -0.733671, 0, 1.0};
Point(88) = {0.072411, -0.732143, 0, 1.0};
Point(89) = {0.073534, -0.730584, 0, 1.0};
Point(90) = {0.074316, -0.729075, 0, 1.0};
Point(91) = {0.074761, -0.727715, 0, 1.0};
Point(92) = {0.074869, -0.726588, 0, 1.0};
Point(93) = {0.074643, -0.725723, 0, 1.0};
Point(94) = {0.074080, -0.725092, 0, 1.0};
Point(95) = {0.073181, -0.724632, 0, 1.0};
Point(96) = {0.071945, -0.724281, 0, 1.0};
Point(97) = {0.070376, -0.724001, 0, 1.0};
Point(98) = {0.068478, -0.723781, 0, 1.0};
Point(99) = {0.066261, -0.723630, 0, 1.0};
Point(100) = {0.063733, -0.723553, 0, 1.0};
Point(101) = {0.060906, -0.723548, 0, 1.0};
Point(102) = {0.057794, -0.723608, 0, 1.0};
Point(103) = {0.054406, -0.723728, 0, 1.0};
Point(104) = {0.050757, -0.723906, 0, 1.0};
Point(105) = {0.046866, -0.724144, 0, 1.0};
Point(106) = {0.042747, -0.724449, 0, 1.0};
Point(107) = {0.038421, -0.724824, 0, 1.0};
Point(108) = {0.033902, -0.725278, 0, 1.0};
Point(109) = {0.029214, -0.725816, 0, 1.0};
Point(110) = {0.024377, -0.726444, 0, 1.0};
Point(111) = {0.019411, -0.727158, 0, 1.0};
Point(112) = {0.014337, -0.727950, 0, 1.0};
Point(113) = {0.003949, -0.729705, 0, 1.0};
Point(114) = {-0.006614, -0.731576, 0, 1.0};
Point(115) = {-0.017177, -0.733430, 0, 1.0};
Point(116) = {-0.027568, -0.735139, 0, 1.0};
Point(117) = {-0.037611, -0.736595, 0, 1.0};
Point(118) = {-0.047139, -0.737719, 0, 1.0};
Point(119) = {-0.055989, -0.738454, 0, 1.0};
Point(120) = {-0.064013, -0.738770, 0, 1.0};
Point(121) = {-0.071073, -0.738668, 0, 1.0};
Point(122) = {-0.074692, -0.738449, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:47};
Spline(3) = {47:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:108};
Spline(7) = {108:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
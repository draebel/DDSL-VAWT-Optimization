SetFactory("OpenCASCADE");

Point(1) = {0.074780, 0.712636, 0, 1.0};
Point(2) = {0.073865, 0.713173, 0, 1.0};
Point(3) = {0.067884, 0.716689, 0, 1.0};
Point(4) = {0.064523, 0.718665, 0, 1.0};
Point(5) = {0.060935, 0.720773, 0, 1.0};
Point(6) = {0.057136, 0.723005, 0, 1.0};
Point(7) = {0.053141, 0.725355, 0, 1.0};
Point(8) = {0.048966, 0.727808, 0, 1.0};
Point(9) = {0.044599, 0.730168, 0, 1.0};
Point(10) = {0.040079, 0.732543, 0, 1.0};
Point(11) = {0.035414, 0.734860, 0, 1.0};
Point(12) = {0.030630, 0.737143, 0, 1.0};
Point(13) = {0.025737, 0.739322, 0, 1.0};
Point(14) = {0.020756, 0.741392, 0, 1.0};
Point(15) = {0.015701, 0.743293, 0, 1.0};
Point(16) = {0.010600, 0.745051, 0, 1.0};
Point(17) = {0.005458, 0.746566, 0, 1.0};
Point(18) = {0.000302, 0.747855, 0, 1.0};
Point(19) = {-0.004869, 0.748792, 0, 1.0};
Point(20) = {-0.010010, 0.749476, 0, 1.0};
Point(21) = {-0.015117, 0.749827, 0, 1.0};
Point(22) = {-0.020140, 0.750000, 0, 1.0};
Point(23) = {-0.025068, 0.749926, 0, 1.0};
Point(24) = {-0.029869, 0.749687, 0, 1.0};
Point(25) = {-0.034526, 0.749251, 0, 1.0};
Point(26) = {-0.039013, 0.748653, 0, 1.0};
Point(27) = {-0.043310, 0.747905, 0, 1.0};
Point(28) = {-0.047397, 0.747022, 0, 1.0};
Point(29) = {-0.051257, 0.746000, 0, 1.0};
Point(30) = {-0.054869, 0.744880, 0, 1.0};
Point(31) = {-0.058215, 0.743660, 0, 1.0};
Point(32) = {-0.061282, 0.742363, 0, 1.0};
Point(33) = {-0.064054, 0.741008, 0, 1.0};
Point(34) = {-0.066510, 0.739633, 0, 1.0};
Point(35) = {-0.068646, 0.738232, 0, 1.0};
Point(36) = {-0.070426, 0.736950, 0, 1.0};
Point(37) = {-0.071859, 0.735705, 0, 1.0};
Point(38) = {-0.072934, 0.734531, 0, 1.0};
Point(39) = {-0.073632, 0.733526, 0, 1.0};
Point(40) = {-0.073977, 0.732511, 0, 1.0};
Point(41) = {-0.073956, 0.731584, 0, 1.0};
Point(42) = {-0.073545, 0.730872, 0, 1.0};
Point(43) = {-0.072743, 0.730408, 0, 1.0};
Point(44) = {-0.071573, 0.730074, 0, 1.0};
Point(45) = {-0.070052, 0.729806, 0, 1.0};
Point(46) = {-0.068197, 0.729523, 0, 1.0};
Point(47) = {-0.066007, 0.729304, 0, 1.0};
Point(48) = {-0.063501, 0.729064, 0, 1.0};
Point(49) = {-0.060689, 0.728833, 0, 1.0};
Point(50) = {-0.057586, 0.728595, 0, 1.0};
Point(51) = {-0.054203, 0.728343, 0, 1.0};
Point(52) = {-0.050559, 0.728069, 0, 1.0};
Point(53) = {-0.046665, 0.727793, 0, 1.0};
Point(54) = {-0.042545, 0.727485, 0, 1.0};
Point(55) = {-0.038211, 0.727166, 0, 1.0};
Point(56) = {-0.033684, 0.726821, 0, 1.0};
Point(57) = {-0.028979, 0.726483, 0, 1.0};
Point(58) = {-0.024127, 0.726104, 0, 1.0};
Point(59) = {-0.019134, 0.725751, 0, 1.0};
Point(60) = {-0.014030, 0.725383, 0, 1.0};
Point(61) = {-0.008823, 0.725092, 0, 1.0};
Point(62) = {-0.003541, 0.724823, 0, 1.0};
Point(63) = {0.001800, 0.724639, 0, 1.0};
Point(64) = {0.007149, 0.724364, 0, 1.0};
Point(65) = {0.012497, 0.724089, 0, 1.0};
Point(66) = {0.017809, 0.723733, 0, 1.0};
Point(67) = {0.023068, 0.723323, 0, 1.0};
Point(68) = {0.028236, 0.722797, 0, 1.0};
Point(69) = {0.033299, 0.722187, 0, 1.0};
Point(70) = {0.038227, 0.721444, 0, 1.0};
Point(71) = {0.043004, 0.720614, 0, 1.0};
Point(72) = {0.047607, 0.719661, 0, 1.0};
Point(73) = {0.052020, 0.718633, 0, 1.0};
Point(74) = {0.056219, 0.717510, 0, 1.0};
Point(75) = {0.060196, 0.716341, 0, 1.0};
Point(76) = {0.063932, 0.715124, 0, 1.0};
Point(77) = {0.067419, 0.713906, 0, 1.0};
Point(78) = {0.073592, 0.711536, 0, 1.0};
Point(79) = {0.074537, 0.711178, 0, 1.0};
Point(80) = {-0.074780, -0.712636, 0, 1.0};
Point(81) = {-0.073865, -0.713173, 0, 1.0};
Point(82) = {-0.067884, -0.716689, 0, 1.0};
Point(83) = {-0.064523, -0.718665, 0, 1.0};
Point(84) = {-0.060935, -0.720773, 0, 1.0};
Point(85) = {-0.057136, -0.723005, 0, 1.0};
Point(86) = {-0.053141, -0.725355, 0, 1.0};
Point(87) = {-0.048966, -0.727808, 0, 1.0};
Point(88) = {-0.044599, -0.730168, 0, 1.0};
Point(89) = {-0.040079, -0.732543, 0, 1.0};
Point(90) = {-0.035414, -0.734860, 0, 1.0};
Point(91) = {-0.030630, -0.737143, 0, 1.0};
Point(92) = {-0.025737, -0.739322, 0, 1.0};
Point(93) = {-0.020756, -0.741392, 0, 1.0};
Point(94) = {-0.015701, -0.743293, 0, 1.0};
Point(95) = {-0.010600, -0.745051, 0, 1.0};
Point(96) = {-0.005458, -0.746566, 0, 1.0};
Point(97) = {-0.000302, -0.747855, 0, 1.0};
Point(98) = {0.004869, -0.748792, 0, 1.0};
Point(99) = {0.010010, -0.749476, 0, 1.0};
Point(100) = {0.015117, -0.749827, 0, 1.0};
Point(101) = {0.020140, -0.750000, 0, 1.0};
Point(102) = {0.025068, -0.749926, 0, 1.0};
Point(103) = {0.029869, -0.749687, 0, 1.0};
Point(104) = {0.034526, -0.749251, 0, 1.0};
Point(105) = {0.039013, -0.748653, 0, 1.0};
Point(106) = {0.043310, -0.747905, 0, 1.0};
Point(107) = {0.047397, -0.747022, 0, 1.0};
Point(108) = {0.051257, -0.746000, 0, 1.0};
Point(109) = {0.054869, -0.744880, 0, 1.0};
Point(110) = {0.058215, -0.743660, 0, 1.0};
Point(111) = {0.061282, -0.742363, 0, 1.0};
Point(112) = {0.064054, -0.741008, 0, 1.0};
Point(113) = {0.066510, -0.739633, 0, 1.0};
Point(114) = {0.068646, -0.738232, 0, 1.0};
Point(115) = {0.070426, -0.736950, 0, 1.0};
Point(116) = {0.071859, -0.735705, 0, 1.0};
Point(117) = {0.072934, -0.734531, 0, 1.0};
Point(118) = {0.073632, -0.733526, 0, 1.0};
Point(119) = {0.073977, -0.732511, 0, 1.0};
Point(120) = {0.073956, -0.731584, 0, 1.0};
Point(121) = {0.073545, -0.730872, 0, 1.0};
Point(122) = {0.072743, -0.730408, 0, 1.0};
Point(123) = {0.071573, -0.730074, 0, 1.0};
Point(124) = {0.070052, -0.729806, 0, 1.0};
Point(125) = {0.068197, -0.729523, 0, 1.0};
Point(126) = {0.066007, -0.729304, 0, 1.0};
Point(127) = {0.063501, -0.729064, 0, 1.0};
Point(128) = {0.060689, -0.728833, 0, 1.0};
Point(129) = {0.057586, -0.728595, 0, 1.0};
Point(130) = {0.054203, -0.728343, 0, 1.0};
Point(131) = {0.050559, -0.728069, 0, 1.0};
Point(132) = {0.046665, -0.727793, 0, 1.0};
Point(133) = {0.042545, -0.727485, 0, 1.0};
Point(134) = {0.038211, -0.727166, 0, 1.0};
Point(135) = {0.033684, -0.726821, 0, 1.0};
Point(136) = {0.028979, -0.726483, 0, 1.0};
Point(137) = {0.024127, -0.726104, 0, 1.0};
Point(138) = {0.019134, -0.725751, 0, 1.0};
Point(139) = {0.014030, -0.725383, 0, 1.0};
Point(140) = {0.008823, -0.725092, 0, 1.0};
Point(141) = {0.003541, -0.724823, 0, 1.0};
Point(142) = {-0.001800, -0.724639, 0, 1.0};
Point(143) = {-0.007149, -0.724364, 0, 1.0};
Point(144) = {-0.012497, -0.724089, 0, 1.0};
Point(145) = {-0.017809, -0.723733, 0, 1.0};
Point(146) = {-0.023068, -0.723323, 0, 1.0};
Point(147) = {-0.028236, -0.722797, 0, 1.0};
Point(148) = {-0.033299, -0.722187, 0, 1.0};
Point(149) = {-0.038227, -0.721444, 0, 1.0};
Point(150) = {-0.043004, -0.720614, 0, 1.0};
Point(151) = {-0.047607, -0.719661, 0, 1.0};
Point(152) = {-0.052020, -0.718633, 0, 1.0};
Point(153) = {-0.056219, -0.717510, 0, 1.0};
Point(154) = {-0.060196, -0.716341, 0, 1.0};
Point(155) = {-0.063932, -0.715124, 0, 1.0};
Point(156) = {-0.067419, -0.713906, 0, 1.0};
Point(157) = {-0.073592, -0.711536, 0, 1.0};
Point(158) = {-0.074537, -0.711178, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:56};
Spline(3) = {56:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:103};
Spline(6) = {103:135};
Spline(7) = {135:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {36.00000000, 15.00000000, 0, 1.0};
Point(162) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
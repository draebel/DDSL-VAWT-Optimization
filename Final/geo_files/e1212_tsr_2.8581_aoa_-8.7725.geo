SetFactory("OpenCASCADE");

Point(1) = {0.147660, 0.746777, 0, 1.0};
Point(2) = {0.146900, 0.746785, 0, 1.0};
Point(3) = {0.144722, 0.746880, 0, 1.0};
Point(4) = {0.141336, 0.747084, 0, 1.0};
Point(5) = {0.136852, 0.747286, 0, 1.0};
Point(6) = {0.131262, 0.747434, 0, 1.0};
Point(7) = {0.124596, 0.747579, 0, 1.0};
Point(8) = {0.116970, 0.747766, 0, 1.0};
Point(9) = {0.108508, 0.748010, 0, 1.0};
Point(10) = {0.099353, 0.748313, 0, 1.0};
Point(11) = {0.089654, 0.748666, 0, 1.0};
Point(12) = {0.079558, 0.749041, 0, 1.0};
Point(13) = {0.069215, 0.749408, 0, 1.0};
Point(14) = {0.058772, 0.749721, 0, 1.0};
Point(15) = {0.048361, 0.749935, 0, 1.0};
Point(16) = {0.038105, 0.750000, 0, 1.0};
Point(17) = {0.028119, 0.749867, 0, 1.0};
Point(18) = {0.018501, 0.749496, 0, 1.0};
Point(19) = {0.009335, 0.748845, 0, 1.0};
Point(20) = {0.000698, 0.747888, 0, 1.0};
Point(21) = {-0.007349, 0.746604, 0, 1.0};
Point(22) = {-0.014747, 0.744977, 0, 1.0};
Point(23) = {-0.021468, 0.743000, 0, 1.0};
Point(24) = {-0.027483, 0.740696, 0, 1.0};
Point(25) = {-0.032772, 0.738067, 0, 1.0};
Point(26) = {-0.037366, 0.735142, 0, 1.0};
Point(27) = {-0.041287, 0.732019, 0, 1.0};
Point(28) = {-0.044511, 0.728804, 0, 1.0};
Point(29) = {-0.047014, 0.725581, 0, 1.0};
Point(30) = {-0.048781, 0.722430, 0, 1.0};
Point(31) = {-0.049797, 0.719446, 0, 1.0};
Point(32) = {-0.050053, 0.716750, 0, 1.0};
Point(33) = {-0.050000, 0.716274, 0, 1.0};
Point(34) = {-0.049427, 0.714558, 0, 1.0};
Point(35) = {-0.047721, 0.712759, 0, 1.0};
Point(36) = {-0.044994, 0.711124, 0, 1.0};
Point(37) = {-0.041427, 0.709737, 0, 1.0};
Point(38) = {-0.037092, 0.708688, 0, 1.0};
Point(39) = {-0.032037, 0.708060, 0, 1.0};
Point(40) = {-0.026284, 0.707928, 0, 1.0};
Point(41) = {-0.019847, 0.708350, 0, 1.0};
Point(42) = {-0.012694, 0.709390, 0, 1.0};
Point(43) = {-0.004741, 0.711005, 0, 1.0};
Point(44) = {0.004010, 0.713050, 0, 1.0};
Point(45) = {0.013446, 0.715394, 0, 1.0};
Point(46) = {0.023447, 0.717956, 0, 1.0};
Point(47) = {0.033882, 0.720661, 0, 1.0};
Point(48) = {0.044611, 0.723444, 0, 1.0};
Point(49) = {0.055492, 0.726240, 0, 1.0};
Point(50) = {0.066381, 0.728999, 0, 1.0};
Point(51) = {0.077128, 0.731665, 0, 1.0};
Point(52) = {0.087586, 0.734198, 0, 1.0};
Point(53) = {0.097612, 0.736556, 0, 1.0};
Point(54) = {0.107064, 0.738707, 0, 1.0};
Point(55) = {0.115804, 0.740624, 0, 1.0};
Point(56) = {0.123705, 0.742287, 0, 1.0};
Point(57) = {0.130643, 0.743683, 0, 1.0};
Point(58) = {0.136509, 0.744817, 0, 1.0};
Point(59) = {0.141218, 0.745706, 0, 1.0};
Point(60) = {0.144717, 0.746335, 0, 1.0};
Point(61) = {0.146909, 0.746677, 0, 1.0};
Point(62) = {-0.147660, -0.746777, 0, 1.0};
Point(63) = {-0.146900, -0.746785, 0, 1.0};
Point(64) = {-0.144722, -0.746880, 0, 1.0};
Point(65) = {-0.141336, -0.747084, 0, 1.0};
Point(66) = {-0.136852, -0.747286, 0, 1.0};
Point(67) = {-0.131262, -0.747434, 0, 1.0};
Point(68) = {-0.124596, -0.747579, 0, 1.0};
Point(69) = {-0.116970, -0.747766, 0, 1.0};
Point(70) = {-0.108508, -0.748010, 0, 1.0};
Point(71) = {-0.099353, -0.748313, 0, 1.0};
Point(72) = {-0.089654, -0.748666, 0, 1.0};
Point(73) = {-0.079558, -0.749041, 0, 1.0};
Point(74) = {-0.069215, -0.749408, 0, 1.0};
Point(75) = {-0.058772, -0.749721, 0, 1.0};
Point(76) = {-0.048361, -0.749935, 0, 1.0};
Point(77) = {-0.038105, -0.750000, 0, 1.0};
Point(78) = {-0.028119, -0.749867, 0, 1.0};
Point(79) = {-0.018501, -0.749496, 0, 1.0};
Point(80) = {-0.009335, -0.748845, 0, 1.0};
Point(81) = {-0.000698, -0.747888, 0, 1.0};
Point(82) = {0.007349, -0.746604, 0, 1.0};
Point(83) = {0.014747, -0.744977, 0, 1.0};
Point(84) = {0.021468, -0.743000, 0, 1.0};
Point(85) = {0.027483, -0.740696, 0, 1.0};
Point(86) = {0.032772, -0.738067, 0, 1.0};
Point(87) = {0.037366, -0.735142, 0, 1.0};
Point(88) = {0.041287, -0.732019, 0, 1.0};
Point(89) = {0.044511, -0.728804, 0, 1.0};
Point(90) = {0.047014, -0.725581, 0, 1.0};
Point(91) = {0.048781, -0.722430, 0, 1.0};
Point(92) = {0.049797, -0.719446, 0, 1.0};
Point(93) = {0.050053, -0.716750, 0, 1.0};
Point(94) = {0.050000, -0.716274, 0, 1.0};
Point(95) = {0.049427, -0.714558, 0, 1.0};
Point(96) = {0.047721, -0.712759, 0, 1.0};
Point(97) = {0.044994, -0.711124, 0, 1.0};
Point(98) = {0.041427, -0.709737, 0, 1.0};
Point(99) = {0.037092, -0.708688, 0, 1.0};
Point(100) = {0.032037, -0.708060, 0, 1.0};
Point(101) = {0.026284, -0.707928, 0, 1.0};
Point(102) = {0.019847, -0.708350, 0, 1.0};
Point(103) = {0.012694, -0.709390, 0, 1.0};
Point(104) = {0.004741, -0.711005, 0, 1.0};
Point(105) = {-0.004010, -0.713050, 0, 1.0};
Point(106) = {-0.013446, -0.715394, 0, 1.0};
Point(107) = {-0.023447, -0.717956, 0, 1.0};
Point(108) = {-0.033882, -0.720661, 0, 1.0};
Point(109) = {-0.044611, -0.723444, 0, 1.0};
Point(110) = {-0.055492, -0.726240, 0, 1.0};
Point(111) = {-0.066381, -0.728999, 0, 1.0};
Point(112) = {-0.077128, -0.731665, 0, 1.0};
Point(113) = {-0.087586, -0.734198, 0, 1.0};
Point(114) = {-0.097612, -0.736556, 0, 1.0};
Point(115) = {-0.107064, -0.738707, 0, 1.0};
Point(116) = {-0.115804, -0.740624, 0, 1.0};
Point(117) = {-0.123705, -0.742287, 0, 1.0};
Point(118) = {-0.130643, -0.743683, 0, 1.0};
Point(119) = {-0.136509, -0.744817, 0, 1.0};
Point(120) = {-0.141218, -0.745706, 0, 1.0};
Point(121) = {-0.144717, -0.746335, 0, 1.0};
Point(122) = {-0.146909, -0.746677, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
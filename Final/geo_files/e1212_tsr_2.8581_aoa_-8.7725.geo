SetFactory("OpenCASCADE");

Point(1) = {0.073830, 0.748388, 0, 1.0};
Point(2) = {0.073450, 0.748392, 0, 1.0};
Point(3) = {0.072361, 0.748440, 0, 1.0};
Point(4) = {0.070668, 0.748542, 0, 1.0};
Point(5) = {0.068426, 0.748643, 0, 1.0};
Point(6) = {0.065631, 0.748717, 0, 1.0};
Point(7) = {0.062298, 0.748789, 0, 1.0};
Point(8) = {0.058485, 0.748883, 0, 1.0};
Point(9) = {0.054254, 0.749005, 0, 1.0};
Point(10) = {0.049676, 0.749157, 0, 1.0};
Point(11) = {0.044827, 0.749333, 0, 1.0};
Point(12) = {0.039779, 0.749520, 0, 1.0};
Point(13) = {0.034608, 0.749704, 0, 1.0};
Point(14) = {0.029386, 0.749860, 0, 1.0};
Point(15) = {0.024180, 0.749968, 0, 1.0};
Point(16) = {0.019053, 0.750000, 0, 1.0};
Point(17) = {0.014059, 0.749934, 0, 1.0};
Point(18) = {0.009250, 0.749748, 0, 1.0};
Point(19) = {0.004667, 0.749422, 0, 1.0};
Point(20) = {0.000349, 0.748944, 0, 1.0};
Point(21) = {-0.003674, 0.748302, 0, 1.0};
Point(22) = {-0.007374, 0.747488, 0, 1.0};
Point(23) = {-0.010734, 0.746500, 0, 1.0};
Point(24) = {-0.013742, 0.745348, 0, 1.0};
Point(25) = {-0.016386, 0.744033, 0, 1.0};
Point(26) = {-0.018683, 0.742571, 0, 1.0};
Point(27) = {-0.020644, 0.741010, 0, 1.0};
Point(28) = {-0.022255, 0.739402, 0, 1.0};
Point(29) = {-0.023507, 0.737790, 0, 1.0};
Point(30) = {-0.024390, 0.736215, 0, 1.0};
Point(31) = {-0.024899, 0.734723, 0, 1.0};
Point(32) = {-0.025027, 0.733375, 0, 1.0};
Point(33) = {-0.025000, 0.733137, 0, 1.0};
Point(34) = {-0.024714, 0.732279, 0, 1.0};
Point(35) = {-0.023861, 0.731379, 0, 1.0};
Point(36) = {-0.022497, 0.730562, 0, 1.0};
Point(37) = {-0.020713, 0.729869, 0, 1.0};
Point(38) = {-0.018546, 0.729344, 0, 1.0};
Point(39) = {-0.016019, 0.729030, 0, 1.0};
Point(40) = {-0.013142, 0.728964, 0, 1.0};
Point(41) = {-0.009923, 0.729175, 0, 1.0};
Point(42) = {-0.006347, 0.729695, 0, 1.0};
Point(43) = {-0.002370, 0.730503, 0, 1.0};
Point(44) = {0.002005, 0.731525, 0, 1.0};
Point(45) = {0.006723, 0.732697, 0, 1.0};
Point(46) = {0.011723, 0.733978, 0, 1.0};
Point(47) = {0.016941, 0.735330, 0, 1.0};
Point(48) = {0.022306, 0.736722, 0, 1.0};
Point(49) = {0.027746, 0.738120, 0, 1.0};
Point(50) = {0.033190, 0.739499, 0, 1.0};
Point(51) = {0.038564, 0.740832, 0, 1.0};
Point(52) = {0.043793, 0.742099, 0, 1.0};
Point(53) = {0.048806, 0.743278, 0, 1.0};
Point(54) = {0.053532, 0.744353, 0, 1.0};
Point(55) = {0.057902, 0.745312, 0, 1.0};
Point(56) = {0.061852, 0.746143, 0, 1.0};
Point(57) = {0.065322, 0.746842, 0, 1.0};
Point(58) = {0.068254, 0.747409, 0, 1.0};
Point(59) = {0.070609, 0.747853, 0, 1.0};
Point(60) = {0.072359, 0.748167, 0, 1.0};
Point(61) = {0.073454, 0.748338, 0, 1.0};
Point(62) = {-0.073830, -0.748388, 0, 1.0};
Point(63) = {-0.073450, -0.748392, 0, 1.0};
Point(64) = {-0.072361, -0.748440, 0, 1.0};
Point(65) = {-0.070668, -0.748542, 0, 1.0};
Point(66) = {-0.068426, -0.748643, 0, 1.0};
Point(67) = {-0.065631, -0.748717, 0, 1.0};
Point(68) = {-0.062298, -0.748789, 0, 1.0};
Point(69) = {-0.058485, -0.748883, 0, 1.0};
Point(70) = {-0.054254, -0.749005, 0, 1.0};
Point(71) = {-0.049676, -0.749157, 0, 1.0};
Point(72) = {-0.044827, -0.749333, 0, 1.0};
Point(73) = {-0.039779, -0.749520, 0, 1.0};
Point(74) = {-0.034608, -0.749704, 0, 1.0};
Point(75) = {-0.029386, -0.749860, 0, 1.0};
Point(76) = {-0.024180, -0.749968, 0, 1.0};
Point(77) = {-0.019053, -0.750000, 0, 1.0};
Point(78) = {-0.014059, -0.749934, 0, 1.0};
Point(79) = {-0.009250, -0.749748, 0, 1.0};
Point(80) = {-0.004667, -0.749422, 0, 1.0};
Point(81) = {-0.000349, -0.748944, 0, 1.0};
Point(82) = {0.003674, -0.748302, 0, 1.0};
Point(83) = {0.007374, -0.747488, 0, 1.0};
Point(84) = {0.010734, -0.746500, 0, 1.0};
Point(85) = {0.013742, -0.745348, 0, 1.0};
Point(86) = {0.016386, -0.744033, 0, 1.0};
Point(87) = {0.018683, -0.742571, 0, 1.0};
Point(88) = {0.020644, -0.741010, 0, 1.0};
Point(89) = {0.022255, -0.739402, 0, 1.0};
Point(90) = {0.023507, -0.737790, 0, 1.0};
Point(91) = {0.024390, -0.736215, 0, 1.0};
Point(92) = {0.024899, -0.734723, 0, 1.0};
Point(93) = {0.025027, -0.733375, 0, 1.0};
Point(94) = {0.025000, -0.733137, 0, 1.0};
Point(95) = {0.024714, -0.732279, 0, 1.0};
Point(96) = {0.023861, -0.731379, 0, 1.0};
Point(97) = {0.022497, -0.730562, 0, 1.0};
Point(98) = {0.020713, -0.729869, 0, 1.0};
Point(99) = {0.018546, -0.729344, 0, 1.0};
Point(100) = {0.016019, -0.729030, 0, 1.0};
Point(101) = {0.013142, -0.728964, 0, 1.0};
Point(102) = {0.009923, -0.729175, 0, 1.0};
Point(103) = {0.006347, -0.729695, 0, 1.0};
Point(104) = {0.002370, -0.730503, 0, 1.0};
Point(105) = {-0.002005, -0.731525, 0, 1.0};
Point(106) = {-0.006723, -0.732697, 0, 1.0};
Point(107) = {-0.011723, -0.733978, 0, 1.0};
Point(108) = {-0.016941, -0.735330, 0, 1.0};
Point(109) = {-0.022306, -0.736722, 0, 1.0};
Point(110) = {-0.027746, -0.738120, 0, 1.0};
Point(111) = {-0.033190, -0.739499, 0, 1.0};
Point(112) = {-0.038564, -0.740832, 0, 1.0};
Point(113) = {-0.043793, -0.742099, 0, 1.0};
Point(114) = {-0.048806, -0.743278, 0, 1.0};
Point(115) = {-0.053532, -0.744353, 0, 1.0};
Point(116) = {-0.057902, -0.745312, 0, 1.0};
Point(117) = {-0.061852, -0.746143, 0, 1.0};
Point(118) = {-0.065322, -0.746842, 0, 1.0};
Point(119) = {-0.068254, -0.747409, 0, 1.0};
Point(120) = {-0.070609, -0.747853, 0, 1.0};
Point(121) = {-0.072359, -0.748167, 0, 1.0};
Point(122) = {-0.073454, -0.748338, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
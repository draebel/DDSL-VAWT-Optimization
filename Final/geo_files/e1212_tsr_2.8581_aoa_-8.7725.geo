SetFactory("OpenCASCADE");

Point(1) = {0.074123, 0.747583, 0, 1.0};
Point(2) = {0.073553, 0.747589, 0, 1.0};
Point(3) = {0.071919, 0.747660, 0, 1.0};
Point(4) = {0.069379, 0.747813, 0, 1.0};
Point(5) = {0.066017, 0.747965, 0, 1.0};
Point(6) = {0.061824, 0.748075, 0, 1.0};
Point(7) = {0.056825, 0.748184, 0, 1.0};
Point(8) = {0.051105, 0.748324, 0, 1.0};
Point(9) = {0.044759, 0.748508, 0, 1.0};
Point(10) = {0.037892, 0.748735, 0, 1.0};
Point(11) = {0.030618, 0.749000, 0, 1.0};
Point(12) = {0.023046, 0.749281, 0, 1.0};
Point(13) = {0.015289, 0.749556, 0, 1.0};
Point(14) = {0.007456, 0.749790, 0, 1.0};
Point(15) = {-0.000352, 0.749952, 0, 1.0};
Point(16) = {-0.008044, 0.750000, 0, 1.0};
Point(17) = {-0.015534, 0.749901, 0, 1.0};
Point(18) = {-0.022747, 0.749622, 0, 1.0};
Point(19) = {-0.029622, 0.749133, 0, 1.0};
Point(20) = {-0.036099, 0.748416, 0, 1.0};
Point(21) = {-0.042134, 0.747453, 0, 1.0};
Point(22) = {-0.047683, 0.746232, 0, 1.0};
Point(23) = {-0.052724, 0.744750, 0, 1.0};
Point(24) = {-0.057235, 0.743022, 0, 1.0};
Point(25) = {-0.061202, 0.741050, 0, 1.0};
Point(26) = {-0.064647, 0.738856, 0, 1.0};
Point(27) = {-0.067588, 0.736515, 0, 1.0};
Point(28) = {-0.070006, 0.734103, 0, 1.0};
Point(29) = {-0.071883, 0.731685, 0, 1.0};
Point(30) = {-0.073208, 0.729323, 0, 1.0};
Point(31) = {-0.073971, 0.727085, 0, 1.0};
Point(32) = {-0.074162, 0.725062, 0, 1.0};
Point(33) = {-0.074123, 0.724706, 0, 1.0};
Point(34) = {-0.073693, 0.723418, 0, 1.0};
Point(35) = {-0.072414, 0.722069, 0, 1.0};
Point(36) = {-0.070368, 0.720843, 0, 1.0};
Point(37) = {-0.067693, 0.719803, 0, 1.0};
Point(38) = {-0.064442, 0.719016, 0, 1.0};
Point(39) = {-0.060650, 0.718545, 0, 1.0};
Point(40) = {-0.056335, 0.718446, 0, 1.0};
Point(41) = {-0.051508, 0.718763, 0, 1.0};
Point(42) = {-0.046143, 0.719542, 0, 1.0};
Point(43) = {-0.040178, 0.720754, 0, 1.0};
Point(44) = {-0.033615, 0.722287, 0, 1.0};
Point(45) = {-0.026538, 0.724046, 0, 1.0};
Point(46) = {-0.019038, 0.725967, 0, 1.0};
Point(47) = {-0.011211, 0.727996, 0, 1.0};
Point(48) = {-0.003164, 0.730083, 0, 1.0};
Point(49) = {0.004997, 0.732180, 0, 1.0};
Point(50) = {0.013163, 0.734249, 0, 1.0};
Point(51) = {0.021223, 0.736249, 0, 1.0};
Point(52) = {0.029067, 0.738148, 0, 1.0};
Point(53) = {0.036586, 0.739917, 0, 1.0};
Point(54) = {0.043675, 0.741530, 0, 1.0};
Point(55) = {0.050230, 0.742968, 0, 1.0};
Point(56) = {0.056156, 0.744215, 0, 1.0};
Point(57) = {0.061360, 0.745262, 0, 1.0};
Point(58) = {0.065759, 0.746113, 0, 1.0};
Point(59) = {0.069291, 0.746779, 0, 1.0};
Point(60) = {0.071915, 0.747251, 0, 1.0};
Point(61) = {0.073559, 0.747508, 0, 1.0};
Point(62) = {-0.074123, -0.747583, 0, 1.0};
Point(63) = {-0.073553, -0.747589, 0, 1.0};
Point(64) = {-0.071919, -0.747660, 0, 1.0};
Point(65) = {-0.069379, -0.747813, 0, 1.0};
Point(66) = {-0.066017, -0.747965, 0, 1.0};
Point(67) = {-0.061824, -0.748075, 0, 1.0};
Point(68) = {-0.056825, -0.748184, 0, 1.0};
Point(69) = {-0.051105, -0.748324, 0, 1.0};
Point(70) = {-0.044759, -0.748508, 0, 1.0};
Point(71) = {-0.037892, -0.748735, 0, 1.0};
Point(72) = {-0.030618, -0.749000, 0, 1.0};
Point(73) = {-0.023046, -0.749281, 0, 1.0};
Point(74) = {-0.015289, -0.749556, 0, 1.0};
Point(75) = {-0.007456, -0.749790, 0, 1.0};
Point(76) = {0.000352, -0.749952, 0, 1.0};
Point(77) = {0.008044, -0.750000, 0, 1.0};
Point(78) = {0.015534, -0.749901, 0, 1.0};
Point(79) = {0.022747, -0.749622, 0, 1.0};
Point(80) = {0.029622, -0.749133, 0, 1.0};
Point(81) = {0.036099, -0.748416, 0, 1.0};
Point(82) = {0.042134, -0.747453, 0, 1.0};
Point(83) = {0.047683, -0.746232, 0, 1.0};
Point(84) = {0.052724, -0.744750, 0, 1.0};
Point(85) = {0.057235, -0.743022, 0, 1.0};
Point(86) = {0.061202, -0.741050, 0, 1.0};
Point(87) = {0.064647, -0.738856, 0, 1.0};
Point(88) = {0.067588, -0.736515, 0, 1.0};
Point(89) = {0.070006, -0.734103, 0, 1.0};
Point(90) = {0.071883, -0.731685, 0, 1.0};
Point(91) = {0.073208, -0.729323, 0, 1.0};
Point(92) = {0.073971, -0.727085, 0, 1.0};
Point(93) = {0.074162, -0.725062, 0, 1.0};
Point(94) = {0.074123, -0.724706, 0, 1.0};
Point(95) = {0.073693, -0.723418, 0, 1.0};
Point(96) = {0.072414, -0.722069, 0, 1.0};
Point(97) = {0.070368, -0.720843, 0, 1.0};
Point(98) = {0.067693, -0.719803, 0, 1.0};
Point(99) = {0.064442, -0.719016, 0, 1.0};
Point(100) = {0.060650, -0.718545, 0, 1.0};
Point(101) = {0.056335, -0.718446, 0, 1.0};
Point(102) = {0.051508, -0.718763, 0, 1.0};
Point(103) = {0.046143, -0.719542, 0, 1.0};
Point(104) = {0.040178, -0.720754, 0, 1.0};
Point(105) = {0.033615, -0.722287, 0, 1.0};
Point(106) = {0.026538, -0.724046, 0, 1.0};
Point(107) = {0.019038, -0.725967, 0, 1.0};
Point(108) = {0.011211, -0.727996, 0, 1.0};
Point(109) = {0.003164, -0.730083, 0, 1.0};
Point(110) = {-0.004997, -0.732180, 0, 1.0};
Point(111) = {-0.013163, -0.734249, 0, 1.0};
Point(112) = {-0.021223, -0.736249, 0, 1.0};
Point(113) = {-0.029067, -0.738148, 0, 1.0};
Point(114) = {-0.036586, -0.739917, 0, 1.0};
Point(115) = {-0.043675, -0.741530, 0, 1.0};
Point(116) = {-0.050230, -0.742968, 0, 1.0};
Point(117) = {-0.056156, -0.744215, 0, 1.0};
Point(118) = {-0.061360, -0.745262, 0, 1.0};
Point(119) = {-0.065759, -0.746113, 0, 1.0};
Point(120) = {-0.069291, -0.746779, 0, 1.0};
Point(121) = {-0.071915, -0.747251, 0, 1.0};
Point(122) = {-0.073559, -0.747508, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
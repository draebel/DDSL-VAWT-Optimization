SetFactory("OpenCASCADE");

Point(1) = {0.074839, 0.743862, 0, 1.0};
Point(2) = {0.070205, 0.744058, 0, 1.0};
Point(3) = {0.063857, 0.744369, 0, 1.0};
Point(4) = {0.060287, 0.744598, 0, 1.0};
Point(5) = {0.056478, 0.744799, 0, 1.0};
Point(6) = {0.052440, 0.745097, 0, 1.0};
Point(7) = {0.048198, 0.745346, 0, 1.0};
Point(8) = {0.043757, 0.745723, 0, 1.0};
Point(9) = {0.039147, 0.746096, 0, 1.0};
Point(10) = {0.034371, 0.746763, 0, 1.0};
Point(11) = {0.029469, 0.747337, 0, 1.0};
Point(12) = {0.024454, 0.747986, 0, 1.0};
Point(13) = {0.019358, 0.748514, 0, 1.0};
Point(14) = {0.014196, 0.748990, 0, 1.0};
Point(15) = {0.008997, 0.749374, 0, 1.0};
Point(16) = {0.003778, 0.749709, 0, 1.0};
Point(17) = {-0.001432, 0.749895, 0, 1.0};
Point(18) = {-0.006615, 0.750000, 0, 1.0};
Point(19) = {-0.011747, 0.749954, 0, 1.0};
Point(20) = {-0.016808, 0.749849, 0, 1.0};
Point(21) = {-0.021772, 0.749592, 0, 1.0};
Point(22) = {-0.026624, 0.749281, 0, 1.0};
Point(23) = {-0.031338, 0.748843, 0, 1.0};
Point(24) = {-0.035900, 0.748363, 0, 1.0};
Point(25) = {-0.040285, 0.747774, 0, 1.0};
Point(26) = {-0.044479, 0.747156, 0, 1.0};
Point(27) = {-0.048460, 0.746443, 0, 1.0};
Point(28) = {-0.052216, 0.745705, 0, 1.0};
Point(29) = {-0.055727, 0.744897, 0, 1.0};
Point(30) = {-0.058982, 0.744079, 0, 1.0};
Point(31) = {-0.061962, 0.743192, 0, 1.0};
Point(32) = {-0.064660, 0.742321, 0, 1.0};
Point(33) = {-0.067062, 0.741403, 0, 1.0};
Point(34) = {-0.069158, 0.740501, 0, 1.0};
Point(35) = {-0.070939, 0.739574, 0, 1.0};
Point(36) = {-0.072398, 0.738692, 0, 1.0};
Point(37) = {-0.073527, 0.737760, 0, 1.0};
Point(38) = {-0.074331, 0.736984, 0, 1.0};
Point(39) = {-0.074784, 0.735967, 0, 1.0};
Point(40) = {-0.074881, 0.734668, 0, 1.0};
Point(41) = {-0.074639, 0.733389, 0, 1.0};
Point(42) = {-0.074074, 0.732429, 0, 1.0};
Point(43) = {-0.073188, 0.731749, 0, 1.0};
Point(44) = {-0.071961, 0.730950, 0, 1.0};
Point(45) = {-0.070412, 0.730238, 0, 1.0};
Point(46) = {-0.068538, 0.729516, 0, 1.0};
Point(47) = {-0.066354, 0.728856, 0, 1.0};
Point(48) = {-0.063864, 0.728214, 0, 1.0};
Point(49) = {-0.061085, 0.727652, 0, 1.0};
Point(50) = {-0.058025, 0.727106, 0, 1.0};
Point(51) = {-0.054698, 0.726659, 0, 1.0};
Point(52) = {-0.051118, 0.726252, 0, 1.0};
Point(53) = {-0.047303, 0.725941, 0, 1.0};
Point(54) = {-0.043267, 0.725681, 0, 1.0};
Point(55) = {-0.039031, 0.725538, 0, 1.0};
Point(56) = {-0.034606, 0.725446, 0, 1.0};
Point(57) = {-0.030019, 0.725482, 0, 1.0};
Point(58) = {-0.025286, 0.725577, 0, 1.0};
Point(59) = {-0.020430, 0.725815, 0, 1.0};
Point(60) = {-0.015469, 0.726117, 0, 1.0};
Point(61) = {-0.010429, 0.726583, 0, 1.0};
Point(62) = {-0.005324, 0.727114, 0, 1.0};
Point(63) = {-0.000185, 0.727802, 0, 1.0};
Point(64) = {0.004971, 0.728573, 0, 1.0};
Point(65) = {0.010119, 0.729493, 0, 1.0};
Point(66) = {0.015242, 0.730460, 0, 1.0};
Point(67) = {0.020317, 0.731512, 0, 1.0};
Point(68) = {0.025322, 0.732611, 0, 1.0};
Point(69) = {0.030232, 0.733819, 0, 1.0};
Point(70) = {0.035038, 0.734941, 0, 1.0};
Point(71) = {0.039709, 0.736142, 0, 1.0};
Point(72) = {0.044248, 0.737031, 0, 1.0};
Point(73) = {0.048618, 0.737905, 0, 1.0};
Point(74) = {0.052805, 0.738630, 0, 1.0};
Point(75) = {0.056784, 0.739381, 0, 1.0};
Point(76) = {0.060546, 0.740008, 0, 1.0};
Point(77) = {0.064068, 0.740638, 0, 1.0};
Point(78) = {0.070340, 0.741661, 0, 1.0};
Point(79) = {0.074923, 0.742377, 0, 1.0};
Point(80) = {-0.074839, -0.743862, 0, 1.0};
Point(81) = {-0.070205, -0.744058, 0, 1.0};
Point(82) = {-0.063857, -0.744369, 0, 1.0};
Point(83) = {-0.060287, -0.744598, 0, 1.0};
Point(84) = {-0.056478, -0.744799, 0, 1.0};
Point(85) = {-0.052440, -0.745097, 0, 1.0};
Point(86) = {-0.048198, -0.745346, 0, 1.0};
Point(87) = {-0.043757, -0.745723, 0, 1.0};
Point(88) = {-0.039147, -0.746096, 0, 1.0};
Point(89) = {-0.034371, -0.746763, 0, 1.0};
Point(90) = {-0.029469, -0.747337, 0, 1.0};
Point(91) = {-0.024454, -0.747986, 0, 1.0};
Point(92) = {-0.019358, -0.748514, 0, 1.0};
Point(93) = {-0.014196, -0.748990, 0, 1.0};
Point(94) = {-0.008997, -0.749374, 0, 1.0};
Point(95) = {-0.003778, -0.749709, 0, 1.0};
Point(96) = {0.001432, -0.749895, 0, 1.0};
Point(97) = {0.006615, -0.750000, 0, 1.0};
Point(98) = {0.011747, -0.749954, 0, 1.0};
Point(99) = {0.016808, -0.749849, 0, 1.0};
Point(100) = {0.021772, -0.749592, 0, 1.0};
Point(101) = {0.026624, -0.749281, 0, 1.0};
Point(102) = {0.031338, -0.748843, 0, 1.0};
Point(103) = {0.035900, -0.748363, 0, 1.0};
Point(104) = {0.040285, -0.747774, 0, 1.0};
Point(105) = {0.044479, -0.747156, 0, 1.0};
Point(106) = {0.048460, -0.746443, 0, 1.0};
Point(107) = {0.052216, -0.745705, 0, 1.0};
Point(108) = {0.055727, -0.744897, 0, 1.0};
Point(109) = {0.058982, -0.744079, 0, 1.0};
Point(110) = {0.061962, -0.743192, 0, 1.0};
Point(111) = {0.064660, -0.742321, 0, 1.0};
Point(112) = {0.067062, -0.741403, 0, 1.0};
Point(113) = {0.069158, -0.740501, 0, 1.0};
Point(114) = {0.070939, -0.739574, 0, 1.0};
Point(115) = {0.072398, -0.738692, 0, 1.0};
Point(116) = {0.073527, -0.737760, 0, 1.0};
Point(117) = {0.074331, -0.736984, 0, 1.0};
Point(118) = {0.074784, -0.735967, 0, 1.0};
Point(119) = {0.074881, -0.734668, 0, 1.0};
Point(120) = {0.074639, -0.733389, 0, 1.0};
Point(121) = {0.074074, -0.732429, 0, 1.0};
Point(122) = {0.073188, -0.731749, 0, 1.0};
Point(123) = {0.071961, -0.730950, 0, 1.0};
Point(124) = {0.070412, -0.730238, 0, 1.0};
Point(125) = {0.068538, -0.729516, 0, 1.0};
Point(126) = {0.066354, -0.728856, 0, 1.0};
Point(127) = {0.063864, -0.728214, 0, 1.0};
Point(128) = {0.061085, -0.727652, 0, 1.0};
Point(129) = {0.058025, -0.727106, 0, 1.0};
Point(130) = {0.054698, -0.726659, 0, 1.0};
Point(131) = {0.051118, -0.726252, 0, 1.0};
Point(132) = {0.047303, -0.725941, 0, 1.0};
Point(133) = {0.043267, -0.725681, 0, 1.0};
Point(134) = {0.039031, -0.725538, 0, 1.0};
Point(135) = {0.034606, -0.725446, 0, 1.0};
Point(136) = {0.030019, -0.725482, 0, 1.0};
Point(137) = {0.025286, -0.725577, 0, 1.0};
Point(138) = {0.020430, -0.725815, 0, 1.0};
Point(139) = {0.015469, -0.726117, 0, 1.0};
Point(140) = {0.010429, -0.726583, 0, 1.0};
Point(141) = {0.005324, -0.727114, 0, 1.0};
Point(142) = {0.000185, -0.727802, 0, 1.0};
Point(143) = {-0.004971, -0.728573, 0, 1.0};
Point(144) = {-0.010119, -0.729493, 0, 1.0};
Point(145) = {-0.015242, -0.730460, 0, 1.0};
Point(146) = {-0.020317, -0.731512, 0, 1.0};
Point(147) = {-0.025322, -0.732611, 0, 1.0};
Point(148) = {-0.030232, -0.733819, 0, 1.0};
Point(149) = {-0.035038, -0.734941, 0, 1.0};
Point(150) = {-0.039709, -0.736142, 0, 1.0};
Point(151) = {-0.044248, -0.737031, 0, 1.0};
Point(152) = {-0.048618, -0.737905, 0, 1.0};
Point(153) = {-0.052805, -0.738630, 0, 1.0};
Point(154) = {-0.056784, -0.739381, 0, 1.0};
Point(155) = {-0.060546, -0.740008, 0, 1.0};
Point(156) = {-0.064068, -0.740638, 0, 1.0};
Point(157) = {-0.070340, -0.741661, 0, 1.0};
Point(158) = {-0.074923, -0.742377, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:56};
Spline(3) = {56:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:103};
Spline(6) = {103:135};
Spline(7) = {135:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {36.00000000, 15.00000000, 0, 1.0};
Point(162) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
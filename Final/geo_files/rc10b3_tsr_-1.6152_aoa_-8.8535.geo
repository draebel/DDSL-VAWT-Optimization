SetFactory("OpenCASCADE");

Point(1) = {0.073988, 0.750000, 0, 1.0};
Point(2) = {0.072778, 0.749968, 0, 1.0};
Point(3) = {0.067817, 0.749899, 0, 1.0};
Point(4) = {0.062803, 0.749914, 0, 1.0};
Point(5) = {0.057626, 0.749935, 0, 1.0};
Point(6) = {0.052244, 0.749949, 0, 1.0};
Point(7) = {0.046614, 0.749937, 0, 1.0};
Point(8) = {0.040686, 0.749881, 0, 1.0};
Point(9) = {0.034557, 0.749763, 0, 1.0};
Point(10) = {0.028434, 0.749573, 0, 1.0};
Point(11) = {0.022413, 0.749309, 0, 1.0};
Point(12) = {0.016507, 0.748969, 0, 1.0};
Point(13) = {0.010661, 0.748550, 0, 1.0};
Point(14) = {0.004834, 0.748048, 0, 1.0};
Point(15) = {-0.000987, 0.747462, 0, 1.0};
Point(16) = {-0.006811, 0.746791, 0, 1.0};
Point(17) = {-0.012622, 0.746040, 0, 1.0};
Point(18) = {-0.018389, 0.745211, 0, 1.0};
Point(19) = {-0.024063, 0.744311, 0, 1.0};
Point(20) = {-0.029593, 0.743348, 0, 1.0};
Point(21) = {-0.034933, 0.742327, 0, 1.0};
Point(22) = {-0.040060, 0.741245, 0, 1.0};
Point(23) = {-0.044961, 0.740107, 0, 1.0};
Point(24) = {-0.049618, 0.738910, 0, 1.0};
Point(25) = {-0.054006, 0.737648, 0, 1.0};
Point(26) = {-0.058110, 0.736337, 0, 1.0};
Point(27) = {-0.061909, 0.734954, 0, 1.0};
Point(28) = {-0.065380, 0.733509, 0, 1.0};
Point(29) = {-0.068463, 0.732001, 0, 1.0};
Point(30) = {-0.071040, 0.730463, 0, 1.0};
Point(31) = {-0.072849, 0.728996, 0, 1.0};
Point(32) = {-0.073850, 0.727605, 0, 1.0};
Point(33) = {-0.074106, 0.726156, 0, 1.0};
Point(34) = {-0.073455, 0.725068, 0, 1.0};
Point(35) = {-0.072156, 0.724547, 0, 1.0};
Point(36) = {-0.070075, 0.724266, 0, 1.0};
Point(37) = {-0.067247, 0.724192, 0, 1.0};
Point(38) = {-0.063948, 0.724312, 0, 1.0};
Point(39) = {-0.060292, 0.724575, 0, 1.0};
Point(40) = {-0.056335, 0.724941, 0, 1.0};
Point(41) = {-0.052097, 0.725391, 0, 1.0};
Point(42) = {-0.047592, 0.725905, 0, 1.0};
Point(43) = {-0.042838, 0.726480, 0, 1.0};
Point(44) = {-0.037858, 0.727105, 0, 1.0};
Point(45) = {-0.032667, 0.727778, 0, 1.0};
Point(46) = {-0.027280, 0.728498, 0, 1.0};
Point(47) = {-0.021719, 0.729263, 0, 1.0};
Point(48) = {-0.016031, 0.730068, 0, 1.0};
Point(49) = {-0.010266, 0.730910, 0, 1.0};
Point(50) = {-0.004473, 0.731781, 0, 1.0};
Point(51) = {0.001316, 0.732678, 0, 1.0};
Point(52) = {0.007084, 0.733599, 0, 1.0};
Point(53) = {0.012842, 0.734547, 0, 1.0};
Point(54) = {0.018601, 0.735526, 0, 1.0};
Point(55) = {0.024400, 0.736548, 0, 1.0};
Point(56) = {0.030294, 0.737629, 0, 1.0};
Point(57) = {0.036268, 0.738777, 0, 1.0};
Point(58) = {0.042228, 0.739987, 0, 1.0};
Point(59) = {0.047971, 0.741227, 0, 1.0};
Point(60) = {0.053407, 0.742484, 0, 1.0};
Point(61) = {0.058585, 0.743778, 0, 1.0};
Point(62) = {0.063550, 0.745119, 0, 1.0};
Point(63) = {0.068343, 0.746523, 0, 1.0};
Point(64) = {0.073070, 0.748096, 0, 1.0};
Point(65) = {0.074222, 0.748503, 0, 1.0};
Point(66) = {-0.073988, -0.750000, 0, 1.0};
Point(67) = {-0.072778, -0.749968, 0, 1.0};
Point(68) = {-0.067817, -0.749899, 0, 1.0};
Point(69) = {-0.062803, -0.749914, 0, 1.0};
Point(70) = {-0.057626, -0.749935, 0, 1.0};
Point(71) = {-0.052244, -0.749949, 0, 1.0};
Point(72) = {-0.046614, -0.749937, 0, 1.0};
Point(73) = {-0.040686, -0.749881, 0, 1.0};
Point(74) = {-0.034557, -0.749763, 0, 1.0};
Point(75) = {-0.028434, -0.749573, 0, 1.0};
Point(76) = {-0.022413, -0.749309, 0, 1.0};
Point(77) = {-0.016507, -0.748969, 0, 1.0};
Point(78) = {-0.010661, -0.748550, 0, 1.0};
Point(79) = {-0.004834, -0.748048, 0, 1.0};
Point(80) = {0.000987, -0.747462, 0, 1.0};
Point(81) = {0.006811, -0.746791, 0, 1.0};
Point(82) = {0.012622, -0.746040, 0, 1.0};
Point(83) = {0.018389, -0.745211, 0, 1.0};
Point(84) = {0.024063, -0.744311, 0, 1.0};
Point(85) = {0.029593, -0.743348, 0, 1.0};
Point(86) = {0.034933, -0.742327, 0, 1.0};
Point(87) = {0.040060, -0.741245, 0, 1.0};
Point(88) = {0.044961, -0.740107, 0, 1.0};
Point(89) = {0.049618, -0.738910, 0, 1.0};
Point(90) = {0.054006, -0.737648, 0, 1.0};
Point(91) = {0.058110, -0.736337, 0, 1.0};
Point(92) = {0.061909, -0.734954, 0, 1.0};
Point(93) = {0.065380, -0.733509, 0, 1.0};
Point(94) = {0.068463, -0.732001, 0, 1.0};
Point(95) = {0.071040, -0.730463, 0, 1.0};
Point(96) = {0.072849, -0.728996, 0, 1.0};
Point(97) = {0.073850, -0.727605, 0, 1.0};
Point(98) = {0.074106, -0.726156, 0, 1.0};
Point(99) = {0.073455, -0.725068, 0, 1.0};
Point(100) = {0.072156, -0.724547, 0, 1.0};
Point(101) = {0.070075, -0.724266, 0, 1.0};
Point(102) = {0.067247, -0.724192, 0, 1.0};
Point(103) = {0.063948, -0.724312, 0, 1.0};
Point(104) = {0.060292, -0.724575, 0, 1.0};
Point(105) = {0.056335, -0.724941, 0, 1.0};
Point(106) = {0.052097, -0.725391, 0, 1.0};
Point(107) = {0.047592, -0.725905, 0, 1.0};
Point(108) = {0.042838, -0.726480, 0, 1.0};
Point(109) = {0.037858, -0.727105, 0, 1.0};
Point(110) = {0.032667, -0.727778, 0, 1.0};
Point(111) = {0.027280, -0.728498, 0, 1.0};
Point(112) = {0.021719, -0.729263, 0, 1.0};
Point(113) = {0.016031, -0.730068, 0, 1.0};
Point(114) = {0.010266, -0.730910, 0, 1.0};
Point(115) = {0.004473, -0.731781, 0, 1.0};
Point(116) = {-0.001316, -0.732678, 0, 1.0};
Point(117) = {-0.007084, -0.733599, 0, 1.0};
Point(118) = {-0.012842, -0.734547, 0, 1.0};
Point(119) = {-0.018601, -0.735526, 0, 1.0};
Point(120) = {-0.024400, -0.736548, 0, 1.0};
Point(121) = {-0.030294, -0.737629, 0, 1.0};
Point(122) = {-0.036268, -0.738777, 0, 1.0};
Point(123) = {-0.042228, -0.739987, 0, 1.0};
Point(124) = {-0.047971, -0.741227, 0, 1.0};
Point(125) = {-0.053407, -0.742484, 0, 1.0};
Point(126) = {-0.058585, -0.743778, 0, 1.0};
Point(127) = {-0.063550, -0.745119, 0, 1.0};
Point(128) = {-0.068343, -0.746523, 0, 1.0};
Point(129) = {-0.073070, -0.748096, 0, 1.0};
Point(130) = {-0.074222, -0.748503, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {36.00000000, 15.00000000, 0, 1.0};
Point(134) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149904, 0.741317, 0, 1.0};
Point(2) = {0.149219, 0.741392, 0, 1.0};
Point(3) = {0.147200, 0.741665, 0, 1.0};
Point(4) = {0.143927, 0.742140, 0, 1.0};
Point(5) = {0.139489, 0.742726, 0, 1.0};
Point(6) = {0.133958, 0.743371, 0, 1.0};
Point(7) = {0.127429, 0.744089, 0, 1.0};
Point(8) = {0.120022, 0.744858, 0, 1.0};
Point(9) = {0.111865, 0.745657, 0, 1.0};
Point(10) = {0.103100, 0.746458, 0, 1.0};
Point(11) = {0.093839, 0.747231, 0, 1.0};
Point(12) = {0.084120, 0.747954, 0, 1.0};
Point(13) = {0.073991, 0.748608, 0, 1.0};
Point(14) = {0.063577, 0.749163, 0, 1.0};
Point(15) = {0.053002, 0.749597, 0, 1.0};
Point(16) = {0.042388, 0.749886, 0, 1.0};
Point(17) = {0.031866, 0.750000, 0, 1.0};
Point(18) = {0.021553, 0.749926, 0, 1.0};
Point(19) = {0.011575, 0.749645, 0, 1.0};
Point(20) = {0.002044, 0.749151, 0, 1.0};
Point(21) = {-0.006933, 0.748438, 0, 1.0};
Point(22) = {-0.015250, 0.747508, 0, 1.0};
Point(23) = {-0.022824, 0.746370, 0, 1.0};
Point(24) = {-0.029576, 0.745164, 0, 1.0};
Point(25) = {-0.035437, 0.743766, 0, 1.0};
Point(26) = {-0.040355, 0.742244, 0, 1.0};
Point(27) = {-0.044292, 0.740620, 0, 1.0};
Point(28) = {-0.047223, 0.738920, 0, 1.0};
Point(29) = {-0.049134, 0.737192, 0, 1.0};
Point(30) = {-0.050000, 0.735114, 0, 1.0};
Point(31) = {-0.049028, 0.733777, 0, 1.0};
Point(32) = {-0.047032, 0.732763, 0, 1.0};
Point(33) = {-0.044021, 0.731890, 0, 1.0};
Point(34) = {-0.040011, 0.731176, 0, 1.0};
Point(35) = {-0.035030, 0.730636, 0, 1.0};
Point(36) = {-0.029114, 0.730263, 0, 1.0};
Point(37) = {-0.022318, 0.730058, 0, 1.0};
Point(38) = {-0.014707, 0.730004, 0, 1.0};
Point(39) = {-0.006363, 0.730097, 0, 1.0};
Point(40) = {0.002628, 0.730318, 0, 1.0};
Point(41) = {0.012164, 0.730654, 0, 1.0};
Point(42) = {0.022137, 0.731095, 0, 1.0};
Point(43) = {0.032436, 0.731623, 0, 1.0};
Point(44) = {0.042936, 0.732223, 0, 1.0};
Point(45) = {0.053521, 0.732887, 0, 1.0};
Point(46) = {0.064060, 0.733601, 0, 1.0};
Point(47) = {0.074433, 0.734361, 0, 1.0};
Point(48) = {0.084517, 0.735158, 0, 1.0};
Point(49) = {0.094187, 0.736020, 0, 1.0};
Point(50) = {0.103394, 0.736972, 0, 1.0};
Point(51) = {0.112104, 0.737949, 0, 1.0};
Point(52) = {0.120208, 0.738847, 0, 1.0};
Point(53) = {0.127568, 0.739617, 0, 1.0};
Point(54) = {0.134056, 0.740239, 0, 1.0};
Point(55) = {0.139552, 0.740705, 0, 1.0};
Point(56) = {0.143962, 0.741036, 0, 1.0};
Point(57) = {0.147213, 0.741233, 0, 1.0};
Point(58) = {0.149222, 0.741308, 0, 1.0};
Point(59) = {-0.149904, -0.741317, 0, 1.0};
Point(60) = {-0.149219, -0.741392, 0, 1.0};
Point(61) = {-0.147200, -0.741665, 0, 1.0};
Point(62) = {-0.143927, -0.742140, 0, 1.0};
Point(63) = {-0.139489, -0.742726, 0, 1.0};
Point(64) = {-0.133958, -0.743371, 0, 1.0};
Point(65) = {-0.127429, -0.744089, 0, 1.0};
Point(66) = {-0.120022, -0.744858, 0, 1.0};
Point(67) = {-0.111865, -0.745657, 0, 1.0};
Point(68) = {-0.103100, -0.746458, 0, 1.0};
Point(69) = {-0.093839, -0.747231, 0, 1.0};
Point(70) = {-0.084120, -0.747954, 0, 1.0};
Point(71) = {-0.073991, -0.748608, 0, 1.0};
Point(72) = {-0.063577, -0.749163, 0, 1.0};
Point(73) = {-0.053002, -0.749597, 0, 1.0};
Point(74) = {-0.042388, -0.749886, 0, 1.0};
Point(75) = {-0.031866, -0.750000, 0, 1.0};
Point(76) = {-0.021553, -0.749926, 0, 1.0};
Point(77) = {-0.011575, -0.749645, 0, 1.0};
Point(78) = {-0.002044, -0.749151, 0, 1.0};
Point(79) = {0.006933, -0.748438, 0, 1.0};
Point(80) = {0.015250, -0.747508, 0, 1.0};
Point(81) = {0.022824, -0.746370, 0, 1.0};
Point(82) = {0.029576, -0.745164, 0, 1.0};
Point(83) = {0.035437, -0.743766, 0, 1.0};
Point(84) = {0.040355, -0.742244, 0, 1.0};
Point(85) = {0.044292, -0.740620, 0, 1.0};
Point(86) = {0.047223, -0.738920, 0, 1.0};
Point(87) = {0.049134, -0.737192, 0, 1.0};
Point(88) = {0.050000, -0.735114, 0, 1.0};
Point(89) = {0.049028, -0.733777, 0, 1.0};
Point(90) = {0.047032, -0.732763, 0, 1.0};
Point(91) = {0.044021, -0.731890, 0, 1.0};
Point(92) = {0.040011, -0.731176, 0, 1.0};
Point(93) = {0.035030, -0.730636, 0, 1.0};
Point(94) = {0.029114, -0.730263, 0, 1.0};
Point(95) = {0.022318, -0.730058, 0, 1.0};
Point(96) = {0.014707, -0.730004, 0, 1.0};
Point(97) = {0.006363, -0.730097, 0, 1.0};
Point(98) = {-0.002628, -0.730318, 0, 1.0};
Point(99) = {-0.012164, -0.730654, 0, 1.0};
Point(100) = {-0.022137, -0.731095, 0, 1.0};
Point(101) = {-0.032436, -0.731623, 0, 1.0};
Point(102) = {-0.042936, -0.732223, 0, 1.0};
Point(103) = {-0.053521, -0.732887, 0, 1.0};
Point(104) = {-0.064060, -0.733601, 0, 1.0};
Point(105) = {-0.074433, -0.734361, 0, 1.0};
Point(106) = {-0.084517, -0.735158, 0, 1.0};
Point(107) = {-0.094187, -0.736020, 0, 1.0};
Point(108) = {-0.103394, -0.736972, 0, 1.0};
Point(109) = {-0.112104, -0.737949, 0, 1.0};
Point(110) = {-0.120208, -0.738847, 0, 1.0};
Point(111) = {-0.127568, -0.739617, 0, 1.0};
Point(112) = {-0.134056, -0.740239, 0, 1.0};
Point(113) = {-0.139552, -0.740705, 0, 1.0};
Point(114) = {-0.143962, -0.741036, 0, 1.0};
Point(115) = {-0.147213, -0.741233, 0, 1.0};
Point(116) = {-0.149222, -0.741308, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:78};
Spline(6) = {78:99};
Spline(7) = {99:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
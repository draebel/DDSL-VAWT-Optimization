SetFactory("OpenCASCADE");

Point(1) = {0.149984, 0.723031, 0, 1.0};
Point(2) = {0.149234, 0.723261, 0, 1.0};
Point(3) = {0.147136, 0.723984, 0, 1.0};
Point(4) = {0.143930, 0.725153, 0, 1.0};
Point(5) = {0.139728, 0.726597, 0, 1.0};
Point(6) = {0.134517, 0.728250, 0, 1.0};
Point(7) = {0.128361, 0.730139, 0, 1.0};
Point(8) = {0.121393, 0.732250, 0, 1.0};
Point(9) = {0.113750, 0.734533, 0, 1.0};
Point(10) = {0.105560, 0.736922, 0, 1.0};
Point(11) = {0.096942, 0.739335, 0, 1.0};
Point(12) = {0.088016, 0.741693, 0, 1.0};
Point(13) = {0.078882, 0.743911, 0, 1.0};
Point(14) = {0.069638, 0.745901, 0, 1.0};
Point(15) = {0.060373, 0.747564, 0, 1.0};
Point(16) = {0.051108, 0.748805, 0, 1.0};
Point(17) = {0.041850, 0.749610, 0, 1.0};
Point(18) = {0.032652, 0.750000, 0, 1.0};
Point(19) = {0.023579, 0.749990, 0, 1.0};
Point(20) = {0.014707, 0.749602, 0, 1.0};
Point(21) = {0.006113, 0.748858, 0, 1.0};
Point(22) = {-0.002123, 0.747794, 0, 1.0};
Point(23) = {-0.009919, 0.746436, 0, 1.0};
Point(24) = {-0.017193, 0.744815, 0, 1.0};
Point(25) = {-0.023875, 0.742958, 0, 1.0};
Point(26) = {-0.029900, 0.740904, 0, 1.0};
Point(27) = {-0.035215, 0.738688, 0, 1.0};
Point(28) = {-0.039771, 0.736358, 0, 1.0};
Point(29) = {-0.043528, 0.733960, 0, 1.0};
Point(30) = {-0.046455, 0.731557, 0, 1.0};
Point(31) = {-0.048529, 0.729224, 0, 1.0};
Point(32) = {-0.049715, 0.727065, 0, 1.0};
Point(33) = {-0.049927, 0.726321, 0, 1.0};
Point(34) = {-0.049983, 0.725950, 0, 1.0};
Point(35) = {-0.049992, 0.725430, 0, 1.0};
Point(36) = {-0.049970, 0.725272, 0, 1.0};
Point(37) = {-0.049932, 0.725121, 0, 1.0};
Point(38) = {-0.049876, 0.724974, 0, 1.0};
Point(39) = {-0.049800, 0.724829, 0, 1.0};
Point(40) = {-0.049706, 0.724680, 0, 1.0};
Point(41) = {-0.049480, 0.724383, 0, 1.0};
Point(42) = {-0.049199, 0.724082, 0, 1.0};
Point(43) = {-0.048691, 0.723625, 0, 1.0};
Point(44) = {-0.046493, 0.722229, 0, 1.0};
Point(45) = {-0.043080, 0.720755, 0, 1.0};
Point(46) = {-0.038647, 0.719360, 0, 1.0};
Point(47) = {-0.033245, 0.718059, 0, 1.0};
Point(48) = {-0.026944, 0.716854, 0, 1.0};
Point(49) = {-0.019830, 0.715756, 0, 1.0};
Point(50) = {-0.011998, 0.714782, 0, 1.0};
Point(51) = {-0.003542, 0.713949, 0, 1.0};
Point(52) = {0.005435, 0.713274, 0, 1.0};
Point(53) = {0.014821, 0.712774, 0, 1.0};
Point(54) = {0.024498, 0.712467, 0, 1.0};
Point(55) = {0.034339, 0.712385, 0, 1.0};
Point(56) = {0.044217, 0.712599, 0, 1.0};
Point(57) = {0.054078, 0.713216, 0, 1.0};
Point(58) = {0.063960, 0.714270, 0, 1.0};
Point(59) = {0.073893, 0.715692, 0, 1.0};
Point(60) = {0.083857, 0.717369, 0, 1.0};
Point(61) = {0.093811, 0.719145, 0, 1.0};
Point(62) = {0.103631, 0.720817, 0, 1.0};
Point(63) = {0.113108, 0.722226, 0, 1.0};
Point(64) = {0.122000, 0.723270, 0, 1.0};
Point(65) = {0.130063, 0.723896, 0, 1.0};
Point(66) = {0.137050, 0.724097, 0, 1.0};
Point(67) = {0.142696, 0.723918, 0, 1.0};
Point(68) = {0.146770, 0.723530, 0, 1.0};
Point(69) = {0.149187, 0.723173, 0, 1.0};
Point(70) = {-0.149984, -0.723031, 0, 1.0};
Point(71) = {-0.149234, -0.723261, 0, 1.0};
Point(72) = {-0.147136, -0.723984, 0, 1.0};
Point(73) = {-0.143930, -0.725153, 0, 1.0};
Point(74) = {-0.139728, -0.726597, 0, 1.0};
Point(75) = {-0.134517, -0.728250, 0, 1.0};
Point(76) = {-0.128361, -0.730139, 0, 1.0};
Point(77) = {-0.121393, -0.732250, 0, 1.0};
Point(78) = {-0.113750, -0.734533, 0, 1.0};
Point(79) = {-0.105560, -0.736922, 0, 1.0};
Point(80) = {-0.096942, -0.739335, 0, 1.0};
Point(81) = {-0.088016, -0.741693, 0, 1.0};
Point(82) = {-0.078882, -0.743911, 0, 1.0};
Point(83) = {-0.069638, -0.745901, 0, 1.0};
Point(84) = {-0.060373, -0.747564, 0, 1.0};
Point(85) = {-0.051108, -0.748805, 0, 1.0};
Point(86) = {-0.041850, -0.749610, 0, 1.0};
Point(87) = {-0.032652, -0.750000, 0, 1.0};
Point(88) = {-0.023579, -0.749990, 0, 1.0};
Point(89) = {-0.014707, -0.749602, 0, 1.0};
Point(90) = {-0.006113, -0.748858, 0, 1.0};
Point(91) = {0.002123, -0.747794, 0, 1.0};
Point(92) = {0.009919, -0.746436, 0, 1.0};
Point(93) = {0.017193, -0.744815, 0, 1.0};
Point(94) = {0.023875, -0.742958, 0, 1.0};
Point(95) = {0.029900, -0.740904, 0, 1.0};
Point(96) = {0.035215, -0.738688, 0, 1.0};
Point(97) = {0.039771, -0.736358, 0, 1.0};
Point(98) = {0.043528, -0.733960, 0, 1.0};
Point(99) = {0.046455, -0.731557, 0, 1.0};
Point(100) = {0.048529, -0.729224, 0, 1.0};
Point(101) = {0.049715, -0.727065, 0, 1.0};
Point(102) = {0.049927, -0.726321, 0, 1.0};
Point(103) = {0.049983, -0.725950, 0, 1.0};
Point(104) = {0.049992, -0.725430, 0, 1.0};
Point(105) = {0.049970, -0.725272, 0, 1.0};
Point(106) = {0.049932, -0.725121, 0, 1.0};
Point(107) = {0.049876, -0.724974, 0, 1.0};
Point(108) = {0.049800, -0.724829, 0, 1.0};
Point(109) = {0.049706, -0.724680, 0, 1.0};
Point(110) = {0.049480, -0.724383, 0, 1.0};
Point(111) = {0.049199, -0.724082, 0, 1.0};
Point(112) = {0.048691, -0.723625, 0, 1.0};
Point(113) = {0.046493, -0.722229, 0, 1.0};
Point(114) = {0.043080, -0.720755, 0, 1.0};
Point(115) = {0.038647, -0.719360, 0, 1.0};
Point(116) = {0.033245, -0.718059, 0, 1.0};
Point(117) = {0.026944, -0.716854, 0, 1.0};
Point(118) = {0.019830, -0.715756, 0, 1.0};
Point(119) = {0.011998, -0.714782, 0, 1.0};
Point(120) = {0.003542, -0.713949, 0, 1.0};
Point(121) = {-0.005435, -0.713274, 0, 1.0};
Point(122) = {-0.014821, -0.712774, 0, 1.0};
Point(123) = {-0.024498, -0.712467, 0, 1.0};
Point(124) = {-0.034339, -0.712385, 0, 1.0};
Point(125) = {-0.044217, -0.712599, 0, 1.0};
Point(126) = {-0.054078, -0.713216, 0, 1.0};
Point(127) = {-0.063960, -0.714270, 0, 1.0};
Point(128) = {-0.073893, -0.715692, 0, 1.0};
Point(129) = {-0.083857, -0.717369, 0, 1.0};
Point(130) = {-0.093811, -0.719145, 0, 1.0};
Point(131) = {-0.103631, -0.720817, 0, 1.0};
Point(132) = {-0.113108, -0.722226, 0, 1.0};
Point(133) = {-0.122000, -0.723270, 0, 1.0};
Point(134) = {-0.130063, -0.723896, 0, 1.0};
Point(135) = {-0.137050, -0.724097, 0, 1.0};
Point(136) = {-0.142696, -0.723918, 0, 1.0};
Point(137) = {-0.146770, -0.723530, 0, 1.0};
Point(138) = {-0.149187, -0.723173, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:52};
Spline(3) = {52:69};
Spline(4) = {69,1};

// Lines: second blade (splines 5-8)
Spline(5) = {70:90};
Spline(6) = {90:121};
Spline(7) = {121:138};
Spline(8) = {138,70};

// Outer domain (points 20001-4 and lines)
Point(139) = {-13.50000000, -15.00000000, 0, 1.0};
Point(140) = {-13.50000000, 15.00000000, 0, 1.0};
Point(141) = {13.50000000, 15.00000000, 0, 1.0};
Point(142) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {139, 140};
Line(12) = {140, 141};
Line(13) = {141, 142};
Line(14) = {139, 142};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
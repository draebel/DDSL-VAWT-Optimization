SetFactory("OpenCASCADE");

Point(1) = {0.074771, 0.744116, 0, 1.0};
Point(2) = {0.073715, 0.744246, 0, 1.0};
Point(3) = {0.066494, 0.745263, 0, 1.0};
Point(4) = {0.058265, 0.746331, 0, 1.0};
Point(5) = {0.049172, 0.747374, 0, 1.0};
Point(6) = {0.039371, 0.748315, 0, 1.0};
Point(7) = {0.029035, 0.749091, 0, 1.0};
Point(8) = {0.018339, 0.749655, 0, 1.0};
Point(9) = {0.007472, 0.749966, 0, 1.0};
Point(10) = {-0.003383, 0.750000, 0, 1.0};
Point(11) = {-0.014039, 0.749731, 0, 1.0};
Point(12) = {-0.019234, 0.749476, 0, 1.0};
Point(13) = {-0.024310, 0.749138, 0, 1.0};
Point(14) = {-0.029245, 0.748717, 0, 1.0};
Point(15) = {-0.034021, 0.748214, 0, 1.0};
Point(16) = {-0.038615, 0.747633, 0, 1.0};
Point(17) = {-0.043005, 0.746979, 0, 1.0};
Point(18) = {-0.047177, 0.746254, 0, 1.0};
Point(19) = {-0.051110, 0.745467, 0, 1.0};
Point(20) = {-0.054790, 0.744624, 0, 1.0};
Point(21) = {-0.058200, 0.743734, 0, 1.0};
Point(22) = {-0.061324, 0.742807, 0, 1.0};
Point(23) = {-0.064152, 0.741851, 0, 1.0};
Point(24) = {-0.066671, 0.740865, 0, 1.0};
Point(25) = {-0.068867, 0.739850, 0, 1.0};
Point(26) = {-0.070734, 0.738796, 0, 1.0};
Point(27) = {-0.072261, 0.737715, 0, 1.0};
Point(28) = {-0.073445, 0.736634, 0, 1.0};
Point(29) = {-0.074282, 0.735610, 0, 1.0};
Point(30) = {-0.074772, 0.734698, 0, 1.0};
Point(31) = {-0.074914, 0.733948, 0, 1.0};
Point(32) = {-0.074708, 0.733363, 0, 1.0};
Point(33) = {-0.074153, 0.732912, 0, 1.0};
Point(34) = {-0.073249, 0.732543, 0, 1.0};
Point(35) = {-0.071997, 0.732203, 0, 1.0};
Point(36) = {-0.070403, 0.731874, 0, 1.0};
Point(37) = {-0.068470, 0.731556, 0, 1.0};
Point(38) = {-0.066211, 0.731270, 0, 1.0};
Point(39) = {-0.063634, 0.731037, 0, 1.0};
Point(40) = {-0.060752, 0.730873, 0, 1.0};
Point(41) = {-0.057580, 0.730775, 0, 1.0};
Point(42) = {-0.054126, 0.730747, 0, 1.0};
Point(43) = {-0.050408, 0.730787, 0, 1.0};
Point(44) = {-0.046442, 0.730901, 0, 1.0};
Point(45) = {-0.042245, 0.731088, 0, 1.0};
Point(46) = {-0.037836, 0.731358, 0, 1.0};
Point(47) = {-0.033231, 0.731713, 0, 1.0};
Point(48) = {-0.028453, 0.732156, 0, 1.0};
Point(49) = {-0.023522, 0.732686, 0, 1.0};
Point(50) = {-0.018459, 0.733298, 0, 1.0};
Point(51) = {-0.013284, 0.733973, 0, 1.0};
Point(52) = {-0.002687, 0.735458, 0, 1.0};
Point(53) = {0.008092, 0.737014, 0, 1.0};
Point(54) = {0.018872, 0.738521, 0, 1.0};
Point(55) = {0.029476, 0.739877, 0, 1.0};
Point(56) = {0.039722, 0.740998, 0, 1.0};
Point(57) = {0.049437, 0.741835, 0, 1.0};
Point(58) = {0.058455, 0.742370, 0, 1.0};
Point(59) = {0.066620, 0.742618, 0, 1.0};
Point(60) = {0.073793, 0.742627, 0, 1.0};
Point(61) = {0.074843, 0.742611, 0, 1.0};
Point(62) = {-0.074771, -0.744116, 0, 1.0};
Point(63) = {-0.073715, -0.744246, 0, 1.0};
Point(64) = {-0.066494, -0.745263, 0, 1.0};
Point(65) = {-0.058265, -0.746331, 0, 1.0};
Point(66) = {-0.049172, -0.747374, 0, 1.0};
Point(67) = {-0.039371, -0.748315, 0, 1.0};
Point(68) = {-0.029035, -0.749091, 0, 1.0};
Point(69) = {-0.018339, -0.749655, 0, 1.0};
Point(70) = {-0.007472, -0.749966, 0, 1.0};
Point(71) = {0.003383, -0.750000, 0, 1.0};
Point(72) = {0.014039, -0.749731, 0, 1.0};
Point(73) = {0.019234, -0.749476, 0, 1.0};
Point(74) = {0.024310, -0.749138, 0, 1.0};
Point(75) = {0.029245, -0.748717, 0, 1.0};
Point(76) = {0.034021, -0.748214, 0, 1.0};
Point(77) = {0.038615, -0.747633, 0, 1.0};
Point(78) = {0.043005, -0.746979, 0, 1.0};
Point(79) = {0.047177, -0.746254, 0, 1.0};
Point(80) = {0.051110, -0.745467, 0, 1.0};
Point(81) = {0.054790, -0.744624, 0, 1.0};
Point(82) = {0.058200, -0.743734, 0, 1.0};
Point(83) = {0.061324, -0.742807, 0, 1.0};
Point(84) = {0.064152, -0.741851, 0, 1.0};
Point(85) = {0.066671, -0.740865, 0, 1.0};
Point(86) = {0.068867, -0.739850, 0, 1.0};
Point(87) = {0.070734, -0.738796, 0, 1.0};
Point(88) = {0.072261, -0.737715, 0, 1.0};
Point(89) = {0.073445, -0.736634, 0, 1.0};
Point(90) = {0.074282, -0.735610, 0, 1.0};
Point(91) = {0.074772, -0.734698, 0, 1.0};
Point(92) = {0.074914, -0.733948, 0, 1.0};
Point(93) = {0.074708, -0.733363, 0, 1.0};
Point(94) = {0.074153, -0.732912, 0, 1.0};
Point(95) = {0.073249, -0.732543, 0, 1.0};
Point(96) = {0.071997, -0.732203, 0, 1.0};
Point(97) = {0.070403, -0.731874, 0, 1.0};
Point(98) = {0.068470, -0.731556, 0, 1.0};
Point(99) = {0.066211, -0.731270, 0, 1.0};
Point(100) = {0.063634, -0.731037, 0, 1.0};
Point(101) = {0.060752, -0.730873, 0, 1.0};
Point(102) = {0.057580, -0.730775, 0, 1.0};
Point(103) = {0.054126, -0.730747, 0, 1.0};
Point(104) = {0.050408, -0.730787, 0, 1.0};
Point(105) = {0.046442, -0.730901, 0, 1.0};
Point(106) = {0.042245, -0.731088, 0, 1.0};
Point(107) = {0.037836, -0.731358, 0, 1.0};
Point(108) = {0.033231, -0.731713, 0, 1.0};
Point(109) = {0.028453, -0.732156, 0, 1.0};
Point(110) = {0.023522, -0.732686, 0, 1.0};
Point(111) = {0.018459, -0.733298, 0, 1.0};
Point(112) = {0.013284, -0.733973, 0, 1.0};
Point(113) = {0.002687, -0.735458, 0, 1.0};
Point(114) = {-0.008092, -0.737014, 0, 1.0};
Point(115) = {-0.018872, -0.738521, 0, 1.0};
Point(116) = {-0.029476, -0.739877, 0, 1.0};
Point(117) = {-0.039722, -0.740998, 0, 1.0};
Point(118) = {-0.049437, -0.741835, 0, 1.0};
Point(119) = {-0.058455, -0.742370, 0, 1.0};
Point(120) = {-0.066620, -0.742618, 0, 1.0};
Point(121) = {-0.073793, -0.742627, 0, 1.0};
Point(122) = {-0.074843, -0.742611, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:47};
Spline(3) = {47:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:108};
Spline(7) = {108:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149581, 0.722000, 0, 1.0};
Point(2) = {0.148842, 0.722163, 0, 1.0};
Point(3) = {0.146698, 0.722706, 0, 1.0};
Point(4) = {0.143317, 0.723697, 0, 1.0};
Point(5) = {0.138877, 0.725104, 0, 1.0};
Point(6) = {0.133506, 0.726831, 0, 1.0};
Point(7) = {0.127272, 0.728797, 0, 1.0};
Point(8) = {0.120228, 0.730973, 0, 1.0};
Point(9) = {0.112491, 0.733371, 0, 1.0};
Point(10) = {0.104230, 0.735947, 0, 1.0};
Point(11) = {0.095608, 0.738627, 0, 1.0};
Point(12) = {0.086793, 0.741283, 0, 1.0};
Point(13) = {0.077897, 0.743738, 0, 1.0};
Point(14) = {0.068936, 0.745824, 0, 1.0};
Point(15) = {0.059868, 0.747459, 0, 1.0};
Point(16) = {0.050667, 0.748637, 0, 1.0};
Point(17) = {0.041346, 0.749412, 0, 1.0};
Point(18) = {0.031987, 0.749854, 0, 1.0};
Point(19) = {0.022699, 0.750000, 0, 1.0};
Point(20) = {0.013589, 0.749871, 0, 1.0};
Point(21) = {0.004760, 0.749484, 0, 1.0};
Point(22) = {-0.003690, 0.748860, 0, 1.0};
Point(23) = {-0.011670, 0.748014, 0, 1.0};
Point(24) = {-0.019089, 0.746973, 0, 1.0};
Point(25) = {-0.025864, 0.745753, 0, 1.0};
Point(26) = {-0.031923, 0.744384, 0, 1.0};
Point(27) = {-0.037199, 0.742888, 0, 1.0};
Point(28) = {-0.041629, 0.741300, 0, 1.0};
Point(29) = {-0.045167, 0.739651, 0, 1.0};
Point(30) = {-0.047765, 0.737982, 0, 1.0};
Point(31) = {-0.049387, 0.736335, 0, 1.0};
Point(32) = {-0.050000, 0.734946, 0, 1.0};
Point(33) = {-0.050003, 0.734832, 0, 1.0};
Point(34) = {-0.049388, 0.733409, 0, 1.0};
Point(35) = {-0.047529, 0.731880, 0, 1.0};
Point(36) = {-0.044650, 0.730266, 0, 1.0};
Point(37) = {-0.040795, 0.728641, 0, 1.0};
Point(38) = {-0.036008, 0.727040, 0, 1.0};
Point(39) = {-0.030336, 0.725500, 0, 1.0};
Point(40) = {-0.023839, 0.724040, 0, 1.0};
Point(41) = {-0.016582, 0.722685, 0, 1.0};
Point(42) = {-0.008637, 0.721452, 0, 1.0};
Point(43) = {-0.000090, 0.720357, 0, 1.0};
Point(44) = {0.008970, 0.719411, 0, 1.0};
Point(45) = {0.018441, 0.718628, 0, 1.0};
Point(46) = {0.028224, 0.718019, 0, 1.0};
Point(47) = {0.038206, 0.717598, 0, 1.0};
Point(48) = {0.048278, 0.717388, 0, 1.0};
Point(49) = {0.058327, 0.717424, 0, 1.0};
Point(50) = {0.068282, 0.717764, 0, 1.0};
Point(51) = {0.078153, 0.718448, 0, 1.0};
Point(52) = {0.087991, 0.719371, 0, 1.0};
Point(53) = {0.097716, 0.720338, 0, 1.0};
Point(54) = {0.107136, 0.721204, 0, 1.0};
Point(55) = {0.116057, 0.721894, 0, 1.0};
Point(56) = {0.124279, 0.722363, 0, 1.0};
Point(57) = {0.131608, 0.722599, 0, 1.0};
Point(58) = {0.137865, 0.722628, 0, 1.0};
Point(59) = {0.142897, 0.722498, 0, 1.0};
Point(60) = {0.146579, 0.722289, 0, 1.0};
Point(61) = {0.148825, 0.722087, 0, 1.0};
Point(62) = {-0.149581, -0.722000, 0, 1.0};
Point(63) = {-0.148842, -0.722163, 0, 1.0};
Point(64) = {-0.146698, -0.722706, 0, 1.0};
Point(65) = {-0.143317, -0.723697, 0, 1.0};
Point(66) = {-0.138877, -0.725104, 0, 1.0};
Point(67) = {-0.133506, -0.726831, 0, 1.0};
Point(68) = {-0.127272, -0.728797, 0, 1.0};
Point(69) = {-0.120228, -0.730973, 0, 1.0};
Point(70) = {-0.112491, -0.733371, 0, 1.0};
Point(71) = {-0.104230, -0.735947, 0, 1.0};
Point(72) = {-0.095608, -0.738627, 0, 1.0};
Point(73) = {-0.086793, -0.741283, 0, 1.0};
Point(74) = {-0.077897, -0.743738, 0, 1.0};
Point(75) = {-0.068936, -0.745824, 0, 1.0};
Point(76) = {-0.059868, -0.747459, 0, 1.0};
Point(77) = {-0.050667, -0.748637, 0, 1.0};
Point(78) = {-0.041346, -0.749412, 0, 1.0};
Point(79) = {-0.031987, -0.749854, 0, 1.0};
Point(80) = {-0.022699, -0.750000, 0, 1.0};
Point(81) = {-0.013589, -0.749871, 0, 1.0};
Point(82) = {-0.004760, -0.749484, 0, 1.0};
Point(83) = {0.003690, -0.748860, 0, 1.0};
Point(84) = {0.011670, -0.748014, 0, 1.0};
Point(85) = {0.019089, -0.746973, 0, 1.0};
Point(86) = {0.025864, -0.745753, 0, 1.0};
Point(87) = {0.031923, -0.744384, 0, 1.0};
Point(88) = {0.037199, -0.742888, 0, 1.0};
Point(89) = {0.041629, -0.741300, 0, 1.0};
Point(90) = {0.045167, -0.739651, 0, 1.0};
Point(91) = {0.047765, -0.737982, 0, 1.0};
Point(92) = {0.049387, -0.736335, 0, 1.0};
Point(93) = {0.050000, -0.734946, 0, 1.0};
Point(94) = {0.050003, -0.734832, 0, 1.0};
Point(95) = {0.049388, -0.733409, 0, 1.0};
Point(96) = {0.047529, -0.731880, 0, 1.0};
Point(97) = {0.044650, -0.730266, 0, 1.0};
Point(98) = {0.040795, -0.728641, 0, 1.0};
Point(99) = {0.036008, -0.727040, 0, 1.0};
Point(100) = {0.030336, -0.725500, 0, 1.0};
Point(101) = {0.023839, -0.724040, 0, 1.0};
Point(102) = {0.016582, -0.722685, 0, 1.0};
Point(103) = {0.008637, -0.721452, 0, 1.0};
Point(104) = {0.000090, -0.720357, 0, 1.0};
Point(105) = {-0.008970, -0.719411, 0, 1.0};
Point(106) = {-0.018441, -0.718628, 0, 1.0};
Point(107) = {-0.028224, -0.718019, 0, 1.0};
Point(108) = {-0.038206, -0.717598, 0, 1.0};
Point(109) = {-0.048278, -0.717388, 0, 1.0};
Point(110) = {-0.058327, -0.717424, 0, 1.0};
Point(111) = {-0.068282, -0.717764, 0, 1.0};
Point(112) = {-0.078153, -0.718448, 0, 1.0};
Point(113) = {-0.087991, -0.719371, 0, 1.0};
Point(114) = {-0.097716, -0.720338, 0, 1.0};
Point(115) = {-0.107136, -0.721204, 0, 1.0};
Point(116) = {-0.116057, -0.721894, 0, 1.0};
Point(117) = {-0.124279, -0.722363, 0, 1.0};
Point(118) = {-0.131608, -0.722599, 0, 1.0};
Point(119) = {-0.137865, -0.722628, 0, 1.0};
Point(120) = {-0.142897, -0.722498, 0, 1.0};
Point(121) = {-0.146579, -0.722289, 0, 1.0};
Point(122) = {-0.148825, -0.722087, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074790, 0.736000, 0, 1.0};
Point(2) = {0.074421, 0.736081, 0, 1.0};
Point(3) = {0.073349, 0.736353, 0, 1.0};
Point(4) = {0.071659, 0.736849, 0, 1.0};
Point(5) = {0.069439, 0.737552, 0, 1.0};
Point(6) = {0.066753, 0.738416, 0, 1.0};
Point(7) = {0.063636, 0.739398, 0, 1.0};
Point(8) = {0.060114, 0.740487, 0, 1.0};
Point(9) = {0.056245, 0.741685, 0, 1.0};
Point(10) = {0.052115, 0.742974, 0, 1.0};
Point(11) = {0.047804, 0.744313, 0, 1.0};
Point(12) = {0.043397, 0.745641, 0, 1.0};
Point(13) = {0.038949, 0.746869, 0, 1.0};
Point(14) = {0.034468, 0.747912, 0, 1.0};
Point(15) = {0.029934, 0.748729, 0, 1.0};
Point(16) = {0.025334, 0.749318, 0, 1.0};
Point(17) = {0.020673, 0.749706, 0, 1.0};
Point(18) = {0.015993, 0.749927, 0, 1.0};
Point(19) = {0.011349, 0.750000, 0, 1.0};
Point(20) = {0.006795, 0.749936, 0, 1.0};
Point(21) = {0.002380, 0.749742, 0, 1.0};
Point(22) = {-0.001845, 0.749430, 0, 1.0};
Point(23) = {-0.005835, 0.749007, 0, 1.0};
Point(24) = {-0.009544, 0.748486, 0, 1.0};
Point(25) = {-0.012932, 0.747876, 0, 1.0};
Point(26) = {-0.015962, 0.747192, 0, 1.0};
Point(27) = {-0.018600, 0.746444, 0, 1.0};
Point(28) = {-0.020815, 0.745650, 0, 1.0};
Point(29) = {-0.022584, 0.744826, 0, 1.0};
Point(30) = {-0.023882, 0.743991, 0, 1.0};
Point(31) = {-0.024693, 0.743168, 0, 1.0};
Point(32) = {-0.025000, 0.742473, 0, 1.0};
Point(33) = {-0.025002, 0.742416, 0, 1.0};
Point(34) = {-0.024694, 0.741705, 0, 1.0};
Point(35) = {-0.023765, 0.740940, 0, 1.0};
Point(36) = {-0.022325, 0.740133, 0, 1.0};
Point(37) = {-0.020397, 0.739321, 0, 1.0};
Point(38) = {-0.018004, 0.738520, 0, 1.0};
Point(39) = {-0.015168, 0.737750, 0, 1.0};
Point(40) = {-0.011920, 0.737020, 0, 1.0};
Point(41) = {-0.008291, 0.736343, 0, 1.0};
Point(42) = {-0.004318, 0.735726, 0, 1.0};
Point(43) = {-0.000045, 0.735178, 0, 1.0};
Point(44) = {0.004485, 0.734705, 0, 1.0};
Point(45) = {0.009221, 0.734314, 0, 1.0};
Point(46) = {0.014112, 0.734010, 0, 1.0};
Point(47) = {0.019103, 0.733799, 0, 1.0};
Point(48) = {0.024139, 0.733694, 0, 1.0};
Point(49) = {0.029163, 0.733712, 0, 1.0};
Point(50) = {0.034141, 0.733882, 0, 1.0};
Point(51) = {0.039076, 0.734224, 0, 1.0};
Point(52) = {0.043996, 0.734686, 0, 1.0};
Point(53) = {0.048858, 0.735169, 0, 1.0};
Point(54) = {0.053568, 0.735602, 0, 1.0};
Point(55) = {0.058029, 0.735947, 0, 1.0};
Point(56) = {0.062139, 0.736181, 0, 1.0};
Point(57) = {0.065804, 0.736299, 0, 1.0};
Point(58) = {0.068932, 0.736314, 0, 1.0};
Point(59) = {0.071448, 0.736249, 0, 1.0};
Point(60) = {0.073289, 0.736145, 0, 1.0};
Point(61) = {0.074412, 0.736044, 0, 1.0};
Point(62) = {-0.074790, -0.736000, 0, 1.0};
Point(63) = {-0.074421, -0.736081, 0, 1.0};
Point(64) = {-0.073349, -0.736353, 0, 1.0};
Point(65) = {-0.071659, -0.736849, 0, 1.0};
Point(66) = {-0.069439, -0.737552, 0, 1.0};
Point(67) = {-0.066753, -0.738416, 0, 1.0};
Point(68) = {-0.063636, -0.739398, 0, 1.0};
Point(69) = {-0.060114, -0.740487, 0, 1.0};
Point(70) = {-0.056245, -0.741685, 0, 1.0};
Point(71) = {-0.052115, -0.742974, 0, 1.0};
Point(72) = {-0.047804, -0.744313, 0, 1.0};
Point(73) = {-0.043397, -0.745641, 0, 1.0};
Point(74) = {-0.038949, -0.746869, 0, 1.0};
Point(75) = {-0.034468, -0.747912, 0, 1.0};
Point(76) = {-0.029934, -0.748729, 0, 1.0};
Point(77) = {-0.025334, -0.749318, 0, 1.0};
Point(78) = {-0.020673, -0.749706, 0, 1.0};
Point(79) = {-0.015993, -0.749927, 0, 1.0};
Point(80) = {-0.011349, -0.750000, 0, 1.0};
Point(81) = {-0.006795, -0.749936, 0, 1.0};
Point(82) = {-0.002380, -0.749742, 0, 1.0};
Point(83) = {0.001845, -0.749430, 0, 1.0};
Point(84) = {0.005835, -0.749007, 0, 1.0};
Point(85) = {0.009544, -0.748486, 0, 1.0};
Point(86) = {0.012932, -0.747876, 0, 1.0};
Point(87) = {0.015962, -0.747192, 0, 1.0};
Point(88) = {0.018600, -0.746444, 0, 1.0};
Point(89) = {0.020815, -0.745650, 0, 1.0};
Point(90) = {0.022584, -0.744826, 0, 1.0};
Point(91) = {0.023882, -0.743991, 0, 1.0};
Point(92) = {0.024693, -0.743168, 0, 1.0};
Point(93) = {0.025000, -0.742473, 0, 1.0};
Point(94) = {0.025002, -0.742416, 0, 1.0};
Point(95) = {0.024694, -0.741705, 0, 1.0};
Point(96) = {0.023765, -0.740940, 0, 1.0};
Point(97) = {0.022325, -0.740133, 0, 1.0};
Point(98) = {0.020397, -0.739321, 0, 1.0};
Point(99) = {0.018004, -0.738520, 0, 1.0};
Point(100) = {0.015168, -0.737750, 0, 1.0};
Point(101) = {0.011920, -0.737020, 0, 1.0};
Point(102) = {0.008291, -0.736343, 0, 1.0};
Point(103) = {0.004318, -0.735726, 0, 1.0};
Point(104) = {0.000045, -0.735178, 0, 1.0};
Point(105) = {-0.004485, -0.734705, 0, 1.0};
Point(106) = {-0.009221, -0.734314, 0, 1.0};
Point(107) = {-0.014112, -0.734010, 0, 1.0};
Point(108) = {-0.019103, -0.733799, 0, 1.0};
Point(109) = {-0.024139, -0.733694, 0, 1.0};
Point(110) = {-0.029163, -0.733712, 0, 1.0};
Point(111) = {-0.034141, -0.733882, 0, 1.0};
Point(112) = {-0.039076, -0.734224, 0, 1.0};
Point(113) = {-0.043996, -0.734686, 0, 1.0};
Point(114) = {-0.048858, -0.735169, 0, 1.0};
Point(115) = {-0.053568, -0.735602, 0, 1.0};
Point(116) = {-0.058029, -0.735947, 0, 1.0};
Point(117) = {-0.062139, -0.736181, 0, 1.0};
Point(118) = {-0.065804, -0.736299, 0, 1.0};
Point(119) = {-0.068932, -0.736314, 0, 1.0};
Point(120) = {-0.071448, -0.736249, 0, 1.0};
Point(121) = {-0.073289, -0.736145, 0, 1.0};
Point(122) = {-0.074412, -0.736044, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
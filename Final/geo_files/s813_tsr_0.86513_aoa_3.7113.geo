SetFactory("OpenCASCADE");

Point(1) = {0.074843, 0.729000, 0, 1.0};
Point(2) = {0.074288, 0.729122, 0, 1.0};
Point(3) = {0.072681, 0.729530, 0, 1.0};
Point(4) = {0.070145, 0.730273, 0, 1.0};
Point(5) = {0.066815, 0.731328, 0, 1.0};
Point(6) = {0.062786, 0.732623, 0, 1.0};
Point(7) = {0.058111, 0.734097, 0, 1.0};
Point(8) = {0.052828, 0.735730, 0, 1.0};
Point(9) = {0.047025, 0.737528, 0, 1.0};
Point(10) = {0.040830, 0.739460, 0, 1.0};
Point(11) = {0.034363, 0.741470, 0, 1.0};
Point(12) = {0.027752, 0.743462, 0, 1.0};
Point(13) = {0.021080, 0.745303, 0, 1.0};
Point(14) = {0.014359, 0.746868, 0, 1.0};
Point(15) = {0.007559, 0.748094, 0, 1.0};
Point(16) = {0.000658, 0.748978, 0, 1.0};
Point(17) = {-0.006333, 0.749559, 0, 1.0};
Point(18) = {-0.013353, 0.749891, 0, 1.0};
Point(19) = {-0.020319, 0.750000, 0, 1.0};
Point(20) = {-0.027151, 0.749904, 0, 1.0};
Point(21) = {-0.033773, 0.749613, 0, 1.0};
Point(22) = {-0.040110, 0.749145, 0, 1.0};
Point(23) = {-0.046095, 0.748511, 0, 1.0};
Point(24) = {-0.051659, 0.747729, 0, 1.0};
Point(25) = {-0.056741, 0.746814, 0, 1.0};
Point(26) = {-0.061285, 0.745788, 0, 1.0};
Point(27) = {-0.065242, 0.744666, 0, 1.0};
Point(28) = {-0.068565, 0.743475, 0, 1.0};
Point(29) = {-0.071218, 0.742238, 0, 1.0};
Point(30) = {-0.073166, 0.740986, 0, 1.0};
Point(31) = {-0.074383, 0.739752, 0, 1.0};
Point(32) = {-0.074843, 0.738710, 0, 1.0};
Point(33) = {-0.074845, 0.738624, 0, 1.0};
Point(34) = {-0.074384, 0.737557, 0, 1.0};
Point(35) = {-0.072990, 0.736410, 0, 1.0};
Point(36) = {-0.070830, 0.735200, 0, 1.0};
Point(37) = {-0.067939, 0.733981, 0, 1.0};
Point(38) = {-0.064349, 0.732780, 0, 1.0};
Point(39) = {-0.060095, 0.731625, 0, 1.0};
Point(40) = {-0.055222, 0.730530, 0, 1.0};
Point(41) = {-0.049779, 0.729514, 0, 1.0};
Point(42) = {-0.043820, 0.728589, 0, 1.0};
Point(43) = {-0.037410, 0.727768, 0, 1.0};
Point(44) = {-0.030615, 0.727058, 0, 1.0};
Point(45) = {-0.023512, 0.726471, 0, 1.0};
Point(46) = {-0.016174, 0.726014, 0, 1.0};
Point(47) = {-0.008688, 0.725699, 0, 1.0};
Point(48) = {-0.001135, 0.725541, 0, 1.0};
Point(49) = {0.006402, 0.725568, 0, 1.0};
Point(50) = {0.013869, 0.725823, 0, 1.0};
Point(51) = {0.021272, 0.726336, 0, 1.0};
Point(52) = {0.028651, 0.727029, 0, 1.0};
Point(53) = {0.035944, 0.727754, 0, 1.0};
Point(54) = {0.043009, 0.728403, 0, 1.0};
Point(55) = {0.049700, 0.728921, 0, 1.0};
Point(56) = {0.055867, 0.729272, 0, 1.0};
Point(57) = {0.061363, 0.729449, 0, 1.0};
Point(58) = {0.066056, 0.729471, 0, 1.0};
Point(59) = {0.069830, 0.729374, 0, 1.0};
Point(60) = {0.072592, 0.729217, 0, 1.0};
Point(61) = {0.074276, 0.729066, 0, 1.0};
Point(62) = {-0.074843, -0.729000, 0, 1.0};
Point(63) = {-0.074288, -0.729122, 0, 1.0};
Point(64) = {-0.072681, -0.729530, 0, 1.0};
Point(65) = {-0.070145, -0.730273, 0, 1.0};
Point(66) = {-0.066815, -0.731328, 0, 1.0};
Point(67) = {-0.062786, -0.732623, 0, 1.0};
Point(68) = {-0.058111, -0.734097, 0, 1.0};
Point(69) = {-0.052828, -0.735730, 0, 1.0};
Point(70) = {-0.047025, -0.737528, 0, 1.0};
Point(71) = {-0.040830, -0.739460, 0, 1.0};
Point(72) = {-0.034363, -0.741470, 0, 1.0};
Point(73) = {-0.027752, -0.743462, 0, 1.0};
Point(74) = {-0.021080, -0.745303, 0, 1.0};
Point(75) = {-0.014359, -0.746868, 0, 1.0};
Point(76) = {-0.007559, -0.748094, 0, 1.0};
Point(77) = {-0.000658, -0.748978, 0, 1.0};
Point(78) = {0.006333, -0.749559, 0, 1.0};
Point(79) = {0.013353, -0.749891, 0, 1.0};
Point(80) = {0.020319, -0.750000, 0, 1.0};
Point(81) = {0.027151, -0.749904, 0, 1.0};
Point(82) = {0.033773, -0.749613, 0, 1.0};
Point(83) = {0.040110, -0.749145, 0, 1.0};
Point(84) = {0.046095, -0.748511, 0, 1.0};
Point(85) = {0.051659, -0.747729, 0, 1.0};
Point(86) = {0.056741, -0.746814, 0, 1.0};
Point(87) = {0.061285, -0.745788, 0, 1.0};
Point(88) = {0.065242, -0.744666, 0, 1.0};
Point(89) = {0.068565, -0.743475, 0, 1.0};
Point(90) = {0.071218, -0.742238, 0, 1.0};
Point(91) = {0.073166, -0.740986, 0, 1.0};
Point(92) = {0.074383, -0.739752, 0, 1.0};
Point(93) = {0.074843, -0.738710, 0, 1.0};
Point(94) = {0.074845, -0.738624, 0, 1.0};
Point(95) = {0.074384, -0.737557, 0, 1.0};
Point(96) = {0.072990, -0.736410, 0, 1.0};
Point(97) = {0.070830, -0.735200, 0, 1.0};
Point(98) = {0.067939, -0.733981, 0, 1.0};
Point(99) = {0.064349, -0.732780, 0, 1.0};
Point(100) = {0.060095, -0.731625, 0, 1.0};
Point(101) = {0.055222, -0.730530, 0, 1.0};
Point(102) = {0.049779, -0.729514, 0, 1.0};
Point(103) = {0.043820, -0.728589, 0, 1.0};
Point(104) = {0.037410, -0.727768, 0, 1.0};
Point(105) = {0.030615, -0.727058, 0, 1.0};
Point(106) = {0.023512, -0.726471, 0, 1.0};
Point(107) = {0.016174, -0.726014, 0, 1.0};
Point(108) = {0.008688, -0.725699, 0, 1.0};
Point(109) = {0.001135, -0.725541, 0, 1.0};
Point(110) = {-0.006402, -0.725568, 0, 1.0};
Point(111) = {-0.013869, -0.725823, 0, 1.0};
Point(112) = {-0.021272, -0.726336, 0, 1.0};
Point(113) = {-0.028651, -0.727029, 0, 1.0};
Point(114) = {-0.035944, -0.727754, 0, 1.0};
Point(115) = {-0.043009, -0.728403, 0, 1.0};
Point(116) = {-0.049700, -0.728921, 0, 1.0};
Point(117) = {-0.055867, -0.729272, 0, 1.0};
Point(118) = {-0.061363, -0.729449, 0, 1.0};
Point(119) = {-0.066056, -0.729471, 0, 1.0};
Point(120) = {-0.069830, -0.729374, 0, 1.0};
Point(121) = {-0.072592, -0.729217, 0, 1.0};
Point(122) = {-0.074276, -0.729066, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
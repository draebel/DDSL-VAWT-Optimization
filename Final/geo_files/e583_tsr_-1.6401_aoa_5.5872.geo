SetFactory("OpenCASCADE");

Point(1) = {0.074819, 0.722680, 0, 1.0};
Point(2) = {0.072676, 0.723545, 0, 1.0};
Point(3) = {0.068733, 0.725074, 0, 1.0};
Point(4) = {0.064047, 0.726837, 0, 1.0};
Point(5) = {0.058721, 0.728831, 0, 1.0};
Point(6) = {0.052851, 0.731022, 0, 1.0};
Point(7) = {0.046545, 0.733364, 0, 1.0};
Point(8) = {0.039902, 0.735798, 0, 1.0};
Point(9) = {0.033025, 0.738258, 0, 1.0};
Point(10) = {0.026005, 0.740668, 0, 1.0};
Point(11) = {0.018929, 0.742944, 0, 1.0};
Point(12) = {0.011871, 0.744980, 0, 1.0};
Point(13) = {0.004840, 0.746670, 0, 1.0};
Point(14) = {-0.002202, 0.747986, 0, 1.0};
Point(15) = {-0.009166, 0.748960, 0, 1.0};
Point(16) = {-0.016172, 0.749624, 0, 1.0};
Point(17) = {-0.022977, 0.749965, 0, 1.0};
Point(18) = {-0.029586, 0.750000, 0, 1.0};
Point(19) = {-0.035941, 0.749748, 0, 1.0};
Point(20) = {-0.041979, 0.749228, 0, 1.0};
Point(21) = {-0.047642, 0.748455, 0, 1.0};
Point(22) = {-0.052875, 0.747451, 0, 1.0};
Point(23) = {-0.057634, 0.746244, 0, 1.0};
Point(24) = {-0.061876, 0.744862, 0, 1.0};
Point(25) = {-0.065562, 0.743340, 0, 1.0};
Point(26) = {-0.068661, 0.741723, 0, 1.0};
Point(27) = {-0.071144, 0.740053, 0, 1.0};
Point(28) = {-0.072987, 0.738393, 0, 1.0};
Point(29) = {-0.074168, 0.736816, 0, 1.0};
Point(30) = {-0.074475, 0.736156, 0, 1.0};
Point(31) = {-0.074600, 0.735746, 0, 1.0};
Point(32) = {-0.074644, 0.735489, 0, 1.0};
Point(33) = {-0.074658, 0.735248, 0, 1.0};
Point(34) = {-0.074653, 0.735134, 0, 1.0};
Point(35) = {-0.074637, 0.735026, 0, 1.0};
Point(36) = {-0.074609, 0.734928, 0, 1.0};
Point(37) = {-0.074565, 0.734833, 0, 1.0};
Point(38) = {-0.074504, 0.734736, 0, 1.0};
Point(39) = {-0.074431, 0.734640, 0, 1.0};
Point(40) = {-0.074248, 0.734445, 0, 1.0};
Point(41) = {-0.074023, 0.734246, 0, 1.0};
Point(42) = {-0.073613, 0.733945, 0, 1.0};
Point(43) = {-0.072646, 0.733381, 0, 1.0};
Point(44) = {-0.070200, 0.732353, 0, 1.0};
Point(45) = {-0.066891, 0.731340, 0, 1.0};
Point(46) = {-0.062762, 0.730346, 0, 1.0};
Point(47) = {-0.057857, 0.729372, 0, 1.0};
Point(48) = {-0.052240, 0.728408, 0, 1.0};
Point(49) = {-0.045985, 0.727455, 0, 1.0};
Point(50) = {-0.039173, 0.726516, 0, 1.0};
Point(51) = {-0.031892, 0.725597, 0, 1.0};
Point(52) = {-0.024234, 0.724707, 0, 1.0};
Point(53) = {-0.016298, 0.723859, 0, 1.0};
Point(54) = {-0.008180, 0.723066, 0, 1.0};
Point(55) = {0.000018, 0.722347, 0, 1.0};
Point(56) = {0.008195, 0.721721, 0, 1.0};
Point(57) = {0.016255, 0.721216, 0, 1.0};
Point(58) = {0.024095, 0.720884, 0, 1.0};
Point(59) = {0.031696, 0.720799, 0, 1.0};
Point(60) = {0.039090, 0.720946, 0, 1.0};
Point(61) = {0.046266, 0.721235, 0, 1.0};
Point(62) = {0.053170, 0.721549, 0, 1.0};
Point(63) = {0.059676, 0.721750, 0, 1.0};
Point(64) = {0.065595, 0.721764, 0, 1.0};
Point(65) = {0.070733, 0.721572, 0, 1.0};
Point(66) = {0.074678, 0.721234, 0, 1.0};
Point(67) = {-0.074819, -0.722680, 0, 1.0};
Point(68) = {-0.072676, -0.723545, 0, 1.0};
Point(69) = {-0.068733, -0.725074, 0, 1.0};
Point(70) = {-0.064047, -0.726837, 0, 1.0};
Point(71) = {-0.058721, -0.728831, 0, 1.0};
Point(72) = {-0.052851, -0.731022, 0, 1.0};
Point(73) = {-0.046545, -0.733364, 0, 1.0};
Point(74) = {-0.039902, -0.735798, 0, 1.0};
Point(75) = {-0.033025, -0.738258, 0, 1.0};
Point(76) = {-0.026005, -0.740668, 0, 1.0};
Point(77) = {-0.018929, -0.742944, 0, 1.0};
Point(78) = {-0.011871, -0.744980, 0, 1.0};
Point(79) = {-0.004840, -0.746670, 0, 1.0};
Point(80) = {0.002202, -0.747986, 0, 1.0};
Point(81) = {0.009166, -0.748960, 0, 1.0};
Point(82) = {0.016172, -0.749624, 0, 1.0};
Point(83) = {0.022977, -0.749965, 0, 1.0};
Point(84) = {0.029586, -0.750000, 0, 1.0};
Point(85) = {0.035941, -0.749748, 0, 1.0};
Point(86) = {0.041979, -0.749228, 0, 1.0};
Point(87) = {0.047642, -0.748455, 0, 1.0};
Point(88) = {0.052875, -0.747451, 0, 1.0};
Point(89) = {0.057634, -0.746244, 0, 1.0};
Point(90) = {0.061876, -0.744862, 0, 1.0};
Point(91) = {0.065562, -0.743340, 0, 1.0};
Point(92) = {0.068661, -0.741723, 0, 1.0};
Point(93) = {0.071144, -0.740053, 0, 1.0};
Point(94) = {0.072987, -0.738393, 0, 1.0};
Point(95) = {0.074168, -0.736816, 0, 1.0};
Point(96) = {0.074475, -0.736156, 0, 1.0};
Point(97) = {0.074600, -0.735746, 0, 1.0};
Point(98) = {0.074644, -0.735489, 0, 1.0};
Point(99) = {0.074658, -0.735248, 0, 1.0};
Point(100) = {0.074653, -0.735134, 0, 1.0};
Point(101) = {0.074637, -0.735026, 0, 1.0};
Point(102) = {0.074609, -0.734928, 0, 1.0};
Point(103) = {0.074565, -0.734833, 0, 1.0};
Point(104) = {0.074504, -0.734736, 0, 1.0};
Point(105) = {0.074431, -0.734640, 0, 1.0};
Point(106) = {0.074248, -0.734445, 0, 1.0};
Point(107) = {0.074023, -0.734246, 0, 1.0};
Point(108) = {0.073613, -0.733945, 0, 1.0};
Point(109) = {0.072646, -0.733381, 0, 1.0};
Point(110) = {0.070200, -0.732353, 0, 1.0};
Point(111) = {0.066891, -0.731340, 0, 1.0};
Point(112) = {0.062762, -0.730346, 0, 1.0};
Point(113) = {0.057857, -0.729372, 0, 1.0};
Point(114) = {0.052240, -0.728408, 0, 1.0};
Point(115) = {0.045985, -0.727455, 0, 1.0};
Point(116) = {0.039173, -0.726516, 0, 1.0};
Point(117) = {0.031892, -0.725597, 0, 1.0};
Point(118) = {0.024234, -0.724707, 0, 1.0};
Point(119) = {0.016298, -0.723859, 0, 1.0};
Point(120) = {0.008180, -0.723066, 0, 1.0};
Point(121) = {-0.000018, -0.722347, 0, 1.0};
Point(122) = {-0.008195, -0.721721, 0, 1.0};
Point(123) = {-0.016255, -0.721216, 0, 1.0};
Point(124) = {-0.024095, -0.720884, 0, 1.0};
Point(125) = {-0.031696, -0.720799, 0, 1.0};
Point(126) = {-0.039090, -0.720946, 0, 1.0};
Point(127) = {-0.046266, -0.721235, 0, 1.0};
Point(128) = {-0.053170, -0.721549, 0, 1.0};
Point(129) = {-0.059676, -0.721750, 0, 1.0};
Point(130) = {-0.065595, -0.721764, 0, 1.0};
Point(131) = {-0.070733, -0.721572, 0, 1.0};
Point(132) = {-0.074678, -0.721234, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {36.00000000, 15.00000000, 0, 1.0};
Point(136) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
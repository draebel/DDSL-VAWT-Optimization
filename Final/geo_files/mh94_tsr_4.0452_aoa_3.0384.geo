SetFactory("OpenCASCADE");

Point(1) = {0.074978, 0.731664, 0, 1.0};
Point(2) = {0.072153, 0.732578, 0, 1.0};
Point(3) = {0.068137, 0.733869, 0, 1.0};
Point(4) = {0.063458, 0.735246, 0, 1.0};
Point(5) = {0.058141, 0.736685, 0, 1.0};
Point(6) = {0.052248, 0.738168, 0, 1.0};
Point(7) = {0.045845, 0.739662, 0, 1.0};
Point(8) = {0.039003, 0.741141, 0, 1.0};
Point(9) = {0.031792, 0.742579, 0, 1.0};
Point(10) = {0.024292, 0.743955, 0, 1.0};
Point(11) = {0.016588, 0.745244, 0, 1.0};
Point(12) = {0.008764, 0.746417, 0, 1.0};
Point(13) = {0.000898, 0.747451, 0, 1.0};
Point(14) = {-0.006931, 0.748328, 0, 1.0};
Point(15) = {-0.014644, 0.749032, 0, 1.0};
Point(16) = {-0.022163, 0.749551, 0, 1.0};
Point(17) = {-0.029412, 0.749876, 0, 1.0};
Point(18) = {-0.036316, 0.750000, 0, 1.0};
Point(19) = {-0.042805, 0.749920, 0, 1.0};
Point(20) = {-0.048809, 0.749630, 0, 1.0};
Point(21) = {-0.054274, 0.749122, 0, 1.0};
Point(22) = {-0.059158, 0.748403, 0, 1.0};
Point(23) = {-0.063409, 0.747498, 0, 1.0};
Point(24) = {-0.066952, 0.746402, 0, 1.0};
Point(25) = {-0.069767, 0.745052, 0, 1.0};
Point(26) = {-0.071935, 0.743446, 0, 1.0};
Point(27) = {-0.073514, 0.741680, 0, 1.0};
Point(28) = {-0.074506, 0.739871, 0, 1.0};
Point(29) = {-0.074857, 0.738548, 0, 1.0};
Point(30) = {-0.074895, 0.738051, 0, 1.0};
Point(31) = {-0.074872, 0.737581, 0, 1.0};
Point(32) = {-0.074820, 0.737286, 0, 1.0};
Point(33) = {-0.074730, 0.737015, 0, 1.0};
Point(34) = {-0.074588, 0.736757, 0, 1.0};
Point(35) = {-0.074395, 0.736496, 0, 1.0};
Point(36) = {-0.074027, 0.736098, 0, 1.0};
Point(37) = {-0.073575, 0.735693, 0, 1.0};
Point(38) = {-0.073151, 0.735358, 0, 1.0};
Point(39) = {-0.070901, 0.733961, 0, 1.0};
Point(40) = {-0.067880, 0.732547, 0, 1.0};
Point(41) = {-0.064149, 0.731152, 0, 1.0};
Point(42) = {-0.059763, 0.729810, 0, 1.0};
Point(43) = {-0.054776, 0.728560, 0, 1.0};
Point(44) = {-0.049235, 0.727440, 0, 1.0};
Point(45) = {-0.043181, 0.726470, 0, 1.0};
Point(46) = {-0.036676, 0.725662, 0, 1.0};
Point(47) = {-0.029782, 0.725043, 0, 1.0};
Point(48) = {-0.022550, 0.724625, 0, 1.0};
Point(49) = {-0.015044, 0.724410, 0, 1.0};
Point(50) = {-0.007326, 0.724404, 0, 1.0};
Point(51) = {0.000551, 0.724601, 0, 1.0};
Point(52) = {0.008523, 0.724974, 0, 1.0};
Point(53) = {0.016516, 0.725495, 0, 1.0};
Point(54) = {0.024456, 0.726134, 0, 1.0};
Point(55) = {0.032267, 0.726852, 0, 1.0};
Point(56) = {0.039864, 0.727599, 0, 1.0};
Point(57) = {0.047150, 0.728323, 0, 1.0};
Point(58) = {0.054019, 0.728974, 0, 1.0};
Point(59) = {0.060357, 0.729510, 0, 1.0};
Point(60) = {0.066041, 0.729901, 0, 1.0};
Point(61) = {0.070945, 0.730126, 0, 1.0};
Point(62) = {0.074899, 0.730191, 0, 1.0};
Point(63) = {-0.074978, -0.731664, 0, 1.0};
Point(64) = {-0.072153, -0.732578, 0, 1.0};
Point(65) = {-0.068137, -0.733869, 0, 1.0};
Point(66) = {-0.063458, -0.735246, 0, 1.0};
Point(67) = {-0.058141, -0.736685, 0, 1.0};
Point(68) = {-0.052248, -0.738168, 0, 1.0};
Point(69) = {-0.045845, -0.739662, 0, 1.0};
Point(70) = {-0.039003, -0.741141, 0, 1.0};
Point(71) = {-0.031792, -0.742579, 0, 1.0};
Point(72) = {-0.024292, -0.743955, 0, 1.0};
Point(73) = {-0.016588, -0.745244, 0, 1.0};
Point(74) = {-0.008764, -0.746417, 0, 1.0};
Point(75) = {-0.000898, -0.747451, 0, 1.0};
Point(76) = {0.006931, -0.748328, 0, 1.0};
Point(77) = {0.014644, -0.749032, 0, 1.0};
Point(78) = {0.022163, -0.749551, 0, 1.0};
Point(79) = {0.029412, -0.749876, 0, 1.0};
Point(80) = {0.036316, -0.750000, 0, 1.0};
Point(81) = {0.042805, -0.749920, 0, 1.0};
Point(82) = {0.048809, -0.749630, 0, 1.0};
Point(83) = {0.054274, -0.749122, 0, 1.0};
Point(84) = {0.059158, -0.748403, 0, 1.0};
Point(85) = {0.063409, -0.747498, 0, 1.0};
Point(86) = {0.066952, -0.746402, 0, 1.0};
Point(87) = {0.069767, -0.745052, 0, 1.0};
Point(88) = {0.071935, -0.743446, 0, 1.0};
Point(89) = {0.073514, -0.741680, 0, 1.0};
Point(90) = {0.074506, -0.739871, 0, 1.0};
Point(91) = {0.074857, -0.738548, 0, 1.0};
Point(92) = {0.074895, -0.738051, 0, 1.0};
Point(93) = {0.074872, -0.737581, 0, 1.0};
Point(94) = {0.074820, -0.737286, 0, 1.0};
Point(95) = {0.074730, -0.737015, 0, 1.0};
Point(96) = {0.074588, -0.736757, 0, 1.0};
Point(97) = {0.074395, -0.736496, 0, 1.0};
Point(98) = {0.074027, -0.736098, 0, 1.0};
Point(99) = {0.073575, -0.735693, 0, 1.0};
Point(100) = {0.073151, -0.735358, 0, 1.0};
Point(101) = {0.070901, -0.733961, 0, 1.0};
Point(102) = {0.067880, -0.732547, 0, 1.0};
Point(103) = {0.064149, -0.731152, 0, 1.0};
Point(104) = {0.059763, -0.729810, 0, 1.0};
Point(105) = {0.054776, -0.728560, 0, 1.0};
Point(106) = {0.049235, -0.727440, 0, 1.0};
Point(107) = {0.043181, -0.726470, 0, 1.0};
Point(108) = {0.036676, -0.725662, 0, 1.0};
Point(109) = {0.029782, -0.725043, 0, 1.0};
Point(110) = {0.022550, -0.724625, 0, 1.0};
Point(111) = {0.015044, -0.724410, 0, 1.0};
Point(112) = {0.007326, -0.724404, 0, 1.0};
Point(113) = {-0.000551, -0.724601, 0, 1.0};
Point(114) = {-0.008523, -0.724974, 0, 1.0};
Point(115) = {-0.016516, -0.725495, 0, 1.0};
Point(116) = {-0.024456, -0.726134, 0, 1.0};
Point(117) = {-0.032267, -0.726852, 0, 1.0};
Point(118) = {-0.039864, -0.727599, 0, 1.0};
Point(119) = {-0.047150, -0.728323, 0, 1.0};
Point(120) = {-0.054019, -0.728974, 0, 1.0};
Point(121) = {-0.060357, -0.729510, 0, 1.0};
Point(122) = {-0.066041, -0.729901, 0, 1.0};
Point(123) = {-0.070945, -0.730126, 0, 1.0};
Point(124) = {-0.074899, -0.730191, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:46};
Spline(3) = {46:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:80};
Spline(6) = {80:108};
Spline(7) = {108:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
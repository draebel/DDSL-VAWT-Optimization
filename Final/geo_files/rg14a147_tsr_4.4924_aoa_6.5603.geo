SetFactory("OpenCASCADE");

Point(1) = {0.074345, 0.736131, 0, 1.0};
Point(2) = {0.074019, 0.736207, 0, 1.0};
Point(3) = {0.073077, 0.736442, 0, 1.0};
Point(4) = {0.071595, 0.736825, 0, 1.0};
Point(5) = {0.069612, 0.737318, 0, 1.0};
Point(6) = {0.067136, 0.737900, 0, 1.0};
Point(7) = {0.064193, 0.738571, 0, 1.0};
Point(8) = {0.060828, 0.739321, 0, 1.0};
Point(9) = {0.057082, 0.740138, 0, 1.0};
Point(10) = {0.053003, 0.741006, 0, 1.0};
Point(11) = {0.047650, 0.742080, 0, 1.0};
Point(12) = {0.044036, 0.742836, 0, 1.0};
Point(13) = {0.039254, 0.743762, 0, 1.0};
Point(14) = {0.034344, 0.744675, 0, 1.0};
Point(15) = {0.029359, 0.745557, 0, 1.0};
Point(16) = {0.024348, 0.746393, 0, 1.0};
Point(17) = {0.019364, 0.747169, 0, 1.0};
Point(18) = {0.014457, 0.747870, 0, 1.0};
Point(19) = {0.009673, 0.748486, 0, 1.0};
Point(20) = {0.005060, 0.749005, 0, 1.0};
Point(21) = {0.000658, 0.749420, 0, 1.0};
Point(22) = {-0.003492, 0.749726, 0, 1.0};
Point(23) = {-0.007357, 0.749919, 0, 1.0};
Point(24) = {-0.010899, 0.750000, 0, 1.0};
Point(25) = {-0.014095, 0.749970, 0, 1.0};
Point(26) = {-0.016915, 0.749834, 0, 1.0};
Point(27) = {-0.019337, 0.749600, 0, 1.0};
Point(28) = {-0.021348, 0.749278, 0, 1.0};
Point(29) = {-0.022930, 0.748882, 0, 1.0};
Point(30) = {-0.024093, 0.748434, 0, 1.0};
Point(31) = {-0.024789, 0.747968, 0, 1.0};
Point(32) = {-0.025000, 0.747556, 0, 1.0};
Point(33) = {-0.024730, 0.747191, 0, 1.0};
Point(34) = {-0.024127, 0.746832, 0, 1.0};
Point(35) = {-0.022967, 0.746352, 0, 1.0};
Point(36) = {-0.021467, 0.745899, 0, 1.0};
Point(37) = {-0.019531, 0.745428, 0, 1.0};
Point(38) = {-0.017198, 0.744956, 0, 1.0};
Point(39) = {-0.014467, 0.744477, 0, 1.0};
Point(40) = {-0.011362, 0.743998, 0, 1.0};
Point(41) = {-0.007902, 0.743513, 0, 1.0};
Point(42) = {-0.004116, 0.743027, 0, 1.0};
Point(43) = {-0.000032, 0.742538, 0, 1.0};
Point(44) = {0.004318, 0.742047, 0, 1.0};
Point(45) = {0.008891, 0.741557, 0, 1.0};
Point(46) = {0.013652, 0.741068, 0, 1.0};
Point(47) = {0.018552, 0.740582, 0, 1.0};
Point(48) = {0.023546, 0.740105, 0, 1.0};
Point(49) = {0.028581, 0.739639, 0, 1.0};
Point(50) = {0.033609, 0.739191, 0, 1.0};
Point(51) = {0.038573, 0.738767, 0, 1.0};
Point(52) = {0.043425, 0.738375, 0, 1.0};
Point(53) = {0.048117, 0.738039, 0, 1.0};
Point(54) = {0.052570, 0.737763, 0, 1.0};
Point(55) = {0.056726, 0.737522, 0, 1.0};
Point(56) = {0.060541, 0.737290, 0, 1.0};
Point(57) = {0.063973, 0.737062, 0, 1.0};
Point(58) = {0.066974, 0.736840, 0, 1.0};
Point(59) = {0.069500, 0.736632, 0, 1.0};
Point(60) = {0.071529, 0.736448, 0, 1.0};
Point(61) = {0.073050, 0.736293, 0, 1.0};
Point(62) = {0.074013, 0.736177, 0, 1.0};
Point(63) = {-0.074345, -0.736131, 0, 1.0};
Point(64) = {-0.074019, -0.736207, 0, 1.0};
Point(65) = {-0.073077, -0.736442, 0, 1.0};
Point(66) = {-0.071595, -0.736825, 0, 1.0};
Point(67) = {-0.069612, -0.737318, 0, 1.0};
Point(68) = {-0.067136, -0.737900, 0, 1.0};
Point(69) = {-0.064193, -0.738571, 0, 1.0};
Point(70) = {-0.060828, -0.739321, 0, 1.0};
Point(71) = {-0.057082, -0.740138, 0, 1.0};
Point(72) = {-0.053003, -0.741006, 0, 1.0};
Point(73) = {-0.047650, -0.742080, 0, 1.0};
Point(74) = {-0.044036, -0.742836, 0, 1.0};
Point(75) = {-0.039254, -0.743762, 0, 1.0};
Point(76) = {-0.034344, -0.744675, 0, 1.0};
Point(77) = {-0.029359, -0.745557, 0, 1.0};
Point(78) = {-0.024348, -0.746393, 0, 1.0};
Point(79) = {-0.019364, -0.747169, 0, 1.0};
Point(80) = {-0.014457, -0.747870, 0, 1.0};
Point(81) = {-0.009673, -0.748486, 0, 1.0};
Point(82) = {-0.005060, -0.749005, 0, 1.0};
Point(83) = {-0.000658, -0.749420, 0, 1.0};
Point(84) = {0.003492, -0.749726, 0, 1.0};
Point(85) = {0.007357, -0.749919, 0, 1.0};
Point(86) = {0.010899, -0.750000, 0, 1.0};
Point(87) = {0.014095, -0.749970, 0, 1.0};
Point(88) = {0.016915, -0.749834, 0, 1.0};
Point(89) = {0.019337, -0.749600, 0, 1.0};
Point(90) = {0.021348, -0.749278, 0, 1.0};
Point(91) = {0.022930, -0.748882, 0, 1.0};
Point(92) = {0.024093, -0.748434, 0, 1.0};
Point(93) = {0.024789, -0.747968, 0, 1.0};
Point(94) = {0.025000, -0.747556, 0, 1.0};
Point(95) = {0.024730, -0.747191, 0, 1.0};
Point(96) = {0.024127, -0.746832, 0, 1.0};
Point(97) = {0.022967, -0.746352, 0, 1.0};
Point(98) = {0.021467, -0.745899, 0, 1.0};
Point(99) = {0.019531, -0.745428, 0, 1.0};
Point(100) = {0.017198, -0.744956, 0, 1.0};
Point(101) = {0.014467, -0.744477, 0, 1.0};
Point(102) = {0.011362, -0.743998, 0, 1.0};
Point(103) = {0.007902, -0.743513, 0, 1.0};
Point(104) = {0.004116, -0.743027, 0, 1.0};
Point(105) = {0.000032, -0.742538, 0, 1.0};
Point(106) = {-0.004318, -0.742047, 0, 1.0};
Point(107) = {-0.008891, -0.741557, 0, 1.0};
Point(108) = {-0.013652, -0.741068, 0, 1.0};
Point(109) = {-0.018552, -0.740582, 0, 1.0};
Point(110) = {-0.023546, -0.740105, 0, 1.0};
Point(111) = {-0.028581, -0.739639, 0, 1.0};
Point(112) = {-0.033609, -0.739191, 0, 1.0};
Point(113) = {-0.038573, -0.738767, 0, 1.0};
Point(114) = {-0.043425, -0.738375, 0, 1.0};
Point(115) = {-0.048117, -0.738039, 0, 1.0};
Point(116) = {-0.052570, -0.737763, 0, 1.0};
Point(117) = {-0.056726, -0.737522, 0, 1.0};
Point(118) = {-0.060541, -0.737290, 0, 1.0};
Point(119) = {-0.063973, -0.737062, 0, 1.0};
Point(120) = {-0.066974, -0.736840, 0, 1.0};
Point(121) = {-0.069500, -0.736632, 0, 1.0};
Point(122) = {-0.071529, -0.736448, 0, 1.0};
Point(123) = {-0.073050, -0.736293, 0, 1.0};
Point(124) = {-0.074013, -0.736177, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:105};
Spline(7) = {105:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
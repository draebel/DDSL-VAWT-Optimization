SetFactory("OpenCASCADE");

Point(1) = {0.148690, 0.722262, 0, 1.0};
Point(2) = {0.148037, 0.722414, 0, 1.0};
Point(3) = {0.146155, 0.722884, 0, 1.0};
Point(4) = {0.143191, 0.723649, 0, 1.0};
Point(5) = {0.139224, 0.724635, 0, 1.0};
Point(6) = {0.134272, 0.725800, 0, 1.0};
Point(7) = {0.128387, 0.727142, 0, 1.0};
Point(8) = {0.121656, 0.728642, 0, 1.0};
Point(9) = {0.114164, 0.730275, 0, 1.0};
Point(10) = {0.106007, 0.732012, 0, 1.0};
Point(11) = {0.095300, 0.734160, 0, 1.0};
Point(12) = {0.088072, 0.735672, 0, 1.0};
Point(13) = {0.078509, 0.737524, 0, 1.0};
Point(14) = {0.068689, 0.739350, 0, 1.0};
Point(15) = {0.058717, 0.741115, 0, 1.0};
Point(16) = {0.048697, 0.742787, 0, 1.0};
Point(17) = {0.038729, 0.744338, 0, 1.0};
Point(18) = {0.028914, 0.745740, 0, 1.0};
Point(19) = {0.019347, 0.746971, 0, 1.0};
Point(20) = {0.010121, 0.748010, 0, 1.0};
Point(21) = {0.001316, 0.748840, 0, 1.0};
Point(22) = {-0.006985, 0.749452, 0, 1.0};
Point(23) = {-0.014713, 0.749837, 0, 1.0};
Point(24) = {-0.021799, 0.750000, 0, 1.0};
Point(25) = {-0.028190, 0.749940, 0, 1.0};
Point(26) = {-0.033830, 0.749668, 0, 1.0};
Point(27) = {-0.038675, 0.749201, 0, 1.0};
Point(28) = {-0.042697, 0.748556, 0, 1.0};
Point(29) = {-0.045860, 0.747764, 0, 1.0};
Point(30) = {-0.048185, 0.746868, 0, 1.0};
Point(31) = {-0.049577, 0.745935, 0, 1.0};
Point(32) = {-0.050000, 0.745112, 0, 1.0};
Point(33) = {-0.049460, 0.744381, 0, 1.0};
Point(34) = {-0.048254, 0.743665, 0, 1.0};
Point(35) = {-0.045935, 0.742704, 0, 1.0};
Point(36) = {-0.042934, 0.741797, 0, 1.0};
Point(37) = {-0.039063, 0.740856, 0, 1.0};
Point(38) = {-0.034396, 0.739911, 0, 1.0};
Point(39) = {-0.028934, 0.738955, 0, 1.0};
Point(40) = {-0.022724, 0.737995, 0, 1.0};
Point(41) = {-0.015804, 0.737026, 0, 1.0};
Point(42) = {-0.008231, 0.736055, 0, 1.0};
Point(43) = {-0.000064, 0.735075, 0, 1.0};
Point(44) = {0.008635, 0.734095, 0, 1.0};
Point(45) = {0.017783, 0.733113, 0, 1.0};
Point(46) = {0.027304, 0.732135, 0, 1.0};
Point(47) = {0.037105, 0.731165, 0, 1.0};
Point(48) = {0.047091, 0.730210, 0, 1.0};
Point(49) = {0.057163, 0.729279, 0, 1.0};
Point(50) = {0.067218, 0.728382, 0, 1.0};
Point(51) = {0.077146, 0.727534, 0, 1.0};
Point(52) = {0.086850, 0.726751, 0, 1.0};
Point(53) = {0.096235, 0.726078, 0, 1.0};
Point(54) = {0.105140, 0.725527, 0, 1.0};
Point(55) = {0.113452, 0.725044, 0, 1.0};
Point(56) = {0.121082, 0.724579, 0, 1.0};
Point(57) = {0.127945, 0.724124, 0, 1.0};
Point(58) = {0.133948, 0.723680, 0, 1.0};
Point(59) = {0.138999, 0.723264, 0, 1.0};
Point(60) = {0.143058, 0.722896, 0, 1.0};
Point(61) = {0.146100, 0.722586, 0, 1.0};
Point(62) = {0.148027, 0.722354, 0, 1.0};
Point(63) = {-0.148690, -0.722262, 0, 1.0};
Point(64) = {-0.148037, -0.722414, 0, 1.0};
Point(65) = {-0.146155, -0.722884, 0, 1.0};
Point(66) = {-0.143191, -0.723649, 0, 1.0};
Point(67) = {-0.139224, -0.724635, 0, 1.0};
Point(68) = {-0.134272, -0.725800, 0, 1.0};
Point(69) = {-0.128387, -0.727142, 0, 1.0};
Point(70) = {-0.121656, -0.728642, 0, 1.0};
Point(71) = {-0.114164, -0.730275, 0, 1.0};
Point(72) = {-0.106007, -0.732012, 0, 1.0};
Point(73) = {-0.095300, -0.734160, 0, 1.0};
Point(74) = {-0.088072, -0.735672, 0, 1.0};
Point(75) = {-0.078509, -0.737524, 0, 1.0};
Point(76) = {-0.068689, -0.739350, 0, 1.0};
Point(77) = {-0.058717, -0.741115, 0, 1.0};
Point(78) = {-0.048697, -0.742787, 0, 1.0};
Point(79) = {-0.038729, -0.744338, 0, 1.0};
Point(80) = {-0.028914, -0.745740, 0, 1.0};
Point(81) = {-0.019347, -0.746971, 0, 1.0};
Point(82) = {-0.010121, -0.748010, 0, 1.0};
Point(83) = {-0.001316, -0.748840, 0, 1.0};
Point(84) = {0.006985, -0.749452, 0, 1.0};
Point(85) = {0.014713, -0.749837, 0, 1.0};
Point(86) = {0.021799, -0.750000, 0, 1.0};
Point(87) = {0.028190, -0.749940, 0, 1.0};
Point(88) = {0.033830, -0.749668, 0, 1.0};
Point(89) = {0.038675, -0.749201, 0, 1.0};
Point(90) = {0.042697, -0.748556, 0, 1.0};
Point(91) = {0.045860, -0.747764, 0, 1.0};
Point(92) = {0.048185, -0.746868, 0, 1.0};
Point(93) = {0.049577, -0.745935, 0, 1.0};
Point(94) = {0.050000, -0.745112, 0, 1.0};
Point(95) = {0.049460, -0.744381, 0, 1.0};
Point(96) = {0.048254, -0.743665, 0, 1.0};
Point(97) = {0.045935, -0.742704, 0, 1.0};
Point(98) = {0.042934, -0.741797, 0, 1.0};
Point(99) = {0.039063, -0.740856, 0, 1.0};
Point(100) = {0.034396, -0.739911, 0, 1.0};
Point(101) = {0.028934, -0.738955, 0, 1.0};
Point(102) = {0.022724, -0.737995, 0, 1.0};
Point(103) = {0.015804, -0.737026, 0, 1.0};
Point(104) = {0.008231, -0.736055, 0, 1.0};
Point(105) = {0.000064, -0.735075, 0, 1.0};
Point(106) = {-0.008635, -0.734095, 0, 1.0};
Point(107) = {-0.017783, -0.733113, 0, 1.0};
Point(108) = {-0.027304, -0.732135, 0, 1.0};
Point(109) = {-0.037105, -0.731165, 0, 1.0};
Point(110) = {-0.047091, -0.730210, 0, 1.0};
Point(111) = {-0.057163, -0.729279, 0, 1.0};
Point(112) = {-0.067218, -0.728382, 0, 1.0};
Point(113) = {-0.077146, -0.727534, 0, 1.0};
Point(114) = {-0.086850, -0.726751, 0, 1.0};
Point(115) = {-0.096235, -0.726078, 0, 1.0};
Point(116) = {-0.105140, -0.725527, 0, 1.0};
Point(117) = {-0.113452, -0.725044, 0, 1.0};
Point(118) = {-0.121082, -0.724579, 0, 1.0};
Point(119) = {-0.127945, -0.724124, 0, 1.0};
Point(120) = {-0.133948, -0.723680, 0, 1.0};
Point(121) = {-0.138999, -0.723264, 0, 1.0};
Point(122) = {-0.143058, -0.722896, 0, 1.0};
Point(123) = {-0.146100, -0.722586, 0, 1.0};
Point(124) = {-0.148027, -0.722354, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:105};
Spline(7) = {105:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074509, 0.729197, 0, 1.0};
Point(2) = {0.074019, 0.729310, 0, 1.0};
Point(3) = {0.072607, 0.729663, 0, 1.0};
Point(4) = {0.070384, 0.730237, 0, 1.0};
Point(5) = {0.067409, 0.730976, 0, 1.0};
Point(6) = {0.063695, 0.731850, 0, 1.0};
Point(7) = {0.059281, 0.732856, 0, 1.0};
Point(8) = {0.054233, 0.733982, 0, 1.0};
Point(9) = {0.048614, 0.735206, 0, 1.0};
Point(10) = {0.042496, 0.736509, 0, 1.0};
Point(11) = {0.034466, 0.738120, 0, 1.0};
Point(12) = {0.029045, 0.739254, 0, 1.0};
Point(13) = {0.021873, 0.740643, 0, 1.0};
Point(14) = {0.014508, 0.742013, 0, 1.0};
Point(15) = {0.007029, 0.743336, 0, 1.0};
Point(16) = {-0.000486, 0.744590, 0, 1.0};
Point(17) = {-0.007963, 0.745753, 0, 1.0};
Point(18) = {-0.015323, 0.746805, 0, 1.0};
Point(19) = {-0.022499, 0.747728, 0, 1.0};
Point(20) = {-0.029418, 0.748508, 0, 1.0};
Point(21) = {-0.036022, 0.749130, 0, 1.0};
Point(22) = {-0.042247, 0.749589, 0, 1.0};
Point(23) = {-0.048044, 0.749878, 0, 1.0};
Point(24) = {-0.053358, 0.750000, 0, 1.0};
Point(25) = {-0.058151, 0.749955, 0, 1.0};
Point(26) = {-0.062381, 0.749751, 0, 1.0};
Point(27) = {-0.066015, 0.749401, 0, 1.0};
Point(28) = {-0.069031, 0.748917, 0, 1.0};
Point(29) = {-0.071404, 0.748323, 0, 1.0};
Point(30) = {-0.073148, 0.747651, 0, 1.0};
Point(31) = {-0.074192, 0.746951, 0, 1.0};
Point(32) = {-0.074509, 0.746334, 0, 1.0};
Point(33) = {-0.074104, 0.745786, 0, 1.0};
Point(34) = {-0.073199, 0.745249, 0, 1.0};
Point(35) = {-0.071460, 0.744528, 0, 1.0};
Point(36) = {-0.069210, 0.743848, 0, 1.0};
Point(37) = {-0.066306, 0.743142, 0, 1.0};
Point(38) = {-0.062806, 0.742433, 0, 1.0};
Point(39) = {-0.058709, 0.741716, 0, 1.0};
Point(40) = {-0.054052, 0.740996, 0, 1.0};
Point(41) = {-0.048862, 0.740270, 0, 1.0};
Point(42) = {-0.043182, 0.739541, 0, 1.0};
Point(43) = {-0.037057, 0.738806, 0, 1.0};
Point(44) = {-0.030532, 0.738071, 0, 1.0};
Point(45) = {-0.023672, 0.737335, 0, 1.0};
Point(46) = {-0.016531, 0.736601, 0, 1.0};
Point(47) = {-0.009180, 0.735874, 0, 1.0};
Point(48) = {-0.001691, 0.735157, 0, 1.0};
Point(49) = {0.005863, 0.734459, 0, 1.0};
Point(50) = {0.013405, 0.733787, 0, 1.0};
Point(51) = {0.020851, 0.733151, 0, 1.0};
Point(52) = {0.028129, 0.732563, 0, 1.0};
Point(53) = {0.035167, 0.732059, 0, 1.0};
Point(54) = {0.041846, 0.731645, 0, 1.0};
Point(55) = {0.048080, 0.731283, 0, 1.0};
Point(56) = {0.053803, 0.730935, 0, 1.0};
Point(57) = {0.058950, 0.730593, 0, 1.0};
Point(58) = {0.063452, 0.730260, 0, 1.0};
Point(59) = {0.067241, 0.729948, 0, 1.0};
Point(60) = {0.070285, 0.729672, 0, 1.0};
Point(61) = {0.072566, 0.729440, 0, 1.0};
Point(62) = {0.074011, 0.729266, 0, 1.0};
Point(63) = {-0.074509, -0.729197, 0, 1.0};
Point(64) = {-0.074019, -0.729310, 0, 1.0};
Point(65) = {-0.072607, -0.729663, 0, 1.0};
Point(66) = {-0.070384, -0.730237, 0, 1.0};
Point(67) = {-0.067409, -0.730976, 0, 1.0};
Point(68) = {-0.063695, -0.731850, 0, 1.0};
Point(69) = {-0.059281, -0.732856, 0, 1.0};
Point(70) = {-0.054233, -0.733982, 0, 1.0};
Point(71) = {-0.048614, -0.735206, 0, 1.0};
Point(72) = {-0.042496, -0.736509, 0, 1.0};
Point(73) = {-0.034466, -0.738120, 0, 1.0};
Point(74) = {-0.029045, -0.739254, 0, 1.0};
Point(75) = {-0.021873, -0.740643, 0, 1.0};
Point(76) = {-0.014508, -0.742013, 0, 1.0};
Point(77) = {-0.007029, -0.743336, 0, 1.0};
Point(78) = {0.000486, -0.744590, 0, 1.0};
Point(79) = {0.007963, -0.745753, 0, 1.0};
Point(80) = {0.015323, -0.746805, 0, 1.0};
Point(81) = {0.022499, -0.747728, 0, 1.0};
Point(82) = {0.029418, -0.748508, 0, 1.0};
Point(83) = {0.036022, -0.749130, 0, 1.0};
Point(84) = {0.042247, -0.749589, 0, 1.0};
Point(85) = {0.048044, -0.749878, 0, 1.0};
Point(86) = {0.053358, -0.750000, 0, 1.0};
Point(87) = {0.058151, -0.749955, 0, 1.0};
Point(88) = {0.062381, -0.749751, 0, 1.0};
Point(89) = {0.066015, -0.749401, 0, 1.0};
Point(90) = {0.069031, -0.748917, 0, 1.0};
Point(91) = {0.071404, -0.748323, 0, 1.0};
Point(92) = {0.073148, -0.747651, 0, 1.0};
Point(93) = {0.074192, -0.746951, 0, 1.0};
Point(94) = {0.074509, -0.746334, 0, 1.0};
Point(95) = {0.074104, -0.745786, 0, 1.0};
Point(96) = {0.073199, -0.745249, 0, 1.0};
Point(97) = {0.071460, -0.744528, 0, 1.0};
Point(98) = {0.069210, -0.743848, 0, 1.0};
Point(99) = {0.066306, -0.743142, 0, 1.0};
Point(100) = {0.062806, -0.742433, 0, 1.0};
Point(101) = {0.058709, -0.741716, 0, 1.0};
Point(102) = {0.054052, -0.740996, 0, 1.0};
Point(103) = {0.048862, -0.740270, 0, 1.0};
Point(104) = {0.043182, -0.739541, 0, 1.0};
Point(105) = {0.037057, -0.738806, 0, 1.0};
Point(106) = {0.030532, -0.738071, 0, 1.0};
Point(107) = {0.023672, -0.737335, 0, 1.0};
Point(108) = {0.016531, -0.736601, 0, 1.0};
Point(109) = {0.009180, -0.735874, 0, 1.0};
Point(110) = {0.001691, -0.735157, 0, 1.0};
Point(111) = {-0.005863, -0.734459, 0, 1.0};
Point(112) = {-0.013405, -0.733787, 0, 1.0};
Point(113) = {-0.020851, -0.733151, 0, 1.0};
Point(114) = {-0.028129, -0.732563, 0, 1.0};
Point(115) = {-0.035167, -0.732059, 0, 1.0};
Point(116) = {-0.041846, -0.731645, 0, 1.0};
Point(117) = {-0.048080, -0.731283, 0, 1.0};
Point(118) = {-0.053803, -0.730935, 0, 1.0};
Point(119) = {-0.058950, -0.730593, 0, 1.0};
Point(120) = {-0.063452, -0.730260, 0, 1.0};
Point(121) = {-0.067241, -0.729948, 0, 1.0};
Point(122) = {-0.070285, -0.729672, 0, 1.0};
Point(123) = {-0.072566, -0.729440, 0, 1.0};
Point(124) = {-0.074011, -0.729266, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:105};
Spline(7) = {105:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149766, 0.734999, 0, 1.0};
Point(2) = {0.149085, 0.735163, 0, 1.0};
Point(3) = {0.147139, 0.735725, 0, 1.0};
Point(4) = {0.144140, 0.736695, 0, 1.0};
Point(5) = {0.140278, 0.737950, 0, 1.0};
Point(6) = {0.135647, 0.739310, 0, 1.0};
Point(7) = {0.130230, 0.740613, 0, 1.0};
Point(8) = {0.123952, 0.741838, 0, 1.0};
Point(9) = {0.116867, 0.743036, 0, 1.0};
Point(10) = {0.109074, 0.744208, 0, 1.0};
Point(11) = {0.100673, 0.745343, 0, 1.0};
Point(12) = {0.091777, 0.746422, 0, 1.0};
Point(13) = {0.082498, 0.747420, 0, 1.0};
Point(14) = {0.072956, 0.748308, 0, 1.0};
Point(15) = {0.063269, 0.749052, 0, 1.0};
Point(16) = {0.053556, 0.749615, 0, 1.0};
Point(17) = {0.043931, 0.749950, 0, 1.0};
Point(18) = {0.034506, 0.750000, 0, 1.0};
Point(19) = {0.025360, 0.749646, 0, 1.0};
Point(20) = {0.016402, 0.748877, 0, 1.0};
Point(21) = {0.007693, 0.747798, 0, 1.0};
Point(22) = {-0.000674, 0.746460, 0, 1.0};
Point(23) = {-0.008614, 0.744902, 0, 1.0};
Point(24) = {-0.016042, 0.743160, 0, 1.0};
Point(25) = {-0.022880, 0.741266, 0, 1.0};
Point(26) = {-0.029058, 0.739255, 0, 1.0};
Point(27) = {-0.034511, 0.737160, 0, 1.0};
Point(28) = {-0.039194, 0.735015, 0, 1.0};
Point(29) = {-0.043059, 0.732862, 0, 1.0};
Point(30) = {-0.046089, 0.730741, 0, 1.0};
Point(31) = {-0.048253, 0.728718, 0, 1.0};
Point(32) = {-0.049564, 0.726859, 0, 1.0};
Point(33) = {-0.049982, 0.725651, 0, 1.0};
Point(34) = {-0.050001, 0.725339, 0, 1.0};
Point(35) = {-0.050000, 0.725320, 0, 1.0};
Point(36) = {-0.049947, 0.725038, 0, 1.0};
Point(37) = {-0.049785, 0.724791, 0, 1.0};
Point(38) = {-0.049529, 0.724542, 0, 1.0};
Point(39) = {-0.049217, 0.724311, 0, 1.0};
Point(40) = {-0.047175, 0.723385, 0, 1.0};
Point(41) = {-0.044023, 0.722571, 0, 1.0};
Point(42) = {-0.039835, 0.721891, 0, 1.0};
Point(43) = {-0.034636, 0.721345, 0, 1.0};
Point(44) = {-0.028497, 0.720911, 0, 1.0};
Point(45) = {-0.021478, 0.720550, 0, 1.0};
Point(46) = {-0.013729, 0.720123, 0, 1.0};
Point(47) = {-0.005663, 0.719728, 0, 1.0};
Point(48) = {0.002639, 0.719706, 0, 1.0};
Point(49) = {0.011317, 0.720156, 0, 1.0};
Point(50) = {0.020306, 0.721101, 0, 1.0};
Point(51) = {0.029752, 0.722611, 0, 1.0};
Point(52) = {0.039671, 0.724529, 0, 1.0};
Point(53) = {0.050066, 0.726741, 0, 1.0};
Point(54) = {0.060875, 0.729036, 0, 1.0};
Point(55) = {0.071929, 0.731237, 0, 1.0};
Point(56) = {0.083032, 0.733210, 0, 1.0};
Point(57) = {0.093968, 0.734856, 0, 1.0};
Point(58) = {0.104514, 0.736105, 0, 1.0};
Point(59) = {0.114444, 0.736914, 0, 1.0};
Point(60) = {0.123535, 0.737269, 0, 1.0};
Point(61) = {0.131551, 0.737163, 0, 1.0};
Point(62) = {0.138210, 0.736697, 0, 1.0};
Point(63) = {0.143354, 0.736083, 0, 1.0};
Point(64) = {0.146957, 0.735518, 0, 1.0};
Point(65) = {0.149072, 0.735135, 0, 1.0};
Point(66) = {-0.149766, -0.734999, 0, 1.0};
Point(67) = {-0.149085, -0.735163, 0, 1.0};
Point(68) = {-0.147139, -0.735725, 0, 1.0};
Point(69) = {-0.144140, -0.736695, 0, 1.0};
Point(70) = {-0.140278, -0.737950, 0, 1.0};
Point(71) = {-0.135647, -0.739310, 0, 1.0};
Point(72) = {-0.130230, -0.740613, 0, 1.0};
Point(73) = {-0.123952, -0.741838, 0, 1.0};
Point(74) = {-0.116867, -0.743036, 0, 1.0};
Point(75) = {-0.109074, -0.744208, 0, 1.0};
Point(76) = {-0.100673, -0.745343, 0, 1.0};
Point(77) = {-0.091777, -0.746422, 0, 1.0};
Point(78) = {-0.082498, -0.747420, 0, 1.0};
Point(79) = {-0.072956, -0.748308, 0, 1.0};
Point(80) = {-0.063269, -0.749052, 0, 1.0};
Point(81) = {-0.053556, -0.749615, 0, 1.0};
Point(82) = {-0.043931, -0.749950, 0, 1.0};
Point(83) = {-0.034506, -0.750000, 0, 1.0};
Point(84) = {-0.025360, -0.749646, 0, 1.0};
Point(85) = {-0.016402, -0.748877, 0, 1.0};
Point(86) = {-0.007693, -0.747798, 0, 1.0};
Point(87) = {0.000674, -0.746460, 0, 1.0};
Point(88) = {0.008614, -0.744902, 0, 1.0};
Point(89) = {0.016042, -0.743160, 0, 1.0};
Point(90) = {0.022880, -0.741266, 0, 1.0};
Point(91) = {0.029058, -0.739255, 0, 1.0};
Point(92) = {0.034511, -0.737160, 0, 1.0};
Point(93) = {0.039194, -0.735015, 0, 1.0};
Point(94) = {0.043059, -0.732862, 0, 1.0};
Point(95) = {0.046089, -0.730741, 0, 1.0};
Point(96) = {0.048253, -0.728718, 0, 1.0};
Point(97) = {0.049564, -0.726859, 0, 1.0};
Point(98) = {0.049982, -0.725651, 0, 1.0};
Point(99) = {0.050001, -0.725339, 0, 1.0};
Point(100) = {0.050000, -0.725320, 0, 1.0};
Point(101) = {0.049947, -0.725038, 0, 1.0};
Point(102) = {0.049785, -0.724791, 0, 1.0};
Point(103) = {0.049529, -0.724542, 0, 1.0};
Point(104) = {0.049217, -0.724311, 0, 1.0};
Point(105) = {0.047175, -0.723385, 0, 1.0};
Point(106) = {0.044023, -0.722571, 0, 1.0};
Point(107) = {0.039835, -0.721891, 0, 1.0};
Point(108) = {0.034636, -0.721345, 0, 1.0};
Point(109) = {0.028497, -0.720911, 0, 1.0};
Point(110) = {0.021478, -0.720550, 0, 1.0};
Point(111) = {0.013729, -0.720123, 0, 1.0};
Point(112) = {0.005663, -0.719728, 0, 1.0};
Point(113) = {-0.002639, -0.719706, 0, 1.0};
Point(114) = {-0.011317, -0.720156, 0, 1.0};
Point(115) = {-0.020306, -0.721101, 0, 1.0};
Point(116) = {-0.029752, -0.722611, 0, 1.0};
Point(117) = {-0.039671, -0.724529, 0, 1.0};
Point(118) = {-0.050066, -0.726741, 0, 1.0};
Point(119) = {-0.060875, -0.729036, 0, 1.0};
Point(120) = {-0.071929, -0.731237, 0, 1.0};
Point(121) = {-0.083032, -0.733210, 0, 1.0};
Point(122) = {-0.093968, -0.734856, 0, 1.0};
Point(123) = {-0.104514, -0.736105, 0, 1.0};
Point(124) = {-0.114444, -0.736914, 0, 1.0};
Point(125) = {-0.123535, -0.737269, 0, 1.0};
Point(126) = {-0.131551, -0.737163, 0, 1.0};
Point(127) = {-0.138210, -0.736697, 0, 1.0};
Point(128) = {-0.143354, -0.736083, 0, 1.0};
Point(129) = {-0.146957, -0.735518, 0, 1.0};
Point(130) = {-0.149072, -0.735135, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
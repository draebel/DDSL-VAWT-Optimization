SetFactory("OpenCASCADE");

Point(1) = {0.074883, 0.742499, 0, 1.0};
Point(2) = {0.074542, 0.742581, 0, 1.0};
Point(3) = {0.073569, 0.742863, 0, 1.0};
Point(4) = {0.072070, 0.743348, 0, 1.0};
Point(5) = {0.070139, 0.743975, 0, 1.0};
Point(6) = {0.067823, 0.744655, 0, 1.0};
Point(7) = {0.065115, 0.745307, 0, 1.0};
Point(8) = {0.061976, 0.745919, 0, 1.0};
Point(9) = {0.058434, 0.746518, 0, 1.0};
Point(10) = {0.054537, 0.747104, 0, 1.0};
Point(11) = {0.050337, 0.747672, 0, 1.0};
Point(12) = {0.045888, 0.748211, 0, 1.0};
Point(13) = {0.041249, 0.748710, 0, 1.0};
Point(14) = {0.036478, 0.749154, 0, 1.0};
Point(15) = {0.031635, 0.749526, 0, 1.0};
Point(16) = {0.026778, 0.749807, 0, 1.0};
Point(17) = {0.021965, 0.749975, 0, 1.0};
Point(18) = {0.017253, 0.750000, 0, 1.0};
Point(19) = {0.012680, 0.749823, 0, 1.0};
Point(20) = {0.008201, 0.749438, 0, 1.0};
Point(21) = {0.003847, 0.748899, 0, 1.0};
Point(22) = {-0.000337, 0.748230, 0, 1.0};
Point(23) = {-0.004307, 0.747451, 0, 1.0};
Point(24) = {-0.008021, 0.746580, 0, 1.0};
Point(25) = {-0.011440, 0.745633, 0, 1.0};
Point(26) = {-0.014529, 0.744628, 0, 1.0};
Point(27) = {-0.017255, 0.743580, 0, 1.0};
Point(28) = {-0.019597, 0.742508, 0, 1.0};
Point(29) = {-0.021529, 0.741431, 0, 1.0};
Point(30) = {-0.023045, 0.740371, 0, 1.0};
Point(31) = {-0.024126, 0.739359, 0, 1.0};
Point(32) = {-0.024782, 0.738429, 0, 1.0};
Point(33) = {-0.024991, 0.737826, 0, 1.0};
Point(34) = {-0.025000, 0.737670, 0, 1.0};
Point(35) = {-0.025000, 0.737660, 0, 1.0};
Point(36) = {-0.024973, 0.737519, 0, 1.0};
Point(37) = {-0.024892, 0.737395, 0, 1.0};
Point(38) = {-0.024764, 0.737271, 0, 1.0};
Point(39) = {-0.024608, 0.737156, 0, 1.0};
Point(40) = {-0.023588, 0.736693, 0, 1.0};
Point(41) = {-0.022012, 0.736286, 0, 1.0};
Point(42) = {-0.019917, 0.735946, 0, 1.0};
Point(43) = {-0.017318, 0.735672, 0, 1.0};
Point(44) = {-0.014248, 0.735455, 0, 1.0};
Point(45) = {-0.010739, 0.735275, 0, 1.0};
Point(46) = {-0.006865, 0.735061, 0, 1.0};
Point(47) = {-0.002831, 0.734864, 0, 1.0};
Point(48) = {0.001319, 0.734853, 0, 1.0};
Point(49) = {0.005658, 0.735078, 0, 1.0};
Point(50) = {0.010153, 0.735550, 0, 1.0};
Point(51) = {0.014876, 0.736306, 0, 1.0};
Point(52) = {0.019835, 0.737264, 0, 1.0};
Point(53) = {0.025033, 0.738370, 0, 1.0};
Point(54) = {0.030437, 0.739518, 0, 1.0};
Point(55) = {0.035965, 0.740618, 0, 1.0};
Point(56) = {0.041516, 0.741605, 0, 1.0};
Point(57) = {0.046984, 0.742428, 0, 1.0};
Point(58) = {0.052257, 0.743052, 0, 1.0};
Point(59) = {0.057222, 0.743457, 0, 1.0};
Point(60) = {0.061768, 0.743635, 0, 1.0};
Point(61) = {0.065776, 0.743582, 0, 1.0};
Point(62) = {0.069105, 0.743348, 0, 1.0};
Point(63) = {0.071677, 0.743041, 0, 1.0};
Point(64) = {0.073479, 0.742759, 0, 1.0};
Point(65) = {0.074536, 0.742568, 0, 1.0};
Point(66) = {-0.074883, -0.742499, 0, 1.0};
Point(67) = {-0.074542, -0.742581, 0, 1.0};
Point(68) = {-0.073569, -0.742863, 0, 1.0};
Point(69) = {-0.072070, -0.743348, 0, 1.0};
Point(70) = {-0.070139, -0.743975, 0, 1.0};
Point(71) = {-0.067823, -0.744655, 0, 1.0};
Point(72) = {-0.065115, -0.745307, 0, 1.0};
Point(73) = {-0.061976, -0.745919, 0, 1.0};
Point(74) = {-0.058434, -0.746518, 0, 1.0};
Point(75) = {-0.054537, -0.747104, 0, 1.0};
Point(76) = {-0.050337, -0.747672, 0, 1.0};
Point(77) = {-0.045888, -0.748211, 0, 1.0};
Point(78) = {-0.041249, -0.748710, 0, 1.0};
Point(79) = {-0.036478, -0.749154, 0, 1.0};
Point(80) = {-0.031635, -0.749526, 0, 1.0};
Point(81) = {-0.026778, -0.749807, 0, 1.0};
Point(82) = {-0.021965, -0.749975, 0, 1.0};
Point(83) = {-0.017253, -0.750000, 0, 1.0};
Point(84) = {-0.012680, -0.749823, 0, 1.0};
Point(85) = {-0.008201, -0.749438, 0, 1.0};
Point(86) = {-0.003847, -0.748899, 0, 1.0};
Point(87) = {0.000337, -0.748230, 0, 1.0};
Point(88) = {0.004307, -0.747451, 0, 1.0};
Point(89) = {0.008021, -0.746580, 0, 1.0};
Point(90) = {0.011440, -0.745633, 0, 1.0};
Point(91) = {0.014529, -0.744628, 0, 1.0};
Point(92) = {0.017255, -0.743580, 0, 1.0};
Point(93) = {0.019597, -0.742508, 0, 1.0};
Point(94) = {0.021529, -0.741431, 0, 1.0};
Point(95) = {0.023045, -0.740371, 0, 1.0};
Point(96) = {0.024126, -0.739359, 0, 1.0};
Point(97) = {0.024782, -0.738429, 0, 1.0};
Point(98) = {0.024991, -0.737826, 0, 1.0};
Point(99) = {0.025000, -0.737670, 0, 1.0};
Point(100) = {0.025000, -0.737660, 0, 1.0};
Point(101) = {0.024973, -0.737519, 0, 1.0};
Point(102) = {0.024892, -0.737395, 0, 1.0};
Point(103) = {0.024764, -0.737271, 0, 1.0};
Point(104) = {0.024608, -0.737156, 0, 1.0};
Point(105) = {0.023588, -0.736693, 0, 1.0};
Point(106) = {0.022012, -0.736286, 0, 1.0};
Point(107) = {0.019917, -0.735946, 0, 1.0};
Point(108) = {0.017318, -0.735672, 0, 1.0};
Point(109) = {0.014248, -0.735455, 0, 1.0};
Point(110) = {0.010739, -0.735275, 0, 1.0};
Point(111) = {0.006865, -0.735061, 0, 1.0};
Point(112) = {0.002831, -0.734864, 0, 1.0};
Point(113) = {-0.001319, -0.734853, 0, 1.0};
Point(114) = {-0.005658, -0.735078, 0, 1.0};
Point(115) = {-0.010153, -0.735550, 0, 1.0};
Point(116) = {-0.014876, -0.736306, 0, 1.0};
Point(117) = {-0.019835, -0.737264, 0, 1.0};
Point(118) = {-0.025033, -0.738370, 0, 1.0};
Point(119) = {-0.030437, -0.739518, 0, 1.0};
Point(120) = {-0.035965, -0.740618, 0, 1.0};
Point(121) = {-0.041516, -0.741605, 0, 1.0};
Point(122) = {-0.046984, -0.742428, 0, 1.0};
Point(123) = {-0.052257, -0.743052, 0, 1.0};
Point(124) = {-0.057222, -0.743457, 0, 1.0};
Point(125) = {-0.061768, -0.743635, 0, 1.0};
Point(126) = {-0.065776, -0.743582, 0, 1.0};
Point(127) = {-0.069105, -0.743348, 0, 1.0};
Point(128) = {-0.071677, -0.743041, 0, 1.0};
Point(129) = {-0.073479, -0.742759, 0, 1.0};
Point(130) = {-0.074536, -0.742568, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074750, 0.740956, 0, 1.0};
Point(2) = {0.072854, 0.741491, 0, 1.0};
Point(3) = {0.068543, 0.742529, 0, 1.0};
Point(4) = {0.063546, 0.743503, 0, 1.0};
Point(5) = {0.057907, 0.744457, 0, 1.0};
Point(6) = {0.051703, 0.745390, 0, 1.0};
Point(7) = {0.045017, 0.746294, 0, 1.0};
Point(8) = {0.037936, 0.747152, 0, 1.0};
Point(9) = {0.030551, 0.747946, 0, 1.0};
Point(10) = {0.022956, 0.748653, 0, 1.0};
Point(11) = {0.015245, 0.749246, 0, 1.0};
Point(12) = {0.007514, 0.749693, 0, 1.0};
Point(13) = {-0.000148, 0.749960, 0, 1.0};
Point(14) = {-0.007649, 0.750000, 0, 1.0};
Point(15) = {-0.014929, 0.749719, 0, 1.0};
Point(16) = {-0.022059, 0.749106, 0, 1.0};
Point(17) = {-0.028991, 0.748247, 0, 1.0};
Point(18) = {-0.035651, 0.747182, 0, 1.0};
Point(19) = {-0.041971, 0.745942, 0, 1.0};
Point(20) = {-0.047883, 0.744555, 0, 1.0};
Point(21) = {-0.053326, 0.743048, 0, 1.0};
Point(22) = {-0.058243, 0.741448, 0, 1.0};
Point(23) = {-0.062583, 0.739780, 0, 1.0};
Point(24) = {-0.066311, 0.738073, 0, 1.0};
Point(25) = {-0.069387, 0.736359, 0, 1.0};
Point(26) = {-0.071799, 0.734671, 0, 1.0};
Point(27) = {-0.073521, 0.733061, 0, 1.0};
Point(28) = {-0.074565, 0.731581, 0, 1.0};
Point(29) = {-0.074898, 0.730619, 0, 1.0};
Point(30) = {-0.074913, 0.730371, 0, 1.0};
Point(31) = {-0.074912, 0.730356, 0, 1.0};
Point(32) = {-0.074870, 0.730131, 0, 1.0};
Point(33) = {-0.074741, 0.729934, 0, 1.0};
Point(34) = {-0.074537, 0.729737, 0, 1.0};
Point(35) = {-0.074289, 0.729553, 0, 1.0};
Point(36) = {-0.072664, 0.728816, 0, 1.0};
Point(37) = {-0.070155, 0.728168, 0, 1.0};
Point(38) = {-0.066821, 0.727627, 0, 1.0};
Point(39) = {-0.062683, 0.727192, 0, 1.0};
Point(40) = {-0.057796, 0.726846, 0, 1.0};
Point(41) = {-0.052210, 0.726559, 0, 1.0};
Point(42) = {-0.046042, 0.726219, 0, 1.0};
Point(43) = {-0.039622, 0.725905, 0, 1.0};
Point(44) = {-0.033014, 0.725887, 0, 1.0};
Point(45) = {-0.026107, 0.726245, 0, 1.0};
Point(46) = {-0.018952, 0.726998, 0, 1.0};
Point(47) = {-0.011433, 0.728200, 0, 1.0};
Point(48) = {-0.003538, 0.729726, 0, 1.0};
Point(49) = {0.004736, 0.731487, 0, 1.0};
Point(50) = {0.013339, 0.733314, 0, 1.0};
Point(51) = {0.022138, 0.735065, 0, 1.0};
Point(52) = {0.030975, 0.736636, 0, 1.0};
Point(53) = {0.039680, 0.737946, 0, 1.0};
Point(54) = {0.048074, 0.738940, 0, 1.0};
Point(55) = {0.055978, 0.739584, 0, 1.0};
Point(56) = {0.063214, 0.739867, 0, 1.0};
Point(57) = {0.069594, 0.739782, 0, 1.0};
Point(58) = {0.074824, 0.739430, 0, 1.0};
Point(59) = {-0.074750, -0.740956, 0, 1.0};
Point(60) = {-0.072854, -0.741491, 0, 1.0};
Point(61) = {-0.068543, -0.742529, 0, 1.0};
Point(62) = {-0.063546, -0.743503, 0, 1.0};
Point(63) = {-0.057907, -0.744457, 0, 1.0};
Point(64) = {-0.051703, -0.745390, 0, 1.0};
Point(65) = {-0.045017, -0.746294, 0, 1.0};
Point(66) = {-0.037936, -0.747152, 0, 1.0};
Point(67) = {-0.030551, -0.747946, 0, 1.0};
Point(68) = {-0.022956, -0.748653, 0, 1.0};
Point(69) = {-0.015245, -0.749246, 0, 1.0};
Point(70) = {-0.007514, -0.749693, 0, 1.0};
Point(71) = {0.000148, -0.749960, 0, 1.0};
Point(72) = {0.007649, -0.750000, 0, 1.0};
Point(73) = {0.014929, -0.749719, 0, 1.0};
Point(74) = {0.022059, -0.749106, 0, 1.0};
Point(75) = {0.028991, -0.748247, 0, 1.0};
Point(76) = {0.035651, -0.747182, 0, 1.0};
Point(77) = {0.041971, -0.745942, 0, 1.0};
Point(78) = {0.047883, -0.744555, 0, 1.0};
Point(79) = {0.053326, -0.743048, 0, 1.0};
Point(80) = {0.058243, -0.741448, 0, 1.0};
Point(81) = {0.062583, -0.739780, 0, 1.0};
Point(82) = {0.066311, -0.738073, 0, 1.0};
Point(83) = {0.069387, -0.736359, 0, 1.0};
Point(84) = {0.071799, -0.734671, 0, 1.0};
Point(85) = {0.073521, -0.733061, 0, 1.0};
Point(86) = {0.074565, -0.731581, 0, 1.0};
Point(87) = {0.074898, -0.730619, 0, 1.0};
Point(88) = {0.074913, -0.730371, 0, 1.0};
Point(89) = {0.074912, -0.730356, 0, 1.0};
Point(90) = {0.074870, -0.730131, 0, 1.0};
Point(91) = {0.074741, -0.729934, 0, 1.0};
Point(92) = {0.074537, -0.729737, 0, 1.0};
Point(93) = {0.074289, -0.729553, 0, 1.0};
Point(94) = {0.072664, -0.728816, 0, 1.0};
Point(95) = {0.070155, -0.728168, 0, 1.0};
Point(96) = {0.066821, -0.727627, 0, 1.0};
Point(97) = {0.062683, -0.727192, 0, 1.0};
Point(98) = {0.057796, -0.726846, 0, 1.0};
Point(99) = {0.052210, -0.726559, 0, 1.0};
Point(100) = {0.046042, -0.726219, 0, 1.0};
Point(101) = {0.039622, -0.725905, 0, 1.0};
Point(102) = {0.033014, -0.725887, 0, 1.0};
Point(103) = {0.026107, -0.726245, 0, 1.0};
Point(104) = {0.018952, -0.726998, 0, 1.0};
Point(105) = {0.011433, -0.728200, 0, 1.0};
Point(106) = {0.003538, -0.729726, 0, 1.0};
Point(107) = {-0.004736, -0.731487, 0, 1.0};
Point(108) = {-0.013339, -0.733314, 0, 1.0};
Point(109) = {-0.022138, -0.735065, 0, 1.0};
Point(110) = {-0.030975, -0.736636, 0, 1.0};
Point(111) = {-0.039680, -0.737946, 0, 1.0};
Point(112) = {-0.048074, -0.738940, 0, 1.0};
Point(113) = {-0.055978, -0.739584, 0, 1.0};
Point(114) = {-0.063214, -0.739867, 0, 1.0};
Point(115) = {-0.069594, -0.739782, 0, 1.0};
Point(116) = {-0.074824, -0.739430, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:44};
Spline(3) = {44:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:76};
Spline(6) = {76:102};
Spline(7) = {102:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
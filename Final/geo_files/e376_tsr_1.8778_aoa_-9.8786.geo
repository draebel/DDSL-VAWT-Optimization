SetFactory("OpenCASCADE");

Point(1) = {0.146455, 0.750000, 0, 1.0};
Point(2) = {0.144717, 0.749919, 0, 1.0};
Point(3) = {0.141839, 0.749799, 0, 1.0};
Point(4) = {0.137857, 0.749676, 0, 1.0};
Point(5) = {0.132849, 0.749569, 0, 1.0};
Point(6) = {0.126894, 0.749480, 0, 1.0};
Point(7) = {0.120078, 0.749406, 0, 1.0};
Point(8) = {0.112499, 0.749347, 0, 1.0};
Point(9) = {0.104256, 0.749294, 0, 1.0};
Point(10) = {0.095461, 0.749240, 0, 1.0};
Point(11) = {0.086231, 0.749176, 0, 1.0};
Point(12) = {0.076687, 0.749077, 0, 1.0};
Point(13) = {0.066953, 0.748933, 0, 1.0};
Point(14) = {0.057158, 0.748723, 0, 1.0};
Point(15) = {0.047428, 0.748407, 0, 1.0};
Point(16) = {0.037894, 0.747943, 0, 1.0};
Point(17) = {0.028652, 0.747251, 0, 1.0};
Point(18) = {0.019744, 0.746280, 0, 1.0};
Point(19) = {0.011215, 0.745012, 0, 1.0};
Point(20) = {0.003099, 0.743449, 0, 1.0};
Point(21) = {-0.004572, 0.741595, 0, 1.0};
Point(22) = {-0.011780, 0.739491, 0, 1.0};
Point(23) = {-0.018494, 0.737197, 0, 1.0};
Point(24) = {-0.024657, 0.734780, 0, 1.0};
Point(25) = {-0.030213, 0.732282, 0, 1.0};
Point(26) = {-0.035124, 0.729756, 0, 1.0};
Point(27) = {-0.039351, 0.727248, 0, 1.0};
Point(28) = {-0.042875, 0.724803, 0, 1.0};
Point(29) = {-0.045680, 0.722477, 0, 1.0};
Point(30) = {-0.047771, 0.720322, 0, 1.0};
Point(31) = {-0.049158, 0.718410, 0, 1.0};
Point(32) = {-0.049878, 0.716809, 0, 1.0};
Point(33) = {-0.049987, 0.715653, 0, 1.0};
Point(34) = {-0.049489, 0.715208, 0, 1.0};
Point(35) = {-0.048248, 0.715597, 0, 1.0};
Point(36) = {-0.046111, 0.716923, 0, 1.0};
Point(37) = {-0.042883, 0.719284, 0, 1.0};
Point(38) = {-0.038332, 0.722681, 0, 1.0};
Point(39) = {-0.032180, 0.726990, 0, 1.0};
Point(40) = {-0.024150, 0.731976, 0, 1.0};
Point(41) = {-0.013925, 0.737071, 0, 1.0};
Point(42) = {-0.001737, 0.741248, 0, 1.0};
Point(43) = {0.011281, 0.744029, 0, 1.0};
Point(44) = {0.024347, 0.745821, 0, 1.0};
Point(45) = {0.037232, 0.747015, 0, 1.0};
Point(46) = {0.049799, 0.747779, 0, 1.0};
Point(47) = {0.061925, 0.748266, 0, 1.0};
Point(48) = {0.073522, 0.748566, 0, 1.0};
Point(49) = {0.084511, 0.748760, 0, 1.0};
Point(50) = {0.094819, 0.748873, 0, 1.0};
Point(51) = {0.104358, 0.748942, 0, 1.0};
Point(52) = {0.113057, 0.748991, 0, 1.0};
Point(53) = {0.120847, 0.749047, 0, 1.0};
Point(54) = {0.127676, 0.749119, 0, 1.0};
Point(55) = {0.133499, 0.749228, 0, 1.0};
Point(56) = {0.138280, 0.749382, 0, 1.0};
Point(57) = {0.142026, 0.749600, 0, 1.0};
Point(58) = {0.144764, 0.749825, 0, 1.0};
Point(59) = {0.146458, 0.749980, 0, 1.0};
Point(60) = {-0.146455, -0.750000, 0, 1.0};
Point(61) = {-0.144717, -0.749919, 0, 1.0};
Point(62) = {-0.141839, -0.749799, 0, 1.0};
Point(63) = {-0.137857, -0.749676, 0, 1.0};
Point(64) = {-0.132849, -0.749569, 0, 1.0};
Point(65) = {-0.126894, -0.749480, 0, 1.0};
Point(66) = {-0.120078, -0.749406, 0, 1.0};
Point(67) = {-0.112499, -0.749347, 0, 1.0};
Point(68) = {-0.104256, -0.749294, 0, 1.0};
Point(69) = {-0.095461, -0.749240, 0, 1.0};
Point(70) = {-0.086231, -0.749176, 0, 1.0};
Point(71) = {-0.076687, -0.749077, 0, 1.0};
Point(72) = {-0.066953, -0.748933, 0, 1.0};
Point(73) = {-0.057158, -0.748723, 0, 1.0};
Point(74) = {-0.047428, -0.748407, 0, 1.0};
Point(75) = {-0.037894, -0.747943, 0, 1.0};
Point(76) = {-0.028652, -0.747251, 0, 1.0};
Point(77) = {-0.019744, -0.746280, 0, 1.0};
Point(78) = {-0.011215, -0.745012, 0, 1.0};
Point(79) = {-0.003099, -0.743449, 0, 1.0};
Point(80) = {0.004572, -0.741595, 0, 1.0};
Point(81) = {0.011780, -0.739491, 0, 1.0};
Point(82) = {0.018494, -0.737197, 0, 1.0};
Point(83) = {0.024657, -0.734780, 0, 1.0};
Point(84) = {0.030213, -0.732282, 0, 1.0};
Point(85) = {0.035124, -0.729756, 0, 1.0};
Point(86) = {0.039351, -0.727248, 0, 1.0};
Point(87) = {0.042875, -0.724803, 0, 1.0};
Point(88) = {0.045680, -0.722477, 0, 1.0};
Point(89) = {0.047771, -0.720322, 0, 1.0};
Point(90) = {0.049158, -0.718410, 0, 1.0};
Point(91) = {0.049878, -0.716809, 0, 1.0};
Point(92) = {0.049987, -0.715653, 0, 1.0};
Point(93) = {0.049489, -0.715208, 0, 1.0};
Point(94) = {0.048248, -0.715597, 0, 1.0};
Point(95) = {0.046111, -0.716923, 0, 1.0};
Point(96) = {0.042883, -0.719284, 0, 1.0};
Point(97) = {0.038332, -0.722681, 0, 1.0};
Point(98) = {0.032180, -0.726990, 0, 1.0};
Point(99) = {0.024150, -0.731976, 0, 1.0};
Point(100) = {0.013925, -0.737071, 0, 1.0};
Point(101) = {0.001737, -0.741248, 0, 1.0};
Point(102) = {-0.011281, -0.744029, 0, 1.0};
Point(103) = {-0.024347, -0.745821, 0, 1.0};
Point(104) = {-0.037232, -0.747015, 0, 1.0};
Point(105) = {-0.049799, -0.747779, 0, 1.0};
Point(106) = {-0.061925, -0.748266, 0, 1.0};
Point(107) = {-0.073522, -0.748566, 0, 1.0};
Point(108) = {-0.084511, -0.748760, 0, 1.0};
Point(109) = {-0.094819, -0.748873, 0, 1.0};
Point(110) = {-0.104358, -0.748942, 0, 1.0};
Point(111) = {-0.113057, -0.748991, 0, 1.0};
Point(112) = {-0.120847, -0.749047, 0, 1.0};
Point(113) = {-0.127676, -0.749119, 0, 1.0};
Point(114) = {-0.133499, -0.749228, 0, 1.0};
Point(115) = {-0.138280, -0.749382, 0, 1.0};
Point(116) = {-0.142026, -0.749600, 0, 1.0};
Point(117) = {-0.144764, -0.749825, 0, 1.0};
Point(118) = {-0.146458, -0.749980, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:79};
Spline(6) = {79:101};
Spline(7) = {101:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
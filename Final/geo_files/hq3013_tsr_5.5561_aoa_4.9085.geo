SetFactory("OpenCASCADE");

Point(1) = {0.074725, 0.727080, 0, 1.0};
Point(2) = {0.071056, 0.728184, 0, 1.0};
Point(3) = {0.067393, 0.729354, 0, 1.0};
Point(4) = {0.063729, 0.730522, 0, 1.0};
Point(5) = {0.060063, 0.731661, 0, 1.0};
Point(6) = {0.056397, 0.732793, 0, 1.0};
Point(7) = {0.052728, 0.733905, 0, 1.0};
Point(8) = {0.049060, 0.735016, 0, 1.0};
Point(9) = {0.045391, 0.736124, 0, 1.0};
Point(10) = {0.038047, 0.738261, 0, 1.0};
Point(11) = {0.030696, 0.740315, 0, 1.0};
Point(12) = {0.023330, 0.742198, 0, 1.0};
Point(13) = {0.015951, 0.743927, 0, 1.0};
Point(14) = {0.008554, 0.745453, 0, 1.0};
Point(15) = {0.001139, 0.746764, 0, 1.0};
Point(16) = {-0.006295, 0.747851, 0, 1.0};
Point(17) = {-0.013747, 0.748728, 0, 1.0};
Point(18) = {-0.017480, 0.749091, 0, 1.0};
Point(19) = {-0.021217, 0.749401, 0, 1.0};
Point(20) = {-0.024959, 0.749650, 0, 1.0};
Point(21) = {-0.028708, 0.749829, 0, 1.0};
Point(22) = {-0.032462, 0.749945, 0, 1.0};
Point(23) = {-0.036221, 0.750000, 0, 1.0};
Point(24) = {-0.039985, 0.749992, 0, 1.0};
Point(25) = {-0.043757, 0.749897, 0, 1.0};
Point(26) = {-0.047538, 0.749700, 0, 1.0};
Point(27) = {-0.051328, 0.749390, 0, 1.0};
Point(28) = {-0.055130, 0.748947, 0, 1.0};
Point(29) = {-0.058948, 0.748322, 0, 1.0};
Point(30) = {-0.062786, 0.747456, 0, 1.0};
Point(31) = {-0.066655, 0.746233, 0, 1.0};
Point(32) = {-0.068606, 0.745430, 0, 1.0};
Point(33) = {-0.070573, 0.744429, 0, 1.0};
Point(34) = {-0.071567, 0.743817, 0, 1.0};
Point(35) = {-0.072572, 0.743077, 0, 1.0};
Point(36) = {-0.073182, 0.742538, 0, 1.0};
Point(37) = {-0.073808, 0.741831, 0, 1.0};
Point(38) = {-0.074241, 0.741168, 0, 1.0};
Point(39) = {-0.074725, 0.739915, 0, 1.0};
Point(40) = {-0.074415, 0.739136, 0, 1.0};
Point(41) = {-0.074072, 0.738758, 0, 1.0};
Point(42) = {-0.073546, 0.738305, 0, 1.0};
Point(43) = {-0.073014, 0.737928, 0, 1.0};
Point(44) = {-0.072117, 0.737415, 0, 1.0};
Point(45) = {-0.071210, 0.737016, 0, 1.0};
Point(46) = {-0.069384, 0.736364, 0, 1.0};
Point(47) = {-0.067547, 0.735842, 0, 1.0};
Point(48) = {-0.063857, 0.734983, 0, 1.0};
Point(49) = {-0.060155, 0.734269, 0, 1.0};
Point(50) = {-0.056445, 0.733640, 0, 1.0};
Point(51) = {-0.052729, 0.733077, 0, 1.0};
Point(52) = {-0.049009, 0.732576, 0, 1.0};
Point(53) = {-0.045284, 0.732125, 0, 1.0};
Point(54) = {-0.041555, 0.731710, 0, 1.0};
Point(55) = {-0.037825, 0.731326, 0, 1.0};
Point(56) = {-0.034091, 0.730969, 0, 1.0};
Point(57) = {-0.030357, 0.730629, 0, 1.0};
Point(58) = {-0.026621, 0.730302, 0, 1.0};
Point(59) = {-0.022884, 0.729992, 0, 1.0};
Point(60) = {-0.019142, 0.729735, 0, 1.0};
Point(61) = {-0.015395, 0.729541, 0, 1.0};
Point(62) = {-0.007889, 0.729293, 0, 1.0};
Point(63) = {-0.000369, 0.729206, 0, 1.0};
Point(64) = {0.007160, 0.729218, 0, 1.0};
Point(65) = {0.014694, 0.729297, 0, 1.0};
Point(66) = {0.022230, 0.729386, 0, 1.0};
Point(67) = {0.029763, 0.729450, 0, 1.0};
Point(68) = {0.037291, 0.729463, 0, 1.0};
Point(69) = {0.044812, 0.729381, 0, 1.0};
Point(70) = {0.048567, 0.729283, 0, 1.0};
Point(71) = {0.052318, 0.729133, 0, 1.0};
Point(72) = {0.056063, 0.728906, 0, 1.0};
Point(73) = {0.059803, 0.728633, 0, 1.0};
Point(74) = {0.063537, 0.728287, 0, 1.0};
Point(75) = {0.067272, 0.727945, 0, 1.0};
Point(76) = {0.071001, 0.727543, 0, 1.0};
Point(77) = {-0.074725, -0.727080, 0, 1.0};
Point(78) = {-0.071056, -0.728184, 0, 1.0};
Point(79) = {-0.067393, -0.729354, 0, 1.0};
Point(80) = {-0.063729, -0.730522, 0, 1.0};
Point(81) = {-0.060063, -0.731661, 0, 1.0};
Point(82) = {-0.056397, -0.732793, 0, 1.0};
Point(83) = {-0.052728, -0.733905, 0, 1.0};
Point(84) = {-0.049060, -0.735016, 0, 1.0};
Point(85) = {-0.045391, -0.736124, 0, 1.0};
Point(86) = {-0.038047, -0.738261, 0, 1.0};
Point(87) = {-0.030696, -0.740315, 0, 1.0};
Point(88) = {-0.023330, -0.742198, 0, 1.0};
Point(89) = {-0.015951, -0.743927, 0, 1.0};
Point(90) = {-0.008554, -0.745453, 0, 1.0};
Point(91) = {-0.001139, -0.746764, 0, 1.0};
Point(92) = {0.006295, -0.747851, 0, 1.0};
Point(93) = {0.013747, -0.748728, 0, 1.0};
Point(94) = {0.017480, -0.749091, 0, 1.0};
Point(95) = {0.021217, -0.749401, 0, 1.0};
Point(96) = {0.024959, -0.749650, 0, 1.0};
Point(97) = {0.028708, -0.749829, 0, 1.0};
Point(98) = {0.032462, -0.749945, 0, 1.0};
Point(99) = {0.036221, -0.750000, 0, 1.0};
Point(100) = {0.039985, -0.749992, 0, 1.0};
Point(101) = {0.043757, -0.749897, 0, 1.0};
Point(102) = {0.047538, -0.749700, 0, 1.0};
Point(103) = {0.051328, -0.749390, 0, 1.0};
Point(104) = {0.055130, -0.748947, 0, 1.0};
Point(105) = {0.058948, -0.748322, 0, 1.0};
Point(106) = {0.062786, -0.747456, 0, 1.0};
Point(107) = {0.066655, -0.746233, 0, 1.0};
Point(108) = {0.068606, -0.745430, 0, 1.0};
Point(109) = {0.070573, -0.744429, 0, 1.0};
Point(110) = {0.071567, -0.743817, 0, 1.0};
Point(111) = {0.072572, -0.743077, 0, 1.0};
Point(112) = {0.073182, -0.742538, 0, 1.0};
Point(113) = {0.073808, -0.741831, 0, 1.0};
Point(114) = {0.074241, -0.741168, 0, 1.0};
Point(115) = {0.074725, -0.739915, 0, 1.0};
Point(116) = {0.074415, -0.739136, 0, 1.0};
Point(117) = {0.074072, -0.738758, 0, 1.0};
Point(118) = {0.073546, -0.738305, 0, 1.0};
Point(119) = {0.073014, -0.737928, 0, 1.0};
Point(120) = {0.072117, -0.737415, 0, 1.0};
Point(121) = {0.071210, -0.737016, 0, 1.0};
Point(122) = {0.069384, -0.736364, 0, 1.0};
Point(123) = {0.067547, -0.735842, 0, 1.0};
Point(124) = {0.063857, -0.734983, 0, 1.0};
Point(125) = {0.060155, -0.734269, 0, 1.0};
Point(126) = {0.056445, -0.733640, 0, 1.0};
Point(127) = {0.052729, -0.733077, 0, 1.0};
Point(128) = {0.049009, -0.732576, 0, 1.0};
Point(129) = {0.045284, -0.732125, 0, 1.0};
Point(130) = {0.041555, -0.731710, 0, 1.0};
Point(131) = {0.037825, -0.731326, 0, 1.0};
Point(132) = {0.034091, -0.730969, 0, 1.0};
Point(133) = {0.030357, -0.730629, 0, 1.0};
Point(134) = {0.026621, -0.730302, 0, 1.0};
Point(135) = {0.022884, -0.729992, 0, 1.0};
Point(136) = {0.019142, -0.729735, 0, 1.0};
Point(137) = {0.015395, -0.729541, 0, 1.0};
Point(138) = {0.007889, -0.729293, 0, 1.0};
Point(139) = {0.000369, -0.729206, 0, 1.0};
Point(140) = {-0.007160, -0.729218, 0, 1.0};
Point(141) = {-0.014694, -0.729297, 0, 1.0};
Point(142) = {-0.022230, -0.729386, 0, 1.0};
Point(143) = {-0.029763, -0.729450, 0, 1.0};
Point(144) = {-0.037291, -0.729463, 0, 1.0};
Point(145) = {-0.044812, -0.729381, 0, 1.0};
Point(146) = {-0.048567, -0.729283, 0, 1.0};
Point(147) = {-0.052318, -0.729133, 0, 1.0};
Point(148) = {-0.056063, -0.728906, 0, 1.0};
Point(149) = {-0.059803, -0.728633, 0, 1.0};
Point(150) = {-0.063537, -0.728287, 0, 1.0};
Point(151) = {-0.067272, -0.727945, 0, 1.0};
Point(152) = {-0.071001, -0.727543, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
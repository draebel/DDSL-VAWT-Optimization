SetFactory("OpenCASCADE");

Point(1) = {0.149267, 0.719440, 0, 1.0};
Point(2) = {0.144375, 0.720912, 0, 1.0};
Point(3) = {0.139490, 0.722472, 0, 1.0};
Point(4) = {0.134605, 0.724030, 0, 1.0};
Point(5) = {0.129717, 0.725548, 0, 1.0};
Point(6) = {0.124829, 0.727057, 0, 1.0};
Point(7) = {0.119938, 0.728539, 0, 1.0};
Point(8) = {0.115046, 0.730021, 0, 1.0};
Point(9) = {0.110155, 0.731499, 0, 1.0};
Point(10) = {0.100363, 0.734348, 0, 1.0};
Point(11) = {0.090561, 0.737086, 0, 1.0};
Point(12) = {0.080740, 0.739598, 0, 1.0};
Point(13) = {0.070901, 0.741902, 0, 1.0};
Point(14) = {0.061039, 0.743937, 0, 1.0};
Point(15) = {0.051152, 0.745686, 0, 1.0};
Point(16) = {0.041240, 0.747135, 0, 1.0};
Point(17) = {0.031304, 0.748304, 0, 1.0};
Point(18) = {0.026327, 0.748787, 0, 1.0};
Point(19) = {0.021344, 0.749201, 0, 1.0};
Point(20) = {0.016354, 0.749534, 0, 1.0};
Point(21) = {0.011356, 0.749772, 0, 1.0};
Point(22) = {0.006351, 0.749927, 0, 1.0};
Point(23) = {0.001339, 0.750000, 0, 1.0};
Point(24) = {-0.003680, 0.749989, 0, 1.0};
Point(25) = {-0.008710, 0.749863, 0, 1.0};
Point(26) = {-0.013751, 0.749600, 0, 1.0};
Point(27) = {-0.018805, 0.749187, 0, 1.0};
Point(28) = {-0.023874, 0.748596, 0, 1.0};
Point(29) = {-0.028964, 0.747763, 0, 1.0};
Point(30) = {-0.034081, 0.746608, 0, 1.0};
Point(31) = {-0.039240, 0.744978, 0, 1.0};
Point(32) = {-0.041841, 0.743906, 0, 1.0};
Point(33) = {-0.044465, 0.742572, 0, 1.0};
Point(34) = {-0.045789, 0.741756, 0, 1.0};
Point(35) = {-0.047129, 0.740769, 0, 1.0};
Point(36) = {-0.047943, 0.740050, 0, 1.0};
Point(37) = {-0.048777, 0.739108, 0, 1.0};
Point(38) = {-0.049355, 0.738224, 0, 1.0};
Point(39) = {-0.050000, 0.736554, 0, 1.0};
Point(40) = {-0.049587, 0.735514, 0, 1.0};
Point(41) = {-0.049129, 0.735011, 0, 1.0};
Point(42) = {-0.048428, 0.734407, 0, 1.0};
Point(43) = {-0.047718, 0.733905, 0, 1.0};
Point(44) = {-0.046523, 0.733220, 0, 1.0};
Point(45) = {-0.045314, 0.732688, 0, 1.0};
Point(46) = {-0.042879, 0.731819, 0, 1.0};
Point(47) = {-0.040430, 0.731123, 0, 1.0};
Point(48) = {-0.035510, 0.729978, 0, 1.0};
Point(49) = {-0.030573, 0.729026, 0, 1.0};
Point(50) = {-0.025626, 0.728187, 0, 1.0};
Point(51) = {-0.020673, 0.727437, 0, 1.0};
Point(52) = {-0.015712, 0.726768, 0, 1.0};
Point(53) = {-0.010745, 0.726167, 0, 1.0};
Point(54) = {-0.005774, 0.725613, 0, 1.0};
Point(55) = {-0.000799, 0.725102, 0, 1.0};
Point(56) = {0.004178, 0.724626, 0, 1.0};
Point(57) = {0.009158, 0.724172, 0, 1.0};
Point(58) = {0.014139, 0.723736, 0, 1.0};
Point(59) = {0.019121, 0.723323, 0, 1.0};
Point(60) = {0.024110, 0.722980, 0, 1.0};
Point(61) = {0.029107, 0.722722, 0, 1.0};
Point(62) = {0.039115, 0.722390, 0, 1.0};
Point(63) = {0.049142, 0.722274, 0, 1.0};
Point(64) = {0.059180, 0.722291, 0, 1.0};
Point(65) = {0.069226, 0.722396, 0, 1.0};
Point(66) = {0.079273, 0.722515, 0, 1.0};
Point(67) = {0.089317, 0.722600, 0, 1.0};
Point(68) = {0.099355, 0.722617, 0, 1.0};
Point(69) = {0.109383, 0.722508, 0, 1.0};
Point(70) = {0.114390, 0.722377, 0, 1.0};
Point(71) = {0.119391, 0.722177, 0, 1.0};
Point(72) = {0.124384, 0.721874, 0, 1.0};
Point(73) = {0.129371, 0.721510, 0, 1.0};
Point(74) = {0.134349, 0.721049, 0, 1.0};
Point(75) = {0.139329, 0.720593, 0, 1.0};
Point(76) = {0.144301, 0.720058, 0, 1.0};
Point(77) = {-0.149267, -0.719440, 0, 1.0};
Point(78) = {-0.144375, -0.720912, 0, 1.0};
Point(79) = {-0.139490, -0.722472, 0, 1.0};
Point(80) = {-0.134605, -0.724030, 0, 1.0};
Point(81) = {-0.129717, -0.725548, 0, 1.0};
Point(82) = {-0.124829, -0.727057, 0, 1.0};
Point(83) = {-0.119938, -0.728539, 0, 1.0};
Point(84) = {-0.115046, -0.730021, 0, 1.0};
Point(85) = {-0.110155, -0.731499, 0, 1.0};
Point(86) = {-0.100363, -0.734348, 0, 1.0};
Point(87) = {-0.090561, -0.737086, 0, 1.0};
Point(88) = {-0.080740, -0.739598, 0, 1.0};
Point(89) = {-0.070901, -0.741902, 0, 1.0};
Point(90) = {-0.061039, -0.743937, 0, 1.0};
Point(91) = {-0.051152, -0.745686, 0, 1.0};
Point(92) = {-0.041240, -0.747135, 0, 1.0};
Point(93) = {-0.031304, -0.748304, 0, 1.0};
Point(94) = {-0.026327, -0.748787, 0, 1.0};
Point(95) = {-0.021344, -0.749201, 0, 1.0};
Point(96) = {-0.016354, -0.749534, 0, 1.0};
Point(97) = {-0.011356, -0.749772, 0, 1.0};
Point(98) = {-0.006351, -0.749927, 0, 1.0};
Point(99) = {-0.001339, -0.750000, 0, 1.0};
Point(100) = {0.003680, -0.749989, 0, 1.0};
Point(101) = {0.008710, -0.749863, 0, 1.0};
Point(102) = {0.013751, -0.749600, 0, 1.0};
Point(103) = {0.018805, -0.749187, 0, 1.0};
Point(104) = {0.023874, -0.748596, 0, 1.0};
Point(105) = {0.028964, -0.747763, 0, 1.0};
Point(106) = {0.034081, -0.746608, 0, 1.0};
Point(107) = {0.039240, -0.744978, 0, 1.0};
Point(108) = {0.041841, -0.743906, 0, 1.0};
Point(109) = {0.044465, -0.742572, 0, 1.0};
Point(110) = {0.045789, -0.741756, 0, 1.0};
Point(111) = {0.047129, -0.740769, 0, 1.0};
Point(112) = {0.047943, -0.740050, 0, 1.0};
Point(113) = {0.048777, -0.739108, 0, 1.0};
Point(114) = {0.049355, -0.738224, 0, 1.0};
Point(115) = {0.050000, -0.736554, 0, 1.0};
Point(116) = {0.049587, -0.735514, 0, 1.0};
Point(117) = {0.049129, -0.735011, 0, 1.0};
Point(118) = {0.048428, -0.734407, 0, 1.0};
Point(119) = {0.047718, -0.733905, 0, 1.0};
Point(120) = {0.046523, -0.733220, 0, 1.0};
Point(121) = {0.045314, -0.732688, 0, 1.0};
Point(122) = {0.042879, -0.731819, 0, 1.0};
Point(123) = {0.040430, -0.731123, 0, 1.0};
Point(124) = {0.035510, -0.729978, 0, 1.0};
Point(125) = {0.030573, -0.729026, 0, 1.0};
Point(126) = {0.025626, -0.728187, 0, 1.0};
Point(127) = {0.020673, -0.727437, 0, 1.0};
Point(128) = {0.015712, -0.726768, 0, 1.0};
Point(129) = {0.010745, -0.726167, 0, 1.0};
Point(130) = {0.005774, -0.725613, 0, 1.0};
Point(131) = {0.000799, -0.725102, 0, 1.0};
Point(132) = {-0.004178, -0.724626, 0, 1.0};
Point(133) = {-0.009158, -0.724172, 0, 1.0};
Point(134) = {-0.014139, -0.723736, 0, 1.0};
Point(135) = {-0.019121, -0.723323, 0, 1.0};
Point(136) = {-0.024110, -0.722980, 0, 1.0};
Point(137) = {-0.029107, -0.722722, 0, 1.0};
Point(138) = {-0.039115, -0.722390, 0, 1.0};
Point(139) = {-0.049142, -0.722274, 0, 1.0};
Point(140) = {-0.059180, -0.722291, 0, 1.0};
Point(141) = {-0.069226, -0.722396, 0, 1.0};
Point(142) = {-0.079273, -0.722515, 0, 1.0};
Point(143) = {-0.089317, -0.722600, 0, 1.0};
Point(144) = {-0.099355, -0.722617, 0, 1.0};
Point(145) = {-0.109383, -0.722508, 0, 1.0};
Point(146) = {-0.114390, -0.722377, 0, 1.0};
Point(147) = {-0.119391, -0.722177, 0, 1.0};
Point(148) = {-0.124384, -0.721874, 0, 1.0};
Point(149) = {-0.129371, -0.721510, 0, 1.0};
Point(150) = {-0.134349, -0.721049, 0, 1.0};
Point(151) = {-0.139329, -0.720593, 0, 1.0};
Point(152) = {-0.144301, -0.720058, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
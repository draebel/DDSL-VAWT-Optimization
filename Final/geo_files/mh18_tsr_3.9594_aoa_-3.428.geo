SetFactory("OpenCASCADE");

Point(1) = {0.149642, 0.740248, 0, 1.0};
Point(2) = {0.148927, 0.740200, 0, 1.0};
Point(3) = {0.146782, 0.740112, 0, 1.0};
Point(4) = {0.143237, 0.740110, 0, 1.0};
Point(5) = {0.138398, 0.740319, 0, 1.0};
Point(6) = {0.132448, 0.740801, 0, 1.0};
Point(7) = {0.125565, 0.741538, 0, 1.0};
Point(8) = {0.117903, 0.742487, 0, 1.0};
Point(9) = {0.109605, 0.743592, 0, 1.0};
Point(10) = {0.100803, 0.744789, 0, 1.0};
Point(11) = {0.091620, 0.746011, 0, 1.0};
Point(12) = {0.082172, 0.747189, 0, 1.0};
Point(13) = {0.072566, 0.748262, 0, 1.0};
Point(14) = {0.062924, 0.749157, 0, 1.0};
Point(15) = {0.053327, 0.749759, 0, 1.0};
Point(16) = {0.043768, 0.750000, 0, 1.0};
Point(17) = {0.034254, 0.749916, 0, 1.0};
Point(18) = {0.024869, 0.749563, 0, 1.0};
Point(19) = {0.015721, 0.748961, 0, 1.0};
Point(20) = {0.006905, 0.748120, 0, 1.0};
Point(21) = {-0.001491, 0.747045, 0, 1.0};
Point(22) = {-0.009395, 0.745746, 0, 1.0};
Point(23) = {-0.016742, 0.744241, 0, 1.0};
Point(24) = {-0.023476, 0.742555, 0, 1.0};
Point(25) = {-0.029544, 0.740726, 0, 1.0};
Point(26) = {-0.034896, 0.738794, 0, 1.0};
Point(27) = {-0.039486, 0.736800, 0, 1.0};
Point(28) = {-0.043286, 0.734794, 0, 1.0};
Point(29) = {-0.046264, 0.732837, 0, 1.0};
Point(30) = {-0.048397, 0.731004, 0, 1.0};
Point(31) = {-0.049652, 0.729390, 0, 1.0};
Point(32) = {-0.049855, 0.728958, 0, 1.0};
Point(33) = {-0.049974, 0.728574, 0, 1.0};
Point(34) = {-0.050001, 0.728345, 0, 1.0};
Point(35) = {-0.049977, 0.728147, 0, 1.0};
Point(36) = {-0.049884, 0.727967, 0, 1.0};
Point(37) = {-0.049726, 0.727784, 0, 1.0};
Point(38) = {-0.049396, 0.727506, 0, 1.0};
Point(39) = {-0.048964, 0.727226, 0, 1.0};
Point(40) = {-0.046856, 0.726355, 0, 1.0};
Point(41) = {-0.043726, 0.725626, 0, 1.0};
Point(42) = {-0.039598, 0.725091, 0, 1.0};
Point(43) = {-0.034493, 0.724761, 0, 1.0};
Point(44) = {-0.028448, 0.724637, 0, 1.0};
Point(45) = {-0.021508, 0.724708, 0, 1.0};
Point(46) = {-0.013737, 0.724955, 0, 1.0};
Point(47) = {-0.005212, 0.725350, 0, 1.0};
Point(48) = {0.003968, 0.725869, 0, 1.0};
Point(49) = {0.013695, 0.726486, 0, 1.0};
Point(50) = {0.023847, 0.727184, 0, 1.0};
Point(51) = {0.034302, 0.727954, 0, 1.0};
Point(52) = {0.044939, 0.728782, 0, 1.0};
Point(53) = {0.055635, 0.729657, 0, 1.0};
Point(54) = {0.066266, 0.730565, 0, 1.0};
Point(55) = {0.076709, 0.731495, 0, 1.0};
Point(56) = {0.086845, 0.732434, 0, 1.0};
Point(57) = {0.096554, 0.733370, 0, 1.0};
Point(58) = {0.105724, 0.734291, 0, 1.0};
Point(59) = {0.114248, 0.735189, 0, 1.0};
Point(60) = {0.122025, 0.736052, 0, 1.0};
Point(61) = {0.128963, 0.736874, 0, 1.0};
Point(62) = {0.134980, 0.737648, 0, 1.0};
Point(63) = {0.139997, 0.738384, 0, 1.0};
Point(64) = {0.144000, 0.739101, 0, 1.0};
Point(65) = {0.147014, 0.739729, 0, 1.0};
Point(66) = {0.148958, 0.740124, 0, 1.0};
Point(67) = {-0.149642, -0.740248, 0, 1.0};
Point(68) = {-0.148927, -0.740200, 0, 1.0};
Point(69) = {-0.146782, -0.740112, 0, 1.0};
Point(70) = {-0.143237, -0.740110, 0, 1.0};
Point(71) = {-0.138398, -0.740319, 0, 1.0};
Point(72) = {-0.132448, -0.740801, 0, 1.0};
Point(73) = {-0.125565, -0.741538, 0, 1.0};
Point(74) = {-0.117903, -0.742487, 0, 1.0};
Point(75) = {-0.109605, -0.743592, 0, 1.0};
Point(76) = {-0.100803, -0.744789, 0, 1.0};
Point(77) = {-0.091620, -0.746011, 0, 1.0};
Point(78) = {-0.082172, -0.747189, 0, 1.0};
Point(79) = {-0.072566, -0.748262, 0, 1.0};
Point(80) = {-0.062924, -0.749157, 0, 1.0};
Point(81) = {-0.053327, -0.749759, 0, 1.0};
Point(82) = {-0.043768, -0.750000, 0, 1.0};
Point(83) = {-0.034254, -0.749916, 0, 1.0};
Point(84) = {-0.024869, -0.749563, 0, 1.0};
Point(85) = {-0.015721, -0.748961, 0, 1.0};
Point(86) = {-0.006905, -0.748120, 0, 1.0};
Point(87) = {0.001491, -0.747045, 0, 1.0};
Point(88) = {0.009395, -0.745746, 0, 1.0};
Point(89) = {0.016742, -0.744241, 0, 1.0};
Point(90) = {0.023476, -0.742555, 0, 1.0};
Point(91) = {0.029544, -0.740726, 0, 1.0};
Point(92) = {0.034896, -0.738794, 0, 1.0};
Point(93) = {0.039486, -0.736800, 0, 1.0};
Point(94) = {0.043286, -0.734794, 0, 1.0};
Point(95) = {0.046264, -0.732837, 0, 1.0};
Point(96) = {0.048397, -0.731004, 0, 1.0};
Point(97) = {0.049652, -0.729390, 0, 1.0};
Point(98) = {0.049855, -0.728958, 0, 1.0};
Point(99) = {0.049974, -0.728574, 0, 1.0};
Point(100) = {0.050001, -0.728345, 0, 1.0};
Point(101) = {0.049977, -0.728147, 0, 1.0};
Point(102) = {0.049884, -0.727967, 0, 1.0};
Point(103) = {0.049726, -0.727784, 0, 1.0};
Point(104) = {0.049396, -0.727506, 0, 1.0};
Point(105) = {0.048964, -0.727226, 0, 1.0};
Point(106) = {0.046856, -0.726355, 0, 1.0};
Point(107) = {0.043726, -0.725626, 0, 1.0};
Point(108) = {0.039598, -0.725091, 0, 1.0};
Point(109) = {0.034493, -0.724761, 0, 1.0};
Point(110) = {0.028448, -0.724637, 0, 1.0};
Point(111) = {0.021508, -0.724708, 0, 1.0};
Point(112) = {0.013737, -0.724955, 0, 1.0};
Point(113) = {0.005212, -0.725350, 0, 1.0};
Point(114) = {-0.003968, -0.725869, 0, 1.0};
Point(115) = {-0.013695, -0.726486, 0, 1.0};
Point(116) = {-0.023847, -0.727184, 0, 1.0};
Point(117) = {-0.034302, -0.727954, 0, 1.0};
Point(118) = {-0.044939, -0.728782, 0, 1.0};
Point(119) = {-0.055635, -0.729657, 0, 1.0};
Point(120) = {-0.066266, -0.730565, 0, 1.0};
Point(121) = {-0.076709, -0.731495, 0, 1.0};
Point(122) = {-0.086845, -0.732434, 0, 1.0};
Point(123) = {-0.096554, -0.733370, 0, 1.0};
Point(124) = {-0.105724, -0.734291, 0, 1.0};
Point(125) = {-0.114248, -0.735189, 0, 1.0};
Point(126) = {-0.122025, -0.736052, 0, 1.0};
Point(127) = {-0.128963, -0.736874, 0, 1.0};
Point(128) = {-0.134980, -0.737648, 0, 1.0};
Point(129) = {-0.139997, -0.738384, 0, 1.0};
Point(130) = {-0.144000, -0.739101, 0, 1.0};
Point(131) = {-0.147014, -0.739729, 0, 1.0};
Point(132) = {-0.148958, -0.740124, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
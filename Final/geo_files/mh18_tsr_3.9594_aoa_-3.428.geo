SetFactory("OpenCASCADE");

Point(1) = {0.074821, 0.745124, 0, 1.0};
Point(2) = {0.074463, 0.745100, 0, 1.0};
Point(3) = {0.073391, 0.745056, 0, 1.0};
Point(4) = {0.071618, 0.745055, 0, 1.0};
Point(5) = {0.069199, 0.745160, 0, 1.0};
Point(6) = {0.066224, 0.745401, 0, 1.0};
Point(7) = {0.062782, 0.745769, 0, 1.0};
Point(8) = {0.058951, 0.746244, 0, 1.0};
Point(9) = {0.054802, 0.746796, 0, 1.0};
Point(10) = {0.050402, 0.747395, 0, 1.0};
Point(11) = {0.045810, 0.748005, 0, 1.0};
Point(12) = {0.041086, 0.748595, 0, 1.0};
Point(13) = {0.036283, 0.749131, 0, 1.0};
Point(14) = {0.031462, 0.749578, 0, 1.0};
Point(15) = {0.026664, 0.749880, 0, 1.0};
Point(16) = {0.021884, 0.750000, 0, 1.0};
Point(17) = {0.017127, 0.749958, 0, 1.0};
Point(18) = {0.012435, 0.749781, 0, 1.0};
Point(19) = {0.007861, 0.749481, 0, 1.0};
Point(20) = {0.003453, 0.749060, 0, 1.0};
Point(21) = {-0.000745, 0.748523, 0, 1.0};
Point(22) = {-0.004698, 0.747873, 0, 1.0};
Point(23) = {-0.008371, 0.747120, 0, 1.0};
Point(24) = {-0.011738, 0.746277, 0, 1.0};
Point(25) = {-0.014772, 0.745363, 0, 1.0};
Point(26) = {-0.017448, 0.744397, 0, 1.0};
Point(27) = {-0.019743, 0.743400, 0, 1.0};
Point(28) = {-0.021643, 0.742397, 0, 1.0};
Point(29) = {-0.023132, 0.741419, 0, 1.0};
Point(30) = {-0.024199, 0.740502, 0, 1.0};
Point(31) = {-0.024826, 0.739695, 0, 1.0};
Point(32) = {-0.024928, 0.739479, 0, 1.0};
Point(33) = {-0.024987, 0.739287, 0, 1.0};
Point(34) = {-0.025001, 0.739172, 0, 1.0};
Point(35) = {-0.024988, 0.739074, 0, 1.0};
Point(36) = {-0.024942, 0.738983, 0, 1.0};
Point(37) = {-0.024863, 0.738892, 0, 1.0};
Point(38) = {-0.024698, 0.738753, 0, 1.0};
Point(39) = {-0.024482, 0.738613, 0, 1.0};
Point(40) = {-0.023428, 0.738178, 0, 1.0};
Point(41) = {-0.021863, 0.737813, 0, 1.0};
Point(42) = {-0.019799, 0.737545, 0, 1.0};
Point(43) = {-0.017247, 0.737380, 0, 1.0};
Point(44) = {-0.014224, 0.737318, 0, 1.0};
Point(45) = {-0.010754, 0.737354, 0, 1.0};
Point(46) = {-0.006868, 0.737477, 0, 1.0};
Point(47) = {-0.002606, 0.737675, 0, 1.0};
Point(48) = {0.001984, 0.737934, 0, 1.0};
Point(49) = {0.006848, 0.738243, 0, 1.0};
Point(50) = {0.011924, 0.738592, 0, 1.0};
Point(51) = {0.017151, 0.738977, 0, 1.0};
Point(52) = {0.022470, 0.739391, 0, 1.0};
Point(53) = {0.027817, 0.739828, 0, 1.0};
Point(54) = {0.033133, 0.740283, 0, 1.0};
Point(55) = {0.038355, 0.740748, 0, 1.0};
Point(56) = {0.043422, 0.741217, 0, 1.0};
Point(57) = {0.048277, 0.741685, 0, 1.0};
Point(58) = {0.052862, 0.742146, 0, 1.0};
Point(59) = {0.057124, 0.742594, 0, 1.0};
Point(60) = {0.061013, 0.743026, 0, 1.0};
Point(61) = {0.064482, 0.743437, 0, 1.0};
Point(62) = {0.067490, 0.743824, 0, 1.0};
Point(63) = {0.069998, 0.744192, 0, 1.0};
Point(64) = {0.072000, 0.744550, 0, 1.0};
Point(65) = {0.073507, 0.744864, 0, 1.0};
Point(66) = {0.074479, 0.745062, 0, 1.0};
Point(67) = {-0.074821, -0.745124, 0, 1.0};
Point(68) = {-0.074463, -0.745100, 0, 1.0};
Point(69) = {-0.073391, -0.745056, 0, 1.0};
Point(70) = {-0.071618, -0.745055, 0, 1.0};
Point(71) = {-0.069199, -0.745160, 0, 1.0};
Point(72) = {-0.066224, -0.745401, 0, 1.0};
Point(73) = {-0.062782, -0.745769, 0, 1.0};
Point(74) = {-0.058951, -0.746244, 0, 1.0};
Point(75) = {-0.054802, -0.746796, 0, 1.0};
Point(76) = {-0.050402, -0.747395, 0, 1.0};
Point(77) = {-0.045810, -0.748005, 0, 1.0};
Point(78) = {-0.041086, -0.748595, 0, 1.0};
Point(79) = {-0.036283, -0.749131, 0, 1.0};
Point(80) = {-0.031462, -0.749578, 0, 1.0};
Point(81) = {-0.026664, -0.749880, 0, 1.0};
Point(82) = {-0.021884, -0.750000, 0, 1.0};
Point(83) = {-0.017127, -0.749958, 0, 1.0};
Point(84) = {-0.012435, -0.749781, 0, 1.0};
Point(85) = {-0.007861, -0.749481, 0, 1.0};
Point(86) = {-0.003453, -0.749060, 0, 1.0};
Point(87) = {0.000745, -0.748523, 0, 1.0};
Point(88) = {0.004698, -0.747873, 0, 1.0};
Point(89) = {0.008371, -0.747120, 0, 1.0};
Point(90) = {0.011738, -0.746277, 0, 1.0};
Point(91) = {0.014772, -0.745363, 0, 1.0};
Point(92) = {0.017448, -0.744397, 0, 1.0};
Point(93) = {0.019743, -0.743400, 0, 1.0};
Point(94) = {0.021643, -0.742397, 0, 1.0};
Point(95) = {0.023132, -0.741419, 0, 1.0};
Point(96) = {0.024199, -0.740502, 0, 1.0};
Point(97) = {0.024826, -0.739695, 0, 1.0};
Point(98) = {0.024928, -0.739479, 0, 1.0};
Point(99) = {0.024987, -0.739287, 0, 1.0};
Point(100) = {0.025001, -0.739172, 0, 1.0};
Point(101) = {0.024988, -0.739074, 0, 1.0};
Point(102) = {0.024942, -0.738983, 0, 1.0};
Point(103) = {0.024863, -0.738892, 0, 1.0};
Point(104) = {0.024698, -0.738753, 0, 1.0};
Point(105) = {0.024482, -0.738613, 0, 1.0};
Point(106) = {0.023428, -0.738178, 0, 1.0};
Point(107) = {0.021863, -0.737813, 0, 1.0};
Point(108) = {0.019799, -0.737545, 0, 1.0};
Point(109) = {0.017247, -0.737380, 0, 1.0};
Point(110) = {0.014224, -0.737318, 0, 1.0};
Point(111) = {0.010754, -0.737354, 0, 1.0};
Point(112) = {0.006868, -0.737477, 0, 1.0};
Point(113) = {0.002606, -0.737675, 0, 1.0};
Point(114) = {-0.001984, -0.737934, 0, 1.0};
Point(115) = {-0.006848, -0.738243, 0, 1.0};
Point(116) = {-0.011924, -0.738592, 0, 1.0};
Point(117) = {-0.017151, -0.738977, 0, 1.0};
Point(118) = {-0.022470, -0.739391, 0, 1.0};
Point(119) = {-0.027817, -0.739828, 0, 1.0};
Point(120) = {-0.033133, -0.740283, 0, 1.0};
Point(121) = {-0.038355, -0.740748, 0, 1.0};
Point(122) = {-0.043422, -0.741217, 0, 1.0};
Point(123) = {-0.048277, -0.741685, 0, 1.0};
Point(124) = {-0.052862, -0.742146, 0, 1.0};
Point(125) = {-0.057124, -0.742594, 0, 1.0};
Point(126) = {-0.061013, -0.743026, 0, 1.0};
Point(127) = {-0.064482, -0.743437, 0, 1.0};
Point(128) = {-0.067490, -0.743824, 0, 1.0};
Point(129) = {-0.069998, -0.744192, 0, 1.0};
Point(130) = {-0.072000, -0.744550, 0, 1.0};
Point(131) = {-0.073507, -0.744864, 0, 1.0};
Point(132) = {-0.074479, -0.745062, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112232, 0.742686, 0, 1.0};
Point(2) = {0.111695, 0.742650, 0, 1.0};
Point(3) = {0.110086, 0.742584, 0, 1.0};
Point(4) = {0.107427, 0.742582, 0, 1.0};
Point(5) = {0.103799, 0.742740, 0, 1.0};
Point(6) = {0.099336, 0.743101, 0, 1.0};
Point(7) = {0.094174, 0.743654, 0, 1.0};
Point(8) = {0.088427, 0.744366, 0, 1.0};
Point(9) = {0.082204, 0.745194, 0, 1.0};
Point(10) = {0.075602, 0.746092, 0, 1.0};
Point(11) = {0.068715, 0.747008, 0, 1.0};
Point(12) = {0.061629, 0.747892, 0, 1.0};
Point(13) = {0.054425, 0.748696, 0, 1.0};
Point(14) = {0.047193, 0.749368, 0, 1.0};
Point(15) = {0.039995, 0.749819, 0, 1.0};
Point(16) = {0.032826, 0.750000, 0, 1.0};
Point(17) = {0.025690, 0.749937, 0, 1.0};
Point(18) = {0.018652, 0.749672, 0, 1.0};
Point(19) = {0.011791, 0.749221, 0, 1.0};
Point(20) = {0.005179, 0.748590, 0, 1.0};
Point(21) = {-0.001118, 0.747784, 0, 1.0};
Point(22) = {-0.007047, 0.746810, 0, 1.0};
Point(23) = {-0.012557, 0.745681, 0, 1.0};
Point(24) = {-0.017607, 0.744416, 0, 1.0};
Point(25) = {-0.022158, 0.743044, 0, 1.0};
Point(26) = {-0.026172, 0.741595, 0, 1.0};
Point(27) = {-0.029615, 0.740100, 0, 1.0};
Point(28) = {-0.032464, 0.738595, 0, 1.0};
Point(29) = {-0.034698, 0.737128, 0, 1.0};
Point(30) = {-0.036298, 0.735753, 0, 1.0};
Point(31) = {-0.037239, 0.734542, 0, 1.0};
Point(32) = {-0.037391, 0.734219, 0, 1.0};
Point(33) = {-0.037480, 0.733930, 0, 1.0};
Point(34) = {-0.037501, 0.733758, 0, 1.0};
Point(35) = {-0.037483, 0.733610, 0, 1.0};
Point(36) = {-0.037413, 0.733475, 0, 1.0};
Point(37) = {-0.037295, 0.733338, 0, 1.0};
Point(38) = {-0.037047, 0.733130, 0, 1.0};
Point(39) = {-0.036723, 0.732920, 0, 1.0};
Point(40) = {-0.035142, 0.732266, 0, 1.0};
Point(41) = {-0.032795, 0.731719, 0, 1.0};
Point(42) = {-0.029699, 0.731318, 0, 1.0};
Point(43) = {-0.025870, 0.731071, 0, 1.0};
Point(44) = {-0.021336, 0.730978, 0, 1.0};
Point(45) = {-0.016131, 0.731031, 0, 1.0};
Point(46) = {-0.010303, 0.731216, 0, 1.0};
Point(47) = {-0.003909, 0.731513, 0, 1.0};
Point(48) = {0.002976, 0.731902, 0, 1.0};
Point(49) = {0.010272, 0.732365, 0, 1.0};
Point(50) = {0.017885, 0.732888, 0, 1.0};
Point(51) = {0.025727, 0.733465, 0, 1.0};
Point(52) = {0.033704, 0.734086, 0, 1.0};
Point(53) = {0.041726, 0.734743, 0, 1.0};
Point(54) = {0.049699, 0.735424, 0, 1.0};
Point(55) = {0.057532, 0.736122, 0, 1.0};
Point(56) = {0.065133, 0.736825, 0, 1.0};
Point(57) = {0.072415, 0.737528, 0, 1.0};
Point(58) = {0.079293, 0.738219, 0, 1.0};
Point(59) = {0.085686, 0.738892, 0, 1.0};
Point(60) = {0.091519, 0.739539, 0, 1.0};
Point(61) = {0.096723, 0.740156, 0, 1.0};
Point(62) = {0.101235, 0.740736, 0, 1.0};
Point(63) = {0.104998, 0.741288, 0, 1.0};
Point(64) = {0.108000, 0.741826, 0, 1.0};
Point(65) = {0.110261, 0.742296, 0, 1.0};
Point(66) = {0.111719, 0.742593, 0, 1.0};
Point(67) = {-0.112232, -0.742686, 0, 1.0};
Point(68) = {-0.111695, -0.742650, 0, 1.0};
Point(69) = {-0.110086, -0.742584, 0, 1.0};
Point(70) = {-0.107427, -0.742582, 0, 1.0};
Point(71) = {-0.103799, -0.742740, 0, 1.0};
Point(72) = {-0.099336, -0.743101, 0, 1.0};
Point(73) = {-0.094174, -0.743654, 0, 1.0};
Point(74) = {-0.088427, -0.744366, 0, 1.0};
Point(75) = {-0.082204, -0.745194, 0, 1.0};
Point(76) = {-0.075602, -0.746092, 0, 1.0};
Point(77) = {-0.068715, -0.747008, 0, 1.0};
Point(78) = {-0.061629, -0.747892, 0, 1.0};
Point(79) = {-0.054425, -0.748696, 0, 1.0};
Point(80) = {-0.047193, -0.749368, 0, 1.0};
Point(81) = {-0.039995, -0.749819, 0, 1.0};
Point(82) = {-0.032826, -0.750000, 0, 1.0};
Point(83) = {-0.025690, -0.749937, 0, 1.0};
Point(84) = {-0.018652, -0.749672, 0, 1.0};
Point(85) = {-0.011791, -0.749221, 0, 1.0};
Point(86) = {-0.005179, -0.748590, 0, 1.0};
Point(87) = {0.001118, -0.747784, 0, 1.0};
Point(88) = {0.007047, -0.746810, 0, 1.0};
Point(89) = {0.012557, -0.745681, 0, 1.0};
Point(90) = {0.017607, -0.744416, 0, 1.0};
Point(91) = {0.022158, -0.743044, 0, 1.0};
Point(92) = {0.026172, -0.741595, 0, 1.0};
Point(93) = {0.029615, -0.740100, 0, 1.0};
Point(94) = {0.032464, -0.738595, 0, 1.0};
Point(95) = {0.034698, -0.737128, 0, 1.0};
Point(96) = {0.036298, -0.735753, 0, 1.0};
Point(97) = {0.037239, -0.734542, 0, 1.0};
Point(98) = {0.037391, -0.734219, 0, 1.0};
Point(99) = {0.037480, -0.733930, 0, 1.0};
Point(100) = {0.037501, -0.733758, 0, 1.0};
Point(101) = {0.037483, -0.733610, 0, 1.0};
Point(102) = {0.037413, -0.733475, 0, 1.0};
Point(103) = {0.037295, -0.733338, 0, 1.0};
Point(104) = {0.037047, -0.733130, 0, 1.0};
Point(105) = {0.036723, -0.732920, 0, 1.0};
Point(106) = {0.035142, -0.732266, 0, 1.0};
Point(107) = {0.032795, -0.731719, 0, 1.0};
Point(108) = {0.029699, -0.731318, 0, 1.0};
Point(109) = {0.025870, -0.731071, 0, 1.0};
Point(110) = {0.021336, -0.730978, 0, 1.0};
Point(111) = {0.016131, -0.731031, 0, 1.0};
Point(112) = {0.010303, -0.731216, 0, 1.0};
Point(113) = {0.003909, -0.731513, 0, 1.0};
Point(114) = {-0.002976, -0.731902, 0, 1.0};
Point(115) = {-0.010272, -0.732365, 0, 1.0};
Point(116) = {-0.017885, -0.732888, 0, 1.0};
Point(117) = {-0.025727, -0.733465, 0, 1.0};
Point(118) = {-0.033704, -0.734086, 0, 1.0};
Point(119) = {-0.041726, -0.734743, 0, 1.0};
Point(120) = {-0.049699, -0.735424, 0, 1.0};
Point(121) = {-0.057532, -0.736122, 0, 1.0};
Point(122) = {-0.065133, -0.736825, 0, 1.0};
Point(123) = {-0.072415, -0.737528, 0, 1.0};
Point(124) = {-0.079293, -0.738219, 0, 1.0};
Point(125) = {-0.085686, -0.738892, 0, 1.0};
Point(126) = {-0.091519, -0.739539, 0, 1.0};
Point(127) = {-0.096723, -0.740156, 0, 1.0};
Point(128) = {-0.101235, -0.740736, 0, 1.0};
Point(129) = {-0.104998, -0.741288, 0, 1.0};
Point(130) = {-0.108000, -0.741826, 0, 1.0};
Point(131) = {-0.110261, -0.742296, 0, 1.0};
Point(132) = {-0.111719, -0.742593, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
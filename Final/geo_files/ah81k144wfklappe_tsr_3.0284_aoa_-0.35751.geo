SetFactory("OpenCASCADE");

Point(1) = {0.074994, 0.733334, 0, 1.0};
Point(2) = {0.073661, 0.733508, 0, 1.0};
Point(3) = {0.071900, 0.733650, 0, 1.0};
Point(4) = {0.069836, 0.733892, 0, 1.0};
Point(5) = {0.067479, 0.734081, 0, 1.0};
Point(6) = {0.064837, 0.734472, 0, 1.0};
Point(7) = {0.061926, 0.734810, 0, 1.0};
Point(8) = {0.058752, 0.735248, 0, 1.0};
Point(9) = {0.055334, 0.735532, 0, 1.0};
Point(10) = {0.051684, 0.736018, 0, 1.0};
Point(11) = {0.047819, 0.736504, 0, 1.0};
Point(12) = {0.043754, 0.737037, 0, 1.0};
Point(13) = {0.039506, 0.737674, 0, 1.0};
Point(14) = {0.035095, 0.738205, 0, 1.0};
Point(15) = {0.030541, 0.738788, 0, 1.0};
Point(16) = {0.025860, 0.739421, 0, 1.0};
Point(17) = {0.021074, 0.740155, 0, 1.0};
Point(18) = {0.016204, 0.740888, 0, 1.0};
Point(19) = {0.011268, 0.741621, 0, 1.0};
Point(20) = {0.006291, 0.742201, 0, 1.0};
Point(21) = {0.001293, 0.742933, 0, 1.0};
Point(22) = {-0.003706, 0.743666, 0, 1.0};
Point(23) = {-0.008683, 0.744398, 0, 1.0};
Point(24) = {-0.013618, 0.745029, 0, 1.0};
Point(25) = {-0.018489, 0.745762, 0, 1.0};
Point(26) = {-0.023275, 0.746496, 0, 1.0};
Point(27) = {-0.027956, 0.747197, 0, 1.0};
Point(28) = {-0.032512, 0.748051, 0, 1.0};
Point(29) = {-0.036925, 0.748857, 0, 1.0};
Point(30) = {-0.041173, 0.749512, 0, 1.0};
Point(31) = {-0.045237, 0.749882, 0, 1.0};
Point(32) = {-0.049100, 0.750000, 0, 1.0};
Point(33) = {-0.052745, 0.749719, 0, 1.0};
Point(34) = {-0.056158, 0.749136, 0, 1.0};
Point(35) = {-0.059323, 0.748256, 0, 1.0};
Point(36) = {-0.062225, 0.747116, 0, 1.0};
Point(37) = {-0.064857, 0.745954, 0, 1.0};
Point(38) = {-0.067203, 0.744326, 0, 1.0};
Point(39) = {-0.069254, 0.742556, 0, 1.0};
Point(40) = {-0.071003, 0.740705, 0, 1.0};
Point(41) = {-0.072441, 0.738814, 0, 1.0};
Point(42) = {-0.073564, 0.736913, 0, 1.0};
Point(43) = {-0.074366, 0.735013, 0, 1.0};
Point(44) = {-0.074843, 0.732963, 0, 1.0};
Point(45) = {-0.074999, 0.731664, 0, 1.0};
Point(46) = {-0.074829, 0.730691, 0, 1.0};
Point(47) = {-0.074327, 0.728813, 0, 1.0};
Point(48) = {-0.073503, 0.727258, 0, 1.0};
Point(49) = {-0.072360, 0.725861, 0, 1.0};
Point(50) = {-0.070902, 0.724495, 0, 1.0};
Point(51) = {-0.069133, 0.723165, 0, 1.0};
Point(52) = {-0.067063, 0.721944, 0, 1.0};
Point(53) = {-0.064699, 0.720716, 0, 1.0};
Point(54) = {-0.062053, 0.719601, 0, 1.0};
Point(55) = {-0.059137, 0.718522, 0, 1.0};
Point(56) = {-0.055961, 0.717539, 0, 1.0};
Point(57) = {-0.052539, 0.716780, 0, 1.0};
Point(58) = {-0.048890, 0.716366, 0, 1.0};
Point(59) = {-0.045028, 0.716533, 0, 1.0};
Point(60) = {-0.040970, 0.716988, 0, 1.0};
Point(61) = {-0.036731, 0.717753, 0, 1.0};
Point(62) = {-0.032329, 0.718583, 0, 1.0};
Point(63) = {-0.027782, 0.719399, 0, 1.0};
Point(64) = {-0.023111, 0.720219, 0, 1.0};
Point(65) = {-0.018335, 0.721065, 0, 1.0};
Point(66) = {-0.013474, 0.721932, 0, 1.0};
Point(67) = {-0.008548, 0.722786, 0, 1.0};
Point(68) = {-0.003581, 0.723710, 0, 1.0};
Point(69) = {0.001408, 0.724505, 0, 1.0};
Point(70) = {0.006397, 0.725197, 0, 1.0};
Point(71) = {0.011365, 0.726044, 0, 1.0};
Point(72) = {0.016293, 0.726634, 0, 1.0};
Point(73) = {0.021154, 0.727377, 0, 1.0};
Point(74) = {0.025932, 0.727967, 0, 1.0};
Point(75) = {0.030605, 0.728455, 0, 1.0};
Point(76) = {0.035153, 0.729042, 0, 1.0};
Point(77) = {0.039558, 0.729369, 0, 1.0};
Point(78) = {0.043799, 0.729832, 0, 1.0};
Point(79) = {0.047858, 0.730247, 0, 1.0};
Point(80) = {0.051718, 0.730612, 0, 1.0};
Point(81) = {0.055363, 0.730926, 0, 1.0};
Point(82) = {0.058778, 0.731199, 0, 1.0};
Point(83) = {0.061947, 0.731439, 0, 1.0};
Point(84) = {0.064856, 0.731468, 0, 1.0};
Point(85) = {0.067495, 0.731535, 0, 1.0};
Point(86) = {0.069851, 0.731601, 0, 1.0};
Point(87) = {0.071912, 0.731715, 0, 1.0};
Point(88) = {0.073672, 0.731778, 0, 1.0};
Point(89) = {0.075003, 0.731831, 0, 1.0};
Point(90) = {-0.074994, -0.733334, 0, 1.0};
Point(91) = {-0.073661, -0.733508, 0, 1.0};
Point(92) = {-0.071900, -0.733650, 0, 1.0};
Point(93) = {-0.069836, -0.733892, 0, 1.0};
Point(94) = {-0.067479, -0.734081, 0, 1.0};
Point(95) = {-0.064837, -0.734472, 0, 1.0};
Point(96) = {-0.061926, -0.734810, 0, 1.0};
Point(97) = {-0.058752, -0.735248, 0, 1.0};
Point(98) = {-0.055334, -0.735532, 0, 1.0};
Point(99) = {-0.051684, -0.736018, 0, 1.0};
Point(100) = {-0.047819, -0.736504, 0, 1.0};
Point(101) = {-0.043754, -0.737037, 0, 1.0};
Point(102) = {-0.039506, -0.737674, 0, 1.0};
Point(103) = {-0.035095, -0.738205, 0, 1.0};
Point(104) = {-0.030541, -0.738788, 0, 1.0};
Point(105) = {-0.025860, -0.739421, 0, 1.0};
Point(106) = {-0.021074, -0.740155, 0, 1.0};
Point(107) = {-0.016204, -0.740888, 0, 1.0};
Point(108) = {-0.011268, -0.741621, 0, 1.0};
Point(109) = {-0.006291, -0.742201, 0, 1.0};
Point(110) = {-0.001293, -0.742933, 0, 1.0};
Point(111) = {0.003706, -0.743666, 0, 1.0};
Point(112) = {0.008683, -0.744398, 0, 1.0};
Point(113) = {0.013618, -0.745029, 0, 1.0};
Point(114) = {0.018489, -0.745762, 0, 1.0};
Point(115) = {0.023275, -0.746496, 0, 1.0};
Point(116) = {0.027956, -0.747197, 0, 1.0};
Point(117) = {0.032512, -0.748051, 0, 1.0};
Point(118) = {0.036925, -0.748857, 0, 1.0};
Point(119) = {0.041173, -0.749512, 0, 1.0};
Point(120) = {0.045237, -0.749882, 0, 1.0};
Point(121) = {0.049100, -0.750000, 0, 1.0};
Point(122) = {0.052745, -0.749719, 0, 1.0};
Point(123) = {0.056158, -0.749136, 0, 1.0};
Point(124) = {0.059323, -0.748256, 0, 1.0};
Point(125) = {0.062225, -0.747116, 0, 1.0};
Point(126) = {0.064857, -0.745954, 0, 1.0};
Point(127) = {0.067203, -0.744326, 0, 1.0};
Point(128) = {0.069254, -0.742556, 0, 1.0};
Point(129) = {0.071003, -0.740705, 0, 1.0};
Point(130) = {0.072441, -0.738814, 0, 1.0};
Point(131) = {0.073564, -0.736913, 0, 1.0};
Point(132) = {0.074366, -0.735013, 0, 1.0};
Point(133) = {0.074843, -0.732963, 0, 1.0};
Point(134) = {0.074999, -0.731664, 0, 1.0};
Point(135) = {0.074829, -0.730691, 0, 1.0};
Point(136) = {0.074327, -0.728813, 0, 1.0};
Point(137) = {0.073503, -0.727258, 0, 1.0};
Point(138) = {0.072360, -0.725861, 0, 1.0};
Point(139) = {0.070902, -0.724495, 0, 1.0};
Point(140) = {0.069133, -0.723165, 0, 1.0};
Point(141) = {0.067063, -0.721944, 0, 1.0};
Point(142) = {0.064699, -0.720716, 0, 1.0};
Point(143) = {0.062053, -0.719601, 0, 1.0};
Point(144) = {0.059137, -0.718522, 0, 1.0};
Point(145) = {0.055961, -0.717539, 0, 1.0};
Point(146) = {0.052539, -0.716780, 0, 1.0};
Point(147) = {0.048890, -0.716366, 0, 1.0};
Point(148) = {0.045028, -0.716533, 0, 1.0};
Point(149) = {0.040970, -0.716988, 0, 1.0};
Point(150) = {0.036731, -0.717753, 0, 1.0};
Point(151) = {0.032329, -0.718583, 0, 1.0};
Point(152) = {0.027782, -0.719399, 0, 1.0};
Point(153) = {0.023111, -0.720219, 0, 1.0};
Point(154) = {0.018335, -0.721065, 0, 1.0};
Point(155) = {0.013474, -0.721932, 0, 1.0};
Point(156) = {0.008548, -0.722786, 0, 1.0};
Point(157) = {0.003581, -0.723710, 0, 1.0};
Point(158) = {-0.001408, -0.724505, 0, 1.0};
Point(159) = {-0.006397, -0.725197, 0, 1.0};
Point(160) = {-0.011365, -0.726044, 0, 1.0};
Point(161) = {-0.016293, -0.726634, 0, 1.0};
Point(162) = {-0.021154, -0.727377, 0, 1.0};
Point(163) = {-0.025932, -0.727967, 0, 1.0};
Point(164) = {-0.030605, -0.728455, 0, 1.0};
Point(165) = {-0.035153, -0.729042, 0, 1.0};
Point(166) = {-0.039558, -0.729369, 0, 1.0};
Point(167) = {-0.043799, -0.729832, 0, 1.0};
Point(168) = {-0.047858, -0.730247, 0, 1.0};
Point(169) = {-0.051718, -0.730612, 0, 1.0};
Point(170) = {-0.055363, -0.730926, 0, 1.0};
Point(171) = {-0.058778, -0.731199, 0, 1.0};
Point(172) = {-0.061947, -0.731439, 0, 1.0};
Point(173) = {-0.064856, -0.731468, 0, 1.0};
Point(174) = {-0.067495, -0.731535, 0, 1.0};
Point(175) = {-0.069851, -0.731601, 0, 1.0};
Point(176) = {-0.071912, -0.731715, 0, 1.0};
Point(177) = {-0.073672, -0.731778, 0, 1.0};
Point(178) = {-0.075003, -0.731831, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:61};
Spline(3) = {61:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:118};
Spline(6) = {118:150};
Spline(7) = {150:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 35 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
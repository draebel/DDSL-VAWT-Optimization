SetFactory("OpenCASCADE");

Point(1) = {0.148808, 0.745991, 0, 1.0};
Point(2) = {0.148258, 0.746050, 0, 1.0};
Point(3) = {0.146606, 0.746223, 0, 1.0};
Point(4) = {0.143879, 0.746497, 0, 1.0};
Point(5) = {0.140101, 0.746859, 0, 1.0};
Point(6) = {0.135316, 0.747288, 0, 1.0};
Point(7) = {0.129571, 0.747759, 0, 1.0};
Point(8) = {0.122928, 0.748247, 0, 1.0};
Point(9) = {0.115465, 0.748723, 0, 1.0};
Point(10) = {0.107255, 0.749158, 0, 1.0};
Point(11) = {0.098398, 0.749529, 0, 1.0};
Point(12) = {0.088985, 0.749808, 0, 1.0};
Point(13) = {0.079125, 0.749972, 0, 1.0};
Point(14) = {0.068921, 0.750000, 0, 1.0};
Point(15) = {0.058491, 0.749872, 0, 1.0};
Point(16) = {0.047951, 0.749569, 0, 1.0};
Point(17) = {0.037421, 0.749078, 0, 1.0};
Point(18) = {0.027015, 0.748388, 0, 1.0};
Point(19) = {0.016774, 0.747430, 0, 1.0};
Point(20) = {0.006911, 0.746185, 0, 1.0};
Point(21) = {-0.002459, 0.744668, 0, 1.0};
Point(22) = {-0.011226, 0.742912, 0, 1.0};
Point(23) = {-0.019295, 0.740953, 0, 1.0};
Point(24) = {-0.026562, 0.738842, 0, 1.0};
Point(25) = {-0.032958, 0.736625, 0, 1.0};
Point(26) = {-0.038407, 0.734366, 0, 1.0};
Point(27) = {-0.042852, 0.732120, 0, 1.0};
Point(28) = {-0.046265, 0.729937, 0, 1.0};
Point(29) = {-0.048599, 0.727866, 0, 1.0};
Point(30) = {-0.049846, 0.725939, 0, 1.0};
Point(31) = {-0.050000, 0.724187, 0, 1.0};
Point(32) = {-0.049081, 0.722691, 0, 1.0};
Point(33) = {-0.047112, 0.721520, 0, 1.0};
Point(34) = {-0.044137, 0.720684, 0, 1.0};
Point(35) = {-0.040180, 0.720172, 0, 1.0};
Point(36) = {-0.035294, 0.719980, 0, 1.0};
Point(37) = {-0.029536, 0.720092, 0, 1.0};
Point(38) = {-0.022960, 0.720493, 0, 1.0};
Point(39) = {-0.015641, 0.721157, 0, 1.0};
Point(40) = {-0.007651, 0.722056, 0, 1.0};
Point(41) = {0.000927, 0.723151, 0, 1.0};
Point(42) = {0.010018, 0.724402, 0, 1.0};
Point(43) = {0.019526, 0.725767, 0, 1.0};
Point(44) = {0.029369, 0.727198, 0, 1.0};
Point(45) = {0.039522, 0.728700, 0, 1.0};
Point(46) = {0.049797, 0.730274, 0, 1.0};
Point(47) = {0.060081, 0.731886, 0, 1.0};
Point(48) = {0.070261, 0.733504, 0, 1.0};
Point(49) = {0.080227, 0.735096, 0, 1.0};
Point(50) = {0.089872, 0.736638, 0, 1.0};
Point(51) = {0.099095, 0.738109, 0, 1.0};
Point(52) = {0.107786, 0.739492, 0, 1.0};
Point(53) = {0.115855, 0.740772, 0, 1.0};
Point(54) = {0.123204, 0.741934, 0, 1.0};
Point(55) = {0.129760, 0.742971, 0, 1.0};
Point(56) = {0.135436, 0.743869, 0, 1.0};
Point(57) = {0.140172, 0.744620, 0, 1.0};
Point(58) = {0.143920, 0.745214, 0, 1.0};
Point(59) = {0.146623, 0.745643, 0, 1.0};
Point(60) = {0.148260, 0.745905, 0, 1.0};
Point(61) = {-0.148808, -0.745991, 0, 1.0};
Point(62) = {-0.148258, -0.746050, 0, 1.0};
Point(63) = {-0.146606, -0.746223, 0, 1.0};
Point(64) = {-0.143879, -0.746497, 0, 1.0};
Point(65) = {-0.140101, -0.746859, 0, 1.0};
Point(66) = {-0.135316, -0.747288, 0, 1.0};
Point(67) = {-0.129571, -0.747759, 0, 1.0};
Point(68) = {-0.122928, -0.748247, 0, 1.0};
Point(69) = {-0.115465, -0.748723, 0, 1.0};
Point(70) = {-0.107255, -0.749158, 0, 1.0};
Point(71) = {-0.098398, -0.749529, 0, 1.0};
Point(72) = {-0.088985, -0.749808, 0, 1.0};
Point(73) = {-0.079125, -0.749972, 0, 1.0};
Point(74) = {-0.068921, -0.750000, 0, 1.0};
Point(75) = {-0.058491, -0.749872, 0, 1.0};
Point(76) = {-0.047951, -0.749569, 0, 1.0};
Point(77) = {-0.037421, -0.749078, 0, 1.0};
Point(78) = {-0.027015, -0.748388, 0, 1.0};
Point(79) = {-0.016774, -0.747430, 0, 1.0};
Point(80) = {-0.006911, -0.746185, 0, 1.0};
Point(81) = {0.002459, -0.744668, 0, 1.0};
Point(82) = {0.011226, -0.742912, 0, 1.0};
Point(83) = {0.019295, -0.740953, 0, 1.0};
Point(84) = {0.026562, -0.738842, 0, 1.0};
Point(85) = {0.032958, -0.736625, 0, 1.0};
Point(86) = {0.038407, -0.734366, 0, 1.0};
Point(87) = {0.042852, -0.732120, 0, 1.0};
Point(88) = {0.046265, -0.729937, 0, 1.0};
Point(89) = {0.048599, -0.727866, 0, 1.0};
Point(90) = {0.049846, -0.725939, 0, 1.0};
Point(91) = {0.050000, -0.724187, 0, 1.0};
Point(92) = {0.049081, -0.722691, 0, 1.0};
Point(93) = {0.047112, -0.721520, 0, 1.0};
Point(94) = {0.044137, -0.720684, 0, 1.0};
Point(95) = {0.040180, -0.720172, 0, 1.0};
Point(96) = {0.035294, -0.719980, 0, 1.0};
Point(97) = {0.029536, -0.720092, 0, 1.0};
Point(98) = {0.022960, -0.720493, 0, 1.0};
Point(99) = {0.015641, -0.721157, 0, 1.0};
Point(100) = {0.007651, -0.722056, 0, 1.0};
Point(101) = {-0.000927, -0.723151, 0, 1.0};
Point(102) = {-0.010018, -0.724402, 0, 1.0};
Point(103) = {-0.019526, -0.725767, 0, 1.0};
Point(104) = {-0.029369, -0.727198, 0, 1.0};
Point(105) = {-0.039522, -0.728700, 0, 1.0};
Point(106) = {-0.049797, -0.730274, 0, 1.0};
Point(107) = {-0.060081, -0.731886, 0, 1.0};
Point(108) = {-0.070261, -0.733504, 0, 1.0};
Point(109) = {-0.080227, -0.735096, 0, 1.0};
Point(110) = {-0.089872, -0.736638, 0, 1.0};
Point(111) = {-0.099095, -0.738109, 0, 1.0};
Point(112) = {-0.107786, -0.739492, 0, 1.0};
Point(113) = {-0.115855, -0.740772, 0, 1.0};
Point(114) = {-0.123204, -0.741934, 0, 1.0};
Point(115) = {-0.129760, -0.742971, 0, 1.0};
Point(116) = {-0.135436, -0.743869, 0, 1.0};
Point(117) = {-0.140172, -0.744620, 0, 1.0};
Point(118) = {-0.143920, -0.745214, 0, 1.0};
Point(119) = {-0.146623, -0.745643, 0, 1.0};
Point(120) = {-0.148260, -0.745905, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:101};
Spline(7) = {101:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
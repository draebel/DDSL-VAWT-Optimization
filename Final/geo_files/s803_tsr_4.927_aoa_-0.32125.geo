SetFactory("OpenCASCADE");

Point(1) = {0.112498, 0.736511, 0, 1.0};
Point(2) = {0.112005, 0.736664, 0, 1.0};
Point(3) = {0.110622, 0.737129, 0, 1.0};
Point(4) = {0.108511, 0.737840, 0, 1.0};
Point(5) = {0.105716, 0.738657, 0, 1.0};
Point(6) = {0.102201, 0.739517, 0, 1.0};
Point(7) = {0.097972, 0.740441, 0, 1.0};
Point(8) = {0.093093, 0.741432, 0, 1.0};
Point(9) = {0.087634, 0.742477, 0, 1.0};
Point(10) = {0.081669, 0.743558, 0, 1.0};
Point(11) = {0.075278, 0.744653, 0, 1.0};
Point(12) = {0.068546, 0.745734, 0, 1.0};
Point(13) = {0.061558, 0.746774, 0, 1.0};
Point(14) = {0.054397, 0.747736, 0, 1.0};
Point(15) = {0.047152, 0.748586, 0, 1.0};
Point(16) = {0.039900, 0.749285, 0, 1.0};
Point(17) = {0.032723, 0.749777, 0, 1.0};
Point(18) = {0.025652, 0.750000, 0, 1.0};
Point(19) = {0.018681, 0.749946, 0, 1.0};
Point(20) = {0.011846, 0.749665, 0, 1.0};
Point(21) = {0.005220, 0.749188, 0, 1.0};
Point(22) = {-0.001131, 0.748536, 0, 1.0};
Point(23) = {-0.007135, 0.747727, 0, 1.0};
Point(24) = {-0.012735, 0.746777, 0, 1.0};
Point(25) = {-0.017870, 0.745707, 0, 1.0};
Point(26) = {-0.022486, 0.744537, 0, 1.0};
Point(27) = {-0.026539, 0.743284, 0, 1.0};
Point(28) = {-0.029986, 0.741972, 0, 1.0};
Point(29) = {-0.032798, 0.740618, 0, 1.0};
Point(30) = {-0.034952, 0.739247, 0, 1.0};
Point(31) = {-0.036440, 0.737883, 0, 1.0};
Point(32) = {-0.037280, 0.736573, 0, 1.0};
Point(33) = {-0.037500, 0.735670, 0, 1.0};
Point(34) = {-0.037476, 0.735414, 0, 1.0};
Point(35) = {-0.036889, 0.734525, 0, 1.0};
Point(36) = {-0.035426, 0.733834, 0, 1.0};
Point(37) = {-0.033132, 0.733244, 0, 1.0};
Point(38) = {-0.030048, 0.732770, 0, 1.0};
Point(39) = {-0.026206, 0.732412, 0, 1.0};
Point(40) = {-0.021645, 0.732170, 0, 1.0};
Point(41) = {-0.016410, 0.732034, 0, 1.0};
Point(42) = {-0.010560, 0.732001, 0, 1.0};
Point(43) = {-0.004157, 0.732056, 0, 1.0};
Point(44) = {0.002725, 0.732192, 0, 1.0};
Point(45) = {0.010000, 0.732398, 0, 1.0};
Point(46) = {0.017577, 0.732668, 0, 1.0};
Point(47) = {0.025361, 0.733006, 0, 1.0};
Point(48) = {0.033255, 0.733418, 0, 1.0};
Point(49) = {0.041157, 0.733939, 0, 1.0};
Point(50) = {0.049036, 0.734639, 0, 1.0};
Point(51) = {0.056940, 0.735481, 0, 1.0};
Point(52) = {0.064826, 0.736328, 0, 1.0};
Point(53) = {0.072570, 0.737073, 0, 1.0};
Point(54) = {0.080028, 0.737652, 0, 1.0};
Point(55) = {0.087055, 0.738020, 0, 1.0};
Point(56) = {0.093504, 0.738149, 0, 1.0};
Point(57) = {0.099209, 0.738025, 0, 1.0};
Point(58) = {0.103995, 0.737698, 0, 1.0};
Point(59) = {0.107738, 0.737280, 0, 1.0};
Point(60) = {0.110395, 0.736888, 0, 1.0};
Point(61) = {0.111975, 0.736612, 0, 1.0};
Point(62) = {-0.112498, -0.736511, 0, 1.0};
Point(63) = {-0.112005, -0.736664, 0, 1.0};
Point(64) = {-0.110622, -0.737129, 0, 1.0};
Point(65) = {-0.108511, -0.737840, 0, 1.0};
Point(66) = {-0.105716, -0.738657, 0, 1.0};
Point(67) = {-0.102201, -0.739517, 0, 1.0};
Point(68) = {-0.097972, -0.740441, 0, 1.0};
Point(69) = {-0.093093, -0.741432, 0, 1.0};
Point(70) = {-0.087634, -0.742477, 0, 1.0};
Point(71) = {-0.081669, -0.743558, 0, 1.0};
Point(72) = {-0.075278, -0.744653, 0, 1.0};
Point(73) = {-0.068546, -0.745734, 0, 1.0};
Point(74) = {-0.061558, -0.746774, 0, 1.0};
Point(75) = {-0.054397, -0.747736, 0, 1.0};
Point(76) = {-0.047152, -0.748586, 0, 1.0};
Point(77) = {-0.039900, -0.749285, 0, 1.0};
Point(78) = {-0.032723, -0.749777, 0, 1.0};
Point(79) = {-0.025652, -0.750000, 0, 1.0};
Point(80) = {-0.018681, -0.749946, 0, 1.0};
Point(81) = {-0.011846, -0.749665, 0, 1.0};
Point(82) = {-0.005220, -0.749188, 0, 1.0};
Point(83) = {0.001131, -0.748536, 0, 1.0};
Point(84) = {0.007135, -0.747727, 0, 1.0};
Point(85) = {0.012735, -0.746777, 0, 1.0};
Point(86) = {0.017870, -0.745707, 0, 1.0};
Point(87) = {0.022486, -0.744537, 0, 1.0};
Point(88) = {0.026539, -0.743284, 0, 1.0};
Point(89) = {0.029986, -0.741972, 0, 1.0};
Point(90) = {0.032798, -0.740618, 0, 1.0};
Point(91) = {0.034952, -0.739247, 0, 1.0};
Point(92) = {0.036440, -0.737883, 0, 1.0};
Point(93) = {0.037280, -0.736573, 0, 1.0};
Point(94) = {0.037500, -0.735670, 0, 1.0};
Point(95) = {0.037476, -0.735414, 0, 1.0};
Point(96) = {0.036889, -0.734525, 0, 1.0};
Point(97) = {0.035426, -0.733834, 0, 1.0};
Point(98) = {0.033132, -0.733244, 0, 1.0};
Point(99) = {0.030048, -0.732770, 0, 1.0};
Point(100) = {0.026206, -0.732412, 0, 1.0};
Point(101) = {0.021645, -0.732170, 0, 1.0};
Point(102) = {0.016410, -0.732034, 0, 1.0};
Point(103) = {0.010560, -0.732001, 0, 1.0};
Point(104) = {0.004157, -0.732056, 0, 1.0};
Point(105) = {-0.002725, -0.732192, 0, 1.0};
Point(106) = {-0.010000, -0.732398, 0, 1.0};
Point(107) = {-0.017577, -0.732668, 0, 1.0};
Point(108) = {-0.025361, -0.733006, 0, 1.0};
Point(109) = {-0.033255, -0.733418, 0, 1.0};
Point(110) = {-0.041157, -0.733939, 0, 1.0};
Point(111) = {-0.049036, -0.734639, 0, 1.0};
Point(112) = {-0.056940, -0.735481, 0, 1.0};
Point(113) = {-0.064826, -0.736328, 0, 1.0};
Point(114) = {-0.072570, -0.737073, 0, 1.0};
Point(115) = {-0.080028, -0.737652, 0, 1.0};
Point(116) = {-0.087055, -0.738020, 0, 1.0};
Point(117) = {-0.093504, -0.738149, 0, 1.0};
Point(118) = {-0.099209, -0.738025, 0, 1.0};
Point(119) = {-0.103995, -0.737698, 0, 1.0};
Point(120) = {-0.107738, -0.737280, 0, 1.0};
Point(121) = {-0.110395, -0.736888, 0, 1.0};
Point(122) = {-0.111975, -0.736612, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149997, 0.732015, 0, 1.0};
Point(2) = {0.149340, 0.732219, 0, 1.0};
Point(3) = {0.147496, 0.732839, 0, 1.0};
Point(4) = {0.144681, 0.733787, 0, 1.0};
Point(5) = {0.140955, 0.734876, 0, 1.0};
Point(6) = {0.136268, 0.736022, 0, 1.0};
Point(7) = {0.130629, 0.737254, 0, 1.0};
Point(8) = {0.124124, 0.738576, 0, 1.0};
Point(9) = {0.116846, 0.739969, 0, 1.0};
Point(10) = {0.108892, 0.741411, 0, 1.0};
Point(11) = {0.100371, 0.742871, 0, 1.0};
Point(12) = {0.091395, 0.744313, 0, 1.0};
Point(13) = {0.082077, 0.745698, 0, 1.0};
Point(14) = {0.072530, 0.746981, 0, 1.0};
Point(15) = {0.062869, 0.748115, 0, 1.0};
Point(16) = {0.053200, 0.749047, 0, 1.0};
Point(17) = {0.043630, 0.749703, 0, 1.0};
Point(18) = {0.034202, 0.750000, 0, 1.0};
Point(19) = {0.024908, 0.749928, 0, 1.0};
Point(20) = {0.015794, 0.749553, 0, 1.0};
Point(21) = {0.006960, 0.748917, 0, 1.0};
Point(22) = {-0.001507, 0.748048, 0, 1.0};
Point(23) = {-0.009513, 0.746969, 0, 1.0};
Point(24) = {-0.016981, 0.745703, 0, 1.0};
Point(25) = {-0.023827, 0.744277, 0, 1.0};
Point(26) = {-0.029982, 0.742716, 0, 1.0};
Point(27) = {-0.035385, 0.741046, 0, 1.0};
Point(28) = {-0.039981, 0.739296, 0, 1.0};
Point(29) = {-0.043731, 0.737491, 0, 1.0};
Point(30) = {-0.046603, 0.735663, 0, 1.0};
Point(31) = {-0.048587, 0.733844, 0, 1.0};
Point(32) = {-0.049707, 0.732097, 0, 1.0};
Point(33) = {-0.050000, 0.730894, 0, 1.0};
Point(34) = {-0.049968, 0.730552, 0, 1.0};
Point(35) = {-0.049185, 0.729366, 0, 1.0};
Point(36) = {-0.047234, 0.728445, 0, 1.0};
Point(37) = {-0.044176, 0.727658, 0, 1.0};
Point(38) = {-0.040064, 0.727027, 0, 1.0};
Point(39) = {-0.034941, 0.726550, 0, 1.0};
Point(40) = {-0.028859, 0.726226, 0, 1.0};
Point(41) = {-0.021880, 0.726045, 0, 1.0};
Point(42) = {-0.014080, 0.726001, 0, 1.0};
Point(43) = {-0.005542, 0.726075, 0, 1.0};
Point(44) = {0.003633, 0.726256, 0, 1.0};
Point(45) = {0.013333, 0.726531, 0, 1.0};
Point(46) = {0.023436, 0.726891, 0, 1.0};
Point(47) = {0.033815, 0.727341, 0, 1.0};
Point(48) = {0.044340, 0.727890, 0, 1.0};
Point(49) = {0.054877, 0.728586, 0, 1.0};
Point(50) = {0.065382, 0.729518, 0, 1.0};
Point(51) = {0.075919, 0.730642, 0, 1.0};
Point(52) = {0.086435, 0.731771, 0, 1.0};
Point(53) = {0.096760, 0.732764, 0, 1.0};
Point(54) = {0.106704, 0.733536, 0, 1.0};
Point(55) = {0.116073, 0.734027, 0, 1.0};
Point(56) = {0.124672, 0.734199, 0, 1.0};
Point(57) = {0.132279, 0.734034, 0, 1.0};
Point(58) = {0.138660, 0.733597, 0, 1.0};
Point(59) = {0.143651, 0.733039, 0, 1.0};
Point(60) = {0.147194, 0.732517, 0, 1.0};
Point(61) = {0.149300, 0.732149, 0, 1.0};
Point(62) = {-0.149997, -0.732015, 0, 1.0};
Point(63) = {-0.149340, -0.732219, 0, 1.0};
Point(64) = {-0.147496, -0.732839, 0, 1.0};
Point(65) = {-0.144681, -0.733787, 0, 1.0};
Point(66) = {-0.140955, -0.734876, 0, 1.0};
Point(67) = {-0.136268, -0.736022, 0, 1.0};
Point(68) = {-0.130629, -0.737254, 0, 1.0};
Point(69) = {-0.124124, -0.738576, 0, 1.0};
Point(70) = {-0.116846, -0.739969, 0, 1.0};
Point(71) = {-0.108892, -0.741411, 0, 1.0};
Point(72) = {-0.100371, -0.742871, 0, 1.0};
Point(73) = {-0.091395, -0.744313, 0, 1.0};
Point(74) = {-0.082077, -0.745698, 0, 1.0};
Point(75) = {-0.072530, -0.746981, 0, 1.0};
Point(76) = {-0.062869, -0.748115, 0, 1.0};
Point(77) = {-0.053200, -0.749047, 0, 1.0};
Point(78) = {-0.043630, -0.749703, 0, 1.0};
Point(79) = {-0.034202, -0.750000, 0, 1.0};
Point(80) = {-0.024908, -0.749928, 0, 1.0};
Point(81) = {-0.015794, -0.749553, 0, 1.0};
Point(82) = {-0.006960, -0.748917, 0, 1.0};
Point(83) = {0.001507, -0.748048, 0, 1.0};
Point(84) = {0.009513, -0.746969, 0, 1.0};
Point(85) = {0.016981, -0.745703, 0, 1.0};
Point(86) = {0.023827, -0.744277, 0, 1.0};
Point(87) = {0.029982, -0.742716, 0, 1.0};
Point(88) = {0.035385, -0.741046, 0, 1.0};
Point(89) = {0.039981, -0.739296, 0, 1.0};
Point(90) = {0.043731, -0.737491, 0, 1.0};
Point(91) = {0.046603, -0.735663, 0, 1.0};
Point(92) = {0.048587, -0.733844, 0, 1.0};
Point(93) = {0.049707, -0.732097, 0, 1.0};
Point(94) = {0.050000, -0.730894, 0, 1.0};
Point(95) = {0.049968, -0.730552, 0, 1.0};
Point(96) = {0.049185, -0.729366, 0, 1.0};
Point(97) = {0.047234, -0.728445, 0, 1.0};
Point(98) = {0.044176, -0.727658, 0, 1.0};
Point(99) = {0.040064, -0.727027, 0, 1.0};
Point(100) = {0.034941, -0.726550, 0, 1.0};
Point(101) = {0.028859, -0.726226, 0, 1.0};
Point(102) = {0.021880, -0.726045, 0, 1.0};
Point(103) = {0.014080, -0.726001, 0, 1.0};
Point(104) = {0.005542, -0.726075, 0, 1.0};
Point(105) = {-0.003633, -0.726256, 0, 1.0};
Point(106) = {-0.013333, -0.726531, 0, 1.0};
Point(107) = {-0.023436, -0.726891, 0, 1.0};
Point(108) = {-0.033815, -0.727341, 0, 1.0};
Point(109) = {-0.044340, -0.727890, 0, 1.0};
Point(110) = {-0.054877, -0.728586, 0, 1.0};
Point(111) = {-0.065382, -0.729518, 0, 1.0};
Point(112) = {-0.075919, -0.730642, 0, 1.0};
Point(113) = {-0.086435, -0.731771, 0, 1.0};
Point(114) = {-0.096760, -0.732764, 0, 1.0};
Point(115) = {-0.106704, -0.733536, 0, 1.0};
Point(116) = {-0.116073, -0.734027, 0, 1.0};
Point(117) = {-0.124672, -0.734199, 0, 1.0};
Point(118) = {-0.132279, -0.734034, 0, 1.0};
Point(119) = {-0.138660, -0.733597, 0, 1.0};
Point(120) = {-0.143651, -0.733039, 0, 1.0};
Point(121) = {-0.147194, -0.732517, 0, 1.0};
Point(122) = {-0.149300, -0.732149, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
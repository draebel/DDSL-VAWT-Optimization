SetFactory("OpenCASCADE");

Point(1) = {0.074998, 0.741007, 0, 1.0};
Point(2) = {0.074670, 0.741110, 0, 1.0};
Point(3) = {0.073748, 0.741419, 0, 1.0};
Point(4) = {0.072340, 0.741894, 0, 1.0};
Point(5) = {0.070477, 0.742438, 0, 1.0};
Point(6) = {0.068134, 0.743011, 0, 1.0};
Point(7) = {0.065315, 0.743627, 0, 1.0};
Point(8) = {0.062062, 0.744288, 0, 1.0};
Point(9) = {0.058423, 0.744985, 0, 1.0};
Point(10) = {0.054446, 0.745705, 0, 1.0};
Point(11) = {0.050186, 0.746435, 0, 1.0};
Point(12) = {0.045697, 0.747156, 0, 1.0};
Point(13) = {0.041039, 0.747849, 0, 1.0};
Point(14) = {0.036265, 0.748490, 0, 1.0};
Point(15) = {0.031435, 0.749057, 0, 1.0};
Point(16) = {0.026600, 0.749523, 0, 1.0};
Point(17) = {0.021815, 0.749851, 0, 1.0};
Point(18) = {0.017101, 0.750000, 0, 1.0};
Point(19) = {0.012454, 0.749964, 0, 1.0};
Point(20) = {0.007897, 0.749776, 0, 1.0};
Point(21) = {0.003480, 0.749459, 0, 1.0};
Point(22) = {-0.000754, 0.749024, 0, 1.0};
Point(23) = {-0.004757, 0.748484, 0, 1.0};
Point(24) = {-0.008490, 0.747851, 0, 1.0};
Point(25) = {-0.011913, 0.747138, 0, 1.0};
Point(26) = {-0.014991, 0.746358, 0, 1.0};
Point(27) = {-0.017692, 0.745523, 0, 1.0};
Point(28) = {-0.019990, 0.744648, 0, 1.0};
Point(29) = {-0.021865, 0.743745, 0, 1.0};
Point(30) = {-0.023301, 0.742831, 0, 1.0};
Point(31) = {-0.024293, 0.741922, 0, 1.0};
Point(32) = {-0.024853, 0.741049, 0, 1.0};
Point(33) = {-0.025000, 0.740447, 0, 1.0};
Point(34) = {-0.024984, 0.740276, 0, 1.0};
Point(35) = {-0.024593, 0.739683, 0, 1.0};
Point(36) = {-0.023617, 0.739223, 0, 1.0};
Point(37) = {-0.022088, 0.738829, 0, 1.0};
Point(38) = {-0.020032, 0.738514, 0, 1.0};
Point(39) = {-0.017471, 0.738275, 0, 1.0};
Point(40) = {-0.014430, 0.738113, 0, 1.0};
Point(41) = {-0.010940, 0.738023, 0, 1.0};
Point(42) = {-0.007040, 0.738000, 0, 1.0};
Point(43) = {-0.002771, 0.738037, 0, 1.0};
Point(44) = {0.001816, 0.738128, 0, 1.0};
Point(45) = {0.006667, 0.738265, 0, 1.0};
Point(46) = {0.011718, 0.738446, 0, 1.0};
Point(47) = {0.016908, 0.738671, 0, 1.0};
Point(48) = {0.022170, 0.738945, 0, 1.0};
Point(49) = {0.027438, 0.739293, 0, 1.0};
Point(50) = {0.032691, 0.739759, 0, 1.0};
Point(51) = {0.037960, 0.740321, 0, 1.0};
Point(52) = {0.043218, 0.740885, 0, 1.0};
Point(53) = {0.048380, 0.741382, 0, 1.0};
Point(54) = {0.053352, 0.741768, 0, 1.0};
Point(55) = {0.058037, 0.742013, 0, 1.0};
Point(56) = {0.062336, 0.742100, 0, 1.0};
Point(57) = {0.066140, 0.742017, 0, 1.0};
Point(58) = {0.069330, 0.741799, 0, 1.0};
Point(59) = {0.071826, 0.741520, 0, 1.0};
Point(60) = {0.073597, 0.741259, 0, 1.0};
Point(61) = {0.074650, 0.741075, 0, 1.0};
Point(62) = {-0.074998, -0.741007, 0, 1.0};
Point(63) = {-0.074670, -0.741110, 0, 1.0};
Point(64) = {-0.073748, -0.741419, 0, 1.0};
Point(65) = {-0.072340, -0.741894, 0, 1.0};
Point(66) = {-0.070477, -0.742438, 0, 1.0};
Point(67) = {-0.068134, -0.743011, 0, 1.0};
Point(68) = {-0.065315, -0.743627, 0, 1.0};
Point(69) = {-0.062062, -0.744288, 0, 1.0};
Point(70) = {-0.058423, -0.744985, 0, 1.0};
Point(71) = {-0.054446, -0.745705, 0, 1.0};
Point(72) = {-0.050186, -0.746435, 0, 1.0};
Point(73) = {-0.045697, -0.747156, 0, 1.0};
Point(74) = {-0.041039, -0.747849, 0, 1.0};
Point(75) = {-0.036265, -0.748490, 0, 1.0};
Point(76) = {-0.031435, -0.749057, 0, 1.0};
Point(77) = {-0.026600, -0.749523, 0, 1.0};
Point(78) = {-0.021815, -0.749851, 0, 1.0};
Point(79) = {-0.017101, -0.750000, 0, 1.0};
Point(80) = {-0.012454, -0.749964, 0, 1.0};
Point(81) = {-0.007897, -0.749776, 0, 1.0};
Point(82) = {-0.003480, -0.749459, 0, 1.0};
Point(83) = {0.000754, -0.749024, 0, 1.0};
Point(84) = {0.004757, -0.748484, 0, 1.0};
Point(85) = {0.008490, -0.747851, 0, 1.0};
Point(86) = {0.011913, -0.747138, 0, 1.0};
Point(87) = {0.014991, -0.746358, 0, 1.0};
Point(88) = {0.017692, -0.745523, 0, 1.0};
Point(89) = {0.019990, -0.744648, 0, 1.0};
Point(90) = {0.021865, -0.743745, 0, 1.0};
Point(91) = {0.023301, -0.742831, 0, 1.0};
Point(92) = {0.024293, -0.741922, 0, 1.0};
Point(93) = {0.024853, -0.741049, 0, 1.0};
Point(94) = {0.025000, -0.740447, 0, 1.0};
Point(95) = {0.024984, -0.740276, 0, 1.0};
Point(96) = {0.024593, -0.739683, 0, 1.0};
Point(97) = {0.023617, -0.739223, 0, 1.0};
Point(98) = {0.022088, -0.738829, 0, 1.0};
Point(99) = {0.020032, -0.738514, 0, 1.0};
Point(100) = {0.017471, -0.738275, 0, 1.0};
Point(101) = {0.014430, -0.738113, 0, 1.0};
Point(102) = {0.010940, -0.738023, 0, 1.0};
Point(103) = {0.007040, -0.738000, 0, 1.0};
Point(104) = {0.002771, -0.738037, 0, 1.0};
Point(105) = {-0.001816, -0.738128, 0, 1.0};
Point(106) = {-0.006667, -0.738265, 0, 1.0};
Point(107) = {-0.011718, -0.738446, 0, 1.0};
Point(108) = {-0.016908, -0.738671, 0, 1.0};
Point(109) = {-0.022170, -0.738945, 0, 1.0};
Point(110) = {-0.027438, -0.739293, 0, 1.0};
Point(111) = {-0.032691, -0.739759, 0, 1.0};
Point(112) = {-0.037960, -0.740321, 0, 1.0};
Point(113) = {-0.043218, -0.740885, 0, 1.0};
Point(114) = {-0.048380, -0.741382, 0, 1.0};
Point(115) = {-0.053352, -0.741768, 0, 1.0};
Point(116) = {-0.058037, -0.742013, 0, 1.0};
Point(117) = {-0.062336, -0.742100, 0, 1.0};
Point(118) = {-0.066140, -0.742017, 0, 1.0};
Point(119) = {-0.069330, -0.741799, 0, 1.0};
Point(120) = {-0.071826, -0.741520, 0, 1.0};
Point(121) = {-0.073597, -0.741259, 0, 1.0};
Point(122) = {-0.074650, -0.741075, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
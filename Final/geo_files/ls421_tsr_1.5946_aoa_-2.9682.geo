SetFactory("OpenCASCADE");

Point(1) = {0.112298, 0.735764, 0, 1.0};
Point(2) = {0.108497, 0.736647, 0, 1.0};
Point(3) = {0.104694, 0.737563, 0, 1.0};
Point(4) = {0.100890, 0.738501, 0, 1.0};
Point(5) = {0.097086, 0.739457, 0, 1.0};
Point(6) = {0.093281, 0.740424, 0, 1.0};
Point(7) = {0.089476, 0.741391, 0, 1.0};
Point(8) = {0.085671, 0.742347, 0, 1.0};
Point(9) = {0.081867, 0.743287, 0, 1.0};
Point(10) = {0.078065, 0.744200, 0, 1.0};
Point(11) = {0.074264, 0.745078, 0, 1.0};
Point(12) = {0.070466, 0.745911, 0, 1.0};
Point(13) = {0.066671, 0.746689, 0, 1.0};
Point(14) = {0.062879, 0.747402, 0, 1.0};
Point(15) = {0.059091, 0.748039, 0, 1.0};
Point(16) = {0.055307, 0.748594, 0, 1.0};
Point(17) = {0.051528, 0.749059, 0, 1.0};
Point(18) = {0.047753, 0.749429, 0, 1.0};
Point(19) = {0.043984, 0.749707, 0, 1.0};
Point(20) = {0.036459, 0.750000, 0, 1.0};
Point(21) = {0.028949, 0.749991, 0, 1.0};
Point(22) = {0.021453, 0.749713, 0, 1.0};
Point(23) = {0.013971, 0.749182, 0, 1.0};
Point(24) = {0.006502, 0.748390, 0, 1.0};
Point(25) = {-0.000953, 0.747317, 0, 1.0};
Point(26) = {-0.008390, 0.745919, 0, 1.0};
Point(27) = {-0.012101, 0.745071, 0, 1.0};
Point(28) = {-0.015806, 0.744107, 0, 1.0};
Point(29) = {-0.019504, 0.743007, 0, 1.0};
Point(30) = {-0.023193, 0.741728, 0, 1.0};
Point(31) = {-0.026869, 0.740196, 0, 1.0};
Point(32) = {-0.030523, 0.738257, 0, 1.0};
Point(33) = {-0.032337, 0.737032, 0, 1.0};
Point(34) = {-0.034137, 0.735525, 0, 1.0};
Point(35) = {-0.035907, 0.733461, 0, 1.0};
Point(36) = {-0.036936, 0.731572, 0, 1.0};
Point(37) = {-0.037322, 0.730325, 0, 1.0};
Point(38) = {-0.037500, 0.727973, 0, 1.0};
Point(39) = {-0.037117, 0.726384, 0, 1.0};
Point(40) = {-0.036613, 0.725353, 0, 1.0};
Point(41) = {-0.035421, 0.724096, 0, 1.0};
Point(42) = {-0.033481, 0.722891, 0, 1.0};
Point(43) = {-0.031561, 0.722067, 0, 1.0};
Point(44) = {-0.029649, 0.721395, 0, 1.0};
Point(45) = {-0.025841, 0.720372, 0, 1.0};
Point(46) = {-0.022047, 0.719616, 0, 1.0};
Point(47) = {-0.018262, 0.719039, 0, 1.0};
Point(48) = {-0.014484, 0.718595, 0, 1.0};
Point(49) = {-0.010711, 0.718257, 0, 1.0};
Point(50) = {-0.006943, 0.718007, 0, 1.0};
Point(51) = {0.000581, 0.717736, 0, 1.0};
Point(52) = {0.008091, 0.717748, 0, 1.0};
Point(53) = {0.015589, 0.717982, 0, 1.0};
Point(54) = {0.023076, 0.718414, 0, 1.0};
Point(55) = {0.030553, 0.719053, 0, 1.0};
Point(56) = {0.038018, 0.719917, 0, 1.0};
Point(57) = {0.045468, 0.721082, 0, 1.0};
Point(58) = {0.049186, 0.721797, 0, 1.0};
Point(59) = {0.052900, 0.722595, 0, 1.0};
Point(60) = {0.056609, 0.723469, 0, 1.0};
Point(61) = {0.060316, 0.724405, 0, 1.0};
Point(62) = {0.064020, 0.725387, 0, 1.0};
Point(63) = {0.067722, 0.726402, 0, 1.0};
Point(64) = {0.071424, 0.727437, 0, 1.0};
Point(65) = {0.075125, 0.728476, 0, 1.0};
Point(66) = {0.078827, 0.729507, 0, 1.0};
Point(67) = {0.082530, 0.730507, 0, 1.0};
Point(68) = {0.086236, 0.731455, 0, 1.0};
Point(69) = {0.089945, 0.732328, 0, 1.0};
Point(70) = {0.093660, 0.733103, 0, 1.0};
Point(71) = {0.097381, 0.733757, 0, 1.0};
Point(72) = {0.101110, 0.734262, 0, 1.0};
Point(73) = {0.104849, 0.734580, 0, 1.0};
Point(74) = {0.108600, 0.734663, 0, 1.0};
Point(75) = {0.112368, 0.734413, 0, 1.0};
Point(76) = {-0.112298, -0.735764, 0, 1.0};
Point(77) = {-0.108497, -0.736647, 0, 1.0};
Point(78) = {-0.104694, -0.737563, 0, 1.0};
Point(79) = {-0.100890, -0.738501, 0, 1.0};
Point(80) = {-0.097086, -0.739457, 0, 1.0};
Point(81) = {-0.093281, -0.740424, 0, 1.0};
Point(82) = {-0.089476, -0.741391, 0, 1.0};
Point(83) = {-0.085671, -0.742347, 0, 1.0};
Point(84) = {-0.081867, -0.743287, 0, 1.0};
Point(85) = {-0.078065, -0.744200, 0, 1.0};
Point(86) = {-0.074264, -0.745078, 0, 1.0};
Point(87) = {-0.070466, -0.745911, 0, 1.0};
Point(88) = {-0.066671, -0.746689, 0, 1.0};
Point(89) = {-0.062879, -0.747402, 0, 1.0};
Point(90) = {-0.059091, -0.748039, 0, 1.0};
Point(91) = {-0.055307, -0.748594, 0, 1.0};
Point(92) = {-0.051528, -0.749059, 0, 1.0};
Point(93) = {-0.047753, -0.749429, 0, 1.0};
Point(94) = {-0.043984, -0.749707, 0, 1.0};
Point(95) = {-0.036459, -0.750000, 0, 1.0};
Point(96) = {-0.028949, -0.749991, 0, 1.0};
Point(97) = {-0.021453, -0.749713, 0, 1.0};
Point(98) = {-0.013971, -0.749182, 0, 1.0};
Point(99) = {-0.006502, -0.748390, 0, 1.0};
Point(100) = {0.000953, -0.747317, 0, 1.0};
Point(101) = {0.008390, -0.745919, 0, 1.0};
Point(102) = {0.012101, -0.745071, 0, 1.0};
Point(103) = {0.015806, -0.744107, 0, 1.0};
Point(104) = {0.019504, -0.743007, 0, 1.0};
Point(105) = {0.023193, -0.741728, 0, 1.0};
Point(106) = {0.026869, -0.740196, 0, 1.0};
Point(107) = {0.030523, -0.738257, 0, 1.0};
Point(108) = {0.032337, -0.737032, 0, 1.0};
Point(109) = {0.034137, -0.735525, 0, 1.0};
Point(110) = {0.035907, -0.733461, 0, 1.0};
Point(111) = {0.036936, -0.731572, 0, 1.0};
Point(112) = {0.037322, -0.730325, 0, 1.0};
Point(113) = {0.037500, -0.727973, 0, 1.0};
Point(114) = {0.037117, -0.726384, 0, 1.0};
Point(115) = {0.036613, -0.725353, 0, 1.0};
Point(116) = {0.035421, -0.724096, 0, 1.0};
Point(117) = {0.033481, -0.722891, 0, 1.0};
Point(118) = {0.031561, -0.722067, 0, 1.0};
Point(119) = {0.029649, -0.721395, 0, 1.0};
Point(120) = {0.025841, -0.720372, 0, 1.0};
Point(121) = {0.022047, -0.719616, 0, 1.0};
Point(122) = {0.018262, -0.719039, 0, 1.0};
Point(123) = {0.014484, -0.718595, 0, 1.0};
Point(124) = {0.010711, -0.718257, 0, 1.0};
Point(125) = {0.006943, -0.718007, 0, 1.0};
Point(126) = {-0.000581, -0.717736, 0, 1.0};
Point(127) = {-0.008091, -0.717748, 0, 1.0};
Point(128) = {-0.015589, -0.717982, 0, 1.0};
Point(129) = {-0.023076, -0.718414, 0, 1.0};
Point(130) = {-0.030553, -0.719053, 0, 1.0};
Point(131) = {-0.038018, -0.719917, 0, 1.0};
Point(132) = {-0.045468, -0.721082, 0, 1.0};
Point(133) = {-0.049186, -0.721797, 0, 1.0};
Point(134) = {-0.052900, -0.722595, 0, 1.0};
Point(135) = {-0.056609, -0.723469, 0, 1.0};
Point(136) = {-0.060316, -0.724405, 0, 1.0};
Point(137) = {-0.064020, -0.725387, 0, 1.0};
Point(138) = {-0.067722, -0.726402, 0, 1.0};
Point(139) = {-0.071424, -0.727437, 0, 1.0};
Point(140) = {-0.075125, -0.728476, 0, 1.0};
Point(141) = {-0.078827, -0.729507, 0, 1.0};
Point(142) = {-0.082530, -0.730507, 0, 1.0};
Point(143) = {-0.086236, -0.731455, 0, 1.0};
Point(144) = {-0.089945, -0.732328, 0, 1.0};
Point(145) = {-0.093660, -0.733103, 0, 1.0};
Point(146) = {-0.097381, -0.733757, 0, 1.0};
Point(147) = {-0.101110, -0.734262, 0, 1.0};
Point(148) = {-0.104849, -0.734580, 0, 1.0};
Point(149) = {-0.108600, -0.734663, 0, 1.0};
Point(150) = {-0.112368, -0.734413, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:100};
Spline(6) = {100:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
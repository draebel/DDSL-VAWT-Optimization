SetFactory("OpenCASCADE");

Point(1) = {0.074898, 0.735764, 0, 1.0};
Point(2) = {0.071097, 0.736647, 0, 1.0};
Point(3) = {0.067295, 0.737563, 0, 1.0};
Point(4) = {0.063491, 0.738501, 0, 1.0};
Point(5) = {0.059686, 0.739457, 0, 1.0};
Point(6) = {0.055881, 0.740424, 0, 1.0};
Point(7) = {0.052076, 0.741391, 0, 1.0};
Point(8) = {0.048272, 0.742347, 0, 1.0};
Point(9) = {0.044468, 0.743287, 0, 1.0};
Point(10) = {0.040665, 0.744200, 0, 1.0};
Point(11) = {0.036865, 0.745078, 0, 1.0};
Point(12) = {0.033067, 0.745911, 0, 1.0};
Point(13) = {0.029271, 0.746689, 0, 1.0};
Point(14) = {0.025479, 0.747402, 0, 1.0};
Point(15) = {0.021691, 0.748039, 0, 1.0};
Point(16) = {0.017907, 0.748594, 0, 1.0};
Point(17) = {0.014128, 0.749059, 0, 1.0};
Point(18) = {0.010354, 0.749429, 0, 1.0};
Point(19) = {0.006585, 0.749707, 0, 1.0};
Point(20) = {-0.000941, 0.750000, 0, 1.0};
Point(21) = {-0.008450, 0.749991, 0, 1.0};
Point(22) = {-0.015946, 0.749713, 0, 1.0};
Point(23) = {-0.023429, 0.749182, 0, 1.0};
Point(24) = {-0.030898, 0.748390, 0, 1.0};
Point(25) = {-0.038352, 0.747317, 0, 1.0};
Point(26) = {-0.045790, 0.745919, 0, 1.0};
Point(27) = {-0.049501, 0.745071, 0, 1.0};
Point(28) = {-0.053206, 0.744107, 0, 1.0};
Point(29) = {-0.056904, 0.743007, 0, 1.0};
Point(30) = {-0.060592, 0.741728, 0, 1.0};
Point(31) = {-0.064268, 0.740196, 0, 1.0};
Point(32) = {-0.067923, 0.738257, 0, 1.0};
Point(33) = {-0.069737, 0.737032, 0, 1.0};
Point(34) = {-0.071536, 0.735525, 0, 1.0};
Point(35) = {-0.073306, 0.733461, 0, 1.0};
Point(36) = {-0.074335, 0.731572, 0, 1.0};
Point(37) = {-0.074721, 0.730325, 0, 1.0};
Point(38) = {-0.074899, 0.727973, 0, 1.0};
Point(39) = {-0.074517, 0.726384, 0, 1.0};
Point(40) = {-0.074013, 0.725353, 0, 1.0};
Point(41) = {-0.072821, 0.724096, 0, 1.0};
Point(42) = {-0.070881, 0.722891, 0, 1.0};
Point(43) = {-0.068961, 0.722067, 0, 1.0};
Point(44) = {-0.067048, 0.721395, 0, 1.0};
Point(45) = {-0.063240, 0.720372, 0, 1.0};
Point(46) = {-0.059446, 0.719616, 0, 1.0};
Point(47) = {-0.055661, 0.719039, 0, 1.0};
Point(48) = {-0.051883, 0.718595, 0, 1.0};
Point(49) = {-0.048110, 0.718257, 0, 1.0};
Point(50) = {-0.044342, 0.718007, 0, 1.0};
Point(51) = {-0.036818, 0.717736, 0, 1.0};
Point(52) = {-0.029309, 0.717748, 0, 1.0};
Point(53) = {-0.021811, 0.717982, 0, 1.0};
Point(54) = {-0.014323, 0.718414, 0, 1.0};
Point(55) = {-0.006846, 0.719053, 0, 1.0};
Point(56) = {0.000619, 0.719917, 0, 1.0};
Point(57) = {0.008069, 0.721082, 0, 1.0};
Point(58) = {0.011787, 0.721797, 0, 1.0};
Point(59) = {0.015500, 0.722595, 0, 1.0};
Point(60) = {0.019210, 0.723469, 0, 1.0};
Point(61) = {0.022917, 0.724405, 0, 1.0};
Point(62) = {0.026621, 0.725387, 0, 1.0};
Point(63) = {0.030323, 0.726402, 0, 1.0};
Point(64) = {0.034024, 0.727437, 0, 1.0};
Point(65) = {0.037726, 0.728476, 0, 1.0};
Point(66) = {0.041427, 0.729507, 0, 1.0};
Point(67) = {0.045130, 0.730507, 0, 1.0};
Point(68) = {0.048836, 0.731455, 0, 1.0};
Point(69) = {0.052546, 0.732328, 0, 1.0};
Point(70) = {0.056261, 0.733103, 0, 1.0};
Point(71) = {0.059982, 0.733757, 0, 1.0};
Point(72) = {0.063711, 0.734262, 0, 1.0};
Point(73) = {0.067449, 0.734580, 0, 1.0};
Point(74) = {0.071200, 0.734663, 0, 1.0};
Point(75) = {0.074968, 0.734413, 0, 1.0};
Point(76) = {-0.074898, -0.735764, 0, 1.0};
Point(77) = {-0.071097, -0.736647, 0, 1.0};
Point(78) = {-0.067295, -0.737563, 0, 1.0};
Point(79) = {-0.063491, -0.738501, 0, 1.0};
Point(80) = {-0.059686, -0.739457, 0, 1.0};
Point(81) = {-0.055881, -0.740424, 0, 1.0};
Point(82) = {-0.052076, -0.741391, 0, 1.0};
Point(83) = {-0.048272, -0.742347, 0, 1.0};
Point(84) = {-0.044468, -0.743287, 0, 1.0};
Point(85) = {-0.040665, -0.744200, 0, 1.0};
Point(86) = {-0.036865, -0.745078, 0, 1.0};
Point(87) = {-0.033067, -0.745911, 0, 1.0};
Point(88) = {-0.029271, -0.746689, 0, 1.0};
Point(89) = {-0.025479, -0.747402, 0, 1.0};
Point(90) = {-0.021691, -0.748039, 0, 1.0};
Point(91) = {-0.017907, -0.748594, 0, 1.0};
Point(92) = {-0.014128, -0.749059, 0, 1.0};
Point(93) = {-0.010354, -0.749429, 0, 1.0};
Point(94) = {-0.006585, -0.749707, 0, 1.0};
Point(95) = {0.000941, -0.750000, 0, 1.0};
Point(96) = {0.008450, -0.749991, 0, 1.0};
Point(97) = {0.015946, -0.749713, 0, 1.0};
Point(98) = {0.023429, -0.749182, 0, 1.0};
Point(99) = {0.030898, -0.748390, 0, 1.0};
Point(100) = {0.038352, -0.747317, 0, 1.0};
Point(101) = {0.045790, -0.745919, 0, 1.0};
Point(102) = {0.049501, -0.745071, 0, 1.0};
Point(103) = {0.053206, -0.744107, 0, 1.0};
Point(104) = {0.056904, -0.743007, 0, 1.0};
Point(105) = {0.060592, -0.741728, 0, 1.0};
Point(106) = {0.064268, -0.740196, 0, 1.0};
Point(107) = {0.067923, -0.738257, 0, 1.0};
Point(108) = {0.069737, -0.737032, 0, 1.0};
Point(109) = {0.071536, -0.735525, 0, 1.0};
Point(110) = {0.073306, -0.733461, 0, 1.0};
Point(111) = {0.074335, -0.731572, 0, 1.0};
Point(112) = {0.074721, -0.730325, 0, 1.0};
Point(113) = {0.074899, -0.727973, 0, 1.0};
Point(114) = {0.074517, -0.726384, 0, 1.0};
Point(115) = {0.074013, -0.725353, 0, 1.0};
Point(116) = {0.072821, -0.724096, 0, 1.0};
Point(117) = {0.070881, -0.722891, 0, 1.0};
Point(118) = {0.068961, -0.722067, 0, 1.0};
Point(119) = {0.067048, -0.721395, 0, 1.0};
Point(120) = {0.063240, -0.720372, 0, 1.0};
Point(121) = {0.059446, -0.719616, 0, 1.0};
Point(122) = {0.055661, -0.719039, 0, 1.0};
Point(123) = {0.051883, -0.718595, 0, 1.0};
Point(124) = {0.048110, -0.718257, 0, 1.0};
Point(125) = {0.044342, -0.718007, 0, 1.0};
Point(126) = {0.036818, -0.717736, 0, 1.0};
Point(127) = {0.029309, -0.717748, 0, 1.0};
Point(128) = {0.021811, -0.717982, 0, 1.0};
Point(129) = {0.014323, -0.718414, 0, 1.0};
Point(130) = {0.006846, -0.719053, 0, 1.0};
Point(131) = {-0.000619, -0.719917, 0, 1.0};
Point(132) = {-0.008069, -0.721082, 0, 1.0};
Point(133) = {-0.011787, -0.721797, 0, 1.0};
Point(134) = {-0.015500, -0.722595, 0, 1.0};
Point(135) = {-0.019210, -0.723469, 0, 1.0};
Point(136) = {-0.022917, -0.724405, 0, 1.0};
Point(137) = {-0.026621, -0.725387, 0, 1.0};
Point(138) = {-0.030323, -0.726402, 0, 1.0};
Point(139) = {-0.034024, -0.727437, 0, 1.0};
Point(140) = {-0.037726, -0.728476, 0, 1.0};
Point(141) = {-0.041427, -0.729507, 0, 1.0};
Point(142) = {-0.045130, -0.730507, 0, 1.0};
Point(143) = {-0.048836, -0.731455, 0, 1.0};
Point(144) = {-0.052546, -0.732328, 0, 1.0};
Point(145) = {-0.056261, -0.733103, 0, 1.0};
Point(146) = {-0.059982, -0.733757, 0, 1.0};
Point(147) = {-0.063711, -0.734262, 0, 1.0};
Point(148) = {-0.067449, -0.734580, 0, 1.0};
Point(149) = {-0.071200, -0.734663, 0, 1.0};
Point(150) = {-0.074968, -0.734413, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:100};
Spline(6) = {100:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
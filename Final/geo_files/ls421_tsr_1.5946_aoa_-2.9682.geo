SetFactory("OpenCASCADE");

Point(1) = {0.149730, 0.731019, 0, 1.0};
Point(2) = {0.144662, 0.732196, 0, 1.0};
Point(3) = {0.139592, 0.733417, 0, 1.0};
Point(4) = {0.134521, 0.734668, 0, 1.0};
Point(5) = {0.129448, 0.735943, 0, 1.0};
Point(6) = {0.124374, 0.737232, 0, 1.0};
Point(7) = {0.119301, 0.738521, 0, 1.0};
Point(8) = {0.114228, 0.739796, 0, 1.0};
Point(9) = {0.109156, 0.741049, 0, 1.0};
Point(10) = {0.104086, 0.742266, 0, 1.0};
Point(11) = {0.099019, 0.743437, 0, 1.0};
Point(12) = {0.093955, 0.744549, 0, 1.0};
Point(13) = {0.088894, 0.745586, 0, 1.0};
Point(14) = {0.083838, 0.746535, 0, 1.0};
Point(15) = {0.078787, 0.747385, 0, 1.0};
Point(16) = {0.073742, 0.748125, 0, 1.0};
Point(17) = {0.068703, 0.748745, 0, 1.0};
Point(18) = {0.063671, 0.749239, 0, 1.0};
Point(19) = {0.058645, 0.749609, 0, 1.0};
Point(20) = {0.048611, 0.750000, 0, 1.0};
Point(21) = {0.038599, 0.749988, 0, 1.0};
Point(22) = {0.028604, 0.749617, 0, 1.0};
Point(23) = {0.018628, 0.748910, 0, 1.0};
Point(24) = {0.008669, 0.747853, 0, 1.0};
Point(25) = {-0.001270, 0.746422, 0, 1.0};
Point(26) = {-0.011187, 0.744558, 0, 1.0};
Point(27) = {-0.016135, 0.743429, 0, 1.0};
Point(28) = {-0.021075, 0.742143, 0, 1.0};
Point(29) = {-0.026006, 0.740676, 0, 1.0};
Point(30) = {-0.030924, 0.738971, 0, 1.0};
Point(31) = {-0.035825, 0.736928, 0, 1.0};
Point(32) = {-0.040698, 0.734342, 0, 1.0};
Point(33) = {-0.043116, 0.732709, 0, 1.0};
Point(34) = {-0.045515, 0.730700, 0, 1.0};
Point(35) = {-0.047876, 0.727948, 0, 1.0};
Point(36) = {-0.049248, 0.725430, 0, 1.0};
Point(37) = {-0.049762, 0.723767, 0, 1.0};
Point(38) = {-0.050000, 0.720630, 0, 1.0};
Point(39) = {-0.049490, 0.718512, 0, 1.0};
Point(40) = {-0.048818, 0.717137, 0, 1.0};
Point(41) = {-0.047229, 0.715461, 0, 1.0};
Point(42) = {-0.044642, 0.713855, 0, 1.0};
Point(43) = {-0.042082, 0.712756, 0, 1.0};
Point(44) = {-0.039532, 0.711861, 0, 1.0};
Point(45) = {-0.034454, 0.710496, 0, 1.0};
Point(46) = {-0.029395, 0.709488, 0, 1.0};
Point(47) = {-0.024349, 0.708719, 0, 1.0};
Point(48) = {-0.019311, 0.708127, 0, 1.0};
Point(49) = {-0.014281, 0.707677, 0, 1.0};
Point(50) = {-0.009257, 0.707342, 0, 1.0};
Point(51) = {0.000775, 0.706981, 0, 1.0};
Point(52) = {0.010787, 0.706998, 0, 1.0};
Point(53) = {0.020785, 0.707310, 0, 1.0};
Point(54) = {0.030768, 0.707886, 0, 1.0};
Point(55) = {0.040738, 0.708737, 0, 1.0};
Point(56) = {0.050691, 0.709890, 0, 1.0};
Point(57) = {0.060624, 0.711442, 0, 1.0};
Point(58) = {0.065581, 0.712396, 0, 1.0};
Point(59) = {0.070533, 0.713460, 0, 1.0};
Point(60) = {0.075479, 0.714626, 0, 1.0};
Point(61) = {0.080421, 0.715873, 0, 1.0};
Point(62) = {0.085360, 0.717183, 0, 1.0};
Point(63) = {0.090297, 0.718536, 0, 1.0};
Point(64) = {0.095232, 0.719916, 0, 1.0};
Point(65) = {0.100167, 0.721301, 0, 1.0};
Point(66) = {0.105102, 0.722677, 0, 1.0};
Point(67) = {0.110040, 0.724010, 0, 1.0};
Point(68) = {0.114981, 0.725274, 0, 1.0};
Point(69) = {0.119927, 0.726437, 0, 1.0};
Point(70) = {0.124880, 0.727471, 0, 1.0};
Point(71) = {0.129842, 0.728343, 0, 1.0};
Point(72) = {0.134814, 0.729016, 0, 1.0};
Point(73) = {0.139798, 0.729440, 0, 1.0};
Point(74) = {0.144799, 0.729551, 0, 1.0};
Point(75) = {0.149823, 0.729217, 0, 1.0};
Point(76) = {-0.149730, -0.731019, 0, 1.0};
Point(77) = {-0.144662, -0.732196, 0, 1.0};
Point(78) = {-0.139592, -0.733417, 0, 1.0};
Point(79) = {-0.134521, -0.734668, 0, 1.0};
Point(80) = {-0.129448, -0.735943, 0, 1.0};
Point(81) = {-0.124374, -0.737232, 0, 1.0};
Point(82) = {-0.119301, -0.738521, 0, 1.0};
Point(83) = {-0.114228, -0.739796, 0, 1.0};
Point(84) = {-0.109156, -0.741049, 0, 1.0};
Point(85) = {-0.104086, -0.742266, 0, 1.0};
Point(86) = {-0.099019, -0.743437, 0, 1.0};
Point(87) = {-0.093955, -0.744549, 0, 1.0};
Point(88) = {-0.088894, -0.745586, 0, 1.0};
Point(89) = {-0.083838, -0.746535, 0, 1.0};
Point(90) = {-0.078787, -0.747385, 0, 1.0};
Point(91) = {-0.073742, -0.748125, 0, 1.0};
Point(92) = {-0.068703, -0.748745, 0, 1.0};
Point(93) = {-0.063671, -0.749239, 0, 1.0};
Point(94) = {-0.058645, -0.749609, 0, 1.0};
Point(95) = {-0.048611, -0.750000, 0, 1.0};
Point(96) = {-0.038599, -0.749988, 0, 1.0};
Point(97) = {-0.028604, -0.749617, 0, 1.0};
Point(98) = {-0.018628, -0.748910, 0, 1.0};
Point(99) = {-0.008669, -0.747853, 0, 1.0};
Point(100) = {0.001270, -0.746422, 0, 1.0};
Point(101) = {0.011187, -0.744558, 0, 1.0};
Point(102) = {0.016135, -0.743429, 0, 1.0};
Point(103) = {0.021075, -0.742143, 0, 1.0};
Point(104) = {0.026006, -0.740676, 0, 1.0};
Point(105) = {0.030924, -0.738971, 0, 1.0};
Point(106) = {0.035825, -0.736928, 0, 1.0};
Point(107) = {0.040698, -0.734342, 0, 1.0};
Point(108) = {0.043116, -0.732709, 0, 1.0};
Point(109) = {0.045515, -0.730700, 0, 1.0};
Point(110) = {0.047876, -0.727948, 0, 1.0};
Point(111) = {0.049248, -0.725430, 0, 1.0};
Point(112) = {0.049762, -0.723767, 0, 1.0};
Point(113) = {0.050000, -0.720630, 0, 1.0};
Point(114) = {0.049490, -0.718512, 0, 1.0};
Point(115) = {0.048818, -0.717137, 0, 1.0};
Point(116) = {0.047229, -0.715461, 0, 1.0};
Point(117) = {0.044642, -0.713855, 0, 1.0};
Point(118) = {0.042082, -0.712756, 0, 1.0};
Point(119) = {0.039532, -0.711861, 0, 1.0};
Point(120) = {0.034454, -0.710496, 0, 1.0};
Point(121) = {0.029395, -0.709488, 0, 1.0};
Point(122) = {0.024349, -0.708719, 0, 1.0};
Point(123) = {0.019311, -0.708127, 0, 1.0};
Point(124) = {0.014281, -0.707677, 0, 1.0};
Point(125) = {0.009257, -0.707342, 0, 1.0};
Point(126) = {-0.000775, -0.706981, 0, 1.0};
Point(127) = {-0.010787, -0.706998, 0, 1.0};
Point(128) = {-0.020785, -0.707310, 0, 1.0};
Point(129) = {-0.030768, -0.707886, 0, 1.0};
Point(130) = {-0.040738, -0.708737, 0, 1.0};
Point(131) = {-0.050691, -0.709890, 0, 1.0};
Point(132) = {-0.060624, -0.711442, 0, 1.0};
Point(133) = {-0.065581, -0.712396, 0, 1.0};
Point(134) = {-0.070533, -0.713460, 0, 1.0};
Point(135) = {-0.075479, -0.714626, 0, 1.0};
Point(136) = {-0.080421, -0.715873, 0, 1.0};
Point(137) = {-0.085360, -0.717183, 0, 1.0};
Point(138) = {-0.090297, -0.718536, 0, 1.0};
Point(139) = {-0.095232, -0.719916, 0, 1.0};
Point(140) = {-0.100167, -0.721301, 0, 1.0};
Point(141) = {-0.105102, -0.722677, 0, 1.0};
Point(142) = {-0.110040, -0.724010, 0, 1.0};
Point(143) = {-0.114981, -0.725274, 0, 1.0};
Point(144) = {-0.119927, -0.726437, 0, 1.0};
Point(145) = {-0.124880, -0.727471, 0, 1.0};
Point(146) = {-0.129842, -0.728343, 0, 1.0};
Point(147) = {-0.134814, -0.729016, 0, 1.0};
Point(148) = {-0.139798, -0.729440, 0, 1.0};
Point(149) = {-0.144799, -0.729551, 0, 1.0};
Point(150) = {-0.149823, -0.729217, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:100};
Spline(6) = {100:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
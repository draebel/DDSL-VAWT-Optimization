SetFactory("OpenCASCADE");

Point(1) = {0.074880, 0.735931, 0, 1.0};
Point(2) = {0.072283, 0.736538, 0, 1.0};
Point(3) = {0.068450, 0.737462, 0, 1.0};
Point(4) = {0.064615, 0.738408, 0, 1.0};
Point(5) = {0.060780, 0.739372, 0, 1.0};
Point(6) = {0.056944, 0.740346, 0, 1.0};
Point(7) = {0.053108, 0.741321, 0, 1.0};
Point(8) = {0.049272, 0.742285, 0, 1.0};
Point(9) = {0.045437, 0.743232, 0, 1.0};
Point(10) = {0.041604, 0.744153, 0, 1.0};
Point(11) = {0.037773, 0.745038, 0, 1.0};
Point(12) = {0.033944, 0.745878, 0, 1.0};
Point(13) = {0.030117, 0.746663, 0, 1.0};
Point(14) = {0.026295, 0.747380, 0, 1.0};
Point(15) = {0.022476, 0.748023, 0, 1.0};
Point(16) = {0.018661, 0.748582, 0, 1.0};
Point(17) = {0.014851, 0.749051, 0, 1.0};
Point(18) = {0.011046, 0.749424, 0, 1.0};
Point(19) = {0.007246, 0.749704, 0, 1.0};
Point(20) = {-0.000340, 0.750000, 0, 1.0};
Point(21) = {-0.007911, 0.749991, 0, 1.0};
Point(22) = {-0.015467, 0.749711, 0, 1.0};
Point(23) = {-0.023011, 0.749176, 0, 1.0};
Point(24) = {-0.030540, 0.748377, 0, 1.0};
Point(25) = {-0.038055, 0.747295, 0, 1.0};
Point(26) = {-0.045553, 0.745886, 0, 1.0};
Point(27) = {-0.049294, 0.745031, 0, 1.0};
Point(28) = {-0.053030, 0.744059, 0, 1.0};
Point(29) = {-0.056758, 0.742950, 0, 1.0};
Point(30) = {-0.060476, 0.741661, 0, 1.0};
Point(31) = {-0.064182, 0.740117, 0, 1.0};
Point(32) = {-0.067866, 0.738161, 0, 1.0};
Point(33) = {-0.069695, 0.736926, 0, 1.0};
Point(34) = {-0.071509, 0.735407, 0, 1.0};
Point(35) = {-0.073294, 0.733327, 0, 1.0};
Point(36) = {-0.074330, 0.731423, 0, 1.0};
Point(37) = {-0.074720, 0.730165, 0, 1.0};
Point(38) = {-0.074899, 0.727794, 0, 1.0};
Point(39) = {-0.074513, 0.726192, 0, 1.0};
Point(40) = {-0.074005, 0.725152, 0, 1.0};
Point(41) = {-0.072804, 0.723885, 0, 1.0};
Point(42) = {-0.070848, 0.722671, 0, 1.0};
Point(43) = {-0.068912, 0.721840, 0, 1.0};
Point(44) = {-0.066984, 0.721163, 0, 1.0};
Point(45) = {-0.063145, 0.720131, 0, 1.0};
Point(46) = {-0.059320, 0.719369, 0, 1.0};
Point(47) = {-0.055505, 0.718787, 0, 1.0};
Point(48) = {-0.051696, 0.718340, 0, 1.0};
Point(49) = {-0.047893, 0.718000, 0, 1.0};
Point(50) = {-0.044094, 0.717747, 0, 1.0};
Point(51) = {-0.036509, 0.717474, 0, 1.0};
Point(52) = {-0.028938, 0.717486, 0, 1.0};
Point(53) = {-0.021380, 0.717722, 0, 1.0};
Point(54) = {-0.013831, 0.718158, 0, 1.0};
Point(55) = {-0.006293, 0.718801, 0, 1.0};
Point(56) = {0.001232, 0.719673, 0, 1.0};
Point(57) = {0.008743, 0.720847, 0, 1.0};
Point(58) = {0.012491, 0.721568, 0, 1.0};
Point(59) = {0.016235, 0.722372, 0, 1.0};
Point(60) = {0.019974, 0.723254, 0, 1.0};
Point(61) = {0.023711, 0.724197, 0, 1.0};
Point(62) = {0.027445, 0.725187, 0, 1.0};
Point(63) = {0.031178, 0.726211, 0, 1.0};
Point(64) = {0.034909, 0.727254, 0, 1.0};
Point(65) = {0.038640, 0.728301, 0, 1.0};
Point(66) = {0.042372, 0.729341, 0, 1.0};
Point(67) = {0.046105, 0.730349, 0, 1.0};
Point(68) = {0.049841, 0.731305, 0, 1.0};
Point(69) = {0.053581, 0.732184, 0, 1.0};
Point(70) = {0.057326, 0.732966, 0, 1.0};
Point(71) = {0.061078, 0.733625, 0, 1.0};
Point(72) = {0.064837, 0.734134, 0, 1.0};
Point(73) = {0.068606, 0.734455, 0, 1.0};
Point(74) = {0.072387, 0.734539, 0, 1.0};
Point(75) = {0.074959, 0.734416, 0, 1.0};
Point(76) = {-0.074880, -0.735931, 0, 1.0};
Point(77) = {-0.072283, -0.736538, 0, 1.0};
Point(78) = {-0.068450, -0.737462, 0, 1.0};
Point(79) = {-0.064615, -0.738408, 0, 1.0};
Point(80) = {-0.060780, -0.739372, 0, 1.0};
Point(81) = {-0.056944, -0.740346, 0, 1.0};
Point(82) = {-0.053108, -0.741321, 0, 1.0};
Point(83) = {-0.049272, -0.742285, 0, 1.0};
Point(84) = {-0.045437, -0.743232, 0, 1.0};
Point(85) = {-0.041604, -0.744153, 0, 1.0};
Point(86) = {-0.037773, -0.745038, 0, 1.0};
Point(87) = {-0.033944, -0.745878, 0, 1.0};
Point(88) = {-0.030117, -0.746663, 0, 1.0};
Point(89) = {-0.026295, -0.747380, 0, 1.0};
Point(90) = {-0.022476, -0.748023, 0, 1.0};
Point(91) = {-0.018661, -0.748582, 0, 1.0};
Point(92) = {-0.014851, -0.749051, 0, 1.0};
Point(93) = {-0.011046, -0.749424, 0, 1.0};
Point(94) = {-0.007246, -0.749704, 0, 1.0};
Point(95) = {0.000340, -0.750000, 0, 1.0};
Point(96) = {0.007911, -0.749991, 0, 1.0};
Point(97) = {0.015467, -0.749711, 0, 1.0};
Point(98) = {0.023011, -0.749176, 0, 1.0};
Point(99) = {0.030540, -0.748377, 0, 1.0};
Point(100) = {0.038055, -0.747295, 0, 1.0};
Point(101) = {0.045553, -0.745886, 0, 1.0};
Point(102) = {0.049294, -0.745031, 0, 1.0};
Point(103) = {0.053030, -0.744059, 0, 1.0};
Point(104) = {0.056758, -0.742950, 0, 1.0};
Point(105) = {0.060476, -0.741661, 0, 1.0};
Point(106) = {0.064182, -0.740117, 0, 1.0};
Point(107) = {0.067866, -0.738161, 0, 1.0};
Point(108) = {0.069695, -0.736926, 0, 1.0};
Point(109) = {0.071509, -0.735407, 0, 1.0};
Point(110) = {0.073294, -0.733327, 0, 1.0};
Point(111) = {0.074330, -0.731423, 0, 1.0};
Point(112) = {0.074720, -0.730165, 0, 1.0};
Point(113) = {0.074899, -0.727794, 0, 1.0};
Point(114) = {0.074513, -0.726192, 0, 1.0};
Point(115) = {0.074005, -0.725152, 0, 1.0};
Point(116) = {0.072804, -0.723885, 0, 1.0};
Point(117) = {0.070848, -0.722671, 0, 1.0};
Point(118) = {0.068912, -0.721840, 0, 1.0};
Point(119) = {0.066984, -0.721163, 0, 1.0};
Point(120) = {0.063145, -0.720131, 0, 1.0};
Point(121) = {0.059320, -0.719369, 0, 1.0};
Point(122) = {0.055505, -0.718787, 0, 1.0};
Point(123) = {0.051696, -0.718340, 0, 1.0};
Point(124) = {0.047893, -0.718000, 0, 1.0};
Point(125) = {0.044094, -0.717747, 0, 1.0};
Point(126) = {0.036509, -0.717474, 0, 1.0};
Point(127) = {0.028938, -0.717486, 0, 1.0};
Point(128) = {0.021380, -0.717722, 0, 1.0};
Point(129) = {0.013831, -0.718158, 0, 1.0};
Point(130) = {0.006293, -0.718801, 0, 1.0};
Point(131) = {-0.001232, -0.719673, 0, 1.0};
Point(132) = {-0.008743, -0.720847, 0, 1.0};
Point(133) = {-0.012491, -0.721568, 0, 1.0};
Point(134) = {-0.016235, -0.722372, 0, 1.0};
Point(135) = {-0.019974, -0.723254, 0, 1.0};
Point(136) = {-0.023711, -0.724197, 0, 1.0};
Point(137) = {-0.027445, -0.725187, 0, 1.0};
Point(138) = {-0.031178, -0.726211, 0, 1.0};
Point(139) = {-0.034909, -0.727254, 0, 1.0};
Point(140) = {-0.038640, -0.728301, 0, 1.0};
Point(141) = {-0.042372, -0.729341, 0, 1.0};
Point(142) = {-0.046105, -0.730349, 0, 1.0};
Point(143) = {-0.049841, -0.731305, 0, 1.0};
Point(144) = {-0.053581, -0.732184, 0, 1.0};
Point(145) = {-0.057326, -0.732966, 0, 1.0};
Point(146) = {-0.061078, -0.733625, 0, 1.0};
Point(147) = {-0.064837, -0.734134, 0, 1.0};
Point(148) = {-0.068606, -0.734455, 0, 1.0};
Point(149) = {-0.072387, -0.734539, 0, 1.0};
Point(150) = {-0.074959, -0.734416, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:100};
Spline(6) = {100:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
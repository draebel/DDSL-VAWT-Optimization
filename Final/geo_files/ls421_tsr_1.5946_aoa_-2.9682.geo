SetFactory("OpenCASCADE");

Point(1) = {0.074865, 0.740509, 0, 1.0};
Point(2) = {0.072331, 0.741098, 0, 1.0};
Point(3) = {0.069796, 0.741708, 0, 1.0};
Point(4) = {0.067260, 0.742334, 0, 1.0};
Point(5) = {0.064724, 0.742971, 0, 1.0};
Point(6) = {0.062187, 0.743616, 0, 1.0};
Point(7) = {0.059650, 0.744260, 0, 1.0};
Point(8) = {0.057114, 0.744898, 0, 1.0};
Point(9) = {0.054578, 0.745525, 0, 1.0};
Point(10) = {0.052043, 0.746133, 0, 1.0};
Point(11) = {0.049509, 0.746719, 0, 1.0};
Point(12) = {0.046977, 0.747274, 0, 1.0};
Point(13) = {0.044447, 0.747793, 0, 1.0};
Point(14) = {0.041919, 0.748268, 0, 1.0};
Point(15) = {0.039394, 0.748693, 0, 1.0};
Point(16) = {0.036871, 0.749062, 0, 1.0};
Point(17) = {0.034352, 0.749372, 0, 1.0};
Point(18) = {0.031836, 0.749619, 0, 1.0};
Point(19) = {0.029323, 0.749805, 0, 1.0};
Point(20) = {0.024306, 0.750000, 0, 1.0};
Point(21) = {0.019299, 0.749994, 0, 1.0};
Point(22) = {0.014302, 0.749809, 0, 1.0};
Point(23) = {0.009314, 0.749455, 0, 1.0};
Point(24) = {0.004335, 0.748926, 0, 1.0};
Point(25) = {-0.000635, 0.748211, 0, 1.0};
Point(26) = {-0.005593, 0.747279, 0, 1.0};
Point(27) = {-0.008068, 0.746714, 0, 1.0};
Point(28) = {-0.010538, 0.746071, 0, 1.0};
Point(29) = {-0.013003, 0.745338, 0, 1.0};
Point(30) = {-0.015462, 0.744485, 0, 1.0};
Point(31) = {-0.017912, 0.743464, 0, 1.0};
Point(32) = {-0.020349, 0.742171, 0, 1.0};
Point(33) = {-0.021558, 0.741355, 0, 1.0};
Point(34) = {-0.022758, 0.740350, 0, 1.0};
Point(35) = {-0.023938, 0.738974, 0, 1.0};
Point(36) = {-0.024624, 0.737715, 0, 1.0};
Point(37) = {-0.024881, 0.736883, 0, 1.0};
Point(38) = {-0.025000, 0.735315, 0, 1.0};
Point(39) = {-0.024745, 0.734256, 0, 1.0};
Point(40) = {-0.024409, 0.733568, 0, 1.0};
Point(41) = {-0.023614, 0.732730, 0, 1.0};
Point(42) = {-0.022321, 0.731927, 0, 1.0};
Point(43) = {-0.021041, 0.731378, 0, 1.0};
Point(44) = {-0.019766, 0.730930, 0, 1.0};
Point(45) = {-0.017227, 0.730248, 0, 1.0};
Point(46) = {-0.014698, 0.729744, 0, 1.0};
Point(47) = {-0.012174, 0.729359, 0, 1.0};
Point(48) = {-0.009656, 0.729063, 0, 1.0};
Point(49) = {-0.007141, 0.728838, 0, 1.0};
Point(50) = {-0.004629, 0.728671, 0, 1.0};
Point(51) = {0.000387, 0.728491, 0, 1.0};
Point(52) = {0.005394, 0.728499, 0, 1.0};
Point(53) = {0.010392, 0.728655, 0, 1.0};
Point(54) = {0.015384, 0.728943, 0, 1.0};
Point(55) = {0.020369, 0.729368, 0, 1.0};
Point(56) = {0.025346, 0.729945, 0, 1.0};
Point(57) = {0.030312, 0.730721, 0, 1.0};
Point(58) = {0.032791, 0.731198, 0, 1.0};
Point(59) = {0.035266, 0.731730, 0, 1.0};
Point(60) = {0.037740, 0.732313, 0, 1.0};
Point(61) = {0.040211, 0.732937, 0, 1.0};
Point(62) = {0.042680, 0.733591, 0, 1.0};
Point(63) = {0.045148, 0.734268, 0, 1.0};
Point(64) = {0.047616, 0.734958, 0, 1.0};
Point(65) = {0.050083, 0.735651, 0, 1.0};
Point(66) = {0.052551, 0.736338, 0, 1.0};
Point(67) = {0.055020, 0.737005, 0, 1.0};
Point(68) = {0.057490, 0.737637, 0, 1.0};
Point(69) = {0.059964, 0.738219, 0, 1.0};
Point(70) = {0.062440, 0.738736, 0, 1.0};
Point(71) = {0.064921, 0.739172, 0, 1.0};
Point(72) = {0.067407, 0.739508, 0, 1.0};
Point(73) = {0.069899, 0.739720, 0, 1.0};
Point(74) = {0.072400, 0.739776, 0, 1.0};
Point(75) = {0.074912, 0.739609, 0, 1.0};
Point(76) = {-0.074865, -0.740509, 0, 1.0};
Point(77) = {-0.072331, -0.741098, 0, 1.0};
Point(78) = {-0.069796, -0.741708, 0, 1.0};
Point(79) = {-0.067260, -0.742334, 0, 1.0};
Point(80) = {-0.064724, -0.742971, 0, 1.0};
Point(81) = {-0.062187, -0.743616, 0, 1.0};
Point(82) = {-0.059650, -0.744260, 0, 1.0};
Point(83) = {-0.057114, -0.744898, 0, 1.0};
Point(84) = {-0.054578, -0.745525, 0, 1.0};
Point(85) = {-0.052043, -0.746133, 0, 1.0};
Point(86) = {-0.049509, -0.746719, 0, 1.0};
Point(87) = {-0.046977, -0.747274, 0, 1.0};
Point(88) = {-0.044447, -0.747793, 0, 1.0};
Point(89) = {-0.041919, -0.748268, 0, 1.0};
Point(90) = {-0.039394, -0.748693, 0, 1.0};
Point(91) = {-0.036871, -0.749062, 0, 1.0};
Point(92) = {-0.034352, -0.749372, 0, 1.0};
Point(93) = {-0.031836, -0.749619, 0, 1.0};
Point(94) = {-0.029323, -0.749805, 0, 1.0};
Point(95) = {-0.024306, -0.750000, 0, 1.0};
Point(96) = {-0.019299, -0.749994, 0, 1.0};
Point(97) = {-0.014302, -0.749809, 0, 1.0};
Point(98) = {-0.009314, -0.749455, 0, 1.0};
Point(99) = {-0.004335, -0.748926, 0, 1.0};
Point(100) = {0.000635, -0.748211, 0, 1.0};
Point(101) = {0.005593, -0.747279, 0, 1.0};
Point(102) = {0.008068, -0.746714, 0, 1.0};
Point(103) = {0.010538, -0.746071, 0, 1.0};
Point(104) = {0.013003, -0.745338, 0, 1.0};
Point(105) = {0.015462, -0.744485, 0, 1.0};
Point(106) = {0.017912, -0.743464, 0, 1.0};
Point(107) = {0.020349, -0.742171, 0, 1.0};
Point(108) = {0.021558, -0.741355, 0, 1.0};
Point(109) = {0.022758, -0.740350, 0, 1.0};
Point(110) = {0.023938, -0.738974, 0, 1.0};
Point(111) = {0.024624, -0.737715, 0, 1.0};
Point(112) = {0.024881, -0.736883, 0, 1.0};
Point(113) = {0.025000, -0.735315, 0, 1.0};
Point(114) = {0.024745, -0.734256, 0, 1.0};
Point(115) = {0.024409, -0.733568, 0, 1.0};
Point(116) = {0.023614, -0.732730, 0, 1.0};
Point(117) = {0.022321, -0.731927, 0, 1.0};
Point(118) = {0.021041, -0.731378, 0, 1.0};
Point(119) = {0.019766, -0.730930, 0, 1.0};
Point(120) = {0.017227, -0.730248, 0, 1.0};
Point(121) = {0.014698, -0.729744, 0, 1.0};
Point(122) = {0.012174, -0.729359, 0, 1.0};
Point(123) = {0.009656, -0.729063, 0, 1.0};
Point(124) = {0.007141, -0.728838, 0, 1.0};
Point(125) = {0.004629, -0.728671, 0, 1.0};
Point(126) = {-0.000387, -0.728491, 0, 1.0};
Point(127) = {-0.005394, -0.728499, 0, 1.0};
Point(128) = {-0.010392, -0.728655, 0, 1.0};
Point(129) = {-0.015384, -0.728943, 0, 1.0};
Point(130) = {-0.020369, -0.729368, 0, 1.0};
Point(131) = {-0.025346, -0.729945, 0, 1.0};
Point(132) = {-0.030312, -0.730721, 0, 1.0};
Point(133) = {-0.032791, -0.731198, 0, 1.0};
Point(134) = {-0.035266, -0.731730, 0, 1.0};
Point(135) = {-0.037740, -0.732313, 0, 1.0};
Point(136) = {-0.040211, -0.732937, 0, 1.0};
Point(137) = {-0.042680, -0.733591, 0, 1.0};
Point(138) = {-0.045148, -0.734268, 0, 1.0};
Point(139) = {-0.047616, -0.734958, 0, 1.0};
Point(140) = {-0.050083, -0.735651, 0, 1.0};
Point(141) = {-0.052551, -0.736338, 0, 1.0};
Point(142) = {-0.055020, -0.737005, 0, 1.0};
Point(143) = {-0.057490, -0.737637, 0, 1.0};
Point(144) = {-0.059964, -0.738219, 0, 1.0};
Point(145) = {-0.062440, -0.738736, 0, 1.0};
Point(146) = {-0.064921, -0.739172, 0, 1.0};
Point(147) = {-0.067407, -0.739508, 0, 1.0};
Point(148) = {-0.069899, -0.739720, 0, 1.0};
Point(149) = {-0.072400, -0.739776, 0, 1.0};
Point(150) = {-0.074912, -0.739609, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:100};
Spline(6) = {100:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
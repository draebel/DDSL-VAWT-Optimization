SetFactory("OpenCASCADE");

Point(1) = {0.148164, 0.749839, 0, 1.0};
Point(2) = {0.147680, 0.749848, 0, 1.0};
Point(3) = {0.146226, 0.749869, 0, 1.0};
Point(4) = {0.143820, 0.749901, 0, 1.0};
Point(5) = {0.140484, 0.749939, 0, 1.0};
Point(6) = {0.136252, 0.749973, 0, 1.0};
Point(7) = {0.131165, 0.749997, 0, 1.0};
Point(8) = {0.125276, 0.750000, 0, 1.0};
Point(9) = {0.118637, 0.749977, 0, 1.0};
Point(10) = {0.111319, 0.749914, 0, 1.0};
Point(11) = {0.103390, 0.749809, 0, 1.0};
Point(12) = {0.094928, 0.749651, 0, 1.0};
Point(13) = {0.086016, 0.749431, 0, 1.0};
Point(14) = {0.076741, 0.749145, 0, 1.0};
Point(15) = {0.067196, 0.748782, 0, 1.0};
Point(16) = {0.057469, 0.748336, 0, 1.0};
Point(17) = {0.047660, 0.747792, 0, 1.0};
Point(18) = {0.037864, 0.747146, 0, 1.0};
Point(19) = {0.028177, 0.746384, 0, 1.0};
Point(20) = {0.018696, 0.745499, 0, 1.0};
Point(21) = {0.009512, 0.744483, 0, 1.0};
Point(22) = {0.000735, 0.743177, 0, 1.0};
Point(23) = {-0.007558, 0.741651, 0, 1.0};
Point(24) = {-0.015287, 0.739933, 0, 1.0};
Point(25) = {-0.022380, 0.738062, 0, 1.0};
Point(26) = {-0.028781, 0.736113, 0, 1.0};
Point(27) = {-0.034425, 0.734144, 0, 1.0};
Point(28) = {-0.039272, 0.732227, 0, 1.0};
Point(29) = {-0.043268, 0.730357, 0, 1.0};
Point(30) = {-0.046385, 0.728634, 0, 1.0};
Point(31) = {-0.047590, 0.727735, 0, 1.0};
Point(32) = {-0.048564, 0.726836, 0, 1.0};
Point(33) = {-0.048847, 0.726501, 0, 1.0};
Point(34) = {-0.049109, 0.726176, 0, 1.0};
Point(35) = {-0.049366, 0.725810, 0, 1.0};
Point(36) = {-0.049615, 0.725382, 0, 1.0};
Point(37) = {-0.049779, 0.724933, 0, 1.0};
Point(38) = {-0.049895, 0.724547, 0, 1.0};
Point(39) = {-0.049970, 0.724181, 0, 1.0};
Point(40) = {-0.050021, 0.723776, 0, 1.0};
Point(41) = {-0.050036, 0.723415, 0, 1.0};
Point(42) = {-0.050000, 0.722797, 0, 1.0};
Point(43) = {-0.049901, 0.722322, 0, 1.0};
Point(44) = {-0.049807, 0.722051, 0, 1.0};
Point(45) = {-0.049669, 0.721756, 0, 1.0};
Point(46) = {-0.049517, 0.721503, 0, 1.0};
Point(47) = {-0.049322, 0.721245, 0, 1.0};
Point(48) = {-0.049072, 0.721004, 0, 1.0};
Point(49) = {-0.048739, 0.720753, 0, 1.0};
Point(50) = {-0.048406, 0.720502, 0, 1.0};
Point(51) = {-0.048078, 0.720301, 0, 1.0};
Point(52) = {-0.047734, 0.720142, 0, 1.0};
Point(53) = {-0.046586, 0.719637, 0, 1.0};
Point(54) = {-0.045221, 0.719248, 0, 1.0};
Point(55) = {-0.041806, 0.718567, 0, 1.0};
Point(56) = {-0.037520, 0.718099, 0, 1.0};
Point(57) = {-0.032397, 0.717785, 0, 1.0};
Point(58) = {-0.026490, 0.717639, 0, 1.0};
Point(59) = {-0.019853, 0.717680, 0, 1.0};
Point(60) = {-0.012567, 0.717993, 0, 1.0};
Point(61) = {-0.004698, 0.718582, 0, 1.0};
Point(62) = {0.003679, 0.719429, 0, 1.0};
Point(63) = {0.012481, 0.720534, 0, 1.0};
Point(64) = {0.021627, 0.721862, 0, 1.0};
Point(65) = {0.031029, 0.723384, 0, 1.0};
Point(66) = {0.040609, 0.725012, 0, 1.0};
Point(67) = {0.050266, 0.726777, 0, 1.0};
Point(68) = {0.059911, 0.728647, 0, 1.0};
Point(69) = {0.069452, 0.730589, 0, 1.0};
Point(70) = {0.078797, 0.732568, 0, 1.0};
Point(71) = {0.087860, 0.734557, 0, 1.0};
Point(72) = {0.096556, 0.736520, 0, 1.0};
Point(73) = {0.104801, 0.738433, 0, 1.0};
Point(74) = {0.112515, 0.740268, 0, 1.0};
Point(75) = {0.119627, 0.741994, 0, 1.0};
Point(76) = {0.126070, 0.743593, 0, 1.0};
Point(77) = {0.131780, 0.745035, 0, 1.0};
Point(78) = {0.136707, 0.746301, 0, 1.0};
Point(79) = {0.140803, 0.747367, 0, 1.0};
Point(80) = {0.144029, 0.748218, 0, 1.0};
Point(81) = {0.146354, 0.748837, 0, 1.0};
Point(82) = {0.147758, 0.749213, 0, 1.0};
Point(83) = {0.148231, 0.749340, 0, 1.0};
Point(84) = {-0.148164, -0.749839, 0, 1.0};
Point(85) = {-0.147680, -0.749848, 0, 1.0};
Point(86) = {-0.146226, -0.749869, 0, 1.0};
Point(87) = {-0.143820, -0.749901, 0, 1.0};
Point(88) = {-0.140484, -0.749939, 0, 1.0};
Point(89) = {-0.136252, -0.749973, 0, 1.0};
Point(90) = {-0.131165, -0.749997, 0, 1.0};
Point(91) = {-0.125276, -0.750000, 0, 1.0};
Point(92) = {-0.118637, -0.749977, 0, 1.0};
Point(93) = {-0.111319, -0.749914, 0, 1.0};
Point(94) = {-0.103390, -0.749809, 0, 1.0};
Point(95) = {-0.094928, -0.749651, 0, 1.0};
Point(96) = {-0.086016, -0.749431, 0, 1.0};
Point(97) = {-0.076741, -0.749145, 0, 1.0};
Point(98) = {-0.067196, -0.748782, 0, 1.0};
Point(99) = {-0.057469, -0.748336, 0, 1.0};
Point(100) = {-0.047660, -0.747792, 0, 1.0};
Point(101) = {-0.037864, -0.747146, 0, 1.0};
Point(102) = {-0.028177, -0.746384, 0, 1.0};
Point(103) = {-0.018696, -0.745499, 0, 1.0};
Point(104) = {-0.009512, -0.744483, 0, 1.0};
Point(105) = {-0.000735, -0.743177, 0, 1.0};
Point(106) = {0.007558, -0.741651, 0, 1.0};
Point(107) = {0.015287, -0.739933, 0, 1.0};
Point(108) = {0.022380, -0.738062, 0, 1.0};
Point(109) = {0.028781, -0.736113, 0, 1.0};
Point(110) = {0.034425, -0.734144, 0, 1.0};
Point(111) = {0.039272, -0.732227, 0, 1.0};
Point(112) = {0.043268, -0.730357, 0, 1.0};
Point(113) = {0.046385, -0.728634, 0, 1.0};
Point(114) = {0.047590, -0.727735, 0, 1.0};
Point(115) = {0.048564, -0.726836, 0, 1.0};
Point(116) = {0.048847, -0.726501, 0, 1.0};
Point(117) = {0.049109, -0.726176, 0, 1.0};
Point(118) = {0.049366, -0.725810, 0, 1.0};
Point(119) = {0.049615, -0.725382, 0, 1.0};
Point(120) = {0.049779, -0.724933, 0, 1.0};
Point(121) = {0.049895, -0.724547, 0, 1.0};
Point(122) = {0.049970, -0.724181, 0, 1.0};
Point(123) = {0.050021, -0.723776, 0, 1.0};
Point(124) = {0.050036, -0.723415, 0, 1.0};
Point(125) = {0.050000, -0.722797, 0, 1.0};
Point(126) = {0.049901, -0.722322, 0, 1.0};
Point(127) = {0.049807, -0.722051, 0, 1.0};
Point(128) = {0.049669, -0.721756, 0, 1.0};
Point(129) = {0.049517, -0.721503, 0, 1.0};
Point(130) = {0.049322, -0.721245, 0, 1.0};
Point(131) = {0.049072, -0.721004, 0, 1.0};
Point(132) = {0.048739, -0.720753, 0, 1.0};
Point(133) = {0.048406, -0.720502, 0, 1.0};
Point(134) = {0.048078, -0.720301, 0, 1.0};
Point(135) = {0.047734, -0.720142, 0, 1.0};
Point(136) = {0.046586, -0.719637, 0, 1.0};
Point(137) = {0.045221, -0.719248, 0, 1.0};
Point(138) = {0.041806, -0.718567, 0, 1.0};
Point(139) = {0.037520, -0.718099, 0, 1.0};
Point(140) = {0.032397, -0.717785, 0, 1.0};
Point(141) = {0.026490, -0.717639, 0, 1.0};
Point(142) = {0.019853, -0.717680, 0, 1.0};
Point(143) = {0.012567, -0.717993, 0, 1.0};
Point(144) = {0.004698, -0.718582, 0, 1.0};
Point(145) = {-0.003679, -0.719429, 0, 1.0};
Point(146) = {-0.012481, -0.720534, 0, 1.0};
Point(147) = {-0.021627, -0.721862, 0, 1.0};
Point(148) = {-0.031029, -0.723384, 0, 1.0};
Point(149) = {-0.040609, -0.725012, 0, 1.0};
Point(150) = {-0.050266, -0.726777, 0, 1.0};
Point(151) = {-0.059911, -0.728647, 0, 1.0};
Point(152) = {-0.069452, -0.730589, 0, 1.0};
Point(153) = {-0.078797, -0.732568, 0, 1.0};
Point(154) = {-0.087860, -0.734557, 0, 1.0};
Point(155) = {-0.096556, -0.736520, 0, 1.0};
Point(156) = {-0.104801, -0.738433, 0, 1.0};
Point(157) = {-0.112515, -0.740268, 0, 1.0};
Point(158) = {-0.119627, -0.741994, 0, 1.0};
Point(159) = {-0.126070, -0.743593, 0, 1.0};
Point(160) = {-0.131780, -0.745035, 0, 1.0};
Point(161) = {-0.136707, -0.746301, 0, 1.0};
Point(162) = {-0.140803, -0.747367, 0, 1.0};
Point(163) = {-0.144029, -0.748218, 0, 1.0};
Point(164) = {-0.146354, -0.748837, 0, 1.0};
Point(165) = {-0.147758, -0.749213, 0, 1.0};
Point(166) = {-0.148231, -0.749340, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
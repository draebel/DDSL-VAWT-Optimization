SetFactory("OpenCASCADE");

Point(1) = {0.111461, 0.749879, 0, 1.0};
Point(2) = {0.111098, 0.749886, 0, 1.0};
Point(3) = {0.110008, 0.749902, 0, 1.0};
Point(4) = {0.108203, 0.749926, 0, 1.0};
Point(5) = {0.105701, 0.749954, 0, 1.0};
Point(6) = {0.102527, 0.749979, 0, 1.0};
Point(7) = {0.098712, 0.749997, 0, 1.0};
Point(8) = {0.094295, 0.750000, 0, 1.0};
Point(9) = {0.089316, 0.749983, 0, 1.0};
Point(10) = {0.083827, 0.749935, 0, 1.0};
Point(11) = {0.077881, 0.749857, 0, 1.0};
Point(12) = {0.071534, 0.749738, 0, 1.0};
Point(13) = {0.064850, 0.749573, 0, 1.0};
Point(14) = {0.057894, 0.749359, 0, 1.0};
Point(15) = {0.050735, 0.749086, 0, 1.0};
Point(16) = {0.043440, 0.748752, 0, 1.0};
Point(17) = {0.036083, 0.748344, 0, 1.0};
Point(18) = {0.028736, 0.747860, 0, 1.0};
Point(19) = {0.021471, 0.747288, 0, 1.0};
Point(20) = {0.014360, 0.746624, 0, 1.0};
Point(21) = {0.007472, 0.745862, 0, 1.0};
Point(22) = {0.000889, 0.744883, 0, 1.0};
Point(23) = {-0.005331, 0.743738, 0, 1.0};
Point(24) = {-0.011127, 0.742450, 0, 1.0};
Point(25) = {-0.016447, 0.741046, 0, 1.0};
Point(26) = {-0.021248, 0.739585, 0, 1.0};
Point(27) = {-0.025481, 0.738108, 0, 1.0};
Point(28) = {-0.029116, 0.736670, 0, 1.0};
Point(29) = {-0.032113, 0.735268, 0, 1.0};
Point(30) = {-0.034451, 0.733976, 0, 1.0};
Point(31) = {-0.035354, 0.733301, 0, 1.0};
Point(32) = {-0.036085, 0.732627, 0, 1.0};
Point(33) = {-0.036297, 0.732376, 0, 1.0};
Point(34) = {-0.036494, 0.732132, 0, 1.0};
Point(35) = {-0.036687, 0.731857, 0, 1.0};
Point(36) = {-0.036873, 0.731537, 0, 1.0};
Point(37) = {-0.036996, 0.731199, 0, 1.0};
Point(38) = {-0.037083, 0.730911, 0, 1.0};
Point(39) = {-0.037140, 0.730636, 0, 1.0};
Point(40) = {-0.037178, 0.730332, 0, 1.0};
Point(41) = {-0.037189, 0.730062, 0, 1.0};
Point(42) = {-0.037162, 0.729598, 0, 1.0};
Point(43) = {-0.037088, 0.729241, 0, 1.0};
Point(44) = {-0.037017, 0.729038, 0, 1.0};
Point(45) = {-0.036914, 0.728817, 0, 1.0};
Point(46) = {-0.036800, 0.728627, 0, 1.0};
Point(47) = {-0.036653, 0.728434, 0, 1.0};
Point(48) = {-0.036466, 0.728253, 0, 1.0};
Point(49) = {-0.036216, 0.728065, 0, 1.0};
Point(50) = {-0.035966, 0.727876, 0, 1.0};
Point(51) = {-0.035721, 0.727725, 0, 1.0};
Point(52) = {-0.035463, 0.727606, 0, 1.0};
Point(53) = {-0.034601, 0.727228, 0, 1.0};
Point(54) = {-0.033578, 0.726936, 0, 1.0};
Point(55) = {-0.031016, 0.726425, 0, 1.0};
Point(56) = {-0.027802, 0.726074, 0, 1.0};
Point(57) = {-0.023959, 0.725839, 0, 1.0};
Point(58) = {-0.019530, 0.725729, 0, 1.0};
Point(59) = {-0.014552, 0.725760, 0, 1.0};
Point(60) = {-0.009087, 0.725995, 0, 1.0};
Point(61) = {-0.003185, 0.726436, 0, 1.0};
Point(62) = {0.003097, 0.727072, 0, 1.0};
Point(63) = {0.009699, 0.727901, 0, 1.0};
Point(64) = {0.016558, 0.728896, 0, 1.0};
Point(65) = {0.023610, 0.730038, 0, 1.0};
Point(66) = {0.030794, 0.731259, 0, 1.0};
Point(67) = {0.038038, 0.732583, 0, 1.0};
Point(68) = {0.045271, 0.733985, 0, 1.0};
Point(69) = {0.052427, 0.735442, 0, 1.0};
Point(70) = {0.059436, 0.736926, 0, 1.0};
Point(71) = {0.066233, 0.738417, 0, 1.0};
Point(72) = {0.072755, 0.739890, 0, 1.0};
Point(73) = {0.078939, 0.741325, 0, 1.0};
Point(74) = {0.084725, 0.742701, 0, 1.0};
Point(75) = {0.090058, 0.743996, 0, 1.0};
Point(76) = {0.094891, 0.745195, 0, 1.0};
Point(77) = {0.099173, 0.746276, 0, 1.0};
Point(78) = {0.102868, 0.747225, 0, 1.0};
Point(79) = {0.105940, 0.748025, 0, 1.0};
Point(80) = {0.108359, 0.748664, 0, 1.0};
Point(81) = {0.110104, 0.749128, 0, 1.0};
Point(82) = {0.111157, 0.749410, 0, 1.0};
Point(83) = {0.111511, 0.749505, 0, 1.0};
Point(84) = {-0.111461, -0.749879, 0, 1.0};
Point(85) = {-0.111098, -0.749886, 0, 1.0};
Point(86) = {-0.110008, -0.749902, 0, 1.0};
Point(87) = {-0.108203, -0.749926, 0, 1.0};
Point(88) = {-0.105701, -0.749954, 0, 1.0};
Point(89) = {-0.102527, -0.749979, 0, 1.0};
Point(90) = {-0.098712, -0.749997, 0, 1.0};
Point(91) = {-0.094295, -0.750000, 0, 1.0};
Point(92) = {-0.089316, -0.749983, 0, 1.0};
Point(93) = {-0.083827, -0.749935, 0, 1.0};
Point(94) = {-0.077881, -0.749857, 0, 1.0};
Point(95) = {-0.071534, -0.749738, 0, 1.0};
Point(96) = {-0.064850, -0.749573, 0, 1.0};
Point(97) = {-0.057894, -0.749359, 0, 1.0};
Point(98) = {-0.050735, -0.749086, 0, 1.0};
Point(99) = {-0.043440, -0.748752, 0, 1.0};
Point(100) = {-0.036083, -0.748344, 0, 1.0};
Point(101) = {-0.028736, -0.747860, 0, 1.0};
Point(102) = {-0.021471, -0.747288, 0, 1.0};
Point(103) = {-0.014360, -0.746624, 0, 1.0};
Point(104) = {-0.007472, -0.745862, 0, 1.0};
Point(105) = {-0.000889, -0.744883, 0, 1.0};
Point(106) = {0.005331, -0.743738, 0, 1.0};
Point(107) = {0.011127, -0.742450, 0, 1.0};
Point(108) = {0.016447, -0.741046, 0, 1.0};
Point(109) = {0.021248, -0.739585, 0, 1.0};
Point(110) = {0.025481, -0.738108, 0, 1.0};
Point(111) = {0.029116, -0.736670, 0, 1.0};
Point(112) = {0.032113, -0.735268, 0, 1.0};
Point(113) = {0.034451, -0.733976, 0, 1.0};
Point(114) = {0.035354, -0.733301, 0, 1.0};
Point(115) = {0.036085, -0.732627, 0, 1.0};
Point(116) = {0.036297, -0.732376, 0, 1.0};
Point(117) = {0.036494, -0.732132, 0, 1.0};
Point(118) = {0.036687, -0.731857, 0, 1.0};
Point(119) = {0.036873, -0.731537, 0, 1.0};
Point(120) = {0.036996, -0.731199, 0, 1.0};
Point(121) = {0.037083, -0.730911, 0, 1.0};
Point(122) = {0.037140, -0.730636, 0, 1.0};
Point(123) = {0.037178, -0.730332, 0, 1.0};
Point(124) = {0.037189, -0.730062, 0, 1.0};
Point(125) = {0.037162, -0.729598, 0, 1.0};
Point(126) = {0.037088, -0.729241, 0, 1.0};
Point(127) = {0.037017, -0.729038, 0, 1.0};
Point(128) = {0.036914, -0.728817, 0, 1.0};
Point(129) = {0.036800, -0.728627, 0, 1.0};
Point(130) = {0.036653, -0.728434, 0, 1.0};
Point(131) = {0.036466, -0.728253, 0, 1.0};
Point(132) = {0.036216, -0.728065, 0, 1.0};
Point(133) = {0.035966, -0.727876, 0, 1.0};
Point(134) = {0.035721, -0.727725, 0, 1.0};
Point(135) = {0.035463, -0.727606, 0, 1.0};
Point(136) = {0.034601, -0.727228, 0, 1.0};
Point(137) = {0.033578, -0.726936, 0, 1.0};
Point(138) = {0.031016, -0.726425, 0, 1.0};
Point(139) = {0.027802, -0.726074, 0, 1.0};
Point(140) = {0.023959, -0.725839, 0, 1.0};
Point(141) = {0.019530, -0.725729, 0, 1.0};
Point(142) = {0.014552, -0.725760, 0, 1.0};
Point(143) = {0.009087, -0.725995, 0, 1.0};
Point(144) = {0.003185, -0.726436, 0, 1.0};
Point(145) = {-0.003097, -0.727072, 0, 1.0};
Point(146) = {-0.009699, -0.727901, 0, 1.0};
Point(147) = {-0.016558, -0.728896, 0, 1.0};
Point(148) = {-0.023610, -0.730038, 0, 1.0};
Point(149) = {-0.030794, -0.731259, 0, 1.0};
Point(150) = {-0.038038, -0.732583, 0, 1.0};
Point(151) = {-0.045271, -0.733985, 0, 1.0};
Point(152) = {-0.052427, -0.735442, 0, 1.0};
Point(153) = {-0.059436, -0.736926, 0, 1.0};
Point(154) = {-0.066233, -0.738417, 0, 1.0};
Point(155) = {-0.072755, -0.739890, 0, 1.0};
Point(156) = {-0.078939, -0.741325, 0, 1.0};
Point(157) = {-0.084725, -0.742701, 0, 1.0};
Point(158) = {-0.090058, -0.743996, 0, 1.0};
Point(159) = {-0.094891, -0.745195, 0, 1.0};
Point(160) = {-0.099173, -0.746276, 0, 1.0};
Point(161) = {-0.102868, -0.747225, 0, 1.0};
Point(162) = {-0.105940, -0.748025, 0, 1.0};
Point(163) = {-0.108359, -0.748664, 0, 1.0};
Point(164) = {-0.110104, -0.749128, 0, 1.0};
Point(165) = {-0.111157, -0.749410, 0, 1.0};
Point(166) = {-0.111511, -0.749505, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
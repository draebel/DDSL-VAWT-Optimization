SetFactory("OpenCASCADE");

Point(1) = {0.074082, 0.749920, 0, 1.0};
Point(2) = {0.073840, 0.749924, 0, 1.0};
Point(3) = {0.073113, 0.749935, 0, 1.0};
Point(4) = {0.071910, 0.749951, 0, 1.0};
Point(5) = {0.070242, 0.749969, 0, 1.0};
Point(6) = {0.068126, 0.749986, 0, 1.0};
Point(7) = {0.065582, 0.749998, 0, 1.0};
Point(8) = {0.062638, 0.750000, 0, 1.0};
Point(9) = {0.059318, 0.749988, 0, 1.0};
Point(10) = {0.055660, 0.749957, 0, 1.0};
Point(11) = {0.051695, 0.749905, 0, 1.0};
Point(12) = {0.047464, 0.749826, 0, 1.0};
Point(13) = {0.043008, 0.749715, 0, 1.0};
Point(14) = {0.038371, 0.749573, 0, 1.0};
Point(15) = {0.033598, 0.749391, 0, 1.0};
Point(16) = {0.028735, 0.749168, 0, 1.0};
Point(17) = {0.023830, 0.748896, 0, 1.0};
Point(18) = {0.018932, 0.748573, 0, 1.0};
Point(19) = {0.014088, 0.748192, 0, 1.0};
Point(20) = {0.009348, 0.747749, 0, 1.0};
Point(21) = {0.004756, 0.747241, 0, 1.0};
Point(22) = {0.000367, 0.746588, 0, 1.0};
Point(23) = {-0.003779, 0.745826, 0, 1.0};
Point(24) = {-0.007644, 0.744966, 0, 1.0};
Point(25) = {-0.011190, 0.744031, 0, 1.0};
Point(26) = {-0.014390, 0.743057, 0, 1.0};
Point(27) = {-0.017213, 0.742072, 0, 1.0};
Point(28) = {-0.019636, 0.741113, 0, 1.0};
Point(29) = {-0.021634, 0.740178, 0, 1.0};
Point(30) = {-0.023193, 0.739317, 0, 1.0};
Point(31) = {-0.023795, 0.738868, 0, 1.0};
Point(32) = {-0.024282, 0.738418, 0, 1.0};
Point(33) = {-0.024424, 0.738251, 0, 1.0};
Point(34) = {-0.024555, 0.738088, 0, 1.0};
Point(35) = {-0.024683, 0.737905, 0, 1.0};
Point(36) = {-0.024808, 0.737691, 0, 1.0};
Point(37) = {-0.024890, 0.737466, 0, 1.0};
Point(38) = {-0.024947, 0.737274, 0, 1.0};
Point(39) = {-0.024985, 0.737091, 0, 1.0};
Point(40) = {-0.025010, 0.736888, 0, 1.0};
Point(41) = {-0.025018, 0.736708, 0, 1.0};
Point(42) = {-0.025000, 0.736399, 0, 1.0};
Point(43) = {-0.024950, 0.736161, 0, 1.0};
Point(44) = {-0.024903, 0.736026, 0, 1.0};
Point(45) = {-0.024835, 0.735878, 0, 1.0};
Point(46) = {-0.024759, 0.735751, 0, 1.0};
Point(47) = {-0.024661, 0.735622, 0, 1.0};
Point(48) = {-0.024536, 0.735502, 0, 1.0};
Point(49) = {-0.024369, 0.735376, 0, 1.0};
Point(50) = {-0.024203, 0.735251, 0, 1.0};
Point(51) = {-0.024039, 0.735150, 0, 1.0};
Point(52) = {-0.023867, 0.735071, 0, 1.0};
Point(53) = {-0.023293, 0.734819, 0, 1.0};
Point(54) = {-0.022611, 0.734624, 0, 1.0};
Point(55) = {-0.020903, 0.734284, 0, 1.0};
Point(56) = {-0.018760, 0.734050, 0, 1.0};
Point(57) = {-0.016198, 0.733893, 0, 1.0};
Point(58) = {-0.013245, 0.733819, 0, 1.0};
Point(59) = {-0.009926, 0.733840, 0, 1.0};
Point(60) = {-0.006283, 0.733996, 0, 1.0};
Point(61) = {-0.002349, 0.734291, 0, 1.0};
Point(62) = {0.001840, 0.734714, 0, 1.0};
Point(63) = {0.006241, 0.735267, 0, 1.0};
Point(64) = {0.010814, 0.735931, 0, 1.0};
Point(65) = {0.015514, 0.736692, 0, 1.0};
Point(66) = {0.020304, 0.737506, 0, 1.0};
Point(67) = {0.025133, 0.738389, 0, 1.0};
Point(68) = {0.029955, 0.739323, 0, 1.0};
Point(69) = {0.034726, 0.740295, 0, 1.0};
Point(70) = {0.039398, 0.741284, 0, 1.0};
Point(71) = {0.043930, 0.742278, 0, 1.0};
Point(72) = {0.048278, 0.743260, 0, 1.0};
Point(73) = {0.052401, 0.744216, 0, 1.0};
Point(74) = {0.056258, 0.745134, 0, 1.0};
Point(75) = {0.059813, 0.745997, 0, 1.0};
Point(76) = {0.063035, 0.746797, 0, 1.0};
Point(77) = {0.065890, 0.747517, 0, 1.0};
Point(78) = {0.068354, 0.748150, 0, 1.0};
Point(79) = {0.070402, 0.748683, 0, 1.0};
Point(80) = {0.072014, 0.749109, 0, 1.0};
Point(81) = {0.073177, 0.749418, 0, 1.0};
Point(82) = {0.073879, 0.749606, 0, 1.0};
Point(83) = {0.074116, 0.749670, 0, 1.0};
Point(84) = {-0.074082, -0.749920, 0, 1.0};
Point(85) = {-0.073840, -0.749924, 0, 1.0};
Point(86) = {-0.073113, -0.749935, 0, 1.0};
Point(87) = {-0.071910, -0.749951, 0, 1.0};
Point(88) = {-0.070242, -0.749969, 0, 1.0};
Point(89) = {-0.068126, -0.749986, 0, 1.0};
Point(90) = {-0.065582, -0.749998, 0, 1.0};
Point(91) = {-0.062638, -0.750000, 0, 1.0};
Point(92) = {-0.059318, -0.749988, 0, 1.0};
Point(93) = {-0.055660, -0.749957, 0, 1.0};
Point(94) = {-0.051695, -0.749905, 0, 1.0};
Point(95) = {-0.047464, -0.749826, 0, 1.0};
Point(96) = {-0.043008, -0.749715, 0, 1.0};
Point(97) = {-0.038371, -0.749573, 0, 1.0};
Point(98) = {-0.033598, -0.749391, 0, 1.0};
Point(99) = {-0.028735, -0.749168, 0, 1.0};
Point(100) = {-0.023830, -0.748896, 0, 1.0};
Point(101) = {-0.018932, -0.748573, 0, 1.0};
Point(102) = {-0.014088, -0.748192, 0, 1.0};
Point(103) = {-0.009348, -0.747749, 0, 1.0};
Point(104) = {-0.004756, -0.747241, 0, 1.0};
Point(105) = {-0.000367, -0.746588, 0, 1.0};
Point(106) = {0.003779, -0.745826, 0, 1.0};
Point(107) = {0.007644, -0.744966, 0, 1.0};
Point(108) = {0.011190, -0.744031, 0, 1.0};
Point(109) = {0.014390, -0.743057, 0, 1.0};
Point(110) = {0.017213, -0.742072, 0, 1.0};
Point(111) = {0.019636, -0.741113, 0, 1.0};
Point(112) = {0.021634, -0.740178, 0, 1.0};
Point(113) = {0.023193, -0.739317, 0, 1.0};
Point(114) = {0.023795, -0.738868, 0, 1.0};
Point(115) = {0.024282, -0.738418, 0, 1.0};
Point(116) = {0.024424, -0.738251, 0, 1.0};
Point(117) = {0.024555, -0.738088, 0, 1.0};
Point(118) = {0.024683, -0.737905, 0, 1.0};
Point(119) = {0.024808, -0.737691, 0, 1.0};
Point(120) = {0.024890, -0.737466, 0, 1.0};
Point(121) = {0.024947, -0.737274, 0, 1.0};
Point(122) = {0.024985, -0.737091, 0, 1.0};
Point(123) = {0.025010, -0.736888, 0, 1.0};
Point(124) = {0.025018, -0.736708, 0, 1.0};
Point(125) = {0.025000, -0.736399, 0, 1.0};
Point(126) = {0.024950, -0.736161, 0, 1.0};
Point(127) = {0.024903, -0.736026, 0, 1.0};
Point(128) = {0.024835, -0.735878, 0, 1.0};
Point(129) = {0.024759, -0.735751, 0, 1.0};
Point(130) = {0.024661, -0.735622, 0, 1.0};
Point(131) = {0.024536, -0.735502, 0, 1.0};
Point(132) = {0.024369, -0.735376, 0, 1.0};
Point(133) = {0.024203, -0.735251, 0, 1.0};
Point(134) = {0.024039, -0.735150, 0, 1.0};
Point(135) = {0.023867, -0.735071, 0, 1.0};
Point(136) = {0.023293, -0.734819, 0, 1.0};
Point(137) = {0.022611, -0.734624, 0, 1.0};
Point(138) = {0.020903, -0.734284, 0, 1.0};
Point(139) = {0.018760, -0.734050, 0, 1.0};
Point(140) = {0.016198, -0.733893, 0, 1.0};
Point(141) = {0.013245, -0.733819, 0, 1.0};
Point(142) = {0.009926, -0.733840, 0, 1.0};
Point(143) = {0.006283, -0.733996, 0, 1.0};
Point(144) = {0.002349, -0.734291, 0, 1.0};
Point(145) = {-0.001840, -0.734714, 0, 1.0};
Point(146) = {-0.006241, -0.735267, 0, 1.0};
Point(147) = {-0.010814, -0.735931, 0, 1.0};
Point(148) = {-0.015514, -0.736692, 0, 1.0};
Point(149) = {-0.020304, -0.737506, 0, 1.0};
Point(150) = {-0.025133, -0.738389, 0, 1.0};
Point(151) = {-0.029955, -0.739323, 0, 1.0};
Point(152) = {-0.034726, -0.740295, 0, 1.0};
Point(153) = {-0.039398, -0.741284, 0, 1.0};
Point(154) = {-0.043930, -0.742278, 0, 1.0};
Point(155) = {-0.048278, -0.743260, 0, 1.0};
Point(156) = {-0.052401, -0.744216, 0, 1.0};
Point(157) = {-0.056258, -0.745134, 0, 1.0};
Point(158) = {-0.059813, -0.745997, 0, 1.0};
Point(159) = {-0.063035, -0.746797, 0, 1.0};
Point(160) = {-0.065890, -0.747517, 0, 1.0};
Point(161) = {-0.068354, -0.748150, 0, 1.0};
Point(162) = {-0.070402, -0.748683, 0, 1.0};
Point(163) = {-0.072014, -0.749109, 0, 1.0};
Point(164) = {-0.073177, -0.749418, 0, 1.0};
Point(165) = {-0.073879, -0.749606, 0, 1.0};
Point(166) = {-0.074116, -0.749670, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074299, 0.749879, 0, 1.0};
Point(2) = {0.073936, 0.749886, 0, 1.0};
Point(3) = {0.072846, 0.749902, 0, 1.0};
Point(4) = {0.071041, 0.749926, 0, 1.0};
Point(5) = {0.068539, 0.749954, 0, 1.0};
Point(6) = {0.065365, 0.749979, 0, 1.0};
Point(7) = {0.061550, 0.749997, 0, 1.0};
Point(8) = {0.057133, 0.750000, 0, 1.0};
Point(9) = {0.052154, 0.749983, 0, 1.0};
Point(10) = {0.046665, 0.749935, 0, 1.0};
Point(11) = {0.040719, 0.749857, 0, 1.0};
Point(12) = {0.034372, 0.749738, 0, 1.0};
Point(13) = {0.027688, 0.749573, 0, 1.0};
Point(14) = {0.020732, 0.749359, 0, 1.0};
Point(15) = {0.013573, 0.749086, 0, 1.0};
Point(16) = {0.006278, 0.748752, 0, 1.0};
Point(17) = {-0.001079, 0.748344, 0, 1.0};
Point(18) = {-0.008426, 0.747860, 0, 1.0};
Point(19) = {-0.015691, 0.747288, 0, 1.0};
Point(20) = {-0.022802, 0.746624, 0, 1.0};
Point(21) = {-0.029690, 0.745862, 0, 1.0};
Point(22) = {-0.036273, 0.744883, 0, 1.0};
Point(23) = {-0.042493, 0.743738, 0, 1.0};
Point(24) = {-0.048289, 0.742450, 0, 1.0};
Point(25) = {-0.053609, 0.741046, 0, 1.0};
Point(26) = {-0.058410, 0.739585, 0, 1.0};
Point(27) = {-0.062643, 0.738108, 0, 1.0};
Point(28) = {-0.066278, 0.736670, 0, 1.0};
Point(29) = {-0.069275, 0.735268, 0, 1.0};
Point(30) = {-0.071613, 0.733976, 0, 1.0};
Point(31) = {-0.072516, 0.733301, 0, 1.0};
Point(32) = {-0.073247, 0.732627, 0, 1.0};
Point(33) = {-0.073459, 0.732376, 0, 1.0};
Point(34) = {-0.073656, 0.732132, 0, 1.0};
Point(35) = {-0.073849, 0.731857, 0, 1.0};
Point(36) = {-0.074035, 0.731537, 0, 1.0};
Point(37) = {-0.074158, 0.731199, 0, 1.0};
Point(38) = {-0.074245, 0.730911, 0, 1.0};
Point(39) = {-0.074302, 0.730636, 0, 1.0};
Point(40) = {-0.074340, 0.730332, 0, 1.0};
Point(41) = {-0.074351, 0.730062, 0, 1.0};
Point(42) = {-0.074324, 0.729598, 0, 1.0};
Point(43) = {-0.074250, 0.729241, 0, 1.0};
Point(44) = {-0.074179, 0.729038, 0, 1.0};
Point(45) = {-0.074076, 0.728817, 0, 1.0};
Point(46) = {-0.073962, 0.728627, 0, 1.0};
Point(47) = {-0.073815, 0.728434, 0, 1.0};
Point(48) = {-0.073628, 0.728253, 0, 1.0};
Point(49) = {-0.073378, 0.728065, 0, 1.0};
Point(50) = {-0.073128, 0.727876, 0, 1.0};
Point(51) = {-0.072883, 0.727725, 0, 1.0};
Point(52) = {-0.072625, 0.727606, 0, 1.0};
Point(53) = {-0.071763, 0.727228, 0, 1.0};
Point(54) = {-0.070740, 0.726936, 0, 1.0};
Point(55) = {-0.068178, 0.726425, 0, 1.0};
Point(56) = {-0.064964, 0.726074, 0, 1.0};
Point(57) = {-0.061121, 0.725839, 0, 1.0};
Point(58) = {-0.056692, 0.725729, 0, 1.0};
Point(59) = {-0.051714, 0.725760, 0, 1.0};
Point(60) = {-0.046249, 0.725995, 0, 1.0};
Point(61) = {-0.040347, 0.726436, 0, 1.0};
Point(62) = {-0.034065, 0.727072, 0, 1.0};
Point(63) = {-0.027463, 0.727901, 0, 1.0};
Point(64) = {-0.020604, 0.728896, 0, 1.0};
Point(65) = {-0.013552, 0.730038, 0, 1.0};
Point(66) = {-0.006367, 0.731259, 0, 1.0};
Point(67) = {0.000876, 0.732583, 0, 1.0};
Point(68) = {0.008109, 0.733985, 0, 1.0};
Point(69) = {0.015265, 0.735442, 0, 1.0};
Point(70) = {0.022274, 0.736926, 0, 1.0};
Point(71) = {0.029071, 0.738417, 0, 1.0};
Point(72) = {0.035593, 0.739890, 0, 1.0};
Point(73) = {0.041777, 0.741325, 0, 1.0};
Point(74) = {0.047563, 0.742701, 0, 1.0};
Point(75) = {0.052896, 0.743996, 0, 1.0};
Point(76) = {0.057729, 0.745195, 0, 1.0};
Point(77) = {0.062011, 0.746276, 0, 1.0};
Point(78) = {0.065706, 0.747225, 0, 1.0};
Point(79) = {0.068778, 0.748025, 0, 1.0};
Point(80) = {0.071197, 0.748664, 0, 1.0};
Point(81) = {0.072942, 0.749128, 0, 1.0};
Point(82) = {0.073995, 0.749410, 0, 1.0};
Point(83) = {0.074349, 0.749505, 0, 1.0};
Point(84) = {-0.074299, -0.749879, 0, 1.0};
Point(85) = {-0.073936, -0.749886, 0, 1.0};
Point(86) = {-0.072846, -0.749902, 0, 1.0};
Point(87) = {-0.071041, -0.749926, 0, 1.0};
Point(88) = {-0.068539, -0.749954, 0, 1.0};
Point(89) = {-0.065365, -0.749979, 0, 1.0};
Point(90) = {-0.061550, -0.749997, 0, 1.0};
Point(91) = {-0.057133, -0.750000, 0, 1.0};
Point(92) = {-0.052154, -0.749983, 0, 1.0};
Point(93) = {-0.046665, -0.749935, 0, 1.0};
Point(94) = {-0.040719, -0.749857, 0, 1.0};
Point(95) = {-0.034372, -0.749738, 0, 1.0};
Point(96) = {-0.027688, -0.749573, 0, 1.0};
Point(97) = {-0.020732, -0.749359, 0, 1.0};
Point(98) = {-0.013573, -0.749086, 0, 1.0};
Point(99) = {-0.006278, -0.748752, 0, 1.0};
Point(100) = {0.001079, -0.748344, 0, 1.0};
Point(101) = {0.008426, -0.747860, 0, 1.0};
Point(102) = {0.015691, -0.747288, 0, 1.0};
Point(103) = {0.022802, -0.746624, 0, 1.0};
Point(104) = {0.029690, -0.745862, 0, 1.0};
Point(105) = {0.036273, -0.744883, 0, 1.0};
Point(106) = {0.042493, -0.743738, 0, 1.0};
Point(107) = {0.048289, -0.742450, 0, 1.0};
Point(108) = {0.053609, -0.741046, 0, 1.0};
Point(109) = {0.058410, -0.739585, 0, 1.0};
Point(110) = {0.062643, -0.738108, 0, 1.0};
Point(111) = {0.066278, -0.736670, 0, 1.0};
Point(112) = {0.069275, -0.735268, 0, 1.0};
Point(113) = {0.071613, -0.733976, 0, 1.0};
Point(114) = {0.072516, -0.733301, 0, 1.0};
Point(115) = {0.073247, -0.732627, 0, 1.0};
Point(116) = {0.073459, -0.732376, 0, 1.0};
Point(117) = {0.073656, -0.732132, 0, 1.0};
Point(118) = {0.073849, -0.731857, 0, 1.0};
Point(119) = {0.074035, -0.731537, 0, 1.0};
Point(120) = {0.074158, -0.731199, 0, 1.0};
Point(121) = {0.074245, -0.730911, 0, 1.0};
Point(122) = {0.074302, -0.730636, 0, 1.0};
Point(123) = {0.074340, -0.730332, 0, 1.0};
Point(124) = {0.074351, -0.730062, 0, 1.0};
Point(125) = {0.074324, -0.729598, 0, 1.0};
Point(126) = {0.074250, -0.729241, 0, 1.0};
Point(127) = {0.074179, -0.729038, 0, 1.0};
Point(128) = {0.074076, -0.728817, 0, 1.0};
Point(129) = {0.073962, -0.728627, 0, 1.0};
Point(130) = {0.073815, -0.728434, 0, 1.0};
Point(131) = {0.073628, -0.728253, 0, 1.0};
Point(132) = {0.073378, -0.728065, 0, 1.0};
Point(133) = {0.073128, -0.727876, 0, 1.0};
Point(134) = {0.072883, -0.727725, 0, 1.0};
Point(135) = {0.072625, -0.727606, 0, 1.0};
Point(136) = {0.071763, -0.727228, 0, 1.0};
Point(137) = {0.070740, -0.726936, 0, 1.0};
Point(138) = {0.068178, -0.726425, 0, 1.0};
Point(139) = {0.064964, -0.726074, 0, 1.0};
Point(140) = {0.061121, -0.725839, 0, 1.0};
Point(141) = {0.056692, -0.725729, 0, 1.0};
Point(142) = {0.051714, -0.725760, 0, 1.0};
Point(143) = {0.046249, -0.725995, 0, 1.0};
Point(144) = {0.040347, -0.726436, 0, 1.0};
Point(145) = {0.034065, -0.727072, 0, 1.0};
Point(146) = {0.027463, -0.727901, 0, 1.0};
Point(147) = {0.020604, -0.728896, 0, 1.0};
Point(148) = {0.013552, -0.730038, 0, 1.0};
Point(149) = {0.006367, -0.731259, 0, 1.0};
Point(150) = {-0.000876, -0.732583, 0, 1.0};
Point(151) = {-0.008109, -0.733985, 0, 1.0};
Point(152) = {-0.015265, -0.735442, 0, 1.0};
Point(153) = {-0.022274, -0.736926, 0, 1.0};
Point(154) = {-0.029071, -0.738417, 0, 1.0};
Point(155) = {-0.035593, -0.739890, 0, 1.0};
Point(156) = {-0.041777, -0.741325, 0, 1.0};
Point(157) = {-0.047563, -0.742701, 0, 1.0};
Point(158) = {-0.052896, -0.743996, 0, 1.0};
Point(159) = {-0.057729, -0.745195, 0, 1.0};
Point(160) = {-0.062011, -0.746276, 0, 1.0};
Point(161) = {-0.065706, -0.747225, 0, 1.0};
Point(162) = {-0.068778, -0.748025, 0, 1.0};
Point(163) = {-0.071197, -0.748664, 0, 1.0};
Point(164) = {-0.072942, -0.749128, 0, 1.0};
Point(165) = {-0.073995, -0.749410, 0, 1.0};
Point(166) = {-0.074349, -0.749505, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
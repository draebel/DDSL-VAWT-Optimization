SetFactory("OpenCASCADE");

Point(1) = {0.149304, 0.720297, 0, 1.0};
Point(2) = {0.148795, 0.720467, 0, 1.0};
Point(3) = {0.147212, 0.720975, 0, 1.0};
Point(4) = {0.144589, 0.721809, 0, 1.0};
Point(5) = {0.140957, 0.722945, 0, 1.0};
Point(6) = {0.136346, 0.724357, 0, 1.0};
Point(7) = {0.130806, 0.726007, 0, 1.0};
Point(8) = {0.124390, 0.727858, 0, 1.0};
Point(9) = {0.117164, 0.729868, 0, 1.0};
Point(10) = {0.109206, 0.731995, 0, 1.0};
Point(11) = {0.100593, 0.734193, 0, 1.0};
Point(12) = {0.091423, 0.736417, 0, 1.0};
Point(13) = {0.081787, 0.738620, 0, 1.0};
Point(14) = {0.071790, 0.740758, 0, 1.0};
Point(15) = {0.061543, 0.742787, 0, 1.0};
Point(16) = {0.051155, 0.744657, 0, 1.0};
Point(17) = {0.040737, 0.746330, 0, 1.0};
Point(18) = {0.030401, 0.747762, 0, 1.0};
Point(19) = {0.020172, 0.748886, 0, 1.0};
Point(20) = {0.010256, 0.749636, 0, 1.0};
Point(21) = {0.000768, 0.750000, 0, 1.0};
Point(22) = {-0.008176, 0.749979, 0, 1.0};
Point(23) = {-0.016471, 0.749585, 0, 1.0};
Point(24) = {-0.024020, 0.748836, 0, 1.0};
Point(25) = {-0.030732, 0.747770, 0, 1.0};
Point(26) = {-0.036530, 0.746423, 0, 1.0};
Point(27) = {-0.041347, 0.744842, 0, 1.0};
Point(28) = {-0.045135, 0.743069, 0, 1.0};
Point(29) = {-0.047854, 0.741145, 0, 1.0};
Point(30) = {-0.049479, 0.739103, 0, 1.0};
Point(31) = {-0.050000, 0.736970, 0, 1.0};
Point(32) = {-0.049420, 0.734851, 0, 1.0};
Point(33) = {-0.047755, 0.732852, 0, 1.0};
Point(34) = {-0.045030, 0.730986, 0, 1.0};
Point(35) = {-0.041285, 0.729260, 0, 1.0};
Point(36) = {-0.036565, 0.727688, 0, 1.0};
Point(37) = {-0.030924, 0.726281, 0, 1.0};
Point(38) = {-0.024428, 0.725041, 0, 1.0};
Point(39) = {-0.017148, 0.723972, 0, 1.0};
Point(40) = {-0.009158, 0.723065, 0, 1.0};
Point(41) = {-0.000546, 0.722306, 0, 1.0};
Point(42) = {0.008602, 0.721677, 0, 1.0};
Point(43) = {0.018192, 0.721154, 0, 1.0};
Point(44) = {0.028124, 0.720710, 0, 1.0};
Point(45) = {0.038386, 0.720338, 0, 1.0};
Point(46) = {0.048784, 0.720065, 0, 1.0};
Point(47) = {0.059201, 0.719873, 0, 1.0};
Point(48) = {0.069521, 0.719737, 0, 1.0};
Point(49) = {0.079630, 0.719647, 0, 1.0};
Point(50) = {0.089416, 0.719591, 0, 1.0};
Point(51) = {0.098773, 0.719557, 0, 1.0};
Point(52) = {0.107594, 0.719543, 0, 1.0};
Point(53) = {0.115781, 0.719544, 0, 1.0};
Point(54) = {0.123243, 0.719555, 0, 1.0};
Point(55) = {0.129893, 0.719577, 0, 1.0};
Point(56) = {0.135656, 0.719606, 0, 1.0};
Point(57) = {0.140468, 0.719636, 0, 1.0};
Point(58) = {0.144268, 0.719666, 0, 1.0};
Point(59) = {0.147016, 0.719691, 0, 1.0};
Point(60) = {0.148678, 0.719708, 0, 1.0};
Point(61) = {0.149254, 0.719711, 0, 1.0};
Point(62) = {-0.149304, -0.720297, 0, 1.0};
Point(63) = {-0.148795, -0.720467, 0, 1.0};
Point(64) = {-0.147212, -0.720975, 0, 1.0};
Point(65) = {-0.144589, -0.721809, 0, 1.0};
Point(66) = {-0.140957, -0.722945, 0, 1.0};
Point(67) = {-0.136346, -0.724357, 0, 1.0};
Point(68) = {-0.130806, -0.726007, 0, 1.0};
Point(69) = {-0.124390, -0.727858, 0, 1.0};
Point(70) = {-0.117164, -0.729868, 0, 1.0};
Point(71) = {-0.109206, -0.731995, 0, 1.0};
Point(72) = {-0.100593, -0.734193, 0, 1.0};
Point(73) = {-0.091423, -0.736417, 0, 1.0};
Point(74) = {-0.081787, -0.738620, 0, 1.0};
Point(75) = {-0.071790, -0.740758, 0, 1.0};
Point(76) = {-0.061543, -0.742787, 0, 1.0};
Point(77) = {-0.051155, -0.744657, 0, 1.0};
Point(78) = {-0.040737, -0.746330, 0, 1.0};
Point(79) = {-0.030401, -0.747762, 0, 1.0};
Point(80) = {-0.020172, -0.748886, 0, 1.0};
Point(81) = {-0.010256, -0.749636, 0, 1.0};
Point(82) = {-0.000768, -0.750000, 0, 1.0};
Point(83) = {0.008176, -0.749979, 0, 1.0};
Point(84) = {0.016471, -0.749585, 0, 1.0};
Point(85) = {0.024020, -0.748836, 0, 1.0};
Point(86) = {0.030732, -0.747770, 0, 1.0};
Point(87) = {0.036530, -0.746423, 0, 1.0};
Point(88) = {0.041347, -0.744842, 0, 1.0};
Point(89) = {0.045135, -0.743069, 0, 1.0};
Point(90) = {0.047854, -0.741145, 0, 1.0};
Point(91) = {0.049479, -0.739103, 0, 1.0};
Point(92) = {0.050000, -0.736970, 0, 1.0};
Point(93) = {0.049420, -0.734851, 0, 1.0};
Point(94) = {0.047755, -0.732852, 0, 1.0};
Point(95) = {0.045030, -0.730986, 0, 1.0};
Point(96) = {0.041285, -0.729260, 0, 1.0};
Point(97) = {0.036565, -0.727688, 0, 1.0};
Point(98) = {0.030924, -0.726281, 0, 1.0};
Point(99) = {0.024428, -0.725041, 0, 1.0};
Point(100) = {0.017148, -0.723972, 0, 1.0};
Point(101) = {0.009158, -0.723065, 0, 1.0};
Point(102) = {0.000546, -0.722306, 0, 1.0};
Point(103) = {-0.008602, -0.721677, 0, 1.0};
Point(104) = {-0.018192, -0.721154, 0, 1.0};
Point(105) = {-0.028124, -0.720710, 0, 1.0};
Point(106) = {-0.038386, -0.720338, 0, 1.0};
Point(107) = {-0.048784, -0.720065, 0, 1.0};
Point(108) = {-0.059201, -0.719873, 0, 1.0};
Point(109) = {-0.069521, -0.719737, 0, 1.0};
Point(110) = {-0.079630, -0.719647, 0, 1.0};
Point(111) = {-0.089416, -0.719591, 0, 1.0};
Point(112) = {-0.098773, -0.719557, 0, 1.0};
Point(113) = {-0.107594, -0.719543, 0, 1.0};
Point(114) = {-0.115781, -0.719544, 0, 1.0};
Point(115) = {-0.123243, -0.719555, 0, 1.0};
Point(116) = {-0.129893, -0.719577, 0, 1.0};
Point(117) = {-0.135656, -0.719606, 0, 1.0};
Point(118) = {-0.140468, -0.719636, 0, 1.0};
Point(119) = {-0.144268, -0.719666, 0, 1.0};
Point(120) = {-0.147016, -0.719691, 0, 1.0};
Point(121) = {-0.148678, -0.719708, 0, 1.0};
Point(122) = {-0.149254, -0.719711, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:102};
Spline(7) = {102:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
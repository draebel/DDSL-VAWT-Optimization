SetFactory("OpenCASCADE");

Point(1) = {0.074652, 0.735149, 0, 1.0};
Point(2) = {0.074397, 0.735233, 0, 1.0};
Point(3) = {0.073606, 0.735488, 0, 1.0};
Point(4) = {0.072295, 0.735904, 0, 1.0};
Point(5) = {0.070478, 0.736472, 0, 1.0};
Point(6) = {0.068173, 0.737179, 0, 1.0};
Point(7) = {0.065403, 0.738003, 0, 1.0};
Point(8) = {0.062195, 0.738929, 0, 1.0};
Point(9) = {0.058582, 0.739934, 0, 1.0};
Point(10) = {0.054603, 0.740997, 0, 1.0};
Point(11) = {0.050297, 0.742097, 0, 1.0};
Point(12) = {0.045711, 0.743209, 0, 1.0};
Point(13) = {0.040894, 0.744310, 0, 1.0};
Point(14) = {0.035895, 0.745379, 0, 1.0};
Point(15) = {0.030772, 0.746393, 0, 1.0};
Point(16) = {0.025577, 0.747328, 0, 1.0};
Point(17) = {0.020369, 0.748165, 0, 1.0};
Point(18) = {0.015201, 0.748881, 0, 1.0};
Point(19) = {0.010086, 0.749443, 0, 1.0};
Point(20) = {0.005128, 0.749818, 0, 1.0};
Point(21) = {0.000384, 0.750000, 0, 1.0};
Point(22) = {-0.004088, 0.749989, 0, 1.0};
Point(23) = {-0.008236, 0.749792, 0, 1.0};
Point(24) = {-0.012010, 0.749418, 0, 1.0};
Point(25) = {-0.015366, 0.748885, 0, 1.0};
Point(26) = {-0.018265, 0.748211, 0, 1.0};
Point(27) = {-0.020674, 0.747421, 0, 1.0};
Point(28) = {-0.022568, 0.746534, 0, 1.0};
Point(29) = {-0.023927, 0.745572, 0, 1.0};
Point(30) = {-0.024740, 0.744552, 0, 1.0};
Point(31) = {-0.025000, 0.743485, 0, 1.0};
Point(32) = {-0.024710, 0.742425, 0, 1.0};
Point(33) = {-0.023878, 0.741426, 0, 1.0};
Point(34) = {-0.022515, 0.740493, 0, 1.0};
Point(35) = {-0.020642, 0.739630, 0, 1.0};
Point(36) = {-0.018282, 0.738844, 0, 1.0};
Point(37) = {-0.015462, 0.738140, 0, 1.0};
Point(38) = {-0.012214, 0.737521, 0, 1.0};
Point(39) = {-0.008574, 0.736986, 0, 1.0};
Point(40) = {-0.004579, 0.736532, 0, 1.0};
Point(41) = {-0.000273, 0.736153, 0, 1.0};
Point(42) = {0.004301, 0.735839, 0, 1.0};
Point(43) = {0.009096, 0.735577, 0, 1.0};
Point(44) = {0.014062, 0.735355, 0, 1.0};
Point(45) = {0.019193, 0.735169, 0, 1.0};
Point(46) = {0.024392, 0.735033, 0, 1.0};
Point(47) = {0.029601, 0.734936, 0, 1.0};
Point(48) = {0.034760, 0.734868, 0, 1.0};
Point(49) = {0.039815, 0.734824, 0, 1.0};
Point(50) = {0.044708, 0.734795, 0, 1.0};
Point(51) = {0.049387, 0.734778, 0, 1.0};
Point(52) = {0.053797, 0.734771, 0, 1.0};
Point(53) = {0.057891, 0.734772, 0, 1.0};
Point(54) = {0.061622, 0.734778, 0, 1.0};
Point(55) = {0.064947, 0.734789, 0, 1.0};
Point(56) = {0.067828, 0.734803, 0, 1.0};
Point(57) = {0.070234, 0.734818, 0, 1.0};
Point(58) = {0.072134, 0.734833, 0, 1.0};
Point(59) = {0.073508, 0.734846, 0, 1.0};
Point(60) = {0.074339, 0.734854, 0, 1.0};
Point(61) = {0.074627, 0.734856, 0, 1.0};
Point(62) = {-0.074652, -0.735149, 0, 1.0};
Point(63) = {-0.074397, -0.735233, 0, 1.0};
Point(64) = {-0.073606, -0.735488, 0, 1.0};
Point(65) = {-0.072295, -0.735904, 0, 1.0};
Point(66) = {-0.070478, -0.736472, 0, 1.0};
Point(67) = {-0.068173, -0.737179, 0, 1.0};
Point(68) = {-0.065403, -0.738003, 0, 1.0};
Point(69) = {-0.062195, -0.738929, 0, 1.0};
Point(70) = {-0.058582, -0.739934, 0, 1.0};
Point(71) = {-0.054603, -0.740997, 0, 1.0};
Point(72) = {-0.050297, -0.742097, 0, 1.0};
Point(73) = {-0.045711, -0.743209, 0, 1.0};
Point(74) = {-0.040894, -0.744310, 0, 1.0};
Point(75) = {-0.035895, -0.745379, 0, 1.0};
Point(76) = {-0.030772, -0.746393, 0, 1.0};
Point(77) = {-0.025577, -0.747328, 0, 1.0};
Point(78) = {-0.020369, -0.748165, 0, 1.0};
Point(79) = {-0.015201, -0.748881, 0, 1.0};
Point(80) = {-0.010086, -0.749443, 0, 1.0};
Point(81) = {-0.005128, -0.749818, 0, 1.0};
Point(82) = {-0.000384, -0.750000, 0, 1.0};
Point(83) = {0.004088, -0.749989, 0, 1.0};
Point(84) = {0.008236, -0.749792, 0, 1.0};
Point(85) = {0.012010, -0.749418, 0, 1.0};
Point(86) = {0.015366, -0.748885, 0, 1.0};
Point(87) = {0.018265, -0.748211, 0, 1.0};
Point(88) = {0.020674, -0.747421, 0, 1.0};
Point(89) = {0.022568, -0.746534, 0, 1.0};
Point(90) = {0.023927, -0.745572, 0, 1.0};
Point(91) = {0.024740, -0.744552, 0, 1.0};
Point(92) = {0.025000, -0.743485, 0, 1.0};
Point(93) = {0.024710, -0.742425, 0, 1.0};
Point(94) = {0.023878, -0.741426, 0, 1.0};
Point(95) = {0.022515, -0.740493, 0, 1.0};
Point(96) = {0.020642, -0.739630, 0, 1.0};
Point(97) = {0.018282, -0.738844, 0, 1.0};
Point(98) = {0.015462, -0.738140, 0, 1.0};
Point(99) = {0.012214, -0.737521, 0, 1.0};
Point(100) = {0.008574, -0.736986, 0, 1.0};
Point(101) = {0.004579, -0.736532, 0, 1.0};
Point(102) = {0.000273, -0.736153, 0, 1.0};
Point(103) = {-0.004301, -0.735839, 0, 1.0};
Point(104) = {-0.009096, -0.735577, 0, 1.0};
Point(105) = {-0.014062, -0.735355, 0, 1.0};
Point(106) = {-0.019193, -0.735169, 0, 1.0};
Point(107) = {-0.024392, -0.735033, 0, 1.0};
Point(108) = {-0.029601, -0.734936, 0, 1.0};
Point(109) = {-0.034760, -0.734868, 0, 1.0};
Point(110) = {-0.039815, -0.734824, 0, 1.0};
Point(111) = {-0.044708, -0.734795, 0, 1.0};
Point(112) = {-0.049387, -0.734778, 0, 1.0};
Point(113) = {-0.053797, -0.734771, 0, 1.0};
Point(114) = {-0.057891, -0.734772, 0, 1.0};
Point(115) = {-0.061622, -0.734778, 0, 1.0};
Point(116) = {-0.064947, -0.734789, 0, 1.0};
Point(117) = {-0.067828, -0.734803, 0, 1.0};
Point(118) = {-0.070234, -0.734818, 0, 1.0};
Point(119) = {-0.072134, -0.734833, 0, 1.0};
Point(120) = {-0.073508, -0.734846, 0, 1.0};
Point(121) = {-0.074339, -0.734854, 0, 1.0};
Point(122) = {-0.074627, -0.734856, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:102};
Spline(7) = {102:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
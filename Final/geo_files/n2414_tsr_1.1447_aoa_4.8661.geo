SetFactory("OpenCASCADE");

Point(1) = {0.111978, 0.727723, 0, 1.0};
Point(2) = {0.111596, 0.727850, 0, 1.0};
Point(3) = {0.110409, 0.728231, 0, 1.0};
Point(4) = {0.108442, 0.728856, 0, 1.0};
Point(5) = {0.105717, 0.729709, 0, 1.0};
Point(6) = {0.102259, 0.730768, 0, 1.0};
Point(7) = {0.098104, 0.732005, 0, 1.0};
Point(8) = {0.093292, 0.733393, 0, 1.0};
Point(9) = {0.087873, 0.734901, 0, 1.0};
Point(10) = {0.081904, 0.736496, 0, 1.0};
Point(11) = {0.075445, 0.738145, 0, 1.0};
Point(12) = {0.068567, 0.739813, 0, 1.0};
Point(13) = {0.061340, 0.741465, 0, 1.0};
Point(14) = {0.053843, 0.743069, 0, 1.0};
Point(15) = {0.046158, 0.744590, 0, 1.0};
Point(16) = {0.038366, 0.745992, 0, 1.0};
Point(17) = {0.030553, 0.747248, 0, 1.0};
Point(18) = {0.022801, 0.748322, 0, 1.0};
Point(19) = {0.015129, 0.749165, 0, 1.0};
Point(20) = {0.007692, 0.749727, 0, 1.0};
Point(21) = {0.000576, 0.750000, 0, 1.0};
Point(22) = {-0.006132, 0.749984, 0, 1.0};
Point(23) = {-0.012353, 0.749689, 0, 1.0};
Point(24) = {-0.018015, 0.749127, 0, 1.0};
Point(25) = {-0.023049, 0.748328, 0, 1.0};
Point(26) = {-0.027397, 0.747317, 0, 1.0};
Point(27) = {-0.031010, 0.746131, 0, 1.0};
Point(28) = {-0.033851, 0.744802, 0, 1.0};
Point(29) = {-0.035891, 0.743358, 0, 1.0};
Point(30) = {-0.037109, 0.741827, 0, 1.0};
Point(31) = {-0.037500, 0.740227, 0, 1.0};
Point(32) = {-0.037065, 0.738638, 0, 1.0};
Point(33) = {-0.035816, 0.737139, 0, 1.0};
Point(34) = {-0.033772, 0.735740, 0, 1.0};
Point(35) = {-0.030963, 0.734445, 0, 1.0};
Point(36) = {-0.027424, 0.733266, 0, 1.0};
Point(37) = {-0.023193, 0.732211, 0, 1.0};
Point(38) = {-0.018321, 0.731281, 0, 1.0};
Point(39) = {-0.012861, 0.730479, 0, 1.0};
Point(40) = {-0.006869, 0.729799, 0, 1.0};
Point(41) = {-0.000409, 0.729229, 0, 1.0};
Point(42) = {0.006452, 0.728758, 0, 1.0};
Point(43) = {0.013644, 0.728366, 0, 1.0};
Point(44) = {0.021093, 0.728032, 0, 1.0};
Point(45) = {0.028789, 0.727754, 0, 1.0};
Point(46) = {0.036588, 0.727549, 0, 1.0};
Point(47) = {0.044401, 0.727405, 0, 1.0};
Point(48) = {0.052141, 0.727303, 0, 1.0};
Point(49) = {0.059722, 0.727235, 0, 1.0};
Point(50) = {0.067062, 0.727193, 0, 1.0};
Point(51) = {0.074080, 0.727168, 0, 1.0};
Point(52) = {0.080695, 0.727157, 0, 1.0};
Point(53) = {0.086836, 0.727158, 0, 1.0};
Point(54) = {0.092432, 0.727166, 0, 1.0};
Point(55) = {0.097420, 0.727183, 0, 1.0};
Point(56) = {0.101742, 0.727205, 0, 1.0};
Point(57) = {0.105351, 0.727227, 0, 1.0};
Point(58) = {0.108201, 0.727250, 0, 1.0};
Point(59) = {0.110262, 0.727268, 0, 1.0};
Point(60) = {0.111508, 0.727281, 0, 1.0};
Point(61) = {0.111941, 0.727283, 0, 1.0};
Point(62) = {-0.111978, -0.727723, 0, 1.0};
Point(63) = {-0.111596, -0.727850, 0, 1.0};
Point(64) = {-0.110409, -0.728231, 0, 1.0};
Point(65) = {-0.108442, -0.728856, 0, 1.0};
Point(66) = {-0.105717, -0.729709, 0, 1.0};
Point(67) = {-0.102259, -0.730768, 0, 1.0};
Point(68) = {-0.098104, -0.732005, 0, 1.0};
Point(69) = {-0.093292, -0.733393, 0, 1.0};
Point(70) = {-0.087873, -0.734901, 0, 1.0};
Point(71) = {-0.081904, -0.736496, 0, 1.0};
Point(72) = {-0.075445, -0.738145, 0, 1.0};
Point(73) = {-0.068567, -0.739813, 0, 1.0};
Point(74) = {-0.061340, -0.741465, 0, 1.0};
Point(75) = {-0.053843, -0.743069, 0, 1.0};
Point(76) = {-0.046158, -0.744590, 0, 1.0};
Point(77) = {-0.038366, -0.745992, 0, 1.0};
Point(78) = {-0.030553, -0.747248, 0, 1.0};
Point(79) = {-0.022801, -0.748322, 0, 1.0};
Point(80) = {-0.015129, -0.749165, 0, 1.0};
Point(81) = {-0.007692, -0.749727, 0, 1.0};
Point(82) = {-0.000576, -0.750000, 0, 1.0};
Point(83) = {0.006132, -0.749984, 0, 1.0};
Point(84) = {0.012353, -0.749689, 0, 1.0};
Point(85) = {0.018015, -0.749127, 0, 1.0};
Point(86) = {0.023049, -0.748328, 0, 1.0};
Point(87) = {0.027397, -0.747317, 0, 1.0};
Point(88) = {0.031010, -0.746131, 0, 1.0};
Point(89) = {0.033851, -0.744802, 0, 1.0};
Point(90) = {0.035891, -0.743358, 0, 1.0};
Point(91) = {0.037109, -0.741827, 0, 1.0};
Point(92) = {0.037500, -0.740227, 0, 1.0};
Point(93) = {0.037065, -0.738638, 0, 1.0};
Point(94) = {0.035816, -0.737139, 0, 1.0};
Point(95) = {0.033772, -0.735740, 0, 1.0};
Point(96) = {0.030963, -0.734445, 0, 1.0};
Point(97) = {0.027424, -0.733266, 0, 1.0};
Point(98) = {0.023193, -0.732211, 0, 1.0};
Point(99) = {0.018321, -0.731281, 0, 1.0};
Point(100) = {0.012861, -0.730479, 0, 1.0};
Point(101) = {0.006869, -0.729799, 0, 1.0};
Point(102) = {0.000409, -0.729229, 0, 1.0};
Point(103) = {-0.006452, -0.728758, 0, 1.0};
Point(104) = {-0.013644, -0.728366, 0, 1.0};
Point(105) = {-0.021093, -0.728032, 0, 1.0};
Point(106) = {-0.028789, -0.727754, 0, 1.0};
Point(107) = {-0.036588, -0.727549, 0, 1.0};
Point(108) = {-0.044401, -0.727405, 0, 1.0};
Point(109) = {-0.052141, -0.727303, 0, 1.0};
Point(110) = {-0.059722, -0.727235, 0, 1.0};
Point(111) = {-0.067062, -0.727193, 0, 1.0};
Point(112) = {-0.074080, -0.727168, 0, 1.0};
Point(113) = {-0.080695, -0.727157, 0, 1.0};
Point(114) = {-0.086836, -0.727158, 0, 1.0};
Point(115) = {-0.092432, -0.727166, 0, 1.0};
Point(116) = {-0.097420, -0.727183, 0, 1.0};
Point(117) = {-0.101742, -0.727205, 0, 1.0};
Point(118) = {-0.105351, -0.727227, 0, 1.0};
Point(119) = {-0.108201, -0.727250, 0, 1.0};
Point(120) = {-0.110262, -0.727268, 0, 1.0};
Point(121) = {-0.111508, -0.727281, 0, 1.0};
Point(122) = {-0.111941, -0.727283, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:102};
Spline(7) = {102:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
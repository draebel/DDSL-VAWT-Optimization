SetFactory("OpenCASCADE");

Point(1) = {0.074967, 0.741172, 0, 1.0};
Point(2) = {0.072476, 0.741444, 0, 1.0};
Point(3) = {0.069997, 0.741736, 0, 1.0};
Point(4) = {0.067520, 0.742049, 0, 1.0};
Point(5) = {0.065043, 0.742384, 0, 1.0};
Point(6) = {0.062570, 0.742739, 0, 1.0};
Point(7) = {0.060105, 0.743111, 0, 1.0};
Point(8) = {0.057648, 0.743500, 0, 1.0};
Point(9) = {0.055198, 0.743908, 0, 1.0};
Point(10) = {0.052757, 0.744335, 0, 1.0};
Point(11) = {0.050298, 0.744784, 0, 1.0};
Point(12) = {0.047829, 0.745249, 0, 1.0};
Point(13) = {0.045369, 0.745717, 0, 1.0};
Point(14) = {0.042898, 0.746184, 0, 1.0};
Point(15) = {0.040418, 0.746640, 0, 1.0};
Point(16) = {0.037939, 0.747077, 0, 1.0};
Point(17) = {0.035456, 0.747493, 0, 1.0};
Point(18) = {0.032974, 0.747884, 0, 1.0};
Point(19) = {0.030493, 0.748251, 0, 1.0};
Point(20) = {0.028009, 0.748591, 0, 1.0};
Point(21) = {0.025521, 0.748901, 0, 1.0};
Point(22) = {0.023039, 0.749175, 0, 1.0};
Point(23) = {0.020521, 0.749411, 0, 1.0};
Point(24) = {0.017994, 0.749603, 0, 1.0};
Point(25) = {0.015486, 0.749750, 0, 1.0};
Point(26) = {0.012969, 0.749859, 0, 1.0};
Point(27) = {0.010468, 0.749933, 0, 1.0};
Point(28) = {0.005462, 0.750000, 0, 1.0};
Point(29) = {0.000434, 0.749974, 0, 1.0};
Point(30) = {-0.002091, 0.749926, 0, 1.0};
Point(31) = {-0.004616, 0.749850, 0, 1.0};
Point(32) = {-0.007153, 0.749737, 0, 1.0};
Point(33) = {-0.009696, 0.749575, 0, 1.0};
Point(34) = {-0.012268, 0.749336, 0, 1.0};
Point(35) = {-0.014864, 0.748980, 0, 1.0};
Point(36) = {-0.017509, 0.748439, 0, 1.0};
Point(37) = {-0.020164, 0.747619, 0, 1.0};
Point(38) = {-0.022568, 0.746470, 0, 1.0};
Point(39) = {-0.024020, 0.745387, 0, 1.0};
Point(40) = {-0.024690, 0.744598, 0, 1.0};
Point(41) = {-0.025000, 0.743741, 0, 1.0};
Point(42) = {-0.024677, 0.742973, 0, 1.0};
Point(43) = {-0.023846, 0.742470, 0, 1.0};
Point(44) = {-0.023630, 0.742387, 0, 1.0};
Point(45) = {-0.022786, 0.742133, 0, 1.0};
Point(46) = {-0.021716, 0.741909, 0, 1.0};
Point(47) = {-0.019108, 0.741584, 0, 1.0};
Point(48) = {-0.016755, 0.741426, 0, 1.0};
Point(49) = {-0.014400, 0.741323, 0, 1.0};
Point(50) = {-0.012002, 0.741234, 0, 1.0};
Point(51) = {-0.009584, 0.741133, 0, 1.0};
Point(52) = {-0.007140, 0.741011, 0, 1.0};
Point(53) = {-0.004693, 0.740871, 0, 1.0};
Point(54) = {-0.002235, 0.740725, 0, 1.0};
Point(55) = {0.000222, 0.740578, 0, 1.0};
Point(56) = {0.005156, 0.740291, 0, 1.0};
Point(57) = {0.010108, 0.740025, 0, 1.0};
Point(58) = {0.012585, 0.739906, 0, 1.0};
Point(59) = {0.015047, 0.739800, 0, 1.0};
Point(60) = {0.017515, 0.739710, 0, 1.0};
Point(61) = {0.019965, 0.739638, 0, 1.0};
Point(62) = {0.022422, 0.739584, 0, 1.0};
Point(63) = {0.024915, 0.739553, 0, 1.0};
Point(64) = {0.027401, 0.739540, 0, 1.0};
Point(65) = {0.029890, 0.739543, 0, 1.0};
Point(66) = {0.032382, 0.739559, 0, 1.0};
Point(67) = {0.034874, 0.739584, 0, 1.0};
Point(68) = {0.037363, 0.739615, 0, 1.0};
Point(69) = {0.039855, 0.739650, 0, 1.0};
Point(70) = {0.042345, 0.739685, 0, 1.0};
Point(71) = {0.044845, 0.739720, 0, 1.0};
Point(72) = {0.047356, 0.739756, 0, 1.0};
Point(73) = {0.049857, 0.739795, 0, 1.0};
Point(74) = {0.052370, 0.739839, 0, 1.0};
Point(75) = {0.054901, 0.739894, 0, 1.0};
Point(76) = {0.057425, 0.739963, 0, 1.0};
Point(77) = {0.059942, 0.740053, 0, 1.0};
Point(78) = {0.062454, 0.740165, 0, 1.0};
Point(79) = {0.064959, 0.740303, 0, 1.0};
Point(80) = {0.067460, 0.740446, 0, 1.0};
Point(81) = {0.069963, 0.740593, 0, 1.0};
Point(82) = {0.072465, 0.740762, 0, 1.0};
Point(83) = {0.074963, 0.741014, 0, 1.0};
Point(84) = {-0.074967, -0.741172, 0, 1.0};
Point(85) = {-0.072476, -0.741444, 0, 1.0};
Point(86) = {-0.069997, -0.741736, 0, 1.0};
Point(87) = {-0.067520, -0.742049, 0, 1.0};
Point(88) = {-0.065043, -0.742384, 0, 1.0};
Point(89) = {-0.062570, -0.742739, 0, 1.0};
Point(90) = {-0.060105, -0.743111, 0, 1.0};
Point(91) = {-0.057648, -0.743500, 0, 1.0};
Point(92) = {-0.055198, -0.743908, 0, 1.0};
Point(93) = {-0.052757, -0.744335, 0, 1.0};
Point(94) = {-0.050298, -0.744784, 0, 1.0};
Point(95) = {-0.047829, -0.745249, 0, 1.0};
Point(96) = {-0.045369, -0.745717, 0, 1.0};
Point(97) = {-0.042898, -0.746184, 0, 1.0};
Point(98) = {-0.040418, -0.746640, 0, 1.0};
Point(99) = {-0.037939, -0.747077, 0, 1.0};
Point(100) = {-0.035456, -0.747493, 0, 1.0};
Point(101) = {-0.032974, -0.747884, 0, 1.0};
Point(102) = {-0.030493, -0.748251, 0, 1.0};
Point(103) = {-0.028009, -0.748591, 0, 1.0};
Point(104) = {-0.025521, -0.748901, 0, 1.0};
Point(105) = {-0.023039, -0.749175, 0, 1.0};
Point(106) = {-0.020521, -0.749411, 0, 1.0};
Point(107) = {-0.017994, -0.749603, 0, 1.0};
Point(108) = {-0.015486, -0.749750, 0, 1.0};
Point(109) = {-0.012969, -0.749859, 0, 1.0};
Point(110) = {-0.010468, -0.749933, 0, 1.0};
Point(111) = {-0.005462, -0.750000, 0, 1.0};
Point(112) = {-0.000434, -0.749974, 0, 1.0};
Point(113) = {0.002091, -0.749926, 0, 1.0};
Point(114) = {0.004616, -0.749850, 0, 1.0};
Point(115) = {0.007153, -0.749737, 0, 1.0};
Point(116) = {0.009696, -0.749575, 0, 1.0};
Point(117) = {0.012268, -0.749336, 0, 1.0};
Point(118) = {0.014864, -0.748980, 0, 1.0};
Point(119) = {0.017509, -0.748439, 0, 1.0};
Point(120) = {0.020164, -0.747619, 0, 1.0};
Point(121) = {0.022568, -0.746470, 0, 1.0};
Point(122) = {0.024020, -0.745387, 0, 1.0};
Point(123) = {0.024690, -0.744598, 0, 1.0};
Point(124) = {0.025000, -0.743741, 0, 1.0};
Point(125) = {0.024677, -0.742973, 0, 1.0};
Point(126) = {0.023846, -0.742470, 0, 1.0};
Point(127) = {0.023630, -0.742387, 0, 1.0};
Point(128) = {0.022786, -0.742133, 0, 1.0};
Point(129) = {0.021716, -0.741909, 0, 1.0};
Point(130) = {0.019108, -0.741584, 0, 1.0};
Point(131) = {0.016755, -0.741426, 0, 1.0};
Point(132) = {0.014400, -0.741323, 0, 1.0};
Point(133) = {0.012002, -0.741234, 0, 1.0};
Point(134) = {0.009584, -0.741133, 0, 1.0};
Point(135) = {0.007140, -0.741011, 0, 1.0};
Point(136) = {0.004693, -0.740871, 0, 1.0};
Point(137) = {0.002235, -0.740725, 0, 1.0};
Point(138) = {-0.000222, -0.740578, 0, 1.0};
Point(139) = {-0.005156, -0.740291, 0, 1.0};
Point(140) = {-0.010108, -0.740025, 0, 1.0};
Point(141) = {-0.012585, -0.739906, 0, 1.0};
Point(142) = {-0.015047, -0.739800, 0, 1.0};
Point(143) = {-0.017515, -0.739710, 0, 1.0};
Point(144) = {-0.019965, -0.739638, 0, 1.0};
Point(145) = {-0.022422, -0.739584, 0, 1.0};
Point(146) = {-0.024915, -0.739553, 0, 1.0};
Point(147) = {-0.027401, -0.739540, 0, 1.0};
Point(148) = {-0.029890, -0.739543, 0, 1.0};
Point(149) = {-0.032382, -0.739559, 0, 1.0};
Point(150) = {-0.034874, -0.739584, 0, 1.0};
Point(151) = {-0.037363, -0.739615, 0, 1.0};
Point(152) = {-0.039855, -0.739650, 0, 1.0};
Point(153) = {-0.042345, -0.739685, 0, 1.0};
Point(154) = {-0.044845, -0.739720, 0, 1.0};
Point(155) = {-0.047356, -0.739756, 0, 1.0};
Point(156) = {-0.049857, -0.739795, 0, 1.0};
Point(157) = {-0.052370, -0.739839, 0, 1.0};
Point(158) = {-0.054901, -0.739894, 0, 1.0};
Point(159) = {-0.057425, -0.739963, 0, 1.0};
Point(160) = {-0.059942, -0.740053, 0, 1.0};
Point(161) = {-0.062454, -0.740165, 0, 1.0};
Point(162) = {-0.064959, -0.740303, 0, 1.0};
Point(163) = {-0.067460, -0.740446, 0, 1.0};
Point(164) = {-0.069963, -0.740593, 0, 1.0};
Point(165) = {-0.072465, -0.740762, 0, 1.0};
Point(166) = {-0.074963, -0.741014, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:56};
Spline(3) = {56:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:112};
Spline(6) = {112:139};
Spline(7) = {139:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
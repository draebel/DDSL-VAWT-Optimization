SetFactory("OpenCASCADE");

Point(1) = {0.074977, 0.736758, 0, 1.0};
Point(2) = {0.071240, 0.737166, 0, 1.0};
Point(3) = {0.067522, 0.737604, 0, 1.0};
Point(4) = {0.063806, 0.738074, 0, 1.0};
Point(5) = {0.060091, 0.738576, 0, 1.0};
Point(6) = {0.056381, 0.739108, 0, 1.0};
Point(7) = {0.052684, 0.739666, 0, 1.0};
Point(8) = {0.048998, 0.740250, 0, 1.0};
Point(9) = {0.045323, 0.740863, 0, 1.0};
Point(10) = {0.041661, 0.741503, 0, 1.0};
Point(11) = {0.037973, 0.742177, 0, 1.0};
Point(12) = {0.034270, 0.742874, 0, 1.0};
Point(13) = {0.030580, 0.743576, 0, 1.0};
Point(14) = {0.026874, 0.744276, 0, 1.0};
Point(15) = {0.023154, 0.744960, 0, 1.0};
Point(16) = {0.019434, 0.745616, 0, 1.0};
Point(17) = {0.015710, 0.746240, 0, 1.0};
Point(18) = {0.011988, 0.746827, 0, 1.0};
Point(19) = {0.008266, 0.747376, 0, 1.0};
Point(20) = {0.004540, 0.747886, 0, 1.0};
Point(21) = {0.000808, 0.748352, 0, 1.0};
Point(22) = {-0.002915, 0.748763, 0, 1.0};
Point(23) = {-0.006692, 0.749117, 0, 1.0};
Point(24) = {-0.010482, 0.749405, 0, 1.0};
Point(25) = {-0.014245, 0.749625, 0, 1.0};
Point(26) = {-0.018020, 0.749788, 0, 1.0};
Point(27) = {-0.021772, 0.749900, 0, 1.0};
Point(28) = {-0.029281, 0.750000, 0, 1.0};
Point(29) = {-0.036823, 0.749961, 0, 1.0};
Point(30) = {-0.040610, 0.749889, 0, 1.0};
Point(31) = {-0.044397, 0.749775, 0, 1.0};
Point(32) = {-0.048204, 0.749606, 0, 1.0};
Point(33) = {-0.052018, 0.749362, 0, 1.0};
Point(34) = {-0.055875, 0.749004, 0, 1.0};
Point(35) = {-0.059769, 0.748470, 0, 1.0};
Point(36) = {-0.063737, 0.747659, 0, 1.0};
Point(37) = {-0.067719, 0.746429, 0, 1.0};
Point(38) = {-0.071326, 0.744705, 0, 1.0};
Point(39) = {-0.073504, 0.743080, 0, 1.0};
Point(40) = {-0.074509, 0.741897, 0, 1.0};
Point(41) = {-0.074974, 0.740611, 0, 1.0};
Point(42) = {-0.074488, 0.739459, 0, 1.0};
Point(43) = {-0.073242, 0.738705, 0, 1.0};
Point(44) = {-0.072919, 0.738580, 0, 1.0};
Point(45) = {-0.071653, 0.738200, 0, 1.0};
Point(46) = {-0.070048, 0.737864, 0, 1.0};
Point(47) = {-0.066136, 0.737375, 0, 1.0};
Point(48) = {-0.062606, 0.737139, 0, 1.0};
Point(49) = {-0.059074, 0.736985, 0, 1.0};
Point(50) = {-0.055477, 0.736851, 0, 1.0};
Point(51) = {-0.051849, 0.736700, 0, 1.0};
Point(52) = {-0.048183, 0.736516, 0, 1.0};
Point(53) = {-0.044513, 0.736307, 0, 1.0};
Point(54) = {-0.040827, 0.736087, 0, 1.0};
Point(55) = {-0.037141, 0.735866, 0, 1.0};
Point(56) = {-0.029740, 0.735436, 0, 1.0};
Point(57) = {-0.022311, 0.735038, 0, 1.0};
Point(58) = {-0.018596, 0.734860, 0, 1.0};
Point(59) = {-0.014903, 0.734700, 0, 1.0};
Point(60) = {-0.011201, 0.734564, 0, 1.0};
Point(61) = {-0.007527, 0.734456, 0, 1.0};
Point(62) = {-0.003840, 0.734377, 0, 1.0};
Point(63) = {-0.000102, 0.734329, 0, 1.0};
Point(64) = {0.003627, 0.734310, 0, 1.0};
Point(65) = {0.007362, 0.734315, 0, 1.0};
Point(66) = {0.011100, 0.734339, 0, 1.0};
Point(67) = {0.014837, 0.734376, 0, 1.0};
Point(68) = {0.018571, 0.734423, 0, 1.0};
Point(69) = {0.022308, 0.734474, 0, 1.0};
Point(70) = {0.026044, 0.734527, 0, 1.0};
Point(71) = {0.029794, 0.734580, 0, 1.0};
Point(72) = {0.033560, 0.734634, 0, 1.0};
Point(73) = {0.037312, 0.734692, 0, 1.0};
Point(74) = {0.041081, 0.734758, 0, 1.0};
Point(75) = {0.044878, 0.734841, 0, 1.0};
Point(76) = {0.048663, 0.734945, 0, 1.0};
Point(77) = {0.052440, 0.735079, 0, 1.0};
Point(78) = {0.056207, 0.735247, 0, 1.0};
Point(79) = {0.059964, 0.735454, 0, 1.0};
Point(80) = {0.063717, 0.735670, 0, 1.0};
Point(81) = {0.067470, 0.735890, 0, 1.0};
Point(82) = {0.071223, 0.736142, 0, 1.0};
Point(83) = {0.074971, 0.736521, 0, 1.0};
Point(84) = {-0.074977, -0.736758, 0, 1.0};
Point(85) = {-0.071240, -0.737166, 0, 1.0};
Point(86) = {-0.067522, -0.737604, 0, 1.0};
Point(87) = {-0.063806, -0.738074, 0, 1.0};
Point(88) = {-0.060091, -0.738576, 0, 1.0};
Point(89) = {-0.056381, -0.739108, 0, 1.0};
Point(90) = {-0.052684, -0.739666, 0, 1.0};
Point(91) = {-0.048998, -0.740250, 0, 1.0};
Point(92) = {-0.045323, -0.740863, 0, 1.0};
Point(93) = {-0.041661, -0.741503, 0, 1.0};
Point(94) = {-0.037973, -0.742177, 0, 1.0};
Point(95) = {-0.034270, -0.742874, 0, 1.0};
Point(96) = {-0.030580, -0.743576, 0, 1.0};
Point(97) = {-0.026874, -0.744276, 0, 1.0};
Point(98) = {-0.023154, -0.744960, 0, 1.0};
Point(99) = {-0.019434, -0.745616, 0, 1.0};
Point(100) = {-0.015710, -0.746240, 0, 1.0};
Point(101) = {-0.011988, -0.746827, 0, 1.0};
Point(102) = {-0.008266, -0.747376, 0, 1.0};
Point(103) = {-0.004540, -0.747886, 0, 1.0};
Point(104) = {-0.000808, -0.748352, 0, 1.0};
Point(105) = {0.002915, -0.748763, 0, 1.0};
Point(106) = {0.006692, -0.749117, 0, 1.0};
Point(107) = {0.010482, -0.749405, 0, 1.0};
Point(108) = {0.014245, -0.749625, 0, 1.0};
Point(109) = {0.018020, -0.749788, 0, 1.0};
Point(110) = {0.021772, -0.749900, 0, 1.0};
Point(111) = {0.029281, -0.750000, 0, 1.0};
Point(112) = {0.036823, -0.749961, 0, 1.0};
Point(113) = {0.040610, -0.749889, 0, 1.0};
Point(114) = {0.044397, -0.749775, 0, 1.0};
Point(115) = {0.048204, -0.749606, 0, 1.0};
Point(116) = {0.052018, -0.749362, 0, 1.0};
Point(117) = {0.055875, -0.749004, 0, 1.0};
Point(118) = {0.059769, -0.748470, 0, 1.0};
Point(119) = {0.063737, -0.747659, 0, 1.0};
Point(120) = {0.067719, -0.746429, 0, 1.0};
Point(121) = {0.071326, -0.744705, 0, 1.0};
Point(122) = {0.073504, -0.743080, 0, 1.0};
Point(123) = {0.074509, -0.741897, 0, 1.0};
Point(124) = {0.074974, -0.740611, 0, 1.0};
Point(125) = {0.074488, -0.739459, 0, 1.0};
Point(126) = {0.073242, -0.738705, 0, 1.0};
Point(127) = {0.072919, -0.738580, 0, 1.0};
Point(128) = {0.071653, -0.738200, 0, 1.0};
Point(129) = {0.070048, -0.737864, 0, 1.0};
Point(130) = {0.066136, -0.737375, 0, 1.0};
Point(131) = {0.062606, -0.737139, 0, 1.0};
Point(132) = {0.059074, -0.736985, 0, 1.0};
Point(133) = {0.055477, -0.736851, 0, 1.0};
Point(134) = {0.051849, -0.736700, 0, 1.0};
Point(135) = {0.048183, -0.736516, 0, 1.0};
Point(136) = {0.044513, -0.736307, 0, 1.0};
Point(137) = {0.040827, -0.736087, 0, 1.0};
Point(138) = {0.037141, -0.735866, 0, 1.0};
Point(139) = {0.029740, -0.735436, 0, 1.0};
Point(140) = {0.022311, -0.735038, 0, 1.0};
Point(141) = {0.018596, -0.734860, 0, 1.0};
Point(142) = {0.014903, -0.734700, 0, 1.0};
Point(143) = {0.011201, -0.734564, 0, 1.0};
Point(144) = {0.007527, -0.734456, 0, 1.0};
Point(145) = {0.003840, -0.734377, 0, 1.0};
Point(146) = {0.000102, -0.734329, 0, 1.0};
Point(147) = {-0.003627, -0.734310, 0, 1.0};
Point(148) = {-0.007362, -0.734315, 0, 1.0};
Point(149) = {-0.011100, -0.734339, 0, 1.0};
Point(150) = {-0.014837, -0.734376, 0, 1.0};
Point(151) = {-0.018571, -0.734423, 0, 1.0};
Point(152) = {-0.022308, -0.734474, 0, 1.0};
Point(153) = {-0.026044, -0.734527, 0, 1.0};
Point(154) = {-0.029794, -0.734580, 0, 1.0};
Point(155) = {-0.033560, -0.734634, 0, 1.0};
Point(156) = {-0.037312, -0.734692, 0, 1.0};
Point(157) = {-0.041081, -0.734758, 0, 1.0};
Point(158) = {-0.044878, -0.734841, 0, 1.0};
Point(159) = {-0.048663, -0.734945, 0, 1.0};
Point(160) = {-0.052440, -0.735079, 0, 1.0};
Point(161) = {-0.056207, -0.735247, 0, 1.0};
Point(162) = {-0.059964, -0.735454, 0, 1.0};
Point(163) = {-0.063717, -0.735670, 0, 1.0};
Point(164) = {-0.067470, -0.735890, 0, 1.0};
Point(165) = {-0.071223, -0.736142, 0, 1.0};
Point(166) = {-0.074971, -0.736521, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:56};
Spline(3) = {56:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:112};
Spline(6) = {112:139};
Spline(7) = {139:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
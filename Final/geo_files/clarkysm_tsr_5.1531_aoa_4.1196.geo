SetFactory("OpenCASCADE");

Point(1) = {0.074892, 0.729367, 0, 1.0};
Point(2) = {0.073923, 0.729680, 0, 1.0};
Point(3) = {0.069529, 0.731058, 0, 1.0};
Point(4) = {0.064007, 0.732728, 0, 1.0};
Point(5) = {0.057446, 0.734637, 0, 1.0};
Point(6) = {0.049960, 0.736720, 0, 1.0};
Point(7) = {0.041671, 0.738898, 0, 1.0};
Point(8) = {0.032718, 0.741085, 0, 1.0};
Point(9) = {0.023251, 0.743187, 0, 1.0};
Point(10) = {0.013427, 0.745115, 0, 1.0};
Point(11) = {0.003412, 0.746790, 0, 1.0};
Point(12) = {-0.006625, 0.748148, 0, 1.0};
Point(13) = {-0.016516, 0.749146, 0, 1.0};
Point(14) = {-0.021353, 0.749504, 0, 1.0};
Point(15) = {-0.026090, 0.749764, 0, 1.0};
Point(16) = {-0.030707, 0.749929, 0, 1.0};
Point(17) = {-0.035184, 0.750000, 0, 1.0};
Point(18) = {-0.039502, 0.749966, 0, 1.0};
Point(19) = {-0.043643, 0.749813, 0, 1.0};
Point(20) = {-0.047591, 0.749522, 0, 1.0};
Point(21) = {-0.051331, 0.749088, 0, 1.0};
Point(22) = {-0.054846, 0.748524, 0, 1.0};
Point(23) = {-0.058119, 0.747856, 0, 1.0};
Point(24) = {-0.061130, 0.747121, 0, 1.0};
Point(25) = {-0.063870, 0.746346, 0, 1.0};
Point(26) = {-0.066325, 0.745535, 0, 1.0};
Point(27) = {-0.068483, 0.744681, 0, 1.0};
Point(28) = {-0.070339, 0.743766, 0, 1.0};
Point(29) = {-0.071884, 0.742791, 0, 1.0};
Point(30) = {-0.073110, 0.741778, 0, 1.0};
Point(31) = {-0.074011, 0.740773, 0, 1.0};
Point(32) = {-0.074578, 0.739822, 0, 1.0};
Point(33) = {-0.074806, 0.738955, 0, 1.0};
Point(34) = {-0.074697, 0.738171, 0, 1.0};
Point(35) = {-0.074250, 0.737448, 0, 1.0};
Point(36) = {-0.073471, 0.736773, 0, 1.0};
Point(37) = {-0.072362, 0.736142, 0, 1.0};
Point(38) = {-0.070930, 0.735561, 0, 1.0};
Point(39) = {-0.069177, 0.735038, 0, 1.0};
Point(40) = {-0.067114, 0.734579, 0, 1.0};
Point(41) = {-0.064747, 0.734171, 0, 1.0};
Point(42) = {-0.062089, 0.733804, 0, 1.0};
Point(43) = {-0.059155, 0.733464, 0, 1.0};
Point(44) = {-0.055954, 0.733151, 0, 1.0};
Point(45) = {-0.052500, 0.732866, 0, 1.0};
Point(46) = {-0.048809, 0.732612, 0, 1.0};
Point(47) = {-0.044898, 0.732387, 0, 1.0};
Point(48) = {-0.040783, 0.732186, 0, 1.0};
Point(49) = {-0.036480, 0.732001, 0, 1.0};
Point(50) = {-0.032010, 0.731826, 0, 1.0};
Point(51) = {-0.027395, 0.731650, 0, 1.0};
Point(52) = {-0.022652, 0.731475, 0, 1.0};
Point(53) = {-0.017802, 0.731295, 0, 1.0};
Point(54) = {-0.007866, 0.730927, 0, 1.0};
Point(55) = {0.002243, 0.730550, 0, 1.0};
Point(56) = {0.012351, 0.730173, 0, 1.0};
Point(57) = {0.022287, 0.729800, 0, 1.0};
Point(58) = {0.031880, 0.729442, 0, 1.0};
Point(59) = {0.040965, 0.729103, 0, 1.0};
Point(60) = {0.049388, 0.728786, 0, 1.0};
Point(61) = {0.057004, 0.728496, 0, 1.0};
Point(62) = {0.063684, 0.728241, 0, 1.0};
Point(63) = {0.069311, 0.728033, 0, 1.0};
Point(64) = {0.073794, 0.727884, 0, 1.0};
Point(65) = {0.074782, 0.727849, 0, 1.0};
Point(66) = {-0.074892, -0.729367, 0, 1.0};
Point(67) = {-0.073923, -0.729680, 0, 1.0};
Point(68) = {-0.069529, -0.731058, 0, 1.0};
Point(69) = {-0.064007, -0.732728, 0, 1.0};
Point(70) = {-0.057446, -0.734637, 0, 1.0};
Point(71) = {-0.049960, -0.736720, 0, 1.0};
Point(72) = {-0.041671, -0.738898, 0, 1.0};
Point(73) = {-0.032718, -0.741085, 0, 1.0};
Point(74) = {-0.023251, -0.743187, 0, 1.0};
Point(75) = {-0.013427, -0.745115, 0, 1.0};
Point(76) = {-0.003412, -0.746790, 0, 1.0};
Point(77) = {0.006625, -0.748148, 0, 1.0};
Point(78) = {0.016516, -0.749146, 0, 1.0};
Point(79) = {0.021353, -0.749504, 0, 1.0};
Point(80) = {0.026090, -0.749764, 0, 1.0};
Point(81) = {0.030707, -0.749929, 0, 1.0};
Point(82) = {0.035184, -0.750000, 0, 1.0};
Point(83) = {0.039502, -0.749966, 0, 1.0};
Point(84) = {0.043643, -0.749813, 0, 1.0};
Point(85) = {0.047591, -0.749522, 0, 1.0};
Point(86) = {0.051331, -0.749088, 0, 1.0};
Point(87) = {0.054846, -0.748524, 0, 1.0};
Point(88) = {0.058119, -0.747856, 0, 1.0};
Point(89) = {0.061130, -0.747121, 0, 1.0};
Point(90) = {0.063870, -0.746346, 0, 1.0};
Point(91) = {0.066325, -0.745535, 0, 1.0};
Point(92) = {0.068483, -0.744681, 0, 1.0};
Point(93) = {0.070339, -0.743766, 0, 1.0};
Point(94) = {0.071884, -0.742791, 0, 1.0};
Point(95) = {0.073110, -0.741778, 0, 1.0};
Point(96) = {0.074011, -0.740773, 0, 1.0};
Point(97) = {0.074578, -0.739822, 0, 1.0};
Point(98) = {0.074806, -0.738955, 0, 1.0};
Point(99) = {0.074697, -0.738171, 0, 1.0};
Point(100) = {0.074250, -0.737448, 0, 1.0};
Point(101) = {0.073471, -0.736773, 0, 1.0};
Point(102) = {0.072362, -0.736142, 0, 1.0};
Point(103) = {0.070930, -0.735561, 0, 1.0};
Point(104) = {0.069177, -0.735038, 0, 1.0};
Point(105) = {0.067114, -0.734579, 0, 1.0};
Point(106) = {0.064747, -0.734171, 0, 1.0};
Point(107) = {0.062089, -0.733804, 0, 1.0};
Point(108) = {0.059155, -0.733464, 0, 1.0};
Point(109) = {0.055954, -0.733151, 0, 1.0};
Point(110) = {0.052500, -0.732866, 0, 1.0};
Point(111) = {0.048809, -0.732612, 0, 1.0};
Point(112) = {0.044898, -0.732387, 0, 1.0};
Point(113) = {0.040783, -0.732186, 0, 1.0};
Point(114) = {0.036480, -0.732001, 0, 1.0};
Point(115) = {0.032010, -0.731826, 0, 1.0};
Point(116) = {0.027395, -0.731650, 0, 1.0};
Point(117) = {0.022652, -0.731475, 0, 1.0};
Point(118) = {0.017802, -0.731295, 0, 1.0};
Point(119) = {0.007866, -0.730927, 0, 1.0};
Point(120) = {-0.002243, -0.730550, 0, 1.0};
Point(121) = {-0.012351, -0.730173, 0, 1.0};
Point(122) = {-0.022287, -0.729800, 0, 1.0};
Point(123) = {-0.031880, -0.729442, 0, 1.0};
Point(124) = {-0.040965, -0.729103, 0, 1.0};
Point(125) = {-0.049388, -0.728786, 0, 1.0};
Point(126) = {-0.057004, -0.728496, 0, 1.0};
Point(127) = {-0.063684, -0.728241, 0, 1.0};
Point(128) = {-0.069311, -0.728033, 0, 1.0};
Point(129) = {-0.073794, -0.727884, 0, 1.0};
Point(130) = {-0.074782, -0.727849, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:49};
Spline(3) = {49:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:81};
Spline(6) = {81:114};
Spline(7) = {114:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {36.00000000, 15.00000000, 0, 1.0};
Point(134) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074752, 0.737414, 0, 1.0};
Point(2) = {0.074428, 0.737479, 0, 1.0};
Point(3) = {0.073475, 0.737685, 0, 1.0};
Point(4) = {0.071936, 0.738050, 0, 1.0};
Point(5) = {0.069862, 0.738572, 0, 1.0};
Point(6) = {0.067312, 0.739237, 0, 1.0};
Point(7) = {0.064334, 0.740019, 0, 1.0};
Point(8) = {0.060977, 0.740882, 0, 1.0};
Point(9) = {0.057278, 0.741796, 0, 1.0};
Point(10) = {0.053274, 0.742727, 0, 1.0};
Point(11) = {0.048992, 0.743656, 0, 1.0};
Point(12) = {0.044475, 0.744574, 0, 1.0};
Point(13) = {0.039771, 0.745468, 0, 1.0};
Point(14) = {0.034935, 0.746324, 0, 1.0};
Point(15) = {0.030018, 0.747125, 0, 1.0};
Point(16) = {0.025070, 0.747854, 0, 1.0};
Point(17) = {0.020142, 0.748496, 0, 1.0};
Point(18) = {0.015285, 0.749038, 0, 1.0};
Point(19) = {0.010542, 0.749467, 0, 1.0};
Point(20) = {0.005959, 0.749774, 0, 1.0};
Point(21) = {0.001578, 0.749953, 0, 1.0};
Point(22) = {-0.002565, 0.750000, 0, 1.0};
Point(23) = {-0.006433, 0.749913, 0, 1.0};
Point(24) = {-0.009993, 0.749695, 0, 1.0};
Point(25) = {-0.013216, 0.749350, 0, 1.0};
Point(26) = {-0.016080, 0.748884, 0, 1.0};
Point(27) = {-0.018567, 0.748309, 0, 1.0};
Point(28) = {-0.020663, 0.747641, 0, 1.0};
Point(29) = {-0.022359, 0.746904, 0, 1.0};
Point(30) = {-0.023646, 0.746131, 0, 1.0};
Point(31) = {-0.024517, 0.745357, 0, 1.0};
Point(32) = {-0.024966, 0.744635, 0, 1.0};
Point(33) = {-0.024901, 0.744051, 0, 1.0};
Point(34) = {-0.024255, 0.743559, 0, 1.0};
Point(35) = {-0.023053, 0.743085, 0, 1.0};
Point(36) = {-0.021318, 0.742648, 0, 1.0};
Point(37) = {-0.019066, 0.742252, 0, 1.0};
Point(38) = {-0.016314, 0.741901, 0, 1.0};
Point(39) = {-0.013088, 0.741590, 0, 1.0};
Point(40) = {-0.009417, 0.741316, 0, 1.0};
Point(41) = {-0.005339, 0.741073, 0, 1.0};
Point(42) = {-0.000897, 0.740856, 0, 1.0};
Point(43) = {0.003859, 0.740658, 0, 1.0};
Point(44) = {0.008875, 0.740472, 0, 1.0};
Point(45) = {0.014092, 0.740295, 0, 1.0};
Point(46) = {0.019449, 0.740123, 0, 1.0};
Point(47) = {0.024881, 0.739954, 0, 1.0};
Point(48) = {0.030328, 0.739787, 0, 1.0};
Point(49) = {0.035724, 0.739617, 0, 1.0};
Point(50) = {0.041008, 0.739445, 0, 1.0};
Point(51) = {0.046116, 0.739266, 0, 1.0};
Point(52) = {0.050988, 0.739077, 0, 1.0};
Point(53) = {0.055559, 0.738873, 0, 1.0};
Point(54) = {0.059766, 0.738654, 0, 1.0};
Point(55) = {0.063551, 0.738425, 0, 1.0};
Point(56) = {0.066858, 0.738190, 0, 1.0};
Point(57) = {0.069637, 0.737960, 0, 1.0};
Point(58) = {0.071846, 0.737751, 0, 1.0};
Point(59) = {0.073450, 0.737577, 0, 1.0};
Point(60) = {0.074425, 0.737458, 0, 1.0};
Point(61) = {-0.074752, -0.737414, 0, 1.0};
Point(62) = {-0.074428, -0.737479, 0, 1.0};
Point(63) = {-0.073475, -0.737685, 0, 1.0};
Point(64) = {-0.071936, -0.738050, 0, 1.0};
Point(65) = {-0.069862, -0.738572, 0, 1.0};
Point(66) = {-0.067312, -0.739237, 0, 1.0};
Point(67) = {-0.064334, -0.740019, 0, 1.0};
Point(68) = {-0.060977, -0.740882, 0, 1.0};
Point(69) = {-0.057278, -0.741796, 0, 1.0};
Point(70) = {-0.053274, -0.742727, 0, 1.0};
Point(71) = {-0.048992, -0.743656, 0, 1.0};
Point(72) = {-0.044475, -0.744574, 0, 1.0};
Point(73) = {-0.039771, -0.745468, 0, 1.0};
Point(74) = {-0.034935, -0.746324, 0, 1.0};
Point(75) = {-0.030018, -0.747125, 0, 1.0};
Point(76) = {-0.025070, -0.747854, 0, 1.0};
Point(77) = {-0.020142, -0.748496, 0, 1.0};
Point(78) = {-0.015285, -0.749038, 0, 1.0};
Point(79) = {-0.010542, -0.749467, 0, 1.0};
Point(80) = {-0.005959, -0.749774, 0, 1.0};
Point(81) = {-0.001578, -0.749953, 0, 1.0};
Point(82) = {0.002565, -0.750000, 0, 1.0};
Point(83) = {0.006433, -0.749913, 0, 1.0};
Point(84) = {0.009993, -0.749695, 0, 1.0};
Point(85) = {0.013216, -0.749350, 0, 1.0};
Point(86) = {0.016080, -0.748884, 0, 1.0};
Point(87) = {0.018567, -0.748309, 0, 1.0};
Point(88) = {0.020663, -0.747641, 0, 1.0};
Point(89) = {0.022359, -0.746904, 0, 1.0};
Point(90) = {0.023646, -0.746131, 0, 1.0};
Point(91) = {0.024517, -0.745357, 0, 1.0};
Point(92) = {0.024966, -0.744635, 0, 1.0};
Point(93) = {0.024901, -0.744051, 0, 1.0};
Point(94) = {0.024255, -0.743559, 0, 1.0};
Point(95) = {0.023053, -0.743085, 0, 1.0};
Point(96) = {0.021318, -0.742648, 0, 1.0};
Point(97) = {0.019066, -0.742252, 0, 1.0};
Point(98) = {0.016314, -0.741901, 0, 1.0};
Point(99) = {0.013088, -0.741590, 0, 1.0};
Point(100) = {0.009417, -0.741316, 0, 1.0};
Point(101) = {0.005339, -0.741073, 0, 1.0};
Point(102) = {0.000897, -0.740856, 0, 1.0};
Point(103) = {-0.003859, -0.740658, 0, 1.0};
Point(104) = {-0.008875, -0.740472, 0, 1.0};
Point(105) = {-0.014092, -0.740295, 0, 1.0};
Point(106) = {-0.019449, -0.740123, 0, 1.0};
Point(107) = {-0.024881, -0.739954, 0, 1.0};
Point(108) = {-0.030328, -0.739787, 0, 1.0};
Point(109) = {-0.035724, -0.739617, 0, 1.0};
Point(110) = {-0.041008, -0.739445, 0, 1.0};
Point(111) = {-0.046116, -0.739266, 0, 1.0};
Point(112) = {-0.050988, -0.739077, 0, 1.0};
Point(113) = {-0.055559, -0.738873, 0, 1.0};
Point(114) = {-0.059766, -0.738654, 0, 1.0};
Point(115) = {-0.063551, -0.738425, 0, 1.0};
Point(116) = {-0.066858, -0.738190, 0, 1.0};
Point(117) = {-0.069637, -0.737960, 0, 1.0};
Point(118) = {-0.071846, -0.737751, 0, 1.0};
Point(119) = {-0.073450, -0.737577, 0, 1.0};
Point(120) = {-0.074425, -0.737458, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
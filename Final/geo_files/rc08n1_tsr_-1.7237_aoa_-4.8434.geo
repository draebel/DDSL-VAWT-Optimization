SetFactory("OpenCASCADE");

Point(1) = {0.074685, 0.748621, 0, 1.0};
Point(2) = {0.071060, 0.748564, 0, 1.0};
Point(3) = {0.067096, 0.748533, 0, 1.0};
Point(4) = {0.063133, 0.748533, 0, 1.0};
Point(5) = {0.059179, 0.748561, 0, 1.0};
Point(6) = {0.055229, 0.748619, 0, 1.0};
Point(7) = {0.051285, 0.748709, 0, 1.0};
Point(8) = {0.047350, 0.748832, 0, 1.0};
Point(9) = {0.043388, 0.748985, 0, 1.0};
Point(10) = {0.039410, 0.749158, 0, 1.0};
Point(11) = {0.035444, 0.749340, 0, 1.0};
Point(12) = {0.031464, 0.749514, 0, 1.0};
Point(13) = {0.027474, 0.749670, 0, 1.0};
Point(14) = {0.023487, 0.749800, 0, 1.0};
Point(15) = {0.019501, 0.749901, 0, 1.0};
Point(16) = {0.015520, 0.749968, 0, 1.0};
Point(17) = {0.011545, 0.750000, 0, 1.0};
Point(18) = {0.007568, 0.749997, 0, 1.0};
Point(19) = {0.003593, 0.749955, 0, 1.0};
Point(20) = {-0.000378, 0.749871, 0, 1.0};
Point(21) = {-0.004349, 0.749742, 0, 1.0};
Point(22) = {-0.008321, 0.749565, 0, 1.0};
Point(23) = {-0.012289, 0.749341, 0, 1.0};
Point(24) = {-0.016253, 0.749070, 0, 1.0};
Point(25) = {-0.020218, 0.748756, 0, 1.0};
Point(26) = {-0.028137, 0.747996, 0, 1.0};
Point(27) = {-0.036044, 0.747048, 0, 1.0};
Point(28) = {-0.039994, 0.746494, 0, 1.0};
Point(29) = {-0.043952, 0.745874, 0, 1.0};
Point(30) = {-0.047912, 0.745184, 0, 1.0};
Point(31) = {-0.051852, 0.744420, 0, 1.0};
Point(32) = {-0.055780, 0.743572, 0, 1.0};
Point(33) = {-0.059692, 0.742638, 0, 1.0};
Point(34) = {-0.063584, 0.741571, 0, 1.0};
Point(35) = {-0.067522, 0.740275, 0, 1.0};
Point(36) = {-0.071317, 0.738624, 0, 1.0};
Point(37) = {-0.073354, 0.737345, 0, 1.0};
Point(38) = {-0.074289, 0.736453, 0, 1.0};
Point(39) = {-0.074645, 0.735874, 0, 1.0};
Point(40) = {-0.074732, 0.735396, 0, 1.0};
Point(41) = {-0.074005, 0.734690, 0, 1.0};
Point(42) = {-0.073608, 0.734588, 0, 1.0};
Point(43) = {-0.072239, 0.734568, 0, 1.0};
Point(44) = {-0.070403, 0.734402, 0, 1.0};
Point(45) = {-0.066404, 0.734436, 0, 1.0};
Point(46) = {-0.062518, 0.734498, 0, 1.0};
Point(47) = {-0.058568, 0.734569, 0, 1.0};
Point(48) = {-0.054628, 0.734652, 0, 1.0};
Point(49) = {-0.050697, 0.734756, 0, 1.0};
Point(50) = {-0.046772, 0.734879, 0, 1.0};
Point(51) = {-0.042861, 0.735016, 0, 1.0};
Point(52) = {-0.038944, 0.735168, 0, 1.0};
Point(53) = {-0.035014, 0.735333, 0, 1.0};
Point(54) = {-0.027153, 0.735712, 0, 1.0};
Point(55) = {-0.019292, 0.736162, 0, 1.0};
Point(56) = {-0.015363, 0.736417, 0, 1.0};
Point(57) = {-0.011431, 0.736694, 0, 1.0};
Point(58) = {-0.007501, 0.736995, 0, 1.0};
Point(59) = {-0.003575, 0.737323, 0, 1.0};
Point(60) = {0.000354, 0.737680, 0, 1.0};
Point(61) = {0.004284, 0.738064, 0, 1.0};
Point(62) = {0.008214, 0.738475, 0, 1.0};
Point(63) = {0.012143, 0.738908, 0, 1.0};
Point(64) = {0.016073, 0.739361, 0, 1.0};
Point(65) = {0.020000, 0.739831, 0, 1.0};
Point(66) = {0.023925, 0.740308, 0, 1.0};
Point(67) = {0.027851, 0.740790, 0, 1.0};
Point(68) = {0.031776, 0.741267, 0, 1.0};
Point(69) = {0.035714, 0.741734, 0, 1.0};
Point(70) = {0.039668, 0.742190, 0, 1.0};
Point(71) = {0.043608, 0.742640, 0, 1.0};
Point(72) = {0.047563, 0.743096, 0, 1.0};
Point(73) = {0.051539, 0.743579, 0, 1.0};
Point(74) = {0.055501, 0.744101, 0, 1.0};
Point(75) = {0.059452, 0.744666, 0, 1.0};
Point(76) = {0.063389, 0.745268, 0, 1.0};
Point(77) = {0.067313, 0.745895, 0, 1.0};
Point(78) = {0.071235, 0.746532, 0, 1.0};
Point(79) = {0.074812, 0.747122, 0, 1.0};
Point(80) = {-0.074685, -0.748621, 0, 1.0};
Point(81) = {-0.071060, -0.748564, 0, 1.0};
Point(82) = {-0.067096, -0.748533, 0, 1.0};
Point(83) = {-0.063133, -0.748533, 0, 1.0};
Point(84) = {-0.059179, -0.748561, 0, 1.0};
Point(85) = {-0.055229, -0.748619, 0, 1.0};
Point(86) = {-0.051285, -0.748709, 0, 1.0};
Point(87) = {-0.047350, -0.748832, 0, 1.0};
Point(88) = {-0.043388, -0.748985, 0, 1.0};
Point(89) = {-0.039410, -0.749158, 0, 1.0};
Point(90) = {-0.035444, -0.749340, 0, 1.0};
Point(91) = {-0.031464, -0.749514, 0, 1.0};
Point(92) = {-0.027474, -0.749670, 0, 1.0};
Point(93) = {-0.023487, -0.749800, 0, 1.0};
Point(94) = {-0.019501, -0.749901, 0, 1.0};
Point(95) = {-0.015520, -0.749968, 0, 1.0};
Point(96) = {-0.011545, -0.750000, 0, 1.0};
Point(97) = {-0.007568, -0.749997, 0, 1.0};
Point(98) = {-0.003593, -0.749955, 0, 1.0};
Point(99) = {0.000378, -0.749871, 0, 1.0};
Point(100) = {0.004349, -0.749742, 0, 1.0};
Point(101) = {0.008321, -0.749565, 0, 1.0};
Point(102) = {0.012289, -0.749341, 0, 1.0};
Point(103) = {0.016253, -0.749070, 0, 1.0};
Point(104) = {0.020218, -0.748756, 0, 1.0};
Point(105) = {0.028137, -0.747996, 0, 1.0};
Point(106) = {0.036044, -0.747048, 0, 1.0};
Point(107) = {0.039994, -0.746494, 0, 1.0};
Point(108) = {0.043952, -0.745874, 0, 1.0};
Point(109) = {0.047912, -0.745184, 0, 1.0};
Point(110) = {0.051852, -0.744420, 0, 1.0};
Point(111) = {0.055780, -0.743572, 0, 1.0};
Point(112) = {0.059692, -0.742638, 0, 1.0};
Point(113) = {0.063584, -0.741571, 0, 1.0};
Point(114) = {0.067522, -0.740275, 0, 1.0};
Point(115) = {0.071317, -0.738624, 0, 1.0};
Point(116) = {0.073354, -0.737345, 0, 1.0};
Point(117) = {0.074289, -0.736453, 0, 1.0};
Point(118) = {0.074645, -0.735874, 0, 1.0};
Point(119) = {0.074732, -0.735396, 0, 1.0};
Point(120) = {0.074005, -0.734690, 0, 1.0};
Point(121) = {0.073608, -0.734588, 0, 1.0};
Point(122) = {0.072239, -0.734568, 0, 1.0};
Point(123) = {0.070403, -0.734402, 0, 1.0};
Point(124) = {0.066404, -0.734436, 0, 1.0};
Point(125) = {0.062518, -0.734498, 0, 1.0};
Point(126) = {0.058568, -0.734569, 0, 1.0};
Point(127) = {0.054628, -0.734652, 0, 1.0};
Point(128) = {0.050697, -0.734756, 0, 1.0};
Point(129) = {0.046772, -0.734879, 0, 1.0};
Point(130) = {0.042861, -0.735016, 0, 1.0};
Point(131) = {0.038944, -0.735168, 0, 1.0};
Point(132) = {0.035014, -0.735333, 0, 1.0};
Point(133) = {0.027153, -0.735712, 0, 1.0};
Point(134) = {0.019292, -0.736162, 0, 1.0};
Point(135) = {0.015363, -0.736417, 0, 1.0};
Point(136) = {0.011431, -0.736694, 0, 1.0};
Point(137) = {0.007501, -0.736995, 0, 1.0};
Point(138) = {0.003575, -0.737323, 0, 1.0};
Point(139) = {-0.000354, -0.737680, 0, 1.0};
Point(140) = {-0.004284, -0.738064, 0, 1.0};
Point(141) = {-0.008214, -0.738475, 0, 1.0};
Point(142) = {-0.012143, -0.738908, 0, 1.0};
Point(143) = {-0.016073, -0.739361, 0, 1.0};
Point(144) = {-0.020000, -0.739831, 0, 1.0};
Point(145) = {-0.023925, -0.740308, 0, 1.0};
Point(146) = {-0.027851, -0.740790, 0, 1.0};
Point(147) = {-0.031776, -0.741267, 0, 1.0};
Point(148) = {-0.035714, -0.741734, 0, 1.0};
Point(149) = {-0.039668, -0.742190, 0, 1.0};
Point(150) = {-0.043608, -0.742640, 0, 1.0};
Point(151) = {-0.047563, -0.743096, 0, 1.0};
Point(152) = {-0.051539, -0.743579, 0, 1.0};
Point(153) = {-0.055501, -0.744101, 0, 1.0};
Point(154) = {-0.059452, -0.744666, 0, 1.0};
Point(155) = {-0.063389, -0.745268, 0, 1.0};
Point(156) = {-0.067313, -0.745895, 0, 1.0};
Point(157) = {-0.071235, -0.746532, 0, 1.0};
Point(158) = {-0.074812, -0.747122, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:106};
Spline(6) = {106:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {36.00000000, 15.00000000, 0, 1.0};
Point(162) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
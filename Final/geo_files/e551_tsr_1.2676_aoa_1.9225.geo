SetFactory("OpenCASCADE");

Point(1) = {0.075015, 0.730645, 0, 1.0};
Point(2) = {0.073269, 0.731116, 0, 1.0};
Point(3) = {0.069162, 0.732245, 0, 1.0};
Point(4) = {0.064305, 0.733572, 0, 1.0};
Point(5) = {0.058789, 0.735074, 0, 1.0};
Point(6) = {0.052713, 0.736721, 0, 1.0};
Point(7) = {0.046179, 0.738468, 0, 1.0};
Point(8) = {0.039280, 0.740265, 0, 1.0};
Point(9) = {0.032108, 0.742057, 0, 1.0};
Point(10) = {0.024748, 0.743785, 0, 1.0};
Point(11) = {0.017279, 0.745394, 0, 1.0};
Point(12) = {0.009776, 0.746835, 0, 1.0};
Point(13) = {0.002305, 0.748059, 0, 1.0};
Point(14) = {-0.005070, 0.749022, 0, 1.0};
Point(15) = {-0.012289, 0.749683, 0, 1.0};
Point(16) = {-0.019322, 0.750000, 0, 1.0};
Point(17) = {-0.026155, 0.749972, 0, 1.0};
Point(18) = {-0.032756, 0.749629, 0, 1.0};
Point(19) = {-0.039075, 0.749012, 0, 1.0};
Point(20) = {-0.045044, 0.748150, 0, 1.0};
Point(21) = {-0.050604, 0.747070, 0, 1.0};
Point(22) = {-0.055698, 0.745795, 0, 1.0};
Point(23) = {-0.060278, 0.744355, 0, 1.0};
Point(24) = {-0.064300, 0.742781, 0, 1.0};
Point(25) = {-0.067725, 0.741109, 0, 1.0};
Point(26) = {-0.070523, 0.739379, 0, 1.0};
Point(27) = {-0.072667, 0.737643, 0, 1.0};
Point(28) = {-0.074131, 0.735962, 0, 1.0};
Point(29) = {-0.074684, 0.734981, 0, 1.0};
Point(30) = {-0.074849, 0.734533, 0, 1.0};
Point(31) = {-0.074919, 0.734250, 0, 1.0};
Point(32) = {-0.074958, 0.733981, 0, 1.0};
Point(33) = {-0.074962, 0.733851, 0, 1.0};
Point(34) = {-0.074958, 0.733729, 0, 1.0};
Point(35) = {-0.074940, 0.733612, 0, 1.0};
Point(36) = {-0.074907, 0.733498, 0, 1.0};
Point(37) = {-0.074858, 0.733381, 0, 1.0};
Point(38) = {-0.074796, 0.733263, 0, 1.0};
Point(39) = {-0.074642, 0.733021, 0, 1.0};
Point(40) = {-0.074445, 0.732773, 0, 1.0};
Point(41) = {-0.074085, 0.732391, 0, 1.0};
Point(42) = {-0.073516, 0.731896, 0, 1.0};
Point(43) = {-0.071458, 0.730560, 0, 1.0};
Point(44) = {-0.068621, 0.729213, 0, 1.0};
Point(45) = {-0.065057, 0.727893, 0, 1.0};
Point(46) = {-0.060811, 0.726622, 0, 1.0};
Point(47) = {-0.055939, 0.725423, 0, 1.0};
Point(48) = {-0.050505, 0.724319, 0, 1.0};
Point(49) = {-0.044590, 0.723336, 0, 1.0};
Point(50) = {-0.038265, 0.722513, 0, 1.0};
Point(51) = {-0.031612, 0.721887, 0, 1.0};
Point(52) = {-0.024715, 0.721535, 0, 1.0};
Point(53) = {-0.017582, 0.721554, 0, 1.0};
Point(54) = {-0.010159, 0.721968, 0, 1.0};
Point(55) = {-0.002407, 0.722714, 0, 1.0};
Point(56) = {0.005649, 0.723664, 0, 1.0};
Point(57) = {0.013911, 0.724708, 0, 1.0};
Point(58) = {0.022263, 0.725766, 0, 1.0};
Point(59) = {0.030575, 0.726763, 0, 1.0};
Point(60) = {0.038711, 0.727641, 0, 1.0};
Point(61) = {0.046523, 0.728355, 0, 1.0};
Point(62) = {0.053862, 0.728876, 0, 1.0};
Point(63) = {0.060575, 0.729193, 0, 1.0};
Point(64) = {0.066524, 0.729319, 0, 1.0};
Point(65) = {0.071579, 0.729285, 0, 1.0};
Point(66) = {0.074965, 0.729177, 0, 1.0};
Point(67) = {-0.075015, -0.730645, 0, 1.0};
Point(68) = {-0.073269, -0.731116, 0, 1.0};
Point(69) = {-0.069162, -0.732245, 0, 1.0};
Point(70) = {-0.064305, -0.733572, 0, 1.0};
Point(71) = {-0.058789, -0.735074, 0, 1.0};
Point(72) = {-0.052713, -0.736721, 0, 1.0};
Point(73) = {-0.046179, -0.738468, 0, 1.0};
Point(74) = {-0.039280, -0.740265, 0, 1.0};
Point(75) = {-0.032108, -0.742057, 0, 1.0};
Point(76) = {-0.024748, -0.743785, 0, 1.0};
Point(77) = {-0.017279, -0.745394, 0, 1.0};
Point(78) = {-0.009776, -0.746835, 0, 1.0};
Point(79) = {-0.002305, -0.748059, 0, 1.0};
Point(80) = {0.005070, -0.749022, 0, 1.0};
Point(81) = {0.012289, -0.749683, 0, 1.0};
Point(82) = {0.019322, -0.750000, 0, 1.0};
Point(83) = {0.026155, -0.749972, 0, 1.0};
Point(84) = {0.032756, -0.749629, 0, 1.0};
Point(85) = {0.039075, -0.749012, 0, 1.0};
Point(86) = {0.045044, -0.748150, 0, 1.0};
Point(87) = {0.050604, -0.747070, 0, 1.0};
Point(88) = {0.055698, -0.745795, 0, 1.0};
Point(89) = {0.060278, -0.744355, 0, 1.0};
Point(90) = {0.064300, -0.742781, 0, 1.0};
Point(91) = {0.067725, -0.741109, 0, 1.0};
Point(92) = {0.070523, -0.739379, 0, 1.0};
Point(93) = {0.072667, -0.737643, 0, 1.0};
Point(94) = {0.074131, -0.735962, 0, 1.0};
Point(95) = {0.074684, -0.734981, 0, 1.0};
Point(96) = {0.074849, -0.734533, 0, 1.0};
Point(97) = {0.074919, -0.734250, 0, 1.0};
Point(98) = {0.074958, -0.733981, 0, 1.0};
Point(99) = {0.074962, -0.733851, 0, 1.0};
Point(100) = {0.074958, -0.733729, 0, 1.0};
Point(101) = {0.074940, -0.733612, 0, 1.0};
Point(102) = {0.074907, -0.733498, 0, 1.0};
Point(103) = {0.074858, -0.733381, 0, 1.0};
Point(104) = {0.074796, -0.733263, 0, 1.0};
Point(105) = {0.074642, -0.733021, 0, 1.0};
Point(106) = {0.074445, -0.732773, 0, 1.0};
Point(107) = {0.074085, -0.732391, 0, 1.0};
Point(108) = {0.073516, -0.731896, 0, 1.0};
Point(109) = {0.071458, -0.730560, 0, 1.0};
Point(110) = {0.068621, -0.729213, 0, 1.0};
Point(111) = {0.065057, -0.727893, 0, 1.0};
Point(112) = {0.060811, -0.726622, 0, 1.0};
Point(113) = {0.055939, -0.725423, 0, 1.0};
Point(114) = {0.050505, -0.724319, 0, 1.0};
Point(115) = {0.044590, -0.723336, 0, 1.0};
Point(116) = {0.038265, -0.722513, 0, 1.0};
Point(117) = {0.031612, -0.721887, 0, 1.0};
Point(118) = {0.024715, -0.721535, 0, 1.0};
Point(119) = {0.017582, -0.721554, 0, 1.0};
Point(120) = {0.010159, -0.721968, 0, 1.0};
Point(121) = {0.002407, -0.722714, 0, 1.0};
Point(122) = {-0.005649, -0.723664, 0, 1.0};
Point(123) = {-0.013911, -0.724708, 0, 1.0};
Point(124) = {-0.022263, -0.725766, 0, 1.0};
Point(125) = {-0.030575, -0.726763, 0, 1.0};
Point(126) = {-0.038711, -0.727641, 0, 1.0};
Point(127) = {-0.046523, -0.728355, 0, 1.0};
Point(128) = {-0.053862, -0.728876, 0, 1.0};
Point(129) = {-0.060575, -0.729193, 0, 1.0};
Point(130) = {-0.066524, -0.729319, 0, 1.0};
Point(131) = {-0.071579, -0.729285, 0, 1.0};
Point(132) = {-0.074965, -0.729177, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074865, 0.743000, 0, 1.0};
Point(2) = {0.074516, 0.743080, 0, 1.0};
Point(3) = {0.073532, 0.743329, 0, 1.0};
Point(4) = {0.072020, 0.743715, 0, 1.0};
Point(5) = {0.070022, 0.744149, 0, 1.0};
Point(6) = {0.067521, 0.744594, 0, 1.0};
Point(7) = {0.064522, 0.745058, 0, 1.0};
Point(8) = {0.061070, 0.745550, 0, 1.0};
Point(9) = {0.057211, 0.746062, 0, 1.0};
Point(10) = {0.052998, 0.746591, 0, 1.0};
Point(11) = {0.048486, 0.747126, 0, 1.0};
Point(12) = {0.043735, 0.747658, 0, 1.0};
Point(13) = {0.038808, 0.748178, 0, 1.0};
Point(14) = {0.033770, 0.748670, 0, 1.0};
Point(15) = {0.028687, 0.749120, 0, 1.0};
Point(16) = {0.023628, 0.749508, 0, 1.0};
Point(17) = {0.018661, 0.749813, 0, 1.0};
Point(18) = {0.013856, 0.749997, 0, 1.0};
Point(19) = {0.009250, 0.750000, 0, 1.0};
Point(20) = {0.004838, 0.749790, 0, 1.0};
Point(21) = {0.000618, 0.749392, 0, 1.0};
Point(22) = {-0.003376, 0.748828, 0, 1.0};
Point(23) = {-0.007109, 0.748115, 0, 1.0};
Point(24) = {-0.010548, 0.747268, 0, 1.0};
Point(25) = {-0.013666, 0.746302, 0, 1.0};
Point(26) = {-0.016440, 0.745236, 0, 1.0};
Point(27) = {-0.018848, 0.744089, 0, 1.0};
Point(28) = {-0.020876, 0.742888, 0, 1.0};
Point(29) = {-0.022511, 0.741660, 0, 1.0};
Point(30) = {-0.023743, 0.740438, 0, 1.0};
Point(31) = {-0.024567, 0.739267, 0, 1.0};
Point(32) = {-0.024972, 0.738201, 0, 1.0};
Point(33) = {-0.025000, 0.737796, 0, 1.0};
Point(34) = {-0.024904, 0.737362, 0, 1.0};
Point(35) = {-0.024232, 0.736681, 0, 1.0};
Point(36) = {-0.022949, 0.736018, 0, 1.0};
Point(37) = {-0.021162, 0.735399, 0, 1.0};
Point(38) = {-0.018906, 0.734855, 0, 1.0};
Point(39) = {-0.016202, 0.734402, 0, 1.0};
Point(40) = {-0.013081, 0.734050, 0, 1.0};
Point(41) = {-0.009572, 0.733807, 0, 1.0};
Point(42) = {-0.005709, 0.733673, 0, 1.0};
Point(43) = {-0.001535, 0.733655, 0, 1.0};
Point(44) = {0.002907, 0.733749, 0, 1.0};
Point(45) = {0.007570, 0.733957, 0, 1.0};
Point(46) = {0.012401, 0.734276, 0, 1.0};
Point(47) = {0.017345, 0.734704, 0, 1.0};
Point(48) = {0.022347, 0.735247, 0, 1.0};
Point(49) = {0.027344, 0.735903, 0, 1.0};
Point(50) = {0.032256, 0.736711, 0, 1.0};
Point(51) = {0.037104, 0.737778, 0, 1.0};
Point(52) = {0.042039, 0.739055, 0, 1.0};
Point(53) = {0.047073, 0.740329, 0, 1.0};
Point(54) = {0.052070, 0.741448, 0, 1.0};
Point(55) = {0.056886, 0.742341, 0, 1.0};
Point(56) = {0.061384, 0.742965, 0, 1.0};
Point(57) = {0.065412, 0.743300, 0, 1.0};
Point(58) = {0.068814, 0.743381, 0, 1.0};
Point(59) = {0.071482, 0.743302, 0, 1.0};
Point(60) = {0.073374, 0.743164, 0, 1.0};
Point(61) = {0.074495, 0.743046, 0, 1.0};
Point(62) = {-0.074865, -0.743000, 0, 1.0};
Point(63) = {-0.074516, -0.743080, 0, 1.0};
Point(64) = {-0.073532, -0.743329, 0, 1.0};
Point(65) = {-0.072020, -0.743715, 0, 1.0};
Point(66) = {-0.070022, -0.744149, 0, 1.0};
Point(67) = {-0.067521, -0.744594, 0, 1.0};
Point(68) = {-0.064522, -0.745058, 0, 1.0};
Point(69) = {-0.061070, -0.745550, 0, 1.0};
Point(70) = {-0.057211, -0.746062, 0, 1.0};
Point(71) = {-0.052998, -0.746591, 0, 1.0};
Point(72) = {-0.048486, -0.747126, 0, 1.0};
Point(73) = {-0.043735, -0.747658, 0, 1.0};
Point(74) = {-0.038808, -0.748178, 0, 1.0};
Point(75) = {-0.033770, -0.748670, 0, 1.0};
Point(76) = {-0.028687, -0.749120, 0, 1.0};
Point(77) = {-0.023628, -0.749508, 0, 1.0};
Point(78) = {-0.018661, -0.749813, 0, 1.0};
Point(79) = {-0.013856, -0.749997, 0, 1.0};
Point(80) = {-0.009250, -0.750000, 0, 1.0};
Point(81) = {-0.004838, -0.749790, 0, 1.0};
Point(82) = {-0.000618, -0.749392, 0, 1.0};
Point(83) = {0.003376, -0.748828, 0, 1.0};
Point(84) = {0.007109, -0.748115, 0, 1.0};
Point(85) = {0.010548, -0.747268, 0, 1.0};
Point(86) = {0.013666, -0.746302, 0, 1.0};
Point(87) = {0.016440, -0.745236, 0, 1.0};
Point(88) = {0.018848, -0.744089, 0, 1.0};
Point(89) = {0.020876, -0.742888, 0, 1.0};
Point(90) = {0.022511, -0.741660, 0, 1.0};
Point(91) = {0.023743, -0.740438, 0, 1.0};
Point(92) = {0.024567, -0.739267, 0, 1.0};
Point(93) = {0.024972, -0.738201, 0, 1.0};
Point(94) = {0.025000, -0.737796, 0, 1.0};
Point(95) = {0.024904, -0.737362, 0, 1.0};
Point(96) = {0.024232, -0.736681, 0, 1.0};
Point(97) = {0.022949, -0.736018, 0, 1.0};
Point(98) = {0.021162, -0.735399, 0, 1.0};
Point(99) = {0.018906, -0.734855, 0, 1.0};
Point(100) = {0.016202, -0.734402, 0, 1.0};
Point(101) = {0.013081, -0.734050, 0, 1.0};
Point(102) = {0.009572, -0.733807, 0, 1.0};
Point(103) = {0.005709, -0.733673, 0, 1.0};
Point(104) = {0.001535, -0.733655, 0, 1.0};
Point(105) = {-0.002907, -0.733749, 0, 1.0};
Point(106) = {-0.007570, -0.733957, 0, 1.0};
Point(107) = {-0.012401, -0.734276, 0, 1.0};
Point(108) = {-0.017345, -0.734704, 0, 1.0};
Point(109) = {-0.022347, -0.735247, 0, 1.0};
Point(110) = {-0.027344, -0.735903, 0, 1.0};
Point(111) = {-0.032256, -0.736711, 0, 1.0};
Point(112) = {-0.037104, -0.737778, 0, 1.0};
Point(113) = {-0.042039, -0.739055, 0, 1.0};
Point(114) = {-0.047073, -0.740329, 0, 1.0};
Point(115) = {-0.052070, -0.741448, 0, 1.0};
Point(116) = {-0.056886, -0.742341, 0, 1.0};
Point(117) = {-0.061384, -0.742965, 0, 1.0};
Point(118) = {-0.065412, -0.743300, 0, 1.0};
Point(119) = {-0.068814, -0.743381, 0, 1.0};
Point(120) = {-0.071482, -0.743302, 0, 1.0};
Point(121) = {-0.073374, -0.743164, 0, 1.0};
Point(122) = {-0.074495, -0.743046, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
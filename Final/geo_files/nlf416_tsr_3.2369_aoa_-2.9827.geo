SetFactory("OpenCASCADE");

Point(1) = {0.074898, 0.739500, 0, 1.0};
Point(2) = {0.074375, 0.739620, 0, 1.0};
Point(3) = {0.072899, 0.739993, 0, 1.0};
Point(4) = {0.070632, 0.740572, 0, 1.0};
Point(5) = {0.067635, 0.741224, 0, 1.0};
Point(6) = {0.063883, 0.741891, 0, 1.0};
Point(7) = {0.059385, 0.742588, 0, 1.0};
Point(8) = {0.054207, 0.743326, 0, 1.0};
Point(9) = {0.048418, 0.744093, 0, 1.0};
Point(10) = {0.042099, 0.744886, 0, 1.0};
Point(11) = {0.035331, 0.745689, 0, 1.0};
Point(12) = {0.028204, 0.746487, 0, 1.0};
Point(13) = {0.020814, 0.747266, 0, 1.0};
Point(14) = {0.013256, 0.748005, 0, 1.0};
Point(15) = {0.005633, 0.748680, 0, 1.0};
Point(16) = {-0.001956, 0.749263, 0, 1.0};
Point(17) = {-0.009407, 0.749720, 0, 1.0};
Point(18) = {-0.016615, 0.749995, 0, 1.0};
Point(19) = {-0.023523, 0.750000, 0, 1.0};
Point(20) = {-0.030141, 0.749685, 0, 1.0};
Point(21) = {-0.036471, 0.749088, 0, 1.0};
Point(22) = {-0.042462, 0.748243, 0, 1.0};
Point(23) = {-0.048061, 0.747173, 0, 1.0};
Point(24) = {-0.053221, 0.745902, 0, 1.0};
Point(25) = {-0.057898, 0.744452, 0, 1.0};
Point(26) = {-0.062058, 0.742854, 0, 1.0};
Point(27) = {-0.065671, 0.741133, 0, 1.0};
Point(28) = {-0.068713, 0.739332, 0, 1.0};
Point(29) = {-0.071164, 0.737490, 0, 1.0};
Point(30) = {-0.073013, 0.735657, 0, 1.0};
Point(31) = {-0.074249, 0.733900, 0, 1.0};
Point(32) = {-0.074856, 0.732302, 0, 1.0};
Point(33) = {-0.074898, 0.731694, 0, 1.0};
Point(34) = {-0.074755, 0.731043, 0, 1.0};
Point(35) = {-0.073746, 0.730021, 0, 1.0};
Point(36) = {-0.071821, 0.729026, 0, 1.0};
Point(37) = {-0.069141, 0.728098, 0, 1.0};
Point(38) = {-0.065757, 0.727283, 0, 1.0};
Point(39) = {-0.061702, 0.726604, 0, 1.0};
Point(40) = {-0.057020, 0.726076, 0, 1.0};
Point(41) = {-0.051756, 0.725710, 0, 1.0};
Point(42) = {-0.045962, 0.725510, 0, 1.0};
Point(43) = {-0.039700, 0.725482, 0, 1.0};
Point(44) = {-0.033037, 0.725623, 0, 1.0};
Point(45) = {-0.026044, 0.725935, 0, 1.0};
Point(46) = {-0.018797, 0.726413, 0, 1.0};
Point(47) = {-0.011381, 0.727057, 0, 1.0};
Point(48) = {-0.003878, 0.727871, 0, 1.0};
Point(49) = {0.003618, 0.728855, 0, 1.0};
Point(50) = {0.010986, 0.730067, 0, 1.0};
Point(51) = {0.018258, 0.731667, 0, 1.0};
Point(52) = {0.025661, 0.733583, 0, 1.0};
Point(53) = {0.033211, 0.735493, 0, 1.0};
Point(54) = {0.040707, 0.737171, 0, 1.0};
Point(55) = {0.047931, 0.738512, 0, 1.0};
Point(56) = {0.054678, 0.739448, 0, 1.0};
Point(57) = {0.060720, 0.739950, 0, 1.0};
Point(58) = {0.065823, 0.740072, 0, 1.0};
Point(59) = {0.069825, 0.739953, 0, 1.0};
Point(60) = {0.072663, 0.739747, 0, 1.0};
Point(61) = {0.074344, 0.739568, 0, 1.0};
Point(62) = {-0.074898, -0.739500, 0, 1.0};
Point(63) = {-0.074375, -0.739620, 0, 1.0};
Point(64) = {-0.072899, -0.739993, 0, 1.0};
Point(65) = {-0.070632, -0.740572, 0, 1.0};
Point(66) = {-0.067635, -0.741224, 0, 1.0};
Point(67) = {-0.063883, -0.741891, 0, 1.0};
Point(68) = {-0.059385, -0.742588, 0, 1.0};
Point(69) = {-0.054207, -0.743326, 0, 1.0};
Point(70) = {-0.048418, -0.744093, 0, 1.0};
Point(71) = {-0.042099, -0.744886, 0, 1.0};
Point(72) = {-0.035331, -0.745689, 0, 1.0};
Point(73) = {-0.028204, -0.746487, 0, 1.0};
Point(74) = {-0.020814, -0.747266, 0, 1.0};
Point(75) = {-0.013256, -0.748005, 0, 1.0};
Point(76) = {-0.005633, -0.748680, 0, 1.0};
Point(77) = {0.001956, -0.749263, 0, 1.0};
Point(78) = {0.009407, -0.749720, 0, 1.0};
Point(79) = {0.016615, -0.749995, 0, 1.0};
Point(80) = {0.023523, -0.750000, 0, 1.0};
Point(81) = {0.030141, -0.749685, 0, 1.0};
Point(82) = {0.036471, -0.749088, 0, 1.0};
Point(83) = {0.042462, -0.748243, 0, 1.0};
Point(84) = {0.048061, -0.747173, 0, 1.0};
Point(85) = {0.053221, -0.745902, 0, 1.0};
Point(86) = {0.057898, -0.744452, 0, 1.0};
Point(87) = {0.062058, -0.742854, 0, 1.0};
Point(88) = {0.065671, -0.741133, 0, 1.0};
Point(89) = {0.068713, -0.739332, 0, 1.0};
Point(90) = {0.071164, -0.737490, 0, 1.0};
Point(91) = {0.073013, -0.735657, 0, 1.0};
Point(92) = {0.074249, -0.733900, 0, 1.0};
Point(93) = {0.074856, -0.732302, 0, 1.0};
Point(94) = {0.074898, -0.731694, 0, 1.0};
Point(95) = {0.074755, -0.731043, 0, 1.0};
Point(96) = {0.073746, -0.730021, 0, 1.0};
Point(97) = {0.071821, -0.729026, 0, 1.0};
Point(98) = {0.069141, -0.728098, 0, 1.0};
Point(99) = {0.065757, -0.727283, 0, 1.0};
Point(100) = {0.061702, -0.726604, 0, 1.0};
Point(101) = {0.057020, -0.726076, 0, 1.0};
Point(102) = {0.051756, -0.725710, 0, 1.0};
Point(103) = {0.045962, -0.725510, 0, 1.0};
Point(104) = {0.039700, -0.725482, 0, 1.0};
Point(105) = {0.033037, -0.725623, 0, 1.0};
Point(106) = {0.026044, -0.725935, 0, 1.0};
Point(107) = {0.018797, -0.726413, 0, 1.0};
Point(108) = {0.011381, -0.727057, 0, 1.0};
Point(109) = {0.003878, -0.727871, 0, 1.0};
Point(110) = {-0.003618, -0.728855, 0, 1.0};
Point(111) = {-0.010986, -0.730067, 0, 1.0};
Point(112) = {-0.018258, -0.731667, 0, 1.0};
Point(113) = {-0.025661, -0.733583, 0, 1.0};
Point(114) = {-0.033211, -0.735493, 0, 1.0};
Point(115) = {-0.040707, -0.737171, 0, 1.0};
Point(116) = {-0.047931, -0.738512, 0, 1.0};
Point(117) = {-0.054678, -0.739448, 0, 1.0};
Point(118) = {-0.060720, -0.739950, 0, 1.0};
Point(119) = {-0.065823, -0.740072, 0, 1.0};
Point(120) = {-0.069825, -0.739953, 0, 1.0};
Point(121) = {-0.072663, -0.739747, 0, 1.0};
Point(122) = {-0.074344, -0.739568, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
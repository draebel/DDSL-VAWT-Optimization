SetFactory("OpenCASCADE");

Point(1) = {0.149729, 0.735999, 0, 1.0};
Point(2) = {0.149032, 0.736159, 0, 1.0};
Point(3) = {0.147063, 0.736658, 0, 1.0};
Point(4) = {0.144041, 0.737429, 0, 1.0};
Point(5) = {0.140044, 0.738299, 0, 1.0};
Point(6) = {0.135041, 0.739187, 0, 1.0};
Point(7) = {0.129045, 0.740117, 0, 1.0};
Point(8) = {0.122140, 0.741101, 0, 1.0};
Point(9) = {0.114423, 0.742125, 0, 1.0};
Point(10) = {0.105996, 0.743182, 0, 1.0};
Point(11) = {0.096972, 0.744251, 0, 1.0};
Point(12) = {0.087470, 0.745316, 0, 1.0};
Point(13) = {0.077617, 0.746355, 0, 1.0};
Point(14) = {0.067540, 0.747340, 0, 1.0};
Point(15) = {0.057375, 0.748240, 0, 1.0};
Point(16) = {0.047257, 0.749017, 0, 1.0};
Point(17) = {0.037322, 0.749627, 0, 1.0};
Point(18) = {0.027712, 0.749993, 0, 1.0};
Point(19) = {0.018501, 0.750000, 0, 1.0};
Point(20) = {0.009677, 0.749580, 0, 1.0};
Point(21) = {0.001237, 0.748784, 0, 1.0};
Point(22) = {-0.006752, 0.747657, 0, 1.0};
Point(23) = {-0.014217, 0.746230, 0, 1.0};
Point(24) = {-0.021097, 0.744536, 0, 1.0};
Point(25) = {-0.027332, 0.742603, 0, 1.0};
Point(26) = {-0.032879, 0.740472, 0, 1.0};
Point(27) = {-0.037696, 0.738178, 0, 1.0};
Point(28) = {-0.041753, 0.735775, 0, 1.0};
Point(29) = {-0.045021, 0.733320, 0, 1.0};
Point(30) = {-0.047486, 0.730877, 0, 1.0};
Point(31) = {-0.049134, 0.728534, 0, 1.0};
Point(32) = {-0.049944, 0.726403, 0, 1.0};
Point(33) = {-0.050000, 0.725593, 0, 1.0};
Point(34) = {-0.049809, 0.724723, 0, 1.0};
Point(35) = {-0.048464, 0.723361, 0, 1.0};
Point(36) = {-0.045897, 0.722035, 0, 1.0};
Point(37) = {-0.042324, 0.720797, 0, 1.0};
Point(38) = {-0.037811, 0.719711, 0, 1.0};
Point(39) = {-0.032405, 0.718805, 0, 1.0};
Point(40) = {-0.026162, 0.718101, 0, 1.0};
Point(41) = {-0.019143, 0.717613, 0, 1.0};
Point(42) = {-0.011419, 0.717347, 0, 1.0};
Point(43) = {-0.003069, 0.717309, 0, 1.0};
Point(44) = {0.005815, 0.717498, 0, 1.0};
Point(45) = {0.015140, 0.717914, 0, 1.0};
Point(46) = {0.024802, 0.718551, 0, 1.0};
Point(47) = {0.034690, 0.719409, 0, 1.0};
Point(48) = {0.044694, 0.720495, 0, 1.0};
Point(49) = {0.054689, 0.721807, 0, 1.0};
Point(50) = {0.064512, 0.723422, 0, 1.0};
Point(51) = {0.074208, 0.725556, 0, 1.0};
Point(52) = {0.084079, 0.728111, 0, 1.0};
Point(53) = {0.094146, 0.730658, 0, 1.0};
Point(54) = {0.104141, 0.732895, 0, 1.0};
Point(55) = {0.113773, 0.734683, 0, 1.0};
Point(56) = {0.122768, 0.735930, 0, 1.0};
Point(57) = {0.130824, 0.736601, 0, 1.0};
Point(58) = {0.137629, 0.736763, 0, 1.0};
Point(59) = {0.142964, 0.736604, 0, 1.0};
Point(60) = {0.146748, 0.736329, 0, 1.0};
Point(61) = {0.148989, 0.736091, 0, 1.0};
Point(62) = {-0.149729, -0.735999, 0, 1.0};
Point(63) = {-0.149032, -0.736159, 0, 1.0};
Point(64) = {-0.147063, -0.736658, 0, 1.0};
Point(65) = {-0.144041, -0.737429, 0, 1.0};
Point(66) = {-0.140044, -0.738299, 0, 1.0};
Point(67) = {-0.135041, -0.739187, 0, 1.0};
Point(68) = {-0.129045, -0.740117, 0, 1.0};
Point(69) = {-0.122140, -0.741101, 0, 1.0};
Point(70) = {-0.114423, -0.742125, 0, 1.0};
Point(71) = {-0.105996, -0.743182, 0, 1.0};
Point(72) = {-0.096972, -0.744251, 0, 1.0};
Point(73) = {-0.087470, -0.745316, 0, 1.0};
Point(74) = {-0.077617, -0.746355, 0, 1.0};
Point(75) = {-0.067540, -0.747340, 0, 1.0};
Point(76) = {-0.057375, -0.748240, 0, 1.0};
Point(77) = {-0.047257, -0.749017, 0, 1.0};
Point(78) = {-0.037322, -0.749627, 0, 1.0};
Point(79) = {-0.027712, -0.749993, 0, 1.0};
Point(80) = {-0.018501, -0.750000, 0, 1.0};
Point(81) = {-0.009677, -0.749580, 0, 1.0};
Point(82) = {-0.001237, -0.748784, 0, 1.0};
Point(83) = {0.006752, -0.747657, 0, 1.0};
Point(84) = {0.014217, -0.746230, 0, 1.0};
Point(85) = {0.021097, -0.744536, 0, 1.0};
Point(86) = {0.027332, -0.742603, 0, 1.0};
Point(87) = {0.032879, -0.740472, 0, 1.0};
Point(88) = {0.037696, -0.738178, 0, 1.0};
Point(89) = {0.041753, -0.735775, 0, 1.0};
Point(90) = {0.045021, -0.733320, 0, 1.0};
Point(91) = {0.047486, -0.730877, 0, 1.0};
Point(92) = {0.049134, -0.728534, 0, 1.0};
Point(93) = {0.049944, -0.726403, 0, 1.0};
Point(94) = {0.050000, -0.725593, 0, 1.0};
Point(95) = {0.049809, -0.724723, 0, 1.0};
Point(96) = {0.048464, -0.723361, 0, 1.0};
Point(97) = {0.045897, -0.722035, 0, 1.0};
Point(98) = {0.042324, -0.720797, 0, 1.0};
Point(99) = {0.037811, -0.719711, 0, 1.0};
Point(100) = {0.032405, -0.718805, 0, 1.0};
Point(101) = {0.026162, -0.718101, 0, 1.0};
Point(102) = {0.019143, -0.717613, 0, 1.0};
Point(103) = {0.011419, -0.717347, 0, 1.0};
Point(104) = {0.003069, -0.717309, 0, 1.0};
Point(105) = {-0.005815, -0.717498, 0, 1.0};
Point(106) = {-0.015140, -0.717914, 0, 1.0};
Point(107) = {-0.024802, -0.718551, 0, 1.0};
Point(108) = {-0.034690, -0.719409, 0, 1.0};
Point(109) = {-0.044694, -0.720495, 0, 1.0};
Point(110) = {-0.054689, -0.721807, 0, 1.0};
Point(111) = {-0.064512, -0.723422, 0, 1.0};
Point(112) = {-0.074208, -0.725556, 0, 1.0};
Point(113) = {-0.084079, -0.728111, 0, 1.0};
Point(114) = {-0.094146, -0.730658, 0, 1.0};
Point(115) = {-0.104141, -0.732895, 0, 1.0};
Point(116) = {-0.113773, -0.734683, 0, 1.0};
Point(117) = {-0.122768, -0.735930, 0, 1.0};
Point(118) = {-0.130824, -0.736601, 0, 1.0};
Point(119) = {-0.137629, -0.736763, 0, 1.0};
Point(120) = {-0.142964, -0.736604, 0, 1.0};
Point(121) = {-0.146748, -0.736329, 0, 1.0};
Point(122) = {-0.148989, -0.736091, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
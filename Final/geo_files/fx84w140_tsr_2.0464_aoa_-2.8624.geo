SetFactory("OpenCASCADE");

Point(1) = {0.074822, 0.738162, 0, 1.0};
Point(2) = {0.072798, 0.738532, 0, 1.0};
Point(3) = {0.070027, 0.739064, 0, 1.0};
Point(4) = {0.066971, 0.739673, 0, 1.0};
Point(5) = {0.063640, 0.740360, 0, 1.0};
Point(6) = {0.060049, 0.741109, 0, 1.0};
Point(7) = {0.056216, 0.741917, 0, 1.0};
Point(8) = {0.052157, 0.742765, 0, 1.0};
Point(9) = {0.047891, 0.743636, 0, 1.0};
Point(10) = {0.043433, 0.744521, 0, 1.0};
Point(11) = {0.038805, 0.745395, 0, 1.0};
Point(12) = {0.034030, 0.746241, 0, 1.0};
Point(13) = {0.029127, 0.747042, 0, 1.0};
Point(14) = {0.024118, 0.747776, 0, 1.0};
Point(15) = {0.019025, 0.748429, 0, 1.0};
Point(16) = {0.013869, 0.748989, 0, 1.0};
Point(17) = {0.008675, 0.749433, 0, 1.0};
Point(18) = {0.003466, 0.749757, 0, 1.0};
Point(19) = {-0.001738, 0.749951, 0, 1.0};
Point(20) = {-0.006911, 0.750000, 0, 1.0};
Point(21) = {-0.012035, 0.749912, 0, 1.0};
Point(22) = {-0.017084, 0.749679, 0, 1.0};
Point(23) = {-0.022037, 0.749299, 0, 1.0};
Point(24) = {-0.026875, 0.748784, 0, 1.0};
Point(25) = {-0.031575, 0.748128, 0, 1.0};
Point(26) = {-0.036119, 0.747348, 0, 1.0};
Point(27) = {-0.040488, 0.746457, 0, 1.0};
Point(28) = {-0.044662, 0.745459, 0, 1.0};
Point(29) = {-0.048624, 0.744381, 0, 1.0};
Point(30) = {-0.052359, 0.743227, 0, 1.0};
Point(31) = {-0.055851, 0.742009, 0, 1.0};
Point(32) = {-0.059085, 0.740741, 0, 1.0};
Point(33) = {-0.062045, 0.739440, 0, 1.0};
Point(34) = {-0.064724, 0.738131, 0, 1.0};
Point(35) = {-0.067110, 0.736827, 0, 1.0};
Point(36) = {-0.069190, 0.735543, 0, 1.0};
Point(37) = {-0.070958, 0.734295, 0, 1.0};
Point(38) = {-0.072406, 0.733095, 0, 1.0};
Point(39) = {-0.073529, 0.731962, 0, 1.0};
Point(40) = {-0.074322, 0.730887, 0, 1.0};
Point(41) = {-0.074782, 0.729886, 0, 1.0};
Point(42) = {-0.074906, 0.728984, 0, 1.0};
Point(43) = {-0.074697, 0.728186, 0, 1.0};
Point(44) = {-0.074152, 0.727495, 0, 1.0};
Point(45) = {-0.073276, 0.726891, 0, 1.0};
Point(46) = {-0.072070, 0.726372, 0, 1.0};
Point(47) = {-0.070541, 0.725951, 0, 1.0};
Point(48) = {-0.068694, 0.725621, 0, 1.0};
Point(49) = {-0.066537, 0.725378, 0, 1.0};
Point(50) = {-0.064079, 0.725215, 0, 1.0};
Point(51) = {-0.061330, 0.725127, 0, 1.0};
Point(52) = {-0.058303, 0.725106, 0, 1.0};
Point(53) = {-0.055008, 0.725147, 0, 1.0};
Point(54) = {-0.051460, 0.725242, 0, 1.0};
Point(55) = {-0.047675, 0.725387, 0, 1.0};
Point(56) = {-0.043667, 0.725575, 0, 1.0};
Point(57) = {-0.039456, 0.725800, 0, 1.0};
Point(58) = {-0.035055, 0.726058, 0, 1.0};
Point(59) = {-0.030486, 0.726345, 0, 1.0};
Point(60) = {-0.025768, 0.726660, 0, 1.0};
Point(61) = {-0.020922, 0.727001, 0, 1.0};
Point(62) = {-0.015968, 0.727369, 0, 1.0};
Point(63) = {-0.010928, 0.727761, 0, 1.0};
Point(64) = {-0.005820, 0.728179, 0, 1.0};
Point(65) = {-0.000671, 0.728622, 0, 1.0};
Point(66) = {0.004499, 0.729090, 0, 1.0};
Point(67) = {0.009668, 0.729582, 0, 1.0};
Point(68) = {0.014813, 0.730096, 0, 1.0};
Point(69) = {0.019915, 0.730631, 0, 1.0};
Point(70) = {0.024947, 0.731183, 0, 1.0};
Point(71) = {0.029892, 0.731745, 0, 1.0};
Point(72) = {0.034727, 0.732312, 0, 1.0};
Point(73) = {0.039431, 0.732877, 0, 1.0};
Point(74) = {0.043987, 0.733432, 0, 1.0};
Point(75) = {0.048374, 0.733969, 0, 1.0};
Point(76) = {0.052572, 0.734476, 0, 1.0};
Point(77) = {0.056565, 0.734949, 0, 1.0};
Point(78) = {0.060336, 0.735379, 0, 1.0};
Point(79) = {0.063870, 0.735759, 0, 1.0};
Point(80) = {0.067150, 0.736085, 0, 1.0};
Point(81) = {0.070163, 0.736353, 0, 1.0};
Point(82) = {0.072896, 0.736568, 0, 1.0};
Point(83) = {0.074895, 0.736701, 0, 1.0};
Point(84) = {-0.074822, -0.738162, 0, 1.0};
Point(85) = {-0.072798, -0.738532, 0, 1.0};
Point(86) = {-0.070027, -0.739064, 0, 1.0};
Point(87) = {-0.066971, -0.739673, 0, 1.0};
Point(88) = {-0.063640, -0.740360, 0, 1.0};
Point(89) = {-0.060049, -0.741109, 0, 1.0};
Point(90) = {-0.056216, -0.741917, 0, 1.0};
Point(91) = {-0.052157, -0.742765, 0, 1.0};
Point(92) = {-0.047891, -0.743636, 0, 1.0};
Point(93) = {-0.043433, -0.744521, 0, 1.0};
Point(94) = {-0.038805, -0.745395, 0, 1.0};
Point(95) = {-0.034030, -0.746241, 0, 1.0};
Point(96) = {-0.029127, -0.747042, 0, 1.0};
Point(97) = {-0.024118, -0.747776, 0, 1.0};
Point(98) = {-0.019025, -0.748429, 0, 1.0};
Point(99) = {-0.013869, -0.748989, 0, 1.0};
Point(100) = {-0.008675, -0.749433, 0, 1.0};
Point(101) = {-0.003466, -0.749757, 0, 1.0};
Point(102) = {0.001738, -0.749951, 0, 1.0};
Point(103) = {0.006911, -0.750000, 0, 1.0};
Point(104) = {0.012035, -0.749912, 0, 1.0};
Point(105) = {0.017084, -0.749679, 0, 1.0};
Point(106) = {0.022037, -0.749299, 0, 1.0};
Point(107) = {0.026875, -0.748784, 0, 1.0};
Point(108) = {0.031575, -0.748128, 0, 1.0};
Point(109) = {0.036119, -0.747348, 0, 1.0};
Point(110) = {0.040488, -0.746457, 0, 1.0};
Point(111) = {0.044662, -0.745459, 0, 1.0};
Point(112) = {0.048624, -0.744381, 0, 1.0};
Point(113) = {0.052359, -0.743227, 0, 1.0};
Point(114) = {0.055851, -0.742009, 0, 1.0};
Point(115) = {0.059085, -0.740741, 0, 1.0};
Point(116) = {0.062045, -0.739440, 0, 1.0};
Point(117) = {0.064724, -0.738131, 0, 1.0};
Point(118) = {0.067110, -0.736827, 0, 1.0};
Point(119) = {0.069190, -0.735543, 0, 1.0};
Point(120) = {0.070958, -0.734295, 0, 1.0};
Point(121) = {0.072406, -0.733095, 0, 1.0};
Point(122) = {0.073529, -0.731962, 0, 1.0};
Point(123) = {0.074322, -0.730887, 0, 1.0};
Point(124) = {0.074782, -0.729886, 0, 1.0};
Point(125) = {0.074906, -0.728984, 0, 1.0};
Point(126) = {0.074697, -0.728186, 0, 1.0};
Point(127) = {0.074152, -0.727495, 0, 1.0};
Point(128) = {0.073276, -0.726891, 0, 1.0};
Point(129) = {0.072070, -0.726372, 0, 1.0};
Point(130) = {0.070541, -0.725951, 0, 1.0};
Point(131) = {0.068694, -0.725621, 0, 1.0};
Point(132) = {0.066537, -0.725378, 0, 1.0};
Point(133) = {0.064079, -0.725215, 0, 1.0};
Point(134) = {0.061330, -0.725127, 0, 1.0};
Point(135) = {0.058303, -0.725106, 0, 1.0};
Point(136) = {0.055008, -0.725147, 0, 1.0};
Point(137) = {0.051460, -0.725242, 0, 1.0};
Point(138) = {0.047675, -0.725387, 0, 1.0};
Point(139) = {0.043667, -0.725575, 0, 1.0};
Point(140) = {0.039456, -0.725800, 0, 1.0};
Point(141) = {0.035055, -0.726058, 0, 1.0};
Point(142) = {0.030486, -0.726345, 0, 1.0};
Point(143) = {0.025768, -0.726660, 0, 1.0};
Point(144) = {0.020922, -0.727001, 0, 1.0};
Point(145) = {0.015968, -0.727369, 0, 1.0};
Point(146) = {0.010928, -0.727761, 0, 1.0};
Point(147) = {0.005820, -0.728179, 0, 1.0};
Point(148) = {0.000671, -0.728622, 0, 1.0};
Point(149) = {-0.004499, -0.729090, 0, 1.0};
Point(150) = {-0.009668, -0.729582, 0, 1.0};
Point(151) = {-0.014813, -0.730096, 0, 1.0};
Point(152) = {-0.019915, -0.730631, 0, 1.0};
Point(153) = {-0.024947, -0.731183, 0, 1.0};
Point(154) = {-0.029892, -0.731745, 0, 1.0};
Point(155) = {-0.034727, -0.732312, 0, 1.0};
Point(156) = {-0.039431, -0.732877, 0, 1.0};
Point(157) = {-0.043987, -0.733432, 0, 1.0};
Point(158) = {-0.048374, -0.733969, 0, 1.0};
Point(159) = {-0.052572, -0.734476, 0, 1.0};
Point(160) = {-0.056565, -0.734949, 0, 1.0};
Point(161) = {-0.060336, -0.735379, 0, 1.0};
Point(162) = {-0.063870, -0.735759, 0, 1.0};
Point(163) = {-0.067150, -0.736085, 0, 1.0};
Point(164) = {-0.070163, -0.736353, 0, 1.0};
Point(165) = {-0.072896, -0.736568, 0, 1.0};
Point(166) = {-0.074895, -0.736701, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
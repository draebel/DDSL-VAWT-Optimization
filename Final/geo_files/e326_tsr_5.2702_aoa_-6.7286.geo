SetFactory("OpenCASCADE");

Point(1) = {0.074406, 0.749087, 0, 1.0};
Point(2) = {0.072038, 0.749091, 0, 1.0};
Point(3) = {0.067671, 0.749059, 0, 1.0};
Point(4) = {0.062472, 0.749022, 0, 1.0};
Point(5) = {0.056524, 0.749016, 0, 1.0};
Point(6) = {0.049923, 0.749053, 0, 1.0};
Point(7) = {0.042780, 0.749143, 0, 1.0};
Point(8) = {0.035205, 0.749280, 0, 1.0};
Point(9) = {0.027314, 0.749453, 0, 1.0};
Point(10) = {0.019224, 0.749641, 0, 1.0};
Point(11) = {0.011046, 0.749817, 0, 1.0};
Point(12) = {0.002891, 0.749948, 0, 1.0};
Point(13) = {-0.005147, 0.750000, 0, 1.0};
Point(14) = {-0.012972, 0.749938, 0, 1.0};
Point(15) = {-0.020505, 0.749726, 0, 1.0};
Point(16) = {-0.027676, 0.749334, 0, 1.0};
Point(17) = {-0.034420, 0.748725, 0, 1.0};
Point(18) = {-0.040707, 0.747867, 0, 1.0};
Point(19) = {-0.046525, 0.746758, 0, 1.0};
Point(20) = {-0.051855, 0.745419, 0, 1.0};
Point(21) = {-0.056687, 0.743883, 0, 1.0};
Point(22) = {-0.060990, 0.742199, 0, 1.0};
Point(23) = {-0.064739, 0.740414, 0, 1.0};
Point(24) = {-0.067907, 0.738571, 0, 1.0};
Point(25) = {-0.070469, 0.736723, 0, 1.0};
Point(26) = {-0.072410, 0.734920, 0, 1.0};
Point(27) = {-0.073723, 0.733226, 0, 1.0};
Point(28) = {-0.074397, 0.731722, 0, 1.0};
Point(29) = {-0.074450, 0.731469, 0, 1.0};
Point(30) = {-0.074489, 0.731090, 0, 1.0};
Point(31) = {-0.074483, 0.730857, 0, 1.0};
Point(32) = {-0.074452, 0.730642, 0, 1.0};
Point(33) = {-0.074424, 0.730543, 0, 1.0};
Point(34) = {-0.074390, 0.730452, 0, 1.0};
Point(35) = {-0.074346, 0.730369, 0, 1.0};
Point(36) = {-0.074285, 0.730293, 0, 1.0};
Point(37) = {-0.074210, 0.730220, 0, 1.0};
Point(38) = {-0.074123, 0.730149, 0, 1.0};
Point(39) = {-0.073914, 0.730010, 0, 1.0};
Point(40) = {-0.073664, 0.729876, 0, 1.0};
Point(41) = {-0.073216, 0.729685, 0, 1.0};
Point(42) = {-0.071596, 0.729220, 0, 1.0};
Point(43) = {-0.068826, 0.728774, 0, 1.0};
Point(44) = {-0.065232, 0.728480, 0, 1.0};
Point(45) = {-0.060854, 0.728331, 0, 1.0};
Point(46) = {-0.055735, 0.728311, 0, 1.0};
Point(47) = {-0.049942, 0.728390, 0, 1.0};
Point(48) = {-0.043569, 0.728552, 0, 1.0};
Point(49) = {-0.036712, 0.728802, 0, 1.0};
Point(50) = {-0.029464, 0.729145, 0, 1.0};
Point(51) = {-0.021915, 0.729598, 0, 1.0};
Point(52) = {-0.014140, 0.730124, 0, 1.0};
Point(53) = {-0.006240, 0.730848, 0, 1.0};
Point(54) = {0.001716, 0.731650, 0, 1.0};
Point(55) = {0.009634, 0.732564, 0, 1.0};
Point(56) = {0.017428, 0.733590, 0, 1.0};
Point(57) = {0.025012, 0.734727, 0, 1.0};
Point(58) = {0.032299, 0.735975, 0, 1.0};
Point(59) = {0.039202, 0.737356, 0, 1.0};
Point(60) = {0.045698, 0.738932, 0, 1.0};
Point(61) = {0.051853, 0.740673, 0, 1.0};
Point(62) = {0.057667, 0.742444, 0, 1.0};
Point(63) = {0.063053, 0.744122, 0, 1.0};
Point(64) = {0.067909, 0.745624, 0, 1.0};
Point(65) = {0.072120, 0.746887, 0, 1.0};
Point(66) = {0.074582, 0.747600, 0, 1.0};
Point(67) = {-0.074406, -0.749087, 0, 1.0};
Point(68) = {-0.072038, -0.749091, 0, 1.0};
Point(69) = {-0.067671, -0.749059, 0, 1.0};
Point(70) = {-0.062472, -0.749022, 0, 1.0};
Point(71) = {-0.056524, -0.749016, 0, 1.0};
Point(72) = {-0.049923, -0.749053, 0, 1.0};
Point(73) = {-0.042780, -0.749143, 0, 1.0};
Point(74) = {-0.035205, -0.749280, 0, 1.0};
Point(75) = {-0.027314, -0.749453, 0, 1.0};
Point(76) = {-0.019224, -0.749641, 0, 1.0};
Point(77) = {-0.011046, -0.749817, 0, 1.0};
Point(78) = {-0.002891, -0.749948, 0, 1.0};
Point(79) = {0.005147, -0.750000, 0, 1.0};
Point(80) = {0.012972, -0.749938, 0, 1.0};
Point(81) = {0.020505, -0.749726, 0, 1.0};
Point(82) = {0.027676, -0.749334, 0, 1.0};
Point(83) = {0.034420, -0.748725, 0, 1.0};
Point(84) = {0.040707, -0.747867, 0, 1.0};
Point(85) = {0.046525, -0.746758, 0, 1.0};
Point(86) = {0.051855, -0.745419, 0, 1.0};
Point(87) = {0.056687, -0.743883, 0, 1.0};
Point(88) = {0.060990, -0.742199, 0, 1.0};
Point(89) = {0.064739, -0.740414, 0, 1.0};
Point(90) = {0.067907, -0.738571, 0, 1.0};
Point(91) = {0.070469, -0.736723, 0, 1.0};
Point(92) = {0.072410, -0.734920, 0, 1.0};
Point(93) = {0.073723, -0.733226, 0, 1.0};
Point(94) = {0.074397, -0.731722, 0, 1.0};
Point(95) = {0.074450, -0.731469, 0, 1.0};
Point(96) = {0.074489, -0.731090, 0, 1.0};
Point(97) = {0.074483, -0.730857, 0, 1.0};
Point(98) = {0.074452, -0.730642, 0, 1.0};
Point(99) = {0.074424, -0.730543, 0, 1.0};
Point(100) = {0.074390, -0.730452, 0, 1.0};
Point(101) = {0.074346, -0.730369, 0, 1.0};
Point(102) = {0.074285, -0.730293, 0, 1.0};
Point(103) = {0.074210, -0.730220, 0, 1.0};
Point(104) = {0.074123, -0.730149, 0, 1.0};
Point(105) = {0.073914, -0.730010, 0, 1.0};
Point(106) = {0.073664, -0.729876, 0, 1.0};
Point(107) = {0.073216, -0.729685, 0, 1.0};
Point(108) = {0.071596, -0.729220, 0, 1.0};
Point(109) = {0.068826, -0.728774, 0, 1.0};
Point(110) = {0.065232, -0.728480, 0, 1.0};
Point(111) = {0.060854, -0.728331, 0, 1.0};
Point(112) = {0.055735, -0.728311, 0, 1.0};
Point(113) = {0.049942, -0.728390, 0, 1.0};
Point(114) = {0.043569, -0.728552, 0, 1.0};
Point(115) = {0.036712, -0.728802, 0, 1.0};
Point(116) = {0.029464, -0.729145, 0, 1.0};
Point(117) = {0.021915, -0.729598, 0, 1.0};
Point(118) = {0.014140, -0.730124, 0, 1.0};
Point(119) = {0.006240, -0.730848, 0, 1.0};
Point(120) = {-0.001716, -0.731650, 0, 1.0};
Point(121) = {-0.009634, -0.732564, 0, 1.0};
Point(122) = {-0.017428, -0.733590, 0, 1.0};
Point(123) = {-0.025012, -0.734727, 0, 1.0};
Point(124) = {-0.032299, -0.735975, 0, 1.0};
Point(125) = {-0.039202, -0.737356, 0, 1.0};
Point(126) = {-0.045698, -0.738932, 0, 1.0};
Point(127) = {-0.051853, -0.740673, 0, 1.0};
Point(128) = {-0.057667, -0.742444, 0, 1.0};
Point(129) = {-0.063053, -0.744122, 0, 1.0};
Point(130) = {-0.067909, -0.745624, 0, 1.0};
Point(131) = {-0.072120, -0.746887, 0, 1.0};
Point(132) = {-0.074582, -0.747600, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:83};
Spline(6) = {83:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
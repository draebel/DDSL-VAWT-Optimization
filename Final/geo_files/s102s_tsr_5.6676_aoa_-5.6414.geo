SetFactory("OpenCASCADE");

Point(1) = {0.074516, 0.745906, 0, 1.0};
Point(2) = {0.074153, 0.745933, 0, 1.0};
Point(3) = {0.073098, 0.746046, 0, 1.0};
Point(4) = {0.071429, 0.746277, 0, 1.0};
Point(5) = {0.069239, 0.746611, 0, 1.0};
Point(6) = {0.066591, 0.746998, 0, 1.0};
Point(7) = {0.063508, 0.747384, 0, 1.0};
Point(8) = {0.059995, 0.747760, 0, 1.0};
Point(9) = {0.056092, 0.748142, 0, 1.0};
Point(10) = {0.051863, 0.748534, 0, 1.0};
Point(11) = {0.047377, 0.748925, 0, 1.0};
Point(12) = {0.042706, 0.749298, 0, 1.0};
Point(13) = {0.037919, 0.749626, 0, 1.0};
Point(14) = {0.033084, 0.749878, 0, 1.0};
Point(15) = {0.028268, 0.750000, 0, 1.0};
Point(16) = {0.023488, 0.749923, 0, 1.0};
Point(17) = {0.018707, 0.749632, 0, 1.0};
Point(18) = {0.013937, 0.749182, 0, 1.0};
Point(19) = {0.009230, 0.748611, 0, 1.0};
Point(20) = {0.004639, 0.747939, 0, 1.0};
Point(21) = {0.000221, 0.747187, 0, 1.0};
Point(22) = {-0.003973, 0.746371, 0, 1.0};
Point(23) = {-0.007890, 0.745508, 0, 1.0};
Point(24) = {-0.011476, 0.744610, 0, 1.0};
Point(25) = {-0.014679, 0.743690, 0, 1.0};
Point(26) = {-0.017437, 0.742739, 0, 1.0};
Point(27) = {-0.019726, 0.741713, 0, 1.0};
Point(28) = {-0.021583, 0.740600, 0, 1.0};
Point(29) = {-0.023041, 0.739445, 0, 1.0};
Point(30) = {-0.024098, 0.738304, 0, 1.0};
Point(31) = {-0.024755, 0.737228, 0, 1.0};
Point(32) = {-0.025004, 0.736294, 0, 1.0};
Point(33) = {-0.025003, 0.736115, 0, 1.0};
Point(34) = {-0.024977, 0.735931, 0, 1.0};
Point(35) = {-0.024916, 0.735775, 0, 1.0};
Point(36) = {-0.024805, 0.735639, 0, 1.0};
Point(37) = {-0.024642, 0.735509, 0, 1.0};
Point(38) = {-0.023882, 0.735116, 0, 1.0};
Point(39) = {-0.022397, 0.734665, 0, 1.0};
Point(40) = {-0.020377, 0.734279, 0, 1.0};
Point(41) = {-0.017861, 0.733957, 0, 1.0};
Point(42) = {-0.014888, 0.733702, 0, 1.0};
Point(43) = {-0.011503, 0.733515, 0, 1.0};
Point(44) = {-0.007752, 0.733402, 0, 1.0};
Point(45) = {-0.003687, 0.733367, 0, 1.0};
Point(46) = {0.000636, 0.733417, 0, 1.0};
Point(47) = {0.005162, 0.733562, 0, 1.0};
Point(48) = {0.009832, 0.733811, 0, 1.0};
Point(49) = {0.014586, 0.734182, 0, 1.0};
Point(50) = {0.019362, 0.734694, 0, 1.0};
Point(51) = {0.024091, 0.735404, 0, 1.0};
Point(52) = {0.028798, 0.736411, 0, 1.0};
Point(53) = {0.033611, 0.737694, 0, 1.0};
Point(54) = {0.038556, 0.739086, 0, 1.0};
Point(55) = {0.043546, 0.740465, 0, 1.0};
Point(56) = {0.048480, 0.741755, 0, 1.0};
Point(57) = {0.053256, 0.742902, 0, 1.0};
Point(58) = {0.057769, 0.743873, 0, 1.0};
Point(59) = {0.061922, 0.744644, 0, 1.0};
Point(60) = {0.065614, 0.745208, 0, 1.0};
Point(61) = {0.068748, 0.745576, 0, 1.0};
Point(62) = {0.071246, 0.745783, 0, 1.0};
Point(63) = {0.073055, 0.745878, 0, 1.0};
Point(64) = {0.074150, 0.745904, 0, 1.0};
Point(65) = {-0.074516, -0.745906, 0, 1.0};
Point(66) = {-0.074153, -0.745933, 0, 1.0};
Point(67) = {-0.073098, -0.746046, 0, 1.0};
Point(68) = {-0.071429, -0.746277, 0, 1.0};
Point(69) = {-0.069239, -0.746611, 0, 1.0};
Point(70) = {-0.066591, -0.746998, 0, 1.0};
Point(71) = {-0.063508, -0.747384, 0, 1.0};
Point(72) = {-0.059995, -0.747760, 0, 1.0};
Point(73) = {-0.056092, -0.748142, 0, 1.0};
Point(74) = {-0.051863, -0.748534, 0, 1.0};
Point(75) = {-0.047377, -0.748925, 0, 1.0};
Point(76) = {-0.042706, -0.749298, 0, 1.0};
Point(77) = {-0.037919, -0.749626, 0, 1.0};
Point(78) = {-0.033084, -0.749878, 0, 1.0};
Point(79) = {-0.028268, -0.750000, 0, 1.0};
Point(80) = {-0.023488, -0.749923, 0, 1.0};
Point(81) = {-0.018707, -0.749632, 0, 1.0};
Point(82) = {-0.013937, -0.749182, 0, 1.0};
Point(83) = {-0.009230, -0.748611, 0, 1.0};
Point(84) = {-0.004639, -0.747939, 0, 1.0};
Point(85) = {-0.000221, -0.747187, 0, 1.0};
Point(86) = {0.003973, -0.746371, 0, 1.0};
Point(87) = {0.007890, -0.745508, 0, 1.0};
Point(88) = {0.011476, -0.744610, 0, 1.0};
Point(89) = {0.014679, -0.743690, 0, 1.0};
Point(90) = {0.017437, -0.742739, 0, 1.0};
Point(91) = {0.019726, -0.741713, 0, 1.0};
Point(92) = {0.021583, -0.740600, 0, 1.0};
Point(93) = {0.023041, -0.739445, 0, 1.0};
Point(94) = {0.024098, -0.738304, 0, 1.0};
Point(95) = {0.024755, -0.737228, 0, 1.0};
Point(96) = {0.025004, -0.736294, 0, 1.0};
Point(97) = {0.025003, -0.736115, 0, 1.0};
Point(98) = {0.024977, -0.735931, 0, 1.0};
Point(99) = {0.024916, -0.735775, 0, 1.0};
Point(100) = {0.024805, -0.735639, 0, 1.0};
Point(101) = {0.024642, -0.735509, 0, 1.0};
Point(102) = {0.023882, -0.735116, 0, 1.0};
Point(103) = {0.022397, -0.734665, 0, 1.0};
Point(104) = {0.020377, -0.734279, 0, 1.0};
Point(105) = {0.017861, -0.733957, 0, 1.0};
Point(106) = {0.014888, -0.733702, 0, 1.0};
Point(107) = {0.011503, -0.733515, 0, 1.0};
Point(108) = {0.007752, -0.733402, 0, 1.0};
Point(109) = {0.003687, -0.733367, 0, 1.0};
Point(110) = {-0.000636, -0.733417, 0, 1.0};
Point(111) = {-0.005162, -0.733562, 0, 1.0};
Point(112) = {-0.009832, -0.733811, 0, 1.0};
Point(113) = {-0.014586, -0.734182, 0, 1.0};
Point(114) = {-0.019362, -0.734694, 0, 1.0};
Point(115) = {-0.024091, -0.735404, 0, 1.0};
Point(116) = {-0.028798, -0.736411, 0, 1.0};
Point(117) = {-0.033611, -0.737694, 0, 1.0};
Point(118) = {-0.038556, -0.739086, 0, 1.0};
Point(119) = {-0.043546, -0.740465, 0, 1.0};
Point(120) = {-0.048480, -0.741755, 0, 1.0};
Point(121) = {-0.053256, -0.742902, 0, 1.0};
Point(122) = {-0.057769, -0.743873, 0, 1.0};
Point(123) = {-0.061922, -0.744644, 0, 1.0};
Point(124) = {-0.065614, -0.745208, 0, 1.0};
Point(125) = {-0.068748, -0.745576, 0, 1.0};
Point(126) = {-0.071246, -0.745783, 0, 1.0};
Point(127) = {-0.073055, -0.745878, 0, 1.0};
Point(128) = {-0.074150, -0.745904, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:47};
Spline(3) = {47:64};
Spline(4) = {64,1};

// Lines: second blade (splines 5-8)
Spline(5) = {65:85};
Spline(6) = {85:111};
Spline(7) = {111:128};
Spline(8) = {128,65};

// Outer domain (points 20001-4 and lines)
Point(129) = {-13.50000000, -15.00000000, 0, 1.0};
Point(130) = {-13.50000000, 15.00000000, 0, 1.0};
Point(131) = {13.50000000, 15.00000000, 0, 1.0};
Point(132) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {129, 130};
Line(12) = {130, 131};
Line(13) = {131, 132};
Line(14) = {129, 132};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074643, 0.743859, 0, 1.0};
Point(2) = {0.074099, 0.743899, 0, 1.0};
Point(3) = {0.072516, 0.744068, 0, 1.0};
Point(4) = {0.070013, 0.744415, 0, 1.0};
Point(5) = {0.066727, 0.744917, 0, 1.0};
Point(6) = {0.062755, 0.745496, 0, 1.0};
Point(7) = {0.058131, 0.746077, 0, 1.0};
Point(8) = {0.052861, 0.746640, 0, 1.0};
Point(9) = {0.047006, 0.747213, 0, 1.0};
Point(10) = {0.040663, 0.747801, 0, 1.0};
Point(11) = {0.033935, 0.748388, 0, 1.0};
Point(12) = {0.026928, 0.748947, 0, 1.0};
Point(13) = {0.019747, 0.749439, 0, 1.0};
Point(14) = {0.012494, 0.749817, 0, 1.0};
Point(15) = {0.005271, 0.750000, 0, 1.0};
Point(16) = {-0.001900, 0.749884, 0, 1.0};
Point(17) = {-0.009071, 0.749449, 0, 1.0};
Point(18) = {-0.016226, 0.748773, 0, 1.0};
Point(19) = {-0.023288, 0.747916, 0, 1.0};
Point(20) = {-0.030173, 0.746909, 0, 1.0};
Point(21) = {-0.036801, 0.745781, 0, 1.0};
Point(22) = {-0.043092, 0.744557, 0, 1.0};
Point(23) = {-0.048968, 0.743262, 0, 1.0};
Point(24) = {-0.054347, 0.741915, 0, 1.0};
Point(25) = {-0.059151, 0.740534, 0, 1.0};
Point(26) = {-0.063288, 0.739108, 0, 1.0};
Point(27) = {-0.066721, 0.737569, 0, 1.0};
Point(28) = {-0.069507, 0.735900, 0, 1.0};
Point(29) = {-0.071693, 0.734168, 0, 1.0};
Point(30) = {-0.073279, 0.732455, 0, 1.0};
Point(31) = {-0.074265, 0.730842, 0, 1.0};
Point(32) = {-0.074639, 0.729441, 0, 1.0};
Point(33) = {-0.074637, 0.729172, 0, 1.0};
Point(34) = {-0.074597, 0.728896, 0, 1.0};
Point(35) = {-0.074506, 0.728662, 0, 1.0};
Point(36) = {-0.074340, 0.728459, 0, 1.0};
Point(37) = {-0.074096, 0.728263, 0, 1.0};
Point(38) = {-0.072956, 0.727674, 0, 1.0};
Point(39) = {-0.070727, 0.726998, 0, 1.0};
Point(40) = {-0.067698, 0.726418, 0, 1.0};
Point(41) = {-0.063924, 0.725935, 0, 1.0};
Point(42) = {-0.059464, 0.725552, 0, 1.0};
Point(43) = {-0.054387, 0.725272, 0, 1.0};
Point(44) = {-0.048760, 0.725102, 0, 1.0};
Point(45) = {-0.042663, 0.725050, 0, 1.0};
Point(46) = {-0.036179, 0.725126, 0, 1.0};
Point(47) = {-0.029389, 0.725343, 0, 1.0};
Point(48) = {-0.022383, 0.725717, 0, 1.0};
Point(49) = {-0.015253, 0.726273, 0, 1.0};
Point(50) = {-0.008089, 0.727041, 0, 1.0};
Point(51) = {-0.000995, 0.728105, 0, 1.0};
Point(52) = {0.006065, 0.729617, 0, 1.0};
Point(53) = {0.013285, 0.731540, 0, 1.0};
Point(54) = {0.020702, 0.733629, 0, 1.0};
Point(55) = {0.028187, 0.735697, 0, 1.0};
Point(56) = {0.035588, 0.737632, 0, 1.0};
Point(57) = {0.042753, 0.739353, 0, 1.0};
Point(58) = {0.049523, 0.740810, 0, 1.0};
Point(59) = {0.055751, 0.741966, 0, 1.0};
Point(60) = {0.061290, 0.742812, 0, 1.0};
Point(61) = {0.065991, 0.743364, 0, 1.0};
Point(62) = {0.069738, 0.743675, 0, 1.0};
Point(63) = {0.072452, 0.743816, 0, 1.0};
Point(64) = {0.074094, 0.743857, 0, 1.0};
Point(65) = {-0.074643, -0.743859, 0, 1.0};
Point(66) = {-0.074099, -0.743899, 0, 1.0};
Point(67) = {-0.072516, -0.744068, 0, 1.0};
Point(68) = {-0.070013, -0.744415, 0, 1.0};
Point(69) = {-0.066727, -0.744917, 0, 1.0};
Point(70) = {-0.062755, -0.745496, 0, 1.0};
Point(71) = {-0.058131, -0.746077, 0, 1.0};
Point(72) = {-0.052861, -0.746640, 0, 1.0};
Point(73) = {-0.047006, -0.747213, 0, 1.0};
Point(74) = {-0.040663, -0.747801, 0, 1.0};
Point(75) = {-0.033935, -0.748388, 0, 1.0};
Point(76) = {-0.026928, -0.748947, 0, 1.0};
Point(77) = {-0.019747, -0.749439, 0, 1.0};
Point(78) = {-0.012494, -0.749817, 0, 1.0};
Point(79) = {-0.005271, -0.750000, 0, 1.0};
Point(80) = {0.001900, -0.749884, 0, 1.0};
Point(81) = {0.009071, -0.749449, 0, 1.0};
Point(82) = {0.016226, -0.748773, 0, 1.0};
Point(83) = {0.023288, -0.747916, 0, 1.0};
Point(84) = {0.030173, -0.746909, 0, 1.0};
Point(85) = {0.036801, -0.745781, 0, 1.0};
Point(86) = {0.043092, -0.744557, 0, 1.0};
Point(87) = {0.048968, -0.743262, 0, 1.0};
Point(88) = {0.054347, -0.741915, 0, 1.0};
Point(89) = {0.059151, -0.740534, 0, 1.0};
Point(90) = {0.063288, -0.739108, 0, 1.0};
Point(91) = {0.066721, -0.737569, 0, 1.0};
Point(92) = {0.069507, -0.735900, 0, 1.0};
Point(93) = {0.071693, -0.734168, 0, 1.0};
Point(94) = {0.073279, -0.732455, 0, 1.0};
Point(95) = {0.074265, -0.730842, 0, 1.0};
Point(96) = {0.074639, -0.729441, 0, 1.0};
Point(97) = {0.074637, -0.729172, 0, 1.0};
Point(98) = {0.074597, -0.728896, 0, 1.0};
Point(99) = {0.074506, -0.728662, 0, 1.0};
Point(100) = {0.074340, -0.728459, 0, 1.0};
Point(101) = {0.074096, -0.728263, 0, 1.0};
Point(102) = {0.072956, -0.727674, 0, 1.0};
Point(103) = {0.070727, -0.726998, 0, 1.0};
Point(104) = {0.067698, -0.726418, 0, 1.0};
Point(105) = {0.063924, -0.725935, 0, 1.0};
Point(106) = {0.059464, -0.725552, 0, 1.0};
Point(107) = {0.054387, -0.725272, 0, 1.0};
Point(108) = {0.048760, -0.725102, 0, 1.0};
Point(109) = {0.042663, -0.725050, 0, 1.0};
Point(110) = {0.036179, -0.725126, 0, 1.0};
Point(111) = {0.029389, -0.725343, 0, 1.0};
Point(112) = {0.022383, -0.725717, 0, 1.0};
Point(113) = {0.015253, -0.726273, 0, 1.0};
Point(114) = {0.008089, -0.727041, 0, 1.0};
Point(115) = {0.000995, -0.728105, 0, 1.0};
Point(116) = {-0.006065, -0.729617, 0, 1.0};
Point(117) = {-0.013285, -0.731540, 0, 1.0};
Point(118) = {-0.020702, -0.733629, 0, 1.0};
Point(119) = {-0.028187, -0.735697, 0, 1.0};
Point(120) = {-0.035588, -0.737632, 0, 1.0};
Point(121) = {-0.042753, -0.739353, 0, 1.0};
Point(122) = {-0.049523, -0.740810, 0, 1.0};
Point(123) = {-0.055751, -0.741966, 0, 1.0};
Point(124) = {-0.061290, -0.742812, 0, 1.0};
Point(125) = {-0.065991, -0.743364, 0, 1.0};
Point(126) = {-0.069738, -0.743675, 0, 1.0};
Point(127) = {-0.072452, -0.743816, 0, 1.0};
Point(128) = {-0.074094, -0.743857, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:47};
Spline(3) = {47:64};
Spline(4) = {64,1};

// Lines: second blade (splines 5-8)
Spline(5) = {65:85};
Spline(6) = {85:111};
Spline(7) = {111:128};
Spline(8) = {128,65};

// Outer domain (points 20001-4 and lines)
Point(129) = {-13.50000000, -15.00000000, 0, 1.0};
Point(130) = {-13.50000000, 15.00000000, 0, 1.0};
Point(131) = {13.50000000, 15.00000000, 0, 1.0};
Point(132) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {129, 130};
Line(12) = {130, 131};
Line(13) = {131, 132};
Line(14) = {129, 132};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
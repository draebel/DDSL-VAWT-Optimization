SetFactory("OpenCASCADE");

Point(1) = {0.074615, 0.721378, 0, 1.0};
Point(2) = {0.073351, 0.721836, 0, 1.0};
Point(3) = {0.071026, 0.722717, 0, 1.0};
Point(4) = {0.068422, 0.723706, 0, 1.0};
Point(5) = {0.065553, 0.724815, 0, 1.0};
Point(6) = {0.062429, 0.726038, 0, 1.0};
Point(7) = {0.059063, 0.727358, 0, 1.0};
Point(8) = {0.055467, 0.728748, 0, 1.0};
Point(9) = {0.051657, 0.730202, 0, 1.0};
Point(10) = {0.047650, 0.731727, 0, 1.0};
Point(11) = {0.043462, 0.733323, 0, 1.0};
Point(12) = {0.039112, 0.734968, 0, 1.0};
Point(13) = {0.034616, 0.736629, 0, 1.0};
Point(14) = {0.029988, 0.738278, 0, 1.0};
Point(15) = {0.025246, 0.739893, 0, 1.0};
Point(16) = {0.020411, 0.741451, 0, 1.0};
Point(17) = {0.015497, 0.742926, 0, 1.0};
Point(18) = {0.010526, 0.744293, 0, 1.0};
Point(19) = {0.005516, 0.745525, 0, 1.0};
Point(20) = {0.000486, 0.746608, 0, 1.0};
Point(21) = {-0.004540, 0.747540, 0, 1.0};
Point(22) = {-0.009543, 0.748330, 0, 1.0};
Point(23) = {-0.014496, 0.748973, 0, 1.0};
Point(24) = {-0.019381, 0.749465, 0, 1.0};
Point(25) = {-0.024179, 0.749798, 0, 1.0};
Point(26) = {-0.028866, 0.749974, 0, 1.0};
Point(27) = {-0.033425, 0.750000, 0, 1.0};
Point(28) = {-0.037830, 0.749898, 0, 1.0};
Point(29) = {-0.042061, 0.749677, 0, 1.0};
Point(30) = {-0.046101, 0.749347, 0, 1.0};
Point(31) = {-0.049932, 0.748907, 0, 1.0};
Point(32) = {-0.053538, 0.748363, 0, 1.0};
Point(33) = {-0.056903, 0.747717, 0, 1.0};
Point(34) = {-0.060008, 0.746983, 0, 1.0};
Point(35) = {-0.062843, 0.746173, 0, 1.0};
Point(36) = {-0.065393, 0.745312, 0, 1.0};
Point(37) = {-0.067643, 0.744405, 0, 1.0};
Point(38) = {-0.069589, 0.743448, 0, 1.0};
Point(39) = {-0.071217, 0.742449, 0, 1.0};
Point(40) = {-0.072527, 0.741399, 0, 1.0};
Point(41) = {-0.073502, 0.740364, 0, 1.0};
Point(42) = {-0.074124, 0.739475, 0, 1.0};
Point(43) = {-0.074388, 0.738740, 0, 1.0};
Point(44) = {-0.074302, 0.738095, 0, 1.0};
Point(45) = {-0.073881, 0.737422, 0, 1.0};
Point(46) = {-0.073134, 0.736678, 0, 1.0};
Point(47) = {-0.072057, 0.735919, 0, 1.0};
Point(48) = {-0.070658, 0.735134, 0, 1.0};
Point(49) = {-0.068943, 0.734300, 0, 1.0};
Point(50) = {-0.066921, 0.733430, 0, 1.0};
Point(51) = {-0.064595, 0.732546, 0, 1.0};
Point(52) = {-0.061977, 0.731667, 0, 1.0};
Point(53) = {-0.059080, 0.730781, 0, 1.0};
Point(54) = {-0.055916, 0.729865, 0, 1.0};
Point(55) = {-0.052501, 0.728927, 0, 1.0};
Point(56) = {-0.048846, 0.728001, 0, 1.0};
Point(57) = {-0.044961, 0.727121, 0, 1.0};
Point(58) = {-0.040866, 0.726286, 0, 1.0};
Point(59) = {-0.036576, 0.725485, 0, 1.0};
Point(60) = {-0.032114, 0.724711, 0, 1.0};
Point(61) = {-0.027497, 0.723984, 0, 1.0};
Point(62) = {-0.022741, 0.723333, 0, 1.0};
Point(63) = {-0.017866, 0.722762, 0, 1.0};
Point(64) = {-0.012895, 0.722256, 0, 1.0};
Point(65) = {-0.007847, 0.721822, 0, 1.0};
Point(66) = {-0.002743, 0.721493, 0, 1.0};
Point(67) = {0.002401, 0.721302, 0, 1.0};
Point(68) = {0.007565, 0.721264, 0, 1.0};
Point(69) = {0.012724, 0.721363, 0, 1.0};
Point(70) = {0.017855, 0.721568, 0, 1.0};
Point(71) = {0.022926, 0.721848, 0, 1.0};
Point(72) = {0.027917, 0.722171, 0, 1.0};
Point(73) = {0.032799, 0.722496, 0, 1.0};
Point(74) = {0.037545, 0.722775, 0, 1.0};
Point(75) = {0.042128, 0.722946, 0, 1.0};
Point(76) = {0.046523, 0.722965, 0, 1.0};
Point(77) = {0.050709, 0.722829, 0, 1.0};
Point(78) = {0.054672, 0.722564, 0, 1.0};
Point(79) = {0.058400, 0.722205, 0, 1.0};
Point(80) = {0.061882, 0.721784, 0, 1.0};
Point(81) = {0.065105, 0.721329, 0, 1.0};
Point(82) = {0.068057, 0.720873, 0, 1.0};
Point(83) = {0.070734, 0.720448, 0, 1.0};
Point(84) = {0.073124, 0.720068, 0, 1.0};
Point(85) = {0.074420, 0.719863, 0, 1.0};
Point(86) = {-0.074615, -0.721378, 0, 1.0};
Point(87) = {-0.073351, -0.721836, 0, 1.0};
Point(88) = {-0.071026, -0.722717, 0, 1.0};
Point(89) = {-0.068422, -0.723706, 0, 1.0};
Point(90) = {-0.065553, -0.724815, 0, 1.0};
Point(91) = {-0.062429, -0.726038, 0, 1.0};
Point(92) = {-0.059063, -0.727358, 0, 1.0};
Point(93) = {-0.055467, -0.728748, 0, 1.0};
Point(94) = {-0.051657, -0.730202, 0, 1.0};
Point(95) = {-0.047650, -0.731727, 0, 1.0};
Point(96) = {-0.043462, -0.733323, 0, 1.0};
Point(97) = {-0.039112, -0.734968, 0, 1.0};
Point(98) = {-0.034616, -0.736629, 0, 1.0};
Point(99) = {-0.029988, -0.738278, 0, 1.0};
Point(100) = {-0.025246, -0.739893, 0, 1.0};
Point(101) = {-0.020411, -0.741451, 0, 1.0};
Point(102) = {-0.015497, -0.742926, 0, 1.0};
Point(103) = {-0.010526, -0.744293, 0, 1.0};
Point(104) = {-0.005516, -0.745525, 0, 1.0};
Point(105) = {-0.000486, -0.746608, 0, 1.0};
Point(106) = {0.004540, -0.747540, 0, 1.0};
Point(107) = {0.009543, -0.748330, 0, 1.0};
Point(108) = {0.014496, -0.748973, 0, 1.0};
Point(109) = {0.019381, -0.749465, 0, 1.0};
Point(110) = {0.024179, -0.749798, 0, 1.0};
Point(111) = {0.028866, -0.749974, 0, 1.0};
Point(112) = {0.033425, -0.750000, 0, 1.0};
Point(113) = {0.037830, -0.749898, 0, 1.0};
Point(114) = {0.042061, -0.749677, 0, 1.0};
Point(115) = {0.046101, -0.749347, 0, 1.0};
Point(116) = {0.049932, -0.748907, 0, 1.0};
Point(117) = {0.053538, -0.748363, 0, 1.0};
Point(118) = {0.056903, -0.747717, 0, 1.0};
Point(119) = {0.060008, -0.746983, 0, 1.0};
Point(120) = {0.062843, -0.746173, 0, 1.0};
Point(121) = {0.065393, -0.745312, 0, 1.0};
Point(122) = {0.067643, -0.744405, 0, 1.0};
Point(123) = {0.069589, -0.743448, 0, 1.0};
Point(124) = {0.071217, -0.742449, 0, 1.0};
Point(125) = {0.072527, -0.741399, 0, 1.0};
Point(126) = {0.073502, -0.740364, 0, 1.0};
Point(127) = {0.074124, -0.739475, 0, 1.0};
Point(128) = {0.074388, -0.738740, 0, 1.0};
Point(129) = {0.074302, -0.738095, 0, 1.0};
Point(130) = {0.073881, -0.737422, 0, 1.0};
Point(131) = {0.073134, -0.736678, 0, 1.0};
Point(132) = {0.072057, -0.735919, 0, 1.0};
Point(133) = {0.070658, -0.735134, 0, 1.0};
Point(134) = {0.068943, -0.734300, 0, 1.0};
Point(135) = {0.066921, -0.733430, 0, 1.0};
Point(136) = {0.064595, -0.732546, 0, 1.0};
Point(137) = {0.061977, -0.731667, 0, 1.0};
Point(138) = {0.059080, -0.730781, 0, 1.0};
Point(139) = {0.055916, -0.729865, 0, 1.0};
Point(140) = {0.052501, -0.728927, 0, 1.0};
Point(141) = {0.048846, -0.728001, 0, 1.0};
Point(142) = {0.044961, -0.727121, 0, 1.0};
Point(143) = {0.040866, -0.726286, 0, 1.0};
Point(144) = {0.036576, -0.725485, 0, 1.0};
Point(145) = {0.032114, -0.724711, 0, 1.0};
Point(146) = {0.027497, -0.723984, 0, 1.0};
Point(147) = {0.022741, -0.723333, 0, 1.0};
Point(148) = {0.017866, -0.722762, 0, 1.0};
Point(149) = {0.012895, -0.722256, 0, 1.0};
Point(150) = {0.007847, -0.721822, 0, 1.0};
Point(151) = {0.002743, -0.721493, 0, 1.0};
Point(152) = {-0.002401, -0.721302, 0, 1.0};
Point(153) = {-0.007565, -0.721264, 0, 1.0};
Point(154) = {-0.012724, -0.721363, 0, 1.0};
Point(155) = {-0.017855, -0.721568, 0, 1.0};
Point(156) = {-0.022926, -0.721848, 0, 1.0};
Point(157) = {-0.027917, -0.722171, 0, 1.0};
Point(158) = {-0.032799, -0.722496, 0, 1.0};
Point(159) = {-0.037545, -0.722775, 0, 1.0};
Point(160) = {-0.042128, -0.722946, 0, 1.0};
Point(161) = {-0.046523, -0.722965, 0, 1.0};
Point(162) = {-0.050709, -0.722829, 0, 1.0};
Point(163) = {-0.054672, -0.722564, 0, 1.0};
Point(164) = {-0.058400, -0.722205, 0, 1.0};
Point(165) = {-0.061882, -0.721784, 0, 1.0};
Point(166) = {-0.065105, -0.721329, 0, 1.0};
Point(167) = {-0.068057, -0.720873, 0, 1.0};
Point(168) = {-0.070734, -0.720448, 0, 1.0};
Point(169) = {-0.073124, -0.720068, 0, 1.0};
Point(170) = {-0.074420, -0.719863, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:60};
Spline(3) = {60:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:145};
Spline(7) = {145:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
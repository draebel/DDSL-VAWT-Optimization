SetFactory("OpenCASCADE");

Point(1) = {0.074421, 0.740174, 0, 1.0};
Point(2) = {0.071093, 0.740880, 0, 1.0};
Point(3) = {0.066632, 0.741927, 0, 1.0};
Point(4) = {0.061571, 0.743079, 0, 1.0};
Point(5) = {0.055955, 0.744297, 0, 1.0};
Point(6) = {0.049891, 0.745565, 0, 1.0};
Point(7) = {0.043498, 0.746824, 0, 1.0};
Point(8) = {0.036881, 0.747998, 0, 1.0};
Point(9) = {0.030133, 0.749000, 0, 1.0};
Point(10) = {0.023338, 0.749728, 0, 1.0};
Point(11) = {0.016526, 0.750000, 0, 1.0};
Point(12) = {0.009510, 0.749804, 0, 1.0};
Point(13) = {0.002334, 0.749272, 0, 1.0};
Point(14) = {-0.004924, 0.748453, 0, 1.0};
Point(15) = {-0.012182, 0.747383, 0, 1.0};
Point(16) = {-0.019365, 0.746090, 0, 1.0};
Point(17) = {-0.026391, 0.744604, 0, 1.0};
Point(18) = {-0.033188, 0.742954, 0, 1.0};
Point(19) = {-0.039677, 0.741169, 0, 1.0};
Point(20) = {-0.045791, 0.739278, 0, 1.0};
Point(21) = {-0.051458, 0.737312, 0, 1.0};
Point(22) = {-0.056620, 0.735300, 0, 1.0};
Point(23) = {-0.061218, 0.733277, 0, 1.0};
Point(24) = {-0.065201, 0.731273, 0, 1.0};
Point(25) = {-0.068525, 0.729324, 0, 1.0};
Point(26) = {-0.071152, 0.727466, 0, 1.0};
Point(27) = {-0.073060, 0.725739, 0, 1.0};
Point(28) = {-0.074214, 0.724207, 0, 1.0};
Point(29) = {-0.074568, 0.723286, 0, 1.0};
Point(30) = {-0.074595, 0.723009, 0, 1.0};
Point(31) = {-0.074594, 0.722965, 0, 1.0};
Point(32) = {-0.074587, 0.722885, 0, 1.0};
Point(33) = {-0.074561, 0.722773, 0, 1.0};
Point(34) = {-0.074508, 0.722669, 0, 1.0};
Point(35) = {-0.074432, 0.722564, 0, 1.0};
Point(36) = {-0.074224, 0.722351, 0, 1.0};
Point(37) = {-0.073894, 0.722099, 0, 1.0};
Point(38) = {-0.072154, 0.721247, 0, 1.0};
Point(39) = {-0.069526, 0.720461, 0, 1.0};
Point(40) = {-0.066033, 0.719751, 0, 1.0};
Point(41) = {-0.061730, 0.719102, 0, 1.0};
Point(42) = {-0.056674, 0.718500, 0, 1.0};
Point(43) = {-0.050942, 0.717911, 0, 1.0};
Point(44) = {-0.044654, 0.717323, 0, 1.0};
Point(45) = {-0.037912, 0.716708, 0, 1.0};
Point(46) = {-0.030906, 0.716084, 0, 1.0};
Point(47) = {-0.023775, 0.715446, 0, 1.0};
Point(48) = {-0.016848, 0.714950, 0, 1.0};
Point(49) = {-0.010153, 0.714957, 0, 1.0};
Point(50) = {-0.003463, 0.715554, 0, 1.0};
Point(51) = {0.003201, 0.716753, 0, 1.0};
Point(52) = {0.010050, 0.718553, 0, 1.0};
Point(53) = {0.017097, 0.720745, 0, 1.0};
Point(54) = {0.024286, 0.723197, 0, 1.0};
Point(55) = {0.031550, 0.725786, 0, 1.0};
Point(56) = {0.038802, 0.728390, 0, 1.0};
Point(57) = {0.045934, 0.730890, 0, 1.0};
Point(58) = {0.052817, 0.733173, 0, 1.0};
Point(59) = {0.059300, 0.735143, 0, 1.0};
Point(60) = {0.065215, 0.736728, 0, 1.0};
Point(61) = {0.070376, 0.737894, 0, 1.0};
Point(62) = {0.074582, 0.738648, 0, 1.0};
Point(63) = {-0.074421, -0.740174, 0, 1.0};
Point(64) = {-0.071093, -0.740880, 0, 1.0};
Point(65) = {-0.066632, -0.741927, 0, 1.0};
Point(66) = {-0.061571, -0.743079, 0, 1.0};
Point(67) = {-0.055955, -0.744297, 0, 1.0};
Point(68) = {-0.049891, -0.745565, 0, 1.0};
Point(69) = {-0.043498, -0.746824, 0, 1.0};
Point(70) = {-0.036881, -0.747998, 0, 1.0};
Point(71) = {-0.030133, -0.749000, 0, 1.0};
Point(72) = {-0.023338, -0.749728, 0, 1.0};
Point(73) = {-0.016526, -0.750000, 0, 1.0};
Point(74) = {-0.009510, -0.749804, 0, 1.0};
Point(75) = {-0.002334, -0.749272, 0, 1.0};
Point(76) = {0.004924, -0.748453, 0, 1.0};
Point(77) = {0.012182, -0.747383, 0, 1.0};
Point(78) = {0.019365, -0.746090, 0, 1.0};
Point(79) = {0.026391, -0.744604, 0, 1.0};
Point(80) = {0.033188, -0.742954, 0, 1.0};
Point(81) = {0.039677, -0.741169, 0, 1.0};
Point(82) = {0.045791, -0.739278, 0, 1.0};
Point(83) = {0.051458, -0.737312, 0, 1.0};
Point(84) = {0.056620, -0.735300, 0, 1.0};
Point(85) = {0.061218, -0.733277, 0, 1.0};
Point(86) = {0.065201, -0.731273, 0, 1.0};
Point(87) = {0.068525, -0.729324, 0, 1.0};
Point(88) = {0.071152, -0.727466, 0, 1.0};
Point(89) = {0.073060, -0.725739, 0, 1.0};
Point(90) = {0.074214, -0.724207, 0, 1.0};
Point(91) = {0.074568, -0.723286, 0, 1.0};
Point(92) = {0.074595, -0.723009, 0, 1.0};
Point(93) = {0.074594, -0.722965, 0, 1.0};
Point(94) = {0.074587, -0.722885, 0, 1.0};
Point(95) = {0.074561, -0.722773, 0, 1.0};
Point(96) = {0.074508, -0.722669, 0, 1.0};
Point(97) = {0.074432, -0.722564, 0, 1.0};
Point(98) = {0.074224, -0.722351, 0, 1.0};
Point(99) = {0.073894, -0.722099, 0, 1.0};
Point(100) = {0.072154, -0.721247, 0, 1.0};
Point(101) = {0.069526, -0.720461, 0, 1.0};
Point(102) = {0.066033, -0.719751, 0, 1.0};
Point(103) = {0.061730, -0.719102, 0, 1.0};
Point(104) = {0.056674, -0.718500, 0, 1.0};
Point(105) = {0.050942, -0.717911, 0, 1.0};
Point(106) = {0.044654, -0.717323, 0, 1.0};
Point(107) = {0.037912, -0.716708, 0, 1.0};
Point(108) = {0.030906, -0.716084, 0, 1.0};
Point(109) = {0.023775, -0.715446, 0, 1.0};
Point(110) = {0.016848, -0.714950, 0, 1.0};
Point(111) = {0.010153, -0.714957, 0, 1.0};
Point(112) = {0.003463, -0.715554, 0, 1.0};
Point(113) = {-0.003201, -0.716753, 0, 1.0};
Point(114) = {-0.010050, -0.718553, 0, 1.0};
Point(115) = {-0.017097, -0.720745, 0, 1.0};
Point(116) = {-0.024286, -0.723197, 0, 1.0};
Point(117) = {-0.031550, -0.725786, 0, 1.0};
Point(118) = {-0.038802, -0.728390, 0, 1.0};
Point(119) = {-0.045934, -0.730890, 0, 1.0};
Point(120) = {-0.052817, -0.733173, 0, 1.0};
Point(121) = {-0.059300, -0.735143, 0, 1.0};
Point(122) = {-0.065215, -0.736728, 0, 1.0};
Point(123) = {-0.070376, -0.737894, 0, 1.0};
Point(124) = {-0.074582, -0.738648, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:45};
Spline(3) = {45:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:80};
Spline(6) = {80:107};
Spline(7) = {107:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {36.00000000, 15.00000000, 0, 1.0};
Point(128) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
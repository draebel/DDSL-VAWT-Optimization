SetFactory("OpenCASCADE");

Point(1) = {0.074770, 0.726299, 0, 1.0};
Point(2) = {0.071214, 0.727484, 0, 1.0};
Point(3) = {0.067379, 0.728809, 0, 1.0};
Point(4) = {0.059709, 0.731460, 0, 1.0};
Point(5) = {0.052033, 0.734052, 0, 1.0};
Point(6) = {0.044343, 0.736518, 0, 1.0};
Point(7) = {0.036632, 0.738793, 0, 1.0};
Point(8) = {0.028896, 0.740827, 0, 1.0};
Point(9) = {0.021129, 0.742584, 0, 1.0};
Point(10) = {0.013336, 0.744088, 0, 1.0};
Point(11) = {0.005520, 0.745392, 0, 1.0};
Point(12) = {-0.002313, 0.746528, 0, 1.0};
Point(13) = {-0.010163, 0.747512, 0, 1.0};
Point(14) = {-0.018029, 0.748347, 0, 1.0};
Point(15) = {-0.025912, 0.749028, 0, 1.0};
Point(16) = {-0.033812, 0.749550, 0, 1.0};
Point(17) = {-0.041732, 0.749886, 0, 1.0};
Point(18) = {-0.049675, 0.750000, 0, 1.0};
Point(19) = {-0.053659, 0.749951, 0, 1.0};
Point(20) = {-0.057652, 0.749806, 0, 1.0};
Point(21) = {-0.060857, 0.749596, 0, 1.0};
Point(22) = {-0.063270, 0.749356, 0, 1.0};
Point(23) = {-0.065698, 0.748979, 0, 1.0};
Point(24) = {-0.068150, 0.748372, 0, 1.0};
Point(25) = {-0.069808, 0.747757, 0, 1.0};
Point(26) = {-0.070655, 0.747277, 0, 1.0};
Point(27) = {-0.071348, 0.746757, 0, 1.0};
Point(28) = {-0.071968, 0.746170, 0, 1.0};
Point(29) = {-0.072421, 0.745655, 0, 1.0};
Point(30) = {-0.072792, 0.745167, 0, 1.0};
Point(31) = {-0.073077, 0.744741, 0, 1.0};
Point(32) = {-0.073369, 0.744244, 0, 1.0};
Point(33) = {-0.073672, 0.743650, 0, 1.0};
Point(34) = {-0.073995, 0.742870, 0, 1.0};
Point(35) = {-0.074231, 0.742153, 0, 1.0};
Point(36) = {-0.074365, 0.741656, 0, 1.0};
Point(37) = {-0.074567, 0.740516, 0, 1.0};
Point(38) = {-0.074615, 0.739331, 0, 1.0};
Point(39) = {-0.074583, 0.738895, 0, 1.0};
Point(40) = {-0.074486, 0.738323, 0, 1.0};
Point(41) = {-0.074311, 0.737728, 0, 1.0};
Point(42) = {-0.074123, 0.737261, 0, 1.0};
Point(43) = {-0.073927, 0.736864, 0, 1.0};
Point(44) = {-0.073725, 0.736519, 0, 1.0};
Point(45) = {-0.073450, 0.736119, 0, 1.0};
Point(46) = {-0.073099, 0.735688, 0, 1.0};
Point(47) = {-0.072598, 0.735172, 0, 1.0};
Point(48) = {-0.072016, 0.734669, 0, 1.0};
Point(49) = {-0.071279, 0.734125, 0, 1.0};
Point(50) = {-0.069786, 0.733216, 0, 1.0};
Point(51) = {-0.067518, 0.732108, 0, 1.0};
Point(52) = {-0.065231, 0.731188, 0, 1.0};
Point(53) = {-0.062930, 0.730388, 0, 1.0};
Point(54) = {-0.059850, 0.729441, 0, 1.0};
Point(55) = {-0.055985, 0.728394, 0, 1.0};
Point(56) = {-0.052109, 0.727449, 0, 1.0};
Point(57) = {-0.044330, 0.725806, 0, 1.0};
Point(58) = {-0.036522, 0.724434, 0, 1.0};
Point(59) = {-0.028689, 0.723293, 0, 1.0};
Point(60) = {-0.020833, 0.722365, 0, 1.0};
Point(61) = {-0.012953, 0.721660, 0, 1.0};
Point(62) = {-0.005044, 0.721220, 0, 1.0};
Point(63) = {0.002901, 0.721123, 0, 1.0};
Point(64) = {0.010884, 0.721371, 0, 1.0};
Point(65) = {0.018893, 0.721861, 0, 1.0};
Point(66) = {0.026925, 0.722568, 0, 1.0};
Point(67) = {0.034973, 0.723419, 0, 1.0};
Point(68) = {0.043023, 0.724283, 0, 1.0};
Point(69) = {0.051058, 0.725017, 0, 1.0};
Point(70) = {0.059060, 0.725446, 0, 1.0};
Point(71) = {0.067013, 0.725410, 0, 1.0};
Point(72) = {0.070965, 0.725175, 0, 1.0};
Point(73) = {0.074609, 0.724814, 0, 1.0};
Point(74) = {-0.074770, -0.726299, 0, 1.0};
Point(75) = {-0.071214, -0.727484, 0, 1.0};
Point(76) = {-0.067379, -0.728809, 0, 1.0};
Point(77) = {-0.059709, -0.731460, 0, 1.0};
Point(78) = {-0.052033, -0.734052, 0, 1.0};
Point(79) = {-0.044343, -0.736518, 0, 1.0};
Point(80) = {-0.036632, -0.738793, 0, 1.0};
Point(81) = {-0.028896, -0.740827, 0, 1.0};
Point(82) = {-0.021129, -0.742584, 0, 1.0};
Point(83) = {-0.013336, -0.744088, 0, 1.0};
Point(84) = {-0.005520, -0.745392, 0, 1.0};
Point(85) = {0.002313, -0.746528, 0, 1.0};
Point(86) = {0.010163, -0.747512, 0, 1.0};
Point(87) = {0.018029, -0.748347, 0, 1.0};
Point(88) = {0.025912, -0.749028, 0, 1.0};
Point(89) = {0.033812, -0.749550, 0, 1.0};
Point(90) = {0.041732, -0.749886, 0, 1.0};
Point(91) = {0.049675, -0.750000, 0, 1.0};
Point(92) = {0.053659, -0.749951, 0, 1.0};
Point(93) = {0.057652, -0.749806, 0, 1.0};
Point(94) = {0.060857, -0.749596, 0, 1.0};
Point(95) = {0.063270, -0.749356, 0, 1.0};
Point(96) = {0.065698, -0.748979, 0, 1.0};
Point(97) = {0.068150, -0.748372, 0, 1.0};
Point(98) = {0.069808, -0.747757, 0, 1.0};
Point(99) = {0.070655, -0.747277, 0, 1.0};
Point(100) = {0.071348, -0.746757, 0, 1.0};
Point(101) = {0.071968, -0.746170, 0, 1.0};
Point(102) = {0.072421, -0.745655, 0, 1.0};
Point(103) = {0.072792, -0.745167, 0, 1.0};
Point(104) = {0.073077, -0.744741, 0, 1.0};
Point(105) = {0.073369, -0.744244, 0, 1.0};
Point(106) = {0.073672, -0.743650, 0, 1.0};
Point(107) = {0.073995, -0.742870, 0, 1.0};
Point(108) = {0.074231, -0.742153, 0, 1.0};
Point(109) = {0.074365, -0.741656, 0, 1.0};
Point(110) = {0.074567, -0.740516, 0, 1.0};
Point(111) = {0.074615, -0.739331, 0, 1.0};
Point(112) = {0.074583, -0.738895, 0, 1.0};
Point(113) = {0.074486, -0.738323, 0, 1.0};
Point(114) = {0.074311, -0.737728, 0, 1.0};
Point(115) = {0.074123, -0.737261, 0, 1.0};
Point(116) = {0.073927, -0.736864, 0, 1.0};
Point(117) = {0.073725, -0.736519, 0, 1.0};
Point(118) = {0.073450, -0.736119, 0, 1.0};
Point(119) = {0.073099, -0.735688, 0, 1.0};
Point(120) = {0.072598, -0.735172, 0, 1.0};
Point(121) = {0.072016, -0.734669, 0, 1.0};
Point(122) = {0.071279, -0.734125, 0, 1.0};
Point(123) = {0.069786, -0.733216, 0, 1.0};
Point(124) = {0.067518, -0.732108, 0, 1.0};
Point(125) = {0.065231, -0.731188, 0, 1.0};
Point(126) = {0.062930, -0.730388, 0, 1.0};
Point(127) = {0.059850, -0.729441, 0, 1.0};
Point(128) = {0.055985, -0.728394, 0, 1.0};
Point(129) = {0.052109, -0.727449, 0, 1.0};
Point(130) = {0.044330, -0.725806, 0, 1.0};
Point(131) = {0.036522, -0.724434, 0, 1.0};
Point(132) = {0.028689, -0.723293, 0, 1.0};
Point(133) = {0.020833, -0.722365, 0, 1.0};
Point(134) = {0.012953, -0.721660, 0, 1.0};
Point(135) = {0.005044, -0.721220, 0, 1.0};
Point(136) = {-0.002901, -0.721123, 0, 1.0};
Point(137) = {-0.010884, -0.721371, 0, 1.0};
Point(138) = {-0.018893, -0.721861, 0, 1.0};
Point(139) = {-0.026925, -0.722568, 0, 1.0};
Point(140) = {-0.034973, -0.723419, 0, 1.0};
Point(141) = {-0.043023, -0.724283, 0, 1.0};
Point(142) = {-0.051058, -0.725017, 0, 1.0};
Point(143) = {-0.059060, -0.725446, 0, 1.0};
Point(144) = {-0.067013, -0.725410, 0, 1.0};
Point(145) = {-0.070965, -0.725175, 0, 1.0};
Point(146) = {-0.074609, -0.724814, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:58};
Spline(3) = {58:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:89};
Spline(6) = {89:131};
Spline(7) = {131:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
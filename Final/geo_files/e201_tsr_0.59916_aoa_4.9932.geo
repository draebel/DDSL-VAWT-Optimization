SetFactory("OpenCASCADE");

Point(1) = {0.111931, 0.727754, 0, 1.0};
Point(2) = {0.111420, 0.727886, 0, 1.0};
Point(3) = {0.109946, 0.728304, 0, 1.0};
Point(4) = {0.107628, 0.729017, 0, 1.0};
Point(5) = {0.104561, 0.729967, 0, 1.0};
Point(6) = {0.100787, 0.731084, 0, 1.0};
Point(7) = {0.096324, 0.732342, 0, 1.0};
Point(8) = {0.091221, 0.733736, 0, 1.0};
Point(9) = {0.085556, 0.735259, 0, 1.0};
Point(10) = {0.079408, 0.736884, 0, 1.0};
Point(11) = {0.072865, 0.738580, 0, 1.0};
Point(12) = {0.066015, 0.740314, 0, 1.0};
Point(13) = {0.058950, 0.742048, 0, 1.0};
Point(14) = {0.051758, 0.743735, 0, 1.0};
Point(15) = {0.044537, 0.745318, 0, 1.0};
Point(16) = {0.037346, 0.746724, 0, 1.0};
Point(17) = {0.030233, 0.747908, 0, 1.0};
Point(18) = {0.023234, 0.748837, 0, 1.0};
Point(19) = {0.016388, 0.749495, 0, 1.0};
Point(20) = {0.009733, 0.749879, 0, 1.0};
Point(21) = {0.003302, 0.750000, 0, 1.0};
Point(22) = {-0.002852, 0.749892, 0, 1.0};
Point(23) = {-0.008664, 0.749577, 0, 1.0};
Point(24) = {-0.014075, 0.749073, 0, 1.0};
Point(25) = {-0.019027, 0.748399, 0, 1.0};
Point(26) = {-0.023471, 0.747572, 0, 1.0};
Point(27) = {-0.027362, 0.746614, 0, 1.0};
Point(28) = {-0.030665, 0.745551, 0, 1.0};
Point(29) = {-0.033350, 0.744410, 0, 1.0};
Point(30) = {-0.035394, 0.743232, 0, 1.0};
Point(31) = {-0.036777, 0.742066, 0, 1.0};
Point(32) = {-0.037467, 0.741000, 0, 1.0};
Point(33) = {-0.037284, 0.740056, 0, 1.0};
Point(34) = {-0.036196, 0.739121, 0, 1.0};
Point(35) = {-0.034331, 0.738163, 0, 1.0};
Point(36) = {-0.031707, 0.737231, 0, 1.0};
Point(37) = {-0.028343, 0.736340, 0, 1.0};
Point(38) = {-0.024266, 0.735504, 0, 1.0};
Point(39) = {-0.019514, 0.734732, 0, 1.0};
Point(40) = {-0.014128, 0.734026, 0, 1.0};
Point(41) = {-0.008162, 0.733388, 0, 1.0};
Point(42) = {-0.001680, 0.732820, 0, 1.0};
Point(43) = {0.005248, 0.732322, 0, 1.0};
Point(44) = {0.012544, 0.731905, 0, 1.0};
Point(45) = {0.020151, 0.731593, 0, 1.0};
Point(46) = {0.028030, 0.731364, 0, 1.0};
Point(47) = {0.036099, 0.731171, 0, 1.0};
Point(48) = {0.044251, 0.730983, 0, 1.0};
Point(49) = {0.052376, 0.730783, 0, 1.0};
Point(50) = {0.060366, 0.730565, 0, 1.0};
Point(51) = {0.068111, 0.730319, 0, 1.0};
Point(52) = {0.075506, 0.730047, 0, 1.0};
Point(53) = {0.082450, 0.729749, 0, 1.0};
Point(54) = {0.088847, 0.729432, 0, 1.0};
Point(55) = {0.094607, 0.729107, 0, 1.0};
Point(56) = {0.099647, 0.728787, 0, 1.0};
Point(57) = {0.103902, 0.728493, 0, 1.0};
Point(58) = {0.107323, 0.728234, 0, 1.0};
Point(59) = {0.109848, 0.728004, 0, 1.0};
Point(60) = {0.111404, 0.727826, 0, 1.0};
Point(61) = {-0.111931, -0.727754, 0, 1.0};
Point(62) = {-0.111420, -0.727886, 0, 1.0};
Point(63) = {-0.109946, -0.728304, 0, 1.0};
Point(64) = {-0.107628, -0.729017, 0, 1.0};
Point(65) = {-0.104561, -0.729967, 0, 1.0};
Point(66) = {-0.100787, -0.731084, 0, 1.0};
Point(67) = {-0.096324, -0.732342, 0, 1.0};
Point(68) = {-0.091221, -0.733736, 0, 1.0};
Point(69) = {-0.085556, -0.735259, 0, 1.0};
Point(70) = {-0.079408, -0.736884, 0, 1.0};
Point(71) = {-0.072865, -0.738580, 0, 1.0};
Point(72) = {-0.066015, -0.740314, 0, 1.0};
Point(73) = {-0.058950, -0.742048, 0, 1.0};
Point(74) = {-0.051758, -0.743735, 0, 1.0};
Point(75) = {-0.044537, -0.745318, 0, 1.0};
Point(76) = {-0.037346, -0.746724, 0, 1.0};
Point(77) = {-0.030233, -0.747908, 0, 1.0};
Point(78) = {-0.023234, -0.748837, 0, 1.0};
Point(79) = {-0.016388, -0.749495, 0, 1.0};
Point(80) = {-0.009733, -0.749879, 0, 1.0};
Point(81) = {-0.003302, -0.750000, 0, 1.0};
Point(82) = {0.002852, -0.749892, 0, 1.0};
Point(83) = {0.008664, -0.749577, 0, 1.0};
Point(84) = {0.014075, -0.749073, 0, 1.0};
Point(85) = {0.019027, -0.748399, 0, 1.0};
Point(86) = {0.023471, -0.747572, 0, 1.0};
Point(87) = {0.027362, -0.746614, 0, 1.0};
Point(88) = {0.030665, -0.745551, 0, 1.0};
Point(89) = {0.033350, -0.744410, 0, 1.0};
Point(90) = {0.035394, -0.743232, 0, 1.0};
Point(91) = {0.036777, -0.742066, 0, 1.0};
Point(92) = {0.037467, -0.741000, 0, 1.0};
Point(93) = {0.037284, -0.740056, 0, 1.0};
Point(94) = {0.036196, -0.739121, 0, 1.0};
Point(95) = {0.034331, -0.738163, 0, 1.0};
Point(96) = {0.031707, -0.737231, 0, 1.0};
Point(97) = {0.028343, -0.736340, 0, 1.0};
Point(98) = {0.024266, -0.735504, 0, 1.0};
Point(99) = {0.019514, -0.734732, 0, 1.0};
Point(100) = {0.014128, -0.734026, 0, 1.0};
Point(101) = {0.008162, -0.733388, 0, 1.0};
Point(102) = {0.001680, -0.732820, 0, 1.0};
Point(103) = {-0.005248, -0.732322, 0, 1.0};
Point(104) = {-0.012544, -0.731905, 0, 1.0};
Point(105) = {-0.020151, -0.731593, 0, 1.0};
Point(106) = {-0.028030, -0.731364, 0, 1.0};
Point(107) = {-0.036099, -0.731171, 0, 1.0};
Point(108) = {-0.044251, -0.730983, 0, 1.0};
Point(109) = {-0.052376, -0.730783, 0, 1.0};
Point(110) = {-0.060366, -0.730565, 0, 1.0};
Point(111) = {-0.068111, -0.730319, 0, 1.0};
Point(112) = {-0.075506, -0.730047, 0, 1.0};
Point(113) = {-0.082450, -0.729749, 0, 1.0};
Point(114) = {-0.088847, -0.729432, 0, 1.0};
Point(115) = {-0.094607, -0.729107, 0, 1.0};
Point(116) = {-0.099647, -0.728787, 0, 1.0};
Point(117) = {-0.103902, -0.728493, 0, 1.0};
Point(118) = {-0.107323, -0.728234, 0, 1.0};
Point(119) = {-0.109848, -0.728004, 0, 1.0};
Point(120) = {-0.111404, -0.727826, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
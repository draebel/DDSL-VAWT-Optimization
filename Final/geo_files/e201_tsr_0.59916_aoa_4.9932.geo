SetFactory("OpenCASCADE");

Point(1) = {0.112023, 0.727757, 0, 1.0};
Point(2) = {0.111513, 0.727889, 0, 1.0};
Point(3) = {0.110039, 0.728306, 0, 1.0};
Point(4) = {0.107721, 0.729019, 0, 1.0};
Point(5) = {0.104654, 0.729969, 0, 1.0};
Point(6) = {0.100881, 0.731086, 0, 1.0};
Point(7) = {0.096419, 0.732343, 0, 1.0};
Point(8) = {0.091316, 0.733738, 0, 1.0};
Point(9) = {0.085652, 0.735261, 0, 1.0};
Point(10) = {0.079505, 0.736885, 0, 1.0};
Point(11) = {0.072962, 0.738581, 0, 1.0};
Point(12) = {0.066113, 0.740315, 0, 1.0};
Point(13) = {0.059048, 0.742049, 0, 1.0};
Point(14) = {0.051858, 0.743736, 0, 1.0};
Point(15) = {0.044637, 0.745318, 0, 1.0};
Point(16) = {0.037447, 0.746725, 0, 1.0};
Point(17) = {0.030335, 0.747908, 0, 1.0};
Point(18) = {0.023337, 0.748837, 0, 1.0};
Point(19) = {0.016491, 0.749495, 0, 1.0};
Point(20) = {0.009837, 0.749879, 0, 1.0};
Point(21) = {0.003407, 0.750000, 0, 1.0};
Point(22) = {-0.002747, 0.749892, 0, 1.0};
Point(23) = {-0.008558, 0.749578, 0, 1.0};
Point(24) = {-0.013968, 0.749073, 0, 1.0};
Point(25) = {-0.018920, 0.748399, 0, 1.0};
Point(26) = {-0.023363, 0.747572, 0, 1.0};
Point(27) = {-0.027254, 0.746615, 0, 1.0};
Point(28) = {-0.030557, 0.745551, 0, 1.0};
Point(29) = {-0.033242, 0.744411, 0, 1.0};
Point(30) = {-0.035285, 0.743233, 0, 1.0};
Point(31) = {-0.036668, 0.742067, 0, 1.0};
Point(32) = {-0.037358, 0.741001, 0, 1.0};
Point(33) = {-0.037175, 0.740057, 0, 1.0};
Point(34) = {-0.036087, 0.739122, 0, 1.0};
Point(35) = {-0.034223, 0.738164, 0, 1.0};
Point(36) = {-0.031599, 0.737232, 0, 1.0};
Point(37) = {-0.028235, 0.736342, 0, 1.0};
Point(38) = {-0.024158, 0.735506, 0, 1.0};
Point(39) = {-0.019407, 0.734734, 0, 1.0};
Point(40) = {-0.014021, 0.734028, 0, 1.0};
Point(41) = {-0.008056, 0.733390, 0, 1.0};
Point(42) = {-0.001575, 0.732822, 0, 1.0};
Point(43) = {0.005352, 0.732324, 0, 1.0};
Point(44) = {0.012648, 0.731907, 0, 1.0};
Point(45) = {0.020254, 0.731595, 0, 1.0};
Point(46) = {0.028132, 0.731366, 0, 1.0};
Point(47) = {0.036200, 0.731173, 0, 1.0};
Point(48) = {0.044351, 0.730985, 0, 1.0};
Point(49) = {0.052476, 0.730785, 0, 1.0};
Point(50) = {0.060465, 0.730568, 0, 1.0};
Point(51) = {0.068209, 0.730322, 0, 1.0};
Point(52) = {0.075603, 0.730049, 0, 1.0};
Point(53) = {0.082546, 0.729751, 0, 1.0};
Point(54) = {0.088942, 0.729435, 0, 1.0};
Point(55) = {0.094701, 0.729109, 0, 1.0};
Point(56) = {0.099741, 0.728789, 0, 1.0};
Point(57) = {0.103996, 0.728496, 0, 1.0};
Point(58) = {0.107416, 0.728236, 0, 1.0};
Point(59) = {0.109941, 0.728006, 0, 1.0};
Point(60) = {0.111497, 0.727828, 0, 1.0};
Point(61) = {-0.112023, -0.727757, 0, 1.0};
Point(62) = {-0.111513, -0.727889, 0, 1.0};
Point(63) = {-0.110039, -0.728306, 0, 1.0};
Point(64) = {-0.107721, -0.729019, 0, 1.0};
Point(65) = {-0.104654, -0.729969, 0, 1.0};
Point(66) = {-0.100881, -0.731086, 0, 1.0};
Point(67) = {-0.096419, -0.732343, 0, 1.0};
Point(68) = {-0.091316, -0.733738, 0, 1.0};
Point(69) = {-0.085652, -0.735261, 0, 1.0};
Point(70) = {-0.079505, -0.736885, 0, 1.0};
Point(71) = {-0.072962, -0.738581, 0, 1.0};
Point(72) = {-0.066113, -0.740315, 0, 1.0};
Point(73) = {-0.059048, -0.742049, 0, 1.0};
Point(74) = {-0.051858, -0.743736, 0, 1.0};
Point(75) = {-0.044637, -0.745318, 0, 1.0};
Point(76) = {-0.037447, -0.746725, 0, 1.0};
Point(77) = {-0.030335, -0.747908, 0, 1.0};
Point(78) = {-0.023337, -0.748837, 0, 1.0};
Point(79) = {-0.016491, -0.749495, 0, 1.0};
Point(80) = {-0.009837, -0.749879, 0, 1.0};
Point(81) = {-0.003407, -0.750000, 0, 1.0};
Point(82) = {0.002747, -0.749892, 0, 1.0};
Point(83) = {0.008558, -0.749578, 0, 1.0};
Point(84) = {0.013968, -0.749073, 0, 1.0};
Point(85) = {0.018920, -0.748399, 0, 1.0};
Point(86) = {0.023363, -0.747572, 0, 1.0};
Point(87) = {0.027254, -0.746615, 0, 1.0};
Point(88) = {0.030557, -0.745551, 0, 1.0};
Point(89) = {0.033242, -0.744411, 0, 1.0};
Point(90) = {0.035285, -0.743233, 0, 1.0};
Point(91) = {0.036668, -0.742067, 0, 1.0};
Point(92) = {0.037358, -0.741001, 0, 1.0};
Point(93) = {0.037175, -0.740057, 0, 1.0};
Point(94) = {0.036087, -0.739122, 0, 1.0};
Point(95) = {0.034223, -0.738164, 0, 1.0};
Point(96) = {0.031599, -0.737232, 0, 1.0};
Point(97) = {0.028235, -0.736342, 0, 1.0};
Point(98) = {0.024158, -0.735506, 0, 1.0};
Point(99) = {0.019407, -0.734734, 0, 1.0};
Point(100) = {0.014021, -0.734028, 0, 1.0};
Point(101) = {0.008056, -0.733390, 0, 1.0};
Point(102) = {0.001575, -0.732822, 0, 1.0};
Point(103) = {-0.005352, -0.732324, 0, 1.0};
Point(104) = {-0.012648, -0.731907, 0, 1.0};
Point(105) = {-0.020254, -0.731595, 0, 1.0};
Point(106) = {-0.028132, -0.731366, 0, 1.0};
Point(107) = {-0.036200, -0.731173, 0, 1.0};
Point(108) = {-0.044351, -0.730985, 0, 1.0};
Point(109) = {-0.052476, -0.730785, 0, 1.0};
Point(110) = {-0.060465, -0.730568, 0, 1.0};
Point(111) = {-0.068209, -0.730322, 0, 1.0};
Point(112) = {-0.075603, -0.730049, 0, 1.0};
Point(113) = {-0.082546, -0.729751, 0, 1.0};
Point(114) = {-0.088942, -0.729435, 0, 1.0};
Point(115) = {-0.094701, -0.729109, 0, 1.0};
Point(116) = {-0.099741, -0.728789, 0, 1.0};
Point(117) = {-0.103996, -0.728496, 0, 1.0};
Point(118) = {-0.107416, -0.728236, 0, 1.0};
Point(119) = {-0.109941, -0.728006, 0, 1.0};
Point(120) = {-0.111497, -0.727828, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
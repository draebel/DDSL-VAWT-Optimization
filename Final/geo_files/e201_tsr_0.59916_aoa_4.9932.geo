SetFactory("OpenCASCADE");

Point(1) = {0.149241, 0.720339, 0, 1.0};
Point(2) = {0.148560, 0.720515, 0, 1.0};
Point(3) = {0.146595, 0.721072, 0, 1.0};
Point(4) = {0.143504, 0.722023, 0, 1.0};
Point(5) = {0.139415, 0.723289, 0, 1.0};
Point(6) = {0.134383, 0.724779, 0, 1.0};
Point(7) = {0.128432, 0.726455, 0, 1.0};
Point(8) = {0.121628, 0.728315, 0, 1.0};
Point(9) = {0.114075, 0.730346, 0, 1.0};
Point(10) = {0.105878, 0.732511, 0, 1.0};
Point(11) = {0.097154, 0.734773, 0, 1.0};
Point(12) = {0.088020, 0.737085, 0, 1.0};
Point(13) = {0.078600, 0.739398, 0, 1.0};
Point(14) = {0.069011, 0.741647, 0, 1.0};
Point(15) = {0.059382, 0.743757, 0, 1.0};
Point(16) = {0.049795, 0.745633, 0, 1.0};
Point(17) = {0.040310, 0.747210, 0, 1.0};
Point(18) = {0.030979, 0.748449, 0, 1.0};
Point(19) = {0.021851, 0.749327, 0, 1.0};
Point(20) = {0.012978, 0.749839, 0, 1.0};
Point(21) = {0.004403, 0.750000, 0, 1.0};
Point(22) = {-0.003803, 0.749856, 0, 1.0};
Point(23) = {-0.011553, 0.749437, 0, 1.0};
Point(24) = {-0.018767, 0.748764, 0, 1.0};
Point(25) = {-0.025370, 0.747865, 0, 1.0};
Point(26) = {-0.031294, 0.746763, 0, 1.0};
Point(27) = {-0.036483, 0.745486, 0, 1.0};
Point(28) = {-0.040887, 0.744067, 0, 1.0};
Point(29) = {-0.044467, 0.742547, 0, 1.0};
Point(30) = {-0.047192, 0.740977, 0, 1.0};
Point(31) = {-0.049037, 0.739421, 0, 1.0};
Point(32) = {-0.049956, 0.738000, 0, 1.0};
Point(33) = {-0.049712, 0.736742, 0, 1.0};
Point(34) = {-0.048261, 0.735495, 0, 1.0};
Point(35) = {-0.045775, 0.734218, 0, 1.0};
Point(36) = {-0.042276, 0.732974, 0, 1.0};
Point(37) = {-0.037790, 0.731787, 0, 1.0};
Point(38) = {-0.032355, 0.730672, 0, 1.0};
Point(39) = {-0.026018, 0.729643, 0, 1.0};
Point(40) = {-0.018837, 0.728702, 0, 1.0};
Point(41) = {-0.010883, 0.727850, 0, 1.0};
Point(42) = {-0.002240, 0.727093, 0, 1.0};
Point(43) = {0.006997, 0.726429, 0, 1.0};
Point(44) = {0.016726, 0.725874, 0, 1.0};
Point(45) = {0.026868, 0.725458, 0, 1.0};
Point(46) = {0.037373, 0.725152, 0, 1.0};
Point(47) = {0.048132, 0.724895, 0, 1.0};
Point(48) = {0.059001, 0.724644, 0, 1.0};
Point(49) = {0.069835, 0.724378, 0, 1.0};
Point(50) = {0.080488, 0.724087, 0, 1.0};
Point(51) = {0.090815, 0.723759, 0, 1.0};
Point(52) = {0.100675, 0.723396, 0, 1.0};
Point(53) = {0.109933, 0.722998, 0, 1.0};
Point(54) = {0.118463, 0.722576, 0, 1.0};
Point(55) = {0.126142, 0.722142, 0, 1.0};
Point(56) = {0.132863, 0.721716, 0, 1.0};
Point(57) = {0.138536, 0.721324, 0, 1.0};
Point(58) = {0.143097, 0.720978, 0, 1.0};
Point(59) = {0.146463, 0.720672, 0, 1.0};
Point(60) = {0.148539, 0.720434, 0, 1.0};
Point(61) = {-0.149241, -0.720339, 0, 1.0};
Point(62) = {-0.148560, -0.720515, 0, 1.0};
Point(63) = {-0.146595, -0.721072, 0, 1.0};
Point(64) = {-0.143504, -0.722023, 0, 1.0};
Point(65) = {-0.139415, -0.723289, 0, 1.0};
Point(66) = {-0.134383, -0.724779, 0, 1.0};
Point(67) = {-0.128432, -0.726455, 0, 1.0};
Point(68) = {-0.121628, -0.728315, 0, 1.0};
Point(69) = {-0.114075, -0.730346, 0, 1.0};
Point(70) = {-0.105878, -0.732511, 0, 1.0};
Point(71) = {-0.097154, -0.734773, 0, 1.0};
Point(72) = {-0.088020, -0.737085, 0, 1.0};
Point(73) = {-0.078600, -0.739398, 0, 1.0};
Point(74) = {-0.069011, -0.741647, 0, 1.0};
Point(75) = {-0.059382, -0.743757, 0, 1.0};
Point(76) = {-0.049795, -0.745633, 0, 1.0};
Point(77) = {-0.040310, -0.747210, 0, 1.0};
Point(78) = {-0.030979, -0.748449, 0, 1.0};
Point(79) = {-0.021851, -0.749327, 0, 1.0};
Point(80) = {-0.012978, -0.749839, 0, 1.0};
Point(81) = {-0.004403, -0.750000, 0, 1.0};
Point(82) = {0.003803, -0.749856, 0, 1.0};
Point(83) = {0.011553, -0.749437, 0, 1.0};
Point(84) = {0.018767, -0.748764, 0, 1.0};
Point(85) = {0.025370, -0.747865, 0, 1.0};
Point(86) = {0.031294, -0.746763, 0, 1.0};
Point(87) = {0.036483, -0.745486, 0, 1.0};
Point(88) = {0.040887, -0.744067, 0, 1.0};
Point(89) = {0.044467, -0.742547, 0, 1.0};
Point(90) = {0.047192, -0.740977, 0, 1.0};
Point(91) = {0.049037, -0.739421, 0, 1.0};
Point(92) = {0.049956, -0.738000, 0, 1.0};
Point(93) = {0.049712, -0.736742, 0, 1.0};
Point(94) = {0.048261, -0.735495, 0, 1.0};
Point(95) = {0.045775, -0.734218, 0, 1.0};
Point(96) = {0.042276, -0.732974, 0, 1.0};
Point(97) = {0.037790, -0.731787, 0, 1.0};
Point(98) = {0.032355, -0.730672, 0, 1.0};
Point(99) = {0.026018, -0.729643, 0, 1.0};
Point(100) = {0.018837, -0.728702, 0, 1.0};
Point(101) = {0.010883, -0.727850, 0, 1.0};
Point(102) = {0.002240, -0.727093, 0, 1.0};
Point(103) = {-0.006997, -0.726429, 0, 1.0};
Point(104) = {-0.016726, -0.725874, 0, 1.0};
Point(105) = {-0.026868, -0.725458, 0, 1.0};
Point(106) = {-0.037373, -0.725152, 0, 1.0};
Point(107) = {-0.048132, -0.724895, 0, 1.0};
Point(108) = {-0.059001, -0.724644, 0, 1.0};
Point(109) = {-0.069835, -0.724378, 0, 1.0};
Point(110) = {-0.080488, -0.724087, 0, 1.0};
Point(111) = {-0.090815, -0.723759, 0, 1.0};
Point(112) = {-0.100675, -0.723396, 0, 1.0};
Point(113) = {-0.109933, -0.722998, 0, 1.0};
Point(114) = {-0.118463, -0.722576, 0, 1.0};
Point(115) = {-0.126142, -0.722142, 0, 1.0};
Point(116) = {-0.132863, -0.721716, 0, 1.0};
Point(117) = {-0.138536, -0.721324, 0, 1.0};
Point(118) = {-0.143097, -0.720978, 0, 1.0};
Point(119) = {-0.146463, -0.720672, 0, 1.0};
Point(120) = {-0.148539, -0.720434, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074932, 0.736367, 0, 1.0};
Point(2) = {0.073658, 0.736645, 0, 1.0};
Point(3) = {0.069564, 0.737541, 0, 1.0};
Point(4) = {0.064706, 0.738579, 0, 1.0};
Point(5) = {0.059176, 0.739741, 0, 1.0};
Point(6) = {0.053066, 0.741004, 0, 1.0};
Point(7) = {0.046477, 0.742333, 0, 1.0};
Point(8) = {0.039504, 0.743687, 0, 1.0};
Point(9) = {0.032239, 0.745018, 0, 1.0};
Point(10) = {0.024770, 0.746279, 0, 1.0};
Point(11) = {0.017180, 0.747420, 0, 1.0};
Point(12) = {0.009546, 0.748400, 0, 1.0};
Point(13) = {0.001939, 0.749178, 0, 1.0};
Point(14) = {-0.005573, 0.749721, 0, 1.0};
Point(15) = {-0.012929, 0.750000, 0, 1.0};
Point(16) = {-0.020069, 0.749993, 0, 1.0};
Point(17) = {-0.026950, 0.749678, 0, 1.0};
Point(18) = {-0.033541, 0.749058, 0, 1.0};
Point(19) = {-0.039802, 0.748146, 0, 1.0};
Point(20) = {-0.045698, 0.746985, 0, 1.0};
Point(21) = {-0.051181, 0.745603, 0, 1.0};
Point(22) = {-0.056198, 0.744042, 0, 1.0};
Point(23) = {-0.060699, 0.742334, 0, 1.0};
Point(24) = {-0.064643, 0.740519, 0, 1.0};
Point(25) = {-0.067995, 0.738632, 0, 1.0};
Point(26) = {-0.070721, 0.736719, 0, 1.0};
Point(27) = {-0.072801, 0.734832, 0, 1.0};
Point(28) = {-0.074208, 0.733036, 0, 1.0};
Point(29) = {-0.074778, 0.731875, 0, 1.0};
Point(30) = {-0.074910, 0.731413, 0, 1.0};
Point(31) = {-0.074960, 0.731122, 0, 1.0};
Point(32) = {-0.074978, 0.730845, 0, 1.0};
Point(33) = {-0.074975, 0.730714, 0, 1.0};
Point(34) = {-0.074961, 0.730587, 0, 1.0};
Point(35) = {-0.074935, 0.730469, 0, 1.0};
Point(36) = {-0.074893, 0.730354, 0, 1.0};
Point(37) = {-0.074835, 0.730237, 0, 1.0};
Point(38) = {-0.074766, 0.730119, 0, 1.0};
Point(39) = {-0.074595, 0.729879, 0, 1.0};
Point(40) = {-0.074384, 0.729637, 0, 1.0};
Point(41) = {-0.073999, 0.729266, 0, 1.0};
Point(42) = {-0.073541, 0.728894, 0, 1.0};
Point(43) = {-0.071474, 0.727647, 0, 1.0};
Point(44) = {-0.068634, 0.726431, 0, 1.0};
Point(45) = {-0.065074, 0.725282, 0, 1.0};
Point(46) = {-0.060840, 0.724228, 0, 1.0};
Point(47) = {-0.055991, 0.723287, 0, 1.0};
Point(48) = {-0.050595, 0.722484, 0, 1.0};
Point(49) = {-0.044727, 0.721843, 0, 1.0};
Point(50) = {-0.038464, 0.721405, 0, 1.0};
Point(51) = {-0.031891, 0.721224, 0, 1.0};
Point(52) = {-0.025043, 0.721384, 0, 1.0};
Point(53) = {-0.017913, 0.721924, 0, 1.0};
Point(54) = {-0.010486, 0.722849, 0, 1.0};
Point(55) = {-0.002733, 0.724108, 0, 1.0};
Point(56) = {0.005328, 0.725579, 0, 1.0};
Point(57) = {0.013603, 0.727145, 0, 1.0};
Point(58) = {0.021981, 0.728717, 0, 1.0};
Point(59) = {0.030337, 0.730210, 0, 1.0};
Point(60) = {0.038530, 0.731559, 0, 1.0};
Point(61) = {0.046413, 0.732707, 0, 1.0};
Point(62) = {0.053832, 0.733618, 0, 1.0};
Point(63) = {0.060634, 0.734274, 0, 1.0};
Point(64) = {0.066674, 0.734680, 0, 1.0};
Point(65) = {0.071813, 0.734862, 0, 1.0};
Point(66) = {0.074968, 0.734881, 0, 1.0};
Point(67) = {-0.074932, -0.736367, 0, 1.0};
Point(68) = {-0.073658, -0.736645, 0, 1.0};
Point(69) = {-0.069564, -0.737541, 0, 1.0};
Point(70) = {-0.064706, -0.738579, 0, 1.0};
Point(71) = {-0.059176, -0.739741, 0, 1.0};
Point(72) = {-0.053066, -0.741004, 0, 1.0};
Point(73) = {-0.046477, -0.742333, 0, 1.0};
Point(74) = {-0.039504, -0.743687, 0, 1.0};
Point(75) = {-0.032239, -0.745018, 0, 1.0};
Point(76) = {-0.024770, -0.746279, 0, 1.0};
Point(77) = {-0.017180, -0.747420, 0, 1.0};
Point(78) = {-0.009546, -0.748400, 0, 1.0};
Point(79) = {-0.001939, -0.749178, 0, 1.0};
Point(80) = {0.005573, -0.749721, 0, 1.0};
Point(81) = {0.012929, -0.750000, 0, 1.0};
Point(82) = {0.020069, -0.749993, 0, 1.0};
Point(83) = {0.026950, -0.749678, 0, 1.0};
Point(84) = {0.033541, -0.749058, 0, 1.0};
Point(85) = {0.039802, -0.748146, 0, 1.0};
Point(86) = {0.045698, -0.746985, 0, 1.0};
Point(87) = {0.051181, -0.745603, 0, 1.0};
Point(88) = {0.056198, -0.744042, 0, 1.0};
Point(89) = {0.060699, -0.742334, 0, 1.0};
Point(90) = {0.064643, -0.740519, 0, 1.0};
Point(91) = {0.067995, -0.738632, 0, 1.0};
Point(92) = {0.070721, -0.736719, 0, 1.0};
Point(93) = {0.072801, -0.734832, 0, 1.0};
Point(94) = {0.074208, -0.733036, 0, 1.0};
Point(95) = {0.074778, -0.731875, 0, 1.0};
Point(96) = {0.074910, -0.731413, 0, 1.0};
Point(97) = {0.074960, -0.731122, 0, 1.0};
Point(98) = {0.074978, -0.730845, 0, 1.0};
Point(99) = {0.074975, -0.730714, 0, 1.0};
Point(100) = {0.074961, -0.730587, 0, 1.0};
Point(101) = {0.074935, -0.730469, 0, 1.0};
Point(102) = {0.074893, -0.730354, 0, 1.0};
Point(103) = {0.074835, -0.730237, 0, 1.0};
Point(104) = {0.074766, -0.730119, 0, 1.0};
Point(105) = {0.074595, -0.729879, 0, 1.0};
Point(106) = {0.074384, -0.729637, 0, 1.0};
Point(107) = {0.073999, -0.729266, 0, 1.0};
Point(108) = {0.073541, -0.728894, 0, 1.0};
Point(109) = {0.071474, -0.727647, 0, 1.0};
Point(110) = {0.068634, -0.726431, 0, 1.0};
Point(111) = {0.065074, -0.725282, 0, 1.0};
Point(112) = {0.060840, -0.724228, 0, 1.0};
Point(113) = {0.055991, -0.723287, 0, 1.0};
Point(114) = {0.050595, -0.722484, 0, 1.0};
Point(115) = {0.044727, -0.721843, 0, 1.0};
Point(116) = {0.038464, -0.721405, 0, 1.0};
Point(117) = {0.031891, -0.721224, 0, 1.0};
Point(118) = {0.025043, -0.721384, 0, 1.0};
Point(119) = {0.017913, -0.721924, 0, 1.0};
Point(120) = {0.010486, -0.722849, 0, 1.0};
Point(121) = {0.002733, -0.724108, 0, 1.0};
Point(122) = {-0.005328, -0.725579, 0, 1.0};
Point(123) = {-0.013603, -0.727145, 0, 1.0};
Point(124) = {-0.021981, -0.728717, 0, 1.0};
Point(125) = {-0.030337, -0.730210, 0, 1.0};
Point(126) = {-0.038530, -0.731559, 0, 1.0};
Point(127) = {-0.046413, -0.732707, 0, 1.0};
Point(128) = {-0.053832, -0.733618, 0, 1.0};
Point(129) = {-0.060634, -0.734274, 0, 1.0};
Point(130) = {-0.066674, -0.734680, 0, 1.0};
Point(131) = {-0.071813, -0.734862, 0, 1.0};
Point(132) = {-0.074968, -0.734881, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {36.00000000, 15.00000000, 0, 1.0};
Point(136) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074994, 0.736227, 0, 1.0};
Point(2) = {0.073293, 0.736497, 0, 1.0};
Point(3) = {0.070879, 0.736883, 0, 1.0};
Point(4) = {0.068175, 0.737289, 0, 1.0};
Point(5) = {0.065195, 0.737712, 0, 1.0};
Point(6) = {0.061947, 0.738148, 0, 1.0};
Point(7) = {0.058448, 0.738578, 0, 1.0};
Point(8) = {0.054712, 0.739153, 0, 1.0};
Point(9) = {0.050754, 0.740184, 0, 1.0};
Point(10) = {0.046592, 0.741561, 0, 1.0};
Point(11) = {0.042241, 0.742982, 0, 1.0};
Point(12) = {0.037724, 0.744347, 0, 1.0};
Point(13) = {0.033060, 0.745546, 0, 1.0};
Point(14) = {0.028269, 0.746588, 0, 1.0};
Point(15) = {0.023370, 0.747458, 0, 1.0};
Point(16) = {0.018386, 0.748196, 0, 1.0};
Point(17) = {0.013335, 0.748798, 0, 1.0};
Point(18) = {0.008242, 0.749274, 0, 1.0};
Point(19) = {0.003127, 0.749642, 0, 1.0};
Point(20) = {-0.001987, 0.749876, 0, 1.0};
Point(21) = {-0.007078, 0.749993, 0, 1.0};
Point(22) = {-0.012127, 0.750000, 0, 1.0};
Point(23) = {-0.017108, 0.749890, 0, 1.0};
Point(24) = {-0.022003, 0.749662, 0, 1.0};
Point(25) = {-0.026790, 0.749315, 0, 1.0};
Point(26) = {-0.031448, 0.748860, 0, 1.0};
Point(27) = {-0.035959, 0.748304, 0, 1.0};
Point(28) = {-0.040302, 0.747654, 0, 1.0};
Point(29) = {-0.044457, 0.746917, 0, 1.0};
Point(30) = {-0.048408, 0.746108, 0, 1.0};
Point(31) = {-0.052139, 0.745233, 0, 1.0};
Point(32) = {-0.055634, 0.744308, 0, 1.0};
Point(33) = {-0.058876, 0.743338, 0, 1.0};
Point(34) = {-0.061852, 0.742325, 0, 1.0};
Point(35) = {-0.064550, 0.741298, 0, 1.0};
Point(36) = {-0.066959, 0.740263, 0, 1.0};
Point(37) = {-0.069066, 0.739249, 0, 1.0};
Point(38) = {-0.070866, 0.738272, 0, 1.0};
Point(39) = {-0.072346, 0.737352, 0, 1.0};
Point(40) = {-0.073505, 0.736464, 0, 1.0};
Point(41) = {-0.074336, 0.735659, 0, 1.0};
Point(42) = {-0.074835, 0.734915, 0, 1.0};
Point(43) = {-0.075000, 0.734135, 0, 1.0};
Point(44) = {-0.074830, 0.733436, 0, 1.0};
Point(45) = {-0.074326, 0.732857, 0, 1.0};
Point(46) = {-0.073490, 0.732296, 0, 1.0};
Point(47) = {-0.072327, 0.731781, 0, 1.0};
Point(48) = {-0.070841, 0.731268, 0, 1.0};
Point(49) = {-0.069037, 0.730807, 0, 1.0};
Point(50) = {-0.066924, 0.730380, 0, 1.0};
Point(51) = {-0.064510, 0.729999, 0, 1.0};
Point(52) = {-0.061807, 0.729652, 0, 1.0};
Point(53) = {-0.058827, 0.729350, 0, 1.0};
Point(54) = {-0.055580, 0.729075, 0, 1.0};
Point(55) = {-0.052082, 0.728831, 0, 1.0};
Point(56) = {-0.048347, 0.728605, 0, 1.0};
Point(57) = {-0.044392, 0.728410, 0, 1.0};
Point(58) = {-0.040234, 0.728234, 0, 1.0};
Point(59) = {-0.035888, 0.728087, 0, 1.0};
Point(60) = {-0.031375, 0.727959, 0, 1.0};
Point(61) = {-0.026715, 0.727860, 0, 1.0};
Point(62) = {-0.021927, 0.727773, 0, 1.0};
Point(63) = {-0.017031, 0.727717, 0, 1.0};
Point(64) = {-0.012049, 0.727681, 0, 1.0};
Point(65) = {-0.007000, 0.727677, 0, 1.0};
Point(66) = {-0.001909, 0.727699, 0, 1.0};
Point(67) = {0.003204, 0.727767, 0, 1.0};
Point(68) = {0.008317, 0.727873, 0, 1.0};
Point(69) = {0.013407, 0.728031, 0, 1.0};
Point(70) = {0.018456, 0.728221, 0, 1.0};
Point(71) = {0.023436, 0.728459, 0, 1.0};
Point(72) = {0.028331, 0.728741, 0, 1.0};
Point(73) = {0.033118, 0.729076, 0, 1.0};
Point(74) = {0.037776, 0.729438, 0, 1.0};
Point(75) = {0.042287, 0.729864, 0, 1.0};
Point(76) = {0.046631, 0.730328, 0, 1.0};
Point(77) = {0.050787, 0.730916, 0, 1.0};
Point(78) = {0.054739, 0.731552, 0, 1.0};
Point(79) = {0.058470, 0.732267, 0, 1.0};
Point(80) = {0.061966, 0.732949, 0, 1.0};
Point(81) = {0.065210, 0.733562, 0, 1.0};
Point(82) = {0.068187, 0.734039, 0, 1.0};
Point(83) = {0.070887, 0.734398, 0, 1.0};
Point(84) = {0.073299, 0.734635, 0, 1.0};
Point(85) = {0.074999, 0.734749, 0, 1.0};
Point(86) = {-0.074994, -0.736227, 0, 1.0};
Point(87) = {-0.073293, -0.736497, 0, 1.0};
Point(88) = {-0.070879, -0.736883, 0, 1.0};
Point(89) = {-0.068175, -0.737289, 0, 1.0};
Point(90) = {-0.065195, -0.737712, 0, 1.0};
Point(91) = {-0.061947, -0.738148, 0, 1.0};
Point(92) = {-0.058448, -0.738578, 0, 1.0};
Point(93) = {-0.054712, -0.739153, 0, 1.0};
Point(94) = {-0.050754, -0.740184, 0, 1.0};
Point(95) = {-0.046592, -0.741561, 0, 1.0};
Point(96) = {-0.042241, -0.742982, 0, 1.0};
Point(97) = {-0.037724, -0.744347, 0, 1.0};
Point(98) = {-0.033060, -0.745546, 0, 1.0};
Point(99) = {-0.028269, -0.746588, 0, 1.0};
Point(100) = {-0.023370, -0.747458, 0, 1.0};
Point(101) = {-0.018386, -0.748196, 0, 1.0};
Point(102) = {-0.013335, -0.748798, 0, 1.0};
Point(103) = {-0.008242, -0.749274, 0, 1.0};
Point(104) = {-0.003127, -0.749642, 0, 1.0};
Point(105) = {0.001987, -0.749876, 0, 1.0};
Point(106) = {0.007078, -0.749993, 0, 1.0};
Point(107) = {0.012127, -0.750000, 0, 1.0};
Point(108) = {0.017108, -0.749890, 0, 1.0};
Point(109) = {0.022003, -0.749662, 0, 1.0};
Point(110) = {0.026790, -0.749315, 0, 1.0};
Point(111) = {0.031448, -0.748860, 0, 1.0};
Point(112) = {0.035959, -0.748304, 0, 1.0};
Point(113) = {0.040302, -0.747654, 0, 1.0};
Point(114) = {0.044457, -0.746917, 0, 1.0};
Point(115) = {0.048408, -0.746108, 0, 1.0};
Point(116) = {0.052139, -0.745233, 0, 1.0};
Point(117) = {0.055634, -0.744308, 0, 1.0};
Point(118) = {0.058876, -0.743338, 0, 1.0};
Point(119) = {0.061852, -0.742325, 0, 1.0};
Point(120) = {0.064550, -0.741298, 0, 1.0};
Point(121) = {0.066959, -0.740263, 0, 1.0};
Point(122) = {0.069066, -0.739249, 0, 1.0};
Point(123) = {0.070866, -0.738272, 0, 1.0};
Point(124) = {0.072346, -0.737352, 0, 1.0};
Point(125) = {0.073505, -0.736464, 0, 1.0};
Point(126) = {0.074336, -0.735659, 0, 1.0};
Point(127) = {0.074835, -0.734915, 0, 1.0};
Point(128) = {0.075000, -0.734135, 0, 1.0};
Point(129) = {0.074830, -0.733436, 0, 1.0};
Point(130) = {0.074326, -0.732857, 0, 1.0};
Point(131) = {0.073490, -0.732296, 0, 1.0};
Point(132) = {0.072327, -0.731781, 0, 1.0};
Point(133) = {0.070841, -0.731268, 0, 1.0};
Point(134) = {0.069037, -0.730807, 0, 1.0};
Point(135) = {0.066924, -0.730380, 0, 1.0};
Point(136) = {0.064510, -0.729999, 0, 1.0};
Point(137) = {0.061807, -0.729652, 0, 1.0};
Point(138) = {0.058827, -0.729350, 0, 1.0};
Point(139) = {0.055580, -0.729075, 0, 1.0};
Point(140) = {0.052082, -0.728831, 0, 1.0};
Point(141) = {0.048347, -0.728605, 0, 1.0};
Point(142) = {0.044392, -0.728410, 0, 1.0};
Point(143) = {0.040234, -0.728234, 0, 1.0};
Point(144) = {0.035888, -0.728087, 0, 1.0};
Point(145) = {0.031375, -0.727959, 0, 1.0};
Point(146) = {0.026715, -0.727860, 0, 1.0};
Point(147) = {0.021927, -0.727773, 0, 1.0};
Point(148) = {0.017031, -0.727717, 0, 1.0};
Point(149) = {0.012049, -0.727681, 0, 1.0};
Point(150) = {0.007000, -0.727677, 0, 1.0};
Point(151) = {0.001909, -0.727699, 0, 1.0};
Point(152) = {-0.003204, -0.727767, 0, 1.0};
Point(153) = {-0.008317, -0.727873, 0, 1.0};
Point(154) = {-0.013407, -0.728031, 0, 1.0};
Point(155) = {-0.018456, -0.728221, 0, 1.0};
Point(156) = {-0.023436, -0.728459, 0, 1.0};
Point(157) = {-0.028331, -0.728741, 0, 1.0};
Point(158) = {-0.033118, -0.729076, 0, 1.0};
Point(159) = {-0.037776, -0.729438, 0, 1.0};
Point(160) = {-0.042287, -0.729864, 0, 1.0};
Point(161) = {-0.046631, -0.730328, 0, 1.0};
Point(162) = {-0.050787, -0.730916, 0, 1.0};
Point(163) = {-0.054739, -0.731552, 0, 1.0};
Point(164) = {-0.058470, -0.732267, 0, 1.0};
Point(165) = {-0.061966, -0.732949, 0, 1.0};
Point(166) = {-0.065210, -0.733562, 0, 1.0};
Point(167) = {-0.068187, -0.734039, 0, 1.0};
Point(168) = {-0.070887, -0.734398, 0, 1.0};
Point(169) = {-0.073299, -0.734635, 0, 1.0};
Point(170) = {-0.074999, -0.734749, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
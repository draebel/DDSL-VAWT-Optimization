SetFactory("OpenCASCADE");

Point(1) = {0.148195, 0.741250, 0, 1.0};
Point(2) = {0.147426, 0.741383, 0, 1.0};
Point(3) = {0.145235, 0.741867, 0, 1.0};
Point(4) = {0.141886, 0.742731, 0, 1.0};
Point(5) = {0.137618, 0.743842, 0, 1.0};
Point(6) = {0.132554, 0.744994, 0, 1.0};
Point(7) = {0.126685, 0.746001, 0, 1.0};
Point(8) = {0.119917, 0.746837, 0, 1.0};
Point(9) = {0.112308, 0.747574, 0, 1.0};
Point(10) = {0.103967, 0.748227, 0, 1.0};
Point(11) = {0.095010, 0.748797, 0, 1.0};
Point(12) = {0.085561, 0.749276, 0, 1.0};
Point(13) = {0.075750, 0.749649, 0, 1.0};
Point(14) = {0.065709, 0.749898, 0, 1.0};
Point(15) = {0.055571, 0.750000, 0, 1.0};
Point(16) = {0.045470, 0.749927, 0, 1.0};
Point(17) = {0.035534, 0.749646, 0, 1.0};
Point(18) = {0.025887, 0.749121, 0, 1.0};
Point(19) = {0.016647, 0.748309, 0, 1.0};
Point(20) = {0.007930, 0.747151, 0, 1.0};
Point(21) = {-0.000183, 0.745493, 0, 1.0};
Point(22) = {-0.007883, 0.743303, 0, 1.0};
Point(23) = {-0.015155, 0.740758, 0, 1.0};
Point(24) = {-0.021922, 0.737953, 0, 1.0};
Point(25) = {-0.028117, 0.734964, 0, 1.0};
Point(26) = {-0.033665, 0.731863, 0, 1.0};
Point(27) = {-0.038507, 0.728715, 0, 1.0};
Point(28) = {-0.042573, 0.725591, 0, 1.0};
Point(29) = {-0.045802, 0.722546, 0, 1.0};
Point(30) = {-0.048159, 0.719640, 0, 1.0};
Point(31) = {-0.049583, 0.716962, 0, 1.0};
Point(32) = {-0.049989, 0.715361, 0, 1.0};
Point(33) = {-0.050023, 0.714807, 0, 1.0};
Point(34) = {-0.050016, 0.714616, 0, 1.0};
Point(35) = {-0.049975, 0.714295, 0, 1.0};
Point(36) = {-0.049813, 0.713803, 0, 1.0};
Point(37) = {-0.049558, 0.713299, 0, 1.0};
Point(38) = {-0.049087, 0.712600, 0, 1.0};
Point(39) = {-0.046973, 0.710517, 0, 1.0};
Point(40) = {-0.043864, 0.708445, 0, 1.0};
Point(41) = {-0.039852, 0.706448, 0, 1.0};
Point(42) = {-0.034988, 0.704547, 0, 1.0};
Point(43) = {-0.029390, 0.702714, 0, 1.0};
Point(44) = {-0.023256, 0.701027, 0, 1.0};
Point(45) = {-0.016676, 0.699574, 0, 1.0};
Point(46) = {-0.009792, 0.698440, 0, 1.0};
Point(47) = {-0.002749, 0.697669, 0, 1.0};
Point(48) = {0.004143, 0.697661, 0, 1.0};
Point(49) = {0.011278, 0.698737, 0, 1.0};
Point(50) = {0.018846, 0.700826, 0, 1.0};
Point(51) = {0.027024, 0.703813, 0, 1.0};
Point(52) = {0.035838, 0.707469, 0, 1.0};
Point(53) = {0.045248, 0.711613, 0, 1.0};
Point(54) = {0.055189, 0.716058, 0, 1.0};
Point(55) = {0.065559, 0.720609, 0, 1.0};
Point(56) = {0.076222, 0.725071, 0, 1.0};
Point(57) = {0.086999, 0.729256, 0, 1.0};
Point(58) = {0.097674, 0.732994, 0, 1.0};
Point(59) = {0.107999, 0.736149, 0, 1.0};
Point(60) = {0.117706, 0.738625, 0, 1.0};
Point(61) = {0.126513, 0.740380, 0, 1.0};
Point(62) = {0.134148, 0.741427, 0, 1.0};
Point(63) = {0.140358, 0.741827, 0, 1.0};
Point(64) = {0.144855, 0.741674, 0, 1.0};
Point(65) = {0.147400, 0.741367, 0, 1.0};
Point(66) = {-0.148195, -0.741250, 0, 1.0};
Point(67) = {-0.147426, -0.741383, 0, 1.0};
Point(68) = {-0.145235, -0.741867, 0, 1.0};
Point(69) = {-0.141886, -0.742731, 0, 1.0};
Point(70) = {-0.137618, -0.743842, 0, 1.0};
Point(71) = {-0.132554, -0.744994, 0, 1.0};
Point(72) = {-0.126685, -0.746001, 0, 1.0};
Point(73) = {-0.119917, -0.746837, 0, 1.0};
Point(74) = {-0.112308, -0.747574, 0, 1.0};
Point(75) = {-0.103967, -0.748227, 0, 1.0};
Point(76) = {-0.095010, -0.748797, 0, 1.0};
Point(77) = {-0.085561, -0.749276, 0, 1.0};
Point(78) = {-0.075750, -0.749649, 0, 1.0};
Point(79) = {-0.065709, -0.749898, 0, 1.0};
Point(80) = {-0.055571, -0.750000, 0, 1.0};
Point(81) = {-0.045470, -0.749927, 0, 1.0};
Point(82) = {-0.035534, -0.749646, 0, 1.0};
Point(83) = {-0.025887, -0.749121, 0, 1.0};
Point(84) = {-0.016647, -0.748309, 0, 1.0};
Point(85) = {-0.007930, -0.747151, 0, 1.0};
Point(86) = {0.000183, -0.745493, 0, 1.0};
Point(87) = {0.007883, -0.743303, 0, 1.0};
Point(88) = {0.015155, -0.740758, 0, 1.0};
Point(89) = {0.021922, -0.737953, 0, 1.0};
Point(90) = {0.028117, -0.734964, 0, 1.0};
Point(91) = {0.033665, -0.731863, 0, 1.0};
Point(92) = {0.038507, -0.728715, 0, 1.0};
Point(93) = {0.042573, -0.725591, 0, 1.0};
Point(94) = {0.045802, -0.722546, 0, 1.0};
Point(95) = {0.048159, -0.719640, 0, 1.0};
Point(96) = {0.049583, -0.716962, 0, 1.0};
Point(97) = {0.049989, -0.715361, 0, 1.0};
Point(98) = {0.050023, -0.714807, 0, 1.0};
Point(99) = {0.050016, -0.714616, 0, 1.0};
Point(100) = {0.049975, -0.714295, 0, 1.0};
Point(101) = {0.049813, -0.713803, 0, 1.0};
Point(102) = {0.049558, -0.713299, 0, 1.0};
Point(103) = {0.049087, -0.712600, 0, 1.0};
Point(104) = {0.046973, -0.710517, 0, 1.0};
Point(105) = {0.043864, -0.708445, 0, 1.0};
Point(106) = {0.039852, -0.706448, 0, 1.0};
Point(107) = {0.034988, -0.704547, 0, 1.0};
Point(108) = {0.029390, -0.702714, 0, 1.0};
Point(109) = {0.023256, -0.701027, 0, 1.0};
Point(110) = {0.016676, -0.699574, 0, 1.0};
Point(111) = {0.009792, -0.698440, 0, 1.0};
Point(112) = {0.002749, -0.697669, 0, 1.0};
Point(113) = {-0.004143, -0.697661, 0, 1.0};
Point(114) = {-0.011278, -0.698737, 0, 1.0};
Point(115) = {-0.018846, -0.700826, 0, 1.0};
Point(116) = {-0.027024, -0.703813, 0, 1.0};
Point(117) = {-0.035838, -0.707469, 0, 1.0};
Point(118) = {-0.045248, -0.711613, 0, 1.0};
Point(119) = {-0.055189, -0.716058, 0, 1.0};
Point(120) = {-0.065559, -0.720609, 0, 1.0};
Point(121) = {-0.076222, -0.725071, 0, 1.0};
Point(122) = {-0.086999, -0.729256, 0, 1.0};
Point(123) = {-0.097674, -0.732994, 0, 1.0};
Point(124) = {-0.107999, -0.736149, 0, 1.0};
Point(125) = {-0.117706, -0.738625, 0, 1.0};
Point(126) = {-0.126513, -0.740380, 0, 1.0};
Point(127) = {-0.134148, -0.741427, 0, 1.0};
Point(128) = {-0.140358, -0.741827, 0, 1.0};
Point(129) = {-0.144855, -0.741674, 0, 1.0};
Point(130) = {-0.147400, -0.741367, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
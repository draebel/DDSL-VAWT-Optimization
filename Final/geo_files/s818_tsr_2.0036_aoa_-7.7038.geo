SetFactory("OpenCASCADE");

Point(1) = {0.111470, 0.743437, 0, 1.0};
Point(2) = {0.110893, 0.743537, 0, 1.0};
Point(3) = {0.109250, 0.743900, 0, 1.0};
Point(4) = {0.106738, 0.744548, 0, 1.0};
Point(5) = {0.103537, 0.745382, 0, 1.0};
Point(6) = {0.099739, 0.746246, 0, 1.0};
Point(7) = {0.095337, 0.747001, 0, 1.0};
Point(8) = {0.090261, 0.747627, 0, 1.0};
Point(9) = {0.084554, 0.748180, 0, 1.0};
Point(10) = {0.078298, 0.748670, 0, 1.0};
Point(11) = {0.071580, 0.749098, 0, 1.0};
Point(12) = {0.064493, 0.749457, 0, 1.0};
Point(13) = {0.057135, 0.749737, 0, 1.0};
Point(14) = {0.049604, 0.749924, 0, 1.0};
Point(15) = {0.042000, 0.750000, 0, 1.0};
Point(16) = {0.034424, 0.749945, 0, 1.0};
Point(17) = {0.026972, 0.749734, 0, 1.0};
Point(18) = {0.019736, 0.749341, 0, 1.0};
Point(19) = {0.012806, 0.748732, 0, 1.0};
Point(20) = {0.006269, 0.747863, 0, 1.0};
Point(21) = {0.000183, 0.746620, 0, 1.0};
Point(22) = {-0.005591, 0.744977, 0, 1.0};
Point(23) = {-0.011046, 0.743068, 0, 1.0};
Point(24) = {-0.016121, 0.740965, 0, 1.0};
Point(25) = {-0.020767, 0.738723, 0, 1.0};
Point(26) = {-0.024929, 0.736397, 0, 1.0};
Point(27) = {-0.028560, 0.734036, 0, 1.0};
Point(28) = {-0.031610, 0.731693, 0, 1.0};
Point(29) = {-0.034032, 0.729409, 0, 1.0};
Point(30) = {-0.035799, 0.727229, 0, 1.0};
Point(31) = {-0.036867, 0.725221, 0, 1.0};
Point(32) = {-0.037172, 0.724020, 0, 1.0};
Point(33) = {-0.037197, 0.723605, 0, 1.0};
Point(34) = {-0.037192, 0.723462, 0, 1.0};
Point(35) = {-0.037162, 0.723220, 0, 1.0};
Point(36) = {-0.037040, 0.722851, 0, 1.0};
Point(37) = {-0.036848, 0.722474, 0, 1.0};
Point(38) = {-0.036495, 0.721949, 0, 1.0};
Point(39) = {-0.034910, 0.720387, 0, 1.0};
Point(40) = {-0.032578, 0.718833, 0, 1.0};
Point(41) = {-0.029568, 0.717335, 0, 1.0};
Point(42) = {-0.025921, 0.715909, 0, 1.0};
Point(43) = {-0.021722, 0.714535, 0, 1.0};
Point(44) = {-0.017122, 0.713269, 0, 1.0};
Point(45) = {-0.012186, 0.712179, 0, 1.0};
Point(46) = {-0.007024, 0.711329, 0, 1.0};
Point(47) = {-0.001741, 0.710751, 0, 1.0};
Point(48) = {0.003428, 0.710745, 0, 1.0};
Point(49) = {0.008779, 0.711552, 0, 1.0};
Point(50) = {0.014456, 0.713118, 0, 1.0};
Point(51) = {0.020590, 0.715359, 0, 1.0};
Point(52) = {0.027200, 0.718101, 0, 1.0};
Point(53) = {0.034258, 0.721209, 0, 1.0};
Point(54) = {0.041713, 0.724543, 0, 1.0};
Point(55) = {0.049492, 0.727956, 0, 1.0};
Point(56) = {0.057489, 0.731303, 0, 1.0};
Point(57) = {0.065571, 0.734441, 0, 1.0};
Point(58) = {0.073578, 0.737245, 0, 1.0};
Point(59) = {0.081322, 0.739611, 0, 1.0};
Point(60) = {0.088602, 0.741468, 0, 1.0};
Point(61) = {0.095208, 0.742785, 0, 1.0};
Point(62) = {0.100935, 0.743570, 0, 1.0};
Point(63) = {0.105592, 0.743870, 0, 1.0};
Point(64) = {0.108965, 0.743755, 0, 1.0};
Point(65) = {0.110874, 0.743525, 0, 1.0};
Point(66) = {-0.111470, -0.743437, 0, 1.0};
Point(67) = {-0.110893, -0.743537, 0, 1.0};
Point(68) = {-0.109250, -0.743900, 0, 1.0};
Point(69) = {-0.106738, -0.744548, 0, 1.0};
Point(70) = {-0.103537, -0.745382, 0, 1.0};
Point(71) = {-0.099739, -0.746246, 0, 1.0};
Point(72) = {-0.095337, -0.747001, 0, 1.0};
Point(73) = {-0.090261, -0.747627, 0, 1.0};
Point(74) = {-0.084554, -0.748180, 0, 1.0};
Point(75) = {-0.078298, -0.748670, 0, 1.0};
Point(76) = {-0.071580, -0.749098, 0, 1.0};
Point(77) = {-0.064493, -0.749457, 0, 1.0};
Point(78) = {-0.057135, -0.749737, 0, 1.0};
Point(79) = {-0.049604, -0.749924, 0, 1.0};
Point(80) = {-0.042000, -0.750000, 0, 1.0};
Point(81) = {-0.034424, -0.749945, 0, 1.0};
Point(82) = {-0.026972, -0.749734, 0, 1.0};
Point(83) = {-0.019736, -0.749341, 0, 1.0};
Point(84) = {-0.012806, -0.748732, 0, 1.0};
Point(85) = {-0.006269, -0.747863, 0, 1.0};
Point(86) = {-0.000183, -0.746620, 0, 1.0};
Point(87) = {0.005591, -0.744977, 0, 1.0};
Point(88) = {0.011046, -0.743068, 0, 1.0};
Point(89) = {0.016121, -0.740965, 0, 1.0};
Point(90) = {0.020767, -0.738723, 0, 1.0};
Point(91) = {0.024929, -0.736397, 0, 1.0};
Point(92) = {0.028560, -0.734036, 0, 1.0};
Point(93) = {0.031610, -0.731693, 0, 1.0};
Point(94) = {0.034032, -0.729409, 0, 1.0};
Point(95) = {0.035799, -0.727229, 0, 1.0};
Point(96) = {0.036867, -0.725221, 0, 1.0};
Point(97) = {0.037172, -0.724020, 0, 1.0};
Point(98) = {0.037197, -0.723605, 0, 1.0};
Point(99) = {0.037192, -0.723462, 0, 1.0};
Point(100) = {0.037162, -0.723220, 0, 1.0};
Point(101) = {0.037040, -0.722851, 0, 1.0};
Point(102) = {0.036848, -0.722474, 0, 1.0};
Point(103) = {0.036495, -0.721949, 0, 1.0};
Point(104) = {0.034910, -0.720387, 0, 1.0};
Point(105) = {0.032578, -0.718833, 0, 1.0};
Point(106) = {0.029568, -0.717335, 0, 1.0};
Point(107) = {0.025921, -0.715909, 0, 1.0};
Point(108) = {0.021722, -0.714535, 0, 1.0};
Point(109) = {0.017122, -0.713269, 0, 1.0};
Point(110) = {0.012186, -0.712179, 0, 1.0};
Point(111) = {0.007024, -0.711329, 0, 1.0};
Point(112) = {0.001741, -0.710751, 0, 1.0};
Point(113) = {-0.003428, -0.710745, 0, 1.0};
Point(114) = {-0.008779, -0.711552, 0, 1.0};
Point(115) = {-0.014456, -0.713118, 0, 1.0};
Point(116) = {-0.020590, -0.715359, 0, 1.0};
Point(117) = {-0.027200, -0.718101, 0, 1.0};
Point(118) = {-0.034258, -0.721209, 0, 1.0};
Point(119) = {-0.041713, -0.724543, 0, 1.0};
Point(120) = {-0.049492, -0.727956, 0, 1.0};
Point(121) = {-0.057489, -0.731303, 0, 1.0};
Point(122) = {-0.065571, -0.734441, 0, 1.0};
Point(123) = {-0.073578, -0.737245, 0, 1.0};
Point(124) = {-0.081322, -0.739611, 0, 1.0};
Point(125) = {-0.088602, -0.741468, 0, 1.0};
Point(126) = {-0.095208, -0.742785, 0, 1.0};
Point(127) = {-0.100935, -0.743570, 0, 1.0};
Point(128) = {-0.105592, -0.743870, 0, 1.0};
Point(129) = {-0.108965, -0.743755, 0, 1.0};
Point(130) = {-0.110874, -0.743525, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112330, 0.735168, 0, 1.0};
Point(2) = {0.111973, 0.735268, 0, 1.0};
Point(3) = {0.110907, 0.735571, 0, 1.0};
Point(4) = {0.109141, 0.736072, 0, 1.0};
Point(5) = {0.106692, 0.736767, 0, 1.0};
Point(6) = {0.103585, 0.737650, 0, 1.0};
Point(7) = {0.099845, 0.738646, 0, 1.0};
Point(8) = {0.095509, 0.739749, 0, 1.0};
Point(9) = {0.090616, 0.740887, 0, 1.0};
Point(10) = {0.085213, 0.742062, 0, 1.0};
Point(11) = {0.079353, 0.743253, 0, 1.0};
Point(12) = {0.073088, 0.744396, 0, 1.0};
Point(13) = {0.066479, 0.745475, 0, 1.0};
Point(14) = {0.059590, 0.746476, 0, 1.0};
Point(15) = {0.052486, 0.747375, 0, 1.0};
Point(16) = {0.045235, 0.748155, 0, 1.0};
Point(17) = {0.037906, 0.748807, 0, 1.0};
Point(18) = {0.030571, 0.749317, 0, 1.0};
Point(19) = {0.023300, 0.749683, 0, 1.0};
Point(20) = {0.016163, 0.749903, 0, 1.0};
Point(21) = {0.009229, 0.750000, 0, 1.0};
Point(22) = {0.002567, 0.749981, 0, 1.0};
Point(23) = {-0.003761, 0.749844, 0, 1.0};
Point(24) = {-0.009691, 0.749605, 0, 1.0};
Point(25) = {-0.015167, 0.749270, 0, 1.0};
Point(26) = {-0.020138, 0.748817, 0, 1.0};
Point(27) = {-0.024555, 0.748261, 0, 1.0};
Point(28) = {-0.028374, 0.747627, 0, 1.0};
Point(29) = {-0.031562, 0.746864, 0, 1.0};
Point(30) = {-0.034090, 0.745937, 0, 1.0};
Point(31) = {-0.035931, 0.744894, 0, 1.0};
Point(32) = {-0.037069, 0.743748, 0, 1.0};
Point(33) = {-0.037500, 0.742316, 0, 1.0};
Point(34) = {-0.037202, 0.741020, 0, 1.0};
Point(35) = {-0.036168, 0.740043, 0, 1.0};
Point(36) = {-0.034421, 0.739154, 0, 1.0};
Point(37) = {-0.031975, 0.738400, 0, 1.0};
Point(38) = {-0.028857, 0.737741, 0, 1.0};
Point(39) = {-0.025095, 0.737190, 0, 1.0};
Point(40) = {-0.020734, 0.736618, 0, 1.0};
Point(41) = {-0.015810, 0.736102, 0, 1.0};
Point(42) = {-0.010375, 0.735593, 0, 1.0};
Point(43) = {-0.004479, 0.735115, 0, 1.0};
Point(44) = {0.001819, 0.734661, 0, 1.0};
Point(45) = {0.008460, 0.734244, 0, 1.0};
Point(46) = {0.015380, 0.733870, 0, 1.0};
Point(47) = {0.022513, 0.733553, 0, 1.0};
Point(48) = {0.029790, 0.733311, 0, 1.0};
Point(49) = {0.037141, 0.733142, 0, 1.0};
Point(50) = {0.044497, 0.733046, 0, 1.0};
Point(51) = {0.051786, 0.733041, 0, 1.0};
Point(52) = {0.058937, 0.733094, 0, 1.0};
Point(53) = {0.065880, 0.733205, 0, 1.0};
Point(54) = {0.072549, 0.733348, 0, 1.0};
Point(55) = {0.078877, 0.733501, 0, 1.0};
Point(56) = {0.084803, 0.733656, 0, 1.0};
Point(57) = {0.090272, 0.733835, 0, 1.0};
Point(58) = {0.095230, 0.734028, 0, 1.0};
Point(59) = {0.099629, 0.734222, 0, 1.0};
Point(60) = {0.103426, 0.734399, 0, 1.0};
Point(61) = {0.106584, 0.734554, 0, 1.0};
Point(62) = {0.109073, 0.734683, 0, 1.0};
Point(63) = {0.110868, 0.734771, 0, 1.0};
Point(64) = {0.111951, 0.734823, 0, 1.0};
Point(65) = {0.112314, 0.734840, 0, 1.0};
Point(66) = {-0.112330, -0.735168, 0, 1.0};
Point(67) = {-0.111973, -0.735268, 0, 1.0};
Point(68) = {-0.110907, -0.735571, 0, 1.0};
Point(69) = {-0.109141, -0.736072, 0, 1.0};
Point(70) = {-0.106692, -0.736767, 0, 1.0};
Point(71) = {-0.103585, -0.737650, 0, 1.0};
Point(72) = {-0.099845, -0.738646, 0, 1.0};
Point(73) = {-0.095509, -0.739749, 0, 1.0};
Point(74) = {-0.090616, -0.740887, 0, 1.0};
Point(75) = {-0.085213, -0.742062, 0, 1.0};
Point(76) = {-0.079353, -0.743253, 0, 1.0};
Point(77) = {-0.073088, -0.744396, 0, 1.0};
Point(78) = {-0.066479, -0.745475, 0, 1.0};
Point(79) = {-0.059590, -0.746476, 0, 1.0};
Point(80) = {-0.052486, -0.747375, 0, 1.0};
Point(81) = {-0.045235, -0.748155, 0, 1.0};
Point(82) = {-0.037906, -0.748807, 0, 1.0};
Point(83) = {-0.030571, -0.749317, 0, 1.0};
Point(84) = {-0.023300, -0.749683, 0, 1.0};
Point(85) = {-0.016163, -0.749903, 0, 1.0};
Point(86) = {-0.009229, -0.750000, 0, 1.0};
Point(87) = {-0.002567, -0.749981, 0, 1.0};
Point(88) = {0.003761, -0.749844, 0, 1.0};
Point(89) = {0.009691, -0.749605, 0, 1.0};
Point(90) = {0.015167, -0.749270, 0, 1.0};
Point(91) = {0.020138, -0.748817, 0, 1.0};
Point(92) = {0.024555, -0.748261, 0, 1.0};
Point(93) = {0.028374, -0.747627, 0, 1.0};
Point(94) = {0.031562, -0.746864, 0, 1.0};
Point(95) = {0.034090, -0.745937, 0, 1.0};
Point(96) = {0.035931, -0.744894, 0, 1.0};
Point(97) = {0.037069, -0.743748, 0, 1.0};
Point(98) = {0.037500, -0.742316, 0, 1.0};
Point(99) = {0.037202, -0.741020, 0, 1.0};
Point(100) = {0.036168, -0.740043, 0, 1.0};
Point(101) = {0.034421, -0.739154, 0, 1.0};
Point(102) = {0.031975, -0.738400, 0, 1.0};
Point(103) = {0.028857, -0.737741, 0, 1.0};
Point(104) = {0.025095, -0.737190, 0, 1.0};
Point(105) = {0.020734, -0.736618, 0, 1.0};
Point(106) = {0.015810, -0.736102, 0, 1.0};
Point(107) = {0.010375, -0.735593, 0, 1.0};
Point(108) = {0.004479, -0.735115, 0, 1.0};
Point(109) = {-0.001819, -0.734661, 0, 1.0};
Point(110) = {-0.008460, -0.734244, 0, 1.0};
Point(111) = {-0.015380, -0.733870, 0, 1.0};
Point(112) = {-0.022513, -0.733553, 0, 1.0};
Point(113) = {-0.029790, -0.733311, 0, 1.0};
Point(114) = {-0.037141, -0.733142, 0, 1.0};
Point(115) = {-0.044497, -0.733046, 0, 1.0};
Point(116) = {-0.051786, -0.733041, 0, 1.0};
Point(117) = {-0.058937, -0.733094, 0, 1.0};
Point(118) = {-0.065880, -0.733205, 0, 1.0};
Point(119) = {-0.072549, -0.733348, 0, 1.0};
Point(120) = {-0.078877, -0.733501, 0, 1.0};
Point(121) = {-0.084803, -0.733656, 0, 1.0};
Point(122) = {-0.090272, -0.733835, 0, 1.0};
Point(123) = {-0.095230, -0.734028, 0, 1.0};
Point(124) = {-0.099629, -0.734222, 0, 1.0};
Point(125) = {-0.103426, -0.734399, 0, 1.0};
Point(126) = {-0.106584, -0.734554, 0, 1.0};
Point(127) = {-0.109073, -0.734683, 0, 1.0};
Point(128) = {-0.110868, -0.734771, 0, 1.0};
Point(129) = {-0.111951, -0.734823, 0, 1.0};
Point(130) = {-0.112314, -0.734840, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
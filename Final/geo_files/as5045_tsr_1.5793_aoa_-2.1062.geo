SetFactory("OpenCASCADE");

Point(1) = {0.112392, 0.740759, 0, 1.0};
Point(2) = {0.112105, 0.740813, 0, 1.0};
Point(3) = {0.111276, 0.740964, 0, 1.0};
Point(4) = {0.109952, 0.741173, 0, 1.0};
Point(5) = {0.108143, 0.741442, 0, 1.0};
Point(6) = {0.105886, 0.741735, 0, 1.0};
Point(7) = {0.103177, 0.742028, 0, 1.0};
Point(8) = {0.099996, 0.742332, 0, 1.0};
Point(9) = {0.096361, 0.742665, 0, 1.0};
Point(10) = {0.092304, 0.743045, 0, 1.0};
Point(11) = {0.087857, 0.743483, 0, 1.0};
Point(12) = {0.083057, 0.743995, 0, 1.0};
Point(13) = {0.077957, 0.744597, 0, 1.0};
Point(14) = {0.072620, 0.745311, 0, 1.0};
Point(15) = {0.067137, 0.746128, 0, 1.0};
Point(16) = {0.061603, 0.747023, 0, 1.0};
Point(17) = {0.056110, 0.747932, 0, 1.0};
Point(18) = {0.050702, 0.748694, 0, 1.0};
Point(19) = {0.045308, 0.749261, 0, 1.0};
Point(20) = {0.039885, 0.749659, 0, 1.0};
Point(21) = {0.034441, 0.749897, 0, 1.0};
Point(22) = {0.028992, 0.750000, 0, 1.0};
Point(23) = {0.023571, 0.749987, 0, 1.0};
Point(24) = {0.018212, 0.749865, 0, 1.0};
Point(25) = {0.012949, 0.749640, 0, 1.0};
Point(26) = {0.007812, 0.749314, 0, 1.0};
Point(27) = {0.002835, 0.748894, 0, 1.0};
Point(28) = {-0.001954, 0.748382, 0, 1.0};
Point(29) = {-0.006528, 0.747781, 0, 1.0};
Point(30) = {-0.010860, 0.747096, 0, 1.0};
Point(31) = {-0.014927, 0.746334, 0, 1.0};
Point(32) = {-0.018706, 0.745501, 0, 1.0};
Point(33) = {-0.022171, 0.744600, 0, 1.0};
Point(34) = {-0.025312, 0.743636, 0, 1.0};
Point(35) = {-0.028117, 0.742618, 0, 1.0};
Point(36) = {-0.030567, 0.741559, 0, 1.0};
Point(37) = {-0.032654, 0.740465, 0, 1.0};
Point(38) = {-0.034378, 0.739357, 0, 1.0};
Point(39) = {-0.035721, 0.738243, 0, 1.0};
Point(40) = {-0.036686, 0.737139, 0, 1.0};
Point(41) = {-0.037278, 0.736070, 0, 1.0};
Point(42) = {-0.037500, 0.735071, 0, 1.0};
Point(43) = {-0.037307, 0.734270, 0, 1.0};
Point(44) = {-0.036566, 0.733607, 0, 1.0};
Point(45) = {-0.035269, 0.732925, 0, 1.0};
Point(46) = {-0.033505, 0.732234, 0, 1.0};
Point(47) = {-0.031312, 0.731540, 0, 1.0};
Point(48) = {-0.028719, 0.730853, 0, 1.0};
Point(49) = {-0.025758, 0.730183, 0, 1.0};
Point(50) = {-0.022461, 0.729552, 0, 1.0};
Point(51) = {-0.018848, 0.728980, 0, 1.0};
Point(52) = {-0.014935, 0.728478, 0, 1.0};
Point(53) = {-0.010739, 0.728056, 0, 1.0};
Point(54) = {-0.006282, 0.727716, 0, 1.0};
Point(55) = {-0.001594, 0.727459, 0, 1.0};
Point(56) = {0.003297, 0.727290, 0, 1.0};
Point(57) = {0.008358, 0.727215, 0, 1.0};
Point(58) = {0.013561, 0.727243, 0, 1.0};
Point(59) = {0.018874, 0.727374, 0, 1.0};
Point(60) = {0.024267, 0.727614, 0, 1.0};
Point(61) = {0.029702, 0.727964, 0, 1.0};
Point(62) = {0.035135, 0.728452, 0, 1.0};
Point(63) = {0.040563, 0.729098, 0, 1.0};
Point(64) = {0.045962, 0.729915, 0, 1.0};
Point(65) = {0.051366, 0.730939, 0, 1.0};
Point(66) = {0.056810, 0.732125, 0, 1.0};
Point(67) = {0.062312, 0.733423, 0, 1.0};
Point(68) = {0.067907, 0.734710, 0, 1.0};
Point(69) = {0.073468, 0.735890, 0, 1.0};
Point(70) = {0.078875, 0.736935, 0, 1.0};
Point(71) = {0.084068, 0.737838, 0, 1.0};
Point(72) = {0.088982, 0.738601, 0, 1.0};
Point(73) = {0.093555, 0.739218, 0, 1.0};
Point(74) = {0.097733, 0.739696, 0, 1.0};
Point(75) = {0.101462, 0.740042, 0, 1.0};
Point(76) = {0.104696, 0.740276, 0, 1.0};
Point(77) = {0.107408, 0.740415, 0, 1.0};
Point(78) = {0.109565, 0.740470, 0, 1.0};
Point(79) = {0.111135, 0.740457, 0, 1.0};
Point(80) = {0.112083, 0.740411, 0, 1.0};
Point(81) = {0.112406, 0.740384, 0, 1.0};
Point(82) = {-0.112392, -0.740759, 0, 1.0};
Point(83) = {-0.112105, -0.740813, 0, 1.0};
Point(84) = {-0.111276, -0.740964, 0, 1.0};
Point(85) = {-0.109952, -0.741173, 0, 1.0};
Point(86) = {-0.108143, -0.741442, 0, 1.0};
Point(87) = {-0.105886, -0.741735, 0, 1.0};
Point(88) = {-0.103177, -0.742028, 0, 1.0};
Point(89) = {-0.099996, -0.742332, 0, 1.0};
Point(90) = {-0.096361, -0.742665, 0, 1.0};
Point(91) = {-0.092304, -0.743045, 0, 1.0};
Point(92) = {-0.087857, -0.743483, 0, 1.0};
Point(93) = {-0.083057, -0.743995, 0, 1.0};
Point(94) = {-0.077957, -0.744597, 0, 1.0};
Point(95) = {-0.072620, -0.745311, 0, 1.0};
Point(96) = {-0.067137, -0.746128, 0, 1.0};
Point(97) = {-0.061603, -0.747023, 0, 1.0};
Point(98) = {-0.056110, -0.747932, 0, 1.0};
Point(99) = {-0.050702, -0.748694, 0, 1.0};
Point(100) = {-0.045308, -0.749261, 0, 1.0};
Point(101) = {-0.039885, -0.749659, 0, 1.0};
Point(102) = {-0.034441, -0.749897, 0, 1.0};
Point(103) = {-0.028992, -0.750000, 0, 1.0};
Point(104) = {-0.023571, -0.749987, 0, 1.0};
Point(105) = {-0.018212, -0.749865, 0, 1.0};
Point(106) = {-0.012949, -0.749640, 0, 1.0};
Point(107) = {-0.007812, -0.749314, 0, 1.0};
Point(108) = {-0.002835, -0.748894, 0, 1.0};
Point(109) = {0.001954, -0.748382, 0, 1.0};
Point(110) = {0.006528, -0.747781, 0, 1.0};
Point(111) = {0.010860, -0.747096, 0, 1.0};
Point(112) = {0.014927, -0.746334, 0, 1.0};
Point(113) = {0.018706, -0.745501, 0, 1.0};
Point(114) = {0.022171, -0.744600, 0, 1.0};
Point(115) = {0.025312, -0.743636, 0, 1.0};
Point(116) = {0.028117, -0.742618, 0, 1.0};
Point(117) = {0.030567, -0.741559, 0, 1.0};
Point(118) = {0.032654, -0.740465, 0, 1.0};
Point(119) = {0.034378, -0.739357, 0, 1.0};
Point(120) = {0.035721, -0.738243, 0, 1.0};
Point(121) = {0.036686, -0.737139, 0, 1.0};
Point(122) = {0.037278, -0.736070, 0, 1.0};
Point(123) = {0.037500, -0.735071, 0, 1.0};
Point(124) = {0.037307, -0.734270, 0, 1.0};
Point(125) = {0.036566, -0.733607, 0, 1.0};
Point(126) = {0.035269, -0.732925, 0, 1.0};
Point(127) = {0.033505, -0.732234, 0, 1.0};
Point(128) = {0.031312, -0.731540, 0, 1.0};
Point(129) = {0.028719, -0.730853, 0, 1.0};
Point(130) = {0.025758, -0.730183, 0, 1.0};
Point(131) = {0.022461, -0.729552, 0, 1.0};
Point(132) = {0.018848, -0.728980, 0, 1.0};
Point(133) = {0.014935, -0.728478, 0, 1.0};
Point(134) = {0.010739, -0.728056, 0, 1.0};
Point(135) = {0.006282, -0.727716, 0, 1.0};
Point(136) = {0.001594, -0.727459, 0, 1.0};
Point(137) = {-0.003297, -0.727290, 0, 1.0};
Point(138) = {-0.008358, -0.727215, 0, 1.0};
Point(139) = {-0.013561, -0.727243, 0, 1.0};
Point(140) = {-0.018874, -0.727374, 0, 1.0};
Point(141) = {-0.024267, -0.727614, 0, 1.0};
Point(142) = {-0.029702, -0.727964, 0, 1.0};
Point(143) = {-0.035135, -0.728452, 0, 1.0};
Point(144) = {-0.040563, -0.729098, 0, 1.0};
Point(145) = {-0.045962, -0.729915, 0, 1.0};
Point(146) = {-0.051366, -0.730939, 0, 1.0};
Point(147) = {-0.056810, -0.732125, 0, 1.0};
Point(148) = {-0.062312, -0.733423, 0, 1.0};
Point(149) = {-0.067907, -0.734710, 0, 1.0};
Point(150) = {-0.073468, -0.735890, 0, 1.0};
Point(151) = {-0.078875, -0.736935, 0, 1.0};
Point(152) = {-0.084068, -0.737838, 0, 1.0};
Point(153) = {-0.088982, -0.738601, 0, 1.0};
Point(154) = {-0.093555, -0.739218, 0, 1.0};
Point(155) = {-0.097733, -0.739696, 0, 1.0};
Point(156) = {-0.101462, -0.740042, 0, 1.0};
Point(157) = {-0.104696, -0.740276, 0, 1.0};
Point(158) = {-0.107408, -0.740415, 0, 1.0};
Point(159) = {-0.109565, -0.740470, 0, 1.0};
Point(160) = {-0.111135, -0.740457, 0, 1.0};
Point(161) = {-0.112083, -0.740411, 0, 1.0};
Point(162) = {-0.112406, -0.740384, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
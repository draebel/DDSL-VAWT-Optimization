SetFactory("OpenCASCADE");

Point(1) = {0.149856, 0.737678, 0, 1.0};
Point(2) = {0.149473, 0.737750, 0, 1.0};
Point(3) = {0.148369, 0.737952, 0, 1.0};
Point(4) = {0.146603, 0.738231, 0, 1.0};
Point(5) = {0.144190, 0.738589, 0, 1.0};
Point(6) = {0.141182, 0.738981, 0, 1.0};
Point(7) = {0.137569, 0.739370, 0, 1.0};
Point(8) = {0.133327, 0.739776, 0, 1.0};
Point(9) = {0.128482, 0.740221, 0, 1.0};
Point(10) = {0.123072, 0.740726, 0, 1.0};
Point(11) = {0.117142, 0.741311, 0, 1.0};
Point(12) = {0.110743, 0.741994, 0, 1.0};
Point(13) = {0.103943, 0.742797, 0, 1.0};
Point(14) = {0.096827, 0.743748, 0, 1.0};
Point(15) = {0.089516, 0.744838, 0, 1.0};
Point(16) = {0.082137, 0.746031, 0, 1.0};
Point(17) = {0.074813, 0.747243, 0, 1.0};
Point(18) = {0.067603, 0.748259, 0, 1.0};
Point(19) = {0.060411, 0.749015, 0, 1.0};
Point(20) = {0.053180, 0.749545, 0, 1.0};
Point(21) = {0.045922, 0.749863, 0, 1.0};
Point(22) = {0.038656, 0.750000, 0, 1.0};
Point(23) = {0.031428, 0.749982, 0, 1.0};
Point(24) = {0.024283, 0.749820, 0, 1.0};
Point(25) = {0.017265, 0.749520, 0, 1.0};
Point(26) = {0.010416, 0.749086, 0, 1.0};
Point(27) = {0.003780, 0.748525, 0, 1.0};
Point(28) = {-0.002605, 0.747842, 0, 1.0};
Point(29) = {-0.008704, 0.747041, 0, 1.0};
Point(30) = {-0.014480, 0.746129, 0, 1.0};
Point(31) = {-0.019902, 0.745113, 0, 1.0};
Point(32) = {-0.024941, 0.744001, 0, 1.0};
Point(33) = {-0.029562, 0.742800, 0, 1.0};
Point(34) = {-0.033749, 0.741515, 0, 1.0};
Point(35) = {-0.037490, 0.740157, 0, 1.0};
Point(36) = {-0.040756, 0.738746, 0, 1.0};
Point(37) = {-0.043539, 0.737287, 0, 1.0};
Point(38) = {-0.045838, 0.735809, 0, 1.0};
Point(39) = {-0.047628, 0.734324, 0, 1.0};
Point(40) = {-0.048915, 0.732852, 0, 1.0};
Point(41) = {-0.049703, 0.731426, 0, 1.0};
Point(42) = {-0.050001, 0.730094, 0, 1.0};
Point(43) = {-0.049743, 0.729027, 0, 1.0};
Point(44) = {-0.048754, 0.728143, 0, 1.0};
Point(45) = {-0.047025, 0.727234, 0, 1.0};
Point(46) = {-0.044674, 0.726312, 0, 1.0};
Point(47) = {-0.041750, 0.725386, 0, 1.0};
Point(48) = {-0.038292, 0.724471, 0, 1.0};
Point(49) = {-0.034345, 0.723577, 0, 1.0};
Point(50) = {-0.029949, 0.722736, 0, 1.0};
Point(51) = {-0.025131, 0.721973, 0, 1.0};
Point(52) = {-0.019913, 0.721304, 0, 1.0};
Point(53) = {-0.014319, 0.720741, 0, 1.0};
Point(54) = {-0.008376, 0.720287, 0, 1.0};
Point(55) = {-0.002125, 0.719945, 0, 1.0};
Point(56) = {0.004395, 0.719720, 0, 1.0};
Point(57) = {0.011144, 0.719620, 0, 1.0};
Point(58) = {0.018081, 0.719657, 0, 1.0};
Point(59) = {0.025165, 0.719832, 0, 1.0};
Point(60) = {0.032356, 0.720152, 0, 1.0};
Point(61) = {0.039602, 0.720619, 0, 1.0};
Point(62) = {0.046847, 0.721270, 0, 1.0};
Point(63) = {0.054084, 0.722130, 0, 1.0};
Point(64) = {0.061283, 0.723220, 0, 1.0};
Point(65) = {0.068488, 0.724585, 0, 1.0};
Point(66) = {0.075747, 0.726167, 0, 1.0};
Point(67) = {0.083082, 0.727898, 0, 1.0};
Point(68) = {0.090542, 0.729613, 0, 1.0};
Point(69) = {0.097957, 0.731187, 0, 1.0};
Point(70) = {0.105167, 0.732581, 0, 1.0};
Point(71) = {0.112091, 0.733784, 0, 1.0};
Point(72) = {0.118642, 0.734801, 0, 1.0};
Point(73) = {0.124740, 0.735624, 0, 1.0};
Point(74) = {0.130311, 0.736261, 0, 1.0};
Point(75) = {0.135283, 0.736722, 0, 1.0};
Point(76) = {0.139594, 0.737035, 0, 1.0};
Point(77) = {0.143210, 0.737220, 0, 1.0};
Point(78) = {0.146087, 0.737294, 0, 1.0};
Point(79) = {0.148179, 0.737277, 0, 1.0};
Point(80) = {0.149444, 0.737215, 0, 1.0};
Point(81) = {0.149874, 0.737179, 0, 1.0};
Point(82) = {-0.149856, -0.737678, 0, 1.0};
Point(83) = {-0.149473, -0.737750, 0, 1.0};
Point(84) = {-0.148369, -0.737952, 0, 1.0};
Point(85) = {-0.146603, -0.738231, 0, 1.0};
Point(86) = {-0.144190, -0.738589, 0, 1.0};
Point(87) = {-0.141182, -0.738981, 0, 1.0};
Point(88) = {-0.137569, -0.739370, 0, 1.0};
Point(89) = {-0.133327, -0.739776, 0, 1.0};
Point(90) = {-0.128482, -0.740221, 0, 1.0};
Point(91) = {-0.123072, -0.740726, 0, 1.0};
Point(92) = {-0.117142, -0.741311, 0, 1.0};
Point(93) = {-0.110743, -0.741994, 0, 1.0};
Point(94) = {-0.103943, -0.742797, 0, 1.0};
Point(95) = {-0.096827, -0.743748, 0, 1.0};
Point(96) = {-0.089516, -0.744838, 0, 1.0};
Point(97) = {-0.082137, -0.746031, 0, 1.0};
Point(98) = {-0.074813, -0.747243, 0, 1.0};
Point(99) = {-0.067603, -0.748259, 0, 1.0};
Point(100) = {-0.060411, -0.749015, 0, 1.0};
Point(101) = {-0.053180, -0.749545, 0, 1.0};
Point(102) = {-0.045922, -0.749863, 0, 1.0};
Point(103) = {-0.038656, -0.750000, 0, 1.0};
Point(104) = {-0.031428, -0.749982, 0, 1.0};
Point(105) = {-0.024283, -0.749820, 0, 1.0};
Point(106) = {-0.017265, -0.749520, 0, 1.0};
Point(107) = {-0.010416, -0.749086, 0, 1.0};
Point(108) = {-0.003780, -0.748525, 0, 1.0};
Point(109) = {0.002605, -0.747842, 0, 1.0};
Point(110) = {0.008704, -0.747041, 0, 1.0};
Point(111) = {0.014480, -0.746129, 0, 1.0};
Point(112) = {0.019902, -0.745113, 0, 1.0};
Point(113) = {0.024941, -0.744001, 0, 1.0};
Point(114) = {0.029562, -0.742800, 0, 1.0};
Point(115) = {0.033749, -0.741515, 0, 1.0};
Point(116) = {0.037490, -0.740157, 0, 1.0};
Point(117) = {0.040756, -0.738746, 0, 1.0};
Point(118) = {0.043539, -0.737287, 0, 1.0};
Point(119) = {0.045838, -0.735809, 0, 1.0};
Point(120) = {0.047628, -0.734324, 0, 1.0};
Point(121) = {0.048915, -0.732852, 0, 1.0};
Point(122) = {0.049703, -0.731426, 0, 1.0};
Point(123) = {0.050001, -0.730094, 0, 1.0};
Point(124) = {0.049743, -0.729027, 0, 1.0};
Point(125) = {0.048754, -0.728143, 0, 1.0};
Point(126) = {0.047025, -0.727234, 0, 1.0};
Point(127) = {0.044674, -0.726312, 0, 1.0};
Point(128) = {0.041750, -0.725386, 0, 1.0};
Point(129) = {0.038292, -0.724471, 0, 1.0};
Point(130) = {0.034345, -0.723577, 0, 1.0};
Point(131) = {0.029949, -0.722736, 0, 1.0};
Point(132) = {0.025131, -0.721973, 0, 1.0};
Point(133) = {0.019913, -0.721304, 0, 1.0};
Point(134) = {0.014319, -0.720741, 0, 1.0};
Point(135) = {0.008376, -0.720287, 0, 1.0};
Point(136) = {0.002125, -0.719945, 0, 1.0};
Point(137) = {-0.004395, -0.719720, 0, 1.0};
Point(138) = {-0.011144, -0.719620, 0, 1.0};
Point(139) = {-0.018081, -0.719657, 0, 1.0};
Point(140) = {-0.025165, -0.719832, 0, 1.0};
Point(141) = {-0.032356, -0.720152, 0, 1.0};
Point(142) = {-0.039602, -0.720619, 0, 1.0};
Point(143) = {-0.046847, -0.721270, 0, 1.0};
Point(144) = {-0.054084, -0.722130, 0, 1.0};
Point(145) = {-0.061283, -0.723220, 0, 1.0};
Point(146) = {-0.068488, -0.724585, 0, 1.0};
Point(147) = {-0.075747, -0.726167, 0, 1.0};
Point(148) = {-0.083082, -0.727898, 0, 1.0};
Point(149) = {-0.090542, -0.729613, 0, 1.0};
Point(150) = {-0.097957, -0.731187, 0, 1.0};
Point(151) = {-0.105167, -0.732581, 0, 1.0};
Point(152) = {-0.112091, -0.733784, 0, 1.0};
Point(153) = {-0.118642, -0.734801, 0, 1.0};
Point(154) = {-0.124740, -0.735624, 0, 1.0};
Point(155) = {-0.130311, -0.736261, 0, 1.0};
Point(156) = {-0.135283, -0.736722, 0, 1.0};
Point(157) = {-0.139594, -0.737035, 0, 1.0};
Point(158) = {-0.143210, -0.737220, 0, 1.0};
Point(159) = {-0.146087, -0.737294, 0, 1.0};
Point(160) = {-0.148179, -0.737277, 0, 1.0};
Point(161) = {-0.149444, -0.737215, 0, 1.0};
Point(162) = {-0.149874, -0.737179, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
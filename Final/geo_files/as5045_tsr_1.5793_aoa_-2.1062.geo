SetFactory("OpenCASCADE");

Point(1) = {0.074928, 0.743839, 0, 1.0};
Point(2) = {0.074736, 0.743875, 0, 1.0};
Point(3) = {0.074184, 0.743976, 0, 1.0};
Point(4) = {0.073302, 0.744116, 0, 1.0};
Point(5) = {0.072095, 0.744294, 0, 1.0};
Point(6) = {0.070591, 0.744490, 0, 1.0};
Point(7) = {0.068785, 0.744685, 0, 1.0};
Point(8) = {0.066664, 0.744888, 0, 1.0};
Point(9) = {0.064241, 0.745110, 0, 1.0};
Point(10) = {0.061536, 0.745363, 0, 1.0};
Point(11) = {0.058571, 0.745655, 0, 1.0};
Point(12) = {0.055371, 0.745997, 0, 1.0};
Point(13) = {0.051971, 0.746398, 0, 1.0};
Point(14) = {0.048413, 0.746874, 0, 1.0};
Point(15) = {0.044758, 0.747419, 0, 1.0};
Point(16) = {0.041068, 0.748016, 0, 1.0};
Point(17) = {0.037407, 0.748621, 0, 1.0};
Point(18) = {0.033802, 0.749129, 0, 1.0};
Point(19) = {0.030205, 0.749507, 0, 1.0};
Point(20) = {0.026590, 0.749773, 0, 1.0};
Point(21) = {0.022961, 0.749931, 0, 1.0};
Point(22) = {0.019328, 0.750000, 0, 1.0};
Point(23) = {0.015714, 0.749991, 0, 1.0};
Point(24) = {0.012141, 0.749910, 0, 1.0};
Point(25) = {0.008632, 0.749760, 0, 1.0};
Point(26) = {0.005208, 0.749543, 0, 1.0};
Point(27) = {0.001890, 0.749263, 0, 1.0};
Point(28) = {-0.001302, 0.748921, 0, 1.0};
Point(29) = {-0.004352, 0.748521, 0, 1.0};
Point(30) = {-0.007240, 0.748064, 0, 1.0};
Point(31) = {-0.009951, 0.747556, 0, 1.0};
Point(32) = {-0.012470, 0.747000, 0, 1.0};
Point(33) = {-0.014781, 0.746400, 0, 1.0};
Point(34) = {-0.016875, 0.745758, 0, 1.0};
Point(35) = {-0.018745, 0.745078, 0, 1.0};
Point(36) = {-0.020378, 0.744373, 0, 1.0};
Point(37) = {-0.021769, 0.743643, 0, 1.0};
Point(38) = {-0.022919, 0.742905, 0, 1.0};
Point(39) = {-0.023814, 0.742162, 0, 1.0};
Point(40) = {-0.024458, 0.741426, 0, 1.0};
Point(41) = {-0.024852, 0.740713, 0, 1.0};
Point(42) = {-0.025000, 0.740047, 0, 1.0};
Point(43) = {-0.024872, 0.739514, 0, 1.0};
Point(44) = {-0.024377, 0.739071, 0, 1.0};
Point(45) = {-0.023513, 0.738617, 0, 1.0};
Point(46) = {-0.022337, 0.738156, 0, 1.0};
Point(47) = {-0.020875, 0.737693, 0, 1.0};
Point(48) = {-0.019146, 0.737235, 0, 1.0};
Point(49) = {-0.017172, 0.736789, 0, 1.0};
Point(50) = {-0.014974, 0.736368, 0, 1.0};
Point(51) = {-0.012566, 0.735986, 0, 1.0};
Point(52) = {-0.009957, 0.735652, 0, 1.0};
Point(53) = {-0.007159, 0.735371, 0, 1.0};
Point(54) = {-0.004188, 0.735144, 0, 1.0};
Point(55) = {-0.001063, 0.734972, 0, 1.0};
Point(56) = {0.002198, 0.734860, 0, 1.0};
Point(57) = {0.005572, 0.734810, 0, 1.0};
Point(58) = {0.009040, 0.734829, 0, 1.0};
Point(59) = {0.012583, 0.734916, 0, 1.0};
Point(60) = {0.016178, 0.735076, 0, 1.0};
Point(61) = {0.019801, 0.735309, 0, 1.0};
Point(62) = {0.023424, 0.735635, 0, 1.0};
Point(63) = {0.027042, 0.736065, 0, 1.0};
Point(64) = {0.030642, 0.736610, 0, 1.0};
Point(65) = {0.034244, 0.737293, 0, 1.0};
Point(66) = {0.037873, 0.738084, 0, 1.0};
Point(67) = {0.041541, 0.738949, 0, 1.0};
Point(68) = {0.045271, 0.739807, 0, 1.0};
Point(69) = {0.048979, 0.740593, 0, 1.0};
Point(70) = {0.052583, 0.741290, 0, 1.0};
Point(71) = {0.056046, 0.741892, 0, 1.0};
Point(72) = {0.059321, 0.742401, 0, 1.0};
Point(73) = {0.062370, 0.742812, 0, 1.0};
Point(74) = {0.065155, 0.743131, 0, 1.0};
Point(75) = {0.067641, 0.743361, 0, 1.0};
Point(76) = {0.069797, 0.743517, 0, 1.0};
Point(77) = {0.071605, 0.743610, 0, 1.0};
Point(78) = {0.073044, 0.743647, 0, 1.0};
Point(79) = {0.074090, 0.743638, 0, 1.0};
Point(80) = {0.074722, 0.743608, 0, 1.0};
Point(81) = {0.074937, 0.743589, 0, 1.0};
Point(82) = {-0.074928, -0.743839, 0, 1.0};
Point(83) = {-0.074736, -0.743875, 0, 1.0};
Point(84) = {-0.074184, -0.743976, 0, 1.0};
Point(85) = {-0.073302, -0.744116, 0, 1.0};
Point(86) = {-0.072095, -0.744294, 0, 1.0};
Point(87) = {-0.070591, -0.744490, 0, 1.0};
Point(88) = {-0.068785, -0.744685, 0, 1.0};
Point(89) = {-0.066664, -0.744888, 0, 1.0};
Point(90) = {-0.064241, -0.745110, 0, 1.0};
Point(91) = {-0.061536, -0.745363, 0, 1.0};
Point(92) = {-0.058571, -0.745655, 0, 1.0};
Point(93) = {-0.055371, -0.745997, 0, 1.0};
Point(94) = {-0.051971, -0.746398, 0, 1.0};
Point(95) = {-0.048413, -0.746874, 0, 1.0};
Point(96) = {-0.044758, -0.747419, 0, 1.0};
Point(97) = {-0.041068, -0.748016, 0, 1.0};
Point(98) = {-0.037407, -0.748621, 0, 1.0};
Point(99) = {-0.033802, -0.749129, 0, 1.0};
Point(100) = {-0.030205, -0.749507, 0, 1.0};
Point(101) = {-0.026590, -0.749773, 0, 1.0};
Point(102) = {-0.022961, -0.749931, 0, 1.0};
Point(103) = {-0.019328, -0.750000, 0, 1.0};
Point(104) = {-0.015714, -0.749991, 0, 1.0};
Point(105) = {-0.012141, -0.749910, 0, 1.0};
Point(106) = {-0.008632, -0.749760, 0, 1.0};
Point(107) = {-0.005208, -0.749543, 0, 1.0};
Point(108) = {-0.001890, -0.749263, 0, 1.0};
Point(109) = {0.001302, -0.748921, 0, 1.0};
Point(110) = {0.004352, -0.748521, 0, 1.0};
Point(111) = {0.007240, -0.748064, 0, 1.0};
Point(112) = {0.009951, -0.747556, 0, 1.0};
Point(113) = {0.012470, -0.747000, 0, 1.0};
Point(114) = {0.014781, -0.746400, 0, 1.0};
Point(115) = {0.016875, -0.745758, 0, 1.0};
Point(116) = {0.018745, -0.745078, 0, 1.0};
Point(117) = {0.020378, -0.744373, 0, 1.0};
Point(118) = {0.021769, -0.743643, 0, 1.0};
Point(119) = {0.022919, -0.742905, 0, 1.0};
Point(120) = {0.023814, -0.742162, 0, 1.0};
Point(121) = {0.024458, -0.741426, 0, 1.0};
Point(122) = {0.024852, -0.740713, 0, 1.0};
Point(123) = {0.025000, -0.740047, 0, 1.0};
Point(124) = {0.024872, -0.739514, 0, 1.0};
Point(125) = {0.024377, -0.739071, 0, 1.0};
Point(126) = {0.023513, -0.738617, 0, 1.0};
Point(127) = {0.022337, -0.738156, 0, 1.0};
Point(128) = {0.020875, -0.737693, 0, 1.0};
Point(129) = {0.019146, -0.737235, 0, 1.0};
Point(130) = {0.017172, -0.736789, 0, 1.0};
Point(131) = {0.014974, -0.736368, 0, 1.0};
Point(132) = {0.012566, -0.735986, 0, 1.0};
Point(133) = {0.009957, -0.735652, 0, 1.0};
Point(134) = {0.007159, -0.735371, 0, 1.0};
Point(135) = {0.004188, -0.735144, 0, 1.0};
Point(136) = {0.001063, -0.734972, 0, 1.0};
Point(137) = {-0.002198, -0.734860, 0, 1.0};
Point(138) = {-0.005572, -0.734810, 0, 1.0};
Point(139) = {-0.009040, -0.734829, 0, 1.0};
Point(140) = {-0.012583, -0.734916, 0, 1.0};
Point(141) = {-0.016178, -0.735076, 0, 1.0};
Point(142) = {-0.019801, -0.735309, 0, 1.0};
Point(143) = {-0.023424, -0.735635, 0, 1.0};
Point(144) = {-0.027042, -0.736065, 0, 1.0};
Point(145) = {-0.030642, -0.736610, 0, 1.0};
Point(146) = {-0.034244, -0.737293, 0, 1.0};
Point(147) = {-0.037873, -0.738084, 0, 1.0};
Point(148) = {-0.041541, -0.738949, 0, 1.0};
Point(149) = {-0.045271, -0.739807, 0, 1.0};
Point(150) = {-0.048979, -0.740593, 0, 1.0};
Point(151) = {-0.052583, -0.741290, 0, 1.0};
Point(152) = {-0.056046, -0.741892, 0, 1.0};
Point(153) = {-0.059321, -0.742401, 0, 1.0};
Point(154) = {-0.062370, -0.742812, 0, 1.0};
Point(155) = {-0.065155, -0.743131, 0, 1.0};
Point(156) = {-0.067641, -0.743361, 0, 1.0};
Point(157) = {-0.069797, -0.743517, 0, 1.0};
Point(158) = {-0.071605, -0.743610, 0, 1.0};
Point(159) = {-0.073044, -0.743647, 0, 1.0};
Point(160) = {-0.074090, -0.743638, 0, 1.0};
Point(161) = {-0.074722, -0.743608, 0, 1.0};
Point(162) = {-0.074937, -0.743589, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
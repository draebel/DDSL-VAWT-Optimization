SetFactory("OpenCASCADE");

Point(1) = {0.149722, 0.736308, 0, 1.0};
Point(2) = {0.148970, 0.736365, 0, 1.0};
Point(3) = {0.146834, 0.736604, 0, 1.0};
Point(4) = {0.143530, 0.737055, 0, 1.0};
Point(5) = {0.139168, 0.737582, 0, 1.0};
Point(6) = {0.133723, 0.738137, 0, 1.0};
Point(7) = {0.127227, 0.738776, 0, 1.0};
Point(8) = {0.119784, 0.739534, 0, 1.0};
Point(9) = {0.111524, 0.740422, 0, 1.0};
Point(10) = {0.102578, 0.741436, 0, 1.0};
Point(11) = {0.093090, 0.742555, 0, 1.0};
Point(12) = {0.083207, 0.743752, 0, 1.0};
Point(13) = {0.073074, 0.744982, 0, 1.0};
Point(14) = {0.062828, 0.746197, 0, 1.0};
Point(15) = {0.052607, 0.747340, 0, 1.0};
Point(16) = {0.042530, 0.748350, 0, 1.0};
Point(17) = {0.032713, 0.749172, 0, 1.0};
Point(18) = {0.023246, 0.749739, 0, 1.0};
Point(19) = {0.014222, 0.750000, 0, 1.0};
Point(20) = {0.005717, 0.749894, 0, 1.0};
Point(21) = {-0.002251, 0.749349, 0, 1.0};
Point(22) = {-0.009695, 0.748365, 0, 1.0};
Point(23) = {-0.016608, 0.746977, 0, 1.0};
Point(24) = {-0.022977, 0.745236, 0, 1.0};
Point(25) = {-0.028777, 0.743230, 0, 1.0};
Point(26) = {-0.033956, 0.741024, 0, 1.0};
Point(27) = {-0.038463, 0.738685, 0, 1.0};
Point(28) = {-0.042259, 0.736269, 0, 1.0};
Point(29) = {-0.045318, 0.733847, 0, 1.0};
Point(30) = {-0.047614, 0.731480, 0, 1.0};
Point(31) = {-0.049149, 0.729256, 0, 1.0};
Point(32) = {-0.049906, 0.727294, 0, 1.0};
Point(33) = {-0.049884, 0.725771, 0, 1.0};
Point(34) = {-0.048750, 0.724857, 0, 1.0};
Point(35) = {-0.046263, 0.724374, 0, 1.0};
Point(36) = {-0.042549, 0.724127, 0, 1.0};
Point(37) = {-0.037654, 0.724083, 0, 1.0};
Point(38) = {-0.031623, 0.724185, 0, 1.0};
Point(39) = {-0.024550, 0.724358, 0, 1.0};
Point(40) = {-0.016572, 0.724563, 0, 1.0};
Point(41) = {-0.007824, 0.724795, 0, 1.0};
Point(42) = {0.001559, 0.725052, 0, 1.0};
Point(43) = {0.011453, 0.725360, 0, 1.0};
Point(44) = {0.021748, 0.725721, 0, 1.0};
Point(45) = {0.032323, 0.726139, 0, 1.0};
Point(46) = {0.043059, 0.726614, 0, 1.0};
Point(47) = {0.053834, 0.727146, 0, 1.0};
Point(48) = {0.064524, 0.727729, 0, 1.0};
Point(49) = {0.075005, 0.728364, 0, 1.0};
Point(50) = {0.085161, 0.729055, 0, 1.0};
Point(51) = {0.094884, 0.729806, 0, 1.0};
Point(52) = {0.104091, 0.730615, 0, 1.0};
Point(53) = {0.112688, 0.731465, 0, 1.0};
Point(54) = {0.120591, 0.732331, 0, 1.0};
Point(55) = {0.127720, 0.733186, 0, 1.0};
Point(56) = {0.133992, 0.733996, 0, 1.0};
Point(57) = {0.139309, 0.734731, 0, 1.0};
Point(58) = {0.143613, 0.735397, 0, 1.0};
Point(59) = {0.146880, 0.735926, 0, 1.0};
Point(60) = {0.148983, 0.736225, 0, 1.0};
Point(61) = {-0.149722, -0.736308, 0, 1.0};
Point(62) = {-0.148970, -0.736365, 0, 1.0};
Point(63) = {-0.146834, -0.736604, 0, 1.0};
Point(64) = {-0.143530, -0.737055, 0, 1.0};
Point(65) = {-0.139168, -0.737582, 0, 1.0};
Point(66) = {-0.133723, -0.738137, 0, 1.0};
Point(67) = {-0.127227, -0.738776, 0, 1.0};
Point(68) = {-0.119784, -0.739534, 0, 1.0};
Point(69) = {-0.111524, -0.740422, 0, 1.0};
Point(70) = {-0.102578, -0.741436, 0, 1.0};
Point(71) = {-0.093090, -0.742555, 0, 1.0};
Point(72) = {-0.083207, -0.743752, 0, 1.0};
Point(73) = {-0.073074, -0.744982, 0, 1.0};
Point(74) = {-0.062828, -0.746197, 0, 1.0};
Point(75) = {-0.052607, -0.747340, 0, 1.0};
Point(76) = {-0.042530, -0.748350, 0, 1.0};
Point(77) = {-0.032713, -0.749172, 0, 1.0};
Point(78) = {-0.023246, -0.749739, 0, 1.0};
Point(79) = {-0.014222, -0.750000, 0, 1.0};
Point(80) = {-0.005717, -0.749894, 0, 1.0};
Point(81) = {0.002251, -0.749349, 0, 1.0};
Point(82) = {0.009695, -0.748365, 0, 1.0};
Point(83) = {0.016608, -0.746977, 0, 1.0};
Point(84) = {0.022977, -0.745236, 0, 1.0};
Point(85) = {0.028777, -0.743230, 0, 1.0};
Point(86) = {0.033956, -0.741024, 0, 1.0};
Point(87) = {0.038463, -0.738685, 0, 1.0};
Point(88) = {0.042259, -0.736269, 0, 1.0};
Point(89) = {0.045318, -0.733847, 0, 1.0};
Point(90) = {0.047614, -0.731480, 0, 1.0};
Point(91) = {0.049149, -0.729256, 0, 1.0};
Point(92) = {0.049906, -0.727294, 0, 1.0};
Point(93) = {0.049884, -0.725771, 0, 1.0};
Point(94) = {0.048750, -0.724857, 0, 1.0};
Point(95) = {0.046263, -0.724374, 0, 1.0};
Point(96) = {0.042549, -0.724127, 0, 1.0};
Point(97) = {0.037654, -0.724083, 0, 1.0};
Point(98) = {0.031623, -0.724185, 0, 1.0};
Point(99) = {0.024550, -0.724358, 0, 1.0};
Point(100) = {0.016572, -0.724563, 0, 1.0};
Point(101) = {0.007824, -0.724795, 0, 1.0};
Point(102) = {-0.001559, -0.725052, 0, 1.0};
Point(103) = {-0.011453, -0.725360, 0, 1.0};
Point(104) = {-0.021748, -0.725721, 0, 1.0};
Point(105) = {-0.032323, -0.726139, 0, 1.0};
Point(106) = {-0.043059, -0.726614, 0, 1.0};
Point(107) = {-0.053834, -0.727146, 0, 1.0};
Point(108) = {-0.064524, -0.727729, 0, 1.0};
Point(109) = {-0.075005, -0.728364, 0, 1.0};
Point(110) = {-0.085161, -0.729055, 0, 1.0};
Point(111) = {-0.094884, -0.729806, 0, 1.0};
Point(112) = {-0.104091, -0.730615, 0, 1.0};
Point(113) = {-0.112688, -0.731465, 0, 1.0};
Point(114) = {-0.120591, -0.732331, 0, 1.0};
Point(115) = {-0.127720, -0.733186, 0, 1.0};
Point(116) = {-0.133992, -0.733996, 0, 1.0};
Point(117) = {-0.139309, -0.734731, 0, 1.0};
Point(118) = {-0.143613, -0.735397, 0, 1.0};
Point(119) = {-0.146880, -0.735926, 0, 1.0};
Point(120) = {-0.148983, -0.736225, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073569, 0.727343, 0, 1.0};
Point(2) = {0.073205, 0.727436, 0, 1.0};
Point(3) = {0.072169, 0.727746, 0, 1.0};
Point(4) = {0.070565, 0.728267, 0, 1.0};
Point(5) = {0.068435, 0.728942, 0, 1.0};
Point(6) = {0.065770, 0.729750, 0, 1.0};
Point(7) = {0.062594, 0.730713, 0, 1.0};
Point(8) = {0.058968, 0.731840, 0, 1.0};
Point(9) = {0.054954, 0.733123, 0, 1.0};
Point(10) = {0.050619, 0.734546, 0, 1.0};
Point(11) = {0.046035, 0.736084, 0, 1.0};
Point(12) = {0.041270, 0.737706, 0, 1.0};
Point(13) = {0.036392, 0.739377, 0, 1.0};
Point(14) = {0.031468, 0.741058, 0, 1.0};
Point(15) = {0.026554, 0.742705, 0, 1.0};
Point(16) = {0.021706, 0.744275, 0, 1.0};
Point(17) = {0.016973, 0.745726, 0, 1.0};
Point(18) = {0.012395, 0.747020, 0, 1.0};
Point(19) = {0.008010, 0.748120, 0, 1.0};
Point(20) = {0.003847, 0.748987, 0, 1.0};
Point(21) = {-0.000090, 0.749586, 0, 1.0};
Point(22) = {-0.003809, 0.749919, 0, 1.0};
Point(23) = {-0.007297, 0.750000, 0, 1.0};
Point(24) = {-0.010549, 0.749852, 0, 1.0};
Point(25) = {-0.013544, 0.749511, 0, 1.0};
Point(26) = {-0.016248, 0.749010, 0, 1.0};
Point(27) = {-0.018629, 0.748373, 0, 1.0};
Point(28) = {-0.020667, 0.747624, 0, 1.0};
Point(29) = {-0.022337, 0.746794, 0, 1.0};
Point(30) = {-0.023623, 0.745913, 0, 1.0};
Point(31) = {-0.024516, 0.745028, 0, 1.0};
Point(32) = {-0.024988, 0.744196, 0, 1.0};
Point(33) = {-0.024978, 0.743543, 0, 1.0};
Point(34) = {-0.024335, 0.743017, 0, 1.0};
Point(35) = {-0.023014, 0.742467, 0, 1.0};
Point(36) = {-0.021093, 0.741887, 0, 1.0};
Point(37) = {-0.018596, 0.741273, 0, 1.0};
Point(38) = {-0.015556, 0.740605, 0, 1.0};
Point(39) = {-0.012020, 0.739863, 0, 1.0};
Point(40) = {-0.008060, 0.739047, 0, 1.0};
Point(41) = {-0.003738, 0.738167, 0, 1.0};
Point(42) = {0.000882, 0.737241, 0, 1.0};
Point(43) = {0.005741, 0.736292, 0, 1.0};
Point(44) = {0.010790, 0.735337, 0, 1.0};
Point(45) = {0.015970, 0.734389, 0, 1.0};
Point(46) = {0.021225, 0.733461, 0, 1.0};
Point(47) = {0.026494, 0.732567, 0, 1.0};
Point(48) = {0.031721, 0.731716, 0, 1.0};
Point(49) = {0.036847, 0.730922, 0, 1.0};
Point(50) = {0.041814, 0.730196, 0, 1.0};
Point(51) = {0.046575, 0.729556, 0, 1.0};
Point(52) = {0.051086, 0.729005, 0, 1.0};
Point(53) = {0.055304, 0.728546, 0, 1.0};
Point(54) = {0.059186, 0.728172, 0, 1.0};
Point(55) = {0.062691, 0.727881, 0, 1.0};
Point(56) = {0.065778, 0.727663, 0, 1.0};
Point(57) = {0.068396, 0.727513, 0, 1.0};
Point(58) = {0.070526, 0.727439, 0, 1.0};
Point(59) = {0.072149, 0.727408, 0, 1.0};
Point(60) = {0.073200, 0.727367, 0, 1.0};
Point(61) = {-0.073569, -0.727343, 0, 1.0};
Point(62) = {-0.073205, -0.727436, 0, 1.0};
Point(63) = {-0.072169, -0.727746, 0, 1.0};
Point(64) = {-0.070565, -0.728267, 0, 1.0};
Point(65) = {-0.068435, -0.728942, 0, 1.0};
Point(66) = {-0.065770, -0.729750, 0, 1.0};
Point(67) = {-0.062594, -0.730713, 0, 1.0};
Point(68) = {-0.058968, -0.731840, 0, 1.0};
Point(69) = {-0.054954, -0.733123, 0, 1.0};
Point(70) = {-0.050619, -0.734546, 0, 1.0};
Point(71) = {-0.046035, -0.736084, 0, 1.0};
Point(72) = {-0.041270, -0.737706, 0, 1.0};
Point(73) = {-0.036392, -0.739377, 0, 1.0};
Point(74) = {-0.031468, -0.741058, 0, 1.0};
Point(75) = {-0.026554, -0.742705, 0, 1.0};
Point(76) = {-0.021706, -0.744275, 0, 1.0};
Point(77) = {-0.016973, -0.745726, 0, 1.0};
Point(78) = {-0.012395, -0.747020, 0, 1.0};
Point(79) = {-0.008010, -0.748120, 0, 1.0};
Point(80) = {-0.003847, -0.748987, 0, 1.0};
Point(81) = {0.000090, -0.749586, 0, 1.0};
Point(82) = {0.003809, -0.749919, 0, 1.0};
Point(83) = {0.007297, -0.750000, 0, 1.0};
Point(84) = {0.010549, -0.749852, 0, 1.0};
Point(85) = {0.013544, -0.749511, 0, 1.0};
Point(86) = {0.016248, -0.749010, 0, 1.0};
Point(87) = {0.018629, -0.748373, 0, 1.0};
Point(88) = {0.020667, -0.747624, 0, 1.0};
Point(89) = {0.022337, -0.746794, 0, 1.0};
Point(90) = {0.023623, -0.745913, 0, 1.0};
Point(91) = {0.024516, -0.745028, 0, 1.0};
Point(92) = {0.024988, -0.744196, 0, 1.0};
Point(93) = {0.024978, -0.743543, 0, 1.0};
Point(94) = {0.024335, -0.743017, 0, 1.0};
Point(95) = {0.023014, -0.742467, 0, 1.0};
Point(96) = {0.021093, -0.741887, 0, 1.0};
Point(97) = {0.018596, -0.741273, 0, 1.0};
Point(98) = {0.015556, -0.740605, 0, 1.0};
Point(99) = {0.012020, -0.739863, 0, 1.0};
Point(100) = {0.008060, -0.739047, 0, 1.0};
Point(101) = {0.003738, -0.738167, 0, 1.0};
Point(102) = {-0.000882, -0.737241, 0, 1.0};
Point(103) = {-0.005741, -0.736292, 0, 1.0};
Point(104) = {-0.010790, -0.735337, 0, 1.0};
Point(105) = {-0.015970, -0.734389, 0, 1.0};
Point(106) = {-0.021225, -0.733461, 0, 1.0};
Point(107) = {-0.026494, -0.732567, 0, 1.0};
Point(108) = {-0.031721, -0.731716, 0, 1.0};
Point(109) = {-0.036847, -0.730922, 0, 1.0};
Point(110) = {-0.041814, -0.730196, 0, 1.0};
Point(111) = {-0.046575, -0.729556, 0, 1.0};
Point(112) = {-0.051086, -0.729005, 0, 1.0};
Point(113) = {-0.055304, -0.728546, 0, 1.0};
Point(114) = {-0.059186, -0.728172, 0, 1.0};
Point(115) = {-0.062691, -0.727881, 0, 1.0};
Point(116) = {-0.065778, -0.727663, 0, 1.0};
Point(117) = {-0.068396, -0.727513, 0, 1.0};
Point(118) = {-0.070526, -0.727439, 0, 1.0};
Point(119) = {-0.072149, -0.727408, 0, 1.0};
Point(120) = {-0.073200, -0.727367, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
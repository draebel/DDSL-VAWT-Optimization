SetFactory("OpenCASCADE");

Point(1) = {0.147139, 0.704685, 0, 1.0};
Point(2) = {0.146410, 0.704873, 0, 1.0};
Point(3) = {0.144339, 0.705493, 0, 1.0};
Point(4) = {0.141130, 0.706535, 0, 1.0};
Point(5) = {0.136871, 0.707884, 0, 1.0};
Point(6) = {0.131541, 0.709499, 0, 1.0};
Point(7) = {0.125189, 0.711426, 0, 1.0};
Point(8) = {0.117937, 0.713680, 0, 1.0};
Point(9) = {0.109908, 0.716246, 0, 1.0};
Point(10) = {0.101238, 0.719092, 0, 1.0};
Point(11) = {0.092069, 0.722168, 0, 1.0};
Point(12) = {0.082540, 0.725412, 0, 1.0};
Point(13) = {0.072784, 0.728754, 0, 1.0};
Point(14) = {0.062935, 0.732116, 0, 1.0};
Point(15) = {0.053108, 0.735410, 0, 1.0};
Point(16) = {0.043412, 0.738549, 0, 1.0};
Point(17) = {0.033946, 0.741452, 0, 1.0};
Point(18) = {0.024789, 0.744041, 0, 1.0};
Point(19) = {0.016021, 0.746240, 0, 1.0};
Point(20) = {0.007694, 0.747974, 0, 1.0};
Point(21) = {-0.000181, 0.749173, 0, 1.0};
Point(22) = {-0.007617, 0.749838, 0, 1.0};
Point(23) = {-0.014594, 0.750000, 0, 1.0};
Point(24) = {-0.021098, 0.749704, 0, 1.0};
Point(25) = {-0.027087, 0.749022, 0, 1.0};
Point(26) = {-0.032496, 0.748019, 0, 1.0};
Point(27) = {-0.037258, 0.746746, 0, 1.0};
Point(28) = {-0.041333, 0.745247, 0, 1.0};
Point(29) = {-0.044675, 0.743588, 0, 1.0};
Point(30) = {-0.047246, 0.741827, 0, 1.0};
Point(31) = {-0.049032, 0.740056, 0, 1.0};
Point(32) = {-0.049976, 0.738392, 0, 1.0};
Point(33) = {-0.049956, 0.737086, 0, 1.0};
Point(34) = {-0.048669, 0.736034, 0, 1.0};
Point(35) = {-0.046029, 0.734935, 0, 1.0};
Point(36) = {-0.042185, 0.733774, 0, 1.0};
Point(37) = {-0.037193, 0.732545, 0, 1.0};
Point(38) = {-0.031111, 0.731209, 0, 1.0};
Point(39) = {-0.024040, 0.729726, 0, 1.0};
Point(40) = {-0.016120, 0.728094, 0, 1.0};
Point(41) = {-0.007477, 0.726334, 0, 1.0};
Point(42) = {0.001763, 0.724482, 0, 1.0};
Point(43) = {0.011483, 0.722585, 0, 1.0};
Point(44) = {0.021581, 0.720673, 0, 1.0};
Point(45) = {0.031940, 0.718778, 0, 1.0};
Point(46) = {0.042449, 0.716922, 0, 1.0};
Point(47) = {0.052989, 0.715134, 0, 1.0};
Point(48) = {0.063441, 0.713432, 0, 1.0};
Point(49) = {0.073694, 0.711843, 0, 1.0};
Point(50) = {0.083628, 0.710392, 0, 1.0};
Point(51) = {0.093150, 0.709113, 0, 1.0};
Point(52) = {0.102172, 0.708010, 0, 1.0};
Point(53) = {0.110607, 0.707091, 0, 1.0};
Point(54) = {0.118372, 0.706344, 0, 1.0};
Point(55) = {0.125383, 0.705762, 0, 1.0};
Point(56) = {0.131555, 0.705325, 0, 1.0};
Point(57) = {0.136792, 0.705026, 0, 1.0};
Point(58) = {0.141052, 0.704878, 0, 1.0};
Point(59) = {0.144298, 0.704816, 0, 1.0};
Point(60) = {0.146400, 0.704735, 0, 1.0};
Point(61) = {-0.147139, -0.704685, 0, 1.0};
Point(62) = {-0.146410, -0.704873, 0, 1.0};
Point(63) = {-0.144339, -0.705493, 0, 1.0};
Point(64) = {-0.141130, -0.706535, 0, 1.0};
Point(65) = {-0.136871, -0.707884, 0, 1.0};
Point(66) = {-0.131541, -0.709499, 0, 1.0};
Point(67) = {-0.125189, -0.711426, 0, 1.0};
Point(68) = {-0.117937, -0.713680, 0, 1.0};
Point(69) = {-0.109908, -0.716246, 0, 1.0};
Point(70) = {-0.101238, -0.719092, 0, 1.0};
Point(71) = {-0.092069, -0.722168, 0, 1.0};
Point(72) = {-0.082540, -0.725412, 0, 1.0};
Point(73) = {-0.072784, -0.728754, 0, 1.0};
Point(74) = {-0.062935, -0.732116, 0, 1.0};
Point(75) = {-0.053108, -0.735410, 0, 1.0};
Point(76) = {-0.043412, -0.738549, 0, 1.0};
Point(77) = {-0.033946, -0.741452, 0, 1.0};
Point(78) = {-0.024789, -0.744041, 0, 1.0};
Point(79) = {-0.016021, -0.746240, 0, 1.0};
Point(80) = {-0.007694, -0.747974, 0, 1.0};
Point(81) = {0.000181, -0.749173, 0, 1.0};
Point(82) = {0.007617, -0.749838, 0, 1.0};
Point(83) = {0.014594, -0.750000, 0, 1.0};
Point(84) = {0.021098, -0.749704, 0, 1.0};
Point(85) = {0.027087, -0.749022, 0, 1.0};
Point(86) = {0.032496, -0.748019, 0, 1.0};
Point(87) = {0.037258, -0.746746, 0, 1.0};
Point(88) = {0.041333, -0.745247, 0, 1.0};
Point(89) = {0.044675, -0.743588, 0, 1.0};
Point(90) = {0.047246, -0.741827, 0, 1.0};
Point(91) = {0.049032, -0.740056, 0, 1.0};
Point(92) = {0.049976, -0.738392, 0, 1.0};
Point(93) = {0.049956, -0.737086, 0, 1.0};
Point(94) = {0.048669, -0.736034, 0, 1.0};
Point(95) = {0.046029, -0.734935, 0, 1.0};
Point(96) = {0.042185, -0.733774, 0, 1.0};
Point(97) = {0.037193, -0.732545, 0, 1.0};
Point(98) = {0.031111, -0.731209, 0, 1.0};
Point(99) = {0.024040, -0.729726, 0, 1.0};
Point(100) = {0.016120, -0.728094, 0, 1.0};
Point(101) = {0.007477, -0.726334, 0, 1.0};
Point(102) = {-0.001763, -0.724482, 0, 1.0};
Point(103) = {-0.011483, -0.722585, 0, 1.0};
Point(104) = {-0.021581, -0.720673, 0, 1.0};
Point(105) = {-0.031940, -0.718778, 0, 1.0};
Point(106) = {-0.042449, -0.716922, 0, 1.0};
Point(107) = {-0.052989, -0.715134, 0, 1.0};
Point(108) = {-0.063441, -0.713432, 0, 1.0};
Point(109) = {-0.073694, -0.711843, 0, 1.0};
Point(110) = {-0.083628, -0.710392, 0, 1.0};
Point(111) = {-0.093150, -0.709113, 0, 1.0};
Point(112) = {-0.102172, -0.708010, 0, 1.0};
Point(113) = {-0.110607, -0.707091, 0, 1.0};
Point(114) = {-0.118372, -0.706344, 0, 1.0};
Point(115) = {-0.125383, -0.705762, 0, 1.0};
Point(116) = {-0.131555, -0.705325, 0, 1.0};
Point(117) = {-0.136792, -0.705026, 0, 1.0};
Point(118) = {-0.141052, -0.704878, 0, 1.0};
Point(119) = {-0.144298, -0.704816, 0, 1.0};
Point(120) = {-0.146400, -0.704735, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
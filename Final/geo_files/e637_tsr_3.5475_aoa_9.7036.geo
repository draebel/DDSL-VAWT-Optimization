SetFactory("OpenCASCADE");

Point(1) = {0.110354, 0.716014, 0, 1.0};
Point(2) = {0.109807, 0.716155, 0, 1.0};
Point(3) = {0.108254, 0.716620, 0, 1.0};
Point(4) = {0.105848, 0.717401, 0, 1.0};
Point(5) = {0.102653, 0.718413, 0, 1.0};
Point(6) = {0.098656, 0.719624, 0, 1.0};
Point(7) = {0.093891, 0.721069, 0, 1.0};
Point(8) = {0.088453, 0.722760, 0, 1.0};
Point(9) = {0.082431, 0.724685, 0, 1.0};
Point(10) = {0.075929, 0.726819, 0, 1.0};
Point(11) = {0.069052, 0.729126, 0, 1.0};
Point(12) = {0.061905, 0.731559, 0, 1.0};
Point(13) = {0.054588, 0.734066, 0, 1.0};
Point(14) = {0.047202, 0.736587, 0, 1.0};
Point(15) = {0.039831, 0.739058, 0, 1.0};
Point(16) = {0.032559, 0.741412, 0, 1.0};
Point(17) = {0.025460, 0.743589, 0, 1.0};
Point(18) = {0.018592, 0.745530, 0, 1.0};
Point(19) = {0.012016, 0.747180, 0, 1.0};
Point(20) = {0.005770, 0.748481, 0, 1.0};
Point(21) = {-0.000136, 0.749380, 0, 1.0};
Point(22) = {-0.005713, 0.749878, 0, 1.0};
Point(23) = {-0.010945, 0.750000, 0, 1.0};
Point(24) = {-0.015824, 0.749778, 0, 1.0};
Point(25) = {-0.020315, 0.749266, 0, 1.0};
Point(26) = {-0.024372, 0.748514, 0, 1.0};
Point(27) = {-0.027944, 0.747559, 0, 1.0};
Point(28) = {-0.031000, 0.746435, 0, 1.0};
Point(29) = {-0.033506, 0.745191, 0, 1.0};
Point(30) = {-0.035435, 0.743870, 0, 1.0};
Point(31) = {-0.036774, 0.742542, 0, 1.0};
Point(32) = {-0.037482, 0.741294, 0, 1.0};
Point(33) = {-0.037467, 0.740314, 0, 1.0};
Point(34) = {-0.036502, 0.739525, 0, 1.0};
Point(35) = {-0.034521, 0.738701, 0, 1.0};
Point(36) = {-0.031639, 0.737831, 0, 1.0};
Point(37) = {-0.027895, 0.736909, 0, 1.0};
Point(38) = {-0.023333, 0.735907, 0, 1.0};
Point(39) = {-0.018030, 0.734795, 0, 1.0};
Point(40) = {-0.012090, 0.733570, 0, 1.0};
Point(41) = {-0.005608, 0.732250, 0, 1.0};
Point(42) = {0.001323, 0.730861, 0, 1.0};
Point(43) = {0.008612, 0.729438, 0, 1.0};
Point(44) = {0.016186, 0.728005, 0, 1.0};
Point(45) = {0.023955, 0.726584, 0, 1.0};
Point(46) = {0.031837, 0.725192, 0, 1.0};
Point(47) = {0.039742, 0.723851, 0, 1.0};
Point(48) = {0.047581, 0.722574, 0, 1.0};
Point(49) = {0.055271, 0.721382, 0, 1.0};
Point(50) = {0.062721, 0.720294, 0, 1.0};
Point(51) = {0.069863, 0.719334, 0, 1.0};
Point(52) = {0.076629, 0.718508, 0, 1.0};
Point(53) = {0.082956, 0.717818, 0, 1.0};
Point(54) = {0.088779, 0.717258, 0, 1.0};
Point(55) = {0.094037, 0.716821, 0, 1.0};
Point(56) = {0.098667, 0.716494, 0, 1.0};
Point(57) = {0.102594, 0.716270, 0, 1.0};
Point(58) = {0.105789, 0.716159, 0, 1.0};
Point(59) = {0.108223, 0.716112, 0, 1.0};
Point(60) = {0.109800, 0.716051, 0, 1.0};
Point(61) = {-0.110354, -0.716014, 0, 1.0};
Point(62) = {-0.109807, -0.716155, 0, 1.0};
Point(63) = {-0.108254, -0.716620, 0, 1.0};
Point(64) = {-0.105848, -0.717401, 0, 1.0};
Point(65) = {-0.102653, -0.718413, 0, 1.0};
Point(66) = {-0.098656, -0.719624, 0, 1.0};
Point(67) = {-0.093891, -0.721069, 0, 1.0};
Point(68) = {-0.088453, -0.722760, 0, 1.0};
Point(69) = {-0.082431, -0.724685, 0, 1.0};
Point(70) = {-0.075929, -0.726819, 0, 1.0};
Point(71) = {-0.069052, -0.729126, 0, 1.0};
Point(72) = {-0.061905, -0.731559, 0, 1.0};
Point(73) = {-0.054588, -0.734066, 0, 1.0};
Point(74) = {-0.047202, -0.736587, 0, 1.0};
Point(75) = {-0.039831, -0.739058, 0, 1.0};
Point(76) = {-0.032559, -0.741412, 0, 1.0};
Point(77) = {-0.025460, -0.743589, 0, 1.0};
Point(78) = {-0.018592, -0.745530, 0, 1.0};
Point(79) = {-0.012016, -0.747180, 0, 1.0};
Point(80) = {-0.005770, -0.748481, 0, 1.0};
Point(81) = {0.000136, -0.749380, 0, 1.0};
Point(82) = {0.005713, -0.749878, 0, 1.0};
Point(83) = {0.010945, -0.750000, 0, 1.0};
Point(84) = {0.015824, -0.749778, 0, 1.0};
Point(85) = {0.020315, -0.749266, 0, 1.0};
Point(86) = {0.024372, -0.748514, 0, 1.0};
Point(87) = {0.027944, -0.747559, 0, 1.0};
Point(88) = {0.031000, -0.746435, 0, 1.0};
Point(89) = {0.033506, -0.745191, 0, 1.0};
Point(90) = {0.035435, -0.743870, 0, 1.0};
Point(91) = {0.036774, -0.742542, 0, 1.0};
Point(92) = {0.037482, -0.741294, 0, 1.0};
Point(93) = {0.037467, -0.740314, 0, 1.0};
Point(94) = {0.036502, -0.739525, 0, 1.0};
Point(95) = {0.034521, -0.738701, 0, 1.0};
Point(96) = {0.031639, -0.737831, 0, 1.0};
Point(97) = {0.027895, -0.736909, 0, 1.0};
Point(98) = {0.023333, -0.735907, 0, 1.0};
Point(99) = {0.018030, -0.734795, 0, 1.0};
Point(100) = {0.012090, -0.733570, 0, 1.0};
Point(101) = {0.005608, -0.732250, 0, 1.0};
Point(102) = {-0.001323, -0.730861, 0, 1.0};
Point(103) = {-0.008612, -0.729438, 0, 1.0};
Point(104) = {-0.016186, -0.728005, 0, 1.0};
Point(105) = {-0.023955, -0.726584, 0, 1.0};
Point(106) = {-0.031837, -0.725192, 0, 1.0};
Point(107) = {-0.039742, -0.723851, 0, 1.0};
Point(108) = {-0.047581, -0.722574, 0, 1.0};
Point(109) = {-0.055271, -0.721382, 0, 1.0};
Point(110) = {-0.062721, -0.720294, 0, 1.0};
Point(111) = {-0.069863, -0.719334, 0, 1.0};
Point(112) = {-0.076629, -0.718508, 0, 1.0};
Point(113) = {-0.082956, -0.717818, 0, 1.0};
Point(114) = {-0.088779, -0.717258, 0, 1.0};
Point(115) = {-0.094037, -0.716821, 0, 1.0};
Point(116) = {-0.098667, -0.716494, 0, 1.0};
Point(117) = {-0.102594, -0.716270, 0, 1.0};
Point(118) = {-0.105789, -0.716159, 0, 1.0};
Point(119) = {-0.108223, -0.716112, 0, 1.0};
Point(120) = {-0.109800, -0.716051, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
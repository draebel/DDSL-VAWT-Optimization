SetFactory("OpenCASCADE");

Point(1) = {0.074795, 0.732731, 0, 1.0};
Point(2) = {0.072991, 0.733051, 0, 1.0};
Point(3) = {0.069795, 0.733651, 0, 1.0};
Point(4) = {0.066329, 0.734320, 0, 1.0};
Point(5) = {0.062567, 0.735053, 0, 1.0};
Point(6) = {0.058501, 0.735962, 0, 1.0};
Point(7) = {0.054352, 0.737190, 0, 1.0};
Point(8) = {0.050338, 0.738514, 0, 1.0};
Point(9) = {0.046362, 0.739633, 0, 1.0};
Point(10) = {0.042248, 0.740590, 0, 1.0};
Point(11) = {0.037957, 0.741465, 0, 1.0};
Point(12) = {0.033521, 0.742289, 0, 1.0};
Point(13) = {0.028961, 0.743072, 0, 1.0};
Point(14) = {0.024300, 0.743819, 0, 1.0};
Point(15) = {0.019555, 0.744527, 0, 1.0};
Point(16) = {0.014750, 0.745198, 0, 1.0};
Point(17) = {0.009902, 0.745834, 0, 1.0};
Point(18) = {0.005031, 0.746431, 0, 1.0};
Point(19) = {0.000158, 0.746988, 0, 1.0};
Point(20) = {-0.004699, 0.747504, 0, 1.0};
Point(21) = {-0.009518, 0.747977, 0, 1.0};
Point(22) = {-0.014281, 0.748403, 0, 1.0};
Point(23) = {-0.018970, 0.748783, 0, 1.0};
Point(24) = {-0.023567, 0.749113, 0, 1.0};
Point(25) = {-0.028053, 0.749392, 0, 1.0};
Point(26) = {-0.032413, 0.749621, 0, 1.0};
Point(27) = {-0.036630, 0.749796, 0, 1.0};
Point(28) = {-0.040684, 0.749918, 0, 1.0};
Point(29) = {-0.044564, 0.749986, 0, 1.0};
Point(30) = {-0.048252, 0.750000, 0, 1.0};
Point(31) = {-0.051734, 0.749956, 0, 1.0};
Point(32) = {-0.054999, 0.749856, 0, 1.0};
Point(33) = {-0.058036, 0.749694, 0, 1.0};
Point(34) = {-0.060840, 0.749475, 0, 1.0};
Point(35) = {-0.063399, 0.749199, 0, 1.0};
Point(36) = {-0.065710, 0.748868, 0, 1.0};
Point(37) = {-0.067764, 0.748488, 0, 1.0};
Point(38) = {-0.069557, 0.748063, 0, 1.0};
Point(39) = {-0.071086, 0.747594, 0, 1.0};
Point(40) = {-0.072347, 0.747093, 0, 1.0};
Point(41) = {-0.073341, 0.746559, 0, 1.0};
Point(42) = {-0.074076, 0.746011, 0, 1.0};
Point(43) = {-0.074544, 0.745493, 0, 1.0};
Point(44) = {-0.074704, 0.745020, 0, 1.0};
Point(45) = {-0.074493, 0.744572, 0, 1.0};
Point(46) = {-0.073936, 0.744087, 0, 1.0};
Point(47) = {-0.073073, 0.743562, 0, 1.0};
Point(48) = {-0.071897, 0.743025, 0, 1.0};
Point(49) = {-0.070430, 0.742470, 0, 1.0};
Point(50) = {-0.068673, 0.741911, 0, 1.0};
Point(51) = {-0.066631, 0.741349, 0, 1.0};
Point(52) = {-0.064311, 0.740790, 0, 1.0};
Point(53) = {-0.061720, 0.740238, 0, 1.0};
Point(54) = {-0.058866, 0.739695, 0, 1.0};
Point(55) = {-0.055756, 0.739162, 0, 1.0};
Point(56) = {-0.052400, 0.738641, 0, 1.0};
Point(57) = {-0.048812, 0.738134, 0, 1.0};
Point(58) = {-0.045003, 0.737639, 0, 1.0};
Point(59) = {-0.040984, 0.737160, 0, 1.0};
Point(60) = {-0.036774, 0.736694, 0, 1.0};
Point(61) = {-0.032387, 0.736243, 0, 1.0};
Point(62) = {-0.027839, 0.735803, 0, 1.0};
Point(63) = {-0.023148, 0.735375, 0, 1.0};
Point(64) = {-0.018335, 0.734960, 0, 1.0};
Point(65) = {-0.013419, 0.734556, 0, 1.0};
Point(66) = {-0.008420, 0.734164, 0, 1.0};
Point(67) = {-0.003357, 0.733785, 0, 1.0};
Point(68) = {0.001743, 0.733415, 0, 1.0};
Point(69) = {0.006863, 0.733057, 0, 1.0};
Point(70) = {0.011979, 0.732708, 0, 1.0};
Point(71) = {0.017067, 0.732376, 0, 1.0};
Point(72) = {0.022102, 0.732058, 0, 1.0};
Point(73) = {0.027064, 0.731756, 0, 1.0};
Point(74) = {0.031931, 0.731475, 0, 1.0};
Point(75) = {0.036682, 0.731222, 0, 1.0};
Point(76) = {0.041292, 0.730995, 0, 1.0};
Point(77) = {0.045747, 0.730807, 0, 1.0};
Point(78) = {0.050024, 0.730657, 0, 1.0};
Point(79) = {0.054109, 0.730564, 0, 1.0};
Point(80) = {0.057981, 0.730547, 0, 1.0};
Point(81) = {0.061670, 0.730637, 0, 1.0};
Point(82) = {0.065233, 0.730827, 0, 1.0};
Point(83) = {0.068677, 0.731016, 0, 1.0};
Point(84) = {0.071949, 0.731150, 0, 1.0};
Point(85) = {0.074660, 0.731210, 0, 1.0};
Point(86) = {-0.074795, -0.732731, 0, 1.0};
Point(87) = {-0.072991, -0.733051, 0, 1.0};
Point(88) = {-0.069795, -0.733651, 0, 1.0};
Point(89) = {-0.066329, -0.734320, 0, 1.0};
Point(90) = {-0.062567, -0.735053, 0, 1.0};
Point(91) = {-0.058501, -0.735962, 0, 1.0};
Point(92) = {-0.054352, -0.737190, 0, 1.0};
Point(93) = {-0.050338, -0.738514, 0, 1.0};
Point(94) = {-0.046362, -0.739633, 0, 1.0};
Point(95) = {-0.042248, -0.740590, 0, 1.0};
Point(96) = {-0.037957, -0.741465, 0, 1.0};
Point(97) = {-0.033521, -0.742289, 0, 1.0};
Point(98) = {-0.028961, -0.743072, 0, 1.0};
Point(99) = {-0.024300, -0.743819, 0, 1.0};
Point(100) = {-0.019555, -0.744527, 0, 1.0};
Point(101) = {-0.014750, -0.745198, 0, 1.0};
Point(102) = {-0.009902, -0.745834, 0, 1.0};
Point(103) = {-0.005031, -0.746431, 0, 1.0};
Point(104) = {-0.000158, -0.746988, 0, 1.0};
Point(105) = {0.004699, -0.747504, 0, 1.0};
Point(106) = {0.009518, -0.747977, 0, 1.0};
Point(107) = {0.014281, -0.748403, 0, 1.0};
Point(108) = {0.018970, -0.748783, 0, 1.0};
Point(109) = {0.023567, -0.749113, 0, 1.0};
Point(110) = {0.028053, -0.749392, 0, 1.0};
Point(111) = {0.032413, -0.749621, 0, 1.0};
Point(112) = {0.036630, -0.749796, 0, 1.0};
Point(113) = {0.040684, -0.749918, 0, 1.0};
Point(114) = {0.044564, -0.749986, 0, 1.0};
Point(115) = {0.048252, -0.750000, 0, 1.0};
Point(116) = {0.051734, -0.749956, 0, 1.0};
Point(117) = {0.054999, -0.749856, 0, 1.0};
Point(118) = {0.058036, -0.749694, 0, 1.0};
Point(119) = {0.060840, -0.749475, 0, 1.0};
Point(120) = {0.063399, -0.749199, 0, 1.0};
Point(121) = {0.065710, -0.748868, 0, 1.0};
Point(122) = {0.067764, -0.748488, 0, 1.0};
Point(123) = {0.069557, -0.748063, 0, 1.0};
Point(124) = {0.071086, -0.747594, 0, 1.0};
Point(125) = {0.072347, -0.747093, 0, 1.0};
Point(126) = {0.073341, -0.746559, 0, 1.0};
Point(127) = {0.074076, -0.746011, 0, 1.0};
Point(128) = {0.074544, -0.745493, 0, 1.0};
Point(129) = {0.074704, -0.745020, 0, 1.0};
Point(130) = {0.074493, -0.744572, 0, 1.0};
Point(131) = {0.073936, -0.744087, 0, 1.0};
Point(132) = {0.073073, -0.743562, 0, 1.0};
Point(133) = {0.071897, -0.743025, 0, 1.0};
Point(134) = {0.070430, -0.742470, 0, 1.0};
Point(135) = {0.068673, -0.741911, 0, 1.0};
Point(136) = {0.066631, -0.741349, 0, 1.0};
Point(137) = {0.064311, -0.740790, 0, 1.0};
Point(138) = {0.061720, -0.740238, 0, 1.0};
Point(139) = {0.058866, -0.739695, 0, 1.0};
Point(140) = {0.055756, -0.739162, 0, 1.0};
Point(141) = {0.052400, -0.738641, 0, 1.0};
Point(142) = {0.048812, -0.738134, 0, 1.0};
Point(143) = {0.045003, -0.737639, 0, 1.0};
Point(144) = {0.040984, -0.737160, 0, 1.0};
Point(145) = {0.036774, -0.736694, 0, 1.0};
Point(146) = {0.032387, -0.736243, 0, 1.0};
Point(147) = {0.027839, -0.735803, 0, 1.0};
Point(148) = {0.023148, -0.735375, 0, 1.0};
Point(149) = {0.018335, -0.734960, 0, 1.0};
Point(150) = {0.013419, -0.734556, 0, 1.0};
Point(151) = {0.008420, -0.734164, 0, 1.0};
Point(152) = {0.003357, -0.733785, 0, 1.0};
Point(153) = {-0.001743, -0.733415, 0, 1.0};
Point(154) = {-0.006863, -0.733057, 0, 1.0};
Point(155) = {-0.011979, -0.732708, 0, 1.0};
Point(156) = {-0.017067, -0.732376, 0, 1.0};
Point(157) = {-0.022102, -0.732058, 0, 1.0};
Point(158) = {-0.027064, -0.731756, 0, 1.0};
Point(159) = {-0.031931, -0.731475, 0, 1.0};
Point(160) = {-0.036682, -0.731222, 0, 1.0};
Point(161) = {-0.041292, -0.730995, 0, 1.0};
Point(162) = {-0.045747, -0.730807, 0, 1.0};
Point(163) = {-0.050024, -0.730657, 0, 1.0};
Point(164) = {-0.054109, -0.730564, 0, 1.0};
Point(165) = {-0.057981, -0.730547, 0, 1.0};
Point(166) = {-0.061670, -0.730637, 0, 1.0};
Point(167) = {-0.065233, -0.730827, 0, 1.0};
Point(168) = {-0.068677, -0.731016, 0, 1.0};
Point(169) = {-0.071949, -0.731150, 0, 1.0};
Point(170) = {-0.074660, -0.731210, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:61};
Spline(3) = {61:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:146};
Spline(7) = {146:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
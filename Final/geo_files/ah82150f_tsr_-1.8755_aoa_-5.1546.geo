SetFactory("OpenCASCADE");

Point(1) = {0.074557, 0.740458, 0, 1.0};
Point(2) = {0.072544, 0.740757, 0, 1.0};
Point(3) = {0.070087, 0.741185, 0, 1.0};
Point(4) = {0.067333, 0.741697, 0, 1.0};
Point(5) = {0.064295, 0.742289, 0, 1.0};
Point(6) = {0.060981, 0.742962, 0, 1.0};
Point(7) = {0.057408, 0.743710, 0, 1.0};
Point(8) = {0.053592, 0.744524, 0, 1.0};
Point(9) = {0.049550, 0.745400, 0, 1.0};
Point(10) = {0.045299, 0.746335, 0, 1.0};
Point(11) = {0.040858, 0.747297, 0, 1.0};
Point(12) = {0.036253, 0.748215, 0, 1.0};
Point(13) = {0.031513, 0.748985, 0, 1.0};
Point(14) = {0.026665, 0.749537, 0, 1.0};
Point(15) = {0.021730, 0.749861, 0, 1.0};
Point(16) = {0.016725, 0.750000, 0, 1.0};
Point(17) = {0.011665, 0.749998, 0, 1.0};
Point(18) = {0.006574, 0.749874, 0, 1.0};
Point(19) = {0.001471, 0.749635, 0, 1.0};
Point(20) = {-0.003621, 0.749285, 0, 1.0};
Point(21) = {-0.008682, 0.748828, 0, 1.0};
Point(22) = {-0.013692, 0.748273, 0, 1.0};
Point(23) = {-0.018626, 0.747620, 0, 1.0};
Point(24) = {-0.023465, 0.746873, 0, 1.0};
Point(25) = {-0.028187, 0.746032, 0, 1.0};
Point(26) = {-0.032772, 0.745098, 0, 1.0};
Point(27) = {-0.037202, 0.744071, 0, 1.0};
Point(28) = {-0.041457, 0.742957, 0, 1.0};
Point(29) = {-0.045516, 0.741764, 0, 1.0};
Point(30) = {-0.049365, 0.740501, 0, 1.0};
Point(31) = {-0.052988, 0.739183, 0, 1.0};
Point(32) = {-0.056371, 0.737828, 0, 1.0};
Point(33) = {-0.059500, 0.736453, 0, 1.0};
Point(34) = {-0.062361, 0.735078, 0, 1.0};
Point(35) = {-0.064946, 0.733713, 0, 1.0};
Point(36) = {-0.067243, 0.732371, 0, 1.0};
Point(37) = {-0.069240, 0.731061, 0, 1.0};
Point(38) = {-0.070933, 0.729802, 0, 1.0};
Point(39) = {-0.072315, 0.728629, 0, 1.0};
Point(40) = {-0.073385, 0.727591, 0, 1.0};
Point(41) = {-0.074142, 0.726722, 0, 1.0};
Point(42) = {-0.074582, 0.726020, 0, 1.0};
Point(43) = {-0.074697, 0.725436, 0, 1.0};
Point(44) = {-0.074482, 0.724910, 0, 1.0};
Point(45) = {-0.073933, 0.724408, 0, 1.0};
Point(46) = {-0.073056, 0.723946, 0, 1.0};
Point(47) = {-0.071857, 0.723556, 0, 1.0};
Point(48) = {-0.070343, 0.723255, 0, 1.0};
Point(49) = {-0.068516, 0.723030, 0, 1.0};
Point(50) = {-0.066385, 0.722862, 0, 1.0};
Point(51) = {-0.063956, 0.722735, 0, 1.0};
Point(52) = {-0.061240, 0.722650, 0, 1.0};
Point(53) = {-0.058251, 0.722607, 0, 1.0};
Point(54) = {-0.054998, 0.722607, 0, 1.0};
Point(55) = {-0.051497, 0.722652, 0, 1.0};
Point(56) = {-0.047763, 0.722743, 0, 1.0};
Point(57) = {-0.043812, 0.722880, 0, 1.0};
Point(58) = {-0.039662, 0.723068, 0, 1.0};
Point(59) = {-0.035329, 0.723302, 0, 1.0};
Point(60) = {-0.030832, 0.723582, 0, 1.0};
Point(61) = {-0.026191, 0.723904, 0, 1.0};
Point(62) = {-0.021425, 0.724258, 0, 1.0};
Point(63) = {-0.016553, 0.724648, 0, 1.0};
Point(64) = {-0.011599, 0.725068, 0, 1.0};
Point(65) = {-0.006579, 0.725518, 0, 1.0};
Point(66) = {-0.001520, 0.725994, 0, 1.0};
Point(67) = {0.003559, 0.726498, 0, 1.0};
Point(68) = {0.008635, 0.727026, 0, 1.0};
Point(69) = {0.013687, 0.727581, 0, 1.0};
Point(70) = {0.018695, 0.728158, 0, 1.0};
Point(71) = {0.023634, 0.728757, 0, 1.0};
Point(72) = {0.028484, 0.729381, 0, 1.0};
Point(73) = {0.033223, 0.730033, 0, 1.0};
Point(74) = {0.037829, 0.730735, 0, 1.0};
Point(75) = {0.042281, 0.731516, 0, 1.0};
Point(76) = {0.046556, 0.732404, 0, 1.0};
Point(77) = {0.050634, 0.733391, 0, 1.0};
Point(78) = {0.054504, 0.734424, 0, 1.0};
Point(79) = {0.058155, 0.735425, 0, 1.0};
Point(80) = {0.061579, 0.736331, 0, 1.0};
Point(81) = {0.064762, 0.737112, 0, 1.0};
Point(82) = {0.067688, 0.737760, 0, 1.0};
Point(83) = {0.070349, 0.738283, 0, 1.0};
Point(84) = {0.072730, 0.738691, 0, 1.0};
Point(85) = {0.074691, 0.738975, 0, 1.0};
Point(86) = {-0.074557, -0.740458, 0, 1.0};
Point(87) = {-0.072544, -0.740757, 0, 1.0};
Point(88) = {-0.070087, -0.741185, 0, 1.0};
Point(89) = {-0.067333, -0.741697, 0, 1.0};
Point(90) = {-0.064295, -0.742289, 0, 1.0};
Point(91) = {-0.060981, -0.742962, 0, 1.0};
Point(92) = {-0.057408, -0.743710, 0, 1.0};
Point(93) = {-0.053592, -0.744524, 0, 1.0};
Point(94) = {-0.049550, -0.745400, 0, 1.0};
Point(95) = {-0.045299, -0.746335, 0, 1.0};
Point(96) = {-0.040858, -0.747297, 0, 1.0};
Point(97) = {-0.036253, -0.748215, 0, 1.0};
Point(98) = {-0.031513, -0.748985, 0, 1.0};
Point(99) = {-0.026665, -0.749537, 0, 1.0};
Point(100) = {-0.021730, -0.749861, 0, 1.0};
Point(101) = {-0.016725, -0.750000, 0, 1.0};
Point(102) = {-0.011665, -0.749998, 0, 1.0};
Point(103) = {-0.006574, -0.749874, 0, 1.0};
Point(104) = {-0.001471, -0.749635, 0, 1.0};
Point(105) = {0.003621, -0.749285, 0, 1.0};
Point(106) = {0.008682, -0.748828, 0, 1.0};
Point(107) = {0.013692, -0.748273, 0, 1.0};
Point(108) = {0.018626, -0.747620, 0, 1.0};
Point(109) = {0.023465, -0.746873, 0, 1.0};
Point(110) = {0.028187, -0.746032, 0, 1.0};
Point(111) = {0.032772, -0.745098, 0, 1.0};
Point(112) = {0.037202, -0.744071, 0, 1.0};
Point(113) = {0.041457, -0.742957, 0, 1.0};
Point(114) = {0.045516, -0.741764, 0, 1.0};
Point(115) = {0.049365, -0.740501, 0, 1.0};
Point(116) = {0.052988, -0.739183, 0, 1.0};
Point(117) = {0.056371, -0.737828, 0, 1.0};
Point(118) = {0.059500, -0.736453, 0, 1.0};
Point(119) = {0.062361, -0.735078, 0, 1.0};
Point(120) = {0.064946, -0.733713, 0, 1.0};
Point(121) = {0.067243, -0.732371, 0, 1.0};
Point(122) = {0.069240, -0.731061, 0, 1.0};
Point(123) = {0.070933, -0.729802, 0, 1.0};
Point(124) = {0.072315, -0.728629, 0, 1.0};
Point(125) = {0.073385, -0.727591, 0, 1.0};
Point(126) = {0.074142, -0.726722, 0, 1.0};
Point(127) = {0.074582, -0.726020, 0, 1.0};
Point(128) = {0.074697, -0.725436, 0, 1.0};
Point(129) = {0.074482, -0.724910, 0, 1.0};
Point(130) = {0.073933, -0.724408, 0, 1.0};
Point(131) = {0.073056, -0.723946, 0, 1.0};
Point(132) = {0.071857, -0.723556, 0, 1.0};
Point(133) = {0.070343, -0.723255, 0, 1.0};
Point(134) = {0.068516, -0.723030, 0, 1.0};
Point(135) = {0.066385, -0.722862, 0, 1.0};
Point(136) = {0.063956, -0.722735, 0, 1.0};
Point(137) = {0.061240, -0.722650, 0, 1.0};
Point(138) = {0.058251, -0.722607, 0, 1.0};
Point(139) = {0.054998, -0.722607, 0, 1.0};
Point(140) = {0.051497, -0.722652, 0, 1.0};
Point(141) = {0.047763, -0.722743, 0, 1.0};
Point(142) = {0.043812, -0.722880, 0, 1.0};
Point(143) = {0.039662, -0.723068, 0, 1.0};
Point(144) = {0.035329, -0.723302, 0, 1.0};
Point(145) = {0.030832, -0.723582, 0, 1.0};
Point(146) = {0.026191, -0.723904, 0, 1.0};
Point(147) = {0.021425, -0.724258, 0, 1.0};
Point(148) = {0.016553, -0.724648, 0, 1.0};
Point(149) = {0.011599, -0.725068, 0, 1.0};
Point(150) = {0.006579, -0.725518, 0, 1.0};
Point(151) = {0.001520, -0.725994, 0, 1.0};
Point(152) = {-0.003559, -0.726498, 0, 1.0};
Point(153) = {-0.008635, -0.727026, 0, 1.0};
Point(154) = {-0.013687, -0.727581, 0, 1.0};
Point(155) = {-0.018695, -0.728158, 0, 1.0};
Point(156) = {-0.023634, -0.728757, 0, 1.0};
Point(157) = {-0.028484, -0.729381, 0, 1.0};
Point(158) = {-0.033223, -0.730033, 0, 1.0};
Point(159) = {-0.037829, -0.730735, 0, 1.0};
Point(160) = {-0.042281, -0.731516, 0, 1.0};
Point(161) = {-0.046556, -0.732404, 0, 1.0};
Point(162) = {-0.050634, -0.733391, 0, 1.0};
Point(163) = {-0.054504, -0.734424, 0, 1.0};
Point(164) = {-0.058155, -0.735425, 0, 1.0};
Point(165) = {-0.061579, -0.736331, 0, 1.0};
Point(166) = {-0.064762, -0.737112, 0, 1.0};
Point(167) = {-0.067688, -0.737760, 0, 1.0};
Point(168) = {-0.070349, -0.738283, 0, 1.0};
Point(169) = {-0.072730, -0.738691, 0, 1.0};
Point(170) = {-0.074691, -0.738975, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
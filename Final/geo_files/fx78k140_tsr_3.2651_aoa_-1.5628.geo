SetFactory("OpenCASCADE");

Point(1) = {0.074953, 0.735006, 0, 1.0};
Point(2) = {0.073507, 0.735165, 0, 1.0};
Point(3) = {0.071080, 0.735489, 0, 1.0};
Point(4) = {0.068361, 0.735920, 0, 1.0};
Point(5) = {0.065361, 0.736460, 0, 1.0};
Point(6) = {0.062090, 0.737110, 0, 1.0};
Point(7) = {0.058564, 0.737885, 0, 1.0};
Point(8) = {0.054797, 0.738787, 0, 1.0};
Point(9) = {0.050805, 0.739860, 0, 1.0};
Point(10) = {0.046606, 0.741071, 0, 1.0};
Point(11) = {0.042215, 0.742389, 0, 1.0};
Point(12) = {0.037656, 0.743755, 0, 1.0};
Point(13) = {0.032950, 0.745109, 0, 1.0};
Point(14) = {0.028117, 0.746386, 0, 1.0};
Point(15) = {0.023180, 0.747503, 0, 1.0};
Point(16) = {0.018163, 0.748425, 0, 1.0};
Point(17) = {0.013084, 0.749117, 0, 1.0};
Point(18) = {0.007969, 0.749597, 0, 1.0};
Point(19) = {0.002838, 0.749884, 0, 1.0};
Point(20) = {-0.002290, 0.750000, 0, 1.0};
Point(21) = {-0.007390, 0.749947, 0, 1.0};
Point(22) = {-0.012444, 0.749753, 0, 1.0};
Point(23) = {-0.017428, 0.749421, 0, 1.0};
Point(24) = {-0.022321, 0.748963, 0, 1.0};
Point(25) = {-0.027103, 0.748383, 0, 1.0};
Point(26) = {-0.031754, 0.747686, 0, 1.0};
Point(27) = {-0.036254, 0.746884, 0, 1.0};
Point(28) = {-0.040584, 0.745980, 0, 1.0};
Point(29) = {-0.044723, 0.744991, 0, 1.0};
Point(30) = {-0.048657, 0.743928, 0, 1.0};
Point(31) = {-0.052368, 0.742811, 0, 1.0};
Point(32) = {-0.055842, 0.741655, 0, 1.0};
Point(33) = {-0.059063, 0.740466, 0, 1.0};
Point(34) = {-0.062015, 0.739257, 0, 1.0};
Point(35) = {-0.064689, 0.738044, 0, 1.0};
Point(36) = {-0.067074, 0.736836, 0, 1.0};
Point(37) = {-0.069157, 0.735650, 0, 1.0};
Point(38) = {-0.070932, 0.734501, 0, 1.0};
Point(39) = {-0.072390, 0.733408, 0, 1.0};
Point(40) = {-0.073527, 0.732406, 0, 1.0};
Point(41) = {-0.074338, 0.731530, 0, 1.0};
Point(42) = {-0.074821, 0.730818, 0, 1.0};
Point(43) = {-0.074972, 0.730198, 0, 1.0};
Point(44) = {-0.074794, 0.729820, 0, 1.0};
Point(45) = {-0.074279, 0.729367, 0, 1.0};
Point(46) = {-0.073432, 0.728935, 0, 1.0};
Point(47) = {-0.072257, 0.728547, 0, 1.0};
Point(48) = {-0.070761, 0.728204, 0, 1.0};
Point(49) = {-0.068946, 0.727926, 0, 1.0};
Point(50) = {-0.066825, 0.727706, 0, 1.0};
Point(51) = {-0.064402, 0.727531, 0, 1.0};
Point(52) = {-0.061691, 0.727387, 0, 1.0};
Point(53) = {-0.058703, 0.727276, 0, 1.0};
Point(54) = {-0.055448, 0.727200, 0, 1.0};
Point(55) = {-0.051941, 0.727160, 0, 1.0};
Point(56) = {-0.048199, 0.727139, 0, 1.0};
Point(57) = {-0.044236, 0.727144, 0, 1.0};
Point(58) = {-0.040071, 0.727175, 0, 1.0};
Point(59) = {-0.035718, 0.727228, 0, 1.0};
Point(60) = {-0.031198, 0.727302, 0, 1.0};
Point(61) = {-0.026531, 0.727394, 0, 1.0};
Point(62) = {-0.021735, 0.727496, 0, 1.0};
Point(63) = {-0.016833, 0.727611, 0, 1.0};
Point(64) = {-0.011844, 0.727738, 0, 1.0};
Point(65) = {-0.006788, 0.727878, 0, 1.0};
Point(66) = {-0.001690, 0.728029, 0, 1.0};
Point(67) = {0.003429, 0.728202, 0, 1.0};
Point(68) = {0.008548, 0.728388, 0, 1.0};
Point(69) = {0.013644, 0.728595, 0, 1.0};
Point(70) = {0.018698, 0.728817, 0, 1.0};
Point(71) = {0.023683, 0.729069, 0, 1.0};
Point(72) = {0.028582, 0.729344, 0, 1.0};
Point(73) = {0.033371, 0.729649, 0, 1.0};
Point(74) = {0.038032, 0.729976, 0, 1.0};
Point(75) = {0.042545, 0.730325, 0, 1.0};
Point(76) = {0.046889, 0.730690, 0, 1.0};
Point(77) = {0.051045, 0.731066, 0, 1.0};
Point(78) = {0.054998, 0.731453, 0, 1.0};
Point(79) = {0.058729, 0.731826, 0, 1.0};
Point(80) = {0.062225, 0.732184, 0, 1.0};
Point(81) = {0.065469, 0.732516, 0, 1.0};
Point(82) = {0.068445, 0.732824, 0, 1.0};
Point(83) = {0.071145, 0.733103, 0, 1.0};
Point(84) = {0.073556, 0.733352, 0, 1.0};
Point(85) = {0.074994, 0.733503, 0, 1.0};
Point(86) = {-0.074953, -0.735006, 0, 1.0};
Point(87) = {-0.073507, -0.735165, 0, 1.0};
Point(88) = {-0.071080, -0.735489, 0, 1.0};
Point(89) = {-0.068361, -0.735920, 0, 1.0};
Point(90) = {-0.065361, -0.736460, 0, 1.0};
Point(91) = {-0.062090, -0.737110, 0, 1.0};
Point(92) = {-0.058564, -0.737885, 0, 1.0};
Point(93) = {-0.054797, -0.738787, 0, 1.0};
Point(94) = {-0.050805, -0.739860, 0, 1.0};
Point(95) = {-0.046606, -0.741071, 0, 1.0};
Point(96) = {-0.042215, -0.742389, 0, 1.0};
Point(97) = {-0.037656, -0.743755, 0, 1.0};
Point(98) = {-0.032950, -0.745109, 0, 1.0};
Point(99) = {-0.028117, -0.746386, 0, 1.0};
Point(100) = {-0.023180, -0.747503, 0, 1.0};
Point(101) = {-0.018163, -0.748425, 0, 1.0};
Point(102) = {-0.013084, -0.749117, 0, 1.0};
Point(103) = {-0.007969, -0.749597, 0, 1.0};
Point(104) = {-0.002838, -0.749884, 0, 1.0};
Point(105) = {0.002290, -0.750000, 0, 1.0};
Point(106) = {0.007390, -0.749947, 0, 1.0};
Point(107) = {0.012444, -0.749753, 0, 1.0};
Point(108) = {0.017428, -0.749421, 0, 1.0};
Point(109) = {0.022321, -0.748963, 0, 1.0};
Point(110) = {0.027103, -0.748383, 0, 1.0};
Point(111) = {0.031754, -0.747686, 0, 1.0};
Point(112) = {0.036254, -0.746884, 0, 1.0};
Point(113) = {0.040584, -0.745980, 0, 1.0};
Point(114) = {0.044723, -0.744991, 0, 1.0};
Point(115) = {0.048657, -0.743928, 0, 1.0};
Point(116) = {0.052368, -0.742811, 0, 1.0};
Point(117) = {0.055842, -0.741655, 0, 1.0};
Point(118) = {0.059063, -0.740466, 0, 1.0};
Point(119) = {0.062015, -0.739257, 0, 1.0};
Point(120) = {0.064689, -0.738044, 0, 1.0};
Point(121) = {0.067074, -0.736836, 0, 1.0};
Point(122) = {0.069157, -0.735650, 0, 1.0};
Point(123) = {0.070932, -0.734501, 0, 1.0};
Point(124) = {0.072390, -0.733408, 0, 1.0};
Point(125) = {0.073527, -0.732406, 0, 1.0};
Point(126) = {0.074338, -0.731530, 0, 1.0};
Point(127) = {0.074821, -0.730818, 0, 1.0};
Point(128) = {0.074972, -0.730198, 0, 1.0};
Point(129) = {0.074794, -0.729820, 0, 1.0};
Point(130) = {0.074279, -0.729367, 0, 1.0};
Point(131) = {0.073432, -0.728935, 0, 1.0};
Point(132) = {0.072257, -0.728547, 0, 1.0};
Point(133) = {0.070761, -0.728204, 0, 1.0};
Point(134) = {0.068946, -0.727926, 0, 1.0};
Point(135) = {0.066825, -0.727706, 0, 1.0};
Point(136) = {0.064402, -0.727531, 0, 1.0};
Point(137) = {0.061691, -0.727387, 0, 1.0};
Point(138) = {0.058703, -0.727276, 0, 1.0};
Point(139) = {0.055448, -0.727200, 0, 1.0};
Point(140) = {0.051941, -0.727160, 0, 1.0};
Point(141) = {0.048199, -0.727139, 0, 1.0};
Point(142) = {0.044236, -0.727144, 0, 1.0};
Point(143) = {0.040071, -0.727175, 0, 1.0};
Point(144) = {0.035718, -0.727228, 0, 1.0};
Point(145) = {0.031198, -0.727302, 0, 1.0};
Point(146) = {0.026531, -0.727394, 0, 1.0};
Point(147) = {0.021735, -0.727496, 0, 1.0};
Point(148) = {0.016833, -0.727611, 0, 1.0};
Point(149) = {0.011844, -0.727738, 0, 1.0};
Point(150) = {0.006788, -0.727878, 0, 1.0};
Point(151) = {0.001690, -0.728029, 0, 1.0};
Point(152) = {-0.003429, -0.728202, 0, 1.0};
Point(153) = {-0.008548, -0.728388, 0, 1.0};
Point(154) = {-0.013644, -0.728595, 0, 1.0};
Point(155) = {-0.018698, -0.728817, 0, 1.0};
Point(156) = {-0.023683, -0.729069, 0, 1.0};
Point(157) = {-0.028582, -0.729344, 0, 1.0};
Point(158) = {-0.033371, -0.729649, 0, 1.0};
Point(159) = {-0.038032, -0.729976, 0, 1.0};
Point(160) = {-0.042545, -0.730325, 0, 1.0};
Point(161) = {-0.046889, -0.730690, 0, 1.0};
Point(162) = {-0.051045, -0.731066, 0, 1.0};
Point(163) = {-0.054998, -0.731453, 0, 1.0};
Point(164) = {-0.058729, -0.731826, 0, 1.0};
Point(165) = {-0.062225, -0.732184, 0, 1.0};
Point(166) = {-0.065469, -0.732516, 0, 1.0};
Point(167) = {-0.068445, -0.732824, 0, 1.0};
Point(168) = {-0.071145, -0.733103, 0, 1.0};
Point(169) = {-0.073556, -0.733352, 0, 1.0};
Point(170) = {-0.074994, -0.733503, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
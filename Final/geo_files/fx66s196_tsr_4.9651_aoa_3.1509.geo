SetFactory("OpenCASCADE");

Point(1) = {0.074984, 0.725543, 0, 1.0};
Point(2) = {0.073711, 0.725904, 0, 1.0};
Point(3) = {0.068662, 0.727484, 0, 1.0};
Point(4) = {0.062519, 0.729460, 0, 1.0};
Point(5) = {0.059068, 0.730584, 0, 1.0};
Point(6) = {0.055387, 0.731826, 0, 1.0};
Point(7) = {0.051487, 0.733127, 0, 1.0};
Point(8) = {0.047389, 0.734529, 0, 1.0};
Point(9) = {0.043104, 0.735965, 0, 1.0};
Point(10) = {0.038654, 0.737466, 0, 1.0};
Point(11) = {0.034058, 0.738981, 0, 1.0};
Point(12) = {0.029336, 0.740545, 0, 1.0};
Point(13) = {0.024504, 0.742075, 0, 1.0};
Point(14) = {0.019584, 0.743597, 0, 1.0};
Point(15) = {0.014592, 0.745020, 0, 1.0};
Point(16) = {0.009554, 0.746371, 0, 1.0};
Point(17) = {0.004484, 0.747552, 0, 1.0};
Point(18) = {-0.000595, 0.748574, 0, 1.0};
Point(19) = {-0.005668, 0.749301, 0, 1.0};
Point(20) = {-0.010711, 0.749794, 0, 1.0};
Point(21) = {-0.015703, 0.749999, 0, 1.0};
Point(22) = {-0.020619, 0.750000, 0, 1.0};
Point(23) = {-0.025440, 0.749783, 0, 1.0};
Point(24) = {-0.030170, 0.749427, 0, 1.0};
Point(25) = {-0.034700, 0.748889, 0, 1.0};
Point(26) = {-0.039100, 0.748247, 0, 1.0};
Point(27) = {-0.043318, 0.747459, 0, 1.0};
Point(28) = {-0.047338, 0.746587, 0, 1.0};
Point(29) = {-0.051142, 0.745595, 0, 1.0};
Point(30) = {-0.054713, 0.744548, 0, 1.0};
Point(31) = {-0.058035, 0.743407, 0, 1.0};
Point(32) = {-0.061091, 0.742239, 0, 1.0};
Point(33) = {-0.063872, 0.741007, 0, 1.0};
Point(34) = {-0.066363, 0.739781, 0, 1.0};
Point(35) = {-0.068552, 0.738523, 0, 1.0};
Point(36) = {-0.070430, 0.737309, 0, 1.0};
Point(37) = {-0.071986, 0.736102, 0, 1.0};
Point(38) = {-0.073215, 0.734978, 0, 1.0};
Point(39) = {-0.074110, 0.733925, 0, 1.0};
Point(40) = {-0.074664, 0.733021, 0, 1.0};
Point(41) = {-0.074887, 0.732022, 0, 1.0};
Point(42) = {-0.074748, 0.731479, 0, 1.0};
Point(43) = {-0.074285, 0.730748, 0, 1.0};
Point(44) = {-0.073487, 0.730028, 0, 1.0};
Point(45) = {-0.072363, 0.729264, 0, 1.0};
Point(46) = {-0.070914, 0.728510, 0, 1.0};
Point(47) = {-0.069147, 0.727722, 0, 1.0};
Point(48) = {-0.067069, 0.726959, 0, 1.0};
Point(49) = {-0.064689, 0.726177, 0, 1.0};
Point(50) = {-0.062017, 0.725430, 0, 1.0};
Point(51) = {-0.059067, 0.724672, 0, 1.0};
Point(52) = {-0.055846, 0.723958, 0, 1.0};
Point(53) = {-0.052373, 0.723230, 0, 1.0};
Point(54) = {-0.048659, 0.722587, 0, 1.0};
Point(55) = {-0.044723, 0.721940, 0, 1.0};
Point(56) = {-0.040580, 0.721359, 0, 1.0};
Point(57) = {-0.036246, 0.720803, 0, 1.0};
Point(58) = {-0.031772, 0.720326, 0, 1.0};
Point(59) = {-0.027086, 0.719886, 0, 1.0};
Point(60) = {-0.022296, 0.719542, 0, 1.0};
Point(61) = {-0.017395, 0.719261, 0, 1.0};
Point(62) = {-0.012400, 0.719115, 0, 1.0};
Point(63) = {-0.007332, 0.719075, 0, 1.0};
Point(64) = {-0.002217, 0.719101, 0, 1.0};
Point(65) = {0.002943, 0.719564, 0, 1.0};
Point(66) = {0.008105, 0.720050, 0, 1.0};
Point(67) = {0.013247, 0.720585, 0, 1.0};
Point(68) = {0.018350, 0.721164, 0, 1.0};
Point(69) = {0.023382, 0.721697, 0, 1.0};
Point(70) = {0.028327, 0.722218, 0, 1.0};
Point(71) = {0.033161, 0.722685, 0, 1.0};
Point(72) = {0.037865, 0.723119, 0, 1.0};
Point(73) = {0.042416, 0.723464, 0, 1.0};
Point(74) = {0.046797, 0.723775, 0, 1.0};
Point(75) = {0.050984, 0.724002, 0, 1.0};
Point(76) = {0.054966, 0.724192, 0, 1.0};
Point(77) = {0.058722, 0.724304, 0, 1.0};
Point(78) = {0.062240, 0.724386, 0, 1.0};
Point(79) = {0.068490, 0.724367, 0, 1.0};
Point(80) = {0.073616, 0.724177, 0, 1.0};
Point(81) = {0.074903, 0.724082, 0, 1.0};
Point(82) = {-0.074984, -0.725543, 0, 1.0};
Point(83) = {-0.073711, -0.725904, 0, 1.0};
Point(84) = {-0.068662, -0.727484, 0, 1.0};
Point(85) = {-0.062519, -0.729460, 0, 1.0};
Point(86) = {-0.059068, -0.730584, 0, 1.0};
Point(87) = {-0.055387, -0.731826, 0, 1.0};
Point(88) = {-0.051487, -0.733127, 0, 1.0};
Point(89) = {-0.047389, -0.734529, 0, 1.0};
Point(90) = {-0.043104, -0.735965, 0, 1.0};
Point(91) = {-0.038654, -0.737466, 0, 1.0};
Point(92) = {-0.034058, -0.738981, 0, 1.0};
Point(93) = {-0.029336, -0.740545, 0, 1.0};
Point(94) = {-0.024504, -0.742075, 0, 1.0};
Point(95) = {-0.019584, -0.743597, 0, 1.0};
Point(96) = {-0.014592, -0.745020, 0, 1.0};
Point(97) = {-0.009554, -0.746371, 0, 1.0};
Point(98) = {-0.004484, -0.747552, 0, 1.0};
Point(99) = {0.000595, -0.748574, 0, 1.0};
Point(100) = {0.005668, -0.749301, 0, 1.0};
Point(101) = {0.010711, -0.749794, 0, 1.0};
Point(102) = {0.015703, -0.749999, 0, 1.0};
Point(103) = {0.020619, -0.750000, 0, 1.0};
Point(104) = {0.025440, -0.749783, 0, 1.0};
Point(105) = {0.030170, -0.749427, 0, 1.0};
Point(106) = {0.034700, -0.748889, 0, 1.0};
Point(107) = {0.039100, -0.748247, 0, 1.0};
Point(108) = {0.043318, -0.747459, 0, 1.0};
Point(109) = {0.047338, -0.746587, 0, 1.0};
Point(110) = {0.051142, -0.745595, 0, 1.0};
Point(111) = {0.054713, -0.744548, 0, 1.0};
Point(112) = {0.058035, -0.743407, 0, 1.0};
Point(113) = {0.061091, -0.742239, 0, 1.0};
Point(114) = {0.063872, -0.741007, 0, 1.0};
Point(115) = {0.066363, -0.739781, 0, 1.0};
Point(116) = {0.068552, -0.738523, 0, 1.0};
Point(117) = {0.070430, -0.737309, 0, 1.0};
Point(118) = {0.071986, -0.736102, 0, 1.0};
Point(119) = {0.073215, -0.734978, 0, 1.0};
Point(120) = {0.074110, -0.733925, 0, 1.0};
Point(121) = {0.074664, -0.733021, 0, 1.0};
Point(122) = {0.074887, -0.732022, 0, 1.0};
Point(123) = {0.074748, -0.731479, 0, 1.0};
Point(124) = {0.074285, -0.730748, 0, 1.0};
Point(125) = {0.073487, -0.730028, 0, 1.0};
Point(126) = {0.072363, -0.729264, 0, 1.0};
Point(127) = {0.070914, -0.728510, 0, 1.0};
Point(128) = {0.069147, -0.727722, 0, 1.0};
Point(129) = {0.067069, -0.726959, 0, 1.0};
Point(130) = {0.064689, -0.726177, 0, 1.0};
Point(131) = {0.062017, -0.725430, 0, 1.0};
Point(132) = {0.059067, -0.724672, 0, 1.0};
Point(133) = {0.055846, -0.723958, 0, 1.0};
Point(134) = {0.052373, -0.723230, 0, 1.0};
Point(135) = {0.048659, -0.722587, 0, 1.0};
Point(136) = {0.044723, -0.721940, 0, 1.0};
Point(137) = {0.040580, -0.721359, 0, 1.0};
Point(138) = {0.036246, -0.720803, 0, 1.0};
Point(139) = {0.031772, -0.720326, 0, 1.0};
Point(140) = {0.027086, -0.719886, 0, 1.0};
Point(141) = {0.022296, -0.719542, 0, 1.0};
Point(142) = {0.017395, -0.719261, 0, 1.0};
Point(143) = {0.012400, -0.719115, 0, 1.0};
Point(144) = {0.007332, -0.719075, 0, 1.0};
Point(145) = {0.002217, -0.719101, 0, 1.0};
Point(146) = {-0.002943, -0.719564, 0, 1.0};
Point(147) = {-0.008105, -0.720050, 0, 1.0};
Point(148) = {-0.013247, -0.720585, 0, 1.0};
Point(149) = {-0.018350, -0.721164, 0, 1.0};
Point(150) = {-0.023382, -0.721697, 0, 1.0};
Point(151) = {-0.028327, -0.722218, 0, 1.0};
Point(152) = {-0.033161, -0.722685, 0, 1.0};
Point(153) = {-0.037865, -0.723119, 0, 1.0};
Point(154) = {-0.042416, -0.723464, 0, 1.0};
Point(155) = {-0.046797, -0.723775, 0, 1.0};
Point(156) = {-0.050984, -0.724002, 0, 1.0};
Point(157) = {-0.054966, -0.724192, 0, 1.0};
Point(158) = {-0.058722, -0.724304, 0, 1.0};
Point(159) = {-0.062240, -0.724386, 0, 1.0};
Point(160) = {-0.068490, -0.724367, 0, 1.0};
Point(161) = {-0.073616, -0.724177, 0, 1.0};
Point(162) = {-0.074903, -0.724082, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
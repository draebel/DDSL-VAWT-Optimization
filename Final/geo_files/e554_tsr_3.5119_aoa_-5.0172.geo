SetFactory("OpenCASCADE");

Point(1) = {0.074717, 0.741159, 0, 1.0};
Point(2) = {0.074176, 0.741280, 0, 1.0};
Point(3) = {0.072691, 0.741633, 0, 1.0};
Point(4) = {0.070416, 0.742096, 0, 1.0};
Point(5) = {0.067323, 0.742559, 0, 1.0};
Point(6) = {0.063394, 0.743053, 0, 1.0};
Point(7) = {0.058695, 0.743601, 0, 1.0};
Point(8) = {0.053297, 0.744210, 0, 1.0};
Point(9) = {0.047292, 0.744880, 0, 1.0};
Point(10) = {0.040769, 0.745599, 0, 1.0};
Point(11) = {0.033834, 0.746355, 0, 1.0};
Point(12) = {0.026588, 0.747123, 0, 1.0};
Point(13) = {0.019135, 0.747872, 0, 1.0};
Point(14) = {0.011580, 0.748569, 0, 1.0};
Point(15) = {0.004017, 0.749173, 0, 1.0};
Point(16) = {-0.003460, 0.749641, 0, 1.0};
Point(17) = {-0.010767, 0.749932, 0, 1.0};
Point(18) = {-0.017828, 0.750000, 0, 1.0};
Point(19) = {-0.024571, 0.749786, 0, 1.0};
Point(20) = {-0.030986, 0.749223, 0, 1.0};
Point(21) = {-0.037098, 0.748317, 0, 1.0};
Point(22) = {-0.042891, 0.747117, 0, 1.0};
Point(23) = {-0.048331, 0.745667, 0, 1.0};
Point(24) = {-0.053372, 0.744016, 0, 1.0};
Point(25) = {-0.057968, 0.742206, 0, 1.0};
Point(26) = {-0.062074, 0.740275, 0, 1.0};
Point(27) = {-0.065653, 0.738265, 0, 1.0};
Point(28) = {-0.068673, 0.736217, 0, 1.0};
Point(29) = {-0.071106, 0.734180, 0, 1.0};
Point(30) = {-0.072934, 0.732203, 0, 1.0};
Point(31) = {-0.074137, 0.730355, 0, 1.0};
Point(32) = {-0.074614, 0.729108, 0, 1.0};
Point(33) = {-0.074698, 0.728650, 0, 1.0};
Point(34) = {-0.074721, 0.728362, 0, 1.0};
Point(35) = {-0.074713, 0.728091, 0, 1.0};
Point(36) = {-0.074698, 0.727963, 0, 1.0};
Point(37) = {-0.074673, 0.727842, 0, 1.0};
Point(38) = {-0.074637, 0.727728, 0, 1.0};
Point(39) = {-0.074587, 0.727618, 0, 1.0};
Point(40) = {-0.074521, 0.727509, 0, 1.0};
Point(41) = {-0.074445, 0.727398, 0, 1.0};
Point(42) = {-0.074260, 0.727177, 0, 1.0};
Point(43) = {-0.074036, 0.726955, 0, 1.0};
Point(44) = {-0.073637, 0.726623, 0, 1.0};
Point(45) = {-0.073240, 0.726342, 0, 1.0};
Point(46) = {-0.071186, 0.725272, 0, 1.0};
Point(47) = {-0.068393, 0.724283, 0, 1.0};
Point(48) = {-0.064913, 0.723405, 0, 1.0};
Point(49) = {-0.060795, 0.722661, 0, 1.0};
Point(50) = {-0.056095, 0.722065, 0, 1.0};
Point(51) = {-0.050880, 0.721632, 0, 1.0};
Point(52) = {-0.045222, 0.721388, 0, 1.0};
Point(53) = {-0.039200, 0.721360, 0, 1.0};
Point(54) = {-0.032896, 0.721597, 0, 1.0};
Point(55) = {-0.026351, 0.722172, 0, 1.0};
Point(56) = {-0.019559, 0.723138, 0, 1.0};
Point(57) = {-0.012508, 0.724485, 0, 1.0};
Point(58) = {-0.005165, 0.726170, 0, 1.0};
Point(59) = {0.002462, 0.728076, 0, 1.0};
Point(60) = {0.010287, 0.730085, 0, 1.0};
Point(61) = {0.018211, 0.732102, 0, 1.0};
Point(62) = {0.026118, 0.734043, 0, 1.0};
Point(63) = {0.033880, 0.735832, 0, 1.0};
Point(64) = {0.041356, 0.737407, 0, 1.0};
Point(65) = {0.048405, 0.738723, 0, 1.0};
Point(66) = {0.054878, 0.739752, 0, 1.0};
Point(67) = {0.060638, 0.740492, 0, 1.0};
Point(68) = {0.065550, 0.740956, 0, 1.0};
Point(69) = {0.069497, 0.741184, 0, 1.0};
Point(70) = {0.072380, 0.741234, 0, 1.0};
Point(71) = {0.074130, 0.741192, 0, 1.0};
Point(72) = {-0.074717, -0.741159, 0, 1.0};
Point(73) = {-0.074176, -0.741280, 0, 1.0};
Point(74) = {-0.072691, -0.741633, 0, 1.0};
Point(75) = {-0.070416, -0.742096, 0, 1.0};
Point(76) = {-0.067323, -0.742559, 0, 1.0};
Point(77) = {-0.063394, -0.743053, 0, 1.0};
Point(78) = {-0.058695, -0.743601, 0, 1.0};
Point(79) = {-0.053297, -0.744210, 0, 1.0};
Point(80) = {-0.047292, -0.744880, 0, 1.0};
Point(81) = {-0.040769, -0.745599, 0, 1.0};
Point(82) = {-0.033834, -0.746355, 0, 1.0};
Point(83) = {-0.026588, -0.747123, 0, 1.0};
Point(84) = {-0.019135, -0.747872, 0, 1.0};
Point(85) = {-0.011580, -0.748569, 0, 1.0};
Point(86) = {-0.004017, -0.749173, 0, 1.0};
Point(87) = {0.003460, -0.749641, 0, 1.0};
Point(88) = {0.010767, -0.749932, 0, 1.0};
Point(89) = {0.017828, -0.750000, 0, 1.0};
Point(90) = {0.024571, -0.749786, 0, 1.0};
Point(91) = {0.030986, -0.749223, 0, 1.0};
Point(92) = {0.037098, -0.748317, 0, 1.0};
Point(93) = {0.042891, -0.747117, 0, 1.0};
Point(94) = {0.048331, -0.745667, 0, 1.0};
Point(95) = {0.053372, -0.744016, 0, 1.0};
Point(96) = {0.057968, -0.742206, 0, 1.0};
Point(97) = {0.062074, -0.740275, 0, 1.0};
Point(98) = {0.065653, -0.738265, 0, 1.0};
Point(99) = {0.068673, -0.736217, 0, 1.0};
Point(100) = {0.071106, -0.734180, 0, 1.0};
Point(101) = {0.072934, -0.732203, 0, 1.0};
Point(102) = {0.074137, -0.730355, 0, 1.0};
Point(103) = {0.074614, -0.729108, 0, 1.0};
Point(104) = {0.074698, -0.728650, 0, 1.0};
Point(105) = {0.074721, -0.728362, 0, 1.0};
Point(106) = {0.074713, -0.728091, 0, 1.0};
Point(107) = {0.074698, -0.727963, 0, 1.0};
Point(108) = {0.074673, -0.727842, 0, 1.0};
Point(109) = {0.074637, -0.727728, 0, 1.0};
Point(110) = {0.074587, -0.727618, 0, 1.0};
Point(111) = {0.074521, -0.727509, 0, 1.0};
Point(112) = {0.074445, -0.727398, 0, 1.0};
Point(113) = {0.074260, -0.727177, 0, 1.0};
Point(114) = {0.074036, -0.726955, 0, 1.0};
Point(115) = {0.073637, -0.726623, 0, 1.0};
Point(116) = {0.073240, -0.726342, 0, 1.0};
Point(117) = {0.071186, -0.725272, 0, 1.0};
Point(118) = {0.068393, -0.724283, 0, 1.0};
Point(119) = {0.064913, -0.723405, 0, 1.0};
Point(120) = {0.060795, -0.722661, 0, 1.0};
Point(121) = {0.056095, -0.722065, 0, 1.0};
Point(122) = {0.050880, -0.721632, 0, 1.0};
Point(123) = {0.045222, -0.721388, 0, 1.0};
Point(124) = {0.039200, -0.721360, 0, 1.0};
Point(125) = {0.032896, -0.721597, 0, 1.0};
Point(126) = {0.026351, -0.722172, 0, 1.0};
Point(127) = {0.019559, -0.723138, 0, 1.0};
Point(128) = {0.012508, -0.724485, 0, 1.0};
Point(129) = {0.005165, -0.726170, 0, 1.0};
Point(130) = {-0.002462, -0.728076, 0, 1.0};
Point(131) = {-0.010287, -0.730085, 0, 1.0};
Point(132) = {-0.018211, -0.732102, 0, 1.0};
Point(133) = {-0.026118, -0.734043, 0, 1.0};
Point(134) = {-0.033880, -0.735832, 0, 1.0};
Point(135) = {-0.041356, -0.737407, 0, 1.0};
Point(136) = {-0.048405, -0.738723, 0, 1.0};
Point(137) = {-0.054878, -0.739752, 0, 1.0};
Point(138) = {-0.060638, -0.740492, 0, 1.0};
Point(139) = {-0.065550, -0.740956, 0, 1.0};
Point(140) = {-0.069497, -0.741184, 0, 1.0};
Point(141) = {-0.072380, -0.741234, 0, 1.0};
Point(142) = {-0.074130, -0.741192, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:71};
Spline(4) = {71,1};

// Lines: second blade (splines 5-8)
Spline(5) = {72:92};
Spline(6) = {92:125};
Spline(7) = {125:142};
Spline(8) = {142,72};

// Outer domain (points 20001-4 and lines)
Point(143) = {-13.50000000, -15.00000000, 0, 1.0};
Point(144) = {-13.50000000, 15.00000000, 0, 1.0};
Point(145) = {13.50000000, 15.00000000, 0, 1.0};
Point(146) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {143, 144};
Line(12) = {144, 145};
Line(13) = {145, 146};
Line(14) = {143, 146};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
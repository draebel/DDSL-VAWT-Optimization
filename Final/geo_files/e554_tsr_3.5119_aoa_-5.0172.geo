SetFactory("OpenCASCADE");

Point(1) = {0.074538, 0.742156, 0, 1.0};
Point(2) = {0.074061, 0.742206, 0, 1.0};
Point(3) = {0.069946, 0.742723, 0, 1.0};
Point(4) = {0.065024, 0.743298, 0, 1.0};
Point(5) = {0.059370, 0.743935, 0, 1.0};
Point(6) = {0.053080, 0.744637, 0, 1.0};
Point(7) = {0.046248, 0.745390, 0, 1.0};
Point(8) = {0.038983, 0.746182, 0, 1.0};
Point(9) = {0.031394, 0.746987, 0, 1.0};
Point(10) = {0.023587, 0.747771, 0, 1.0};
Point(11) = {0.015673, 0.748501, 0, 1.0};
Point(12) = {0.007752, 0.749133, 0, 1.0};
Point(13) = {-0.000079, 0.749624, 0, 1.0};
Point(14) = {-0.007733, 0.749928, 0, 1.0};
Point(15) = {-0.015129, 0.750000, 0, 1.0};
Point(16) = {-0.022193, 0.749776, 0, 1.0};
Point(17) = {-0.028912, 0.749186, 0, 1.0};
Point(18) = {-0.035314, 0.748237, 0, 1.0};
Point(19) = {-0.041382, 0.746981, 0, 1.0};
Point(20) = {-0.047079, 0.745462, 0, 1.0};
Point(21) = {-0.052359, 0.743732, 0, 1.0};
Point(22) = {-0.057174, 0.741836, 0, 1.0};
Point(23) = {-0.061474, 0.739813, 0, 1.0};
Point(24) = {-0.065223, 0.737708, 0, 1.0};
Point(25) = {-0.068386, 0.735563, 0, 1.0};
Point(26) = {-0.070935, 0.733429, 0, 1.0};
Point(27) = {-0.072850, 0.731359, 0, 1.0};
Point(28) = {-0.074110, 0.729424, 0, 1.0};
Point(29) = {-0.074609, 0.728116, 0, 1.0};
Point(30) = {-0.074698, 0.727637, 0, 1.0};
Point(31) = {-0.074722, 0.727335, 0, 1.0};
Point(32) = {-0.074713, 0.727052, 0, 1.0};
Point(33) = {-0.074698, 0.726918, 0, 1.0};
Point(34) = {-0.074671, 0.726791, 0, 1.0};
Point(35) = {-0.074633, 0.726671, 0, 1.0};
Point(36) = {-0.074581, 0.726556, 0, 1.0};
Point(37) = {-0.074512, 0.726442, 0, 1.0};
Point(38) = {-0.074433, 0.726326, 0, 1.0};
Point(39) = {-0.074239, 0.726094, 0, 1.0};
Point(40) = {-0.074004, 0.725862, 0, 1.0};
Point(41) = {-0.073586, 0.725514, 0, 1.0};
Point(42) = {-0.073170, 0.725219, 0, 1.0};
Point(43) = {-0.071018, 0.724099, 0, 1.0};
Point(44) = {-0.068093, 0.723063, 0, 1.0};
Point(45) = {-0.064448, 0.722143, 0, 1.0};
Point(46) = {-0.060135, 0.721364, 0, 1.0};
Point(47) = {-0.055211, 0.720739, 0, 1.0};
Point(48) = {-0.049749, 0.720287, 0, 1.0};
Point(49) = {-0.043823, 0.720031, 0, 1.0};
Point(50) = {-0.037515, 0.720001, 0, 1.0};
Point(51) = {-0.030912, 0.720250, 0, 1.0};
Point(52) = {-0.024057, 0.720851, 0, 1.0};
Point(53) = {-0.016943, 0.721864, 0, 1.0};
Point(54) = {-0.009557, 0.723274, 0, 1.0};
Point(55) = {-0.001866, 0.725039, 0, 1.0};
Point(56) = {0.006123, 0.727036, 0, 1.0};
Point(57) = {0.014319, 0.729140, 0, 1.0};
Point(58) = {0.022619, 0.731253, 0, 1.0};
Point(59) = {0.030901, 0.733286, 0, 1.0};
Point(60) = {0.039031, 0.735159, 0, 1.0};
Point(61) = {0.046862, 0.736809, 0, 1.0};
Point(62) = {0.054246, 0.738188, 0, 1.0};
Point(63) = {0.061026, 0.739265, 0, 1.0};
Point(64) = {0.067059, 0.740041, 0, 1.0};
Point(65) = {0.072204, 0.740527, 0, 1.0};
Point(66) = {0.074667, 0.740689, 0, 1.0};
Point(67) = {-0.074538, -0.742156, 0, 1.0};
Point(68) = {-0.074061, -0.742206, 0, 1.0};
Point(69) = {-0.069946, -0.742723, 0, 1.0};
Point(70) = {-0.065024, -0.743298, 0, 1.0};
Point(71) = {-0.059370, -0.743935, 0, 1.0};
Point(72) = {-0.053080, -0.744637, 0, 1.0};
Point(73) = {-0.046248, -0.745390, 0, 1.0};
Point(74) = {-0.038983, -0.746182, 0, 1.0};
Point(75) = {-0.031394, -0.746987, 0, 1.0};
Point(76) = {-0.023587, -0.747771, 0, 1.0};
Point(77) = {-0.015673, -0.748501, 0, 1.0};
Point(78) = {-0.007752, -0.749133, 0, 1.0};
Point(79) = {0.000079, -0.749624, 0, 1.0};
Point(80) = {0.007733, -0.749928, 0, 1.0};
Point(81) = {0.015129, -0.750000, 0, 1.0};
Point(82) = {0.022193, -0.749776, 0, 1.0};
Point(83) = {0.028912, -0.749186, 0, 1.0};
Point(84) = {0.035314, -0.748237, 0, 1.0};
Point(85) = {0.041382, -0.746981, 0, 1.0};
Point(86) = {0.047079, -0.745462, 0, 1.0};
Point(87) = {0.052359, -0.743732, 0, 1.0};
Point(88) = {0.057174, -0.741836, 0, 1.0};
Point(89) = {0.061474, -0.739813, 0, 1.0};
Point(90) = {0.065223, -0.737708, 0, 1.0};
Point(91) = {0.068386, -0.735563, 0, 1.0};
Point(92) = {0.070935, -0.733429, 0, 1.0};
Point(93) = {0.072850, -0.731359, 0, 1.0};
Point(94) = {0.074110, -0.729424, 0, 1.0};
Point(95) = {0.074609, -0.728116, 0, 1.0};
Point(96) = {0.074698, -0.727637, 0, 1.0};
Point(97) = {0.074722, -0.727335, 0, 1.0};
Point(98) = {0.074713, -0.727052, 0, 1.0};
Point(99) = {0.074698, -0.726918, 0, 1.0};
Point(100) = {0.074671, -0.726791, 0, 1.0};
Point(101) = {0.074633, -0.726671, 0, 1.0};
Point(102) = {0.074581, -0.726556, 0, 1.0};
Point(103) = {0.074512, -0.726442, 0, 1.0};
Point(104) = {0.074433, -0.726326, 0, 1.0};
Point(105) = {0.074239, -0.726094, 0, 1.0};
Point(106) = {0.074004, -0.725862, 0, 1.0};
Point(107) = {0.073586, -0.725514, 0, 1.0};
Point(108) = {0.073170, -0.725219, 0, 1.0};
Point(109) = {0.071018, -0.724099, 0, 1.0};
Point(110) = {0.068093, -0.723063, 0, 1.0};
Point(111) = {0.064448, -0.722143, 0, 1.0};
Point(112) = {0.060135, -0.721364, 0, 1.0};
Point(113) = {0.055211, -0.720739, 0, 1.0};
Point(114) = {0.049749, -0.720287, 0, 1.0};
Point(115) = {0.043823, -0.720031, 0, 1.0};
Point(116) = {0.037515, -0.720001, 0, 1.0};
Point(117) = {0.030912, -0.720250, 0, 1.0};
Point(118) = {0.024057, -0.720851, 0, 1.0};
Point(119) = {0.016943, -0.721864, 0, 1.0};
Point(120) = {0.009557, -0.723274, 0, 1.0};
Point(121) = {0.001866, -0.725039, 0, 1.0};
Point(122) = {-0.006123, -0.727036, 0, 1.0};
Point(123) = {-0.014319, -0.729140, 0, 1.0};
Point(124) = {-0.022619, -0.731253, 0, 1.0};
Point(125) = {-0.030901, -0.733286, 0, 1.0};
Point(126) = {-0.039031, -0.735159, 0, 1.0};
Point(127) = {-0.046862, -0.736809, 0, 1.0};
Point(128) = {-0.054246, -0.738188, 0, 1.0};
Point(129) = {-0.061026, -0.739265, 0, 1.0};
Point(130) = {-0.067059, -0.740041, 0, 1.0};
Point(131) = {-0.072204, -0.740527, 0, 1.0};
Point(132) = {-0.074667, -0.740689, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
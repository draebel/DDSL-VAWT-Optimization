SetFactory("OpenCASCADE");

Point(1) = {0.074450, 0.747948, 0, 1.0};
Point(2) = {0.072083, 0.747856, 0, 1.0};
Point(3) = {0.069334, 0.747834, 0, 1.0};
Point(4) = {0.066265, 0.747840, 0, 1.0};
Point(5) = {0.062989, 0.747887, 0, 1.0};
Point(6) = {0.059428, 0.747902, 0, 1.0};
Point(7) = {0.055621, 0.747984, 0, 1.0};
Point(8) = {0.051571, 0.748103, 0, 1.0};
Point(9) = {0.047315, 0.748263, 0, 1.0};
Point(10) = {0.042879, 0.748370, 0, 1.0};
Point(11) = {0.038269, 0.748586, 0, 1.0};
Point(12) = {0.033491, 0.748846, 0, 1.0};
Point(13) = {0.028600, 0.749030, 0, 1.0};
Point(14) = {0.023577, 0.749295, 0, 1.0};
Point(15) = {0.018472, 0.749550, 0, 1.0};
Point(16) = {0.013315, 0.749736, 0, 1.0};
Point(17) = {0.008118, 0.749917, 0, 1.0};
Point(18) = {0.002891, 0.750000, 0, 1.0};
Point(19) = {-0.002295, 0.749896, 0, 1.0};
Point(20) = {-0.007473, 0.749729, 0, 1.0};
Point(21) = {-0.012578, 0.749443, 0, 1.0};
Point(22) = {-0.017608, 0.749039, 0, 1.0};
Point(23) = {-0.022519, 0.748488, 0, 1.0};
Point(24) = {-0.027339, 0.747852, 0, 1.0};
Point(25) = {-0.031992, 0.747171, 0, 1.0};
Point(26) = {-0.036517, 0.746440, 0, 1.0};
Point(27) = {-0.040841, 0.745573, 0, 1.0};
Point(28) = {-0.044983, 0.744694, 0, 1.0};
Point(29) = {-0.048887, 0.743715, 0, 1.0};
Point(30) = {-0.052589, 0.742727, 0, 1.0};
Point(31) = {-0.056044, 0.741734, 0, 1.0};
Point(32) = {-0.059230, 0.740708, 0, 1.0};
Point(33) = {-0.062149, 0.739648, 0, 1.0};
Point(34) = {-0.064779, 0.738557, 0, 1.0};
Point(35) = {-0.067106, 0.737500, 0, 1.0};
Point(36) = {-0.069139, 0.736380, 0, 1.0};
Point(37) = {-0.070852, 0.735296, 0, 1.0};
Point(38) = {-0.072146, 0.734228, 0, 1.0};
Point(39) = {-0.073305, 0.733174, 0, 1.0};
Point(40) = {-0.074031, 0.732010, 0, 1.0};
Point(41) = {-0.074450, 0.731199, 0, 1.0};
Point(42) = {-0.074533, 0.730489, 0, 1.0};
Point(43) = {-0.074295, 0.729815, 0, 1.0};
Point(44) = {-0.073707, 0.729116, 0, 1.0};
Point(45) = {-0.072741, 0.728142, 0, 1.0};
Point(46) = {-0.071377, 0.727371, 0, 1.0};
Point(47) = {-0.069879, 0.726616, 0, 1.0};
Point(48) = {-0.067968, 0.725938, 0, 1.0};
Point(49) = {-0.065737, 0.725297, 0, 1.0};
Point(50) = {-0.063234, 0.724781, 0, 1.0};
Point(51) = {-0.060428, 0.724300, 0, 1.0};
Point(52) = {-0.057346, 0.723913, 0, 1.0};
Point(53) = {-0.054012, 0.723618, 0, 1.0};
Point(54) = {-0.050423, 0.723416, 0, 1.0};
Point(55) = {-0.046595, 0.723272, 0, 1.0};
Point(56) = {-0.042570, 0.723182, 0, 1.0};
Point(57) = {-0.038337, 0.723243, 0, 1.0};
Point(58) = {-0.033927, 0.723355, 0, 1.0};
Point(59) = {-0.029353, 0.723645, 0, 1.0};
Point(60) = {-0.024665, 0.724012, 0, 1.0};
Point(61) = {-0.019824, 0.724459, 0, 1.0};
Point(62) = {-0.014913, 0.725010, 0, 1.0};
Point(63) = {-0.009919, 0.725729, 0, 1.0};
Point(64) = {-0.004877, 0.726581, 0, 1.0};
Point(65) = {0.000210, 0.727566, 0, 1.0};
Point(66) = {0.005290, 0.728613, 0, 1.0};
Point(67) = {0.010369, 0.729852, 0, 1.0};
Point(68) = {0.015397, 0.731180, 0, 1.0};
Point(69) = {0.020383, 0.732504, 0, 1.0};
Point(70) = {0.025305, 0.733884, 0, 1.0};
Point(71) = {0.030145, 0.735254, 0, 1.0};
Point(72) = {0.034874, 0.736517, 0, 1.0};
Point(73) = {0.039475, 0.737829, 0, 1.0};
Point(74) = {0.043923, 0.739061, 0, 1.0};
Point(75) = {0.048225, 0.740148, 0, 1.0};
Point(76) = {0.052340, 0.741247, 0, 1.0};
Point(77) = {0.056263, 0.742260, 0, 1.0};
Point(78) = {0.059957, 0.743184, 0, 1.0};
Point(79) = {0.063426, 0.743987, 0, 1.0};
Point(80) = {0.066610, 0.744758, 0, 1.0};
Point(81) = {0.069602, 0.745444, 0, 1.0};
Point(82) = {0.072287, 0.746032, 0, 1.0};
Point(83) = {0.074615, 0.746477, 0, 1.0};
Point(84) = {-0.074450, -0.747948, 0, 1.0};
Point(85) = {-0.072083, -0.747856, 0, 1.0};
Point(86) = {-0.069334, -0.747834, 0, 1.0};
Point(87) = {-0.066265, -0.747840, 0, 1.0};
Point(88) = {-0.062989, -0.747887, 0, 1.0};
Point(89) = {-0.059428, -0.747902, 0, 1.0};
Point(90) = {-0.055621, -0.747984, 0, 1.0};
Point(91) = {-0.051571, -0.748103, 0, 1.0};
Point(92) = {-0.047315, -0.748263, 0, 1.0};
Point(93) = {-0.042879, -0.748370, 0, 1.0};
Point(94) = {-0.038269, -0.748586, 0, 1.0};
Point(95) = {-0.033491, -0.748846, 0, 1.0};
Point(96) = {-0.028600, -0.749030, 0, 1.0};
Point(97) = {-0.023577, -0.749295, 0, 1.0};
Point(98) = {-0.018472, -0.749550, 0, 1.0};
Point(99) = {-0.013315, -0.749736, 0, 1.0};
Point(100) = {-0.008118, -0.749917, 0, 1.0};
Point(101) = {-0.002891, -0.750000, 0, 1.0};
Point(102) = {0.002295, -0.749896, 0, 1.0};
Point(103) = {0.007473, -0.749729, 0, 1.0};
Point(104) = {0.012578, -0.749443, 0, 1.0};
Point(105) = {0.017608, -0.749039, 0, 1.0};
Point(106) = {0.022519, -0.748488, 0, 1.0};
Point(107) = {0.027339, -0.747852, 0, 1.0};
Point(108) = {0.031992, -0.747171, 0, 1.0};
Point(109) = {0.036517, -0.746440, 0, 1.0};
Point(110) = {0.040841, -0.745573, 0, 1.0};
Point(111) = {0.044983, -0.744694, 0, 1.0};
Point(112) = {0.048887, -0.743715, 0, 1.0};
Point(113) = {0.052589, -0.742727, 0, 1.0};
Point(114) = {0.056044, -0.741734, 0, 1.0};
Point(115) = {0.059230, -0.740708, 0, 1.0};
Point(116) = {0.062149, -0.739648, 0, 1.0};
Point(117) = {0.064779, -0.738557, 0, 1.0};
Point(118) = {0.067106, -0.737500, 0, 1.0};
Point(119) = {0.069139, -0.736380, 0, 1.0};
Point(120) = {0.070852, -0.735296, 0, 1.0};
Point(121) = {0.072146, -0.734228, 0, 1.0};
Point(122) = {0.073305, -0.733174, 0, 1.0};
Point(123) = {0.074031, -0.732010, 0, 1.0};
Point(124) = {0.074450, -0.731199, 0, 1.0};
Point(125) = {0.074533, -0.730489, 0, 1.0};
Point(126) = {0.074295, -0.729815, 0, 1.0};
Point(127) = {0.073707, -0.729116, 0, 1.0};
Point(128) = {0.072741, -0.728142, 0, 1.0};
Point(129) = {0.071377, -0.727371, 0, 1.0};
Point(130) = {0.069879, -0.726616, 0, 1.0};
Point(131) = {0.067968, -0.725938, 0, 1.0};
Point(132) = {0.065737, -0.725297, 0, 1.0};
Point(133) = {0.063234, -0.724781, 0, 1.0};
Point(134) = {0.060428, -0.724300, 0, 1.0};
Point(135) = {0.057346, -0.723913, 0, 1.0};
Point(136) = {0.054012, -0.723618, 0, 1.0};
Point(137) = {0.050423, -0.723416, 0, 1.0};
Point(138) = {0.046595, -0.723272, 0, 1.0};
Point(139) = {0.042570, -0.723182, 0, 1.0};
Point(140) = {0.038337, -0.723243, 0, 1.0};
Point(141) = {0.033927, -0.723355, 0, 1.0};
Point(142) = {0.029353, -0.723645, 0, 1.0};
Point(143) = {0.024665, -0.724012, 0, 1.0};
Point(144) = {0.019824, -0.724459, 0, 1.0};
Point(145) = {0.014913, -0.725010, 0, 1.0};
Point(146) = {0.009919, -0.725729, 0, 1.0};
Point(147) = {0.004877, -0.726581, 0, 1.0};
Point(148) = {-0.000210, -0.727566, 0, 1.0};
Point(149) = {-0.005290, -0.728613, 0, 1.0};
Point(150) = {-0.010369, -0.729852, 0, 1.0};
Point(151) = {-0.015397, -0.731180, 0, 1.0};
Point(152) = {-0.020383, -0.732504, 0, 1.0};
Point(153) = {-0.025305, -0.733884, 0, 1.0};
Point(154) = {-0.030145, -0.735254, 0, 1.0};
Point(155) = {-0.034874, -0.736517, 0, 1.0};
Point(156) = {-0.039475, -0.737829, 0, 1.0};
Point(157) = {-0.043923, -0.739061, 0, 1.0};
Point(158) = {-0.048225, -0.740148, 0, 1.0};
Point(159) = {-0.052340, -0.741247, 0, 1.0};
Point(160) = {-0.056263, -0.742260, 0, 1.0};
Point(161) = {-0.059957, -0.743184, 0, 1.0};
Point(162) = {-0.063426, -0.743987, 0, 1.0};
Point(163) = {-0.066610, -0.744758, 0, 1.0};
Point(164) = {-0.069602, -0.745444, 0, 1.0};
Point(165) = {-0.072287, -0.746032, 0, 1.0};
Point(166) = {-0.074615, -0.746477, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
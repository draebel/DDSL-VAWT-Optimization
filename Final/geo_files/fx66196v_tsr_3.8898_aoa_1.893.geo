SetFactory("OpenCASCADE");

Point(1) = {0.075022, 0.727384, 0, 1.0};
Point(2) = {0.074067, 0.727631, 0, 1.0};
Point(3) = {0.068973, 0.729114, 0, 1.0};
Point(4) = {0.062775, 0.730968, 0, 1.0};
Point(5) = {0.059293, 0.732031, 0, 1.0};
Point(6) = {0.055577, 0.733185, 0, 1.0};
Point(7) = {0.051641, 0.734410, 0, 1.0};
Point(8) = {0.047503, 0.735708, 0, 1.0};
Point(9) = {0.043178, 0.737051, 0, 1.0};
Point(10) = {0.038687, 0.738431, 0, 1.0};
Point(11) = {0.034047, 0.739826, 0, 1.0};
Point(12) = {0.029280, 0.741233, 0, 1.0};
Point(13) = {0.024403, 0.742616, 0, 1.0};
Point(14) = {0.019439, 0.743980, 0, 1.0};
Point(15) = {0.014404, 0.745269, 0, 1.0};
Point(16) = {0.009326, 0.746496, 0, 1.0};
Point(17) = {0.004221, 0.747593, 0, 1.0};
Point(18) = {-0.000888, 0.748564, 0, 1.0};
Point(19) = {-0.005983, 0.749317, 0, 1.0};
Point(20) = {-0.011042, 0.749836, 0, 1.0};
Point(21) = {-0.016046, 0.750000, 0, 1.0};
Point(22) = {-0.020971, 0.749922, 0, 1.0};
Point(23) = {-0.025796, 0.749619, 0, 1.0};
Point(24) = {-0.030528, 0.749155, 0, 1.0};
Point(25) = {-0.035055, 0.748518, 0, 1.0};
Point(26) = {-0.039449, 0.747758, 0, 1.0};
Point(27) = {-0.043659, 0.746863, 0, 1.0};
Point(28) = {-0.047668, 0.745869, 0, 1.0};
Point(29) = {-0.051459, 0.744773, 0, 1.0};
Point(30) = {-0.055015, 0.743604, 0, 1.0};
Point(31) = {-0.058320, 0.742366, 0, 1.0};
Point(32) = {-0.061357, 0.741085, 0, 1.0};
Point(33) = {-0.064118, 0.739765, 0, 1.0};
Point(34) = {-0.066588, 0.738437, 0, 1.0};
Point(35) = {-0.068754, 0.737109, 0, 1.0};
Point(36) = {-0.070610, 0.735814, 0, 1.0};
Point(37) = {-0.072146, 0.734563, 0, 1.0};
Point(38) = {-0.073350, 0.733385, 0, 1.0};
Point(39) = {-0.074223, 0.732322, 0, 1.0};
Point(40) = {-0.074759, 0.731393, 0, 1.0};
Point(41) = {-0.074959, 0.730423, 0, 1.0};
Point(42) = {-0.074809, 0.729862, 0, 1.0};
Point(43) = {-0.074328, 0.729170, 0, 1.0};
Point(44) = {-0.073513, 0.728471, 0, 1.0};
Point(45) = {-0.072368, 0.727760, 0, 1.0};
Point(46) = {-0.070900, 0.727042, 0, 1.0};
Point(47) = {-0.069111, 0.726316, 0, 1.0};
Point(48) = {-0.067012, 0.725596, 0, 1.0};
Point(49) = {-0.064610, 0.724882, 0, 1.0};
Point(50) = {-0.061916, 0.724183, 0, 1.0};
Point(51) = {-0.058943, 0.723506, 0, 1.0};
Point(52) = {-0.055701, 0.722853, 0, 1.0};
Point(53) = {-0.052204, 0.722236, 0, 1.0};
Point(54) = {-0.048469, 0.721652, 0, 1.0};
Point(55) = {-0.044510, 0.721117, 0, 1.0};
Point(56) = {-0.040346, 0.720627, 0, 1.0};
Point(57) = {-0.035991, 0.720203, 0, 1.0};
Point(58) = {-0.031497, 0.719836, 0, 1.0};
Point(59) = {-0.026789, 0.719553, 0, 1.0};
Point(60) = {-0.021982, 0.719347, 0, 1.0};
Point(61) = {-0.017062, 0.719265, 0, 1.0};
Point(62) = {-0.012051, 0.719314, 0, 1.0};
Point(63) = {-0.006965, 0.719605, 0, 1.0};
Point(64) = {-0.001832, 0.720025, 0, 1.0};
Point(65) = {0.003327, 0.720559, 0, 1.0};
Point(66) = {0.008487, 0.721123, 0, 1.0};
Point(67) = {0.013626, 0.721730, 0, 1.0};
Point(68) = {0.018723, 0.722318, 0, 1.0};
Point(69) = {0.023751, 0.722905, 0, 1.0};
Point(70) = {0.028692, 0.723450, 0, 1.0};
Point(71) = {0.033523, 0.723965, 0, 1.0};
Point(72) = {0.038224, 0.724426, 0, 1.0};
Point(73) = {0.042775, 0.724834, 0, 1.0};
Point(74) = {0.047156, 0.725186, 0, 1.0};
Point(75) = {0.051346, 0.725480, 0, 1.0};
Point(76) = {0.055330, 0.725708, 0, 1.0};
Point(77) = {0.059090, 0.725886, 0, 1.0};
Point(78) = {0.062611, 0.726002, 0, 1.0};
Point(79) = {0.068872, 0.726069, 0, 1.0};
Point(80) = {0.074011, 0.725952, 0, 1.0};
Point(81) = {0.074973, 0.725899, 0, 1.0};
Point(82) = {-0.075022, -0.727384, 0, 1.0};
Point(83) = {-0.074067, -0.727631, 0, 1.0};
Point(84) = {-0.068973, -0.729114, 0, 1.0};
Point(85) = {-0.062775, -0.730968, 0, 1.0};
Point(86) = {-0.059293, -0.732031, 0, 1.0};
Point(87) = {-0.055577, -0.733185, 0, 1.0};
Point(88) = {-0.051641, -0.734410, 0, 1.0};
Point(89) = {-0.047503, -0.735708, 0, 1.0};
Point(90) = {-0.043178, -0.737051, 0, 1.0};
Point(91) = {-0.038687, -0.738431, 0, 1.0};
Point(92) = {-0.034047, -0.739826, 0, 1.0};
Point(93) = {-0.029280, -0.741233, 0, 1.0};
Point(94) = {-0.024403, -0.742616, 0, 1.0};
Point(95) = {-0.019439, -0.743980, 0, 1.0};
Point(96) = {-0.014404, -0.745269, 0, 1.0};
Point(97) = {-0.009326, -0.746496, 0, 1.0};
Point(98) = {-0.004221, -0.747593, 0, 1.0};
Point(99) = {0.000888, -0.748564, 0, 1.0};
Point(100) = {0.005983, -0.749317, 0, 1.0};
Point(101) = {0.011042, -0.749836, 0, 1.0};
Point(102) = {0.016046, -0.750000, 0, 1.0};
Point(103) = {0.020971, -0.749922, 0, 1.0};
Point(104) = {0.025796, -0.749619, 0, 1.0};
Point(105) = {0.030528, -0.749155, 0, 1.0};
Point(106) = {0.035055, -0.748518, 0, 1.0};
Point(107) = {0.039449, -0.747758, 0, 1.0};
Point(108) = {0.043659, -0.746863, 0, 1.0};
Point(109) = {0.047668, -0.745869, 0, 1.0};
Point(110) = {0.051459, -0.744773, 0, 1.0};
Point(111) = {0.055015, -0.743604, 0, 1.0};
Point(112) = {0.058320, -0.742366, 0, 1.0};
Point(113) = {0.061357, -0.741085, 0, 1.0};
Point(114) = {0.064118, -0.739765, 0, 1.0};
Point(115) = {0.066588, -0.738437, 0, 1.0};
Point(116) = {0.068754, -0.737109, 0, 1.0};
Point(117) = {0.070610, -0.735814, 0, 1.0};
Point(118) = {0.072146, -0.734563, 0, 1.0};
Point(119) = {0.073350, -0.733385, 0, 1.0};
Point(120) = {0.074223, -0.732322, 0, 1.0};
Point(121) = {0.074759, -0.731393, 0, 1.0};
Point(122) = {0.074959, -0.730423, 0, 1.0};
Point(123) = {0.074809, -0.729862, 0, 1.0};
Point(124) = {0.074328, -0.729170, 0, 1.0};
Point(125) = {0.073513, -0.728471, 0, 1.0};
Point(126) = {0.072368, -0.727760, 0, 1.0};
Point(127) = {0.070900, -0.727042, 0, 1.0};
Point(128) = {0.069111, -0.726316, 0, 1.0};
Point(129) = {0.067012, -0.725596, 0, 1.0};
Point(130) = {0.064610, -0.724882, 0, 1.0};
Point(131) = {0.061916, -0.724183, 0, 1.0};
Point(132) = {0.058943, -0.723506, 0, 1.0};
Point(133) = {0.055701, -0.722853, 0, 1.0};
Point(134) = {0.052204, -0.722236, 0, 1.0};
Point(135) = {0.048469, -0.721652, 0, 1.0};
Point(136) = {0.044510, -0.721117, 0, 1.0};
Point(137) = {0.040346, -0.720627, 0, 1.0};
Point(138) = {0.035991, -0.720203, 0, 1.0};
Point(139) = {0.031497, -0.719836, 0, 1.0};
Point(140) = {0.026789, -0.719553, 0, 1.0};
Point(141) = {0.021982, -0.719347, 0, 1.0};
Point(142) = {0.017062, -0.719265, 0, 1.0};
Point(143) = {0.012051, -0.719314, 0, 1.0};
Point(144) = {0.006965, -0.719605, 0, 1.0};
Point(145) = {0.001832, -0.720025, 0, 1.0};
Point(146) = {-0.003327, -0.720559, 0, 1.0};
Point(147) = {-0.008487, -0.721123, 0, 1.0};
Point(148) = {-0.013626, -0.721730, 0, 1.0};
Point(149) = {-0.018723, -0.722318, 0, 1.0};
Point(150) = {-0.023751, -0.722905, 0, 1.0};
Point(151) = {-0.028692, -0.723450, 0, 1.0};
Point(152) = {-0.033523, -0.723965, 0, 1.0};
Point(153) = {-0.038224, -0.724426, 0, 1.0};
Point(154) = {-0.042775, -0.724834, 0, 1.0};
Point(155) = {-0.047156, -0.725186, 0, 1.0};
Point(156) = {-0.051346, -0.725480, 0, 1.0};
Point(157) = {-0.055330, -0.725708, 0, 1.0};
Point(158) = {-0.059090, -0.725886, 0, 1.0};
Point(159) = {-0.062611, -0.726002, 0, 1.0};
Point(160) = {-0.068872, -0.726069, 0, 1.0};
Point(161) = {-0.074011, -0.725952, 0, 1.0};
Point(162) = {-0.074973, -0.725899, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {36.00000000, 15.00000000, 0, 1.0};
Point(166) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
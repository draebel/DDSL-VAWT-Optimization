SetFactory("OpenCASCADE");

Point(1) = {0.112278, 0.741724, 0, 1.0};
Point(2) = {0.111851, 0.741893, 0, 1.0};
Point(3) = {0.110665, 0.742385, 0, 1.0};
Point(4) = {0.108863, 0.743100, 0, 1.0};
Point(5) = {0.106473, 0.743878, 0, 1.0};
Point(6) = {0.103436, 0.744646, 0, 1.0};
Point(7) = {0.099743, 0.745409, 0, 1.0};
Point(8) = {0.095437, 0.746167, 0, 1.0};
Point(9) = {0.090560, 0.746896, 0, 1.0};
Point(10) = {0.085162, 0.747582, 0, 1.0};
Point(11) = {0.079297, 0.748206, 0, 1.0};
Point(12) = {0.073021, 0.748759, 0, 1.0};
Point(13) = {0.066399, 0.749221, 0, 1.0};
Point(14) = {0.059496, 0.749587, 0, 1.0};
Point(15) = {0.052382, 0.749842, 0, 1.0};
Point(16) = {0.045126, 0.749983, 0, 1.0};
Point(17) = {0.037798, 0.750000, 0, 1.0};
Point(18) = {0.030475, 0.749896, 0, 1.0};
Point(19) = {0.023225, 0.749662, 0, 1.0};
Point(20) = {0.016122, 0.749307, 0, 1.0};
Point(21) = {0.009235, 0.748828, 0, 1.0};
Point(22) = {0.002631, 0.748232, 0, 1.0};
Point(23) = {-0.003626, 0.747523, 0, 1.0};
Point(24) = {-0.009481, 0.746712, 0, 1.0};
Point(25) = {-0.014878, 0.745807, 0, 1.0};
Point(26) = {-0.019769, 0.744824, 0, 1.0};
Point(27) = {-0.024117, 0.743775, 0, 1.0};
Point(28) = {-0.027886, 0.742680, 0, 1.0};
Point(29) = {-0.031051, 0.741562, 0, 1.0};
Point(30) = {-0.033599, 0.740447, 0, 1.0};
Point(31) = {-0.035513, 0.739371, 0, 1.0};
Point(32) = {-0.036803, 0.738375, 0, 1.0};
Point(33) = {-0.037468, 0.737533, 0, 1.0};
Point(34) = {-0.037483, 0.736994, 0, 1.0};
Point(35) = {-0.036723, 0.736769, 0, 1.0};
Point(36) = {-0.035083, 0.736783, 0, 1.0};
Point(37) = {-0.032592, 0.737013, 0, 1.0};
Point(38) = {-0.029255, 0.737448, 0, 1.0};
Point(39) = {-0.025086, 0.738052, 0, 1.0};
Point(40) = {-0.020115, 0.738791, 0, 1.0};
Point(41) = {-0.014391, 0.739629, 0, 1.0};
Point(42) = {-0.007975, 0.740526, 0, 1.0};
Point(43) = {-0.000940, 0.741447, 0, 1.0};
Point(44) = {0.006630, 0.742355, 0, 1.0};
Point(45) = {0.014638, 0.743221, 0, 1.0};
Point(46) = {0.022987, 0.744008, 0, 1.0};
Point(47) = {0.031566, 0.744696, 0, 1.0};
Point(48) = {0.040262, 0.745255, 0, 1.0};
Point(49) = {0.048953, 0.745674, 0, 1.0};
Point(50) = {0.057520, 0.745932, 0, 1.0};
Point(51) = {0.065840, 0.746032, 0, 1.0};
Point(52) = {0.073798, 0.745969, 0, 1.0};
Point(53) = {0.081280, 0.745754, 0, 1.0};
Point(54) = {0.088175, 0.745392, 0, 1.0};
Point(55) = {0.094381, 0.744907, 0, 1.0};
Point(56) = {0.099803, 0.744316, 0, 1.0};
Point(57) = {0.104354, 0.743644, 0, 1.0};
Point(58) = {0.107914, 0.742923, 0, 1.0};
Point(59) = {0.110392, 0.742282, 0, 1.0};
Point(60) = {0.111816, 0.741863, 0, 1.0};
Point(61) = {-0.112278, -0.741724, 0, 1.0};
Point(62) = {-0.111851, -0.741893, 0, 1.0};
Point(63) = {-0.110665, -0.742385, 0, 1.0};
Point(64) = {-0.108863, -0.743100, 0, 1.0};
Point(65) = {-0.106473, -0.743878, 0, 1.0};
Point(66) = {-0.103436, -0.744646, 0, 1.0};
Point(67) = {-0.099743, -0.745409, 0, 1.0};
Point(68) = {-0.095437, -0.746167, 0, 1.0};
Point(69) = {-0.090560, -0.746896, 0, 1.0};
Point(70) = {-0.085162, -0.747582, 0, 1.0};
Point(71) = {-0.079297, -0.748206, 0, 1.0};
Point(72) = {-0.073021, -0.748759, 0, 1.0};
Point(73) = {-0.066399, -0.749221, 0, 1.0};
Point(74) = {-0.059496, -0.749587, 0, 1.0};
Point(75) = {-0.052382, -0.749842, 0, 1.0};
Point(76) = {-0.045126, -0.749983, 0, 1.0};
Point(77) = {-0.037798, -0.750000, 0, 1.0};
Point(78) = {-0.030475, -0.749896, 0, 1.0};
Point(79) = {-0.023225, -0.749662, 0, 1.0};
Point(80) = {-0.016122, -0.749307, 0, 1.0};
Point(81) = {-0.009235, -0.748828, 0, 1.0};
Point(82) = {-0.002631, -0.748232, 0, 1.0};
Point(83) = {0.003626, -0.747523, 0, 1.0};
Point(84) = {0.009481, -0.746712, 0, 1.0};
Point(85) = {0.014878, -0.745807, 0, 1.0};
Point(86) = {0.019769, -0.744824, 0, 1.0};
Point(87) = {0.024117, -0.743775, 0, 1.0};
Point(88) = {0.027886, -0.742680, 0, 1.0};
Point(89) = {0.031051, -0.741562, 0, 1.0};
Point(90) = {0.033599, -0.740447, 0, 1.0};
Point(91) = {0.035513, -0.739371, 0, 1.0};
Point(92) = {0.036803, -0.738375, 0, 1.0};
Point(93) = {0.037468, -0.737533, 0, 1.0};
Point(94) = {0.037483, -0.736994, 0, 1.0};
Point(95) = {0.036723, -0.736769, 0, 1.0};
Point(96) = {0.035083, -0.736783, 0, 1.0};
Point(97) = {0.032592, -0.737013, 0, 1.0};
Point(98) = {0.029255, -0.737448, 0, 1.0};
Point(99) = {0.025086, -0.738052, 0, 1.0};
Point(100) = {0.020115, -0.738791, 0, 1.0};
Point(101) = {0.014391, -0.739629, 0, 1.0};
Point(102) = {0.007975, -0.740526, 0, 1.0};
Point(103) = {0.000940, -0.741447, 0, 1.0};
Point(104) = {-0.006630, -0.742355, 0, 1.0};
Point(105) = {-0.014638, -0.743221, 0, 1.0};
Point(106) = {-0.022987, -0.744008, 0, 1.0};
Point(107) = {-0.031566, -0.744696, 0, 1.0};
Point(108) = {-0.040262, -0.745255, 0, 1.0};
Point(109) = {-0.048953, -0.745674, 0, 1.0};
Point(110) = {-0.057520, -0.745932, 0, 1.0};
Point(111) = {-0.065840, -0.746032, 0, 1.0};
Point(112) = {-0.073798, -0.745969, 0, 1.0};
Point(113) = {-0.081280, -0.745754, 0, 1.0};
Point(114) = {-0.088175, -0.745392, 0, 1.0};
Point(115) = {-0.094381, -0.744907, 0, 1.0};
Point(116) = {-0.099803, -0.744316, 0, 1.0};
Point(117) = {-0.104354, -0.743644, 0, 1.0};
Point(118) = {-0.107914, -0.742923, 0, 1.0};
Point(119) = {-0.110392, -0.742282, 0, 1.0};
Point(120) = {-0.111816, -0.741863, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:82};
Spline(6) = {82:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074546, 0.728255, 0, 1.0};
Point(2) = {0.072319, 0.728900, 0, 1.0};
Point(3) = {0.069300, 0.729767, 0, 1.0};
Point(4) = {0.066187, 0.730648, 0, 1.0};
Point(5) = {0.063042, 0.731522, 0, 1.0};
Point(6) = {0.059882, 0.732384, 0, 1.0};
Point(7) = {0.056711, 0.733235, 0, 1.0};
Point(8) = {0.053531, 0.734073, 0, 1.0};
Point(9) = {0.050343, 0.734898, 0, 1.0};
Point(10) = {0.047152, 0.735710, 0, 1.0};
Point(11) = {0.043959, 0.736507, 0, 1.0};
Point(12) = {0.040766, 0.737290, 0, 1.0};
Point(13) = {0.037573, 0.738056, 0, 1.0};
Point(14) = {0.034381, 0.738805, 0, 1.0};
Point(15) = {0.031188, 0.739534, 0, 1.0};
Point(16) = {0.027991, 0.740245, 0, 1.0};
Point(17) = {0.024789, 0.740936, 0, 1.0};
Point(18) = {0.021582, 0.741608, 0, 1.0};
Point(19) = {0.018368, 0.742262, 0, 1.0};
Point(20) = {0.015148, 0.742897, 0, 1.0};
Point(21) = {0.011925, 0.743514, 0, 1.0};
Point(22) = {0.008701, 0.744110, 0, 1.0};
Point(23) = {0.005481, 0.744686, 0, 1.0};
Point(24) = {0.002266, 0.745238, 0, 1.0};
Point(25) = {-0.000942, 0.745765, 0, 1.0};
Point(26) = {-0.004143, 0.746264, 0, 1.0};
Point(27) = {-0.007339, 0.746735, 0, 1.0};
Point(28) = {-0.010534, 0.747174, 0, 1.0};
Point(29) = {-0.013735, 0.747584, 0, 1.0};
Point(30) = {-0.016939, 0.747965, 0, 1.0};
Point(31) = {-0.020145, 0.748317, 0, 1.0};
Point(32) = {-0.023352, 0.748639, 0, 1.0};
Point(33) = {-0.026557, 0.748931, 0, 1.0};
Point(34) = {-0.029759, 0.749192, 0, 1.0};
Point(35) = {-0.032954, 0.749420, 0, 1.0};
Point(36) = {-0.036139, 0.749615, 0, 1.0};
Point(37) = {-0.039308, 0.749774, 0, 1.0};
Point(38) = {-0.042452, 0.749894, 0, 1.0};
Point(39) = {-0.045566, 0.749971, 0, 1.0};
Point(40) = {-0.048647, 0.750000, 0, 1.0};
Point(41) = {-0.051694, 0.749978, 0, 1.0};
Point(42) = {-0.054690, 0.749904, 0, 1.0};
Point(43) = {-0.057606, 0.749774, 0, 1.0};
Point(44) = {-0.060396, 0.749585, 0, 1.0};
Point(45) = {-0.063002, 0.749336, 0, 1.0};
Point(46) = {-0.065355, 0.749032, 0, 1.0};
Point(47) = {-0.067382, 0.748693, 0, 1.0};
Point(48) = {-0.069042, 0.748343, 0, 1.0};
Point(49) = {-0.070353, 0.748006, 0, 1.0};
Point(50) = {-0.071374, 0.747692, 0, 1.0};
Point(51) = {-0.072173, 0.747400, 0, 1.0};
Point(52) = {-0.072805, 0.747126, 0, 1.0};
Point(53) = {-0.073309, 0.746865, 0, 1.0};
Point(54) = {-0.073709, 0.746612, 0, 1.0};
Point(55) = {-0.074019, 0.746361, 0, 1.0};
Point(56) = {-0.074244, 0.746111, 0, 1.0};
Point(57) = {-0.074388, 0.745860, 0, 1.0};
Point(58) = {-0.074449, 0.745612, 0, 1.0};
Point(59) = {-0.074431, 0.745357, 0, 1.0};
Point(60) = {-0.074330, 0.745082, 0, 1.0};
Point(61) = {-0.074140, 0.744798, 0, 1.0};
Point(62) = {-0.073859, 0.744504, 0, 1.0};
Point(63) = {-0.073486, 0.744195, 0, 1.0};
Point(64) = {-0.073009, 0.743863, 0, 1.0};
Point(65) = {-0.072404, 0.743498, 0, 1.0};
Point(66) = {-0.071633, 0.743087, 0, 1.0};
Point(67) = {-0.070641, 0.742618, 0, 1.0};
Point(68) = {-0.069362, 0.742081, 0, 1.0};
Point(69) = {-0.067738, 0.741480, 0, 1.0};
Point(70) = {-0.065747, 0.740834, 0, 1.0};
Point(71) = {-0.063416, 0.740171, 0, 1.0};
Point(72) = {-0.060810, 0.739514, 0, 1.0};
Point(73) = {-0.057994, 0.738871, 0, 1.0};
Point(74) = {-0.055034, 0.738246, 0, 1.0};
Point(75) = {-0.051985, 0.737642, 0, 1.0};
Point(76) = {-0.048878, 0.737059, 0, 1.0};
Point(77) = {-0.045737, 0.736498, 0, 1.0};
Point(78) = {-0.042569, 0.735959, 0, 1.0};
Point(79) = {-0.039378, 0.735440, 0, 1.0};
Point(80) = {-0.036167, 0.734941, 0, 1.0};
Point(81) = {-0.032941, 0.734459, 0, 1.0};
Point(82) = {-0.029702, 0.733995, 0, 1.0};
Point(83) = {-0.026457, 0.733546, 0, 1.0};
Point(84) = {-0.023206, 0.733115, 0, 1.0};
Point(85) = {-0.019952, 0.732701, 0, 1.0};
Point(86) = {-0.016693, 0.732303, 0, 1.0};
Point(87) = {-0.013433, 0.731922, 0, 1.0};
Point(88) = {-0.010169, 0.731557, 0, 1.0};
Point(89) = {-0.006902, 0.731208, 0, 1.0};
Point(90) = {-0.003630, 0.730876, 0, 1.0};
Point(91) = {-0.000351, 0.730558, 0, 1.0};
Point(92) = {0.002934, 0.730256, 0, 1.0};
Point(93) = {0.006227, 0.729966, 0, 1.0};
Point(94) = {0.009526, 0.729690, 0, 1.0};
Point(95) = {0.012832, 0.729425, 0, 1.0};
Point(96) = {0.016141, 0.729171, 0, 1.0};
Point(97) = {0.019451, 0.728928, 0, 1.0};
Point(98) = {0.022760, 0.728697, 0, 1.0};
Point(99) = {0.026066, 0.728476, 0, 1.0};
Point(100) = {0.029368, 0.728268, 0, 1.0};
Point(101) = {0.032666, 0.728074, 0, 1.0};
Point(102) = {0.035962, 0.727893, 0, 1.0};
Point(103) = {0.039257, 0.727727, 0, 1.0};
Point(104) = {0.042554, 0.727574, 0, 1.0};
Point(105) = {0.045853, 0.727435, 0, 1.0};
Point(106) = {0.049154, 0.727309, 0, 1.0};
Point(107) = {0.052455, 0.727196, 0, 1.0};
Point(108) = {0.055755, 0.727096, 0, 1.0};
Point(109) = {0.059049, 0.727009, 0, 1.0};
Point(110) = {0.062335, 0.726935, 0, 1.0};
Point(111) = {0.065607, 0.726877, 0, 1.0};
Point(112) = {0.068848, 0.726833, 0, 1.0};
Point(113) = {0.071994, 0.726804, 0, 1.0};
Point(114) = {0.074366, 0.726784, 0, 1.0};
Point(115) = {-0.074546, -0.728255, 0, 1.0};
Point(116) = {-0.072319, -0.728900, 0, 1.0};
Point(117) = {-0.069300, -0.729767, 0, 1.0};
Point(118) = {-0.066187, -0.730648, 0, 1.0};
Point(119) = {-0.063042, -0.731522, 0, 1.0};
Point(120) = {-0.059882, -0.732384, 0, 1.0};
Point(121) = {-0.056711, -0.733235, 0, 1.0};
Point(122) = {-0.053531, -0.734073, 0, 1.0};
Point(123) = {-0.050343, -0.734898, 0, 1.0};
Point(124) = {-0.047152, -0.735710, 0, 1.0};
Point(125) = {-0.043959, -0.736507, 0, 1.0};
Point(126) = {-0.040766, -0.737290, 0, 1.0};
Point(127) = {-0.037573, -0.738056, 0, 1.0};
Point(128) = {-0.034381, -0.738805, 0, 1.0};
Point(129) = {-0.031188, -0.739534, 0, 1.0};
Point(130) = {-0.027991, -0.740245, 0, 1.0};
Point(131) = {-0.024789, -0.740936, 0, 1.0};
Point(132) = {-0.021582, -0.741608, 0, 1.0};
Point(133) = {-0.018368, -0.742262, 0, 1.0};
Point(134) = {-0.015148, -0.742897, 0, 1.0};
Point(135) = {-0.011925, -0.743514, 0, 1.0};
Point(136) = {-0.008701, -0.744110, 0, 1.0};
Point(137) = {-0.005481, -0.744686, 0, 1.0};
Point(138) = {-0.002266, -0.745238, 0, 1.0};
Point(139) = {0.000942, -0.745765, 0, 1.0};
Point(140) = {0.004143, -0.746264, 0, 1.0};
Point(141) = {0.007339, -0.746735, 0, 1.0};
Point(142) = {0.010534, -0.747174, 0, 1.0};
Point(143) = {0.013735, -0.747584, 0, 1.0};
Point(144) = {0.016939, -0.747965, 0, 1.0};
Point(145) = {0.020145, -0.748317, 0, 1.0};
Point(146) = {0.023352, -0.748639, 0, 1.0};
Point(147) = {0.026557, -0.748931, 0, 1.0};
Point(148) = {0.029759, -0.749192, 0, 1.0};
Point(149) = {0.032954, -0.749420, 0, 1.0};
Point(150) = {0.036139, -0.749615, 0, 1.0};
Point(151) = {0.039308, -0.749774, 0, 1.0};
Point(152) = {0.042452, -0.749894, 0, 1.0};
Point(153) = {0.045566, -0.749971, 0, 1.0};
Point(154) = {0.048647, -0.750000, 0, 1.0};
Point(155) = {0.051694, -0.749978, 0, 1.0};
Point(156) = {0.054690, -0.749904, 0, 1.0};
Point(157) = {0.057606, -0.749774, 0, 1.0};
Point(158) = {0.060396, -0.749585, 0, 1.0};
Point(159) = {0.063002, -0.749336, 0, 1.0};
Point(160) = {0.065355, -0.749032, 0, 1.0};
Point(161) = {0.067382, -0.748693, 0, 1.0};
Point(162) = {0.069042, -0.748343, 0, 1.0};
Point(163) = {0.070353, -0.748006, 0, 1.0};
Point(164) = {0.071374, -0.747692, 0, 1.0};
Point(165) = {0.072173, -0.747400, 0, 1.0};
Point(166) = {0.072805, -0.747126, 0, 1.0};
Point(167) = {0.073309, -0.746865, 0, 1.0};
Point(168) = {0.073709, -0.746612, 0, 1.0};
Point(169) = {0.074019, -0.746361, 0, 1.0};
Point(170) = {0.074244, -0.746111, 0, 1.0};
Point(171) = {0.074388, -0.745860, 0, 1.0};
Point(172) = {0.074449, -0.745612, 0, 1.0};
Point(173) = {0.074431, -0.745357, 0, 1.0};
Point(174) = {0.074330, -0.745082, 0, 1.0};
Point(175) = {0.074140, -0.744798, 0, 1.0};
Point(176) = {0.073859, -0.744504, 0, 1.0};
Point(177) = {0.073486, -0.744195, 0, 1.0};
Point(178) = {0.073009, -0.743863, 0, 1.0};
Point(179) = {0.072404, -0.743498, 0, 1.0};
Point(180) = {0.071633, -0.743087, 0, 1.0};
Point(181) = {0.070641, -0.742618, 0, 1.0};
Point(182) = {0.069362, -0.742081, 0, 1.0};
Point(183) = {0.067738, -0.741480, 0, 1.0};
Point(184) = {0.065747, -0.740834, 0, 1.0};
Point(185) = {0.063416, -0.740171, 0, 1.0};
Point(186) = {0.060810, -0.739514, 0, 1.0};
Point(187) = {0.057994, -0.738871, 0, 1.0};
Point(188) = {0.055034, -0.738246, 0, 1.0};
Point(189) = {0.051985, -0.737642, 0, 1.0};
Point(190) = {0.048878, -0.737059, 0, 1.0};
Point(191) = {0.045737, -0.736498, 0, 1.0};
Point(192) = {0.042569, -0.735959, 0, 1.0};
Point(193) = {0.039378, -0.735440, 0, 1.0};
Point(194) = {0.036167, -0.734941, 0, 1.0};
Point(195) = {0.032941, -0.734459, 0, 1.0};
Point(196) = {0.029702, -0.733995, 0, 1.0};
Point(197) = {0.026457, -0.733546, 0, 1.0};
Point(198) = {0.023206, -0.733115, 0, 1.0};
Point(199) = {0.019952, -0.732701, 0, 1.0};
Point(200) = {0.016693, -0.732303, 0, 1.0};
Point(201) = {0.013433, -0.731922, 0, 1.0};
Point(202) = {0.010169, -0.731557, 0, 1.0};
Point(203) = {0.006902, -0.731208, 0, 1.0};
Point(204) = {0.003630, -0.730876, 0, 1.0};
Point(205) = {0.000351, -0.730558, 0, 1.0};
Point(206) = {-0.002934, -0.730256, 0, 1.0};
Point(207) = {-0.006227, -0.729966, 0, 1.0};
Point(208) = {-0.009526, -0.729690, 0, 1.0};
Point(209) = {-0.012832, -0.729425, 0, 1.0};
Point(210) = {-0.016141, -0.729171, 0, 1.0};
Point(211) = {-0.019451, -0.728928, 0, 1.0};
Point(212) = {-0.022760, -0.728697, 0, 1.0};
Point(213) = {-0.026066, -0.728476, 0, 1.0};
Point(214) = {-0.029368, -0.728268, 0, 1.0};
Point(215) = {-0.032666, -0.728074, 0, 1.0};
Point(216) = {-0.035962, -0.727893, 0, 1.0};
Point(217) = {-0.039257, -0.727727, 0, 1.0};
Point(218) = {-0.042554, -0.727574, 0, 1.0};
Point(219) = {-0.045853, -0.727435, 0, 1.0};
Point(220) = {-0.049154, -0.727309, 0, 1.0};
Point(221) = {-0.052455, -0.727196, 0, 1.0};
Point(222) = {-0.055755, -0.727096, 0, 1.0};
Point(223) = {-0.059049, -0.727009, 0, 1.0};
Point(224) = {-0.062335, -0.726935, 0, 1.0};
Point(225) = {-0.065607, -0.726877, 0, 1.0};
Point(226) = {-0.068848, -0.726833, 0, 1.0};
Point(227) = {-0.071994, -0.726804, 0, 1.0};
Point(228) = {-0.074366, -0.726784, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:35};
Spline(2) = {35:81};
Spline(3) = {81:114};
Spline(4) = {114,1};

// Lines: second blade (splines 5-8)
Spline(5) = {115:149};
Spline(6) = {149:195};
Spline(7) = {195:228};
Spline(8) = {228,115};

// Outer domain (points 20001-4 and lines)
Point(229) = {-13.50000000, -15.00000000, 0, 1.0};
Point(230) = {-13.50000000, 15.00000000, 0, 1.0};
Point(231) = {13.50000000, 15.00000000, 0, 1.0};
Point(232) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {229, 230};
Line(12) = {230, 231};
Line(13) = {231, 232};
Line(14) = {229, 232};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
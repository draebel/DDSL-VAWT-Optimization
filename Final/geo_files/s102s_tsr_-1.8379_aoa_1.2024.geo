SetFactory("OpenCASCADE");

Point(1) = {0.075021, 0.735489, 0, 1.0};
Point(2) = {0.074593, 0.735578, 0, 1.0};
Point(3) = {0.070518, 0.736681, 0, 1.0};
Point(4) = {0.065763, 0.737866, 0, 1.0};
Point(5) = {0.060331, 0.739115, 0, 1.0};
Point(6) = {0.054289, 0.740447, 0, 1.0};
Point(7) = {0.047739, 0.741856, 0, 1.0};
Point(8) = {0.040788, 0.743312, 0, 1.0};
Point(9) = {0.033542, 0.744773, 0, 1.0};
Point(10) = {0.026105, 0.746187, 0, 1.0};
Point(11) = {0.018580, 0.747490, 0, 1.0};
Point(12) = {0.011061, 0.748587, 0, 1.0};
Point(13) = {0.003559, 0.749364, 0, 1.0};
Point(14) = {-0.003983, 0.749808, 0, 1.0};
Point(15) = {-0.011538, 0.750000, 0, 1.0};
Point(16) = {-0.019019, 0.749990, 0, 1.0};
Point(17) = {-0.026335, 0.749801, 0, 1.0};
Point(18) = {-0.033396, 0.749454, 0, 1.0};
Point(19) = {-0.040118, 0.748964, 0, 1.0};
Point(20) = {-0.046416, 0.748348, 0, 1.0};
Point(21) = {-0.052201, 0.747616, 0, 1.0};
Point(22) = {-0.057391, 0.746776, 0, 1.0};
Point(23) = {-0.061889, 0.745806, 0, 1.0};
Point(24) = {-0.065666, 0.744629, 0, 1.0};
Point(25) = {-0.068784, 0.743235, 0, 1.0};
Point(26) = {-0.071284, 0.741700, 0, 1.0};
Point(27) = {-0.073154, 0.740111, 0, 1.0};
Point(28) = {-0.074386, 0.738550, 0, 1.0};
Point(29) = {-0.074952, 0.737134, 0, 1.0};
Point(30) = {-0.074983, 0.736854, 0, 1.0};
Point(31) = {-0.074977, 0.736560, 0, 1.0};
Point(32) = {-0.074911, 0.736305, 0, 1.0};
Point(33) = {-0.074763, 0.736071, 0, 1.0};
Point(34) = {-0.074533, 0.735836, 0, 1.0};
Point(35) = {-0.073416, 0.735079, 0, 1.0};
Point(36) = {-0.071174, 0.734093, 0, 1.0};
Point(37) = {-0.068083, 0.733108, 0, 1.0};
Point(38) = {-0.064204, 0.732131, 0, 1.0};
Point(39) = {-0.059594, 0.731172, 0, 1.0};
Point(40) = {-0.054328, 0.730243, 0, 1.0};
Point(41) = {-0.048474, 0.729361, 0, 1.0};
Point(42) = {-0.042115, 0.728543, 0, 1.0};
Point(43) = {-0.035335, 0.727809, 0, 1.0};
Point(44) = {-0.028218, 0.727185, 0, 1.0};
Point(45) = {-0.020857, 0.726697, 0, 1.0};
Point(46) = {-0.013342, 0.726385, 0, 1.0};
Point(47) = {-0.005766, 0.726289, 0, 1.0};
Point(48) = {0.001774, 0.726511, 0, 1.0};
Point(49) = {0.009336, 0.727204, 0, 1.0};
Point(50) = {0.017115, 0.728308, 0, 1.0};
Point(51) = {0.025122, 0.729560, 0, 1.0};
Point(52) = {0.033196, 0.730781, 0, 1.0};
Point(53) = {0.041167, 0.731874, 0, 1.0};
Point(54) = {0.048863, 0.732773, 0, 1.0};
Point(55) = {0.056115, 0.733446, 0, 1.0};
Point(56) = {0.062763, 0.733873, 0, 1.0};
Point(57) = {0.068652, 0.734061, 0, 1.0};
Point(58) = {0.073630, 0.734048, 0, 1.0};
Point(59) = {0.074990, 0.734013, 0, 1.0};
Point(60) = {-0.075021, -0.735489, 0, 1.0};
Point(61) = {-0.074593, -0.735578, 0, 1.0};
Point(62) = {-0.070518, -0.736681, 0, 1.0};
Point(63) = {-0.065763, -0.737866, 0, 1.0};
Point(64) = {-0.060331, -0.739115, 0, 1.0};
Point(65) = {-0.054289, -0.740447, 0, 1.0};
Point(66) = {-0.047739, -0.741856, 0, 1.0};
Point(67) = {-0.040788, -0.743312, 0, 1.0};
Point(68) = {-0.033542, -0.744773, 0, 1.0};
Point(69) = {-0.026105, -0.746187, 0, 1.0};
Point(70) = {-0.018580, -0.747490, 0, 1.0};
Point(71) = {-0.011061, -0.748587, 0, 1.0};
Point(72) = {-0.003559, -0.749364, 0, 1.0};
Point(73) = {0.003983, -0.749808, 0, 1.0};
Point(74) = {0.011538, -0.750000, 0, 1.0};
Point(75) = {0.019019, -0.749990, 0, 1.0};
Point(76) = {0.026335, -0.749801, 0, 1.0};
Point(77) = {0.033396, -0.749454, 0, 1.0};
Point(78) = {0.040118, -0.748964, 0, 1.0};
Point(79) = {0.046416, -0.748348, 0, 1.0};
Point(80) = {0.052201, -0.747616, 0, 1.0};
Point(81) = {0.057391, -0.746776, 0, 1.0};
Point(82) = {0.061889, -0.745806, 0, 1.0};
Point(83) = {0.065666, -0.744629, 0, 1.0};
Point(84) = {0.068784, -0.743235, 0, 1.0};
Point(85) = {0.071284, -0.741700, 0, 1.0};
Point(86) = {0.073154, -0.740111, 0, 1.0};
Point(87) = {0.074386, -0.738550, 0, 1.0};
Point(88) = {0.074952, -0.737134, 0, 1.0};
Point(89) = {0.074983, -0.736854, 0, 1.0};
Point(90) = {0.074977, -0.736560, 0, 1.0};
Point(91) = {0.074911, -0.736305, 0, 1.0};
Point(92) = {0.074763, -0.736071, 0, 1.0};
Point(93) = {0.074533, -0.735836, 0, 1.0};
Point(94) = {0.073416, -0.735079, 0, 1.0};
Point(95) = {0.071174, -0.734093, 0, 1.0};
Point(96) = {0.068083, -0.733108, 0, 1.0};
Point(97) = {0.064204, -0.732131, 0, 1.0};
Point(98) = {0.059594, -0.731172, 0, 1.0};
Point(99) = {0.054328, -0.730243, 0, 1.0};
Point(100) = {0.048474, -0.729361, 0, 1.0};
Point(101) = {0.042115, -0.728543, 0, 1.0};
Point(102) = {0.035335, -0.727809, 0, 1.0};
Point(103) = {0.028218, -0.727185, 0, 1.0};
Point(104) = {0.020857, -0.726697, 0, 1.0};
Point(105) = {0.013342, -0.726385, 0, 1.0};
Point(106) = {0.005766, -0.726289, 0, 1.0};
Point(107) = {-0.001774, -0.726511, 0, 1.0};
Point(108) = {-0.009336, -0.727204, 0, 1.0};
Point(109) = {-0.017115, -0.728308, 0, 1.0};
Point(110) = {-0.025122, -0.729560, 0, 1.0};
Point(111) = {-0.033196, -0.730781, 0, 1.0};
Point(112) = {-0.041167, -0.731874, 0, 1.0};
Point(113) = {-0.048863, -0.732773, 0, 1.0};
Point(114) = {-0.056115, -0.733446, 0, 1.0};
Point(115) = {-0.062763, -0.733873, 0, 1.0};
Point(116) = {-0.068652, -0.734061, 0, 1.0};
Point(117) = {-0.073630, -0.734048, 0, 1.0};
Point(118) = {-0.074990, -0.734013, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:77};
Spline(6) = {77:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {36.00000000, 15.00000000, 0, 1.0};
Point(122) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
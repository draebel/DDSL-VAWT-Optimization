SetFactory("OpenCASCADE");

Point(1) = {0.074293, 0.744702, 0, 1.0};
Point(2) = {0.073941, 0.744772, 0, 1.0};
Point(3) = {0.072919, 0.744997, 0, 1.0};
Point(4) = {0.071373, 0.745345, 0, 1.0};
Point(5) = {0.069336, 0.745722, 0, 1.0};
Point(6) = {0.066784, 0.746085, 0, 1.0};
Point(7) = {0.063721, 0.746456, 0, 1.0};
Point(8) = {0.060293, 0.746859, 0, 1.0};
Point(9) = {0.056257, 0.747258, 0, 1.0};
Point(10) = {0.051969, 0.747686, 0, 1.0};
Point(11) = {0.047394, 0.748122, 0, 1.0};
Point(12) = {0.042599, 0.748555, 0, 1.0};
Point(13) = {0.037650, 0.748967, 0, 1.0};
Point(14) = {0.032615, 0.749340, 0, 1.0};
Point(15) = {0.027559, 0.749652, 0, 1.0};
Point(16) = {0.022544, 0.749880, 0, 1.0};
Point(17) = {0.017627, 0.750000, 0, 1.0};
Point(18) = {0.012861, 0.749989, 0, 1.0};
Point(19) = {0.008295, 0.749826, 0, 1.0};
Point(20) = {0.003974, 0.749486, 0, 1.0};
Point(21) = {-0.000062, 0.748942, 0, 1.0};
Point(22) = {-0.003810, 0.748145, 0, 1.0};
Point(23) = {-0.007310, 0.747101, 0, 1.0};
Point(24) = {-0.010575, 0.745871, 0, 1.0};
Point(25) = {-0.013570, 0.744507, 0, 1.0};
Point(26) = {-0.016268, 0.743045, 0, 1.0};
Point(27) = {-0.018641, 0.741519, 0, 1.0};
Point(28) = {-0.020664, 0.739962, 0, 1.0};
Point(29) = {-0.022319, 0.738402, 0, 1.0};
Point(30) = {-0.023587, 0.736876, 0, 1.0};
Point(31) = {-0.024459, 0.735412, 0, 1.0};
Point(32) = {-0.024930, 0.734047, 0, 1.0};
Point(33) = {-0.025000, 0.732828, 0, 1.0};
Point(34) = {-0.024669, 0.731838, 0, 1.0};
Point(35) = {-0.023809, 0.731118, 0, 1.0};
Point(36) = {-0.022347, 0.730596, 0, 1.0};
Point(37) = {-0.020361, 0.730212, 0, 1.0};
Point(38) = {-0.017888, 0.729969, 0, 1.0};
Point(39) = {-0.014966, 0.729871, 0, 1.0};
Point(40) = {-0.011628, 0.729918, 0, 1.0};
Point(41) = {-0.007915, 0.730112, 0, 1.0};
Point(42) = {-0.003869, 0.730448, 0, 1.0};
Point(43) = {0.000459, 0.730928, 0, 1.0};
Point(44) = {0.005014, 0.731552, 0, 1.0};
Point(45) = {0.009735, 0.732338, 0, 1.0};
Point(46) = {0.014592, 0.733329, 0, 1.0};
Point(47) = {0.019605, 0.734531, 0, 1.0};
Point(48) = {0.024787, 0.735888, 0, 1.0};
Point(49) = {0.030100, 0.737323, 0, 1.0};
Point(50) = {0.035485, 0.738771, 0, 1.0};
Point(51) = {0.040874, 0.740170, 0, 1.0};
Point(52) = {0.046186, 0.741463, 0, 1.0};
Point(53) = {0.051332, 0.742596, 0, 1.0};
Point(54) = {0.056216, 0.743529, 0, 1.0};
Point(55) = {0.060736, 0.744225, 0, 1.0};
Point(56) = {0.064759, 0.744756, 0, 1.0};
Point(57) = {0.068181, 0.744844, 0, 1.0};
Point(58) = {0.070864, 0.744864, 0, 1.0};
Point(59) = {0.072777, 0.744802, 0, 1.0};
Point(60) = {0.073915, 0.744732, 0, 1.0};
Point(61) = {-0.074293, -0.744702, 0, 1.0};
Point(62) = {-0.073941, -0.744772, 0, 1.0};
Point(63) = {-0.072919, -0.744997, 0, 1.0};
Point(64) = {-0.071373, -0.745345, 0, 1.0};
Point(65) = {-0.069336, -0.745722, 0, 1.0};
Point(66) = {-0.066784, -0.746085, 0, 1.0};
Point(67) = {-0.063721, -0.746456, 0, 1.0};
Point(68) = {-0.060293, -0.746859, 0, 1.0};
Point(69) = {-0.056257, -0.747258, 0, 1.0};
Point(70) = {-0.051969, -0.747686, 0, 1.0};
Point(71) = {-0.047394, -0.748122, 0, 1.0};
Point(72) = {-0.042599, -0.748555, 0, 1.0};
Point(73) = {-0.037650, -0.748967, 0, 1.0};
Point(74) = {-0.032615, -0.749340, 0, 1.0};
Point(75) = {-0.027559, -0.749652, 0, 1.0};
Point(76) = {-0.022544, -0.749880, 0, 1.0};
Point(77) = {-0.017627, -0.750000, 0, 1.0};
Point(78) = {-0.012861, -0.749989, 0, 1.0};
Point(79) = {-0.008295, -0.749826, 0, 1.0};
Point(80) = {-0.003974, -0.749486, 0, 1.0};
Point(81) = {0.000062, -0.748942, 0, 1.0};
Point(82) = {0.003810, -0.748145, 0, 1.0};
Point(83) = {0.007310, -0.747101, 0, 1.0};
Point(84) = {0.010575, -0.745871, 0, 1.0};
Point(85) = {0.013570, -0.744507, 0, 1.0};
Point(86) = {0.016268, -0.743045, 0, 1.0};
Point(87) = {0.018641, -0.741519, 0, 1.0};
Point(88) = {0.020664, -0.739962, 0, 1.0};
Point(89) = {0.022319, -0.738402, 0, 1.0};
Point(90) = {0.023587, -0.736876, 0, 1.0};
Point(91) = {0.024459, -0.735412, 0, 1.0};
Point(92) = {0.024930, -0.734047, 0, 1.0};
Point(93) = {0.025000, -0.732828, 0, 1.0};
Point(94) = {0.024669, -0.731838, 0, 1.0};
Point(95) = {0.023809, -0.731118, 0, 1.0};
Point(96) = {0.022347, -0.730596, 0, 1.0};
Point(97) = {0.020361, -0.730212, 0, 1.0};
Point(98) = {0.017888, -0.729969, 0, 1.0};
Point(99) = {0.014966, -0.729871, 0, 1.0};
Point(100) = {0.011628, -0.729918, 0, 1.0};
Point(101) = {0.007915, -0.730112, 0, 1.0};
Point(102) = {0.003869, -0.730448, 0, 1.0};
Point(103) = {-0.000459, -0.730928, 0, 1.0};
Point(104) = {-0.005014, -0.731552, 0, 1.0};
Point(105) = {-0.009735, -0.732338, 0, 1.0};
Point(106) = {-0.014592, -0.733329, 0, 1.0};
Point(107) = {-0.019605, -0.734531, 0, 1.0};
Point(108) = {-0.024787, -0.735888, 0, 1.0};
Point(109) = {-0.030100, -0.737323, 0, 1.0};
Point(110) = {-0.035485, -0.738771, 0, 1.0};
Point(111) = {-0.040874, -0.740170, 0, 1.0};
Point(112) = {-0.046186, -0.741463, 0, 1.0};
Point(113) = {-0.051332, -0.742596, 0, 1.0};
Point(114) = {-0.056216, -0.743529, 0, 1.0};
Point(115) = {-0.060736, -0.744225, 0, 1.0};
Point(116) = {-0.064759, -0.744756, 0, 1.0};
Point(117) = {-0.068181, -0.744844, 0, 1.0};
Point(118) = {-0.070864, -0.744864, 0, 1.0};
Point(119) = {-0.072777, -0.744802, 0, 1.0};
Point(120) = {-0.073915, -0.744732, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
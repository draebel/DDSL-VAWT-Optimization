SetFactory("OpenCASCADE");

Point(1) = {0.074926, 0.730335, 0, 1.0};
Point(2) = {0.073954, 0.730639, 0, 1.0};
Point(3) = {0.069549, 0.731979, 0, 1.0};
Point(4) = {0.064012, 0.733600, 0, 1.0};
Point(5) = {0.057435, 0.735452, 0, 1.0};
Point(6) = {0.049930, 0.737469, 0, 1.0};
Point(7) = {0.041623, 0.739574, 0, 1.0};
Point(8) = {0.032651, 0.741682, 0, 1.0};
Point(9) = {0.023166, 0.743700, 0, 1.0};
Point(10) = {0.013325, 0.745542, 0, 1.0};
Point(11) = {0.003296, 0.747129, 0, 1.0};
Point(12) = {-0.006753, 0.748399, 0, 1.0};
Point(13) = {-0.016653, 0.749310, 0, 1.0};
Point(14) = {-0.021493, 0.749626, 0, 1.0};
Point(15) = {-0.026232, 0.749844, 0, 1.0};
Point(16) = {-0.030849, 0.749968, 0, 1.0};
Point(17) = {-0.035327, 0.750000, 0, 1.0};
Point(18) = {-0.039645, 0.749928, 0, 1.0};
Point(19) = {-0.043784, 0.749738, 0, 1.0};
Point(20) = {-0.047730, 0.749413, 0, 1.0};
Point(21) = {-0.051466, 0.748946, 0, 1.0};
Point(22) = {-0.054976, 0.748352, 0, 1.0};
Point(23) = {-0.058242, 0.747655, 0, 1.0};
Point(24) = {-0.061247, 0.746893, 0, 1.0};
Point(25) = {-0.063980, 0.746094, 0, 1.0};
Point(26) = {-0.066427, 0.745262, 0, 1.0};
Point(27) = {-0.068578, 0.744389, 0, 1.0};
Point(28) = {-0.070426, 0.743458, 0, 1.0};
Point(29) = {-0.071962, 0.742468, 0, 1.0};
Point(30) = {-0.073180, 0.741445, 0, 1.0};
Point(31) = {-0.074071, 0.740432, 0, 1.0};
Point(32) = {-0.074630, 0.739477, 0, 1.0};
Point(33) = {-0.074851, 0.738607, 0, 1.0};
Point(34) = {-0.074734, 0.737824, 0, 1.0};
Point(35) = {-0.074281, 0.737105, 0, 1.0};
Point(36) = {-0.073496, 0.736437, 0, 1.0};
Point(37) = {-0.072382, 0.735816, 0, 1.0};
Point(38) = {-0.070945, 0.735247, 0, 1.0};
Point(39) = {-0.069188, 0.734740, 0, 1.0};
Point(40) = {-0.067120, 0.734299, 0, 1.0};
Point(41) = {-0.064749, 0.733912, 0, 1.0};
Point(42) = {-0.062089, 0.733568, 0, 1.0};
Point(43) = {-0.059152, 0.733254, 0, 1.0};
Point(44) = {-0.055948, 0.732969, 0, 1.0};
Point(45) = {-0.052492, 0.732715, 0, 1.0};
Point(46) = {-0.048799, 0.732492, 0, 1.0};
Point(47) = {-0.044886, 0.732303, 0, 1.0};
Point(48) = {-0.040769, 0.732137, 0, 1.0};
Point(49) = {-0.036465, 0.731991, 0, 1.0};
Point(50) = {-0.031994, 0.731854, 0, 1.0};
Point(51) = {-0.027377, 0.731719, 0, 1.0};
Point(52) = {-0.022633, 0.731585, 0, 1.0};
Point(53) = {-0.017782, 0.731448, 0, 1.0};
Point(54) = {-0.007842, 0.731168, 0, 1.0};
Point(55) = {0.002269, 0.730879, 0, 1.0};
Point(56) = {0.012380, 0.730591, 0, 1.0};
Point(57) = {0.022319, 0.730306, 0, 1.0};
Point(58) = {0.031915, 0.730032, 0, 1.0};
Point(59) = {0.041003, 0.729773, 0, 1.0};
Point(60) = {0.049428, 0.729530, 0, 1.0};
Point(61) = {0.057046, 0.729307, 0, 1.0};
Point(62) = {0.063728, 0.729111, 0, 1.0};
Point(63) = {0.069357, 0.728952, 0, 1.0};
Point(64) = {0.073841, 0.728843, 0, 1.0};
Point(65) = {0.074830, 0.728816, 0, 1.0};
Point(66) = {-0.074926, -0.730335, 0, 1.0};
Point(67) = {-0.073954, -0.730639, 0, 1.0};
Point(68) = {-0.069549, -0.731979, 0, 1.0};
Point(69) = {-0.064012, -0.733600, 0, 1.0};
Point(70) = {-0.057435, -0.735452, 0, 1.0};
Point(71) = {-0.049930, -0.737469, 0, 1.0};
Point(72) = {-0.041623, -0.739574, 0, 1.0};
Point(73) = {-0.032651, -0.741682, 0, 1.0};
Point(74) = {-0.023166, -0.743700, 0, 1.0};
Point(75) = {-0.013325, -0.745542, 0, 1.0};
Point(76) = {-0.003296, -0.747129, 0, 1.0};
Point(77) = {0.006753, -0.748399, 0, 1.0};
Point(78) = {0.016653, -0.749310, 0, 1.0};
Point(79) = {0.021493, -0.749626, 0, 1.0};
Point(80) = {0.026232, -0.749844, 0, 1.0};
Point(81) = {0.030849, -0.749968, 0, 1.0};
Point(82) = {0.035327, -0.750000, 0, 1.0};
Point(83) = {0.039645, -0.749928, 0, 1.0};
Point(84) = {0.043784, -0.749738, 0, 1.0};
Point(85) = {0.047730, -0.749413, 0, 1.0};
Point(86) = {0.051466, -0.748946, 0, 1.0};
Point(87) = {0.054976, -0.748352, 0, 1.0};
Point(88) = {0.058242, -0.747655, 0, 1.0};
Point(89) = {0.061247, -0.746893, 0, 1.0};
Point(90) = {0.063980, -0.746094, 0, 1.0};
Point(91) = {0.066427, -0.745262, 0, 1.0};
Point(92) = {0.068578, -0.744389, 0, 1.0};
Point(93) = {0.070426, -0.743458, 0, 1.0};
Point(94) = {0.071962, -0.742468, 0, 1.0};
Point(95) = {0.073180, -0.741445, 0, 1.0};
Point(96) = {0.074071, -0.740432, 0, 1.0};
Point(97) = {0.074630, -0.739477, 0, 1.0};
Point(98) = {0.074851, -0.738607, 0, 1.0};
Point(99) = {0.074734, -0.737824, 0, 1.0};
Point(100) = {0.074281, -0.737105, 0, 1.0};
Point(101) = {0.073496, -0.736437, 0, 1.0};
Point(102) = {0.072382, -0.735816, 0, 1.0};
Point(103) = {0.070945, -0.735247, 0, 1.0};
Point(104) = {0.069188, -0.734740, 0, 1.0};
Point(105) = {0.067120, -0.734299, 0, 1.0};
Point(106) = {0.064749, -0.733912, 0, 1.0};
Point(107) = {0.062089, -0.733568, 0, 1.0};
Point(108) = {0.059152, -0.733254, 0, 1.0};
Point(109) = {0.055948, -0.732969, 0, 1.0};
Point(110) = {0.052492, -0.732715, 0, 1.0};
Point(111) = {0.048799, -0.732492, 0, 1.0};
Point(112) = {0.044886, -0.732303, 0, 1.0};
Point(113) = {0.040769, -0.732137, 0, 1.0};
Point(114) = {0.036465, -0.731991, 0, 1.0};
Point(115) = {0.031994, -0.731854, 0, 1.0};
Point(116) = {0.027377, -0.731719, 0, 1.0};
Point(117) = {0.022633, -0.731585, 0, 1.0};
Point(118) = {0.017782, -0.731448, 0, 1.0};
Point(119) = {0.007842, -0.731168, 0, 1.0};
Point(120) = {-0.002269, -0.730879, 0, 1.0};
Point(121) = {-0.012380, -0.730591, 0, 1.0};
Point(122) = {-0.022319, -0.730306, 0, 1.0};
Point(123) = {-0.031915, -0.730032, 0, 1.0};
Point(124) = {-0.041003, -0.729773, 0, 1.0};
Point(125) = {-0.049428, -0.729530, 0, 1.0};
Point(126) = {-0.057046, -0.729307, 0, 1.0};
Point(127) = {-0.063728, -0.729111, 0, 1.0};
Point(128) = {-0.069357, -0.728952, 0, 1.0};
Point(129) = {-0.073841, -0.728843, 0, 1.0};
Point(130) = {-0.074830, -0.728816, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:49};
Spline(3) = {49:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:81};
Spline(6) = {81:114};
Spline(7) = {114:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
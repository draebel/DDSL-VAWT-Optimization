SetFactory("OpenCASCADE");

Point(1) = {0.075002, 0.744617, 0, 1.0};
Point(2) = {0.072231, 0.744799, 0, 1.0};
Point(3) = {0.068820, 0.745025, 0, 1.0};
Point(4) = {0.065154, 0.745276, 0, 1.0};
Point(5) = {0.061233, 0.745565, 0, 1.0};
Point(6) = {0.057074, 0.745887, 0, 1.0};
Point(7) = {0.052716, 0.746233, 0, 1.0};
Point(8) = {0.048156, 0.746591, 0, 1.0};
Point(9) = {0.043414, 0.746967, 0, 1.0};
Point(10) = {0.038525, 0.747349, 0, 1.0};
Point(11) = {0.033493, 0.747739, 0, 1.0};
Point(12) = {0.028366, 0.748123, 0, 1.0};
Point(13) = {0.023133, 0.748489, 0, 1.0};
Point(14) = {0.017825, 0.748824, 0, 1.0};
Point(15) = {0.012481, 0.749116, 0, 1.0};
Point(16) = {0.007118, 0.749365, 0, 1.0};
Point(17) = {0.001755, 0.749562, 0, 1.0};
Point(18) = {-0.003589, 0.749722, 0, 1.0};
Point(19) = {-0.008899, 0.749855, 0, 1.0};
Point(20) = {-0.014133, 0.749958, 0, 1.0};
Point(21) = {-0.019261, 0.750000, 0, 1.0};
Point(22) = {-0.024295, 0.749979, 0, 1.0};
Point(23) = {-0.029185, 0.749925, 0, 1.0};
Point(24) = {-0.033929, 0.749846, 0, 1.0};
Point(25) = {-0.038491, 0.749730, 0, 1.0};
Point(26) = {-0.042851, 0.749596, 0, 1.0};
Point(27) = {-0.047012, 0.749451, 0, 1.0};
Point(28) = {-0.050935, 0.749232, 0, 1.0};
Point(29) = {-0.054603, 0.748951, 0, 1.0};
Point(30) = {-0.058016, 0.748633, 0, 1.0};
Point(31) = {-0.061155, 0.748293, 0, 1.0};
Point(32) = {-0.063984, 0.747936, 0, 1.0};
Point(33) = {-0.066521, 0.747556, 0, 1.0};
Point(34) = {-0.068731, 0.747151, 0, 1.0};
Point(35) = {-0.070629, 0.746724, 0, 1.0};
Point(36) = {-0.072201, 0.746273, 0, 1.0};
Point(37) = {-0.073424, 0.745814, 0, 1.0};
Point(38) = {-0.074285, 0.745344, 0, 1.0};
Point(39) = {-0.074816, 0.744854, 0, 1.0};
Point(40) = {-0.074999, 0.744480, 0, 1.0};
Point(41) = {-0.074819, 0.744105, 0, 1.0};
Point(42) = {-0.074292, 0.743610, 0, 1.0};
Point(43) = {-0.073435, 0.743134, 0, 1.0};
Point(44) = {-0.072215, 0.742664, 0, 1.0};
Point(45) = {-0.070648, 0.742202, 0, 1.0};
Point(46) = {-0.068753, 0.741759, 0, 1.0};
Point(47) = {-0.066546, 0.741336, 0, 1.0};
Point(48) = {-0.064013, 0.740935, 0, 1.0};
Point(49) = {-0.061187, 0.740556, 0, 1.0};
Point(50) = {-0.058050, 0.740190, 0, 1.0};
Point(51) = {-0.054640, 0.739845, 0, 1.0};
Point(52) = {-0.050975, 0.739534, 0, 1.0};
Point(53) = {-0.047053, 0.739284, 0, 1.0};
Point(54) = {-0.042893, 0.739104, 0, 1.0};
Point(55) = {-0.038534, 0.738936, 0, 1.0};
Point(56) = {-0.033974, 0.738783, 0, 1.0};
Point(57) = {-0.029230, 0.738665, 0, 1.0};
Point(58) = {-0.024341, 0.738571, 0, 1.0};
Point(59) = {-0.019307, 0.738510, 0, 1.0};
Point(60) = {-0.014179, 0.738510, 0, 1.0};
Point(61) = {-0.008945, 0.738571, 0, 1.0};
Point(62) = {-0.003634, 0.738662, 0, 1.0};
Point(63) = {0.001711, 0.738778, 0, 1.0};
Point(64) = {0.007076, 0.738932, 0, 1.0};
Point(65) = {0.012441, 0.739137, 0, 1.0};
Point(66) = {0.017786, 0.739386, 0, 1.0};
Point(67) = {0.023098, 0.739678, 0, 1.0};
Point(68) = {0.028334, 0.740002, 0, 1.0};
Point(69) = {0.033463, 0.740344, 0, 1.0};
Point(70) = {0.038498, 0.740693, 0, 1.0};
Point(71) = {0.043390, 0.741036, 0, 1.0};
Point(72) = {0.048135, 0.741373, 0, 1.0};
Point(73) = {0.052697, 0.741695, 0, 1.0};
Point(74) = {0.057058, 0.742005, 0, 1.0};
Point(75) = {0.061220, 0.742294, 0, 1.0};
Point(76) = {0.065143, 0.742551, 0, 1.0};
Point(77) = {0.068811, 0.742772, 0, 1.0};
Point(78) = {0.072224, 0.742970, 0, 1.0};
Point(79) = {0.074996, 0.743130, 0, 1.0};
Point(80) = {-0.075002, -0.744617, 0, 1.0};
Point(81) = {-0.072231, -0.744799, 0, 1.0};
Point(82) = {-0.068820, -0.745025, 0, 1.0};
Point(83) = {-0.065154, -0.745276, 0, 1.0};
Point(84) = {-0.061233, -0.745565, 0, 1.0};
Point(85) = {-0.057074, -0.745887, 0, 1.0};
Point(86) = {-0.052716, -0.746233, 0, 1.0};
Point(87) = {-0.048156, -0.746591, 0, 1.0};
Point(88) = {-0.043414, -0.746967, 0, 1.0};
Point(89) = {-0.038525, -0.747349, 0, 1.0};
Point(90) = {-0.033493, -0.747739, 0, 1.0};
Point(91) = {-0.028366, -0.748123, 0, 1.0};
Point(92) = {-0.023133, -0.748489, 0, 1.0};
Point(93) = {-0.017825, -0.748824, 0, 1.0};
Point(94) = {-0.012481, -0.749116, 0, 1.0};
Point(95) = {-0.007118, -0.749365, 0, 1.0};
Point(96) = {-0.001755, -0.749562, 0, 1.0};
Point(97) = {0.003589, -0.749722, 0, 1.0};
Point(98) = {0.008899, -0.749855, 0, 1.0};
Point(99) = {0.014133, -0.749958, 0, 1.0};
Point(100) = {0.019261, -0.750000, 0, 1.0};
Point(101) = {0.024295, -0.749979, 0, 1.0};
Point(102) = {0.029185, -0.749925, 0, 1.0};
Point(103) = {0.033929, -0.749846, 0, 1.0};
Point(104) = {0.038491, -0.749730, 0, 1.0};
Point(105) = {0.042851, -0.749596, 0, 1.0};
Point(106) = {0.047012, -0.749451, 0, 1.0};
Point(107) = {0.050935, -0.749232, 0, 1.0};
Point(108) = {0.054603, -0.748951, 0, 1.0};
Point(109) = {0.058016, -0.748633, 0, 1.0};
Point(110) = {0.061155, -0.748293, 0, 1.0};
Point(111) = {0.063984, -0.747936, 0, 1.0};
Point(112) = {0.066521, -0.747556, 0, 1.0};
Point(113) = {0.068731, -0.747151, 0, 1.0};
Point(114) = {0.070629, -0.746724, 0, 1.0};
Point(115) = {0.072201, -0.746273, 0, 1.0};
Point(116) = {0.073424, -0.745814, 0, 1.0};
Point(117) = {0.074285, -0.745344, 0, 1.0};
Point(118) = {0.074816, -0.744854, 0, 1.0};
Point(119) = {0.074999, -0.744480, 0, 1.0};
Point(120) = {0.074819, -0.744105, 0, 1.0};
Point(121) = {0.074292, -0.743610, 0, 1.0};
Point(122) = {0.073435, -0.743134, 0, 1.0};
Point(123) = {0.072215, -0.742664, 0, 1.0};
Point(124) = {0.070648, -0.742202, 0, 1.0};
Point(125) = {0.068753, -0.741759, 0, 1.0};
Point(126) = {0.066546, -0.741336, 0, 1.0};
Point(127) = {0.064013, -0.740935, 0, 1.0};
Point(128) = {0.061187, -0.740556, 0, 1.0};
Point(129) = {0.058050, -0.740190, 0, 1.0};
Point(130) = {0.054640, -0.739845, 0, 1.0};
Point(131) = {0.050975, -0.739534, 0, 1.0};
Point(132) = {0.047053, -0.739284, 0, 1.0};
Point(133) = {0.042893, -0.739104, 0, 1.0};
Point(134) = {0.038534, -0.738936, 0, 1.0};
Point(135) = {0.033974, -0.738783, 0, 1.0};
Point(136) = {0.029230, -0.738665, 0, 1.0};
Point(137) = {0.024341, -0.738571, 0, 1.0};
Point(138) = {0.019307, -0.738510, 0, 1.0};
Point(139) = {0.014179, -0.738510, 0, 1.0};
Point(140) = {0.008945, -0.738571, 0, 1.0};
Point(141) = {0.003634, -0.738662, 0, 1.0};
Point(142) = {-0.001711, -0.738778, 0, 1.0};
Point(143) = {-0.007076, -0.738932, 0, 1.0};
Point(144) = {-0.012441, -0.739137, 0, 1.0};
Point(145) = {-0.017786, -0.739386, 0, 1.0};
Point(146) = {-0.023098, -0.739678, 0, 1.0};
Point(147) = {-0.028334, -0.740002, 0, 1.0};
Point(148) = {-0.033463, -0.740344, 0, 1.0};
Point(149) = {-0.038498, -0.740693, 0, 1.0};
Point(150) = {-0.043390, -0.741036, 0, 1.0};
Point(151) = {-0.048135, -0.741373, 0, 1.0};
Point(152) = {-0.052697, -0.741695, 0, 1.0};
Point(153) = {-0.057058, -0.742005, 0, 1.0};
Point(154) = {-0.061220, -0.742294, 0, 1.0};
Point(155) = {-0.065143, -0.742551, 0, 1.0};
Point(156) = {-0.068811, -0.742772, 0, 1.0};
Point(157) = {-0.072224, -0.742970, 0, 1.0};
Point(158) = {-0.074996, -0.743130, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:56};
Spline(3) = {56:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:103};
Spline(6) = {103:135};
Spline(7) = {135:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {36.00000000, 15.00000000, 0, 1.0};
Point(162) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
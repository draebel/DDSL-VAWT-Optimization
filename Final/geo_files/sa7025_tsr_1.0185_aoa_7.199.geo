SetFactory("OpenCASCADE");

Point(1) = {0.148423, 0.716676, 0, 1.0};
Point(2) = {0.148067, 0.716766, 0, 1.0};
Point(3) = {0.147015, 0.717052, 0, 1.0};
Point(4) = {0.145300, 0.717552, 0, 1.0};
Point(5) = {0.142961, 0.718269, 0, 1.0};
Point(6) = {0.140043, 0.719200, 0, 1.0};
Point(7) = {0.136590, 0.720329, 0, 1.0};
Point(8) = {0.132647, 0.721634, 0, 1.0};
Point(9) = {0.128252, 0.723088, 0, 1.0};
Point(10) = {0.123444, 0.724662, 0, 1.0};
Point(11) = {0.118254, 0.726323, 0, 1.0};
Point(12) = {0.112713, 0.728044, 0, 1.0};
Point(13) = {0.106850, 0.729800, 0, 1.0};
Point(14) = {0.100699, 0.731560, 0, 1.0};
Point(15) = {0.094279, 0.733299, 0, 1.0};
Point(16) = {0.087610, 0.735016, 0, 1.0};
Point(17) = {0.080736, 0.736703, 0, 1.0};
Point(18) = {0.073700, 0.738344, 0, 1.0};
Point(19) = {0.066542, 0.739925, 0, 1.0};
Point(20) = {0.059304, 0.741436, 0, 1.0};
Point(21) = {0.052029, 0.742859, 0, 1.0};
Point(22) = {0.044753, 0.744180, 0, 1.0};
Point(23) = {0.037522, 0.745392, 0, 1.0};
Point(24) = {0.030372, 0.746479, 0, 1.0};
Point(25) = {0.023339, 0.747433, 0, 1.0};
Point(26) = {0.016465, 0.748246, 0, 1.0};
Point(27) = {0.009782, 0.748907, 0, 1.0};
Point(28) = {0.003322, 0.749419, 0, 1.0};
Point(29) = {-0.002879, 0.749771, 0, 1.0};
Point(30) = {-0.008794, 0.749963, 0, 1.0};
Point(31) = {-0.014393, 0.750000, 0, 1.0};
Point(32) = {-0.019652, 0.749878, 0, 1.0};
Point(33) = {-0.024551, 0.749604, 0, 1.0};
Point(34) = {-0.029063, 0.749187, 0, 1.0};
Point(35) = {-0.033172, 0.748633, 0, 1.0};
Point(36) = {-0.036866, 0.747962, 0, 1.0};
Point(37) = {-0.040123, 0.747181, 0, 1.0};
Point(38) = {-0.042937, 0.746308, 0, 1.0};
Point(39) = {-0.045300, 0.745376, 0, 1.0};
Point(40) = {-0.047195, 0.744406, 0, 1.0};
Point(41) = {-0.048617, 0.743427, 0, 1.0};
Point(42) = {-0.049555, 0.742480, 0, 1.0};
Point(43) = {-0.050000, 0.741739, 0, 1.0};
Point(44) = {-0.049796, 0.740978, 0, 1.0};
Point(45) = {-0.048841, 0.740364, 0, 1.0};
Point(46) = {-0.047255, 0.739706, 0, 1.0};
Point(47) = {-0.045070, 0.739051, 0, 1.0};
Point(48) = {-0.042287, 0.738420, 0, 1.0};
Point(49) = {-0.038905, 0.737803, 0, 1.0};
Point(50) = {-0.034946, 0.737198, 0, 1.0};
Point(51) = {-0.030428, 0.736607, 0, 1.0};
Point(52) = {-0.025376, 0.736024, 0, 1.0};
Point(53) = {-0.019817, 0.735447, 0, 1.0};
Point(54) = {-0.013784, 0.734871, 0, 1.0};
Point(55) = {-0.007313, 0.734292, 0, 1.0};
Point(56) = {-0.000442, 0.733705, 0, 1.0};
Point(57) = {0.006785, 0.733107, 0, 1.0};
Point(58) = {0.014324, 0.732490, 0, 1.0};
Point(59) = {0.022125, 0.731852, 0, 1.0};
Point(60) = {0.030137, 0.731185, 0, 1.0};
Point(61) = {0.038305, 0.730485, 0, 1.0};
Point(62) = {0.046573, 0.729749, 0, 1.0};
Point(63) = {0.054884, 0.728969, 0, 1.0};
Point(64) = {0.063165, 0.728138, 0, 1.0};
Point(65) = {0.071342, 0.727265, 0, 1.0};
Point(66) = {0.079358, 0.726368, 0, 1.0};
Point(67) = {0.087159, 0.725460, 0, 1.0};
Point(68) = {0.094691, 0.724547, 0, 1.0};
Point(69) = {0.101904, 0.723640, 0, 1.0};
Point(70) = {0.108747, 0.722746, 0, 1.0};
Point(71) = {0.115171, 0.721877, 0, 1.0};
Point(72) = {0.121134, 0.721043, 0, 1.0};
Point(73) = {0.126593, 0.720256, 0, 1.0};
Point(74) = {0.131514, 0.719526, 0, 1.0};
Point(75) = {0.135868, 0.718862, 0, 1.0};
Point(76) = {0.139622, 0.718266, 0, 1.0};
Point(77) = {0.142746, 0.717746, 0, 1.0};
Point(78) = {0.145210, 0.717311, 0, 1.0};
Point(79) = {0.146989, 0.716974, 0, 1.0};
Point(80) = {0.148064, 0.716755, 0, 1.0};
Point(81) = {-0.148423, -0.716676, 0, 1.0};
Point(82) = {-0.148067, -0.716766, 0, 1.0};
Point(83) = {-0.147015, -0.717052, 0, 1.0};
Point(84) = {-0.145300, -0.717552, 0, 1.0};
Point(85) = {-0.142961, -0.718269, 0, 1.0};
Point(86) = {-0.140043, -0.719200, 0, 1.0};
Point(87) = {-0.136590, -0.720329, 0, 1.0};
Point(88) = {-0.132647, -0.721634, 0, 1.0};
Point(89) = {-0.128252, -0.723088, 0, 1.0};
Point(90) = {-0.123444, -0.724662, 0, 1.0};
Point(91) = {-0.118254, -0.726323, 0, 1.0};
Point(92) = {-0.112713, -0.728044, 0, 1.0};
Point(93) = {-0.106850, -0.729800, 0, 1.0};
Point(94) = {-0.100699, -0.731560, 0, 1.0};
Point(95) = {-0.094279, -0.733299, 0, 1.0};
Point(96) = {-0.087610, -0.735016, 0, 1.0};
Point(97) = {-0.080736, -0.736703, 0, 1.0};
Point(98) = {-0.073700, -0.738344, 0, 1.0};
Point(99) = {-0.066542, -0.739925, 0, 1.0};
Point(100) = {-0.059304, -0.741436, 0, 1.0};
Point(101) = {-0.052029, -0.742859, 0, 1.0};
Point(102) = {-0.044753, -0.744180, 0, 1.0};
Point(103) = {-0.037522, -0.745392, 0, 1.0};
Point(104) = {-0.030372, -0.746479, 0, 1.0};
Point(105) = {-0.023339, -0.747433, 0, 1.0};
Point(106) = {-0.016465, -0.748246, 0, 1.0};
Point(107) = {-0.009782, -0.748907, 0, 1.0};
Point(108) = {-0.003322, -0.749419, 0, 1.0};
Point(109) = {0.002879, -0.749771, 0, 1.0};
Point(110) = {0.008794, -0.749963, 0, 1.0};
Point(111) = {0.014393, -0.750000, 0, 1.0};
Point(112) = {0.019652, -0.749878, 0, 1.0};
Point(113) = {0.024551, -0.749604, 0, 1.0};
Point(114) = {0.029063, -0.749187, 0, 1.0};
Point(115) = {0.033172, -0.748633, 0, 1.0};
Point(116) = {0.036866, -0.747962, 0, 1.0};
Point(117) = {0.040123, -0.747181, 0, 1.0};
Point(118) = {0.042937, -0.746308, 0, 1.0};
Point(119) = {0.045300, -0.745376, 0, 1.0};
Point(120) = {0.047195, -0.744406, 0, 1.0};
Point(121) = {0.048617, -0.743427, 0, 1.0};
Point(122) = {0.049555, -0.742480, 0, 1.0};
Point(123) = {0.050000, -0.741739, 0, 1.0};
Point(124) = {0.049796, -0.740978, 0, 1.0};
Point(125) = {0.048841, -0.740364, 0, 1.0};
Point(126) = {0.047255, -0.739706, 0, 1.0};
Point(127) = {0.045070, -0.739051, 0, 1.0};
Point(128) = {0.042287, -0.738420, 0, 1.0};
Point(129) = {0.038905, -0.737803, 0, 1.0};
Point(130) = {0.034946, -0.737198, 0, 1.0};
Point(131) = {0.030428, -0.736607, 0, 1.0};
Point(132) = {0.025376, -0.736024, 0, 1.0};
Point(133) = {0.019817, -0.735447, 0, 1.0};
Point(134) = {0.013784, -0.734871, 0, 1.0};
Point(135) = {0.007313, -0.734292, 0, 1.0};
Point(136) = {0.000442, -0.733705, 0, 1.0};
Point(137) = {-0.006785, -0.733107, 0, 1.0};
Point(138) = {-0.014324, -0.732490, 0, 1.0};
Point(139) = {-0.022125, -0.731852, 0, 1.0};
Point(140) = {-0.030137, -0.731185, 0, 1.0};
Point(141) = {-0.038305, -0.730485, 0, 1.0};
Point(142) = {-0.046573, -0.729749, 0, 1.0};
Point(143) = {-0.054884, -0.728969, 0, 1.0};
Point(144) = {-0.063165, -0.728138, 0, 1.0};
Point(145) = {-0.071342, -0.727265, 0, 1.0};
Point(146) = {-0.079358, -0.726368, 0, 1.0};
Point(147) = {-0.087159, -0.725460, 0, 1.0};
Point(148) = {-0.094691, -0.724547, 0, 1.0};
Point(149) = {-0.101904, -0.723640, 0, 1.0};
Point(150) = {-0.108747, -0.722746, 0, 1.0};
Point(151) = {-0.115171, -0.721877, 0, 1.0};
Point(152) = {-0.121134, -0.721043, 0, 1.0};
Point(153) = {-0.126593, -0.720256, 0, 1.0};
Point(154) = {-0.131514, -0.719526, 0, 1.0};
Point(155) = {-0.135868, -0.718862, 0, 1.0};
Point(156) = {-0.139622, -0.718266, 0, 1.0};
Point(157) = {-0.142746, -0.717746, 0, 1.0};
Point(158) = {-0.145210, -0.717311, 0, 1.0};
Point(159) = {-0.146989, -0.716974, 0, 1.0};
Point(160) = {-0.148064, -0.716755, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:136};
Spline(7) = {136:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
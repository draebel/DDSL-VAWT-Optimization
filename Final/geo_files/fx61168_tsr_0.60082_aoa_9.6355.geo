SetFactory("OpenCASCADE");

Point(1) = {0.074395, 0.717214, 0, 1.0};
Point(2) = {0.074244, 0.717281, 0, 1.0};
Point(3) = {0.071932, 0.718283, 0, 1.0};
Point(4) = {0.069347, 0.719369, 0, 1.0};
Point(5) = {0.066459, 0.720545, 0, 1.0};
Point(6) = {0.063379, 0.721789, 0, 1.0};
Point(7) = {0.060016, 0.723121, 0, 1.0};
Point(8) = {0.056440, 0.724524, 0, 1.0};
Point(9) = {0.052630, 0.726006, 0, 1.0};
Point(10) = {0.048627, 0.727553, 0, 1.0};
Point(11) = {0.044449, 0.729163, 0, 1.0};
Point(12) = {0.040114, 0.730815, 0, 1.0};
Point(13) = {0.035624, 0.732512, 0, 1.0};
Point(14) = {0.031014, 0.734230, 0, 1.0};
Point(15) = {0.026285, 0.735973, 0, 1.0};
Point(16) = {0.021473, 0.737718, 0, 1.0};
Point(17) = {0.016601, 0.739459, 0, 1.0};
Point(18) = {0.011678, 0.741149, 0, 1.0};
Point(19) = {0.006700, 0.742755, 0, 1.0};
Point(20) = {0.001717, 0.744213, 0, 1.0};
Point(21) = {-0.003292, 0.745515, 0, 1.0};
Point(22) = {-0.008272, 0.746633, 0, 1.0};
Point(23) = {-0.013215, 0.747596, 0, 1.0};
Point(24) = {-0.018084, 0.748390, 0, 1.0};
Point(25) = {-0.022896, 0.749041, 0, 1.0};
Point(26) = {-0.027575, 0.749514, 0, 1.0};
Point(27) = {-0.032156, 0.749839, 0, 1.0};
Point(28) = {-0.036579, 0.749992, 0, 1.0};
Point(29) = {-0.040845, 0.750000, 0, 1.0};
Point(30) = {-0.044910, 0.749850, 0, 1.0};
Point(31) = {-0.048793, 0.749579, 0, 1.0};
Point(32) = {-0.052451, 0.749171, 0, 1.0};
Point(33) = {-0.055860, 0.748658, 0, 1.0};
Point(34) = {-0.059025, 0.748026, 0, 1.0};
Point(35) = {-0.061917, 0.747301, 0, 1.0};
Point(36) = {-0.064519, 0.746472, 0, 1.0};
Point(37) = {-0.066843, 0.745580, 0, 1.0};
Point(38) = {-0.068851, 0.744623, 0, 1.0};
Point(39) = {-0.070535, 0.743656, 0, 1.0};
Point(40) = {-0.071890, 0.742677, 0, 1.0};
Point(41) = {-0.072921, 0.741683, 0, 1.0};
Point(42) = {-0.073606, 0.740663, 0, 1.0};
Point(43) = {-0.073942, 0.739650, 0, 1.0};
Point(44) = {-0.073841, 0.739282, 0, 1.0};
Point(45) = {-0.073431, 0.738678, 0, 1.0};
Point(46) = {-0.072685, 0.737992, 0, 1.0};
Point(47) = {-0.071624, 0.737240, 0, 1.0};
Point(48) = {-0.070246, 0.736410, 0, 1.0};
Point(49) = {-0.068548, 0.735536, 0, 1.0};
Point(50) = {-0.066534, 0.734601, 0, 1.0};
Point(51) = {-0.064237, 0.733631, 0, 1.0};
Point(52) = {-0.061641, 0.732615, 0, 1.0};
Point(53) = {-0.058761, 0.731571, 0, 1.0};
Point(54) = {-0.055621, 0.730497, 0, 1.0};
Point(55) = {-0.052217, 0.729408, 0, 1.0};
Point(56) = {-0.048567, 0.728309, 0, 1.0};
Point(57) = {-0.044716, 0.727200, 0, 1.0};
Point(58) = {-0.040634, 0.726113, 0, 1.0};
Point(59) = {-0.036362, 0.725065, 0, 1.0};
Point(60) = {-0.031895, 0.724071, 0, 1.0};
Point(61) = {-0.027294, 0.723136, 0, 1.0};
Point(62) = {-0.022521, 0.722256, 0, 1.0};
Point(63) = {-0.017659, 0.721420, 0, 1.0};
Point(64) = {-0.012680, 0.720663, 0, 1.0};
Point(65) = {-0.007624, 0.719997, 0, 1.0};
Point(66) = {-0.002490, 0.719435, 0, 1.0};
Point(67) = {0.002663, 0.718978, 0, 1.0};
Point(68) = {0.007853, 0.718621, 0, 1.0};
Point(69) = {0.013022, 0.718383, 0, 1.0};
Point(70) = {0.018173, 0.718281, 0, 1.0};
Point(71) = {0.023285, 0.718305, 0, 1.0};
Point(72) = {0.028329, 0.718412, 0, 1.0};
Point(73) = {0.033252, 0.718539, 0, 1.0};
Point(74) = {0.038043, 0.718615, 0, 1.0};
Point(75) = {0.042659, 0.718620, 0, 1.0};
Point(76) = {0.047098, 0.718547, 0, 1.0};
Point(77) = {0.051339, 0.718403, 0, 1.0};
Point(78) = {0.055365, 0.718190, 0, 1.0};
Point(79) = {0.059132, 0.717917, 0, 1.0};
Point(80) = {0.062664, 0.717581, 0, 1.0};
Point(81) = {0.065891, 0.717199, 0, 1.0};
Point(82) = {0.068904, 0.716762, 0, 1.0};
Point(83) = {0.071594, 0.716294, 0, 1.0};
Point(84) = {0.073992, 0.715797, 0, 1.0};
Point(85) = {0.074149, 0.715763, 0, 1.0};
Point(86) = {-0.074395, -0.717214, 0, 1.0};
Point(87) = {-0.074244, -0.717281, 0, 1.0};
Point(88) = {-0.071932, -0.718283, 0, 1.0};
Point(89) = {-0.069347, -0.719369, 0, 1.0};
Point(90) = {-0.066459, -0.720545, 0, 1.0};
Point(91) = {-0.063379, -0.721789, 0, 1.0};
Point(92) = {-0.060016, -0.723121, 0, 1.0};
Point(93) = {-0.056440, -0.724524, 0, 1.0};
Point(94) = {-0.052630, -0.726006, 0, 1.0};
Point(95) = {-0.048627, -0.727553, 0, 1.0};
Point(96) = {-0.044449, -0.729163, 0, 1.0};
Point(97) = {-0.040114, -0.730815, 0, 1.0};
Point(98) = {-0.035624, -0.732512, 0, 1.0};
Point(99) = {-0.031014, -0.734230, 0, 1.0};
Point(100) = {-0.026285, -0.735973, 0, 1.0};
Point(101) = {-0.021473, -0.737718, 0, 1.0};
Point(102) = {-0.016601, -0.739459, 0, 1.0};
Point(103) = {-0.011678, -0.741149, 0, 1.0};
Point(104) = {-0.006700, -0.742755, 0, 1.0};
Point(105) = {-0.001717, -0.744213, 0, 1.0};
Point(106) = {0.003292, -0.745515, 0, 1.0};
Point(107) = {0.008272, -0.746633, 0, 1.0};
Point(108) = {0.013215, -0.747596, 0, 1.0};
Point(109) = {0.018084, -0.748390, 0, 1.0};
Point(110) = {0.022896, -0.749041, 0, 1.0};
Point(111) = {0.027575, -0.749514, 0, 1.0};
Point(112) = {0.032156, -0.749839, 0, 1.0};
Point(113) = {0.036579, -0.749992, 0, 1.0};
Point(114) = {0.040845, -0.750000, 0, 1.0};
Point(115) = {0.044910, -0.749850, 0, 1.0};
Point(116) = {0.048793, -0.749579, 0, 1.0};
Point(117) = {0.052451, -0.749171, 0, 1.0};
Point(118) = {0.055860, -0.748658, 0, 1.0};
Point(119) = {0.059025, -0.748026, 0, 1.0};
Point(120) = {0.061917, -0.747301, 0, 1.0};
Point(121) = {0.064519, -0.746472, 0, 1.0};
Point(122) = {0.066843, -0.745580, 0, 1.0};
Point(123) = {0.068851, -0.744623, 0, 1.0};
Point(124) = {0.070535, -0.743656, 0, 1.0};
Point(125) = {0.071890, -0.742677, 0, 1.0};
Point(126) = {0.072921, -0.741683, 0, 1.0};
Point(127) = {0.073606, -0.740663, 0, 1.0};
Point(128) = {0.073942, -0.739650, 0, 1.0};
Point(129) = {0.073841, -0.739282, 0, 1.0};
Point(130) = {0.073431, -0.738678, 0, 1.0};
Point(131) = {0.072685, -0.737992, 0, 1.0};
Point(132) = {0.071624, -0.737240, 0, 1.0};
Point(133) = {0.070246, -0.736410, 0, 1.0};
Point(134) = {0.068548, -0.735536, 0, 1.0};
Point(135) = {0.066534, -0.734601, 0, 1.0};
Point(136) = {0.064237, -0.733631, 0, 1.0};
Point(137) = {0.061641, -0.732615, 0, 1.0};
Point(138) = {0.058761, -0.731571, 0, 1.0};
Point(139) = {0.055621, -0.730497, 0, 1.0};
Point(140) = {0.052217, -0.729408, 0, 1.0};
Point(141) = {0.048567, -0.728309, 0, 1.0};
Point(142) = {0.044716, -0.727200, 0, 1.0};
Point(143) = {0.040634, -0.726113, 0, 1.0};
Point(144) = {0.036362, -0.725065, 0, 1.0};
Point(145) = {0.031895, -0.724071, 0, 1.0};
Point(146) = {0.027294, -0.723136, 0, 1.0};
Point(147) = {0.022521, -0.722256, 0, 1.0};
Point(148) = {0.017659, -0.721420, 0, 1.0};
Point(149) = {0.012680, -0.720663, 0, 1.0};
Point(150) = {0.007624, -0.719997, 0, 1.0};
Point(151) = {0.002490, -0.719435, 0, 1.0};
Point(152) = {-0.002663, -0.718978, 0, 1.0};
Point(153) = {-0.007853, -0.718621, 0, 1.0};
Point(154) = {-0.013022, -0.718383, 0, 1.0};
Point(155) = {-0.018173, -0.718281, 0, 1.0};
Point(156) = {-0.023285, -0.718305, 0, 1.0};
Point(157) = {-0.028329, -0.718412, 0, 1.0};
Point(158) = {-0.033252, -0.718539, 0, 1.0};
Point(159) = {-0.038043, -0.718615, 0, 1.0};
Point(160) = {-0.042659, -0.718620, 0, 1.0};
Point(161) = {-0.047098, -0.718547, 0, 1.0};
Point(162) = {-0.051339, -0.718403, 0, 1.0};
Point(163) = {-0.055365, -0.718190, 0, 1.0};
Point(164) = {-0.059132, -0.717917, 0, 1.0};
Point(165) = {-0.062664, -0.717581, 0, 1.0};
Point(166) = {-0.065891, -0.717199, 0, 1.0};
Point(167) = {-0.068904, -0.716762, 0, 1.0};
Point(168) = {-0.071594, -0.716294, 0, 1.0};
Point(169) = {-0.073992, -0.715797, 0, 1.0};
Point(170) = {-0.074149, -0.715763, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
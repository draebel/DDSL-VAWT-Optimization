SetFactory("OpenCASCADE");

Point(1) = {0.074936, 0.734778, 0, 1.0};
Point(2) = {0.074496, 0.734852, 0, 1.0};
Point(3) = {0.069394, 0.735733, 0, 1.0};
Point(4) = {0.063603, 0.736772, 0, 1.0};
Point(5) = {0.057208, 0.737942, 0, 1.0};
Point(6) = {0.050299, 0.739218, 0, 1.0};
Point(7) = {0.042968, 0.740568, 0, 1.0};
Point(8) = {0.035309, 0.741959, 0, 1.0};
Point(9) = {0.027419, 0.743353, 0, 1.0};
Point(10) = {0.019393, 0.744706, 0, 1.0};
Point(11) = {0.011315, 0.745967, 0, 1.0};
Point(12) = {0.003253, 0.747097, 0, 1.0};
Point(13) = {-0.004723, 0.748065, 0, 1.0};
Point(14) = {-0.012549, 0.748849, 0, 1.0};
Point(15) = {-0.020161, 0.749437, 0, 1.0};
Point(16) = {-0.027495, 0.749821, 0, 1.0};
Point(17) = {-0.034489, 0.750000, 0, 1.0};
Point(18) = {-0.041083, 0.749976, 0, 1.0};
Point(19) = {-0.047218, 0.749755, 0, 1.0};
Point(20) = {-0.052841, 0.749348, 0, 1.0};
Point(21) = {-0.057904, 0.748769, 0, 1.0};
Point(22) = {-0.062364, 0.748034, 0, 1.0};
Point(23) = {-0.066182, 0.747164, 0, 1.0};
Point(24) = {-0.069332, 0.746185, 0, 1.0};
Point(25) = {-0.071791, 0.745129, 0, 1.0};
Point(26) = {-0.073552, 0.744043, 0, 1.0};
Point(27) = {-0.074526, 0.743098, 0, 1.0};
Point(28) = {-0.074714, 0.742802, 0, 1.0};
Point(29) = {-0.074835, 0.742527, 0, 1.0};
Point(30) = {-0.074876, 0.742358, 0, 1.0};
Point(31) = {-0.074875, 0.742208, 0, 1.0};
Point(32) = {-0.074820, 0.742065, 0, 1.0};
Point(33) = {-0.074715, 0.741913, 0, 1.0};
Point(34) = {-0.074487, 0.741674, 0, 1.0};
Point(35) = {-0.074180, 0.741425, 0, 1.0};
Point(36) = {-0.072421, 0.740496, 0, 1.0};
Point(37) = {-0.069958, 0.739645, 0, 1.0};
Point(38) = {-0.066707, 0.738831, 0, 1.0};
Point(39) = {-0.062695, 0.738082, 0, 1.0};
Point(40) = {-0.057944, 0.737422, 0, 1.0};
Point(41) = {-0.052472, 0.736852, 0, 1.0};
Point(42) = {-0.046325, 0.736355, 0, 1.0};
Point(43) = {-0.039569, 0.735919, 0, 1.0};
Point(44) = {-0.032279, 0.735534, 0, 1.0};
Point(45) = {-0.024538, 0.735197, 0, 1.0};
Point(46) = {-0.016433, 0.734904, 0, 1.0};
Point(47) = {-0.008055, 0.734652, 0, 1.0};
Point(48) = {0.000505, 0.734435, 0, 1.0};
Point(49) = {0.009146, 0.734249, 0, 1.0};
Point(50) = {0.017771, 0.734088, 0, 1.0};
Point(51) = {0.026280, 0.733951, 0, 1.0};
Point(52) = {0.034576, 0.733836, 0, 1.0};
Point(53) = {0.042567, 0.733736, 0, 1.0};
Point(54) = {0.050158, 0.733644, 0, 1.0};
Point(55) = {0.057255, 0.733553, 0, 1.0};
Point(56) = {0.063769, 0.733458, 0, 1.0};
Point(57) = {0.069614, 0.733362, 0, 1.0};
Point(58) = {0.074712, 0.733265, 0, 1.0};
Point(59) = {0.074848, 0.733261, 0, 1.0};
Point(60) = {-0.074936, -0.734778, 0, 1.0};
Point(61) = {-0.074496, -0.734852, 0, 1.0};
Point(62) = {-0.069394, -0.735733, 0, 1.0};
Point(63) = {-0.063603, -0.736772, 0, 1.0};
Point(64) = {-0.057208, -0.737942, 0, 1.0};
Point(65) = {-0.050299, -0.739218, 0, 1.0};
Point(66) = {-0.042968, -0.740568, 0, 1.0};
Point(67) = {-0.035309, -0.741959, 0, 1.0};
Point(68) = {-0.027419, -0.743353, 0, 1.0};
Point(69) = {-0.019393, -0.744706, 0, 1.0};
Point(70) = {-0.011315, -0.745967, 0, 1.0};
Point(71) = {-0.003253, -0.747097, 0, 1.0};
Point(72) = {0.004723, -0.748065, 0, 1.0};
Point(73) = {0.012549, -0.748849, 0, 1.0};
Point(74) = {0.020161, -0.749437, 0, 1.0};
Point(75) = {0.027495, -0.749821, 0, 1.0};
Point(76) = {0.034489, -0.750000, 0, 1.0};
Point(77) = {0.041083, -0.749976, 0, 1.0};
Point(78) = {0.047218, -0.749755, 0, 1.0};
Point(79) = {0.052841, -0.749348, 0, 1.0};
Point(80) = {0.057904, -0.748769, 0, 1.0};
Point(81) = {0.062364, -0.748034, 0, 1.0};
Point(82) = {0.066182, -0.747164, 0, 1.0};
Point(83) = {0.069332, -0.746185, 0, 1.0};
Point(84) = {0.071791, -0.745129, 0, 1.0};
Point(85) = {0.073552, -0.744043, 0, 1.0};
Point(86) = {0.074526, -0.743098, 0, 1.0};
Point(87) = {0.074714, -0.742802, 0, 1.0};
Point(88) = {0.074835, -0.742527, 0, 1.0};
Point(89) = {0.074876, -0.742358, 0, 1.0};
Point(90) = {0.074875, -0.742208, 0, 1.0};
Point(91) = {0.074820, -0.742065, 0, 1.0};
Point(92) = {0.074715, -0.741913, 0, 1.0};
Point(93) = {0.074487, -0.741674, 0, 1.0};
Point(94) = {0.074180, -0.741425, 0, 1.0};
Point(95) = {0.072421, -0.740496, 0, 1.0};
Point(96) = {0.069958, -0.739645, 0, 1.0};
Point(97) = {0.066707, -0.738831, 0, 1.0};
Point(98) = {0.062695, -0.738082, 0, 1.0};
Point(99) = {0.057944, -0.737422, 0, 1.0};
Point(100) = {0.052472, -0.736852, 0, 1.0};
Point(101) = {0.046325, -0.736355, 0, 1.0};
Point(102) = {0.039569, -0.735919, 0, 1.0};
Point(103) = {0.032279, -0.735534, 0, 1.0};
Point(104) = {0.024538, -0.735197, 0, 1.0};
Point(105) = {0.016433, -0.734904, 0, 1.0};
Point(106) = {0.008055, -0.734652, 0, 1.0};
Point(107) = {-0.000505, -0.734435, 0, 1.0};
Point(108) = {-0.009146, -0.734249, 0, 1.0};
Point(109) = {-0.017771, -0.734088, 0, 1.0};
Point(110) = {-0.026280, -0.733951, 0, 1.0};
Point(111) = {-0.034576, -0.733836, 0, 1.0};
Point(112) = {-0.042567, -0.733736, 0, 1.0};
Point(113) = {-0.050158, -0.733644, 0, 1.0};
Point(114) = {-0.057255, -0.733553, 0, 1.0};
Point(115) = {-0.063769, -0.733458, 0, 1.0};
Point(116) = {-0.069614, -0.733362, 0, 1.0};
Point(117) = {-0.074712, -0.733265, 0, 1.0};
Point(118) = {-0.074848, -0.733261, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:44};
Spline(3) = {44:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:76};
Spline(6) = {76:103};
Spline(7) = {103:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {36.00000000, 15.00000000, 0, 1.0};
Point(122) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
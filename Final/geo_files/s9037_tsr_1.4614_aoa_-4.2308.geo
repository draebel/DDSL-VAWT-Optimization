SetFactory("OpenCASCADE");

Point(1) = {0.074663, 0.745303, 0, 1.0};
Point(2) = {0.072861, 0.745492, 0, 1.0};
Point(3) = {0.070485, 0.745742, 0, 1.0};
Point(4) = {0.067932, 0.746013, 0, 1.0};
Point(5) = {0.065219, 0.746302, 0, 1.0};
Point(6) = {0.062357, 0.746606, 0, 1.0};
Point(7) = {0.059358, 0.746918, 0, 1.0};
Point(8) = {0.056227, 0.747228, 0, 1.0};
Point(9) = {0.052969, 0.747538, 0, 1.0};
Point(10) = {0.049601, 0.747845, 0, 1.0};
Point(11) = {0.046131, 0.748143, 0, 1.0};
Point(12) = {0.042568, 0.748427, 0, 1.0};
Point(13) = {0.038917, 0.748695, 0, 1.0};
Point(14) = {0.035191, 0.748948, 0, 1.0};
Point(15) = {0.031402, 0.749179, 0, 1.0};
Point(16) = {0.027557, 0.749386, 0, 1.0};
Point(17) = {0.023667, 0.749568, 0, 1.0};
Point(18) = {0.019741, 0.749723, 0, 1.0};
Point(19) = {0.015795, 0.749845, 0, 1.0};
Point(20) = {0.011833, 0.749933, 0, 1.0};
Point(21) = {0.007864, 0.749983, 0, 1.0};
Point(22) = {0.003896, 0.750000, 0, 1.0};
Point(23) = {-0.000054, 0.749978, 0, 1.0};
Point(24) = {-0.003983, 0.749914, 0, 1.0};
Point(25) = {-0.007882, 0.749808, 0, 1.0};
Point(26) = {-0.011741, 0.749664, 0, 1.0};
Point(27) = {-0.015547, 0.749479, 0, 1.0};
Point(28) = {-0.019296, 0.749252, 0, 1.0};
Point(29) = {-0.022977, 0.748983, 0, 1.0};
Point(30) = {-0.026581, 0.748673, 0, 1.0};
Point(31) = {-0.030099, 0.748321, 0, 1.0};
Point(32) = {-0.033521, 0.747925, 0, 1.0};
Point(33) = {-0.036849, 0.747487, 0, 1.0};
Point(34) = {-0.040070, 0.747011, 0, 1.0};
Point(35) = {-0.043173, 0.746497, 0, 1.0};
Point(36) = {-0.046158, 0.745942, 0, 1.0};
Point(37) = {-0.049020, 0.745349, 0, 1.0};
Point(38) = {-0.051753, 0.744726, 0, 1.0};
Point(39) = {-0.054345, 0.744073, 0, 1.0};
Point(40) = {-0.056796, 0.743387, 0, 1.0};
Point(41) = {-0.059104, 0.742677, 0, 1.0};
Point(42) = {-0.061264, 0.741945, 0, 1.0};
Point(43) = {-0.063266, 0.741194, 0, 1.0};
Point(44) = {-0.065112, 0.740423, 0, 1.0};
Point(45) = {-0.066802, 0.739639, 0, 1.0};
Point(46) = {-0.068335, 0.738849, 0, 1.0};
Point(47) = {-0.069702, 0.738058, 0, 1.0};
Point(48) = {-0.070903, 0.737267, 0, 1.0};
Point(49) = {-0.071947, 0.736481, 0, 1.0};
Point(50) = {-0.072829, 0.735715, 0, 1.0};
Point(51) = {-0.073544, 0.734975, 0, 1.0};
Point(52) = {-0.074093, 0.734264, 0, 1.0};
Point(53) = {-0.074485, 0.733590, 0, 1.0};
Point(54) = {-0.074720, 0.732977, 0, 1.0};
Point(55) = {-0.074796, 0.732451, 0, 1.0};
Point(56) = {-0.074662, 0.732057, 0, 1.0};
Point(57) = {-0.074267, 0.731758, 0, 1.0};
Point(58) = {-0.073627, 0.731491, 0, 1.0};
Point(59) = {-0.072763, 0.731262, 0, 1.0};
Point(60) = {-0.071684, 0.731077, 0, 1.0};
Point(61) = {-0.070395, 0.730939, 0, 1.0};
Point(62) = {-0.068897, 0.730848, 0, 1.0};
Point(63) = {-0.067192, 0.730807, 0, 1.0};
Point(64) = {-0.065285, 0.730813, 0, 1.0};
Point(65) = {-0.063177, 0.730866, 0, 1.0};
Point(66) = {-0.060875, 0.730965, 0, 1.0};
Point(67) = {-0.058382, 0.731110, 0, 1.0};
Point(68) = {-0.055702, 0.731297, 0, 1.0};
Point(69) = {-0.052844, 0.731524, 0, 1.0};
Point(70) = {-0.049814, 0.731788, 0, 1.0};
Point(71) = {-0.046617, 0.732089, 0, 1.0};
Point(72) = {-0.043263, 0.732421, 0, 1.0};
Point(73) = {-0.039761, 0.732781, 0, 1.0};
Point(74) = {-0.036119, 0.733166, 0, 1.0};
Point(75) = {-0.032349, 0.733574, 0, 1.0};
Point(76) = {-0.028459, 0.734000, 0, 1.0};
Point(77) = {-0.024463, 0.734440, 0, 1.0};
Point(78) = {-0.020371, 0.734892, 0, 1.0};
Point(79) = {-0.016198, 0.735352, 0, 1.0};
Point(80) = {-0.011954, 0.735817, 0, 1.0};
Point(81) = {-0.007655, 0.736286, 0, 1.0};
Point(82) = {-0.003312, 0.736754, 0, 1.0};
Point(83) = {0.001062, 0.737222, 0, 1.0};
Point(84) = {0.005450, 0.737683, 0, 1.0};
Point(85) = {0.009844, 0.738141, 0, 1.0};
Point(86) = {0.014225, 0.738589, 0, 1.0};
Point(87) = {0.018581, 0.739029, 0, 1.0};
Point(88) = {0.022902, 0.739456, 0, 1.0};
Point(89) = {0.027171, 0.739872, 0, 1.0};
Point(90) = {0.031374, 0.740272, 0, 1.0};
Point(91) = {0.035502, 0.740658, 0, 1.0};
Point(92) = {0.039540, 0.741026, 0, 1.0};
Point(93) = {0.043474, 0.741378, 0, 1.0};
Point(94) = {0.047293, 0.741712, 0, 1.0};
Point(95) = {0.050985, 0.742029, 0, 1.0};
Point(96) = {0.054541, 0.742327, 0, 1.0};
Point(97) = {0.057948, 0.742605, 0, 1.0};
Point(98) = {0.061197, 0.742863, 0, 1.0};
Point(99) = {0.064278, 0.743099, 0, 1.0};
Point(100) = {0.067178, 0.743312, 0, 1.0};
Point(101) = {0.069889, 0.743504, 0, 1.0};
Point(102) = {0.072399, 0.743677, 0, 1.0};
Point(103) = {0.074772, 0.743835, 0, 1.0};
Point(104) = {-0.074663, -0.745303, 0, 1.0};
Point(105) = {-0.072861, -0.745492, 0, 1.0};
Point(106) = {-0.070485, -0.745742, 0, 1.0};
Point(107) = {-0.067932, -0.746013, 0, 1.0};
Point(108) = {-0.065219, -0.746302, 0, 1.0};
Point(109) = {-0.062357, -0.746606, 0, 1.0};
Point(110) = {-0.059358, -0.746918, 0, 1.0};
Point(111) = {-0.056227, -0.747228, 0, 1.0};
Point(112) = {-0.052969, -0.747538, 0, 1.0};
Point(113) = {-0.049601, -0.747845, 0, 1.0};
Point(114) = {-0.046131, -0.748143, 0, 1.0};
Point(115) = {-0.042568, -0.748427, 0, 1.0};
Point(116) = {-0.038917, -0.748695, 0, 1.0};
Point(117) = {-0.035191, -0.748948, 0, 1.0};
Point(118) = {-0.031402, -0.749179, 0, 1.0};
Point(119) = {-0.027557, -0.749386, 0, 1.0};
Point(120) = {-0.023667, -0.749568, 0, 1.0};
Point(121) = {-0.019741, -0.749723, 0, 1.0};
Point(122) = {-0.015795, -0.749845, 0, 1.0};
Point(123) = {-0.011833, -0.749933, 0, 1.0};
Point(124) = {-0.007864, -0.749983, 0, 1.0};
Point(125) = {-0.003896, -0.750000, 0, 1.0};
Point(126) = {0.000054, -0.749978, 0, 1.0};
Point(127) = {0.003983, -0.749914, 0, 1.0};
Point(128) = {0.007882, -0.749808, 0, 1.0};
Point(129) = {0.011741, -0.749664, 0, 1.0};
Point(130) = {0.015547, -0.749479, 0, 1.0};
Point(131) = {0.019296, -0.749252, 0, 1.0};
Point(132) = {0.022977, -0.748983, 0, 1.0};
Point(133) = {0.026581, -0.748673, 0, 1.0};
Point(134) = {0.030099, -0.748321, 0, 1.0};
Point(135) = {0.033521, -0.747925, 0, 1.0};
Point(136) = {0.036849, -0.747487, 0, 1.0};
Point(137) = {0.040070, -0.747011, 0, 1.0};
Point(138) = {0.043173, -0.746497, 0, 1.0};
Point(139) = {0.046158, -0.745942, 0, 1.0};
Point(140) = {0.049020, -0.745349, 0, 1.0};
Point(141) = {0.051753, -0.744726, 0, 1.0};
Point(142) = {0.054345, -0.744073, 0, 1.0};
Point(143) = {0.056796, -0.743387, 0, 1.0};
Point(144) = {0.059104, -0.742677, 0, 1.0};
Point(145) = {0.061264, -0.741945, 0, 1.0};
Point(146) = {0.063266, -0.741194, 0, 1.0};
Point(147) = {0.065112, -0.740423, 0, 1.0};
Point(148) = {0.066802, -0.739639, 0, 1.0};
Point(149) = {0.068335, -0.738849, 0, 1.0};
Point(150) = {0.069702, -0.738058, 0, 1.0};
Point(151) = {0.070903, -0.737267, 0, 1.0};
Point(152) = {0.071947, -0.736481, 0, 1.0};
Point(153) = {0.072829, -0.735715, 0, 1.0};
Point(154) = {0.073544, -0.734975, 0, 1.0};
Point(155) = {0.074093, -0.734264, 0, 1.0};
Point(156) = {0.074485, -0.733590, 0, 1.0};
Point(157) = {0.074720, -0.732977, 0, 1.0};
Point(158) = {0.074796, -0.732451, 0, 1.0};
Point(159) = {0.074662, -0.732057, 0, 1.0};
Point(160) = {0.074267, -0.731758, 0, 1.0};
Point(161) = {0.073627, -0.731491, 0, 1.0};
Point(162) = {0.072763, -0.731262, 0, 1.0};
Point(163) = {0.071684, -0.731077, 0, 1.0};
Point(164) = {0.070395, -0.730939, 0, 1.0};
Point(165) = {0.068897, -0.730848, 0, 1.0};
Point(166) = {0.067192, -0.730807, 0, 1.0};
Point(167) = {0.065285, -0.730813, 0, 1.0};
Point(168) = {0.063177, -0.730866, 0, 1.0};
Point(169) = {0.060875, -0.730965, 0, 1.0};
Point(170) = {0.058382, -0.731110, 0, 1.0};
Point(171) = {0.055702, -0.731297, 0, 1.0};
Point(172) = {0.052844, -0.731524, 0, 1.0};
Point(173) = {0.049814, -0.731788, 0, 1.0};
Point(174) = {0.046617, -0.732089, 0, 1.0};
Point(175) = {0.043263, -0.732421, 0, 1.0};
Point(176) = {0.039761, -0.732781, 0, 1.0};
Point(177) = {0.036119, -0.733166, 0, 1.0};
Point(178) = {0.032349, -0.733574, 0, 1.0};
Point(179) = {0.028459, -0.734000, 0, 1.0};
Point(180) = {0.024463, -0.734440, 0, 1.0};
Point(181) = {0.020371, -0.734892, 0, 1.0};
Point(182) = {0.016198, -0.735352, 0, 1.0};
Point(183) = {0.011954, -0.735817, 0, 1.0};
Point(184) = {0.007655, -0.736286, 0, 1.0};
Point(185) = {0.003312, -0.736754, 0, 1.0};
Point(186) = {-0.001062, -0.737222, 0, 1.0};
Point(187) = {-0.005450, -0.737683, 0, 1.0};
Point(188) = {-0.009844, -0.738141, 0, 1.0};
Point(189) = {-0.014225, -0.738589, 0, 1.0};
Point(190) = {-0.018581, -0.739029, 0, 1.0};
Point(191) = {-0.022902, -0.739456, 0, 1.0};
Point(192) = {-0.027171, -0.739872, 0, 1.0};
Point(193) = {-0.031374, -0.740272, 0, 1.0};
Point(194) = {-0.035502, -0.740658, 0, 1.0};
Point(195) = {-0.039540, -0.741026, 0, 1.0};
Point(196) = {-0.043474, -0.741378, 0, 1.0};
Point(197) = {-0.047293, -0.741712, 0, 1.0};
Point(198) = {-0.050985, -0.742029, 0, 1.0};
Point(199) = {-0.054541, -0.742327, 0, 1.0};
Point(200) = {-0.057948, -0.742605, 0, 1.0};
Point(201) = {-0.061197, -0.742863, 0, 1.0};
Point(202) = {-0.064278, -0.743099, 0, 1.0};
Point(203) = {-0.067178, -0.743312, 0, 1.0};
Point(204) = {-0.069889, -0.743504, 0, 1.0};
Point(205) = {-0.072399, -0.743677, 0, 1.0};
Point(206) = {-0.074772, -0.743835, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:32};
Spline(2) = {32:74};
Spline(3) = {74:103};
Spline(4) = {103,1};

// Lines: second blade (splines 5-8)
Spline(5) = {104:135};
Spline(6) = {135:177};
Spline(7) = {177:206};
Spline(8) = {206,104};

// Outer domain (points 20001-4 and lines)
Point(207) = {-13.50000000, -15.00000000, 0, 1.0};
Point(208) = {-13.50000000, 15.00000000, 0, 1.0};
Point(209) = {36.00000000, 15.00000000, 0, 1.0};
Point(210) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {207, 208};
Line(12) = {208, 209};
Line(13) = {209, 210};
Line(14) = {207, 210};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
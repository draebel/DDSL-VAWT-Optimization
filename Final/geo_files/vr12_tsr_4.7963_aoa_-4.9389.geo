SetFactory("OpenCASCADE");

Point(1) = {0.074616, 0.747513, 0, 1.0};
Point(2) = {0.074116, 0.747493, 0, 1.0};
Point(3) = {0.073614, 0.747493, 0, 1.0};
Point(4) = {0.072609, 0.747503, 0, 1.0};
Point(5) = {0.071603, 0.747527, 0, 1.0};
Point(6) = {0.070092, 0.747591, 0, 1.0};
Point(7) = {0.068072, 0.747734, 0, 1.0};
Point(8) = {0.065545, 0.747945, 0, 1.0};
Point(9) = {0.062512, 0.748199, 0, 1.0};
Point(10) = {0.058973, 0.748502, 0, 1.0};
Point(11) = {0.055434, 0.748793, 0, 1.0};
Point(12) = {0.051395, 0.749080, 0, 1.0};
Point(13) = {0.047356, 0.749355, 0, 1.0};
Point(14) = {0.043319, 0.749609, 0, 1.0};
Point(15) = {0.039287, 0.749805, 0, 1.0};
Point(16) = {0.034255, 0.749964, 0, 1.0};
Point(17) = {0.029233, 0.750000, 0, 1.0};
Point(18) = {0.024219, 0.749943, 0, 1.0};
Point(19) = {0.019215, 0.749777, 0, 1.0};
Point(20) = {0.014216, 0.749550, 0, 1.0};
Point(21) = {0.009226, 0.749225, 0, 1.0};
Point(22) = {0.004242, 0.748819, 0, 1.0};
Point(23) = {-0.000735, 0.748339, 0, 1.0};
Point(24) = {-0.005704, 0.747769, 0, 1.0};
Point(25) = {-0.010658, 0.747020, 0, 1.0};
Point(26) = {-0.014207, 0.746271, 0, 1.0};
Point(27) = {-0.016754, 0.745549, 0, 1.0};
Point(28) = {-0.018652, 0.744853, 0, 1.0};
Point(29) = {-0.020098, 0.744166, 0, 1.0};
Point(30) = {-0.021236, 0.743521, 0, 1.0};
Point(31) = {-0.022144, 0.742936, 0, 1.0};
Point(32) = {-0.022855, 0.742386, 0, 1.0};
Point(33) = {-0.023404, 0.741895, 0, 1.0};
Point(34) = {-0.023815, 0.741476, 0, 1.0};
Point(35) = {-0.024098, 0.741147, 0, 1.0};
Point(36) = {-0.024283, 0.740905, 0, 1.0};
Point(37) = {-0.024461, 0.740643, 0, 1.0};
Point(38) = {-0.024618, 0.740375, 0, 1.0};
Point(39) = {-0.024771, 0.740058, 0, 1.0};
Point(40) = {-0.024889, 0.739736, 0, 1.0};
Point(41) = {-0.024974, 0.739379, 0, 1.0};
Point(42) = {-0.025009, 0.738995, 0, 1.0};
Point(43) = {-0.025000, 0.738754, 0, 1.0};
Point(44) = {-0.024924, 0.738510, 0, 1.0};
Point(45) = {-0.024760, 0.738303, 0, 1.0};
Point(46) = {-0.024543, 0.738116, 0, 1.0};
Point(47) = {-0.024310, 0.737971, 0, 1.0};
Point(48) = {-0.024059, 0.737849, 0, 1.0};
Point(49) = {-0.023810, 0.737758, 0, 1.0};
Point(50) = {-0.023435, 0.737655, 0, 1.0};
Point(51) = {-0.022936, 0.737577, 0, 1.0};
Point(52) = {-0.022267, 0.737505, 0, 1.0};
Point(53) = {-0.021445, 0.737450, 0, 1.0};
Point(54) = {-0.020418, 0.737404, 0, 1.0};
Point(55) = {-0.019168, 0.737361, 0, 1.0};
Point(56) = {-0.017605, 0.737335, 0, 1.0};
Point(57) = {-0.015604, 0.737348, 0, 1.0};
Point(58) = {-0.012989, 0.737398, 0, 1.0};
Point(59) = {-0.009836, 0.737500, 0, 1.0};
Point(60) = {-0.004837, 0.737726, 0, 1.0};
Point(61) = {0.000158, 0.738007, 0, 1.0};
Point(62) = {0.005148, 0.738338, 0, 1.0};
Point(63) = {0.010135, 0.738699, 0, 1.0};
Point(64) = {0.015119, 0.739099, 0, 1.0};
Point(65) = {0.020100, 0.739540, 0, 1.0};
Point(66) = {0.025078, 0.740005, 0, 1.0};
Point(67) = {0.030054, 0.740500, 0, 1.0};
Point(68) = {0.035027, 0.741024, 0, 1.0};
Point(69) = {0.039998, 0.741583, 0, 1.0};
Point(70) = {0.043971, 0.742062, 0, 1.0};
Point(71) = {0.047943, 0.742566, 0, 1.0};
Point(72) = {0.051911, 0.743101, 0, 1.0};
Point(73) = {0.055878, 0.743664, 0, 1.0};
Point(74) = {0.059346, 0.744184, 0, 1.0};
Point(75) = {0.062811, 0.744731, 0, 1.0};
Point(76) = {0.065777, 0.745262, 0, 1.0};
Point(77) = {0.068246, 0.745724, 0, 1.0};
Point(78) = {0.070221, 0.746102, 0, 1.0};
Point(79) = {0.071698, 0.746429, 0, 1.0};
Point(80) = {0.072681, 0.746671, 0, 1.0};
Point(81) = {0.073663, 0.746922, 0, 1.0};
Point(82) = {0.074152, 0.747068, 0, 1.0};
Point(83) = {0.074642, 0.747214, 0, 1.0};
Point(84) = {-0.074616, -0.747513, 0, 1.0};
Point(85) = {-0.074116, -0.747493, 0, 1.0};
Point(86) = {-0.073614, -0.747493, 0, 1.0};
Point(87) = {-0.072609, -0.747503, 0, 1.0};
Point(88) = {-0.071603, -0.747527, 0, 1.0};
Point(89) = {-0.070092, -0.747591, 0, 1.0};
Point(90) = {-0.068072, -0.747734, 0, 1.0};
Point(91) = {-0.065545, -0.747945, 0, 1.0};
Point(92) = {-0.062512, -0.748199, 0, 1.0};
Point(93) = {-0.058973, -0.748502, 0, 1.0};
Point(94) = {-0.055434, -0.748793, 0, 1.0};
Point(95) = {-0.051395, -0.749080, 0, 1.0};
Point(96) = {-0.047356, -0.749355, 0, 1.0};
Point(97) = {-0.043319, -0.749609, 0, 1.0};
Point(98) = {-0.039287, -0.749805, 0, 1.0};
Point(99) = {-0.034255, -0.749964, 0, 1.0};
Point(100) = {-0.029233, -0.750000, 0, 1.0};
Point(101) = {-0.024219, -0.749943, 0, 1.0};
Point(102) = {-0.019215, -0.749777, 0, 1.0};
Point(103) = {-0.014216, -0.749550, 0, 1.0};
Point(104) = {-0.009226, -0.749225, 0, 1.0};
Point(105) = {-0.004242, -0.748819, 0, 1.0};
Point(106) = {0.000735, -0.748339, 0, 1.0};
Point(107) = {0.005704, -0.747769, 0, 1.0};
Point(108) = {0.010658, -0.747020, 0, 1.0};
Point(109) = {0.014207, -0.746271, 0, 1.0};
Point(110) = {0.016754, -0.745549, 0, 1.0};
Point(111) = {0.018652, -0.744853, 0, 1.0};
Point(112) = {0.020098, -0.744166, 0, 1.0};
Point(113) = {0.021236, -0.743521, 0, 1.0};
Point(114) = {0.022144, -0.742936, 0, 1.0};
Point(115) = {0.022855, -0.742386, 0, 1.0};
Point(116) = {0.023404, -0.741895, 0, 1.0};
Point(117) = {0.023815, -0.741476, 0, 1.0};
Point(118) = {0.024098, -0.741147, 0, 1.0};
Point(119) = {0.024283, -0.740905, 0, 1.0};
Point(120) = {0.024461, -0.740643, 0, 1.0};
Point(121) = {0.024618, -0.740375, 0, 1.0};
Point(122) = {0.024771, -0.740058, 0, 1.0};
Point(123) = {0.024889, -0.739736, 0, 1.0};
Point(124) = {0.024974, -0.739379, 0, 1.0};
Point(125) = {0.025009, -0.738995, 0, 1.0};
Point(126) = {0.025000, -0.738754, 0, 1.0};
Point(127) = {0.024924, -0.738510, 0, 1.0};
Point(128) = {0.024760, -0.738303, 0, 1.0};
Point(129) = {0.024543, -0.738116, 0, 1.0};
Point(130) = {0.024310, -0.737971, 0, 1.0};
Point(131) = {0.024059, -0.737849, 0, 1.0};
Point(132) = {0.023810, -0.737758, 0, 1.0};
Point(133) = {0.023435, -0.737655, 0, 1.0};
Point(134) = {0.022936, -0.737577, 0, 1.0};
Point(135) = {0.022267, -0.737505, 0, 1.0};
Point(136) = {0.021445, -0.737450, 0, 1.0};
Point(137) = {0.020418, -0.737404, 0, 1.0};
Point(138) = {0.019168, -0.737361, 0, 1.0};
Point(139) = {0.017605, -0.737335, 0, 1.0};
Point(140) = {0.015604, -0.737348, 0, 1.0};
Point(141) = {0.012989, -0.737398, 0, 1.0};
Point(142) = {0.009836, -0.737500, 0, 1.0};
Point(143) = {0.004837, -0.737726, 0, 1.0};
Point(144) = {-0.000158, -0.738007, 0, 1.0};
Point(145) = {-0.005148, -0.738338, 0, 1.0};
Point(146) = {-0.010135, -0.738699, 0, 1.0};
Point(147) = {-0.015119, -0.739099, 0, 1.0};
Point(148) = {-0.020100, -0.739540, 0, 1.0};
Point(149) = {-0.025078, -0.740005, 0, 1.0};
Point(150) = {-0.030054, -0.740500, 0, 1.0};
Point(151) = {-0.035027, -0.741024, 0, 1.0};
Point(152) = {-0.039998, -0.741583, 0, 1.0};
Point(153) = {-0.043971, -0.742062, 0, 1.0};
Point(154) = {-0.047943, -0.742566, 0, 1.0};
Point(155) = {-0.051911, -0.743101, 0, 1.0};
Point(156) = {-0.055878, -0.743664, 0, 1.0};
Point(157) = {-0.059346, -0.744184, 0, 1.0};
Point(158) = {-0.062811, -0.744731, 0, 1.0};
Point(159) = {-0.065777, -0.745262, 0, 1.0};
Point(160) = {-0.068246, -0.745724, 0, 1.0};
Point(161) = {-0.070221, -0.746102, 0, 1.0};
Point(162) = {-0.071698, -0.746429, 0, 1.0};
Point(163) = {-0.072681, -0.746671, 0, 1.0};
Point(164) = {-0.073663, -0.746922, 0, 1.0};
Point(165) = {-0.074152, -0.747068, 0, 1.0};
Point(166) = {-0.074642, -0.747214, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:23};
Spline(2) = {23:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:106};
Spline(6) = {106:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
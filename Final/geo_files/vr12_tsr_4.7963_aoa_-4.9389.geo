SetFactory("OpenCASCADE");

Point(1) = {0.074671, 0.746179, 0, 1.0};
Point(2) = {0.074063, 0.746191, 0, 1.0};
Point(3) = {0.071736, 0.746290, 0, 1.0};
Point(4) = {0.068625, 0.746510, 0, 1.0};
Point(5) = {0.064732, 0.746835, 0, 1.0};
Point(6) = {0.060061, 0.747226, 0, 1.0};
Point(7) = {0.054610, 0.747693, 0, 1.0};
Point(8) = {0.049160, 0.748140, 0, 1.0};
Point(9) = {0.042939, 0.748583, 0, 1.0};
Point(10) = {0.036718, 0.749007, 0, 1.0};
Point(11) = {0.030501, 0.749397, 0, 1.0};
Point(12) = {0.024291, 0.749699, 0, 1.0};
Point(13) = {0.016541, 0.749944, 0, 1.0};
Point(14) = {0.008806, 0.750000, 0, 1.0};
Point(15) = {0.001084, 0.749912, 0, 1.0};
Point(16) = {-0.006623, 0.749656, 0, 1.0};
Point(17) = {-0.014322, 0.749308, 0, 1.0};
Point(18) = {-0.022009, 0.748806, 0, 1.0};
Point(19) = {-0.029684, 0.748181, 0, 1.0};
Point(20) = {-0.037350, 0.747441, 0, 1.0};
Point(21) = {-0.045003, 0.746564, 0, 1.0};
Point(22) = {-0.052633, 0.745410, 0, 1.0};
Point(23) = {-0.058099, 0.744257, 0, 1.0};
Point(24) = {-0.062022, 0.743145, 0, 1.0};
Point(25) = {-0.064944, 0.742073, 0, 1.0};
Point(26) = {-0.067171, 0.741015, 0, 1.0};
Point(27) = {-0.068925, 0.740021, 0, 1.0};
Point(28) = {-0.070324, 0.739121, 0, 1.0};
Point(29) = {-0.071417, 0.738274, 0, 1.0};
Point(30) = {-0.072264, 0.737517, 0, 1.0};
Point(31) = {-0.072896, 0.736872, 0, 1.0};
Point(32) = {-0.073332, 0.736364, 0, 1.0};
Point(33) = {-0.073617, 0.735992, 0, 1.0};
Point(34) = {-0.073891, 0.735589, 0, 1.0};
Point(35) = {-0.074133, 0.735176, 0, 1.0};
Point(36) = {-0.074369, 0.734688, 0, 1.0};
Point(37) = {-0.074551, 0.734192, 0, 1.0};
Point(38) = {-0.074681, 0.733642, 0, 1.0};
Point(39) = {-0.074735, 0.733050, 0, 1.0};
Point(40) = {-0.074722, 0.732680, 0, 1.0};
Point(41) = {-0.074604, 0.732303, 0, 1.0};
Point(42) = {-0.074352, 0.731985, 0, 1.0};
Point(43) = {-0.074018, 0.731697, 0, 1.0};
Point(44) = {-0.073659, 0.731473, 0, 1.0};
Point(45) = {-0.073272, 0.731285, 0, 1.0};
Point(46) = {-0.072888, 0.731145, 0, 1.0};
Point(47) = {-0.072310, 0.730986, 0, 1.0};
Point(48) = {-0.071543, 0.730867, 0, 1.0};
Point(49) = {-0.070513, 0.730755, 0, 1.0};
Point(50) = {-0.069246, 0.730672, 0, 1.0};
Point(51) = {-0.067664, 0.730600, 0, 1.0};
Point(52) = {-0.065740, 0.730534, 0, 1.0};
Point(53) = {-0.063333, 0.730495, 0, 1.0};
Point(54) = {-0.060250, 0.730514, 0, 1.0};
Point(55) = {-0.056222, 0.730591, 0, 1.0};
Point(56) = {-0.051366, 0.730748, 0, 1.0};
Point(57) = {-0.043667, 0.731096, 0, 1.0};
Point(58) = {-0.035975, 0.731529, 0, 1.0};
Point(59) = {-0.028289, 0.732039, 0, 1.0};
Point(60) = {-0.020608, 0.732594, 0, 1.0};
Point(61) = {-0.012931, 0.733211, 0, 1.0};
Point(62) = {-0.005261, 0.733890, 0, 1.0};
Point(63) = {0.002407, 0.734606, 0, 1.0};
Point(64) = {0.010071, 0.735369, 0, 1.0};
Point(65) = {0.017730, 0.736175, 0, 1.0};
Point(66) = {0.025386, 0.737036, 0, 1.0};
Point(67) = {0.031505, 0.737774, 0, 1.0};
Point(68) = {0.037622, 0.738550, 0, 1.0};
Point(69) = {0.043734, 0.739375, 0, 1.0};
Point(70) = {0.049843, 0.740242, 0, 1.0};
Point(71) = {0.055185, 0.741042, 0, 1.0};
Point(72) = {0.060522, 0.741885, 0, 1.0};
Point(73) = {0.065089, 0.742703, 0, 1.0};
Point(74) = {0.068893, 0.743415, 0, 1.0};
Point(75) = {0.071934, 0.743997, 0, 1.0};
Point(76) = {0.074209, 0.744501, 0, 1.0};
Point(77) = {0.074803, 0.744645, 0, 1.0};
Point(78) = {-0.074671, -0.746179, 0, 1.0};
Point(79) = {-0.074063, -0.746191, 0, 1.0};
Point(80) = {-0.071736, -0.746290, 0, 1.0};
Point(81) = {-0.068625, -0.746510, 0, 1.0};
Point(82) = {-0.064732, -0.746835, 0, 1.0};
Point(83) = {-0.060061, -0.747226, 0, 1.0};
Point(84) = {-0.054610, -0.747693, 0, 1.0};
Point(85) = {-0.049160, -0.748140, 0, 1.0};
Point(86) = {-0.042939, -0.748583, 0, 1.0};
Point(87) = {-0.036718, -0.749007, 0, 1.0};
Point(88) = {-0.030501, -0.749397, 0, 1.0};
Point(89) = {-0.024291, -0.749699, 0, 1.0};
Point(90) = {-0.016541, -0.749944, 0, 1.0};
Point(91) = {-0.008806, -0.750000, 0, 1.0};
Point(92) = {-0.001084, -0.749912, 0, 1.0};
Point(93) = {0.006623, -0.749656, 0, 1.0};
Point(94) = {0.014322, -0.749308, 0, 1.0};
Point(95) = {0.022009, -0.748806, 0, 1.0};
Point(96) = {0.029684, -0.748181, 0, 1.0};
Point(97) = {0.037350, -0.747441, 0, 1.0};
Point(98) = {0.045003, -0.746564, 0, 1.0};
Point(99) = {0.052633, -0.745410, 0, 1.0};
Point(100) = {0.058099, -0.744257, 0, 1.0};
Point(101) = {0.062022, -0.743145, 0, 1.0};
Point(102) = {0.064944, -0.742073, 0, 1.0};
Point(103) = {0.067171, -0.741015, 0, 1.0};
Point(104) = {0.068925, -0.740021, 0, 1.0};
Point(105) = {0.070324, -0.739121, 0, 1.0};
Point(106) = {0.071417, -0.738274, 0, 1.0};
Point(107) = {0.072264, -0.737517, 0, 1.0};
Point(108) = {0.072896, -0.736872, 0, 1.0};
Point(109) = {0.073332, -0.736364, 0, 1.0};
Point(110) = {0.073617, -0.735992, 0, 1.0};
Point(111) = {0.073891, -0.735589, 0, 1.0};
Point(112) = {0.074133, -0.735176, 0, 1.0};
Point(113) = {0.074369, -0.734688, 0, 1.0};
Point(114) = {0.074551, -0.734192, 0, 1.0};
Point(115) = {0.074681, -0.733642, 0, 1.0};
Point(116) = {0.074735, -0.733050, 0, 1.0};
Point(117) = {0.074722, -0.732680, 0, 1.0};
Point(118) = {0.074604, -0.732303, 0, 1.0};
Point(119) = {0.074352, -0.731985, 0, 1.0};
Point(120) = {0.074018, -0.731697, 0, 1.0};
Point(121) = {0.073659, -0.731473, 0, 1.0};
Point(122) = {0.073272, -0.731285, 0, 1.0};
Point(123) = {0.072888, -0.731145, 0, 1.0};
Point(124) = {0.072310, -0.730986, 0, 1.0};
Point(125) = {0.071543, -0.730867, 0, 1.0};
Point(126) = {0.070513, -0.730755, 0, 1.0};
Point(127) = {0.069246, -0.730672, 0, 1.0};
Point(128) = {0.067664, -0.730600, 0, 1.0};
Point(129) = {0.065740, -0.730534, 0, 1.0};
Point(130) = {0.063333, -0.730495, 0, 1.0};
Point(131) = {0.060250, -0.730514, 0, 1.0};
Point(132) = {0.056222, -0.730591, 0, 1.0};
Point(133) = {0.051366, -0.730748, 0, 1.0};
Point(134) = {0.043667, -0.731096, 0, 1.0};
Point(135) = {0.035975, -0.731529, 0, 1.0};
Point(136) = {0.028289, -0.732039, 0, 1.0};
Point(137) = {0.020608, -0.732594, 0, 1.0};
Point(138) = {0.012931, -0.733211, 0, 1.0};
Point(139) = {0.005261, -0.733890, 0, 1.0};
Point(140) = {-0.002407, -0.734606, 0, 1.0};
Point(141) = {-0.010071, -0.735369, 0, 1.0};
Point(142) = {-0.017730, -0.736175, 0, 1.0};
Point(143) = {-0.025386, -0.737036, 0, 1.0};
Point(144) = {-0.031505, -0.737774, 0, 1.0};
Point(145) = {-0.037622, -0.738550, 0, 1.0};
Point(146) = {-0.043734, -0.739375, 0, 1.0};
Point(147) = {-0.049843, -0.740242, 0, 1.0};
Point(148) = {-0.055185, -0.741042, 0, 1.0};
Point(149) = {-0.060522, -0.741885, 0, 1.0};
Point(150) = {-0.065089, -0.742703, 0, 1.0};
Point(151) = {-0.068893, -0.743415, 0, 1.0};
Point(152) = {-0.071934, -0.743997, 0, 1.0};
Point(153) = {-0.074209, -0.744501, 0, 1.0};
Point(154) = {-0.074803, -0.744645, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:59};
Spline(3) = {59:77};
Spline(4) = {77,1};

// Lines: second blade (splines 5-8)
Spline(5) = {78:97};
Spline(6) = {97:136};
Spline(7) = {136:154};
Spline(8) = {154,78};

// Outer domain (points 20001-4 and lines)
Point(155) = {-13.50000000, -15.00000000, 0, 1.0};
Point(156) = {-13.50000000, 15.00000000, 0, 1.0};
Point(157) = {13.50000000, 15.00000000, 0, 1.0};
Point(158) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {155, 156};
Line(12) = {156, 157};
Line(13) = {157, 158};
Line(14) = {155, 158};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
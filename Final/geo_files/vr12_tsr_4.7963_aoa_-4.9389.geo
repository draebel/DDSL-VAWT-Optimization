SetFactory("OpenCASCADE");

Point(1) = {0.074702, 0.746269, 0, 1.0};
Point(2) = {0.073952, 0.746239, 0, 1.0};
Point(3) = {0.073199, 0.746239, 0, 1.0};
Point(4) = {0.071692, 0.746254, 0, 1.0};
Point(5) = {0.070184, 0.746291, 0, 1.0};
Point(6) = {0.067917, 0.746386, 0, 1.0};
Point(7) = {0.064887, 0.746601, 0, 1.0};
Point(8) = {0.061096, 0.746918, 0, 1.0};
Point(9) = {0.056546, 0.747298, 0, 1.0};
Point(10) = {0.051237, 0.747753, 0, 1.0};
Point(11) = {0.045930, 0.748189, 0, 1.0};
Point(12) = {0.039870, 0.748620, 0, 1.0};
Point(13) = {0.033812, 0.749033, 0, 1.0};
Point(14) = {0.027757, 0.749413, 0, 1.0};
Point(15) = {0.021709, 0.749707, 0, 1.0};
Point(16) = {0.014161, 0.749946, 0, 1.0};
Point(17) = {0.006628, 0.750000, 0, 1.0};
Point(18) = {-0.000892, 0.749915, 0, 1.0};
Point(19) = {-0.008399, 0.749665, 0, 1.0};
Point(20) = {-0.015897, 0.749326, 0, 1.0};
Point(21) = {-0.023383, 0.748837, 0, 1.0};
Point(22) = {-0.030858, 0.748229, 0, 1.0};
Point(23) = {-0.038324, 0.747508, 0, 1.0};
Point(24) = {-0.045778, 0.746653, 0, 1.0};
Point(25) = {-0.053209, 0.745529, 0, 1.0};
Point(26) = {-0.058532, 0.744407, 0, 1.0};
Point(27) = {-0.062353, 0.743324, 0, 1.0};
Point(28) = {-0.065199, 0.742280, 0, 1.0};
Point(29) = {-0.067368, 0.741249, 0, 1.0};
Point(30) = {-0.069076, 0.740281, 0, 1.0};
Point(31) = {-0.070438, 0.739405, 0, 1.0};
Point(32) = {-0.071504, 0.738579, 0, 1.0};
Point(33) = {-0.072328, 0.737843, 0, 1.0};
Point(34) = {-0.072944, 0.737214, 0, 1.0};
Point(35) = {-0.073368, 0.736720, 0, 1.0};
Point(36) = {-0.073645, 0.736358, 0, 1.0};
Point(37) = {-0.073912, 0.735965, 0, 1.0};
Point(38) = {-0.074149, 0.735563, 0, 1.0};
Point(39) = {-0.074379, 0.735087, 0, 1.0};
Point(40) = {-0.074555, 0.734604, 0, 1.0};
Point(41) = {-0.074682, 0.734069, 0, 1.0};
Point(42) = {-0.074735, 0.733492, 0, 1.0};
Point(43) = {-0.074722, 0.733131, 0, 1.0};
Point(44) = {-0.074607, 0.732765, 0, 1.0};
Point(45) = {-0.074362, 0.732455, 0, 1.0};
Point(46) = {-0.074037, 0.732174, 0, 1.0};
Point(47) = {-0.073687, 0.731956, 0, 1.0};
Point(48) = {-0.073309, 0.731773, 0, 1.0};
Point(49) = {-0.072936, 0.731637, 0, 1.0};
Point(50) = {-0.072373, 0.731482, 0, 1.0};
Point(51) = {-0.071626, 0.731366, 0, 1.0};
Point(52) = {-0.070622, 0.731257, 0, 1.0};
Point(53) = {-0.069388, 0.731176, 0, 1.0};
Point(54) = {-0.067848, 0.731105, 0, 1.0};
Point(55) = {-0.065974, 0.731042, 0, 1.0};
Point(56) = {-0.063630, 0.731003, 0, 1.0};
Point(57) = {-0.060628, 0.731022, 0, 1.0};
Point(58) = {-0.056705, 0.731097, 0, 1.0};
Point(59) = {-0.051975, 0.731250, 0, 1.0};
Point(60) = {-0.044476, 0.731589, 0, 1.0};
Point(61) = {-0.036985, 0.732011, 0, 1.0};
Point(62) = {-0.029500, 0.732507, 0, 1.0};
Point(63) = {-0.022019, 0.733048, 0, 1.0};
Point(64) = {-0.014543, 0.733649, 0, 1.0};
Point(65) = {-0.007072, 0.734310, 0, 1.0};
Point(66) = {0.000396, 0.735008, 0, 1.0};
Point(67) = {0.007860, 0.735751, 0, 1.0};
Point(68) = {0.015320, 0.736536, 0, 1.0};
Point(69) = {0.022775, 0.737375, 0, 1.0};
Point(70) = {0.028735, 0.738093, 0, 1.0};
Point(71) = {0.034692, 0.738849, 0, 1.0};
Point(72) = {0.040645, 0.739652, 0, 1.0};
Point(73) = {0.046595, 0.740496, 0, 1.0};
Point(74) = {0.051797, 0.741276, 0, 1.0};
Point(75) = {0.056996, 0.742097, 0, 1.0};
Point(76) = {0.061444, 0.742893, 0, 1.0};
Point(77) = {0.065148, 0.743587, 0, 1.0};
Point(78) = {0.068110, 0.744153, 0, 1.0};
Point(79) = {0.070326, 0.744644, 0, 1.0};
Point(80) = {0.071800, 0.745006, 0, 1.0};
Point(81) = {0.073273, 0.745384, 0, 1.0};
Point(82) = {0.074007, 0.745602, 0, 1.0};
Point(83) = {0.074741, 0.745821, 0, 1.0};
Point(84) = {-0.074702, -0.746269, 0, 1.0};
Point(85) = {-0.073952, -0.746239, 0, 1.0};
Point(86) = {-0.073199, -0.746239, 0, 1.0};
Point(87) = {-0.071692, -0.746254, 0, 1.0};
Point(88) = {-0.070184, -0.746291, 0, 1.0};
Point(89) = {-0.067917, -0.746386, 0, 1.0};
Point(90) = {-0.064887, -0.746601, 0, 1.0};
Point(91) = {-0.061096, -0.746918, 0, 1.0};
Point(92) = {-0.056546, -0.747298, 0, 1.0};
Point(93) = {-0.051237, -0.747753, 0, 1.0};
Point(94) = {-0.045930, -0.748189, 0, 1.0};
Point(95) = {-0.039870, -0.748620, 0, 1.0};
Point(96) = {-0.033812, -0.749033, 0, 1.0};
Point(97) = {-0.027757, -0.749413, 0, 1.0};
Point(98) = {-0.021709, -0.749707, 0, 1.0};
Point(99) = {-0.014161, -0.749946, 0, 1.0};
Point(100) = {-0.006628, -0.750000, 0, 1.0};
Point(101) = {0.000892, -0.749915, 0, 1.0};
Point(102) = {0.008399, -0.749665, 0, 1.0};
Point(103) = {0.015897, -0.749326, 0, 1.0};
Point(104) = {0.023383, -0.748837, 0, 1.0};
Point(105) = {0.030858, -0.748229, 0, 1.0};
Point(106) = {0.038324, -0.747508, 0, 1.0};
Point(107) = {0.045778, -0.746653, 0, 1.0};
Point(108) = {0.053209, -0.745529, 0, 1.0};
Point(109) = {0.058532, -0.744407, 0, 1.0};
Point(110) = {0.062353, -0.743324, 0, 1.0};
Point(111) = {0.065199, -0.742280, 0, 1.0};
Point(112) = {0.067368, -0.741249, 0, 1.0};
Point(113) = {0.069076, -0.740281, 0, 1.0};
Point(114) = {0.070438, -0.739405, 0, 1.0};
Point(115) = {0.071504, -0.738579, 0, 1.0};
Point(116) = {0.072328, -0.737843, 0, 1.0};
Point(117) = {0.072944, -0.737214, 0, 1.0};
Point(118) = {0.073368, -0.736720, 0, 1.0};
Point(119) = {0.073645, -0.736358, 0, 1.0};
Point(120) = {0.073912, -0.735965, 0, 1.0};
Point(121) = {0.074149, -0.735563, 0, 1.0};
Point(122) = {0.074379, -0.735087, 0, 1.0};
Point(123) = {0.074555, -0.734604, 0, 1.0};
Point(124) = {0.074682, -0.734069, 0, 1.0};
Point(125) = {0.074735, -0.733492, 0, 1.0};
Point(126) = {0.074722, -0.733131, 0, 1.0};
Point(127) = {0.074607, -0.732765, 0, 1.0};
Point(128) = {0.074362, -0.732455, 0, 1.0};
Point(129) = {0.074037, -0.732174, 0, 1.0};
Point(130) = {0.073687, -0.731956, 0, 1.0};
Point(131) = {0.073309, -0.731773, 0, 1.0};
Point(132) = {0.072936, -0.731637, 0, 1.0};
Point(133) = {0.072373, -0.731482, 0, 1.0};
Point(134) = {0.071626, -0.731366, 0, 1.0};
Point(135) = {0.070622, -0.731257, 0, 1.0};
Point(136) = {0.069388, -0.731176, 0, 1.0};
Point(137) = {0.067848, -0.731105, 0, 1.0};
Point(138) = {0.065974, -0.731042, 0, 1.0};
Point(139) = {0.063630, -0.731003, 0, 1.0};
Point(140) = {0.060628, -0.731022, 0, 1.0};
Point(141) = {0.056705, -0.731097, 0, 1.0};
Point(142) = {0.051975, -0.731250, 0, 1.0};
Point(143) = {0.044476, -0.731589, 0, 1.0};
Point(144) = {0.036985, -0.732011, 0, 1.0};
Point(145) = {0.029500, -0.732507, 0, 1.0};
Point(146) = {0.022019, -0.733048, 0, 1.0};
Point(147) = {0.014543, -0.733649, 0, 1.0};
Point(148) = {0.007072, -0.734310, 0, 1.0};
Point(149) = {-0.000396, -0.735008, 0, 1.0};
Point(150) = {-0.007860, -0.735751, 0, 1.0};
Point(151) = {-0.015320, -0.736536, 0, 1.0};
Point(152) = {-0.022775, -0.737375, 0, 1.0};
Point(153) = {-0.028735, -0.738093, 0, 1.0};
Point(154) = {-0.034692, -0.738849, 0, 1.0};
Point(155) = {-0.040645, -0.739652, 0, 1.0};
Point(156) = {-0.046595, -0.740496, 0, 1.0};
Point(157) = {-0.051797, -0.741276, 0, 1.0};
Point(158) = {-0.056996, -0.742097, 0, 1.0};
Point(159) = {-0.061444, -0.742893, 0, 1.0};
Point(160) = {-0.065148, -0.743587, 0, 1.0};
Point(161) = {-0.068110, -0.744153, 0, 1.0};
Point(162) = {-0.070326, -0.744644, 0, 1.0};
Point(163) = {-0.071800, -0.745006, 0, 1.0};
Point(164) = {-0.073273, -0.745384, 0, 1.0};
Point(165) = {-0.074007, -0.745602, 0, 1.0};
Point(166) = {-0.074741, -0.745821, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:23};
Spline(2) = {23:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:106};
Spline(6) = {106:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
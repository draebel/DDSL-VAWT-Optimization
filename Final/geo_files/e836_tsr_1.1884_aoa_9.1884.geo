SetFactory("OpenCASCADE");

Point(1) = {0.147434, 0.713334, 0, 1.0};
Point(2) = {0.146722, 0.713494, 0, 1.0};
Point(3) = {0.144660, 0.714022, 0, 1.0};
Point(4) = {0.141395, 0.714943, 0, 1.0};
Point(5) = {0.137029, 0.716219, 0, 1.0};
Point(6) = {0.131624, 0.717828, 0, 1.0};
Point(7) = {0.125281, 0.719780, 0, 1.0};
Point(8) = {0.118137, 0.722056, 0, 1.0};
Point(9) = {0.110335, 0.724601, 0, 1.0};
Point(10) = {0.102017, 0.727338, 0, 1.0};
Point(11) = {0.093316, 0.730158, 0, 1.0};
Point(12) = {0.084307, 0.732932, 0, 1.0};
Point(13) = {0.075037, 0.735580, 0, 1.0};
Point(14) = {0.065560, 0.738049, 0, 1.0};
Point(15) = {0.055934, 0.740303, 0, 1.0};
Point(16) = {0.046223, 0.742314, 0, 1.0};
Point(17) = {0.036488, 0.744085, 0, 1.0};
Point(18) = {0.026825, 0.745628, 0, 1.0};
Point(19) = {0.017344, 0.746949, 0, 1.0};
Point(20) = {0.008148, 0.748039, 0, 1.0};
Point(21) = {-0.000661, 0.748893, 0, 1.0};
Point(22) = {-0.008985, 0.749506, 0, 1.0};
Point(23) = {-0.016740, 0.749877, 0, 1.0};
Point(24) = {-0.023839, 0.750000, 0, 1.0};
Point(25) = {-0.030215, 0.749887, 0, 1.0};
Point(26) = {-0.035798, 0.749540, 0, 1.0};
Point(27) = {-0.040535, 0.748975, 0, 1.0};
Point(28) = {-0.044379, 0.748217, 0, 1.0};
Point(29) = {-0.047289, 0.747300, 0, 1.0};
Point(30) = {-0.049215, 0.746278, 0, 1.0};
Point(31) = {-0.050000, 0.745271, 0, 1.0};
Point(32) = {-0.049573, 0.744067, 0, 1.0};
Point(33) = {-0.048067, 0.742490, 0, 1.0};
Point(34) = {-0.045595, 0.740703, 0, 1.0};
Point(35) = {-0.042186, 0.738772, 0, 1.0};
Point(36) = {-0.037868, 0.736742, 0, 1.0};
Point(37) = {-0.032679, 0.734653, 0, 1.0};
Point(38) = {-0.026664, 0.732535, 0, 1.0};
Point(39) = {-0.019888, 0.730414, 0, 1.0};
Point(40) = {-0.012412, 0.728321, 0, 1.0};
Point(41) = {-0.004319, 0.726279, 0, 1.0};
Point(42) = {0.004310, 0.724311, 0, 1.0};
Point(43) = {0.013381, 0.722447, 0, 1.0};
Point(44) = {0.022794, 0.720712, 0, 1.0};
Point(45) = {0.032452, 0.719129, 0, 1.0};
Point(46) = {0.042248, 0.717741, 0, 1.0};
Point(47) = {0.052098, 0.716587, 0, 1.0};
Point(48) = {0.061943, 0.715692, 0, 1.0};
Point(49) = {0.071716, 0.715047, 0, 1.0};
Point(50) = {0.081348, 0.714638, 0, 1.0};
Point(51) = {0.090772, 0.714430, 0, 1.0};
Point(52) = {0.099918, 0.714363, 0, 1.0};
Point(53) = {0.108675, 0.714338, 0, 1.0};
Point(54) = {0.116881, 0.714293, 0, 1.0};
Point(55) = {0.124378, 0.714201, 0, 1.0};
Point(56) = {0.131014, 0.714054, 0, 1.0};
Point(57) = {0.136650, 0.713877, 0, 1.0};
Point(58) = {0.141196, 0.713711, 0, 1.0};
Point(59) = {0.144585, 0.713556, 0, 1.0};
Point(60) = {0.146708, 0.713407, 0, 1.0};
Point(61) = {-0.147434, -0.713334, 0, 1.0};
Point(62) = {-0.146722, -0.713494, 0, 1.0};
Point(63) = {-0.144660, -0.714022, 0, 1.0};
Point(64) = {-0.141395, -0.714943, 0, 1.0};
Point(65) = {-0.137029, -0.716219, 0, 1.0};
Point(66) = {-0.131624, -0.717828, 0, 1.0};
Point(67) = {-0.125281, -0.719780, 0, 1.0};
Point(68) = {-0.118137, -0.722056, 0, 1.0};
Point(69) = {-0.110335, -0.724601, 0, 1.0};
Point(70) = {-0.102017, -0.727338, 0, 1.0};
Point(71) = {-0.093316, -0.730158, 0, 1.0};
Point(72) = {-0.084307, -0.732932, 0, 1.0};
Point(73) = {-0.075037, -0.735580, 0, 1.0};
Point(74) = {-0.065560, -0.738049, 0, 1.0};
Point(75) = {-0.055934, -0.740303, 0, 1.0};
Point(76) = {-0.046223, -0.742314, 0, 1.0};
Point(77) = {-0.036488, -0.744085, 0, 1.0};
Point(78) = {-0.026825, -0.745628, 0, 1.0};
Point(79) = {-0.017344, -0.746949, 0, 1.0};
Point(80) = {-0.008148, -0.748039, 0, 1.0};
Point(81) = {0.000661, -0.748893, 0, 1.0};
Point(82) = {0.008985, -0.749506, 0, 1.0};
Point(83) = {0.016740, -0.749877, 0, 1.0};
Point(84) = {0.023839, -0.750000, 0, 1.0};
Point(85) = {0.030215, -0.749887, 0, 1.0};
Point(86) = {0.035798, -0.749540, 0, 1.0};
Point(87) = {0.040535, -0.748975, 0, 1.0};
Point(88) = {0.044379, -0.748217, 0, 1.0};
Point(89) = {0.047289, -0.747300, 0, 1.0};
Point(90) = {0.049215, -0.746278, 0, 1.0};
Point(91) = {0.050000, -0.745271, 0, 1.0};
Point(92) = {0.049573, -0.744067, 0, 1.0};
Point(93) = {0.048067, -0.742490, 0, 1.0};
Point(94) = {0.045595, -0.740703, 0, 1.0};
Point(95) = {0.042186, -0.738772, 0, 1.0};
Point(96) = {0.037868, -0.736742, 0, 1.0};
Point(97) = {0.032679, -0.734653, 0, 1.0};
Point(98) = {0.026664, -0.732535, 0, 1.0};
Point(99) = {0.019888, -0.730414, 0, 1.0};
Point(100) = {0.012412, -0.728321, 0, 1.0};
Point(101) = {0.004319, -0.726279, 0, 1.0};
Point(102) = {-0.004310, -0.724311, 0, 1.0};
Point(103) = {-0.013381, -0.722447, 0, 1.0};
Point(104) = {-0.022794, -0.720712, 0, 1.0};
Point(105) = {-0.032452, -0.719129, 0, 1.0};
Point(106) = {-0.042248, -0.717741, 0, 1.0};
Point(107) = {-0.052098, -0.716587, 0, 1.0};
Point(108) = {-0.061943, -0.715692, 0, 1.0};
Point(109) = {-0.071716, -0.715047, 0, 1.0};
Point(110) = {-0.081348, -0.714638, 0, 1.0};
Point(111) = {-0.090772, -0.714430, 0, 1.0};
Point(112) = {-0.099918, -0.714363, 0, 1.0};
Point(113) = {-0.108675, -0.714338, 0, 1.0};
Point(114) = {-0.116881, -0.714293, 0, 1.0};
Point(115) = {-0.124378, -0.714201, 0, 1.0};
Point(116) = {-0.131014, -0.714054, 0, 1.0};
Point(117) = {-0.136650, -0.713877, 0, 1.0};
Point(118) = {-0.141196, -0.713711, 0, 1.0};
Point(119) = {-0.144585, -0.713556, 0, 1.0};
Point(120) = {-0.146708, -0.713407, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
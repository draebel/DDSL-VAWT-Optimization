SetFactory("OpenCASCADE");

Point(1) = {0.074805, 0.725923, 0, 1.0};
Point(2) = {0.074298, 0.726147, 0, 1.0};
Point(3) = {0.072910, 0.726820, 0, 1.0};
Point(4) = {0.070838, 0.727831, 0, 1.0};
Point(5) = {0.068115, 0.728994, 0, 1.0};
Point(6) = {0.064666, 0.730241, 0, 1.0};
Point(7) = {0.060491, 0.731604, 0, 1.0};
Point(8) = {0.055659, 0.733087, 0, 1.0};
Point(9) = {0.050238, 0.734669, 0, 1.0};
Point(10) = {0.044300, 0.736329, 0, 1.0};
Point(11) = {0.037926, 0.738036, 0, 1.0};
Point(12) = {0.031197, 0.739759, 0, 1.0};
Point(13) = {0.024194, 0.741461, 0, 1.0};
Point(14) = {0.017001, 0.743105, 0, 1.0};
Point(15) = {0.009699, 0.744653, 0, 1.0};
Point(16) = {0.002364, 0.746069, 0, 1.0};
Point(17) = {-0.004928, 0.747316, 0, 1.0};
Point(18) = {-0.012107, 0.748362, 0, 1.0};
Point(19) = {-0.019108, 0.749176, 0, 1.0};
Point(20) = {-0.025866, 0.749730, 0, 1.0};
Point(21) = {-0.032336, 0.750000, 0, 1.0};
Point(22) = {-0.038477, 0.749975, 0, 1.0};
Point(23) = {-0.044258, 0.749657, 0, 1.0};
Point(24) = {-0.049644, 0.749062, 0, 1.0};
Point(25) = {-0.054602, 0.748212, 0, 1.0};
Point(26) = {-0.059100, 0.747140, 0, 1.0};
Point(27) = {-0.063100, 0.745887, 0, 1.0};
Point(28) = {-0.066565, 0.744489, 0, 1.0};
Point(29) = {-0.069462, 0.742991, 0, 1.0};
Point(30) = {-0.071764, 0.741435, 0, 1.0};
Point(31) = {-0.073446, 0.739880, 0, 1.0};
Point(32) = {-0.074477, 0.738394, 0, 1.0};
Point(33) = {-0.074778, 0.737110, 0, 1.0};
Point(34) = {-0.074164, 0.735919, 0, 1.0};
Point(35) = {-0.072663, 0.734655, 0, 1.0};
Point(36) = {-0.070437, 0.733373, 0, 1.0};
Point(37) = {-0.067524, 0.732129, 0, 1.0};
Point(38) = {-0.063955, 0.730963, 0, 1.0};
Point(39) = {-0.059772, 0.729929, 0, 1.0};
Point(40) = {-0.055004, 0.729025, 0, 1.0};
Point(41) = {-0.049677, 0.728321, 0, 1.0};
Point(42) = {-0.043816, 0.727830, 0, 1.0};
Point(43) = {-0.037445, 0.727557, 0, 1.0};
Point(44) = {-0.030592, 0.727492, 0, 1.0};
Point(45) = {-0.023296, 0.727617, 0, 1.0};
Point(46) = {-0.015600, 0.727901, 0, 1.0};
Point(47) = {-0.007548, 0.728284, 0, 1.0};
Point(48) = {0.000770, 0.728679, 0, 1.0};
Point(49) = {0.009227, 0.729025, 0, 1.0};
Point(50) = {0.017686, 0.729285, 0, 1.0};
Point(51) = {0.026013, 0.729431, 0, 1.0};
Point(52) = {0.034074, 0.729446, 0, 1.0};
Point(53) = {0.041737, 0.729323, 0, 1.0};
Point(54) = {0.048874, 0.729066, 0, 1.0};
Point(55) = {0.055360, 0.728683, 0, 1.0};
Point(56) = {0.061083, 0.728195, 0, 1.0};
Point(57) = {0.065933, 0.727630, 0, 1.0};
Point(58) = {0.069798, 0.727027, 0, 1.0};
Point(59) = {0.072584, 0.726470, 0, 1.0};
Point(60) = {0.074250, 0.726071, 0, 1.0};
Point(61) = {-0.074805, -0.725923, 0, 1.0};
Point(62) = {-0.074298, -0.726147, 0, 1.0};
Point(63) = {-0.072910, -0.726820, 0, 1.0};
Point(64) = {-0.070838, -0.727831, 0, 1.0};
Point(65) = {-0.068115, -0.728994, 0, 1.0};
Point(66) = {-0.064666, -0.730241, 0, 1.0};
Point(67) = {-0.060491, -0.731604, 0, 1.0};
Point(68) = {-0.055659, -0.733087, 0, 1.0};
Point(69) = {-0.050238, -0.734669, 0, 1.0};
Point(70) = {-0.044300, -0.736329, 0, 1.0};
Point(71) = {-0.037926, -0.738036, 0, 1.0};
Point(72) = {-0.031197, -0.739759, 0, 1.0};
Point(73) = {-0.024194, -0.741461, 0, 1.0};
Point(74) = {-0.017001, -0.743105, 0, 1.0};
Point(75) = {-0.009699, -0.744653, 0, 1.0};
Point(76) = {-0.002364, -0.746069, 0, 1.0};
Point(77) = {0.004928, -0.747316, 0, 1.0};
Point(78) = {0.012107, -0.748362, 0, 1.0};
Point(79) = {0.019108, -0.749176, 0, 1.0};
Point(80) = {0.025866, -0.749730, 0, 1.0};
Point(81) = {0.032336, -0.750000, 0, 1.0};
Point(82) = {0.038477, -0.749975, 0, 1.0};
Point(83) = {0.044258, -0.749657, 0, 1.0};
Point(84) = {0.049644, -0.749062, 0, 1.0};
Point(85) = {0.054602, -0.748212, 0, 1.0};
Point(86) = {0.059100, -0.747140, 0, 1.0};
Point(87) = {0.063100, -0.745887, 0, 1.0};
Point(88) = {0.066565, -0.744489, 0, 1.0};
Point(89) = {0.069462, -0.742991, 0, 1.0};
Point(90) = {0.071764, -0.741435, 0, 1.0};
Point(91) = {0.073446, -0.739880, 0, 1.0};
Point(92) = {0.074477, -0.738394, 0, 1.0};
Point(93) = {0.074778, -0.737110, 0, 1.0};
Point(94) = {0.074164, -0.735919, 0, 1.0};
Point(95) = {0.072663, -0.734655, 0, 1.0};
Point(96) = {0.070437, -0.733373, 0, 1.0};
Point(97) = {0.067524, -0.732129, 0, 1.0};
Point(98) = {0.063955, -0.730963, 0, 1.0};
Point(99) = {0.059772, -0.729929, 0, 1.0};
Point(100) = {0.055004, -0.729025, 0, 1.0};
Point(101) = {0.049677, -0.728321, 0, 1.0};
Point(102) = {0.043816, -0.727830, 0, 1.0};
Point(103) = {0.037445, -0.727557, 0, 1.0};
Point(104) = {0.030592, -0.727492, 0, 1.0};
Point(105) = {0.023296, -0.727617, 0, 1.0};
Point(106) = {0.015600, -0.727901, 0, 1.0};
Point(107) = {0.007548, -0.728284, 0, 1.0};
Point(108) = {-0.000770, -0.728679, 0, 1.0};
Point(109) = {-0.009227, -0.729025, 0, 1.0};
Point(110) = {-0.017686, -0.729285, 0, 1.0};
Point(111) = {-0.026013, -0.729431, 0, 1.0};
Point(112) = {-0.034074, -0.729446, 0, 1.0};
Point(113) = {-0.041737, -0.729323, 0, 1.0};
Point(114) = {-0.048874, -0.729066, 0, 1.0};
Point(115) = {-0.055360, -0.728683, 0, 1.0};
Point(116) = {-0.061083, -0.728195, 0, 1.0};
Point(117) = {-0.065933, -0.727630, 0, 1.0};
Point(118) = {-0.069798, -0.727027, 0, 1.0};
Point(119) = {-0.072584, -0.726470, 0, 1.0};
Point(120) = {-0.074250, -0.726071, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
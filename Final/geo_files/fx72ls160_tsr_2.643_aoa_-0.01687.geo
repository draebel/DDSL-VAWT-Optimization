SetFactory("OpenCASCADE");

Point(1) = {0.074999, 0.727213, 0, 1.0};
Point(2) = {0.074955, 0.727228, 0, 1.0};
Point(3) = {0.072515, 0.728062, 0, 1.0};
Point(4) = {0.069783, 0.728994, 0, 1.0};
Point(5) = {0.066771, 0.730025, 0, 1.0};
Point(6) = {0.063488, 0.731150, 0, 1.0};
Point(7) = {0.059951, 0.732367, 0, 1.0};
Point(8) = {0.056175, 0.733660, 0, 1.0};
Point(9) = {0.052176, 0.735028, 0, 1.0};
Point(10) = {0.047971, 0.736471, 0, 1.0};
Point(11) = {0.043577, 0.737986, 0, 1.0};
Point(12) = {0.039014, 0.739565, 0, 1.0};
Point(13) = {0.034302, 0.741186, 0, 1.0};
Point(14) = {0.029460, 0.742820, 0, 1.0};
Point(15) = {0.024509, 0.744426, 0, 1.0};
Point(16) = {0.019471, 0.745941, 0, 1.0};
Point(17) = {0.014365, 0.747272, 0, 1.0};
Point(18) = {0.009217, 0.748348, 0, 1.0};
Point(19) = {0.004047, 0.749143, 0, 1.0};
Point(20) = {-0.001123, 0.749677, 0, 1.0};
Point(21) = {-0.006272, 0.749964, 0, 1.0};
Point(22) = {-0.011377, 0.750000, 0, 1.0};
Point(23) = {-0.016414, 0.749793, 0, 1.0};
Point(24) = {-0.021364, 0.749371, 0, 1.0};
Point(25) = {-0.026206, 0.748773, 0, 1.0};
Point(26) = {-0.030917, 0.748016, 0, 1.0};
Point(27) = {-0.035480, 0.747111, 0, 1.0};
Point(28) = {-0.039873, 0.746074, 0, 1.0};
Point(29) = {-0.044077, 0.744918, 0, 1.0};
Point(30) = {-0.048075, 0.743659, 0, 1.0};
Point(31) = {-0.051850, 0.742312, 0, 1.0};
Point(32) = {-0.055387, 0.740886, 0, 1.0};
Point(33) = {-0.058669, 0.739401, 0, 1.0};
Point(34) = {-0.061680, 0.737869, 0, 1.0};
Point(35) = {-0.064412, 0.736318, 0, 1.0};
Point(36) = {-0.066851, 0.734750, 0, 1.0};
Point(37) = {-0.068985, 0.733175, 0, 1.0};
Point(38) = {-0.070808, 0.731629, 0, 1.0};
Point(39) = {-0.072308, 0.730133, 0, 1.0};
Point(40) = {-0.073482, 0.728729, 0, 1.0};
Point(41) = {-0.074324, 0.727257, 0, 1.0};
Point(42) = {-0.074831, 0.725705, 0, 1.0};
Point(43) = {-0.075000, 0.724387, 0, 1.0};
Point(44) = {-0.074831, 0.723465, 0, 1.0};
Point(45) = {-0.074323, 0.722980, 0, 1.0};
Point(46) = {-0.073480, 0.722654, 0, 1.0};
Point(47) = {-0.072305, 0.722312, 0, 1.0};
Point(48) = {-0.070805, 0.722064, 0, 1.0};
Point(49) = {-0.068982, 0.721917, 0, 1.0};
Point(50) = {-0.066847, 0.721874, 0, 1.0};
Point(51) = {-0.064408, 0.721911, 0, 1.0};
Point(52) = {-0.061676, 0.722000, 0, 1.0};
Point(53) = {-0.058664, 0.722140, 0, 1.0};
Point(54) = {-0.055381, 0.722309, 0, 1.0};
Point(55) = {-0.051844, 0.722503, 0, 1.0};
Point(56) = {-0.048069, 0.722728, 0, 1.0};
Point(57) = {-0.044070, 0.722967, 0, 1.0};
Point(58) = {-0.039866, 0.723218, 0, 1.0};
Point(59) = {-0.035473, 0.723478, 0, 1.0};
Point(60) = {-0.030910, 0.723736, 0, 1.0};
Point(61) = {-0.026198, 0.723992, 0, 1.0};
Point(62) = {-0.021357, 0.724240, 0, 1.0};
Point(63) = {-0.016407, 0.724477, 0, 1.0};
Point(64) = {-0.011369, 0.724703, 0, 1.0};
Point(65) = {-0.006264, 0.724914, 0, 1.0};
Point(66) = {-0.001116, 0.725109, 0, 1.0};
Point(67) = {0.004054, 0.725284, 0, 1.0};
Point(68) = {0.009224, 0.725438, 0, 1.0};
Point(69) = {0.014372, 0.725569, 0, 1.0};
Point(70) = {0.019477, 0.725678, 0, 1.0};
Point(71) = {0.024514, 0.725769, 0, 1.0};
Point(72) = {0.029465, 0.725837, 0, 1.0};
Point(73) = {0.034306, 0.725888, 0, 1.0};
Point(74) = {0.039018, 0.725919, 0, 1.0};
Point(75) = {0.043581, 0.725938, 0, 1.0};
Point(76) = {0.047975, 0.725957, 0, 1.0};
Point(77) = {0.052179, 0.725985, 0, 1.0};
Point(78) = {0.056177, 0.726017, 0, 1.0};
Point(79) = {0.059953, 0.726044, 0, 1.0};
Point(80) = {0.063490, 0.726054, 0, 1.0};
Point(81) = {0.066772, 0.726036, 0, 1.0};
Point(82) = {0.069784, 0.725982, 0, 1.0};
Point(83) = {0.072516, 0.725878, 0, 1.0};
Point(84) = {0.074956, 0.725723, 0, 1.0};
Point(85) = {0.075000, 0.725721, 0, 1.0};
Point(86) = {-0.074999, -0.727213, 0, 1.0};
Point(87) = {-0.074955, -0.727228, 0, 1.0};
Point(88) = {-0.072515, -0.728062, 0, 1.0};
Point(89) = {-0.069783, -0.728994, 0, 1.0};
Point(90) = {-0.066771, -0.730025, 0, 1.0};
Point(91) = {-0.063488, -0.731150, 0, 1.0};
Point(92) = {-0.059951, -0.732367, 0, 1.0};
Point(93) = {-0.056175, -0.733660, 0, 1.0};
Point(94) = {-0.052176, -0.735028, 0, 1.0};
Point(95) = {-0.047971, -0.736471, 0, 1.0};
Point(96) = {-0.043577, -0.737986, 0, 1.0};
Point(97) = {-0.039014, -0.739565, 0, 1.0};
Point(98) = {-0.034302, -0.741186, 0, 1.0};
Point(99) = {-0.029460, -0.742820, 0, 1.0};
Point(100) = {-0.024509, -0.744426, 0, 1.0};
Point(101) = {-0.019471, -0.745941, 0, 1.0};
Point(102) = {-0.014365, -0.747272, 0, 1.0};
Point(103) = {-0.009217, -0.748348, 0, 1.0};
Point(104) = {-0.004047, -0.749143, 0, 1.0};
Point(105) = {0.001123, -0.749677, 0, 1.0};
Point(106) = {0.006272, -0.749964, 0, 1.0};
Point(107) = {0.011377, -0.750000, 0, 1.0};
Point(108) = {0.016414, -0.749793, 0, 1.0};
Point(109) = {0.021364, -0.749371, 0, 1.0};
Point(110) = {0.026206, -0.748773, 0, 1.0};
Point(111) = {0.030917, -0.748016, 0, 1.0};
Point(112) = {0.035480, -0.747111, 0, 1.0};
Point(113) = {0.039873, -0.746074, 0, 1.0};
Point(114) = {0.044077, -0.744918, 0, 1.0};
Point(115) = {0.048075, -0.743659, 0, 1.0};
Point(116) = {0.051850, -0.742312, 0, 1.0};
Point(117) = {0.055387, -0.740886, 0, 1.0};
Point(118) = {0.058669, -0.739401, 0, 1.0};
Point(119) = {0.061680, -0.737869, 0, 1.0};
Point(120) = {0.064412, -0.736318, 0, 1.0};
Point(121) = {0.066851, -0.734750, 0, 1.0};
Point(122) = {0.068985, -0.733175, 0, 1.0};
Point(123) = {0.070808, -0.731629, 0, 1.0};
Point(124) = {0.072308, -0.730133, 0, 1.0};
Point(125) = {0.073482, -0.728729, 0, 1.0};
Point(126) = {0.074324, -0.727257, 0, 1.0};
Point(127) = {0.074831, -0.725705, 0, 1.0};
Point(128) = {0.075000, -0.724387, 0, 1.0};
Point(129) = {0.074831, -0.723465, 0, 1.0};
Point(130) = {0.074323, -0.722980, 0, 1.0};
Point(131) = {0.073480, -0.722654, 0, 1.0};
Point(132) = {0.072305, -0.722312, 0, 1.0};
Point(133) = {0.070805, -0.722064, 0, 1.0};
Point(134) = {0.068982, -0.721917, 0, 1.0};
Point(135) = {0.066847, -0.721874, 0, 1.0};
Point(136) = {0.064408, -0.721911, 0, 1.0};
Point(137) = {0.061676, -0.722000, 0, 1.0};
Point(138) = {0.058664, -0.722140, 0, 1.0};
Point(139) = {0.055381, -0.722309, 0, 1.0};
Point(140) = {0.051844, -0.722503, 0, 1.0};
Point(141) = {0.048069, -0.722728, 0, 1.0};
Point(142) = {0.044070, -0.722967, 0, 1.0};
Point(143) = {0.039866, -0.723218, 0, 1.0};
Point(144) = {0.035473, -0.723478, 0, 1.0};
Point(145) = {0.030910, -0.723736, 0, 1.0};
Point(146) = {0.026198, -0.723992, 0, 1.0};
Point(147) = {0.021357, -0.724240, 0, 1.0};
Point(148) = {0.016407, -0.724477, 0, 1.0};
Point(149) = {0.011369, -0.724703, 0, 1.0};
Point(150) = {0.006264, -0.724914, 0, 1.0};
Point(151) = {0.001116, -0.725109, 0, 1.0};
Point(152) = {-0.004054, -0.725284, 0, 1.0};
Point(153) = {-0.009224, -0.725438, 0, 1.0};
Point(154) = {-0.014372, -0.725569, 0, 1.0};
Point(155) = {-0.019477, -0.725678, 0, 1.0};
Point(156) = {-0.024514, -0.725769, 0, 1.0};
Point(157) = {-0.029465, -0.725837, 0, 1.0};
Point(158) = {-0.034306, -0.725888, 0, 1.0};
Point(159) = {-0.039018, -0.725919, 0, 1.0};
Point(160) = {-0.043581, -0.725938, 0, 1.0};
Point(161) = {-0.047975, -0.725957, 0, 1.0};
Point(162) = {-0.052179, -0.725985, 0, 1.0};
Point(163) = {-0.056177, -0.726017, 0, 1.0};
Point(164) = {-0.059953, -0.726044, 0, 1.0};
Point(165) = {-0.063490, -0.726054, 0, 1.0};
Point(166) = {-0.066772, -0.726036, 0, 1.0};
Point(167) = {-0.069784, -0.725982, 0, 1.0};
Point(168) = {-0.072516, -0.725878, 0, 1.0};
Point(169) = {-0.074956, -0.725723, 0, 1.0};
Point(170) = {-0.075000, -0.725721, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
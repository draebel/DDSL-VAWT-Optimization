SetFactory("OpenCASCADE");

Point(1) = {0.074277, 0.718014, 0, 1.0};
Point(2) = {0.073252, 0.718410, 0, 1.0};
Point(3) = {0.069536, 0.719974, 0, 1.0};
Point(4) = {0.065815, 0.721503, 0, 1.0};
Point(5) = {0.062096, 0.723045, 0, 1.0};
Point(6) = {0.058375, 0.724581, 0, 1.0};
Point(7) = {0.054655, 0.726121, 0, 1.0};
Point(8) = {0.050935, 0.727657, 0, 1.0};
Point(9) = {0.043481, 0.730650, 0, 1.0};
Point(10) = {0.036007, 0.733518, 0, 1.0};
Point(11) = {0.028506, 0.736222, 0, 1.0};
Point(12) = {0.020977, 0.738752, 0, 1.0};
Point(13) = {0.013412, 0.741057, 0, 1.0};
Point(14) = {0.005805, 0.743115, 0, 1.0};
Point(15) = {-0.001842, 0.744917, 0, 1.0};
Point(16) = {-0.009531, 0.746467, 0, 1.0};
Point(17) = {-0.013390, 0.747154, 0, 1.0};
Point(18) = {-0.017260, 0.747775, 0, 1.0};
Point(19) = {-0.021141, 0.748324, 0, 1.0};
Point(20) = {-0.025035, 0.748795, 0, 1.0};
Point(21) = {-0.028940, 0.749196, 0, 1.0};
Point(22) = {-0.032857, 0.749532, 0, 1.0};
Point(23) = {-0.036785, 0.749794, 0, 1.0};
Point(24) = {-0.040729, 0.749957, 0, 1.0};
Point(25) = {-0.044693, 0.750000, 0, 1.0};
Point(26) = {-0.048678, 0.749910, 0, 1.0};
Point(27) = {-0.052689, 0.749666, 0, 1.0};
Point(28) = {-0.056733, 0.749215, 0, 1.0};
Point(29) = {-0.060822, 0.748489, 0, 1.0};
Point(30) = {-0.064978, 0.747356, 0, 1.0};
Point(31) = {-0.067092, 0.746569, 0, 1.0};
Point(32) = {-0.069242, 0.745554, 0, 1.0};
Point(33) = {-0.070339, 0.744917, 0, 1.0};
Point(34) = {-0.071461, 0.744126, 0, 1.0};
Point(35) = {-0.072152, 0.743538, 0, 1.0};
Point(36) = {-0.072875, 0.742759, 0, 1.0};
Point(37) = {-0.073393, 0.742017, 0, 1.0};
Point(38) = {-0.074023, 0.740590, 0, 1.0};
Point(39) = {-0.073788, 0.739596, 0, 1.0};
Point(40) = {-0.073472, 0.739095, 0, 1.0};
Point(41) = {-0.072976, 0.738488, 0, 1.0};
Point(42) = {-0.072463, 0.737980, 0, 1.0};
Point(43) = {-0.071585, 0.737275, 0, 1.0};
Point(44) = {-0.070685, 0.736707, 0, 1.0};
Point(45) = {-0.068855, 0.735753, 0, 1.0};
Point(46) = {-0.066999, 0.734957, 0, 1.0};
Point(47) = {-0.063250, 0.733600, 0, 1.0};
Point(48) = {-0.059470, 0.732431, 0, 1.0};
Point(49) = {-0.055671, 0.731377, 0, 1.0};
Point(50) = {-0.051857, 0.730415, 0, 1.0};
Point(51) = {-0.048029, 0.729535, 0, 1.0};
Point(52) = {-0.044191, 0.728722, 0, 1.0};
Point(53) = {-0.040345, 0.727958, 0, 1.0};
Point(54) = {-0.036492, 0.727233, 0, 1.0};
Point(55) = {-0.032634, 0.726544, 0, 1.0};
Point(56) = {-0.028772, 0.725873, 0, 1.0};
Point(57) = {-0.024908, 0.725219, 0, 1.0};
Point(58) = {-0.021039, 0.724593, 0, 1.0};
Point(59) = {-0.017159, 0.724035, 0, 1.0};
Point(60) = {-0.013268, 0.723548, 0, 1.0};
Point(61) = {-0.005461, 0.722722, 0, 1.0};
Point(62) = {0.002376, 0.722078, 0, 1.0};
Point(63) = {0.010234, 0.721570, 0, 1.0};
Point(64) = {0.018111, 0.721172, 0, 1.0};
Point(65) = {0.025998, 0.720835, 0, 1.0};
Point(66) = {0.033884, 0.720494, 0, 1.0};
Point(67) = {0.041762, 0.720107, 0, 1.0};
Point(68) = {0.049623, 0.719607, 0, 1.0};
Point(69) = {0.053541, 0.719286, 0, 1.0};
Point(70) = {0.057450, 0.718906, 0, 1.0};
Point(71) = {0.061345, 0.718444, 0, 1.0};
Point(72) = {0.065232, 0.717929, 0, 1.0};
Point(73) = {0.069106, 0.717333, 0, 1.0};
Point(74) = {0.072981, 0.716744, 0, 1.0};
Point(75) = {0.074042, 0.716573, 0, 1.0};
Point(76) = {-0.074277, -0.718014, 0, 1.0};
Point(77) = {-0.073252, -0.718410, 0, 1.0};
Point(78) = {-0.069536, -0.719974, 0, 1.0};
Point(79) = {-0.065815, -0.721503, 0, 1.0};
Point(80) = {-0.062096, -0.723045, 0, 1.0};
Point(81) = {-0.058375, -0.724581, 0, 1.0};
Point(82) = {-0.054655, -0.726121, 0, 1.0};
Point(83) = {-0.050935, -0.727657, 0, 1.0};
Point(84) = {-0.043481, -0.730650, 0, 1.0};
Point(85) = {-0.036007, -0.733518, 0, 1.0};
Point(86) = {-0.028506, -0.736222, 0, 1.0};
Point(87) = {-0.020977, -0.738752, 0, 1.0};
Point(88) = {-0.013412, -0.741057, 0, 1.0};
Point(89) = {-0.005805, -0.743115, 0, 1.0};
Point(90) = {0.001842, -0.744917, 0, 1.0};
Point(91) = {0.009531, -0.746467, 0, 1.0};
Point(92) = {0.013390, -0.747154, 0, 1.0};
Point(93) = {0.017260, -0.747775, 0, 1.0};
Point(94) = {0.021141, -0.748324, 0, 1.0};
Point(95) = {0.025035, -0.748795, 0, 1.0};
Point(96) = {0.028940, -0.749196, 0, 1.0};
Point(97) = {0.032857, -0.749532, 0, 1.0};
Point(98) = {0.036785, -0.749794, 0, 1.0};
Point(99) = {0.040729, -0.749957, 0, 1.0};
Point(100) = {0.044693, -0.750000, 0, 1.0};
Point(101) = {0.048678, -0.749910, 0, 1.0};
Point(102) = {0.052689, -0.749666, 0, 1.0};
Point(103) = {0.056733, -0.749215, 0, 1.0};
Point(104) = {0.060822, -0.748489, 0, 1.0};
Point(105) = {0.064978, -0.747356, 0, 1.0};
Point(106) = {0.067092, -0.746569, 0, 1.0};
Point(107) = {0.069242, -0.745554, 0, 1.0};
Point(108) = {0.070339, -0.744917, 0, 1.0};
Point(109) = {0.071461, -0.744126, 0, 1.0};
Point(110) = {0.072152, -0.743538, 0, 1.0};
Point(111) = {0.072875, -0.742759, 0, 1.0};
Point(112) = {0.073393, -0.742017, 0, 1.0};
Point(113) = {0.074023, -0.740590, 0, 1.0};
Point(114) = {0.073788, -0.739596, 0, 1.0};
Point(115) = {0.073472, -0.739095, 0, 1.0};
Point(116) = {0.072976, -0.738488, 0, 1.0};
Point(117) = {0.072463, -0.737980, 0, 1.0};
Point(118) = {0.071585, -0.737275, 0, 1.0};
Point(119) = {0.070685, -0.736707, 0, 1.0};
Point(120) = {0.068855, -0.735753, 0, 1.0};
Point(121) = {0.066999, -0.734957, 0, 1.0};
Point(122) = {0.063250, -0.733600, 0, 1.0};
Point(123) = {0.059470, -0.732431, 0, 1.0};
Point(124) = {0.055671, -0.731377, 0, 1.0};
Point(125) = {0.051857, -0.730415, 0, 1.0};
Point(126) = {0.048029, -0.729535, 0, 1.0};
Point(127) = {0.044191, -0.728722, 0, 1.0};
Point(128) = {0.040345, -0.727958, 0, 1.0};
Point(129) = {0.036492, -0.727233, 0, 1.0};
Point(130) = {0.032634, -0.726544, 0, 1.0};
Point(131) = {0.028772, -0.725873, 0, 1.0};
Point(132) = {0.024908, -0.725219, 0, 1.0};
Point(133) = {0.021039, -0.724593, 0, 1.0};
Point(134) = {0.017159, -0.724035, 0, 1.0};
Point(135) = {0.013268, -0.723548, 0, 1.0};
Point(136) = {0.005461, -0.722722, 0, 1.0};
Point(137) = {-0.002376, -0.722078, 0, 1.0};
Point(138) = {-0.010234, -0.721570, 0, 1.0};
Point(139) = {-0.018111, -0.721172, 0, 1.0};
Point(140) = {-0.025998, -0.720835, 0, 1.0};
Point(141) = {-0.033884, -0.720494, 0, 1.0};
Point(142) = {-0.041762, -0.720107, 0, 1.0};
Point(143) = {-0.049623, -0.719607, 0, 1.0};
Point(144) = {-0.053541, -0.719286, 0, 1.0};
Point(145) = {-0.057450, -0.718906, 0, 1.0};
Point(146) = {-0.061345, -0.718444, 0, 1.0};
Point(147) = {-0.065232, -0.717929, 0, 1.0};
Point(148) = {-0.069106, -0.717333, 0, 1.0};
Point(149) = {-0.072981, -0.716744, 0, 1.0};
Point(150) = {-0.074042, -0.716573, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:97};
Spline(6) = {97:130};
Spline(7) = {130:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {36.00000000, 15.00000000, 0, 1.0};
Point(154) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
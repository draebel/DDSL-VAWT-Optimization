SetFactory("OpenCASCADE");

Point(1) = {0.074243, 0.730549, 0, 1.0};
Point(2) = {0.074088, 0.730651, 0, 1.0};
Point(3) = {0.073665, 0.730956, 0, 1.0};
Point(4) = {0.073032, 0.731407, 0, 1.0};
Point(5) = {0.072189, 0.731928, 0, 1.0};
Point(6) = {0.071086, 0.732484, 0, 1.0};
Point(7) = {0.069705, 0.733097, 0, 1.0};
Point(8) = {0.069223, 0.733298, 0, 1.0};
Point(9) = {0.062219, 0.735982, 0, 1.0};
Point(10) = {0.058677, 0.737219, 0, 1.0};
Point(11) = {0.057241, 0.737693, 0, 1.0};
Point(12) = {0.055799, 0.738141, 0, 1.0};
Point(13) = {0.054346, 0.738556, 0, 1.0};
Point(14) = {0.052884, 0.738937, 0, 1.0};
Point(15) = {0.047752, 0.740179, 0, 1.0};
Point(16) = {0.040464, 0.741938, 0, 1.0};
Point(17) = {0.039590, 0.742153, 0, 1.0};
Point(18) = {0.035941, 0.743031, 0, 1.0};
Point(19) = {0.032237, 0.743897, 0, 1.0};
Point(20) = {0.028497, 0.744747, 0, 1.0};
Point(21) = {0.024753, 0.745575, 0, 1.0};
Point(22) = {0.021033, 0.746376, 0, 1.0};
Point(23) = {0.017369, 0.747141, 0, 1.0};
Point(24) = {0.013791, 0.747850, 0, 1.0};
Point(25) = {0.010324, 0.748488, 0, 1.0};
Point(26) = {0.006984, 0.749034, 0, 1.0};
Point(27) = {0.003785, 0.749473, 0, 1.0};
Point(28) = {0.000741, 0.749799, 0, 1.0};
Point(29) = {-0.002136, 0.749978, 0, 1.0};
Point(30) = {-0.004863, 0.750000, 0, 1.0};
Point(31) = {-0.007449, 0.749883, 0, 1.0};
Point(32) = {-0.009895, 0.749635, 0, 1.0};
Point(33) = {-0.012199, 0.749278, 0, 1.0};
Point(34) = {-0.014344, 0.748828, 0, 1.0};
Point(35) = {-0.016317, 0.748300, 0, 1.0};
Point(36) = {-0.018111, 0.747700, 0, 1.0};
Point(37) = {-0.019714, 0.747041, 0, 1.0};
Point(38) = {-0.021120, 0.746338, 0, 1.0};
Point(39) = {-0.022318, 0.745604, 0, 1.0};
Point(40) = {-0.023299, 0.744856, 0, 1.0};
Point(41) = {-0.024048, 0.744097, 0, 1.0};
Point(42) = {-0.024574, 0.743335, 0, 1.0};
Point(43) = {-0.024892, 0.742598, 0, 1.0};
Point(44) = {-0.024996, 0.741935, 0, 1.0};
Point(45) = {-0.024819, 0.741424, 0, 1.0};
Point(46) = {-0.024273, 0.741017, 0, 1.0};
Point(47) = {-0.023364, 0.740606, 0, 1.0};
Point(48) = {-0.022143, 0.740200, 0, 1.0};
Point(49) = {-0.020627, 0.739803, 0, 1.0};
Point(50) = {-0.018836, 0.739419, 0, 1.0};
Point(51) = {-0.016784, 0.739055, 0, 1.0};
Point(52) = {-0.014489, 0.738718, 0, 1.0};
Point(53) = {-0.011969, 0.738417, 0, 1.0};
Point(54) = {-0.009243, 0.738162, 0, 1.0};
Point(55) = {-0.006335, 0.737977, 0, 1.0};
Point(56) = {-0.003225, 0.737912, 0, 1.0};
Point(57) = {0.000133, 0.737951, 0, 1.0};
Point(58) = {0.003736, 0.738042, 0, 1.0};
Point(59) = {0.007560, 0.738157, 0, 1.0};
Point(60) = {0.011576, 0.738275, 0, 1.0};
Point(61) = {0.015756, 0.738375, 0, 1.0};
Point(62) = {0.020064, 0.738446, 0, 1.0};
Point(63) = {0.024467, 0.738466, 0, 1.0};
Point(64) = {0.028923, 0.738426, 0, 1.0};
Point(65) = {0.033393, 0.738314, 0, 1.0};
Point(66) = {0.037836, 0.738125, 0, 1.0};
Point(67) = {0.040067, 0.737996, 0, 1.0};
Point(68) = {0.047559, 0.737488, 0, 1.0};
Point(69) = {0.052044, 0.737096, 0, 1.0};
Point(70) = {0.053536, 0.736928, 0, 1.0};
Point(71) = {0.055023, 0.736718, 0, 1.0};
Point(72) = {0.056504, 0.736465, 0, 1.0};
Point(73) = {0.057977, 0.736168, 0, 1.0};
Point(74) = {0.062307, 0.735131, 0, 1.0};
Point(75) = {0.069487, 0.732875, 0, 1.0};
Point(76) = {0.071273, 0.732149, 0, 1.0};
Point(77) = {0.072654, 0.731470, 0, 1.0};
Point(78) = {0.073569, 0.730952, 0, 1.0};
Point(79) = {0.074079, 0.730647, 0, 1.0};
Point(80) = {0.074241, 0.730549, 0, 1.0};
Point(81) = {-0.074243, -0.730549, 0, 1.0};
Point(82) = {-0.074088, -0.730651, 0, 1.0};
Point(83) = {-0.073665, -0.730956, 0, 1.0};
Point(84) = {-0.073032, -0.731407, 0, 1.0};
Point(85) = {-0.072189, -0.731928, 0, 1.0};
Point(86) = {-0.071086, -0.732484, 0, 1.0};
Point(87) = {-0.069705, -0.733097, 0, 1.0};
Point(88) = {-0.069223, -0.733298, 0, 1.0};
Point(89) = {-0.062219, -0.735982, 0, 1.0};
Point(90) = {-0.058677, -0.737219, 0, 1.0};
Point(91) = {-0.057241, -0.737693, 0, 1.0};
Point(92) = {-0.055799, -0.738141, 0, 1.0};
Point(93) = {-0.054346, -0.738556, 0, 1.0};
Point(94) = {-0.052884, -0.738937, 0, 1.0};
Point(95) = {-0.047752, -0.740179, 0, 1.0};
Point(96) = {-0.040464, -0.741938, 0, 1.0};
Point(97) = {-0.039590, -0.742153, 0, 1.0};
Point(98) = {-0.035941, -0.743031, 0, 1.0};
Point(99) = {-0.032237, -0.743897, 0, 1.0};
Point(100) = {-0.028497, -0.744747, 0, 1.0};
Point(101) = {-0.024753, -0.745575, 0, 1.0};
Point(102) = {-0.021033, -0.746376, 0, 1.0};
Point(103) = {-0.017369, -0.747141, 0, 1.0};
Point(104) = {-0.013791, -0.747850, 0, 1.0};
Point(105) = {-0.010324, -0.748488, 0, 1.0};
Point(106) = {-0.006984, -0.749034, 0, 1.0};
Point(107) = {-0.003785, -0.749473, 0, 1.0};
Point(108) = {-0.000741, -0.749799, 0, 1.0};
Point(109) = {0.002136, -0.749978, 0, 1.0};
Point(110) = {0.004863, -0.750000, 0, 1.0};
Point(111) = {0.007449, -0.749883, 0, 1.0};
Point(112) = {0.009895, -0.749635, 0, 1.0};
Point(113) = {0.012199, -0.749278, 0, 1.0};
Point(114) = {0.014344, -0.748828, 0, 1.0};
Point(115) = {0.016317, -0.748300, 0, 1.0};
Point(116) = {0.018111, -0.747700, 0, 1.0};
Point(117) = {0.019714, -0.747041, 0, 1.0};
Point(118) = {0.021120, -0.746338, 0, 1.0};
Point(119) = {0.022318, -0.745604, 0, 1.0};
Point(120) = {0.023299, -0.744856, 0, 1.0};
Point(121) = {0.024048, -0.744097, 0, 1.0};
Point(122) = {0.024574, -0.743335, 0, 1.0};
Point(123) = {0.024892, -0.742598, 0, 1.0};
Point(124) = {0.024996, -0.741935, 0, 1.0};
Point(125) = {0.024819, -0.741424, 0, 1.0};
Point(126) = {0.024273, -0.741017, 0, 1.0};
Point(127) = {0.023364, -0.740606, 0, 1.0};
Point(128) = {0.022143, -0.740200, 0, 1.0};
Point(129) = {0.020627, -0.739803, 0, 1.0};
Point(130) = {0.018836, -0.739419, 0, 1.0};
Point(131) = {0.016784, -0.739055, 0, 1.0};
Point(132) = {0.014489, -0.738718, 0, 1.0};
Point(133) = {0.011969, -0.738417, 0, 1.0};
Point(134) = {0.009243, -0.738162, 0, 1.0};
Point(135) = {0.006335, -0.737977, 0, 1.0};
Point(136) = {0.003225, -0.737912, 0, 1.0};
Point(137) = {-0.000133, -0.737951, 0, 1.0};
Point(138) = {-0.003736, -0.738042, 0, 1.0};
Point(139) = {-0.007560, -0.738157, 0, 1.0};
Point(140) = {-0.011576, -0.738275, 0, 1.0};
Point(141) = {-0.015756, -0.738375, 0, 1.0};
Point(142) = {-0.020064, -0.738446, 0, 1.0};
Point(143) = {-0.024467, -0.738466, 0, 1.0};
Point(144) = {-0.028923, -0.738426, 0, 1.0};
Point(145) = {-0.033393, -0.738314, 0, 1.0};
Point(146) = {-0.037836, -0.738125, 0, 1.0};
Point(147) = {-0.040067, -0.737996, 0, 1.0};
Point(148) = {-0.047559, -0.737488, 0, 1.0};
Point(149) = {-0.052044, -0.737096, 0, 1.0};
Point(150) = {-0.053536, -0.736928, 0, 1.0};
Point(151) = {-0.055023, -0.736718, 0, 1.0};
Point(152) = {-0.056504, -0.736465, 0, 1.0};
Point(153) = {-0.057977, -0.736168, 0, 1.0};
Point(154) = {-0.062307, -0.735131, 0, 1.0};
Point(155) = {-0.069487, -0.732875, 0, 1.0};
Point(156) = {-0.071273, -0.732149, 0, 1.0};
Point(157) = {-0.072654, -0.731470, 0, 1.0};
Point(158) = {-0.073569, -0.730952, 0, 1.0};
Point(159) = {-0.074079, -0.730647, 0, 1.0};
Point(160) = {-0.074241, -0.730549, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:57};
Spline(3) = {57:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:137};
Spline(7) = {137:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074450, 0.735543, 0, 1.0};
Point(2) = {0.074217, 0.735626, 0, 1.0};
Point(3) = {0.073520, 0.735874, 0, 1.0};
Point(4) = {0.072365, 0.736286, 0, 1.0};
Point(5) = {0.070763, 0.736859, 0, 1.0};
Point(6) = {0.068730, 0.737574, 0, 1.0};
Point(7) = {0.066281, 0.738405, 0, 1.0};
Point(8) = {0.063440, 0.739321, 0, 1.0};
Point(9) = {0.060228, 0.740277, 0, 1.0};
Point(10) = {0.056676, 0.741260, 0, 1.0};
Point(11) = {0.052821, 0.742276, 0, 1.0};
Point(12) = {0.048695, 0.743279, 0, 1.0};
Point(13) = {0.044339, 0.744255, 0, 1.0};
Point(14) = {0.039792, 0.745189, 0, 1.0};
Point(15) = {0.035098, 0.746063, 0, 1.0};
Point(16) = {0.030303, 0.746864, 0, 1.0};
Point(17) = {0.025450, 0.747583, 0, 1.0};
Point(18) = {0.020588, 0.748206, 0, 1.0};
Point(19) = {0.015763, 0.748731, 0, 1.0};
Point(20) = {0.011022, 0.749155, 0, 1.0};
Point(21) = {0.006411, 0.749489, 0, 1.0};
Point(22) = {0.001977, 0.749740, 0, 1.0};
Point(23) = {-0.002238, 0.749905, 0, 1.0};
Point(24) = {-0.006192, 0.749992, 0, 1.0};
Point(25) = {-0.009847, 0.750000, 0, 1.0};
Point(26) = {-0.013172, 0.749897, 0, 1.0};
Point(27) = {-0.016136, 0.749671, 0, 1.0};
Point(28) = {-0.018705, 0.749372, 0, 1.0};
Point(29) = {-0.020857, 0.748971, 0, 1.0};
Point(30) = {-0.022575, 0.748450, 0, 1.0};
Point(31) = {-0.023839, 0.747841, 0, 1.0};
Point(32) = {-0.024645, 0.747067, 0, 1.0};
Point(33) = {-0.025000, 0.746013, 0, 1.0};
Point(34) = {-0.024844, 0.745205, 0, 1.0};
Point(35) = {-0.024204, 0.744416, 0, 1.0};
Point(36) = {-0.023076, 0.743754, 0, 1.0};
Point(37) = {-0.021474, 0.743186, 0, 1.0};
Point(38) = {-0.019417, 0.742691, 0, 1.0};
Point(39) = {-0.016927, 0.742246, 0, 1.0};
Point(40) = {-0.014036, 0.741796, 0, 1.0};
Point(41) = {-0.010772, 0.741327, 0, 1.0};
Point(42) = {-0.007170, 0.740819, 0, 1.0};
Point(43) = {-0.003261, 0.740308, 0, 1.0};
Point(44) = {0.000917, 0.739788, 0, 1.0};
Point(45) = {0.005322, 0.739271, 0, 1.0};
Point(46) = {0.009914, 0.738764, 0, 1.0};
Point(47) = {0.014649, 0.738279, 0, 1.0};
Point(48) = {0.019483, 0.737834, 0, 1.0};
Point(49) = {0.024369, 0.737432, 0, 1.0};
Point(50) = {0.029260, 0.737076, 0, 1.0};
Point(51) = {0.034109, 0.736776, 0, 1.0};
Point(52) = {0.038868, 0.736522, 0, 1.0};
Point(53) = {0.043491, 0.736302, 0, 1.0};
Point(54) = {0.047931, 0.736105, 0, 1.0};
Point(55) = {0.052144, 0.735927, 0, 1.0};
Point(56) = {0.056091, 0.735770, 0, 1.0};
Point(57) = {0.059734, 0.735646, 0, 1.0};
Point(58) = {0.063038, 0.735550, 0, 1.0};
Point(59) = {0.065969, 0.735475, 0, 1.0};
Point(60) = {0.068500, 0.735416, 0, 1.0};
Point(61) = {0.070605, 0.735369, 0, 1.0};
Point(62) = {0.072263, 0.735334, 0, 1.0};
Point(63) = {0.073459, 0.735309, 0, 1.0};
Point(64) = {0.074182, 0.735295, 0, 1.0};
Point(65) = {0.074423, 0.735290, 0, 1.0};
Point(66) = {-0.074450, -0.735543, 0, 1.0};
Point(67) = {-0.074217, -0.735626, 0, 1.0};
Point(68) = {-0.073520, -0.735874, 0, 1.0};
Point(69) = {-0.072365, -0.736286, 0, 1.0};
Point(70) = {-0.070763, -0.736859, 0, 1.0};
Point(71) = {-0.068730, -0.737574, 0, 1.0};
Point(72) = {-0.066281, -0.738405, 0, 1.0};
Point(73) = {-0.063440, -0.739321, 0, 1.0};
Point(74) = {-0.060228, -0.740277, 0, 1.0};
Point(75) = {-0.056676, -0.741260, 0, 1.0};
Point(76) = {-0.052821, -0.742276, 0, 1.0};
Point(77) = {-0.048695, -0.743279, 0, 1.0};
Point(78) = {-0.044339, -0.744255, 0, 1.0};
Point(79) = {-0.039792, -0.745189, 0, 1.0};
Point(80) = {-0.035098, -0.746063, 0, 1.0};
Point(81) = {-0.030303, -0.746864, 0, 1.0};
Point(82) = {-0.025450, -0.747583, 0, 1.0};
Point(83) = {-0.020588, -0.748206, 0, 1.0};
Point(84) = {-0.015763, -0.748731, 0, 1.0};
Point(85) = {-0.011022, -0.749155, 0, 1.0};
Point(86) = {-0.006411, -0.749489, 0, 1.0};
Point(87) = {-0.001977, -0.749740, 0, 1.0};
Point(88) = {0.002238, -0.749905, 0, 1.0};
Point(89) = {0.006192, -0.749992, 0, 1.0};
Point(90) = {0.009847, -0.750000, 0, 1.0};
Point(91) = {0.013172, -0.749897, 0, 1.0};
Point(92) = {0.016136, -0.749671, 0, 1.0};
Point(93) = {0.018705, -0.749372, 0, 1.0};
Point(94) = {0.020857, -0.748971, 0, 1.0};
Point(95) = {0.022575, -0.748450, 0, 1.0};
Point(96) = {0.023839, -0.747841, 0, 1.0};
Point(97) = {0.024645, -0.747067, 0, 1.0};
Point(98) = {0.025000, -0.746013, 0, 1.0};
Point(99) = {0.024844, -0.745205, 0, 1.0};
Point(100) = {0.024204, -0.744416, 0, 1.0};
Point(101) = {0.023076, -0.743754, 0, 1.0};
Point(102) = {0.021474, -0.743186, 0, 1.0};
Point(103) = {0.019417, -0.742691, 0, 1.0};
Point(104) = {0.016927, -0.742246, 0, 1.0};
Point(105) = {0.014036, -0.741796, 0, 1.0};
Point(106) = {0.010772, -0.741327, 0, 1.0};
Point(107) = {0.007170, -0.740819, 0, 1.0};
Point(108) = {0.003261, -0.740308, 0, 1.0};
Point(109) = {-0.000917, -0.739788, 0, 1.0};
Point(110) = {-0.005322, -0.739271, 0, 1.0};
Point(111) = {-0.009914, -0.738764, 0, 1.0};
Point(112) = {-0.014649, -0.738279, 0, 1.0};
Point(113) = {-0.019483, -0.737834, 0, 1.0};
Point(114) = {-0.024369, -0.737432, 0, 1.0};
Point(115) = {-0.029260, -0.737076, 0, 1.0};
Point(116) = {-0.034109, -0.736776, 0, 1.0};
Point(117) = {-0.038868, -0.736522, 0, 1.0};
Point(118) = {-0.043491, -0.736302, 0, 1.0};
Point(119) = {-0.047931, -0.736105, 0, 1.0};
Point(120) = {-0.052144, -0.735927, 0, 1.0};
Point(121) = {-0.056091, -0.735770, 0, 1.0};
Point(122) = {-0.059734, -0.735646, 0, 1.0};
Point(123) = {-0.063038, -0.735550, 0, 1.0};
Point(124) = {-0.065969, -0.735475, 0, 1.0};
Point(125) = {-0.068500, -0.735416, 0, 1.0};
Point(126) = {-0.070605, -0.735369, 0, 1.0};
Point(127) = {-0.072263, -0.735334, 0, 1.0};
Point(128) = {-0.073459, -0.735309, 0, 1.0};
Point(129) = {-0.074182, -0.735295, 0, 1.0};
Point(130) = {-0.074423, -0.735290, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
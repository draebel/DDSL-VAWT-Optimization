SetFactory("OpenCASCADE");

Point(1) = {0.148901, 0.721086, 0, 1.0};
Point(2) = {0.148434, 0.721251, 0, 1.0};
Point(3) = {0.147039, 0.721747, 0, 1.0};
Point(4) = {0.144729, 0.722571, 0, 1.0};
Point(5) = {0.141527, 0.723718, 0, 1.0};
Point(6) = {0.137459, 0.725148, 0, 1.0};
Point(7) = {0.132563, 0.726811, 0, 1.0};
Point(8) = {0.126879, 0.728642, 0, 1.0};
Point(9) = {0.120455, 0.730555, 0, 1.0};
Point(10) = {0.113352, 0.732521, 0, 1.0};
Point(11) = {0.105642, 0.734551, 0, 1.0};
Point(12) = {0.097391, 0.736559, 0, 1.0};
Point(13) = {0.088677, 0.738510, 0, 1.0};
Point(14) = {0.079584, 0.740378, 0, 1.0};
Point(15) = {0.070197, 0.742127, 0, 1.0};
Point(16) = {0.060605, 0.743729, 0, 1.0};
Point(17) = {0.050901, 0.745165, 0, 1.0};
Point(18) = {0.041177, 0.746413, 0, 1.0};
Point(19) = {0.031526, 0.747463, 0, 1.0};
Point(20) = {0.022043, 0.748310, 0, 1.0};
Point(21) = {0.012822, 0.748979, 0, 1.0};
Point(22) = {0.003954, 0.749479, 0, 1.0};
Point(23) = {-0.004476, 0.749810, 0, 1.0};
Point(24) = {-0.012384, 0.749983, 0, 1.0};
Point(25) = {-0.019695, 0.750000, 0, 1.0};
Point(26) = {-0.026345, 0.749794, 0, 1.0};
Point(27) = {-0.032272, 0.749341, 0, 1.0};
Point(28) = {-0.037409, 0.748745, 0, 1.0};
Point(29) = {-0.041714, 0.747943, 0, 1.0};
Point(30) = {-0.045150, 0.746900, 0, 1.0};
Point(31) = {-0.047678, 0.745683, 0, 1.0};
Point(32) = {-0.049291, 0.744135, 0, 1.0};
Point(33) = {-0.050000, 0.742026, 0, 1.0};
Point(34) = {-0.049688, 0.740411, 0, 1.0};
Point(35) = {-0.048408, 0.738832, 0, 1.0};
Point(36) = {-0.046151, 0.737508, 0, 1.0};
Point(37) = {-0.042947, 0.736372, 0, 1.0};
Point(38) = {-0.038833, 0.735383, 0, 1.0};
Point(39) = {-0.033854, 0.734492, 0, 1.0};
Point(40) = {-0.028071, 0.733592, 0, 1.0};
Point(41) = {-0.021543, 0.732654, 0, 1.0};
Point(42) = {-0.014339, 0.731638, 0, 1.0};
Point(43) = {-0.006521, 0.730616, 0, 1.0};
Point(44) = {0.001833, 0.729576, 0, 1.0};
Point(45) = {0.010645, 0.728543, 0, 1.0};
Point(46) = {0.019829, 0.727529, 0, 1.0};
Point(47) = {0.029299, 0.726559, 0, 1.0};
Point(48) = {0.038966, 0.725668, 0, 1.0};
Point(49) = {0.048737, 0.724864, 0, 1.0};
Point(50) = {0.058519, 0.724152, 0, 1.0};
Point(51) = {0.068217, 0.723553, 0, 1.0};
Point(52) = {0.077737, 0.723045, 0, 1.0};
Point(53) = {0.086982, 0.722603, 0, 1.0};
Point(54) = {0.095862, 0.722211, 0, 1.0};
Point(55) = {0.104288, 0.721853, 0, 1.0};
Point(56) = {0.112182, 0.721540, 0, 1.0};
Point(57) = {0.119468, 0.721292, 0, 1.0};
Point(58) = {0.126075, 0.721100, 0, 1.0};
Point(59) = {0.131938, 0.720950, 0, 1.0};
Point(60) = {0.136999, 0.720832, 0, 1.0};
Point(61) = {0.141209, 0.720739, 0, 1.0};
Point(62) = {0.144526, 0.720668, 0, 1.0};
Point(63) = {0.146919, 0.720619, 0, 1.0};
Point(64) = {0.148364, 0.720589, 0, 1.0};
Point(65) = {0.148847, 0.720579, 0, 1.0};
Point(66) = {-0.148901, -0.721086, 0, 1.0};
Point(67) = {-0.148434, -0.721251, 0, 1.0};
Point(68) = {-0.147039, -0.721747, 0, 1.0};
Point(69) = {-0.144729, -0.722571, 0, 1.0};
Point(70) = {-0.141527, -0.723718, 0, 1.0};
Point(71) = {-0.137459, -0.725148, 0, 1.0};
Point(72) = {-0.132563, -0.726811, 0, 1.0};
Point(73) = {-0.126879, -0.728642, 0, 1.0};
Point(74) = {-0.120455, -0.730555, 0, 1.0};
Point(75) = {-0.113352, -0.732521, 0, 1.0};
Point(76) = {-0.105642, -0.734551, 0, 1.0};
Point(77) = {-0.097391, -0.736559, 0, 1.0};
Point(78) = {-0.088677, -0.738510, 0, 1.0};
Point(79) = {-0.079584, -0.740378, 0, 1.0};
Point(80) = {-0.070197, -0.742127, 0, 1.0};
Point(81) = {-0.060605, -0.743729, 0, 1.0};
Point(82) = {-0.050901, -0.745165, 0, 1.0};
Point(83) = {-0.041177, -0.746413, 0, 1.0};
Point(84) = {-0.031526, -0.747463, 0, 1.0};
Point(85) = {-0.022043, -0.748310, 0, 1.0};
Point(86) = {-0.012822, -0.748979, 0, 1.0};
Point(87) = {-0.003954, -0.749479, 0, 1.0};
Point(88) = {0.004476, -0.749810, 0, 1.0};
Point(89) = {0.012384, -0.749983, 0, 1.0};
Point(90) = {0.019695, -0.750000, 0, 1.0};
Point(91) = {0.026345, -0.749794, 0, 1.0};
Point(92) = {0.032272, -0.749341, 0, 1.0};
Point(93) = {0.037409, -0.748745, 0, 1.0};
Point(94) = {0.041714, -0.747943, 0, 1.0};
Point(95) = {0.045150, -0.746900, 0, 1.0};
Point(96) = {0.047678, -0.745683, 0, 1.0};
Point(97) = {0.049291, -0.744135, 0, 1.0};
Point(98) = {0.050000, -0.742026, 0, 1.0};
Point(99) = {0.049688, -0.740411, 0, 1.0};
Point(100) = {0.048408, -0.738832, 0, 1.0};
Point(101) = {0.046151, -0.737508, 0, 1.0};
Point(102) = {0.042947, -0.736372, 0, 1.0};
Point(103) = {0.038833, -0.735383, 0, 1.0};
Point(104) = {0.033854, -0.734492, 0, 1.0};
Point(105) = {0.028071, -0.733592, 0, 1.0};
Point(106) = {0.021543, -0.732654, 0, 1.0};
Point(107) = {0.014339, -0.731638, 0, 1.0};
Point(108) = {0.006521, -0.730616, 0, 1.0};
Point(109) = {-0.001833, -0.729576, 0, 1.0};
Point(110) = {-0.010645, -0.728543, 0, 1.0};
Point(111) = {-0.019829, -0.727529, 0, 1.0};
Point(112) = {-0.029299, -0.726559, 0, 1.0};
Point(113) = {-0.038966, -0.725668, 0, 1.0};
Point(114) = {-0.048737, -0.724864, 0, 1.0};
Point(115) = {-0.058519, -0.724152, 0, 1.0};
Point(116) = {-0.068217, -0.723553, 0, 1.0};
Point(117) = {-0.077737, -0.723045, 0, 1.0};
Point(118) = {-0.086982, -0.722603, 0, 1.0};
Point(119) = {-0.095862, -0.722211, 0, 1.0};
Point(120) = {-0.104288, -0.721853, 0, 1.0};
Point(121) = {-0.112182, -0.721540, 0, 1.0};
Point(122) = {-0.119468, -0.721292, 0, 1.0};
Point(123) = {-0.126075, -0.721100, 0, 1.0};
Point(124) = {-0.131938, -0.720950, 0, 1.0};
Point(125) = {-0.136999, -0.720832, 0, 1.0};
Point(126) = {-0.141209, -0.720739, 0, 1.0};
Point(127) = {-0.144526, -0.720668, 0, 1.0};
Point(128) = {-0.146919, -0.720619, 0, 1.0};
Point(129) = {-0.148364, -0.720589, 0, 1.0};
Point(130) = {-0.148847, -0.720579, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
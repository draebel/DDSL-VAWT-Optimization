SetFactory("OpenCASCADE");

Point(1) = {0.111676, 0.728314, 0, 1.0};
Point(2) = {0.111326, 0.728438, 0, 1.0};
Point(3) = {0.110279, 0.728810, 0, 1.0};
Point(4) = {0.108547, 0.729429, 0, 1.0};
Point(5) = {0.106145, 0.730289, 0, 1.0};
Point(6) = {0.103094, 0.731361, 0, 1.0};
Point(7) = {0.099422, 0.732608, 0, 1.0};
Point(8) = {0.095159, 0.733982, 0, 1.0};
Point(9) = {0.090341, 0.735416, 0, 1.0};
Point(10) = {0.085014, 0.736890, 0, 1.0};
Point(11) = {0.079231, 0.738413, 0, 1.0};
Point(12) = {0.073043, 0.739919, 0, 1.0};
Point(13) = {0.066508, 0.741383, 0, 1.0};
Point(14) = {0.059688, 0.742784, 0, 1.0};
Point(15) = {0.052648, 0.744095, 0, 1.0};
Point(16) = {0.045454, 0.745297, 0, 1.0};
Point(17) = {0.038176, 0.746374, 0, 1.0};
Point(18) = {0.030883, 0.747309, 0, 1.0};
Point(19) = {0.023645, 0.748097, 0, 1.0};
Point(20) = {0.016533, 0.748733, 0, 1.0};
Point(21) = {0.009617, 0.749234, 0, 1.0};
Point(22) = {0.002966, 0.749610, 0, 1.0};
Point(23) = {-0.003357, 0.749857, 0, 1.0};
Point(24) = {-0.009288, 0.749988, 0, 1.0};
Point(25) = {-0.014771, 0.750000, 0, 1.0};
Point(26) = {-0.019758, 0.749845, 0, 1.0};
Point(27) = {-0.024204, 0.749506, 0, 1.0};
Point(28) = {-0.028057, 0.749059, 0, 1.0};
Point(29) = {-0.031286, 0.748457, 0, 1.0};
Point(30) = {-0.033863, 0.747675, 0, 1.0};
Point(31) = {-0.035759, 0.746762, 0, 1.0};
Point(32) = {-0.036968, 0.745601, 0, 1.0};
Point(33) = {-0.037500, 0.744019, 0, 1.0};
Point(34) = {-0.037266, 0.742808, 0, 1.0};
Point(35) = {-0.036306, 0.741624, 0, 1.0};
Point(36) = {-0.034613, 0.740631, 0, 1.0};
Point(37) = {-0.032211, 0.739779, 0, 1.0};
Point(38) = {-0.029125, 0.739037, 0, 1.0};
Point(39) = {-0.025391, 0.738369, 0, 1.0};
Point(40) = {-0.021053, 0.737694, 0, 1.0};
Point(41) = {-0.016158, 0.736991, 0, 1.0};
Point(42) = {-0.010754, 0.736228, 0, 1.0};
Point(43) = {-0.004891, 0.735462, 0, 1.0};
Point(44) = {0.001375, 0.734682, 0, 1.0};
Point(45) = {0.007984, 0.733907, 0, 1.0};
Point(46) = {0.014872, 0.733147, 0, 1.0};
Point(47) = {0.021974, 0.732419, 0, 1.0};
Point(48) = {0.029225, 0.731751, 0, 1.0};
Point(49) = {0.036553, 0.731148, 0, 1.0};
Point(50) = {0.043889, 0.730614, 0, 1.0};
Point(51) = {0.051163, 0.730165, 0, 1.0};
Point(52) = {0.058302, 0.729783, 0, 1.0};
Point(53) = {0.065236, 0.729452, 0, 1.0};
Point(54) = {0.071896, 0.729158, 0, 1.0};
Point(55) = {0.078216, 0.728890, 0, 1.0};
Point(56) = {0.084137, 0.728655, 0, 1.0};
Point(57) = {0.089601, 0.728469, 0, 1.0};
Point(58) = {0.094557, 0.728325, 0, 1.0};
Point(59) = {0.098954, 0.728212, 0, 1.0};
Point(60) = {0.102750, 0.728124, 0, 1.0};
Point(61) = {0.105907, 0.728054, 0, 1.0};
Point(62) = {0.108395, 0.728001, 0, 1.0};
Point(63) = {0.110189, 0.727964, 0, 1.0};
Point(64) = {0.111273, 0.727942, 0, 1.0};
Point(65) = {0.111635, 0.727934, 0, 1.0};
Point(66) = {-0.111676, -0.728314, 0, 1.0};
Point(67) = {-0.111326, -0.728438, 0, 1.0};
Point(68) = {-0.110279, -0.728810, 0, 1.0};
Point(69) = {-0.108547, -0.729429, 0, 1.0};
Point(70) = {-0.106145, -0.730289, 0, 1.0};
Point(71) = {-0.103094, -0.731361, 0, 1.0};
Point(72) = {-0.099422, -0.732608, 0, 1.0};
Point(73) = {-0.095159, -0.733982, 0, 1.0};
Point(74) = {-0.090341, -0.735416, 0, 1.0};
Point(75) = {-0.085014, -0.736890, 0, 1.0};
Point(76) = {-0.079231, -0.738413, 0, 1.0};
Point(77) = {-0.073043, -0.739919, 0, 1.0};
Point(78) = {-0.066508, -0.741383, 0, 1.0};
Point(79) = {-0.059688, -0.742784, 0, 1.0};
Point(80) = {-0.052648, -0.744095, 0, 1.0};
Point(81) = {-0.045454, -0.745297, 0, 1.0};
Point(82) = {-0.038176, -0.746374, 0, 1.0};
Point(83) = {-0.030883, -0.747309, 0, 1.0};
Point(84) = {-0.023645, -0.748097, 0, 1.0};
Point(85) = {-0.016533, -0.748733, 0, 1.0};
Point(86) = {-0.009617, -0.749234, 0, 1.0};
Point(87) = {-0.002966, -0.749610, 0, 1.0};
Point(88) = {0.003357, -0.749857, 0, 1.0};
Point(89) = {0.009288, -0.749988, 0, 1.0};
Point(90) = {0.014771, -0.750000, 0, 1.0};
Point(91) = {0.019758, -0.749845, 0, 1.0};
Point(92) = {0.024204, -0.749506, 0, 1.0};
Point(93) = {0.028057, -0.749059, 0, 1.0};
Point(94) = {0.031286, -0.748457, 0, 1.0};
Point(95) = {0.033863, -0.747675, 0, 1.0};
Point(96) = {0.035759, -0.746762, 0, 1.0};
Point(97) = {0.036968, -0.745601, 0, 1.0};
Point(98) = {0.037500, -0.744019, 0, 1.0};
Point(99) = {0.037266, -0.742808, 0, 1.0};
Point(100) = {0.036306, -0.741624, 0, 1.0};
Point(101) = {0.034613, -0.740631, 0, 1.0};
Point(102) = {0.032211, -0.739779, 0, 1.0};
Point(103) = {0.029125, -0.739037, 0, 1.0};
Point(104) = {0.025391, -0.738369, 0, 1.0};
Point(105) = {0.021053, -0.737694, 0, 1.0};
Point(106) = {0.016158, -0.736991, 0, 1.0};
Point(107) = {0.010754, -0.736228, 0, 1.0};
Point(108) = {0.004891, -0.735462, 0, 1.0};
Point(109) = {-0.001375, -0.734682, 0, 1.0};
Point(110) = {-0.007984, -0.733907, 0, 1.0};
Point(111) = {-0.014872, -0.733147, 0, 1.0};
Point(112) = {-0.021974, -0.732419, 0, 1.0};
Point(113) = {-0.029225, -0.731751, 0, 1.0};
Point(114) = {-0.036553, -0.731148, 0, 1.0};
Point(115) = {-0.043889, -0.730614, 0, 1.0};
Point(116) = {-0.051163, -0.730165, 0, 1.0};
Point(117) = {-0.058302, -0.729783, 0, 1.0};
Point(118) = {-0.065236, -0.729452, 0, 1.0};
Point(119) = {-0.071896, -0.729158, 0, 1.0};
Point(120) = {-0.078216, -0.728890, 0, 1.0};
Point(121) = {-0.084137, -0.728655, 0, 1.0};
Point(122) = {-0.089601, -0.728469, 0, 1.0};
Point(123) = {-0.094557, -0.728325, 0, 1.0};
Point(124) = {-0.098954, -0.728212, 0, 1.0};
Point(125) = {-0.102750, -0.728124, 0, 1.0};
Point(126) = {-0.105907, -0.728054, 0, 1.0};
Point(127) = {-0.108395, -0.728001, 0, 1.0};
Point(128) = {-0.110189, -0.727964, 0, 1.0};
Point(129) = {-0.111273, -0.727942, 0, 1.0};
Point(130) = {-0.111635, -0.727934, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
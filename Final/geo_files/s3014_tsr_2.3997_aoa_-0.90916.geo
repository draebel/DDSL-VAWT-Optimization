SetFactory("OpenCASCADE");

Point(1) = {0.074987, 0.743809, 0, 1.0};
Point(2) = {0.074650, 0.743824, 0, 1.0};
Point(3) = {0.073653, 0.743887, 0, 1.0};
Point(4) = {0.072028, 0.744026, 0, 1.0};
Point(5) = {0.069820, 0.744259, 0, 1.0};
Point(6) = {0.067082, 0.744594, 0, 1.0};
Point(7) = {0.063873, 0.745026, 0, 1.0};
Point(8) = {0.060255, 0.745545, 0, 1.0};
Point(9) = {0.056290, 0.746129, 0, 1.0};
Point(10) = {0.052042, 0.746755, 0, 1.0};
Point(11) = {0.047569, 0.747386, 0, 1.0};
Point(12) = {0.042918, 0.747985, 0, 1.0};
Point(13) = {0.038122, 0.748525, 0, 1.0};
Point(14) = {0.033221, 0.748997, 0, 1.0};
Point(15) = {0.028261, 0.749390, 0, 1.0};
Point(16) = {0.023293, 0.749693, 0, 1.0};
Point(17) = {0.018361, 0.749899, 0, 1.0};
Point(18) = {0.013510, 0.750000, 0, 1.0};
Point(19) = {0.008789, 0.749994, 0, 1.0};
Point(20) = {0.004236, 0.749879, 0, 1.0};
Point(21) = {-0.000104, 0.749661, 0, 1.0};
Point(22) = {-0.004186, 0.749343, 0, 1.0};
Point(23) = {-0.007968, 0.748927, 0, 1.0};
Point(24) = {-0.011414, 0.748409, 0, 1.0};
Point(25) = {-0.014502, 0.747792, 0, 1.0};
Point(26) = {-0.017212, 0.747087, 0, 1.0};
Point(27) = {-0.019529, 0.746306, 0, 1.0};
Point(28) = {-0.021444, 0.745469, 0, 1.0};
Point(29) = {-0.022949, 0.744599, 0, 1.0};
Point(30) = {-0.024046, 0.743729, 0, 1.0};
Point(31) = {-0.024733, 0.742908, 0, 1.0};
Point(32) = {-0.025000, 0.742219, 0, 1.0};
Point(33) = {-0.024708, 0.741701, 0, 1.0};
Point(34) = {-0.023802, 0.741269, 0, 1.0};
Point(35) = {-0.022368, 0.740881, 0, 1.0};
Point(36) = {-0.020428, 0.740563, 0, 1.0};
Point(37) = {-0.017996, 0.740327, 0, 1.0};
Point(38) = {-0.015087, 0.740175, 0, 1.0};
Point(39) = {-0.011726, 0.740103, 0, 1.0};
Point(40) = {-0.007940, 0.740106, 0, 1.0};
Point(41) = {-0.003768, 0.740174, 0, 1.0};
Point(42) = {0.000747, 0.740295, 0, 1.0};
Point(43) = {0.005552, 0.740463, 0, 1.0};
Point(44) = {0.010593, 0.740667, 0, 1.0};
Point(45) = {0.015813, 0.740899, 0, 1.0};
Point(46) = {0.021152, 0.741153, 0, 1.0};
Point(47) = {0.026546, 0.741420, 0, 1.0};
Point(48) = {0.031936, 0.741692, 0, 1.0};
Point(49) = {0.037254, 0.741964, 0, 1.0};
Point(50) = {0.042439, 0.742228, 0, 1.0};
Point(51) = {0.047428, 0.742478, 0, 1.0};
Point(52) = {0.052160, 0.742710, 0, 1.0};
Point(53) = {0.056576, 0.742921, 0, 1.0};
Point(54) = {0.060622, 0.743109, 0, 1.0};
Point(55) = {0.064245, 0.743271, 0, 1.0};
Point(56) = {0.067398, 0.743411, 0, 1.0};
Point(57) = {0.070040, 0.743531, 0, 1.0};
Point(58) = {0.072141, 0.743639, 0, 1.0};
Point(59) = {0.073687, 0.743736, 0, 1.0};
Point(60) = {0.074656, 0.743793, 0, 1.0};
Point(61) = {0.074988, 0.743809, 0, 1.0};
Point(62) = {-0.074987, -0.743809, 0, 1.0};
Point(63) = {-0.074650, -0.743824, 0, 1.0};
Point(64) = {-0.073653, -0.743887, 0, 1.0};
Point(65) = {-0.072028, -0.744026, 0, 1.0};
Point(66) = {-0.069820, -0.744259, 0, 1.0};
Point(67) = {-0.067082, -0.744594, 0, 1.0};
Point(68) = {-0.063873, -0.745026, 0, 1.0};
Point(69) = {-0.060255, -0.745545, 0, 1.0};
Point(70) = {-0.056290, -0.746129, 0, 1.0};
Point(71) = {-0.052042, -0.746755, 0, 1.0};
Point(72) = {-0.047569, -0.747386, 0, 1.0};
Point(73) = {-0.042918, -0.747985, 0, 1.0};
Point(74) = {-0.038122, -0.748525, 0, 1.0};
Point(75) = {-0.033221, -0.748997, 0, 1.0};
Point(76) = {-0.028261, -0.749390, 0, 1.0};
Point(77) = {-0.023293, -0.749693, 0, 1.0};
Point(78) = {-0.018361, -0.749899, 0, 1.0};
Point(79) = {-0.013510, -0.750000, 0, 1.0};
Point(80) = {-0.008789, -0.749994, 0, 1.0};
Point(81) = {-0.004236, -0.749879, 0, 1.0};
Point(82) = {0.000104, -0.749661, 0, 1.0};
Point(83) = {0.004186, -0.749343, 0, 1.0};
Point(84) = {0.007968, -0.748927, 0, 1.0};
Point(85) = {0.011414, -0.748409, 0, 1.0};
Point(86) = {0.014502, -0.747792, 0, 1.0};
Point(87) = {0.017212, -0.747087, 0, 1.0};
Point(88) = {0.019529, -0.746306, 0, 1.0};
Point(89) = {0.021444, -0.745469, 0, 1.0};
Point(90) = {0.022949, -0.744599, 0, 1.0};
Point(91) = {0.024046, -0.743729, 0, 1.0};
Point(92) = {0.024733, -0.742908, 0, 1.0};
Point(93) = {0.025000, -0.742219, 0, 1.0};
Point(94) = {0.024708, -0.741701, 0, 1.0};
Point(95) = {0.023802, -0.741269, 0, 1.0};
Point(96) = {0.022368, -0.740881, 0, 1.0};
Point(97) = {0.020428, -0.740563, 0, 1.0};
Point(98) = {0.017996, -0.740327, 0, 1.0};
Point(99) = {0.015087, -0.740175, 0, 1.0};
Point(100) = {0.011726, -0.740103, 0, 1.0};
Point(101) = {0.007940, -0.740106, 0, 1.0};
Point(102) = {0.003768, -0.740174, 0, 1.0};
Point(103) = {-0.000747, -0.740295, 0, 1.0};
Point(104) = {-0.005552, -0.740463, 0, 1.0};
Point(105) = {-0.010593, -0.740667, 0, 1.0};
Point(106) = {-0.015813, -0.740899, 0, 1.0};
Point(107) = {-0.021152, -0.741153, 0, 1.0};
Point(108) = {-0.026546, -0.741420, 0, 1.0};
Point(109) = {-0.031936, -0.741692, 0, 1.0};
Point(110) = {-0.037254, -0.741964, 0, 1.0};
Point(111) = {-0.042439, -0.742228, 0, 1.0};
Point(112) = {-0.047428, -0.742478, 0, 1.0};
Point(113) = {-0.052160, -0.742710, 0, 1.0};
Point(114) = {-0.056576, -0.742921, 0, 1.0};
Point(115) = {-0.060622, -0.743109, 0, 1.0};
Point(116) = {-0.064245, -0.743271, 0, 1.0};
Point(117) = {-0.067398, -0.743411, 0, 1.0};
Point(118) = {-0.070040, -0.743531, 0, 1.0};
Point(119) = {-0.072141, -0.743639, 0, 1.0};
Point(120) = {-0.073687, -0.743736, 0, 1.0};
Point(121) = {-0.074656, -0.743793, 0, 1.0};
Point(122) = {-0.074988, -0.743809, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149975, 0.737617, 0, 1.0};
Point(2) = {0.149300, 0.737649, 0, 1.0};
Point(3) = {0.147306, 0.737773, 0, 1.0};
Point(4) = {0.144055, 0.738051, 0, 1.0};
Point(5) = {0.139639, 0.738517, 0, 1.0};
Point(6) = {0.134164, 0.739189, 0, 1.0};
Point(7) = {0.127745, 0.740053, 0, 1.0};
Point(8) = {0.120510, 0.741090, 0, 1.0};
Point(9) = {0.112580, 0.742259, 0, 1.0};
Point(10) = {0.104084, 0.743510, 0, 1.0};
Point(11) = {0.095138, 0.744772, 0, 1.0};
Point(12) = {0.085836, 0.745971, 0, 1.0};
Point(13) = {0.076244, 0.747051, 0, 1.0};
Point(14) = {0.066442, 0.747993, 0, 1.0};
Point(15) = {0.056522, 0.748780, 0, 1.0};
Point(16) = {0.046585, 0.749386, 0, 1.0};
Point(17) = {0.036721, 0.749798, 0, 1.0};
Point(18) = {0.027021, 0.750000, 0, 1.0};
Point(19) = {0.017578, 0.749988, 0, 1.0};
Point(20) = {0.008472, 0.749758, 0, 1.0};
Point(21) = {-0.000208, 0.749322, 0, 1.0};
Point(22) = {-0.008373, 0.748686, 0, 1.0};
Point(23) = {-0.015936, 0.747854, 0, 1.0};
Point(24) = {-0.022829, 0.746819, 0, 1.0};
Point(25) = {-0.029004, 0.745584, 0, 1.0};
Point(26) = {-0.034424, 0.744174, 0, 1.0};
Point(27) = {-0.039058, 0.742613, 0, 1.0};
Point(28) = {-0.042888, 0.740938, 0, 1.0};
Point(29) = {-0.045899, 0.739198, 0, 1.0};
Point(30) = {-0.048092, 0.737459, 0, 1.0};
Point(31) = {-0.049466, 0.735817, 0, 1.0};
Point(32) = {-0.050000, 0.734438, 0, 1.0};
Point(33) = {-0.049415, 0.733401, 0, 1.0};
Point(34) = {-0.047603, 0.732538, 0, 1.0};
Point(35) = {-0.044737, 0.731761, 0, 1.0};
Point(36) = {-0.040856, 0.731127, 0, 1.0};
Point(37) = {-0.035992, 0.730654, 0, 1.0};
Point(38) = {-0.030175, 0.730350, 0, 1.0};
Point(39) = {-0.023451, 0.730207, 0, 1.0};
Point(40) = {-0.015881, 0.730213, 0, 1.0};
Point(41) = {-0.007536, 0.730347, 0, 1.0};
Point(42) = {0.001494, 0.730591, 0, 1.0};
Point(43) = {0.011104, 0.730925, 0, 1.0};
Point(44) = {0.021186, 0.731333, 0, 1.0};
Point(45) = {0.031626, 0.731799, 0, 1.0};
Point(46) = {0.042304, 0.732306, 0, 1.0};
Point(47) = {0.053092, 0.732840, 0, 1.0};
Point(48) = {0.063871, 0.733385, 0, 1.0};
Point(49) = {0.074508, 0.733927, 0, 1.0};
Point(50) = {0.084879, 0.734456, 0, 1.0};
Point(51) = {0.094856, 0.734956, 0, 1.0};
Point(52) = {0.104320, 0.735421, 0, 1.0};
Point(53) = {0.113152, 0.735843, 0, 1.0};
Point(54) = {0.121243, 0.736217, 0, 1.0};
Point(55) = {0.128489, 0.736542, 0, 1.0};
Point(56) = {0.134796, 0.736822, 0, 1.0};
Point(57) = {0.140080, 0.737062, 0, 1.0};
Point(58) = {0.144281, 0.737279, 0, 1.0};
Point(59) = {0.147375, 0.737472, 0, 1.0};
Point(60) = {0.149311, 0.737587, 0, 1.0};
Point(61) = {0.149977, 0.737617, 0, 1.0};
Point(62) = {-0.149975, -0.737617, 0, 1.0};
Point(63) = {-0.149300, -0.737649, 0, 1.0};
Point(64) = {-0.147306, -0.737773, 0, 1.0};
Point(65) = {-0.144055, -0.738051, 0, 1.0};
Point(66) = {-0.139639, -0.738517, 0, 1.0};
Point(67) = {-0.134164, -0.739189, 0, 1.0};
Point(68) = {-0.127745, -0.740053, 0, 1.0};
Point(69) = {-0.120510, -0.741090, 0, 1.0};
Point(70) = {-0.112580, -0.742259, 0, 1.0};
Point(71) = {-0.104084, -0.743510, 0, 1.0};
Point(72) = {-0.095138, -0.744772, 0, 1.0};
Point(73) = {-0.085836, -0.745971, 0, 1.0};
Point(74) = {-0.076244, -0.747051, 0, 1.0};
Point(75) = {-0.066442, -0.747993, 0, 1.0};
Point(76) = {-0.056522, -0.748780, 0, 1.0};
Point(77) = {-0.046585, -0.749386, 0, 1.0};
Point(78) = {-0.036721, -0.749798, 0, 1.0};
Point(79) = {-0.027021, -0.750000, 0, 1.0};
Point(80) = {-0.017578, -0.749988, 0, 1.0};
Point(81) = {-0.008472, -0.749758, 0, 1.0};
Point(82) = {0.000208, -0.749322, 0, 1.0};
Point(83) = {0.008373, -0.748686, 0, 1.0};
Point(84) = {0.015936, -0.747854, 0, 1.0};
Point(85) = {0.022829, -0.746819, 0, 1.0};
Point(86) = {0.029004, -0.745584, 0, 1.0};
Point(87) = {0.034424, -0.744174, 0, 1.0};
Point(88) = {0.039058, -0.742613, 0, 1.0};
Point(89) = {0.042888, -0.740938, 0, 1.0};
Point(90) = {0.045899, -0.739198, 0, 1.0};
Point(91) = {0.048092, -0.737459, 0, 1.0};
Point(92) = {0.049466, -0.735817, 0, 1.0};
Point(93) = {0.050000, -0.734438, 0, 1.0};
Point(94) = {0.049415, -0.733401, 0, 1.0};
Point(95) = {0.047603, -0.732538, 0, 1.0};
Point(96) = {0.044737, -0.731761, 0, 1.0};
Point(97) = {0.040856, -0.731127, 0, 1.0};
Point(98) = {0.035992, -0.730654, 0, 1.0};
Point(99) = {0.030175, -0.730350, 0, 1.0};
Point(100) = {0.023451, -0.730207, 0, 1.0};
Point(101) = {0.015881, -0.730213, 0, 1.0};
Point(102) = {0.007536, -0.730347, 0, 1.0};
Point(103) = {-0.001494, -0.730591, 0, 1.0};
Point(104) = {-0.011104, -0.730925, 0, 1.0};
Point(105) = {-0.021186, -0.731333, 0, 1.0};
Point(106) = {-0.031626, -0.731799, 0, 1.0};
Point(107) = {-0.042304, -0.732306, 0, 1.0};
Point(108) = {-0.053092, -0.732840, 0, 1.0};
Point(109) = {-0.063871, -0.733385, 0, 1.0};
Point(110) = {-0.074508, -0.733927, 0, 1.0};
Point(111) = {-0.084879, -0.734456, 0, 1.0};
Point(112) = {-0.094856, -0.734956, 0, 1.0};
Point(113) = {-0.104320, -0.735421, 0, 1.0};
Point(114) = {-0.113152, -0.735843, 0, 1.0};
Point(115) = {-0.121243, -0.736217, 0, 1.0};
Point(116) = {-0.128489, -0.736542, 0, 1.0};
Point(117) = {-0.134796, -0.736822, 0, 1.0};
Point(118) = {-0.140080, -0.737062, 0, 1.0};
Point(119) = {-0.144281, -0.737279, 0, 1.0};
Point(120) = {-0.147375, -0.737472, 0, 1.0};
Point(121) = {-0.149311, -0.737587, 0, 1.0};
Point(122) = {-0.149977, -0.737617, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
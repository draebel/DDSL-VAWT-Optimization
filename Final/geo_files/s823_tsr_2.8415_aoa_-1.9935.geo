SetFactory("OpenCASCADE");

Point(1) = {0.074939, 0.741504, 0, 1.0};
Point(2) = {0.074554, 0.741593, 0, 1.0};
Point(3) = {0.073489, 0.741903, 0, 1.0};
Point(4) = {0.071890, 0.742392, 0, 1.0};
Point(5) = {0.069807, 0.742945, 0, 1.0};
Point(6) = {0.067196, 0.743522, 0, 1.0};
Point(7) = {0.064084, 0.744153, 0, 1.0};
Point(8) = {0.060529, 0.744835, 0, 1.0};
Point(9) = {0.056591, 0.745558, 0, 1.0};
Point(10) = {0.052331, 0.746302, 0, 1.0};
Point(11) = {0.047811, 0.747043, 0, 1.0};
Point(12) = {0.043092, 0.747757, 0, 1.0};
Point(13) = {0.038231, 0.748415, 0, 1.0};
Point(14) = {0.033283, 0.748991, 0, 1.0};
Point(15) = {0.028301, 0.749459, 0, 1.0};
Point(16) = {0.023334, 0.749796, 0, 1.0};
Point(17) = {0.018429, 0.749983, 0, 1.0};
Point(18) = {0.013627, 0.750000, 0, 1.0};
Point(19) = {0.008965, 0.749826, 0, 1.0};
Point(20) = {0.004455, 0.749464, 0, 1.0};
Point(21) = {0.000139, 0.748928, 0, 1.0};
Point(22) = {-0.003960, 0.748230, 0, 1.0};
Point(23) = {-0.007801, 0.747396, 0, 1.0};
Point(24) = {-0.011344, 0.746443, 0, 1.0};
Point(25) = {-0.014551, 0.745392, 0, 1.0};
Point(26) = {-0.017388, 0.744259, 0, 1.0};
Point(27) = {-0.019823, 0.743065, 0, 1.0};
Point(28) = {-0.021833, 0.741831, 0, 1.0};
Point(29) = {-0.023387, 0.740589, 0, 1.0};
Point(30) = {-0.024459, 0.739370, 0, 1.0};
Point(31) = {-0.024867, 0.738633, 0, 1.0};
Point(32) = {-0.024958, 0.738359, 0, 1.0};
Point(33) = {-0.024984, 0.738242, 0, 1.0};
Point(34) = {-0.025000, 0.738099, 0, 1.0};
Point(35) = {-0.024976, 0.737833, 0, 1.0};
Point(36) = {-0.024903, 0.737545, 0, 1.0};
Point(37) = {-0.024730, 0.737096, 0, 1.0};
Point(38) = {-0.023898, 0.735665, 0, 1.0};
Point(39) = {-0.022715, 0.733962, 0, 1.0};
Point(40) = {-0.021363, 0.732210, 0, 1.0};
Point(41) = {-0.019824, 0.730532, 0, 1.0};
Point(42) = {-0.018142, 0.729088, 0, 1.0};
Point(43) = {-0.016214, 0.728074, 0, 1.0};
Point(44) = {-0.013819, 0.727430, 0, 1.0};
Point(45) = {-0.011003, 0.727063, 0, 1.0};
Point(46) = {-0.007799, 0.726965, 0, 1.0};
Point(47) = {-0.004230, 0.727137, 0, 1.0};
Point(48) = {-0.000317, 0.727572, 0, 1.0};
Point(49) = {0.003922, 0.728256, 0, 1.0};
Point(50) = {0.008463, 0.729171, 0, 1.0};
Point(51) = {0.013280, 0.730284, 0, 1.0};
Point(52) = {0.018341, 0.731558, 0, 1.0};
Point(53) = {0.023605, 0.732946, 0, 1.0};
Point(54) = {0.029025, 0.734394, 0, 1.0};
Point(55) = {0.034538, 0.735844, 0, 1.0};
Point(56) = {0.040073, 0.737237, 0, 1.0};
Point(57) = {0.045545, 0.738515, 0, 1.0};
Point(58) = {0.050858, 0.739628, 0, 1.0};
Point(59) = {0.055909, 0.740534, 0, 1.0};
Point(60) = {0.060585, 0.741209, 0, 1.0};
Point(61) = {0.064775, 0.741643, 0, 1.0};
Point(62) = {0.068369, 0.741844, 0, 1.0};
Point(63) = {0.071255, 0.741835, 0, 1.0};
Point(64) = {0.073322, 0.741702, 0, 1.0};
Point(65) = {0.074540, 0.741563, 0, 1.0};
Point(66) = {-0.074939, -0.741504, 0, 1.0};
Point(67) = {-0.074554, -0.741593, 0, 1.0};
Point(68) = {-0.073489, -0.741903, 0, 1.0};
Point(69) = {-0.071890, -0.742392, 0, 1.0};
Point(70) = {-0.069807, -0.742945, 0, 1.0};
Point(71) = {-0.067196, -0.743522, 0, 1.0};
Point(72) = {-0.064084, -0.744153, 0, 1.0};
Point(73) = {-0.060529, -0.744835, 0, 1.0};
Point(74) = {-0.056591, -0.745558, 0, 1.0};
Point(75) = {-0.052331, -0.746302, 0, 1.0};
Point(76) = {-0.047811, -0.747043, 0, 1.0};
Point(77) = {-0.043092, -0.747757, 0, 1.0};
Point(78) = {-0.038231, -0.748415, 0, 1.0};
Point(79) = {-0.033283, -0.748991, 0, 1.0};
Point(80) = {-0.028301, -0.749459, 0, 1.0};
Point(81) = {-0.023334, -0.749796, 0, 1.0};
Point(82) = {-0.018429, -0.749983, 0, 1.0};
Point(83) = {-0.013627, -0.750000, 0, 1.0};
Point(84) = {-0.008965, -0.749826, 0, 1.0};
Point(85) = {-0.004455, -0.749464, 0, 1.0};
Point(86) = {-0.000139, -0.748928, 0, 1.0};
Point(87) = {0.003960, -0.748230, 0, 1.0};
Point(88) = {0.007801, -0.747396, 0, 1.0};
Point(89) = {0.011344, -0.746443, 0, 1.0};
Point(90) = {0.014551, -0.745392, 0, 1.0};
Point(91) = {0.017388, -0.744259, 0, 1.0};
Point(92) = {0.019823, -0.743065, 0, 1.0};
Point(93) = {0.021833, -0.741831, 0, 1.0};
Point(94) = {0.023387, -0.740589, 0, 1.0};
Point(95) = {0.024459, -0.739370, 0, 1.0};
Point(96) = {0.024867, -0.738633, 0, 1.0};
Point(97) = {0.024958, -0.738359, 0, 1.0};
Point(98) = {0.024984, -0.738242, 0, 1.0};
Point(99) = {0.025000, -0.738099, 0, 1.0};
Point(100) = {0.024976, -0.737833, 0, 1.0};
Point(101) = {0.024903, -0.737545, 0, 1.0};
Point(102) = {0.024730, -0.737096, 0, 1.0};
Point(103) = {0.023898, -0.735665, 0, 1.0};
Point(104) = {0.022715, -0.733962, 0, 1.0};
Point(105) = {0.021363, -0.732210, 0, 1.0};
Point(106) = {0.019824, -0.730532, 0, 1.0};
Point(107) = {0.018142, -0.729088, 0, 1.0};
Point(108) = {0.016214, -0.728074, 0, 1.0};
Point(109) = {0.013819, -0.727430, 0, 1.0};
Point(110) = {0.011003, -0.727063, 0, 1.0};
Point(111) = {0.007799, -0.726965, 0, 1.0};
Point(112) = {0.004230, -0.727137, 0, 1.0};
Point(113) = {0.000317, -0.727572, 0, 1.0};
Point(114) = {-0.003922, -0.728256, 0, 1.0};
Point(115) = {-0.008463, -0.729171, 0, 1.0};
Point(116) = {-0.013280, -0.730284, 0, 1.0};
Point(117) = {-0.018341, -0.731558, 0, 1.0};
Point(118) = {-0.023605, -0.732946, 0, 1.0};
Point(119) = {-0.029025, -0.734394, 0, 1.0};
Point(120) = {-0.034538, -0.735844, 0, 1.0};
Point(121) = {-0.040073, -0.737237, 0, 1.0};
Point(122) = {-0.045545, -0.738515, 0, 1.0};
Point(123) = {-0.050858, -0.739628, 0, 1.0};
Point(124) = {-0.055909, -0.740534, 0, 1.0};
Point(125) = {-0.060585, -0.741209, 0, 1.0};
Point(126) = {-0.064775, -0.741643, 0, 1.0};
Point(127) = {-0.068369, -0.741844, 0, 1.0};
Point(128) = {-0.071255, -0.741835, 0, 1.0};
Point(129) = {-0.073322, -0.741702, 0, 1.0};
Point(130) = {-0.074540, -0.741563, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
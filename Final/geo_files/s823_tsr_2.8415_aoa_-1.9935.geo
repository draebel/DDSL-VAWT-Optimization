SetFactory("OpenCASCADE");

Point(1) = {0.112428, 0.737256, 0, 1.0};
Point(2) = {0.111850, 0.737390, 0, 1.0};
Point(3) = {0.110253, 0.737854, 0, 1.0};
Point(4) = {0.107854, 0.738588, 0, 1.0};
Point(5) = {0.104730, 0.739418, 0, 1.0};
Point(6) = {0.100813, 0.740283, 0, 1.0};
Point(7) = {0.096145, 0.741229, 0, 1.0};
Point(8) = {0.090813, 0.742253, 0, 1.0};
Point(9) = {0.084906, 0.743337, 0, 1.0};
Point(10) = {0.078516, 0.744452, 0, 1.0};
Point(11) = {0.071737, 0.745565, 0, 1.0};
Point(12) = {0.064658, 0.746635, 0, 1.0};
Point(13) = {0.057366, 0.747622, 0, 1.0};
Point(14) = {0.049945, 0.748486, 0, 1.0};
Point(15) = {0.042472, 0.749189, 0, 1.0};
Point(16) = {0.035022, 0.749695, 0, 1.0};
Point(17) = {0.027664, 0.749974, 0, 1.0};
Point(18) = {0.020462, 0.750000, 0, 1.0};
Point(19) = {0.013470, 0.749738, 0, 1.0};
Point(20) = {0.006704, 0.749196, 0, 1.0};
Point(21) = {0.000230, 0.748393, 0, 1.0};
Point(22) = {-0.005918, 0.747345, 0, 1.0};
Point(23) = {-0.011679, 0.746093, 0, 1.0};
Point(24) = {-0.016994, 0.744665, 0, 1.0};
Point(25) = {-0.021804, 0.743088, 0, 1.0};
Point(26) = {-0.026060, 0.741388, 0, 1.0};
Point(27) = {-0.029712, 0.739597, 0, 1.0};
Point(28) = {-0.032727, 0.737747, 0, 1.0};
Point(29) = {-0.035058, 0.735884, 0, 1.0};
Point(30) = {-0.036666, 0.734056, 0, 1.0};
Point(31) = {-0.037278, 0.732949, 0, 1.0};
Point(32) = {-0.037415, 0.732539, 0, 1.0};
Point(33) = {-0.037453, 0.732364, 0, 1.0};
Point(34) = {-0.037477, 0.732149, 0, 1.0};
Point(35) = {-0.037441, 0.731750, 0, 1.0};
Point(36) = {-0.037332, 0.731318, 0, 1.0};
Point(37) = {-0.037073, 0.730644, 0, 1.0};
Point(38) = {-0.035824, 0.728498, 0, 1.0};
Point(39) = {-0.034050, 0.725944, 0, 1.0};
Point(40) = {-0.032021, 0.723316, 0, 1.0};
Point(41) = {-0.029714, 0.720798, 0, 1.0};
Point(42) = {-0.027191, 0.718633, 0, 1.0};
Point(43) = {-0.024298, 0.717112, 0, 1.0};
Point(44) = {-0.020706, 0.716146, 0, 1.0};
Point(45) = {-0.016482, 0.715595, 0, 1.0};
Point(46) = {-0.011677, 0.715449, 0, 1.0};
Point(47) = {-0.006324, 0.715707, 0, 1.0};
Point(48) = {-0.000454, 0.716358, 0, 1.0};
Point(49) = {0.005904, 0.717385, 0, 1.0};
Point(50) = {0.012715, 0.718757, 0, 1.0};
Point(51) = {0.019941, 0.720427, 0, 1.0};
Point(52) = {0.027532, 0.722338, 0, 1.0};
Point(53) = {0.035429, 0.724419, 0, 1.0};
Point(54) = {0.043557, 0.726591, 0, 1.0};
Point(55) = {0.051827, 0.728766, 0, 1.0};
Point(56) = {0.060129, 0.730855, 0, 1.0};
Point(57) = {0.068337, 0.732773, 0, 1.0};
Point(58) = {0.076307, 0.734442, 0, 1.0};
Point(59) = {0.083883, 0.735802, 0, 1.0};
Point(60) = {0.090897, 0.736814, 0, 1.0};
Point(61) = {0.097181, 0.737464, 0, 1.0};
Point(62) = {0.102572, 0.737767, 0, 1.0};
Point(63) = {0.106902, 0.737754, 0, 1.0};
Point(64) = {0.110001, 0.737553, 0, 1.0};
Point(65) = {0.111829, 0.737345, 0, 1.0};
Point(66) = {-0.112428, -0.737256, 0, 1.0};
Point(67) = {-0.111850, -0.737390, 0, 1.0};
Point(68) = {-0.110253, -0.737854, 0, 1.0};
Point(69) = {-0.107854, -0.738588, 0, 1.0};
Point(70) = {-0.104730, -0.739418, 0, 1.0};
Point(71) = {-0.100813, -0.740283, 0, 1.0};
Point(72) = {-0.096145, -0.741229, 0, 1.0};
Point(73) = {-0.090813, -0.742253, 0, 1.0};
Point(74) = {-0.084906, -0.743337, 0, 1.0};
Point(75) = {-0.078516, -0.744452, 0, 1.0};
Point(76) = {-0.071737, -0.745565, 0, 1.0};
Point(77) = {-0.064658, -0.746635, 0, 1.0};
Point(78) = {-0.057366, -0.747622, 0, 1.0};
Point(79) = {-0.049945, -0.748486, 0, 1.0};
Point(80) = {-0.042472, -0.749189, 0, 1.0};
Point(81) = {-0.035022, -0.749695, 0, 1.0};
Point(82) = {-0.027664, -0.749974, 0, 1.0};
Point(83) = {-0.020462, -0.750000, 0, 1.0};
Point(84) = {-0.013470, -0.749738, 0, 1.0};
Point(85) = {-0.006704, -0.749196, 0, 1.0};
Point(86) = {-0.000230, -0.748393, 0, 1.0};
Point(87) = {0.005918, -0.747345, 0, 1.0};
Point(88) = {0.011679, -0.746093, 0, 1.0};
Point(89) = {0.016994, -0.744665, 0, 1.0};
Point(90) = {0.021804, -0.743088, 0, 1.0};
Point(91) = {0.026060, -0.741388, 0, 1.0};
Point(92) = {0.029712, -0.739597, 0, 1.0};
Point(93) = {0.032727, -0.737747, 0, 1.0};
Point(94) = {0.035058, -0.735884, 0, 1.0};
Point(95) = {0.036666, -0.734056, 0, 1.0};
Point(96) = {0.037278, -0.732949, 0, 1.0};
Point(97) = {0.037415, -0.732539, 0, 1.0};
Point(98) = {0.037453, -0.732364, 0, 1.0};
Point(99) = {0.037477, -0.732149, 0, 1.0};
Point(100) = {0.037441, -0.731750, 0, 1.0};
Point(101) = {0.037332, -0.731318, 0, 1.0};
Point(102) = {0.037073, -0.730644, 0, 1.0};
Point(103) = {0.035824, -0.728498, 0, 1.0};
Point(104) = {0.034050, -0.725944, 0, 1.0};
Point(105) = {0.032021, -0.723316, 0, 1.0};
Point(106) = {0.029714, -0.720798, 0, 1.0};
Point(107) = {0.027191, -0.718633, 0, 1.0};
Point(108) = {0.024298, -0.717112, 0, 1.0};
Point(109) = {0.020706, -0.716146, 0, 1.0};
Point(110) = {0.016482, -0.715595, 0, 1.0};
Point(111) = {0.011677, -0.715449, 0, 1.0};
Point(112) = {0.006324, -0.715707, 0, 1.0};
Point(113) = {0.000454, -0.716358, 0, 1.0};
Point(114) = {-0.005904, -0.717385, 0, 1.0};
Point(115) = {-0.012715, -0.718757, 0, 1.0};
Point(116) = {-0.019941, -0.720427, 0, 1.0};
Point(117) = {-0.027532, -0.722338, 0, 1.0};
Point(118) = {-0.035429, -0.724419, 0, 1.0};
Point(119) = {-0.043557, -0.726591, 0, 1.0};
Point(120) = {-0.051827, -0.728766, 0, 1.0};
Point(121) = {-0.060129, -0.730855, 0, 1.0};
Point(122) = {-0.068337, -0.732773, 0, 1.0};
Point(123) = {-0.076307, -0.734442, 0, 1.0};
Point(124) = {-0.083883, -0.735802, 0, 1.0};
Point(125) = {-0.090897, -0.736814, 0, 1.0};
Point(126) = {-0.097181, -0.737464, 0, 1.0};
Point(127) = {-0.102572, -0.737767, 0, 1.0};
Point(128) = {-0.106902, -0.737754, 0, 1.0};
Point(129) = {-0.110001, -0.737553, 0, 1.0};
Point(130) = {-0.111829, -0.737345, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 35 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
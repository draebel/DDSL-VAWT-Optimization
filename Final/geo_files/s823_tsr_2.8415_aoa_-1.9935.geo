SetFactory("OpenCASCADE");

Point(1) = {0.149879, 0.733008, 0, 1.0};
Point(2) = {0.149109, 0.733186, 0, 1.0};
Point(3) = {0.146979, 0.733805, 0, 1.0};
Point(4) = {0.143780, 0.734784, 0, 1.0};
Point(5) = {0.139614, 0.735890, 0, 1.0};
Point(6) = {0.134391, 0.737044, 0, 1.0};
Point(7) = {0.128168, 0.738305, 0, 1.0};
Point(8) = {0.121059, 0.739671, 0, 1.0};
Point(9) = {0.113182, 0.741116, 0, 1.0};
Point(10) = {0.104662, 0.742603, 0, 1.0};
Point(11) = {0.095623, 0.744086, 0, 1.0};
Point(12) = {0.086183, 0.745513, 0, 1.0};
Point(13) = {0.076461, 0.746830, 0, 1.0};
Point(14) = {0.066566, 0.747981, 0, 1.0};
Point(15) = {0.056602, 0.748918, 0, 1.0};
Point(16) = {0.046669, 0.749593, 0, 1.0};
Point(17) = {0.036857, 0.749966, 0, 1.0};
Point(18) = {0.027254, 0.750000, 0, 1.0};
Point(19) = {0.017931, 0.749651, 0, 1.0};
Point(20) = {0.008910, 0.748928, 0, 1.0};
Point(21) = {0.000278, 0.747857, 0, 1.0};
Point(22) = {-0.007919, 0.746461, 0, 1.0};
Point(23) = {-0.015601, 0.744791, 0, 1.0};
Point(24) = {-0.022688, 0.742887, 0, 1.0};
Point(25) = {-0.029101, 0.740783, 0, 1.0};
Point(26) = {-0.034777, 0.738517, 0, 1.0};
Point(27) = {-0.039647, 0.736130, 0, 1.0};
Point(28) = {-0.043666, 0.733663, 0, 1.0};
Point(29) = {-0.046774, 0.731178, 0, 1.0};
Point(30) = {-0.048919, 0.728741, 0, 1.0};
Point(31) = {-0.049734, 0.727265, 0, 1.0};
Point(32) = {-0.049917, 0.726719, 0, 1.0};
Point(33) = {-0.049968, 0.726484, 0, 1.0};
Point(34) = {-0.050000, 0.726198, 0, 1.0};
Point(35) = {-0.049952, 0.725666, 0, 1.0};
Point(36) = {-0.049806, 0.725090, 0, 1.0};
Point(37) = {-0.049460, 0.724191, 0, 1.0};
Point(38) = {-0.047796, 0.721331, 0, 1.0};
Point(39) = {-0.045430, 0.717924, 0, 1.0};
Point(40) = {-0.042725, 0.714421, 0, 1.0};
Point(41) = {-0.039648, 0.711064, 0, 1.0};
Point(42) = {-0.036285, 0.708176, 0, 1.0};
Point(43) = {-0.032428, 0.706149, 0, 1.0};
Point(44) = {-0.027638, 0.704860, 0, 1.0};
Point(45) = {-0.022006, 0.704125, 0, 1.0};
Point(46) = {-0.015598, 0.703931, 0, 1.0};
Point(47) = {-0.008461, 0.704274, 0, 1.0};
Point(48) = {-0.000634, 0.705143, 0, 1.0};
Point(49) = {0.007843, 0.706513, 0, 1.0};
Point(50) = {0.016925, 0.708341, 0, 1.0};
Point(51) = {0.026559, 0.710568, 0, 1.0};
Point(52) = {0.036681, 0.713116, 0, 1.0};
Point(53) = {0.047211, 0.715892, 0, 1.0};
Point(54) = {0.058049, 0.718788, 0, 1.0};
Point(55) = {0.069075, 0.721688, 0, 1.0};
Point(56) = {0.080145, 0.724473, 0, 1.0};
Point(57) = {0.091089, 0.727030, 0, 1.0};
Point(58) = {0.101717, 0.729255, 0, 1.0};
Point(59) = {0.111818, 0.731069, 0, 1.0};
Point(60) = {0.121170, 0.732418, 0, 1.0};
Point(61) = {0.129549, 0.733285, 0, 1.0};
Point(62) = {0.136737, 0.733689, 0, 1.0};
Point(63) = {0.142510, 0.733671, 0, 1.0};
Point(64) = {0.146643, 0.733404, 0, 1.0};
Point(65) = {0.149081, 0.733127, 0, 1.0};
Point(66) = {-0.149879, -0.733008, 0, 1.0};
Point(67) = {-0.149109, -0.733186, 0, 1.0};
Point(68) = {-0.146979, -0.733805, 0, 1.0};
Point(69) = {-0.143780, -0.734784, 0, 1.0};
Point(70) = {-0.139614, -0.735890, 0, 1.0};
Point(71) = {-0.134391, -0.737044, 0, 1.0};
Point(72) = {-0.128168, -0.738305, 0, 1.0};
Point(73) = {-0.121059, -0.739671, 0, 1.0};
Point(74) = {-0.113182, -0.741116, 0, 1.0};
Point(75) = {-0.104662, -0.742603, 0, 1.0};
Point(76) = {-0.095623, -0.744086, 0, 1.0};
Point(77) = {-0.086183, -0.745513, 0, 1.0};
Point(78) = {-0.076461, -0.746830, 0, 1.0};
Point(79) = {-0.066566, -0.747981, 0, 1.0};
Point(80) = {-0.056602, -0.748918, 0, 1.0};
Point(81) = {-0.046669, -0.749593, 0, 1.0};
Point(82) = {-0.036857, -0.749966, 0, 1.0};
Point(83) = {-0.027254, -0.750000, 0, 1.0};
Point(84) = {-0.017931, -0.749651, 0, 1.0};
Point(85) = {-0.008910, -0.748928, 0, 1.0};
Point(86) = {-0.000278, -0.747857, 0, 1.0};
Point(87) = {0.007919, -0.746461, 0, 1.0};
Point(88) = {0.015601, -0.744791, 0, 1.0};
Point(89) = {0.022688, -0.742887, 0, 1.0};
Point(90) = {0.029101, -0.740783, 0, 1.0};
Point(91) = {0.034777, -0.738517, 0, 1.0};
Point(92) = {0.039647, -0.736130, 0, 1.0};
Point(93) = {0.043666, -0.733663, 0, 1.0};
Point(94) = {0.046774, -0.731178, 0, 1.0};
Point(95) = {0.048919, -0.728741, 0, 1.0};
Point(96) = {0.049734, -0.727265, 0, 1.0};
Point(97) = {0.049917, -0.726719, 0, 1.0};
Point(98) = {0.049968, -0.726484, 0, 1.0};
Point(99) = {0.050000, -0.726198, 0, 1.0};
Point(100) = {0.049952, -0.725666, 0, 1.0};
Point(101) = {0.049806, -0.725090, 0, 1.0};
Point(102) = {0.049460, -0.724191, 0, 1.0};
Point(103) = {0.047796, -0.721331, 0, 1.0};
Point(104) = {0.045430, -0.717924, 0, 1.0};
Point(105) = {0.042725, -0.714421, 0, 1.0};
Point(106) = {0.039648, -0.711064, 0, 1.0};
Point(107) = {0.036285, -0.708176, 0, 1.0};
Point(108) = {0.032428, -0.706149, 0, 1.0};
Point(109) = {0.027638, -0.704860, 0, 1.0};
Point(110) = {0.022006, -0.704125, 0, 1.0};
Point(111) = {0.015598, -0.703931, 0, 1.0};
Point(112) = {0.008461, -0.704274, 0, 1.0};
Point(113) = {0.000634, -0.705143, 0, 1.0};
Point(114) = {-0.007843, -0.706513, 0, 1.0};
Point(115) = {-0.016925, -0.708341, 0, 1.0};
Point(116) = {-0.026559, -0.710568, 0, 1.0};
Point(117) = {-0.036681, -0.713116, 0, 1.0};
Point(118) = {-0.047211, -0.715892, 0, 1.0};
Point(119) = {-0.058049, -0.718788, 0, 1.0};
Point(120) = {-0.069075, -0.721688, 0, 1.0};
Point(121) = {-0.080145, -0.724473, 0, 1.0};
Point(122) = {-0.091089, -0.727030, 0, 1.0};
Point(123) = {-0.101717, -0.729255, 0, 1.0};
Point(124) = {-0.111818, -0.731069, 0, 1.0};
Point(125) = {-0.121170, -0.732418, 0, 1.0};
Point(126) = {-0.129549, -0.733285, 0, 1.0};
Point(127) = {-0.136737, -0.733689, 0, 1.0};
Point(128) = {-0.142510, -0.733671, 0, 1.0};
Point(129) = {-0.146643, -0.733404, 0, 1.0};
Point(130) = {-0.149081, -0.733127, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
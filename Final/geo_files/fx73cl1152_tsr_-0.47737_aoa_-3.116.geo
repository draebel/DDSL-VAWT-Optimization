SetFactory("OpenCASCADE");

Point(1) = {0.074770, 0.736477, 0, 1.0};
Point(2) = {0.072673, 0.736783, 0, 1.0};
Point(3) = {0.069907, 0.737192, 0, 1.0};
Point(4) = {0.066857, 0.737646, 0, 1.0};
Point(5) = {0.063534, 0.738144, 0, 1.0};
Point(6) = {0.059953, 0.738686, 0, 1.0};
Point(7) = {0.056130, 0.739261, 0, 1.0};
Point(8) = {0.052081, 0.739869, 0, 1.0};
Point(9) = {0.047824, 0.740517, 0, 1.0};
Point(10) = {0.043374, 0.741202, 0, 1.0};
Point(11) = {0.038753, 0.741921, 0, 1.0};
Point(12) = {0.033981, 0.742664, 0, 1.0};
Point(13) = {0.029077, 0.743433, 0, 1.0};
Point(14) = {0.024063, 0.744217, 0, 1.0};
Point(15) = {0.018961, 0.745010, 0, 1.0};
Point(16) = {0.013791, 0.745800, 0, 1.0};
Point(17) = {0.008579, 0.746575, 0, 1.0};
Point(18) = {0.003347, 0.747321, 0, 1.0};
Point(19) = {-0.001883, 0.748021, 0, 1.0};
Point(20) = {-0.007088, 0.748655, 0, 1.0};
Point(21) = {-0.012245, 0.749206, 0, 1.0};
Point(22) = {-0.017327, 0.749649, 0, 1.0};
Point(23) = {-0.022314, 0.749935, 0, 1.0};
Point(24) = {-0.027180, 0.750000, 0, 1.0};
Point(25) = {-0.031901, 0.749810, 0, 1.0};
Point(26) = {-0.036459, 0.749366, 0, 1.0};
Point(27) = {-0.040835, 0.748702, 0, 1.0};
Point(28) = {-0.045009, 0.747821, 0, 1.0};
Point(29) = {-0.048964, 0.746710, 0, 1.0};
Point(30) = {-0.052684, 0.745390, 0, 1.0};
Point(31) = {-0.056155, 0.743905, 0, 1.0};
Point(32) = {-0.059364, 0.742303, 0, 1.0};
Point(33) = {-0.062297, 0.740618, 0, 1.0};
Point(34) = {-0.064945, 0.738864, 0, 1.0};
Point(35) = {-0.067298, 0.737072, 0, 1.0};
Point(36) = {-0.069344, 0.735291, 0, 1.0};
Point(37) = {-0.071080, 0.733544, 0, 1.0};
Point(38) = {-0.072494, 0.731848, 0, 1.0};
Point(39) = {-0.073585, 0.730219, 0, 1.0};
Point(40) = {-0.074350, 0.728720, 0, 1.0};
Point(41) = {-0.074787, 0.727380, 0, 1.0};
Point(42) = {-0.074889, 0.726139, 0, 1.0};
Point(43) = {-0.074655, 0.724952, 0, 1.0};
Point(44) = {-0.074084, 0.723825, 0, 1.0};
Point(45) = {-0.073185, 0.722874, 0, 1.0};
Point(46) = {-0.071968, 0.722178, 0, 1.0};
Point(47) = {-0.070437, 0.721737, 0, 1.0};
Point(48) = {-0.068594, 0.721509, 0, 1.0};
Point(49) = {-0.066446, 0.721435, 0, 1.0};
Point(50) = {-0.064000, 0.721503, 0, 1.0};
Point(51) = {-0.061266, 0.721679, 0, 1.0};
Point(52) = {-0.058256, 0.721953, 0, 1.0};
Point(53) = {-0.054980, 0.722315, 0, 1.0};
Point(54) = {-0.051452, 0.722766, 0, 1.0};
Point(55) = {-0.047691, 0.723319, 0, 1.0};
Point(56) = {-0.043709, 0.723940, 0, 1.0};
Point(57) = {-0.039524, 0.724611, 0, 1.0};
Point(58) = {-0.035150, 0.725314, 0, 1.0};
Point(59) = {-0.030606, 0.726027, 0, 1.0};
Point(60) = {-0.025914, 0.726748, 0, 1.0};
Point(61) = {-0.021091, 0.727467, 0, 1.0};
Point(62) = {-0.016159, 0.728184, 0, 1.0};
Point(63) = {-0.011138, 0.728879, 0, 1.0};
Point(64) = {-0.006048, 0.729546, 0, 1.0};
Point(65) = {-0.000912, 0.730181, 0, 1.0};
Point(66) = {0.004247, 0.730787, 0, 1.0};
Point(67) = {0.009408, 0.731360, 0, 1.0};
Point(68) = {0.014548, 0.731897, 0, 1.0};
Point(69) = {0.019648, 0.732392, 0, 1.0};
Point(70) = {0.024682, 0.732843, 0, 1.0};
Point(71) = {0.029632, 0.733245, 0, 1.0};
Point(72) = {0.034474, 0.733601, 0, 1.0};
Point(73) = {0.039188, 0.733918, 0, 1.0};
Point(74) = {0.043756, 0.734192, 0, 1.0};
Point(75) = {0.048156, 0.734421, 0, 1.0};
Point(76) = {0.052368, 0.734599, 0, 1.0};
Point(77) = {0.056376, 0.734738, 0, 1.0};
Point(78) = {0.060162, 0.734844, 0, 1.0};
Point(79) = {0.063710, 0.734918, 0, 1.0};
Point(80) = {0.067003, 0.734966, 0, 1.0};
Point(81) = {0.070027, 0.734984, 0, 1.0};
Point(82) = {0.072771, 0.734979, 0, 1.0};
Point(83) = {0.074853, 0.734957, 0, 1.0};
Point(84) = {-0.074770, -0.736477, 0, 1.0};
Point(85) = {-0.072673, -0.736783, 0, 1.0};
Point(86) = {-0.069907, -0.737192, 0, 1.0};
Point(87) = {-0.066857, -0.737646, 0, 1.0};
Point(88) = {-0.063534, -0.738144, 0, 1.0};
Point(89) = {-0.059953, -0.738686, 0, 1.0};
Point(90) = {-0.056130, -0.739261, 0, 1.0};
Point(91) = {-0.052081, -0.739869, 0, 1.0};
Point(92) = {-0.047824, -0.740517, 0, 1.0};
Point(93) = {-0.043374, -0.741202, 0, 1.0};
Point(94) = {-0.038753, -0.741921, 0, 1.0};
Point(95) = {-0.033981, -0.742664, 0, 1.0};
Point(96) = {-0.029077, -0.743433, 0, 1.0};
Point(97) = {-0.024063, -0.744217, 0, 1.0};
Point(98) = {-0.018961, -0.745010, 0, 1.0};
Point(99) = {-0.013791, -0.745800, 0, 1.0};
Point(100) = {-0.008579, -0.746575, 0, 1.0};
Point(101) = {-0.003347, -0.747321, 0, 1.0};
Point(102) = {0.001883, -0.748021, 0, 1.0};
Point(103) = {0.007088, -0.748655, 0, 1.0};
Point(104) = {0.012245, -0.749206, 0, 1.0};
Point(105) = {0.017327, -0.749649, 0, 1.0};
Point(106) = {0.022314, -0.749935, 0, 1.0};
Point(107) = {0.027180, -0.750000, 0, 1.0};
Point(108) = {0.031901, -0.749810, 0, 1.0};
Point(109) = {0.036459, -0.749366, 0, 1.0};
Point(110) = {0.040835, -0.748702, 0, 1.0};
Point(111) = {0.045009, -0.747821, 0, 1.0};
Point(112) = {0.048964, -0.746710, 0, 1.0};
Point(113) = {0.052684, -0.745390, 0, 1.0};
Point(114) = {0.056155, -0.743905, 0, 1.0};
Point(115) = {0.059364, -0.742303, 0, 1.0};
Point(116) = {0.062297, -0.740618, 0, 1.0};
Point(117) = {0.064945, -0.738864, 0, 1.0};
Point(118) = {0.067298, -0.737072, 0, 1.0};
Point(119) = {0.069344, -0.735291, 0, 1.0};
Point(120) = {0.071080, -0.733544, 0, 1.0};
Point(121) = {0.072494, -0.731848, 0, 1.0};
Point(122) = {0.073585, -0.730219, 0, 1.0};
Point(123) = {0.074350, -0.728720, 0, 1.0};
Point(124) = {0.074787, -0.727380, 0, 1.0};
Point(125) = {0.074889, -0.726139, 0, 1.0};
Point(126) = {0.074655, -0.724952, 0, 1.0};
Point(127) = {0.074084, -0.723825, 0, 1.0};
Point(128) = {0.073185, -0.722874, 0, 1.0};
Point(129) = {0.071968, -0.722178, 0, 1.0};
Point(130) = {0.070437, -0.721737, 0, 1.0};
Point(131) = {0.068594, -0.721509, 0, 1.0};
Point(132) = {0.066446, -0.721435, 0, 1.0};
Point(133) = {0.064000, -0.721503, 0, 1.0};
Point(134) = {0.061266, -0.721679, 0, 1.0};
Point(135) = {0.058256, -0.721953, 0, 1.0};
Point(136) = {0.054980, -0.722315, 0, 1.0};
Point(137) = {0.051452, -0.722766, 0, 1.0};
Point(138) = {0.047691, -0.723319, 0, 1.0};
Point(139) = {0.043709, -0.723940, 0, 1.0};
Point(140) = {0.039524, -0.724611, 0, 1.0};
Point(141) = {0.035150, -0.725314, 0, 1.0};
Point(142) = {0.030606, -0.726027, 0, 1.0};
Point(143) = {0.025914, -0.726748, 0, 1.0};
Point(144) = {0.021091, -0.727467, 0, 1.0};
Point(145) = {0.016159, -0.728184, 0, 1.0};
Point(146) = {0.011138, -0.728879, 0, 1.0};
Point(147) = {0.006048, -0.729546, 0, 1.0};
Point(148) = {0.000912, -0.730181, 0, 1.0};
Point(149) = {-0.004247, -0.730787, 0, 1.0};
Point(150) = {-0.009408, -0.731360, 0, 1.0};
Point(151) = {-0.014548, -0.731897, 0, 1.0};
Point(152) = {-0.019648, -0.732392, 0, 1.0};
Point(153) = {-0.024682, -0.732843, 0, 1.0};
Point(154) = {-0.029632, -0.733245, 0, 1.0};
Point(155) = {-0.034474, -0.733601, 0, 1.0};
Point(156) = {-0.039188, -0.733918, 0, 1.0};
Point(157) = {-0.043756, -0.734192, 0, 1.0};
Point(158) = {-0.048156, -0.734421, 0, 1.0};
Point(159) = {-0.052368, -0.734599, 0, 1.0};
Point(160) = {-0.056376, -0.734738, 0, 1.0};
Point(161) = {-0.060162, -0.734844, 0, 1.0};
Point(162) = {-0.063710, -0.734918, 0, 1.0};
Point(163) = {-0.067003, -0.734966, 0, 1.0};
Point(164) = {-0.070027, -0.734984, 0, 1.0};
Point(165) = {-0.072771, -0.734979, 0, 1.0};
Point(166) = {-0.074853, -0.734957, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
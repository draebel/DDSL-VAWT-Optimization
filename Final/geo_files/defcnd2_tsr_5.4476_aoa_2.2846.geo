SetFactory("OpenCASCADE");

Point(1) = {0.074940, 0.728975, 0, 1.0};
Point(2) = {0.074700, 0.729039, 0, 1.0};
Point(3) = {0.073979, 0.729231, 0, 1.0};
Point(4) = {0.072782, 0.729550, 0, 1.0};
Point(5) = {0.071118, 0.729993, 0, 1.0};
Point(6) = {0.068997, 0.730559, 0, 1.0};
Point(7) = {0.066433, 0.731242, 0, 1.0};
Point(8) = {0.063443, 0.732039, 0, 1.0};
Point(9) = {0.060045, 0.732944, 0, 1.0};
Point(10) = {0.056262, 0.733953, 0, 1.0};
Point(11) = {0.052119, 0.735058, 0, 1.0};
Point(12) = {0.047642, 0.736250, 0, 1.0};
Point(13) = {0.042861, 0.737521, 0, 1.0};
Point(14) = {0.037806, 0.738877, 0, 1.0};
Point(15) = {0.032510, 0.740298, 0, 1.0};
Point(16) = {0.027005, 0.741692, 0, 1.0};
Point(17) = {0.021323, 0.743006, 0, 1.0};
Point(18) = {0.015503, 0.744227, 0, 1.0};
Point(19) = {0.009581, 0.745344, 0, 1.0};
Point(20) = {0.003596, 0.746355, 0, 1.0};
Point(21) = {-0.002409, 0.747335, 0, 1.0};
Point(22) = {-0.008399, 0.748216, 0, 1.0};
Point(23) = {-0.014338, 0.748911, 0, 1.0};
Point(24) = {-0.020188, 0.749373, 0, 1.0};
Point(25) = {-0.025908, 0.749723, 0, 1.0};
Point(26) = {-0.031458, 0.750000, 0, 1.0};
Point(27) = {-0.036816, 0.749849, 0, 1.0};
Point(28) = {-0.041941, 0.749463, 0, 1.0};
Point(29) = {-0.046795, 0.748926, 0, 1.0};
Point(30) = {-0.051357, 0.747977, 0, 1.0};
Point(31) = {-0.055589, 0.746847, 0, 1.0};
Point(32) = {-0.059462, 0.745594, 0, 1.0};
Point(33) = {-0.062949, 0.744254, 0, 1.0};
Point(34) = {-0.066028, 0.742848, 0, 1.0};
Point(35) = {-0.068677, 0.741390, 0, 1.0};
Point(36) = {-0.070880, 0.739899, 0, 1.0};
Point(37) = {-0.072621, 0.738424, 0, 1.0};
Point(38) = {-0.073886, 0.737016, 0, 1.0};
Point(39) = {-0.074665, 0.735747, 0, 1.0};
Point(40) = {-0.074940, 0.734954, 0, 1.0};
Point(41) = {-0.074733, 0.734045, 0, 1.0};
Point(42) = {-0.074033, 0.733328, 0, 1.0};
Point(43) = {-0.072848, 0.732733, 0, 1.0};
Point(44) = {-0.071191, 0.732117, 0, 1.0};
Point(45) = {-0.069071, 0.731527, 0, 1.0};
Point(46) = {-0.066501, 0.730993, 0, 1.0};
Point(47) = {-0.063499, 0.730489, 0, 1.0};
Point(48) = {-0.060083, 0.730025, 0, 1.0};
Point(49) = {-0.056277, 0.729598, 0, 1.0};
Point(50) = {-0.052106, 0.729204, 0, 1.0};
Point(51) = {-0.047596, 0.728841, 0, 1.0};
Point(52) = {-0.042777, 0.728505, 0, 1.0};
Point(53) = {-0.037680, 0.728198, 0, 1.0};
Point(54) = {-0.032339, 0.727918, 0, 1.0};
Point(55) = {-0.026788, 0.727667, 0, 1.0};
Point(56) = {-0.021063, 0.727446, 0, 1.0};
Point(57) = {-0.015202, 0.727258, 0, 1.0};
Point(58) = {-0.009241, 0.727105, 0, 1.0};
Point(59) = {-0.003221, 0.726994, 0, 1.0};
Point(60) = {0.002821, 0.726928, 0, 1.0};
Point(61) = {0.008846, 0.726915, 0, 1.0};
Point(62) = {0.014815, 0.726969, 0, 1.0};
Point(63) = {0.020689, 0.727105, 0, 1.0};
Point(64) = {0.026431, 0.727306, 0, 1.0};
Point(65) = {0.031999, 0.727499, 0, 1.0};
Point(66) = {0.037359, 0.727682, 0, 1.0};
Point(67) = {0.042475, 0.727859, 0, 1.0};
Point(68) = {0.047314, 0.728025, 0, 1.0};
Point(69) = {0.051845, 0.728180, 0, 1.0};
Point(70) = {0.056038, 0.728325, 0, 1.0};
Point(71) = {0.059866, 0.728456, 0, 1.0};
Point(72) = {0.063304, 0.728574, 0, 1.0};
Point(73) = {0.066331, 0.728679, 0, 1.0};
Point(74) = {0.068926, 0.728768, 0, 1.0};
Point(75) = {0.071072, 0.728842, 0, 1.0};
Point(76) = {0.072756, 0.728899, 0, 1.0};
Point(77) = {0.073967, 0.728941, 0, 1.0};
Point(78) = {0.074697, 0.728966, 0, 1.0};
Point(79) = {-0.074940, -0.728975, 0, 1.0};
Point(80) = {-0.074700, -0.729039, 0, 1.0};
Point(81) = {-0.073979, -0.729231, 0, 1.0};
Point(82) = {-0.072782, -0.729550, 0, 1.0};
Point(83) = {-0.071118, -0.729993, 0, 1.0};
Point(84) = {-0.068997, -0.730559, 0, 1.0};
Point(85) = {-0.066433, -0.731242, 0, 1.0};
Point(86) = {-0.063443, -0.732039, 0, 1.0};
Point(87) = {-0.060045, -0.732944, 0, 1.0};
Point(88) = {-0.056262, -0.733953, 0, 1.0};
Point(89) = {-0.052119, -0.735058, 0, 1.0};
Point(90) = {-0.047642, -0.736250, 0, 1.0};
Point(91) = {-0.042861, -0.737521, 0, 1.0};
Point(92) = {-0.037806, -0.738877, 0, 1.0};
Point(93) = {-0.032510, -0.740298, 0, 1.0};
Point(94) = {-0.027005, -0.741692, 0, 1.0};
Point(95) = {-0.021323, -0.743006, 0, 1.0};
Point(96) = {-0.015503, -0.744227, 0, 1.0};
Point(97) = {-0.009581, -0.745344, 0, 1.0};
Point(98) = {-0.003596, -0.746355, 0, 1.0};
Point(99) = {0.002409, -0.747335, 0, 1.0};
Point(100) = {0.008399, -0.748216, 0, 1.0};
Point(101) = {0.014338, -0.748911, 0, 1.0};
Point(102) = {0.020188, -0.749373, 0, 1.0};
Point(103) = {0.025908, -0.749723, 0, 1.0};
Point(104) = {0.031458, -0.750000, 0, 1.0};
Point(105) = {0.036816, -0.749849, 0, 1.0};
Point(106) = {0.041941, -0.749463, 0, 1.0};
Point(107) = {0.046795, -0.748926, 0, 1.0};
Point(108) = {0.051357, -0.747977, 0, 1.0};
Point(109) = {0.055589, -0.746847, 0, 1.0};
Point(110) = {0.059462, -0.745594, 0, 1.0};
Point(111) = {0.062949, -0.744254, 0, 1.0};
Point(112) = {0.066028, -0.742848, 0, 1.0};
Point(113) = {0.068677, -0.741390, 0, 1.0};
Point(114) = {0.070880, -0.739899, 0, 1.0};
Point(115) = {0.072621, -0.738424, 0, 1.0};
Point(116) = {0.073886, -0.737016, 0, 1.0};
Point(117) = {0.074665, -0.735747, 0, 1.0};
Point(118) = {0.074940, -0.734954, 0, 1.0};
Point(119) = {0.074733, -0.734045, 0, 1.0};
Point(120) = {0.074033, -0.733328, 0, 1.0};
Point(121) = {0.072848, -0.732733, 0, 1.0};
Point(122) = {0.071191, -0.732117, 0, 1.0};
Point(123) = {0.069071, -0.731527, 0, 1.0};
Point(124) = {0.066501, -0.730993, 0, 1.0};
Point(125) = {0.063499, -0.730489, 0, 1.0};
Point(126) = {0.060083, -0.730025, 0, 1.0};
Point(127) = {0.056277, -0.729598, 0, 1.0};
Point(128) = {0.052106, -0.729204, 0, 1.0};
Point(129) = {0.047596, -0.728841, 0, 1.0};
Point(130) = {0.042777, -0.728505, 0, 1.0};
Point(131) = {0.037680, -0.728198, 0, 1.0};
Point(132) = {0.032339, -0.727918, 0, 1.0};
Point(133) = {0.026788, -0.727667, 0, 1.0};
Point(134) = {0.021063, -0.727446, 0, 1.0};
Point(135) = {0.015202, -0.727258, 0, 1.0};
Point(136) = {0.009241, -0.727105, 0, 1.0};
Point(137) = {0.003221, -0.726994, 0, 1.0};
Point(138) = {-0.002821, -0.726928, 0, 1.0};
Point(139) = {-0.008846, -0.726915, 0, 1.0};
Point(140) = {-0.014815, -0.726969, 0, 1.0};
Point(141) = {-0.020689, -0.727105, 0, 1.0};
Point(142) = {-0.026431, -0.727306, 0, 1.0};
Point(143) = {-0.031999, -0.727499, 0, 1.0};
Point(144) = {-0.037359, -0.727682, 0, 1.0};
Point(145) = {-0.042475, -0.727859, 0, 1.0};
Point(146) = {-0.047314, -0.728025, 0, 1.0};
Point(147) = {-0.051845, -0.728180, 0, 1.0};
Point(148) = {-0.056038, -0.728325, 0, 1.0};
Point(149) = {-0.059866, -0.728456, 0, 1.0};
Point(150) = {-0.063304, -0.728574, 0, 1.0};
Point(151) = {-0.066331, -0.728679, 0, 1.0};
Point(152) = {-0.068926, -0.728768, 0, 1.0};
Point(153) = {-0.071072, -0.728842, 0, 1.0};
Point(154) = {-0.072756, -0.728899, 0, 1.0};
Point(155) = {-0.073967, -0.728941, 0, 1.0};
Point(156) = {-0.074697, -0.728966, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:53};
Spline(3) = {53:78};
Spline(4) = {78,1};

// Lines: second blade (splines 5-8)
Spline(5) = {79:104};
Spline(6) = {104:131};
Spline(7) = {131:156};
Spline(8) = {156,79};

// Outer domain (points 20001-4 and lines)
Point(157) = {-13.50000000, -15.00000000, 0, 1.0};
Point(158) = {-13.50000000, 15.00000000, 0, 1.0};
Point(159) = {13.50000000, 15.00000000, 0, 1.0};
Point(160) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {157, 158};
Line(12) = {158, 159};
Line(13) = {159, 160};
Line(14) = {157, 160};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
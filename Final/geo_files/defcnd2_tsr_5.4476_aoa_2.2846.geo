SetFactory("OpenCASCADE");

Point(1) = {0.149841, 0.721966, 0, 1.0};
Point(2) = {0.149520, 0.722052, 0, 1.0};
Point(3) = {0.148559, 0.722308, 0, 1.0};
Point(4) = {0.146964, 0.722733, 0, 1.0};
Point(5) = {0.144745, 0.723324, 0, 1.0};
Point(6) = {0.141917, 0.724078, 0, 1.0};
Point(7) = {0.138498, 0.724989, 0, 1.0};
Point(8) = {0.134511, 0.726052, 0, 1.0};
Point(9) = {0.129980, 0.727259, 0, 1.0};
Point(10) = {0.124937, 0.728604, 0, 1.0};
Point(11) = {0.119413, 0.730078, 0, 1.0};
Point(12) = {0.113443, 0.731667, 0, 1.0};
Point(13) = {0.107068, 0.733361, 0, 1.0};
Point(14) = {0.100328, 0.735170, 0, 1.0};
Point(15) = {0.093267, 0.737063, 0, 1.0};
Point(16) = {0.085927, 0.738923, 0, 1.0};
Point(17) = {0.078352, 0.740675, 0, 1.0};
Point(18) = {0.070591, 0.742302, 0, 1.0};
Point(19) = {0.062695, 0.743792, 0, 1.0};
Point(20) = {0.054716, 0.745141, 0, 1.0};
Point(21) = {0.046708, 0.746446, 0, 1.0};
Point(22) = {0.038722, 0.747621, 0, 1.0};
Point(23) = {0.030803, 0.748548, 0, 1.0};
Point(24) = {0.023003, 0.749164, 0, 1.0};
Point(25) = {0.015377, 0.749630, 0, 1.0};
Point(26) = {0.007977, 0.750000, 0, 1.0};
Point(27) = {0.000832, 0.749799, 0, 1.0};
Point(28) = {-0.006000, 0.749284, 0, 1.0};
Point(29) = {-0.012472, 0.748568, 0, 1.0};
Point(30) = {-0.018555, 0.747303, 0, 1.0};
Point(31) = {-0.024198, 0.745795, 0, 1.0};
Point(32) = {-0.029362, 0.744126, 0, 1.0};
Point(33) = {-0.034012, 0.742339, 0, 1.0};
Point(34) = {-0.038117, 0.740464, 0, 1.0};
Point(35) = {-0.041649, 0.738520, 0, 1.0};
Point(36) = {-0.044586, 0.736532, 0, 1.0};
Point(37) = {-0.046907, 0.734566, 0, 1.0};
Point(38) = {-0.048594, 0.732689, 0, 1.0};
Point(39) = {-0.049633, 0.730996, 0, 1.0};
Point(40) = {-0.050000, 0.729939, 0, 1.0};
Point(41) = {-0.049724, 0.728726, 0, 1.0};
Point(42) = {-0.048790, 0.727770, 0, 1.0};
Point(43) = {-0.047210, 0.726978, 0, 1.0};
Point(44) = {-0.045000, 0.726156, 0, 1.0};
Point(45) = {-0.042174, 0.725370, 0, 1.0};
Point(46) = {-0.038747, 0.724658, 0, 1.0};
Point(47) = {-0.034744, 0.723985, 0, 1.0};
Point(48) = {-0.030190, 0.723366, 0, 1.0};
Point(49) = {-0.025116, 0.722798, 0, 1.0};
Point(50) = {-0.019554, 0.722273, 0, 1.0};
Point(51) = {-0.013541, 0.721788, 0, 1.0};
Point(52) = {-0.007115, 0.721340, 0, 1.0};
Point(53) = {-0.000320, 0.720930, 0, 1.0};
Point(54) = {0.006802, 0.720557, 0, 1.0};
Point(55) = {0.014203, 0.720222, 0, 1.0};
Point(56) = {0.021836, 0.719928, 0, 1.0};
Point(57) = {0.029652, 0.719677, 0, 1.0};
Point(58) = {0.037599, 0.719473, 0, 1.0};
Point(59) = {0.045626, 0.719325, 0, 1.0};
Point(60) = {0.053682, 0.719237, 0, 1.0};
Point(61) = {0.061715, 0.719220, 0, 1.0};
Point(62) = {0.069673, 0.719292, 0, 1.0};
Point(63) = {0.077506, 0.719473, 0, 1.0};
Point(64) = {0.085162, 0.719741, 0, 1.0};
Point(65) = {0.092586, 0.719999, 0, 1.0};
Point(66) = {0.099733, 0.720243, 0, 1.0};
Point(67) = {0.106554, 0.720478, 0, 1.0};
Point(68) = {0.113006, 0.720700, 0, 1.0};
Point(69) = {0.119047, 0.720907, 0, 1.0};
Point(70) = {0.124637, 0.721100, 0, 1.0};
Point(71) = {0.129742, 0.721275, 0, 1.0};
Point(72) = {0.134326, 0.721433, 0, 1.0};
Point(73) = {0.138362, 0.721571, 0, 1.0};
Point(74) = {0.141822, 0.721690, 0, 1.0};
Point(75) = {0.144683, 0.721789, 0, 1.0};
Point(76) = {0.146929, 0.721866, 0, 1.0};
Point(77) = {0.148543, 0.721922, 0, 1.0};
Point(78) = {0.149516, 0.721955, 0, 1.0};
Point(79) = {-0.149841, -0.721966, 0, 1.0};
Point(80) = {-0.149520, -0.722052, 0, 1.0};
Point(81) = {-0.148559, -0.722308, 0, 1.0};
Point(82) = {-0.146964, -0.722733, 0, 1.0};
Point(83) = {-0.144745, -0.723324, 0, 1.0};
Point(84) = {-0.141917, -0.724078, 0, 1.0};
Point(85) = {-0.138498, -0.724989, 0, 1.0};
Point(86) = {-0.134511, -0.726052, 0, 1.0};
Point(87) = {-0.129980, -0.727259, 0, 1.0};
Point(88) = {-0.124937, -0.728604, 0, 1.0};
Point(89) = {-0.119413, -0.730078, 0, 1.0};
Point(90) = {-0.113443, -0.731667, 0, 1.0};
Point(91) = {-0.107068, -0.733361, 0, 1.0};
Point(92) = {-0.100328, -0.735170, 0, 1.0};
Point(93) = {-0.093267, -0.737063, 0, 1.0};
Point(94) = {-0.085927, -0.738923, 0, 1.0};
Point(95) = {-0.078352, -0.740675, 0, 1.0};
Point(96) = {-0.070591, -0.742302, 0, 1.0};
Point(97) = {-0.062695, -0.743792, 0, 1.0};
Point(98) = {-0.054716, -0.745141, 0, 1.0};
Point(99) = {-0.046708, -0.746446, 0, 1.0};
Point(100) = {-0.038722, -0.747621, 0, 1.0};
Point(101) = {-0.030803, -0.748548, 0, 1.0};
Point(102) = {-0.023003, -0.749164, 0, 1.0};
Point(103) = {-0.015377, -0.749630, 0, 1.0};
Point(104) = {-0.007977, -0.750000, 0, 1.0};
Point(105) = {-0.000832, -0.749799, 0, 1.0};
Point(106) = {0.006000, -0.749284, 0, 1.0};
Point(107) = {0.012472, -0.748568, 0, 1.0};
Point(108) = {0.018555, -0.747303, 0, 1.0};
Point(109) = {0.024198, -0.745795, 0, 1.0};
Point(110) = {0.029362, -0.744126, 0, 1.0};
Point(111) = {0.034012, -0.742339, 0, 1.0};
Point(112) = {0.038117, -0.740464, 0, 1.0};
Point(113) = {0.041649, -0.738520, 0, 1.0};
Point(114) = {0.044586, -0.736532, 0, 1.0};
Point(115) = {0.046907, -0.734566, 0, 1.0};
Point(116) = {0.048594, -0.732689, 0, 1.0};
Point(117) = {0.049633, -0.730996, 0, 1.0};
Point(118) = {0.050000, -0.729939, 0, 1.0};
Point(119) = {0.049724, -0.728726, 0, 1.0};
Point(120) = {0.048790, -0.727770, 0, 1.0};
Point(121) = {0.047210, -0.726978, 0, 1.0};
Point(122) = {0.045000, -0.726156, 0, 1.0};
Point(123) = {0.042174, -0.725370, 0, 1.0};
Point(124) = {0.038747, -0.724658, 0, 1.0};
Point(125) = {0.034744, -0.723985, 0, 1.0};
Point(126) = {0.030190, -0.723366, 0, 1.0};
Point(127) = {0.025116, -0.722798, 0, 1.0};
Point(128) = {0.019554, -0.722273, 0, 1.0};
Point(129) = {0.013541, -0.721788, 0, 1.0};
Point(130) = {0.007115, -0.721340, 0, 1.0};
Point(131) = {0.000320, -0.720930, 0, 1.0};
Point(132) = {-0.006802, -0.720557, 0, 1.0};
Point(133) = {-0.014203, -0.720222, 0, 1.0};
Point(134) = {-0.021836, -0.719928, 0, 1.0};
Point(135) = {-0.029652, -0.719677, 0, 1.0};
Point(136) = {-0.037599, -0.719473, 0, 1.0};
Point(137) = {-0.045626, -0.719325, 0, 1.0};
Point(138) = {-0.053682, -0.719237, 0, 1.0};
Point(139) = {-0.061715, -0.719220, 0, 1.0};
Point(140) = {-0.069673, -0.719292, 0, 1.0};
Point(141) = {-0.077506, -0.719473, 0, 1.0};
Point(142) = {-0.085162, -0.719741, 0, 1.0};
Point(143) = {-0.092586, -0.719999, 0, 1.0};
Point(144) = {-0.099733, -0.720243, 0, 1.0};
Point(145) = {-0.106554, -0.720478, 0, 1.0};
Point(146) = {-0.113006, -0.720700, 0, 1.0};
Point(147) = {-0.119047, -0.720907, 0, 1.0};
Point(148) = {-0.124637, -0.721100, 0, 1.0};
Point(149) = {-0.129742, -0.721275, 0, 1.0};
Point(150) = {-0.134326, -0.721433, 0, 1.0};
Point(151) = {-0.138362, -0.721571, 0, 1.0};
Point(152) = {-0.141822, -0.721690, 0, 1.0};
Point(153) = {-0.144683, -0.721789, 0, 1.0};
Point(154) = {-0.146929, -0.721866, 0, 1.0};
Point(155) = {-0.148543, -0.721922, 0, 1.0};
Point(156) = {-0.149516, -0.721955, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:53};
Spline(3) = {53:78};
Spline(4) = {78,1};

// Lines: second blade (splines 5-8)
Spline(5) = {79:104};
Spline(6) = {104:131};
Spline(7) = {131:156};
Spline(8) = {156,79};

// Outer domain (points 20001-4 and lines)
Point(157) = {-13.50000000, -15.00000000, 0, 1.0};
Point(158) = {-13.50000000, 15.00000000, 0, 1.0};
Point(159) = {13.50000000, 15.00000000, 0, 1.0};
Point(160) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {157, 158};
Line(12) = {158, 159};
Line(13) = {159, 160};
Line(14) = {157, 160};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
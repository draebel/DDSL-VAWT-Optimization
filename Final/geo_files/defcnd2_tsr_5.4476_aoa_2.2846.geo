SetFactory("OpenCASCADE");

Point(1) = {0.074921, 0.735983, 0, 1.0};
Point(2) = {0.074760, 0.736026, 0, 1.0};
Point(3) = {0.074279, 0.736154, 0, 1.0};
Point(4) = {0.073482, 0.736367, 0, 1.0};
Point(5) = {0.072372, 0.736662, 0, 1.0};
Point(6) = {0.070958, 0.737039, 0, 1.0};
Point(7) = {0.069249, 0.737495, 0, 1.0};
Point(8) = {0.067255, 0.738026, 0, 1.0};
Point(9) = {0.064990, 0.738630, 0, 1.0};
Point(10) = {0.062468, 0.739302, 0, 1.0};
Point(11) = {0.059706, 0.740039, 0, 1.0};
Point(12) = {0.056722, 0.740833, 0, 1.0};
Point(13) = {0.053534, 0.741680, 0, 1.0};
Point(14) = {0.050164, 0.742585, 0, 1.0};
Point(15) = {0.046634, 0.743532, 0, 1.0};
Point(16) = {0.042963, 0.744461, 0, 1.0};
Point(17) = {0.039176, 0.745338, 0, 1.0};
Point(18) = {0.035296, 0.746151, 0, 1.0};
Point(19) = {0.031348, 0.746896, 0, 1.0};
Point(20) = {0.027358, 0.747570, 0, 1.0};
Point(21) = {0.023354, 0.748223, 0, 1.0};
Point(22) = {0.019361, 0.748811, 0, 1.0};
Point(23) = {0.015402, 0.749274, 0, 1.0};
Point(24) = {0.011501, 0.749582, 0, 1.0};
Point(25) = {0.007688, 0.749815, 0, 1.0};
Point(26) = {0.003988, 0.750000, 0, 1.0};
Point(27) = {0.000416, 0.749899, 0, 1.0};
Point(28) = {-0.003000, 0.749642, 0, 1.0};
Point(29) = {-0.006236, 0.749284, 0, 1.0};
Point(30) = {-0.009278, 0.748651, 0, 1.0};
Point(31) = {-0.012099, 0.747898, 0, 1.0};
Point(32) = {-0.014681, 0.747063, 0, 1.0};
Point(33) = {-0.017006, 0.746169, 0, 1.0};
Point(34) = {-0.019058, 0.745232, 0, 1.0};
Point(35) = {-0.020825, 0.744260, 0, 1.0};
Point(36) = {-0.022293, 0.743266, 0, 1.0};
Point(37) = {-0.023454, 0.742283, 0, 1.0};
Point(38) = {-0.024297, 0.741344, 0, 1.0};
Point(39) = {-0.024817, 0.740498, 0, 1.0};
Point(40) = {-0.025000, 0.739969, 0, 1.0};
Point(41) = {-0.024862, 0.739363, 0, 1.0};
Point(42) = {-0.024395, 0.738885, 0, 1.0};
Point(43) = {-0.023605, 0.738489, 0, 1.0};
Point(44) = {-0.022500, 0.738078, 0, 1.0};
Point(45) = {-0.021087, 0.737685, 0, 1.0};
Point(46) = {-0.019374, 0.737329, 0, 1.0};
Point(47) = {-0.017372, 0.736993, 0, 1.0};
Point(48) = {-0.015095, 0.736683, 0, 1.0};
Point(49) = {-0.012558, 0.736399, 0, 1.0};
Point(50) = {-0.009777, 0.736136, 0, 1.0};
Point(51) = {-0.006770, 0.735894, 0, 1.0};
Point(52) = {-0.003558, 0.735670, 0, 1.0};
Point(53) = {-0.000160, 0.735465, 0, 1.0};
Point(54) = {0.003401, 0.735279, 0, 1.0};
Point(55) = {0.007102, 0.735111, 0, 1.0};
Point(56) = {0.010918, 0.734964, 0, 1.0};
Point(57) = {0.014826, 0.734838, 0, 1.0};
Point(58) = {0.018799, 0.734737, 0, 1.0};
Point(59) = {0.022813, 0.734663, 0, 1.0};
Point(60) = {0.026841, 0.734618, 0, 1.0};
Point(61) = {0.030858, 0.734610, 0, 1.0};
Point(62) = {0.034837, 0.734646, 0, 1.0};
Point(63) = {0.038753, 0.734736, 0, 1.0};
Point(64) = {0.042581, 0.734871, 0, 1.0};
Point(65) = {0.046293, 0.735000, 0, 1.0};
Point(66) = {0.049866, 0.735121, 0, 1.0};
Point(67) = {0.053277, 0.735239, 0, 1.0};
Point(68) = {0.056503, 0.735350, 0, 1.0};
Point(69) = {0.059523, 0.735454, 0, 1.0};
Point(70) = {0.062319, 0.735550, 0, 1.0};
Point(71) = {0.064871, 0.735638, 0, 1.0};
Point(72) = {0.067163, 0.735716, 0, 1.0};
Point(73) = {0.069181, 0.735786, 0, 1.0};
Point(74) = {0.070911, 0.735845, 0, 1.0};
Point(75) = {0.072342, 0.735894, 0, 1.0};
Point(76) = {0.073464, 0.735933, 0, 1.0};
Point(77) = {0.074272, 0.735961, 0, 1.0};
Point(78) = {0.074758, 0.735977, 0, 1.0};
Point(79) = {-0.074921, -0.735983, 0, 1.0};
Point(80) = {-0.074760, -0.736026, 0, 1.0};
Point(81) = {-0.074279, -0.736154, 0, 1.0};
Point(82) = {-0.073482, -0.736367, 0, 1.0};
Point(83) = {-0.072372, -0.736662, 0, 1.0};
Point(84) = {-0.070958, -0.737039, 0, 1.0};
Point(85) = {-0.069249, -0.737495, 0, 1.0};
Point(86) = {-0.067255, -0.738026, 0, 1.0};
Point(87) = {-0.064990, -0.738630, 0, 1.0};
Point(88) = {-0.062468, -0.739302, 0, 1.0};
Point(89) = {-0.059706, -0.740039, 0, 1.0};
Point(90) = {-0.056722, -0.740833, 0, 1.0};
Point(91) = {-0.053534, -0.741680, 0, 1.0};
Point(92) = {-0.050164, -0.742585, 0, 1.0};
Point(93) = {-0.046634, -0.743532, 0, 1.0};
Point(94) = {-0.042963, -0.744461, 0, 1.0};
Point(95) = {-0.039176, -0.745338, 0, 1.0};
Point(96) = {-0.035296, -0.746151, 0, 1.0};
Point(97) = {-0.031348, -0.746896, 0, 1.0};
Point(98) = {-0.027358, -0.747570, 0, 1.0};
Point(99) = {-0.023354, -0.748223, 0, 1.0};
Point(100) = {-0.019361, -0.748811, 0, 1.0};
Point(101) = {-0.015402, -0.749274, 0, 1.0};
Point(102) = {-0.011501, -0.749582, 0, 1.0};
Point(103) = {-0.007688, -0.749815, 0, 1.0};
Point(104) = {-0.003988, -0.750000, 0, 1.0};
Point(105) = {-0.000416, -0.749899, 0, 1.0};
Point(106) = {0.003000, -0.749642, 0, 1.0};
Point(107) = {0.006236, -0.749284, 0, 1.0};
Point(108) = {0.009278, -0.748651, 0, 1.0};
Point(109) = {0.012099, -0.747898, 0, 1.0};
Point(110) = {0.014681, -0.747063, 0, 1.0};
Point(111) = {0.017006, -0.746169, 0, 1.0};
Point(112) = {0.019058, -0.745232, 0, 1.0};
Point(113) = {0.020825, -0.744260, 0, 1.0};
Point(114) = {0.022293, -0.743266, 0, 1.0};
Point(115) = {0.023454, -0.742283, 0, 1.0};
Point(116) = {0.024297, -0.741344, 0, 1.0};
Point(117) = {0.024817, -0.740498, 0, 1.0};
Point(118) = {0.025000, -0.739969, 0, 1.0};
Point(119) = {0.024862, -0.739363, 0, 1.0};
Point(120) = {0.024395, -0.738885, 0, 1.0};
Point(121) = {0.023605, -0.738489, 0, 1.0};
Point(122) = {0.022500, -0.738078, 0, 1.0};
Point(123) = {0.021087, -0.737685, 0, 1.0};
Point(124) = {0.019374, -0.737329, 0, 1.0};
Point(125) = {0.017372, -0.736993, 0, 1.0};
Point(126) = {0.015095, -0.736683, 0, 1.0};
Point(127) = {0.012558, -0.736399, 0, 1.0};
Point(128) = {0.009777, -0.736136, 0, 1.0};
Point(129) = {0.006770, -0.735894, 0, 1.0};
Point(130) = {0.003558, -0.735670, 0, 1.0};
Point(131) = {0.000160, -0.735465, 0, 1.0};
Point(132) = {-0.003401, -0.735279, 0, 1.0};
Point(133) = {-0.007102, -0.735111, 0, 1.0};
Point(134) = {-0.010918, -0.734964, 0, 1.0};
Point(135) = {-0.014826, -0.734838, 0, 1.0};
Point(136) = {-0.018799, -0.734737, 0, 1.0};
Point(137) = {-0.022813, -0.734663, 0, 1.0};
Point(138) = {-0.026841, -0.734618, 0, 1.0};
Point(139) = {-0.030858, -0.734610, 0, 1.0};
Point(140) = {-0.034837, -0.734646, 0, 1.0};
Point(141) = {-0.038753, -0.734736, 0, 1.0};
Point(142) = {-0.042581, -0.734871, 0, 1.0};
Point(143) = {-0.046293, -0.735000, 0, 1.0};
Point(144) = {-0.049866, -0.735121, 0, 1.0};
Point(145) = {-0.053277, -0.735239, 0, 1.0};
Point(146) = {-0.056503, -0.735350, 0, 1.0};
Point(147) = {-0.059523, -0.735454, 0, 1.0};
Point(148) = {-0.062319, -0.735550, 0, 1.0};
Point(149) = {-0.064871, -0.735638, 0, 1.0};
Point(150) = {-0.067163, -0.735716, 0, 1.0};
Point(151) = {-0.069181, -0.735786, 0, 1.0};
Point(152) = {-0.070911, -0.735845, 0, 1.0};
Point(153) = {-0.072342, -0.735894, 0, 1.0};
Point(154) = {-0.073464, -0.735933, 0, 1.0};
Point(155) = {-0.074272, -0.735961, 0, 1.0};
Point(156) = {-0.074758, -0.735977, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:53};
Spline(3) = {53:78};
Spline(4) = {78,1};

// Lines: second blade (splines 5-8)
Spline(5) = {79:104};
Spline(6) = {104:131};
Spline(7) = {131:156};
Spline(8) = {156,79};

// Outer domain (points 20001-4 and lines)
Point(157) = {-13.50000000, -15.00000000, 0, 1.0};
Point(158) = {-13.50000000, 15.00000000, 0, 1.0};
Point(159) = {13.50000000, 15.00000000, 0, 1.0};
Point(160) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {157, 158};
Line(12) = {158, 159};
Line(13) = {159, 160};
Line(14) = {157, 160};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
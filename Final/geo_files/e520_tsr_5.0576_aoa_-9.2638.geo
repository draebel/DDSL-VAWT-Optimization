SetFactory("OpenCASCADE");

Point(1) = {0.147392, 0.750000, 0, 1.0};
Point(2) = {0.146678, 0.749912, 0, 1.0};
Point(3) = {0.144571, 0.749698, 0, 1.0};
Point(4) = {0.141145, 0.749421, 0, 1.0};
Point(5) = {0.136483, 0.749108, 0, 1.0};
Point(6) = {0.130647, 0.748795, 0, 1.0};
Point(7) = {0.123740, 0.748529, 0, 1.0};
Point(8) = {0.115895, 0.748360, 0, 1.0};
Point(9) = {0.107267, 0.748317, 0, 1.0};
Point(10) = {0.098045, 0.748405, 0, 1.0};
Point(11) = {0.088440, 0.748610, 0, 1.0};
Point(12) = {0.078702, 0.748815, 0, 1.0};
Point(13) = {0.068932, 0.748810, 0, 1.0};
Point(14) = {0.059108, 0.748497, 0, 1.0};
Point(15) = {0.049254, 0.747876, 0, 1.0};
Point(16) = {0.039410, 0.746966, 0, 1.0};
Point(17) = {0.029658, 0.745815, 0, 1.0};
Point(18) = {0.020106, 0.744445, 0, 1.0};
Point(19) = {0.010846, 0.742876, 0, 1.0};
Point(20) = {0.001969, 0.741126, 0, 1.0};
Point(21) = {-0.006392, 0.739227, 0, 1.0};
Point(22) = {-0.014271, 0.737180, 0, 1.0};
Point(23) = {-0.021475, 0.735029, 0, 1.0};
Point(24) = {-0.027975, 0.732789, 0, 1.0};
Point(25) = {-0.033712, 0.730490, 0, 1.0};
Point(26) = {-0.038637, 0.728162, 0, 1.0};
Point(27) = {-0.042715, 0.725842, 0, 1.0};
Point(28) = {-0.045914, 0.723575, 0, 1.0};
Point(29) = {-0.048217, 0.721418, 0, 1.0};
Point(30) = {-0.049598, 0.719452, 0, 1.0};
Point(31) = {-0.049828, 0.718912, 0, 1.0};
Point(32) = {-0.049933, 0.718571, 0, 1.0};
Point(33) = {-0.049995, 0.718247, 0, 1.0};
Point(34) = {-0.050011, 0.718092, 0, 1.0};
Point(35) = {-0.050013, 0.717944, 0, 1.0};
Point(36) = {-0.049968, 0.717668, 0, 1.0};
Point(37) = {-0.049918, 0.717528, 0, 1.0};
Point(38) = {-0.049855, 0.717386, 0, 1.0};
Point(39) = {-0.049692, 0.717098, 0, 1.0};
Point(40) = {-0.049485, 0.716808, 0, 1.0};
Point(41) = {-0.049095, 0.716369, 0, 1.0};
Point(42) = {-0.047161, 0.714944, 0, 1.0};
Point(43) = {-0.044292, 0.713631, 0, 1.0};
Point(44) = {-0.040538, 0.712498, 0, 1.0};
Point(45) = {-0.035935, 0.711593, 0, 1.0};
Point(46) = {-0.030525, 0.710952, 0, 1.0};
Point(47) = {-0.024355, 0.710594, 0, 1.0};
Point(48) = {-0.017480, 0.710536, 0, 1.0};
Point(49) = {-0.009966, 0.710785, 0, 1.0};
Point(50) = {-0.001884, 0.711341, 0, 1.0};
Point(51) = {0.006687, 0.712204, 0, 1.0};
Point(52) = {0.015659, 0.713366, 0, 1.0};
Point(53) = {0.024938, 0.714821, 0, 1.0};
Point(54) = {0.034430, 0.716557, 0, 1.0};
Point(55) = {0.044042, 0.718565, 0, 1.0};
Point(56) = {0.053665, 0.720829, 0, 1.0};
Point(57) = {0.063206, 0.723373, 0, 1.0};
Point(58) = {0.072620, 0.726197, 0, 1.0};
Point(59) = {0.081886, 0.729297, 0, 1.0};
Point(60) = {0.091054, 0.732586, 0, 1.0};
Point(61) = {0.100096, 0.735832, 0, 1.0};
Point(62) = {0.108812, 0.738846, 0, 1.0};
Point(63) = {0.117006, 0.741546, 0, 1.0};
Point(64) = {0.124498, 0.743879, 0, 1.0};
Point(65) = {0.131132, 0.745824, 0, 1.0};
Point(66) = {0.136765, 0.747379, 0, 1.0};
Point(67) = {0.141285, 0.748564, 0, 1.0};
Point(68) = {0.144622, 0.749390, 0, 1.0};
Point(69) = {0.146687, 0.749857, 0, 1.0};
Point(70) = {-0.147392, -0.750000, 0, 1.0};
Point(71) = {-0.146678, -0.749912, 0, 1.0};
Point(72) = {-0.144571, -0.749698, 0, 1.0};
Point(73) = {-0.141145, -0.749421, 0, 1.0};
Point(74) = {-0.136483, -0.749108, 0, 1.0};
Point(75) = {-0.130647, -0.748795, 0, 1.0};
Point(76) = {-0.123740, -0.748529, 0, 1.0};
Point(77) = {-0.115895, -0.748360, 0, 1.0};
Point(78) = {-0.107267, -0.748317, 0, 1.0};
Point(79) = {-0.098045, -0.748405, 0, 1.0};
Point(80) = {-0.088440, -0.748610, 0, 1.0};
Point(81) = {-0.078702, -0.748815, 0, 1.0};
Point(82) = {-0.068932, -0.748810, 0, 1.0};
Point(83) = {-0.059108, -0.748497, 0, 1.0};
Point(84) = {-0.049254, -0.747876, 0, 1.0};
Point(85) = {-0.039410, -0.746966, 0, 1.0};
Point(86) = {-0.029658, -0.745815, 0, 1.0};
Point(87) = {-0.020106, -0.744445, 0, 1.0};
Point(88) = {-0.010846, -0.742876, 0, 1.0};
Point(89) = {-0.001969, -0.741126, 0, 1.0};
Point(90) = {0.006392, -0.739227, 0, 1.0};
Point(91) = {0.014271, -0.737180, 0, 1.0};
Point(92) = {0.021475, -0.735029, 0, 1.0};
Point(93) = {0.027975, -0.732789, 0, 1.0};
Point(94) = {0.033712, -0.730490, 0, 1.0};
Point(95) = {0.038637, -0.728162, 0, 1.0};
Point(96) = {0.042715, -0.725842, 0, 1.0};
Point(97) = {0.045914, -0.723575, 0, 1.0};
Point(98) = {0.048217, -0.721418, 0, 1.0};
Point(99) = {0.049598, -0.719452, 0, 1.0};
Point(100) = {0.049828, -0.718912, 0, 1.0};
Point(101) = {0.049933, -0.718571, 0, 1.0};
Point(102) = {0.049995, -0.718247, 0, 1.0};
Point(103) = {0.050011, -0.718092, 0, 1.0};
Point(104) = {0.050013, -0.717944, 0, 1.0};
Point(105) = {0.049968, -0.717668, 0, 1.0};
Point(106) = {0.049918, -0.717528, 0, 1.0};
Point(107) = {0.049855, -0.717386, 0, 1.0};
Point(108) = {0.049692, -0.717098, 0, 1.0};
Point(109) = {0.049485, -0.716808, 0, 1.0};
Point(110) = {0.049095, -0.716369, 0, 1.0};
Point(111) = {0.047161, -0.714944, 0, 1.0};
Point(112) = {0.044292, -0.713631, 0, 1.0};
Point(113) = {0.040538, -0.712498, 0, 1.0};
Point(114) = {0.035935, -0.711593, 0, 1.0};
Point(115) = {0.030525, -0.710952, 0, 1.0};
Point(116) = {0.024355, -0.710594, 0, 1.0};
Point(117) = {0.017480, -0.710536, 0, 1.0};
Point(118) = {0.009966, -0.710785, 0, 1.0};
Point(119) = {0.001884, -0.711341, 0, 1.0};
Point(120) = {-0.006687, -0.712204, 0, 1.0};
Point(121) = {-0.015659, -0.713366, 0, 1.0};
Point(122) = {-0.024938, -0.714821, 0, 1.0};
Point(123) = {-0.034430, -0.716557, 0, 1.0};
Point(124) = {-0.044042, -0.718565, 0, 1.0};
Point(125) = {-0.053665, -0.720829, 0, 1.0};
Point(126) = {-0.063206, -0.723373, 0, 1.0};
Point(127) = {-0.072620, -0.726197, 0, 1.0};
Point(128) = {-0.081886, -0.729297, 0, 1.0};
Point(129) = {-0.091054, -0.732586, 0, 1.0};
Point(130) = {-0.100096, -0.735832, 0, 1.0};
Point(131) = {-0.108812, -0.738846, 0, 1.0};
Point(132) = {-0.117006, -0.741546, 0, 1.0};
Point(133) = {-0.124498, -0.743879, 0, 1.0};
Point(134) = {-0.131132, -0.745824, 0, 1.0};
Point(135) = {-0.136765, -0.747379, 0, 1.0};
Point(136) = {-0.141285, -0.748564, 0, 1.0};
Point(137) = {-0.144622, -0.749390, 0, 1.0};
Point(138) = {-0.146687, -0.749857, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:51};
Spline(3) = {51:69};
Spline(4) = {69,1};

// Lines: second blade (splines 5-8)
Spline(5) = {70:89};
Spline(6) = {89:120};
Spline(7) = {120:138};
Spline(8) = {138,70};

// Outer domain (points 20001-4 and lines)
Point(139) = {-13.50000000, -15.00000000, 0, 1.0};
Point(140) = {-13.50000000, 15.00000000, 0, 1.0};
Point(141) = {13.50000000, 15.00000000, 0, 1.0};
Point(142) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {139, 140};
Line(12) = {140, 141};
Line(13) = {141, 142};
Line(14) = {139, 142};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
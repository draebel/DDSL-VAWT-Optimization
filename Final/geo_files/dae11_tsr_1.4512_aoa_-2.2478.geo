SetFactory("OpenCASCADE");

Point(1) = {0.149846, 0.728920, 0, 1.0};
Point(2) = {0.147125, 0.729321, 0, 1.0};
Point(3) = {0.143808, 0.729807, 0, 1.0};
Point(4) = {0.139350, 0.730518, 0, 1.0};
Point(5) = {0.133452, 0.731555, 0, 1.0};
Point(6) = {0.127272, 0.732750, 0, 1.0};
Point(7) = {0.121214, 0.734026, 0, 1.0};
Point(8) = {0.115155, 0.735395, 0, 1.0};
Point(9) = {0.109060, 0.736847, 0, 1.0};
Point(10) = {0.102910, 0.738370, 0, 1.0};
Point(11) = {0.096694, 0.739944, 0, 1.0};
Point(12) = {0.090436, 0.741547, 0, 1.0};
Point(13) = {0.084284, 0.743103, 0, 1.0};
Point(14) = {0.078265, 0.744565, 0, 1.0};
Point(15) = {0.072374, 0.745893, 0, 1.0};
Point(16) = {0.066587, 0.747050, 0, 1.0};
Point(17) = {0.060857, 0.748012, 0, 1.0};
Point(18) = {0.055131, 0.748775, 0, 1.0};
Point(19) = {0.049377, 0.749351, 0, 1.0};
Point(20) = {0.043592, 0.749746, 0, 1.0};
Point(21) = {0.037789, 0.749963, 0, 1.0};
Point(22) = {0.031980, 0.750000, 0, 1.0};
Point(23) = {0.026166, 0.749855, 0, 1.0};
Point(24) = {0.020356, 0.749533, 0, 1.0};
Point(25) = {0.014564, 0.749038, 0, 1.0};
Point(26) = {0.008805, 0.748363, 0, 1.0};
Point(27) = {0.003089, 0.747510, 0, 1.0};
Point(28) = {-0.002572, 0.746472, 0, 1.0};
Point(29) = {-0.008158, 0.745247, 0, 1.0};
Point(30) = {-0.013641, 0.743829, 0, 1.0};
Point(31) = {-0.018986, 0.742216, 0, 1.0};
Point(32) = {-0.024152, 0.740410, 0, 1.0};
Point(33) = {-0.029081, 0.738413, 0, 1.0};
Point(34) = {-0.033701, 0.736240, 0, 1.0};
Point(35) = {-0.037919, 0.733920, 0, 1.0};
Point(36) = {-0.041610, 0.731521, 0, 1.0};
Point(37) = {-0.044640, 0.729152, 0, 1.0};
Point(38) = {-0.046929, 0.726946, 0, 1.0};
Point(39) = {-0.048494, 0.725005, 0, 1.0};
Point(40) = {-0.049432, 0.723393, 0, 1.0};
Point(41) = {-0.049889, 0.722109, 0, 1.0};
Point(42) = {-0.050000, 0.721076, 0, 1.0};
Point(43) = {-0.049874, 0.720383, 0, 1.0};
Point(44) = {-0.049547, 0.719807, 0, 1.0};
Point(45) = {-0.049049, 0.719353, 0, 1.0};
Point(46) = {-0.048300, 0.719001, 0, 1.0};
Point(47) = {-0.047082, 0.718713, 0, 1.0};
Point(48) = {-0.044980, 0.718495, 0, 1.0};
Point(49) = {-0.041599, 0.718425, 0, 1.0};
Point(50) = {-0.036913, 0.718574, 0, 1.0};
Point(51) = {-0.031379, 0.718912, 0, 1.0};
Point(52) = {-0.025398, 0.719381, 0, 1.0};
Point(53) = {-0.019196, 0.719934, 0, 1.0};
Point(54) = {-0.012874, 0.720538, 0, 1.0};
Point(55) = {-0.006480, 0.721172, 0, 1.0};
Point(56) = {-0.000043, 0.721822, 0, 1.0};
Point(57) = {0.006423, 0.722477, 0, 1.0};
Point(58) = {0.012890, 0.723130, 0, 1.0};
Point(59) = {0.019341, 0.723774, 0, 1.0};
Point(60) = {0.025776, 0.724401, 0, 1.0};
Point(61) = {0.032196, 0.725010, 0, 1.0};
Point(62) = {0.038602, 0.725594, 0, 1.0};
Point(63) = {0.044995, 0.726152, 0, 1.0};
Point(64) = {0.051373, 0.726679, 0, 1.0};
Point(65) = {0.057738, 0.727167, 0, 1.0};
Point(66) = {0.064094, 0.727613, 0, 1.0};
Point(67) = {0.070443, 0.728014, 0, 1.0};
Point(68) = {0.076788, 0.728368, 0, 1.0};
Point(69) = {0.083131, 0.728676, 0, 1.0};
Point(70) = {0.089474, 0.728938, 0, 1.0};
Point(71) = {0.095815, 0.729155, 0, 1.0};
Point(72) = {0.102151, 0.729328, 0, 1.0};
Point(73) = {0.108478, 0.729452, 0, 1.0};
Point(74) = {0.114795, 0.729526, 0, 1.0};
Point(75) = {0.121112, 0.729545, 0, 1.0};
Point(76) = {0.127472, 0.729509, 0, 1.0};
Point(77) = {0.133817, 0.729414, 0, 1.0};
Point(78) = {0.139423, 0.729285, 0, 1.0};
Point(79) = {0.143763, 0.729151, 0, 1.0};
Point(80) = {0.147096, 0.729027, 0, 1.0};
Point(81) = {-0.149846, -0.728920, 0, 1.0};
Point(82) = {-0.147125, -0.729321, 0, 1.0};
Point(83) = {-0.143808, -0.729807, 0, 1.0};
Point(84) = {-0.139350, -0.730518, 0, 1.0};
Point(85) = {-0.133452, -0.731555, 0, 1.0};
Point(86) = {-0.127272, -0.732750, 0, 1.0};
Point(87) = {-0.121214, -0.734026, 0, 1.0};
Point(88) = {-0.115155, -0.735395, 0, 1.0};
Point(89) = {-0.109060, -0.736847, 0, 1.0};
Point(90) = {-0.102910, -0.738370, 0, 1.0};
Point(91) = {-0.096694, -0.739944, 0, 1.0};
Point(92) = {-0.090436, -0.741547, 0, 1.0};
Point(93) = {-0.084284, -0.743103, 0, 1.0};
Point(94) = {-0.078265, -0.744565, 0, 1.0};
Point(95) = {-0.072374, -0.745893, 0, 1.0};
Point(96) = {-0.066587, -0.747050, 0, 1.0};
Point(97) = {-0.060857, -0.748012, 0, 1.0};
Point(98) = {-0.055131, -0.748775, 0, 1.0};
Point(99) = {-0.049377, -0.749351, 0, 1.0};
Point(100) = {-0.043592, -0.749746, 0, 1.0};
Point(101) = {-0.037789, -0.749963, 0, 1.0};
Point(102) = {-0.031980, -0.750000, 0, 1.0};
Point(103) = {-0.026166, -0.749855, 0, 1.0};
Point(104) = {-0.020356, -0.749533, 0, 1.0};
Point(105) = {-0.014564, -0.749038, 0, 1.0};
Point(106) = {-0.008805, -0.748363, 0, 1.0};
Point(107) = {-0.003089, -0.747510, 0, 1.0};
Point(108) = {0.002572, -0.746472, 0, 1.0};
Point(109) = {0.008158, -0.745247, 0, 1.0};
Point(110) = {0.013641, -0.743829, 0, 1.0};
Point(111) = {0.018986, -0.742216, 0, 1.0};
Point(112) = {0.024152, -0.740410, 0, 1.0};
Point(113) = {0.029081, -0.738413, 0, 1.0};
Point(114) = {0.033701, -0.736240, 0, 1.0};
Point(115) = {0.037919, -0.733920, 0, 1.0};
Point(116) = {0.041610, -0.731521, 0, 1.0};
Point(117) = {0.044640, -0.729152, 0, 1.0};
Point(118) = {0.046929, -0.726946, 0, 1.0};
Point(119) = {0.048494, -0.725005, 0, 1.0};
Point(120) = {0.049432, -0.723393, 0, 1.0};
Point(121) = {0.049889, -0.722109, 0, 1.0};
Point(122) = {0.050000, -0.721076, 0, 1.0};
Point(123) = {0.049874, -0.720383, 0, 1.0};
Point(124) = {0.049547, -0.719807, 0, 1.0};
Point(125) = {0.049049, -0.719353, 0, 1.0};
Point(126) = {0.048300, -0.719001, 0, 1.0};
Point(127) = {0.047082, -0.718713, 0, 1.0};
Point(128) = {0.044980, -0.718495, 0, 1.0};
Point(129) = {0.041599, -0.718425, 0, 1.0};
Point(130) = {0.036913, -0.718574, 0, 1.0};
Point(131) = {0.031379, -0.718912, 0, 1.0};
Point(132) = {0.025398, -0.719381, 0, 1.0};
Point(133) = {0.019196, -0.719934, 0, 1.0};
Point(134) = {0.012874, -0.720538, 0, 1.0};
Point(135) = {0.006480, -0.721172, 0, 1.0};
Point(136) = {0.000043, -0.721822, 0, 1.0};
Point(137) = {-0.006423, -0.722477, 0, 1.0};
Point(138) = {-0.012890, -0.723130, 0, 1.0};
Point(139) = {-0.019341, -0.723774, 0, 1.0};
Point(140) = {-0.025776, -0.724401, 0, 1.0};
Point(141) = {-0.032196, -0.725010, 0, 1.0};
Point(142) = {-0.038602, -0.725594, 0, 1.0};
Point(143) = {-0.044995, -0.726152, 0, 1.0};
Point(144) = {-0.051373, -0.726679, 0, 1.0};
Point(145) = {-0.057738, -0.727167, 0, 1.0};
Point(146) = {-0.064094, -0.727613, 0, 1.0};
Point(147) = {-0.070443, -0.728014, 0, 1.0};
Point(148) = {-0.076788, -0.728368, 0, 1.0};
Point(149) = {-0.083131, -0.728676, 0, 1.0};
Point(150) = {-0.089474, -0.728938, 0, 1.0};
Point(151) = {-0.095815, -0.729155, 0, 1.0};
Point(152) = {-0.102151, -0.729328, 0, 1.0};
Point(153) = {-0.108478, -0.729452, 0, 1.0};
Point(154) = {-0.114795, -0.729526, 0, 1.0};
Point(155) = {-0.121112, -0.729545, 0, 1.0};
Point(156) = {-0.127472, -0.729509, 0, 1.0};
Point(157) = {-0.133817, -0.729414, 0, 1.0};
Point(158) = {-0.139423, -0.729285, 0, 1.0};
Point(159) = {-0.143763, -0.729151, 0, 1.0};
Point(160) = {-0.147096, -0.729027, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:136};
Spline(7) = {136:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
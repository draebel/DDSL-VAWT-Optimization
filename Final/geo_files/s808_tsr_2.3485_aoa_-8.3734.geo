SetFactory("OpenCASCADE");

Point(1) = {0.074201, 0.746429, 0, 1.0};
Point(2) = {0.073638, 0.746474, 0, 1.0};
Point(3) = {0.072004, 0.746655, 0, 1.0};
Point(4) = {0.069442, 0.747012, 0, 1.0};
Point(5) = {0.066103, 0.747501, 0, 1.0};
Point(6) = {0.062087, 0.748021, 0, 1.0};
Point(7) = {0.057414, 0.748474, 0, 1.0};
Point(8) = {0.052071, 0.748837, 0, 1.0};
Point(9) = {0.046099, 0.749145, 0, 1.0};
Point(10) = {0.039586, 0.749417, 0, 1.0};
Point(11) = {0.032629, 0.749652, 0, 1.0};
Point(12) = {0.025327, 0.749837, 0, 1.0};
Point(13) = {0.017780, 0.749960, 0, 1.0};
Point(14) = {0.010090, 0.750000, 0, 1.0};
Point(15) = {0.002353, 0.749938, 0, 1.0};
Point(16) = {-0.005338, 0.749747, 0, 1.0};
Point(17) = {-0.012895, 0.749403, 0, 1.0};
Point(18) = {-0.020242, 0.748886, 0, 1.0};
Point(19) = {-0.027304, 0.748176, 0, 1.0};
Point(20) = {-0.034019, 0.747257, 0, 1.0};
Point(21) = {-0.040332, 0.746121, 0, 1.0};
Point(22) = {-0.046198, 0.744768, 0, 1.0};
Point(23) = {-0.051574, 0.743201, 0, 1.0};
Point(24) = {-0.056429, 0.741434, 0, 1.0};
Point(25) = {-0.060737, 0.739488, 0, 1.0};
Point(26) = {-0.064476, 0.737393, 0, 1.0};
Point(27) = {-0.067630, 0.735187, 0, 1.0};
Point(28) = {-0.070179, 0.732913, 0, 1.0};
Point(29) = {-0.072115, 0.730613, 0, 1.0};
Point(30) = {-0.073437, 0.728348, 0, 1.0};
Point(31) = {-0.074133, 0.726200, 0, 1.0};
Point(32) = {-0.074201, 0.724586, 0, 1.0};
Point(33) = {-0.074146, 0.724291, 0, 1.0};
Point(34) = {-0.073319, 0.722554, 0, 1.0};
Point(35) = {-0.071674, 0.720841, 0, 1.0};
Point(36) = {-0.069380, 0.719194, 0, 1.0};
Point(37) = {-0.066495, 0.717672, 0, 1.0};
Point(38) = {-0.063077, 0.716321, 0, 1.0};
Point(39) = {-0.059186, 0.715193, 0, 1.0};
Point(40) = {-0.054881, 0.714344, 0, 1.0};
Point(41) = {-0.050227, 0.713851, 0, 1.0};
Point(42) = {-0.045233, 0.713817, 0, 1.0};
Point(43) = {-0.039862, 0.714285, 0, 1.0};
Point(44) = {-0.034109, 0.715248, 0, 1.0};
Point(45) = {-0.027962, 0.716706, 0, 1.0};
Point(46) = {-0.021410, 0.718603, 0, 1.0};
Point(47) = {-0.014484, 0.720869, 0, 1.0};
Point(48) = {-0.007224, 0.723434, 0, 1.0};
Point(49) = {0.000322, 0.726214, 0, 1.0};
Point(50) = {0.008085, 0.729117, 0, 1.0};
Point(51) = {0.015987, 0.732045, 0, 1.0};
Point(52) = {0.023923, 0.734891, 0, 1.0};
Point(53) = {0.031777, 0.737560, 0, 1.0};
Point(54) = {0.039409, 0.739963, 0, 1.0};
Point(55) = {0.046669, 0.742027, 0, 1.0};
Point(56) = {0.053396, 0.743699, 0, 1.0};
Point(57) = {0.059425, 0.744960, 0, 1.0};
Point(58) = {0.064600, 0.745812, 0, 1.0};
Point(59) = {0.068782, 0.746287, 0, 1.0};
Point(60) = {0.071819, 0.746449, 0, 1.0};
Point(61) = {0.073616, 0.746446, 0, 1.0};
Point(62) = {-0.074201, -0.746429, 0, 1.0};
Point(63) = {-0.073638, -0.746474, 0, 1.0};
Point(64) = {-0.072004, -0.746655, 0, 1.0};
Point(65) = {-0.069442, -0.747012, 0, 1.0};
Point(66) = {-0.066103, -0.747501, 0, 1.0};
Point(67) = {-0.062087, -0.748021, 0, 1.0};
Point(68) = {-0.057414, -0.748474, 0, 1.0};
Point(69) = {-0.052071, -0.748837, 0, 1.0};
Point(70) = {-0.046099, -0.749145, 0, 1.0};
Point(71) = {-0.039586, -0.749417, 0, 1.0};
Point(72) = {-0.032629, -0.749652, 0, 1.0};
Point(73) = {-0.025327, -0.749837, 0, 1.0};
Point(74) = {-0.017780, -0.749960, 0, 1.0};
Point(75) = {-0.010090, -0.750000, 0, 1.0};
Point(76) = {-0.002353, -0.749938, 0, 1.0};
Point(77) = {0.005338, -0.749747, 0, 1.0};
Point(78) = {0.012895, -0.749403, 0, 1.0};
Point(79) = {0.020242, -0.748886, 0, 1.0};
Point(80) = {0.027304, -0.748176, 0, 1.0};
Point(81) = {0.034019, -0.747257, 0, 1.0};
Point(82) = {0.040332, -0.746121, 0, 1.0};
Point(83) = {0.046198, -0.744768, 0, 1.0};
Point(84) = {0.051574, -0.743201, 0, 1.0};
Point(85) = {0.056429, -0.741434, 0, 1.0};
Point(86) = {0.060737, -0.739488, 0, 1.0};
Point(87) = {0.064476, -0.737393, 0, 1.0};
Point(88) = {0.067630, -0.735187, 0, 1.0};
Point(89) = {0.070179, -0.732913, 0, 1.0};
Point(90) = {0.072115, -0.730613, 0, 1.0};
Point(91) = {0.073437, -0.728348, 0, 1.0};
Point(92) = {0.074133, -0.726200, 0, 1.0};
Point(93) = {0.074201, -0.724586, 0, 1.0};
Point(94) = {0.074146, -0.724291, 0, 1.0};
Point(95) = {0.073319, -0.722554, 0, 1.0};
Point(96) = {0.071674, -0.720841, 0, 1.0};
Point(97) = {0.069380, -0.719194, 0, 1.0};
Point(98) = {0.066495, -0.717672, 0, 1.0};
Point(99) = {0.063077, -0.716321, 0, 1.0};
Point(100) = {0.059186, -0.715193, 0, 1.0};
Point(101) = {0.054881, -0.714344, 0, 1.0};
Point(102) = {0.050227, -0.713851, 0, 1.0};
Point(103) = {0.045233, -0.713817, 0, 1.0};
Point(104) = {0.039862, -0.714285, 0, 1.0};
Point(105) = {0.034109, -0.715248, 0, 1.0};
Point(106) = {0.027962, -0.716706, 0, 1.0};
Point(107) = {0.021410, -0.718603, 0, 1.0};
Point(108) = {0.014484, -0.720869, 0, 1.0};
Point(109) = {0.007224, -0.723434, 0, 1.0};
Point(110) = {-0.000322, -0.726214, 0, 1.0};
Point(111) = {-0.008085, -0.729117, 0, 1.0};
Point(112) = {-0.015987, -0.732045, 0, 1.0};
Point(113) = {-0.023923, -0.734891, 0, 1.0};
Point(114) = {-0.031777, -0.737560, 0, 1.0};
Point(115) = {-0.039409, -0.739963, 0, 1.0};
Point(116) = {-0.046669, -0.742027, 0, 1.0};
Point(117) = {-0.053396, -0.743699, 0, 1.0};
Point(118) = {-0.059425, -0.744960, 0, 1.0};
Point(119) = {-0.064600, -0.745812, 0, 1.0};
Point(120) = {-0.068782, -0.746287, 0, 1.0};
Point(121) = {-0.071819, -0.746449, 0, 1.0};
Point(122) = {-0.073616, -0.746446, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
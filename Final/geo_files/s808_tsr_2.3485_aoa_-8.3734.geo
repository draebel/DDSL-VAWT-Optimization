SetFactory("OpenCASCADE");

Point(1) = {0.147868, 0.745239, 0, 1.0};
Point(2) = {0.147117, 0.745299, 0, 1.0};
Point(3) = {0.144939, 0.745540, 0, 1.0};
Point(4) = {0.141523, 0.746016, 0, 1.0};
Point(5) = {0.137071, 0.746668, 0, 1.0};
Point(6) = {0.131717, 0.747362, 0, 1.0};
Point(7) = {0.125486, 0.747965, 0, 1.0};
Point(8) = {0.118362, 0.748449, 0, 1.0};
Point(9) = {0.110399, 0.748860, 0, 1.0};
Point(10) = {0.101716, 0.749223, 0, 1.0};
Point(11) = {0.092440, 0.749535, 0, 1.0};
Point(12) = {0.082704, 0.749782, 0, 1.0};
Point(13) = {0.072641, 0.749947, 0, 1.0};
Point(14) = {0.062388, 0.750000, 0, 1.0};
Point(15) = {0.052072, 0.749917, 0, 1.0};
Point(16) = {0.041817, 0.749663, 0, 1.0};
Point(17) = {0.031741, 0.749205, 0, 1.0};
Point(18) = {0.021945, 0.748515, 0, 1.0};
Point(19) = {0.012528, 0.747567, 0, 1.0};
Point(20) = {0.003575, 0.746343, 0, 1.0};
Point(21) = {-0.004842, 0.744829, 0, 1.0};
Point(22) = {-0.012663, 0.743025, 0, 1.0};
Point(23) = {-0.019831, 0.740934, 0, 1.0};
Point(24) = {-0.026305, 0.738579, 0, 1.0};
Point(25) = {-0.032048, 0.735985, 0, 1.0};
Point(26) = {-0.037034, 0.733191, 0, 1.0};
Point(27) = {-0.041239, 0.730249, 0, 1.0};
Point(28) = {-0.044638, 0.727218, 0, 1.0};
Point(29) = {-0.047219, 0.724151, 0, 1.0};
Point(30) = {-0.048982, 0.721130, 0, 1.0};
Point(31) = {-0.049910, 0.718266, 0, 1.0};
Point(32) = {-0.050000, 0.716114, 0, 1.0};
Point(33) = {-0.049928, 0.715721, 0, 1.0};
Point(34) = {-0.048825, 0.713405, 0, 1.0};
Point(35) = {-0.046631, 0.711122, 0, 1.0};
Point(36) = {-0.043573, 0.708926, 0, 1.0};
Point(37) = {-0.039726, 0.706896, 0, 1.0};
Point(38) = {-0.035169, 0.705095, 0, 1.0};
Point(39) = {-0.029981, 0.703590, 0, 1.0};
Point(40) = {-0.024241, 0.702458, 0, 1.0};
Point(41) = {-0.018035, 0.701801, 0, 1.0};
Point(42) = {-0.011377, 0.701756, 0, 1.0};
Point(43) = {-0.004216, 0.702379, 0, 1.0};
Point(44) = {0.003455, 0.703664, 0, 1.0};
Point(45) = {0.011651, 0.705608, 0, 1.0};
Point(46) = {0.020388, 0.708138, 0, 1.0};
Point(47) = {0.029622, 0.711159, 0, 1.0};
Point(48) = {0.039302, 0.714579, 0, 1.0};
Point(49) = {0.049363, 0.718285, 0, 1.0};
Point(50) = {0.059714, 0.722156, 0, 1.0};
Point(51) = {0.070250, 0.726060, 0, 1.0};
Point(52) = {0.080832, 0.729855, 0, 1.0};
Point(53) = {0.091303, 0.733414, 0, 1.0};
Point(54) = {0.101479, 0.736618, 0, 1.0};
Point(55) = {0.111160, 0.739369, 0, 1.0};
Point(56) = {0.120128, 0.741599, 0, 1.0};
Point(57) = {0.128167, 0.743279, 0, 1.0};
Point(58) = {0.135067, 0.744416, 0, 1.0};
Point(59) = {0.140643, 0.745049, 0, 1.0};
Point(60) = {0.144692, 0.745265, 0, 1.0};
Point(61) = {0.147088, 0.745262, 0, 1.0};
Point(62) = {-0.147868, -0.745239, 0, 1.0};
Point(63) = {-0.147117, -0.745299, 0, 1.0};
Point(64) = {-0.144939, -0.745540, 0, 1.0};
Point(65) = {-0.141523, -0.746016, 0, 1.0};
Point(66) = {-0.137071, -0.746668, 0, 1.0};
Point(67) = {-0.131717, -0.747362, 0, 1.0};
Point(68) = {-0.125486, -0.747965, 0, 1.0};
Point(69) = {-0.118362, -0.748449, 0, 1.0};
Point(70) = {-0.110399, -0.748860, 0, 1.0};
Point(71) = {-0.101716, -0.749223, 0, 1.0};
Point(72) = {-0.092440, -0.749535, 0, 1.0};
Point(73) = {-0.082704, -0.749782, 0, 1.0};
Point(74) = {-0.072641, -0.749947, 0, 1.0};
Point(75) = {-0.062388, -0.750000, 0, 1.0};
Point(76) = {-0.052072, -0.749917, 0, 1.0};
Point(77) = {-0.041817, -0.749663, 0, 1.0};
Point(78) = {-0.031741, -0.749205, 0, 1.0};
Point(79) = {-0.021945, -0.748515, 0, 1.0};
Point(80) = {-0.012528, -0.747567, 0, 1.0};
Point(81) = {-0.003575, -0.746343, 0, 1.0};
Point(82) = {0.004842, -0.744829, 0, 1.0};
Point(83) = {0.012663, -0.743025, 0, 1.0};
Point(84) = {0.019831, -0.740934, 0, 1.0};
Point(85) = {0.026305, -0.738579, 0, 1.0};
Point(86) = {0.032048, -0.735985, 0, 1.0};
Point(87) = {0.037034, -0.733191, 0, 1.0};
Point(88) = {0.041239, -0.730249, 0, 1.0};
Point(89) = {0.044638, -0.727218, 0, 1.0};
Point(90) = {0.047219, -0.724151, 0, 1.0};
Point(91) = {0.048982, -0.721130, 0, 1.0};
Point(92) = {0.049910, -0.718266, 0, 1.0};
Point(93) = {0.050000, -0.716114, 0, 1.0};
Point(94) = {0.049928, -0.715721, 0, 1.0};
Point(95) = {0.048825, -0.713405, 0, 1.0};
Point(96) = {0.046631, -0.711122, 0, 1.0};
Point(97) = {0.043573, -0.708926, 0, 1.0};
Point(98) = {0.039726, -0.706896, 0, 1.0};
Point(99) = {0.035169, -0.705095, 0, 1.0};
Point(100) = {0.029981, -0.703590, 0, 1.0};
Point(101) = {0.024241, -0.702458, 0, 1.0};
Point(102) = {0.018035, -0.701801, 0, 1.0};
Point(103) = {0.011377, -0.701756, 0, 1.0};
Point(104) = {0.004216, -0.702379, 0, 1.0};
Point(105) = {-0.003455, -0.703664, 0, 1.0};
Point(106) = {-0.011651, -0.705608, 0, 1.0};
Point(107) = {-0.020388, -0.708138, 0, 1.0};
Point(108) = {-0.029622, -0.711159, 0, 1.0};
Point(109) = {-0.039302, -0.714579, 0, 1.0};
Point(110) = {-0.049363, -0.718285, 0, 1.0};
Point(111) = {-0.059714, -0.722156, 0, 1.0};
Point(112) = {-0.070250, -0.726060, 0, 1.0};
Point(113) = {-0.080832, -0.729855, 0, 1.0};
Point(114) = {-0.091303, -0.733414, 0, 1.0};
Point(115) = {-0.101479, -0.736618, 0, 1.0};
Point(116) = {-0.111160, -0.739369, 0, 1.0};
Point(117) = {-0.120128, -0.741599, 0, 1.0};
Point(118) = {-0.128167, -0.743279, 0, 1.0};
Point(119) = {-0.135067, -0.744416, 0, 1.0};
Point(120) = {-0.140643, -0.745049, 0, 1.0};
Point(121) = {-0.144692, -0.745265, 0, 1.0};
Point(122) = {-0.147088, -0.745262, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073934, 0.747620, 0, 1.0};
Point(2) = {0.073559, 0.747649, 0, 1.0};
Point(3) = {0.072470, 0.747770, 0, 1.0};
Point(4) = {0.070762, 0.748008, 0, 1.0};
Point(5) = {0.068535, 0.748334, 0, 1.0};
Point(6) = {0.065858, 0.748681, 0, 1.0};
Point(7) = {0.062743, 0.748983, 0, 1.0};
Point(8) = {0.059181, 0.749224, 0, 1.0};
Point(9) = {0.055200, 0.749430, 0, 1.0};
Point(10) = {0.050858, 0.749611, 0, 1.0};
Point(11) = {0.046220, 0.749768, 0, 1.0};
Point(12) = {0.041352, 0.749891, 0, 1.0};
Point(13) = {0.036320, 0.749973, 0, 1.0};
Point(14) = {0.031194, 0.750000, 0, 1.0};
Point(15) = {0.026036, 0.749958, 0, 1.0};
Point(16) = {0.020909, 0.749831, 0, 1.0};
Point(17) = {0.015870, 0.749602, 0, 1.0};
Point(18) = {0.010972, 0.749257, 0, 1.0};
Point(19) = {0.006264, 0.748784, 0, 1.0};
Point(20) = {0.001788, 0.748171, 0, 1.0};
Point(21) = {-0.002421, 0.747414, 0, 1.0};
Point(22) = {-0.006331, 0.746512, 0, 1.0};
Point(23) = {-0.009915, 0.745467, 0, 1.0};
Point(24) = {-0.013152, 0.744289, 0, 1.0};
Point(25) = {-0.016024, 0.742992, 0, 1.0};
Point(26) = {-0.018517, 0.741595, 0, 1.0};
Point(27) = {-0.020619, 0.740124, 0, 1.0};
Point(28) = {-0.022319, 0.738609, 0, 1.0};
Point(29) = {-0.023609, 0.737076, 0, 1.0};
Point(30) = {-0.024491, 0.735565, 0, 1.0};
Point(31) = {-0.024955, 0.734133, 0, 1.0};
Point(32) = {-0.025000, 0.733057, 0, 1.0};
Point(33) = {-0.024964, 0.732860, 0, 1.0};
Point(34) = {-0.024412, 0.731702, 0, 1.0};
Point(35) = {-0.023316, 0.730561, 0, 1.0};
Point(36) = {-0.021786, 0.729463, 0, 1.0};
Point(37) = {-0.019863, 0.728448, 0, 1.0};
Point(38) = {-0.017585, 0.727547, 0, 1.0};
Point(39) = {-0.014990, 0.726795, 0, 1.0};
Point(40) = {-0.012120, 0.726229, 0, 1.0};
Point(41) = {-0.009017, 0.725900, 0, 1.0};
Point(42) = {-0.005689, 0.725878, 0, 1.0};
Point(43) = {-0.002108, 0.726190, 0, 1.0};
Point(44) = {0.001727, 0.726832, 0, 1.0};
Point(45) = {0.005826, 0.727804, 0, 1.0};
Point(46) = {0.010194, 0.729069, 0, 1.0};
Point(47) = {0.014811, 0.730579, 0, 1.0};
Point(48) = {0.019651, 0.732289, 0, 1.0};
Point(49) = {0.024682, 0.734143, 0, 1.0};
Point(50) = {0.029857, 0.736078, 0, 1.0};
Point(51) = {0.035125, 0.738030, 0, 1.0};
Point(52) = {0.040416, 0.739928, 0, 1.0};
Point(53) = {0.045652, 0.741707, 0, 1.0};
Point(54) = {0.050739, 0.743309, 0, 1.0};
Point(55) = {0.055580, 0.744685, 0, 1.0};
Point(56) = {0.060064, 0.745799, 0, 1.0};
Point(57) = {0.064084, 0.746640, 0, 1.0};
Point(58) = {0.067534, 0.747208, 0, 1.0};
Point(59) = {0.070321, 0.747525, 0, 1.0};
Point(60) = {0.072346, 0.747633, 0, 1.0};
Point(61) = {0.073544, 0.747631, 0, 1.0};
Point(62) = {-0.073934, -0.747620, 0, 1.0};
Point(63) = {-0.073559, -0.747649, 0, 1.0};
Point(64) = {-0.072470, -0.747770, 0, 1.0};
Point(65) = {-0.070762, -0.748008, 0, 1.0};
Point(66) = {-0.068535, -0.748334, 0, 1.0};
Point(67) = {-0.065858, -0.748681, 0, 1.0};
Point(68) = {-0.062743, -0.748983, 0, 1.0};
Point(69) = {-0.059181, -0.749224, 0, 1.0};
Point(70) = {-0.055200, -0.749430, 0, 1.0};
Point(71) = {-0.050858, -0.749611, 0, 1.0};
Point(72) = {-0.046220, -0.749768, 0, 1.0};
Point(73) = {-0.041352, -0.749891, 0, 1.0};
Point(74) = {-0.036320, -0.749973, 0, 1.0};
Point(75) = {-0.031194, -0.750000, 0, 1.0};
Point(76) = {-0.026036, -0.749958, 0, 1.0};
Point(77) = {-0.020909, -0.749831, 0, 1.0};
Point(78) = {-0.015870, -0.749602, 0, 1.0};
Point(79) = {-0.010972, -0.749257, 0, 1.0};
Point(80) = {-0.006264, -0.748784, 0, 1.0};
Point(81) = {-0.001788, -0.748171, 0, 1.0};
Point(82) = {0.002421, -0.747414, 0, 1.0};
Point(83) = {0.006331, -0.746512, 0, 1.0};
Point(84) = {0.009915, -0.745467, 0, 1.0};
Point(85) = {0.013152, -0.744289, 0, 1.0};
Point(86) = {0.016024, -0.742992, 0, 1.0};
Point(87) = {0.018517, -0.741595, 0, 1.0};
Point(88) = {0.020619, -0.740124, 0, 1.0};
Point(89) = {0.022319, -0.738609, 0, 1.0};
Point(90) = {0.023609, -0.737076, 0, 1.0};
Point(91) = {0.024491, -0.735565, 0, 1.0};
Point(92) = {0.024955, -0.734133, 0, 1.0};
Point(93) = {0.025000, -0.733057, 0, 1.0};
Point(94) = {0.024964, -0.732860, 0, 1.0};
Point(95) = {0.024412, -0.731702, 0, 1.0};
Point(96) = {0.023316, -0.730561, 0, 1.0};
Point(97) = {0.021786, -0.729463, 0, 1.0};
Point(98) = {0.019863, -0.728448, 0, 1.0};
Point(99) = {0.017585, -0.727547, 0, 1.0};
Point(100) = {0.014990, -0.726795, 0, 1.0};
Point(101) = {0.012120, -0.726229, 0, 1.0};
Point(102) = {0.009017, -0.725900, 0, 1.0};
Point(103) = {0.005689, -0.725878, 0, 1.0};
Point(104) = {0.002108, -0.726190, 0, 1.0};
Point(105) = {-0.001727, -0.726832, 0, 1.0};
Point(106) = {-0.005826, -0.727804, 0, 1.0};
Point(107) = {-0.010194, -0.729069, 0, 1.0};
Point(108) = {-0.014811, -0.730579, 0, 1.0};
Point(109) = {-0.019651, -0.732289, 0, 1.0};
Point(110) = {-0.024682, -0.734143, 0, 1.0};
Point(111) = {-0.029857, -0.736078, 0, 1.0};
Point(112) = {-0.035125, -0.738030, 0, 1.0};
Point(113) = {-0.040416, -0.739928, 0, 1.0};
Point(114) = {-0.045652, -0.741707, 0, 1.0};
Point(115) = {-0.050739, -0.743309, 0, 1.0};
Point(116) = {-0.055580, -0.744685, 0, 1.0};
Point(117) = {-0.060064, -0.745799, 0, 1.0};
Point(118) = {-0.064084, -0.746640, 0, 1.0};
Point(119) = {-0.067534, -0.747208, 0, 1.0};
Point(120) = {-0.070321, -0.747525, 0, 1.0};
Point(121) = {-0.072346, -0.747633, 0, 1.0};
Point(122) = {-0.073544, -0.747631, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074072, 0.744227, 0, 1.0};
Point(2) = {0.072521, 0.744580, 0, 1.0};
Point(3) = {0.070009, 0.745121, 0, 1.0};
Point(4) = {0.067210, 0.745693, 0, 1.0};
Point(5) = {0.064099, 0.746253, 0, 1.0};
Point(6) = {0.060784, 0.746837, 0, 1.0};
Point(7) = {0.057178, 0.747405, 0, 1.0};
Point(8) = {0.053354, 0.747944, 0, 1.0};
Point(9) = {0.049292, 0.748441, 0, 1.0};
Point(10) = {0.045035, 0.748884, 0, 1.0};
Point(11) = {0.040604, 0.749263, 0, 1.0};
Point(12) = {0.036020, 0.749574, 0, 1.0};
Point(13) = {0.031285, 0.749806, 0, 1.0};
Point(14) = {0.026441, 0.749944, 0, 1.0};
Point(15) = {0.021485, 0.750000, 0, 1.0};
Point(16) = {0.016461, 0.749946, 0, 1.0};
Point(17) = {0.011388, 0.749820, 0, 1.0};
Point(18) = {0.006288, 0.749582, 0, 1.0};
Point(19) = {0.001156, 0.749272, 0, 1.0};
Point(20) = {-0.003945, 0.748872, 0, 1.0};
Point(21) = {-0.009037, 0.748408, 0, 1.0};
Point(22) = {-0.014056, 0.747839, 0, 1.0};
Point(23) = {-0.019007, 0.747212, 0, 1.0};
Point(24) = {-0.023844, 0.746486, 0, 1.0};
Point(25) = {-0.028594, 0.745706, 0, 1.0};
Point(26) = {-0.033310, 0.744812, 0, 1.0};
Point(27) = {-0.037620, 0.743911, 0, 1.0};
Point(28) = {-0.041875, 0.742896, 0, 1.0};
Point(29) = {-0.045945, 0.741842, 0, 1.0};
Point(30) = {-0.049778, 0.740693, 0, 1.0};
Point(31) = {-0.053407, 0.739508, 0, 1.0};
Point(32) = {-0.056782, 0.738234, 0, 1.0};
Point(33) = {-0.059890, 0.736933, 0, 1.0};
Point(34) = {-0.062728, 0.735555, 0, 1.0};
Point(35) = {-0.065278, 0.734154, 0, 1.0};
Point(36) = {-0.067520, 0.732706, 0, 1.0};
Point(37) = {-0.069479, 0.731264, 0, 1.0};
Point(38) = {-0.071113, 0.729804, 0, 1.0};
Point(39) = {-0.072434, 0.728410, 0, 1.0};
Point(40) = {-0.073427, 0.726991, 0, 1.0};
Point(41) = {-0.074108, 0.725658, 0, 1.0};
Point(42) = {-0.074448, 0.724342, 0, 1.0};
Point(43) = {-0.074415, 0.722799, 0, 1.0};
Point(44) = {-0.074226, 0.722580, 0, 1.0};
Point(45) = {-0.073651, 0.722018, 0, 1.0};
Point(46) = {-0.072729, 0.721438, 0, 1.0};
Point(47) = {-0.071486, 0.720865, 0, 1.0};
Point(48) = {-0.069920, 0.720303, 0, 1.0};
Point(49) = {-0.068039, 0.719800, 0, 1.0};
Point(50) = {-0.065840, 0.719329, 0, 1.0};
Point(51) = {-0.063362, 0.718898, 0, 1.0};
Point(52) = {-0.060589, 0.718530, 0, 1.0};
Point(53) = {-0.057541, 0.718238, 0, 1.0};
Point(54) = {-0.054241, 0.718009, 0, 1.0};
Point(55) = {-0.050688, 0.717866, 0, 1.0};
Point(56) = {-0.046900, 0.717784, 0, 1.0};
Point(57) = {-0.042922, 0.717788, 0, 1.0};
Point(58) = {-0.038729, 0.717860, 0, 1.0};
Point(59) = {-0.034370, 0.718040, 0, 1.0};
Point(60) = {-0.029976, 0.718277, 0, 1.0};
Point(61) = {-0.025195, 0.718656, 0, 1.0};
Point(62) = {-0.020405, 0.719115, 0, 1.0};
Point(63) = {-0.015548, 0.719681, 0, 1.0};
Point(64) = {-0.010600, 0.720328, 0, 1.0};
Point(65) = {-0.005605, 0.721088, 0, 1.0};
Point(66) = {-0.000560, 0.721928, 0, 1.0};
Point(67) = {0.004471, 0.722884, 0, 1.0};
Point(68) = {0.009510, 0.723937, 0, 1.0};
Point(69) = {0.014492, 0.725115, 0, 1.0};
Point(70) = {0.019421, 0.726387, 0, 1.0};
Point(71) = {0.024275, 0.727791, 0, 1.0};
Point(72) = {0.029038, 0.729270, 0, 1.0};
Point(73) = {0.033670, 0.730829, 0, 1.0};
Point(74) = {0.038176, 0.732413, 0, 1.0};
Point(75) = {0.042521, 0.734005, 0, 1.0};
Point(76) = {0.046713, 0.735532, 0, 1.0};
Point(77) = {0.050733, 0.736973, 0, 1.0};
Point(78) = {0.054571, 0.738264, 0, 1.0};
Point(79) = {0.058183, 0.739408, 0, 1.0};
Point(80) = {0.061596, 0.740375, 0, 1.0};
Point(81) = {0.064737, 0.741173, 0, 1.0};
Point(82) = {0.067697, 0.741817, 0, 1.0};
Point(83) = {0.070364, 0.742294, 0, 1.0};
Point(84) = {0.072767, 0.742618, 0, 1.0};
Point(85) = {0.074257, 0.742759, 0, 1.0};
Point(86) = {-0.074072, -0.744227, 0, 1.0};
Point(87) = {-0.072521, -0.744580, 0, 1.0};
Point(88) = {-0.070009, -0.745121, 0, 1.0};
Point(89) = {-0.067210, -0.745693, 0, 1.0};
Point(90) = {-0.064099, -0.746253, 0, 1.0};
Point(91) = {-0.060784, -0.746837, 0, 1.0};
Point(92) = {-0.057178, -0.747405, 0, 1.0};
Point(93) = {-0.053354, -0.747944, 0, 1.0};
Point(94) = {-0.049292, -0.748441, 0, 1.0};
Point(95) = {-0.045035, -0.748884, 0, 1.0};
Point(96) = {-0.040604, -0.749263, 0, 1.0};
Point(97) = {-0.036020, -0.749574, 0, 1.0};
Point(98) = {-0.031285, -0.749806, 0, 1.0};
Point(99) = {-0.026441, -0.749944, 0, 1.0};
Point(100) = {-0.021485, -0.750000, 0, 1.0};
Point(101) = {-0.016461, -0.749946, 0, 1.0};
Point(102) = {-0.011388, -0.749820, 0, 1.0};
Point(103) = {-0.006288, -0.749582, 0, 1.0};
Point(104) = {-0.001156, -0.749272, 0, 1.0};
Point(105) = {0.003945, -0.748872, 0, 1.0};
Point(106) = {0.009037, -0.748408, 0, 1.0};
Point(107) = {0.014056, -0.747839, 0, 1.0};
Point(108) = {0.019007, -0.747212, 0, 1.0};
Point(109) = {0.023844, -0.746486, 0, 1.0};
Point(110) = {0.028594, -0.745706, 0, 1.0};
Point(111) = {0.033310, -0.744812, 0, 1.0};
Point(112) = {0.037620, -0.743911, 0, 1.0};
Point(113) = {0.041875, -0.742896, 0, 1.0};
Point(114) = {0.045945, -0.741842, 0, 1.0};
Point(115) = {0.049778, -0.740693, 0, 1.0};
Point(116) = {0.053407, -0.739508, 0, 1.0};
Point(117) = {0.056782, -0.738234, 0, 1.0};
Point(118) = {0.059890, -0.736933, 0, 1.0};
Point(119) = {0.062728, -0.735555, 0, 1.0};
Point(120) = {0.065278, -0.734154, 0, 1.0};
Point(121) = {0.067520, -0.732706, 0, 1.0};
Point(122) = {0.069479, -0.731264, 0, 1.0};
Point(123) = {0.071113, -0.729804, 0, 1.0};
Point(124) = {0.072434, -0.728410, 0, 1.0};
Point(125) = {0.073427, -0.726991, 0, 1.0};
Point(126) = {0.074108, -0.725658, 0, 1.0};
Point(127) = {0.074448, -0.724342, 0, 1.0};
Point(128) = {0.074415, -0.722799, 0, 1.0};
Point(129) = {0.074226, -0.722580, 0, 1.0};
Point(130) = {0.073651, -0.722018, 0, 1.0};
Point(131) = {0.072729, -0.721438, 0, 1.0};
Point(132) = {0.071486, -0.720865, 0, 1.0};
Point(133) = {0.069920, -0.720303, 0, 1.0};
Point(134) = {0.068039, -0.719800, 0, 1.0};
Point(135) = {0.065840, -0.719329, 0, 1.0};
Point(136) = {0.063362, -0.718898, 0, 1.0};
Point(137) = {0.060589, -0.718530, 0, 1.0};
Point(138) = {0.057541, -0.718238, 0, 1.0};
Point(139) = {0.054241, -0.718009, 0, 1.0};
Point(140) = {0.050688, -0.717866, 0, 1.0};
Point(141) = {0.046900, -0.717784, 0, 1.0};
Point(142) = {0.042922, -0.717788, 0, 1.0};
Point(143) = {0.038729, -0.717860, 0, 1.0};
Point(144) = {0.034370, -0.718040, 0, 1.0};
Point(145) = {0.029976, -0.718277, 0, 1.0};
Point(146) = {0.025195, -0.718656, 0, 1.0};
Point(147) = {0.020405, -0.719115, 0, 1.0};
Point(148) = {0.015548, -0.719681, 0, 1.0};
Point(149) = {0.010600, -0.720328, 0, 1.0};
Point(150) = {0.005605, -0.721088, 0, 1.0};
Point(151) = {0.000560, -0.721928, 0, 1.0};
Point(152) = {-0.004471, -0.722884, 0, 1.0};
Point(153) = {-0.009510, -0.723937, 0, 1.0};
Point(154) = {-0.014492, -0.725115, 0, 1.0};
Point(155) = {-0.019421, -0.726387, 0, 1.0};
Point(156) = {-0.024275, -0.727791, 0, 1.0};
Point(157) = {-0.029038, -0.729270, 0, 1.0};
Point(158) = {-0.033670, -0.730829, 0, 1.0};
Point(159) = {-0.038176, -0.732413, 0, 1.0};
Point(160) = {-0.042521, -0.734005, 0, 1.0};
Point(161) = {-0.046713, -0.735532, 0, 1.0};
Point(162) = {-0.050733, -0.736973, 0, 1.0};
Point(163) = {-0.054571, -0.738264, 0, 1.0};
Point(164) = {-0.058183, -0.739408, 0, 1.0};
Point(165) = {-0.061596, -0.740375, 0, 1.0};
Point(166) = {-0.064737, -0.741173, 0, 1.0};
Point(167) = {-0.067697, -0.741817, 0, 1.0};
Point(168) = {-0.070364, -0.742294, 0, 1.0};
Point(169) = {-0.072767, -0.742618, 0, 1.0};
Point(170) = {-0.074257, -0.742759, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074252, 0.715353, 0, 1.0};
Point(2) = {0.073009, 0.715827, 0, 1.0};
Point(3) = {0.068135, 0.717769, 0, 1.0};
Point(4) = {0.062201, 0.720123, 0, 1.0};
Point(5) = {0.058867, 0.721448, 0, 1.0};
Point(6) = {0.055311, 0.722878, 0, 1.0};
Point(7) = {0.051543, 0.724387, 0, 1.0};
Point(8) = {0.047585, 0.725990, 0, 1.0};
Point(9) = {0.043449, 0.727665, 0, 1.0};
Point(10) = {0.039153, 0.729406, 0, 1.0};
Point(11) = {0.034717, 0.731207, 0, 1.0};
Point(12) = {0.030160, 0.733054, 0, 1.0};
Point(13) = {0.025496, 0.734924, 0, 1.0};
Point(14) = {0.020749, 0.736817, 0, 1.0};
Point(15) = {0.015930, 0.738693, 0, 1.0};
Point(16) = {0.011064, 0.740538, 0, 1.0};
Point(17) = {0.006159, 0.742289, 0, 1.0};
Point(18) = {0.001241, 0.743961, 0, 1.0};
Point(19) = {-0.003680, 0.745480, 0, 1.0};
Point(20) = {-0.008590, 0.746810, 0, 1.0};
Point(21) = {-0.013475, 0.747881, 0, 1.0};
Point(22) = {-0.018310, 0.748733, 0, 1.0};
Point(23) = {-0.023075, 0.749345, 0, 1.0};
Point(24) = {-0.027771, 0.749779, 0, 1.0};
Point(25) = {-0.032292, 0.749986, 0, 1.0};
Point(26) = {-0.036708, 0.750000, 0, 1.0};
Point(27) = {-0.040965, 0.749817, 0, 1.0};
Point(28) = {-0.045042, 0.749479, 0, 1.0};
Point(29) = {-0.048920, 0.748991, 0, 1.0};
Point(30) = {-0.052578, 0.748385, 0, 1.0};
Point(31) = {-0.055999, 0.747667, 0, 1.0};
Point(32) = {-0.059163, 0.746860, 0, 1.0};
Point(33) = {-0.062058, 0.745973, 0, 1.0};
Point(34) = {-0.064669, 0.745031, 0, 1.0};
Point(35) = {-0.066981, 0.744043, 0, 1.0};
Point(36) = {-0.068982, 0.743042, 0, 1.0};
Point(37) = {-0.070659, 0.742037, 0, 1.0};
Point(38) = {-0.072004, 0.741061, 0, 1.0};
Point(39) = {-0.073004, 0.740149, 0, 1.0};
Point(40) = {-0.073654, 0.739316, 0, 1.0};
Point(41) = {-0.073967, 0.738465, 0, 1.0};
Point(42) = {-0.073892, 0.737899, 0, 1.0};
Point(43) = {-0.073498, 0.737204, 0, 1.0};
Point(44) = {-0.072779, 0.736438, 0, 1.0};
Point(45) = {-0.071733, 0.735631, 0, 1.0};
Point(46) = {-0.070368, 0.734774, 0, 1.0};
Point(47) = {-0.068684, 0.733886, 0, 1.0};
Point(48) = {-0.066694, 0.732961, 0, 1.0};
Point(49) = {-0.064399, 0.732020, 0, 1.0};
Point(50) = {-0.061814, 0.731052, 0, 1.0};
Point(51) = {-0.058948, 0.730083, 0, 1.0};
Point(52) = {-0.055813, 0.729100, 0, 1.0};
Point(53) = {-0.052419, 0.728130, 0, 1.0};
Point(54) = {-0.048786, 0.727160, 0, 1.0};
Point(55) = {-0.044923, 0.726221, 0, 1.0};
Point(56) = {-0.040851, 0.725295, 0, 1.0};
Point(57) = {-0.036580, 0.724421, 0, 1.0};
Point(58) = {-0.032159, 0.723618, 0, 1.0};
Point(59) = {-0.027506, 0.722923, 0, 1.0};
Point(60) = {-0.022747, 0.722279, 0, 1.0};
Point(61) = {-0.017862, 0.721728, 0, 1.0};
Point(62) = {-0.012877, 0.721253, 0, 1.0};
Point(63) = {-0.007800, 0.720917, 0, 1.0};
Point(64) = {-0.002668, 0.720652, 0, 1.0};
Point(65) = {0.002495, 0.720443, 0, 1.0};
Point(66) = {0.007655, 0.720215, 0, 1.0};
Point(67) = {0.012794, 0.719992, 0, 1.0};
Point(68) = {0.017884, 0.719735, 0, 1.0};
Point(69) = {0.022905, 0.719476, 0, 1.0};
Point(70) = {0.027831, 0.719173, 0, 1.0};
Point(71) = {0.032644, 0.718845, 0, 1.0};
Point(72) = {0.037320, 0.718479, 0, 1.0};
Point(73) = {0.041843, 0.718091, 0, 1.0};
Point(74) = {0.046191, 0.717678, 0, 1.0};
Point(75) = {0.050346, 0.717250, 0, 1.0};
Point(76) = {0.054290, 0.716792, 0, 1.0};
Point(77) = {0.058009, 0.716334, 0, 1.0};
Point(78) = {0.061485, 0.715855, 0, 1.0};
Point(79) = {0.067659, 0.714931, 0, 1.0};
Point(80) = {0.072716, 0.714082, 0, 1.0};
Point(81) = {0.074001, 0.713855, 0, 1.0};
Point(82) = {-0.074252, -0.715353, 0, 1.0};
Point(83) = {-0.073009, -0.715827, 0, 1.0};
Point(84) = {-0.068135, -0.717769, 0, 1.0};
Point(85) = {-0.062201, -0.720123, 0, 1.0};
Point(86) = {-0.058867, -0.721448, 0, 1.0};
Point(87) = {-0.055311, -0.722878, 0, 1.0};
Point(88) = {-0.051543, -0.724387, 0, 1.0};
Point(89) = {-0.047585, -0.725990, 0, 1.0};
Point(90) = {-0.043449, -0.727665, 0, 1.0};
Point(91) = {-0.039153, -0.729406, 0, 1.0};
Point(92) = {-0.034717, -0.731207, 0, 1.0};
Point(93) = {-0.030160, -0.733054, 0, 1.0};
Point(94) = {-0.025496, -0.734924, 0, 1.0};
Point(95) = {-0.020749, -0.736817, 0, 1.0};
Point(96) = {-0.015930, -0.738693, 0, 1.0};
Point(97) = {-0.011064, -0.740538, 0, 1.0};
Point(98) = {-0.006159, -0.742289, 0, 1.0};
Point(99) = {-0.001241, -0.743961, 0, 1.0};
Point(100) = {0.003680, -0.745480, 0, 1.0};
Point(101) = {0.008590, -0.746810, 0, 1.0};
Point(102) = {0.013475, -0.747881, 0, 1.0};
Point(103) = {0.018310, -0.748733, 0, 1.0};
Point(104) = {0.023075, -0.749345, 0, 1.0};
Point(105) = {0.027771, -0.749779, 0, 1.0};
Point(106) = {0.032292, -0.749986, 0, 1.0};
Point(107) = {0.036708, -0.750000, 0, 1.0};
Point(108) = {0.040965, -0.749817, 0, 1.0};
Point(109) = {0.045042, -0.749479, 0, 1.0};
Point(110) = {0.048920, -0.748991, 0, 1.0};
Point(111) = {0.052578, -0.748385, 0, 1.0};
Point(112) = {0.055999, -0.747667, 0, 1.0};
Point(113) = {0.059163, -0.746860, 0, 1.0};
Point(114) = {0.062058, -0.745973, 0, 1.0};
Point(115) = {0.064669, -0.745031, 0, 1.0};
Point(116) = {0.066981, -0.744043, 0, 1.0};
Point(117) = {0.068982, -0.743042, 0, 1.0};
Point(118) = {0.070659, -0.742037, 0, 1.0};
Point(119) = {0.072004, -0.741061, 0, 1.0};
Point(120) = {0.073004, -0.740149, 0, 1.0};
Point(121) = {0.073654, -0.739316, 0, 1.0};
Point(122) = {0.073967, -0.738465, 0, 1.0};
Point(123) = {0.073892, -0.737899, 0, 1.0};
Point(124) = {0.073498, -0.737204, 0, 1.0};
Point(125) = {0.072779, -0.736438, 0, 1.0};
Point(126) = {0.071733, -0.735631, 0, 1.0};
Point(127) = {0.070368, -0.734774, 0, 1.0};
Point(128) = {0.068684, -0.733886, 0, 1.0};
Point(129) = {0.066694, -0.732961, 0, 1.0};
Point(130) = {0.064399, -0.732020, 0, 1.0};
Point(131) = {0.061814, -0.731052, 0, 1.0};
Point(132) = {0.058948, -0.730083, 0, 1.0};
Point(133) = {0.055813, -0.729100, 0, 1.0};
Point(134) = {0.052419, -0.728130, 0, 1.0};
Point(135) = {0.048786, -0.727160, 0, 1.0};
Point(136) = {0.044923, -0.726221, 0, 1.0};
Point(137) = {0.040851, -0.725295, 0, 1.0};
Point(138) = {0.036580, -0.724421, 0, 1.0};
Point(139) = {0.032159, -0.723618, 0, 1.0};
Point(140) = {0.027506, -0.722923, 0, 1.0};
Point(141) = {0.022747, -0.722279, 0, 1.0};
Point(142) = {0.017862, -0.721728, 0, 1.0};
Point(143) = {0.012877, -0.721253, 0, 1.0};
Point(144) = {0.007800, -0.720917, 0, 1.0};
Point(145) = {0.002668, -0.720652, 0, 1.0};
Point(146) = {-0.002495, -0.720443, 0, 1.0};
Point(147) = {-0.007655, -0.720215, 0, 1.0};
Point(148) = {-0.012794, -0.719992, 0, 1.0};
Point(149) = {-0.017884, -0.719735, 0, 1.0};
Point(150) = {-0.022905, -0.719476, 0, 1.0};
Point(151) = {-0.027831, -0.719173, 0, 1.0};
Point(152) = {-0.032644, -0.718845, 0, 1.0};
Point(153) = {-0.037320, -0.718479, 0, 1.0};
Point(154) = {-0.041843, -0.718091, 0, 1.0};
Point(155) = {-0.046191, -0.717678, 0, 1.0};
Point(156) = {-0.050346, -0.717250, 0, 1.0};
Point(157) = {-0.054290, -0.716792, 0, 1.0};
Point(158) = {-0.058009, -0.716334, 0, 1.0};
Point(159) = {-0.061485, -0.715855, 0, 1.0};
Point(160) = {-0.067659, -0.714931, 0, 1.0};
Point(161) = {-0.072716, -0.714082, 0, 1.0};
Point(162) = {-0.074001, -0.713855, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074467, 0.725942, 0, 1.0};
Point(2) = {0.074061, 0.726102, 0, 1.0};
Point(3) = {0.070766, 0.727436, 0, 1.0};
Point(4) = {0.066858, 0.729043, 0, 1.0};
Point(5) = {0.062413, 0.730824, 0, 1.0};
Point(6) = {0.057492, 0.732667, 0, 1.0};
Point(7) = {0.052088, 0.734459, 0, 1.0};
Point(8) = {0.046164, 0.736177, 0, 1.0};
Point(9) = {0.039755, 0.737852, 0, 1.0};
Point(10) = {0.032939, 0.739480, 0, 1.0};
Point(11) = {0.025789, 0.741046, 0, 1.0};
Point(12) = {0.018383, 0.742538, 0, 1.0};
Point(13) = {0.010804, 0.743938, 0, 1.0};
Point(14) = {0.003134, 0.745229, 0, 1.0};
Point(15) = {-0.004545, 0.746394, 0, 1.0};
Point(16) = {-0.012151, 0.747418, 0, 1.0};
Point(17) = {-0.019604, 0.748286, 0, 1.0};
Point(18) = {-0.026829, 0.748987, 0, 1.0};
Point(19) = {-0.033749, 0.749511, 0, 1.0};
Point(20) = {-0.040297, 0.749851, 0, 1.0};
Point(21) = {-0.046406, 0.750000, 0, 1.0};
Point(22) = {-0.052022, 0.749959, 0, 1.0};
Point(23) = {-0.057092, 0.749729, 0, 1.0};
Point(24) = {-0.061573, 0.749321, 0, 1.0};
Point(25) = {-0.065426, 0.748747, 0, 1.0};
Point(26) = {-0.068622, 0.748027, 0, 1.0};
Point(27) = {-0.071137, 0.747190, 0, 1.0};
Point(28) = {-0.072952, 0.746279, 0, 1.0};
Point(29) = {-0.073969, 0.745440, 0, 1.0};
Point(30) = {-0.074169, 0.745168, 0, 1.0};
Point(31) = {-0.074303, 0.744909, 0, 1.0};
Point(32) = {-0.074352, 0.744748, 0, 1.0};
Point(33) = {-0.074358, 0.744603, 0, 1.0};
Point(34) = {-0.074310, 0.744460, 0, 1.0};
Point(35) = {-0.074213, 0.744306, 0, 1.0};
Point(36) = {-0.073994, 0.744057, 0, 1.0};
Point(37) = {-0.073697, 0.743789, 0, 1.0};
Point(38) = {-0.071990, 0.742720, 0, 1.0};
Point(39) = {-0.069587, 0.741650, 0, 1.0};
Point(40) = {-0.066406, 0.740531, 0, 1.0};
Point(41) = {-0.062469, 0.739382, 0, 1.0};
Point(42) = {-0.057811, 0.738210, 0, 1.0};
Point(43) = {-0.052481, 0.737017, 0, 1.0};
Point(44) = {-0.046546, 0.735809, 0, 1.0};
Point(45) = {-0.040074, 0.734601, 0, 1.0};
Point(46) = {-0.033140, 0.733406, 0, 1.0};
Point(47) = {-0.025818, 0.732243, 0, 1.0};
Point(48) = {-0.018182, 0.731119, 0, 1.0};
Point(49) = {-0.010317, 0.730042, 0, 1.0};
Point(50) = {-0.002313, 0.729016, 0, 1.0};
Point(51) = {0.005736, 0.728055, 0, 1.0};
Point(52) = {0.013738, 0.727165, 0, 1.0};
Point(53) = {0.021601, 0.726362, 0, 1.0};
Point(54) = {0.029234, 0.725655, 0, 1.0};
Point(55) = {0.036552, 0.725060, 0, 1.0};
Point(56) = {0.043473, 0.724588, 0, 1.0};
Point(57) = {0.049916, 0.724269, 0, 1.0};
Point(58) = {0.055863, 0.724135, 0, 1.0};
Point(59) = {0.061307, 0.724134, 0, 1.0};
Point(60) = {0.066162, 0.724204, 0, 1.0};
Point(61) = {0.070366, 0.724337, 0, 1.0};
Point(62) = {0.073879, 0.724471, 0, 1.0};
Point(63) = {0.074273, 0.724475, 0, 1.0};
Point(64) = {-0.074467, -0.725942, 0, 1.0};
Point(65) = {-0.074061, -0.726102, 0, 1.0};
Point(66) = {-0.070766, -0.727436, 0, 1.0};
Point(67) = {-0.066858, -0.729043, 0, 1.0};
Point(68) = {-0.062413, -0.730824, 0, 1.0};
Point(69) = {-0.057492, -0.732667, 0, 1.0};
Point(70) = {-0.052088, -0.734459, 0, 1.0};
Point(71) = {-0.046164, -0.736177, 0, 1.0};
Point(72) = {-0.039755, -0.737852, 0, 1.0};
Point(73) = {-0.032939, -0.739480, 0, 1.0};
Point(74) = {-0.025789, -0.741046, 0, 1.0};
Point(75) = {-0.018383, -0.742538, 0, 1.0};
Point(76) = {-0.010804, -0.743938, 0, 1.0};
Point(77) = {-0.003134, -0.745229, 0, 1.0};
Point(78) = {0.004545, -0.746394, 0, 1.0};
Point(79) = {0.012151, -0.747418, 0, 1.0};
Point(80) = {0.019604, -0.748286, 0, 1.0};
Point(81) = {0.026829, -0.748987, 0, 1.0};
Point(82) = {0.033749, -0.749511, 0, 1.0};
Point(83) = {0.040297, -0.749851, 0, 1.0};
Point(84) = {0.046406, -0.750000, 0, 1.0};
Point(85) = {0.052022, -0.749959, 0, 1.0};
Point(86) = {0.057092, -0.749729, 0, 1.0};
Point(87) = {0.061573, -0.749321, 0, 1.0};
Point(88) = {0.065426, -0.748747, 0, 1.0};
Point(89) = {0.068622, -0.748027, 0, 1.0};
Point(90) = {0.071137, -0.747190, 0, 1.0};
Point(91) = {0.072952, -0.746279, 0, 1.0};
Point(92) = {0.073969, -0.745440, 0, 1.0};
Point(93) = {0.074169, -0.745168, 0, 1.0};
Point(94) = {0.074303, -0.744909, 0, 1.0};
Point(95) = {0.074352, -0.744748, 0, 1.0};
Point(96) = {0.074358, -0.744603, 0, 1.0};
Point(97) = {0.074310, -0.744460, 0, 1.0};
Point(98) = {0.074213, -0.744306, 0, 1.0};
Point(99) = {0.073994, -0.744057, 0, 1.0};
Point(100) = {0.073697, -0.743789, 0, 1.0};
Point(101) = {0.071990, -0.742720, 0, 1.0};
Point(102) = {0.069587, -0.741650, 0, 1.0};
Point(103) = {0.066406, -0.740531, 0, 1.0};
Point(104) = {0.062469, -0.739382, 0, 1.0};
Point(105) = {0.057811, -0.738210, 0, 1.0};
Point(106) = {0.052481, -0.737017, 0, 1.0};
Point(107) = {0.046546, -0.735809, 0, 1.0};
Point(108) = {0.040074, -0.734601, 0, 1.0};
Point(109) = {0.033140, -0.733406, 0, 1.0};
Point(110) = {0.025818, -0.732243, 0, 1.0};
Point(111) = {0.018182, -0.731119, 0, 1.0};
Point(112) = {0.010317, -0.730042, 0, 1.0};
Point(113) = {0.002313, -0.729016, 0, 1.0};
Point(114) = {-0.005736, -0.728055, 0, 1.0};
Point(115) = {-0.013738, -0.727165, 0, 1.0};
Point(116) = {-0.021601, -0.726362, 0, 1.0};
Point(117) = {-0.029234, -0.725655, 0, 1.0};
Point(118) = {-0.036552, -0.725060, 0, 1.0};
Point(119) = {-0.043473, -0.724588, 0, 1.0};
Point(120) = {-0.049916, -0.724269, 0, 1.0};
Point(121) = {-0.055863, -0.724135, 0, 1.0};
Point(122) = {-0.061307, -0.724134, 0, 1.0};
Point(123) = {-0.066162, -0.724204, 0, 1.0};
Point(124) = {-0.070366, -0.724337, 0, 1.0};
Point(125) = {-0.073879, -0.724471, 0, 1.0};
Point(126) = {-0.074273, -0.724475, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:46};
Spline(3) = {46:63};
Spline(4) = {63,1};

// Lines: second blade (splines 5-8)
Spline(5) = {64:82};
Spline(6) = {82:109};
Spline(7) = {109:126};
Spline(8) = {126,64};

// Outer domain (points 20001-4 and lines)
Point(127) = {-13.50000000, -15.00000000, 0, 1.0};
Point(128) = {-13.50000000, 15.00000000, 0, 1.0};
Point(129) = {36.00000000, 15.00000000, 0, 1.0};
Point(130) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {127, 128};
Line(12) = {128, 129};
Line(13) = {129, 130};
Line(14) = {127, 130};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
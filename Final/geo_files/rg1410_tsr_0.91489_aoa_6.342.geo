SetFactory("OpenCASCADE");

Point(1) = {0.111582, 0.727565, 0, 1.0};
Point(2) = {0.111082, 0.727695, 0, 1.0};
Point(3) = {0.109612, 0.728119, 0, 1.0};
Point(4) = {0.107234, 0.728831, 0, 1.0};
Point(5) = {0.104003, 0.729755, 0, 1.0};
Point(6) = {0.099967, 0.730841, 0, 1.0};
Point(7) = {0.095198, 0.732092, 0, 1.0};
Point(8) = {0.089783, 0.733477, 0, 1.0};
Point(9) = {0.083815, 0.734969, 0, 1.0};
Point(10) = {0.077396, 0.736526, 0, 1.0};
Point(11) = {0.070606, 0.738114, 0, 1.0};
Point(12) = {0.063470, 0.739711, 0, 1.0};
Point(13) = {0.056022, 0.741300, 0, 1.0};
Point(14) = {0.048351, 0.742841, 0, 1.0};
Point(15) = {0.040548, 0.744306, 0, 1.0};
Point(16) = {0.032700, 0.745664, 0, 1.0};
Point(17) = {0.024901, 0.746876, 0, 1.0};
Point(18) = {0.017237, 0.747923, 0, 1.0};
Point(19) = {0.009799, 0.748774, 0, 1.0};
Point(20) = {0.002669, 0.749414, 0, 1.0};
Point(21) = {-0.004072, 0.749826, 0, 1.0};
Point(22) = {-0.010347, 0.750000, 0, 1.0};
Point(23) = {-0.016094, 0.749934, 0, 1.0};
Point(24) = {-0.021238, 0.749727, 0, 1.0};
Point(25) = {-0.025742, 0.749274, 0, 1.0};
Point(26) = {-0.029559, 0.748625, 0, 1.0};
Point(27) = {-0.032660, 0.747789, 0, 1.0};
Point(28) = {-0.035021, 0.746787, 0, 1.0};
Point(29) = {-0.036629, 0.745656, 0, 1.0};
Point(30) = {-0.037500, 0.744134, 0, 1.0};
Point(31) = {-0.036927, 0.742975, 0, 1.0};
Point(32) = {-0.035559, 0.741954, 0, 1.0};
Point(33) = {-0.033421, 0.740936, 0, 1.0};
Point(34) = {-0.030525, 0.739935, 0, 1.0};
Point(35) = {-0.026888, 0.738966, 0, 1.0};
Point(36) = {-0.022538, 0.738028, 0, 1.0};
Point(37) = {-0.017518, 0.737128, 0, 1.0};
Point(38) = {-0.011875, 0.736259, 0, 1.0};
Point(39) = {-0.005672, 0.735428, 0, 1.0};
Point(40) = {0.001026, 0.734629, 0, 1.0};
Point(41) = {0.008142, 0.733865, 0, 1.0};
Point(42) = {0.015594, 0.733140, 0, 1.0};
Point(43) = {0.023297, 0.732450, 0, 1.0};
Point(44) = {0.031159, 0.731796, 0, 1.0};
Point(45) = {0.039090, 0.731188, 0, 1.0};
Point(46) = {0.046993, 0.730623, 0, 1.0};
Point(47) = {0.054779, 0.730114, 0, 1.0};
Point(48) = {0.062353, 0.729666, 0, 1.0};
Point(49) = {0.069628, 0.729314, 0, 1.0};
Point(50) = {0.076569, 0.729079, 0, 1.0};
Point(51) = {0.083143, 0.728918, 0, 1.0};
Point(52) = {0.089259, 0.728759, 0, 1.0};
Point(53) = {0.094808, 0.728581, 0, 1.0};
Point(54) = {0.099694, 0.728382, 0, 1.0};
Point(55) = {0.103827, 0.728169, 0, 1.0};
Point(56) = {0.107138, 0.727965, 0, 1.0};
Point(57) = {0.109574, 0.727779, 0, 1.0};
Point(58) = {0.111074, 0.727629, 0, 1.0};
Point(59) = {-0.111582, -0.727565, 0, 1.0};
Point(60) = {-0.111082, -0.727695, 0, 1.0};
Point(61) = {-0.109612, -0.728119, 0, 1.0};
Point(62) = {-0.107234, -0.728831, 0, 1.0};
Point(63) = {-0.104003, -0.729755, 0, 1.0};
Point(64) = {-0.099967, -0.730841, 0, 1.0};
Point(65) = {-0.095198, -0.732092, 0, 1.0};
Point(66) = {-0.089783, -0.733477, 0, 1.0};
Point(67) = {-0.083815, -0.734969, 0, 1.0};
Point(68) = {-0.077396, -0.736526, 0, 1.0};
Point(69) = {-0.070606, -0.738114, 0, 1.0};
Point(70) = {-0.063470, -0.739711, 0, 1.0};
Point(71) = {-0.056022, -0.741300, 0, 1.0};
Point(72) = {-0.048351, -0.742841, 0, 1.0};
Point(73) = {-0.040548, -0.744306, 0, 1.0};
Point(74) = {-0.032700, -0.745664, 0, 1.0};
Point(75) = {-0.024901, -0.746876, 0, 1.0};
Point(76) = {-0.017237, -0.747923, 0, 1.0};
Point(77) = {-0.009799, -0.748774, 0, 1.0};
Point(78) = {-0.002669, -0.749414, 0, 1.0};
Point(79) = {0.004072, -0.749826, 0, 1.0};
Point(80) = {0.010347, -0.750000, 0, 1.0};
Point(81) = {0.016094, -0.749934, 0, 1.0};
Point(82) = {0.021238, -0.749727, 0, 1.0};
Point(83) = {0.025742, -0.749274, 0, 1.0};
Point(84) = {0.029559, -0.748625, 0, 1.0};
Point(85) = {0.032660, -0.747789, 0, 1.0};
Point(86) = {0.035021, -0.746787, 0, 1.0};
Point(87) = {0.036629, -0.745656, 0, 1.0};
Point(88) = {0.037500, -0.744134, 0, 1.0};
Point(89) = {0.036927, -0.742975, 0, 1.0};
Point(90) = {0.035559, -0.741954, 0, 1.0};
Point(91) = {0.033421, -0.740936, 0, 1.0};
Point(92) = {0.030525, -0.739935, 0, 1.0};
Point(93) = {0.026888, -0.738966, 0, 1.0};
Point(94) = {0.022538, -0.738028, 0, 1.0};
Point(95) = {0.017518, -0.737128, 0, 1.0};
Point(96) = {0.011875, -0.736259, 0, 1.0};
Point(97) = {0.005672, -0.735428, 0, 1.0};
Point(98) = {-0.001026, -0.734629, 0, 1.0};
Point(99) = {-0.008142, -0.733865, 0, 1.0};
Point(100) = {-0.015594, -0.733140, 0, 1.0};
Point(101) = {-0.023297, -0.732450, 0, 1.0};
Point(102) = {-0.031159, -0.731796, 0, 1.0};
Point(103) = {-0.039090, -0.731188, 0, 1.0};
Point(104) = {-0.046993, -0.730623, 0, 1.0};
Point(105) = {-0.054779, -0.730114, 0, 1.0};
Point(106) = {-0.062353, -0.729666, 0, 1.0};
Point(107) = {-0.069628, -0.729314, 0, 1.0};
Point(108) = {-0.076569, -0.729079, 0, 1.0};
Point(109) = {-0.083143, -0.728918, 0, 1.0};
Point(110) = {-0.089259, -0.728759, 0, 1.0};
Point(111) = {-0.094808, -0.728581, 0, 1.0};
Point(112) = {-0.099694, -0.728382, 0, 1.0};
Point(113) = {-0.103827, -0.728169, 0, 1.0};
Point(114) = {-0.107138, -0.727965, 0, 1.0};
Point(115) = {-0.109574, -0.727779, 0, 1.0};
Point(116) = {-0.111074, -0.727629, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:78};
Spline(6) = {78:99};
Spline(7) = {99:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074655, 0.735897, 0, 1.0};
Point(2) = {0.072215, 0.736738, 0, 1.0};
Point(3) = {0.069774, 0.737560, 0, 1.0};
Point(4) = {0.067330, 0.738352, 0, 1.0};
Point(5) = {0.064886, 0.739133, 0, 1.0};
Point(6) = {0.062441, 0.739905, 0, 1.0};
Point(7) = {0.059994, 0.740667, 0, 1.0};
Point(8) = {0.057546, 0.741399, 0, 1.0};
Point(9) = {0.055097, 0.742121, 0, 1.0};
Point(10) = {0.052646, 0.742823, 0, 1.0};
Point(11) = {0.050192, 0.743495, 0, 1.0};
Point(12) = {0.047737, 0.744147, 0, 1.0};
Point(13) = {0.045280, 0.744769, 0, 1.0};
Point(14) = {0.042819, 0.745352, 0, 1.0};
Point(15) = {0.040356, 0.745904, 0, 1.0};
Point(16) = {0.037889, 0.746417, 0, 1.0};
Point(17) = {0.035421, 0.746900, 0, 1.0};
Point(18) = {0.032947, 0.747322, 0, 1.0};
Point(19) = {0.030471, 0.747716, 0, 1.0};
Point(20) = {0.027991, 0.748069, 0, 1.0};
Point(21) = {0.025509, 0.748392, 0, 1.0};
Point(22) = {0.023025, 0.748685, 0, 1.0};
Point(23) = {0.020538, 0.748949, 0, 1.0};
Point(24) = {0.018048, 0.749172, 0, 1.0};
Point(25) = {0.015556, 0.749376, 0, 1.0};
Point(26) = {0.013062, 0.749550, 0, 1.0};
Point(27) = {0.010566, 0.749704, 0, 1.0};
Point(28) = {0.008068, 0.749828, 0, 1.0};
Point(29) = {0.005567, 0.749912, 0, 1.0};
Point(30) = {0.003063, 0.749966, 0, 1.0};
Point(31) = {0.000557, 0.750000, 0, 1.0};
Point(32) = {-0.001952, 0.749994, 0, 1.0};
Point(33) = {-0.004464, 0.749949, 0, 1.0};
Point(34) = {-0.006980, 0.749854, 0, 1.0};
Point(35) = {-0.009500, 0.749708, 0, 1.0};
Point(36) = {-0.012024, 0.749513, 0, 1.0};
Point(37) = {-0.014556, 0.749229, 0, 1.0};
Point(38) = {-0.017096, 0.748834, 0, 1.0};
Point(39) = {-0.019652, 0.748261, 0, 1.0};
Point(40) = {-0.020939, 0.747854, 0, 1.0};
Point(41) = {-0.022238, 0.747308, 0, 1.0};
Point(42) = {-0.023557, 0.746513, 0, 1.0};
Point(43) = {-0.024372, 0.745747, 0, 1.0};
Point(44) = {-0.024716, 0.745223, 0, 1.0};
Point(45) = {-0.025000, 0.744203, 0, 1.0};
Point(46) = {-0.024841, 0.743688, 0, 1.0};
Point(47) = {-0.024578, 0.743225, 0, 1.0};
Point(48) = {-0.023872, 0.742656, 0, 1.0};
Point(49) = {-0.022664, 0.742095, 0, 1.0};
Point(50) = {-0.021444, 0.741675, 0, 1.0};
Point(51) = {-0.020220, 0.741304, 0, 1.0};
Point(52) = {-0.017764, 0.740662, 0, 1.0};
Point(53) = {-0.015300, 0.740119, 0, 1.0};
Point(54) = {-0.012832, 0.739636, 0, 1.0};
Point(55) = {-0.010359, 0.739203, 0, 1.0};
Point(56) = {-0.007882, 0.738810, 0, 1.0};
Point(57) = {-0.005404, 0.738447, 0, 1.0};
Point(58) = {-0.002923, 0.738114, 0, 1.0};
Point(59) = {-0.000439, 0.737811, 0, 1.0};
Point(60) = {0.002048, 0.737547, 0, 1.0};
Point(61) = {0.004535, 0.737294, 0, 1.0};
Point(62) = {0.007025, 0.737060, 0, 1.0};
Point(63) = {0.009515, 0.736846, 0, 1.0};
Point(64) = {0.012009, 0.736663, 0, 1.0};
Point(65) = {0.014503, 0.736489, 0, 1.0};
Point(66) = {0.016999, 0.736335, 0, 1.0};
Point(67) = {0.019496, 0.736201, 0, 1.0};
Point(68) = {0.021995, 0.736087, 0, 1.0};
Point(69) = {0.024497, 0.736003, 0, 1.0};
Point(70) = {0.027000, 0.735949, 0, 1.0};
Point(71) = {0.029507, 0.735925, 0, 1.0};
Point(72) = {0.032016, 0.735940, 0, 1.0};
Point(73) = {0.034529, 0.735996, 0, 1.0};
Point(74) = {0.037044, 0.736071, 0, 1.0};
Point(75) = {0.039561, 0.736177, 0, 1.0};
Point(76) = {0.042078, 0.736292, 0, 1.0};
Point(77) = {0.044596, 0.736407, 0, 1.0};
Point(78) = {0.047115, 0.736532, 0, 1.0};
Point(79) = {0.049633, 0.736658, 0, 1.0};
Point(80) = {0.052150, 0.736763, 0, 1.0};
Point(81) = {0.054666, 0.736858, 0, 1.0};
Point(82) = {0.057179, 0.736914, 0, 1.0};
Point(83) = {0.059689, 0.736929, 0, 1.0};
Point(84) = {0.062195, 0.736895, 0, 1.0};
Point(85) = {0.064694, 0.736791, 0, 1.0};
Point(86) = {0.067188, 0.736607, 0, 1.0};
Point(87) = {0.069674, 0.736334, 0, 1.0};
Point(88) = {0.072148, 0.735921, 0, 1.0};
Point(89) = {0.074610, 0.735349, 0, 1.0};
Point(90) = {-0.074655, -0.735897, 0, 1.0};
Point(91) = {-0.072215, -0.736738, 0, 1.0};
Point(92) = {-0.069774, -0.737560, 0, 1.0};
Point(93) = {-0.067330, -0.738352, 0, 1.0};
Point(94) = {-0.064886, -0.739133, 0, 1.0};
Point(95) = {-0.062441, -0.739905, 0, 1.0};
Point(96) = {-0.059994, -0.740667, 0, 1.0};
Point(97) = {-0.057546, -0.741399, 0, 1.0};
Point(98) = {-0.055097, -0.742121, 0, 1.0};
Point(99) = {-0.052646, -0.742823, 0, 1.0};
Point(100) = {-0.050192, -0.743495, 0, 1.0};
Point(101) = {-0.047737, -0.744147, 0, 1.0};
Point(102) = {-0.045280, -0.744769, 0, 1.0};
Point(103) = {-0.042819, -0.745352, 0, 1.0};
Point(104) = {-0.040356, -0.745904, 0, 1.0};
Point(105) = {-0.037889, -0.746417, 0, 1.0};
Point(106) = {-0.035421, -0.746900, 0, 1.0};
Point(107) = {-0.032947, -0.747322, 0, 1.0};
Point(108) = {-0.030471, -0.747716, 0, 1.0};
Point(109) = {-0.027991, -0.748069, 0, 1.0};
Point(110) = {-0.025509, -0.748392, 0, 1.0};
Point(111) = {-0.023025, -0.748685, 0, 1.0};
Point(112) = {-0.020538, -0.748949, 0, 1.0};
Point(113) = {-0.018048, -0.749172, 0, 1.0};
Point(114) = {-0.015556, -0.749376, 0, 1.0};
Point(115) = {-0.013062, -0.749550, 0, 1.0};
Point(116) = {-0.010566, -0.749704, 0, 1.0};
Point(117) = {-0.008068, -0.749828, 0, 1.0};
Point(118) = {-0.005567, -0.749912, 0, 1.0};
Point(119) = {-0.003063, -0.749966, 0, 1.0};
Point(120) = {-0.000557, -0.750000, 0, 1.0};
Point(121) = {0.001952, -0.749994, 0, 1.0};
Point(122) = {0.004464, -0.749949, 0, 1.0};
Point(123) = {0.006980, -0.749854, 0, 1.0};
Point(124) = {0.009500, -0.749708, 0, 1.0};
Point(125) = {0.012024, -0.749513, 0, 1.0};
Point(126) = {0.014556, -0.749229, 0, 1.0};
Point(127) = {0.017096, -0.748834, 0, 1.0};
Point(128) = {0.019652, -0.748261, 0, 1.0};
Point(129) = {0.020939, -0.747854, 0, 1.0};
Point(130) = {0.022238, -0.747308, 0, 1.0};
Point(131) = {0.023557, -0.746513, 0, 1.0};
Point(132) = {0.024372, -0.745747, 0, 1.0};
Point(133) = {0.024716, -0.745223, 0, 1.0};
Point(134) = {0.025000, -0.744203, 0, 1.0};
Point(135) = {0.024841, -0.743688, 0, 1.0};
Point(136) = {0.024578, -0.743225, 0, 1.0};
Point(137) = {0.023872, -0.742656, 0, 1.0};
Point(138) = {0.022664, -0.742095, 0, 1.0};
Point(139) = {0.021444, -0.741675, 0, 1.0};
Point(140) = {0.020220, -0.741304, 0, 1.0};
Point(141) = {0.017764, -0.740662, 0, 1.0};
Point(142) = {0.015300, -0.740119, 0, 1.0};
Point(143) = {0.012832, -0.739636, 0, 1.0};
Point(144) = {0.010359, -0.739203, 0, 1.0};
Point(145) = {0.007882, -0.738810, 0, 1.0};
Point(146) = {0.005404, -0.738447, 0, 1.0};
Point(147) = {0.002923, -0.738114, 0, 1.0};
Point(148) = {0.000439, -0.737811, 0, 1.0};
Point(149) = {-0.002048, -0.737547, 0, 1.0};
Point(150) = {-0.004535, -0.737294, 0, 1.0};
Point(151) = {-0.007025, -0.737060, 0, 1.0};
Point(152) = {-0.009515, -0.736846, 0, 1.0};
Point(153) = {-0.012009, -0.736663, 0, 1.0};
Point(154) = {-0.014503, -0.736489, 0, 1.0};
Point(155) = {-0.016999, -0.736335, 0, 1.0};
Point(156) = {-0.019496, -0.736201, 0, 1.0};
Point(157) = {-0.021995, -0.736087, 0, 1.0};
Point(158) = {-0.024497, -0.736003, 0, 1.0};
Point(159) = {-0.027000, -0.735949, 0, 1.0};
Point(160) = {-0.029507, -0.735925, 0, 1.0};
Point(161) = {-0.032016, -0.735940, 0, 1.0};
Point(162) = {-0.034529, -0.735996, 0, 1.0};
Point(163) = {-0.037044, -0.736071, 0, 1.0};
Point(164) = {-0.039561, -0.736177, 0, 1.0};
Point(165) = {-0.042078, -0.736292, 0, 1.0};
Point(166) = {-0.044596, -0.736407, 0, 1.0};
Point(167) = {-0.047115, -0.736532, 0, 1.0};
Point(168) = {-0.049633, -0.736658, 0, 1.0};
Point(169) = {-0.052150, -0.736763, 0, 1.0};
Point(170) = {-0.054666, -0.736858, 0, 1.0};
Point(171) = {-0.057179, -0.736914, 0, 1.0};
Point(172) = {-0.059689, -0.736929, 0, 1.0};
Point(173) = {-0.062195, -0.736895, 0, 1.0};
Point(174) = {-0.064694, -0.736791, 0, 1.0};
Point(175) = {-0.067188, -0.736607, 0, 1.0};
Point(176) = {-0.069674, -0.736334, 0, 1.0};
Point(177) = {-0.072148, -0.735921, 0, 1.0};
Point(178) = {-0.074610, -0.735349, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112107, 0.728845, 0, 1.0};
Point(2) = {0.108447, 0.730107, 0, 1.0};
Point(3) = {0.104785, 0.731340, 0, 1.0};
Point(4) = {0.101120, 0.732527, 0, 1.0};
Point(5) = {0.097453, 0.733700, 0, 1.0};
Point(6) = {0.093785, 0.734858, 0, 1.0};
Point(7) = {0.090116, 0.736000, 0, 1.0};
Point(8) = {0.086444, 0.737098, 0, 1.0};
Point(9) = {0.082770, 0.738181, 0, 1.0};
Point(10) = {0.079093, 0.739234, 0, 1.0};
Point(11) = {0.075413, 0.740242, 0, 1.0};
Point(12) = {0.071730, 0.741221, 0, 1.0};
Point(13) = {0.068044, 0.742154, 0, 1.0};
Point(14) = {0.064353, 0.743028, 0, 1.0};
Point(15) = {0.060658, 0.743856, 0, 1.0};
Point(16) = {0.056959, 0.744625, 0, 1.0};
Point(17) = {0.053255, 0.745349, 0, 1.0};
Point(18) = {0.049545, 0.745984, 0, 1.0};
Point(19) = {0.045830, 0.746573, 0, 1.0};
Point(20) = {0.042111, 0.747103, 0, 1.0};
Point(21) = {0.038388, 0.747588, 0, 1.0};
Point(22) = {0.034662, 0.748028, 0, 1.0};
Point(23) = {0.030932, 0.748423, 0, 1.0};
Point(24) = {0.027197, 0.748759, 0, 1.0};
Point(25) = {0.023459, 0.749064, 0, 1.0};
Point(26) = {0.019718, 0.749325, 0, 1.0};
Point(27) = {0.015974, 0.749555, 0, 1.0};
Point(28) = {0.012227, 0.749741, 0, 1.0};
Point(29) = {0.008475, 0.749867, 0, 1.0};
Point(30) = {0.004719, 0.749949, 0, 1.0};
Point(31) = {0.000960, 0.750000, 0, 1.0};
Point(32) = {-0.002803, 0.749992, 0, 1.0};
Point(33) = {-0.006571, 0.749923, 0, 1.0};
Point(34) = {-0.010345, 0.749780, 0, 1.0};
Point(35) = {-0.014125, 0.749563, 0, 1.0};
Point(36) = {-0.017912, 0.749270, 0, 1.0};
Point(37) = {-0.021709, 0.748843, 0, 1.0};
Point(38) = {-0.025520, 0.748251, 0, 1.0};
Point(39) = {-0.029353, 0.747391, 0, 1.0};
Point(40) = {-0.031284, 0.746781, 0, 1.0};
Point(41) = {-0.033232, 0.745962, 0, 1.0};
Point(42) = {-0.035211, 0.744769, 0, 1.0};
Point(43) = {-0.036434, 0.743620, 0, 1.0};
Point(44) = {-0.036949, 0.742835, 0, 1.0};
Point(45) = {-0.037375, 0.741304, 0, 1.0};
Point(46) = {-0.037137, 0.740532, 0, 1.0};
Point(47) = {-0.036743, 0.739838, 0, 1.0};
Point(48) = {-0.035684, 0.738984, 0, 1.0};
Point(49) = {-0.033871, 0.738143, 0, 1.0};
Point(50) = {-0.032042, 0.737512, 0, 1.0};
Point(51) = {-0.030206, 0.736956, 0, 1.0};
Point(52) = {-0.026522, 0.735992, 0, 1.0};
Point(53) = {-0.022826, 0.735179, 0, 1.0};
Point(54) = {-0.019123, 0.734454, 0, 1.0};
Point(55) = {-0.015413, 0.733805, 0, 1.0};
Point(56) = {-0.011699, 0.733216, 0, 1.0};
Point(57) = {-0.007981, 0.732671, 0, 1.0};
Point(58) = {-0.004259, 0.732171, 0, 1.0};
Point(59) = {-0.000534, 0.731716, 0, 1.0};
Point(60) = {0.003196, 0.731321, 0, 1.0};
Point(61) = {0.006928, 0.730941, 0, 1.0};
Point(62) = {0.010661, 0.730590, 0, 1.0};
Point(63) = {0.014398, 0.730270, 0, 1.0};
Point(64) = {0.018138, 0.729994, 0, 1.0};
Point(65) = {0.021879, 0.729734, 0, 1.0};
Point(66) = {0.025623, 0.729503, 0, 1.0};
Point(67) = {0.029369, 0.729302, 0, 1.0};
Point(68) = {0.033117, 0.729131, 0, 1.0};
Point(69) = {0.036869, 0.729005, 0, 1.0};
Point(70) = {0.040625, 0.728924, 0, 1.0};
Point(71) = {0.044385, 0.728887, 0, 1.0};
Point(72) = {0.048149, 0.728911, 0, 1.0};
Point(73) = {0.051919, 0.728994, 0, 1.0};
Point(74) = {0.055690, 0.729107, 0, 1.0};
Point(75) = {0.059466, 0.729265, 0, 1.0};
Point(76) = {0.063242, 0.729438, 0, 1.0};
Point(77) = {0.067019, 0.729611, 0, 1.0};
Point(78) = {0.070797, 0.729799, 0, 1.0};
Point(79) = {0.074575, 0.729986, 0, 1.0};
Point(80) = {0.078350, 0.730144, 0, 1.0};
Point(81) = {0.082124, 0.730287, 0, 1.0};
Point(82) = {0.085894, 0.730371, 0, 1.0};
Point(83) = {0.089658, 0.730394, 0, 1.0};
Point(84) = {0.093416, 0.730343, 0, 1.0};
Point(85) = {0.097166, 0.730187, 0, 1.0};
Point(86) = {0.100906, 0.729911, 0, 1.0};
Point(87) = {0.104635, 0.729501, 0, 1.0};
Point(88) = {0.108347, 0.728882, 0, 1.0};
Point(89) = {0.112039, 0.728023, 0, 1.0};
Point(90) = {-0.112107, -0.728845, 0, 1.0};
Point(91) = {-0.108447, -0.730107, 0, 1.0};
Point(92) = {-0.104785, -0.731340, 0, 1.0};
Point(93) = {-0.101120, -0.732527, 0, 1.0};
Point(94) = {-0.097453, -0.733700, 0, 1.0};
Point(95) = {-0.093785, -0.734858, 0, 1.0};
Point(96) = {-0.090116, -0.736000, 0, 1.0};
Point(97) = {-0.086444, -0.737098, 0, 1.0};
Point(98) = {-0.082770, -0.738181, 0, 1.0};
Point(99) = {-0.079093, -0.739234, 0, 1.0};
Point(100) = {-0.075413, -0.740242, 0, 1.0};
Point(101) = {-0.071730, -0.741221, 0, 1.0};
Point(102) = {-0.068044, -0.742154, 0, 1.0};
Point(103) = {-0.064353, -0.743028, 0, 1.0};
Point(104) = {-0.060658, -0.743856, 0, 1.0};
Point(105) = {-0.056959, -0.744625, 0, 1.0};
Point(106) = {-0.053255, -0.745349, 0, 1.0};
Point(107) = {-0.049545, -0.745984, 0, 1.0};
Point(108) = {-0.045830, -0.746573, 0, 1.0};
Point(109) = {-0.042111, -0.747103, 0, 1.0};
Point(110) = {-0.038388, -0.747588, 0, 1.0};
Point(111) = {-0.034662, -0.748028, 0, 1.0};
Point(112) = {-0.030932, -0.748423, 0, 1.0};
Point(113) = {-0.027197, -0.748759, 0, 1.0};
Point(114) = {-0.023459, -0.749064, 0, 1.0};
Point(115) = {-0.019718, -0.749325, 0, 1.0};
Point(116) = {-0.015974, -0.749555, 0, 1.0};
Point(117) = {-0.012227, -0.749741, 0, 1.0};
Point(118) = {-0.008475, -0.749867, 0, 1.0};
Point(119) = {-0.004719, -0.749949, 0, 1.0};
Point(120) = {-0.000960, -0.750000, 0, 1.0};
Point(121) = {0.002803, -0.749992, 0, 1.0};
Point(122) = {0.006571, -0.749923, 0, 1.0};
Point(123) = {0.010345, -0.749780, 0, 1.0};
Point(124) = {0.014125, -0.749563, 0, 1.0};
Point(125) = {0.017912, -0.749270, 0, 1.0};
Point(126) = {0.021709, -0.748843, 0, 1.0};
Point(127) = {0.025520, -0.748251, 0, 1.0};
Point(128) = {0.029353, -0.747391, 0, 1.0};
Point(129) = {0.031284, -0.746781, 0, 1.0};
Point(130) = {0.033232, -0.745962, 0, 1.0};
Point(131) = {0.035211, -0.744769, 0, 1.0};
Point(132) = {0.036434, -0.743620, 0, 1.0};
Point(133) = {0.036949, -0.742835, 0, 1.0};
Point(134) = {0.037375, -0.741304, 0, 1.0};
Point(135) = {0.037137, -0.740532, 0, 1.0};
Point(136) = {0.036743, -0.739838, 0, 1.0};
Point(137) = {0.035684, -0.738984, 0, 1.0};
Point(138) = {0.033871, -0.738143, 0, 1.0};
Point(139) = {0.032042, -0.737512, 0, 1.0};
Point(140) = {0.030206, -0.736956, 0, 1.0};
Point(141) = {0.026522, -0.735992, 0, 1.0};
Point(142) = {0.022826, -0.735179, 0, 1.0};
Point(143) = {0.019123, -0.734454, 0, 1.0};
Point(144) = {0.015413, -0.733805, 0, 1.0};
Point(145) = {0.011699, -0.733216, 0, 1.0};
Point(146) = {0.007981, -0.732671, 0, 1.0};
Point(147) = {0.004259, -0.732171, 0, 1.0};
Point(148) = {0.000534, -0.731716, 0, 1.0};
Point(149) = {-0.003196, -0.731321, 0, 1.0};
Point(150) = {-0.006928, -0.730941, 0, 1.0};
Point(151) = {-0.010661, -0.730590, 0, 1.0};
Point(152) = {-0.014398, -0.730270, 0, 1.0};
Point(153) = {-0.018138, -0.729994, 0, 1.0};
Point(154) = {-0.021879, -0.729734, 0, 1.0};
Point(155) = {-0.025623, -0.729503, 0, 1.0};
Point(156) = {-0.029369, -0.729302, 0, 1.0};
Point(157) = {-0.033117, -0.729131, 0, 1.0};
Point(158) = {-0.036869, -0.729005, 0, 1.0};
Point(159) = {-0.040625, -0.728924, 0, 1.0};
Point(160) = {-0.044385, -0.728887, 0, 1.0};
Point(161) = {-0.048149, -0.728911, 0, 1.0};
Point(162) = {-0.051919, -0.728994, 0, 1.0};
Point(163) = {-0.055690, -0.729107, 0, 1.0};
Point(164) = {-0.059466, -0.729265, 0, 1.0};
Point(165) = {-0.063242, -0.729438, 0, 1.0};
Point(166) = {-0.067019, -0.729611, 0, 1.0};
Point(167) = {-0.070797, -0.729799, 0, 1.0};
Point(168) = {-0.074575, -0.729986, 0, 1.0};
Point(169) = {-0.078350, -0.730144, 0, 1.0};
Point(170) = {-0.082124, -0.730287, 0, 1.0};
Point(171) = {-0.085894, -0.730371, 0, 1.0};
Point(172) = {-0.089658, -0.730394, 0, 1.0};
Point(173) = {-0.093416, -0.730343, 0, 1.0};
Point(174) = {-0.097166, -0.730187, 0, 1.0};
Point(175) = {-0.100906, -0.729911, 0, 1.0};
Point(176) = {-0.104635, -0.729501, 0, 1.0};
Point(177) = {-0.108347, -0.728882, 0, 1.0};
Point(178) = {-0.112039, -0.728023, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
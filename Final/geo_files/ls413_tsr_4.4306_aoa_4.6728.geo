SetFactory("OpenCASCADE");

Point(1) = {0.149309, 0.721794, 0, 1.0};
Point(2) = {0.144430, 0.723477, 0, 1.0};
Point(3) = {0.139548, 0.725120, 0, 1.0};
Point(4) = {0.134660, 0.726703, 0, 1.0};
Point(5) = {0.129772, 0.728267, 0, 1.0};
Point(6) = {0.124881, 0.729810, 0, 1.0};
Point(7) = {0.119989, 0.731334, 0, 1.0};
Point(8) = {0.115092, 0.732798, 0, 1.0};
Point(9) = {0.110193, 0.734242, 0, 1.0};
Point(10) = {0.105291, 0.735646, 0, 1.0};
Point(11) = {0.100385, 0.736990, 0, 1.0};
Point(12) = {0.095474, 0.738294, 0, 1.0};
Point(13) = {0.090559, 0.739539, 0, 1.0};
Point(14) = {0.085638, 0.740703, 0, 1.0};
Point(15) = {0.080712, 0.741808, 0, 1.0};
Point(16) = {0.075779, 0.742834, 0, 1.0};
Point(17) = {0.070841, 0.743799, 0, 1.0};
Point(18) = {0.065894, 0.744645, 0, 1.0};
Point(19) = {0.060941, 0.745431, 0, 1.0};
Point(20) = {0.055982, 0.746137, 0, 1.0};
Point(21) = {0.051018, 0.746784, 0, 1.0};
Point(22) = {0.046050, 0.747371, 0, 1.0};
Point(23) = {0.041076, 0.747898, 0, 1.0};
Point(24) = {0.036096, 0.748345, 0, 1.0};
Point(25) = {0.031112, 0.748752, 0, 1.0};
Point(26) = {0.026124, 0.749100, 0, 1.0};
Point(27) = {0.021133, 0.749407, 0, 1.0};
Point(28) = {0.016136, 0.749655, 0, 1.0};
Point(29) = {0.011133, 0.749823, 0, 1.0};
Point(30) = {0.006126, 0.749932, 0, 1.0};
Point(31) = {0.001114, 0.750000, 0, 1.0};
Point(32) = {-0.003903, 0.749989, 0, 1.0};
Point(33) = {-0.008927, 0.749898, 0, 1.0};
Point(34) = {-0.013960, 0.749707, 0, 1.0};
Point(35) = {-0.019000, 0.749417, 0, 1.0};
Point(36) = {-0.024048, 0.749027, 0, 1.0};
Point(37) = {-0.029112, 0.748457, 0, 1.0};
Point(38) = {-0.034193, 0.747669, 0, 1.0};
Point(39) = {-0.039303, 0.746521, 0, 1.0};
Point(40) = {-0.041878, 0.745708, 0, 1.0};
Point(41) = {-0.044476, 0.744616, 0, 1.0};
Point(42) = {-0.047114, 0.743026, 0, 1.0};
Point(43) = {-0.048744, 0.741493, 0, 1.0};
Point(44) = {-0.049432, 0.740446, 0, 1.0};
Point(45) = {-0.050000, 0.738406, 0, 1.0};
Point(46) = {-0.049683, 0.737376, 0, 1.0};
Point(47) = {-0.049156, 0.736450, 0, 1.0};
Point(48) = {-0.047745, 0.735311, 0, 1.0};
Point(49) = {-0.045328, 0.734191, 0, 1.0};
Point(50) = {-0.042888, 0.733349, 0, 1.0};
Point(51) = {-0.040441, 0.732607, 0, 1.0};
Point(52) = {-0.035529, 0.731323, 0, 1.0};
Point(53) = {-0.030601, 0.730238, 0, 1.0};
Point(54) = {-0.025663, 0.729273, 0, 1.0};
Point(55) = {-0.020717, 0.728407, 0, 1.0};
Point(56) = {-0.015765, 0.727621, 0, 1.0};
Point(57) = {-0.010807, 0.726894, 0, 1.0};
Point(58) = {-0.005845, 0.726228, 0, 1.0};
Point(59) = {-0.000878, 0.725621, 0, 1.0};
Point(60) = {0.004095, 0.725094, 0, 1.0};
Point(61) = {0.009071, 0.724587, 0, 1.0};
Point(62) = {0.014049, 0.724120, 0, 1.0};
Point(63) = {0.019031, 0.723693, 0, 1.0};
Point(64) = {0.024018, 0.723326, 0, 1.0};
Point(65) = {0.029006, 0.722978, 0, 1.0};
Point(66) = {0.033997, 0.722670, 0, 1.0};
Point(67) = {0.038992, 0.722403, 0, 1.0};
Point(68) = {0.043990, 0.722175, 0, 1.0};
Point(69) = {0.048993, 0.722007, 0, 1.0};
Point(70) = {0.054001, 0.721898, 0, 1.0};
Point(71) = {0.059014, 0.721850, 0, 1.0};
Point(72) = {0.064033, 0.721881, 0, 1.0};
Point(73) = {0.069059, 0.721992, 0, 1.0};
Point(74) = {0.074088, 0.722143, 0, 1.0};
Point(75) = {0.079121, 0.722353, 0, 1.0};
Point(76) = {0.084157, 0.722584, 0, 1.0};
Point(77) = {0.089193, 0.722814, 0, 1.0};
Point(78) = {0.094230, 0.723065, 0, 1.0};
Point(79) = {0.099267, 0.723315, 0, 1.0};
Point(80) = {0.104301, 0.723526, 0, 1.0};
Point(81) = {0.109333, 0.723717, 0, 1.0};
Point(82) = {0.114359, 0.723828, 0, 1.0};
Point(83) = {0.119378, 0.723859, 0, 1.0};
Point(84) = {0.124389, 0.723790, 0, 1.0};
Point(85) = {0.129389, 0.723582, 0, 1.0};
Point(86) = {0.134375, 0.723215, 0, 1.0};
Point(87) = {0.139347, 0.722668, 0, 1.0};
Point(88) = {0.144296, 0.721842, 0, 1.0};
Point(89) = {0.149220, 0.720697, 0, 1.0};
Point(90) = {-0.149309, -0.721794, 0, 1.0};
Point(91) = {-0.144430, -0.723477, 0, 1.0};
Point(92) = {-0.139548, -0.725120, 0, 1.0};
Point(93) = {-0.134660, -0.726703, 0, 1.0};
Point(94) = {-0.129772, -0.728267, 0, 1.0};
Point(95) = {-0.124881, -0.729810, 0, 1.0};
Point(96) = {-0.119989, -0.731334, 0, 1.0};
Point(97) = {-0.115092, -0.732798, 0, 1.0};
Point(98) = {-0.110193, -0.734242, 0, 1.0};
Point(99) = {-0.105291, -0.735646, 0, 1.0};
Point(100) = {-0.100385, -0.736990, 0, 1.0};
Point(101) = {-0.095474, -0.738294, 0, 1.0};
Point(102) = {-0.090559, -0.739539, 0, 1.0};
Point(103) = {-0.085638, -0.740703, 0, 1.0};
Point(104) = {-0.080712, -0.741808, 0, 1.0};
Point(105) = {-0.075779, -0.742834, 0, 1.0};
Point(106) = {-0.070841, -0.743799, 0, 1.0};
Point(107) = {-0.065894, -0.744645, 0, 1.0};
Point(108) = {-0.060941, -0.745431, 0, 1.0};
Point(109) = {-0.055982, -0.746137, 0, 1.0};
Point(110) = {-0.051018, -0.746784, 0, 1.0};
Point(111) = {-0.046050, -0.747371, 0, 1.0};
Point(112) = {-0.041076, -0.747898, 0, 1.0};
Point(113) = {-0.036096, -0.748345, 0, 1.0};
Point(114) = {-0.031112, -0.748752, 0, 1.0};
Point(115) = {-0.026124, -0.749100, 0, 1.0};
Point(116) = {-0.021133, -0.749407, 0, 1.0};
Point(117) = {-0.016136, -0.749655, 0, 1.0};
Point(118) = {-0.011133, -0.749823, 0, 1.0};
Point(119) = {-0.006126, -0.749932, 0, 1.0};
Point(120) = {-0.001114, -0.750000, 0, 1.0};
Point(121) = {0.003903, -0.749989, 0, 1.0};
Point(122) = {0.008927, -0.749898, 0, 1.0};
Point(123) = {0.013960, -0.749707, 0, 1.0};
Point(124) = {0.019000, -0.749417, 0, 1.0};
Point(125) = {0.024048, -0.749027, 0, 1.0};
Point(126) = {0.029112, -0.748457, 0, 1.0};
Point(127) = {0.034193, -0.747669, 0, 1.0};
Point(128) = {0.039303, -0.746521, 0, 1.0};
Point(129) = {0.041878, -0.745708, 0, 1.0};
Point(130) = {0.044476, -0.744616, 0, 1.0};
Point(131) = {0.047114, -0.743026, 0, 1.0};
Point(132) = {0.048744, -0.741493, 0, 1.0};
Point(133) = {0.049432, -0.740446, 0, 1.0};
Point(134) = {0.050000, -0.738406, 0, 1.0};
Point(135) = {0.049683, -0.737376, 0, 1.0};
Point(136) = {0.049156, -0.736450, 0, 1.0};
Point(137) = {0.047745, -0.735311, 0, 1.0};
Point(138) = {0.045328, -0.734191, 0, 1.0};
Point(139) = {0.042888, -0.733349, 0, 1.0};
Point(140) = {0.040441, -0.732607, 0, 1.0};
Point(141) = {0.035529, -0.731323, 0, 1.0};
Point(142) = {0.030601, -0.730238, 0, 1.0};
Point(143) = {0.025663, -0.729273, 0, 1.0};
Point(144) = {0.020717, -0.728407, 0, 1.0};
Point(145) = {0.015765, -0.727621, 0, 1.0};
Point(146) = {0.010807, -0.726894, 0, 1.0};
Point(147) = {0.005845, -0.726228, 0, 1.0};
Point(148) = {0.000878, -0.725621, 0, 1.0};
Point(149) = {-0.004095, -0.725094, 0, 1.0};
Point(150) = {-0.009071, -0.724587, 0, 1.0};
Point(151) = {-0.014049, -0.724120, 0, 1.0};
Point(152) = {-0.019031, -0.723693, 0, 1.0};
Point(153) = {-0.024018, -0.723326, 0, 1.0};
Point(154) = {-0.029006, -0.722978, 0, 1.0};
Point(155) = {-0.033997, -0.722670, 0, 1.0};
Point(156) = {-0.038992, -0.722403, 0, 1.0};
Point(157) = {-0.043990, -0.722175, 0, 1.0};
Point(158) = {-0.048993, -0.722007, 0, 1.0};
Point(159) = {-0.054001, -0.721898, 0, 1.0};
Point(160) = {-0.059014, -0.721850, 0, 1.0};
Point(161) = {-0.064033, -0.721881, 0, 1.0};
Point(162) = {-0.069059, -0.721992, 0, 1.0};
Point(163) = {-0.074088, -0.722143, 0, 1.0};
Point(164) = {-0.079121, -0.722353, 0, 1.0};
Point(165) = {-0.084157, -0.722584, 0, 1.0};
Point(166) = {-0.089193, -0.722814, 0, 1.0};
Point(167) = {-0.094230, -0.723065, 0, 1.0};
Point(168) = {-0.099267, -0.723315, 0, 1.0};
Point(169) = {-0.104301, -0.723526, 0, 1.0};
Point(170) = {-0.109333, -0.723717, 0, 1.0};
Point(171) = {-0.114359, -0.723828, 0, 1.0};
Point(172) = {-0.119378, -0.723859, 0, 1.0};
Point(173) = {-0.124389, -0.723790, 0, 1.0};
Point(174) = {-0.129389, -0.723582, 0, 1.0};
Point(175) = {-0.134375, -0.723215, 0, 1.0};
Point(176) = {-0.139347, -0.722668, 0, 1.0};
Point(177) = {-0.144296, -0.721842, 0, 1.0};
Point(178) = {-0.149220, -0.720697, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
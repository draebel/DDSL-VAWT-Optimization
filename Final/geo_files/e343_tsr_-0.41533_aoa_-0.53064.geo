SetFactory("OpenCASCADE");

Point(1) = {0.074986, 0.734749, 0, 1.0};
Point(2) = {0.072072, 0.735303, 0, 1.0};
Point(3) = {0.067848, 0.736004, 0, 1.0};
Point(4) = {0.062800, 0.736801, 0, 1.0};
Point(5) = {0.057020, 0.737721, 0, 1.0};
Point(6) = {0.050607, 0.738766, 0, 1.0};
Point(7) = {0.043664, 0.739929, 0, 1.0};
Point(8) = {0.036304, 0.741187, 0, 1.0};
Point(9) = {0.028644, 0.742513, 0, 1.0};
Point(10) = {0.020792, 0.743866, 0, 1.0};
Point(11) = {0.012860, 0.745201, 0, 1.0};
Point(12) = {0.004950, 0.746470, 0, 1.0};
Point(13) = {-0.002845, 0.747619, 0, 1.0};
Point(14) = {-0.010440, 0.748597, 0, 1.0};
Point(15) = {-0.017760, 0.749354, 0, 1.0};
Point(16) = {-0.024737, 0.749840, 0, 1.0};
Point(17) = {-0.031316, 0.750000, 0, 1.0};
Point(18) = {-0.037486, 0.749774, 0, 1.0};
Point(19) = {-0.043280, 0.749164, 0, 1.0};
Point(20) = {-0.048691, 0.748221, 0, 1.0};
Point(21) = {-0.053690, 0.746992, 0, 1.0};
Point(22) = {-0.058243, 0.745532, 0, 1.0};
Point(23) = {-0.062310, 0.743887, 0, 1.0};
Point(24) = {-0.065858, 0.742102, 0, 1.0};
Point(25) = {-0.068854, 0.740229, 0, 1.0};
Point(26) = {-0.071274, 0.738316, 0, 1.0};
Point(27) = {-0.073102, 0.736422, 0, 1.0};
Point(28) = {-0.074325, 0.734616, 0, 1.0};
Point(29) = {-0.074933, 0.732988, 0, 1.0};
Point(30) = {-0.074988, 0.732610, 0, 1.0};
Point(31) = {-0.074997, 0.732204, 0, 1.0};
Point(32) = {-0.074973, 0.731953, 0, 1.0};
Point(33) = {-0.074921, 0.731722, 0, 1.0};
Point(34) = {-0.074884, 0.731615, 0, 1.0};
Point(35) = {-0.074840, 0.731514, 0, 1.0};
Point(36) = {-0.074785, 0.731425, 0, 1.0};
Point(37) = {-0.074714, 0.731343, 0, 1.0};
Point(38) = {-0.074628, 0.731263, 0, 1.0};
Point(39) = {-0.074529, 0.731186, 0, 1.0};
Point(40) = {-0.074295, 0.731038, 0, 1.0};
Point(41) = {-0.074015, 0.730896, 0, 1.0};
Point(42) = {-0.073521, 0.730694, 0, 1.0};
Point(43) = {-0.071923, 0.730234, 0, 1.0};
Point(44) = {-0.068949, 0.729710, 0, 1.0};
Point(45) = {-0.065071, 0.729286, 0, 1.0};
Point(46) = {-0.060340, 0.728931, 0, 1.0};
Point(47) = {-0.054826, 0.728600, 0, 1.0};
Point(48) = {-0.048637, 0.728276, 0, 1.0};
Point(49) = {-0.041874, 0.727963, 0, 1.0};
Point(50) = {-0.034640, 0.727674, 0, 1.0};
Point(51) = {-0.027025, 0.727431, 0, 1.0};
Point(52) = {-0.019118, 0.727245, 0, 1.0};
Point(53) = {-0.011006, 0.727126, 0, 1.0};
Point(54) = {-0.002779, 0.727076, 0, 1.0};
Point(55) = {0.005466, 0.727105, 0, 1.0};
Point(56) = {0.013638, 0.727211, 0, 1.0};
Point(57) = {0.021645, 0.727402, 0, 1.0};
Point(58) = {0.029395, 0.727680, 0, 1.0};
Point(59) = {0.036800, 0.728052, 0, 1.0};
Point(60) = {0.043774, 0.728526, 0, 1.0};
Point(61) = {0.050230, 0.729142, 0, 1.0};
Point(62) = {0.056173, 0.729966, 0, 1.0};
Point(63) = {0.061687, 0.730948, 0, 1.0};
Point(64) = {0.066760, 0.731908, 0, 1.0};
Point(65) = {0.072815, 0.732720, 0, 1.0};
Point(66) = {0.075000, 0.733244, 0, 1.0};
Point(67) = {-0.074986, -0.734749, 0, 1.0};
Point(68) = {-0.072072, -0.735303, 0, 1.0};
Point(69) = {-0.067848, -0.736004, 0, 1.0};
Point(70) = {-0.062800, -0.736801, 0, 1.0};
Point(71) = {-0.057020, -0.737721, 0, 1.0};
Point(72) = {-0.050607, -0.738766, 0, 1.0};
Point(73) = {-0.043664, -0.739929, 0, 1.0};
Point(74) = {-0.036304, -0.741187, 0, 1.0};
Point(75) = {-0.028644, -0.742513, 0, 1.0};
Point(76) = {-0.020792, -0.743866, 0, 1.0};
Point(77) = {-0.012860, -0.745201, 0, 1.0};
Point(78) = {-0.004950, -0.746470, 0, 1.0};
Point(79) = {0.002845, -0.747619, 0, 1.0};
Point(80) = {0.010440, -0.748597, 0, 1.0};
Point(81) = {0.017760, -0.749354, 0, 1.0};
Point(82) = {0.024737, -0.749840, 0, 1.0};
Point(83) = {0.031316, -0.750000, 0, 1.0};
Point(84) = {0.037486, -0.749774, 0, 1.0};
Point(85) = {0.043280, -0.749164, 0, 1.0};
Point(86) = {0.048691, -0.748221, 0, 1.0};
Point(87) = {0.053690, -0.746992, 0, 1.0};
Point(88) = {0.058243, -0.745532, 0, 1.0};
Point(89) = {0.062310, -0.743887, 0, 1.0};
Point(90) = {0.065858, -0.742102, 0, 1.0};
Point(91) = {0.068854, -0.740229, 0, 1.0};
Point(92) = {0.071274, -0.738316, 0, 1.0};
Point(93) = {0.073102, -0.736422, 0, 1.0};
Point(94) = {0.074325, -0.734616, 0, 1.0};
Point(95) = {0.074933, -0.732988, 0, 1.0};
Point(96) = {0.074988, -0.732610, 0, 1.0};
Point(97) = {0.074997, -0.732204, 0, 1.0};
Point(98) = {0.074973, -0.731953, 0, 1.0};
Point(99) = {0.074921, -0.731722, 0, 1.0};
Point(100) = {0.074884, -0.731615, 0, 1.0};
Point(101) = {0.074840, -0.731514, 0, 1.0};
Point(102) = {0.074785, -0.731425, 0, 1.0};
Point(103) = {0.074714, -0.731343, 0, 1.0};
Point(104) = {0.074628, -0.731263, 0, 1.0};
Point(105) = {0.074529, -0.731186, 0, 1.0};
Point(106) = {0.074295, -0.731038, 0, 1.0};
Point(107) = {0.074015, -0.730896, 0, 1.0};
Point(108) = {0.073521, -0.730694, 0, 1.0};
Point(109) = {0.071923, -0.730234, 0, 1.0};
Point(110) = {0.068949, -0.729710, 0, 1.0};
Point(111) = {0.065071, -0.729286, 0, 1.0};
Point(112) = {0.060340, -0.728931, 0, 1.0};
Point(113) = {0.054826, -0.728600, 0, 1.0};
Point(114) = {0.048637, -0.728276, 0, 1.0};
Point(115) = {0.041874, -0.727963, 0, 1.0};
Point(116) = {0.034640, -0.727674, 0, 1.0};
Point(117) = {0.027025, -0.727431, 0, 1.0};
Point(118) = {0.019118, -0.727245, 0, 1.0};
Point(119) = {0.011006, -0.727126, 0, 1.0};
Point(120) = {0.002779, -0.727076, 0, 1.0};
Point(121) = {-0.005466, -0.727105, 0, 1.0};
Point(122) = {-0.013638, -0.727211, 0, 1.0};
Point(123) = {-0.021645, -0.727402, 0, 1.0};
Point(124) = {-0.029395, -0.727680, 0, 1.0};
Point(125) = {-0.036800, -0.728052, 0, 1.0};
Point(126) = {-0.043774, -0.728526, 0, 1.0};
Point(127) = {-0.050230, -0.729142, 0, 1.0};
Point(128) = {-0.056173, -0.729966, 0, 1.0};
Point(129) = {-0.061687, -0.730948, 0, 1.0};
Point(130) = {-0.066760, -0.731908, 0, 1.0};
Point(131) = {-0.072815, -0.732720, 0, 1.0};
Point(132) = {-0.075000, -0.733244, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112495, 0.740601, 0, 1.0};
Point(2) = {0.112000, 0.740662, 0, 1.0};
Point(3) = {0.110550, 0.740866, 0, 1.0};
Point(4) = {0.108225, 0.741243, 0, 1.0};
Point(5) = {0.105117, 0.741781, 0, 1.0};
Point(6) = {0.101304, 0.742438, 0, 1.0};
Point(7) = {0.096839, 0.743166, 0, 1.0};
Point(8) = {0.091758, 0.743927, 0, 1.0};
Point(9) = {0.086105, 0.744718, 0, 1.0};
Point(10) = {0.079956, 0.745533, 0, 1.0};
Point(11) = {0.073392, 0.746352, 0, 1.0};
Point(12) = {0.066497, 0.747146, 0, 1.0};
Point(13) = {0.059348, 0.747881, 0, 1.0};
Point(14) = {0.052014, 0.748523, 0, 1.0};
Point(15) = {0.044548, 0.749051, 0, 1.0};
Point(16) = {0.037013, 0.749457, 0, 1.0};
Point(17) = {0.029474, 0.749747, 0, 1.0};
Point(18) = {0.022009, 0.749927, 0, 1.0};
Point(19) = {0.014704, 0.750000, 0, 1.0};
Point(20) = {0.007636, 0.749969, 0, 1.0};
Point(21) = {0.000887, 0.749830, 0, 1.0};
Point(22) = {-0.005471, 0.749585, 0, 1.0};
Point(23) = {-0.011363, 0.749229, 0, 1.0};
Point(24) = {-0.016719, 0.748750, 0, 1.0};
Point(25) = {-0.021503, 0.748122, 0, 1.0};
Point(26) = {-0.025716, 0.747352, 0, 1.0};
Point(27) = {-0.029339, 0.746484, 0, 1.0};
Point(28) = {-0.032330, 0.745560, 0, 1.0};
Point(29) = {-0.034654, 0.744604, 0, 1.0};
Point(30) = {-0.036295, 0.743641, 0, 1.0};
Point(31) = {-0.037247, 0.742708, 0, 1.0};
Point(32) = {-0.037498, 0.741924, 0, 1.0};
Point(33) = {-0.036918, 0.741265, 0, 1.0};
Point(34) = {-0.035468, 0.740628, 0, 1.0};
Point(35) = {-0.033251, 0.740052, 0, 1.0};
Point(36) = {-0.030269, 0.739574, 0, 1.0};
Point(37) = {-0.026518, 0.739185, 0, 1.0};
Point(38) = {-0.022037, 0.738859, 0, 1.0};
Point(39) = {-0.016882, 0.738592, 0, 1.0};
Point(40) = {-0.011114, 0.738378, 0, 1.0};
Point(41) = {-0.004795, 0.738217, 0, 1.0};
Point(42) = {0.002000, 0.738102, 0, 1.0};
Point(43) = {0.009194, 0.738036, 0, 1.0};
Point(44) = {0.016707, 0.738011, 0, 1.0};
Point(45) = {0.024453, 0.738027, 0, 1.0};
Point(46) = {0.032344, 0.738081, 0, 1.0};
Point(47) = {0.040287, 0.738173, 0, 1.0};
Point(48) = {0.048193, 0.738300, 0, 1.0};
Point(49) = {0.055970, 0.738466, 0, 1.0};
Point(50) = {0.063532, 0.738676, 0, 1.0};
Point(51) = {0.070809, 0.738941, 0, 1.0};
Point(52) = {0.077740, 0.739248, 0, 1.0};
Point(53) = {0.084260, 0.739574, 0, 1.0};
Point(54) = {0.090299, 0.739894, 0, 1.0};
Point(55) = {0.095779, 0.740182, 0, 1.0};
Point(56) = {0.100621, 0.740410, 0, 1.0};
Point(57) = {0.104744, 0.740565, 0, 1.0};
Point(58) = {0.108063, 0.740640, 0, 1.0};
Point(59) = {0.110501, 0.740649, 0, 1.0};
Point(60) = {0.111994, 0.740620, 0, 1.0};
Point(61) = {0.112496, 0.740601, 0, 1.0};
Point(62) = {-0.112495, -0.740601, 0, 1.0};
Point(63) = {-0.112000, -0.740662, 0, 1.0};
Point(64) = {-0.110550, -0.740866, 0, 1.0};
Point(65) = {-0.108225, -0.741243, 0, 1.0};
Point(66) = {-0.105117, -0.741781, 0, 1.0};
Point(67) = {-0.101304, -0.742438, 0, 1.0};
Point(68) = {-0.096839, -0.743166, 0, 1.0};
Point(69) = {-0.091758, -0.743927, 0, 1.0};
Point(70) = {-0.086105, -0.744718, 0, 1.0};
Point(71) = {-0.079956, -0.745533, 0, 1.0};
Point(72) = {-0.073392, -0.746352, 0, 1.0};
Point(73) = {-0.066497, -0.747146, 0, 1.0};
Point(74) = {-0.059348, -0.747881, 0, 1.0};
Point(75) = {-0.052014, -0.748523, 0, 1.0};
Point(76) = {-0.044548, -0.749051, 0, 1.0};
Point(77) = {-0.037013, -0.749457, 0, 1.0};
Point(78) = {-0.029474, -0.749747, 0, 1.0};
Point(79) = {-0.022009, -0.749927, 0, 1.0};
Point(80) = {-0.014704, -0.750000, 0, 1.0};
Point(81) = {-0.007636, -0.749969, 0, 1.0};
Point(82) = {-0.000887, -0.749830, 0, 1.0};
Point(83) = {0.005471, -0.749585, 0, 1.0};
Point(84) = {0.011363, -0.749229, 0, 1.0};
Point(85) = {0.016719, -0.748750, 0, 1.0};
Point(86) = {0.021503, -0.748122, 0, 1.0};
Point(87) = {0.025716, -0.747352, 0, 1.0};
Point(88) = {0.029339, -0.746484, 0, 1.0};
Point(89) = {0.032330, -0.745560, 0, 1.0};
Point(90) = {0.034654, -0.744604, 0, 1.0};
Point(91) = {0.036295, -0.743641, 0, 1.0};
Point(92) = {0.037247, -0.742708, 0, 1.0};
Point(93) = {0.037498, -0.741924, 0, 1.0};
Point(94) = {0.036918, -0.741265, 0, 1.0};
Point(95) = {0.035468, -0.740628, 0, 1.0};
Point(96) = {0.033251, -0.740052, 0, 1.0};
Point(97) = {0.030269, -0.739574, 0, 1.0};
Point(98) = {0.026518, -0.739185, 0, 1.0};
Point(99) = {0.022037, -0.738859, 0, 1.0};
Point(100) = {0.016882, -0.738592, 0, 1.0};
Point(101) = {0.011114, -0.738378, 0, 1.0};
Point(102) = {0.004795, -0.738217, 0, 1.0};
Point(103) = {-0.002000, -0.738102, 0, 1.0};
Point(104) = {-0.009194, -0.738036, 0, 1.0};
Point(105) = {-0.016707, -0.738011, 0, 1.0};
Point(106) = {-0.024453, -0.738027, 0, 1.0};
Point(107) = {-0.032344, -0.738081, 0, 1.0};
Point(108) = {-0.040287, -0.738173, 0, 1.0};
Point(109) = {-0.048193, -0.738300, 0, 1.0};
Point(110) = {-0.055970, -0.738466, 0, 1.0};
Point(111) = {-0.063532, -0.738676, 0, 1.0};
Point(112) = {-0.070809, -0.738941, 0, 1.0};
Point(113) = {-0.077740, -0.739248, 0, 1.0};
Point(114) = {-0.084260, -0.739574, 0, 1.0};
Point(115) = {-0.090299, -0.739894, 0, 1.0};
Point(116) = {-0.095779, -0.740182, 0, 1.0};
Point(117) = {-0.100621, -0.740410, 0, 1.0};
Point(118) = {-0.104744, -0.740565, 0, 1.0};
Point(119) = {-0.108063, -0.740640, 0, 1.0};
Point(120) = {-0.110501, -0.740649, 0, 1.0};
Point(121) = {-0.111994, -0.740620, 0, 1.0};
Point(122) = {-0.112496, -0.740601, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074995, 0.743735, 0, 1.0};
Point(2) = {0.074666, 0.743775, 0, 1.0};
Point(3) = {0.073699, 0.743912, 0, 1.0};
Point(4) = {0.072149, 0.744163, 0, 1.0};
Point(5) = {0.070078, 0.744521, 0, 1.0};
Point(6) = {0.067536, 0.744959, 0, 1.0};
Point(7) = {0.064559, 0.745445, 0, 1.0};
Point(8) = {0.061172, 0.745952, 0, 1.0};
Point(9) = {0.057404, 0.746479, 0, 1.0};
Point(10) = {0.053305, 0.747022, 0, 1.0};
Point(11) = {0.048930, 0.747568, 0, 1.0};
Point(12) = {0.044334, 0.748097, 0, 1.0};
Point(13) = {0.039568, 0.748587, 0, 1.0};
Point(14) = {0.034679, 0.749015, 0, 1.0};
Point(15) = {0.029702, 0.749367, 0, 1.0};
Point(16) = {0.024680, 0.749638, 0, 1.0};
Point(17) = {0.019654, 0.749831, 0, 1.0};
Point(18) = {0.014678, 0.749951, 0, 1.0};
Point(19) = {0.009809, 0.750000, 0, 1.0};
Point(20) = {0.005097, 0.749979, 0, 1.0};
Point(21) = {0.000598, 0.749887, 0, 1.0};
Point(22) = {-0.003640, 0.749723, 0, 1.0};
Point(23) = {-0.007567, 0.749486, 0, 1.0};
Point(24) = {-0.011138, 0.749167, 0, 1.0};
Point(25) = {-0.014327, 0.748748, 0, 1.0};
Point(26) = {-0.017135, 0.748235, 0, 1.0};
Point(27) = {-0.019550, 0.747657, 0, 1.0};
Point(28) = {-0.021544, 0.747040, 0, 1.0};
Point(29) = {-0.023093, 0.746403, 0, 1.0};
Point(30) = {-0.024187, 0.745761, 0, 1.0};
Point(31) = {-0.024822, 0.745139, 0, 1.0};
Point(32) = {-0.024989, 0.744617, 0, 1.0};
Point(33) = {-0.024602, 0.744177, 0, 1.0};
Point(34) = {-0.023635, 0.743752, 0, 1.0};
Point(35) = {-0.022158, 0.743369, 0, 1.0};
Point(36) = {-0.020170, 0.743050, 0, 1.0};
Point(37) = {-0.017670, 0.742791, 0, 1.0};
Point(38) = {-0.014683, 0.742573, 0, 1.0};
Point(39) = {-0.011246, 0.742396, 0, 1.0};
Point(40) = {-0.007401, 0.742253, 0, 1.0};
Point(41) = {-0.003189, 0.742145, 0, 1.0};
Point(42) = {0.001340, 0.742069, 0, 1.0};
Point(43) = {0.006136, 0.742025, 0, 1.0};
Point(44) = {0.011144, 0.742008, 0, 1.0};
Point(45) = {0.016307, 0.742019, 0, 1.0};
Point(46) = {0.021567, 0.742055, 0, 1.0};
Point(47) = {0.026862, 0.742116, 0, 1.0};
Point(48) = {0.032132, 0.742201, 0, 1.0};
Point(49) = {0.037316, 0.742311, 0, 1.0};
Point(50) = {0.042357, 0.742452, 0, 1.0};
Point(51) = {0.047208, 0.742628, 0, 1.0};
Point(52) = {0.051828, 0.742833, 0, 1.0};
Point(53) = {0.056175, 0.743050, 0, 1.0};
Point(54) = {0.060200, 0.743263, 0, 1.0};
Point(55) = {0.063853, 0.743455, 0, 1.0};
Point(56) = {0.067081, 0.743608, 0, 1.0};
Point(57) = {0.069829, 0.743711, 0, 1.0};
Point(58) = {0.072041, 0.743761, 0, 1.0};
Point(59) = {0.073666, 0.743767, 0, 1.0};
Point(60) = {0.074661, 0.743747, 0, 1.0};
Point(61) = {0.074996, 0.743735, 0, 1.0};
Point(62) = {-0.074995, -0.743735, 0, 1.0};
Point(63) = {-0.074666, -0.743775, 0, 1.0};
Point(64) = {-0.073699, -0.743912, 0, 1.0};
Point(65) = {-0.072149, -0.744163, 0, 1.0};
Point(66) = {-0.070078, -0.744521, 0, 1.0};
Point(67) = {-0.067536, -0.744959, 0, 1.0};
Point(68) = {-0.064559, -0.745445, 0, 1.0};
Point(69) = {-0.061172, -0.745952, 0, 1.0};
Point(70) = {-0.057404, -0.746479, 0, 1.0};
Point(71) = {-0.053305, -0.747022, 0, 1.0};
Point(72) = {-0.048930, -0.747568, 0, 1.0};
Point(73) = {-0.044334, -0.748097, 0, 1.0};
Point(74) = {-0.039568, -0.748587, 0, 1.0};
Point(75) = {-0.034679, -0.749015, 0, 1.0};
Point(76) = {-0.029702, -0.749367, 0, 1.0};
Point(77) = {-0.024680, -0.749638, 0, 1.0};
Point(78) = {-0.019654, -0.749831, 0, 1.0};
Point(79) = {-0.014678, -0.749951, 0, 1.0};
Point(80) = {-0.009809, -0.750000, 0, 1.0};
Point(81) = {-0.005097, -0.749979, 0, 1.0};
Point(82) = {-0.000598, -0.749887, 0, 1.0};
Point(83) = {0.003640, -0.749723, 0, 1.0};
Point(84) = {0.007567, -0.749486, 0, 1.0};
Point(85) = {0.011138, -0.749167, 0, 1.0};
Point(86) = {0.014327, -0.748748, 0, 1.0};
Point(87) = {0.017135, -0.748235, 0, 1.0};
Point(88) = {0.019550, -0.747657, 0, 1.0};
Point(89) = {0.021544, -0.747040, 0, 1.0};
Point(90) = {0.023093, -0.746403, 0, 1.0};
Point(91) = {0.024187, -0.745761, 0, 1.0};
Point(92) = {0.024822, -0.745139, 0, 1.0};
Point(93) = {0.024989, -0.744617, 0, 1.0};
Point(94) = {0.024602, -0.744177, 0, 1.0};
Point(95) = {0.023635, -0.743752, 0, 1.0};
Point(96) = {0.022158, -0.743369, 0, 1.0};
Point(97) = {0.020170, -0.743050, 0, 1.0};
Point(98) = {0.017670, -0.742791, 0, 1.0};
Point(99) = {0.014683, -0.742573, 0, 1.0};
Point(100) = {0.011246, -0.742396, 0, 1.0};
Point(101) = {0.007401, -0.742253, 0, 1.0};
Point(102) = {0.003189, -0.742145, 0, 1.0};
Point(103) = {-0.001340, -0.742069, 0, 1.0};
Point(104) = {-0.006136, -0.742025, 0, 1.0};
Point(105) = {-0.011144, -0.742008, 0, 1.0};
Point(106) = {-0.016307, -0.742019, 0, 1.0};
Point(107) = {-0.021567, -0.742055, 0, 1.0};
Point(108) = {-0.026862, -0.742116, 0, 1.0};
Point(109) = {-0.032132, -0.742201, 0, 1.0};
Point(110) = {-0.037316, -0.742311, 0, 1.0};
Point(111) = {-0.042357, -0.742452, 0, 1.0};
Point(112) = {-0.047208, -0.742628, 0, 1.0};
Point(113) = {-0.051828, -0.742833, 0, 1.0};
Point(114) = {-0.056175, -0.743050, 0, 1.0};
Point(115) = {-0.060200, -0.743263, 0, 1.0};
Point(116) = {-0.063853, -0.743455, 0, 1.0};
Point(117) = {-0.067081, -0.743608, 0, 1.0};
Point(118) = {-0.069829, -0.743711, 0, 1.0};
Point(119) = {-0.072041, -0.743761, 0, 1.0};
Point(120) = {-0.073666, -0.743767, 0, 1.0};
Point(121) = {-0.074661, -0.743747, 0, 1.0};
Point(122) = {-0.074996, -0.743735, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
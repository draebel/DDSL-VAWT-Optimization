SetFactory("OpenCASCADE");

Point(1) = {0.149990, 0.737470, 0, 1.0};
Point(2) = {0.149331, 0.737550, 0, 1.0};
Point(3) = {0.147398, 0.737823, 0, 1.0};
Point(4) = {0.144298, 0.738326, 0, 1.0};
Point(5) = {0.140155, 0.739042, 0, 1.0};
Point(6) = {0.135072, 0.739918, 0, 1.0};
Point(7) = {0.129119, 0.740889, 0, 1.0};
Point(8) = {0.122345, 0.741904, 0, 1.0};
Point(9) = {0.114809, 0.742958, 0, 1.0};
Point(10) = {0.106611, 0.744044, 0, 1.0};
Point(11) = {0.097859, 0.745137, 0, 1.0};
Point(12) = {0.088667, 0.746195, 0, 1.0};
Point(13) = {0.079136, 0.747175, 0, 1.0};
Point(14) = {0.069358, 0.748031, 0, 1.0};
Point(15) = {0.059405, 0.748735, 0, 1.0};
Point(16) = {0.049360, 0.749276, 0, 1.0};
Point(17) = {0.039309, 0.749662, 0, 1.0};
Point(18) = {0.029357, 0.749902, 0, 1.0};
Point(19) = {0.019617, 0.750000, 0, 1.0};
Point(20) = {0.010194, 0.749959, 0, 1.0};
Point(21) = {0.001196, 0.749773, 0, 1.0};
Point(22) = {-0.007280, 0.749446, 0, 1.0};
Point(23) = {-0.015135, 0.748972, 0, 1.0};
Point(24) = {-0.022275, 0.748334, 0, 1.0};
Point(25) = {-0.028654, 0.747496, 0, 1.0};
Point(26) = {-0.034270, 0.746470, 0, 1.0};
Point(27) = {-0.039100, 0.745313, 0, 1.0};
Point(28) = {-0.043088, 0.744080, 0, 1.0};
Point(29) = {-0.046187, 0.742807, 0, 1.0};
Point(30) = {-0.048373, 0.741522, 0, 1.0};
Point(31) = {-0.049644, 0.740278, 0, 1.0};
Point(32) = {-0.049978, 0.739234, 0, 1.0};
Point(33) = {-0.049205, 0.738354, 0, 1.0};
Point(34) = {-0.047271, 0.737505, 0, 1.0};
Point(35) = {-0.044316, 0.736738, 0, 1.0};
Point(36) = {-0.040340, 0.736101, 0, 1.0};
Point(37) = {-0.035339, 0.735582, 0, 1.0};
Point(38) = {-0.029365, 0.735147, 0, 1.0};
Point(39) = {-0.022492, 0.734791, 0, 1.0};
Point(40) = {-0.014803, 0.734506, 0, 1.0};
Point(41) = {-0.006378, 0.734291, 0, 1.0};
Point(42) = {0.002680, 0.734138, 0, 1.0};
Point(43) = {0.012272, 0.734049, 0, 1.0};
Point(44) = {0.022288, 0.734017, 0, 1.0};
Point(45) = {0.032615, 0.734037, 0, 1.0};
Point(46) = {0.043134, 0.734110, 0, 1.0};
Point(47) = {0.053724, 0.734232, 0, 1.0};
Point(48) = {0.064264, 0.734402, 0, 1.0};
Point(49) = {0.074633, 0.734622, 0, 1.0};
Point(50) = {0.084714, 0.734903, 0, 1.0};
Point(51) = {0.094416, 0.735256, 0, 1.0};
Point(52) = {0.103656, 0.735665, 0, 1.0};
Point(53) = {0.112349, 0.736100, 0, 1.0};
Point(54) = {0.120400, 0.736527, 0, 1.0};
Point(55) = {0.127706, 0.736911, 0, 1.0};
Point(56) = {0.134161, 0.737215, 0, 1.0};
Point(57) = {0.139657, 0.737421, 0, 1.0};
Point(58) = {0.144083, 0.737522, 0, 1.0};
Point(59) = {0.147333, 0.737534, 0, 1.0};
Point(60) = {0.149323, 0.737494, 0, 1.0};
Point(61) = {0.149992, 0.737470, 0, 1.0};
Point(62) = {-0.149990, -0.737470, 0, 1.0};
Point(63) = {-0.149331, -0.737550, 0, 1.0};
Point(64) = {-0.147398, -0.737823, 0, 1.0};
Point(65) = {-0.144298, -0.738326, 0, 1.0};
Point(66) = {-0.140155, -0.739042, 0, 1.0};
Point(67) = {-0.135072, -0.739918, 0, 1.0};
Point(68) = {-0.129119, -0.740889, 0, 1.0};
Point(69) = {-0.122345, -0.741904, 0, 1.0};
Point(70) = {-0.114809, -0.742958, 0, 1.0};
Point(71) = {-0.106611, -0.744044, 0, 1.0};
Point(72) = {-0.097859, -0.745137, 0, 1.0};
Point(73) = {-0.088667, -0.746195, 0, 1.0};
Point(74) = {-0.079136, -0.747175, 0, 1.0};
Point(75) = {-0.069358, -0.748031, 0, 1.0};
Point(76) = {-0.059405, -0.748735, 0, 1.0};
Point(77) = {-0.049360, -0.749276, 0, 1.0};
Point(78) = {-0.039309, -0.749662, 0, 1.0};
Point(79) = {-0.029357, -0.749902, 0, 1.0};
Point(80) = {-0.019617, -0.750000, 0, 1.0};
Point(81) = {-0.010194, -0.749959, 0, 1.0};
Point(82) = {-0.001196, -0.749773, 0, 1.0};
Point(83) = {0.007280, -0.749446, 0, 1.0};
Point(84) = {0.015135, -0.748972, 0, 1.0};
Point(85) = {0.022275, -0.748334, 0, 1.0};
Point(86) = {0.028654, -0.747496, 0, 1.0};
Point(87) = {0.034270, -0.746470, 0, 1.0};
Point(88) = {0.039100, -0.745313, 0, 1.0};
Point(89) = {0.043088, -0.744080, 0, 1.0};
Point(90) = {0.046187, -0.742807, 0, 1.0};
Point(91) = {0.048373, -0.741522, 0, 1.0};
Point(92) = {0.049644, -0.740278, 0, 1.0};
Point(93) = {0.049978, -0.739234, 0, 1.0};
Point(94) = {0.049205, -0.738354, 0, 1.0};
Point(95) = {0.047271, -0.737505, 0, 1.0};
Point(96) = {0.044316, -0.736738, 0, 1.0};
Point(97) = {0.040340, -0.736101, 0, 1.0};
Point(98) = {0.035339, -0.735582, 0, 1.0};
Point(99) = {0.029365, -0.735147, 0, 1.0};
Point(100) = {0.022492, -0.734791, 0, 1.0};
Point(101) = {0.014803, -0.734506, 0, 1.0};
Point(102) = {0.006378, -0.734291, 0, 1.0};
Point(103) = {-0.002680, -0.734138, 0, 1.0};
Point(104) = {-0.012272, -0.734049, 0, 1.0};
Point(105) = {-0.022288, -0.734017, 0, 1.0};
Point(106) = {-0.032615, -0.734037, 0, 1.0};
Point(107) = {-0.043134, -0.734110, 0, 1.0};
Point(108) = {-0.053724, -0.734232, 0, 1.0};
Point(109) = {-0.064264, -0.734402, 0, 1.0};
Point(110) = {-0.074633, -0.734622, 0, 1.0};
Point(111) = {-0.084714, -0.734903, 0, 1.0};
Point(112) = {-0.094416, -0.735256, 0, 1.0};
Point(113) = {-0.103656, -0.735665, 0, 1.0};
Point(114) = {-0.112349, -0.736100, 0, 1.0};
Point(115) = {-0.120400, -0.736527, 0, 1.0};
Point(116) = {-0.127706, -0.736911, 0, 1.0};
Point(117) = {-0.134161, -0.737215, 0, 1.0};
Point(118) = {-0.139657, -0.737421, 0, 1.0};
Point(119) = {-0.144083, -0.737522, 0, 1.0};
Point(120) = {-0.147333, -0.737534, 0, 1.0};
Point(121) = {-0.149323, -0.737494, 0, 1.0};
Point(122) = {-0.149992, -0.737470, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
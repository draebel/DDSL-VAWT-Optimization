SetFactory("OpenCASCADE");

Point(1) = {0.074949, 0.735748, 0, 1.0};
Point(2) = {0.073632, 0.736015, 0, 1.0};
Point(3) = {0.071202, 0.736543, 0, 1.0};
Point(4) = {0.068480, 0.737138, 0, 1.0};
Point(5) = {0.065480, 0.737811, 0, 1.0};
Point(6) = {0.062209, 0.738561, 0, 1.0};
Point(7) = {0.058686, 0.739370, 0, 1.0};
Point(8) = {0.054924, 0.740215, 0, 1.0};
Point(9) = {0.050941, 0.741091, 0, 1.0};
Point(10) = {0.046753, 0.742009, 0, 1.0};
Point(11) = {0.042376, 0.742970, 0, 1.0};
Point(12) = {0.037831, 0.743956, 0, 1.0};
Point(13) = {0.033139, 0.744936, 0, 1.0};
Point(14) = {0.028318, 0.745885, 0, 1.0};
Point(15) = {0.023391, 0.746784, 0, 1.0};
Point(16) = {0.018378, 0.747611, 0, 1.0};
Point(17) = {0.013300, 0.748346, 0, 1.0};
Point(18) = {0.008182, 0.748965, 0, 1.0};
Point(19) = {0.003045, 0.749445, 0, 1.0};
Point(20) = {-0.002089, 0.749775, 0, 1.0};
Point(21) = {-0.007198, 0.749956, 0, 1.0};
Point(22) = {-0.012262, 0.750000, 0, 1.0};
Point(23) = {-0.017256, 0.749906, 0, 1.0};
Point(24) = {-0.022161, 0.749673, 0, 1.0};
Point(25) = {-0.026954, 0.749294, 0, 1.0};
Point(26) = {-0.031617, 0.748777, 0, 1.0};
Point(27) = {-0.036129, 0.748131, 0, 1.0};
Point(28) = {-0.040472, 0.747381, 0, 1.0};
Point(29) = {-0.044624, 0.746538, 0, 1.0};
Point(30) = {-0.048571, 0.745617, 0, 1.0};
Point(31) = {-0.052295, 0.744617, 0, 1.0};
Point(32) = {-0.055782, 0.743547, 0, 1.0};
Point(33) = {-0.059014, 0.742412, 0, 1.0};
Point(34) = {-0.061977, 0.741229, 0, 1.0};
Point(35) = {-0.064662, 0.740010, 0, 1.0};
Point(36) = {-0.067057, 0.738782, 0, 1.0};
Point(37) = {-0.069149, 0.737553, 0, 1.0};
Point(38) = {-0.070933, 0.736320, 0, 1.0};
Point(39) = {-0.072396, 0.735092, 0, 1.0};
Point(40) = {-0.073536, 0.733860, 0, 1.0};
Point(41) = {-0.074349, 0.732693, 0, 1.0};
Point(42) = {-0.074832, 0.731722, 0, 1.0};
Point(43) = {-0.074985, 0.730955, 0, 1.0};
Point(44) = {-0.074805, 0.730330, 0, 1.0};
Point(45) = {-0.074289, 0.729728, 0, 1.0};
Point(46) = {-0.073441, 0.729102, 0, 1.0};
Point(47) = {-0.072264, 0.728509, 0, 1.0};
Point(48) = {-0.070764, 0.727939, 0, 1.0};
Point(49) = {-0.068945, 0.727367, 0, 1.0};
Point(50) = {-0.066817, 0.726804, 0, 1.0};
Point(51) = {-0.064387, 0.726273, 0, 1.0};
Point(52) = {-0.061667, 0.725790, 0, 1.0};
Point(53) = {-0.058671, 0.725340, 0, 1.0};
Point(54) = {-0.055407, 0.724901, 0, 1.0};
Point(55) = {-0.051891, 0.724476, 0, 1.0};
Point(56) = {-0.048139, 0.724100, 0, 1.0};
Point(57) = {-0.044167, 0.723802, 0, 1.0};
Point(58) = {-0.039993, 0.723580, 0, 1.0};
Point(59) = {-0.035633, 0.723420, 0, 1.0};
Point(60) = {-0.031105, 0.723311, 0, 1.0};
Point(61) = {-0.026432, 0.723274, 0, 1.0};
Point(62) = {-0.021631, 0.723331, 0, 1.0};
Point(63) = {-0.016725, 0.723484, 0, 1.0};
Point(64) = {-0.011734, 0.723716, 0, 1.0};
Point(65) = {-0.006677, 0.724031, 0, 1.0};
Point(66) = {-0.001580, 0.724458, 0, 1.0};
Point(67) = {0.003536, 0.725028, 0, 1.0};
Point(68) = {0.008649, 0.725752, 0, 1.0};
Point(69) = {0.013737, 0.726610, 0, 1.0};
Point(70) = {0.018781, 0.727569, 0, 1.0};
Point(71) = {0.023756, 0.728594, 0, 1.0};
Point(72) = {0.028644, 0.729649, 0, 1.0};
Point(73) = {0.033425, 0.730690, 0, 1.0};
Point(74) = {0.038078, 0.731665, 0, 1.0};
Point(75) = {0.042586, 0.732510, 0, 1.0};
Point(76) = {0.046931, 0.733177, 0, 1.0};
Point(77) = {0.051090, 0.733659, 0, 1.0};
Point(78) = {0.055049, 0.733981, 0, 1.0};
Point(79) = {0.058790, 0.734176, 0, 1.0};
Point(80) = {0.062296, 0.734273, 0, 1.0};
Point(81) = {0.065550, 0.734297, 0, 1.0};
Point(82) = {0.068538, 0.734282, 0, 1.0};
Point(83) = {0.071248, 0.734257, 0, 1.0};
Point(84) = {0.073668, 0.734233, 0, 1.0};
Point(85) = {0.074980, 0.734221, 0, 1.0};
Point(86) = {-0.074949, -0.735748, 0, 1.0};
Point(87) = {-0.073632, -0.736015, 0, 1.0};
Point(88) = {-0.071202, -0.736543, 0, 1.0};
Point(89) = {-0.068480, -0.737138, 0, 1.0};
Point(90) = {-0.065480, -0.737811, 0, 1.0};
Point(91) = {-0.062209, -0.738561, 0, 1.0};
Point(92) = {-0.058686, -0.739370, 0, 1.0};
Point(93) = {-0.054924, -0.740215, 0, 1.0};
Point(94) = {-0.050941, -0.741091, 0, 1.0};
Point(95) = {-0.046753, -0.742009, 0, 1.0};
Point(96) = {-0.042376, -0.742970, 0, 1.0};
Point(97) = {-0.037831, -0.743956, 0, 1.0};
Point(98) = {-0.033139, -0.744936, 0, 1.0};
Point(99) = {-0.028318, -0.745885, 0, 1.0};
Point(100) = {-0.023391, -0.746784, 0, 1.0};
Point(101) = {-0.018378, -0.747611, 0, 1.0};
Point(102) = {-0.013300, -0.748346, 0, 1.0};
Point(103) = {-0.008182, -0.748965, 0, 1.0};
Point(104) = {-0.003045, -0.749445, 0, 1.0};
Point(105) = {0.002089, -0.749775, 0, 1.0};
Point(106) = {0.007198, -0.749956, 0, 1.0};
Point(107) = {0.012262, -0.750000, 0, 1.0};
Point(108) = {0.017256, -0.749906, 0, 1.0};
Point(109) = {0.022161, -0.749673, 0, 1.0};
Point(110) = {0.026954, -0.749294, 0, 1.0};
Point(111) = {0.031617, -0.748777, 0, 1.0};
Point(112) = {0.036129, -0.748131, 0, 1.0};
Point(113) = {0.040472, -0.747381, 0, 1.0};
Point(114) = {0.044624, -0.746538, 0, 1.0};
Point(115) = {0.048571, -0.745617, 0, 1.0};
Point(116) = {0.052295, -0.744617, 0, 1.0};
Point(117) = {0.055782, -0.743547, 0, 1.0};
Point(118) = {0.059014, -0.742412, 0, 1.0};
Point(119) = {0.061977, -0.741229, 0, 1.0};
Point(120) = {0.064662, -0.740010, 0, 1.0};
Point(121) = {0.067057, -0.738782, 0, 1.0};
Point(122) = {0.069149, -0.737553, 0, 1.0};
Point(123) = {0.070933, -0.736320, 0, 1.0};
Point(124) = {0.072396, -0.735092, 0, 1.0};
Point(125) = {0.073536, -0.733860, 0, 1.0};
Point(126) = {0.074349, -0.732693, 0, 1.0};
Point(127) = {0.074832, -0.731722, 0, 1.0};
Point(128) = {0.074985, -0.730955, 0, 1.0};
Point(129) = {0.074805, -0.730330, 0, 1.0};
Point(130) = {0.074289, -0.729728, 0, 1.0};
Point(131) = {0.073441, -0.729102, 0, 1.0};
Point(132) = {0.072264, -0.728509, 0, 1.0};
Point(133) = {0.070764, -0.727939, 0, 1.0};
Point(134) = {0.068945, -0.727367, 0, 1.0};
Point(135) = {0.066817, -0.726804, 0, 1.0};
Point(136) = {0.064387, -0.726273, 0, 1.0};
Point(137) = {0.061667, -0.725790, 0, 1.0};
Point(138) = {0.058671, -0.725340, 0, 1.0};
Point(139) = {0.055407, -0.724901, 0, 1.0};
Point(140) = {0.051891, -0.724476, 0, 1.0};
Point(141) = {0.048139, -0.724100, 0, 1.0};
Point(142) = {0.044167, -0.723802, 0, 1.0};
Point(143) = {0.039993, -0.723580, 0, 1.0};
Point(144) = {0.035633, -0.723420, 0, 1.0};
Point(145) = {0.031105, -0.723311, 0, 1.0};
Point(146) = {0.026432, -0.723274, 0, 1.0};
Point(147) = {0.021631, -0.723331, 0, 1.0};
Point(148) = {0.016725, -0.723484, 0, 1.0};
Point(149) = {0.011734, -0.723716, 0, 1.0};
Point(150) = {0.006677, -0.724031, 0, 1.0};
Point(151) = {0.001580, -0.724458, 0, 1.0};
Point(152) = {-0.003536, -0.725028, 0, 1.0};
Point(153) = {-0.008649, -0.725752, 0, 1.0};
Point(154) = {-0.013737, -0.726610, 0, 1.0};
Point(155) = {-0.018781, -0.727569, 0, 1.0};
Point(156) = {-0.023756, -0.728594, 0, 1.0};
Point(157) = {-0.028644, -0.729649, 0, 1.0};
Point(158) = {-0.033425, -0.730690, 0, 1.0};
Point(159) = {-0.038078, -0.731665, 0, 1.0};
Point(160) = {-0.042586, -0.732510, 0, 1.0};
Point(161) = {-0.046931, -0.733177, 0, 1.0};
Point(162) = {-0.051090, -0.733659, 0, 1.0};
Point(163) = {-0.055049, -0.733981, 0, 1.0};
Point(164) = {-0.058790, -0.734176, 0, 1.0};
Point(165) = {-0.062296, -0.734273, 0, 1.0};
Point(166) = {-0.065550, -0.734297, 0, 1.0};
Point(167) = {-0.068538, -0.734282, 0, 1.0};
Point(168) = {-0.071248, -0.734257, 0, 1.0};
Point(169) = {-0.073668, -0.734233, 0, 1.0};
Point(170) = {-0.074980, -0.734221, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:60};
Spline(3) = {60:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:145};
Spline(7) = {145:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074096, 0.745550, 0, 1.0};
Point(2) = {0.071527, 0.745868, 0, 1.0};
Point(3) = {0.068960, 0.746175, 0, 1.0};
Point(4) = {0.066394, 0.746473, 0, 1.0};
Point(5) = {0.063830, 0.746761, 0, 1.0};
Point(6) = {0.061265, 0.747049, 0, 1.0};
Point(7) = {0.058701, 0.747337, 0, 1.0};
Point(8) = {0.056136, 0.747624, 0, 1.0};
Point(9) = {0.053572, 0.747912, 0, 1.0};
Point(10) = {0.051008, 0.748190, 0, 1.0};
Point(11) = {0.048447, 0.748458, 0, 1.0};
Point(12) = {0.045886, 0.748716, 0, 1.0};
Point(13) = {0.043329, 0.748955, 0, 1.0};
Point(14) = {0.040774, 0.749173, 0, 1.0};
Point(15) = {0.038222, 0.749372, 0, 1.0};
Point(16) = {0.035672, 0.749551, 0, 1.0};
Point(17) = {0.033127, 0.749700, 0, 1.0};
Point(18) = {0.030586, 0.749820, 0, 1.0};
Point(19) = {0.028050, 0.749910, 0, 1.0};
Point(20) = {0.025517, 0.749970, 0, 1.0};
Point(21) = {0.022988, 0.750000, 0, 1.0};
Point(22) = {0.020465, 0.749991, 0, 1.0};
Point(23) = {0.017948, 0.749942, 0, 1.0};
Point(24) = {0.015436, 0.749853, 0, 1.0};
Point(25) = {0.012931, 0.749715, 0, 1.0};
Point(26) = {0.010433, 0.749528, 0, 1.0};
Point(27) = {0.007942, 0.749291, 0, 1.0};
Point(28) = {0.005457, 0.749004, 0, 1.0};
Point(29) = {0.002981, 0.748658, 0, 1.0};
Point(30) = {0.000515, 0.748243, 0, 1.0};
Point(31) = {-0.001941, 0.747758, 0, 1.0};
Point(32) = {-0.004388, 0.747204, 0, 1.0};
Point(33) = {-0.006824, 0.746571, 0, 1.0};
Point(34) = {-0.009247, 0.745849, 0, 1.0};
Point(35) = {-0.011657, 0.745028, 0, 1.0};
Point(36) = {-0.014051, 0.744097, 0, 1.0};
Point(37) = {-0.016425, 0.743018, 0, 1.0};
Point(38) = {-0.018769, 0.741732, 0, 1.0};
Point(39) = {-0.021067, 0.740108, 0, 1.0};
Point(40) = {-0.022187, 0.739093, 0, 1.0};
Point(41) = {-0.023271, 0.737821, 0, 1.0};
Point(42) = {-0.024292, 0.736093, 0, 1.0};
Point(43) = {-0.024841, 0.734603, 0, 1.0};
Point(44) = {-0.025018, 0.733700, 0, 1.0};
Point(45) = {-0.025000, 0.732127, 0, 1.0};
Point(46) = {-0.024654, 0.731095, 0, 1.0};
Point(47) = {-0.024260, 0.730443, 0, 1.0};
Point(48) = {-0.023395, 0.729675, 0, 1.0};
Point(49) = {-0.022037, 0.728987, 0, 1.0};
Point(50) = {-0.020710, 0.728526, 0, 1.0};
Point(51) = {-0.019400, 0.728184, 0, 1.0};
Point(52) = {-0.016811, 0.727718, 0, 1.0};
Point(53) = {-0.014247, 0.727430, 0, 1.0};
Point(54) = {-0.011700, 0.727271, 0, 1.0};
Point(55) = {-0.009166, 0.727201, 0, 1.0};
Point(56) = {-0.006643, 0.727210, 0, 1.0};
Point(57) = {-0.004127, 0.727269, 0, 1.0};
Point(58) = {-0.001618, 0.727377, 0, 1.0};
Point(59) = {0.000885, 0.727535, 0, 1.0};
Point(60) = {0.003381, 0.727732, 0, 1.0};
Point(61) = {0.005872, 0.727969, 0, 1.0};
Point(62) = {0.008358, 0.728246, 0, 1.0};
Point(63) = {0.010838, 0.728562, 0, 1.0};
Point(64) = {0.013314, 0.728908, 0, 1.0};
Point(65) = {0.015786, 0.729284, 0, 1.0};
Point(66) = {0.018252, 0.729699, 0, 1.0};
Point(67) = {0.020713, 0.730154, 0, 1.0};
Point(68) = {0.023168, 0.730649, 0, 1.0};
Point(69) = {0.025618, 0.731183, 0, 1.0};
Point(70) = {0.028060, 0.731766, 0, 1.0};
Point(71) = {0.030495, 0.732410, 0, 1.0};
Point(72) = {0.032922, 0.733102, 0, 1.0};
Point(73) = {0.035344, 0.733834, 0, 1.0};
Point(74) = {0.037761, 0.734606, 0, 1.0};
Point(75) = {0.040172, 0.735418, 0, 1.0};
Point(76) = {0.042577, 0.736269, 0, 1.0};
Point(77) = {0.044980, 0.737140, 0, 1.0};
Point(78) = {0.047381, 0.738020, 0, 1.0};
Point(79) = {0.049782, 0.738901, 0, 1.0};
Point(80) = {0.052183, 0.739782, 0, 1.0};
Point(81) = {0.054585, 0.740663, 0, 1.0};
Point(82) = {0.056991, 0.741504, 0, 1.0};
Point(83) = {0.059402, 0.742315, 0, 1.0};
Point(84) = {0.061821, 0.743067, 0, 1.0};
Point(85) = {0.064253, 0.743730, 0, 1.0};
Point(86) = {0.066707, 0.744235, 0, 1.0};
Point(87) = {0.069181, 0.744591, 0, 1.0};
Point(88) = {0.071684, 0.744748, 0, 1.0};
Point(89) = {0.074220, 0.744659, 0, 1.0};
Point(90) = {-0.074096, -0.745550, 0, 1.0};
Point(91) = {-0.071527, -0.745868, 0, 1.0};
Point(92) = {-0.068960, -0.746175, 0, 1.0};
Point(93) = {-0.066394, -0.746473, 0, 1.0};
Point(94) = {-0.063830, -0.746761, 0, 1.0};
Point(95) = {-0.061265, -0.747049, 0, 1.0};
Point(96) = {-0.058701, -0.747337, 0, 1.0};
Point(97) = {-0.056136, -0.747624, 0, 1.0};
Point(98) = {-0.053572, -0.747912, 0, 1.0};
Point(99) = {-0.051008, -0.748190, 0, 1.0};
Point(100) = {-0.048447, -0.748458, 0, 1.0};
Point(101) = {-0.045886, -0.748716, 0, 1.0};
Point(102) = {-0.043329, -0.748955, 0, 1.0};
Point(103) = {-0.040774, -0.749173, 0, 1.0};
Point(104) = {-0.038222, -0.749372, 0, 1.0};
Point(105) = {-0.035672, -0.749551, 0, 1.0};
Point(106) = {-0.033127, -0.749700, 0, 1.0};
Point(107) = {-0.030586, -0.749820, 0, 1.0};
Point(108) = {-0.028050, -0.749910, 0, 1.0};
Point(109) = {-0.025517, -0.749970, 0, 1.0};
Point(110) = {-0.022988, -0.750000, 0, 1.0};
Point(111) = {-0.020465, -0.749991, 0, 1.0};
Point(112) = {-0.017948, -0.749942, 0, 1.0};
Point(113) = {-0.015436, -0.749853, 0, 1.0};
Point(114) = {-0.012931, -0.749715, 0, 1.0};
Point(115) = {-0.010433, -0.749528, 0, 1.0};
Point(116) = {-0.007942, -0.749291, 0, 1.0};
Point(117) = {-0.005457, -0.749004, 0, 1.0};
Point(118) = {-0.002981, -0.748658, 0, 1.0};
Point(119) = {-0.000515, -0.748243, 0, 1.0};
Point(120) = {0.001941, -0.747758, 0, 1.0};
Point(121) = {0.004388, -0.747204, 0, 1.0};
Point(122) = {0.006824, -0.746571, 0, 1.0};
Point(123) = {0.009247, -0.745849, 0, 1.0};
Point(124) = {0.011657, -0.745028, 0, 1.0};
Point(125) = {0.014051, -0.744097, 0, 1.0};
Point(126) = {0.016425, -0.743018, 0, 1.0};
Point(127) = {0.018769, -0.741732, 0, 1.0};
Point(128) = {0.021067, -0.740108, 0, 1.0};
Point(129) = {0.022187, -0.739093, 0, 1.0};
Point(130) = {0.023271, -0.737821, 0, 1.0};
Point(131) = {0.024292, -0.736093, 0, 1.0};
Point(132) = {0.024841, -0.734603, 0, 1.0};
Point(133) = {0.025018, -0.733700, 0, 1.0};
Point(134) = {0.025000, -0.732127, 0, 1.0};
Point(135) = {0.024654, -0.731095, 0, 1.0};
Point(136) = {0.024260, -0.730443, 0, 1.0};
Point(137) = {0.023395, -0.729675, 0, 1.0};
Point(138) = {0.022037, -0.728987, 0, 1.0};
Point(139) = {0.020710, -0.728526, 0, 1.0};
Point(140) = {0.019400, -0.728184, 0, 1.0};
Point(141) = {0.016811, -0.727718, 0, 1.0};
Point(142) = {0.014247, -0.727430, 0, 1.0};
Point(143) = {0.011700, -0.727271, 0, 1.0};
Point(144) = {0.009166, -0.727201, 0, 1.0};
Point(145) = {0.006643, -0.727210, 0, 1.0};
Point(146) = {0.004127, -0.727269, 0, 1.0};
Point(147) = {0.001618, -0.727377, 0, 1.0};
Point(148) = {-0.000885, -0.727535, 0, 1.0};
Point(149) = {-0.003381, -0.727732, 0, 1.0};
Point(150) = {-0.005872, -0.727969, 0, 1.0};
Point(151) = {-0.008358, -0.728246, 0, 1.0};
Point(152) = {-0.010838, -0.728562, 0, 1.0};
Point(153) = {-0.013314, -0.728908, 0, 1.0};
Point(154) = {-0.015786, -0.729284, 0, 1.0};
Point(155) = {-0.018252, -0.729699, 0, 1.0};
Point(156) = {-0.020713, -0.730154, 0, 1.0};
Point(157) = {-0.023168, -0.730649, 0, 1.0};
Point(158) = {-0.025618, -0.731183, 0, 1.0};
Point(159) = {-0.028060, -0.731766, 0, 1.0};
Point(160) = {-0.030495, -0.732410, 0, 1.0};
Point(161) = {-0.032922, -0.733102, 0, 1.0};
Point(162) = {-0.035344, -0.733834, 0, 1.0};
Point(163) = {-0.037761, -0.734606, 0, 1.0};
Point(164) = {-0.040172, -0.735418, 0, 1.0};
Point(165) = {-0.042577, -0.736269, 0, 1.0};
Point(166) = {-0.044980, -0.737140, 0, 1.0};
Point(167) = {-0.047381, -0.738020, 0, 1.0};
Point(168) = {-0.049782, -0.738901, 0, 1.0};
Point(169) = {-0.052183, -0.739782, 0, 1.0};
Point(170) = {-0.054585, -0.740663, 0, 1.0};
Point(171) = {-0.056991, -0.741504, 0, 1.0};
Point(172) = {-0.059402, -0.742315, 0, 1.0};
Point(173) = {-0.061821, -0.743067, 0, 1.0};
Point(174) = {-0.064253, -0.743730, 0, 1.0};
Point(175) = {-0.066707, -0.744235, 0, 1.0};
Point(176) = {-0.069181, -0.744591, 0, 1.0};
Point(177) = {-0.071684, -0.744748, 0, 1.0};
Point(178) = {-0.074220, -0.744659, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:31};
Spline(2) = {31:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:120};
Spline(6) = {120:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
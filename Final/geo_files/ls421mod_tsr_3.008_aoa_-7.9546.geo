SetFactory("OpenCASCADE");

Point(1) = {0.148192, 0.741100, 0, 1.0};
Point(2) = {0.143054, 0.741735, 0, 1.0};
Point(3) = {0.137920, 0.742350, 0, 1.0};
Point(4) = {0.132788, 0.742946, 0, 1.0};
Point(5) = {0.127659, 0.743522, 0, 1.0};
Point(6) = {0.122530, 0.744097, 0, 1.0};
Point(7) = {0.117401, 0.744673, 0, 1.0};
Point(8) = {0.112272, 0.745249, 0, 1.0};
Point(9) = {0.107143, 0.745825, 0, 1.0};
Point(10) = {0.102017, 0.746381, 0, 1.0};
Point(11) = {0.096893, 0.746917, 0, 1.0};
Point(12) = {0.091773, 0.747433, 0, 1.0};
Point(13) = {0.086657, 0.747910, 0, 1.0};
Point(14) = {0.081548, 0.748347, 0, 1.0};
Point(15) = {0.076444, 0.748744, 0, 1.0};
Point(16) = {0.071345, 0.749102, 0, 1.0};
Point(17) = {0.066255, 0.749401, 0, 1.0};
Point(18) = {0.061173, 0.749640, 0, 1.0};
Point(19) = {0.056099, 0.749819, 0, 1.0};
Point(20) = {0.051034, 0.749939, 0, 1.0};
Point(21) = {0.045977, 0.750000, 0, 1.0};
Point(22) = {0.040931, 0.749982, 0, 1.0};
Point(23) = {0.035896, 0.749884, 0, 1.0};
Point(24) = {0.030872, 0.749707, 0, 1.0};
Point(25) = {0.025862, 0.749431, 0, 1.0};
Point(26) = {0.020866, 0.749056, 0, 1.0};
Point(27) = {0.015883, 0.748582, 0, 1.0};
Point(28) = {0.010915, 0.748009, 0, 1.0};
Point(29) = {0.005963, 0.747317, 0, 1.0};
Point(30) = {0.001030, 0.746486, 0, 1.0};
Point(31) = {-0.003883, 0.745517, 0, 1.0};
Point(32) = {-0.008776, 0.744409, 0, 1.0};
Point(33) = {-0.013648, 0.743143, 0, 1.0};
Point(34) = {-0.018495, 0.741698, 0, 1.0};
Point(35) = {-0.023314, 0.740055, 0, 1.0};
Point(36) = {-0.028102, 0.738195, 0, 1.0};
Point(37) = {-0.032850, 0.736037, 0, 1.0};
Point(38) = {-0.037538, 0.733463, 0, 1.0};
Point(39) = {-0.042133, 0.730216, 0, 1.0};
Point(40) = {-0.044374, 0.728187, 0, 1.0};
Point(41) = {-0.046543, 0.725642, 0, 1.0};
Point(42) = {-0.048584, 0.722186, 0, 1.0};
Point(43) = {-0.049682, 0.719206, 0, 1.0};
Point(44) = {-0.050036, 0.717399, 0, 1.0};
Point(45) = {-0.050000, 0.714254, 0, 1.0};
Point(46) = {-0.049308, 0.712190, 0, 1.0};
Point(47) = {-0.048520, 0.710886, 0, 1.0};
Point(48) = {-0.046791, 0.709351, 0, 1.0};
Point(49) = {-0.044074, 0.707974, 0, 1.0};
Point(50) = {-0.041421, 0.707052, 0, 1.0};
Point(51) = {-0.038801, 0.706368, 0, 1.0};
Point(52) = {-0.033622, 0.705436, 0, 1.0};
Point(53) = {-0.028493, 0.704860, 0, 1.0};
Point(54) = {-0.023400, 0.704542, 0, 1.0};
Point(55) = {-0.018332, 0.704402, 0, 1.0};
Point(56) = {-0.013286, 0.704420, 0, 1.0};
Point(57) = {-0.008254, 0.704538, 0, 1.0};
Point(58) = {-0.003235, 0.704754, 0, 1.0};
Point(59) = {0.001769, 0.705070, 0, 1.0};
Point(60) = {0.006763, 0.705465, 0, 1.0};
Point(61) = {0.011745, 0.705939, 0, 1.0};
Point(62) = {0.016716, 0.706492, 0, 1.0};
Point(63) = {0.021676, 0.707125, 0, 1.0};
Point(64) = {0.026628, 0.707816, 0, 1.0};
Point(65) = {0.031572, 0.708568, 0, 1.0};
Point(66) = {0.036504, 0.709398, 0, 1.0};
Point(67) = {0.041426, 0.710308, 0, 1.0};
Point(68) = {0.046336, 0.711297, 0, 1.0};
Point(69) = {0.051235, 0.712366, 0, 1.0};
Point(70) = {0.056121, 0.713533, 0, 1.0};
Point(71) = {0.060990, 0.714819, 0, 1.0};
Point(72) = {0.065845, 0.716204, 0, 1.0};
Point(73) = {0.070689, 0.717669, 0, 1.0};
Point(74) = {0.075522, 0.719212, 0, 1.0};
Point(75) = {0.080343, 0.720835, 0, 1.0};
Point(76) = {0.085154, 0.722537, 0, 1.0};
Point(77) = {0.089959, 0.724279, 0, 1.0};
Point(78) = {0.094762, 0.726041, 0, 1.0};
Point(79) = {0.099564, 0.727802, 0, 1.0};
Point(80) = {0.104367, 0.729564, 0, 1.0};
Point(81) = {0.109169, 0.731325, 0, 1.0};
Point(82) = {0.113983, 0.733008, 0, 1.0};
Point(83) = {0.118804, 0.734631, 0, 1.0};
Point(84) = {0.123643, 0.736135, 0, 1.0};
Point(85) = {0.128506, 0.737461, 0, 1.0};
Point(86) = {0.133414, 0.738469, 0, 1.0};
Point(87) = {0.138363, 0.739181, 0, 1.0};
Point(88) = {0.143367, 0.739497, 0, 1.0};
Point(89) = {0.148441, 0.739317, 0, 1.0};
Point(90) = {-0.148192, -0.741100, 0, 1.0};
Point(91) = {-0.143054, -0.741735, 0, 1.0};
Point(92) = {-0.137920, -0.742350, 0, 1.0};
Point(93) = {-0.132788, -0.742946, 0, 1.0};
Point(94) = {-0.127659, -0.743522, 0, 1.0};
Point(95) = {-0.122530, -0.744097, 0, 1.0};
Point(96) = {-0.117401, -0.744673, 0, 1.0};
Point(97) = {-0.112272, -0.745249, 0, 1.0};
Point(98) = {-0.107143, -0.745825, 0, 1.0};
Point(99) = {-0.102017, -0.746381, 0, 1.0};
Point(100) = {-0.096893, -0.746917, 0, 1.0};
Point(101) = {-0.091773, -0.747433, 0, 1.0};
Point(102) = {-0.086657, -0.747910, 0, 1.0};
Point(103) = {-0.081548, -0.748347, 0, 1.0};
Point(104) = {-0.076444, -0.748744, 0, 1.0};
Point(105) = {-0.071345, -0.749102, 0, 1.0};
Point(106) = {-0.066255, -0.749401, 0, 1.0};
Point(107) = {-0.061173, -0.749640, 0, 1.0};
Point(108) = {-0.056099, -0.749819, 0, 1.0};
Point(109) = {-0.051034, -0.749939, 0, 1.0};
Point(110) = {-0.045977, -0.750000, 0, 1.0};
Point(111) = {-0.040931, -0.749982, 0, 1.0};
Point(112) = {-0.035896, -0.749884, 0, 1.0};
Point(113) = {-0.030872, -0.749707, 0, 1.0};
Point(114) = {-0.025862, -0.749431, 0, 1.0};
Point(115) = {-0.020866, -0.749056, 0, 1.0};
Point(116) = {-0.015883, -0.748582, 0, 1.0};
Point(117) = {-0.010915, -0.748009, 0, 1.0};
Point(118) = {-0.005963, -0.747317, 0, 1.0};
Point(119) = {-0.001030, -0.746486, 0, 1.0};
Point(120) = {0.003883, -0.745517, 0, 1.0};
Point(121) = {0.008776, -0.744409, 0, 1.0};
Point(122) = {0.013648, -0.743143, 0, 1.0};
Point(123) = {0.018495, -0.741698, 0, 1.0};
Point(124) = {0.023314, -0.740055, 0, 1.0};
Point(125) = {0.028102, -0.738195, 0, 1.0};
Point(126) = {0.032850, -0.736037, 0, 1.0};
Point(127) = {0.037538, -0.733463, 0, 1.0};
Point(128) = {0.042133, -0.730216, 0, 1.0};
Point(129) = {0.044374, -0.728187, 0, 1.0};
Point(130) = {0.046543, -0.725642, 0, 1.0};
Point(131) = {0.048584, -0.722186, 0, 1.0};
Point(132) = {0.049682, -0.719206, 0, 1.0};
Point(133) = {0.050036, -0.717399, 0, 1.0};
Point(134) = {0.050000, -0.714254, 0, 1.0};
Point(135) = {0.049308, -0.712190, 0, 1.0};
Point(136) = {0.048520, -0.710886, 0, 1.0};
Point(137) = {0.046791, -0.709351, 0, 1.0};
Point(138) = {0.044074, -0.707974, 0, 1.0};
Point(139) = {0.041421, -0.707052, 0, 1.0};
Point(140) = {0.038801, -0.706368, 0, 1.0};
Point(141) = {0.033622, -0.705436, 0, 1.0};
Point(142) = {0.028493, -0.704860, 0, 1.0};
Point(143) = {0.023400, -0.704542, 0, 1.0};
Point(144) = {0.018332, -0.704402, 0, 1.0};
Point(145) = {0.013286, -0.704420, 0, 1.0};
Point(146) = {0.008254, -0.704538, 0, 1.0};
Point(147) = {0.003235, -0.704754, 0, 1.0};
Point(148) = {-0.001769, -0.705070, 0, 1.0};
Point(149) = {-0.006763, -0.705465, 0, 1.0};
Point(150) = {-0.011745, -0.705939, 0, 1.0};
Point(151) = {-0.016716, -0.706492, 0, 1.0};
Point(152) = {-0.021676, -0.707125, 0, 1.0};
Point(153) = {-0.026628, -0.707816, 0, 1.0};
Point(154) = {-0.031572, -0.708568, 0, 1.0};
Point(155) = {-0.036504, -0.709398, 0, 1.0};
Point(156) = {-0.041426, -0.710308, 0, 1.0};
Point(157) = {-0.046336, -0.711297, 0, 1.0};
Point(158) = {-0.051235, -0.712366, 0, 1.0};
Point(159) = {-0.056121, -0.713533, 0, 1.0};
Point(160) = {-0.060990, -0.714819, 0, 1.0};
Point(161) = {-0.065845, -0.716204, 0, 1.0};
Point(162) = {-0.070689, -0.717669, 0, 1.0};
Point(163) = {-0.075522, -0.719212, 0, 1.0};
Point(164) = {-0.080343, -0.720835, 0, 1.0};
Point(165) = {-0.085154, -0.722537, 0, 1.0};
Point(166) = {-0.089959, -0.724279, 0, 1.0};
Point(167) = {-0.094762, -0.726041, 0, 1.0};
Point(168) = {-0.099564, -0.727802, 0, 1.0};
Point(169) = {-0.104367, -0.729564, 0, 1.0};
Point(170) = {-0.109169, -0.731325, 0, 1.0};
Point(171) = {-0.113983, -0.733008, 0, 1.0};
Point(172) = {-0.118804, -0.734631, 0, 1.0};
Point(173) = {-0.123643, -0.736135, 0, 1.0};
Point(174) = {-0.128506, -0.737461, 0, 1.0};
Point(175) = {-0.133414, -0.738469, 0, 1.0};
Point(176) = {-0.138363, -0.739181, 0, 1.0};
Point(177) = {-0.143367, -0.739497, 0, 1.0};
Point(178) = {-0.148441, -0.739317, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:31};
Spline(2) = {31:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:120};
Spline(6) = {120:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111144, 0.743325, 0, 1.0};
Point(2) = {0.107291, 0.743801, 0, 1.0};
Point(3) = {0.103440, 0.744263, 0, 1.0};
Point(4) = {0.099591, 0.744709, 0, 1.0};
Point(5) = {0.095744, 0.745141, 0, 1.0};
Point(6) = {0.091898, 0.745573, 0, 1.0};
Point(7) = {0.088051, 0.746005, 0, 1.0};
Point(8) = {0.084204, 0.746437, 0, 1.0};
Point(9) = {0.080357, 0.746868, 0, 1.0};
Point(10) = {0.076513, 0.747285, 0, 1.0};
Point(11) = {0.072670, 0.747687, 0, 1.0};
Point(12) = {0.068829, 0.748075, 0, 1.0};
Point(13) = {0.064993, 0.748432, 0, 1.0};
Point(14) = {0.061161, 0.748760, 0, 1.0};
Point(15) = {0.057333, 0.749058, 0, 1.0};
Point(16) = {0.053509, 0.749327, 0, 1.0};
Point(17) = {0.049691, 0.749550, 0, 1.0};
Point(18) = {0.045880, 0.749730, 0, 1.0};
Point(19) = {0.042074, 0.749864, 0, 1.0};
Point(20) = {0.038275, 0.749954, 0, 1.0};
Point(21) = {0.034482, 0.750000, 0, 1.0};
Point(22) = {0.030698, 0.749986, 0, 1.0};
Point(23) = {0.026922, 0.749913, 0, 1.0};
Point(24) = {0.023154, 0.749780, 0, 1.0};
Point(25) = {0.019396, 0.749573, 0, 1.0};
Point(26) = {0.015649, 0.749292, 0, 1.0};
Point(27) = {0.011912, 0.748936, 0, 1.0};
Point(28) = {0.008186, 0.748506, 0, 1.0};
Point(29) = {0.004472, 0.747988, 0, 1.0};
Point(30) = {0.000773, 0.747365, 0, 1.0};
Point(31) = {-0.002912, 0.746638, 0, 1.0};
Point(32) = {-0.006582, 0.745807, 0, 1.0};
Point(33) = {-0.010236, 0.744857, 0, 1.0};
Point(34) = {-0.013871, 0.743773, 0, 1.0};
Point(35) = {-0.017485, 0.742541, 0, 1.0};
Point(36) = {-0.021077, 0.741146, 0, 1.0};
Point(37) = {-0.024637, 0.739528, 0, 1.0};
Point(38) = {-0.028154, 0.737597, 0, 1.0};
Point(39) = {-0.031600, 0.735162, 0, 1.0};
Point(40) = {-0.033280, 0.733640, 0, 1.0};
Point(41) = {-0.034907, 0.731731, 0, 1.0};
Point(42) = {-0.036438, 0.729140, 0, 1.0};
Point(43) = {-0.037262, 0.726904, 0, 1.0};
Point(44) = {-0.037527, 0.725549, 0, 1.0};
Point(45) = {-0.037500, 0.723190, 0, 1.0};
Point(46) = {-0.036981, 0.721642, 0, 1.0};
Point(47) = {-0.036390, 0.720665, 0, 1.0};
Point(48) = {-0.035093, 0.719513, 0, 1.0};
Point(49) = {-0.033055, 0.718480, 0, 1.0};
Point(50) = {-0.031066, 0.717789, 0, 1.0};
Point(51) = {-0.029101, 0.717276, 0, 1.0};
Point(52) = {-0.025217, 0.716577, 0, 1.0};
Point(53) = {-0.021370, 0.716145, 0, 1.0};
Point(54) = {-0.017550, 0.715906, 0, 1.0};
Point(55) = {-0.013749, 0.715801, 0, 1.0};
Point(56) = {-0.009964, 0.715815, 0, 1.0};
Point(57) = {-0.006190, 0.715903, 0, 1.0};
Point(58) = {-0.002427, 0.716066, 0, 1.0};
Point(59) = {0.001327, 0.716302, 0, 1.0};
Point(60) = {0.005072, 0.716598, 0, 1.0};
Point(61) = {0.008809, 0.716954, 0, 1.0};
Point(62) = {0.012537, 0.717369, 0, 1.0};
Point(63) = {0.016257, 0.717843, 0, 1.0};
Point(64) = {0.019971, 0.718362, 0, 1.0};
Point(65) = {0.023679, 0.718926, 0, 1.0};
Point(66) = {0.027378, 0.719549, 0, 1.0};
Point(67) = {0.031069, 0.720231, 0, 1.0};
Point(68) = {0.034752, 0.720973, 0, 1.0};
Point(69) = {0.038427, 0.721774, 0, 1.0};
Point(70) = {0.042091, 0.722650, 0, 1.0};
Point(71) = {0.045742, 0.723614, 0, 1.0};
Point(72) = {0.049384, 0.724653, 0, 1.0};
Point(73) = {0.053017, 0.725752, 0, 1.0};
Point(74) = {0.056641, 0.726909, 0, 1.0};
Point(75) = {0.060258, 0.728127, 0, 1.0};
Point(76) = {0.063866, 0.729403, 0, 1.0};
Point(77) = {0.067469, 0.730709, 0, 1.0};
Point(78) = {0.071071, 0.732031, 0, 1.0};
Point(79) = {0.074673, 0.733352, 0, 1.0};
Point(80) = {0.078275, 0.734673, 0, 1.0};
Point(81) = {0.081877, 0.735994, 0, 1.0};
Point(82) = {0.085487, 0.737256, 0, 1.0};
Point(83) = {0.089103, 0.738473, 0, 1.0};
Point(84) = {0.092732, 0.739601, 0, 1.0};
Point(85) = {0.096380, 0.740595, 0, 1.0};
Point(86) = {0.100060, 0.741352, 0, 1.0};
Point(87) = {0.103772, 0.741886, 0, 1.0};
Point(88) = {0.107525, 0.742123, 0, 1.0};
Point(89) = {0.111331, 0.741988, 0, 1.0};
Point(90) = {-0.111144, -0.743325, 0, 1.0};
Point(91) = {-0.107291, -0.743801, 0, 1.0};
Point(92) = {-0.103440, -0.744263, 0, 1.0};
Point(93) = {-0.099591, -0.744709, 0, 1.0};
Point(94) = {-0.095744, -0.745141, 0, 1.0};
Point(95) = {-0.091898, -0.745573, 0, 1.0};
Point(96) = {-0.088051, -0.746005, 0, 1.0};
Point(97) = {-0.084204, -0.746437, 0, 1.0};
Point(98) = {-0.080357, -0.746868, 0, 1.0};
Point(99) = {-0.076513, -0.747285, 0, 1.0};
Point(100) = {-0.072670, -0.747687, 0, 1.0};
Point(101) = {-0.068829, -0.748075, 0, 1.0};
Point(102) = {-0.064993, -0.748432, 0, 1.0};
Point(103) = {-0.061161, -0.748760, 0, 1.0};
Point(104) = {-0.057333, -0.749058, 0, 1.0};
Point(105) = {-0.053509, -0.749327, 0, 1.0};
Point(106) = {-0.049691, -0.749550, 0, 1.0};
Point(107) = {-0.045880, -0.749730, 0, 1.0};
Point(108) = {-0.042074, -0.749864, 0, 1.0};
Point(109) = {-0.038275, -0.749954, 0, 1.0};
Point(110) = {-0.034482, -0.750000, 0, 1.0};
Point(111) = {-0.030698, -0.749986, 0, 1.0};
Point(112) = {-0.026922, -0.749913, 0, 1.0};
Point(113) = {-0.023154, -0.749780, 0, 1.0};
Point(114) = {-0.019396, -0.749573, 0, 1.0};
Point(115) = {-0.015649, -0.749292, 0, 1.0};
Point(116) = {-0.011912, -0.748936, 0, 1.0};
Point(117) = {-0.008186, -0.748506, 0, 1.0};
Point(118) = {-0.004472, -0.747988, 0, 1.0};
Point(119) = {-0.000773, -0.747365, 0, 1.0};
Point(120) = {0.002912, -0.746638, 0, 1.0};
Point(121) = {0.006582, -0.745807, 0, 1.0};
Point(122) = {0.010236, -0.744857, 0, 1.0};
Point(123) = {0.013871, -0.743773, 0, 1.0};
Point(124) = {0.017485, -0.742541, 0, 1.0};
Point(125) = {0.021077, -0.741146, 0, 1.0};
Point(126) = {0.024637, -0.739528, 0, 1.0};
Point(127) = {0.028154, -0.737597, 0, 1.0};
Point(128) = {0.031600, -0.735162, 0, 1.0};
Point(129) = {0.033280, -0.733640, 0, 1.0};
Point(130) = {0.034907, -0.731731, 0, 1.0};
Point(131) = {0.036438, -0.729140, 0, 1.0};
Point(132) = {0.037262, -0.726904, 0, 1.0};
Point(133) = {0.037527, -0.725549, 0, 1.0};
Point(134) = {0.037500, -0.723190, 0, 1.0};
Point(135) = {0.036981, -0.721642, 0, 1.0};
Point(136) = {0.036390, -0.720665, 0, 1.0};
Point(137) = {0.035093, -0.719513, 0, 1.0};
Point(138) = {0.033055, -0.718480, 0, 1.0};
Point(139) = {0.031066, -0.717789, 0, 1.0};
Point(140) = {0.029101, -0.717276, 0, 1.0};
Point(141) = {0.025217, -0.716577, 0, 1.0};
Point(142) = {0.021370, -0.716145, 0, 1.0};
Point(143) = {0.017550, -0.715906, 0, 1.0};
Point(144) = {0.013749, -0.715801, 0, 1.0};
Point(145) = {0.009964, -0.715815, 0, 1.0};
Point(146) = {0.006190, -0.715903, 0, 1.0};
Point(147) = {0.002427, -0.716066, 0, 1.0};
Point(148) = {-0.001327, -0.716302, 0, 1.0};
Point(149) = {-0.005072, -0.716598, 0, 1.0};
Point(150) = {-0.008809, -0.716954, 0, 1.0};
Point(151) = {-0.012537, -0.717369, 0, 1.0};
Point(152) = {-0.016257, -0.717843, 0, 1.0};
Point(153) = {-0.019971, -0.718362, 0, 1.0};
Point(154) = {-0.023679, -0.718926, 0, 1.0};
Point(155) = {-0.027378, -0.719549, 0, 1.0};
Point(156) = {-0.031069, -0.720231, 0, 1.0};
Point(157) = {-0.034752, -0.720973, 0, 1.0};
Point(158) = {-0.038427, -0.721774, 0, 1.0};
Point(159) = {-0.042091, -0.722650, 0, 1.0};
Point(160) = {-0.045742, -0.723614, 0, 1.0};
Point(161) = {-0.049384, -0.724653, 0, 1.0};
Point(162) = {-0.053017, -0.725752, 0, 1.0};
Point(163) = {-0.056641, -0.726909, 0, 1.0};
Point(164) = {-0.060258, -0.728127, 0, 1.0};
Point(165) = {-0.063866, -0.729403, 0, 1.0};
Point(166) = {-0.067469, -0.730709, 0, 1.0};
Point(167) = {-0.071071, -0.732031, 0, 1.0};
Point(168) = {-0.074673, -0.733352, 0, 1.0};
Point(169) = {-0.078275, -0.734673, 0, 1.0};
Point(170) = {-0.081877, -0.735994, 0, 1.0};
Point(171) = {-0.085487, -0.737256, 0, 1.0};
Point(172) = {-0.089103, -0.738473, 0, 1.0};
Point(173) = {-0.092732, -0.739601, 0, 1.0};
Point(174) = {-0.096380, -0.740595, 0, 1.0};
Point(175) = {-0.100060, -0.741352, 0, 1.0};
Point(176) = {-0.103772, -0.741886, 0, 1.0};
Point(177) = {-0.107525, -0.742123, 0, 1.0};
Point(178) = {-0.111331, -0.741988, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:31};
Spline(2) = {31:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:120};
Spline(6) = {120:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
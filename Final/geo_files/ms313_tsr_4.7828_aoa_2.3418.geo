SetFactory("OpenCASCADE");

Point(1) = {0.074915, 0.739194, 0, 1.0};
Point(2) = {0.072438, 0.739812, 0, 1.0};
Point(3) = {0.069961, 0.740427, 0, 1.0};
Point(4) = {0.067484, 0.741041, 0, 1.0};
Point(5) = {0.065007, 0.741656, 0, 1.0};
Point(6) = {0.062530, 0.742267, 0, 1.0};
Point(7) = {0.060053, 0.742877, 0, 1.0};
Point(8) = {0.057575, 0.743482, 0, 1.0};
Point(9) = {0.055097, 0.744073, 0, 1.0};
Point(10) = {0.052619, 0.744646, 0, 1.0};
Point(11) = {0.050139, 0.745200, 0, 1.0};
Point(12) = {0.047659, 0.745731, 0, 1.0};
Point(13) = {0.045177, 0.746236, 0, 1.0};
Point(14) = {0.042695, 0.746712, 0, 1.0};
Point(15) = {0.040211, 0.747156, 0, 1.0};
Point(16) = {0.037725, 0.747563, 0, 1.0};
Point(17) = {0.035239, 0.747933, 0, 1.0};
Point(18) = {0.032750, 0.748265, 0, 1.0};
Point(19) = {0.030260, 0.748560, 0, 1.0};
Point(20) = {0.027769, 0.748822, 0, 1.0};
Point(21) = {0.025276, 0.749053, 0, 1.0};
Point(22) = {0.022782, 0.749256, 0, 1.0};
Point(23) = {0.020287, 0.749433, 0, 1.0};
Point(24) = {0.017791, 0.749586, 0, 1.0};
Point(25) = {0.015295, 0.749715, 0, 1.0};
Point(26) = {0.012797, 0.749820, 0, 1.0};
Point(27) = {0.010298, 0.749902, 0, 1.0};
Point(28) = {0.007798, 0.749960, 0, 1.0};
Point(29) = {0.005298, 0.749994, 0, 1.0};
Point(30) = {0.002796, 0.750000, 0, 1.0};
Point(31) = {0.000293, 0.749977, 0, 1.0};
Point(32) = {-0.002212, 0.749921, 0, 1.0};
Point(33) = {-0.004717, 0.749831, 0, 1.0};
Point(34) = {-0.007225, 0.749702, 0, 1.0};
Point(35) = {-0.009734, 0.749527, 0, 1.0};
Point(36) = {-0.012246, 0.749291, 0, 1.0};
Point(37) = {-0.014761, 0.748974, 0, 1.0};
Point(38) = {-0.017281, 0.748533, 0, 1.0};
Point(39) = {-0.019810, 0.747862, 0, 1.0};
Point(40) = {-0.021082, 0.747357, 0, 1.0};
Point(41) = {-0.022361, 0.746667, 0, 1.0};
Point(42) = {-0.023652, 0.745702, 0, 1.0};
Point(43) = {-0.024439, 0.744817, 0, 1.0};
Point(44) = {-0.024761, 0.744265, 0, 1.0};
Point(45) = {-0.024996, 0.743425, 0, 1.0};
Point(46) = {-0.024826, 0.742692, 0, 1.0};
Point(47) = {-0.024541, 0.742310, 0, 1.0};
Point(48) = {-0.023813, 0.741752, 0, 1.0};
Point(49) = {-0.022586, 0.741167, 0, 1.0};
Point(50) = {-0.021353, 0.740735, 0, 1.0};
Point(51) = {-0.020116, 0.740379, 0, 1.0};
Point(52) = {-0.017638, 0.739795, 0, 1.0};
Point(53) = {-0.015156, 0.739314, 0, 1.0};
Point(54) = {-0.012671, 0.738899, 0, 1.0};
Point(55) = {-0.010183, 0.738536, 0, 1.0};
Point(56) = {-0.007694, 0.738215, 0, 1.0};
Point(57) = {-0.005204, 0.737933, 0, 1.0};
Point(58) = {-0.002712, 0.737683, 0, 1.0};
Point(59) = {-0.000219, 0.737462, 0, 1.0};
Point(60) = {0.002275, 0.737266, 0, 1.0};
Point(61) = {0.004770, 0.737092, 0, 1.0};
Point(62) = {0.007266, 0.736939, 0, 1.0};
Point(63) = {0.009763, 0.736805, 0, 1.0};
Point(64) = {0.012260, 0.736693, 0, 1.0};
Point(65) = {0.014759, 0.736605, 0, 1.0};
Point(66) = {0.017258, 0.736543, 0, 1.0};
Point(67) = {0.019759, 0.736511, 0, 1.0};
Point(68) = {0.022261, 0.736509, 0, 1.0};
Point(69) = {0.024764, 0.736537, 0, 1.0};
Point(70) = {0.027269, 0.736594, 0, 1.0};
Point(71) = {0.029774, 0.736681, 0, 1.0};
Point(72) = {0.032281, 0.736800, 0, 1.0};
Point(73) = {0.034789, 0.736951, 0, 1.0};
Point(74) = {0.037299, 0.737134, 0, 1.0};
Point(75) = {0.039810, 0.737342, 0, 1.0};
Point(76) = {0.042321, 0.737571, 0, 1.0};
Point(77) = {0.044833, 0.737812, 0, 1.0};
Point(78) = {0.047345, 0.738059, 0, 1.0};
Point(79) = {0.049857, 0.738307, 0, 1.0};
Point(80) = {0.052369, 0.738548, 0, 1.0};
Point(81) = {0.054881, 0.738771, 0, 1.0};
Point(82) = {0.057391, 0.738967, 0, 1.0};
Point(83) = {0.059899, 0.739126, 0, 1.0};
Point(84) = {0.062406, 0.739239, 0, 1.0};
Point(85) = {0.064910, 0.739296, 0, 1.0};
Point(86) = {0.067412, 0.739287, 0, 1.0};
Point(87) = {0.069910, 0.739193, 0, 1.0};
Point(88) = {0.072404, 0.738989, 0, 1.0};
Point(89) = {0.074892, 0.738636, 0, 1.0};
Point(90) = {-0.074915, -0.739194, 0, 1.0};
Point(91) = {-0.072438, -0.739812, 0, 1.0};
Point(92) = {-0.069961, -0.740427, 0, 1.0};
Point(93) = {-0.067484, -0.741041, 0, 1.0};
Point(94) = {-0.065007, -0.741656, 0, 1.0};
Point(95) = {-0.062530, -0.742267, 0, 1.0};
Point(96) = {-0.060053, -0.742877, 0, 1.0};
Point(97) = {-0.057575, -0.743482, 0, 1.0};
Point(98) = {-0.055097, -0.744073, 0, 1.0};
Point(99) = {-0.052619, -0.744646, 0, 1.0};
Point(100) = {-0.050139, -0.745200, 0, 1.0};
Point(101) = {-0.047659, -0.745731, 0, 1.0};
Point(102) = {-0.045177, -0.746236, 0, 1.0};
Point(103) = {-0.042695, -0.746712, 0, 1.0};
Point(104) = {-0.040211, -0.747156, 0, 1.0};
Point(105) = {-0.037725, -0.747563, 0, 1.0};
Point(106) = {-0.035239, -0.747933, 0, 1.0};
Point(107) = {-0.032750, -0.748265, 0, 1.0};
Point(108) = {-0.030260, -0.748560, 0, 1.0};
Point(109) = {-0.027769, -0.748822, 0, 1.0};
Point(110) = {-0.025276, -0.749053, 0, 1.0};
Point(111) = {-0.022782, -0.749256, 0, 1.0};
Point(112) = {-0.020287, -0.749433, 0, 1.0};
Point(113) = {-0.017791, -0.749586, 0, 1.0};
Point(114) = {-0.015295, -0.749715, 0, 1.0};
Point(115) = {-0.012797, -0.749820, 0, 1.0};
Point(116) = {-0.010298, -0.749902, 0, 1.0};
Point(117) = {-0.007798, -0.749960, 0, 1.0};
Point(118) = {-0.005298, -0.749994, 0, 1.0};
Point(119) = {-0.002796, -0.750000, 0, 1.0};
Point(120) = {-0.000293, -0.749977, 0, 1.0};
Point(121) = {0.002212, -0.749921, 0, 1.0};
Point(122) = {0.004717, -0.749831, 0, 1.0};
Point(123) = {0.007225, -0.749702, 0, 1.0};
Point(124) = {0.009734, -0.749527, 0, 1.0};
Point(125) = {0.012246, -0.749291, 0, 1.0};
Point(126) = {0.014761, -0.748974, 0, 1.0};
Point(127) = {0.017281, -0.748533, 0, 1.0};
Point(128) = {0.019810, -0.747862, 0, 1.0};
Point(129) = {0.021082, -0.747357, 0, 1.0};
Point(130) = {0.022361, -0.746667, 0, 1.0};
Point(131) = {0.023652, -0.745702, 0, 1.0};
Point(132) = {0.024439, -0.744817, 0, 1.0};
Point(133) = {0.024761, -0.744265, 0, 1.0};
Point(134) = {0.024996, -0.743425, 0, 1.0};
Point(135) = {0.024826, -0.742692, 0, 1.0};
Point(136) = {0.024541, -0.742310, 0, 1.0};
Point(137) = {0.023813, -0.741752, 0, 1.0};
Point(138) = {0.022586, -0.741167, 0, 1.0};
Point(139) = {0.021353, -0.740735, 0, 1.0};
Point(140) = {0.020116, -0.740379, 0, 1.0};
Point(141) = {0.017638, -0.739795, 0, 1.0};
Point(142) = {0.015156, -0.739314, 0, 1.0};
Point(143) = {0.012671, -0.738899, 0, 1.0};
Point(144) = {0.010183, -0.738536, 0, 1.0};
Point(145) = {0.007694, -0.738215, 0, 1.0};
Point(146) = {0.005204, -0.737933, 0, 1.0};
Point(147) = {0.002712, -0.737683, 0, 1.0};
Point(148) = {0.000219, -0.737462, 0, 1.0};
Point(149) = {-0.002275, -0.737266, 0, 1.0};
Point(150) = {-0.004770, -0.737092, 0, 1.0};
Point(151) = {-0.007266, -0.736939, 0, 1.0};
Point(152) = {-0.009763, -0.736805, 0, 1.0};
Point(153) = {-0.012260, -0.736693, 0, 1.0};
Point(154) = {-0.014759, -0.736605, 0, 1.0};
Point(155) = {-0.017258, -0.736543, 0, 1.0};
Point(156) = {-0.019759, -0.736511, 0, 1.0};
Point(157) = {-0.022261, -0.736509, 0, 1.0};
Point(158) = {-0.024764, -0.736537, 0, 1.0};
Point(159) = {-0.027269, -0.736594, 0, 1.0};
Point(160) = {-0.029774, -0.736681, 0, 1.0};
Point(161) = {-0.032281, -0.736800, 0, 1.0};
Point(162) = {-0.034789, -0.736951, 0, 1.0};
Point(163) = {-0.037299, -0.737134, 0, 1.0};
Point(164) = {-0.039810, -0.737342, 0, 1.0};
Point(165) = {-0.042321, -0.737571, 0, 1.0};
Point(166) = {-0.044833, -0.737812, 0, 1.0};
Point(167) = {-0.047345, -0.738059, 0, 1.0};
Point(168) = {-0.049857, -0.738307, 0, 1.0};
Point(169) = {-0.052369, -0.738548, 0, 1.0};
Point(170) = {-0.054881, -0.738771, 0, 1.0};
Point(171) = {-0.057391, -0.738967, 0, 1.0};
Point(172) = {-0.059899, -0.739126, 0, 1.0};
Point(173) = {-0.062406, -0.739239, 0, 1.0};
Point(174) = {-0.064910, -0.739296, 0, 1.0};
Point(175) = {-0.067412, -0.739287, 0, 1.0};
Point(176) = {-0.069910, -0.739193, 0, 1.0};
Point(177) = {-0.072404, -0.738989, 0, 1.0};
Point(178) = {-0.074892, -0.738636, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112372, 0.733791, 0, 1.0};
Point(2) = {0.108657, 0.734719, 0, 1.0};
Point(3) = {0.104941, 0.735640, 0, 1.0};
Point(4) = {0.101226, 0.736562, 0, 1.0};
Point(5) = {0.097510, 0.737483, 0, 1.0};
Point(6) = {0.093795, 0.738401, 0, 1.0};
Point(7) = {0.090079, 0.739316, 0, 1.0};
Point(8) = {0.086363, 0.740223, 0, 1.0};
Point(9) = {0.082646, 0.741109, 0, 1.0};
Point(10) = {0.078928, 0.741970, 0, 1.0};
Point(11) = {0.075209, 0.742800, 0, 1.0};
Point(12) = {0.071488, 0.743597, 0, 1.0};
Point(13) = {0.067766, 0.744354, 0, 1.0};
Point(14) = {0.064042, 0.745069, 0, 1.0};
Point(15) = {0.060316, 0.745734, 0, 1.0};
Point(16) = {0.056588, 0.746345, 0, 1.0};
Point(17) = {0.052858, 0.746899, 0, 1.0};
Point(18) = {0.049125, 0.747397, 0, 1.0};
Point(19) = {0.045390, 0.747840, 0, 1.0};
Point(20) = {0.041653, 0.748233, 0, 1.0};
Point(21) = {0.037914, 0.748579, 0, 1.0};
Point(22) = {0.034173, 0.748884, 0, 1.0};
Point(23) = {0.030431, 0.749150, 0, 1.0};
Point(24) = {0.026687, 0.749379, 0, 1.0};
Point(25) = {0.022942, 0.749573, 0, 1.0};
Point(26) = {0.019195, 0.749730, 0, 1.0};
Point(27) = {0.015447, 0.749853, 0, 1.0};
Point(28) = {0.011698, 0.749940, 0, 1.0};
Point(29) = {0.007947, 0.749990, 0, 1.0};
Point(30) = {0.004194, 0.750000, 0, 1.0};
Point(31) = {0.000439, 0.749965, 0, 1.0};
Point(32) = {-0.003317, 0.749882, 0, 1.0};
Point(33) = {-0.007076, 0.749746, 0, 1.0};
Point(34) = {-0.010837, 0.749553, 0, 1.0};
Point(35) = {-0.014601, 0.749291, 0, 1.0};
Point(36) = {-0.018368, 0.748937, 0, 1.0};
Point(37) = {-0.022141, 0.748461, 0, 1.0};
Point(38) = {-0.025921, 0.747799, 0, 1.0};
Point(39) = {-0.029716, 0.746793, 0, 1.0};
Point(40) = {-0.031623, 0.746036, 0, 1.0};
Point(41) = {-0.033542, 0.745000, 0, 1.0};
Point(42) = {-0.035478, 0.743554, 0, 1.0};
Point(43) = {-0.036658, 0.742226, 0, 1.0};
Point(44) = {-0.037142, 0.741398, 0, 1.0};
Point(45) = {-0.037494, 0.740138, 0, 1.0};
Point(46) = {-0.037239, 0.739038, 0, 1.0};
Point(47) = {-0.036812, 0.738464, 0, 1.0};
Point(48) = {-0.035720, 0.737629, 0, 1.0};
Point(49) = {-0.033879, 0.736751, 0, 1.0};
Point(50) = {-0.032029, 0.736103, 0, 1.0};
Point(51) = {-0.030175, 0.735569, 0, 1.0};
Point(52) = {-0.026457, 0.734693, 0, 1.0};
Point(53) = {-0.022734, 0.733971, 0, 1.0};
Point(54) = {-0.019006, 0.733348, 0, 1.0};
Point(55) = {-0.015275, 0.732803, 0, 1.0};
Point(56) = {-0.011542, 0.732323, 0, 1.0};
Point(57) = {-0.007806, 0.731899, 0, 1.0};
Point(58) = {-0.004068, 0.731525, 0, 1.0};
Point(59) = {-0.000328, 0.731193, 0, 1.0};
Point(60) = {0.003413, 0.730900, 0, 1.0};
Point(61) = {0.007155, 0.730639, 0, 1.0};
Point(62) = {0.010899, 0.730408, 0, 1.0};
Point(63) = {0.014644, 0.730208, 0, 1.0};
Point(64) = {0.018390, 0.730039, 0, 1.0};
Point(65) = {0.022138, 0.729907, 0, 1.0};
Point(66) = {0.025887, 0.729815, 0, 1.0};
Point(67) = {0.029638, 0.729766, 0, 1.0};
Point(68) = {0.033391, 0.729763, 0, 1.0};
Point(69) = {0.037146, 0.729805, 0, 1.0};
Point(70) = {0.040903, 0.729891, 0, 1.0};
Point(71) = {0.044661, 0.730021, 0, 1.0};
Point(72) = {0.048422, 0.730200, 0, 1.0};
Point(73) = {0.052184, 0.730427, 0, 1.0};
Point(74) = {0.055948, 0.730700, 0, 1.0};
Point(75) = {0.059714, 0.731013, 0, 1.0};
Point(76) = {0.063482, 0.731356, 0, 1.0};
Point(77) = {0.067249, 0.731718, 0, 1.0};
Point(78) = {0.071018, 0.732089, 0, 1.0};
Point(79) = {0.074786, 0.732461, 0, 1.0};
Point(80) = {0.078554, 0.732821, 0, 1.0};
Point(81) = {0.082321, 0.733157, 0, 1.0};
Point(82) = {0.086086, 0.733451, 0, 1.0};
Point(83) = {0.089849, 0.733689, 0, 1.0};
Point(84) = {0.093609, 0.733858, 0, 1.0};
Point(85) = {0.097366, 0.733944, 0, 1.0};
Point(86) = {0.101118, 0.733930, 0, 1.0};
Point(87) = {0.104866, 0.733790, 0, 1.0};
Point(88) = {0.108606, 0.733484, 0, 1.0};
Point(89) = {0.112338, 0.732954, 0, 1.0};
Point(90) = {-0.112372, -0.733791, 0, 1.0};
Point(91) = {-0.108657, -0.734719, 0, 1.0};
Point(92) = {-0.104941, -0.735640, 0, 1.0};
Point(93) = {-0.101226, -0.736562, 0, 1.0};
Point(94) = {-0.097510, -0.737483, 0, 1.0};
Point(95) = {-0.093795, -0.738401, 0, 1.0};
Point(96) = {-0.090079, -0.739316, 0, 1.0};
Point(97) = {-0.086363, -0.740223, 0, 1.0};
Point(98) = {-0.082646, -0.741109, 0, 1.0};
Point(99) = {-0.078928, -0.741970, 0, 1.0};
Point(100) = {-0.075209, -0.742800, 0, 1.0};
Point(101) = {-0.071488, -0.743597, 0, 1.0};
Point(102) = {-0.067766, -0.744354, 0, 1.0};
Point(103) = {-0.064042, -0.745069, 0, 1.0};
Point(104) = {-0.060316, -0.745734, 0, 1.0};
Point(105) = {-0.056588, -0.746345, 0, 1.0};
Point(106) = {-0.052858, -0.746899, 0, 1.0};
Point(107) = {-0.049125, -0.747397, 0, 1.0};
Point(108) = {-0.045390, -0.747840, 0, 1.0};
Point(109) = {-0.041653, -0.748233, 0, 1.0};
Point(110) = {-0.037914, -0.748579, 0, 1.0};
Point(111) = {-0.034173, -0.748884, 0, 1.0};
Point(112) = {-0.030431, -0.749150, 0, 1.0};
Point(113) = {-0.026687, -0.749379, 0, 1.0};
Point(114) = {-0.022942, -0.749573, 0, 1.0};
Point(115) = {-0.019195, -0.749730, 0, 1.0};
Point(116) = {-0.015447, -0.749853, 0, 1.0};
Point(117) = {-0.011698, -0.749940, 0, 1.0};
Point(118) = {-0.007947, -0.749990, 0, 1.0};
Point(119) = {-0.004194, -0.750000, 0, 1.0};
Point(120) = {-0.000439, -0.749965, 0, 1.0};
Point(121) = {0.003317, -0.749882, 0, 1.0};
Point(122) = {0.007076, -0.749746, 0, 1.0};
Point(123) = {0.010837, -0.749553, 0, 1.0};
Point(124) = {0.014601, -0.749291, 0, 1.0};
Point(125) = {0.018368, -0.748937, 0, 1.0};
Point(126) = {0.022141, -0.748461, 0, 1.0};
Point(127) = {0.025921, -0.747799, 0, 1.0};
Point(128) = {0.029716, -0.746793, 0, 1.0};
Point(129) = {0.031623, -0.746036, 0, 1.0};
Point(130) = {0.033542, -0.745000, 0, 1.0};
Point(131) = {0.035478, -0.743554, 0, 1.0};
Point(132) = {0.036658, -0.742226, 0, 1.0};
Point(133) = {0.037142, -0.741398, 0, 1.0};
Point(134) = {0.037494, -0.740138, 0, 1.0};
Point(135) = {0.037239, -0.739038, 0, 1.0};
Point(136) = {0.036812, -0.738464, 0, 1.0};
Point(137) = {0.035720, -0.737629, 0, 1.0};
Point(138) = {0.033879, -0.736751, 0, 1.0};
Point(139) = {0.032029, -0.736103, 0, 1.0};
Point(140) = {0.030175, -0.735569, 0, 1.0};
Point(141) = {0.026457, -0.734693, 0, 1.0};
Point(142) = {0.022734, -0.733971, 0, 1.0};
Point(143) = {0.019006, -0.733348, 0, 1.0};
Point(144) = {0.015275, -0.732803, 0, 1.0};
Point(145) = {0.011542, -0.732323, 0, 1.0};
Point(146) = {0.007806, -0.731899, 0, 1.0};
Point(147) = {0.004068, -0.731525, 0, 1.0};
Point(148) = {0.000328, -0.731193, 0, 1.0};
Point(149) = {-0.003413, -0.730900, 0, 1.0};
Point(150) = {-0.007155, -0.730639, 0, 1.0};
Point(151) = {-0.010899, -0.730408, 0, 1.0};
Point(152) = {-0.014644, -0.730208, 0, 1.0};
Point(153) = {-0.018390, -0.730039, 0, 1.0};
Point(154) = {-0.022138, -0.729907, 0, 1.0};
Point(155) = {-0.025887, -0.729815, 0, 1.0};
Point(156) = {-0.029638, -0.729766, 0, 1.0};
Point(157) = {-0.033391, -0.729763, 0, 1.0};
Point(158) = {-0.037146, -0.729805, 0, 1.0};
Point(159) = {-0.040903, -0.729891, 0, 1.0};
Point(160) = {-0.044661, -0.730021, 0, 1.0};
Point(161) = {-0.048422, -0.730200, 0, 1.0};
Point(162) = {-0.052184, -0.730427, 0, 1.0};
Point(163) = {-0.055948, -0.730700, 0, 1.0};
Point(164) = {-0.059714, -0.731013, 0, 1.0};
Point(165) = {-0.063482, -0.731356, 0, 1.0};
Point(166) = {-0.067249, -0.731718, 0, 1.0};
Point(167) = {-0.071018, -0.732089, 0, 1.0};
Point(168) = {-0.074786, -0.732461, 0, 1.0};
Point(169) = {-0.078554, -0.732821, 0, 1.0};
Point(170) = {-0.082321, -0.733157, 0, 1.0};
Point(171) = {-0.086086, -0.733451, 0, 1.0};
Point(172) = {-0.089849, -0.733689, 0, 1.0};
Point(173) = {-0.093609, -0.733858, 0, 1.0};
Point(174) = {-0.097366, -0.733944, 0, 1.0};
Point(175) = {-0.101118, -0.733930, 0, 1.0};
Point(176) = {-0.104866, -0.733790, 0, 1.0};
Point(177) = {-0.108606, -0.733484, 0, 1.0};
Point(178) = {-0.112338, -0.732954, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
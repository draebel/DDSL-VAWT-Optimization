SetFactory("OpenCASCADE");

Point(1) = {0.110859, 0.721876, 0, 1.0};
Point(2) = {0.107200, 0.722736, 0, 1.0};
Point(3) = {0.103564, 0.723625, 0, 1.0};
Point(4) = {0.099933, 0.724545, 0, 1.0};
Point(5) = {0.096307, 0.725497, 0, 1.0};
Point(6) = {0.092689, 0.726478, 0, 1.0};
Point(7) = {0.089088, 0.727482, 0, 1.0};
Point(8) = {0.085501, 0.728512, 0, 1.0};
Point(9) = {0.081928, 0.729569, 0, 1.0};
Point(10) = {0.078372, 0.730651, 0, 1.0};
Point(11) = {0.074794, 0.731770, 0, 1.0};
Point(12) = {0.071203, 0.732913, 0, 1.0};
Point(13) = {0.067626, 0.734061, 0, 1.0};
Point(14) = {0.064034, 0.735208, 0, 1.0};
Point(15) = {0.060425, 0.736341, 0, 1.0};
Point(16) = {0.056813, 0.737446, 0, 1.0};
Point(17) = {0.053193, 0.738520, 0, 1.0};
Point(18) = {0.049570, 0.739556, 0, 1.0};
Point(19) = {0.045943, 0.740556, 0, 1.0};
Point(20) = {0.042307, 0.741517, 0, 1.0};
Point(21) = {0.038660, 0.742435, 0, 1.0};
Point(22) = {0.035014, 0.743297, 0, 1.0};
Point(23) = {0.031309, 0.744109, 0, 1.0};
Point(24) = {0.027583, 0.744857, 0, 1.0};
Point(25) = {0.023875, 0.745536, 0, 1.0};
Point(26) = {0.020148, 0.746158, 0, 1.0};
Point(27) = {0.016438, 0.746727, 0, 1.0};
Point(28) = {0.008997, 0.747743, 0, 1.0};
Point(29) = {0.001506, 0.748625, 0, 1.0};
Point(30) = {-0.002261, 0.749015, 0, 1.0};
Point(31) = {-0.006034, 0.749364, 0, 1.0};
Point(32) = {-0.009832, 0.749661, 0, 1.0};
Point(33) = {-0.013648, 0.749885, 0, 1.0};
Point(34) = {-0.017520, 0.750000, 0, 1.0};
Point(35) = {-0.021450, 0.749945, 0, 1.0};
Point(36) = {-0.025487, 0.749625, 0, 1.0};
Point(37) = {-0.029590, 0.748890, 0, 1.0};
Point(38) = {-0.033380, 0.747618, 0, 1.0};
Point(39) = {-0.035740, 0.746272, 0, 1.0};
Point(40) = {-0.036882, 0.745220, 0, 1.0};
Point(41) = {-0.037500, 0.744001, 0, 1.0};
Point(42) = {-0.037159, 0.742798, 0, 1.0};
Point(43) = {-0.036014, 0.741897, 0, 1.0};
Point(44) = {-0.035709, 0.741734, 0, 1.0};
Point(45) = {-0.034499, 0.741203, 0, 1.0};
Point(46) = {-0.032947, 0.740673, 0, 1.0};
Point(47) = {-0.029123, 0.739710, 0, 1.0};
Point(48) = {-0.025649, 0.739045, 0, 1.0};
Point(49) = {-0.022161, 0.738461, 0, 1.0};
Point(50) = {-0.018607, 0.737889, 0, 1.0};
Point(51) = {-0.015026, 0.737296, 0, 1.0};
Point(52) = {-0.011410, 0.736666, 0, 1.0};
Point(53) = {-0.007792, 0.736011, 0, 1.0};
Point(54) = {-0.004160, 0.735343, 0, 1.0};
Point(55) = {-0.000529, 0.734674, 0, 1.0};
Point(56) = {0.006764, 0.733344, 0, 1.0};
Point(57) = {0.014089, 0.732042, 0, 1.0};
Point(58) = {0.017755, 0.731411, 0, 1.0};
Point(59) = {0.021400, 0.730803, 0, 1.0};
Point(60) = {0.025058, 0.730216, 0, 1.0};
Point(61) = {0.028692, 0.729660, 0, 1.0};
Point(62) = {0.032341, 0.729131, 0, 1.0};
Point(63) = {0.036046, 0.728628, 0, 1.0};
Point(64) = {0.039744, 0.728153, 0, 1.0};
Point(65) = {0.043452, 0.727703, 0, 1.0};
Point(66) = {0.047165, 0.727270, 0, 1.0};
Point(67) = {0.050878, 0.726852, 0, 1.0};
Point(68) = {0.054590, 0.726442, 0, 1.0};
Point(69) = {0.058306, 0.726037, 0, 1.0};
Point(70) = {0.062020, 0.725633, 0, 1.0};
Point(71) = {0.065748, 0.725228, 0, 1.0};
Point(72) = {0.069493, 0.724822, 0, 1.0};
Point(73) = {0.073224, 0.724422, 0, 1.0};
Point(74) = {0.076973, 0.724028, 0, 1.0};
Point(75) = {0.080751, 0.723646, 0, 1.0};
Point(76) = {0.084521, 0.723287, 0, 1.0};
Point(77) = {0.088286, 0.722959, 0, 1.0};
Point(78) = {0.092046, 0.722667, 0, 1.0};
Point(79) = {0.095800, 0.722413, 0, 1.0};
Point(80) = {0.099550, 0.722169, 0, 1.0};
Point(81) = {0.103303, 0.721930, 0, 1.0};
Point(82) = {0.107059, 0.721722, 0, 1.0};
Point(83) = {0.110824, 0.721641, 0, 1.0};
Point(84) = {-0.110859, -0.721876, 0, 1.0};
Point(85) = {-0.107200, -0.722736, 0, 1.0};
Point(86) = {-0.103564, -0.723625, 0, 1.0};
Point(87) = {-0.099933, -0.724545, 0, 1.0};
Point(88) = {-0.096307, -0.725497, 0, 1.0};
Point(89) = {-0.092689, -0.726478, 0, 1.0};
Point(90) = {-0.089088, -0.727482, 0, 1.0};
Point(91) = {-0.085501, -0.728512, 0, 1.0};
Point(92) = {-0.081928, -0.729569, 0, 1.0};
Point(93) = {-0.078372, -0.730651, 0, 1.0};
Point(94) = {-0.074794, -0.731770, 0, 1.0};
Point(95) = {-0.071203, -0.732913, 0, 1.0};
Point(96) = {-0.067626, -0.734061, 0, 1.0};
Point(97) = {-0.064034, -0.735208, 0, 1.0};
Point(98) = {-0.060425, -0.736341, 0, 1.0};
Point(99) = {-0.056813, -0.737446, 0, 1.0};
Point(100) = {-0.053193, -0.738520, 0, 1.0};
Point(101) = {-0.049570, -0.739556, 0, 1.0};
Point(102) = {-0.045943, -0.740556, 0, 1.0};
Point(103) = {-0.042307, -0.741517, 0, 1.0};
Point(104) = {-0.038660, -0.742435, 0, 1.0};
Point(105) = {-0.035014, -0.743297, 0, 1.0};
Point(106) = {-0.031309, -0.744109, 0, 1.0};
Point(107) = {-0.027583, -0.744857, 0, 1.0};
Point(108) = {-0.023875, -0.745536, 0, 1.0};
Point(109) = {-0.020148, -0.746158, 0, 1.0};
Point(110) = {-0.016438, -0.746727, 0, 1.0};
Point(111) = {-0.008997, -0.747743, 0, 1.0};
Point(112) = {-0.001506, -0.748625, 0, 1.0};
Point(113) = {0.002261, -0.749015, 0, 1.0};
Point(114) = {0.006034, -0.749364, 0, 1.0};
Point(115) = {0.009832, -0.749661, 0, 1.0};
Point(116) = {0.013648, -0.749885, 0, 1.0};
Point(117) = {0.017520, -0.750000, 0, 1.0};
Point(118) = {0.021450, -0.749945, 0, 1.0};
Point(119) = {0.025487, -0.749625, 0, 1.0};
Point(120) = {0.029590, -0.748890, 0, 1.0};
Point(121) = {0.033380, -0.747618, 0, 1.0};
Point(122) = {0.035740, -0.746272, 0, 1.0};
Point(123) = {0.036882, -0.745220, 0, 1.0};
Point(124) = {0.037500, -0.744001, 0, 1.0};
Point(125) = {0.037159, -0.742798, 0, 1.0};
Point(126) = {0.036014, -0.741897, 0, 1.0};
Point(127) = {0.035709, -0.741734, 0, 1.0};
Point(128) = {0.034499, -0.741203, 0, 1.0};
Point(129) = {0.032947, -0.740673, 0, 1.0};
Point(130) = {0.029123, -0.739710, 0, 1.0};
Point(131) = {0.025649, -0.739045, 0, 1.0};
Point(132) = {0.022161, -0.738461, 0, 1.0};
Point(133) = {0.018607, -0.737889, 0, 1.0};
Point(134) = {0.015026, -0.737296, 0, 1.0};
Point(135) = {0.011410, -0.736666, 0, 1.0};
Point(136) = {0.007792, -0.736011, 0, 1.0};
Point(137) = {0.004160, -0.735343, 0, 1.0};
Point(138) = {0.000529, -0.734674, 0, 1.0};
Point(139) = {-0.006764, -0.733344, 0, 1.0};
Point(140) = {-0.014089, -0.732042, 0, 1.0};
Point(141) = {-0.017755, -0.731411, 0, 1.0};
Point(142) = {-0.021400, -0.730803, 0, 1.0};
Point(143) = {-0.025058, -0.730216, 0, 1.0};
Point(144) = {-0.028692, -0.729660, 0, 1.0};
Point(145) = {-0.032341, -0.729131, 0, 1.0};
Point(146) = {-0.036046, -0.728628, 0, 1.0};
Point(147) = {-0.039744, -0.728153, 0, 1.0};
Point(148) = {-0.043452, -0.727703, 0, 1.0};
Point(149) = {-0.047165, -0.727270, 0, 1.0};
Point(150) = {-0.050878, -0.726852, 0, 1.0};
Point(151) = {-0.054590, -0.726442, 0, 1.0};
Point(152) = {-0.058306, -0.726037, 0, 1.0};
Point(153) = {-0.062020, -0.725633, 0, 1.0};
Point(154) = {-0.065748, -0.725228, 0, 1.0};
Point(155) = {-0.069493, -0.724822, 0, 1.0};
Point(156) = {-0.073224, -0.724422, 0, 1.0};
Point(157) = {-0.076973, -0.724028, 0, 1.0};
Point(158) = {-0.080751, -0.723646, 0, 1.0};
Point(159) = {-0.084521, -0.723287, 0, 1.0};
Point(160) = {-0.088286, -0.722959, 0, 1.0};
Point(161) = {-0.092046, -0.722667, 0, 1.0};
Point(162) = {-0.095800, -0.722413, 0, 1.0};
Point(163) = {-0.099550, -0.722169, 0, 1.0};
Point(164) = {-0.103303, -0.721930, 0, 1.0};
Point(165) = {-0.107059, -0.721722, 0, 1.0};
Point(166) = {-0.110824, -0.721641, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:56};
Spline(3) = {56:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:112};
Spline(6) = {112:139};
Spline(7) = {139:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
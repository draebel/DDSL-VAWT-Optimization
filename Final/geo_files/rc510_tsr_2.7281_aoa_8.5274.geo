SetFactory("OpenCASCADE");

Point(1) = {0.147812, 0.712501, 0, 1.0};
Point(2) = {0.142934, 0.713649, 0, 1.0};
Point(3) = {0.138085, 0.714833, 0, 1.0};
Point(4) = {0.133244, 0.716060, 0, 1.0};
Point(5) = {0.128409, 0.717329, 0, 1.0};
Point(6) = {0.123586, 0.718637, 0, 1.0};
Point(7) = {0.118784, 0.719977, 0, 1.0};
Point(8) = {0.114002, 0.721350, 0, 1.0};
Point(9) = {0.109238, 0.722758, 0, 1.0};
Point(10) = {0.104496, 0.724202, 0, 1.0};
Point(11) = {0.099725, 0.725693, 0, 1.0};
Point(12) = {0.094937, 0.727218, 0, 1.0};
Point(13) = {0.090168, 0.728748, 0, 1.0};
Point(14) = {0.085378, 0.730277, 0, 1.0};
Point(15) = {0.080566, 0.731788, 0, 1.0};
Point(16) = {0.075750, 0.733262, 0, 1.0};
Point(17) = {0.070924, 0.734693, 0, 1.0};
Point(18) = {0.066093, 0.736075, 0, 1.0};
Point(19) = {0.061257, 0.737408, 0, 1.0};
Point(20) = {0.056410, 0.738689, 0, 1.0};
Point(21) = {0.051546, 0.739913, 0, 1.0};
Point(22) = {0.046686, 0.741063, 0, 1.0};
Point(23) = {0.041746, 0.742146, 0, 1.0};
Point(24) = {0.036777, 0.743143, 0, 1.0};
Point(25) = {0.031833, 0.744048, 0, 1.0};
Point(26) = {0.026864, 0.744877, 0, 1.0};
Point(27) = {0.021917, 0.745636, 0, 1.0};
Point(28) = {0.011996, 0.746990, 0, 1.0};
Point(29) = {0.002009, 0.748166, 0, 1.0};
Point(30) = {-0.003014, 0.748687, 0, 1.0};
Point(31) = {-0.008045, 0.749152, 0, 1.0};
Point(32) = {-0.013110, 0.749548, 0, 1.0};
Point(33) = {-0.018197, 0.749846, 0, 1.0};
Point(34) = {-0.023360, 0.750000, 0, 1.0};
Point(35) = {-0.028600, 0.749927, 0, 1.0};
Point(36) = {-0.033983, 0.749499, 0, 1.0};
Point(37) = {-0.039453, 0.748520, 0, 1.0};
Point(38) = {-0.044507, 0.746824, 0, 1.0};
Point(39) = {-0.047654, 0.745029, 0, 1.0};
Point(40) = {-0.049176, 0.743626, 0, 1.0};
Point(41) = {-0.050000, 0.742001, 0, 1.0};
Point(42) = {-0.049545, 0.740398, 0, 1.0};
Point(43) = {-0.048019, 0.739196, 0, 1.0};
Point(44) = {-0.047612, 0.738979, 0, 1.0};
Point(45) = {-0.045998, 0.738270, 0, 1.0};
Point(46) = {-0.043929, 0.737563, 0, 1.0};
Point(47) = {-0.038831, 0.736281, 0, 1.0};
Point(48) = {-0.034198, 0.735393, 0, 1.0};
Point(49) = {-0.029548, 0.734615, 0, 1.0};
Point(50) = {-0.024810, 0.733853, 0, 1.0};
Point(51) = {-0.020034, 0.733062, 0, 1.0};
Point(52) = {-0.015213, 0.732222, 0, 1.0};
Point(53) = {-0.010390, 0.731348, 0, 1.0};
Point(54) = {-0.005547, 0.730457, 0, 1.0};
Point(55) = {-0.000705, 0.729565, 0, 1.0};
Point(56) = {0.009018, 0.727792, 0, 1.0};
Point(57) = {0.018785, 0.726056, 0, 1.0};
Point(58) = {0.023673, 0.725215, 0, 1.0};
Point(59) = {0.028533, 0.724404, 0, 1.0};
Point(60) = {0.033410, 0.723621, 0, 1.0};
Point(61) = {0.038255, 0.722880, 0, 1.0};
Point(62) = {0.043121, 0.722175, 0, 1.0};
Point(63) = {0.048061, 0.721503, 0, 1.0};
Point(64) = {0.052992, 0.720871, 0, 1.0};
Point(65) = {0.057936, 0.720270, 0, 1.0};
Point(66) = {0.062886, 0.719693, 0, 1.0};
Point(67) = {0.067837, 0.719135, 0, 1.0};
Point(68) = {0.072786, 0.718589, 0, 1.0};
Point(69) = {0.077741, 0.718049, 0, 1.0};
Point(70) = {0.082694, 0.717511, 0, 1.0};
Point(71) = {0.087665, 0.716971, 0, 1.0};
Point(72) = {0.092657, 0.716430, 0, 1.0};
Point(73) = {0.097632, 0.715896, 0, 1.0};
Point(74) = {0.102631, 0.715370, 0, 1.0};
Point(75) = {0.107668, 0.714861, 0, 1.0};
Point(76) = {0.112695, 0.714383, 0, 1.0};
Point(77) = {0.117715, 0.713946, 0, 1.0};
Point(78) = {0.122728, 0.713556, 0, 1.0};
Point(79) = {0.127733, 0.713218, 0, 1.0};
Point(80) = {0.132734, 0.712893, 0, 1.0};
Point(81) = {0.137737, 0.712574, 0, 1.0};
Point(82) = {0.142745, 0.712297, 0, 1.0};
Point(83) = {0.147766, 0.712188, 0, 1.0};
Point(84) = {-0.147812, -0.712501, 0, 1.0};
Point(85) = {-0.142934, -0.713649, 0, 1.0};
Point(86) = {-0.138085, -0.714833, 0, 1.0};
Point(87) = {-0.133244, -0.716060, 0, 1.0};
Point(88) = {-0.128409, -0.717329, 0, 1.0};
Point(89) = {-0.123586, -0.718637, 0, 1.0};
Point(90) = {-0.118784, -0.719977, 0, 1.0};
Point(91) = {-0.114002, -0.721350, 0, 1.0};
Point(92) = {-0.109238, -0.722758, 0, 1.0};
Point(93) = {-0.104496, -0.724202, 0, 1.0};
Point(94) = {-0.099725, -0.725693, 0, 1.0};
Point(95) = {-0.094937, -0.727218, 0, 1.0};
Point(96) = {-0.090168, -0.728748, 0, 1.0};
Point(97) = {-0.085378, -0.730277, 0, 1.0};
Point(98) = {-0.080566, -0.731788, 0, 1.0};
Point(99) = {-0.075750, -0.733262, 0, 1.0};
Point(100) = {-0.070924, -0.734693, 0, 1.0};
Point(101) = {-0.066093, -0.736075, 0, 1.0};
Point(102) = {-0.061257, -0.737408, 0, 1.0};
Point(103) = {-0.056410, -0.738689, 0, 1.0};
Point(104) = {-0.051546, -0.739913, 0, 1.0};
Point(105) = {-0.046686, -0.741063, 0, 1.0};
Point(106) = {-0.041746, -0.742146, 0, 1.0};
Point(107) = {-0.036777, -0.743143, 0, 1.0};
Point(108) = {-0.031833, -0.744048, 0, 1.0};
Point(109) = {-0.026864, -0.744877, 0, 1.0};
Point(110) = {-0.021917, -0.745636, 0, 1.0};
Point(111) = {-0.011996, -0.746990, 0, 1.0};
Point(112) = {-0.002009, -0.748166, 0, 1.0};
Point(113) = {0.003014, -0.748687, 0, 1.0};
Point(114) = {0.008045, -0.749152, 0, 1.0};
Point(115) = {0.013110, -0.749548, 0, 1.0};
Point(116) = {0.018197, -0.749846, 0, 1.0};
Point(117) = {0.023360, -0.750000, 0, 1.0};
Point(118) = {0.028600, -0.749927, 0, 1.0};
Point(119) = {0.033983, -0.749499, 0, 1.0};
Point(120) = {0.039453, -0.748520, 0, 1.0};
Point(121) = {0.044507, -0.746824, 0, 1.0};
Point(122) = {0.047654, -0.745029, 0, 1.0};
Point(123) = {0.049176, -0.743626, 0, 1.0};
Point(124) = {0.050000, -0.742001, 0, 1.0};
Point(125) = {0.049545, -0.740398, 0, 1.0};
Point(126) = {0.048019, -0.739196, 0, 1.0};
Point(127) = {0.047612, -0.738979, 0, 1.0};
Point(128) = {0.045998, -0.738270, 0, 1.0};
Point(129) = {0.043929, -0.737563, 0, 1.0};
Point(130) = {0.038831, -0.736281, 0, 1.0};
Point(131) = {0.034198, -0.735393, 0, 1.0};
Point(132) = {0.029548, -0.734615, 0, 1.0};
Point(133) = {0.024810, -0.733853, 0, 1.0};
Point(134) = {0.020034, -0.733062, 0, 1.0};
Point(135) = {0.015213, -0.732222, 0, 1.0};
Point(136) = {0.010390, -0.731348, 0, 1.0};
Point(137) = {0.005547, -0.730457, 0, 1.0};
Point(138) = {0.000705, -0.729565, 0, 1.0};
Point(139) = {-0.009018, -0.727792, 0, 1.0};
Point(140) = {-0.018785, -0.726056, 0, 1.0};
Point(141) = {-0.023673, -0.725215, 0, 1.0};
Point(142) = {-0.028533, -0.724404, 0, 1.0};
Point(143) = {-0.033410, -0.723621, 0, 1.0};
Point(144) = {-0.038255, -0.722880, 0, 1.0};
Point(145) = {-0.043121, -0.722175, 0, 1.0};
Point(146) = {-0.048061, -0.721503, 0, 1.0};
Point(147) = {-0.052992, -0.720871, 0, 1.0};
Point(148) = {-0.057936, -0.720270, 0, 1.0};
Point(149) = {-0.062886, -0.719693, 0, 1.0};
Point(150) = {-0.067837, -0.719135, 0, 1.0};
Point(151) = {-0.072786, -0.718589, 0, 1.0};
Point(152) = {-0.077741, -0.718049, 0, 1.0};
Point(153) = {-0.082694, -0.717511, 0, 1.0};
Point(154) = {-0.087665, -0.716971, 0, 1.0};
Point(155) = {-0.092657, -0.716430, 0, 1.0};
Point(156) = {-0.097632, -0.715896, 0, 1.0};
Point(157) = {-0.102631, -0.715370, 0, 1.0};
Point(158) = {-0.107668, -0.714861, 0, 1.0};
Point(159) = {-0.112695, -0.714383, 0, 1.0};
Point(160) = {-0.117715, -0.713946, 0, 1.0};
Point(161) = {-0.122728, -0.713556, 0, 1.0};
Point(162) = {-0.127733, -0.713218, 0, 1.0};
Point(163) = {-0.132734, -0.712893, 0, 1.0};
Point(164) = {-0.137737, -0.712574, 0, 1.0};
Point(165) = {-0.142745, -0.712297, 0, 1.0};
Point(166) = {-0.147766, -0.712188, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:56};
Spline(3) = {56:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:112};
Spline(6) = {112:139};
Spline(7) = {139:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073906, 0.731250, 0, 1.0};
Point(2) = {0.071467, 0.731824, 0, 1.0};
Point(3) = {0.069042, 0.732416, 0, 1.0};
Point(4) = {0.066622, 0.733030, 0, 1.0};
Point(5) = {0.064204, 0.733665, 0, 1.0};
Point(6) = {0.061793, 0.734318, 0, 1.0};
Point(7) = {0.059392, 0.734988, 0, 1.0};
Point(8) = {0.057001, 0.735675, 0, 1.0};
Point(9) = {0.054619, 0.736379, 0, 1.0};
Point(10) = {0.052248, 0.737101, 0, 1.0};
Point(11) = {0.049863, 0.737846, 0, 1.0};
Point(12) = {0.047469, 0.738609, 0, 1.0};
Point(13) = {0.045084, 0.739374, 0, 1.0};
Point(14) = {0.042689, 0.740139, 0, 1.0};
Point(15) = {0.040283, 0.740894, 0, 1.0};
Point(16) = {0.037875, 0.741631, 0, 1.0};
Point(17) = {0.035462, 0.742346, 0, 1.0};
Point(18) = {0.033047, 0.743038, 0, 1.0};
Point(19) = {0.030629, 0.743704, 0, 1.0};
Point(20) = {0.028205, 0.744345, 0, 1.0};
Point(21) = {0.025773, 0.744957, 0, 1.0};
Point(22) = {0.023343, 0.745531, 0, 1.0};
Point(23) = {0.020873, 0.746073, 0, 1.0};
Point(24) = {0.018389, 0.746572, 0, 1.0};
Point(25) = {0.015917, 0.747024, 0, 1.0};
Point(26) = {0.013432, 0.747439, 0, 1.0};
Point(27) = {0.010958, 0.747818, 0, 1.0};
Point(28) = {0.005998, 0.748495, 0, 1.0};
Point(29) = {0.001004, 0.749083, 0, 1.0};
Point(30) = {-0.001507, 0.749344, 0, 1.0};
Point(31) = {-0.004023, 0.749576, 0, 1.0};
Point(32) = {-0.006555, 0.749774, 0, 1.0};
Point(33) = {-0.009098, 0.749923, 0, 1.0};
Point(34) = {-0.011680, 0.750000, 0, 1.0};
Point(35) = {-0.014300, 0.749964, 0, 1.0};
Point(36) = {-0.016991, 0.749750, 0, 1.0};
Point(37) = {-0.019726, 0.749260, 0, 1.0};
Point(38) = {-0.022254, 0.748412, 0, 1.0};
Point(39) = {-0.023827, 0.747515, 0, 1.0};
Point(40) = {-0.024588, 0.746813, 0, 1.0};
Point(41) = {-0.025000, 0.746000, 0, 1.0};
Point(42) = {-0.024773, 0.745199, 0, 1.0};
Point(43) = {-0.024009, 0.744598, 0, 1.0};
Point(44) = {-0.023806, 0.744490, 0, 1.0};
Point(45) = {-0.022999, 0.744135, 0, 1.0};
Point(46) = {-0.021965, 0.743782, 0, 1.0};
Point(47) = {-0.019415, 0.743140, 0, 1.0};
Point(48) = {-0.017099, 0.742696, 0, 1.0};
Point(49) = {-0.014774, 0.742307, 0, 1.0};
Point(50) = {-0.012405, 0.741926, 0, 1.0};
Point(51) = {-0.010017, 0.741531, 0, 1.0};
Point(52) = {-0.007606, 0.741111, 0, 1.0};
Point(53) = {-0.005195, 0.740674, 0, 1.0};
Point(54) = {-0.002774, 0.740229, 0, 1.0};
Point(55) = {-0.000353, 0.739783, 0, 1.0};
Point(56) = {0.004509, 0.738896, 0, 1.0};
Point(57) = {0.009393, 0.738028, 0, 1.0};
Point(58) = {0.011836, 0.737608, 0, 1.0};
Point(59) = {0.014267, 0.737202, 0, 1.0};
Point(60) = {0.016705, 0.736811, 0, 1.0};
Point(61) = {0.019128, 0.736440, 0, 1.0};
Point(62) = {0.021560, 0.736088, 0, 1.0};
Point(63) = {0.024030, 0.735752, 0, 1.0};
Point(64) = {0.026496, 0.735436, 0, 1.0};
Point(65) = {0.028968, 0.735135, 0, 1.0};
Point(66) = {0.031443, 0.734847, 0, 1.0};
Point(67) = {0.033919, 0.734568, 0, 1.0};
Point(68) = {0.036393, 0.734295, 0, 1.0};
Point(69) = {0.038870, 0.734025, 0, 1.0};
Point(70) = {0.041347, 0.733755, 0, 1.0};
Point(71) = {0.043832, 0.733486, 0, 1.0};
Point(72) = {0.046328, 0.733215, 0, 1.0};
Point(73) = {0.048816, 0.732948, 0, 1.0};
Point(74) = {0.051315, 0.732685, 0, 1.0};
Point(75) = {0.053834, 0.732431, 0, 1.0};
Point(76) = {0.056347, 0.732192, 0, 1.0};
Point(77) = {0.058857, 0.731973, 0, 1.0};
Point(78) = {0.061364, 0.731778, 0, 1.0};
Point(79) = {0.063866, 0.731609, 0, 1.0};
Point(80) = {0.066367, 0.731446, 0, 1.0};
Point(81) = {0.068869, 0.731287, 0, 1.0};
Point(82) = {0.071372, 0.731148, 0, 1.0};
Point(83) = {0.073883, 0.731094, 0, 1.0};
Point(84) = {-0.073906, -0.731250, 0, 1.0};
Point(85) = {-0.071467, -0.731824, 0, 1.0};
Point(86) = {-0.069042, -0.732416, 0, 1.0};
Point(87) = {-0.066622, -0.733030, 0, 1.0};
Point(88) = {-0.064204, -0.733665, 0, 1.0};
Point(89) = {-0.061793, -0.734318, 0, 1.0};
Point(90) = {-0.059392, -0.734988, 0, 1.0};
Point(91) = {-0.057001, -0.735675, 0, 1.0};
Point(92) = {-0.054619, -0.736379, 0, 1.0};
Point(93) = {-0.052248, -0.737101, 0, 1.0};
Point(94) = {-0.049863, -0.737846, 0, 1.0};
Point(95) = {-0.047469, -0.738609, 0, 1.0};
Point(96) = {-0.045084, -0.739374, 0, 1.0};
Point(97) = {-0.042689, -0.740139, 0, 1.0};
Point(98) = {-0.040283, -0.740894, 0, 1.0};
Point(99) = {-0.037875, -0.741631, 0, 1.0};
Point(100) = {-0.035462, -0.742346, 0, 1.0};
Point(101) = {-0.033047, -0.743038, 0, 1.0};
Point(102) = {-0.030629, -0.743704, 0, 1.0};
Point(103) = {-0.028205, -0.744345, 0, 1.0};
Point(104) = {-0.025773, -0.744957, 0, 1.0};
Point(105) = {-0.023343, -0.745531, 0, 1.0};
Point(106) = {-0.020873, -0.746073, 0, 1.0};
Point(107) = {-0.018389, -0.746572, 0, 1.0};
Point(108) = {-0.015917, -0.747024, 0, 1.0};
Point(109) = {-0.013432, -0.747439, 0, 1.0};
Point(110) = {-0.010958, -0.747818, 0, 1.0};
Point(111) = {-0.005998, -0.748495, 0, 1.0};
Point(112) = {-0.001004, -0.749083, 0, 1.0};
Point(113) = {0.001507, -0.749344, 0, 1.0};
Point(114) = {0.004023, -0.749576, 0, 1.0};
Point(115) = {0.006555, -0.749774, 0, 1.0};
Point(116) = {0.009098, -0.749923, 0, 1.0};
Point(117) = {0.011680, -0.750000, 0, 1.0};
Point(118) = {0.014300, -0.749964, 0, 1.0};
Point(119) = {0.016991, -0.749750, 0, 1.0};
Point(120) = {0.019726, -0.749260, 0, 1.0};
Point(121) = {0.022254, -0.748412, 0, 1.0};
Point(122) = {0.023827, -0.747515, 0, 1.0};
Point(123) = {0.024588, -0.746813, 0, 1.0};
Point(124) = {0.025000, -0.746000, 0, 1.0};
Point(125) = {0.024773, -0.745199, 0, 1.0};
Point(126) = {0.024009, -0.744598, 0, 1.0};
Point(127) = {0.023806, -0.744490, 0, 1.0};
Point(128) = {0.022999, -0.744135, 0, 1.0};
Point(129) = {0.021965, -0.743782, 0, 1.0};
Point(130) = {0.019415, -0.743140, 0, 1.0};
Point(131) = {0.017099, -0.742696, 0, 1.0};
Point(132) = {0.014774, -0.742307, 0, 1.0};
Point(133) = {0.012405, -0.741926, 0, 1.0};
Point(134) = {0.010017, -0.741531, 0, 1.0};
Point(135) = {0.007606, -0.741111, 0, 1.0};
Point(136) = {0.005195, -0.740674, 0, 1.0};
Point(137) = {0.002774, -0.740229, 0, 1.0};
Point(138) = {0.000353, -0.739783, 0, 1.0};
Point(139) = {-0.004509, -0.738896, 0, 1.0};
Point(140) = {-0.009393, -0.738028, 0, 1.0};
Point(141) = {-0.011836, -0.737608, 0, 1.0};
Point(142) = {-0.014267, -0.737202, 0, 1.0};
Point(143) = {-0.016705, -0.736811, 0, 1.0};
Point(144) = {-0.019128, -0.736440, 0, 1.0};
Point(145) = {-0.021560, -0.736088, 0, 1.0};
Point(146) = {-0.024030, -0.735752, 0, 1.0};
Point(147) = {-0.026496, -0.735436, 0, 1.0};
Point(148) = {-0.028968, -0.735135, 0, 1.0};
Point(149) = {-0.031443, -0.734847, 0, 1.0};
Point(150) = {-0.033919, -0.734568, 0, 1.0};
Point(151) = {-0.036393, -0.734295, 0, 1.0};
Point(152) = {-0.038870, -0.734025, 0, 1.0};
Point(153) = {-0.041347, -0.733755, 0, 1.0};
Point(154) = {-0.043832, -0.733486, 0, 1.0};
Point(155) = {-0.046328, -0.733215, 0, 1.0};
Point(156) = {-0.048816, -0.732948, 0, 1.0};
Point(157) = {-0.051315, -0.732685, 0, 1.0};
Point(158) = {-0.053834, -0.732431, 0, 1.0};
Point(159) = {-0.056347, -0.732192, 0, 1.0};
Point(160) = {-0.058857, -0.731973, 0, 1.0};
Point(161) = {-0.061364, -0.731778, 0, 1.0};
Point(162) = {-0.063866, -0.731609, 0, 1.0};
Point(163) = {-0.066367, -0.731446, 0, 1.0};
Point(164) = {-0.068869, -0.731287, 0, 1.0};
Point(165) = {-0.071372, -0.731148, 0, 1.0};
Point(166) = {-0.073883, -0.731094, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:56};
Spline(3) = {56:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:112};
Spline(6) = {112:139};
Spline(7) = {139:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
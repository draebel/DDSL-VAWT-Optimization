SetFactory("OpenCASCADE");

Point(1) = {0.073537, 0.744043, 0, 1.0};
Point(2) = {0.073138, 0.744081, 0, 1.0};
Point(3) = {0.071991, 0.744264, 0, 1.0};
Point(4) = {0.070220, 0.744643, 0, 1.0};
Point(5) = {0.067958, 0.745191, 0, 1.0};
Point(6) = {0.065292, 0.745830, 0, 1.0};
Point(7) = {0.062251, 0.746481, 0, 1.0};
Point(8) = {0.058832, 0.747126, 0, 1.0};
Point(9) = {0.055092, 0.747772, 0, 1.0};
Point(10) = {0.051098, 0.748398, 0, 1.0};
Point(11) = {0.046917, 0.748972, 0, 1.0};
Point(12) = {0.042606, 0.749458, 0, 1.0};
Point(13) = {0.038221, 0.749816, 0, 1.0};
Point(14) = {0.033812, 0.750000, 0, 1.0};
Point(15) = {0.029406, 0.749957, 0, 1.0};
Point(16) = {0.025008, 0.749653, 0, 1.0};
Point(17) = {0.020612, 0.749075, 0, 1.0};
Point(18) = {0.016204, 0.748250, 0, 1.0};
Point(19) = {0.011819, 0.747230, 0, 1.0};
Point(20) = {0.007499, 0.746044, 0, 1.0};
Point(21) = {0.003293, 0.744720, 0, 1.0};
Point(22) = {-0.000757, 0.743282, 0, 1.0};
Point(23) = {-0.004608, 0.741756, 0, 1.0};
Point(24) = {-0.008222, 0.740166, 0, 1.0};
Point(25) = {-0.011558, 0.738537, 0, 1.0};
Point(26) = {-0.014583, 0.736896, 0, 1.0};
Point(27) = {-0.017265, 0.735268, 0, 1.0};
Point(28) = {-0.019576, 0.733678, 0, 1.0};
Point(29) = {-0.021493, 0.732152, 0, 1.0};
Point(30) = {-0.022997, 0.730715, 0, 1.0};
Point(31) = {-0.024087, 0.729392, 0, 1.0};
Point(32) = {-0.024757, 0.728228, 0, 1.0};
Point(33) = {-0.025012, 0.727279, 0, 1.0};
Point(34) = {-0.025011, 0.727088, 0, 1.0};
Point(35) = {-0.024982, 0.726922, 0, 1.0};
Point(36) = {-0.024957, 0.726851, 0, 1.0};
Point(37) = {-0.024922, 0.726790, 0, 1.0};
Point(38) = {-0.024874, 0.726737, 0, 1.0};
Point(39) = {-0.024810, 0.726688, 0, 1.0};
Point(40) = {-0.024646, 0.726597, 0, 1.0};
Point(41) = {-0.023913, 0.726382, 0, 1.0};
Point(42) = {-0.022415, 0.726261, 0, 1.0};
Point(43) = {-0.020289, 0.726313, 0, 1.0};
Point(44) = {-0.017571, 0.726463, 0, 1.0};
Point(45) = {-0.014349, 0.726680, 0, 1.0};
Point(46) = {-0.010679, 0.726961, 0, 1.0};
Point(47) = {-0.006637, 0.727303, 0, 1.0};
Point(48) = {-0.002280, 0.727711, 0, 1.0};
Point(49) = {0.002320, 0.728189, 0, 1.0};
Point(50) = {0.007101, 0.728745, 0, 1.0};
Point(51) = {0.011994, 0.729389, 0, 1.0};
Point(52) = {0.016933, 0.730139, 0, 1.0};
Point(53) = {0.021849, 0.731031, 0, 1.0};
Point(54) = {0.026730, 0.732124, 0, 1.0};
Point(55) = {0.031596, 0.733413, 0, 1.0};
Point(56) = {0.036446, 0.734869, 0, 1.0};
Point(57) = {0.041285, 0.736442, 0, 1.0};
Point(58) = {0.046090, 0.738052, 0, 1.0};
Point(59) = {0.050824, 0.739615, 0, 1.0};
Point(60) = {0.055425, 0.741030, 0, 1.0};
Point(61) = {0.059780, 0.742202, 0, 1.0};
Point(62) = {0.063753, 0.743068, 0, 1.0};
Point(63) = {0.067182, 0.743621, 0, 1.0};
Point(64) = {0.069935, 0.743916, 0, 1.0};
Point(65) = {0.071932, 0.744032, 0, 1.0};
Point(66) = {0.073136, 0.744051, 0, 1.0};
Point(67) = {-0.073537, -0.744043, 0, 1.0};
Point(68) = {-0.073138, -0.744081, 0, 1.0};
Point(69) = {-0.071991, -0.744264, 0, 1.0};
Point(70) = {-0.070220, -0.744643, 0, 1.0};
Point(71) = {-0.067958, -0.745191, 0, 1.0};
Point(72) = {-0.065292, -0.745830, 0, 1.0};
Point(73) = {-0.062251, -0.746481, 0, 1.0};
Point(74) = {-0.058832, -0.747126, 0, 1.0};
Point(75) = {-0.055092, -0.747772, 0, 1.0};
Point(76) = {-0.051098, -0.748398, 0, 1.0};
Point(77) = {-0.046917, -0.748972, 0, 1.0};
Point(78) = {-0.042606, -0.749458, 0, 1.0};
Point(79) = {-0.038221, -0.749816, 0, 1.0};
Point(80) = {-0.033812, -0.750000, 0, 1.0};
Point(81) = {-0.029406, -0.749957, 0, 1.0};
Point(82) = {-0.025008, -0.749653, 0, 1.0};
Point(83) = {-0.020612, -0.749075, 0, 1.0};
Point(84) = {-0.016204, -0.748250, 0, 1.0};
Point(85) = {-0.011819, -0.747230, 0, 1.0};
Point(86) = {-0.007499, -0.746044, 0, 1.0};
Point(87) = {-0.003293, -0.744720, 0, 1.0};
Point(88) = {0.000757, -0.743282, 0, 1.0};
Point(89) = {0.004608, -0.741756, 0, 1.0};
Point(90) = {0.008222, -0.740166, 0, 1.0};
Point(91) = {0.011558, -0.738537, 0, 1.0};
Point(92) = {0.014583, -0.736896, 0, 1.0};
Point(93) = {0.017265, -0.735268, 0, 1.0};
Point(94) = {0.019576, -0.733678, 0, 1.0};
Point(95) = {0.021493, -0.732152, 0, 1.0};
Point(96) = {0.022997, -0.730715, 0, 1.0};
Point(97) = {0.024087, -0.729392, 0, 1.0};
Point(98) = {0.024757, -0.728228, 0, 1.0};
Point(99) = {0.025012, -0.727279, 0, 1.0};
Point(100) = {0.025011, -0.727088, 0, 1.0};
Point(101) = {0.024982, -0.726922, 0, 1.0};
Point(102) = {0.024957, -0.726851, 0, 1.0};
Point(103) = {0.024922, -0.726790, 0, 1.0};
Point(104) = {0.024874, -0.726737, 0, 1.0};
Point(105) = {0.024810, -0.726688, 0, 1.0};
Point(106) = {0.024646, -0.726597, 0, 1.0};
Point(107) = {0.023913, -0.726382, 0, 1.0};
Point(108) = {0.022415, -0.726261, 0, 1.0};
Point(109) = {0.020289, -0.726313, 0, 1.0};
Point(110) = {0.017571, -0.726463, 0, 1.0};
Point(111) = {0.014349, -0.726680, 0, 1.0};
Point(112) = {0.010679, -0.726961, 0, 1.0};
Point(113) = {0.006637, -0.727303, 0, 1.0};
Point(114) = {0.002280, -0.727711, 0, 1.0};
Point(115) = {-0.002320, -0.728189, 0, 1.0};
Point(116) = {-0.007101, -0.728745, 0, 1.0};
Point(117) = {-0.011994, -0.729389, 0, 1.0};
Point(118) = {-0.016933, -0.730139, 0, 1.0};
Point(119) = {-0.021849, -0.731031, 0, 1.0};
Point(120) = {-0.026730, -0.732124, 0, 1.0};
Point(121) = {-0.031596, -0.733413, 0, 1.0};
Point(122) = {-0.036446, -0.734869, 0, 1.0};
Point(123) = {-0.041285, -0.736442, 0, 1.0};
Point(124) = {-0.046090, -0.738052, 0, 1.0};
Point(125) = {-0.050824, -0.739615, 0, 1.0};
Point(126) = {-0.055425, -0.741030, 0, 1.0};
Point(127) = {-0.059780, -0.742202, 0, 1.0};
Point(128) = {-0.063753, -0.743068, 0, 1.0};
Point(129) = {-0.067182, -0.743621, 0, 1.0};
Point(130) = {-0.069935, -0.743916, 0, 1.0};
Point(131) = {-0.071932, -0.744032, 0, 1.0};
Point(132) = {-0.073136, -0.744051, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:88};
Spline(6) = {88:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.147074, 0.738085, 0, 1.0};
Point(2) = {0.146277, 0.738161, 0, 1.0};
Point(3) = {0.143982, 0.738527, 0, 1.0};
Point(4) = {0.140441, 0.739287, 0, 1.0};
Point(5) = {0.135917, 0.740382, 0, 1.0};
Point(6) = {0.130584, 0.741660, 0, 1.0};
Point(7) = {0.124502, 0.742963, 0, 1.0};
Point(8) = {0.117664, 0.744251, 0, 1.0};
Point(9) = {0.110183, 0.745544, 0, 1.0};
Point(10) = {0.102197, 0.746796, 0, 1.0};
Point(11) = {0.093834, 0.747945, 0, 1.0};
Point(12) = {0.085213, 0.748917, 0, 1.0};
Point(13) = {0.076443, 0.749632, 0, 1.0};
Point(14) = {0.067624, 0.750000, 0, 1.0};
Point(15) = {0.058812, 0.749915, 0, 1.0};
Point(16) = {0.050017, 0.749306, 0, 1.0};
Point(17) = {0.041224, 0.748149, 0, 1.0};
Point(18) = {0.032408, 0.746500, 0, 1.0};
Point(19) = {0.023637, 0.744459, 0, 1.0};
Point(20) = {0.014999, 0.742088, 0, 1.0};
Point(21) = {0.006587, 0.739440, 0, 1.0};
Point(22) = {-0.001515, 0.736564, 0, 1.0};
Point(23) = {-0.009217, 0.733512, 0, 1.0};
Point(24) = {-0.016443, 0.730331, 0, 1.0};
Point(25) = {-0.023115, 0.727075, 0, 1.0};
Point(26) = {-0.029166, 0.723792, 0, 1.0};
Point(27) = {-0.034529, 0.720536, 0, 1.0};
Point(28) = {-0.039151, 0.717355, 0, 1.0};
Point(29) = {-0.042987, 0.714304, 0, 1.0};
Point(30) = {-0.045995, 0.711430, 0, 1.0};
Point(31) = {-0.048173, 0.708783, 0, 1.0};
Point(32) = {-0.049513, 0.706456, 0, 1.0};
Point(33) = {-0.050024, 0.704558, 0, 1.0};
Point(34) = {-0.050021, 0.704176, 0, 1.0};
Point(35) = {-0.049964, 0.703844, 0, 1.0};
Point(36) = {-0.049914, 0.703701, 0, 1.0};
Point(37) = {-0.049844, 0.703580, 0, 1.0};
Point(38) = {-0.049747, 0.703475, 0, 1.0};
Point(39) = {-0.049619, 0.703377, 0, 1.0};
Point(40) = {-0.049293, 0.703195, 0, 1.0};
Point(41) = {-0.047826, 0.702763, 0, 1.0};
Point(42) = {-0.044829, 0.702521, 0, 1.0};
Point(43) = {-0.040578, 0.702627, 0, 1.0};
Point(44) = {-0.035141, 0.702925, 0, 1.0};
Point(45) = {-0.028698, 0.703359, 0, 1.0};
Point(46) = {-0.021358, 0.703922, 0, 1.0};
Point(47) = {-0.013274, 0.704607, 0, 1.0};
Point(48) = {-0.004560, 0.705423, 0, 1.0};
Point(49) = {0.004639, 0.706377, 0, 1.0};
Point(50) = {0.014202, 0.707489, 0, 1.0};
Point(51) = {0.023987, 0.708778, 0, 1.0};
Point(52) = {0.033866, 0.710278, 0, 1.0};
Point(53) = {0.043697, 0.712061, 0, 1.0};
Point(54) = {0.053460, 0.714249, 0, 1.0};
Point(55) = {0.063193, 0.716827, 0, 1.0};
Point(56) = {0.072893, 0.719738, 0, 1.0};
Point(57) = {0.082570, 0.722883, 0, 1.0};
Point(58) = {0.092181, 0.726104, 0, 1.0};
Point(59) = {0.101649, 0.729230, 0, 1.0};
Point(60) = {0.110849, 0.732060, 0, 1.0};
Point(61) = {0.119560, 0.734403, 0, 1.0};
Point(62) = {0.127506, 0.736137, 0, 1.0};
Point(63) = {0.134364, 0.737243, 0, 1.0};
Point(64) = {0.139870, 0.737832, 0, 1.0};
Point(65) = {0.143864, 0.738065, 0, 1.0};
Point(66) = {0.146271, 0.738102, 0, 1.0};
Point(67) = {-0.147074, -0.738085, 0, 1.0};
Point(68) = {-0.146277, -0.738161, 0, 1.0};
Point(69) = {-0.143982, -0.738527, 0, 1.0};
Point(70) = {-0.140441, -0.739287, 0, 1.0};
Point(71) = {-0.135917, -0.740382, 0, 1.0};
Point(72) = {-0.130584, -0.741660, 0, 1.0};
Point(73) = {-0.124502, -0.742963, 0, 1.0};
Point(74) = {-0.117664, -0.744251, 0, 1.0};
Point(75) = {-0.110183, -0.745544, 0, 1.0};
Point(76) = {-0.102197, -0.746796, 0, 1.0};
Point(77) = {-0.093834, -0.747945, 0, 1.0};
Point(78) = {-0.085213, -0.748917, 0, 1.0};
Point(79) = {-0.076443, -0.749632, 0, 1.0};
Point(80) = {-0.067624, -0.750000, 0, 1.0};
Point(81) = {-0.058812, -0.749915, 0, 1.0};
Point(82) = {-0.050017, -0.749306, 0, 1.0};
Point(83) = {-0.041224, -0.748149, 0, 1.0};
Point(84) = {-0.032408, -0.746500, 0, 1.0};
Point(85) = {-0.023637, -0.744459, 0, 1.0};
Point(86) = {-0.014999, -0.742088, 0, 1.0};
Point(87) = {-0.006587, -0.739440, 0, 1.0};
Point(88) = {0.001515, -0.736564, 0, 1.0};
Point(89) = {0.009217, -0.733512, 0, 1.0};
Point(90) = {0.016443, -0.730331, 0, 1.0};
Point(91) = {0.023115, -0.727075, 0, 1.0};
Point(92) = {0.029166, -0.723792, 0, 1.0};
Point(93) = {0.034529, -0.720536, 0, 1.0};
Point(94) = {0.039151, -0.717355, 0, 1.0};
Point(95) = {0.042987, -0.714304, 0, 1.0};
Point(96) = {0.045995, -0.711430, 0, 1.0};
Point(97) = {0.048173, -0.708783, 0, 1.0};
Point(98) = {0.049513, -0.706456, 0, 1.0};
Point(99) = {0.050024, -0.704558, 0, 1.0};
Point(100) = {0.050021, -0.704176, 0, 1.0};
Point(101) = {0.049964, -0.703844, 0, 1.0};
Point(102) = {0.049914, -0.703701, 0, 1.0};
Point(103) = {0.049844, -0.703580, 0, 1.0};
Point(104) = {0.049747, -0.703475, 0, 1.0};
Point(105) = {0.049619, -0.703377, 0, 1.0};
Point(106) = {0.049293, -0.703195, 0, 1.0};
Point(107) = {0.047826, -0.702763, 0, 1.0};
Point(108) = {0.044829, -0.702521, 0, 1.0};
Point(109) = {0.040578, -0.702627, 0, 1.0};
Point(110) = {0.035141, -0.702925, 0, 1.0};
Point(111) = {0.028698, -0.703359, 0, 1.0};
Point(112) = {0.021358, -0.703922, 0, 1.0};
Point(113) = {0.013274, -0.704607, 0, 1.0};
Point(114) = {0.004560, -0.705423, 0, 1.0};
Point(115) = {-0.004639, -0.706377, 0, 1.0};
Point(116) = {-0.014202, -0.707489, 0, 1.0};
Point(117) = {-0.023987, -0.708778, 0, 1.0};
Point(118) = {-0.033866, -0.710278, 0, 1.0};
Point(119) = {-0.043697, -0.712061, 0, 1.0};
Point(120) = {-0.053460, -0.714249, 0, 1.0};
Point(121) = {-0.063193, -0.716827, 0, 1.0};
Point(122) = {-0.072893, -0.719738, 0, 1.0};
Point(123) = {-0.082570, -0.722883, 0, 1.0};
Point(124) = {-0.092181, -0.726104, 0, 1.0};
Point(125) = {-0.101649, -0.729230, 0, 1.0};
Point(126) = {-0.110849, -0.732060, 0, 1.0};
Point(127) = {-0.119560, -0.734403, 0, 1.0};
Point(128) = {-0.127506, -0.736137, 0, 1.0};
Point(129) = {-0.134364, -0.737243, 0, 1.0};
Point(130) = {-0.139870, -0.737832, 0, 1.0};
Point(131) = {-0.143864, -0.738065, 0, 1.0};
Point(132) = {-0.146271, -0.738102, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:88};
Spline(6) = {88:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.110834, 0.741064, 0, 1.0};
Point(2) = {0.110236, 0.741121, 0, 1.0};
Point(3) = {0.108514, 0.741395, 0, 1.0};
Point(4) = {0.105858, 0.741965, 0, 1.0};
Point(5) = {0.102465, 0.742786, 0, 1.0};
Point(6) = {0.098466, 0.743745, 0, 1.0};
Point(7) = {0.093904, 0.744722, 0, 1.0};
Point(8) = {0.088775, 0.745688, 0, 1.0};
Point(9) = {0.083164, 0.746658, 0, 1.0};
Point(10) = {0.077174, 0.747597, 0, 1.0};
Point(11) = {0.070902, 0.748459, 0, 1.0};
Point(12) = {0.064436, 0.749187, 0, 1.0};
Point(13) = {0.057858, 0.749724, 0, 1.0};
Point(14) = {0.051243, 0.750000, 0, 1.0};
Point(15) = {0.044634, 0.749936, 0, 1.0};
Point(16) = {0.038038, 0.749480, 0, 1.0};
Point(17) = {0.031443, 0.748612, 0, 1.0};
Point(18) = {0.024831, 0.747375, 0, 1.0};
Point(19) = {0.018252, 0.745844, 0, 1.0};
Point(20) = {0.011773, 0.744065, 0, 1.0};
Point(21) = {0.005464, 0.742079, 0, 1.0};
Point(22) = {-0.000613, 0.739923, 0, 1.0};
Point(23) = {-0.006389, 0.737633, 0, 1.0};
Point(24) = {-0.011810, 0.735248, 0, 1.0};
Point(25) = {-0.016814, 0.732805, 0, 1.0};
Point(26) = {-0.021352, 0.730343, 0, 1.0};
Point(27) = {-0.025375, 0.727901, 0, 1.0};
Point(28) = {-0.028841, 0.725516, 0, 1.0};
Point(29) = {-0.031718, 0.723227, 0, 1.0};
Point(30) = {-0.033974, 0.721071, 0, 1.0};
Point(31) = {-0.035608, 0.719086, 0, 1.0};
Point(32) = {-0.036613, 0.717341, 0, 1.0};
Point(33) = {-0.036996, 0.715917, 0, 1.0};
Point(34) = {-0.036994, 0.715631, 0, 1.0};
Point(35) = {-0.036951, 0.715382, 0, 1.0};
Point(36) = {-0.036913, 0.715275, 0, 1.0};
Point(37) = {-0.036861, 0.715183, 0, 1.0};
Point(38) = {-0.036788, 0.715105, 0, 1.0};
Point(39) = {-0.036693, 0.715031, 0, 1.0};
Point(40) = {-0.036448, 0.714894, 0, 1.0};
Point(41) = {-0.035347, 0.714571, 0, 1.0};
Point(42) = {-0.033100, 0.714389, 0, 1.0};
Point(43) = {-0.029911, 0.714469, 0, 1.0};
Point(44) = {-0.025834, 0.714692, 0, 1.0};
Point(45) = {-0.021001, 0.715018, 0, 1.0};
Point(46) = {-0.015496, 0.715440, 0, 1.0};
Point(47) = {-0.009432, 0.715954, 0, 1.0};
Point(48) = {-0.002897, 0.716566, 0, 1.0};
Point(49) = {0.004003, 0.717282, 0, 1.0};
Point(50) = {0.011176, 0.718116, 0, 1.0};
Point(51) = {0.018515, 0.719082, 0, 1.0};
Point(52) = {0.025924, 0.720207, 0, 1.0};
Point(53) = {0.033298, 0.721545, 0, 1.0};
Point(54) = {0.040620, 0.723185, 0, 1.0};
Point(55) = {0.047920, 0.725119, 0, 1.0};
Point(56) = {0.055195, 0.727303, 0, 1.0};
Point(57) = {0.062453, 0.729661, 0, 1.0};
Point(58) = {0.069662, 0.732077, 0, 1.0};
Point(59) = {0.076763, 0.734422, 0, 1.0};
Point(60) = {0.083664, 0.736544, 0, 1.0};
Point(61) = {0.090197, 0.738302, 0, 1.0};
Point(62) = {0.096157, 0.739602, 0, 1.0};
Point(63) = {0.101300, 0.740432, 0, 1.0};
Point(64) = {0.105430, 0.740873, 0, 1.0};
Point(65) = {0.108426, 0.741048, 0, 1.0};
Point(66) = {0.110232, 0.741076, 0, 1.0};
Point(67) = {-0.110834, -0.741064, 0, 1.0};
Point(68) = {-0.110236, -0.741121, 0, 1.0};
Point(69) = {-0.108514, -0.741395, 0, 1.0};
Point(70) = {-0.105858, -0.741965, 0, 1.0};
Point(71) = {-0.102465, -0.742786, 0, 1.0};
Point(72) = {-0.098466, -0.743745, 0, 1.0};
Point(73) = {-0.093904, -0.744722, 0, 1.0};
Point(74) = {-0.088775, -0.745688, 0, 1.0};
Point(75) = {-0.083164, -0.746658, 0, 1.0};
Point(76) = {-0.077174, -0.747597, 0, 1.0};
Point(77) = {-0.070902, -0.748459, 0, 1.0};
Point(78) = {-0.064436, -0.749187, 0, 1.0};
Point(79) = {-0.057858, -0.749724, 0, 1.0};
Point(80) = {-0.051243, -0.750000, 0, 1.0};
Point(81) = {-0.044634, -0.749936, 0, 1.0};
Point(82) = {-0.038038, -0.749480, 0, 1.0};
Point(83) = {-0.031443, -0.748612, 0, 1.0};
Point(84) = {-0.024831, -0.747375, 0, 1.0};
Point(85) = {-0.018252, -0.745844, 0, 1.0};
Point(86) = {-0.011773, -0.744065, 0, 1.0};
Point(87) = {-0.005464, -0.742079, 0, 1.0};
Point(88) = {0.000613, -0.739923, 0, 1.0};
Point(89) = {0.006389, -0.737633, 0, 1.0};
Point(90) = {0.011810, -0.735248, 0, 1.0};
Point(91) = {0.016814, -0.732805, 0, 1.0};
Point(92) = {0.021352, -0.730343, 0, 1.0};
Point(93) = {0.025375, -0.727901, 0, 1.0};
Point(94) = {0.028841, -0.725516, 0, 1.0};
Point(95) = {0.031718, -0.723227, 0, 1.0};
Point(96) = {0.033974, -0.721071, 0, 1.0};
Point(97) = {0.035608, -0.719086, 0, 1.0};
Point(98) = {0.036613, -0.717341, 0, 1.0};
Point(99) = {0.036996, -0.715917, 0, 1.0};
Point(100) = {0.036994, -0.715631, 0, 1.0};
Point(101) = {0.036951, -0.715382, 0, 1.0};
Point(102) = {0.036913, -0.715275, 0, 1.0};
Point(103) = {0.036861, -0.715183, 0, 1.0};
Point(104) = {0.036788, -0.715105, 0, 1.0};
Point(105) = {0.036693, -0.715031, 0, 1.0};
Point(106) = {0.036448, -0.714894, 0, 1.0};
Point(107) = {0.035347, -0.714571, 0, 1.0};
Point(108) = {0.033100, -0.714389, 0, 1.0};
Point(109) = {0.029911, -0.714469, 0, 1.0};
Point(110) = {0.025834, -0.714692, 0, 1.0};
Point(111) = {0.021001, -0.715018, 0, 1.0};
Point(112) = {0.015496, -0.715440, 0, 1.0};
Point(113) = {0.009432, -0.715954, 0, 1.0};
Point(114) = {0.002897, -0.716566, 0, 1.0};
Point(115) = {-0.004003, -0.717282, 0, 1.0};
Point(116) = {-0.011176, -0.718116, 0, 1.0};
Point(117) = {-0.018515, -0.719082, 0, 1.0};
Point(118) = {-0.025924, -0.720207, 0, 1.0};
Point(119) = {-0.033298, -0.721545, 0, 1.0};
Point(120) = {-0.040620, -0.723185, 0, 1.0};
Point(121) = {-0.047920, -0.725119, 0, 1.0};
Point(122) = {-0.055195, -0.727303, 0, 1.0};
Point(123) = {-0.062453, -0.729661, 0, 1.0};
Point(124) = {-0.069662, -0.732077, 0, 1.0};
Point(125) = {-0.076763, -0.734422, 0, 1.0};
Point(126) = {-0.083664, -0.736544, 0, 1.0};
Point(127) = {-0.090197, -0.738302, 0, 1.0};
Point(128) = {-0.096157, -0.739602, 0, 1.0};
Point(129) = {-0.101300, -0.740432, 0, 1.0};
Point(130) = {-0.105430, -0.740873, 0, 1.0};
Point(131) = {-0.108426, -0.741048, 0, 1.0};
Point(132) = {-0.110232, -0.741076, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:88};
Spline(6) = {88:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
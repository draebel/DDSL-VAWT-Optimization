SetFactory("OpenCASCADE");

Point(1) = {0.110306, 0.741064, 0, 1.0};
Point(2) = {0.109707, 0.741121, 0, 1.0};
Point(3) = {0.107986, 0.741395, 0, 1.0};
Point(4) = {0.105331, 0.741965, 0, 1.0};
Point(5) = {0.101938, 0.742787, 0, 1.0};
Point(6) = {0.097938, 0.743745, 0, 1.0};
Point(7) = {0.093376, 0.744722, 0, 1.0};
Point(8) = {0.088248, 0.745689, 0, 1.0};
Point(9) = {0.082637, 0.746658, 0, 1.0};
Point(10) = {0.076648, 0.747597, 0, 1.0};
Point(11) = {0.070376, 0.748459, 0, 1.0};
Point(12) = {0.063910, 0.749187, 0, 1.0};
Point(13) = {0.057332, 0.749724, 0, 1.0};
Point(14) = {0.050718, 0.750000, 0, 1.0};
Point(15) = {0.044109, 0.749936, 0, 1.0};
Point(16) = {0.037513, 0.749480, 0, 1.0};
Point(17) = {0.030918, 0.748612, 0, 1.0};
Point(18) = {0.024306, 0.747375, 0, 1.0};
Point(19) = {0.017728, 0.745844, 0, 1.0};
Point(20) = {0.011249, 0.744066, 0, 1.0};
Point(21) = {0.004940, 0.742080, 0, 1.0};
Point(22) = {-0.001136, 0.739923, 0, 1.0};
Point(23) = {-0.006913, 0.737634, 0, 1.0};
Point(24) = {-0.012333, 0.735248, 0, 1.0};
Point(25) = {-0.017336, 0.732806, 0, 1.0};
Point(26) = {-0.021874, 0.730344, 0, 1.0};
Point(27) = {-0.025897, 0.727902, 0, 1.0};
Point(28) = {-0.029363, 0.725517, 0, 1.0};
Point(29) = {-0.032240, 0.723228, 0, 1.0};
Point(30) = {-0.034496, 0.721072, 0, 1.0};
Point(31) = {-0.036130, 0.719087, 0, 1.0};
Point(32) = {-0.037135, 0.717342, 0, 1.0};
Point(33) = {-0.037518, 0.715919, 0, 1.0};
Point(34) = {-0.037516, 0.715632, 0, 1.0};
Point(35) = {-0.037473, 0.715383, 0, 1.0};
Point(36) = {-0.037435, 0.715276, 0, 1.0};
Point(37) = {-0.037383, 0.715185, 0, 1.0};
Point(38) = {-0.037310, 0.715106, 0, 1.0};
Point(39) = {-0.037215, 0.715032, 0, 1.0};
Point(40) = {-0.036970, 0.714896, 0, 1.0};
Point(41) = {-0.035869, 0.714572, 0, 1.0};
Point(42) = {-0.033622, 0.714391, 0, 1.0};
Point(43) = {-0.030434, 0.714470, 0, 1.0};
Point(44) = {-0.026356, 0.714694, 0, 1.0};
Point(45) = {-0.021523, 0.715019, 0, 1.0};
Point(46) = {-0.016019, 0.715442, 0, 1.0};
Point(47) = {-0.009956, 0.715955, 0, 1.0};
Point(48) = {-0.003420, 0.716567, 0, 1.0};
Point(49) = {0.003479, 0.717283, 0, 1.0};
Point(50) = {0.010652, 0.718117, 0, 1.0};
Point(51) = {0.017990, 0.719083, 0, 1.0};
Point(52) = {0.025400, 0.720209, 0, 1.0};
Point(53) = {0.032773, 0.721546, 0, 1.0};
Point(54) = {0.040095, 0.723187, 0, 1.0};
Point(55) = {0.047395, 0.725120, 0, 1.0};
Point(56) = {0.054670, 0.727304, 0, 1.0};
Point(57) = {0.061927, 0.729662, 0, 1.0};
Point(58) = {0.069136, 0.732078, 0, 1.0};
Point(59) = {0.076237, 0.734423, 0, 1.0};
Point(60) = {0.083137, 0.736545, 0, 1.0};
Point(61) = {0.089670, 0.738302, 0, 1.0};
Point(62) = {0.095630, 0.739603, 0, 1.0};
Point(63) = {0.100773, 0.740432, 0, 1.0};
Point(64) = {0.104902, 0.740874, 0, 1.0};
Point(65) = {0.107898, 0.741048, 0, 1.0};
Point(66) = {0.109704, 0.741077, 0, 1.0};
Point(67) = {-0.110306, -0.741064, 0, 1.0};
Point(68) = {-0.109707, -0.741121, 0, 1.0};
Point(69) = {-0.107986, -0.741395, 0, 1.0};
Point(70) = {-0.105331, -0.741965, 0, 1.0};
Point(71) = {-0.101938, -0.742787, 0, 1.0};
Point(72) = {-0.097938, -0.743745, 0, 1.0};
Point(73) = {-0.093376, -0.744722, 0, 1.0};
Point(74) = {-0.088248, -0.745689, 0, 1.0};
Point(75) = {-0.082637, -0.746658, 0, 1.0};
Point(76) = {-0.076648, -0.747597, 0, 1.0};
Point(77) = {-0.070376, -0.748459, 0, 1.0};
Point(78) = {-0.063910, -0.749187, 0, 1.0};
Point(79) = {-0.057332, -0.749724, 0, 1.0};
Point(80) = {-0.050718, -0.750000, 0, 1.0};
Point(81) = {-0.044109, -0.749936, 0, 1.0};
Point(82) = {-0.037513, -0.749480, 0, 1.0};
Point(83) = {-0.030918, -0.748612, 0, 1.0};
Point(84) = {-0.024306, -0.747375, 0, 1.0};
Point(85) = {-0.017728, -0.745844, 0, 1.0};
Point(86) = {-0.011249, -0.744066, 0, 1.0};
Point(87) = {-0.004940, -0.742080, 0, 1.0};
Point(88) = {0.001136, -0.739923, 0, 1.0};
Point(89) = {0.006913, -0.737634, 0, 1.0};
Point(90) = {0.012333, -0.735248, 0, 1.0};
Point(91) = {0.017336, -0.732806, 0, 1.0};
Point(92) = {0.021874, -0.730344, 0, 1.0};
Point(93) = {0.025897, -0.727902, 0, 1.0};
Point(94) = {0.029363, -0.725517, 0, 1.0};
Point(95) = {0.032240, -0.723228, 0, 1.0};
Point(96) = {0.034496, -0.721072, 0, 1.0};
Point(97) = {0.036130, -0.719087, 0, 1.0};
Point(98) = {0.037135, -0.717342, 0, 1.0};
Point(99) = {0.037518, -0.715919, 0, 1.0};
Point(100) = {0.037516, -0.715632, 0, 1.0};
Point(101) = {0.037473, -0.715383, 0, 1.0};
Point(102) = {0.037435, -0.715276, 0, 1.0};
Point(103) = {0.037383, -0.715185, 0, 1.0};
Point(104) = {0.037310, -0.715106, 0, 1.0};
Point(105) = {0.037215, -0.715032, 0, 1.0};
Point(106) = {0.036970, -0.714896, 0, 1.0};
Point(107) = {0.035869, -0.714572, 0, 1.0};
Point(108) = {0.033622, -0.714391, 0, 1.0};
Point(109) = {0.030434, -0.714470, 0, 1.0};
Point(110) = {0.026356, -0.714694, 0, 1.0};
Point(111) = {0.021523, -0.715019, 0, 1.0};
Point(112) = {0.016019, -0.715442, 0, 1.0};
Point(113) = {0.009956, -0.715955, 0, 1.0};
Point(114) = {0.003420, -0.716567, 0, 1.0};
Point(115) = {-0.003479, -0.717283, 0, 1.0};
Point(116) = {-0.010652, -0.718117, 0, 1.0};
Point(117) = {-0.017990, -0.719083, 0, 1.0};
Point(118) = {-0.025400, -0.720209, 0, 1.0};
Point(119) = {-0.032773, -0.721546, 0, 1.0};
Point(120) = {-0.040095, -0.723187, 0, 1.0};
Point(121) = {-0.047395, -0.725120, 0, 1.0};
Point(122) = {-0.054670, -0.727304, 0, 1.0};
Point(123) = {-0.061927, -0.729662, 0, 1.0};
Point(124) = {-0.069136, -0.732078, 0, 1.0};
Point(125) = {-0.076237, -0.734423, 0, 1.0};
Point(126) = {-0.083137, -0.736545, 0, 1.0};
Point(127) = {-0.089670, -0.738302, 0, 1.0};
Point(128) = {-0.095630, -0.739603, 0, 1.0};
Point(129) = {-0.100773, -0.740432, 0, 1.0};
Point(130) = {-0.104902, -0.740874, 0, 1.0};
Point(131) = {-0.107898, -0.741048, 0, 1.0};
Point(132) = {-0.109704, -0.741077, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:88};
Spline(6) = {88:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
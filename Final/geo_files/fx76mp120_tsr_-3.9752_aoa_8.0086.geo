SetFactory("OpenCASCADE");

Point(1) = {0.074744, 0.718844, 0, 1.0};
Point(2) = {0.073067, 0.719670, 0, 1.0};
Point(3) = {0.070473, 0.720937, 0, 1.0};
Point(4) = {0.067612, 0.722326, 0, 1.0};
Point(5) = {0.064495, 0.723839, 0, 1.0};
Point(6) = {0.061136, 0.725472, 0, 1.0};
Point(7) = {0.057551, 0.727221, 0, 1.0};
Point(8) = {0.053755, 0.729079, 0, 1.0};
Point(9) = {0.049763, 0.731026, 0, 1.0};
Point(10) = {0.045585, 0.733023, 0, 1.0};
Point(11) = {0.041236, 0.735016, 0, 1.0};
Point(12) = {0.036728, 0.736958, 0, 1.0};
Point(13) = {0.032076, 0.738808, 0, 1.0};
Point(14) = {0.027296, 0.740539, 0, 1.0};
Point(15) = {0.022409, 0.742133, 0, 1.0};
Point(16) = {0.017433, 0.743582, 0, 1.0};
Point(17) = {0.012392, 0.744883, 0, 1.0};
Point(18) = {0.007309, 0.746038, 0, 1.0};
Point(19) = {0.002204, 0.747045, 0, 1.0};
Point(20) = {-0.002898, 0.747907, 0, 1.0};
Point(21) = {-0.007978, 0.748624, 0, 1.0};
Point(22) = {-0.013009, 0.749190, 0, 1.0};
Point(23) = {-0.017973, 0.749610, 0, 1.0};
Point(24) = {-0.022848, 0.749880, 0, 1.0};
Point(25) = {-0.027612, 0.750000, 0, 1.0};
Point(26) = {-0.032246, 0.749972, 0, 1.0};
Point(27) = {-0.036729, 0.749799, 0, 1.0};
Point(28) = {-0.041039, 0.749484, 0, 1.0};
Point(29) = {-0.045159, 0.749032, 0, 1.0};
Point(30) = {-0.049072, 0.748452, 0, 1.0};
Point(31) = {-0.052760, 0.747747, 0, 1.0};
Point(32) = {-0.056206, 0.746926, 0, 1.0};
Point(33) = {-0.059393, 0.745997, 0, 1.0};
Point(34) = {-0.062309, 0.744975, 0, 1.0};
Point(35) = {-0.064939, 0.743877, 0, 1.0};
Point(36) = {-0.067267, 0.742729, 0, 1.0};
Point(37) = {-0.069282, 0.741552, 0, 1.0};
Point(38) = {-0.070970, 0.740375, 0, 1.0};
Point(39) = {-0.072324, 0.739224, 0, 1.0};
Point(40) = {-0.073332, 0.738140, 0, 1.0};
Point(41) = {-0.073984, 0.737160, 0, 1.0};
Point(42) = {-0.074269, 0.736361, 0, 1.0};
Point(43) = {-0.074198, 0.735639, 0, 1.0};
Point(44) = {-0.073774, 0.734997, 0, 1.0};
Point(45) = {-0.073000, 0.734423, 0, 1.0};
Point(46) = {-0.071880, 0.733909, 0, 1.0};
Point(47) = {-0.070418, 0.733480, 0, 1.0};
Point(48) = {-0.068616, 0.733137, 0, 1.0};
Point(49) = {-0.066488, 0.732870, 0, 1.0};
Point(50) = {-0.064042, 0.732662, 0, 1.0};
Point(51) = {-0.061292, 0.732501, 0, 1.0};
Point(52) = {-0.058255, 0.732363, 0, 1.0};
Point(53) = {-0.054943, 0.732232, 0, 1.0};
Point(54) = {-0.051372, 0.732103, 0, 1.0};
Point(55) = {-0.047561, 0.731965, 0, 1.0};
Point(56) = {-0.043525, 0.731810, 0, 1.0};
Point(57) = {-0.039285, 0.731630, 0, 1.0};
Point(58) = {-0.034856, 0.731419, 0, 1.0};
Point(59) = {-0.030261, 0.731172, 0, 1.0};
Point(60) = {-0.025520, 0.730886, 0, 1.0};
Point(61) = {-0.020654, 0.730555, 0, 1.0};
Point(62) = {-0.015683, 0.730183, 0, 1.0};
Point(63) = {-0.010630, 0.729769, 0, 1.0};
Point(64) = {-0.005514, 0.729314, 0, 1.0};
Point(65) = {-0.000360, 0.728823, 0, 1.0};
Point(66) = {0.004813, 0.728298, 0, 1.0};
Point(67) = {0.009981, 0.727742, 0, 1.0};
Point(68) = {0.015123, 0.727161, 0, 1.0};
Point(69) = {0.020218, 0.726562, 0, 1.0};
Point(70) = {0.025244, 0.725949, 0, 1.0};
Point(71) = {0.030180, 0.725330, 0, 1.0};
Point(72) = {0.035005, 0.724709, 0, 1.0};
Point(73) = {0.039698, 0.724089, 0, 1.0};
Point(74) = {0.044241, 0.723469, 0, 1.0};
Point(75) = {0.048610, 0.722837, 0, 1.0};
Point(76) = {0.052785, 0.722185, 0, 1.0};
Point(77) = {0.056747, 0.721510, 0, 1.0};
Point(78) = {0.060479, 0.720809, 0, 1.0};
Point(79) = {0.063967, 0.720086, 0, 1.0};
Point(80) = {0.067193, 0.719348, 0, 1.0};
Point(81) = {0.070145, 0.718602, 0, 1.0};
Point(82) = {0.072813, 0.717864, 0, 1.0};
Point(83) = {0.074536, 0.717367, 0, 1.0};
Point(84) = {-0.074744, -0.718844, 0, 1.0};
Point(85) = {-0.073067, -0.719670, 0, 1.0};
Point(86) = {-0.070473, -0.720937, 0, 1.0};
Point(87) = {-0.067612, -0.722326, 0, 1.0};
Point(88) = {-0.064495, -0.723839, 0, 1.0};
Point(89) = {-0.061136, -0.725472, 0, 1.0};
Point(90) = {-0.057551, -0.727221, 0, 1.0};
Point(91) = {-0.053755, -0.729079, 0, 1.0};
Point(92) = {-0.049763, -0.731026, 0, 1.0};
Point(93) = {-0.045585, -0.733023, 0, 1.0};
Point(94) = {-0.041236, -0.735016, 0, 1.0};
Point(95) = {-0.036728, -0.736958, 0, 1.0};
Point(96) = {-0.032076, -0.738808, 0, 1.0};
Point(97) = {-0.027296, -0.740539, 0, 1.0};
Point(98) = {-0.022409, -0.742133, 0, 1.0};
Point(99) = {-0.017433, -0.743582, 0, 1.0};
Point(100) = {-0.012392, -0.744883, 0, 1.0};
Point(101) = {-0.007309, -0.746038, 0, 1.0};
Point(102) = {-0.002204, -0.747045, 0, 1.0};
Point(103) = {0.002898, -0.747907, 0, 1.0};
Point(104) = {0.007978, -0.748624, 0, 1.0};
Point(105) = {0.013009, -0.749190, 0, 1.0};
Point(106) = {0.017973, -0.749610, 0, 1.0};
Point(107) = {0.022848, -0.749880, 0, 1.0};
Point(108) = {0.027612, -0.750000, 0, 1.0};
Point(109) = {0.032246, -0.749972, 0, 1.0};
Point(110) = {0.036729, -0.749799, 0, 1.0};
Point(111) = {0.041039, -0.749484, 0, 1.0};
Point(112) = {0.045159, -0.749032, 0, 1.0};
Point(113) = {0.049072, -0.748452, 0, 1.0};
Point(114) = {0.052760, -0.747747, 0, 1.0};
Point(115) = {0.056206, -0.746926, 0, 1.0};
Point(116) = {0.059393, -0.745997, 0, 1.0};
Point(117) = {0.062309, -0.744975, 0, 1.0};
Point(118) = {0.064939, -0.743877, 0, 1.0};
Point(119) = {0.067267, -0.742729, 0, 1.0};
Point(120) = {0.069282, -0.741552, 0, 1.0};
Point(121) = {0.070970, -0.740375, 0, 1.0};
Point(122) = {0.072324, -0.739224, 0, 1.0};
Point(123) = {0.073332, -0.738140, 0, 1.0};
Point(124) = {0.073984, -0.737160, 0, 1.0};
Point(125) = {0.074269, -0.736361, 0, 1.0};
Point(126) = {0.074198, -0.735639, 0, 1.0};
Point(127) = {0.073774, -0.734997, 0, 1.0};
Point(128) = {0.073000, -0.734423, 0, 1.0};
Point(129) = {0.071880, -0.733909, 0, 1.0};
Point(130) = {0.070418, -0.733480, 0, 1.0};
Point(131) = {0.068616, -0.733137, 0, 1.0};
Point(132) = {0.066488, -0.732870, 0, 1.0};
Point(133) = {0.064042, -0.732662, 0, 1.0};
Point(134) = {0.061292, -0.732501, 0, 1.0};
Point(135) = {0.058255, -0.732363, 0, 1.0};
Point(136) = {0.054943, -0.732232, 0, 1.0};
Point(137) = {0.051372, -0.732103, 0, 1.0};
Point(138) = {0.047561, -0.731965, 0, 1.0};
Point(139) = {0.043525, -0.731810, 0, 1.0};
Point(140) = {0.039285, -0.731630, 0, 1.0};
Point(141) = {0.034856, -0.731419, 0, 1.0};
Point(142) = {0.030261, -0.731172, 0, 1.0};
Point(143) = {0.025520, -0.730886, 0, 1.0};
Point(144) = {0.020654, -0.730555, 0, 1.0};
Point(145) = {0.015683, -0.730183, 0, 1.0};
Point(146) = {0.010630, -0.729769, 0, 1.0};
Point(147) = {0.005514, -0.729314, 0, 1.0};
Point(148) = {0.000360, -0.728823, 0, 1.0};
Point(149) = {-0.004813, -0.728298, 0, 1.0};
Point(150) = {-0.009981, -0.727742, 0, 1.0};
Point(151) = {-0.015123, -0.727161, 0, 1.0};
Point(152) = {-0.020218, -0.726562, 0, 1.0};
Point(153) = {-0.025244, -0.725949, 0, 1.0};
Point(154) = {-0.030180, -0.725330, 0, 1.0};
Point(155) = {-0.035005, -0.724709, 0, 1.0};
Point(156) = {-0.039698, -0.724089, 0, 1.0};
Point(157) = {-0.044241, -0.723469, 0, 1.0};
Point(158) = {-0.048610, -0.722837, 0, 1.0};
Point(159) = {-0.052785, -0.722185, 0, 1.0};
Point(160) = {-0.056747, -0.721510, 0, 1.0};
Point(161) = {-0.060479, -0.720809, 0, 1.0};
Point(162) = {-0.063967, -0.720086, 0, 1.0};
Point(163) = {-0.067193, -0.719348, 0, 1.0};
Point(164) = {-0.070145, -0.718602, 0, 1.0};
Point(165) = {-0.072813, -0.717864, 0, 1.0};
Point(166) = {-0.074536, -0.717367, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
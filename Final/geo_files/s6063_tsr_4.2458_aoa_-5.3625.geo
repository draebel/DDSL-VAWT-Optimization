SetFactory("OpenCASCADE");

Point(1) = {0.149125, 0.749740, 0, 1.0};
Point(2) = {0.148498, 0.749715, 0, 1.0};
Point(3) = {0.146637, 0.749663, 0, 1.0};
Point(4) = {0.143588, 0.749616, 0, 1.0};
Point(5) = {0.139415, 0.749598, 0, 1.0};
Point(6) = {0.134200, 0.749620, 0, 1.0};
Point(7) = {0.128038, 0.749681, 0, 1.0};
Point(8) = {0.121023, 0.749770, 0, 1.0};
Point(9) = {0.113258, 0.749866, 0, 1.0};
Point(10) = {0.104849, 0.749953, 0, 1.0};
Point(11) = {0.095893, 0.750000, 0, 1.0};
Point(12) = {0.086497, 0.749988, 0, 1.0};
Point(13) = {0.076762, 0.749892, 0, 1.0};
Point(14) = {0.066782, 0.749698, 0, 1.0};
Point(15) = {0.056660, 0.749401, 0, 1.0};
Point(16) = {0.046507, 0.748994, 0, 1.0};
Point(17) = {0.036426, 0.748468, 0, 1.0};
Point(18) = {0.026521, 0.747821, 0, 1.0};
Point(19) = {0.016892, 0.747046, 0, 1.0};
Point(20) = {0.007633, 0.746147, 0, 1.0};
Point(21) = {-0.001166, 0.745124, 0, 1.0};
Point(22) = {-0.009425, 0.743985, 0, 1.0};
Point(23) = {-0.017066, 0.742737, 0, 1.0};
Point(24) = {-0.024027, 0.741397, 0, 1.0};
Point(25) = {-0.030244, 0.739980, 0, 1.0};
Point(26) = {-0.035672, 0.738508, 0, 1.0};
Point(27) = {-0.040269, 0.737010, 0, 1.0};
Point(28) = {-0.044003, 0.735514, 0, 1.0};
Point(29) = {-0.046852, 0.734066, 0, 1.0};
Point(30) = {-0.048808, 0.732711, 0, 1.0};
Point(31) = {-0.049870, 0.731547, 0, 1.0};
Point(32) = {-0.049849, 0.730681, 0, 1.0};
Point(33) = {-0.048685, 0.729991, 0, 1.0};
Point(34) = {-0.046511, 0.729403, 0, 1.0};
Point(35) = {-0.043349, 0.728995, 0, 1.0};
Point(36) = {-0.039219, 0.728786, 0, 1.0};
Point(37) = {-0.034147, 0.728786, 0, 1.0};
Point(38) = {-0.028171, 0.728995, 0, 1.0};
Point(39) = {-0.021341, 0.729408, 0, 1.0};
Point(40) = {-0.013718, 0.730005, 0, 1.0};
Point(41) = {-0.005377, 0.730773, 0, 1.0};
Point(42) = {0.003594, 0.731692, 0, 1.0};
Point(43) = {0.013101, 0.732735, 0, 1.0};
Point(44) = {0.023035, 0.733884, 0, 1.0};
Point(45) = {0.033288, 0.735120, 0, 1.0};
Point(46) = {0.043746, 0.736421, 0, 1.0};
Point(47) = {0.054293, 0.737765, 0, 1.0};
Point(48) = {0.064811, 0.739130, 0, 1.0};
Point(49) = {0.075183, 0.740495, 0, 1.0};
Point(50) = {0.085292, 0.741835, 0, 1.0};
Point(51) = {0.095021, 0.743132, 0, 1.0};
Point(52) = {0.104261, 0.744361, 0, 1.0};
Point(53) = {0.112900, 0.745500, 0, 1.0};
Point(54) = {0.120837, 0.746526, 0, 1.0};
Point(55) = {0.127966, 0.747424, 0, 1.0};
Point(56) = {0.134196, 0.748176, 0, 1.0};
Point(57) = {0.139436, 0.748778, 0, 1.0};
Point(58) = {0.143611, 0.749226, 0, 1.0};
Point(59) = {0.146650, 0.749525, 0, 1.0};
Point(60) = {0.148503, 0.749689, 0, 1.0};
Point(61) = {-0.149125, -0.749740, 0, 1.0};
Point(62) = {-0.148498, -0.749715, 0, 1.0};
Point(63) = {-0.146637, -0.749663, 0, 1.0};
Point(64) = {-0.143588, -0.749616, 0, 1.0};
Point(65) = {-0.139415, -0.749598, 0, 1.0};
Point(66) = {-0.134200, -0.749620, 0, 1.0};
Point(67) = {-0.128038, -0.749681, 0, 1.0};
Point(68) = {-0.121023, -0.749770, 0, 1.0};
Point(69) = {-0.113258, -0.749866, 0, 1.0};
Point(70) = {-0.104849, -0.749953, 0, 1.0};
Point(71) = {-0.095893, -0.750000, 0, 1.0};
Point(72) = {-0.086497, -0.749988, 0, 1.0};
Point(73) = {-0.076762, -0.749892, 0, 1.0};
Point(74) = {-0.066782, -0.749698, 0, 1.0};
Point(75) = {-0.056660, -0.749401, 0, 1.0};
Point(76) = {-0.046507, -0.748994, 0, 1.0};
Point(77) = {-0.036426, -0.748468, 0, 1.0};
Point(78) = {-0.026521, -0.747821, 0, 1.0};
Point(79) = {-0.016892, -0.747046, 0, 1.0};
Point(80) = {-0.007633, -0.746147, 0, 1.0};
Point(81) = {0.001166, -0.745124, 0, 1.0};
Point(82) = {0.009425, -0.743985, 0, 1.0};
Point(83) = {0.017066, -0.742737, 0, 1.0};
Point(84) = {0.024027, -0.741397, 0, 1.0};
Point(85) = {0.030244, -0.739980, 0, 1.0};
Point(86) = {0.035672, -0.738508, 0, 1.0};
Point(87) = {0.040269, -0.737010, 0, 1.0};
Point(88) = {0.044003, -0.735514, 0, 1.0};
Point(89) = {0.046852, -0.734066, 0, 1.0};
Point(90) = {0.048808, -0.732711, 0, 1.0};
Point(91) = {0.049870, -0.731547, 0, 1.0};
Point(92) = {0.049849, -0.730681, 0, 1.0};
Point(93) = {0.048685, -0.729991, 0, 1.0};
Point(94) = {0.046511, -0.729403, 0, 1.0};
Point(95) = {0.043349, -0.728995, 0, 1.0};
Point(96) = {0.039219, -0.728786, 0, 1.0};
Point(97) = {0.034147, -0.728786, 0, 1.0};
Point(98) = {0.028171, -0.728995, 0, 1.0};
Point(99) = {0.021341, -0.729408, 0, 1.0};
Point(100) = {0.013718, -0.730005, 0, 1.0};
Point(101) = {0.005377, -0.730773, 0, 1.0};
Point(102) = {-0.003594, -0.731692, 0, 1.0};
Point(103) = {-0.013101, -0.732735, 0, 1.0};
Point(104) = {-0.023035, -0.733884, 0, 1.0};
Point(105) = {-0.033288, -0.735120, 0, 1.0};
Point(106) = {-0.043746, -0.736421, 0, 1.0};
Point(107) = {-0.054293, -0.737765, 0, 1.0};
Point(108) = {-0.064811, -0.739130, 0, 1.0};
Point(109) = {-0.075183, -0.740495, 0, 1.0};
Point(110) = {-0.085292, -0.741835, 0, 1.0};
Point(111) = {-0.095021, -0.743132, 0, 1.0};
Point(112) = {-0.104261, -0.744361, 0, 1.0};
Point(113) = {-0.112900, -0.745500, 0, 1.0};
Point(114) = {-0.120837, -0.746526, 0, 1.0};
Point(115) = {-0.127966, -0.747424, 0, 1.0};
Point(116) = {-0.134196, -0.748176, 0, 1.0};
Point(117) = {-0.139436, -0.748778, 0, 1.0};
Point(118) = {-0.143611, -0.749226, 0, 1.0};
Point(119) = {-0.146650, -0.749525, 0, 1.0};
Point(120) = {-0.148503, -0.749689, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
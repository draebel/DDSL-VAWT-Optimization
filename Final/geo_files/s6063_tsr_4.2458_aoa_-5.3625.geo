SetFactory("OpenCASCADE");

Point(1) = {0.074645, 0.749805, 0, 1.0};
Point(2) = {0.074175, 0.749786, 0, 1.0};
Point(3) = {0.072778, 0.749747, 0, 1.0};
Point(4) = {0.070490, 0.749712, 0, 1.0};
Point(5) = {0.067359, 0.749698, 0, 1.0};
Point(6) = {0.063445, 0.749715, 0, 1.0};
Point(7) = {0.058821, 0.749760, 0, 1.0};
Point(8) = {0.053557, 0.749827, 0, 1.0};
Point(9) = {0.047729, 0.749900, 0, 1.0};
Point(10) = {0.041419, 0.749965, 0, 1.0};
Point(11) = {0.034698, 0.750000, 0, 1.0};
Point(12) = {0.027647, 0.749991, 0, 1.0};
Point(13) = {0.020341, 0.749919, 0, 1.0};
Point(14) = {0.012852, 0.749773, 0, 1.0};
Point(15) = {0.005256, 0.749550, 0, 1.0};
Point(16) = {-0.002363, 0.749245, 0, 1.0};
Point(17) = {-0.009928, 0.748850, 0, 1.0};
Point(18) = {-0.017361, 0.748365, 0, 1.0};
Point(19) = {-0.024587, 0.747783, 0, 1.0};
Point(20) = {-0.031535, 0.747108, 0, 1.0};
Point(21) = {-0.038138, 0.746341, 0, 1.0};
Point(22) = {-0.044336, 0.745486, 0, 1.0};
Point(23) = {-0.050070, 0.744550, 0, 1.0};
Point(24) = {-0.055294, 0.743544, 0, 1.0};
Point(25) = {-0.059960, 0.742480, 0, 1.0};
Point(26) = {-0.064033, 0.741376, 0, 1.0};
Point(27) = {-0.067482, 0.740252, 0, 1.0};
Point(28) = {-0.070285, 0.739129, 0, 1.0};
Point(29) = {-0.072423, 0.738042, 0, 1.0};
Point(30) = {-0.073891, 0.737026, 0, 1.0};
Point(31) = {-0.074688, 0.736152, 0, 1.0};
Point(32) = {-0.074672, 0.735502, 0, 1.0};
Point(33) = {-0.073799, 0.734984, 0, 1.0};
Point(34) = {-0.072167, 0.734543, 0, 1.0};
Point(35) = {-0.069794, 0.734237, 0, 1.0};
Point(36) = {-0.066695, 0.734080, 0, 1.0};
Point(37) = {-0.062889, 0.734080, 0, 1.0};
Point(38) = {-0.058404, 0.734237, 0, 1.0};
Point(39) = {-0.053279, 0.734547, 0, 1.0};
Point(40) = {-0.047558, 0.734995, 0, 1.0};
Point(41) = {-0.041298, 0.735572, 0, 1.0};
Point(42) = {-0.034566, 0.736261, 0, 1.0};
Point(43) = {-0.027432, 0.737044, 0, 1.0};
Point(44) = {-0.019977, 0.737906, 0, 1.0};
Point(45) = {-0.012283, 0.738834, 0, 1.0};
Point(46) = {-0.004435, 0.739810, 0, 1.0};
Point(47) = {0.003480, 0.740818, 0, 1.0};
Point(48) = {0.011373, 0.741842, 0, 1.0};
Point(49) = {0.019157, 0.742867, 0, 1.0};
Point(50) = {0.026743, 0.743873, 0, 1.0};
Point(51) = {0.034044, 0.744846, 0, 1.0};
Point(52) = {0.040978, 0.745769, 0, 1.0};
Point(53) = {0.047461, 0.746623, 0, 1.0};
Point(54) = {0.053417, 0.747393, 0, 1.0};
Point(55) = {0.058767, 0.748067, 0, 1.0};
Point(56) = {0.063442, 0.748631, 0, 1.0};
Point(57) = {0.067374, 0.749083, 0, 1.0};
Point(58) = {0.070507, 0.749419, 0, 1.0};
Point(59) = {0.072788, 0.749644, 0, 1.0};
Point(60) = {0.074178, 0.749767, 0, 1.0};
Point(61) = {-0.074645, -0.749805, 0, 1.0};
Point(62) = {-0.074175, -0.749786, 0, 1.0};
Point(63) = {-0.072778, -0.749747, 0, 1.0};
Point(64) = {-0.070490, -0.749712, 0, 1.0};
Point(65) = {-0.067359, -0.749698, 0, 1.0};
Point(66) = {-0.063445, -0.749715, 0, 1.0};
Point(67) = {-0.058821, -0.749760, 0, 1.0};
Point(68) = {-0.053557, -0.749827, 0, 1.0};
Point(69) = {-0.047729, -0.749900, 0, 1.0};
Point(70) = {-0.041419, -0.749965, 0, 1.0};
Point(71) = {-0.034698, -0.750000, 0, 1.0};
Point(72) = {-0.027647, -0.749991, 0, 1.0};
Point(73) = {-0.020341, -0.749919, 0, 1.0};
Point(74) = {-0.012852, -0.749773, 0, 1.0};
Point(75) = {-0.005256, -0.749550, 0, 1.0};
Point(76) = {0.002363, -0.749245, 0, 1.0};
Point(77) = {0.009928, -0.748850, 0, 1.0};
Point(78) = {0.017361, -0.748365, 0, 1.0};
Point(79) = {0.024587, -0.747783, 0, 1.0};
Point(80) = {0.031535, -0.747108, 0, 1.0};
Point(81) = {0.038138, -0.746341, 0, 1.0};
Point(82) = {0.044336, -0.745486, 0, 1.0};
Point(83) = {0.050070, -0.744550, 0, 1.0};
Point(84) = {0.055294, -0.743544, 0, 1.0};
Point(85) = {0.059960, -0.742480, 0, 1.0};
Point(86) = {0.064033, -0.741376, 0, 1.0};
Point(87) = {0.067482, -0.740252, 0, 1.0};
Point(88) = {0.070285, -0.739129, 0, 1.0};
Point(89) = {0.072423, -0.738042, 0, 1.0};
Point(90) = {0.073891, -0.737026, 0, 1.0};
Point(91) = {0.074688, -0.736152, 0, 1.0};
Point(92) = {0.074672, -0.735502, 0, 1.0};
Point(93) = {0.073799, -0.734984, 0, 1.0};
Point(94) = {0.072167, -0.734543, 0, 1.0};
Point(95) = {0.069794, -0.734237, 0, 1.0};
Point(96) = {0.066695, -0.734080, 0, 1.0};
Point(97) = {0.062889, -0.734080, 0, 1.0};
Point(98) = {0.058404, -0.734237, 0, 1.0};
Point(99) = {0.053279, -0.734547, 0, 1.0};
Point(100) = {0.047558, -0.734995, 0, 1.0};
Point(101) = {0.041298, -0.735572, 0, 1.0};
Point(102) = {0.034566, -0.736261, 0, 1.0};
Point(103) = {0.027432, -0.737044, 0, 1.0};
Point(104) = {0.019977, -0.737906, 0, 1.0};
Point(105) = {0.012283, -0.738834, 0, 1.0};
Point(106) = {0.004435, -0.739810, 0, 1.0};
Point(107) = {-0.003480, -0.740818, 0, 1.0};
Point(108) = {-0.011373, -0.741842, 0, 1.0};
Point(109) = {-0.019157, -0.742867, 0, 1.0};
Point(110) = {-0.026743, -0.743873, 0, 1.0};
Point(111) = {-0.034044, -0.744846, 0, 1.0};
Point(112) = {-0.040978, -0.745769, 0, 1.0};
Point(113) = {-0.047461, -0.746623, 0, 1.0};
Point(114) = {-0.053417, -0.747393, 0, 1.0};
Point(115) = {-0.058767, -0.748067, 0, 1.0};
Point(116) = {-0.063442, -0.748631, 0, 1.0};
Point(117) = {-0.067374, -0.749083, 0, 1.0};
Point(118) = {-0.070507, -0.749419, 0, 1.0};
Point(119) = {-0.072788, -0.749644, 0, 1.0};
Point(120) = {-0.074178, -0.749767, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
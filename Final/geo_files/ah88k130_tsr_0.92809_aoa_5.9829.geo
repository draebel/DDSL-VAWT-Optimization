SetFactory("OpenCASCADE");

Point(1) = {0.074819, 0.726456, 0, 1.0};
Point(2) = {0.074692, 0.726484, 0, 1.0};
Point(3) = {0.072331, 0.727347, 0, 1.0};
Point(4) = {0.069687, 0.728321, 0, 1.0};
Point(5) = {0.066776, 0.729427, 0, 1.0};
Point(6) = {0.063603, 0.730622, 0, 1.0};
Point(7) = {0.060187, 0.731937, 0, 1.0};
Point(8) = {0.056542, 0.733366, 0, 1.0};
Point(9) = {0.052684, 0.734890, 0, 1.0};
Point(10) = {0.048629, 0.736513, 0, 1.0};
Point(11) = {0.044390, 0.738194, 0, 1.0};
Point(12) = {0.039981, 0.739879, 0, 1.0};
Point(13) = {0.035407, 0.741407, 0, 1.0};
Point(14) = {0.030685, 0.742778, 0, 1.0};
Point(15) = {0.025841, 0.744019, 0, 1.0};
Point(16) = {0.020899, 0.745166, 0, 1.0};
Point(17) = {0.015877, 0.746203, 0, 1.0};
Point(18) = {0.010802, 0.747132, 0, 1.0};
Point(19) = {0.005691, 0.747944, 0, 1.0};
Point(20) = {0.000566, 0.748615, 0, 1.0};
Point(21) = {-0.004554, 0.749121, 0, 1.0};
Point(22) = {-0.009644, 0.749513, 0, 1.0};
Point(23) = {-0.014677, 0.749785, 0, 1.0};
Point(24) = {-0.019635, 0.749947, 0, 1.0};
Point(25) = {-0.024494, 0.750000, 0, 1.0};
Point(26) = {-0.029234, 0.749950, 0, 1.0};
Point(27) = {-0.033834, 0.749808, 0, 1.0};
Point(28) = {-0.038275, 0.749568, 0, 1.0};
Point(29) = {-0.042534, 0.749244, 0, 1.0};
Point(30) = {-0.046594, 0.748837, 0, 1.0};
Point(31) = {-0.050438, 0.748361, 0, 1.0};
Point(32) = {-0.054051, 0.747802, 0, 1.0};
Point(33) = {-0.057413, 0.747196, 0, 1.0};
Point(34) = {-0.060510, 0.746526, 0, 1.0};
Point(35) = {-0.063329, 0.745824, 0, 1.0};
Point(36) = {-0.065860, 0.745068, 0, 1.0};
Point(37) = {-0.068085, 0.744308, 0, 1.0};
Point(38) = {-0.070001, 0.743500, 0, 1.0};
Point(39) = {-0.071586, 0.742762, 0, 1.0};
Point(40) = {-0.072851, 0.741963, 0, 1.0};
Point(41) = {-0.073772, 0.741248, 0, 1.0};
Point(42) = {-0.074350, 0.740603, 0, 1.0};
Point(43) = {-0.074591, 0.739921, 0, 1.0};
Point(44) = {-0.074465, 0.739508, 0, 1.0};
Point(45) = {-0.074002, 0.739060, 0, 1.0};
Point(46) = {-0.073204, 0.738589, 0, 1.0};
Point(47) = {-0.072070, 0.738146, 0, 1.0};
Point(48) = {-0.070610, 0.737696, 0, 1.0};
Point(49) = {-0.068831, 0.737190, 0, 1.0};
Point(50) = {-0.066735, 0.736724, 0, 1.0};
Point(51) = {-0.064337, 0.736207, 0, 1.0};
Point(52) = {-0.061645, 0.735700, 0, 1.0};
Point(53) = {-0.058673, 0.735172, 0, 1.0};
Point(54) = {-0.055430, 0.734643, 0, 1.0};
Point(55) = {-0.051934, 0.734093, 0, 1.0};
Point(56) = {-0.048197, 0.733547, 0, 1.0};
Point(57) = {-0.044237, 0.732992, 0, 1.0};
Point(58) = {-0.040071, 0.732433, 0, 1.0};
Point(59) = {-0.035714, 0.731875, 0, 1.0};
Point(60) = {-0.031186, 0.731324, 0, 1.0};
Point(61) = {-0.026510, 0.730770, 0, 1.0};
Point(62) = {-0.021701, 0.730228, 0, 1.0};
Point(63) = {-0.016782, 0.729701, 0, 1.0};
Point(64) = {-0.011774, 0.729185, 0, 1.0};
Point(65) = {-0.006695, 0.728690, 0, 1.0};
Point(66) = {-0.001572, 0.728219, 0, 1.0};
Point(67) = {0.003578, 0.727782, 0, 1.0};
Point(68) = {0.008732, 0.727387, 0, 1.0};
Point(69) = {0.013870, 0.727053, 0, 1.0};
Point(70) = {0.018969, 0.726748, 0, 1.0};
Point(71) = {0.024003, 0.726481, 0, 1.0};
Point(72) = {0.028952, 0.726238, 0, 1.0};
Point(73) = {0.033797, 0.726045, 0, 1.0};
Point(74) = {0.038515, 0.725884, 0, 1.0};
Point(75) = {0.043092, 0.725811, 0, 1.0};
Point(76) = {0.047513, 0.725864, 0, 1.0};
Point(77) = {0.051748, 0.725962, 0, 1.0};
Point(78) = {0.055771, 0.726002, 0, 1.0};
Point(79) = {0.059562, 0.725978, 0, 1.0};
Point(80) = {0.063106, 0.725881, 0, 1.0};
Point(81) = {0.066393, 0.725765, 0, 1.0};
Point(82) = {0.069393, 0.725513, 0, 1.0};
Point(83) = {0.072112, 0.725261, 0, 1.0};
Point(84) = {0.074535, 0.724984, 0, 1.0};
Point(85) = {0.074663, 0.724967, 0, 1.0};
Point(86) = {-0.074819, -0.726456, 0, 1.0};
Point(87) = {-0.074692, -0.726484, 0, 1.0};
Point(88) = {-0.072331, -0.727347, 0, 1.0};
Point(89) = {-0.069687, -0.728321, 0, 1.0};
Point(90) = {-0.066776, -0.729427, 0, 1.0};
Point(91) = {-0.063603, -0.730622, 0, 1.0};
Point(92) = {-0.060187, -0.731937, 0, 1.0};
Point(93) = {-0.056542, -0.733366, 0, 1.0};
Point(94) = {-0.052684, -0.734890, 0, 1.0};
Point(95) = {-0.048629, -0.736513, 0, 1.0};
Point(96) = {-0.044390, -0.738194, 0, 1.0};
Point(97) = {-0.039981, -0.739879, 0, 1.0};
Point(98) = {-0.035407, -0.741407, 0, 1.0};
Point(99) = {-0.030685, -0.742778, 0, 1.0};
Point(100) = {-0.025841, -0.744019, 0, 1.0};
Point(101) = {-0.020899, -0.745166, 0, 1.0};
Point(102) = {-0.015877, -0.746203, 0, 1.0};
Point(103) = {-0.010802, -0.747132, 0, 1.0};
Point(104) = {-0.005691, -0.747944, 0, 1.0};
Point(105) = {-0.000566, -0.748615, 0, 1.0};
Point(106) = {0.004554, -0.749121, 0, 1.0};
Point(107) = {0.009644, -0.749513, 0, 1.0};
Point(108) = {0.014677, -0.749785, 0, 1.0};
Point(109) = {0.019635, -0.749947, 0, 1.0};
Point(110) = {0.024494, -0.750000, 0, 1.0};
Point(111) = {0.029234, -0.749950, 0, 1.0};
Point(112) = {0.033834, -0.749808, 0, 1.0};
Point(113) = {0.038275, -0.749568, 0, 1.0};
Point(114) = {0.042534, -0.749244, 0, 1.0};
Point(115) = {0.046594, -0.748837, 0, 1.0};
Point(116) = {0.050438, -0.748361, 0, 1.0};
Point(117) = {0.054051, -0.747802, 0, 1.0};
Point(118) = {0.057413, -0.747196, 0, 1.0};
Point(119) = {0.060510, -0.746526, 0, 1.0};
Point(120) = {0.063329, -0.745824, 0, 1.0};
Point(121) = {0.065860, -0.745068, 0, 1.0};
Point(122) = {0.068085, -0.744308, 0, 1.0};
Point(123) = {0.070001, -0.743500, 0, 1.0};
Point(124) = {0.071586, -0.742762, 0, 1.0};
Point(125) = {0.072851, -0.741963, 0, 1.0};
Point(126) = {0.073772, -0.741248, 0, 1.0};
Point(127) = {0.074350, -0.740603, 0, 1.0};
Point(128) = {0.074591, -0.739921, 0, 1.0};
Point(129) = {0.074465, -0.739508, 0, 1.0};
Point(130) = {0.074002, -0.739060, 0, 1.0};
Point(131) = {0.073204, -0.738589, 0, 1.0};
Point(132) = {0.072070, -0.738146, 0, 1.0};
Point(133) = {0.070610, -0.737696, 0, 1.0};
Point(134) = {0.068831, -0.737190, 0, 1.0};
Point(135) = {0.066735, -0.736724, 0, 1.0};
Point(136) = {0.064337, -0.736207, 0, 1.0};
Point(137) = {0.061645, -0.735700, 0, 1.0};
Point(138) = {0.058673, -0.735172, 0, 1.0};
Point(139) = {0.055430, -0.734643, 0, 1.0};
Point(140) = {0.051934, -0.734093, 0, 1.0};
Point(141) = {0.048197, -0.733547, 0, 1.0};
Point(142) = {0.044237, -0.732992, 0, 1.0};
Point(143) = {0.040071, -0.732433, 0, 1.0};
Point(144) = {0.035714, -0.731875, 0, 1.0};
Point(145) = {0.031186, -0.731324, 0, 1.0};
Point(146) = {0.026510, -0.730770, 0, 1.0};
Point(147) = {0.021701, -0.730228, 0, 1.0};
Point(148) = {0.016782, -0.729701, 0, 1.0};
Point(149) = {0.011774, -0.729185, 0, 1.0};
Point(150) = {0.006695, -0.728690, 0, 1.0};
Point(151) = {0.001572, -0.728219, 0, 1.0};
Point(152) = {-0.003578, -0.727782, 0, 1.0};
Point(153) = {-0.008732, -0.727387, 0, 1.0};
Point(154) = {-0.013870, -0.727053, 0, 1.0};
Point(155) = {-0.018969, -0.726748, 0, 1.0};
Point(156) = {-0.024003, -0.726481, 0, 1.0};
Point(157) = {-0.028952, -0.726238, 0, 1.0};
Point(158) = {-0.033797, -0.726045, 0, 1.0};
Point(159) = {-0.038515, -0.725884, 0, 1.0};
Point(160) = {-0.043092, -0.725811, 0, 1.0};
Point(161) = {-0.047513, -0.725864, 0, 1.0};
Point(162) = {-0.051748, -0.725962, 0, 1.0};
Point(163) = {-0.055771, -0.726002, 0, 1.0};
Point(164) = {-0.059562, -0.725978, 0, 1.0};
Point(165) = {-0.063106, -0.725881, 0, 1.0};
Point(166) = {-0.066393, -0.725765, 0, 1.0};
Point(167) = {-0.069393, -0.725513, 0, 1.0};
Point(168) = {-0.072112, -0.725261, 0, 1.0};
Point(169) = {-0.074535, -0.724984, 0, 1.0};
Point(170) = {-0.074663, -0.724967, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
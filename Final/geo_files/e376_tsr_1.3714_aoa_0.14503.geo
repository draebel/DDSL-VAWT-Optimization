SetFactory("OpenCASCADE");

Point(1) = {0.074712, 0.740686, 0, 1.0};
Point(2) = {0.073849, 0.740798, 0, 1.0};
Point(3) = {0.072422, 0.740989, 0, 1.0};
Point(4) = {0.070450, 0.741275, 0, 1.0};
Point(5) = {0.067975, 0.741658, 0, 1.0};
Point(6) = {0.065035, 0.742133, 0, 1.0};
Point(7) = {0.061673, 0.742689, 0, 1.0};
Point(8) = {0.057936, 0.743320, 0, 1.0};
Point(9) = {0.053873, 0.744011, 0, 1.0};
Point(10) = {0.049538, 0.744750, 0, 1.0};
Point(11) = {0.044988, 0.745522, 0, 1.0};
Point(12) = {0.040280, 0.746303, 0, 1.0};
Point(13) = {0.035475, 0.747080, 0, 1.0};
Point(14) = {0.030634, 0.747829, 0, 1.0};
Point(15) = {0.025815, 0.748520, 0, 1.0};
Point(16) = {0.021081, 0.749121, 0, 1.0};
Point(17) = {0.016470, 0.749585, 0, 1.0};
Point(18) = {0.012000, 0.749882, 0, 1.0};
Point(19) = {0.007690, 0.750000, 0, 1.0};
Point(20) = {0.003558, 0.749936, 0, 1.0};
Point(21) = {-0.000381, 0.749691, 0, 1.0};
Point(22) = {-0.004113, 0.749283, 0, 1.0};
Point(23) = {-0.007618, 0.748738, 0, 1.0};
Point(24) = {-0.010863, 0.748084, 0, 1.0};
Point(25) = {-0.013816, 0.747337, 0, 1.0};
Point(26) = {-0.016454, 0.746521, 0, 1.0};
Point(27) = {-0.018753, 0.745654, 0, 1.0};
Point(28) = {-0.020701, 0.744757, 0, 1.0};
Point(29) = {-0.022285, 0.743856, 0, 1.0};
Point(30) = {-0.023502, 0.742977, 0, 1.0};
Point(31) = {-0.024351, 0.742156, 0, 1.0};
Point(32) = {-0.024845, 0.741430, 0, 1.0};
Point(33) = {-0.024999, 0.740871, 0, 1.0};
Point(34) = {-0.024793, 0.740608, 0, 1.0};
Point(35) = {-0.024148, 0.740692, 0, 1.0};
Point(36) = {-0.022980, 0.741159, 0, 1.0};
Point(37) = {-0.021185, 0.742040, 0, 1.0};
Point(38) = {-0.018649, 0.743317, 0, 1.0};
Point(39) = {-0.015245, 0.744903, 0, 1.0};
Point(40) = {-0.010857, 0.746659, 0, 1.0};
Point(41) = {-0.005379, 0.748278, 0, 1.0};
Point(42) = {0.000985, 0.749274, 0, 1.0};
Point(43) = {0.007637, 0.749510, 0, 1.0};
Point(44) = {0.014226, 0.749255, 0, 1.0};
Point(45) = {0.020674, 0.748722, 0, 1.0};
Point(46) = {0.026928, 0.748004, 0, 1.0};
Point(47) = {0.032941, 0.747189, 0, 1.0};
Point(48) = {0.038677, 0.746328, 0, 1.0};
Point(49) = {0.044105, 0.745467, 0, 1.0};
Point(50) = {0.049190, 0.744625, 0, 1.0};
Point(51) = {0.053893, 0.743829, 0, 1.0};
Point(52) = {0.058180, 0.743096, 0, 1.0};
Point(53) = {0.062020, 0.742445, 0, 1.0};
Point(54) = {0.065389, 0.741887, 0, 1.0};
Point(55) = {0.068266, 0.741434, 0, 1.0};
Point(56) = {0.070633, 0.741094, 0, 1.0};
Point(57) = {0.072496, 0.740875, 0, 1.0};
Point(58) = {0.073864, 0.740747, 0, 1.0};
Point(59) = {0.074712, 0.740676, 0, 1.0};
Point(60) = {-0.074712, -0.740686, 0, 1.0};
Point(61) = {-0.073849, -0.740798, 0, 1.0};
Point(62) = {-0.072422, -0.740989, 0, 1.0};
Point(63) = {-0.070450, -0.741275, 0, 1.0};
Point(64) = {-0.067975, -0.741658, 0, 1.0};
Point(65) = {-0.065035, -0.742133, 0, 1.0};
Point(66) = {-0.061673, -0.742689, 0, 1.0};
Point(67) = {-0.057936, -0.743320, 0, 1.0};
Point(68) = {-0.053873, -0.744011, 0, 1.0};
Point(69) = {-0.049538, -0.744750, 0, 1.0};
Point(70) = {-0.044988, -0.745522, 0, 1.0};
Point(71) = {-0.040280, -0.746303, 0, 1.0};
Point(72) = {-0.035475, -0.747080, 0, 1.0};
Point(73) = {-0.030634, -0.747829, 0, 1.0};
Point(74) = {-0.025815, -0.748520, 0, 1.0};
Point(75) = {-0.021081, -0.749121, 0, 1.0};
Point(76) = {-0.016470, -0.749585, 0, 1.0};
Point(77) = {-0.012000, -0.749882, 0, 1.0};
Point(78) = {-0.007690, -0.750000, 0, 1.0};
Point(79) = {-0.003558, -0.749936, 0, 1.0};
Point(80) = {0.000381, -0.749691, 0, 1.0};
Point(81) = {0.004113, -0.749283, 0, 1.0};
Point(82) = {0.007618, -0.748738, 0, 1.0};
Point(83) = {0.010863, -0.748084, 0, 1.0};
Point(84) = {0.013816, -0.747337, 0, 1.0};
Point(85) = {0.016454, -0.746521, 0, 1.0};
Point(86) = {0.018753, -0.745654, 0, 1.0};
Point(87) = {0.020701, -0.744757, 0, 1.0};
Point(88) = {0.022285, -0.743856, 0, 1.0};
Point(89) = {0.023502, -0.742977, 0, 1.0};
Point(90) = {0.024351, -0.742156, 0, 1.0};
Point(91) = {0.024845, -0.741430, 0, 1.0};
Point(92) = {0.024999, -0.740871, 0, 1.0};
Point(93) = {0.024793, -0.740608, 0, 1.0};
Point(94) = {0.024148, -0.740692, 0, 1.0};
Point(95) = {0.022980, -0.741159, 0, 1.0};
Point(96) = {0.021185, -0.742040, 0, 1.0};
Point(97) = {0.018649, -0.743317, 0, 1.0};
Point(98) = {0.015245, -0.744903, 0, 1.0};
Point(99) = {0.010857, -0.746659, 0, 1.0};
Point(100) = {0.005379, -0.748278, 0, 1.0};
Point(101) = {-0.000985, -0.749274, 0, 1.0};
Point(102) = {-0.007637, -0.749510, 0, 1.0};
Point(103) = {-0.014226, -0.749255, 0, 1.0};
Point(104) = {-0.020674, -0.748722, 0, 1.0};
Point(105) = {-0.026928, -0.748004, 0, 1.0};
Point(106) = {-0.032941, -0.747189, 0, 1.0};
Point(107) = {-0.038677, -0.746328, 0, 1.0};
Point(108) = {-0.044105, -0.745467, 0, 1.0};
Point(109) = {-0.049190, -0.744625, 0, 1.0};
Point(110) = {-0.053893, -0.743829, 0, 1.0};
Point(111) = {-0.058180, -0.743096, 0, 1.0};
Point(112) = {-0.062020, -0.742445, 0, 1.0};
Point(113) = {-0.065389, -0.741887, 0, 1.0};
Point(114) = {-0.068266, -0.741434, 0, 1.0};
Point(115) = {-0.070633, -0.741094, 0, 1.0};
Point(116) = {-0.072496, -0.740875, 0, 1.0};
Point(117) = {-0.073864, -0.740747, 0, 1.0};
Point(118) = {-0.074712, -0.740676, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:79};
Spline(6) = {79:101};
Spline(7) = {101:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
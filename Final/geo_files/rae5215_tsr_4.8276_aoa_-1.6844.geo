SetFactory("OpenCASCADE");

Point(1) = {0.112418, 0.744322, 0, 1.0};
Point(2) = {0.112055, 0.744366, 0, 1.0};
Point(3) = {0.110971, 0.744498, 0, 1.0};
Point(4) = {0.109176, 0.744716, 0, 1.0};
Point(5) = {0.106687, 0.745009, 0, 1.0};
Point(6) = {0.103527, 0.745382, 0, 1.0};
Point(7) = {0.099728, 0.745819, 0, 1.0};
Point(8) = {0.095329, 0.746298, 0, 1.0};
Point(9) = {0.090368, 0.746831, 0, 1.0};
Point(10) = {0.084896, 0.747401, 0, 1.0};
Point(11) = {0.078965, 0.747979, 0, 1.0};
Point(12) = {0.072632, 0.748549, 0, 1.0};
Point(13) = {0.065960, 0.749071, 0, 1.0};
Point(14) = {0.059014, 0.749499, 0, 1.0};
Point(15) = {0.051864, 0.749787, 0, 1.0};
Point(16) = {0.044575, 0.749954, 0, 1.0};
Point(17) = {0.037219, 0.750000, 0, 1.0};
Point(18) = {0.029866, 0.749931, 0, 1.0};
Point(19) = {0.022587, 0.749783, 0, 1.0};
Point(20) = {0.015452, 0.749549, 0, 1.0};
Point(21) = {0.008528, 0.749246, 0, 1.0};
Point(22) = {0.001882, 0.748877, 0, 1.0};
Point(23) = {-0.004422, 0.748460, 0, 1.0};
Point(24) = {-0.010322, 0.747993, 0, 1.0};
Point(25) = {-0.015762, 0.747479, 0, 1.0};
Point(26) = {-0.020692, 0.746919, 0, 1.0};
Point(27) = {-0.025060, 0.746344, 0, 1.0};
Point(28) = {-0.028826, 0.745651, 0, 1.0};
Point(29) = {-0.031948, 0.744753, 0, 1.0};
Point(30) = {-0.033144, 0.744298, 0, 1.0};
Point(31) = {-0.034397, 0.743698, 0, 1.0};
Point(32) = {-0.035360, 0.743128, 0, 1.0};
Point(33) = {-0.036151, 0.742520, 0, 1.0};
Point(34) = {-0.036386, 0.742288, 0, 1.0};
Point(35) = {-0.036604, 0.742038, 0, 1.0};
Point(36) = {-0.036820, 0.741735, 0, 1.0};
Point(37) = {-0.037034, 0.741373, 0, 1.0};
Point(38) = {-0.037188, 0.741045, 0, 1.0};
Point(39) = {-0.037301, 0.740738, 0, 1.0};
Point(40) = {-0.037382, 0.740446, 0, 1.0};
Point(41) = {-0.037448, 0.740128, 0, 1.0};
Point(42) = {-0.037500, 0.739344, 0, 1.0};
Point(43) = {-0.037407, 0.738731, 0, 1.0};
Point(44) = {-0.037326, 0.738531, 0, 1.0};
Point(45) = {-0.037231, 0.738354, 0, 1.0};
Point(46) = {-0.037104, 0.738177, 0, 1.0};
Point(47) = {-0.036936, 0.738010, 0, 1.0};
Point(48) = {-0.036705, 0.737821, 0, 1.0};
Point(49) = {-0.036475, 0.737664, 0, 1.0};
Point(50) = {-0.036246, 0.737538, 0, 1.0};
Point(51) = {-0.036001, 0.737413, 0, 1.0};
Point(52) = {-0.035183, 0.737111, 0, 1.0};
Point(53) = {-0.034196, 0.736849, 0, 1.0};
Point(54) = {-0.032916, 0.736557, 0, 1.0};
Point(55) = {-0.031700, 0.736336, 0, 1.0};
Point(56) = {-0.028539, 0.735917, 0, 1.0};
Point(57) = {-0.024742, 0.735538, 0, 1.0};
Point(58) = {-0.020348, 0.735235, 0, 1.0};
Point(59) = {-0.015395, 0.734993, 0, 1.0};
Point(60) = {-0.009935, 0.734818, 0, 1.0};
Point(61) = {-0.004018, 0.734729, 0, 1.0};
Point(62) = {0.002298, 0.734727, 0, 1.0};
Point(63) = {0.008952, 0.734835, 0, 1.0};
Point(64) = {0.015877, 0.735077, 0, 1.0};
Point(65) = {0.023008, 0.735461, 0, 1.0};
Point(66) = {0.030276, 0.735994, 0, 1.0};
Point(67) = {0.037610, 0.736702, 0, 1.0};
Point(68) = {0.044939, 0.737584, 0, 1.0};
Point(69) = {0.052194, 0.738579, 0, 1.0};
Point(70) = {0.059305, 0.739615, 0, 1.0};
Point(71) = {0.066209, 0.740594, 0, 1.0};
Point(72) = {0.072841, 0.741436, 0, 1.0};
Point(73) = {0.079137, 0.742137, 0, 1.0};
Point(74) = {0.085035, 0.742684, 0, 1.0};
Point(75) = {0.090478, 0.743092, 0, 1.0};
Point(76) = {0.095415, 0.743380, 0, 1.0};
Point(77) = {0.099794, 0.743576, 0, 1.0};
Point(78) = {0.103577, 0.743681, 0, 1.0};
Point(79) = {0.106724, 0.743732, 0, 1.0};
Point(80) = {0.109204, 0.743751, 0, 1.0};
Point(81) = {0.110993, 0.743754, 0, 1.0};
Point(82) = {0.112074, 0.743751, 0, 1.0};
Point(83) = {0.112435, 0.743753, 0, 1.0};
Point(84) = {-0.112418, -0.744322, 0, 1.0};
Point(85) = {-0.112055, -0.744366, 0, 1.0};
Point(86) = {-0.110971, -0.744498, 0, 1.0};
Point(87) = {-0.109176, -0.744716, 0, 1.0};
Point(88) = {-0.106687, -0.745009, 0, 1.0};
Point(89) = {-0.103527, -0.745382, 0, 1.0};
Point(90) = {-0.099728, -0.745819, 0, 1.0};
Point(91) = {-0.095329, -0.746298, 0, 1.0};
Point(92) = {-0.090368, -0.746831, 0, 1.0};
Point(93) = {-0.084896, -0.747401, 0, 1.0};
Point(94) = {-0.078965, -0.747979, 0, 1.0};
Point(95) = {-0.072632, -0.748549, 0, 1.0};
Point(96) = {-0.065960, -0.749071, 0, 1.0};
Point(97) = {-0.059014, -0.749499, 0, 1.0};
Point(98) = {-0.051864, -0.749787, 0, 1.0};
Point(99) = {-0.044575, -0.749954, 0, 1.0};
Point(100) = {-0.037219, -0.750000, 0, 1.0};
Point(101) = {-0.029866, -0.749931, 0, 1.0};
Point(102) = {-0.022587, -0.749783, 0, 1.0};
Point(103) = {-0.015452, -0.749549, 0, 1.0};
Point(104) = {-0.008528, -0.749246, 0, 1.0};
Point(105) = {-0.001882, -0.748877, 0, 1.0};
Point(106) = {0.004422, -0.748460, 0, 1.0};
Point(107) = {0.010322, -0.747993, 0, 1.0};
Point(108) = {0.015762, -0.747479, 0, 1.0};
Point(109) = {0.020692, -0.746919, 0, 1.0};
Point(110) = {0.025060, -0.746344, 0, 1.0};
Point(111) = {0.028826, -0.745651, 0, 1.0};
Point(112) = {0.031948, -0.744753, 0, 1.0};
Point(113) = {0.033144, -0.744298, 0, 1.0};
Point(114) = {0.034397, -0.743698, 0, 1.0};
Point(115) = {0.035360, -0.743128, 0, 1.0};
Point(116) = {0.036151, -0.742520, 0, 1.0};
Point(117) = {0.036386, -0.742288, 0, 1.0};
Point(118) = {0.036604, -0.742038, 0, 1.0};
Point(119) = {0.036820, -0.741735, 0, 1.0};
Point(120) = {0.037034, -0.741373, 0, 1.0};
Point(121) = {0.037188, -0.741045, 0, 1.0};
Point(122) = {0.037301, -0.740738, 0, 1.0};
Point(123) = {0.037382, -0.740446, 0, 1.0};
Point(124) = {0.037448, -0.740128, 0, 1.0};
Point(125) = {0.037500, -0.739344, 0, 1.0};
Point(126) = {0.037407, -0.738731, 0, 1.0};
Point(127) = {0.037326, -0.738531, 0, 1.0};
Point(128) = {0.037231, -0.738354, 0, 1.0};
Point(129) = {0.037104, -0.738177, 0, 1.0};
Point(130) = {0.036936, -0.738010, 0, 1.0};
Point(131) = {0.036705, -0.737821, 0, 1.0};
Point(132) = {0.036475, -0.737664, 0, 1.0};
Point(133) = {0.036246, -0.737538, 0, 1.0};
Point(134) = {0.036001, -0.737413, 0, 1.0};
Point(135) = {0.035183, -0.737111, 0, 1.0};
Point(136) = {0.034196, -0.736849, 0, 1.0};
Point(137) = {0.032916, -0.736557, 0, 1.0};
Point(138) = {0.031700, -0.736336, 0, 1.0};
Point(139) = {0.028539, -0.735917, 0, 1.0};
Point(140) = {0.024742, -0.735538, 0, 1.0};
Point(141) = {0.020348, -0.735235, 0, 1.0};
Point(142) = {0.015395, -0.734993, 0, 1.0};
Point(143) = {0.009935, -0.734818, 0, 1.0};
Point(144) = {0.004018, -0.734729, 0, 1.0};
Point(145) = {-0.002298, -0.734727, 0, 1.0};
Point(146) = {-0.008952, -0.734835, 0, 1.0};
Point(147) = {-0.015877, -0.735077, 0, 1.0};
Point(148) = {-0.023008, -0.735461, 0, 1.0};
Point(149) = {-0.030276, -0.735994, 0, 1.0};
Point(150) = {-0.037610, -0.736702, 0, 1.0};
Point(151) = {-0.044939, -0.737584, 0, 1.0};
Point(152) = {-0.052194, -0.738579, 0, 1.0};
Point(153) = {-0.059305, -0.739615, 0, 1.0};
Point(154) = {-0.066209, -0.740594, 0, 1.0};
Point(155) = {-0.072841, -0.741436, 0, 1.0};
Point(156) = {-0.079137, -0.742137, 0, 1.0};
Point(157) = {-0.085035, -0.742684, 0, 1.0};
Point(158) = {-0.090478, -0.743092, 0, 1.0};
Point(159) = {-0.095415, -0.743380, 0, 1.0};
Point(160) = {-0.099794, -0.743576, 0, 1.0};
Point(161) = {-0.103577, -0.743681, 0, 1.0};
Point(162) = {-0.106724, -0.743732, 0, 1.0};
Point(163) = {-0.109204, -0.743751, 0, 1.0};
Point(164) = {-0.110993, -0.743754, 0, 1.0};
Point(165) = {-0.112074, -0.743751, 0, 1.0};
Point(166) = {-0.112435, -0.743753, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
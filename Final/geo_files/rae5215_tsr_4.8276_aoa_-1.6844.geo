SetFactory("OpenCASCADE");

Point(1) = {0.149891, 0.742430, 0, 1.0};
Point(2) = {0.149407, 0.742488, 0, 1.0};
Point(3) = {0.147962, 0.742663, 0, 1.0};
Point(4) = {0.145568, 0.742955, 0, 1.0};
Point(5) = {0.142249, 0.743346, 0, 1.0};
Point(6) = {0.138037, 0.743842, 0, 1.0};
Point(7) = {0.132971, 0.744425, 0, 1.0};
Point(8) = {0.127106, 0.745063, 0, 1.0};
Point(9) = {0.120490, 0.745775, 0, 1.0};
Point(10) = {0.113195, 0.746535, 0, 1.0};
Point(11) = {0.105287, 0.747305, 0, 1.0};
Point(12) = {0.096843, 0.748065, 0, 1.0};
Point(13) = {0.087946, 0.748762, 0, 1.0};
Point(14) = {0.078686, 0.749332, 0, 1.0};
Point(15) = {0.069152, 0.749716, 0, 1.0};
Point(16) = {0.059433, 0.749938, 0, 1.0};
Point(17) = {0.049625, 0.750000, 0, 1.0};
Point(18) = {0.039822, 0.749908, 0, 1.0};
Point(19) = {0.030115, 0.749710, 0, 1.0};
Point(20) = {0.020603, 0.749399, 0, 1.0};
Point(21) = {0.011370, 0.748995, 0, 1.0};
Point(22) = {0.002509, 0.748502, 0, 1.0};
Point(23) = {-0.005896, 0.747947, 0, 1.0};
Point(24) = {-0.013763, 0.747324, 0, 1.0};
Point(25) = {-0.021016, 0.746638, 0, 1.0};
Point(26) = {-0.027589, 0.745893, 0, 1.0};
Point(27) = {-0.033413, 0.745125, 0, 1.0};
Point(28) = {-0.038434, 0.744201, 0, 1.0};
Point(29) = {-0.042597, 0.743004, 0, 1.0};
Point(30) = {-0.044192, 0.742397, 0, 1.0};
Point(31) = {-0.045863, 0.741598, 0, 1.0};
Point(32) = {-0.047147, 0.740837, 0, 1.0};
Point(33) = {-0.048202, 0.740026, 0, 1.0};
Point(34) = {-0.048515, 0.739717, 0, 1.0};
Point(35) = {-0.048805, 0.739384, 0, 1.0};
Point(36) = {-0.049093, 0.738979, 0, 1.0};
Point(37) = {-0.049379, 0.738497, 0, 1.0};
Point(38) = {-0.049585, 0.738061, 0, 1.0};
Point(39) = {-0.049735, 0.737650, 0, 1.0};
Point(40) = {-0.049843, 0.737261, 0, 1.0};
Point(41) = {-0.049931, 0.736838, 0, 1.0};
Point(42) = {-0.050000, 0.735791, 0, 1.0};
Point(43) = {-0.049876, 0.734975, 0, 1.0};
Point(44) = {-0.049768, 0.734708, 0, 1.0};
Point(45) = {-0.049641, 0.734471, 0, 1.0};
Point(46) = {-0.049472, 0.734236, 0, 1.0};
Point(47) = {-0.049247, 0.734013, 0, 1.0};
Point(48) = {-0.048940, 0.733762, 0, 1.0};
Point(49) = {-0.048634, 0.733553, 0, 1.0};
Point(50) = {-0.048328, 0.733384, 0, 1.0};
Point(51) = {-0.048001, 0.733217, 0, 1.0};
Point(52) = {-0.046911, 0.732815, 0, 1.0};
Point(53) = {-0.045594, 0.732466, 0, 1.0};
Point(54) = {-0.043888, 0.732075, 0, 1.0};
Point(55) = {-0.042267, 0.731781, 0, 1.0};
Point(56) = {-0.038053, 0.731223, 0, 1.0};
Point(57) = {-0.032989, 0.730717, 0, 1.0};
Point(58) = {-0.027131, 0.730313, 0, 1.0};
Point(59) = {-0.020527, 0.729991, 0, 1.0};
Point(60) = {-0.013247, 0.729757, 0, 1.0};
Point(61) = {-0.005358, 0.729639, 0, 1.0};
Point(62) = {0.003064, 0.729637, 0, 1.0};
Point(63) = {0.011935, 0.729779, 0, 1.0};
Point(64) = {0.021170, 0.730103, 0, 1.0};
Point(65) = {0.030677, 0.730615, 0, 1.0};
Point(66) = {0.040368, 0.731326, 0, 1.0};
Point(67) = {0.050147, 0.732270, 0, 1.0};
Point(68) = {0.059918, 0.733445, 0, 1.0};
Point(69) = {0.069592, 0.734772, 0, 1.0};
Point(70) = {0.079073, 0.736154, 0, 1.0};
Point(71) = {0.088279, 0.737459, 0, 1.0};
Point(72) = {0.097122, 0.738581, 0, 1.0};
Point(73) = {0.105516, 0.739516, 0, 1.0};
Point(74) = {0.113380, 0.740246, 0, 1.0};
Point(75) = {0.120637, 0.740789, 0, 1.0};
Point(76) = {0.127220, 0.741173, 0, 1.0};
Point(77) = {0.133059, 0.741435, 0, 1.0};
Point(78) = {0.138103, 0.741575, 0, 1.0};
Point(79) = {0.142299, 0.741642, 0, 1.0};
Point(80) = {0.145606, 0.741668, 0, 1.0};
Point(81) = {0.147991, 0.741672, 0, 1.0};
Point(82) = {0.149431, 0.741668, 0, 1.0};
Point(83) = {0.149914, 0.741670, 0, 1.0};
Point(84) = {-0.149891, -0.742430, 0, 1.0};
Point(85) = {-0.149407, -0.742488, 0, 1.0};
Point(86) = {-0.147962, -0.742663, 0, 1.0};
Point(87) = {-0.145568, -0.742955, 0, 1.0};
Point(88) = {-0.142249, -0.743346, 0, 1.0};
Point(89) = {-0.138037, -0.743842, 0, 1.0};
Point(90) = {-0.132971, -0.744425, 0, 1.0};
Point(91) = {-0.127106, -0.745063, 0, 1.0};
Point(92) = {-0.120490, -0.745775, 0, 1.0};
Point(93) = {-0.113195, -0.746535, 0, 1.0};
Point(94) = {-0.105287, -0.747305, 0, 1.0};
Point(95) = {-0.096843, -0.748065, 0, 1.0};
Point(96) = {-0.087946, -0.748762, 0, 1.0};
Point(97) = {-0.078686, -0.749332, 0, 1.0};
Point(98) = {-0.069152, -0.749716, 0, 1.0};
Point(99) = {-0.059433, -0.749938, 0, 1.0};
Point(100) = {-0.049625, -0.750000, 0, 1.0};
Point(101) = {-0.039822, -0.749908, 0, 1.0};
Point(102) = {-0.030115, -0.749710, 0, 1.0};
Point(103) = {-0.020603, -0.749399, 0, 1.0};
Point(104) = {-0.011370, -0.748995, 0, 1.0};
Point(105) = {-0.002509, -0.748502, 0, 1.0};
Point(106) = {0.005896, -0.747947, 0, 1.0};
Point(107) = {0.013763, -0.747324, 0, 1.0};
Point(108) = {0.021016, -0.746638, 0, 1.0};
Point(109) = {0.027589, -0.745893, 0, 1.0};
Point(110) = {0.033413, -0.745125, 0, 1.0};
Point(111) = {0.038434, -0.744201, 0, 1.0};
Point(112) = {0.042597, -0.743004, 0, 1.0};
Point(113) = {0.044192, -0.742397, 0, 1.0};
Point(114) = {0.045863, -0.741598, 0, 1.0};
Point(115) = {0.047147, -0.740837, 0, 1.0};
Point(116) = {0.048202, -0.740026, 0, 1.0};
Point(117) = {0.048515, -0.739717, 0, 1.0};
Point(118) = {0.048805, -0.739384, 0, 1.0};
Point(119) = {0.049093, -0.738979, 0, 1.0};
Point(120) = {0.049379, -0.738497, 0, 1.0};
Point(121) = {0.049585, -0.738061, 0, 1.0};
Point(122) = {0.049735, -0.737650, 0, 1.0};
Point(123) = {0.049843, -0.737261, 0, 1.0};
Point(124) = {0.049931, -0.736838, 0, 1.0};
Point(125) = {0.050000, -0.735791, 0, 1.0};
Point(126) = {0.049876, -0.734975, 0, 1.0};
Point(127) = {0.049768, -0.734708, 0, 1.0};
Point(128) = {0.049641, -0.734471, 0, 1.0};
Point(129) = {0.049472, -0.734236, 0, 1.0};
Point(130) = {0.049247, -0.734013, 0, 1.0};
Point(131) = {0.048940, -0.733762, 0, 1.0};
Point(132) = {0.048634, -0.733553, 0, 1.0};
Point(133) = {0.048328, -0.733384, 0, 1.0};
Point(134) = {0.048001, -0.733217, 0, 1.0};
Point(135) = {0.046911, -0.732815, 0, 1.0};
Point(136) = {0.045594, -0.732466, 0, 1.0};
Point(137) = {0.043888, -0.732075, 0, 1.0};
Point(138) = {0.042267, -0.731781, 0, 1.0};
Point(139) = {0.038053, -0.731223, 0, 1.0};
Point(140) = {0.032989, -0.730717, 0, 1.0};
Point(141) = {0.027131, -0.730313, 0, 1.0};
Point(142) = {0.020527, -0.729991, 0, 1.0};
Point(143) = {0.013247, -0.729757, 0, 1.0};
Point(144) = {0.005358, -0.729639, 0, 1.0};
Point(145) = {-0.003064, -0.729637, 0, 1.0};
Point(146) = {-0.011935, -0.729779, 0, 1.0};
Point(147) = {-0.021170, -0.730103, 0, 1.0};
Point(148) = {-0.030677, -0.730615, 0, 1.0};
Point(149) = {-0.040368, -0.731326, 0, 1.0};
Point(150) = {-0.050147, -0.732270, 0, 1.0};
Point(151) = {-0.059918, -0.733445, 0, 1.0};
Point(152) = {-0.069592, -0.734772, 0, 1.0};
Point(153) = {-0.079073, -0.736154, 0, 1.0};
Point(154) = {-0.088279, -0.737459, 0, 1.0};
Point(155) = {-0.097122, -0.738581, 0, 1.0};
Point(156) = {-0.105516, -0.739516, 0, 1.0};
Point(157) = {-0.113380, -0.740246, 0, 1.0};
Point(158) = {-0.120637, -0.740789, 0, 1.0};
Point(159) = {-0.127220, -0.741173, 0, 1.0};
Point(160) = {-0.133059, -0.741435, 0, 1.0};
Point(161) = {-0.138103, -0.741575, 0, 1.0};
Point(162) = {-0.142299, -0.741642, 0, 1.0};
Point(163) = {-0.145606, -0.741668, 0, 1.0};
Point(164) = {-0.147991, -0.741672, 0, 1.0};
Point(165) = {-0.149431, -0.741668, 0, 1.0};
Point(166) = {-0.149914, -0.741670, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
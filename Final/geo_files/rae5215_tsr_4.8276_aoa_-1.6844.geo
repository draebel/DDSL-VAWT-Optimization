SetFactory("OpenCASCADE");

Point(1) = {0.074946, 0.746215, 0, 1.0};
Point(2) = {0.074704, 0.746244, 0, 1.0};
Point(3) = {0.073981, 0.746332, 0, 1.0};
Point(4) = {0.072784, 0.746478, 0, 1.0};
Point(5) = {0.071125, 0.746673, 0, 1.0};
Point(6) = {0.069018, 0.746921, 0, 1.0};
Point(7) = {0.066486, 0.747213, 0, 1.0};
Point(8) = {0.063553, 0.747532, 0, 1.0};
Point(9) = {0.060245, 0.747888, 0, 1.0};
Point(10) = {0.056597, 0.748268, 0, 1.0};
Point(11) = {0.052643, 0.748652, 0, 1.0};
Point(12) = {0.048421, 0.749033, 0, 1.0};
Point(13) = {0.043973, 0.749381, 0, 1.0};
Point(14) = {0.039343, 0.749666, 0, 1.0};
Point(15) = {0.034576, 0.749858, 0, 1.0};
Point(16) = {0.029717, 0.749969, 0, 1.0};
Point(17) = {0.024813, 0.750000, 0, 1.0};
Point(18) = {0.019911, 0.749954, 0, 1.0};
Point(19) = {0.015058, 0.749855, 0, 1.0};
Point(20) = {0.010301, 0.749699, 0, 1.0};
Point(21) = {0.005685, 0.749498, 0, 1.0};
Point(22) = {0.001255, 0.749251, 0, 1.0};
Point(23) = {-0.002948, 0.748974, 0, 1.0};
Point(24) = {-0.006882, 0.748662, 0, 1.0};
Point(25) = {-0.010508, 0.748319, 0, 1.0};
Point(26) = {-0.013795, 0.747946, 0, 1.0};
Point(27) = {-0.016707, 0.747563, 0, 1.0};
Point(28) = {-0.019217, 0.747101, 0, 1.0};
Point(29) = {-0.021298, 0.746502, 0, 1.0};
Point(30) = {-0.022096, 0.746199, 0, 1.0};
Point(31) = {-0.022931, 0.745799, 0, 1.0};
Point(32) = {-0.023574, 0.745419, 0, 1.0};
Point(33) = {-0.024101, 0.745013, 0, 1.0};
Point(34) = {-0.024257, 0.744858, 0, 1.0};
Point(35) = {-0.024403, 0.744692, 0, 1.0};
Point(36) = {-0.024547, 0.744490, 0, 1.0};
Point(37) = {-0.024690, 0.744248, 0, 1.0};
Point(38) = {-0.024792, 0.744030, 0, 1.0};
Point(39) = {-0.024867, 0.743825, 0, 1.0};
Point(40) = {-0.024922, 0.743630, 0, 1.0};
Point(41) = {-0.024965, 0.743419, 0, 1.0};
Point(42) = {-0.025000, 0.742896, 0, 1.0};
Point(43) = {-0.024938, 0.742487, 0, 1.0};
Point(44) = {-0.024884, 0.742354, 0, 1.0};
Point(45) = {-0.024821, 0.742236, 0, 1.0};
Point(46) = {-0.024736, 0.742118, 0, 1.0};
Point(47) = {-0.024624, 0.742006, 0, 1.0};
Point(48) = {-0.024470, 0.741881, 0, 1.0};
Point(49) = {-0.024317, 0.741776, 0, 1.0};
Point(50) = {-0.024164, 0.741692, 0, 1.0};
Point(51) = {-0.024001, 0.741609, 0, 1.0};
Point(52) = {-0.023456, 0.741407, 0, 1.0};
Point(53) = {-0.022797, 0.741233, 0, 1.0};
Point(54) = {-0.021944, 0.741038, 0, 1.0};
Point(55) = {-0.021133, 0.740891, 0, 1.0};
Point(56) = {-0.019026, 0.740611, 0, 1.0};
Point(57) = {-0.016495, 0.740359, 0, 1.0};
Point(58) = {-0.013566, 0.740157, 0, 1.0};
Point(59) = {-0.010263, 0.739996, 0, 1.0};
Point(60) = {-0.006623, 0.739879, 0, 1.0};
Point(61) = {-0.002679, 0.739820, 0, 1.0};
Point(62) = {0.001532, 0.739818, 0, 1.0};
Point(63) = {0.005968, 0.739890, 0, 1.0};
Point(64) = {0.010585, 0.740051, 0, 1.0};
Point(65) = {0.015339, 0.740307, 0, 1.0};
Point(66) = {0.020184, 0.740663, 0, 1.0};
Point(67) = {0.025073, 0.741135, 0, 1.0};
Point(68) = {0.029959, 0.741723, 0, 1.0};
Point(69) = {0.034796, 0.742386, 0, 1.0};
Point(70) = {0.039537, 0.743077, 0, 1.0};
Point(71) = {0.044139, 0.743729, 0, 1.0};
Point(72) = {0.048561, 0.744291, 0, 1.0};
Point(73) = {0.052758, 0.744758, 0, 1.0};
Point(74) = {0.056690, 0.745123, 0, 1.0};
Point(75) = {0.060318, 0.745395, 0, 1.0};
Point(76) = {0.063610, 0.745587, 0, 1.0};
Point(77) = {0.066530, 0.745717, 0, 1.0};
Point(78) = {0.069052, 0.745788, 0, 1.0};
Point(79) = {0.071150, 0.745821, 0, 1.0};
Point(80) = {0.072803, 0.745834, 0, 1.0};
Point(81) = {0.073995, 0.745836, 0, 1.0};
Point(82) = {0.074716, 0.745834, 0, 1.0};
Point(83) = {0.074957, 0.745835, 0, 1.0};
Point(84) = {-0.074946, -0.746215, 0, 1.0};
Point(85) = {-0.074704, -0.746244, 0, 1.0};
Point(86) = {-0.073981, -0.746332, 0, 1.0};
Point(87) = {-0.072784, -0.746478, 0, 1.0};
Point(88) = {-0.071125, -0.746673, 0, 1.0};
Point(89) = {-0.069018, -0.746921, 0, 1.0};
Point(90) = {-0.066486, -0.747213, 0, 1.0};
Point(91) = {-0.063553, -0.747532, 0, 1.0};
Point(92) = {-0.060245, -0.747888, 0, 1.0};
Point(93) = {-0.056597, -0.748268, 0, 1.0};
Point(94) = {-0.052643, -0.748652, 0, 1.0};
Point(95) = {-0.048421, -0.749033, 0, 1.0};
Point(96) = {-0.043973, -0.749381, 0, 1.0};
Point(97) = {-0.039343, -0.749666, 0, 1.0};
Point(98) = {-0.034576, -0.749858, 0, 1.0};
Point(99) = {-0.029717, -0.749969, 0, 1.0};
Point(100) = {-0.024813, -0.750000, 0, 1.0};
Point(101) = {-0.019911, -0.749954, 0, 1.0};
Point(102) = {-0.015058, -0.749855, 0, 1.0};
Point(103) = {-0.010301, -0.749699, 0, 1.0};
Point(104) = {-0.005685, -0.749498, 0, 1.0};
Point(105) = {-0.001255, -0.749251, 0, 1.0};
Point(106) = {0.002948, -0.748974, 0, 1.0};
Point(107) = {0.006882, -0.748662, 0, 1.0};
Point(108) = {0.010508, -0.748319, 0, 1.0};
Point(109) = {0.013795, -0.747946, 0, 1.0};
Point(110) = {0.016707, -0.747563, 0, 1.0};
Point(111) = {0.019217, -0.747101, 0, 1.0};
Point(112) = {0.021298, -0.746502, 0, 1.0};
Point(113) = {0.022096, -0.746199, 0, 1.0};
Point(114) = {0.022931, -0.745799, 0, 1.0};
Point(115) = {0.023574, -0.745419, 0, 1.0};
Point(116) = {0.024101, -0.745013, 0, 1.0};
Point(117) = {0.024257, -0.744858, 0, 1.0};
Point(118) = {0.024403, -0.744692, 0, 1.0};
Point(119) = {0.024547, -0.744490, 0, 1.0};
Point(120) = {0.024690, -0.744248, 0, 1.0};
Point(121) = {0.024792, -0.744030, 0, 1.0};
Point(122) = {0.024867, -0.743825, 0, 1.0};
Point(123) = {0.024922, -0.743630, 0, 1.0};
Point(124) = {0.024965, -0.743419, 0, 1.0};
Point(125) = {0.025000, -0.742896, 0, 1.0};
Point(126) = {0.024938, -0.742487, 0, 1.0};
Point(127) = {0.024884, -0.742354, 0, 1.0};
Point(128) = {0.024821, -0.742236, 0, 1.0};
Point(129) = {0.024736, -0.742118, 0, 1.0};
Point(130) = {0.024624, -0.742006, 0, 1.0};
Point(131) = {0.024470, -0.741881, 0, 1.0};
Point(132) = {0.024317, -0.741776, 0, 1.0};
Point(133) = {0.024164, -0.741692, 0, 1.0};
Point(134) = {0.024001, -0.741609, 0, 1.0};
Point(135) = {0.023456, -0.741407, 0, 1.0};
Point(136) = {0.022797, -0.741233, 0, 1.0};
Point(137) = {0.021944, -0.741038, 0, 1.0};
Point(138) = {0.021133, -0.740891, 0, 1.0};
Point(139) = {0.019026, -0.740611, 0, 1.0};
Point(140) = {0.016495, -0.740359, 0, 1.0};
Point(141) = {0.013566, -0.740157, 0, 1.0};
Point(142) = {0.010263, -0.739996, 0, 1.0};
Point(143) = {0.006623, -0.739879, 0, 1.0};
Point(144) = {0.002679, -0.739820, 0, 1.0};
Point(145) = {-0.001532, -0.739818, 0, 1.0};
Point(146) = {-0.005968, -0.739890, 0, 1.0};
Point(147) = {-0.010585, -0.740051, 0, 1.0};
Point(148) = {-0.015339, -0.740307, 0, 1.0};
Point(149) = {-0.020184, -0.740663, 0, 1.0};
Point(150) = {-0.025073, -0.741135, 0, 1.0};
Point(151) = {-0.029959, -0.741723, 0, 1.0};
Point(152) = {-0.034796, -0.742386, 0, 1.0};
Point(153) = {-0.039537, -0.743077, 0, 1.0};
Point(154) = {-0.044139, -0.743729, 0, 1.0};
Point(155) = {-0.048561, -0.744291, 0, 1.0};
Point(156) = {-0.052758, -0.744758, 0, 1.0};
Point(157) = {-0.056690, -0.745123, 0, 1.0};
Point(158) = {-0.060318, -0.745395, 0, 1.0};
Point(159) = {-0.063610, -0.745587, 0, 1.0};
Point(160) = {-0.066530, -0.745717, 0, 1.0};
Point(161) = {-0.069052, -0.745788, 0, 1.0};
Point(162) = {-0.071150, -0.745821, 0, 1.0};
Point(163) = {-0.072803, -0.745834, 0, 1.0};
Point(164) = {-0.073995, -0.745836, 0, 1.0};
Point(165) = {-0.074716, -0.745834, 0, 1.0};
Point(166) = {-0.074957, -0.745835, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149492, 0.743935, 0, 1.0};
Point(2) = {0.144447, 0.744387, 0, 1.0};
Point(3) = {0.139399, 0.744890, 0, 1.0};
Point(4) = {0.134350, 0.745390, 0, 1.0};
Point(5) = {0.129304, 0.745860, 0, 1.0};
Point(6) = {0.124257, 0.746332, 0, 1.0};
Point(7) = {0.119212, 0.746786, 0, 1.0};
Point(8) = {0.114168, 0.747232, 0, 1.0};
Point(9) = {0.109124, 0.747664, 0, 1.0};
Point(10) = {0.099043, 0.748440, 0, 1.0};
Point(11) = {0.088972, 0.749082, 0, 1.0};
Point(12) = {0.078912, 0.749563, 0, 1.0};
Point(13) = {0.068864, 0.749880, 0, 1.0};
Point(14) = {0.058830, 0.750000, 0, 1.0};
Point(15) = {0.048811, 0.749910, 0, 1.0};
Point(16) = {0.038807, 0.749607, 0, 1.0};
Point(17) = {0.028818, 0.749104, 0, 1.0};
Point(18) = {0.023828, 0.748780, 0, 1.0};
Point(19) = {0.018842, 0.748404, 0, 1.0};
Point(20) = {0.013861, 0.747968, 0, 1.0};
Point(21) = {0.008884, 0.747467, 0, 1.0};
Point(22) = {0.003911, 0.746903, 0, 1.0};
Point(23) = {-0.001057, 0.746282, 0, 1.0};
Point(24) = {-0.006021, 0.745603, 0, 1.0};
Point(25) = {-0.010980, 0.744842, 0, 1.0};
Point(26) = {-0.015931, 0.743985, 0, 1.0};
Point(27) = {-0.020874, 0.743008, 0, 1.0};
Point(28) = {-0.025807, 0.741894, 0, 1.0};
Point(29) = {-0.030727, 0.740595, 0, 1.0};
Point(30) = {-0.035630, 0.739056, 0, 1.0};
Point(31) = {-0.040507, 0.737151, 0, 1.0};
Point(32) = {-0.042931, 0.736002, 0, 1.0};
Point(33) = {-0.045340, 0.734629, 0, 1.0};
Point(34) = {-0.046536, 0.733828, 0, 1.0};
Point(35) = {-0.047722, 0.732889, 0, 1.0};
Point(36) = {-0.048427, 0.732237, 0, 1.0};
Point(37) = {-0.049124, 0.731467, 0, 1.0};
Point(38) = {-0.049579, 0.730817, 0, 1.0};
Point(39) = {-0.050000, 0.729692, 0, 1.0};
Point(40) = {-0.049456, 0.729098, 0, 1.0};
Point(41) = {-0.048936, 0.728836, 0, 1.0};
Point(42) = {-0.048163, 0.728540, 0, 1.0};
Point(43) = {-0.047395, 0.728314, 0, 1.0};
Point(44) = {-0.046123, 0.728042, 0, 1.0};
Point(45) = {-0.044858, 0.727876, 0, 1.0};
Point(46) = {-0.042336, 0.727665, 0, 1.0};
Point(47) = {-0.039823, 0.727566, 0, 1.0};
Point(48) = {-0.034807, 0.727521, 0, 1.0};
Point(49) = {-0.029799, 0.727590, 0, 1.0};
Point(50) = {-0.024796, 0.727724, 0, 1.0};
Point(51) = {-0.019796, 0.727909, 0, 1.0};
Point(52) = {-0.014800, 0.728139, 0, 1.0};
Point(53) = {-0.009806, 0.728407, 0, 1.0};
Point(54) = {-0.004815, 0.728704, 0, 1.0};
Point(55) = {0.000175, 0.729022, 0, 1.0};
Point(56) = {0.005164, 0.729358, 0, 1.0};
Point(57) = {0.010151, 0.729714, 0, 1.0};
Point(58) = {0.015136, 0.730098, 0, 1.0};
Point(59) = {0.020119, 0.730516, 0, 1.0};
Point(60) = {0.025100, 0.730972, 0, 1.0};
Point(61) = {0.030077, 0.731461, 0, 1.0};
Point(62) = {0.040027, 0.732521, 0, 1.0};
Point(63) = {0.049969, 0.733686, 0, 1.0};
Point(64) = {0.059905, 0.734946, 0, 1.0};
Point(65) = {0.069835, 0.736281, 0, 1.0};
Point(66) = {0.079763, 0.737653, 0, 1.0};
Point(67) = {0.089692, 0.738998, 0, 1.0};
Point(68) = {0.099626, 0.740278, 0, 1.0};
Point(69) = {0.109569, 0.741431, 0, 1.0};
Point(70) = {0.114546, 0.741937, 0, 1.0};
Point(71) = {0.119526, 0.742389, 0, 1.0};
Point(72) = {0.124512, 0.742767, 0, 1.0};
Point(73) = {0.129501, 0.743095, 0, 1.0};
Point(74) = {0.134496, 0.743349, 0, 1.0};
Point(75) = {0.139490, 0.743604, 0, 1.0};
Point(76) = {0.144489, 0.743798, 0, 1.0};
Point(77) = {-0.149492, -0.743935, 0, 1.0};
Point(78) = {-0.144447, -0.744387, 0, 1.0};
Point(79) = {-0.139399, -0.744890, 0, 1.0};
Point(80) = {-0.134350, -0.745390, 0, 1.0};
Point(81) = {-0.129304, -0.745860, 0, 1.0};
Point(82) = {-0.124257, -0.746332, 0, 1.0};
Point(83) = {-0.119212, -0.746786, 0, 1.0};
Point(84) = {-0.114168, -0.747232, 0, 1.0};
Point(85) = {-0.109124, -0.747664, 0, 1.0};
Point(86) = {-0.099043, -0.748440, 0, 1.0};
Point(87) = {-0.088972, -0.749082, 0, 1.0};
Point(88) = {-0.078912, -0.749563, 0, 1.0};
Point(89) = {-0.068864, -0.749880, 0, 1.0};
Point(90) = {-0.058830, -0.750000, 0, 1.0};
Point(91) = {-0.048811, -0.749910, 0, 1.0};
Point(92) = {-0.038807, -0.749607, 0, 1.0};
Point(93) = {-0.028818, -0.749104, 0, 1.0};
Point(94) = {-0.023828, -0.748780, 0, 1.0};
Point(95) = {-0.018842, -0.748404, 0, 1.0};
Point(96) = {-0.013861, -0.747968, 0, 1.0};
Point(97) = {-0.008884, -0.747467, 0, 1.0};
Point(98) = {-0.003911, -0.746903, 0, 1.0};
Point(99) = {0.001057, -0.746282, 0, 1.0};
Point(100) = {0.006021, -0.745603, 0, 1.0};
Point(101) = {0.010980, -0.744842, 0, 1.0};
Point(102) = {0.015931, -0.743985, 0, 1.0};
Point(103) = {0.020874, -0.743008, 0, 1.0};
Point(104) = {0.025807, -0.741894, 0, 1.0};
Point(105) = {0.030727, -0.740595, 0, 1.0};
Point(106) = {0.035630, -0.739056, 0, 1.0};
Point(107) = {0.040507, -0.737151, 0, 1.0};
Point(108) = {0.042931, -0.736002, 0, 1.0};
Point(109) = {0.045340, -0.734629, 0, 1.0};
Point(110) = {0.046536, -0.733828, 0, 1.0};
Point(111) = {0.047722, -0.732889, 0, 1.0};
Point(112) = {0.048427, -0.732237, 0, 1.0};
Point(113) = {0.049124, -0.731467, 0, 1.0};
Point(114) = {0.049579, -0.730817, 0, 1.0};
Point(115) = {0.050000, -0.729692, 0, 1.0};
Point(116) = {0.049456, -0.729098, 0, 1.0};
Point(117) = {0.048936, -0.728836, 0, 1.0};
Point(118) = {0.048163, -0.728540, 0, 1.0};
Point(119) = {0.047395, -0.728314, 0, 1.0};
Point(120) = {0.046123, -0.728042, 0, 1.0};
Point(121) = {0.044858, -0.727876, 0, 1.0};
Point(122) = {0.042336, -0.727665, 0, 1.0};
Point(123) = {0.039823, -0.727566, 0, 1.0};
Point(124) = {0.034807, -0.727521, 0, 1.0};
Point(125) = {0.029799, -0.727590, 0, 1.0};
Point(126) = {0.024796, -0.727724, 0, 1.0};
Point(127) = {0.019796, -0.727909, 0, 1.0};
Point(128) = {0.014800, -0.728139, 0, 1.0};
Point(129) = {0.009806, -0.728407, 0, 1.0};
Point(130) = {0.004815, -0.728704, 0, 1.0};
Point(131) = {-0.000175, -0.729022, 0, 1.0};
Point(132) = {-0.005164, -0.729358, 0, 1.0};
Point(133) = {-0.010151, -0.729714, 0, 1.0};
Point(134) = {-0.015136, -0.730098, 0, 1.0};
Point(135) = {-0.020119, -0.730516, 0, 1.0};
Point(136) = {-0.025100, -0.730972, 0, 1.0};
Point(137) = {-0.030077, -0.731461, 0, 1.0};
Point(138) = {-0.040027, -0.732521, 0, 1.0};
Point(139) = {-0.049969, -0.733686, 0, 1.0};
Point(140) = {-0.059905, -0.734946, 0, 1.0};
Point(141) = {-0.069835, -0.736281, 0, 1.0};
Point(142) = {-0.079763, -0.737653, 0, 1.0};
Point(143) = {-0.089692, -0.738998, 0, 1.0};
Point(144) = {-0.099626, -0.740278, 0, 1.0};
Point(145) = {-0.109569, -0.741431, 0, 1.0};
Point(146) = {-0.114546, -0.741937, 0, 1.0};
Point(147) = {-0.119526, -0.742389, 0, 1.0};
Point(148) = {-0.124512, -0.742767, 0, 1.0};
Point(149) = {-0.129501, -0.743095, 0, 1.0};
Point(150) = {-0.134496, -0.743349, 0, 1.0};
Point(151) = {-0.139490, -0.743604, 0, 1.0};
Point(152) = {-0.144489, -0.743798, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
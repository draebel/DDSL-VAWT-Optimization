SetFactory("OpenCASCADE");

Point(1) = {0.074810, 0.745451, 0, 1.0};
Point(2) = {0.071026, 0.745790, 0, 1.0};
Point(3) = {0.067239, 0.746168, 0, 1.0};
Point(4) = {0.063453, 0.746543, 0, 1.0};
Point(5) = {0.059668, 0.746895, 0, 1.0};
Point(6) = {0.055884, 0.747249, 0, 1.0};
Point(7) = {0.052100, 0.747589, 0, 1.0};
Point(8) = {0.048316, 0.747924, 0, 1.0};
Point(9) = {0.044534, 0.748248, 0, 1.0};
Point(10) = {0.036973, 0.748830, 0, 1.0};
Point(11) = {0.029419, 0.749312, 0, 1.0};
Point(12) = {0.021875, 0.749672, 0, 1.0};
Point(13) = {0.014339, 0.749910, 0, 1.0};
Point(14) = {0.006813, 0.750000, 0, 1.0};
Point(15) = {-0.000701, 0.749933, 0, 1.0};
Point(16) = {-0.008204, 0.749705, 0, 1.0};
Point(17) = {-0.015696, 0.749328, 0, 1.0};
Point(18) = {-0.019438, 0.749085, 0, 1.0};
Point(19) = {-0.023178, 0.748803, 0, 1.0};
Point(20) = {-0.026914, 0.748476, 0, 1.0};
Point(21) = {-0.030647, 0.748100, 0, 1.0};
Point(22) = {-0.034376, 0.747677, 0, 1.0};
Point(23) = {-0.038102, 0.747211, 0, 1.0};
Point(24) = {-0.041826, 0.746702, 0, 1.0};
Point(25) = {-0.045544, 0.746131, 0, 1.0};
Point(26) = {-0.049258, 0.745489, 0, 1.0};
Point(27) = {-0.052965, 0.744756, 0, 1.0};
Point(28) = {-0.056665, 0.743921, 0, 1.0};
Point(29) = {-0.060355, 0.742946, 0, 1.0};
Point(30) = {-0.064032, 0.741792, 0, 1.0};
Point(31) = {-0.067690, 0.740364, 0, 1.0};
Point(32) = {-0.069508, 0.739501, 0, 1.0};
Point(33) = {-0.071314, 0.738472, 0, 1.0};
Point(34) = {-0.072211, 0.737871, 0, 1.0};
Point(35) = {-0.073101, 0.737167, 0, 1.0};
Point(36) = {-0.073630, 0.736678, 0, 1.0};
Point(37) = {-0.074153, 0.736100, 0, 1.0};
Point(38) = {-0.074494, 0.735613, 0, 1.0};
Point(39) = {-0.074810, 0.734769, 0, 1.0};
Point(40) = {-0.074402, 0.734323, 0, 1.0};
Point(41) = {-0.074012, 0.734127, 0, 1.0};
Point(42) = {-0.073432, 0.733905, 0, 1.0};
Point(43) = {-0.072856, 0.733736, 0, 1.0};
Point(44) = {-0.071902, 0.733532, 0, 1.0};
Point(45) = {-0.070953, 0.733407, 0, 1.0};
Point(46) = {-0.069062, 0.733249, 0, 1.0};
Point(47) = {-0.067177, 0.733174, 0, 1.0};
Point(48) = {-0.063415, 0.733141, 0, 1.0};
Point(49) = {-0.059659, 0.733192, 0, 1.0};
Point(50) = {-0.055906, 0.733293, 0, 1.0};
Point(51) = {-0.052157, 0.733432, 0, 1.0};
Point(52) = {-0.048410, 0.733604, 0, 1.0};
Point(53) = {-0.044664, 0.733806, 0, 1.0};
Point(54) = {-0.040921, 0.734028, 0, 1.0};
Point(55) = {-0.037178, 0.734266, 0, 1.0};
Point(56) = {-0.033437, 0.734518, 0, 1.0};
Point(57) = {-0.029696, 0.734785, 0, 1.0};
Point(58) = {-0.025957, 0.735073, 0, 1.0};
Point(59) = {-0.022220, 0.735387, 0, 1.0};
Point(60) = {-0.018485, 0.735729, 0, 1.0};
Point(61) = {-0.014752, 0.736096, 0, 1.0};
Point(62) = {-0.007289, 0.736890, 0, 1.0};
Point(63) = {0.000167, 0.737764, 0, 1.0};
Point(64) = {0.007619, 0.738710, 0, 1.0};
Point(65) = {0.015067, 0.739711, 0, 1.0};
Point(66) = {0.022512, 0.740740, 0, 1.0};
Point(67) = {0.029959, 0.741748, 0, 1.0};
Point(68) = {0.037410, 0.742709, 0, 1.0};
Point(69) = {0.044867, 0.743574, 0, 1.0};
Point(70) = {0.048600, 0.743953, 0, 1.0};
Point(71) = {0.052335, 0.744292, 0, 1.0};
Point(72) = {0.056074, 0.744575, 0, 1.0};
Point(73) = {0.059816, 0.744821, 0, 1.0};
Point(74) = {0.063562, 0.745012, 0, 1.0};
Point(75) = {0.067308, 0.745203, 0, 1.0};
Point(76) = {0.071057, 0.745349, 0, 1.0};
Point(77) = {-0.074810, -0.745451, 0, 1.0};
Point(78) = {-0.071026, -0.745790, 0, 1.0};
Point(79) = {-0.067239, -0.746168, 0, 1.0};
Point(80) = {-0.063453, -0.746543, 0, 1.0};
Point(81) = {-0.059668, -0.746895, 0, 1.0};
Point(82) = {-0.055884, -0.747249, 0, 1.0};
Point(83) = {-0.052100, -0.747589, 0, 1.0};
Point(84) = {-0.048316, -0.747924, 0, 1.0};
Point(85) = {-0.044534, -0.748248, 0, 1.0};
Point(86) = {-0.036973, -0.748830, 0, 1.0};
Point(87) = {-0.029419, -0.749312, 0, 1.0};
Point(88) = {-0.021875, -0.749672, 0, 1.0};
Point(89) = {-0.014339, -0.749910, 0, 1.0};
Point(90) = {-0.006813, -0.750000, 0, 1.0};
Point(91) = {0.000701, -0.749933, 0, 1.0};
Point(92) = {0.008204, -0.749705, 0, 1.0};
Point(93) = {0.015696, -0.749328, 0, 1.0};
Point(94) = {0.019438, -0.749085, 0, 1.0};
Point(95) = {0.023178, -0.748803, 0, 1.0};
Point(96) = {0.026914, -0.748476, 0, 1.0};
Point(97) = {0.030647, -0.748100, 0, 1.0};
Point(98) = {0.034376, -0.747677, 0, 1.0};
Point(99) = {0.038102, -0.747211, 0, 1.0};
Point(100) = {0.041826, -0.746702, 0, 1.0};
Point(101) = {0.045544, -0.746131, 0, 1.0};
Point(102) = {0.049258, -0.745489, 0, 1.0};
Point(103) = {0.052965, -0.744756, 0, 1.0};
Point(104) = {0.056665, -0.743921, 0, 1.0};
Point(105) = {0.060355, -0.742946, 0, 1.0};
Point(106) = {0.064032, -0.741792, 0, 1.0};
Point(107) = {0.067690, -0.740364, 0, 1.0};
Point(108) = {0.069508, -0.739501, 0, 1.0};
Point(109) = {0.071314, -0.738472, 0, 1.0};
Point(110) = {0.072211, -0.737871, 0, 1.0};
Point(111) = {0.073101, -0.737167, 0, 1.0};
Point(112) = {0.073630, -0.736678, 0, 1.0};
Point(113) = {0.074153, -0.736100, 0, 1.0};
Point(114) = {0.074494, -0.735613, 0, 1.0};
Point(115) = {0.074810, -0.734769, 0, 1.0};
Point(116) = {0.074402, -0.734323, 0, 1.0};
Point(117) = {0.074012, -0.734127, 0, 1.0};
Point(118) = {0.073432, -0.733905, 0, 1.0};
Point(119) = {0.072856, -0.733736, 0, 1.0};
Point(120) = {0.071902, -0.733532, 0, 1.0};
Point(121) = {0.070953, -0.733407, 0, 1.0};
Point(122) = {0.069062, -0.733249, 0, 1.0};
Point(123) = {0.067177, -0.733174, 0, 1.0};
Point(124) = {0.063415, -0.733141, 0, 1.0};
Point(125) = {0.059659, -0.733192, 0, 1.0};
Point(126) = {0.055906, -0.733293, 0, 1.0};
Point(127) = {0.052157, -0.733432, 0, 1.0};
Point(128) = {0.048410, -0.733604, 0, 1.0};
Point(129) = {0.044664, -0.733806, 0, 1.0};
Point(130) = {0.040921, -0.734028, 0, 1.0};
Point(131) = {0.037178, -0.734266, 0, 1.0};
Point(132) = {0.033437, -0.734518, 0, 1.0};
Point(133) = {0.029696, -0.734785, 0, 1.0};
Point(134) = {0.025957, -0.735073, 0, 1.0};
Point(135) = {0.022220, -0.735387, 0, 1.0};
Point(136) = {0.018485, -0.735729, 0, 1.0};
Point(137) = {0.014752, -0.736096, 0, 1.0};
Point(138) = {0.007289, -0.736890, 0, 1.0};
Point(139) = {-0.000167, -0.737764, 0, 1.0};
Point(140) = {-0.007619, -0.738710, 0, 1.0};
Point(141) = {-0.015067, -0.739711, 0, 1.0};
Point(142) = {-0.022512, -0.740740, 0, 1.0};
Point(143) = {-0.029959, -0.741748, 0, 1.0};
Point(144) = {-0.037410, -0.742709, 0, 1.0};
Point(145) = {-0.044867, -0.743574, 0, 1.0};
Point(146) = {-0.048600, -0.743953, 0, 1.0};
Point(147) = {-0.052335, -0.744292, 0, 1.0};
Point(148) = {-0.056074, -0.744575, 0, 1.0};
Point(149) = {-0.059816, -0.744821, 0, 1.0};
Point(150) = {-0.063562, -0.745012, 0, 1.0};
Point(151) = {-0.067308, -0.745203, 0, 1.0};
Point(152) = {-0.071057, -0.745349, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
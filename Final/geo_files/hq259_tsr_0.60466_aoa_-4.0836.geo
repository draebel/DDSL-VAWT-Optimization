SetFactory("OpenCASCADE");

Point(1) = {0.074746, 0.746967, 0, 1.0};
Point(2) = {0.072224, 0.747193, 0, 1.0};
Point(3) = {0.069699, 0.747445, 0, 1.0};
Point(4) = {0.067175, 0.747695, 0, 1.0};
Point(5) = {0.064652, 0.747930, 0, 1.0};
Point(6) = {0.062129, 0.748166, 0, 1.0};
Point(7) = {0.059606, 0.748393, 0, 1.0};
Point(8) = {0.057084, 0.748616, 0, 1.0};
Point(9) = {0.054562, 0.748832, 0, 1.0};
Point(10) = {0.049522, 0.749220, 0, 1.0};
Point(11) = {0.044486, 0.749541, 0, 1.0};
Point(12) = {0.039456, 0.749781, 0, 1.0};
Point(13) = {0.034432, 0.749940, 0, 1.0};
Point(14) = {0.029415, 0.750000, 0, 1.0};
Point(15) = {0.024406, 0.749955, 0, 1.0};
Point(16) = {0.019404, 0.749804, 0, 1.0};
Point(17) = {0.014409, 0.749552, 0, 1.0};
Point(18) = {0.011914, 0.749390, 0, 1.0};
Point(19) = {0.009421, 0.749202, 0, 1.0};
Point(20) = {0.006930, 0.748984, 0, 1.0};
Point(21) = {0.004442, 0.748733, 0, 1.0};
Point(22) = {0.001956, 0.748452, 0, 1.0};
Point(23) = {-0.000529, 0.748141, 0, 1.0};
Point(24) = {-0.003011, 0.747801, 0, 1.0};
Point(25) = {-0.005490, 0.747421, 0, 1.0};
Point(26) = {-0.007966, 0.746992, 0, 1.0};
Point(27) = {-0.010437, 0.746504, 0, 1.0};
Point(28) = {-0.012904, 0.745947, 0, 1.0};
Point(29) = {-0.015364, 0.745297, 0, 1.0};
Point(30) = {-0.017815, 0.744528, 0, 1.0};
Point(31) = {-0.020254, 0.743576, 0, 1.0};
Point(32) = {-0.021466, 0.743001, 0, 1.0};
Point(33) = {-0.022670, 0.742314, 0, 1.0};
Point(34) = {-0.023268, 0.741914, 0, 1.0};
Point(35) = {-0.023861, 0.741444, 0, 1.0};
Point(36) = {-0.024214, 0.741118, 0, 1.0};
Point(37) = {-0.024562, 0.740734, 0, 1.0};
Point(38) = {-0.024790, 0.740409, 0, 1.0};
Point(39) = {-0.025000, 0.739846, 0, 1.0};
Point(40) = {-0.024728, 0.739549, 0, 1.0};
Point(41) = {-0.024468, 0.739418, 0, 1.0};
Point(42) = {-0.024082, 0.739270, 0, 1.0};
Point(43) = {-0.023698, 0.739157, 0, 1.0};
Point(44) = {-0.023061, 0.739021, 0, 1.0};
Point(45) = {-0.022429, 0.738938, 0, 1.0};
Point(46) = {-0.021168, 0.738833, 0, 1.0};
Point(47) = {-0.019911, 0.738783, 0, 1.0};
Point(48) = {-0.017403, 0.738760, 0, 1.0};
Point(49) = {-0.014899, 0.738795, 0, 1.0};
Point(50) = {-0.012398, 0.738862, 0, 1.0};
Point(51) = {-0.009898, 0.738954, 0, 1.0};
Point(52) = {-0.007400, 0.739070, 0, 1.0};
Point(53) = {-0.004903, 0.739204, 0, 1.0};
Point(54) = {-0.002407, 0.739352, 0, 1.0};
Point(55) = {0.000088, 0.739511, 0, 1.0};
Point(56) = {0.002582, 0.739679, 0, 1.0};
Point(57) = {0.005076, 0.739857, 0, 1.0};
Point(58) = {0.007568, 0.740049, 0, 1.0};
Point(59) = {0.010060, 0.740258, 0, 1.0};
Point(60) = {0.012550, 0.740486, 0, 1.0};
Point(61) = {0.015039, 0.740731, 0, 1.0};
Point(62) = {0.020014, 0.741260, 0, 1.0};
Point(63) = {0.024985, 0.741843, 0, 1.0};
Point(64) = {0.029952, 0.742473, 0, 1.0};
Point(65) = {0.034918, 0.743140, 0, 1.0};
Point(66) = {0.039881, 0.743827, 0, 1.0};
Point(67) = {0.044846, 0.744499, 0, 1.0};
Point(68) = {0.049813, 0.745139, 0, 1.0};
Point(69) = {0.054785, 0.745716, 0, 1.0};
Point(70) = {0.057273, 0.745969, 0, 1.0};
Point(71) = {0.059763, 0.746194, 0, 1.0};
Point(72) = {0.062256, 0.746383, 0, 1.0};
Point(73) = {0.064751, 0.746548, 0, 1.0};
Point(74) = {0.067248, 0.746675, 0, 1.0};
Point(75) = {0.069745, 0.746802, 0, 1.0};
Point(76) = {0.072245, 0.746899, 0, 1.0};
Point(77) = {-0.074746, -0.746967, 0, 1.0};
Point(78) = {-0.072224, -0.747193, 0, 1.0};
Point(79) = {-0.069699, -0.747445, 0, 1.0};
Point(80) = {-0.067175, -0.747695, 0, 1.0};
Point(81) = {-0.064652, -0.747930, 0, 1.0};
Point(82) = {-0.062129, -0.748166, 0, 1.0};
Point(83) = {-0.059606, -0.748393, 0, 1.0};
Point(84) = {-0.057084, -0.748616, 0, 1.0};
Point(85) = {-0.054562, -0.748832, 0, 1.0};
Point(86) = {-0.049522, -0.749220, 0, 1.0};
Point(87) = {-0.044486, -0.749541, 0, 1.0};
Point(88) = {-0.039456, -0.749781, 0, 1.0};
Point(89) = {-0.034432, -0.749940, 0, 1.0};
Point(90) = {-0.029415, -0.750000, 0, 1.0};
Point(91) = {-0.024406, -0.749955, 0, 1.0};
Point(92) = {-0.019404, -0.749804, 0, 1.0};
Point(93) = {-0.014409, -0.749552, 0, 1.0};
Point(94) = {-0.011914, -0.749390, 0, 1.0};
Point(95) = {-0.009421, -0.749202, 0, 1.0};
Point(96) = {-0.006930, -0.748984, 0, 1.0};
Point(97) = {-0.004442, -0.748733, 0, 1.0};
Point(98) = {-0.001956, -0.748452, 0, 1.0};
Point(99) = {0.000529, -0.748141, 0, 1.0};
Point(100) = {0.003011, -0.747801, 0, 1.0};
Point(101) = {0.005490, -0.747421, 0, 1.0};
Point(102) = {0.007966, -0.746992, 0, 1.0};
Point(103) = {0.010437, -0.746504, 0, 1.0};
Point(104) = {0.012904, -0.745947, 0, 1.0};
Point(105) = {0.015364, -0.745297, 0, 1.0};
Point(106) = {0.017815, -0.744528, 0, 1.0};
Point(107) = {0.020254, -0.743576, 0, 1.0};
Point(108) = {0.021466, -0.743001, 0, 1.0};
Point(109) = {0.022670, -0.742314, 0, 1.0};
Point(110) = {0.023268, -0.741914, 0, 1.0};
Point(111) = {0.023861, -0.741444, 0, 1.0};
Point(112) = {0.024214, -0.741118, 0, 1.0};
Point(113) = {0.024562, -0.740734, 0, 1.0};
Point(114) = {0.024790, -0.740409, 0, 1.0};
Point(115) = {0.025000, -0.739846, 0, 1.0};
Point(116) = {0.024728, -0.739549, 0, 1.0};
Point(117) = {0.024468, -0.739418, 0, 1.0};
Point(118) = {0.024082, -0.739270, 0, 1.0};
Point(119) = {0.023698, -0.739157, 0, 1.0};
Point(120) = {0.023061, -0.739021, 0, 1.0};
Point(121) = {0.022429, -0.738938, 0, 1.0};
Point(122) = {0.021168, -0.738833, 0, 1.0};
Point(123) = {0.019911, -0.738783, 0, 1.0};
Point(124) = {0.017403, -0.738760, 0, 1.0};
Point(125) = {0.014899, -0.738795, 0, 1.0};
Point(126) = {0.012398, -0.738862, 0, 1.0};
Point(127) = {0.009898, -0.738954, 0, 1.0};
Point(128) = {0.007400, -0.739070, 0, 1.0};
Point(129) = {0.004903, -0.739204, 0, 1.0};
Point(130) = {0.002407, -0.739352, 0, 1.0};
Point(131) = {-0.000088, -0.739511, 0, 1.0};
Point(132) = {-0.002582, -0.739679, 0, 1.0};
Point(133) = {-0.005076, -0.739857, 0, 1.0};
Point(134) = {-0.007568, -0.740049, 0, 1.0};
Point(135) = {-0.010060, -0.740258, 0, 1.0};
Point(136) = {-0.012550, -0.740486, 0, 1.0};
Point(137) = {-0.015039, -0.740731, 0, 1.0};
Point(138) = {-0.020014, -0.741260, 0, 1.0};
Point(139) = {-0.024985, -0.741843, 0, 1.0};
Point(140) = {-0.029952, -0.742473, 0, 1.0};
Point(141) = {-0.034918, -0.743140, 0, 1.0};
Point(142) = {-0.039881, -0.743827, 0, 1.0};
Point(143) = {-0.044846, -0.744499, 0, 1.0};
Point(144) = {-0.049813, -0.745139, 0, 1.0};
Point(145) = {-0.054785, -0.745716, 0, 1.0};
Point(146) = {-0.057273, -0.745969, 0, 1.0};
Point(147) = {-0.059763, -0.746194, 0, 1.0};
Point(148) = {-0.062256, -0.746383, 0, 1.0};
Point(149) = {-0.064751, -0.746548, 0, 1.0};
Point(150) = {-0.067248, -0.746675, 0, 1.0};
Point(151) = {-0.069745, -0.746802, 0, 1.0};
Point(152) = {-0.072245, -0.746899, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
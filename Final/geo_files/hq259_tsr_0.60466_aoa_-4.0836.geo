SetFactory("OpenCASCADE");

Point(1) = {0.074674, 0.746202, 0, 1.0};
Point(2) = {0.073835, 0.746283, 0, 1.0};
Point(3) = {0.069767, 0.746662, 0, 1.0};
Point(4) = {0.065698, 0.747042, 0, 1.0};
Point(5) = {0.061630, 0.747408, 0, 1.0};
Point(6) = {0.057562, 0.747768, 0, 1.0};
Point(7) = {0.053495, 0.748116, 0, 1.0};
Point(8) = {0.045367, 0.748742, 0, 1.0};
Point(9) = {0.037246, 0.749260, 0, 1.0};
Point(10) = {0.029135, 0.749648, 0, 1.0};
Point(11) = {0.021033, 0.749903, 0, 1.0};
Point(12) = {0.012942, 0.750000, 0, 1.0};
Point(13) = {0.004864, 0.749928, 0, 1.0};
Point(14) = {-0.003203, 0.749683, 0, 1.0};
Point(15) = {-0.011257, 0.749278, 0, 1.0};
Point(16) = {-0.015281, 0.749017, 0, 1.0};
Point(17) = {-0.019301, 0.748713, 0, 1.0};
Point(18) = {-0.023318, 0.748362, 0, 1.0};
Point(19) = {-0.027330, 0.747957, 0, 1.0};
Point(20) = {-0.031340, 0.747503, 0, 1.0};
Point(21) = {-0.035346, 0.747002, 0, 1.0};
Point(22) = {-0.039349, 0.746454, 0, 1.0};
Point(23) = {-0.043347, 0.745841, 0, 1.0};
Point(24) = {-0.047339, 0.745150, 0, 1.0};
Point(25) = {-0.051325, 0.744363, 0, 1.0};
Point(26) = {-0.055303, 0.743464, 0, 1.0};
Point(27) = {-0.059270, 0.742416, 0, 1.0};
Point(28) = {-0.063223, 0.741175, 0, 1.0};
Point(29) = {-0.067155, 0.739640, 0, 1.0};
Point(30) = {-0.069110, 0.738713, 0, 1.0};
Point(31) = {-0.071052, 0.737606, 0, 1.0};
Point(32) = {-0.072016, 0.736960, 0, 1.0};
Point(33) = {-0.072973, 0.736203, 0, 1.0};
Point(34) = {-0.073541, 0.735677, 0, 1.0};
Point(35) = {-0.074103, 0.735057, 0, 1.0};
Point(36) = {-0.074470, 0.734533, 0, 1.0};
Point(37) = {-0.074810, 0.733626, 0, 1.0};
Point(38) = {-0.074371, 0.733146, 0, 1.0};
Point(39) = {-0.073952, 0.732935, 0, 1.0};
Point(40) = {-0.073329, 0.732697, 0, 1.0};
Point(41) = {-0.072709, 0.732515, 0, 1.0};
Point(42) = {-0.071683, 0.732295, 0, 1.0};
Point(43) = {-0.070663, 0.732161, 0, 1.0};
Point(44) = {-0.068630, 0.731991, 0, 1.0};
Point(45) = {-0.066603, 0.731911, 0, 1.0};
Point(46) = {-0.062559, 0.731875, 0, 1.0};
Point(47) = {-0.058521, 0.731930, 0, 1.0};
Point(48) = {-0.054487, 0.732039, 0, 1.0};
Point(49) = {-0.050456, 0.732187, 0, 1.0};
Point(50) = {-0.046427, 0.732373, 0, 1.0};
Point(51) = {-0.042401, 0.732590, 0, 1.0};
Point(52) = {-0.038376, 0.732828, 0, 1.0};
Point(53) = {-0.034352, 0.733085, 0, 1.0};
Point(54) = {-0.030330, 0.733356, 0, 1.0};
Point(55) = {-0.026309, 0.733643, 0, 1.0};
Point(56) = {-0.022289, 0.733953, 0, 1.0};
Point(57) = {-0.018271, 0.734290, 0, 1.0};
Point(58) = {-0.014255, 0.734657, 0, 1.0};
Point(59) = {-0.010242, 0.735052, 0, 1.0};
Point(60) = {-0.002219, 0.735906, 0, 1.0};
Point(61) = {0.005798, 0.736845, 0, 1.0};
Point(62) = {0.013809, 0.737862, 0, 1.0};
Point(63) = {0.021816, 0.738938, 0, 1.0};
Point(64) = {0.029820, 0.740045, 0, 1.0};
Point(65) = {0.037827, 0.741129, 0, 1.0};
Point(66) = {0.045837, 0.742161, 0, 1.0};
Point(67) = {0.053854, 0.743091, 0, 1.0};
Point(68) = {0.057867, 0.743499, 0, 1.0};
Point(69) = {0.061883, 0.743863, 0, 1.0};
Point(70) = {0.065903, 0.744168, 0, 1.0};
Point(71) = {0.069926, 0.744432, 0, 1.0};
Point(72) = {0.073953, 0.744637, 0, 1.0};
Point(73) = {0.074783, 0.744683, 0, 1.0};
Point(74) = {-0.074674, -0.746202, 0, 1.0};
Point(75) = {-0.073835, -0.746283, 0, 1.0};
Point(76) = {-0.069767, -0.746662, 0, 1.0};
Point(77) = {-0.065698, -0.747042, 0, 1.0};
Point(78) = {-0.061630, -0.747408, 0, 1.0};
Point(79) = {-0.057562, -0.747768, 0, 1.0};
Point(80) = {-0.053495, -0.748116, 0, 1.0};
Point(81) = {-0.045367, -0.748742, 0, 1.0};
Point(82) = {-0.037246, -0.749260, 0, 1.0};
Point(83) = {-0.029135, -0.749648, 0, 1.0};
Point(84) = {-0.021033, -0.749903, 0, 1.0};
Point(85) = {-0.012942, -0.750000, 0, 1.0};
Point(86) = {-0.004864, -0.749928, 0, 1.0};
Point(87) = {0.003203, -0.749683, 0, 1.0};
Point(88) = {0.011257, -0.749278, 0, 1.0};
Point(89) = {0.015281, -0.749017, 0, 1.0};
Point(90) = {0.019301, -0.748713, 0, 1.0};
Point(91) = {0.023318, -0.748362, 0, 1.0};
Point(92) = {0.027330, -0.747957, 0, 1.0};
Point(93) = {0.031340, -0.747503, 0, 1.0};
Point(94) = {0.035346, -0.747002, 0, 1.0};
Point(95) = {0.039349, -0.746454, 0, 1.0};
Point(96) = {0.043347, -0.745841, 0, 1.0};
Point(97) = {0.047339, -0.745150, 0, 1.0};
Point(98) = {0.051325, -0.744363, 0, 1.0};
Point(99) = {0.055303, -0.743464, 0, 1.0};
Point(100) = {0.059270, -0.742416, 0, 1.0};
Point(101) = {0.063223, -0.741175, 0, 1.0};
Point(102) = {0.067155, -0.739640, 0, 1.0};
Point(103) = {0.069110, -0.738713, 0, 1.0};
Point(104) = {0.071052, -0.737606, 0, 1.0};
Point(105) = {0.072016, -0.736960, 0, 1.0};
Point(106) = {0.072973, -0.736203, 0, 1.0};
Point(107) = {0.073541, -0.735677, 0, 1.0};
Point(108) = {0.074103, -0.735057, 0, 1.0};
Point(109) = {0.074470, -0.734533, 0, 1.0};
Point(110) = {0.074810, -0.733626, 0, 1.0};
Point(111) = {0.074371, -0.733146, 0, 1.0};
Point(112) = {0.073952, -0.732935, 0, 1.0};
Point(113) = {0.073329, -0.732697, 0, 1.0};
Point(114) = {0.072709, -0.732515, 0, 1.0};
Point(115) = {0.071683, -0.732295, 0, 1.0};
Point(116) = {0.070663, -0.732161, 0, 1.0};
Point(117) = {0.068630, -0.731991, 0, 1.0};
Point(118) = {0.066603, -0.731911, 0, 1.0};
Point(119) = {0.062559, -0.731875, 0, 1.0};
Point(120) = {0.058521, -0.731930, 0, 1.0};
Point(121) = {0.054487, -0.732039, 0, 1.0};
Point(122) = {0.050456, -0.732187, 0, 1.0};
Point(123) = {0.046427, -0.732373, 0, 1.0};
Point(124) = {0.042401, -0.732590, 0, 1.0};
Point(125) = {0.038376, -0.732828, 0, 1.0};
Point(126) = {0.034352, -0.733085, 0, 1.0};
Point(127) = {0.030330, -0.733356, 0, 1.0};
Point(128) = {0.026309, -0.733643, 0, 1.0};
Point(129) = {0.022289, -0.733953, 0, 1.0};
Point(130) = {0.018271, -0.734290, 0, 1.0};
Point(131) = {0.014255, -0.734657, 0, 1.0};
Point(132) = {0.010242, -0.735052, 0, 1.0};
Point(133) = {0.002219, -0.735906, 0, 1.0};
Point(134) = {-0.005798, -0.736845, 0, 1.0};
Point(135) = {-0.013809, -0.737862, 0, 1.0};
Point(136) = {-0.021816, -0.738938, 0, 1.0};
Point(137) = {-0.029820, -0.740045, 0, 1.0};
Point(138) = {-0.037827, -0.741129, 0, 1.0};
Point(139) = {-0.045837, -0.742161, 0, 1.0};
Point(140) = {-0.053854, -0.743091, 0, 1.0};
Point(141) = {-0.057867, -0.743499, 0, 1.0};
Point(142) = {-0.061883, -0.743863, 0, 1.0};
Point(143) = {-0.065903, -0.744168, 0, 1.0};
Point(144) = {-0.069926, -0.744432, 0, 1.0};
Point(145) = {-0.073953, -0.744637, 0, 1.0};
Point(146) = {-0.074783, -0.744683, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
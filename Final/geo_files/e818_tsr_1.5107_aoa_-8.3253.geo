SetFactory("OpenCASCADE");

Point(1) = {0.147892, 0.747082, 0, 1.0};
Point(2) = {0.147236, 0.747150, 0, 1.0};
Point(3) = {0.145352, 0.747383, 0, 1.0};
Point(4) = {0.142414, 0.747764, 0, 1.0};
Point(5) = {0.138518, 0.748182, 0, 1.0};
Point(6) = {0.133682, 0.748580, 0, 1.0};
Point(7) = {0.127951, 0.748966, 0, 1.0};
Point(8) = {0.121434, 0.749343, 0, 1.0};
Point(9) = {0.114243, 0.749673, 0, 1.0};
Point(10) = {0.106495, 0.749920, 0, 1.0};
Point(11) = {0.098313, 0.750000, 0, 1.0};
Point(12) = {0.089755, 0.749809, 0, 1.0};
Point(13) = {0.080808, 0.749302, 0, 1.0};
Point(14) = {0.071503, 0.748535, 0, 1.0};
Point(15) = {0.061943, 0.747538, 0, 1.0};
Point(16) = {0.052222, 0.746336, 0, 1.0};
Point(17) = {0.042443, 0.744941, 0, 1.0};
Point(18) = {0.032706, 0.743381, 0, 1.0};
Point(19) = {0.023115, 0.741668, 0, 1.0};
Point(20) = {0.013763, 0.739828, 0, 1.0};
Point(21) = {0.004750, 0.737883, 0, 1.0};
Point(22) = {-0.003834, 0.735861, 0, 1.0};
Point(23) = {-0.011900, 0.733785, 0, 1.0};
Point(24) = {-0.019367, 0.731686, 0, 1.0};
Point(25) = {-0.026157, 0.729590, 0, 1.0};
Point(26) = {-0.032205, 0.727533, 0, 1.0};
Point(27) = {-0.037448, 0.725543, 0, 1.0};
Point(28) = {-0.041840, 0.723659, 0, 1.0};
Point(29) = {-0.045326, 0.721918, 0, 1.0};
Point(30) = {-0.047880, 0.720364, 0, 1.0};
Point(31) = {-0.048794, 0.719678, 0, 1.0};
Point(32) = {-0.049553, 0.718937, 0, 1.0};
Point(33) = {-0.049864, 0.718519, 0, 1.0};
Point(34) = {-0.049985, 0.718259, 0, 1.0};
Point(35) = {-0.049997, 0.718118, 0, 1.0};
Point(36) = {-0.049940, 0.717989, 0, 1.0};
Point(37) = {-0.049740, 0.717783, 0, 1.0};
Point(38) = {-0.049311, 0.717490, 0, 1.0};
Point(39) = {-0.048356, 0.717040, 0, 1.0};
Point(40) = {-0.047268, 0.716692, 0, 1.0};
Point(41) = {-0.044377, 0.716068, 0, 1.0};
Point(42) = {-0.040573, 0.715583, 0, 1.0};
Point(43) = {-0.035910, 0.715279, 0, 1.0};
Point(44) = {-0.030457, 0.715190, 0, 1.0};
Point(45) = {-0.024283, 0.715362, 0, 1.0};
Point(46) = {-0.017443, 0.715855, 0, 1.0};
Point(47) = {-0.009945, 0.716710, 0, 1.0};
Point(48) = {-0.001824, 0.717899, 0, 1.0};
Point(49) = {0.006866, 0.719405, 0, 1.0};
Point(50) = {0.016053, 0.721198, 0, 1.0};
Point(51) = {0.025668, 0.723245, 0, 1.0};
Point(52) = {0.035630, 0.725502, 0, 1.0};
Point(53) = {0.045852, 0.727919, 0, 1.0};
Point(54) = {0.056239, 0.730432, 0, 1.0};
Point(55) = {0.066685, 0.732979, 0, 1.0};
Point(56) = {0.077073, 0.735486, 0, 1.0};
Point(57) = {0.087288, 0.737884, 0, 1.0};
Point(58) = {0.097186, 0.740105, 0, 1.0};
Point(59) = {0.106625, 0.742084, 0, 1.0};
Point(60) = {0.115456, 0.743770, 0, 1.0};
Point(61) = {0.123525, 0.745125, 0, 1.0};
Point(62) = {0.130681, 0.746126, 0, 1.0};
Point(63) = {0.136776, 0.746771, 0, 1.0};
Point(64) = {0.141646, 0.747073, 0, 1.0};
Point(65) = {0.145140, 0.747136, 0, 1.0};
Point(66) = {0.147210, 0.747103, 0, 1.0};
Point(67) = {-0.147892, -0.747082, 0, 1.0};
Point(68) = {-0.147236, -0.747150, 0, 1.0};
Point(69) = {-0.145352, -0.747383, 0, 1.0};
Point(70) = {-0.142414, -0.747764, 0, 1.0};
Point(71) = {-0.138518, -0.748182, 0, 1.0};
Point(72) = {-0.133682, -0.748580, 0, 1.0};
Point(73) = {-0.127951, -0.748966, 0, 1.0};
Point(74) = {-0.121434, -0.749343, 0, 1.0};
Point(75) = {-0.114243, -0.749673, 0, 1.0};
Point(76) = {-0.106495, -0.749920, 0, 1.0};
Point(77) = {-0.098313, -0.750000, 0, 1.0};
Point(78) = {-0.089755, -0.749809, 0, 1.0};
Point(79) = {-0.080808, -0.749302, 0, 1.0};
Point(80) = {-0.071503, -0.748535, 0, 1.0};
Point(81) = {-0.061943, -0.747538, 0, 1.0};
Point(82) = {-0.052222, -0.746336, 0, 1.0};
Point(83) = {-0.042443, -0.744941, 0, 1.0};
Point(84) = {-0.032706, -0.743381, 0, 1.0};
Point(85) = {-0.023115, -0.741668, 0, 1.0};
Point(86) = {-0.013763, -0.739828, 0, 1.0};
Point(87) = {-0.004750, -0.737883, 0, 1.0};
Point(88) = {0.003834, -0.735861, 0, 1.0};
Point(89) = {0.011900, -0.733785, 0, 1.0};
Point(90) = {0.019367, -0.731686, 0, 1.0};
Point(91) = {0.026157, -0.729590, 0, 1.0};
Point(92) = {0.032205, -0.727533, 0, 1.0};
Point(93) = {0.037448, -0.725543, 0, 1.0};
Point(94) = {0.041840, -0.723659, 0, 1.0};
Point(95) = {0.045326, -0.721918, 0, 1.0};
Point(96) = {0.047880, -0.720364, 0, 1.0};
Point(97) = {0.048794, -0.719678, 0, 1.0};
Point(98) = {0.049553, -0.718937, 0, 1.0};
Point(99) = {0.049864, -0.718519, 0, 1.0};
Point(100) = {0.049985, -0.718259, 0, 1.0};
Point(101) = {0.049997, -0.718118, 0, 1.0};
Point(102) = {0.049940, -0.717989, 0, 1.0};
Point(103) = {0.049740, -0.717783, 0, 1.0};
Point(104) = {0.049311, -0.717490, 0, 1.0};
Point(105) = {0.048356, -0.717040, 0, 1.0};
Point(106) = {0.047268, -0.716692, 0, 1.0};
Point(107) = {0.044377, -0.716068, 0, 1.0};
Point(108) = {0.040573, -0.715583, 0, 1.0};
Point(109) = {0.035910, -0.715279, 0, 1.0};
Point(110) = {0.030457, -0.715190, 0, 1.0};
Point(111) = {0.024283, -0.715362, 0, 1.0};
Point(112) = {0.017443, -0.715855, 0, 1.0};
Point(113) = {0.009945, -0.716710, 0, 1.0};
Point(114) = {0.001824, -0.717899, 0, 1.0};
Point(115) = {-0.006866, -0.719405, 0, 1.0};
Point(116) = {-0.016053, -0.721198, 0, 1.0};
Point(117) = {-0.025668, -0.723245, 0, 1.0};
Point(118) = {-0.035630, -0.725502, 0, 1.0};
Point(119) = {-0.045852, -0.727919, 0, 1.0};
Point(120) = {-0.056239, -0.730432, 0, 1.0};
Point(121) = {-0.066685, -0.732979, 0, 1.0};
Point(122) = {-0.077073, -0.735486, 0, 1.0};
Point(123) = {-0.087288, -0.737884, 0, 1.0};
Point(124) = {-0.097186, -0.740105, 0, 1.0};
Point(125) = {-0.106625, -0.742084, 0, 1.0};
Point(126) = {-0.115456, -0.743770, 0, 1.0};
Point(127) = {-0.123525, -0.745125, 0, 1.0};
Point(128) = {-0.130681, -0.746126, 0, 1.0};
Point(129) = {-0.136776, -0.746771, 0, 1.0};
Point(130) = {-0.141646, -0.747073, 0, 1.0};
Point(131) = {-0.145140, -0.747136, 0, 1.0};
Point(132) = {-0.147210, -0.747103, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
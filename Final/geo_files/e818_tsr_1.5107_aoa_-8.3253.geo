SetFactory("OpenCASCADE");

Point(1) = {0.111311, 0.747811, 0, 1.0};
Point(2) = {0.110818, 0.747862, 0, 1.0};
Point(3) = {0.109406, 0.748037, 0, 1.0};
Point(4) = {0.107202, 0.748323, 0, 1.0};
Point(5) = {0.104280, 0.748637, 0, 1.0};
Point(6) = {0.100653, 0.748935, 0, 1.0};
Point(7) = {0.096355, 0.749225, 0, 1.0};
Point(8) = {0.091467, 0.749507, 0, 1.0};
Point(9) = {0.086074, 0.749755, 0, 1.0};
Point(10) = {0.080263, 0.749940, 0, 1.0};
Point(11) = {0.074127, 0.750000, 0, 1.0};
Point(12) = {0.067708, 0.749857, 0, 1.0};
Point(13) = {0.060998, 0.749476, 0, 1.0};
Point(14) = {0.054019, 0.748901, 0, 1.0};
Point(15) = {0.046849, 0.748153, 0, 1.0};
Point(16) = {0.039559, 0.747252, 0, 1.0};
Point(17) = {0.032225, 0.746206, 0, 1.0};
Point(18) = {0.024922, 0.745036, 0, 1.0};
Point(19) = {0.017729, 0.743751, 0, 1.0};
Point(20) = {0.010715, 0.742371, 0, 1.0};
Point(21) = {0.003955, 0.740912, 0, 1.0};
Point(22) = {-0.002483, 0.739396, 0, 1.0};
Point(23) = {-0.008532, 0.737839, 0, 1.0};
Point(24) = {-0.014132, 0.736264, 0, 1.0};
Point(25) = {-0.019225, 0.734693, 0, 1.0};
Point(26) = {-0.023761, 0.733150, 0, 1.0};
Point(27) = {-0.027693, 0.731657, 0, 1.0};
Point(28) = {-0.030987, 0.730245, 0, 1.0};
Point(29) = {-0.033602, 0.728939, 0, 1.0};
Point(30) = {-0.035517, 0.727773, 0, 1.0};
Point(31) = {-0.036203, 0.727259, 0, 1.0};
Point(32) = {-0.036772, 0.726703, 0, 1.0};
Point(33) = {-0.037005, 0.726390, 0, 1.0};
Point(34) = {-0.037096, 0.726194, 0, 1.0};
Point(35) = {-0.037105, 0.726088, 0, 1.0};
Point(36) = {-0.037062, 0.725992, 0, 1.0};
Point(37) = {-0.036912, 0.725838, 0, 1.0};
Point(38) = {-0.036590, 0.725618, 0, 1.0};
Point(39) = {-0.035874, 0.725280, 0, 1.0};
Point(40) = {-0.035058, 0.725019, 0, 1.0};
Point(41) = {-0.032890, 0.724551, 0, 1.0};
Point(42) = {-0.030037, 0.724188, 0, 1.0};
Point(43) = {-0.026539, 0.723960, 0, 1.0};
Point(44) = {-0.022450, 0.723893, 0, 1.0};
Point(45) = {-0.017820, 0.724022, 0, 1.0};
Point(46) = {-0.012689, 0.724392, 0, 1.0};
Point(47) = {-0.007066, 0.725033, 0, 1.0};
Point(48) = {-0.000975, 0.725924, 0, 1.0};
Point(49) = {0.005542, 0.727054, 0, 1.0};
Point(50) = {0.012432, 0.728398, 0, 1.0};
Point(51) = {0.019643, 0.729934, 0, 1.0};
Point(52) = {0.027115, 0.731626, 0, 1.0};
Point(53) = {0.034781, 0.733440, 0, 1.0};
Point(54) = {0.042572, 0.735324, 0, 1.0};
Point(55) = {0.050406, 0.737234, 0, 1.0};
Point(56) = {0.058197, 0.739114, 0, 1.0};
Point(57) = {0.065858, 0.740913, 0, 1.0};
Point(58) = {0.073282, 0.742578, 0, 1.0};
Point(59) = {0.080361, 0.744063, 0, 1.0};
Point(60) = {0.086984, 0.745328, 0, 1.0};
Point(61) = {0.093035, 0.746344, 0, 1.0};
Point(62) = {0.098403, 0.747094, 0, 1.0};
Point(63) = {0.102974, 0.747578, 0, 1.0};
Point(64) = {0.106626, 0.747805, 0, 1.0};
Point(65) = {0.109246, 0.747852, 0, 1.0};
Point(66) = {0.110799, 0.747828, 0, 1.0};
Point(67) = {-0.111311, -0.747811, 0, 1.0};
Point(68) = {-0.110818, -0.747862, 0, 1.0};
Point(69) = {-0.109406, -0.748037, 0, 1.0};
Point(70) = {-0.107202, -0.748323, 0, 1.0};
Point(71) = {-0.104280, -0.748637, 0, 1.0};
Point(72) = {-0.100653, -0.748935, 0, 1.0};
Point(73) = {-0.096355, -0.749225, 0, 1.0};
Point(74) = {-0.091467, -0.749507, 0, 1.0};
Point(75) = {-0.086074, -0.749755, 0, 1.0};
Point(76) = {-0.080263, -0.749940, 0, 1.0};
Point(77) = {-0.074127, -0.750000, 0, 1.0};
Point(78) = {-0.067708, -0.749857, 0, 1.0};
Point(79) = {-0.060998, -0.749476, 0, 1.0};
Point(80) = {-0.054019, -0.748901, 0, 1.0};
Point(81) = {-0.046849, -0.748153, 0, 1.0};
Point(82) = {-0.039559, -0.747252, 0, 1.0};
Point(83) = {-0.032225, -0.746206, 0, 1.0};
Point(84) = {-0.024922, -0.745036, 0, 1.0};
Point(85) = {-0.017729, -0.743751, 0, 1.0};
Point(86) = {-0.010715, -0.742371, 0, 1.0};
Point(87) = {-0.003955, -0.740912, 0, 1.0};
Point(88) = {0.002483, -0.739396, 0, 1.0};
Point(89) = {0.008532, -0.737839, 0, 1.0};
Point(90) = {0.014132, -0.736264, 0, 1.0};
Point(91) = {0.019225, -0.734693, 0, 1.0};
Point(92) = {0.023761, -0.733150, 0, 1.0};
Point(93) = {0.027693, -0.731657, 0, 1.0};
Point(94) = {0.030987, -0.730245, 0, 1.0};
Point(95) = {0.033602, -0.728939, 0, 1.0};
Point(96) = {0.035517, -0.727773, 0, 1.0};
Point(97) = {0.036203, -0.727259, 0, 1.0};
Point(98) = {0.036772, -0.726703, 0, 1.0};
Point(99) = {0.037005, -0.726390, 0, 1.0};
Point(100) = {0.037096, -0.726194, 0, 1.0};
Point(101) = {0.037105, -0.726088, 0, 1.0};
Point(102) = {0.037062, -0.725992, 0, 1.0};
Point(103) = {0.036912, -0.725838, 0, 1.0};
Point(104) = {0.036590, -0.725618, 0, 1.0};
Point(105) = {0.035874, -0.725280, 0, 1.0};
Point(106) = {0.035058, -0.725019, 0, 1.0};
Point(107) = {0.032890, -0.724551, 0, 1.0};
Point(108) = {0.030037, -0.724188, 0, 1.0};
Point(109) = {0.026539, -0.723960, 0, 1.0};
Point(110) = {0.022450, -0.723893, 0, 1.0};
Point(111) = {0.017820, -0.724022, 0, 1.0};
Point(112) = {0.012689, -0.724392, 0, 1.0};
Point(113) = {0.007066, -0.725033, 0, 1.0};
Point(114) = {0.000975, -0.725924, 0, 1.0};
Point(115) = {-0.005542, -0.727054, 0, 1.0};
Point(116) = {-0.012432, -0.728398, 0, 1.0};
Point(117) = {-0.019643, -0.729934, 0, 1.0};
Point(118) = {-0.027115, -0.731626, 0, 1.0};
Point(119) = {-0.034781, -0.733440, 0, 1.0};
Point(120) = {-0.042572, -0.735324, 0, 1.0};
Point(121) = {-0.050406, -0.737234, 0, 1.0};
Point(122) = {-0.058197, -0.739114, 0, 1.0};
Point(123) = {-0.065858, -0.740913, 0, 1.0};
Point(124) = {-0.073282, -0.742578, 0, 1.0};
Point(125) = {-0.080361, -0.744063, 0, 1.0};
Point(126) = {-0.086984, -0.745328, 0, 1.0};
Point(127) = {-0.093035, -0.746344, 0, 1.0};
Point(128) = {-0.098403, -0.747094, 0, 1.0};
Point(129) = {-0.102974, -0.747578, 0, 1.0};
Point(130) = {-0.106626, -0.747805, 0, 1.0};
Point(131) = {-0.109246, -0.747852, 0, 1.0};
Point(132) = {-0.110799, -0.747828, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074962, 0.744289, 0, 1.0};
Point(2) = {0.074713, 0.744407, 0, 1.0};
Point(3) = {0.074022, 0.744648, 0, 1.0};
Point(4) = {0.072983, 0.744860, 0, 1.0};
Point(5) = {0.071639, 0.745022, 0, 1.0};
Point(6) = {0.069979, 0.745206, 0, 1.0};
Point(7) = {0.067992, 0.745465, 0, 1.0};
Point(8) = {0.065693, 0.745783, 0, 1.0};
Point(9) = {0.063109, 0.746131, 0, 1.0};
Point(10) = {0.060266, 0.746497, 0, 1.0};
Point(11) = {0.057194, 0.746868, 0, 1.0};
Point(12) = {0.053922, 0.747241, 0, 1.0};
Point(13) = {0.050478, 0.747614, 0, 1.0};
Point(14) = {0.046894, 0.747982, 0, 1.0};
Point(15) = {0.043199, 0.748337, 0, 1.0};
Point(16) = {0.039423, 0.748673, 0, 1.0};
Point(17) = {0.035597, 0.748981, 0, 1.0};
Point(18) = {0.031747, 0.749255, 0, 1.0};
Point(19) = {0.027901, 0.749491, 0, 1.0};
Point(20) = {0.024061, 0.749687, 0, 1.0};
Point(21) = {0.020225, 0.749841, 0, 1.0};
Point(22) = {0.016424, 0.749947, 0, 1.0};
Point(23) = {0.012670, 0.750000, 0, 1.0};
Point(24) = {0.008985, 0.749992, 0, 1.0};
Point(25) = {0.005391, 0.749917, 0, 1.0};
Point(26) = {0.001905, 0.749766, 0, 1.0};
Point(27) = {-0.001450, 0.749537, 0, 1.0};
Point(28) = {-0.004654, 0.749226, 0, 1.0};
Point(29) = {-0.007689, 0.748834, 0, 1.0};
Point(30) = {-0.010533, 0.748362, 0, 1.0};
Point(31) = {-0.013168, 0.747815, 0, 1.0};
Point(32) = {-0.015575, 0.747193, 0, 1.0};
Point(33) = {-0.017738, 0.746495, 0, 1.0};
Point(34) = {-0.019645, 0.745733, 0, 1.0};
Point(35) = {-0.021280, 0.744936, 0, 1.0};
Point(36) = {-0.022637, 0.744138, 0, 1.0};
Point(37) = {-0.023711, 0.743360, 0, 1.0};
Point(38) = {-0.024481, 0.742619, 0, 1.0};
Point(39) = {-0.024913, 0.741942, 0, 1.0};
Point(40) = {-0.024999, 0.741503, 0, 1.0};
Point(41) = {-0.024890, 0.741113, 0, 1.0};
Point(42) = {-0.024428, 0.740663, 0, 1.0};
Point(43) = {-0.023628, 0.740309, 0, 1.0};
Point(44) = {-0.022525, 0.740042, 0, 1.0};
Point(45) = {-0.021141, 0.739851, 0, 1.0};
Point(46) = {-0.019480, 0.739722, 0, 1.0};
Point(47) = {-0.017550, 0.739654, 0, 1.0};
Point(48) = {-0.015368, 0.739641, 0, 1.0};
Point(49) = {-0.012945, 0.739677, 0, 1.0};
Point(50) = {-0.010298, 0.739757, 0, 1.0};
Point(51) = {-0.007444, 0.739878, 0, 1.0};
Point(52) = {-0.004402, 0.740031, 0, 1.0};
Point(53) = {-0.001195, 0.740212, 0, 1.0};
Point(54) = {0.002161, 0.740416, 0, 1.0};
Point(55) = {0.005645, 0.740637, 0, 1.0};
Point(56) = {0.009235, 0.740874, 0, 1.0};
Point(57) = {0.012913, 0.741120, 0, 1.0};
Point(58) = {0.016658, 0.741376, 0, 1.0};
Point(59) = {0.020450, 0.741635, 0, 1.0};
Point(60) = {0.024274, 0.741892, 0, 1.0};
Point(61) = {0.028103, 0.742143, 0, 1.0};
Point(62) = {0.031935, 0.742381, 0, 1.0};
Point(63) = {0.035772, 0.742605, 0, 1.0};
Point(64) = {0.039584, 0.742810, 0, 1.0};
Point(65) = {0.043345, 0.742996, 0, 1.0};
Point(66) = {0.047026, 0.743164, 0, 1.0};
Point(67) = {0.050596, 0.743316, 0, 1.0};
Point(68) = {0.054025, 0.743451, 0, 1.0};
Point(69) = {0.057284, 0.743567, 0, 1.0};
Point(70) = {0.060344, 0.743662, 0, 1.0};
Point(71) = {0.063175, 0.743736, 0, 1.0};
Point(72) = {0.065747, 0.743793, 0, 1.0};
Point(73) = {0.068036, 0.743834, 0, 1.0};
Point(74) = {0.070016, 0.743856, 0, 1.0};
Point(75) = {0.071671, 0.743869, 0, 1.0};
Point(76) = {0.073009, 0.743915, 0, 1.0};
Point(77) = {0.074039, 0.744032, 0, 1.0};
Point(78) = {0.074719, 0.744187, 0, 1.0};
Point(79) = {0.074963, 0.744266, 0, 1.0};
Point(80) = {-0.074962, -0.744289, 0, 1.0};
Point(81) = {-0.074713, -0.744407, 0, 1.0};
Point(82) = {-0.074022, -0.744648, 0, 1.0};
Point(83) = {-0.072983, -0.744860, 0, 1.0};
Point(84) = {-0.071639, -0.745022, 0, 1.0};
Point(85) = {-0.069979, -0.745206, 0, 1.0};
Point(86) = {-0.067992, -0.745465, 0, 1.0};
Point(87) = {-0.065693, -0.745783, 0, 1.0};
Point(88) = {-0.063109, -0.746131, 0, 1.0};
Point(89) = {-0.060266, -0.746497, 0, 1.0};
Point(90) = {-0.057194, -0.746868, 0, 1.0};
Point(91) = {-0.053922, -0.747241, 0, 1.0};
Point(92) = {-0.050478, -0.747614, 0, 1.0};
Point(93) = {-0.046894, -0.747982, 0, 1.0};
Point(94) = {-0.043199, -0.748337, 0, 1.0};
Point(95) = {-0.039423, -0.748673, 0, 1.0};
Point(96) = {-0.035597, -0.748981, 0, 1.0};
Point(97) = {-0.031747, -0.749255, 0, 1.0};
Point(98) = {-0.027901, -0.749491, 0, 1.0};
Point(99) = {-0.024061, -0.749687, 0, 1.0};
Point(100) = {-0.020225, -0.749841, 0, 1.0};
Point(101) = {-0.016424, -0.749947, 0, 1.0};
Point(102) = {-0.012670, -0.750000, 0, 1.0};
Point(103) = {-0.008985, -0.749992, 0, 1.0};
Point(104) = {-0.005391, -0.749917, 0, 1.0};
Point(105) = {-0.001905, -0.749766, 0, 1.0};
Point(106) = {0.001450, -0.749537, 0, 1.0};
Point(107) = {0.004654, -0.749226, 0, 1.0};
Point(108) = {0.007689, -0.748834, 0, 1.0};
Point(109) = {0.010533, -0.748362, 0, 1.0};
Point(110) = {0.013168, -0.747815, 0, 1.0};
Point(111) = {0.015575, -0.747193, 0, 1.0};
Point(112) = {0.017738, -0.746495, 0, 1.0};
Point(113) = {0.019645, -0.745733, 0, 1.0};
Point(114) = {0.021280, -0.744936, 0, 1.0};
Point(115) = {0.022637, -0.744138, 0, 1.0};
Point(116) = {0.023711, -0.743360, 0, 1.0};
Point(117) = {0.024481, -0.742619, 0, 1.0};
Point(118) = {0.024913, -0.741942, 0, 1.0};
Point(119) = {0.024999, -0.741503, 0, 1.0};
Point(120) = {0.024890, -0.741113, 0, 1.0};
Point(121) = {0.024428, -0.740663, 0, 1.0};
Point(122) = {0.023628, -0.740309, 0, 1.0};
Point(123) = {0.022525, -0.740042, 0, 1.0};
Point(124) = {0.021141, -0.739851, 0, 1.0};
Point(125) = {0.019480, -0.739722, 0, 1.0};
Point(126) = {0.017550, -0.739654, 0, 1.0};
Point(127) = {0.015368, -0.739641, 0, 1.0};
Point(128) = {0.012945, -0.739677, 0, 1.0};
Point(129) = {0.010298, -0.739757, 0, 1.0};
Point(130) = {0.007444, -0.739878, 0, 1.0};
Point(131) = {0.004402, -0.740031, 0, 1.0};
Point(132) = {0.001195, -0.740212, 0, 1.0};
Point(133) = {-0.002161, -0.740416, 0, 1.0};
Point(134) = {-0.005645, -0.740637, 0, 1.0};
Point(135) = {-0.009235, -0.740874, 0, 1.0};
Point(136) = {-0.012913, -0.741120, 0, 1.0};
Point(137) = {-0.016658, -0.741376, 0, 1.0};
Point(138) = {-0.020450, -0.741635, 0, 1.0};
Point(139) = {-0.024274, -0.741892, 0, 1.0};
Point(140) = {-0.028103, -0.742143, 0, 1.0};
Point(141) = {-0.031935, -0.742381, 0, 1.0};
Point(142) = {-0.035772, -0.742605, 0, 1.0};
Point(143) = {-0.039584, -0.742810, 0, 1.0};
Point(144) = {-0.043345, -0.742996, 0, 1.0};
Point(145) = {-0.047026, -0.743164, 0, 1.0};
Point(146) = {-0.050596, -0.743316, 0, 1.0};
Point(147) = {-0.054025, -0.743451, 0, 1.0};
Point(148) = {-0.057284, -0.743567, 0, 1.0};
Point(149) = {-0.060344, -0.743662, 0, 1.0};
Point(150) = {-0.063175, -0.743736, 0, 1.0};
Point(151) = {-0.065747, -0.743793, 0, 1.0};
Point(152) = {-0.068036, -0.743834, 0, 1.0};
Point(153) = {-0.070016, -0.743856, 0, 1.0};
Point(154) = {-0.071671, -0.743869, 0, 1.0};
Point(155) = {-0.073009, -0.743915, 0, 1.0};
Point(156) = {-0.074039, -0.744032, 0, 1.0};
Point(157) = {-0.074719, -0.744187, 0, 1.0};
Point(158) = {-0.074963, -0.744266, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074942, 0.742159, 0, 1.0};
Point(2) = {0.073136, 0.742371, 0, 1.0};
Point(3) = {0.070592, 0.742653, 0, 1.0};
Point(4) = {0.067546, 0.743049, 0, 1.0};
Point(5) = {0.064023, 0.743537, 0, 1.0};
Point(6) = {0.060064, 0.744071, 0, 1.0};
Point(7) = {0.055706, 0.744631, 0, 1.0};
Point(8) = {0.050998, 0.745199, 0, 1.0};
Point(9) = {0.045982, 0.745772, 0, 1.0};
Point(10) = {0.040705, 0.746343, 0, 1.0};
Point(11) = {0.035211, 0.746907, 0, 1.0};
Point(12) = {0.029548, 0.747451, 0, 1.0};
Point(13) = {0.023762, 0.747966, 0, 1.0};
Point(14) = {0.017898, 0.748439, 0, 1.0};
Point(15) = {0.011998, 0.748858, 0, 1.0};
Point(16) = {0.006103, 0.749220, 0, 1.0};
Point(17) = {0.000217, 0.749520, 0, 1.0};
Point(18) = {-0.005662, 0.749756, 0, 1.0};
Point(19) = {-0.011488, 0.749918, 0, 1.0};
Point(20) = {-0.017241, 0.750000, 0, 1.0};
Point(21) = {-0.022887, 0.749988, 0, 1.0};
Point(22) = {-0.028396, 0.749872, 0, 1.0};
Point(23) = {-0.033739, 0.749642, 0, 1.0};
Point(24) = {-0.038881, 0.749291, 0, 1.0};
Point(25) = {-0.043791, 0.748815, 0, 1.0};
Point(26) = {-0.048443, 0.748213, 0, 1.0};
Point(27) = {-0.052802, 0.747490, 0, 1.0};
Point(28) = {-0.056840, 0.746651, 0, 1.0};
Point(29) = {-0.060529, 0.745698, 0, 1.0};
Point(30) = {-0.063844, 0.744629, 0, 1.0};
Point(31) = {-0.066766, 0.743460, 0, 1.0};
Point(32) = {-0.069273, 0.742238, 0, 1.0};
Point(33) = {-0.071352, 0.741016, 0, 1.0};
Point(34) = {-0.072998, 0.739823, 0, 1.0};
Point(35) = {-0.074179, 0.738688, 0, 1.0};
Point(36) = {-0.074840, 0.737651, 0, 1.0};
Point(37) = {-0.074972, 0.736977, 0, 1.0};
Point(38) = {-0.074805, 0.736380, 0, 1.0};
Point(39) = {-0.074096, 0.735690, 0, 1.0};
Point(40) = {-0.072870, 0.735147, 0, 1.0};
Point(41) = {-0.071180, 0.734738, 0, 1.0};
Point(42) = {-0.069060, 0.734445, 0, 1.0};
Point(43) = {-0.066514, 0.734248, 0, 1.0};
Point(44) = {-0.063556, 0.734143, 0, 1.0};
Point(45) = {-0.060212, 0.734123, 0, 1.0};
Point(46) = {-0.056499, 0.734179, 0, 1.0};
Point(47) = {-0.052441, 0.734302, 0, 1.0};
Point(48) = {-0.048067, 0.734486, 0, 1.0};
Point(49) = {-0.043405, 0.734721, 0, 1.0};
Point(50) = {-0.038489, 0.734999, 0, 1.0};
Point(51) = {-0.033346, 0.735311, 0, 1.0};
Point(52) = {-0.028006, 0.735651, 0, 1.0};
Point(53) = {-0.022505, 0.736013, 0, 1.0};
Point(54) = {-0.016868, 0.736391, 0, 1.0};
Point(55) = {-0.011128, 0.736783, 0, 1.0};
Point(56) = {-0.005317, 0.737179, 0, 1.0};
Point(57) = {0.000544, 0.737573, 0, 1.0};
Point(58) = {0.006412, 0.737958, 0, 1.0};
Point(59) = {0.012286, 0.738322, 0, 1.0};
Point(60) = {0.018166, 0.738666, 0, 1.0};
Point(61) = {0.024008, 0.738981, 0, 1.0};
Point(62) = {0.029772, 0.739266, 0, 1.0};
Point(63) = {0.035413, 0.739523, 0, 1.0};
Point(64) = {0.040885, 0.739756, 0, 1.0};
Point(65) = {0.046141, 0.739962, 0, 1.0};
Point(66) = {0.051136, 0.740141, 0, 1.0};
Point(67) = {0.055825, 0.740286, 0, 1.0};
Point(68) = {0.060164, 0.740400, 0, 1.0};
Point(69) = {0.064107, 0.740487, 0, 1.0};
Point(70) = {0.067614, 0.740550, 0, 1.0};
Point(71) = {0.070649, 0.740583, 0, 1.0};
Point(72) = {0.073184, 0.740603, 0, 1.0};
Point(73) = {0.074984, 0.740656, 0, 1.0};
Point(74) = {-0.074942, -0.742159, 0, 1.0};
Point(75) = {-0.073136, -0.742371, 0, 1.0};
Point(76) = {-0.070592, -0.742653, 0, 1.0};
Point(77) = {-0.067546, -0.743049, 0, 1.0};
Point(78) = {-0.064023, -0.743537, 0, 1.0};
Point(79) = {-0.060064, -0.744071, 0, 1.0};
Point(80) = {-0.055706, -0.744631, 0, 1.0};
Point(81) = {-0.050998, -0.745199, 0, 1.0};
Point(82) = {-0.045982, -0.745772, 0, 1.0};
Point(83) = {-0.040705, -0.746343, 0, 1.0};
Point(84) = {-0.035211, -0.746907, 0, 1.0};
Point(85) = {-0.029548, -0.747451, 0, 1.0};
Point(86) = {-0.023762, -0.747966, 0, 1.0};
Point(87) = {-0.017898, -0.748439, 0, 1.0};
Point(88) = {-0.011998, -0.748858, 0, 1.0};
Point(89) = {-0.006103, -0.749220, 0, 1.0};
Point(90) = {-0.000217, -0.749520, 0, 1.0};
Point(91) = {0.005662, -0.749756, 0, 1.0};
Point(92) = {0.011488, -0.749918, 0, 1.0};
Point(93) = {0.017241, -0.750000, 0, 1.0};
Point(94) = {0.022887, -0.749988, 0, 1.0};
Point(95) = {0.028396, -0.749872, 0, 1.0};
Point(96) = {0.033739, -0.749642, 0, 1.0};
Point(97) = {0.038881, -0.749291, 0, 1.0};
Point(98) = {0.043791, -0.748815, 0, 1.0};
Point(99) = {0.048443, -0.748213, 0, 1.0};
Point(100) = {0.052802, -0.747490, 0, 1.0};
Point(101) = {0.056840, -0.746651, 0, 1.0};
Point(102) = {0.060529, -0.745698, 0, 1.0};
Point(103) = {0.063844, -0.744629, 0, 1.0};
Point(104) = {0.066766, -0.743460, 0, 1.0};
Point(105) = {0.069273, -0.742238, 0, 1.0};
Point(106) = {0.071352, -0.741016, 0, 1.0};
Point(107) = {0.072998, -0.739823, 0, 1.0};
Point(108) = {0.074179, -0.738688, 0, 1.0};
Point(109) = {0.074840, -0.737651, 0, 1.0};
Point(110) = {0.074972, -0.736977, 0, 1.0};
Point(111) = {0.074805, -0.736380, 0, 1.0};
Point(112) = {0.074096, -0.735690, 0, 1.0};
Point(113) = {0.072870, -0.735147, 0, 1.0};
Point(114) = {0.071180, -0.734738, 0, 1.0};
Point(115) = {0.069060, -0.734445, 0, 1.0};
Point(116) = {0.066514, -0.734248, 0, 1.0};
Point(117) = {0.063556, -0.734143, 0, 1.0};
Point(118) = {0.060212, -0.734123, 0, 1.0};
Point(119) = {0.056499, -0.734179, 0, 1.0};
Point(120) = {0.052441, -0.734302, 0, 1.0};
Point(121) = {0.048067, -0.734486, 0, 1.0};
Point(122) = {0.043405, -0.734721, 0, 1.0};
Point(123) = {0.038489, -0.734999, 0, 1.0};
Point(124) = {0.033346, -0.735311, 0, 1.0};
Point(125) = {0.028006, -0.735651, 0, 1.0};
Point(126) = {0.022505, -0.736013, 0, 1.0};
Point(127) = {0.016868, -0.736391, 0, 1.0};
Point(128) = {0.011128, -0.736783, 0, 1.0};
Point(129) = {0.005317, -0.737179, 0, 1.0};
Point(130) = {-0.000544, -0.737573, 0, 1.0};
Point(131) = {-0.006412, -0.737958, 0, 1.0};
Point(132) = {-0.012286, -0.738322, 0, 1.0};
Point(133) = {-0.018166, -0.738666, 0, 1.0};
Point(134) = {-0.024008, -0.738981, 0, 1.0};
Point(135) = {-0.029772, -0.739266, 0, 1.0};
Point(136) = {-0.035413, -0.739523, 0, 1.0};
Point(137) = {-0.040885, -0.739756, 0, 1.0};
Point(138) = {-0.046141, -0.739962, 0, 1.0};
Point(139) = {-0.051136, -0.740141, 0, 1.0};
Point(140) = {-0.055825, -0.740286, 0, 1.0};
Point(141) = {-0.060164, -0.740400, 0, 1.0};
Point(142) = {-0.064107, -0.740487, 0, 1.0};
Point(143) = {-0.067614, -0.740550, 0, 1.0};
Point(144) = {-0.070649, -0.740583, 0, 1.0};
Point(145) = {-0.073184, -0.740603, 0, 1.0};
Point(146) = {-0.074984, -0.740656, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:23};
Spline(2) = {23:51};
Spline(3) = {51:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:96};
Spline(6) = {96:124};
Spline(7) = {124:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
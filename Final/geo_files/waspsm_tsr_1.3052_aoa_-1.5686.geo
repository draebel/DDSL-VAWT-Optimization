SetFactory("OpenCASCADE");

Point(1) = {0.112456, 0.741434, 0, 1.0};
Point(2) = {0.112082, 0.741611, 0, 1.0};
Point(3) = {0.111046, 0.741973, 0, 1.0};
Point(4) = {0.109487, 0.742290, 0, 1.0};
Point(5) = {0.107471, 0.742534, 0, 1.0};
Point(6) = {0.104981, 0.742809, 0, 1.0};
Point(7) = {0.102000, 0.743197, 0, 1.0};
Point(8) = {0.098552, 0.743674, 0, 1.0};
Point(9) = {0.094677, 0.744197, 0, 1.0};
Point(10) = {0.090412, 0.744745, 0, 1.0};
Point(11) = {0.085803, 0.745301, 0, 1.0};
Point(12) = {0.080895, 0.745862, 0, 1.0};
Point(13) = {0.075730, 0.746421, 0, 1.0};
Point(14) = {0.070353, 0.746973, 0, 1.0};
Point(15) = {0.064810, 0.747506, 0, 1.0};
Point(16) = {0.059147, 0.748009, 0, 1.0};
Point(17) = {0.053408, 0.748472, 0, 1.0};
Point(18) = {0.047633, 0.748882, 0, 1.0};
Point(19) = {0.041864, 0.749236, 0, 1.0};
Point(20) = {0.036103, 0.749530, 0, 1.0};
Point(21) = {0.030350, 0.749761, 0, 1.0};
Point(22) = {0.024648, 0.749920, 0, 1.0};
Point(23) = {0.019017, 0.750000, 0, 1.0};
Point(24) = {0.013491, 0.749988, 0, 1.0};
Point(25) = {0.008099, 0.749875, 0, 1.0};
Point(26) = {0.002870, 0.749649, 0, 1.0};
Point(27) = {-0.002163, 0.749306, 0, 1.0};
Point(28) = {-0.006968, 0.748840, 0, 1.0};
Point(29) = {-0.011521, 0.748251, 0, 1.0};
Point(30) = {-0.015787, 0.747543, 0, 1.0};
Point(31) = {-0.019740, 0.746722, 0, 1.0};
Point(32) = {-0.023350, 0.745789, 0, 1.0};
Point(33) = {-0.026594, 0.744743, 0, 1.0};
Point(34) = {-0.029455, 0.743599, 0, 1.0};
Point(35) = {-0.031908, 0.742404, 0, 1.0};
Point(36) = {-0.033943, 0.741207, 0, 1.0};
Point(37) = {-0.035554, 0.740039, 0, 1.0};
Point(38) = {-0.036710, 0.738929, 0, 1.0};
Point(39) = {-0.037357, 0.737913, 0, 1.0};
Point(40) = {-0.037486, 0.737254, 0, 1.0};
Point(41) = {-0.037323, 0.736670, 0, 1.0};
Point(42) = {-0.036629, 0.735994, 0, 1.0};
Point(43) = {-0.035429, 0.735463, 0, 1.0};
Point(44) = {-0.033775, 0.735063, 0, 1.0};
Point(45) = {-0.031699, 0.734776, 0, 1.0};
Point(46) = {-0.029208, 0.734583, 0, 1.0};
Point(47) = {-0.026313, 0.734481, 0, 1.0};
Point(48) = {-0.023040, 0.734461, 0, 1.0};
Point(49) = {-0.019406, 0.734515, 0, 1.0};
Point(50) = {-0.015434, 0.734636, 0, 1.0};
Point(51) = {-0.011153, 0.734816, 0, 1.0};
Point(52) = {-0.006590, 0.735046, 0, 1.0};
Point(53) = {-0.001780, 0.735318, 0, 1.0};
Point(54) = {0.003254, 0.735624, 0, 1.0};
Point(55) = {0.008480, 0.735956, 0, 1.0};
Point(56) = {0.013865, 0.736310, 0, 1.0};
Point(57) = {0.019382, 0.736680, 0, 1.0};
Point(58) = {0.025000, 0.737064, 0, 1.0};
Point(59) = {0.030687, 0.737452, 0, 1.0};
Point(60) = {0.036423, 0.737837, 0, 1.0};
Point(61) = {0.042166, 0.738214, 0, 1.0};
Point(62) = {0.047916, 0.738571, 0, 1.0};
Point(63) = {0.053670, 0.738907, 0, 1.0};
Point(64) = {0.059388, 0.739215, 0, 1.0};
Point(65) = {0.065030, 0.739494, 0, 1.0};
Point(66) = {0.070551, 0.739746, 0, 1.0};
Point(67) = {0.075906, 0.739974, 0, 1.0};
Point(68) = {0.081050, 0.740176, 0, 1.0};
Point(69) = {0.085939, 0.740350, 0, 1.0};
Point(70) = {0.090528, 0.740493, 0, 1.0};
Point(71) = {0.094775, 0.740604, 0, 1.0};
Point(72) = {0.098634, 0.740689, 0, 1.0};
Point(73) = {0.102067, 0.740751, 0, 1.0};
Point(74) = {0.105037, 0.740783, 0, 1.0};
Point(75) = {0.107518, 0.740803, 0, 1.0};
Point(76) = {0.109526, 0.740873, 0, 1.0};
Point(77) = {0.111071, 0.741048, 0, 1.0};
Point(78) = {0.112091, 0.741281, 0, 1.0};
Point(79) = {0.112457, 0.741399, 0, 1.0};
Point(80) = {-0.112456, -0.741434, 0, 1.0};
Point(81) = {-0.112082, -0.741611, 0, 1.0};
Point(82) = {-0.111046, -0.741973, 0, 1.0};
Point(83) = {-0.109487, -0.742290, 0, 1.0};
Point(84) = {-0.107471, -0.742534, 0, 1.0};
Point(85) = {-0.104981, -0.742809, 0, 1.0};
Point(86) = {-0.102000, -0.743197, 0, 1.0};
Point(87) = {-0.098552, -0.743674, 0, 1.0};
Point(88) = {-0.094677, -0.744197, 0, 1.0};
Point(89) = {-0.090412, -0.744745, 0, 1.0};
Point(90) = {-0.085803, -0.745301, 0, 1.0};
Point(91) = {-0.080895, -0.745862, 0, 1.0};
Point(92) = {-0.075730, -0.746421, 0, 1.0};
Point(93) = {-0.070353, -0.746973, 0, 1.0};
Point(94) = {-0.064810, -0.747506, 0, 1.0};
Point(95) = {-0.059147, -0.748009, 0, 1.0};
Point(96) = {-0.053408, -0.748472, 0, 1.0};
Point(97) = {-0.047633, -0.748882, 0, 1.0};
Point(98) = {-0.041864, -0.749236, 0, 1.0};
Point(99) = {-0.036103, -0.749530, 0, 1.0};
Point(100) = {-0.030350, -0.749761, 0, 1.0};
Point(101) = {-0.024648, -0.749920, 0, 1.0};
Point(102) = {-0.019017, -0.750000, 0, 1.0};
Point(103) = {-0.013491, -0.749988, 0, 1.0};
Point(104) = {-0.008099, -0.749875, 0, 1.0};
Point(105) = {-0.002870, -0.749649, 0, 1.0};
Point(106) = {0.002163, -0.749306, 0, 1.0};
Point(107) = {0.006968, -0.748840, 0, 1.0};
Point(108) = {0.011521, -0.748251, 0, 1.0};
Point(109) = {0.015787, -0.747543, 0, 1.0};
Point(110) = {0.019740, -0.746722, 0, 1.0};
Point(111) = {0.023350, -0.745789, 0, 1.0};
Point(112) = {0.026594, -0.744743, 0, 1.0};
Point(113) = {0.029455, -0.743599, 0, 1.0};
Point(114) = {0.031908, -0.742404, 0, 1.0};
Point(115) = {0.033943, -0.741207, 0, 1.0};
Point(116) = {0.035554, -0.740039, 0, 1.0};
Point(117) = {0.036710, -0.738929, 0, 1.0};
Point(118) = {0.037357, -0.737913, 0, 1.0};
Point(119) = {0.037486, -0.737254, 0, 1.0};
Point(120) = {0.037323, -0.736670, 0, 1.0};
Point(121) = {0.036629, -0.735994, 0, 1.0};
Point(122) = {0.035429, -0.735463, 0, 1.0};
Point(123) = {0.033775, -0.735063, 0, 1.0};
Point(124) = {0.031699, -0.734776, 0, 1.0};
Point(125) = {0.029208, -0.734583, 0, 1.0};
Point(126) = {0.026313, -0.734481, 0, 1.0};
Point(127) = {0.023040, -0.734461, 0, 1.0};
Point(128) = {0.019406, -0.734515, 0, 1.0};
Point(129) = {0.015434, -0.734636, 0, 1.0};
Point(130) = {0.011153, -0.734816, 0, 1.0};
Point(131) = {0.006590, -0.735046, 0, 1.0};
Point(132) = {0.001780, -0.735318, 0, 1.0};
Point(133) = {-0.003254, -0.735624, 0, 1.0};
Point(134) = {-0.008480, -0.735956, 0, 1.0};
Point(135) = {-0.013865, -0.736310, 0, 1.0};
Point(136) = {-0.019382, -0.736680, 0, 1.0};
Point(137) = {-0.025000, -0.737064, 0, 1.0};
Point(138) = {-0.030687, -0.737452, 0, 1.0};
Point(139) = {-0.036423, -0.737837, 0, 1.0};
Point(140) = {-0.042166, -0.738214, 0, 1.0};
Point(141) = {-0.047916, -0.738571, 0, 1.0};
Point(142) = {-0.053670, -0.738907, 0, 1.0};
Point(143) = {-0.059388, -0.739215, 0, 1.0};
Point(144) = {-0.065030, -0.739494, 0, 1.0};
Point(145) = {-0.070551, -0.739746, 0, 1.0};
Point(146) = {-0.075906, -0.739974, 0, 1.0};
Point(147) = {-0.081050, -0.740176, 0, 1.0};
Point(148) = {-0.085939, -0.740350, 0, 1.0};
Point(149) = {-0.090528, -0.740493, 0, 1.0};
Point(150) = {-0.094775, -0.740604, 0, 1.0};
Point(151) = {-0.098634, -0.740689, 0, 1.0};
Point(152) = {-0.102067, -0.740751, 0, 1.0};
Point(153) = {-0.105037, -0.740783, 0, 1.0};
Point(154) = {-0.107518, -0.740803, 0, 1.0};
Point(155) = {-0.109526, -0.740873, 0, 1.0};
Point(156) = {-0.111071, -0.741048, 0, 1.0};
Point(157) = {-0.112091, -0.741281, 0, 1.0};
Point(158) = {-0.112457, -0.741399, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112421, 0.728423, 0, 1.0};
Point(2) = {0.112026, 0.728578, 0, 1.0};
Point(3) = {0.110848, 0.729037, 0, 1.0};
Point(4) = {0.108896, 0.729785, 0, 1.0};
Point(5) = {0.106187, 0.730800, 0, 1.0};
Point(6) = {0.102744, 0.732052, 0, 1.0};
Point(7) = {0.098601, 0.733500, 0, 1.0};
Point(8) = {0.093794, 0.735104, 0, 1.0};
Point(9) = {0.088370, 0.736817, 0, 1.0};
Point(10) = {0.082382, 0.738592, 0, 1.0};
Point(11) = {0.075889, 0.740381, 0, 1.0};
Point(12) = {0.068959, 0.742138, 0, 1.0};
Point(13) = {0.061663, 0.743815, 0, 1.0};
Point(14) = {0.054079, 0.745369, 0, 1.0};
Point(15) = {0.046291, 0.746761, 0, 1.0};
Point(16) = {0.038381, 0.747956, 0, 1.0};
Point(17) = {0.030445, 0.748925, 0, 1.0};
Point(18) = {0.022553, 0.749641, 0, 1.0};
Point(19) = {0.014640, 0.750000, 0, 1.0};
Point(20) = {0.006970, 0.749925, 0, 1.0};
Point(21) = {-0.000350, 0.749439, 0, 1.0};
Point(22) = {-0.007225, 0.748581, 0, 1.0};
Point(23) = {-0.013560, 0.747401, 0, 1.0};
Point(24) = {-0.019274, 0.745963, 0, 1.0};
Point(25) = {-0.024296, 0.744338, 0, 1.0};
Point(26) = {-0.028568, 0.742596, 0, 1.0};
Point(27) = {-0.032042, 0.740811, 0, 1.0};
Point(28) = {-0.034689, 0.739045, 0, 1.0};
Point(29) = {-0.036484, 0.737354, 0, 1.0};
Point(30) = {-0.037421, 0.735780, 0, 1.0};
Point(31) = {-0.037500, 0.734349, 0, 1.0};
Point(32) = {-0.036748, 0.733130, 0, 1.0};
Point(33) = {-0.035201, 0.732180, 0, 1.0};
Point(34) = {-0.032889, 0.731488, 0, 1.0};
Point(35) = {-0.029850, 0.731037, 0, 1.0};
Point(36) = {-0.026127, 0.730802, 0, 1.0};
Point(37) = {-0.021772, 0.730755, 0, 1.0};
Point(38) = {-0.016833, 0.730860, 0, 1.0};
Point(39) = {-0.011369, 0.731077, 0, 1.0};
Point(40) = {-0.005434, 0.731359, 0, 1.0};
Point(41) = {0.000918, 0.731660, 0, 1.0};
Point(42) = {0.007630, 0.731933, 0, 1.0};
Point(43) = {0.014641, 0.732128, 0, 1.0};
Point(44) = {0.021895, 0.732201, 0, 1.0};
Point(45) = {0.029494, 0.732174, 0, 1.0};
Point(46) = {0.037207, 0.732117, 0, 1.0};
Point(47) = {0.044937, 0.732015, 0, 1.0};
Point(48) = {0.052605, 0.731856, 0, 1.0};
Point(49) = {0.060128, 0.731635, 0, 1.0};
Point(50) = {0.067423, 0.731352, 0, 1.0};
Point(51) = {0.074408, 0.731017, 0, 1.0};
Point(52) = {0.081006, 0.730639, 0, 1.0};
Point(53) = {0.087141, 0.730233, 0, 1.0};
Point(54) = {0.092741, 0.729820, 0, 1.0};
Point(55) = {0.097741, 0.729415, 0, 1.0};
Point(56) = {0.102081, 0.729037, 0, 1.0};
Point(57) = {0.105708, 0.728705, 0, 1.0};
Point(58) = {0.108578, 0.728430, 0, 1.0};
Point(59) = {0.110654, 0.728224, 0, 1.0};
Point(60) = {0.111910, 0.728097, 0, 1.0};
Point(61) = {0.112330, 0.728055, 0, 1.0};
Point(62) = {0.112375, 0.728239, 0, 1.0};
Point(63) = {-0.112421, -0.728423, 0, 1.0};
Point(64) = {-0.112026, -0.728578, 0, 1.0};
Point(65) = {-0.110848, -0.729037, 0, 1.0};
Point(66) = {-0.108896, -0.729785, 0, 1.0};
Point(67) = {-0.106187, -0.730800, 0, 1.0};
Point(68) = {-0.102744, -0.732052, 0, 1.0};
Point(69) = {-0.098601, -0.733500, 0, 1.0};
Point(70) = {-0.093794, -0.735104, 0, 1.0};
Point(71) = {-0.088370, -0.736817, 0, 1.0};
Point(72) = {-0.082382, -0.738592, 0, 1.0};
Point(73) = {-0.075889, -0.740381, 0, 1.0};
Point(74) = {-0.068959, -0.742138, 0, 1.0};
Point(75) = {-0.061663, -0.743815, 0, 1.0};
Point(76) = {-0.054079, -0.745369, 0, 1.0};
Point(77) = {-0.046291, -0.746761, 0, 1.0};
Point(78) = {-0.038381, -0.747956, 0, 1.0};
Point(79) = {-0.030445, -0.748925, 0, 1.0};
Point(80) = {-0.022553, -0.749641, 0, 1.0};
Point(81) = {-0.014640, -0.750000, 0, 1.0};
Point(82) = {-0.006970, -0.749925, 0, 1.0};
Point(83) = {0.000350, -0.749439, 0, 1.0};
Point(84) = {0.007225, -0.748581, 0, 1.0};
Point(85) = {0.013560, -0.747401, 0, 1.0};
Point(86) = {0.019274, -0.745963, 0, 1.0};
Point(87) = {0.024296, -0.744338, 0, 1.0};
Point(88) = {0.028568, -0.742596, 0, 1.0};
Point(89) = {0.032042, -0.740811, 0, 1.0};
Point(90) = {0.034689, -0.739045, 0, 1.0};
Point(91) = {0.036484, -0.737354, 0, 1.0};
Point(92) = {0.037421, -0.735780, 0, 1.0};
Point(93) = {0.037500, -0.734349, 0, 1.0};
Point(94) = {0.036748, -0.733130, 0, 1.0};
Point(95) = {0.035201, -0.732180, 0, 1.0};
Point(96) = {0.032889, -0.731488, 0, 1.0};
Point(97) = {0.029850, -0.731037, 0, 1.0};
Point(98) = {0.026127, -0.730802, 0, 1.0};
Point(99) = {0.021772, -0.730755, 0, 1.0};
Point(100) = {0.016833, -0.730860, 0, 1.0};
Point(101) = {0.011369, -0.731077, 0, 1.0};
Point(102) = {0.005434, -0.731359, 0, 1.0};
Point(103) = {-0.000918, -0.731660, 0, 1.0};
Point(104) = {-0.007630, -0.731933, 0, 1.0};
Point(105) = {-0.014641, -0.732128, 0, 1.0};
Point(106) = {-0.021895, -0.732201, 0, 1.0};
Point(107) = {-0.029494, -0.732174, 0, 1.0};
Point(108) = {-0.037207, -0.732117, 0, 1.0};
Point(109) = {-0.044937, -0.732015, 0, 1.0};
Point(110) = {-0.052605, -0.731856, 0, 1.0};
Point(111) = {-0.060128, -0.731635, 0, 1.0};
Point(112) = {-0.067423, -0.731352, 0, 1.0};
Point(113) = {-0.074408, -0.731017, 0, 1.0};
Point(114) = {-0.081006, -0.730639, 0, 1.0};
Point(115) = {-0.087141, -0.730233, 0, 1.0};
Point(116) = {-0.092741, -0.729820, 0, 1.0};
Point(117) = {-0.097741, -0.729415, 0, 1.0};
Point(118) = {-0.102081, -0.729037, 0, 1.0};
Point(119) = {-0.105708, -0.728705, 0, 1.0};
Point(120) = {-0.108578, -0.728430, 0, 1.0};
Point(121) = {-0.110654, -0.728224, 0, 1.0};
Point(122) = {-0.111910, -0.728097, 0, 1.0};
Point(123) = {-0.112330, -0.728055, 0, 1.0};
Point(124) = {-0.112375, -0.728239, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:103};
Spline(7) = {103:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
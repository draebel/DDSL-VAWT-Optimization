SetFactory("OpenCASCADE");

Point(1) = {0.112489, 0.728418, 0, 1.0};
Point(2) = {0.112094, 0.728572, 0, 1.0};
Point(3) = {0.110916, 0.729032, 0, 1.0};
Point(4) = {0.108963, 0.729780, 0, 1.0};
Point(5) = {0.106254, 0.730795, 0, 1.0};
Point(6) = {0.102810, 0.732047, 0, 1.0};
Point(7) = {0.098667, 0.733495, 0, 1.0};
Point(8) = {0.093858, 0.735100, 0, 1.0};
Point(9) = {0.088433, 0.736814, 0, 1.0};
Point(10) = {0.082443, 0.738590, 0, 1.0};
Point(11) = {0.075948, 0.740379, 0, 1.0};
Point(12) = {0.069016, 0.742136, 0, 1.0};
Point(13) = {0.061719, 0.743813, 0, 1.0};
Point(14) = {0.054133, 0.745367, 0, 1.0};
Point(15) = {0.046343, 0.746760, 0, 1.0};
Point(16) = {0.038431, 0.747955, 0, 1.0};
Point(17) = {0.030493, 0.748925, 0, 1.0};
Point(18) = {0.022599, 0.749641, 0, 1.0};
Point(19) = {0.014684, 0.750000, 0, 1.0};
Point(20) = {0.007012, 0.749925, 0, 1.0};
Point(21) = {-0.000310, 0.749439, 0, 1.0};
Point(22) = {-0.007186, 0.748581, 0, 1.0};
Point(23) = {-0.013523, 0.747400, 0, 1.0};
Point(24) = {-0.019239, 0.745962, 0, 1.0};
Point(25) = {-0.024262, 0.744336, 0, 1.0};
Point(26) = {-0.028534, 0.742595, 0, 1.0};
Point(27) = {-0.032010, 0.740808, 0, 1.0};
Point(28) = {-0.034657, 0.739042, 0, 1.0};
Point(29) = {-0.036453, 0.737351, 0, 1.0};
Point(30) = {-0.037390, 0.735776, 0, 1.0};
Point(31) = {-0.037469, 0.734346, 0, 1.0};
Point(32) = {-0.036717, 0.733126, 0, 1.0};
Point(33) = {-0.035170, 0.732175, 0, 1.0};
Point(34) = {-0.032857, 0.731483, 0, 1.0};
Point(35) = {-0.029817, 0.731032, 0, 1.0};
Point(36) = {-0.026093, 0.730797, 0, 1.0};
Point(37) = {-0.021737, 0.730751, 0, 1.0};
Point(38) = {-0.016797, 0.730855, 0, 1.0};
Point(39) = {-0.011331, 0.731073, 0, 1.0};
Point(40) = {-0.005395, 0.731355, 0, 1.0};
Point(41) = {0.000959, 0.731656, 0, 1.0};
Point(42) = {0.007672, 0.731929, 0, 1.0};
Point(43) = {0.014685, 0.732123, 0, 1.0};
Point(44) = {0.021941, 0.732197, 0, 1.0};
Point(45) = {0.029542, 0.732169, 0, 1.0};
Point(46) = {0.037257, 0.732113, 0, 1.0};
Point(47) = {0.044989, 0.732011, 0, 1.0};
Point(48) = {0.052659, 0.731851, 0, 1.0};
Point(49) = {0.060183, 0.731630, 0, 1.0};
Point(50) = {0.067480, 0.731348, 0, 1.0};
Point(51) = {0.074467, 0.731012, 0, 1.0};
Point(52) = {0.081066, 0.730635, 0, 1.0};
Point(53) = {0.087204, 0.730228, 0, 1.0};
Point(54) = {0.092804, 0.729815, 0, 1.0};
Point(55) = {0.097806, 0.729410, 0, 1.0};
Point(56) = {0.102147, 0.729032, 0, 1.0};
Point(57) = {0.105775, 0.728699, 0, 1.0};
Point(58) = {0.108645, 0.728425, 0, 1.0};
Point(59) = {0.110723, 0.728218, 0, 1.0};
Point(60) = {0.111979, 0.728092, 0, 1.0};
Point(61) = {0.112399, 0.728049, 0, 1.0};
Point(62) = {0.112444, 0.728234, 0, 1.0};
Point(63) = {-0.112489, -0.728418, 0, 1.0};
Point(64) = {-0.112094, -0.728572, 0, 1.0};
Point(65) = {-0.110916, -0.729032, 0, 1.0};
Point(66) = {-0.108963, -0.729780, 0, 1.0};
Point(67) = {-0.106254, -0.730795, 0, 1.0};
Point(68) = {-0.102810, -0.732047, 0, 1.0};
Point(69) = {-0.098667, -0.733495, 0, 1.0};
Point(70) = {-0.093858, -0.735100, 0, 1.0};
Point(71) = {-0.088433, -0.736814, 0, 1.0};
Point(72) = {-0.082443, -0.738590, 0, 1.0};
Point(73) = {-0.075948, -0.740379, 0, 1.0};
Point(74) = {-0.069016, -0.742136, 0, 1.0};
Point(75) = {-0.061719, -0.743813, 0, 1.0};
Point(76) = {-0.054133, -0.745367, 0, 1.0};
Point(77) = {-0.046343, -0.746760, 0, 1.0};
Point(78) = {-0.038431, -0.747955, 0, 1.0};
Point(79) = {-0.030493, -0.748925, 0, 1.0};
Point(80) = {-0.022599, -0.749641, 0, 1.0};
Point(81) = {-0.014684, -0.750000, 0, 1.0};
Point(82) = {-0.007012, -0.749925, 0, 1.0};
Point(83) = {0.000310, -0.749439, 0, 1.0};
Point(84) = {0.007186, -0.748581, 0, 1.0};
Point(85) = {0.013523, -0.747400, 0, 1.0};
Point(86) = {0.019239, -0.745962, 0, 1.0};
Point(87) = {0.024262, -0.744336, 0, 1.0};
Point(88) = {0.028534, -0.742595, 0, 1.0};
Point(89) = {0.032010, -0.740808, 0, 1.0};
Point(90) = {0.034657, -0.739042, 0, 1.0};
Point(91) = {0.036453, -0.737351, 0, 1.0};
Point(92) = {0.037390, -0.735776, 0, 1.0};
Point(93) = {0.037469, -0.734346, 0, 1.0};
Point(94) = {0.036717, -0.733126, 0, 1.0};
Point(95) = {0.035170, -0.732175, 0, 1.0};
Point(96) = {0.032857, -0.731483, 0, 1.0};
Point(97) = {0.029817, -0.731032, 0, 1.0};
Point(98) = {0.026093, -0.730797, 0, 1.0};
Point(99) = {0.021737, -0.730751, 0, 1.0};
Point(100) = {0.016797, -0.730855, 0, 1.0};
Point(101) = {0.011331, -0.731073, 0, 1.0};
Point(102) = {0.005395, -0.731355, 0, 1.0};
Point(103) = {-0.000959, -0.731656, 0, 1.0};
Point(104) = {-0.007672, -0.731929, 0, 1.0};
Point(105) = {-0.014685, -0.732123, 0, 1.0};
Point(106) = {-0.021941, -0.732197, 0, 1.0};
Point(107) = {-0.029542, -0.732169, 0, 1.0};
Point(108) = {-0.037257, -0.732113, 0, 1.0};
Point(109) = {-0.044989, -0.732011, 0, 1.0};
Point(110) = {-0.052659, -0.731851, 0, 1.0};
Point(111) = {-0.060183, -0.731630, 0, 1.0};
Point(112) = {-0.067480, -0.731348, 0, 1.0};
Point(113) = {-0.074467, -0.731012, 0, 1.0};
Point(114) = {-0.081066, -0.730635, 0, 1.0};
Point(115) = {-0.087204, -0.730228, 0, 1.0};
Point(116) = {-0.092804, -0.729815, 0, 1.0};
Point(117) = {-0.097806, -0.729410, 0, 1.0};
Point(118) = {-0.102147, -0.729032, 0, 1.0};
Point(119) = {-0.105775, -0.728699, 0, 1.0};
Point(120) = {-0.108645, -0.728425, 0, 1.0};
Point(121) = {-0.110723, -0.728218, 0, 1.0};
Point(122) = {-0.111979, -0.728092, 0, 1.0};
Point(123) = {-0.112399, -0.728049, 0, 1.0};
Point(124) = {-0.112444, -0.728234, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:103};
Spline(7) = {103:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112414, 0.728429, 0, 1.0};
Point(2) = {0.112020, 0.728583, 0, 1.0};
Point(3) = {0.110842, 0.729042, 0, 1.0};
Point(4) = {0.108890, 0.729790, 0, 1.0};
Point(5) = {0.106182, 0.730805, 0, 1.0};
Point(6) = {0.102740, 0.732056, 0, 1.0};
Point(7) = {0.098598, 0.733504, 0, 1.0};
Point(8) = {0.093792, 0.735107, 0, 1.0};
Point(9) = {0.088370, 0.736820, 0, 1.0};
Point(10) = {0.082384, 0.738595, 0, 1.0};
Point(11) = {0.075892, 0.740383, 0, 1.0};
Point(12) = {0.068963, 0.742140, 0, 1.0};
Point(13) = {0.061670, 0.743816, 0, 1.0};
Point(14) = {0.054088, 0.745370, 0, 1.0};
Point(15) = {0.046301, 0.746762, 0, 1.0};
Point(16) = {0.038393, 0.747956, 0, 1.0};
Point(17) = {0.030459, 0.748925, 0, 1.0};
Point(18) = {0.022569, 0.749641, 0, 1.0};
Point(19) = {0.014658, 0.750000, 0, 1.0};
Point(20) = {0.006990, 0.749925, 0, 1.0};
Point(21) = {-0.000329, 0.749439, 0, 1.0};
Point(22) = {-0.007202, 0.748581, 0, 1.0};
Point(23) = {-0.013535, 0.747402, 0, 1.0};
Point(24) = {-0.019248, 0.745964, 0, 1.0};
Point(25) = {-0.024268, 0.744339, 0, 1.0};
Point(26) = {-0.028539, 0.742598, 0, 1.0};
Point(27) = {-0.032013, 0.740813, 0, 1.0};
Point(28) = {-0.034658, 0.739048, 0, 1.0};
Point(29) = {-0.036453, 0.737357, 0, 1.0};
Point(30) = {-0.037390, 0.735783, 0, 1.0};
Point(31) = {-0.037469, 0.734353, 0, 1.0};
Point(32) = {-0.036717, 0.733134, 0, 1.0};
Point(33) = {-0.035171, 0.732184, 0, 1.0};
Point(34) = {-0.032859, 0.731492, 0, 1.0};
Point(35) = {-0.029820, 0.731041, 0, 1.0};
Point(36) = {-0.026099, 0.730807, 0, 1.0};
Point(37) = {-0.021745, 0.730760, 0, 1.0};
Point(38) = {-0.016808, 0.730865, 0, 1.0};
Point(39) = {-0.011345, 0.731082, 0, 1.0};
Point(40) = {-0.005411, 0.731364, 0, 1.0};
Point(41) = {0.000940, 0.731665, 0, 1.0};
Point(42) = {0.007649, 0.731938, 0, 1.0};
Point(43) = {0.014659, 0.732132, 0, 1.0};
Point(44) = {0.021911, 0.732206, 0, 1.0};
Point(45) = {0.029509, 0.732178, 0, 1.0};
Point(46) = {0.037220, 0.732122, 0, 1.0};
Point(47) = {0.044948, 0.732020, 0, 1.0};
Point(48) = {0.052614, 0.731860, 0, 1.0};
Point(49) = {0.060135, 0.731639, 0, 1.0};
Point(50) = {0.067428, 0.731357, 0, 1.0};
Point(51) = {0.074411, 0.731021, 0, 1.0};
Point(52) = {0.081007, 0.730644, 0, 1.0};
Point(53) = {0.087141, 0.730238, 0, 1.0};
Point(54) = {0.092739, 0.729825, 0, 1.0};
Point(55) = {0.097739, 0.729420, 0, 1.0};
Point(56) = {0.102077, 0.729042, 0, 1.0};
Point(57) = {0.105703, 0.728710, 0, 1.0};
Point(58) = {0.108572, 0.728435, 0, 1.0};
Point(59) = {0.110649, 0.728229, 0, 1.0};
Point(60) = {0.111904, 0.728103, 0, 1.0};
Point(61) = {0.112324, 0.728060, 0, 1.0};
Point(62) = {0.112369, 0.728244, 0, 1.0};
Point(63) = {-0.112414, -0.728429, 0, 1.0};
Point(64) = {-0.112020, -0.728583, 0, 1.0};
Point(65) = {-0.110842, -0.729042, 0, 1.0};
Point(66) = {-0.108890, -0.729790, 0, 1.0};
Point(67) = {-0.106182, -0.730805, 0, 1.0};
Point(68) = {-0.102740, -0.732056, 0, 1.0};
Point(69) = {-0.098598, -0.733504, 0, 1.0};
Point(70) = {-0.093792, -0.735107, 0, 1.0};
Point(71) = {-0.088370, -0.736820, 0, 1.0};
Point(72) = {-0.082384, -0.738595, 0, 1.0};
Point(73) = {-0.075892, -0.740383, 0, 1.0};
Point(74) = {-0.068963, -0.742140, 0, 1.0};
Point(75) = {-0.061670, -0.743816, 0, 1.0};
Point(76) = {-0.054088, -0.745370, 0, 1.0};
Point(77) = {-0.046301, -0.746762, 0, 1.0};
Point(78) = {-0.038393, -0.747956, 0, 1.0};
Point(79) = {-0.030459, -0.748925, 0, 1.0};
Point(80) = {-0.022569, -0.749641, 0, 1.0};
Point(81) = {-0.014658, -0.750000, 0, 1.0};
Point(82) = {-0.006990, -0.749925, 0, 1.0};
Point(83) = {0.000329, -0.749439, 0, 1.0};
Point(84) = {0.007202, -0.748581, 0, 1.0};
Point(85) = {0.013535, -0.747402, 0, 1.0};
Point(86) = {0.019248, -0.745964, 0, 1.0};
Point(87) = {0.024268, -0.744339, 0, 1.0};
Point(88) = {0.028539, -0.742598, 0, 1.0};
Point(89) = {0.032013, -0.740813, 0, 1.0};
Point(90) = {0.034658, -0.739048, 0, 1.0};
Point(91) = {0.036453, -0.737357, 0, 1.0};
Point(92) = {0.037390, -0.735783, 0, 1.0};
Point(93) = {0.037469, -0.734353, 0, 1.0};
Point(94) = {0.036717, -0.733134, 0, 1.0};
Point(95) = {0.035171, -0.732184, 0, 1.0};
Point(96) = {0.032859, -0.731492, 0, 1.0};
Point(97) = {0.029820, -0.731041, 0, 1.0};
Point(98) = {0.026099, -0.730807, 0, 1.0};
Point(99) = {0.021745, -0.730760, 0, 1.0};
Point(100) = {0.016808, -0.730865, 0, 1.0};
Point(101) = {0.011345, -0.731082, 0, 1.0};
Point(102) = {0.005411, -0.731364, 0, 1.0};
Point(103) = {-0.000940, -0.731665, 0, 1.0};
Point(104) = {-0.007649, -0.731938, 0, 1.0};
Point(105) = {-0.014659, -0.732132, 0, 1.0};
Point(106) = {-0.021911, -0.732206, 0, 1.0};
Point(107) = {-0.029509, -0.732178, 0, 1.0};
Point(108) = {-0.037220, -0.732122, 0, 1.0};
Point(109) = {-0.044948, -0.732020, 0, 1.0};
Point(110) = {-0.052614, -0.731860, 0, 1.0};
Point(111) = {-0.060135, -0.731639, 0, 1.0};
Point(112) = {-0.067428, -0.731357, 0, 1.0};
Point(113) = {-0.074411, -0.731021, 0, 1.0};
Point(114) = {-0.081007, -0.730644, 0, 1.0};
Point(115) = {-0.087141, -0.730238, 0, 1.0};
Point(116) = {-0.092739, -0.729825, 0, 1.0};
Point(117) = {-0.097739, -0.729420, 0, 1.0};
Point(118) = {-0.102077, -0.729042, 0, 1.0};
Point(119) = {-0.105703, -0.728710, 0, 1.0};
Point(120) = {-0.108572, -0.728435, 0, 1.0};
Point(121) = {-0.110649, -0.728229, 0, 1.0};
Point(122) = {-0.111904, -0.728103, 0, 1.0};
Point(123) = {-0.112324, -0.728060, 0, 1.0};
Point(124) = {-0.112369, -0.728244, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:103};
Spline(7) = {103:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
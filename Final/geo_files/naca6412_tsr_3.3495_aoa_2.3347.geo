SetFactory("OpenCASCADE");

Point(1) = {0.149894, 0.721231, 0, 1.0};
Point(2) = {0.149368, 0.721437, 0, 1.0};
Point(3) = {0.147798, 0.722049, 0, 1.0};
Point(4) = {0.145194, 0.723046, 0, 1.0};
Point(5) = {0.141582, 0.724400, 0, 1.0};
Point(6) = {0.136992, 0.726069, 0, 1.0};
Point(7) = {0.131468, 0.727999, 0, 1.0};
Point(8) = {0.125058, 0.730138, 0, 1.0};
Point(9) = {0.117827, 0.732423, 0, 1.0};
Point(10) = {0.109843, 0.734790, 0, 1.0};
Point(11) = {0.101185, 0.737175, 0, 1.0};
Point(12) = {0.091945, 0.739517, 0, 1.0};
Point(13) = {0.082218, 0.741753, 0, 1.0};
Point(14) = {0.072106, 0.743825, 0, 1.0};
Point(15) = {0.061721, 0.745681, 0, 1.0};
Point(16) = {0.051175, 0.747274, 0, 1.0};
Point(17) = {0.040593, 0.748566, 0, 1.0};
Point(18) = {0.030071, 0.749522, 0, 1.0};
Point(19) = {0.019520, 0.750000, 0, 1.0};
Point(20) = {0.009293, 0.749901, 0, 1.0};
Point(21) = {-0.000467, 0.749252, 0, 1.0};
Point(22) = {-0.009634, 0.748108, 0, 1.0};
Point(23) = {-0.018081, 0.746535, 0, 1.0};
Point(24) = {-0.025699, 0.744618, 0, 1.0};
Point(25) = {-0.032395, 0.742451, 0, 1.0};
Point(26) = {-0.038090, 0.740129, 0, 1.0};
Point(27) = {-0.042723, 0.737747, 0, 1.0};
Point(28) = {-0.046252, 0.735393, 0, 1.0};
Point(29) = {-0.048646, 0.733139, 0, 1.0};
Point(30) = {-0.049894, 0.731040, 0, 1.0};
Point(31) = {-0.050000, 0.729133, 0, 1.0};
Point(32) = {-0.048997, 0.727506, 0, 1.0};
Point(33) = {-0.046935, 0.726239, 0, 1.0};
Point(34) = {-0.043852, 0.725317, 0, 1.0};
Point(35) = {-0.039799, 0.724715, 0, 1.0};
Point(36) = {-0.034836, 0.724403, 0, 1.0};
Point(37) = {-0.029030, 0.724340, 0, 1.0};
Point(38) = {-0.022445, 0.724480, 0, 1.0};
Point(39) = {-0.015159, 0.724770, 0, 1.0};
Point(40) = {-0.007245, 0.725146, 0, 1.0};
Point(41) = {0.001224, 0.725547, 0, 1.0};
Point(42) = {0.010173, 0.725911, 0, 1.0};
Point(43) = {0.019521, 0.726170, 0, 1.0};
Point(44) = {0.029193, 0.726268, 0, 1.0};
Point(45) = {0.039326, 0.726231, 0, 1.0};
Point(46) = {0.049609, 0.726156, 0, 1.0};
Point(47) = {0.059916, 0.726020, 0, 1.0};
Point(48) = {0.070140, 0.725808, 0, 1.0};
Point(49) = {0.080171, 0.725513, 0, 1.0};
Point(50) = {0.089897, 0.725136, 0, 1.0};
Point(51) = {0.099211, 0.724689, 0, 1.0};
Point(52) = {0.108008, 0.724186, 0, 1.0};
Point(53) = {0.116188, 0.723644, 0, 1.0};
Point(54) = {0.123654, 0.723094, 0, 1.0};
Point(55) = {0.130322, 0.722554, 0, 1.0};
Point(56) = {0.136108, 0.722049, 0, 1.0};
Point(57) = {0.140944, 0.721606, 0, 1.0};
Point(58) = {0.144770, 0.721240, 0, 1.0};
Point(59) = {0.147539, 0.720965, 0, 1.0};
Point(60) = {0.149214, 0.720797, 0, 1.0};
Point(61) = {0.149774, 0.720740, 0, 1.0};
Point(62) = {0.149834, 0.720985, 0, 1.0};
Point(63) = {-0.149894, -0.721231, 0, 1.0};
Point(64) = {-0.149368, -0.721437, 0, 1.0};
Point(65) = {-0.147798, -0.722049, 0, 1.0};
Point(66) = {-0.145194, -0.723046, 0, 1.0};
Point(67) = {-0.141582, -0.724400, 0, 1.0};
Point(68) = {-0.136992, -0.726069, 0, 1.0};
Point(69) = {-0.131468, -0.727999, 0, 1.0};
Point(70) = {-0.125058, -0.730138, 0, 1.0};
Point(71) = {-0.117827, -0.732423, 0, 1.0};
Point(72) = {-0.109843, -0.734790, 0, 1.0};
Point(73) = {-0.101185, -0.737175, 0, 1.0};
Point(74) = {-0.091945, -0.739517, 0, 1.0};
Point(75) = {-0.082218, -0.741753, 0, 1.0};
Point(76) = {-0.072106, -0.743825, 0, 1.0};
Point(77) = {-0.061721, -0.745681, 0, 1.0};
Point(78) = {-0.051175, -0.747274, 0, 1.0};
Point(79) = {-0.040593, -0.748566, 0, 1.0};
Point(80) = {-0.030071, -0.749522, 0, 1.0};
Point(81) = {-0.019520, -0.750000, 0, 1.0};
Point(82) = {-0.009293, -0.749901, 0, 1.0};
Point(83) = {0.000467, -0.749252, 0, 1.0};
Point(84) = {0.009634, -0.748108, 0, 1.0};
Point(85) = {0.018081, -0.746535, 0, 1.0};
Point(86) = {0.025699, -0.744618, 0, 1.0};
Point(87) = {0.032395, -0.742451, 0, 1.0};
Point(88) = {0.038090, -0.740129, 0, 1.0};
Point(89) = {0.042723, -0.737747, 0, 1.0};
Point(90) = {0.046252, -0.735393, 0, 1.0};
Point(91) = {0.048646, -0.733139, 0, 1.0};
Point(92) = {0.049894, -0.731040, 0, 1.0};
Point(93) = {0.050000, -0.729133, 0, 1.0};
Point(94) = {0.048997, -0.727506, 0, 1.0};
Point(95) = {0.046935, -0.726239, 0, 1.0};
Point(96) = {0.043852, -0.725317, 0, 1.0};
Point(97) = {0.039799, -0.724715, 0, 1.0};
Point(98) = {0.034836, -0.724403, 0, 1.0};
Point(99) = {0.029030, -0.724340, 0, 1.0};
Point(100) = {0.022445, -0.724480, 0, 1.0};
Point(101) = {0.015159, -0.724770, 0, 1.0};
Point(102) = {0.007245, -0.725146, 0, 1.0};
Point(103) = {-0.001224, -0.725547, 0, 1.0};
Point(104) = {-0.010173, -0.725911, 0, 1.0};
Point(105) = {-0.019521, -0.726170, 0, 1.0};
Point(106) = {-0.029193, -0.726268, 0, 1.0};
Point(107) = {-0.039326, -0.726231, 0, 1.0};
Point(108) = {-0.049609, -0.726156, 0, 1.0};
Point(109) = {-0.059916, -0.726020, 0, 1.0};
Point(110) = {-0.070140, -0.725808, 0, 1.0};
Point(111) = {-0.080171, -0.725513, 0, 1.0};
Point(112) = {-0.089897, -0.725136, 0, 1.0};
Point(113) = {-0.099211, -0.724689, 0, 1.0};
Point(114) = {-0.108008, -0.724186, 0, 1.0};
Point(115) = {-0.116188, -0.723644, 0, 1.0};
Point(116) = {-0.123654, -0.723094, 0, 1.0};
Point(117) = {-0.130322, -0.722554, 0, 1.0};
Point(118) = {-0.136108, -0.722049, 0, 1.0};
Point(119) = {-0.140944, -0.721606, 0, 1.0};
Point(120) = {-0.144770, -0.721240, 0, 1.0};
Point(121) = {-0.147539, -0.720965, 0, 1.0};
Point(122) = {-0.149214, -0.720797, 0, 1.0};
Point(123) = {-0.149774, -0.720740, 0, 1.0};
Point(124) = {-0.149834, -0.720985, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:103};
Spline(7) = {103:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
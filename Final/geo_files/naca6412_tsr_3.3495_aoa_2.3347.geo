SetFactory("OpenCASCADE");

Point(1) = {0.074947, 0.735616, 0, 1.0};
Point(2) = {0.074684, 0.735718, 0, 1.0};
Point(3) = {0.073899, 0.736025, 0, 1.0};
Point(4) = {0.072597, 0.736523, 0, 1.0};
Point(5) = {0.070791, 0.737200, 0, 1.0};
Point(6) = {0.068496, 0.738034, 0, 1.0};
Point(7) = {0.065734, 0.739000, 0, 1.0};
Point(8) = {0.062529, 0.740069, 0, 1.0};
Point(9) = {0.058914, 0.741211, 0, 1.0};
Point(10) = {0.054922, 0.742395, 0, 1.0};
Point(11) = {0.050593, 0.743587, 0, 1.0};
Point(12) = {0.045972, 0.744758, 0, 1.0};
Point(13) = {0.041109, 0.745877, 0, 1.0};
Point(14) = {0.036053, 0.746912, 0, 1.0};
Point(15) = {0.030860, 0.747841, 0, 1.0};
Point(16) = {0.025588, 0.748637, 0, 1.0};
Point(17) = {0.020296, 0.749283, 0, 1.0};
Point(18) = {0.015036, 0.749761, 0, 1.0};
Point(19) = {0.009760, 0.750000, 0, 1.0};
Point(20) = {0.004647, 0.749950, 0, 1.0};
Point(21) = {-0.000234, 0.749626, 0, 1.0};
Point(22) = {-0.004817, 0.749054, 0, 1.0};
Point(23) = {-0.009040, 0.748267, 0, 1.0};
Point(24) = {-0.012850, 0.747309, 0, 1.0};
Point(25) = {-0.016197, 0.746225, 0, 1.0};
Point(26) = {-0.019045, 0.745064, 0, 1.0};
Point(27) = {-0.021362, 0.743874, 0, 1.0};
Point(28) = {-0.023126, 0.742697, 0, 1.0};
Point(29) = {-0.024323, 0.741569, 0, 1.0};
Point(30) = {-0.024947, 0.740520, 0, 1.0};
Point(31) = {-0.025000, 0.739566, 0, 1.0};
Point(32) = {-0.024499, 0.738753, 0, 1.0};
Point(33) = {-0.023468, 0.738120, 0, 1.0};
Point(34) = {-0.021926, 0.737659, 0, 1.0};
Point(35) = {-0.019900, 0.737358, 0, 1.0};
Point(36) = {-0.017418, 0.737202, 0, 1.0};
Point(37) = {-0.014515, 0.737170, 0, 1.0};
Point(38) = {-0.011222, 0.737240, 0, 1.0};
Point(39) = {-0.007579, 0.737385, 0, 1.0};
Point(40) = {-0.003622, 0.737573, 0, 1.0};
Point(41) = {0.000612, 0.737773, 0, 1.0};
Point(42) = {0.005086, 0.737955, 0, 1.0};
Point(43) = {0.009761, 0.738085, 0, 1.0};
Point(44) = {0.014597, 0.738134, 0, 1.0};
Point(45) = {0.019663, 0.738116, 0, 1.0};
Point(46) = {0.024805, 0.738078, 0, 1.0};
Point(47) = {0.029958, 0.738010, 0, 1.0};
Point(48) = {0.035070, 0.737904, 0, 1.0};
Point(49) = {0.040085, 0.737756, 0, 1.0};
Point(50) = {0.044949, 0.737568, 0, 1.0};
Point(51) = {0.049605, 0.737344, 0, 1.0};
Point(52) = {0.054004, 0.737093, 0, 1.0};
Point(53) = {0.058094, 0.736822, 0, 1.0};
Point(54) = {0.061827, 0.736547, 0, 1.0};
Point(55) = {0.065161, 0.736277, 0, 1.0};
Point(56) = {0.068054, 0.736025, 0, 1.0};
Point(57) = {0.070472, 0.735803, 0, 1.0};
Point(58) = {0.072385, 0.735620, 0, 1.0};
Point(59) = {0.073770, 0.735482, 0, 1.0};
Point(60) = {0.074607, 0.735398, 0, 1.0};
Point(61) = {0.074887, 0.735370, 0, 1.0};
Point(62) = {0.074917, 0.735493, 0, 1.0};
Point(63) = {-0.074947, -0.735616, 0, 1.0};
Point(64) = {-0.074684, -0.735718, 0, 1.0};
Point(65) = {-0.073899, -0.736025, 0, 1.0};
Point(66) = {-0.072597, -0.736523, 0, 1.0};
Point(67) = {-0.070791, -0.737200, 0, 1.0};
Point(68) = {-0.068496, -0.738034, 0, 1.0};
Point(69) = {-0.065734, -0.739000, 0, 1.0};
Point(70) = {-0.062529, -0.740069, 0, 1.0};
Point(71) = {-0.058914, -0.741211, 0, 1.0};
Point(72) = {-0.054922, -0.742395, 0, 1.0};
Point(73) = {-0.050593, -0.743587, 0, 1.0};
Point(74) = {-0.045972, -0.744758, 0, 1.0};
Point(75) = {-0.041109, -0.745877, 0, 1.0};
Point(76) = {-0.036053, -0.746912, 0, 1.0};
Point(77) = {-0.030860, -0.747841, 0, 1.0};
Point(78) = {-0.025588, -0.748637, 0, 1.0};
Point(79) = {-0.020296, -0.749283, 0, 1.0};
Point(80) = {-0.015036, -0.749761, 0, 1.0};
Point(81) = {-0.009760, -0.750000, 0, 1.0};
Point(82) = {-0.004647, -0.749950, 0, 1.0};
Point(83) = {0.000234, -0.749626, 0, 1.0};
Point(84) = {0.004817, -0.749054, 0, 1.0};
Point(85) = {0.009040, -0.748267, 0, 1.0};
Point(86) = {0.012850, -0.747309, 0, 1.0};
Point(87) = {0.016197, -0.746225, 0, 1.0};
Point(88) = {0.019045, -0.745064, 0, 1.0};
Point(89) = {0.021362, -0.743874, 0, 1.0};
Point(90) = {0.023126, -0.742697, 0, 1.0};
Point(91) = {0.024323, -0.741569, 0, 1.0};
Point(92) = {0.024947, -0.740520, 0, 1.0};
Point(93) = {0.025000, -0.739566, 0, 1.0};
Point(94) = {0.024499, -0.738753, 0, 1.0};
Point(95) = {0.023468, -0.738120, 0, 1.0};
Point(96) = {0.021926, -0.737659, 0, 1.0};
Point(97) = {0.019900, -0.737358, 0, 1.0};
Point(98) = {0.017418, -0.737202, 0, 1.0};
Point(99) = {0.014515, -0.737170, 0, 1.0};
Point(100) = {0.011222, -0.737240, 0, 1.0};
Point(101) = {0.007579, -0.737385, 0, 1.0};
Point(102) = {0.003622, -0.737573, 0, 1.0};
Point(103) = {-0.000612, -0.737773, 0, 1.0};
Point(104) = {-0.005086, -0.737955, 0, 1.0};
Point(105) = {-0.009761, -0.738085, 0, 1.0};
Point(106) = {-0.014597, -0.738134, 0, 1.0};
Point(107) = {-0.019663, -0.738116, 0, 1.0};
Point(108) = {-0.024805, -0.738078, 0, 1.0};
Point(109) = {-0.029958, -0.738010, 0, 1.0};
Point(110) = {-0.035070, -0.737904, 0, 1.0};
Point(111) = {-0.040085, -0.737756, 0, 1.0};
Point(112) = {-0.044949, -0.737568, 0, 1.0};
Point(113) = {-0.049605, -0.737344, 0, 1.0};
Point(114) = {-0.054004, -0.737093, 0, 1.0};
Point(115) = {-0.058094, -0.736822, 0, 1.0};
Point(116) = {-0.061827, -0.736547, 0, 1.0};
Point(117) = {-0.065161, -0.736277, 0, 1.0};
Point(118) = {-0.068054, -0.736025, 0, 1.0};
Point(119) = {-0.070472, -0.735803, 0, 1.0};
Point(120) = {-0.072385, -0.735620, 0, 1.0};
Point(121) = {-0.073770, -0.735482, 0, 1.0};
Point(122) = {-0.074607, -0.735398, 0, 1.0};
Point(123) = {-0.074887, -0.735370, 0, 1.0};
Point(124) = {-0.074917, -0.735493, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:82};
Spline(6) = {82:103};
Spline(7) = {103:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
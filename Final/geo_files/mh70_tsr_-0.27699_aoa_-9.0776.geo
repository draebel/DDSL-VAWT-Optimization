SetFactory("OpenCASCADE");

Point(1) = {0.073823, 0.749677, 0, 1.0};
Point(2) = {0.071663, 0.749651, 0, 1.0};
Point(3) = {0.066452, 0.749630, 0, 1.0};
Point(4) = {0.060537, 0.749662, 0, 1.0};
Point(5) = {0.054024, 0.749737, 0, 1.0};
Point(6) = {0.047019, 0.749836, 0, 1.0};
Point(7) = {0.039630, 0.749935, 0, 1.0};
Point(8) = {0.031964, 0.750000, 0, 1.0};
Point(9) = {0.024118, 0.749987, 0, 1.0};
Point(10) = {0.016172, 0.749856, 0, 1.0};
Point(11) = {0.008200, 0.749572, 0, 1.0};
Point(12) = {0.000260, 0.749115, 0, 1.0};
Point(13) = {-0.007584, 0.748487, 0, 1.0};
Point(14) = {-0.015255, 0.747689, 0, 1.0};
Point(15) = {-0.022683, 0.746721, 0, 1.0};
Point(16) = {-0.029801, 0.745585, 0, 1.0};
Point(17) = {-0.036547, 0.744293, 0, 1.0};
Point(18) = {-0.042859, 0.742855, 0, 1.0};
Point(19) = {-0.048684, 0.741285, 0, 1.0};
Point(20) = {-0.053969, 0.739597, 0, 1.0};
Point(21) = {-0.058675, 0.737807, 0, 1.0};
Point(22) = {-0.062773, 0.735934, 0, 1.0};
Point(23) = {-0.066243, 0.734003, 0, 1.0};
Point(24) = {-0.069079, 0.732046, 0, 1.0};
Point(25) = {-0.071281, 0.730111, 0, 1.0};
Point(26) = {-0.072849, 0.728255, 0, 1.0};
Point(27) = {-0.073790, 0.726545, 0, 1.0};
Point(28) = {-0.074105, 0.725267, 0, 1.0};
Point(29) = {-0.074109, 0.724874, 0, 1.0};
Point(30) = {-0.074061, 0.724522, 0, 1.0};
Point(31) = {-0.073997, 0.724316, 0, 1.0};
Point(32) = {-0.073903, 0.724143, 0, 1.0};
Point(33) = {-0.073760, 0.723996, 0, 1.0};
Point(34) = {-0.073567, 0.723861, 0, 1.0};
Point(35) = {-0.073200, 0.723675, 0, 1.0};
Point(36) = {-0.072751, 0.723507, 0, 1.0};
Point(37) = {-0.072504, 0.723432, 0, 1.0};
Point(38) = {-0.070301, 0.723028, 0, 1.0};
Point(39) = {-0.067277, 0.722840, 0, 1.0};
Point(40) = {-0.063485, 0.722883, 0, 1.0};
Point(41) = {-0.058963, 0.723169, 0, 1.0};
Point(42) = {-0.053751, 0.723701, 0, 1.0};
Point(43) = {-0.047891, 0.724476, 0, 1.0};
Point(44) = {-0.041428, 0.725477, 0, 1.0};
Point(45) = {-0.034419, 0.726680, 0, 1.0};
Point(46) = {-0.026935, 0.728055, 0, 1.0};
Point(47) = {-0.019054, 0.729573, 0, 1.0};
Point(48) = {-0.010858, 0.731200, 0, 1.0};
Point(49) = {-0.002440, 0.732900, 0, 1.0};
Point(50) = {0.006100, 0.734637, 0, 1.0};
Point(51) = {0.014658, 0.736380, 0, 1.0};
Point(52) = {0.023126, 0.738100, 0, 1.0};
Point(53) = {0.031399, 0.739778, 0, 1.0};
Point(54) = {0.039379, 0.741391, 0, 1.0};
Point(55) = {0.046973, 0.742918, 0, 1.0};
Point(56) = {0.054085, 0.744336, 0, 1.0};
Point(57) = {0.060630, 0.745629, 0, 1.0};
Point(58) = {0.066525, 0.746777, 0, 1.0};
Point(59) = {0.071694, 0.747765, 0, 1.0};
Point(60) = {0.074058, 0.748205, 0, 1.0};
Point(61) = {-0.073823, -0.749677, 0, 1.0};
Point(62) = {-0.071663, -0.749651, 0, 1.0};
Point(63) = {-0.066452, -0.749630, 0, 1.0};
Point(64) = {-0.060537, -0.749662, 0, 1.0};
Point(65) = {-0.054024, -0.749737, 0, 1.0};
Point(66) = {-0.047019, -0.749836, 0, 1.0};
Point(67) = {-0.039630, -0.749935, 0, 1.0};
Point(68) = {-0.031964, -0.750000, 0, 1.0};
Point(69) = {-0.024118, -0.749987, 0, 1.0};
Point(70) = {-0.016172, -0.749856, 0, 1.0};
Point(71) = {-0.008200, -0.749572, 0, 1.0};
Point(72) = {-0.000260, -0.749115, 0, 1.0};
Point(73) = {0.007584, -0.748487, 0, 1.0};
Point(74) = {0.015255, -0.747689, 0, 1.0};
Point(75) = {0.022683, -0.746721, 0, 1.0};
Point(76) = {0.029801, -0.745585, 0, 1.0};
Point(77) = {0.036547, -0.744293, 0, 1.0};
Point(78) = {0.042859, -0.742855, 0, 1.0};
Point(79) = {0.048684, -0.741285, 0, 1.0};
Point(80) = {0.053969, -0.739597, 0, 1.0};
Point(81) = {0.058675, -0.737807, 0, 1.0};
Point(82) = {0.062773, -0.735934, 0, 1.0};
Point(83) = {0.066243, -0.734003, 0, 1.0};
Point(84) = {0.069079, -0.732046, 0, 1.0};
Point(85) = {0.071281, -0.730111, 0, 1.0};
Point(86) = {0.072849, -0.728255, 0, 1.0};
Point(87) = {0.073790, -0.726545, 0, 1.0};
Point(88) = {0.074105, -0.725267, 0, 1.0};
Point(89) = {0.074109, -0.724874, 0, 1.0};
Point(90) = {0.074061, -0.724522, 0, 1.0};
Point(91) = {0.073997, -0.724316, 0, 1.0};
Point(92) = {0.073903, -0.724143, 0, 1.0};
Point(93) = {0.073760, -0.723996, 0, 1.0};
Point(94) = {0.073567, -0.723861, 0, 1.0};
Point(95) = {0.073200, -0.723675, 0, 1.0};
Point(96) = {0.072751, -0.723507, 0, 1.0};
Point(97) = {0.072504, -0.723432, 0, 1.0};
Point(98) = {0.070301, -0.723028, 0, 1.0};
Point(99) = {0.067277, -0.722840, 0, 1.0};
Point(100) = {0.063485, -0.722883, 0, 1.0};
Point(101) = {0.058963, -0.723169, 0, 1.0};
Point(102) = {0.053751, -0.723701, 0, 1.0};
Point(103) = {0.047891, -0.724476, 0, 1.0};
Point(104) = {0.041428, -0.725477, 0, 1.0};
Point(105) = {0.034419, -0.726680, 0, 1.0};
Point(106) = {0.026935, -0.728055, 0, 1.0};
Point(107) = {0.019054, -0.729573, 0, 1.0};
Point(108) = {0.010858, -0.731200, 0, 1.0};
Point(109) = {0.002440, -0.732900, 0, 1.0};
Point(110) = {-0.006100, -0.734637, 0, 1.0};
Point(111) = {-0.014658, -0.736380, 0, 1.0};
Point(112) = {-0.023126, -0.738100, 0, 1.0};
Point(113) = {-0.031399, -0.739778, 0, 1.0};
Point(114) = {-0.039379, -0.741391, 0, 1.0};
Point(115) = {-0.046973, -0.742918, 0, 1.0};
Point(116) = {-0.054085, -0.744336, 0, 1.0};
Point(117) = {-0.060630, -0.745629, 0, 1.0};
Point(118) = {-0.066525, -0.746777, 0, 1.0};
Point(119) = {-0.071694, -0.747765, 0, 1.0};
Point(120) = {-0.074058, -0.748205, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:45};
Spline(3) = {45:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:105};
Spline(7) = {105:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {36.00000000, 15.00000000, 0, 1.0};
Point(124) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149014, 0.741128, 0, 1.0};
Point(2) = {0.143924, 0.741781, 0, 1.0};
Point(3) = {0.138827, 0.742503, 0, 1.0};
Point(4) = {0.133731, 0.743223, 0, 1.0};
Point(5) = {0.128639, 0.743895, 0, 1.0};
Point(6) = {0.123547, 0.744572, 0, 1.0};
Point(7) = {0.118457, 0.745228, 0, 1.0};
Point(8) = {0.113367, 0.745874, 0, 1.0};
Point(9) = {0.108281, 0.746495, 0, 1.0};
Point(10) = {0.098120, 0.747609, 0, 1.0};
Point(11) = {0.087977, 0.748545, 0, 1.0};
Point(12) = {0.077856, 0.749269, 0, 1.0};
Point(13) = {0.067756, 0.749774, 0, 1.0};
Point(14) = {0.057684, 0.750000, 0, 1.0};
Point(15) = {0.047642, 0.749920, 0, 1.0};
Point(16) = {0.037632, 0.749523, 0, 1.0};
Point(17) = {0.027652, 0.748828, 0, 1.0};
Point(18) = {0.022672, 0.748374, 0, 1.0};
Point(19) = {0.017700, 0.747848, 0, 1.0};
Point(20) = {0.012735, 0.747244, 0, 1.0};
Point(21) = {0.007781, 0.746538, 0, 1.0};
Point(22) = {0.002836, 0.745739, 0, 1.0};
Point(23) = {-0.002102, 0.744867, 0, 1.0};
Point(24) = {-0.007034, 0.743931, 0, 1.0};
Point(25) = {-0.011956, 0.742902, 0, 1.0};
Point(26) = {-0.016864, 0.741738, 0, 1.0};
Point(27) = {-0.021754, 0.740378, 0, 1.0};
Point(28) = {-0.026618, 0.738772, 0, 1.0};
Point(29) = {-0.031455, 0.736883, 0, 1.0};
Point(30) = {-0.036257, 0.734647, 0, 1.0};
Point(31) = {-0.041010, 0.731924, 0, 1.0};
Point(32) = {-0.043361, 0.730301, 0, 1.0};
Point(33) = {-0.045682, 0.728384, 0, 1.0};
Point(34) = {-0.046826, 0.727263, 0, 1.0};
Point(35) = {-0.047954, 0.725972, 0, 1.0};
Point(36) = {-0.048619, 0.725078, 0, 1.0};
Point(37) = {-0.049266, 0.724013, 0, 1.0};
Point(38) = {-0.049675, 0.723071, 0, 1.0};
Point(39) = {-0.050000, 0.721292, 0, 1.0};
Point(40) = {-0.049406, 0.720377, 0, 1.0};
Point(41) = {-0.048867, 0.720004, 0, 1.0};
Point(42) = {-0.048070, 0.719571, 0, 1.0};
Point(43) = {-0.047283, 0.719238, 0, 1.0};
Point(44) = {-0.045986, 0.718830, 0, 1.0};
Point(45) = {-0.044704, 0.718576, 0, 1.0};
Point(46) = {-0.042160, 0.718251, 0, 1.0};
Point(47) = {-0.039631, 0.718085, 0, 1.0};
Point(48) = {-0.034595, 0.717974, 0, 1.0};
Point(49) = {-0.029576, 0.718032, 0, 1.0};
Point(50) = {-0.024566, 0.718186, 0, 1.0};
Point(51) = {-0.019565, 0.718415, 0, 1.0};
Point(52) = {-0.014570, 0.718718, 0, 1.0};
Point(53) = {-0.009581, 0.719078, 0, 1.0};
Point(54) = {-0.004597, 0.719483, 0, 1.0};
Point(55) = {0.000384, 0.719921, 0, 1.0};
Point(56) = {0.005363, 0.720383, 0, 1.0};
Point(57) = {0.010339, 0.720873, 0, 1.0};
Point(58) = {0.015311, 0.721400, 0, 1.0};
Point(59) = {0.020279, 0.721976, 0, 1.0};
Point(60) = {0.025240, 0.722611, 0, 1.0};
Point(61) = {0.030197, 0.723292, 0, 1.0};
Point(62) = {0.040099, 0.724774, 0, 1.0};
Point(63) = {0.049985, 0.726416, 0, 1.0};
Point(64) = {0.059856, 0.728208, 0, 1.0};
Point(65) = {0.069715, 0.730117, 0, 1.0};
Point(66) = {0.079568, 0.732086, 0, 1.0};
Point(67) = {0.089425, 0.734019, 0, 1.0};
Point(68) = {0.099292, 0.735855, 0, 1.0};
Point(69) = {0.109177, 0.737505, 0, 1.0};
Point(70) = {0.114130, 0.738226, 0, 1.0};
Point(71) = {0.119090, 0.738871, 0, 1.0};
Point(72) = {0.124061, 0.739413, 0, 1.0};
Point(73) = {0.129039, 0.739887, 0, 1.0};
Point(74) = {0.134027, 0.740256, 0, 1.0};
Point(75) = {0.139014, 0.740628, 0, 1.0};
Point(76) = {0.144010, 0.740917, 0, 1.0};
Point(77) = {-0.149014, -0.741128, 0, 1.0};
Point(78) = {-0.143924, -0.741781, 0, 1.0};
Point(79) = {-0.138827, -0.742503, 0, 1.0};
Point(80) = {-0.133731, -0.743223, 0, 1.0};
Point(81) = {-0.128639, -0.743895, 0, 1.0};
Point(82) = {-0.123547, -0.744572, 0, 1.0};
Point(83) = {-0.118457, -0.745228, 0, 1.0};
Point(84) = {-0.113367, -0.745874, 0, 1.0};
Point(85) = {-0.108281, -0.746495, 0, 1.0};
Point(86) = {-0.098120, -0.747609, 0, 1.0};
Point(87) = {-0.087977, -0.748545, 0, 1.0};
Point(88) = {-0.077856, -0.749269, 0, 1.0};
Point(89) = {-0.067756, -0.749774, 0, 1.0};
Point(90) = {-0.057684, -0.750000, 0, 1.0};
Point(91) = {-0.047642, -0.749920, 0, 1.0};
Point(92) = {-0.037632, -0.749523, 0, 1.0};
Point(93) = {-0.027652, -0.748828, 0, 1.0};
Point(94) = {-0.022672, -0.748374, 0, 1.0};
Point(95) = {-0.017700, -0.747848, 0, 1.0};
Point(96) = {-0.012735, -0.747244, 0, 1.0};
Point(97) = {-0.007781, -0.746538, 0, 1.0};
Point(98) = {-0.002836, -0.745739, 0, 1.0};
Point(99) = {0.002102, -0.744867, 0, 1.0};
Point(100) = {0.007034, -0.743931, 0, 1.0};
Point(101) = {0.011956, -0.742902, 0, 1.0};
Point(102) = {0.016864, -0.741738, 0, 1.0};
Point(103) = {0.021754, -0.740378, 0, 1.0};
Point(104) = {0.026618, -0.738772, 0, 1.0};
Point(105) = {0.031455, -0.736883, 0, 1.0};
Point(106) = {0.036257, -0.734647, 0, 1.0};
Point(107) = {0.041010, -0.731924, 0, 1.0};
Point(108) = {0.043361, -0.730301, 0, 1.0};
Point(109) = {0.045682, -0.728384, 0, 1.0};
Point(110) = {0.046826, -0.727263, 0, 1.0};
Point(111) = {0.047954, -0.725972, 0, 1.0};
Point(112) = {0.048619, -0.725078, 0, 1.0};
Point(113) = {0.049266, -0.724013, 0, 1.0};
Point(114) = {0.049675, -0.723071, 0, 1.0};
Point(115) = {0.050000, -0.721292, 0, 1.0};
Point(116) = {0.049406, -0.720377, 0, 1.0};
Point(117) = {0.048867, -0.720004, 0, 1.0};
Point(118) = {0.048070, -0.719571, 0, 1.0};
Point(119) = {0.047283, -0.719238, 0, 1.0};
Point(120) = {0.045986, -0.718830, 0, 1.0};
Point(121) = {0.044704, -0.718576, 0, 1.0};
Point(122) = {0.042160, -0.718251, 0, 1.0};
Point(123) = {0.039631, -0.718085, 0, 1.0};
Point(124) = {0.034595, -0.717974, 0, 1.0};
Point(125) = {0.029576, -0.718032, 0, 1.0};
Point(126) = {0.024566, -0.718186, 0, 1.0};
Point(127) = {0.019565, -0.718415, 0, 1.0};
Point(128) = {0.014570, -0.718718, 0, 1.0};
Point(129) = {0.009581, -0.719078, 0, 1.0};
Point(130) = {0.004597, -0.719483, 0, 1.0};
Point(131) = {-0.000384, -0.719921, 0, 1.0};
Point(132) = {-0.005363, -0.720383, 0, 1.0};
Point(133) = {-0.010339, -0.720873, 0, 1.0};
Point(134) = {-0.015311, -0.721400, 0, 1.0};
Point(135) = {-0.020279, -0.721976, 0, 1.0};
Point(136) = {-0.025240, -0.722611, 0, 1.0};
Point(137) = {-0.030197, -0.723292, 0, 1.0};
Point(138) = {-0.040099, -0.724774, 0, 1.0};
Point(139) = {-0.049985, -0.726416, 0, 1.0};
Point(140) = {-0.059856, -0.728208, 0, 1.0};
Point(141) = {-0.069715, -0.730117, 0, 1.0};
Point(142) = {-0.079568, -0.732086, 0, 1.0};
Point(143) = {-0.089425, -0.734019, 0, 1.0};
Point(144) = {-0.099292, -0.735855, 0, 1.0};
Point(145) = {-0.109177, -0.737505, 0, 1.0};
Point(146) = {-0.114130, -0.738226, 0, 1.0};
Point(147) = {-0.119090, -0.738871, 0, 1.0};
Point(148) = {-0.124061, -0.739413, 0, 1.0};
Point(149) = {-0.129039, -0.739887, 0, 1.0};
Point(150) = {-0.134027, -0.740256, 0, 1.0};
Point(151) = {-0.139014, -0.740628, 0, 1.0};
Point(152) = {-0.144010, -0.740917, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
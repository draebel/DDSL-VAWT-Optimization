SetFactory("OpenCASCADE");

Point(1) = {0.074507, 0.745564, 0, 1.0};
Point(2) = {0.071962, 0.745890, 0, 1.0};
Point(3) = {0.069414, 0.746251, 0, 1.0};
Point(4) = {0.066865, 0.746611, 0, 1.0};
Point(5) = {0.064320, 0.746948, 0, 1.0};
Point(6) = {0.061773, 0.747286, 0, 1.0};
Point(7) = {0.059228, 0.747614, 0, 1.0};
Point(8) = {0.056684, 0.747937, 0, 1.0};
Point(9) = {0.054140, 0.748247, 0, 1.0};
Point(10) = {0.049060, 0.748804, 0, 1.0};
Point(11) = {0.043989, 0.749273, 0, 1.0};
Point(12) = {0.038928, 0.749635, 0, 1.0};
Point(13) = {0.033878, 0.749887, 0, 1.0};
Point(14) = {0.028842, 0.750000, 0, 1.0};
Point(15) = {0.023821, 0.749960, 0, 1.0};
Point(16) = {0.018816, 0.749761, 0, 1.0};
Point(17) = {0.013826, 0.749414, 0, 1.0};
Point(18) = {0.011336, 0.749187, 0, 1.0};
Point(19) = {0.008850, 0.748924, 0, 1.0};
Point(20) = {0.006368, 0.748622, 0, 1.0};
Point(21) = {0.003891, 0.748269, 0, 1.0};
Point(22) = {0.001418, 0.747870, 0, 1.0};
Point(23) = {-0.001051, 0.747434, 0, 1.0};
Point(24) = {-0.003517, 0.746966, 0, 1.0};
Point(25) = {-0.005978, 0.746451, 0, 1.0};
Point(26) = {-0.008432, 0.745869, 0, 1.0};
Point(27) = {-0.010877, 0.745189, 0, 1.0};
Point(28) = {-0.013309, 0.744386, 0, 1.0};
Point(29) = {-0.015727, 0.743441, 0, 1.0};
Point(30) = {-0.018128, 0.742324, 0, 1.0};
Point(31) = {-0.020505, 0.740962, 0, 1.0};
Point(32) = {-0.021680, 0.740151, 0, 1.0};
Point(33) = {-0.022841, 0.739192, 0, 1.0};
Point(34) = {-0.023413, 0.738631, 0, 1.0};
Point(35) = {-0.023977, 0.737986, 0, 1.0};
Point(36) = {-0.024309, 0.737539, 0, 1.0};
Point(37) = {-0.024633, 0.737006, 0, 1.0};
Point(38) = {-0.024837, 0.736536, 0, 1.0};
Point(39) = {-0.025000, 0.735646, 0, 1.0};
Point(40) = {-0.024703, 0.735188, 0, 1.0};
Point(41) = {-0.024433, 0.735002, 0, 1.0};
Point(42) = {-0.024035, 0.734786, 0, 1.0};
Point(43) = {-0.023641, 0.734619, 0, 1.0};
Point(44) = {-0.022993, 0.734415, 0, 1.0};
Point(45) = {-0.022352, 0.734288, 0, 1.0};
Point(46) = {-0.021080, 0.734125, 0, 1.0};
Point(47) = {-0.019815, 0.734042, 0, 1.0};
Point(48) = {-0.017297, 0.733987, 0, 1.0};
Point(49) = {-0.014788, 0.734016, 0, 1.0};
Point(50) = {-0.012283, 0.734093, 0, 1.0};
Point(51) = {-0.009782, 0.734207, 0, 1.0};
Point(52) = {-0.007285, 0.734359, 0, 1.0};
Point(53) = {-0.004791, 0.734539, 0, 1.0};
Point(54) = {-0.002298, 0.734741, 0, 1.0};
Point(55) = {0.000192, 0.734960, 0, 1.0};
Point(56) = {0.002682, 0.735191, 0, 1.0};
Point(57) = {0.005170, 0.735436, 0, 1.0};
Point(58) = {0.007656, 0.735700, 0, 1.0};
Point(59) = {0.010139, 0.735988, 0, 1.0};
Point(60) = {0.012620, 0.736306, 0, 1.0};
Point(61) = {0.015099, 0.736646, 0, 1.0};
Point(62) = {0.020049, 0.737387, 0, 1.0};
Point(63) = {0.024992, 0.738208, 0, 1.0};
Point(64) = {0.029928, 0.739104, 0, 1.0};
Point(65) = {0.034858, 0.740059, 0, 1.0};
Point(66) = {0.039784, 0.741043, 0, 1.0};
Point(67) = {0.044713, 0.742010, 0, 1.0};
Point(68) = {0.049646, 0.742927, 0, 1.0};
Point(69) = {0.054588, 0.743753, 0, 1.0};
Point(70) = {0.057065, 0.744113, 0, 1.0};
Point(71) = {0.059545, 0.744436, 0, 1.0};
Point(72) = {0.062030, 0.744707, 0, 1.0};
Point(73) = {0.064519, 0.744944, 0, 1.0};
Point(74) = {0.067013, 0.745128, 0, 1.0};
Point(75) = {0.069507, 0.745314, 0, 1.0};
Point(76) = {0.072005, 0.745459, 0, 1.0};
Point(77) = {-0.074507, -0.745564, 0, 1.0};
Point(78) = {-0.071962, -0.745890, 0, 1.0};
Point(79) = {-0.069414, -0.746251, 0, 1.0};
Point(80) = {-0.066865, -0.746611, 0, 1.0};
Point(81) = {-0.064320, -0.746948, 0, 1.0};
Point(82) = {-0.061773, -0.747286, 0, 1.0};
Point(83) = {-0.059228, -0.747614, 0, 1.0};
Point(84) = {-0.056684, -0.747937, 0, 1.0};
Point(85) = {-0.054140, -0.748247, 0, 1.0};
Point(86) = {-0.049060, -0.748804, 0, 1.0};
Point(87) = {-0.043989, -0.749273, 0, 1.0};
Point(88) = {-0.038928, -0.749635, 0, 1.0};
Point(89) = {-0.033878, -0.749887, 0, 1.0};
Point(90) = {-0.028842, -0.750000, 0, 1.0};
Point(91) = {-0.023821, -0.749960, 0, 1.0};
Point(92) = {-0.018816, -0.749761, 0, 1.0};
Point(93) = {-0.013826, -0.749414, 0, 1.0};
Point(94) = {-0.011336, -0.749187, 0, 1.0};
Point(95) = {-0.008850, -0.748924, 0, 1.0};
Point(96) = {-0.006368, -0.748622, 0, 1.0};
Point(97) = {-0.003891, -0.748269, 0, 1.0};
Point(98) = {-0.001418, -0.747870, 0, 1.0};
Point(99) = {0.001051, -0.747434, 0, 1.0};
Point(100) = {0.003517, -0.746966, 0, 1.0};
Point(101) = {0.005978, -0.746451, 0, 1.0};
Point(102) = {0.008432, -0.745869, 0, 1.0};
Point(103) = {0.010877, -0.745189, 0, 1.0};
Point(104) = {0.013309, -0.744386, 0, 1.0};
Point(105) = {0.015727, -0.743441, 0, 1.0};
Point(106) = {0.018128, -0.742324, 0, 1.0};
Point(107) = {0.020505, -0.740962, 0, 1.0};
Point(108) = {0.021680, -0.740151, 0, 1.0};
Point(109) = {0.022841, -0.739192, 0, 1.0};
Point(110) = {0.023413, -0.738631, 0, 1.0};
Point(111) = {0.023977, -0.737986, 0, 1.0};
Point(112) = {0.024309, -0.737539, 0, 1.0};
Point(113) = {0.024633, -0.737006, 0, 1.0};
Point(114) = {0.024837, -0.736536, 0, 1.0};
Point(115) = {0.025000, -0.735646, 0, 1.0};
Point(116) = {0.024703, -0.735188, 0, 1.0};
Point(117) = {0.024433, -0.735002, 0, 1.0};
Point(118) = {0.024035, -0.734786, 0, 1.0};
Point(119) = {0.023641, -0.734619, 0, 1.0};
Point(120) = {0.022993, -0.734415, 0, 1.0};
Point(121) = {0.022352, -0.734288, 0, 1.0};
Point(122) = {0.021080, -0.734125, 0, 1.0};
Point(123) = {0.019815, -0.734042, 0, 1.0};
Point(124) = {0.017297, -0.733987, 0, 1.0};
Point(125) = {0.014788, -0.734016, 0, 1.0};
Point(126) = {0.012283, -0.734093, 0, 1.0};
Point(127) = {0.009782, -0.734207, 0, 1.0};
Point(128) = {0.007285, -0.734359, 0, 1.0};
Point(129) = {0.004791, -0.734539, 0, 1.0};
Point(130) = {0.002298, -0.734741, 0, 1.0};
Point(131) = {-0.000192, -0.734960, 0, 1.0};
Point(132) = {-0.002682, -0.735191, 0, 1.0};
Point(133) = {-0.005170, -0.735436, 0, 1.0};
Point(134) = {-0.007656, -0.735700, 0, 1.0};
Point(135) = {-0.010139, -0.735988, 0, 1.0};
Point(136) = {-0.012620, -0.736306, 0, 1.0};
Point(137) = {-0.015099, -0.736646, 0, 1.0};
Point(138) = {-0.020049, -0.737387, 0, 1.0};
Point(139) = {-0.024992, -0.738208, 0, 1.0};
Point(140) = {-0.029928, -0.739104, 0, 1.0};
Point(141) = {-0.034858, -0.740059, 0, 1.0};
Point(142) = {-0.039784, -0.741043, 0, 1.0};
Point(143) = {-0.044713, -0.742010, 0, 1.0};
Point(144) = {-0.049646, -0.742927, 0, 1.0};
Point(145) = {-0.054588, -0.743753, 0, 1.0};
Point(146) = {-0.057065, -0.744113, 0, 1.0};
Point(147) = {-0.059545, -0.744436, 0, 1.0};
Point(148) = {-0.062030, -0.744707, 0, 1.0};
Point(149) = {-0.064519, -0.744944, 0, 1.0};
Point(150) = {-0.067013, -0.745128, 0, 1.0};
Point(151) = {-0.069507, -0.745314, 0, 1.0};
Point(152) = {-0.072005, -0.745459, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
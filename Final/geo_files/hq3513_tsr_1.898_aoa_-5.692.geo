SetFactory("OpenCASCADE");

Point(1) = {0.111760, 0.743346, 0, 1.0};
Point(2) = {0.107943, 0.743836, 0, 1.0};
Point(3) = {0.104121, 0.744377, 0, 1.0};
Point(4) = {0.100298, 0.744917, 0, 1.0};
Point(5) = {0.096479, 0.745421, 0, 1.0};
Point(6) = {0.092660, 0.745929, 0, 1.0};
Point(7) = {0.088842, 0.746421, 0, 1.0};
Point(8) = {0.085026, 0.746906, 0, 1.0};
Point(9) = {0.081211, 0.747371, 0, 1.0};
Point(10) = {0.073590, 0.748207, 0, 1.0};
Point(11) = {0.065983, 0.748909, 0, 1.0};
Point(12) = {0.058392, 0.749452, 0, 1.0};
Point(13) = {0.050817, 0.749830, 0, 1.0};
Point(14) = {0.043263, 0.750000, 0, 1.0};
Point(15) = {0.035732, 0.749940, 0, 1.0};
Point(16) = {0.028224, 0.749642, 0, 1.0};
Point(17) = {0.020739, 0.749121, 0, 1.0};
Point(18) = {0.017004, 0.748780, 0, 1.0};
Point(19) = {0.013275, 0.748386, 0, 1.0};
Point(20) = {0.009552, 0.747933, 0, 1.0};
Point(21) = {0.005836, 0.747403, 0, 1.0};
Point(22) = {0.002127, 0.746804, 0, 1.0};
Point(23) = {-0.001576, 0.746150, 0, 1.0};
Point(24) = {-0.005275, 0.745449, 0, 1.0};
Point(25) = {-0.008967, 0.744677, 0, 1.0};
Point(26) = {-0.012648, 0.743803, 0, 1.0};
Point(27) = {-0.016315, 0.742783, 0, 1.0};
Point(28) = {-0.019964, 0.741579, 0, 1.0};
Point(29) = {-0.023591, 0.740162, 0, 1.0};
Point(30) = {-0.027193, 0.738485, 0, 1.0};
Point(31) = {-0.030758, 0.736443, 0, 1.0};
Point(32) = {-0.032521, 0.735226, 0, 1.0};
Point(33) = {-0.034262, 0.733788, 0, 1.0};
Point(34) = {-0.035120, 0.732947, 0, 1.0};
Point(35) = {-0.035966, 0.731979, 0, 1.0};
Point(36) = {-0.036464, 0.731309, 0, 1.0};
Point(37) = {-0.036950, 0.730509, 0, 1.0};
Point(38) = {-0.037256, 0.729804, 0, 1.0};
Point(39) = {-0.037500, 0.728469, 0, 1.0};
Point(40) = {-0.037055, 0.727783, 0, 1.0};
Point(41) = {-0.036650, 0.727503, 0, 1.0};
Point(42) = {-0.036052, 0.727178, 0, 1.0};
Point(43) = {-0.035462, 0.726928, 0, 1.0};
Point(44) = {-0.034490, 0.726623, 0, 1.0};
Point(45) = {-0.033528, 0.726432, 0, 1.0};
Point(46) = {-0.031620, 0.726188, 0, 1.0};
Point(47) = {-0.029723, 0.726064, 0, 1.0};
Point(48) = {-0.025946, 0.725980, 0, 1.0};
Point(49) = {-0.022182, 0.726024, 0, 1.0};
Point(50) = {-0.018425, 0.726139, 0, 1.0};
Point(51) = {-0.014673, 0.726311, 0, 1.0};
Point(52) = {-0.010927, 0.726538, 0, 1.0};
Point(53) = {-0.007186, 0.726809, 0, 1.0};
Point(54) = {-0.003447, 0.727112, 0, 1.0};
Point(55) = {0.000288, 0.727441, 0, 1.0};
Point(56) = {0.004022, 0.727787, 0, 1.0};
Point(57) = {0.007754, 0.728155, 0, 1.0};
Point(58) = {0.011483, 0.728550, 0, 1.0};
Point(59) = {0.015209, 0.728982, 0, 1.0};
Point(60) = {0.018930, 0.729458, 0, 1.0};
Point(61) = {0.022648, 0.729969, 0, 1.0};
Point(62) = {0.030074, 0.731080, 0, 1.0};
Point(63) = {0.037489, 0.732312, 0, 1.0};
Point(64) = {0.044892, 0.733656, 0, 1.0};
Point(65) = {0.052286, 0.735088, 0, 1.0};
Point(66) = {0.059676, 0.736565, 0, 1.0};
Point(67) = {0.067069, 0.738015, 0, 1.0};
Point(68) = {0.074469, 0.739391, 0, 1.0};
Point(69) = {0.081883, 0.740629, 0, 1.0};
Point(70) = {0.085597, 0.741170, 0, 1.0};
Point(71) = {0.089318, 0.741654, 0, 1.0};
Point(72) = {0.093046, 0.742060, 0, 1.0};
Point(73) = {0.096779, 0.742415, 0, 1.0};
Point(74) = {0.100520, 0.742692, 0, 1.0};
Point(75) = {0.104261, 0.742971, 0, 1.0};
Point(76) = {0.108008, 0.743188, 0, 1.0};
Point(77) = {-0.111760, -0.743346, 0, 1.0};
Point(78) = {-0.107943, -0.743836, 0, 1.0};
Point(79) = {-0.104121, -0.744377, 0, 1.0};
Point(80) = {-0.100298, -0.744917, 0, 1.0};
Point(81) = {-0.096479, -0.745421, 0, 1.0};
Point(82) = {-0.092660, -0.745929, 0, 1.0};
Point(83) = {-0.088842, -0.746421, 0, 1.0};
Point(84) = {-0.085026, -0.746906, 0, 1.0};
Point(85) = {-0.081211, -0.747371, 0, 1.0};
Point(86) = {-0.073590, -0.748207, 0, 1.0};
Point(87) = {-0.065983, -0.748909, 0, 1.0};
Point(88) = {-0.058392, -0.749452, 0, 1.0};
Point(89) = {-0.050817, -0.749830, 0, 1.0};
Point(90) = {-0.043263, -0.750000, 0, 1.0};
Point(91) = {-0.035732, -0.749940, 0, 1.0};
Point(92) = {-0.028224, -0.749642, 0, 1.0};
Point(93) = {-0.020739, -0.749121, 0, 1.0};
Point(94) = {-0.017004, -0.748780, 0, 1.0};
Point(95) = {-0.013275, -0.748386, 0, 1.0};
Point(96) = {-0.009552, -0.747933, 0, 1.0};
Point(97) = {-0.005836, -0.747403, 0, 1.0};
Point(98) = {-0.002127, -0.746804, 0, 1.0};
Point(99) = {0.001576, -0.746150, 0, 1.0};
Point(100) = {0.005275, -0.745449, 0, 1.0};
Point(101) = {0.008967, -0.744677, 0, 1.0};
Point(102) = {0.012648, -0.743803, 0, 1.0};
Point(103) = {0.016315, -0.742783, 0, 1.0};
Point(104) = {0.019964, -0.741579, 0, 1.0};
Point(105) = {0.023591, -0.740162, 0, 1.0};
Point(106) = {0.027193, -0.738485, 0, 1.0};
Point(107) = {0.030758, -0.736443, 0, 1.0};
Point(108) = {0.032521, -0.735226, 0, 1.0};
Point(109) = {0.034262, -0.733788, 0, 1.0};
Point(110) = {0.035120, -0.732947, 0, 1.0};
Point(111) = {0.035966, -0.731979, 0, 1.0};
Point(112) = {0.036464, -0.731309, 0, 1.0};
Point(113) = {0.036950, -0.730509, 0, 1.0};
Point(114) = {0.037256, -0.729804, 0, 1.0};
Point(115) = {0.037500, -0.728469, 0, 1.0};
Point(116) = {0.037055, -0.727783, 0, 1.0};
Point(117) = {0.036650, -0.727503, 0, 1.0};
Point(118) = {0.036052, -0.727178, 0, 1.0};
Point(119) = {0.035462, -0.726928, 0, 1.0};
Point(120) = {0.034490, -0.726623, 0, 1.0};
Point(121) = {0.033528, -0.726432, 0, 1.0};
Point(122) = {0.031620, -0.726188, 0, 1.0};
Point(123) = {0.029723, -0.726064, 0, 1.0};
Point(124) = {0.025946, -0.725980, 0, 1.0};
Point(125) = {0.022182, -0.726024, 0, 1.0};
Point(126) = {0.018425, -0.726139, 0, 1.0};
Point(127) = {0.014673, -0.726311, 0, 1.0};
Point(128) = {0.010927, -0.726538, 0, 1.0};
Point(129) = {0.007186, -0.726809, 0, 1.0};
Point(130) = {0.003447, -0.727112, 0, 1.0};
Point(131) = {-0.000288, -0.727441, 0, 1.0};
Point(132) = {-0.004022, -0.727787, 0, 1.0};
Point(133) = {-0.007754, -0.728155, 0, 1.0};
Point(134) = {-0.011483, -0.728550, 0, 1.0};
Point(135) = {-0.015209, -0.728982, 0, 1.0};
Point(136) = {-0.018930, -0.729458, 0, 1.0};
Point(137) = {-0.022648, -0.729969, 0, 1.0};
Point(138) = {-0.030074, -0.731080, 0, 1.0};
Point(139) = {-0.037489, -0.732312, 0, 1.0};
Point(140) = {-0.044892, -0.733656, 0, 1.0};
Point(141) = {-0.052286, -0.735088, 0, 1.0};
Point(142) = {-0.059676, -0.736565, 0, 1.0};
Point(143) = {-0.067069, -0.738015, 0, 1.0};
Point(144) = {-0.074469, -0.739391, 0, 1.0};
Point(145) = {-0.081883, -0.740629, 0, 1.0};
Point(146) = {-0.085597, -0.741170, 0, 1.0};
Point(147) = {-0.089318, -0.741654, 0, 1.0};
Point(148) = {-0.093046, -0.742060, 0, 1.0};
Point(149) = {-0.096779, -0.742415, 0, 1.0};
Point(150) = {-0.100520, -0.742692, 0, 1.0};
Point(151) = {-0.104261, -0.742971, 0, 1.0};
Point(152) = {-0.108008, -0.743188, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
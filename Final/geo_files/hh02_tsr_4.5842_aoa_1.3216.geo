SetFactory("OpenCASCADE");

Point(1) = {0.074978, 0.741839, 0, 1.0};
Point(2) = {0.073976, 0.741784, 0, 1.0};
Point(3) = {0.072474, 0.741701, 0, 1.0};
Point(4) = {0.069970, 0.741562, 0, 1.0};
Point(5) = {0.067466, 0.741428, 0, 1.0};
Point(6) = {0.064966, 0.741449, 0, 1.0};
Point(7) = {0.059988, 0.742476, 0, 1.0};
Point(8) = {0.055012, 0.743546, 0, 1.0};
Point(9) = {0.050035, 0.744628, 0, 1.0};
Point(10) = {0.045059, 0.745684, 0, 1.0};
Point(11) = {0.040079, 0.746629, 0, 1.0};
Point(12) = {0.035097, 0.747462, 0, 1.0};
Point(13) = {0.030112, 0.748190, 0, 1.0};
Point(14) = {0.025125, 0.748809, 0, 1.0};
Point(15) = {0.020135, 0.749307, 0, 1.0};
Point(16) = {0.015143, 0.749671, 0, 1.0};
Point(17) = {0.010146, 0.749897, 0, 1.0};
Point(18) = {0.005147, 0.750000, 0, 1.0};
Point(19) = {0.000146, 0.749985, 0, 1.0};
Point(20) = {-0.004859, 0.749821, 0, 1.0};
Point(21) = {-0.009870, 0.749436, 0, 1.0};
Point(22) = {-0.012377, 0.749134, 0, 1.0};
Point(23) = {-0.014887, 0.748736, 0, 1.0};
Point(24) = {-0.016897, 0.748323, 0, 1.0};
Point(25) = {-0.018406, 0.747942, 0, 1.0};
Point(26) = {-0.019917, 0.747479, 0, 1.0};
Point(27) = {-0.021431, 0.746903, 0, 1.0};
Point(28) = {-0.022442, 0.746428, 0, 1.0};
Point(29) = {-0.022949, 0.746146, 0, 1.0};
Point(30) = {-0.023355, 0.745893, 0, 1.0};
Point(31) = {-0.023711, 0.745643, 0, 1.0};
Point(32) = {-0.023965, 0.745442, 0, 1.0};
Point(33) = {-0.024170, 0.745264, 0, 1.0};
Point(34) = {-0.024323, 0.745116, 0, 1.0};
Point(35) = {-0.024477, 0.744953, 0, 1.0};
Point(36) = {-0.024631, 0.744766, 0, 1.0};
Point(37) = {-0.024786, 0.744545, 0, 1.0};
Point(38) = {-0.024891, 0.744358, 0, 1.0};
Point(39) = {-0.024943, 0.744237, 0, 1.0};
Point(40) = {-0.025000, 0.743956, 0, 1.0};
Point(41) = {-0.024957, 0.743671, 0, 1.0};
Point(42) = {-0.024909, 0.743566, 0, 1.0};
Point(43) = {-0.024812, 0.743419, 0, 1.0};
Point(44) = {-0.024666, 0.743265, 0, 1.0};
Point(45) = {-0.024519, 0.743144, 0, 1.0};
Point(46) = {-0.024371, 0.743046, 0, 1.0};
Point(47) = {-0.024223, 0.742960, 0, 1.0};
Point(48) = {-0.024025, 0.742861, 0, 1.0};
Point(49) = {-0.023777, 0.742755, 0, 1.0};
Point(50) = {-0.023430, 0.742629, 0, 1.0};
Point(51) = {-0.023033, 0.742506, 0, 1.0};
Point(52) = {-0.022536, 0.742374, 0, 1.0};
Point(53) = {-0.021540, 0.742161, 0, 1.0};
Point(54) = {-0.020046, 0.741898, 0, 1.0};
Point(55) = {-0.018551, 0.741679, 0, 1.0};
Point(56) = {-0.017055, 0.741496, 0, 1.0};
Point(57) = {-0.015059, 0.741294, 0, 1.0};
Point(58) = {-0.012563, 0.741093, 0, 1.0};
Point(59) = {-0.010066, 0.740935, 0, 1.0};
Point(60) = {-0.005070, 0.740702, 0, 1.0};
Point(61) = {-0.000072, 0.740537, 0, 1.0};
Point(62) = {0.004927, 0.740431, 0, 1.0};
Point(63) = {0.009927, 0.740394, 0, 1.0};
Point(64) = {0.014929, 0.740434, 0, 1.0};
Point(65) = {0.019933, 0.740541, 0, 1.0};
Point(66) = {0.024938, 0.740699, 0, 1.0};
Point(67) = {0.029944, 0.740891, 0, 1.0};
Point(68) = {0.034950, 0.741090, 0, 1.0};
Point(69) = {0.039956, 0.741281, 0, 1.0};
Point(70) = {0.044959, 0.741389, 0, 1.0};
Point(71) = {0.049960, 0.741375, 0, 1.0};
Point(72) = {0.054958, 0.741222, 0, 1.0};
Point(73) = {0.059955, 0.741012, 0, 1.0};
Point(74) = {0.064952, 0.740839, 0, 1.0};
Point(75) = {0.067457, 0.741045, 0, 1.0};
Point(76) = {0.069961, 0.741182, 0, 1.0};
Point(77) = {0.072465, 0.741320, 0, 1.0};
Point(78) = {0.073967, 0.741403, 0, 1.0};
Point(79) = {0.074969, 0.741459, 0, 1.0};
Point(80) = {-0.074978, -0.741839, 0, 1.0};
Point(81) = {-0.073976, -0.741784, 0, 1.0};
Point(82) = {-0.072474, -0.741701, 0, 1.0};
Point(83) = {-0.069970, -0.741562, 0, 1.0};
Point(84) = {-0.067466, -0.741428, 0, 1.0};
Point(85) = {-0.064966, -0.741449, 0, 1.0};
Point(86) = {-0.059988, -0.742476, 0, 1.0};
Point(87) = {-0.055012, -0.743546, 0, 1.0};
Point(88) = {-0.050035, -0.744628, 0, 1.0};
Point(89) = {-0.045059, -0.745684, 0, 1.0};
Point(90) = {-0.040079, -0.746629, 0, 1.0};
Point(91) = {-0.035097, -0.747462, 0, 1.0};
Point(92) = {-0.030112, -0.748190, 0, 1.0};
Point(93) = {-0.025125, -0.748809, 0, 1.0};
Point(94) = {-0.020135, -0.749307, 0, 1.0};
Point(95) = {-0.015143, -0.749671, 0, 1.0};
Point(96) = {-0.010146, -0.749897, 0, 1.0};
Point(97) = {-0.005147, -0.750000, 0, 1.0};
Point(98) = {-0.000146, -0.749985, 0, 1.0};
Point(99) = {0.004859, -0.749821, 0, 1.0};
Point(100) = {0.009870, -0.749436, 0, 1.0};
Point(101) = {0.012377, -0.749134, 0, 1.0};
Point(102) = {0.014887, -0.748736, 0, 1.0};
Point(103) = {0.016897, -0.748323, 0, 1.0};
Point(104) = {0.018406, -0.747942, 0, 1.0};
Point(105) = {0.019917, -0.747479, 0, 1.0};
Point(106) = {0.021431, -0.746903, 0, 1.0};
Point(107) = {0.022442, -0.746428, 0, 1.0};
Point(108) = {0.022949, -0.746146, 0, 1.0};
Point(109) = {0.023355, -0.745893, 0, 1.0};
Point(110) = {0.023711, -0.745643, 0, 1.0};
Point(111) = {0.023965, -0.745442, 0, 1.0};
Point(112) = {0.024170, -0.745264, 0, 1.0};
Point(113) = {0.024323, -0.745116, 0, 1.0};
Point(114) = {0.024477, -0.744953, 0, 1.0};
Point(115) = {0.024631, -0.744766, 0, 1.0};
Point(116) = {0.024786, -0.744545, 0, 1.0};
Point(117) = {0.024891, -0.744358, 0, 1.0};
Point(118) = {0.024943, -0.744237, 0, 1.0};
Point(119) = {0.025000, -0.743956, 0, 1.0};
Point(120) = {0.024957, -0.743671, 0, 1.0};
Point(121) = {0.024909, -0.743566, 0, 1.0};
Point(122) = {0.024812, -0.743419, 0, 1.0};
Point(123) = {0.024666, -0.743265, 0, 1.0};
Point(124) = {0.024519, -0.743144, 0, 1.0};
Point(125) = {0.024371, -0.743046, 0, 1.0};
Point(126) = {0.024223, -0.742960, 0, 1.0};
Point(127) = {0.024025, -0.742861, 0, 1.0};
Point(128) = {0.023777, -0.742755, 0, 1.0};
Point(129) = {0.023430, -0.742629, 0, 1.0};
Point(130) = {0.023033, -0.742506, 0, 1.0};
Point(131) = {0.022536, -0.742374, 0, 1.0};
Point(132) = {0.021540, -0.742161, 0, 1.0};
Point(133) = {0.020046, -0.741898, 0, 1.0};
Point(134) = {0.018551, -0.741679, 0, 1.0};
Point(135) = {0.017055, -0.741496, 0, 1.0};
Point(136) = {0.015059, -0.741294, 0, 1.0};
Point(137) = {0.012563, -0.741093, 0, 1.0};
Point(138) = {0.010066, -0.740935, 0, 1.0};
Point(139) = {0.005070, -0.740702, 0, 1.0};
Point(140) = {0.000072, -0.740537, 0, 1.0};
Point(141) = {-0.004927, -0.740431, 0, 1.0};
Point(142) = {-0.009927, -0.740394, 0, 1.0};
Point(143) = {-0.014929, -0.740434, 0, 1.0};
Point(144) = {-0.019933, -0.740541, 0, 1.0};
Point(145) = {-0.024938, -0.740699, 0, 1.0};
Point(146) = {-0.029944, -0.740891, 0, 1.0};
Point(147) = {-0.034950, -0.741090, 0, 1.0};
Point(148) = {-0.039956, -0.741281, 0, 1.0};
Point(149) = {-0.044959, -0.741389, 0, 1.0};
Point(150) = {-0.049960, -0.741375, 0, 1.0};
Point(151) = {-0.054958, -0.741222, 0, 1.0};
Point(152) = {-0.059955, -0.741012, 0, 1.0};
Point(153) = {-0.064952, -0.740839, 0, 1.0};
Point(154) = {-0.067457, -0.741045, 0, 1.0};
Point(155) = {-0.069961, -0.741182, 0, 1.0};
Point(156) = {-0.072465, -0.741320, 0, 1.0};
Point(157) = {-0.073967, -0.741403, 0, 1.0};
Point(158) = {-0.074969, -0.741459, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:61};
Spline(3) = {61:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:97};
Spline(6) = {97:140};
Spline(7) = {140:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
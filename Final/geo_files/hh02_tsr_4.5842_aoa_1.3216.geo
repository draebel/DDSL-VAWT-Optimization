SetFactory("OpenCASCADE");

Point(1) = {0.074987, 0.737759, 0, 1.0};
Point(2) = {0.073484, 0.737676, 0, 1.0};
Point(3) = {0.071231, 0.737551, 0, 1.0};
Point(4) = {0.067475, 0.737342, 0, 1.0};
Point(5) = {0.063719, 0.737143, 0, 1.0};
Point(6) = {0.059969, 0.737174, 0, 1.0};
Point(7) = {0.052503, 0.738714, 0, 1.0};
Point(8) = {0.045038, 0.740319, 0, 1.0};
Point(9) = {0.037573, 0.741942, 0, 1.0};
Point(10) = {0.030108, 0.743526, 0, 1.0};
Point(11) = {0.022638, 0.744944, 0, 1.0};
Point(12) = {0.015165, 0.746192, 0, 1.0};
Point(13) = {0.007688, 0.747285, 0, 1.0};
Point(14) = {0.000208, 0.748213, 0, 1.0};
Point(15) = {-0.007277, 0.748961, 0, 1.0};
Point(16) = {-0.014766, 0.749507, 0, 1.0};
Point(17) = {-0.022260, 0.749845, 0, 1.0};
Point(18) = {-0.029759, 0.750000, 0, 1.0};
Point(19) = {-0.037261, 0.749978, 0, 1.0};
Point(20) = {-0.044769, 0.749731, 0, 1.0};
Point(21) = {-0.052284, 0.749154, 0, 1.0};
Point(22) = {-0.056046, 0.748701, 0, 1.0};
Point(23) = {-0.059811, 0.748104, 0, 1.0};
Point(24) = {-0.062826, 0.747484, 0, 1.0};
Point(25) = {-0.065090, 0.746913, 0, 1.0};
Point(26) = {-0.067356, 0.746219, 0, 1.0};
Point(27) = {-0.069627, 0.745355, 0, 1.0};
Point(28) = {-0.071143, 0.744643, 0, 1.0};
Point(29) = {-0.071903, 0.744219, 0, 1.0};
Point(30) = {-0.072512, 0.743840, 0, 1.0};
Point(31) = {-0.073046, 0.743465, 0, 1.0};
Point(32) = {-0.073428, 0.743163, 0, 1.0};
Point(33) = {-0.073734, 0.742896, 0, 1.0};
Point(34) = {-0.073965, 0.742675, 0, 1.0};
Point(35) = {-0.074195, 0.742429, 0, 1.0};
Point(36) = {-0.074427, 0.742150, 0, 1.0};
Point(37) = {-0.074660, 0.741817, 0, 1.0};
Point(38) = {-0.074816, 0.741537, 0, 1.0};
Point(39) = {-0.074895, 0.741356, 0, 1.0};
Point(40) = {-0.074980, 0.740934, 0, 1.0};
Point(41) = {-0.074915, 0.740506, 0, 1.0};
Point(42) = {-0.074844, 0.740348, 0, 1.0};
Point(43) = {-0.074699, 0.740129, 0, 1.0};
Point(44) = {-0.074479, 0.739897, 0, 1.0};
Point(45) = {-0.074258, 0.739717, 0, 1.0};
Point(46) = {-0.074036, 0.739569, 0, 1.0};
Point(47) = {-0.073814, 0.739439, 0, 1.0};
Point(48) = {-0.073518, 0.739291, 0, 1.0};
Point(49) = {-0.073146, 0.739133, 0, 1.0};
Point(50) = {-0.072625, 0.738944, 0, 1.0};
Point(51) = {-0.072029, 0.738759, 0, 1.0};
Point(52) = {-0.071284, 0.738562, 0, 1.0};
Point(53) = {-0.069791, 0.738242, 0, 1.0};
Point(54) = {-0.067549, 0.737847, 0, 1.0};
Point(55) = {-0.065306, 0.737519, 0, 1.0};
Point(56) = {-0.063062, 0.737244, 0, 1.0};
Point(57) = {-0.060068, 0.736941, 0, 1.0};
Point(58) = {-0.056324, 0.736640, 0, 1.0};
Point(59) = {-0.052579, 0.736403, 0, 1.0};
Point(60) = {-0.045085, 0.736053, 0, 1.0};
Point(61) = {-0.037588, 0.735805, 0, 1.0};
Point(62) = {-0.030090, 0.735646, 0, 1.0};
Point(63) = {-0.022589, 0.735591, 0, 1.0};
Point(64) = {-0.015086, 0.735651, 0, 1.0};
Point(65) = {-0.007580, 0.735812, 0, 1.0};
Point(66) = {-0.000073, 0.736049, 0, 1.0};
Point(67) = {0.007436, 0.736336, 0, 1.0};
Point(68) = {0.014945, 0.736635, 0, 1.0};
Point(69) = {0.022453, 0.736921, 0, 1.0};
Point(70) = {0.029959, 0.737084, 0, 1.0};
Point(71) = {0.037461, 0.737063, 0, 1.0};
Point(72) = {0.044957, 0.736833, 0, 1.0};
Point(73) = {0.052452, 0.736517, 0, 1.0};
Point(74) = {0.059948, 0.736259, 0, 1.0};
Point(75) = {0.063706, 0.736568, 0, 1.0};
Point(76) = {0.067462, 0.736773, 0, 1.0};
Point(77) = {0.071218, 0.736980, 0, 1.0};
Point(78) = {0.073471, 0.737105, 0, 1.0};
Point(79) = {0.074973, 0.737189, 0, 1.0};
Point(80) = {-0.074987, -0.737759, 0, 1.0};
Point(81) = {-0.073484, -0.737676, 0, 1.0};
Point(82) = {-0.071231, -0.737551, 0, 1.0};
Point(83) = {-0.067475, -0.737342, 0, 1.0};
Point(84) = {-0.063719, -0.737143, 0, 1.0};
Point(85) = {-0.059969, -0.737174, 0, 1.0};
Point(86) = {-0.052503, -0.738714, 0, 1.0};
Point(87) = {-0.045038, -0.740319, 0, 1.0};
Point(88) = {-0.037573, -0.741942, 0, 1.0};
Point(89) = {-0.030108, -0.743526, 0, 1.0};
Point(90) = {-0.022638, -0.744944, 0, 1.0};
Point(91) = {-0.015165, -0.746192, 0, 1.0};
Point(92) = {-0.007688, -0.747285, 0, 1.0};
Point(93) = {-0.000208, -0.748213, 0, 1.0};
Point(94) = {0.007277, -0.748961, 0, 1.0};
Point(95) = {0.014766, -0.749507, 0, 1.0};
Point(96) = {0.022260, -0.749845, 0, 1.0};
Point(97) = {0.029759, -0.750000, 0, 1.0};
Point(98) = {0.037261, -0.749978, 0, 1.0};
Point(99) = {0.044769, -0.749731, 0, 1.0};
Point(100) = {0.052284, -0.749154, 0, 1.0};
Point(101) = {0.056046, -0.748701, 0, 1.0};
Point(102) = {0.059811, -0.748104, 0, 1.0};
Point(103) = {0.062826, -0.747484, 0, 1.0};
Point(104) = {0.065090, -0.746913, 0, 1.0};
Point(105) = {0.067356, -0.746219, 0, 1.0};
Point(106) = {0.069627, -0.745355, 0, 1.0};
Point(107) = {0.071143, -0.744643, 0, 1.0};
Point(108) = {0.071903, -0.744219, 0, 1.0};
Point(109) = {0.072512, -0.743840, 0, 1.0};
Point(110) = {0.073046, -0.743465, 0, 1.0};
Point(111) = {0.073428, -0.743163, 0, 1.0};
Point(112) = {0.073734, -0.742896, 0, 1.0};
Point(113) = {0.073965, -0.742675, 0, 1.0};
Point(114) = {0.074195, -0.742429, 0, 1.0};
Point(115) = {0.074427, -0.742150, 0, 1.0};
Point(116) = {0.074660, -0.741817, 0, 1.0};
Point(117) = {0.074816, -0.741537, 0, 1.0};
Point(118) = {0.074895, -0.741356, 0, 1.0};
Point(119) = {0.074980, -0.740934, 0, 1.0};
Point(120) = {0.074915, -0.740506, 0, 1.0};
Point(121) = {0.074844, -0.740348, 0, 1.0};
Point(122) = {0.074699, -0.740129, 0, 1.0};
Point(123) = {0.074479, -0.739897, 0, 1.0};
Point(124) = {0.074258, -0.739717, 0, 1.0};
Point(125) = {0.074036, -0.739569, 0, 1.0};
Point(126) = {0.073814, -0.739439, 0, 1.0};
Point(127) = {0.073518, -0.739291, 0, 1.0};
Point(128) = {0.073146, -0.739133, 0, 1.0};
Point(129) = {0.072625, -0.738944, 0, 1.0};
Point(130) = {0.072029, -0.738759, 0, 1.0};
Point(131) = {0.071284, -0.738562, 0, 1.0};
Point(132) = {0.069791, -0.738242, 0, 1.0};
Point(133) = {0.067549, -0.737847, 0, 1.0};
Point(134) = {0.065306, -0.737519, 0, 1.0};
Point(135) = {0.063062, -0.737244, 0, 1.0};
Point(136) = {0.060068, -0.736941, 0, 1.0};
Point(137) = {0.056324, -0.736640, 0, 1.0};
Point(138) = {0.052579, -0.736403, 0, 1.0};
Point(139) = {0.045085, -0.736053, 0, 1.0};
Point(140) = {0.037588, -0.735805, 0, 1.0};
Point(141) = {0.030090, -0.735646, 0, 1.0};
Point(142) = {0.022589, -0.735591, 0, 1.0};
Point(143) = {0.015086, -0.735651, 0, 1.0};
Point(144) = {0.007580, -0.735812, 0, 1.0};
Point(145) = {0.000073, -0.736049, 0, 1.0};
Point(146) = {-0.007436, -0.736336, 0, 1.0};
Point(147) = {-0.014945, -0.736635, 0, 1.0};
Point(148) = {-0.022453, -0.736921, 0, 1.0};
Point(149) = {-0.029959, -0.737084, 0, 1.0};
Point(150) = {-0.037461, -0.737063, 0, 1.0};
Point(151) = {-0.044957, -0.736833, 0, 1.0};
Point(152) = {-0.052452, -0.736517, 0, 1.0};
Point(153) = {-0.059948, -0.736259, 0, 1.0};
Point(154) = {-0.063706, -0.736568, 0, 1.0};
Point(155) = {-0.067462, -0.736773, 0, 1.0};
Point(156) = {-0.071218, -0.736980, 0, 1.0};
Point(157) = {-0.073471, -0.737105, 0, 1.0};
Point(158) = {-0.074973, -0.737189, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:61};
Spline(3) = {61:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:97};
Spline(6) = {97:140};
Spline(7) = {140:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
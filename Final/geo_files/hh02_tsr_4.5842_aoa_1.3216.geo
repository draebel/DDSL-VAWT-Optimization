SetFactory("OpenCASCADE");

Point(1) = {0.149956, 0.733678, 0, 1.0};
Point(2) = {0.147952, 0.733569, 0, 1.0};
Point(3) = {0.144948, 0.733402, 0, 1.0};
Point(4) = {0.139940, 0.733123, 0, 1.0};
Point(5) = {0.134933, 0.732857, 0, 1.0};
Point(6) = {0.129932, 0.732898, 0, 1.0};
Point(7) = {0.119977, 0.734952, 0, 1.0};
Point(8) = {0.110024, 0.737092, 0, 1.0};
Point(9) = {0.100071, 0.739257, 0, 1.0};
Point(10) = {0.090117, 0.741369, 0, 1.0};
Point(11) = {0.080158, 0.743259, 0, 1.0};
Point(12) = {0.070194, 0.744923, 0, 1.0};
Point(13) = {0.060225, 0.746379, 0, 1.0};
Point(14) = {0.050251, 0.747618, 0, 1.0};
Point(15) = {0.040271, 0.748614, 0, 1.0};
Point(16) = {0.030285, 0.749343, 0, 1.0};
Point(17) = {0.020293, 0.749793, 0, 1.0};
Point(18) = {0.010295, 0.750000, 0, 1.0};
Point(19) = {0.000292, 0.749971, 0, 1.0};
Point(20) = {-0.009719, 0.749642, 0, 1.0};
Point(21) = {-0.019739, 0.748872, 0, 1.0};
Point(22) = {-0.024754, 0.748268, 0, 1.0};
Point(23) = {-0.029774, 0.747471, 0, 1.0};
Point(24) = {-0.033794, 0.746646, 0, 1.0};
Point(25) = {-0.036813, 0.745883, 0, 1.0};
Point(26) = {-0.039835, 0.744959, 0, 1.0};
Point(27) = {-0.042862, 0.743806, 0, 1.0};
Point(28) = {-0.044885, 0.742857, 0, 1.0};
Point(29) = {-0.045898, 0.742292, 0, 1.0};
Point(30) = {-0.046710, 0.741787, 0, 1.0};
Point(31) = {-0.047421, 0.741287, 0, 1.0};
Point(32) = {-0.047931, 0.740885, 0, 1.0};
Point(33) = {-0.048339, 0.740528, 0, 1.0};
Point(34) = {-0.048646, 0.740233, 0, 1.0};
Point(35) = {-0.048954, 0.739906, 0, 1.0};
Point(36) = {-0.049262, 0.739533, 0, 1.0};
Point(37) = {-0.049573, 0.739090, 0, 1.0};
Point(38) = {-0.049781, 0.738717, 0, 1.0};
Point(39) = {-0.049887, 0.738475, 0, 1.0};
Point(40) = {-0.050000, 0.737911, 0, 1.0};
Point(41) = {-0.049913, 0.737341, 0, 1.0};
Point(42) = {-0.049818, 0.737131, 0, 1.0};
Point(43) = {-0.049625, 0.736839, 0, 1.0};
Point(44) = {-0.049332, 0.736530, 0, 1.0};
Point(45) = {-0.049037, 0.736289, 0, 1.0};
Point(46) = {-0.048742, 0.736092, 0, 1.0};
Point(47) = {-0.048446, 0.735919, 0, 1.0};
Point(48) = {-0.048050, 0.735722, 0, 1.0};
Point(49) = {-0.047555, 0.735510, 0, 1.0};
Point(50) = {-0.046860, 0.735258, 0, 1.0};
Point(51) = {-0.046066, 0.735012, 0, 1.0};
Point(52) = {-0.045072, 0.734749, 0, 1.0};
Point(53) = {-0.043081, 0.734323, 0, 1.0};
Point(54) = {-0.040092, 0.733796, 0, 1.0};
Point(55) = {-0.037102, 0.733359, 0, 1.0};
Point(56) = {-0.034109, 0.732992, 0, 1.0};
Point(57) = {-0.030118, 0.732587, 0, 1.0};
Point(58) = {-0.025125, 0.732186, 0, 1.0};
Point(59) = {-0.020131, 0.731871, 0, 1.0};
Point(60) = {-0.010139, 0.731404, 0, 1.0};
Point(61) = {-0.000144, 0.731074, 0, 1.0};
Point(62) = {0.009853, 0.730861, 0, 1.0};
Point(63) = {0.019854, 0.730788, 0, 1.0};
Point(64) = {0.029859, 0.730868, 0, 1.0};
Point(65) = {0.039866, 0.731083, 0, 1.0};
Point(66) = {0.049876, 0.731398, 0, 1.0};
Point(67) = {0.059888, 0.731781, 0, 1.0};
Point(68) = {0.069900, 0.732181, 0, 1.0};
Point(69) = {0.079911, 0.732562, 0, 1.0};
Point(70) = {0.089919, 0.732779, 0, 1.0};
Point(71) = {0.099921, 0.732750, 0, 1.0};
Point(72) = {0.109916, 0.732444, 0, 1.0};
Point(73) = {0.119909, 0.732023, 0, 1.0};
Point(74) = {0.129904, 0.731678, 0, 1.0};
Point(75) = {0.134915, 0.732091, 0, 1.0};
Point(76) = {0.139923, 0.732364, 0, 1.0};
Point(77) = {0.144930, 0.732640, 0, 1.0};
Point(78) = {0.147935, 0.732807, 0, 1.0};
Point(79) = {0.149938, 0.732919, 0, 1.0};
Point(80) = {-0.149956, -0.733678, 0, 1.0};
Point(81) = {-0.147952, -0.733569, 0, 1.0};
Point(82) = {-0.144948, -0.733402, 0, 1.0};
Point(83) = {-0.139940, -0.733123, 0, 1.0};
Point(84) = {-0.134933, -0.732857, 0, 1.0};
Point(85) = {-0.129932, -0.732898, 0, 1.0};
Point(86) = {-0.119977, -0.734952, 0, 1.0};
Point(87) = {-0.110024, -0.737092, 0, 1.0};
Point(88) = {-0.100071, -0.739257, 0, 1.0};
Point(89) = {-0.090117, -0.741369, 0, 1.0};
Point(90) = {-0.080158, -0.743259, 0, 1.0};
Point(91) = {-0.070194, -0.744923, 0, 1.0};
Point(92) = {-0.060225, -0.746379, 0, 1.0};
Point(93) = {-0.050251, -0.747618, 0, 1.0};
Point(94) = {-0.040271, -0.748614, 0, 1.0};
Point(95) = {-0.030285, -0.749343, 0, 1.0};
Point(96) = {-0.020293, -0.749793, 0, 1.0};
Point(97) = {-0.010295, -0.750000, 0, 1.0};
Point(98) = {-0.000292, -0.749971, 0, 1.0};
Point(99) = {0.009719, -0.749642, 0, 1.0};
Point(100) = {0.019739, -0.748872, 0, 1.0};
Point(101) = {0.024754, -0.748268, 0, 1.0};
Point(102) = {0.029774, -0.747471, 0, 1.0};
Point(103) = {0.033794, -0.746646, 0, 1.0};
Point(104) = {0.036813, -0.745883, 0, 1.0};
Point(105) = {0.039835, -0.744959, 0, 1.0};
Point(106) = {0.042862, -0.743806, 0, 1.0};
Point(107) = {0.044885, -0.742857, 0, 1.0};
Point(108) = {0.045898, -0.742292, 0, 1.0};
Point(109) = {0.046710, -0.741787, 0, 1.0};
Point(110) = {0.047421, -0.741287, 0, 1.0};
Point(111) = {0.047931, -0.740885, 0, 1.0};
Point(112) = {0.048339, -0.740528, 0, 1.0};
Point(113) = {0.048646, -0.740233, 0, 1.0};
Point(114) = {0.048954, -0.739906, 0, 1.0};
Point(115) = {0.049262, -0.739533, 0, 1.0};
Point(116) = {0.049573, -0.739090, 0, 1.0};
Point(117) = {0.049781, -0.738717, 0, 1.0};
Point(118) = {0.049887, -0.738475, 0, 1.0};
Point(119) = {0.050000, -0.737911, 0, 1.0};
Point(120) = {0.049913, -0.737341, 0, 1.0};
Point(121) = {0.049818, -0.737131, 0, 1.0};
Point(122) = {0.049625, -0.736839, 0, 1.0};
Point(123) = {0.049332, -0.736530, 0, 1.0};
Point(124) = {0.049037, -0.736289, 0, 1.0};
Point(125) = {0.048742, -0.736092, 0, 1.0};
Point(126) = {0.048446, -0.735919, 0, 1.0};
Point(127) = {0.048050, -0.735722, 0, 1.0};
Point(128) = {0.047555, -0.735510, 0, 1.0};
Point(129) = {0.046860, -0.735258, 0, 1.0};
Point(130) = {0.046066, -0.735012, 0, 1.0};
Point(131) = {0.045072, -0.734749, 0, 1.0};
Point(132) = {0.043081, -0.734323, 0, 1.0};
Point(133) = {0.040092, -0.733796, 0, 1.0};
Point(134) = {0.037102, -0.733359, 0, 1.0};
Point(135) = {0.034109, -0.732992, 0, 1.0};
Point(136) = {0.030118, -0.732587, 0, 1.0};
Point(137) = {0.025125, -0.732186, 0, 1.0};
Point(138) = {0.020131, -0.731871, 0, 1.0};
Point(139) = {0.010139, -0.731404, 0, 1.0};
Point(140) = {0.000144, -0.731074, 0, 1.0};
Point(141) = {-0.009853, -0.730861, 0, 1.0};
Point(142) = {-0.019854, -0.730788, 0, 1.0};
Point(143) = {-0.029859, -0.730868, 0, 1.0};
Point(144) = {-0.039866, -0.731083, 0, 1.0};
Point(145) = {-0.049876, -0.731398, 0, 1.0};
Point(146) = {-0.059888, -0.731781, 0, 1.0};
Point(147) = {-0.069900, -0.732181, 0, 1.0};
Point(148) = {-0.079911, -0.732562, 0, 1.0};
Point(149) = {-0.089919, -0.732779, 0, 1.0};
Point(150) = {-0.099921, -0.732750, 0, 1.0};
Point(151) = {-0.109916, -0.732444, 0, 1.0};
Point(152) = {-0.119909, -0.732023, 0, 1.0};
Point(153) = {-0.129904, -0.731678, 0, 1.0};
Point(154) = {-0.134915, -0.732091, 0, 1.0};
Point(155) = {-0.139923, -0.732364, 0, 1.0};
Point(156) = {-0.144930, -0.732640, 0, 1.0};
Point(157) = {-0.147935, -0.732807, 0, 1.0};
Point(158) = {-0.149938, -0.732919, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:61};
Spline(3) = {61:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:97};
Spline(6) = {97:140};
Spline(7) = {140:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
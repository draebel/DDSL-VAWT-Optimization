SetFactory("OpenCASCADE");

Point(1) = {0.148241, 0.749562, 0, 1.0};
Point(2) = {0.143198, 0.749346, 0, 1.0};
Point(3) = {0.138185, 0.749161, 0, 1.0};
Point(4) = {0.133169, 0.749019, 0, 1.0};
Point(5) = {0.128144, 0.748923, 0, 1.0};
Point(6) = {0.123121, 0.748872, 0, 1.0};
Point(7) = {0.118113, 0.748857, 0, 1.0};
Point(8) = {0.113114, 0.748880, 0, 1.0};
Point(9) = {0.108128, 0.748939, 0, 1.0};
Point(10) = {0.103155, 0.749038, 0, 1.0};
Point(11) = {0.098134, 0.749174, 0, 1.0};
Point(12) = {0.093080, 0.749341, 0, 1.0};
Point(13) = {0.088048, 0.749516, 0, 1.0};
Point(14) = {0.082991, 0.749688, 0, 1.0};
Point(15) = {0.077915, 0.749834, 0, 1.0};
Point(16) = {0.072848, 0.749940, 0, 1.0};
Point(17) = {0.067781, 0.749997, 0, 1.0};
Point(18) = {0.062726, 0.750000, 0, 1.0};
Point(19) = {0.057684, 0.749942, 0, 1.0};
Point(20) = {0.052644, 0.749824, 0, 1.0};
Point(21) = {0.047612, 0.749636, 0, 1.0};
Point(22) = {0.042588, 0.749374, 0, 1.0};
Point(23) = {0.037565, 0.749032, 0, 1.0};
Point(24) = {0.032544, 0.748605, 0, 1.0};
Point(25) = {0.027539, 0.748096, 0, 1.0};
Point(26) = {0.022542, 0.747507, 0, 1.0};
Point(27) = {0.017548, 0.746842, 0, 1.0};
Point(28) = {0.007588, 0.745285, 0, 1.0};
Point(29) = {-0.002340, 0.743412, 0, 1.0};
Point(30) = {-0.007289, 0.742341, 0, 1.0};
Point(31) = {-0.012252, 0.741163, 0, 1.0};
Point(32) = {-0.017212, 0.739868, 0, 1.0};
Point(33) = {-0.022133, 0.738450, 0, 1.0};
Point(34) = {-0.027023, 0.736896, 0, 1.0};
Point(35) = {-0.031877, 0.735184, 0, 1.0};
Point(36) = {-0.036689, 0.733274, 0, 1.0};
Point(37) = {-0.041573, 0.731003, 0, 1.0};
Point(38) = {-0.046181, 0.728265, 0, 1.0};
Point(39) = {-0.048715, 0.726072, 0, 1.0};
Point(40) = {-0.049695, 0.724654, 0, 1.0};
Point(41) = {-0.050000, 0.723095, 0, 1.0};
Point(42) = {-0.049980, 0.722979, 0, 1.0};
Point(43) = {-0.048754, 0.721464, 0, 1.0};
Point(44) = {-0.048232, 0.721210, 0, 1.0};
Point(45) = {-0.046308, 0.720675, 0, 1.0};
Point(46) = {-0.044056, 0.720369, 0, 1.0};
Point(47) = {-0.038910, 0.720091, 0, 1.0};
Point(48) = {-0.034008, 0.720026, 0, 1.0};
Point(49) = {-0.028993, 0.720050, 0, 1.0};
Point(50) = {-0.024002, 0.720141, 0, 1.0};
Point(51) = {-0.019035, 0.720288, 0, 1.0};
Point(52) = {-0.014085, 0.720487, 0, 1.0};
Point(53) = {-0.009164, 0.720732, 0, 1.0};
Point(54) = {-0.004236, 0.721020, 0, 1.0};
Point(55) = {0.000715, 0.721352, 0, 1.0};
Point(56) = {0.010610, 0.722137, 0, 1.0};
Point(57) = {0.020490, 0.723092, 0, 1.0};
Point(58) = {0.025423, 0.723640, 0, 1.0};
Point(59) = {0.030358, 0.724239, 0, 1.0};
Point(60) = {0.035285, 0.724889, 0, 1.0};
Point(61) = {0.040202, 0.725598, 0, 1.0};
Point(62) = {0.045121, 0.726367, 0, 1.0};
Point(63) = {0.050039, 0.727196, 0, 1.0};
Point(64) = {0.054954, 0.728080, 0, 1.0};
Point(65) = {0.059864, 0.729010, 0, 1.0};
Point(66) = {0.064773, 0.729981, 0, 1.0};
Point(67) = {0.069675, 0.730987, 0, 1.0};
Point(68) = {0.074569, 0.732018, 0, 1.0};
Point(69) = {0.079466, 0.733063, 0, 1.0};
Point(70) = {0.084362, 0.734108, 0, 1.0};
Point(71) = {0.089279, 0.735148, 0, 1.0};
Point(72) = {0.094225, 0.736175, 0, 1.0};
Point(73) = {0.099150, 0.737184, 0, 1.0};
Point(74) = {0.104101, 0.738202, 0, 1.0};
Point(75) = {0.109091, 0.739255, 0, 1.0};
Point(76) = {0.114054, 0.740356, 0, 1.0};
Point(77) = {0.118996, 0.741510, 0, 1.0};
Point(78) = {0.123912, 0.742716, 0, 1.0};
Point(79) = {0.128807, 0.743949, 0, 1.0};
Point(80) = {0.133692, 0.745191, 0, 1.0};
Point(81) = {0.138576, 0.746437, 0, 1.0};
Point(82) = {0.143455, 0.747722, 0, 1.0};
Point(83) = {0.148291, 0.749185, 0, 1.0};
Point(84) = {-0.148241, -0.749562, 0, 1.0};
Point(85) = {-0.143198, -0.749346, 0, 1.0};
Point(86) = {-0.138185, -0.749161, 0, 1.0};
Point(87) = {-0.133169, -0.749019, 0, 1.0};
Point(88) = {-0.128144, -0.748923, 0, 1.0};
Point(89) = {-0.123121, -0.748872, 0, 1.0};
Point(90) = {-0.118113, -0.748857, 0, 1.0};
Point(91) = {-0.113114, -0.748880, 0, 1.0};
Point(92) = {-0.108128, -0.748939, 0, 1.0};
Point(93) = {-0.103155, -0.749038, 0, 1.0};
Point(94) = {-0.098134, -0.749174, 0, 1.0};
Point(95) = {-0.093080, -0.749341, 0, 1.0};
Point(96) = {-0.088048, -0.749516, 0, 1.0};
Point(97) = {-0.082991, -0.749688, 0, 1.0};
Point(98) = {-0.077915, -0.749834, 0, 1.0};
Point(99) = {-0.072848, -0.749940, 0, 1.0};
Point(100) = {-0.067781, -0.749997, 0, 1.0};
Point(101) = {-0.062726, -0.750000, 0, 1.0};
Point(102) = {-0.057684, -0.749942, 0, 1.0};
Point(103) = {-0.052644, -0.749824, 0, 1.0};
Point(104) = {-0.047612, -0.749636, 0, 1.0};
Point(105) = {-0.042588, -0.749374, 0, 1.0};
Point(106) = {-0.037565, -0.749032, 0, 1.0};
Point(107) = {-0.032544, -0.748605, 0, 1.0};
Point(108) = {-0.027539, -0.748096, 0, 1.0};
Point(109) = {-0.022542, -0.747507, 0, 1.0};
Point(110) = {-0.017548, -0.746842, 0, 1.0};
Point(111) = {-0.007588, -0.745285, 0, 1.0};
Point(112) = {0.002340, -0.743412, 0, 1.0};
Point(113) = {0.007289, -0.742341, 0, 1.0};
Point(114) = {0.012252, -0.741163, 0, 1.0};
Point(115) = {0.017212, -0.739868, 0, 1.0};
Point(116) = {0.022133, -0.738450, 0, 1.0};
Point(117) = {0.027023, -0.736896, 0, 1.0};
Point(118) = {0.031877, -0.735184, 0, 1.0};
Point(119) = {0.036689, -0.733274, 0, 1.0};
Point(120) = {0.041573, -0.731003, 0, 1.0};
Point(121) = {0.046181, -0.728265, 0, 1.0};
Point(122) = {0.048715, -0.726072, 0, 1.0};
Point(123) = {0.049695, -0.724654, 0, 1.0};
Point(124) = {0.050000, -0.723095, 0, 1.0};
Point(125) = {0.049980, -0.722979, 0, 1.0};
Point(126) = {0.048754, -0.721464, 0, 1.0};
Point(127) = {0.048232, -0.721210, 0, 1.0};
Point(128) = {0.046308, -0.720675, 0, 1.0};
Point(129) = {0.044056, -0.720369, 0, 1.0};
Point(130) = {0.038910, -0.720091, 0, 1.0};
Point(131) = {0.034008, -0.720026, 0, 1.0};
Point(132) = {0.028993, -0.720050, 0, 1.0};
Point(133) = {0.024002, -0.720141, 0, 1.0};
Point(134) = {0.019035, -0.720288, 0, 1.0};
Point(135) = {0.014085, -0.720487, 0, 1.0};
Point(136) = {0.009164, -0.720732, 0, 1.0};
Point(137) = {0.004236, -0.721020, 0, 1.0};
Point(138) = {-0.000715, -0.721352, 0, 1.0};
Point(139) = {-0.010610, -0.722137, 0, 1.0};
Point(140) = {-0.020490, -0.723092, 0, 1.0};
Point(141) = {-0.025423, -0.723640, 0, 1.0};
Point(142) = {-0.030358, -0.724239, 0, 1.0};
Point(143) = {-0.035285, -0.724889, 0, 1.0};
Point(144) = {-0.040202, -0.725598, 0, 1.0};
Point(145) = {-0.045121, -0.726367, 0, 1.0};
Point(146) = {-0.050039, -0.727196, 0, 1.0};
Point(147) = {-0.054954, -0.728080, 0, 1.0};
Point(148) = {-0.059864, -0.729010, 0, 1.0};
Point(149) = {-0.064773, -0.729981, 0, 1.0};
Point(150) = {-0.069675, -0.730987, 0, 1.0};
Point(151) = {-0.074569, -0.732018, 0, 1.0};
Point(152) = {-0.079466, -0.733063, 0, 1.0};
Point(153) = {-0.084362, -0.734108, 0, 1.0};
Point(154) = {-0.089279, -0.735148, 0, 1.0};
Point(155) = {-0.094225, -0.736175, 0, 1.0};
Point(156) = {-0.099150, -0.737184, 0, 1.0};
Point(157) = {-0.104101, -0.738202, 0, 1.0};
Point(158) = {-0.109091, -0.739255, 0, 1.0};
Point(159) = {-0.114054, -0.740356, 0, 1.0};
Point(160) = {-0.118996, -0.741510, 0, 1.0};
Point(161) = {-0.123912, -0.742716, 0, 1.0};
Point(162) = {-0.128807, -0.743949, 0, 1.0};
Point(163) = {-0.133692, -0.745191, 0, 1.0};
Point(164) = {-0.138576, -0.746437, 0, 1.0};
Point(165) = {-0.143455, -0.747722, 0, 1.0};
Point(166) = {-0.148291, -0.749185, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:55};
Spline(3) = {55:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:111};
Spline(6) = {111:138};
Spline(7) = {138:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
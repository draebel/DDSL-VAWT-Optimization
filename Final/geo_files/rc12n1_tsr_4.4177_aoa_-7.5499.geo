SetFactory("OpenCASCADE");

Point(1) = {0.111506, 0.749671, 0, 1.0};
Point(2) = {0.107723, 0.749509, 0, 1.0};
Point(3) = {0.103964, 0.749371, 0, 1.0};
Point(4) = {0.100202, 0.749265, 0, 1.0};
Point(5) = {0.096433, 0.749192, 0, 1.0};
Point(6) = {0.092666, 0.749154, 0, 1.0};
Point(7) = {0.088910, 0.749143, 0, 1.0};
Point(8) = {0.085161, 0.749160, 0, 1.0};
Point(9) = {0.081421, 0.749204, 0, 1.0};
Point(10) = {0.077691, 0.749278, 0, 1.0};
Point(11) = {0.073926, 0.749381, 0, 1.0};
Point(12) = {0.070135, 0.749506, 0, 1.0};
Point(13) = {0.066361, 0.749637, 0, 1.0};
Point(14) = {0.062569, 0.749766, 0, 1.0};
Point(15) = {0.058761, 0.749875, 0, 1.0};
Point(16) = {0.054961, 0.749955, 0, 1.0};
Point(17) = {0.051161, 0.749998, 0, 1.0};
Point(18) = {0.047370, 0.750000, 0, 1.0};
Point(19) = {0.043588, 0.749956, 0, 1.0};
Point(20) = {0.039808, 0.749868, 0, 1.0};
Point(21) = {0.036034, 0.749727, 0, 1.0};
Point(22) = {0.032266, 0.749531, 0, 1.0};
Point(23) = {0.028499, 0.749274, 0, 1.0};
Point(24) = {0.024733, 0.748954, 0, 1.0};
Point(25) = {0.020979, 0.748572, 0, 1.0};
Point(26) = {0.017232, 0.748130, 0, 1.0};
Point(27) = {0.013486, 0.747631, 0, 1.0};
Point(28) = {0.006016, 0.746464, 0, 1.0};
Point(29) = {-0.001430, 0.745059, 0, 1.0};
Point(30) = {-0.005142, 0.744256, 0, 1.0};
Point(31) = {-0.008864, 0.743372, 0, 1.0};
Point(32) = {-0.012584, 0.742401, 0, 1.0};
Point(33) = {-0.016275, 0.741337, 0, 1.0};
Point(34) = {-0.019942, 0.740172, 0, 1.0};
Point(35) = {-0.023582, 0.738888, 0, 1.0};
Point(36) = {-0.027191, 0.737456, 0, 1.0};
Point(37) = {-0.030855, 0.735752, 0, 1.0};
Point(38) = {-0.034310, 0.733699, 0, 1.0};
Point(39) = {-0.036211, 0.732054, 0, 1.0};
Point(40) = {-0.036946, 0.730991, 0, 1.0};
Point(41) = {-0.037175, 0.729821, 0, 1.0};
Point(42) = {-0.037160, 0.729734, 0, 1.0};
Point(43) = {-0.036241, 0.728598, 0, 1.0};
Point(44) = {-0.035849, 0.728407, 0, 1.0};
Point(45) = {-0.034406, 0.728006, 0, 1.0};
Point(46) = {-0.032717, 0.727777, 0, 1.0};
Point(47) = {-0.028857, 0.727568, 0, 1.0};
Point(48) = {-0.025181, 0.727520, 0, 1.0};
Point(49) = {-0.021420, 0.727537, 0, 1.0};
Point(50) = {-0.017676, 0.727606, 0, 1.0};
Point(51) = {-0.013951, 0.727716, 0, 1.0};
Point(52) = {-0.010239, 0.727865, 0, 1.0};
Point(53) = {-0.006548, 0.728049, 0, 1.0};
Point(54) = {-0.002852, 0.728265, 0, 1.0};
Point(55) = {0.000861, 0.728514, 0, 1.0};
Point(56) = {0.008282, 0.729102, 0, 1.0};
Point(57) = {0.015692, 0.729819, 0, 1.0};
Point(58) = {0.019393, 0.730230, 0, 1.0};
Point(59) = {0.023093, 0.730679, 0, 1.0};
Point(60) = {0.026789, 0.731166, 0, 1.0};
Point(61) = {0.030477, 0.731698, 0, 1.0};
Point(62) = {0.034166, 0.732276, 0, 1.0};
Point(63) = {0.037855, 0.732897, 0, 1.0};
Point(64) = {0.041541, 0.733560, 0, 1.0};
Point(65) = {0.045223, 0.734258, 0, 1.0};
Point(66) = {0.048905, 0.734986, 0, 1.0};
Point(67) = {0.052582, 0.735740, 0, 1.0};
Point(68) = {0.056252, 0.736513, 0, 1.0};
Point(69) = {0.059924, 0.737297, 0, 1.0};
Point(70) = {0.063597, 0.738081, 0, 1.0};
Point(71) = {0.067284, 0.738861, 0, 1.0};
Point(72) = {0.070994, 0.739631, 0, 1.0};
Point(73) = {0.074688, 0.740388, 0, 1.0};
Point(74) = {0.078401, 0.741152, 0, 1.0};
Point(75) = {0.082143, 0.741941, 0, 1.0};
Point(76) = {0.085866, 0.742767, 0, 1.0};
Point(77) = {0.089572, 0.743633, 0, 1.0};
Point(78) = {0.093259, 0.744537, 0, 1.0};
Point(79) = {0.096930, 0.745462, 0, 1.0};
Point(80) = {0.100594, 0.746393, 0, 1.0};
Point(81) = {0.104257, 0.747327, 0, 1.0};
Point(82) = {0.107916, 0.748291, 0, 1.0};
Point(83) = {0.111543, 0.749389, 0, 1.0};
Point(84) = {-0.111506, -0.749671, 0, 1.0};
Point(85) = {-0.107723, -0.749509, 0, 1.0};
Point(86) = {-0.103964, -0.749371, 0, 1.0};
Point(87) = {-0.100202, -0.749265, 0, 1.0};
Point(88) = {-0.096433, -0.749192, 0, 1.0};
Point(89) = {-0.092666, -0.749154, 0, 1.0};
Point(90) = {-0.088910, -0.749143, 0, 1.0};
Point(91) = {-0.085161, -0.749160, 0, 1.0};
Point(92) = {-0.081421, -0.749204, 0, 1.0};
Point(93) = {-0.077691, -0.749278, 0, 1.0};
Point(94) = {-0.073926, -0.749381, 0, 1.0};
Point(95) = {-0.070135, -0.749506, 0, 1.0};
Point(96) = {-0.066361, -0.749637, 0, 1.0};
Point(97) = {-0.062569, -0.749766, 0, 1.0};
Point(98) = {-0.058761, -0.749875, 0, 1.0};
Point(99) = {-0.054961, -0.749955, 0, 1.0};
Point(100) = {-0.051161, -0.749998, 0, 1.0};
Point(101) = {-0.047370, -0.750000, 0, 1.0};
Point(102) = {-0.043588, -0.749956, 0, 1.0};
Point(103) = {-0.039808, -0.749868, 0, 1.0};
Point(104) = {-0.036034, -0.749727, 0, 1.0};
Point(105) = {-0.032266, -0.749531, 0, 1.0};
Point(106) = {-0.028499, -0.749274, 0, 1.0};
Point(107) = {-0.024733, -0.748954, 0, 1.0};
Point(108) = {-0.020979, -0.748572, 0, 1.0};
Point(109) = {-0.017232, -0.748130, 0, 1.0};
Point(110) = {-0.013486, -0.747631, 0, 1.0};
Point(111) = {-0.006016, -0.746464, 0, 1.0};
Point(112) = {0.001430, -0.745059, 0, 1.0};
Point(113) = {0.005142, -0.744256, 0, 1.0};
Point(114) = {0.008864, -0.743372, 0, 1.0};
Point(115) = {0.012584, -0.742401, 0, 1.0};
Point(116) = {0.016275, -0.741337, 0, 1.0};
Point(117) = {0.019942, -0.740172, 0, 1.0};
Point(118) = {0.023582, -0.738888, 0, 1.0};
Point(119) = {0.027191, -0.737456, 0, 1.0};
Point(120) = {0.030855, -0.735752, 0, 1.0};
Point(121) = {0.034310, -0.733699, 0, 1.0};
Point(122) = {0.036211, -0.732054, 0, 1.0};
Point(123) = {0.036946, -0.730991, 0, 1.0};
Point(124) = {0.037175, -0.729821, 0, 1.0};
Point(125) = {0.037160, -0.729734, 0, 1.0};
Point(126) = {0.036241, -0.728598, 0, 1.0};
Point(127) = {0.035849, -0.728407, 0, 1.0};
Point(128) = {0.034406, -0.728006, 0, 1.0};
Point(129) = {0.032717, -0.727777, 0, 1.0};
Point(130) = {0.028857, -0.727568, 0, 1.0};
Point(131) = {0.025181, -0.727520, 0, 1.0};
Point(132) = {0.021420, -0.727537, 0, 1.0};
Point(133) = {0.017676, -0.727606, 0, 1.0};
Point(134) = {0.013951, -0.727716, 0, 1.0};
Point(135) = {0.010239, -0.727865, 0, 1.0};
Point(136) = {0.006548, -0.728049, 0, 1.0};
Point(137) = {0.002852, -0.728265, 0, 1.0};
Point(138) = {-0.000861, -0.728514, 0, 1.0};
Point(139) = {-0.008282, -0.729102, 0, 1.0};
Point(140) = {-0.015692, -0.729819, 0, 1.0};
Point(141) = {-0.019393, -0.730230, 0, 1.0};
Point(142) = {-0.023093, -0.730679, 0, 1.0};
Point(143) = {-0.026789, -0.731166, 0, 1.0};
Point(144) = {-0.030477, -0.731698, 0, 1.0};
Point(145) = {-0.034166, -0.732276, 0, 1.0};
Point(146) = {-0.037855, -0.732897, 0, 1.0};
Point(147) = {-0.041541, -0.733560, 0, 1.0};
Point(148) = {-0.045223, -0.734258, 0, 1.0};
Point(149) = {-0.048905, -0.734986, 0, 1.0};
Point(150) = {-0.052582, -0.735740, 0, 1.0};
Point(151) = {-0.056252, -0.736513, 0, 1.0};
Point(152) = {-0.059924, -0.737297, 0, 1.0};
Point(153) = {-0.063597, -0.738081, 0, 1.0};
Point(154) = {-0.067284, -0.738861, 0, 1.0};
Point(155) = {-0.070994, -0.739631, 0, 1.0};
Point(156) = {-0.074688, -0.740388, 0, 1.0};
Point(157) = {-0.078401, -0.741152, 0, 1.0};
Point(158) = {-0.082143, -0.741941, 0, 1.0};
Point(159) = {-0.085866, -0.742767, 0, 1.0};
Point(160) = {-0.089572, -0.743633, 0, 1.0};
Point(161) = {-0.093259, -0.744537, 0, 1.0};
Point(162) = {-0.096930, -0.745462, 0, 1.0};
Point(163) = {-0.100594, -0.746393, 0, 1.0};
Point(164) = {-0.104257, -0.747327, 0, 1.0};
Point(165) = {-0.107916, -0.748291, 0, 1.0};
Point(166) = {-0.111543, -0.749389, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:55};
Spline(3) = {55:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:111};
Spline(6) = {111:138};
Spline(7) = {138:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074121, 0.749781, 0, 1.0};
Point(2) = {0.071599, 0.749673, 0, 1.0};
Point(3) = {0.069093, 0.749580, 0, 1.0};
Point(4) = {0.066584, 0.749510, 0, 1.0};
Point(5) = {0.064072, 0.749462, 0, 1.0};
Point(6) = {0.061561, 0.749436, 0, 1.0};
Point(7) = {0.059057, 0.749428, 0, 1.0};
Point(8) = {0.056557, 0.749440, 0, 1.0};
Point(9) = {0.054064, 0.749469, 0, 1.0};
Point(10) = {0.051577, 0.749519, 0, 1.0};
Point(11) = {0.049067, 0.749587, 0, 1.0};
Point(12) = {0.046540, 0.749670, 0, 1.0};
Point(13) = {0.044024, 0.749758, 0, 1.0};
Point(14) = {0.041496, 0.749844, 0, 1.0};
Point(15) = {0.038957, 0.749917, 0, 1.0};
Point(16) = {0.036424, 0.749970, 0, 1.0};
Point(17) = {0.033891, 0.749999, 0, 1.0};
Point(18) = {0.031363, 0.750000, 0, 1.0};
Point(19) = {0.028842, 0.749971, 0, 1.0};
Point(20) = {0.026322, 0.749912, 0, 1.0};
Point(21) = {0.023806, 0.749818, 0, 1.0};
Point(22) = {0.021294, 0.749687, 0, 1.0};
Point(23) = {0.018783, 0.749516, 0, 1.0};
Point(24) = {0.016272, 0.749303, 0, 1.0};
Point(25) = {0.013769, 0.749048, 0, 1.0};
Point(26) = {0.011271, 0.748754, 0, 1.0};
Point(27) = {0.008774, 0.748421, 0, 1.0};
Point(28) = {0.003794, 0.747643, 0, 1.0};
Point(29) = {-0.001170, 0.746706, 0, 1.0};
Point(30) = {-0.003644, 0.746170, 0, 1.0};
Point(31) = {-0.006126, 0.745581, 0, 1.0};
Point(32) = {-0.008606, 0.744934, 0, 1.0};
Point(33) = {-0.011067, 0.744225, 0, 1.0};
Point(34) = {-0.013511, 0.743448, 0, 1.0};
Point(35) = {-0.015938, 0.742592, 0, 1.0};
Point(36) = {-0.018344, 0.741637, 0, 1.0};
Point(37) = {-0.020787, 0.740502, 0, 1.0};
Point(38) = {-0.023090, 0.739133, 0, 1.0};
Point(39) = {-0.024358, 0.738036, 0, 1.0};
Point(40) = {-0.024847, 0.737327, 0, 1.0};
Point(41) = {-0.025000, 0.736548, 0, 1.0};
Point(42) = {-0.024990, 0.736489, 0, 1.0};
Point(43) = {-0.024377, 0.735732, 0, 1.0};
Point(44) = {-0.024116, 0.735605, 0, 1.0};
Point(45) = {-0.023154, 0.735337, 0, 1.0};
Point(46) = {-0.022028, 0.735185, 0, 1.0};
Point(47) = {-0.019455, 0.735045, 0, 1.0};
Point(48) = {-0.017004, 0.735013, 0, 1.0};
Point(49) = {-0.014497, 0.735025, 0, 1.0};
Point(50) = {-0.012001, 0.735071, 0, 1.0};
Point(51) = {-0.009517, 0.735144, 0, 1.0};
Point(52) = {-0.007042, 0.735243, 0, 1.0};
Point(53) = {-0.004582, 0.735366, 0, 1.0};
Point(54) = {-0.002118, 0.735510, 0, 1.0};
Point(55) = {0.000358, 0.735676, 0, 1.0};
Point(56) = {0.005305, 0.736068, 0, 1.0};
Point(57) = {0.010245, 0.736546, 0, 1.0};
Point(58) = {0.012712, 0.736820, 0, 1.0};
Point(59) = {0.015179, 0.737119, 0, 1.0};
Point(60) = {0.017643, 0.737444, 0, 1.0};
Point(61) = {0.020101, 0.737799, 0, 1.0};
Point(62) = {0.022560, 0.738184, 0, 1.0};
Point(63) = {0.025020, 0.738598, 0, 1.0};
Point(64) = {0.027477, 0.739040, 0, 1.0};
Point(65) = {0.029932, 0.739505, 0, 1.0};
Point(66) = {0.032387, 0.739990, 0, 1.0};
Point(67) = {0.034838, 0.740493, 0, 1.0};
Point(68) = {0.037285, 0.741009, 0, 1.0};
Point(69) = {0.039733, 0.741531, 0, 1.0};
Point(70) = {0.042181, 0.742054, 0, 1.0};
Point(71) = {0.044640, 0.742574, 0, 1.0};
Point(72) = {0.047112, 0.743087, 0, 1.0};
Point(73) = {0.049575, 0.743592, 0, 1.0};
Point(74) = {0.052050, 0.744101, 0, 1.0};
Point(75) = {0.054546, 0.744627, 0, 1.0};
Point(76) = {0.057027, 0.745178, 0, 1.0};
Point(77) = {0.059498, 0.745755, 0, 1.0};
Point(78) = {0.061956, 0.746358, 0, 1.0};
Point(79) = {0.064403, 0.746975, 0, 1.0};
Point(80) = {0.066846, 0.747595, 0, 1.0};
Point(81) = {0.069288, 0.748218, 0, 1.0};
Point(82) = {0.071728, 0.748861, 0, 1.0};
Point(83) = {0.074146, 0.749592, 0, 1.0};
Point(84) = {-0.074121, -0.749781, 0, 1.0};
Point(85) = {-0.071599, -0.749673, 0, 1.0};
Point(86) = {-0.069093, -0.749580, 0, 1.0};
Point(87) = {-0.066584, -0.749510, 0, 1.0};
Point(88) = {-0.064072, -0.749462, 0, 1.0};
Point(89) = {-0.061561, -0.749436, 0, 1.0};
Point(90) = {-0.059057, -0.749428, 0, 1.0};
Point(91) = {-0.056557, -0.749440, 0, 1.0};
Point(92) = {-0.054064, -0.749469, 0, 1.0};
Point(93) = {-0.051577, -0.749519, 0, 1.0};
Point(94) = {-0.049067, -0.749587, 0, 1.0};
Point(95) = {-0.046540, -0.749670, 0, 1.0};
Point(96) = {-0.044024, -0.749758, 0, 1.0};
Point(97) = {-0.041496, -0.749844, 0, 1.0};
Point(98) = {-0.038957, -0.749917, 0, 1.0};
Point(99) = {-0.036424, -0.749970, 0, 1.0};
Point(100) = {-0.033891, -0.749999, 0, 1.0};
Point(101) = {-0.031363, -0.750000, 0, 1.0};
Point(102) = {-0.028842, -0.749971, 0, 1.0};
Point(103) = {-0.026322, -0.749912, 0, 1.0};
Point(104) = {-0.023806, -0.749818, 0, 1.0};
Point(105) = {-0.021294, -0.749687, 0, 1.0};
Point(106) = {-0.018783, -0.749516, 0, 1.0};
Point(107) = {-0.016272, -0.749303, 0, 1.0};
Point(108) = {-0.013769, -0.749048, 0, 1.0};
Point(109) = {-0.011271, -0.748754, 0, 1.0};
Point(110) = {-0.008774, -0.748421, 0, 1.0};
Point(111) = {-0.003794, -0.747643, 0, 1.0};
Point(112) = {0.001170, -0.746706, 0, 1.0};
Point(113) = {0.003644, -0.746170, 0, 1.0};
Point(114) = {0.006126, -0.745581, 0, 1.0};
Point(115) = {0.008606, -0.744934, 0, 1.0};
Point(116) = {0.011067, -0.744225, 0, 1.0};
Point(117) = {0.013511, -0.743448, 0, 1.0};
Point(118) = {0.015938, -0.742592, 0, 1.0};
Point(119) = {0.018344, -0.741637, 0, 1.0};
Point(120) = {0.020787, -0.740502, 0, 1.0};
Point(121) = {0.023090, -0.739133, 0, 1.0};
Point(122) = {0.024358, -0.738036, 0, 1.0};
Point(123) = {0.024847, -0.737327, 0, 1.0};
Point(124) = {0.025000, -0.736548, 0, 1.0};
Point(125) = {0.024990, -0.736489, 0, 1.0};
Point(126) = {0.024377, -0.735732, 0, 1.0};
Point(127) = {0.024116, -0.735605, 0, 1.0};
Point(128) = {0.023154, -0.735337, 0, 1.0};
Point(129) = {0.022028, -0.735185, 0, 1.0};
Point(130) = {0.019455, -0.735045, 0, 1.0};
Point(131) = {0.017004, -0.735013, 0, 1.0};
Point(132) = {0.014497, -0.735025, 0, 1.0};
Point(133) = {0.012001, -0.735071, 0, 1.0};
Point(134) = {0.009517, -0.735144, 0, 1.0};
Point(135) = {0.007042, -0.735243, 0, 1.0};
Point(136) = {0.004582, -0.735366, 0, 1.0};
Point(137) = {0.002118, -0.735510, 0, 1.0};
Point(138) = {-0.000358, -0.735676, 0, 1.0};
Point(139) = {-0.005305, -0.736068, 0, 1.0};
Point(140) = {-0.010245, -0.736546, 0, 1.0};
Point(141) = {-0.012712, -0.736820, 0, 1.0};
Point(142) = {-0.015179, -0.737119, 0, 1.0};
Point(143) = {-0.017643, -0.737444, 0, 1.0};
Point(144) = {-0.020101, -0.737799, 0, 1.0};
Point(145) = {-0.022560, -0.738184, 0, 1.0};
Point(146) = {-0.025020, -0.738598, 0, 1.0};
Point(147) = {-0.027477, -0.739040, 0, 1.0};
Point(148) = {-0.029932, -0.739505, 0, 1.0};
Point(149) = {-0.032387, -0.739990, 0, 1.0};
Point(150) = {-0.034838, -0.740493, 0, 1.0};
Point(151) = {-0.037285, -0.741009, 0, 1.0};
Point(152) = {-0.039733, -0.741531, 0, 1.0};
Point(153) = {-0.042181, -0.742054, 0, 1.0};
Point(154) = {-0.044640, -0.742574, 0, 1.0};
Point(155) = {-0.047112, -0.743087, 0, 1.0};
Point(156) = {-0.049575, -0.743592, 0, 1.0};
Point(157) = {-0.052050, -0.744101, 0, 1.0};
Point(158) = {-0.054546, -0.744627, 0, 1.0};
Point(159) = {-0.057027, -0.745178, 0, 1.0};
Point(160) = {-0.059498, -0.745755, 0, 1.0};
Point(161) = {-0.061956, -0.746358, 0, 1.0};
Point(162) = {-0.064403, -0.746975, 0, 1.0};
Point(163) = {-0.066846, -0.747595, 0, 1.0};
Point(164) = {-0.069288, -0.748218, 0, 1.0};
Point(165) = {-0.071728, -0.748861, 0, 1.0};
Point(166) = {-0.074146, -0.749592, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:55};
Spline(3) = {55:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:111};
Spline(6) = {111:138};
Spline(7) = {138:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
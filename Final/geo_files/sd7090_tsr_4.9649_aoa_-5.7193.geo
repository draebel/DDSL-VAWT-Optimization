SetFactory("OpenCASCADE");

Point(1) = {0.111924, 0.748187, 0, 1.0};
Point(2) = {0.111402, 0.748210, 0, 1.0};
Point(3) = {0.109897, 0.748314, 0, 1.0};
Point(4) = {0.107538, 0.748520, 0, 1.0};
Point(5) = {0.104422, 0.748766, 0, 1.0};
Point(6) = {0.100570, 0.748986, 0, 1.0};
Point(7) = {0.095995, 0.749182, 0, 1.0};
Point(8) = {0.090754, 0.749366, 0, 1.0};
Point(9) = {0.084918, 0.749539, 0, 1.0};
Point(10) = {0.078564, 0.749698, 0, 1.0};
Point(11) = {0.071777, 0.749835, 0, 1.0};
Point(12) = {0.064643, 0.749941, 0, 1.0};
Point(13) = {0.057259, 0.750000, 0, 1.0};
Point(14) = {0.049707, 0.749990, 0, 1.0};
Point(15) = {0.042069, 0.749894, 0, 1.0};
Point(16) = {0.034422, 0.749701, 0, 1.0};
Point(17) = {0.026850, 0.749401, 0, 1.0};
Point(18) = {0.019429, 0.748985, 0, 1.0};
Point(19) = {0.012233, 0.748447, 0, 1.0};
Point(20) = {0.005333, 0.747784, 0, 1.0};
Point(21) = {-0.001208, 0.746994, 0, 1.0};
Point(22) = {-0.007326, 0.746076, 0, 1.0};
Point(23) = {-0.012971, 0.745035, 0, 1.0};
Point(24) = {-0.018099, 0.743879, 0, 1.0};
Point(25) = {-0.022669, 0.742621, 0, 1.0};
Point(26) = {-0.026647, 0.741275, 0, 1.0};
Point(27) = {-0.030013, 0.739862, 0, 1.0};
Point(28) = {-0.032752, 0.738409, 0, 1.0};
Point(29) = {-0.034856, 0.736951, 0, 1.0};
Point(30) = {-0.036319, 0.735538, 0, 1.0};
Point(31) = {-0.037138, 0.734219, 0, 1.0};
Point(32) = {-0.037313, 0.733094, 0, 1.0};
Point(33) = {-0.036711, 0.732194, 0, 1.0};
Point(34) = {-0.035290, 0.731456, 0, 1.0};
Point(35) = {-0.033145, 0.730893, 0, 1.0};
Point(36) = {-0.030260, 0.730537, 0, 1.0};
Point(37) = {-0.026643, 0.730382, 0, 1.0};
Point(38) = {-0.022322, 0.730411, 0, 1.0};
Point(39) = {-0.017343, 0.730617, 0, 1.0};
Point(40) = {-0.011758, 0.730994, 0, 1.0};
Point(41) = {-0.005617, 0.731531, 0, 1.0};
Point(42) = {0.001016, 0.732212, 0, 1.0};
Point(43) = {0.008073, 0.733021, 0, 1.0};
Point(44) = {0.015476, 0.733936, 0, 1.0};
Point(45) = {0.023139, 0.734940, 0, 1.0};
Point(46) = {0.030979, 0.736016, 0, 1.0};
Point(47) = {0.038906, 0.737148, 0, 1.0};
Point(48) = {0.046830, 0.738320, 0, 1.0};
Point(49) = {0.054664, 0.739516, 0, 1.0};
Point(50) = {0.062327, 0.740720, 0, 1.0};
Point(51) = {0.069746, 0.741908, 0, 1.0};
Point(52) = {0.076832, 0.743040, 0, 1.0};
Point(53) = {0.083493, 0.744090, 0, 1.0};
Point(54) = {0.089637, 0.745037, 0, 1.0};
Point(55) = {0.095174, 0.745867, 0, 1.0};
Point(56) = {0.100026, 0.746575, 0, 1.0};
Point(57) = {0.104122, 0.747165, 0, 1.0};
Point(58) = {0.107417, 0.747636, 0, 1.0};
Point(59) = {0.109869, 0.747968, 0, 1.0};
Point(60) = {0.111401, 0.748141, 0, 1.0};
Point(61) = {0.111925, 0.748187, 0, 1.0};
Point(62) = {-0.111924, -0.748187, 0, 1.0};
Point(63) = {-0.111402, -0.748210, 0, 1.0};
Point(64) = {-0.109897, -0.748314, 0, 1.0};
Point(65) = {-0.107538, -0.748520, 0, 1.0};
Point(66) = {-0.104422, -0.748766, 0, 1.0};
Point(67) = {-0.100570, -0.748986, 0, 1.0};
Point(68) = {-0.095995, -0.749182, 0, 1.0};
Point(69) = {-0.090754, -0.749366, 0, 1.0};
Point(70) = {-0.084918, -0.749539, 0, 1.0};
Point(71) = {-0.078564, -0.749698, 0, 1.0};
Point(72) = {-0.071777, -0.749835, 0, 1.0};
Point(73) = {-0.064643, -0.749941, 0, 1.0};
Point(74) = {-0.057259, -0.750000, 0, 1.0};
Point(75) = {-0.049707, -0.749990, 0, 1.0};
Point(76) = {-0.042069, -0.749894, 0, 1.0};
Point(77) = {-0.034422, -0.749701, 0, 1.0};
Point(78) = {-0.026850, -0.749401, 0, 1.0};
Point(79) = {-0.019429, -0.748985, 0, 1.0};
Point(80) = {-0.012233, -0.748447, 0, 1.0};
Point(81) = {-0.005333, -0.747784, 0, 1.0};
Point(82) = {0.001208, -0.746994, 0, 1.0};
Point(83) = {0.007326, -0.746076, 0, 1.0};
Point(84) = {0.012971, -0.745035, 0, 1.0};
Point(85) = {0.018099, -0.743879, 0, 1.0};
Point(86) = {0.022669, -0.742621, 0, 1.0};
Point(87) = {0.026647, -0.741275, 0, 1.0};
Point(88) = {0.030013, -0.739862, 0, 1.0};
Point(89) = {0.032752, -0.738409, 0, 1.0};
Point(90) = {0.034856, -0.736951, 0, 1.0};
Point(91) = {0.036319, -0.735538, 0, 1.0};
Point(92) = {0.037138, -0.734219, 0, 1.0};
Point(93) = {0.037313, -0.733094, 0, 1.0};
Point(94) = {0.036711, -0.732194, 0, 1.0};
Point(95) = {0.035290, -0.731456, 0, 1.0};
Point(96) = {0.033145, -0.730893, 0, 1.0};
Point(97) = {0.030260, -0.730537, 0, 1.0};
Point(98) = {0.026643, -0.730382, 0, 1.0};
Point(99) = {0.022322, -0.730411, 0, 1.0};
Point(100) = {0.017343, -0.730617, 0, 1.0};
Point(101) = {0.011758, -0.730994, 0, 1.0};
Point(102) = {0.005617, -0.731531, 0, 1.0};
Point(103) = {-0.001016, -0.732212, 0, 1.0};
Point(104) = {-0.008073, -0.733021, 0, 1.0};
Point(105) = {-0.015476, -0.733936, 0, 1.0};
Point(106) = {-0.023139, -0.734940, 0, 1.0};
Point(107) = {-0.030979, -0.736016, 0, 1.0};
Point(108) = {-0.038906, -0.737148, 0, 1.0};
Point(109) = {-0.046830, -0.738320, 0, 1.0};
Point(110) = {-0.054664, -0.739516, 0, 1.0};
Point(111) = {-0.062327, -0.740720, 0, 1.0};
Point(112) = {-0.069746, -0.741908, 0, 1.0};
Point(113) = {-0.076832, -0.743040, 0, 1.0};
Point(114) = {-0.083493, -0.744090, 0, 1.0};
Point(115) = {-0.089637, -0.745037, 0, 1.0};
Point(116) = {-0.095174, -0.745867, 0, 1.0};
Point(117) = {-0.100026, -0.746575, 0, 1.0};
Point(118) = {-0.104122, -0.747165, 0, 1.0};
Point(119) = {-0.107417, -0.747636, 0, 1.0};
Point(120) = {-0.109869, -0.747968, 0, 1.0};
Point(121) = {-0.111401, -0.748141, 0, 1.0};
Point(122) = {-0.111925, -0.748187, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
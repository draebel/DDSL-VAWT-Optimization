SetFactory("OpenCASCADE");

Point(1) = {0.149004, 0.747583, 0, 1.0};
Point(2) = {0.148308, 0.747614, 0, 1.0};
Point(3) = {0.146302, 0.747753, 0, 1.0};
Point(4) = {0.143157, 0.748027, 0, 1.0};
Point(5) = {0.139002, 0.748354, 0, 1.0};
Point(6) = {0.133867, 0.748648, 0, 1.0};
Point(7) = {0.127767, 0.748909, 0, 1.0};
Point(8) = {0.120779, 0.749154, 0, 1.0};
Point(9) = {0.112998, 0.749386, 0, 1.0};
Point(10) = {0.104526, 0.749597, 0, 1.0};
Point(11) = {0.095477, 0.749780, 0, 1.0};
Point(12) = {0.085966, 0.749921, 0, 1.0};
Point(13) = {0.076121, 0.750000, 0, 1.0};
Point(14) = {0.066052, 0.749987, 0, 1.0};
Point(15) = {0.055868, 0.749859, 0, 1.0};
Point(16) = {0.045673, 0.749602, 0, 1.0};
Point(17) = {0.035576, 0.749202, 0, 1.0};
Point(18) = {0.025683, 0.748647, 0, 1.0};
Point(19) = {0.016088, 0.747929, 0, 1.0};
Point(20) = {0.006888, 0.747046, 0, 1.0};
Point(21) = {-0.001832, 0.745992, 0, 1.0};
Point(22) = {-0.009989, 0.744769, 0, 1.0};
Point(23) = {-0.017516, 0.743380, 0, 1.0};
Point(24) = {-0.024352, 0.741839, 0, 1.0};
Point(25) = {-0.030445, 0.740161, 0, 1.0};
Point(26) = {-0.035749, 0.738368, 0, 1.0};
Point(27) = {-0.040237, 0.736483, 0, 1.0};
Point(28) = {-0.043889, 0.734546, 0, 1.0};
Point(29) = {-0.046695, 0.732602, 0, 1.0};
Point(30) = {-0.048645, 0.730718, 0, 1.0};
Point(31) = {-0.049737, 0.728959, 0, 1.0};
Point(32) = {-0.049971, 0.727460, 0, 1.0};
Point(33) = {-0.049167, 0.726260, 0, 1.0};
Point(34) = {-0.047274, 0.725276, 0, 1.0};
Point(35) = {-0.044413, 0.724525, 0, 1.0};
Point(36) = {-0.040566, 0.724050, 0, 1.0};
Point(37) = {-0.035744, 0.723844, 0, 1.0};
Point(38) = {-0.029983, 0.723882, 0, 1.0};
Point(39) = {-0.023345, 0.724157, 0, 1.0};
Point(40) = {-0.015898, 0.724660, 0, 1.0};
Point(41) = {-0.007711, 0.725375, 0, 1.0};
Point(42) = {0.001133, 0.726283, 0, 1.0};
Point(43) = {0.010542, 0.727362, 0, 1.0};
Point(44) = {0.020412, 0.728582, 0, 1.0};
Point(45) = {0.030629, 0.729921, 0, 1.0};
Point(46) = {0.041082, 0.731355, 0, 1.0};
Point(47) = {0.051651, 0.732864, 0, 1.0};
Point(48) = {0.062215, 0.734427, 0, 1.0};
Point(49) = {0.072661, 0.736022, 0, 1.0};
Point(50) = {0.082877, 0.737628, 0, 1.0};
Point(51) = {0.092769, 0.739211, 0, 1.0};
Point(52) = {0.102217, 0.740720, 0, 1.0};
Point(53) = {0.111098, 0.742120, 0, 1.0};
Point(54) = {0.119289, 0.743383, 0, 1.0};
Point(55) = {0.126671, 0.744490, 0, 1.0};
Point(56) = {0.133142, 0.745434, 0, 1.0};
Point(57) = {0.138602, 0.746220, 0, 1.0};
Point(58) = {0.142996, 0.746849, 0, 1.0};
Point(59) = {0.146264, 0.747291, 0, 1.0};
Point(60) = {0.148307, 0.747521, 0, 1.0};
Point(61) = {0.149006, 0.747583, 0, 1.0};
Point(62) = {-0.149004, -0.747583, 0, 1.0};
Point(63) = {-0.148308, -0.747614, 0, 1.0};
Point(64) = {-0.146302, -0.747753, 0, 1.0};
Point(65) = {-0.143157, -0.748027, 0, 1.0};
Point(66) = {-0.139002, -0.748354, 0, 1.0};
Point(67) = {-0.133867, -0.748648, 0, 1.0};
Point(68) = {-0.127767, -0.748909, 0, 1.0};
Point(69) = {-0.120779, -0.749154, 0, 1.0};
Point(70) = {-0.112998, -0.749386, 0, 1.0};
Point(71) = {-0.104526, -0.749597, 0, 1.0};
Point(72) = {-0.095477, -0.749780, 0, 1.0};
Point(73) = {-0.085966, -0.749921, 0, 1.0};
Point(74) = {-0.076121, -0.750000, 0, 1.0};
Point(75) = {-0.066052, -0.749987, 0, 1.0};
Point(76) = {-0.055868, -0.749859, 0, 1.0};
Point(77) = {-0.045673, -0.749602, 0, 1.0};
Point(78) = {-0.035576, -0.749202, 0, 1.0};
Point(79) = {-0.025683, -0.748647, 0, 1.0};
Point(80) = {-0.016088, -0.747929, 0, 1.0};
Point(81) = {-0.006888, -0.747046, 0, 1.0};
Point(82) = {0.001832, -0.745992, 0, 1.0};
Point(83) = {0.009989, -0.744769, 0, 1.0};
Point(84) = {0.017516, -0.743380, 0, 1.0};
Point(85) = {0.024352, -0.741839, 0, 1.0};
Point(86) = {0.030445, -0.740161, 0, 1.0};
Point(87) = {0.035749, -0.738368, 0, 1.0};
Point(88) = {0.040237, -0.736483, 0, 1.0};
Point(89) = {0.043889, -0.734546, 0, 1.0};
Point(90) = {0.046695, -0.732602, 0, 1.0};
Point(91) = {0.048645, -0.730718, 0, 1.0};
Point(92) = {0.049737, -0.728959, 0, 1.0};
Point(93) = {0.049971, -0.727460, 0, 1.0};
Point(94) = {0.049167, -0.726260, 0, 1.0};
Point(95) = {0.047274, -0.725276, 0, 1.0};
Point(96) = {0.044413, -0.724525, 0, 1.0};
Point(97) = {0.040566, -0.724050, 0, 1.0};
Point(98) = {0.035744, -0.723844, 0, 1.0};
Point(99) = {0.029983, -0.723882, 0, 1.0};
Point(100) = {0.023345, -0.724157, 0, 1.0};
Point(101) = {0.015898, -0.724660, 0, 1.0};
Point(102) = {0.007711, -0.725375, 0, 1.0};
Point(103) = {-0.001133, -0.726283, 0, 1.0};
Point(104) = {-0.010542, -0.727362, 0, 1.0};
Point(105) = {-0.020412, -0.728582, 0, 1.0};
Point(106) = {-0.030629, -0.729921, 0, 1.0};
Point(107) = {-0.041082, -0.731355, 0, 1.0};
Point(108) = {-0.051651, -0.732864, 0, 1.0};
Point(109) = {-0.062215, -0.734427, 0, 1.0};
Point(110) = {-0.072661, -0.736022, 0, 1.0};
Point(111) = {-0.082877, -0.737628, 0, 1.0};
Point(112) = {-0.092769, -0.739211, 0, 1.0};
Point(113) = {-0.102217, -0.740720, 0, 1.0};
Point(114) = {-0.111098, -0.742120, 0, 1.0};
Point(115) = {-0.119289, -0.743383, 0, 1.0};
Point(116) = {-0.126671, -0.744490, 0, 1.0};
Point(117) = {-0.133142, -0.745434, 0, 1.0};
Point(118) = {-0.138602, -0.746220, 0, 1.0};
Point(119) = {-0.142996, -0.746849, 0, 1.0};
Point(120) = {-0.146264, -0.747291, 0, 1.0};
Point(121) = {-0.148307, -0.747521, 0, 1.0};
Point(122) = {-0.149006, -0.747583, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
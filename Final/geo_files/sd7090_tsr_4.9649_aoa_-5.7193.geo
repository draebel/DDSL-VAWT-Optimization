SetFactory("OpenCASCADE");

Point(1) = {0.074502, 0.748792, 0, 1.0};
Point(2) = {0.074154, 0.748807, 0, 1.0};
Point(3) = {0.073151, 0.748876, 0, 1.0};
Point(4) = {0.071579, 0.749013, 0, 1.0};
Point(5) = {0.069501, 0.749177, 0, 1.0};
Point(6) = {0.066933, 0.749324, 0, 1.0};
Point(7) = {0.063883, 0.749455, 0, 1.0};
Point(8) = {0.060390, 0.749577, 0, 1.0};
Point(9) = {0.056499, 0.749693, 0, 1.0};
Point(10) = {0.052263, 0.749798, 0, 1.0};
Point(11) = {0.047739, 0.749890, 0, 1.0};
Point(12) = {0.042983, 0.749960, 0, 1.0};
Point(13) = {0.038060, 0.750000, 0, 1.0};
Point(14) = {0.033026, 0.749993, 0, 1.0};
Point(15) = {0.027934, 0.749930, 0, 1.0};
Point(16) = {0.022836, 0.749801, 0, 1.0};
Point(17) = {0.017788, 0.749601, 0, 1.0};
Point(18) = {0.012841, 0.749323, 0, 1.0};
Point(19) = {0.008044, 0.748965, 0, 1.0};
Point(20) = {0.003444, 0.748523, 0, 1.0};
Point(21) = {-0.000916, 0.747996, 0, 1.0};
Point(22) = {-0.004994, 0.747384, 0, 1.0};
Point(23) = {-0.008758, 0.746690, 0, 1.0};
Point(24) = {-0.012176, 0.745919, 0, 1.0};
Point(25) = {-0.015223, 0.745081, 0, 1.0};
Point(26) = {-0.017874, 0.744184, 0, 1.0};
Point(27) = {-0.020119, 0.743242, 0, 1.0};
Point(28) = {-0.021944, 0.742273, 0, 1.0};
Point(29) = {-0.023347, 0.741301, 0, 1.0};
Point(30) = {-0.024322, 0.740359, 0, 1.0};
Point(31) = {-0.024868, 0.739479, 0, 1.0};
Point(32) = {-0.024985, 0.738730, 0, 1.0};
Point(33) = {-0.024584, 0.738130, 0, 1.0};
Point(34) = {-0.023637, 0.737638, 0, 1.0};
Point(35) = {-0.022206, 0.737263, 0, 1.0};
Point(36) = {-0.020283, 0.737025, 0, 1.0};
Point(37) = {-0.017872, 0.736922, 0, 1.0};
Point(38) = {-0.014991, 0.736941, 0, 1.0};
Point(39) = {-0.011673, 0.737079, 0, 1.0};
Point(40) = {-0.007949, 0.737330, 0, 1.0};
Point(41) = {-0.003855, 0.737688, 0, 1.0};
Point(42) = {0.000566, 0.738142, 0, 1.0};
Point(43) = {0.005271, 0.738681, 0, 1.0};
Point(44) = {0.010206, 0.739291, 0, 1.0};
Point(45) = {0.015315, 0.739960, 0, 1.0};
Point(46) = {0.020541, 0.740678, 0, 1.0};
Point(47) = {0.025825, 0.741432, 0, 1.0};
Point(48) = {0.031108, 0.742213, 0, 1.0};
Point(49) = {0.036330, 0.743011, 0, 1.0};
Point(50) = {0.041439, 0.743814, 0, 1.0};
Point(51) = {0.046384, 0.744606, 0, 1.0};
Point(52) = {0.051109, 0.745360, 0, 1.0};
Point(53) = {0.055549, 0.746060, 0, 1.0};
Point(54) = {0.059645, 0.746692, 0, 1.0};
Point(55) = {0.063336, 0.747245, 0, 1.0};
Point(56) = {0.066571, 0.747717, 0, 1.0};
Point(57) = {0.069301, 0.748110, 0, 1.0};
Point(58) = {0.071498, 0.748424, 0, 1.0};
Point(59) = {0.073132, 0.748645, 0, 1.0};
Point(60) = {0.074154, 0.748761, 0, 1.0};
Point(61) = {0.074503, 0.748792, 0, 1.0};
Point(62) = {-0.074502, -0.748792, 0, 1.0};
Point(63) = {-0.074154, -0.748807, 0, 1.0};
Point(64) = {-0.073151, -0.748876, 0, 1.0};
Point(65) = {-0.071579, -0.749013, 0, 1.0};
Point(66) = {-0.069501, -0.749177, 0, 1.0};
Point(67) = {-0.066933, -0.749324, 0, 1.0};
Point(68) = {-0.063883, -0.749455, 0, 1.0};
Point(69) = {-0.060390, -0.749577, 0, 1.0};
Point(70) = {-0.056499, -0.749693, 0, 1.0};
Point(71) = {-0.052263, -0.749798, 0, 1.0};
Point(72) = {-0.047739, -0.749890, 0, 1.0};
Point(73) = {-0.042983, -0.749960, 0, 1.0};
Point(74) = {-0.038060, -0.750000, 0, 1.0};
Point(75) = {-0.033026, -0.749993, 0, 1.0};
Point(76) = {-0.027934, -0.749930, 0, 1.0};
Point(77) = {-0.022836, -0.749801, 0, 1.0};
Point(78) = {-0.017788, -0.749601, 0, 1.0};
Point(79) = {-0.012841, -0.749323, 0, 1.0};
Point(80) = {-0.008044, -0.748965, 0, 1.0};
Point(81) = {-0.003444, -0.748523, 0, 1.0};
Point(82) = {0.000916, -0.747996, 0, 1.0};
Point(83) = {0.004994, -0.747384, 0, 1.0};
Point(84) = {0.008758, -0.746690, 0, 1.0};
Point(85) = {0.012176, -0.745919, 0, 1.0};
Point(86) = {0.015223, -0.745081, 0, 1.0};
Point(87) = {0.017874, -0.744184, 0, 1.0};
Point(88) = {0.020119, -0.743242, 0, 1.0};
Point(89) = {0.021944, -0.742273, 0, 1.0};
Point(90) = {0.023347, -0.741301, 0, 1.0};
Point(91) = {0.024322, -0.740359, 0, 1.0};
Point(92) = {0.024868, -0.739479, 0, 1.0};
Point(93) = {0.024985, -0.738730, 0, 1.0};
Point(94) = {0.024584, -0.738130, 0, 1.0};
Point(95) = {0.023637, -0.737638, 0, 1.0};
Point(96) = {0.022206, -0.737263, 0, 1.0};
Point(97) = {0.020283, -0.737025, 0, 1.0};
Point(98) = {0.017872, -0.736922, 0, 1.0};
Point(99) = {0.014991, -0.736941, 0, 1.0};
Point(100) = {0.011673, -0.737079, 0, 1.0};
Point(101) = {0.007949, -0.737330, 0, 1.0};
Point(102) = {0.003855, -0.737688, 0, 1.0};
Point(103) = {-0.000566, -0.738142, 0, 1.0};
Point(104) = {-0.005271, -0.738681, 0, 1.0};
Point(105) = {-0.010206, -0.739291, 0, 1.0};
Point(106) = {-0.015315, -0.739960, 0, 1.0};
Point(107) = {-0.020541, -0.740678, 0, 1.0};
Point(108) = {-0.025825, -0.741432, 0, 1.0};
Point(109) = {-0.031108, -0.742213, 0, 1.0};
Point(110) = {-0.036330, -0.743011, 0, 1.0};
Point(111) = {-0.041439, -0.743814, 0, 1.0};
Point(112) = {-0.046384, -0.744606, 0, 1.0};
Point(113) = {-0.051109, -0.745360, 0, 1.0};
Point(114) = {-0.055549, -0.746060, 0, 1.0};
Point(115) = {-0.059645, -0.746692, 0, 1.0};
Point(116) = {-0.063336, -0.747245, 0, 1.0};
Point(117) = {-0.066571, -0.747717, 0, 1.0};
Point(118) = {-0.069301, -0.748110, 0, 1.0};
Point(119) = {-0.071498, -0.748424, 0, 1.0};
Point(120) = {-0.073132, -0.748645, 0, 1.0};
Point(121) = {-0.074154, -0.748761, 0, 1.0};
Point(122) = {-0.074503, -0.748792, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
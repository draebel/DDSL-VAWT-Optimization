SetFactory("OpenCASCADE");

Point(1) = {0.074728, 0.727144, 0, 1.0};
Point(2) = {0.074419, 0.727216, 0, 1.0};
Point(3) = {0.073534, 0.727462, 0, 1.0};
Point(4) = {0.072141, 0.727897, 0, 1.0};
Point(5) = {0.070293, 0.728493, 0, 1.0};
Point(6) = {0.068004, 0.729219, 0, 1.0};
Point(7) = {0.065285, 0.730075, 0, 1.0};
Point(8) = {0.062168, 0.731063, 0, 1.0};
Point(9) = {0.058692, 0.732173, 0, 1.0};
Point(10) = {0.054892, 0.733391, 0, 1.0};
Point(11) = {0.050811, 0.734700, 0, 1.0};
Point(12) = {0.046483, 0.736079, 0, 1.0};
Point(13) = {0.041951, 0.737500, 0, 1.0};
Point(14) = {0.037244, 0.738921, 0, 1.0};
Point(15) = {0.032378, 0.740318, 0, 1.0};
Point(16) = {0.027379, 0.741679, 0, 1.0};
Point(17) = {0.022272, 0.742972, 0, 1.0};
Point(18) = {0.017069, 0.744183, 0, 1.0};
Point(19) = {0.011805, 0.745303, 0, 1.0};
Point(20) = {0.006493, 0.746309, 0, 1.0};
Point(21) = {0.001148, 0.747204, 0, 1.0};
Point(22) = {-0.004198, 0.747975, 0, 1.0};
Point(23) = {-0.009525, 0.748618, 0, 1.0};
Point(24) = {-0.014811, 0.749141, 0, 1.0};
Point(25) = {-0.020028, 0.749536, 0, 1.0};
Point(26) = {-0.025153, 0.749807, 0, 1.0};
Point(27) = {-0.030157, 0.749961, 0, 1.0};
Point(28) = {-0.035012, 0.750000, 0, 1.0};
Point(29) = {-0.039692, 0.749929, 0, 1.0};
Point(30) = {-0.044169, 0.749751, 0, 1.0};
Point(31) = {-0.048417, 0.749470, 0, 1.0};
Point(32) = {-0.052413, 0.749093, 0, 1.0};
Point(33) = {-0.056135, 0.748625, 0, 1.0};
Point(34) = {-0.059565, 0.748071, 0, 1.0};
Point(35) = {-0.062679, 0.747444, 0, 1.0};
Point(36) = {-0.065465, 0.746748, 0, 1.0};
Point(37) = {-0.067909, 0.745998, 0, 1.0};
Point(38) = {-0.069993, 0.745205, 0, 1.0};
Point(39) = {-0.071709, 0.744381, 0, 1.0};
Point(40) = {-0.073037, 0.743550, 0, 1.0};
Point(41) = {-0.073970, 0.742708, 0, 1.0};
Point(42) = {-0.074522, 0.741882, 0, 1.0};
Point(43) = {-0.074619, 0.741163, 0, 1.0};
Point(44) = {-0.074203, 0.740466, 0, 1.0};
Point(45) = {-0.073344, 0.739711, 0, 1.0};
Point(46) = {-0.072076, 0.738992, 0, 1.0};
Point(47) = {-0.070348, 0.738330, 0, 1.0};
Point(48) = {-0.068145, 0.737697, 0, 1.0};
Point(49) = {-0.065495, 0.737068, 0, 1.0};
Point(50) = {-0.062420, 0.736443, 0, 1.0};
Point(51) = {-0.058942, 0.735825, 0, 1.0};
Point(52) = {-0.055086, 0.735210, 0, 1.0};
Point(53) = {-0.050879, 0.734600, 0, 1.0};
Point(54) = {-0.046353, 0.733998, 0, 1.0};
Point(55) = {-0.041541, 0.733407, 0, 1.0};
Point(56) = {-0.036486, 0.732837, 0, 1.0};
Point(57) = {-0.031224, 0.732306, 0, 1.0};
Point(58) = {-0.025773, 0.731861, 0, 1.0};
Point(59) = {-0.020108, 0.731499, 0, 1.0};
Point(60) = {-0.014226, 0.731171, 0, 1.0};
Point(61) = {-0.008193, 0.730815, 0, 1.0};
Point(62) = {-0.002095, 0.730429, 0, 1.0};
Point(63) = {0.004017, 0.730042, 0, 1.0};
Point(64) = {0.010108, 0.729660, 0, 1.0};
Point(65) = {0.016138, 0.729287, 0, 1.0};
Point(66) = {0.022068, 0.728919, 0, 1.0};
Point(67) = {0.027857, 0.728560, 0, 1.0};
Point(68) = {0.033462, 0.728210, 0, 1.0};
Point(69) = {0.038846, 0.727872, 0, 1.0};
Point(70) = {0.043968, 0.727550, 0, 1.0};
Point(71) = {0.048791, 0.727256, 0, 1.0};
Point(72) = {0.053295, 0.726990, 0, 1.0};
Point(73) = {0.057457, 0.726746, 0, 1.0};
Point(74) = {0.061236, 0.726511, 0, 1.0};
Point(75) = {0.064592, 0.726293, 0, 1.0};
Point(76) = {0.067493, 0.726099, 0, 1.0};
Point(77) = {0.069915, 0.725952, 0, 1.0};
Point(78) = {0.071868, 0.725855, 0, 1.0};
Point(79) = {0.073336, 0.725775, 0, 1.0};
Point(80) = {0.074260, 0.725693, 0, 1.0};
Point(81) = {0.074577, 0.725651, 0, 1.0};
Point(82) = {-0.074728, -0.727144, 0, 1.0};
Point(83) = {-0.074419, -0.727216, 0, 1.0};
Point(84) = {-0.073534, -0.727462, 0, 1.0};
Point(85) = {-0.072141, -0.727897, 0, 1.0};
Point(86) = {-0.070293, -0.728493, 0, 1.0};
Point(87) = {-0.068004, -0.729219, 0, 1.0};
Point(88) = {-0.065285, -0.730075, 0, 1.0};
Point(89) = {-0.062168, -0.731063, 0, 1.0};
Point(90) = {-0.058692, -0.732173, 0, 1.0};
Point(91) = {-0.054892, -0.733391, 0, 1.0};
Point(92) = {-0.050811, -0.734700, 0, 1.0};
Point(93) = {-0.046483, -0.736079, 0, 1.0};
Point(94) = {-0.041951, -0.737500, 0, 1.0};
Point(95) = {-0.037244, -0.738921, 0, 1.0};
Point(96) = {-0.032378, -0.740318, 0, 1.0};
Point(97) = {-0.027379, -0.741679, 0, 1.0};
Point(98) = {-0.022272, -0.742972, 0, 1.0};
Point(99) = {-0.017069, -0.744183, 0, 1.0};
Point(100) = {-0.011805, -0.745303, 0, 1.0};
Point(101) = {-0.006493, -0.746309, 0, 1.0};
Point(102) = {-0.001148, -0.747204, 0, 1.0};
Point(103) = {0.004198, -0.747975, 0, 1.0};
Point(104) = {0.009525, -0.748618, 0, 1.0};
Point(105) = {0.014811, -0.749141, 0, 1.0};
Point(106) = {0.020028, -0.749536, 0, 1.0};
Point(107) = {0.025153, -0.749807, 0, 1.0};
Point(108) = {0.030157, -0.749961, 0, 1.0};
Point(109) = {0.035012, -0.750000, 0, 1.0};
Point(110) = {0.039692, -0.749929, 0, 1.0};
Point(111) = {0.044169, -0.749751, 0, 1.0};
Point(112) = {0.048417, -0.749470, 0, 1.0};
Point(113) = {0.052413, -0.749093, 0, 1.0};
Point(114) = {0.056135, -0.748625, 0, 1.0};
Point(115) = {0.059565, -0.748071, 0, 1.0};
Point(116) = {0.062679, -0.747444, 0, 1.0};
Point(117) = {0.065465, -0.746748, 0, 1.0};
Point(118) = {0.067909, -0.745998, 0, 1.0};
Point(119) = {0.069993, -0.745205, 0, 1.0};
Point(120) = {0.071709, -0.744381, 0, 1.0};
Point(121) = {0.073037, -0.743550, 0, 1.0};
Point(122) = {0.073970, -0.742708, 0, 1.0};
Point(123) = {0.074522, -0.741882, 0, 1.0};
Point(124) = {0.074619, -0.741163, 0, 1.0};
Point(125) = {0.074203, -0.740466, 0, 1.0};
Point(126) = {0.073344, -0.739711, 0, 1.0};
Point(127) = {0.072076, -0.738992, 0, 1.0};
Point(128) = {0.070348, -0.738330, 0, 1.0};
Point(129) = {0.068145, -0.737697, 0, 1.0};
Point(130) = {0.065495, -0.737068, 0, 1.0};
Point(131) = {0.062420, -0.736443, 0, 1.0};
Point(132) = {0.058942, -0.735825, 0, 1.0};
Point(133) = {0.055086, -0.735210, 0, 1.0};
Point(134) = {0.050879, -0.734600, 0, 1.0};
Point(135) = {0.046353, -0.733998, 0, 1.0};
Point(136) = {0.041541, -0.733407, 0, 1.0};
Point(137) = {0.036486, -0.732837, 0, 1.0};
Point(138) = {0.031224, -0.732306, 0, 1.0};
Point(139) = {0.025773, -0.731861, 0, 1.0};
Point(140) = {0.020108, -0.731499, 0, 1.0};
Point(141) = {0.014226, -0.731171, 0, 1.0};
Point(142) = {0.008193, -0.730815, 0, 1.0};
Point(143) = {0.002095, -0.730429, 0, 1.0};
Point(144) = {-0.004017, -0.730042, 0, 1.0};
Point(145) = {-0.010108, -0.729660, 0, 1.0};
Point(146) = {-0.016138, -0.729287, 0, 1.0};
Point(147) = {-0.022068, -0.728919, 0, 1.0};
Point(148) = {-0.027857, -0.728560, 0, 1.0};
Point(149) = {-0.033462, -0.728210, 0, 1.0};
Point(150) = {-0.038846, -0.727872, 0, 1.0};
Point(151) = {-0.043968, -0.727550, 0, 1.0};
Point(152) = {-0.048791, -0.727256, 0, 1.0};
Point(153) = {-0.053295, -0.726990, 0, 1.0};
Point(154) = {-0.057457, -0.726746, 0, 1.0};
Point(155) = {-0.061236, -0.726511, 0, 1.0};
Point(156) = {-0.064592, -0.726293, 0, 1.0};
Point(157) = {-0.067493, -0.726099, 0, 1.0};
Point(158) = {-0.069915, -0.725952, 0, 1.0};
Point(159) = {-0.071868, -0.725855, 0, 1.0};
Point(160) = {-0.073336, -0.725775, 0, 1.0};
Point(161) = {-0.074260, -0.725693, 0, 1.0};
Point(162) = {-0.074577, -0.725651, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {36.00000000, 15.00000000, 0, 1.0};
Point(166) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
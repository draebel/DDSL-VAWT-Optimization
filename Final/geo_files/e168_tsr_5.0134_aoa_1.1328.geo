SetFactory("OpenCASCADE");

Point(1) = {0.112471, 0.738438, 0, 1.0};
Point(2) = {0.111945, 0.738480, 0, 1.0};
Point(3) = {0.110421, 0.738640, 0, 1.0};
Point(4) = {0.108007, 0.738932, 0, 1.0};
Point(5) = {0.104769, 0.739304, 0, 1.0};
Point(6) = {0.100713, 0.739729, 0, 1.0};
Point(7) = {0.095874, 0.740235, 0, 1.0};
Point(8) = {0.090329, 0.740835, 0, 1.0};
Point(9) = {0.084161, 0.741534, 0, 1.0};
Point(10) = {0.077465, 0.742325, 0, 1.0};
Point(11) = {0.070337, 0.743194, 0, 1.0};
Point(12) = {0.062880, 0.744122, 0, 1.0};
Point(13) = {0.055195, 0.745081, 0, 1.0};
Point(14) = {0.047382, 0.746042, 0, 1.0};
Point(15) = {0.039538, 0.746973, 0, 1.0};
Point(16) = {0.031753, 0.747835, 0, 1.0};
Point(17) = {0.024112, 0.748595, 0, 1.0};
Point(18) = {0.016694, 0.749219, 0, 1.0};
Point(19) = {0.009566, 0.749675, 0, 1.0};
Point(20) = {0.002785, 0.749940, 0, 1.0};
Point(21) = {-0.003596, 0.750000, 0, 1.0};
Point(22) = {-0.009524, 0.749844, 0, 1.0};
Point(23) = {-0.014964, 0.749467, 0, 1.0};
Point(24) = {-0.019887, 0.748873, 0, 1.0};
Point(25) = {-0.024270, 0.748083, 0, 1.0};
Point(26) = {-0.028088, 0.747134, 0, 1.0};
Point(27) = {-0.031303, 0.746062, 0, 1.0};
Point(28) = {-0.033886, 0.744902, 0, 1.0};
Point(29) = {-0.035812, 0.743695, 0, 1.0};
Point(30) = {-0.037048, 0.742494, 0, 1.0};
Point(31) = {-0.037500, 0.741403, 0, 1.0};
Point(32) = {-0.037091, 0.740295, 0, 1.0};
Point(33) = {-0.035904, 0.739046, 0, 1.0};
Point(34) = {-0.034027, 0.737764, 0, 1.0};
Point(35) = {-0.031492, 0.736503, 0, 1.0};
Point(36) = {-0.028322, 0.735304, 0, 1.0};
Point(37) = {-0.024545, 0.734205, 0, 1.0};
Point(38) = {-0.020196, 0.733243, 0, 1.0};
Point(39) = {-0.015300, 0.732454, 0, 1.0};
Point(40) = {-0.009879, 0.731863, 0, 1.0};
Point(41) = {-0.003962, 0.731473, 0, 1.0};
Point(42) = {0.002416, 0.731280, 0, 1.0};
Point(43) = {0.009202, 0.731277, 0, 1.0};
Point(44) = {0.016342, 0.731451, 0, 1.0};
Point(45) = {0.023780, 0.731781, 0, 1.0};
Point(46) = {0.031445, 0.732238, 0, 1.0};
Point(47) = {0.039257, 0.732792, 0, 1.0};
Point(48) = {0.047133, 0.733412, 0, 1.0};
Point(49) = {0.054977, 0.734064, 0, 1.0};
Point(50) = {0.062694, 0.734718, 0, 1.0};
Point(51) = {0.070182, 0.735351, 0, 1.0};
Point(52) = {0.077338, 0.735937, 0, 1.0};
Point(53) = {0.084061, 0.736462, 0, 1.0};
Point(54) = {0.090251, 0.736918, 0, 1.0};
Point(55) = {0.095816, 0.737298, 0, 1.0};
Point(56) = {0.100671, 0.737612, 0, 1.0};
Point(57) = {0.104741, 0.737876, 0, 1.0};
Point(58) = {0.107991, 0.738120, 0, 1.0};
Point(59) = {0.110414, 0.738316, 0, 1.0};
Point(60) = {0.111944, 0.738417, 0, 1.0};
Point(61) = {-0.112471, -0.738438, 0, 1.0};
Point(62) = {-0.111945, -0.738480, 0, 1.0};
Point(63) = {-0.110421, -0.738640, 0, 1.0};
Point(64) = {-0.108007, -0.738932, 0, 1.0};
Point(65) = {-0.104769, -0.739304, 0, 1.0};
Point(66) = {-0.100713, -0.739729, 0, 1.0};
Point(67) = {-0.095874, -0.740235, 0, 1.0};
Point(68) = {-0.090329, -0.740835, 0, 1.0};
Point(69) = {-0.084161, -0.741534, 0, 1.0};
Point(70) = {-0.077465, -0.742325, 0, 1.0};
Point(71) = {-0.070337, -0.743194, 0, 1.0};
Point(72) = {-0.062880, -0.744122, 0, 1.0};
Point(73) = {-0.055195, -0.745081, 0, 1.0};
Point(74) = {-0.047382, -0.746042, 0, 1.0};
Point(75) = {-0.039538, -0.746973, 0, 1.0};
Point(76) = {-0.031753, -0.747835, 0, 1.0};
Point(77) = {-0.024112, -0.748595, 0, 1.0};
Point(78) = {-0.016694, -0.749219, 0, 1.0};
Point(79) = {-0.009566, -0.749675, 0, 1.0};
Point(80) = {-0.002785, -0.749940, 0, 1.0};
Point(81) = {0.003596, -0.750000, 0, 1.0};
Point(82) = {0.009524, -0.749844, 0, 1.0};
Point(83) = {0.014964, -0.749467, 0, 1.0};
Point(84) = {0.019887, -0.748873, 0, 1.0};
Point(85) = {0.024270, -0.748083, 0, 1.0};
Point(86) = {0.028088, -0.747134, 0, 1.0};
Point(87) = {0.031303, -0.746062, 0, 1.0};
Point(88) = {0.033886, -0.744902, 0, 1.0};
Point(89) = {0.035812, -0.743695, 0, 1.0};
Point(90) = {0.037048, -0.742494, 0, 1.0};
Point(91) = {0.037500, -0.741403, 0, 1.0};
Point(92) = {0.037091, -0.740295, 0, 1.0};
Point(93) = {0.035904, -0.739046, 0, 1.0};
Point(94) = {0.034027, -0.737764, 0, 1.0};
Point(95) = {0.031492, -0.736503, 0, 1.0};
Point(96) = {0.028322, -0.735304, 0, 1.0};
Point(97) = {0.024545, -0.734205, 0, 1.0};
Point(98) = {0.020196, -0.733243, 0, 1.0};
Point(99) = {0.015300, -0.732454, 0, 1.0};
Point(100) = {0.009879, -0.731863, 0, 1.0};
Point(101) = {0.003962, -0.731473, 0, 1.0};
Point(102) = {-0.002416, -0.731280, 0, 1.0};
Point(103) = {-0.009202, -0.731277, 0, 1.0};
Point(104) = {-0.016342, -0.731451, 0, 1.0};
Point(105) = {-0.023780, -0.731781, 0, 1.0};
Point(106) = {-0.031445, -0.732238, 0, 1.0};
Point(107) = {-0.039257, -0.732792, 0, 1.0};
Point(108) = {-0.047133, -0.733412, 0, 1.0};
Point(109) = {-0.054977, -0.734064, 0, 1.0};
Point(110) = {-0.062694, -0.734718, 0, 1.0};
Point(111) = {-0.070182, -0.735351, 0, 1.0};
Point(112) = {-0.077338, -0.735937, 0, 1.0};
Point(113) = {-0.084061, -0.736462, 0, 1.0};
Point(114) = {-0.090251, -0.736918, 0, 1.0};
Point(115) = {-0.095816, -0.737298, 0, 1.0};
Point(116) = {-0.100671, -0.737612, 0, 1.0};
Point(117) = {-0.104741, -0.737876, 0, 1.0};
Point(118) = {-0.107991, -0.738120, 0, 1.0};
Point(119) = {-0.110414, -0.738316, 0, 1.0};
Point(120) = {-0.111944, -0.738417, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149961, 0.734583, 0, 1.0};
Point(2) = {0.149260, 0.734639, 0, 1.0};
Point(3) = {0.147228, 0.734854, 0, 1.0};
Point(4) = {0.144009, 0.735243, 0, 1.0};
Point(5) = {0.139692, 0.735739, 0, 1.0};
Point(6) = {0.134284, 0.736306, 0, 1.0};
Point(7) = {0.127832, 0.736979, 0, 1.0};
Point(8) = {0.120438, 0.737780, 0, 1.0};
Point(9) = {0.112215, 0.738713, 0, 1.0};
Point(10) = {0.103286, 0.739767, 0, 1.0};
Point(11) = {0.093783, 0.740925, 0, 1.0};
Point(12) = {0.083840, 0.742162, 0, 1.0};
Point(13) = {0.073593, 0.743441, 0, 1.0};
Point(14) = {0.063176, 0.744723, 0, 1.0};
Point(15) = {0.052717, 0.745964, 0, 1.0};
Point(16) = {0.042338, 0.747114, 0, 1.0};
Point(17) = {0.032150, 0.748127, 0, 1.0};
Point(18) = {0.022258, 0.748959, 0, 1.0};
Point(19) = {0.012754, 0.749567, 0, 1.0};
Point(20) = {0.003714, 0.749920, 0, 1.0};
Point(21) = {-0.004795, 0.750000, 0, 1.0};
Point(22) = {-0.012698, 0.749792, 0, 1.0};
Point(23) = {-0.019952, 0.749290, 0, 1.0};
Point(24) = {-0.026517, 0.748497, 0, 1.0};
Point(25) = {-0.032360, 0.747444, 0, 1.0};
Point(26) = {-0.037450, 0.746179, 0, 1.0};
Point(27) = {-0.041738, 0.744749, 0, 1.0};
Point(28) = {-0.045181, 0.743203, 0, 1.0};
Point(29) = {-0.047749, 0.741594, 0, 1.0};
Point(30) = {-0.049397, 0.739992, 0, 1.0};
Point(31) = {-0.050000, 0.738537, 0, 1.0};
Point(32) = {-0.049455, 0.737060, 0, 1.0};
Point(33) = {-0.047872, 0.735395, 0, 1.0};
Point(34) = {-0.045369, 0.733685, 0, 1.0};
Point(35) = {-0.041990, 0.732004, 0, 1.0};
Point(36) = {-0.037762, 0.730406, 0, 1.0};
Point(37) = {-0.032726, 0.728940, 0, 1.0};
Point(38) = {-0.026929, 0.727657, 0, 1.0};
Point(39) = {-0.020400, 0.726606, 0, 1.0};
Point(40) = {-0.013172, 0.725817, 0, 1.0};
Point(41) = {-0.005283, 0.725297, 0, 1.0};
Point(42) = {0.003222, 0.725041, 0, 1.0};
Point(43) = {0.012269, 0.725036, 0, 1.0};
Point(44) = {0.021790, 0.725268, 0, 1.0};
Point(45) = {0.031706, 0.725708, 0, 1.0};
Point(46) = {0.041926, 0.726318, 0, 1.0};
Point(47) = {0.052343, 0.727056, 0, 1.0};
Point(48) = {0.062843, 0.727882, 0, 1.0};
Point(49) = {0.073303, 0.728752, 0, 1.0};
Point(50) = {0.083592, 0.729625, 0, 1.0};
Point(51) = {0.093577, 0.730467, 0, 1.0};
Point(52) = {0.103118, 0.731249, 0, 1.0};
Point(53) = {0.112081, 0.731950, 0, 1.0};
Point(54) = {0.120335, 0.732557, 0, 1.0};
Point(55) = {0.127755, 0.733064, 0, 1.0};
Point(56) = {0.134228, 0.733482, 0, 1.0};
Point(57) = {0.139654, 0.733835, 0, 1.0};
Point(58) = {0.143987, 0.734159, 0, 1.0};
Point(59) = {0.147219, 0.734422, 0, 1.0};
Point(60) = {0.149258, 0.734555, 0, 1.0};
Point(61) = {-0.149961, -0.734583, 0, 1.0};
Point(62) = {-0.149260, -0.734639, 0, 1.0};
Point(63) = {-0.147228, -0.734854, 0, 1.0};
Point(64) = {-0.144009, -0.735243, 0, 1.0};
Point(65) = {-0.139692, -0.735739, 0, 1.0};
Point(66) = {-0.134284, -0.736306, 0, 1.0};
Point(67) = {-0.127832, -0.736979, 0, 1.0};
Point(68) = {-0.120438, -0.737780, 0, 1.0};
Point(69) = {-0.112215, -0.738713, 0, 1.0};
Point(70) = {-0.103286, -0.739767, 0, 1.0};
Point(71) = {-0.093783, -0.740925, 0, 1.0};
Point(72) = {-0.083840, -0.742162, 0, 1.0};
Point(73) = {-0.073593, -0.743441, 0, 1.0};
Point(74) = {-0.063176, -0.744723, 0, 1.0};
Point(75) = {-0.052717, -0.745964, 0, 1.0};
Point(76) = {-0.042338, -0.747114, 0, 1.0};
Point(77) = {-0.032150, -0.748127, 0, 1.0};
Point(78) = {-0.022258, -0.748959, 0, 1.0};
Point(79) = {-0.012754, -0.749567, 0, 1.0};
Point(80) = {-0.003714, -0.749920, 0, 1.0};
Point(81) = {0.004795, -0.750000, 0, 1.0};
Point(82) = {0.012698, -0.749792, 0, 1.0};
Point(83) = {0.019952, -0.749290, 0, 1.0};
Point(84) = {0.026517, -0.748497, 0, 1.0};
Point(85) = {0.032360, -0.747444, 0, 1.0};
Point(86) = {0.037450, -0.746179, 0, 1.0};
Point(87) = {0.041738, -0.744749, 0, 1.0};
Point(88) = {0.045181, -0.743203, 0, 1.0};
Point(89) = {0.047749, -0.741594, 0, 1.0};
Point(90) = {0.049397, -0.739992, 0, 1.0};
Point(91) = {0.050000, -0.738537, 0, 1.0};
Point(92) = {0.049455, -0.737060, 0, 1.0};
Point(93) = {0.047872, -0.735395, 0, 1.0};
Point(94) = {0.045369, -0.733685, 0, 1.0};
Point(95) = {0.041990, -0.732004, 0, 1.0};
Point(96) = {0.037762, -0.730406, 0, 1.0};
Point(97) = {0.032726, -0.728940, 0, 1.0};
Point(98) = {0.026929, -0.727657, 0, 1.0};
Point(99) = {0.020400, -0.726606, 0, 1.0};
Point(100) = {0.013172, -0.725817, 0, 1.0};
Point(101) = {0.005283, -0.725297, 0, 1.0};
Point(102) = {-0.003222, -0.725041, 0, 1.0};
Point(103) = {-0.012269, -0.725036, 0, 1.0};
Point(104) = {-0.021790, -0.725268, 0, 1.0};
Point(105) = {-0.031706, -0.725708, 0, 1.0};
Point(106) = {-0.041926, -0.726318, 0, 1.0};
Point(107) = {-0.052343, -0.727056, 0, 1.0};
Point(108) = {-0.062843, -0.727882, 0, 1.0};
Point(109) = {-0.073303, -0.728752, 0, 1.0};
Point(110) = {-0.083592, -0.729625, 0, 1.0};
Point(111) = {-0.093577, -0.730467, 0, 1.0};
Point(112) = {-0.103118, -0.731249, 0, 1.0};
Point(113) = {-0.112081, -0.731950, 0, 1.0};
Point(114) = {-0.120335, -0.732557, 0, 1.0};
Point(115) = {-0.127755, -0.733064, 0, 1.0};
Point(116) = {-0.134228, -0.733482, 0, 1.0};
Point(117) = {-0.139654, -0.733835, 0, 1.0};
Point(118) = {-0.143987, -0.734159, 0, 1.0};
Point(119) = {-0.147219, -0.734422, 0, 1.0};
Point(120) = {-0.149258, -0.734555, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
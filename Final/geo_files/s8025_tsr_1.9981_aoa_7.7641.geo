SetFactory("OpenCASCADE");

Point(1) = {0.074448, 0.726384, 0, 1.0};
Point(2) = {0.072059, 0.726846, 0, 1.0};
Point(3) = {0.069249, 0.727394, 0, 1.0};
Point(4) = {0.066263, 0.727980, 0, 1.0};
Point(5) = {0.063108, 0.728603, 0, 1.0};
Point(6) = {0.059795, 0.729261, 0, 1.0};
Point(7) = {0.056334, 0.729953, 0, 1.0};
Point(8) = {0.052734, 0.730677, 0, 1.0};
Point(9) = {0.049009, 0.731431, 0, 1.0};
Point(10) = {0.045169, 0.732215, 0, 1.0};
Point(11) = {0.041227, 0.733025, 0, 1.0};
Point(12) = {0.037196, 0.733862, 0, 1.0};
Point(13) = {0.033094, 0.734719, 0, 1.0};
Point(14) = {0.028933, 0.735593, 0, 1.0};
Point(15) = {0.024723, 0.736478, 0, 1.0};
Point(16) = {0.020481, 0.737368, 0, 1.0};
Point(17) = {0.016214, 0.738261, 0, 1.0};
Point(18) = {0.011937, 0.739154, 0, 1.0};
Point(19) = {0.007666, 0.740038, 0, 1.0};
Point(20) = {0.003406, 0.740910, 0, 1.0};
Point(21) = {-0.000827, 0.741767, 0, 1.0};
Point(22) = {-0.005023, 0.742604, 0, 1.0};
Point(23) = {-0.009168, 0.743416, 0, 1.0};
Point(24) = {-0.013253, 0.744198, 0, 1.0};
Point(25) = {-0.017271, 0.744947, 0, 1.0};
Point(26) = {-0.021207, 0.745658, 0, 1.0};
Point(27) = {-0.025051, 0.746329, 0, 1.0};
Point(28) = {-0.028795, 0.746953, 0, 1.0};
Point(29) = {-0.032432, 0.747527, 0, 1.0};
Point(30) = {-0.035951, 0.748050, 0, 1.0};
Point(31) = {-0.039344, 0.748516, 0, 1.0};
Point(32) = {-0.042605, 0.748917, 0, 1.0};
Point(33) = {-0.045734, 0.749259, 0, 1.0};
Point(34) = {-0.048719, 0.749540, 0, 1.0};
Point(35) = {-0.051553, 0.749756, 0, 1.0};
Point(36) = {-0.054232, 0.749902, 0, 1.0};
Point(37) = {-0.056763, 0.749982, 0, 1.0};
Point(38) = {-0.059132, 0.750000, 0, 1.0};
Point(39) = {-0.061332, 0.749952, 0, 1.0};
Point(40) = {-0.063367, 0.749836, 0, 1.0};
Point(41) = {-0.065238, 0.749660, 0, 1.0};
Point(42) = {-0.066941, 0.749429, 0, 1.0};
Point(43) = {-0.068467, 0.749146, 0, 1.0};
Point(44) = {-0.069817, 0.748807, 0, 1.0};
Point(45) = {-0.071002, 0.748422, 0, 1.0};
Point(46) = {-0.072010, 0.748004, 0, 1.0};
Point(47) = {-0.072834, 0.747556, 0, 1.0};
Point(48) = {-0.073476, 0.747077, 0, 1.0};
Point(49) = {-0.073948, 0.746579, 0, 1.0};
Point(50) = {-0.074245, 0.746091, 0, 1.0};
Point(51) = {-0.074312, 0.745656, 0, 1.0};
Point(52) = {-0.074111, 0.745212, 0, 1.0};
Point(53) = {-0.073675, 0.744698, 0, 1.0};
Point(54) = {-0.073042, 0.744140, 0, 1.0};
Point(55) = {-0.072216, 0.743555, 0, 1.0};
Point(56) = {-0.071202, 0.742950, 0, 1.0};
Point(57) = {-0.070006, 0.742342, 0, 1.0};
Point(58) = {-0.068616, 0.741738, 0, 1.0};
Point(59) = {-0.067026, 0.741135, 0, 1.0};
Point(60) = {-0.065248, 0.740530, 0, 1.0};
Point(61) = {-0.063286, 0.739932, 0, 1.0};
Point(62) = {-0.061138, 0.739346, 0, 1.0};
Point(63) = {-0.058803, 0.738766, 0, 1.0};
Point(64) = {-0.056291, 0.738196, 0, 1.0};
Point(65) = {-0.053610, 0.737635, 0, 1.0};
Point(66) = {-0.050762, 0.737087, 0, 1.0};
Point(67) = {-0.047747, 0.736553, 0, 1.0};
Point(68) = {-0.044578, 0.736026, 0, 1.0};
Point(69) = {-0.041263, 0.735512, 0, 1.0};
Point(70) = {-0.037809, 0.735010, 0, 1.0};
Point(71) = {-0.034224, 0.734521, 0, 1.0};
Point(72) = {-0.030517, 0.734040, 0, 1.0};
Point(73) = {-0.026702, 0.733573, 0, 1.0};
Point(74) = {-0.022783, 0.733117, 0, 1.0};
Point(75) = {-0.018772, 0.732674, 0, 1.0};
Point(76) = {-0.014680, 0.732241, 0, 1.0};
Point(77) = {-0.010521, 0.731820, 0, 1.0};
Point(78) = {-0.006303, 0.731410, 0, 1.0};
Point(79) = {-0.002039, 0.731012, 0, 1.0};
Point(80) = {0.002260, 0.730624, 0, 1.0};
Point(81) = {0.006580, 0.730250, 0, 1.0};
Point(82) = {0.010911, 0.729891, 0, 1.0};
Point(83) = {0.015247, 0.729541, 0, 1.0};
Point(84) = {0.019572, 0.729201, 0, 1.0};
Point(85) = {0.023875, 0.728868, 0, 1.0};
Point(86) = {0.028140, 0.728541, 0, 1.0};
Point(87) = {0.032356, 0.728221, 0, 1.0};
Point(88) = {0.036508, 0.727905, 0, 1.0};
Point(89) = {0.040583, 0.727595, 0, 1.0};
Point(90) = {0.044571, 0.727292, 0, 1.0};
Point(91) = {0.048456, 0.726993, 0, 1.0};
Point(92) = {0.052227, 0.726703, 0, 1.0};
Point(93) = {0.055872, 0.726417, 0, 1.0};
Point(94) = {0.059380, 0.726140, 0, 1.0};
Point(95) = {0.062739, 0.725870, 0, 1.0};
Point(96) = {0.065938, 0.725609, 0, 1.0};
Point(97) = {0.068966, 0.725359, 0, 1.0};
Point(98) = {0.071817, 0.725119, 0, 1.0};
Point(99) = {0.074247, 0.724911, 0, 1.0};
Point(100) = {-0.074448, -0.726384, 0, 1.0};
Point(101) = {-0.072059, -0.726846, 0, 1.0};
Point(102) = {-0.069249, -0.727394, 0, 1.0};
Point(103) = {-0.066263, -0.727980, 0, 1.0};
Point(104) = {-0.063108, -0.728603, 0, 1.0};
Point(105) = {-0.059795, -0.729261, 0, 1.0};
Point(106) = {-0.056334, -0.729953, 0, 1.0};
Point(107) = {-0.052734, -0.730677, 0, 1.0};
Point(108) = {-0.049009, -0.731431, 0, 1.0};
Point(109) = {-0.045169, -0.732215, 0, 1.0};
Point(110) = {-0.041227, -0.733025, 0, 1.0};
Point(111) = {-0.037196, -0.733862, 0, 1.0};
Point(112) = {-0.033094, -0.734719, 0, 1.0};
Point(113) = {-0.028933, -0.735593, 0, 1.0};
Point(114) = {-0.024723, -0.736478, 0, 1.0};
Point(115) = {-0.020481, -0.737368, 0, 1.0};
Point(116) = {-0.016214, -0.738261, 0, 1.0};
Point(117) = {-0.011937, -0.739154, 0, 1.0};
Point(118) = {-0.007666, -0.740038, 0, 1.0};
Point(119) = {-0.003406, -0.740910, 0, 1.0};
Point(120) = {0.000827, -0.741767, 0, 1.0};
Point(121) = {0.005023, -0.742604, 0, 1.0};
Point(122) = {0.009168, -0.743416, 0, 1.0};
Point(123) = {0.013253, -0.744198, 0, 1.0};
Point(124) = {0.017271, -0.744947, 0, 1.0};
Point(125) = {0.021207, -0.745658, 0, 1.0};
Point(126) = {0.025051, -0.746329, 0, 1.0};
Point(127) = {0.028795, -0.746953, 0, 1.0};
Point(128) = {0.032432, -0.747527, 0, 1.0};
Point(129) = {0.035951, -0.748050, 0, 1.0};
Point(130) = {0.039344, -0.748516, 0, 1.0};
Point(131) = {0.042605, -0.748917, 0, 1.0};
Point(132) = {0.045734, -0.749259, 0, 1.0};
Point(133) = {0.048719, -0.749540, 0, 1.0};
Point(134) = {0.051553, -0.749756, 0, 1.0};
Point(135) = {0.054232, -0.749902, 0, 1.0};
Point(136) = {0.056763, -0.749982, 0, 1.0};
Point(137) = {0.059132, -0.750000, 0, 1.0};
Point(138) = {0.061332, -0.749952, 0, 1.0};
Point(139) = {0.063367, -0.749836, 0, 1.0};
Point(140) = {0.065238, -0.749660, 0, 1.0};
Point(141) = {0.066941, -0.749429, 0, 1.0};
Point(142) = {0.068467, -0.749146, 0, 1.0};
Point(143) = {0.069817, -0.748807, 0, 1.0};
Point(144) = {0.071002, -0.748422, 0, 1.0};
Point(145) = {0.072010, -0.748004, 0, 1.0};
Point(146) = {0.072834, -0.747556, 0, 1.0};
Point(147) = {0.073476, -0.747077, 0, 1.0};
Point(148) = {0.073948, -0.746579, 0, 1.0};
Point(149) = {0.074245, -0.746091, 0, 1.0};
Point(150) = {0.074312, -0.745656, 0, 1.0};
Point(151) = {0.074111, -0.745212, 0, 1.0};
Point(152) = {0.073675, -0.744698, 0, 1.0};
Point(153) = {0.073042, -0.744140, 0, 1.0};
Point(154) = {0.072216, -0.743555, 0, 1.0};
Point(155) = {0.071202, -0.742950, 0, 1.0};
Point(156) = {0.070006, -0.742342, 0, 1.0};
Point(157) = {0.068616, -0.741738, 0, 1.0};
Point(158) = {0.067026, -0.741135, 0, 1.0};
Point(159) = {0.065248, -0.740530, 0, 1.0};
Point(160) = {0.063286, -0.739932, 0, 1.0};
Point(161) = {0.061138, -0.739346, 0, 1.0};
Point(162) = {0.058803, -0.738766, 0, 1.0};
Point(163) = {0.056291, -0.738196, 0, 1.0};
Point(164) = {0.053610, -0.737635, 0, 1.0};
Point(165) = {0.050762, -0.737087, 0, 1.0};
Point(166) = {0.047747, -0.736553, 0, 1.0};
Point(167) = {0.044578, -0.736026, 0, 1.0};
Point(168) = {0.041263, -0.735512, 0, 1.0};
Point(169) = {0.037809, -0.735010, 0, 1.0};
Point(170) = {0.034224, -0.734521, 0, 1.0};
Point(171) = {0.030517, -0.734040, 0, 1.0};
Point(172) = {0.026702, -0.733573, 0, 1.0};
Point(173) = {0.022783, -0.733117, 0, 1.0};
Point(174) = {0.018772, -0.732674, 0, 1.0};
Point(175) = {0.014680, -0.732241, 0, 1.0};
Point(176) = {0.010521, -0.731820, 0, 1.0};
Point(177) = {0.006303, -0.731410, 0, 1.0};
Point(178) = {0.002039, -0.731012, 0, 1.0};
Point(179) = {-0.002260, -0.730624, 0, 1.0};
Point(180) = {-0.006580, -0.730250, 0, 1.0};
Point(181) = {-0.010911, -0.729891, 0, 1.0};
Point(182) = {-0.015247, -0.729541, 0, 1.0};
Point(183) = {-0.019572, -0.729201, 0, 1.0};
Point(184) = {-0.023875, -0.728868, 0, 1.0};
Point(185) = {-0.028140, -0.728541, 0, 1.0};
Point(186) = {-0.032356, -0.728221, 0, 1.0};
Point(187) = {-0.036508, -0.727905, 0, 1.0};
Point(188) = {-0.040583, -0.727595, 0, 1.0};
Point(189) = {-0.044571, -0.727292, 0, 1.0};
Point(190) = {-0.048456, -0.726993, 0, 1.0};
Point(191) = {-0.052227, -0.726703, 0, 1.0};
Point(192) = {-0.055872, -0.726417, 0, 1.0};
Point(193) = {-0.059380, -0.726140, 0, 1.0};
Point(194) = {-0.062739, -0.725870, 0, 1.0};
Point(195) = {-0.065938, -0.725609, 0, 1.0};
Point(196) = {-0.068966, -0.725359, 0, 1.0};
Point(197) = {-0.071817, -0.725119, 0, 1.0};
Point(198) = {-0.074247, -0.724911, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:71};
Spline(3) = {71:99};
Spline(4) = {99,1};

// Lines: second blade (splines 5-8)
Spline(5) = {100:128};
Spline(6) = {128:170};
Spline(7) = {170:198};
Spline(8) = {198,100};

// Outer domain (points 20001-4 and lines)
Point(199) = {-13.50000000, -15.00000000, 0, 1.0};
Point(200) = {-13.50000000, 15.00000000, 0, 1.0};
Point(201) = {13.50000000, 15.00000000, 0, 1.0};
Point(202) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {199, 200};
Line(12) = {200, 201};
Line(13) = {201, 202};
Line(14) = {199, 202};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
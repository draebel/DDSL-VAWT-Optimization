SetFactory("OpenCASCADE");

Point(1) = {0.149190, 0.724817, 0, 1.0};
Point(2) = {0.141719, 0.726598, 0, 1.0};
Point(3) = {0.136588, 0.727808, 0, 1.0};
Point(4) = {0.131195, 0.729106, 0, 1.0};
Point(5) = {0.125309, 0.730608, 0, 1.0};
Point(6) = {0.117874, 0.732556, 0, 1.0};
Point(7) = {0.110432, 0.734455, 0, 1.0};
Point(8) = {0.103917, 0.736062, 0, 1.0};
Point(9) = {0.097928, 0.737358, 0, 1.0};
Point(10) = {0.092349, 0.738418, 0, 1.0};
Point(11) = {0.085725, 0.739491, 0, 1.0};
Point(12) = {0.077796, 0.740717, 0, 1.0};
Point(13) = {0.069606, 0.741903, 0, 1.0};
Point(14) = {0.061248, 0.743034, 0, 1.0};
Point(15) = {0.052868, 0.744097, 0, 1.0};
Point(16) = {0.044299, 0.745110, 0, 1.0};
Point(17) = {0.035707, 0.746056, 0, 1.0};
Point(18) = {0.027232, 0.746914, 0, 1.0};
Point(19) = {0.018858, 0.747689, 0, 1.0};
Point(20) = {0.010716, 0.748365, 0, 1.0};
Point(21) = {0.002885, 0.748935, 0, 1.0};
Point(22) = {-0.004587, 0.749389, 0, 1.0};
Point(23) = {-0.011678, 0.749721, 0, 1.0};
Point(24) = {-0.018397, 0.749929, 0, 1.0};
Point(25) = {-0.024558, 0.750000, 0, 1.0};
Point(26) = {-0.029579, 0.749912, 0, 1.0};
Point(27) = {-0.033813, 0.749554, 0, 1.0};
Point(28) = {-0.038044, 0.748916, 0, 1.0};
Point(29) = {-0.041899, 0.748031, 0, 1.0};
Point(30) = {-0.045230, 0.746978, 0, 1.0};
Point(31) = {-0.047783, 0.745661, 0, 1.0};
Point(32) = {-0.049356, 0.744157, 0, 1.0};
Point(33) = {-0.050000, 0.742802, 0, 1.0};
Point(34) = {-0.049577, 0.741736, 0, 1.0};
Point(35) = {-0.048218, 0.740898, 0, 1.0};
Point(36) = {-0.045863, 0.740055, 0, 1.0};
Point(37) = {-0.042706, 0.739194, 0, 1.0};
Point(38) = {-0.039009, 0.738358, 0, 1.0};
Point(39) = {-0.034909, 0.737550, 0, 1.0};
Point(40) = {-0.030776, 0.736805, 0, 1.0};
Point(41) = {-0.025839, 0.735978, 0, 1.0};
Point(42) = {-0.019757, 0.735031, 0, 1.0};
Point(43) = {-0.013108, 0.734068, 0, 1.0};
Point(44) = {-0.006072, 0.733125, 0, 1.0};
Point(45) = {0.001356, 0.732199, 0, 1.0};
Point(46) = {0.009156, 0.731294, 0, 1.0};
Point(47) = {0.017281, 0.730423, 0, 1.0};
Point(48) = {0.025649, 0.729582, 0, 1.0};
Point(49) = {0.034130, 0.728792, 0, 1.0};
Point(50) = {0.042740, 0.728042, 0, 1.0};
Point(51) = {0.051339, 0.727360, 0, 1.0};
Point(52) = {0.059763, 0.726768, 0, 1.0};
Point(53) = {0.068176, 0.726250, 0, 1.0};
Point(54) = {0.076430, 0.725764, 0, 1.0};
Point(55) = {0.084433, 0.725342, 0, 1.0};
Point(56) = {0.091126, 0.725028, 0, 1.0};
Point(57) = {0.096778, 0.724767, 0, 1.0};
Point(58) = {0.102860, 0.724494, 0, 1.0};
Point(59) = {0.109497, 0.724225, 0, 1.0};
Point(60) = {0.117087, 0.723938, 0, 1.0};
Point(61) = {0.124678, 0.723692, 0, 1.0};
Point(62) = {0.130689, 0.723559, 0, 1.0};
Point(63) = {0.136204, 0.723612, 0, 1.0};
Point(64) = {0.141471, 0.723886, 0, 1.0};
Point(65) = {0.149152, 0.724403, 0, 1.0};
Point(66) = {-0.149190, -0.724817, 0, 1.0};
Point(67) = {-0.141719, -0.726598, 0, 1.0};
Point(68) = {-0.136588, -0.727808, 0, 1.0};
Point(69) = {-0.131195, -0.729106, 0, 1.0};
Point(70) = {-0.125309, -0.730608, 0, 1.0};
Point(71) = {-0.117874, -0.732556, 0, 1.0};
Point(72) = {-0.110432, -0.734455, 0, 1.0};
Point(73) = {-0.103917, -0.736062, 0, 1.0};
Point(74) = {-0.097928, -0.737358, 0, 1.0};
Point(75) = {-0.092349, -0.738418, 0, 1.0};
Point(76) = {-0.085725, -0.739491, 0, 1.0};
Point(77) = {-0.077796, -0.740717, 0, 1.0};
Point(78) = {-0.069606, -0.741903, 0, 1.0};
Point(79) = {-0.061248, -0.743034, 0, 1.0};
Point(80) = {-0.052868, -0.744097, 0, 1.0};
Point(81) = {-0.044299, -0.745110, 0, 1.0};
Point(82) = {-0.035707, -0.746056, 0, 1.0};
Point(83) = {-0.027232, -0.746914, 0, 1.0};
Point(84) = {-0.018858, -0.747689, 0, 1.0};
Point(85) = {-0.010716, -0.748365, 0, 1.0};
Point(86) = {-0.002885, -0.748935, 0, 1.0};
Point(87) = {0.004587, -0.749389, 0, 1.0};
Point(88) = {0.011678, -0.749721, 0, 1.0};
Point(89) = {0.018397, -0.749929, 0, 1.0};
Point(90) = {0.024558, -0.750000, 0, 1.0};
Point(91) = {0.029579, -0.749912, 0, 1.0};
Point(92) = {0.033813, -0.749554, 0, 1.0};
Point(93) = {0.038044, -0.748916, 0, 1.0};
Point(94) = {0.041899, -0.748031, 0, 1.0};
Point(95) = {0.045230, -0.746978, 0, 1.0};
Point(96) = {0.047783, -0.745661, 0, 1.0};
Point(97) = {0.049356, -0.744157, 0, 1.0};
Point(98) = {0.050000, -0.742802, 0, 1.0};
Point(99) = {0.049577, -0.741736, 0, 1.0};
Point(100) = {0.048218, -0.740898, 0, 1.0};
Point(101) = {0.045863, -0.740055, 0, 1.0};
Point(102) = {0.042706, -0.739194, 0, 1.0};
Point(103) = {0.039009, -0.738358, 0, 1.0};
Point(104) = {0.034909, -0.737550, 0, 1.0};
Point(105) = {0.030776, -0.736805, 0, 1.0};
Point(106) = {0.025839, -0.735978, 0, 1.0};
Point(107) = {0.019757, -0.735031, 0, 1.0};
Point(108) = {0.013108, -0.734068, 0, 1.0};
Point(109) = {0.006072, -0.733125, 0, 1.0};
Point(110) = {-0.001356, -0.732199, 0, 1.0};
Point(111) = {-0.009156, -0.731294, 0, 1.0};
Point(112) = {-0.017281, -0.730423, 0, 1.0};
Point(113) = {-0.025649, -0.729582, 0, 1.0};
Point(114) = {-0.034130, -0.728792, 0, 1.0};
Point(115) = {-0.042740, -0.728042, 0, 1.0};
Point(116) = {-0.051339, -0.727360, 0, 1.0};
Point(117) = {-0.059763, -0.726768, 0, 1.0};
Point(118) = {-0.068176, -0.726250, 0, 1.0};
Point(119) = {-0.076430, -0.725764, 0, 1.0};
Point(120) = {-0.084433, -0.725342, 0, 1.0};
Point(121) = {-0.091126, -0.725028, 0, 1.0};
Point(122) = {-0.096778, -0.724767, 0, 1.0};
Point(123) = {-0.102860, -0.724494, 0, 1.0};
Point(124) = {-0.109497, -0.724225, 0, 1.0};
Point(125) = {-0.117087, -0.723938, 0, 1.0};
Point(126) = {-0.124678, -0.723692, 0, 1.0};
Point(127) = {-0.130689, -0.723559, 0, 1.0};
Point(128) = {-0.136204, -0.723612, 0, 1.0};
Point(129) = {-0.141471, -0.723886, 0, 1.0};
Point(130) = {-0.149152, -0.724403, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:46};
Spline(3) = {46:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:111};
Spline(7) = {111:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
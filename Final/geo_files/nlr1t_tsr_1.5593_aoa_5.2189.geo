SetFactory("OpenCASCADE");

Point(1) = {0.074703, 0.731113, 0, 1.0};
Point(2) = {0.069100, 0.732449, 0, 1.0};
Point(3) = {0.065252, 0.733356, 0, 1.0};
Point(4) = {0.061207, 0.734329, 0, 1.0};
Point(5) = {0.056793, 0.735456, 0, 1.0};
Point(6) = {0.051216, 0.736917, 0, 1.0};
Point(7) = {0.045635, 0.738341, 0, 1.0};
Point(8) = {0.040749, 0.739547, 0, 1.0};
Point(9) = {0.036257, 0.740519, 0, 1.0};
Point(10) = {0.032073, 0.741314, 0, 1.0};
Point(11) = {0.027105, 0.742118, 0, 1.0};
Point(12) = {0.021158, 0.743038, 0, 1.0};
Point(13) = {0.015015, 0.743927, 0, 1.0};
Point(14) = {0.008747, 0.744776, 0, 1.0};
Point(15) = {0.002462, 0.745573, 0, 1.0};
Point(16) = {-0.003965, 0.746333, 0, 1.0};
Point(17) = {-0.010409, 0.747042, 0, 1.0};
Point(18) = {-0.016765, 0.747686, 0, 1.0};
Point(19) = {-0.023046, 0.748267, 0, 1.0};
Point(20) = {-0.029152, 0.748774, 0, 1.0};
Point(21) = {-0.035025, 0.749202, 0, 1.0};
Point(22) = {-0.040629, 0.749542, 0, 1.0};
Point(23) = {-0.045947, 0.749791, 0, 1.0};
Point(24) = {-0.050987, 0.749947, 0, 1.0};
Point(25) = {-0.055607, 0.750000, 0, 1.0};
Point(26) = {-0.059373, 0.749934, 0, 1.0};
Point(27) = {-0.062549, 0.749665, 0, 1.0};
Point(28) = {-0.065722, 0.749187, 0, 1.0};
Point(29) = {-0.068613, 0.748523, 0, 1.0};
Point(30) = {-0.071112, 0.747733, 0, 1.0};
Point(31) = {-0.073026, 0.746745, 0, 1.0};
Point(32) = {-0.074206, 0.745618, 0, 1.0};
Point(33) = {-0.074689, 0.744602, 0, 1.0};
Point(34) = {-0.074372, 0.743802, 0, 1.0};
Point(35) = {-0.073352, 0.743174, 0, 1.0};
Point(36) = {-0.071586, 0.742541, 0, 1.0};
Point(37) = {-0.069219, 0.741895, 0, 1.0};
Point(38) = {-0.066446, 0.741269, 0, 1.0};
Point(39) = {-0.063371, 0.740662, 0, 1.0};
Point(40) = {-0.060271, 0.740104, 0, 1.0};
Point(41) = {-0.056568, 0.739484, 0, 1.0};
Point(42) = {-0.052007, 0.738773, 0, 1.0};
Point(43) = {-0.047020, 0.738051, 0, 1.0};
Point(44) = {-0.041743, 0.737343, 0, 1.0};
Point(45) = {-0.036172, 0.736649, 0, 1.0};
Point(46) = {-0.030322, 0.735970, 0, 1.0};
Point(47) = {-0.024228, 0.735317, 0, 1.0};
Point(48) = {-0.017952, 0.734687, 0, 1.0};
Point(49) = {-0.011591, 0.734094, 0, 1.0};
Point(50) = {-0.005134, 0.733531, 0, 1.0};
Point(51) = {0.001316, 0.733020, 0, 1.0};
Point(52) = {0.007633, 0.732576, 0, 1.0};
Point(53) = {0.013943, 0.732188, 0, 1.0};
Point(54) = {0.020134, 0.731823, 0, 1.0};
Point(55) = {0.026136, 0.731506, 0, 1.0};
Point(56) = {0.031156, 0.731271, 0, 1.0};
Point(57) = {0.035394, 0.731075, 0, 1.0};
Point(58) = {0.039956, 0.730871, 0, 1.0};
Point(59) = {0.044934, 0.730669, 0, 1.0};
Point(60) = {0.050626, 0.730453, 0, 1.0};
Point(61) = {0.056319, 0.730269, 0, 1.0};
Point(62) = {0.060827, 0.730169, 0, 1.0};
Point(63) = {0.064964, 0.730209, 0, 1.0};
Point(64) = {0.068914, 0.730414, 0, 1.0};
Point(65) = {0.074675, 0.730802, 0, 1.0};
Point(66) = {-0.074703, -0.731113, 0, 1.0};
Point(67) = {-0.069100, -0.732449, 0, 1.0};
Point(68) = {-0.065252, -0.733356, 0, 1.0};
Point(69) = {-0.061207, -0.734329, 0, 1.0};
Point(70) = {-0.056793, -0.735456, 0, 1.0};
Point(71) = {-0.051216, -0.736917, 0, 1.0};
Point(72) = {-0.045635, -0.738341, 0, 1.0};
Point(73) = {-0.040749, -0.739547, 0, 1.0};
Point(74) = {-0.036257, -0.740519, 0, 1.0};
Point(75) = {-0.032073, -0.741314, 0, 1.0};
Point(76) = {-0.027105, -0.742118, 0, 1.0};
Point(77) = {-0.021158, -0.743038, 0, 1.0};
Point(78) = {-0.015015, -0.743927, 0, 1.0};
Point(79) = {-0.008747, -0.744776, 0, 1.0};
Point(80) = {-0.002462, -0.745573, 0, 1.0};
Point(81) = {0.003965, -0.746333, 0, 1.0};
Point(82) = {0.010409, -0.747042, 0, 1.0};
Point(83) = {0.016765, -0.747686, 0, 1.0};
Point(84) = {0.023046, -0.748267, 0, 1.0};
Point(85) = {0.029152, -0.748774, 0, 1.0};
Point(86) = {0.035025, -0.749202, 0, 1.0};
Point(87) = {0.040629, -0.749542, 0, 1.0};
Point(88) = {0.045947, -0.749791, 0, 1.0};
Point(89) = {0.050987, -0.749947, 0, 1.0};
Point(90) = {0.055607, -0.750000, 0, 1.0};
Point(91) = {0.059373, -0.749934, 0, 1.0};
Point(92) = {0.062549, -0.749665, 0, 1.0};
Point(93) = {0.065722, -0.749187, 0, 1.0};
Point(94) = {0.068613, -0.748523, 0, 1.0};
Point(95) = {0.071112, -0.747733, 0, 1.0};
Point(96) = {0.073026, -0.746745, 0, 1.0};
Point(97) = {0.074206, -0.745618, 0, 1.0};
Point(98) = {0.074689, -0.744602, 0, 1.0};
Point(99) = {0.074372, -0.743802, 0, 1.0};
Point(100) = {0.073352, -0.743174, 0, 1.0};
Point(101) = {0.071586, -0.742541, 0, 1.0};
Point(102) = {0.069219, -0.741895, 0, 1.0};
Point(103) = {0.066446, -0.741269, 0, 1.0};
Point(104) = {0.063371, -0.740662, 0, 1.0};
Point(105) = {0.060271, -0.740104, 0, 1.0};
Point(106) = {0.056568, -0.739484, 0, 1.0};
Point(107) = {0.052007, -0.738773, 0, 1.0};
Point(108) = {0.047020, -0.738051, 0, 1.0};
Point(109) = {0.041743, -0.737343, 0, 1.0};
Point(110) = {0.036172, -0.736649, 0, 1.0};
Point(111) = {0.030322, -0.735970, 0, 1.0};
Point(112) = {0.024228, -0.735317, 0, 1.0};
Point(113) = {0.017952, -0.734687, 0, 1.0};
Point(114) = {0.011591, -0.734094, 0, 1.0};
Point(115) = {0.005134, -0.733531, 0, 1.0};
Point(116) = {-0.001316, -0.733020, 0, 1.0};
Point(117) = {-0.007633, -0.732576, 0, 1.0};
Point(118) = {-0.013943, -0.732188, 0, 1.0};
Point(119) = {-0.020134, -0.731823, 0, 1.0};
Point(120) = {-0.026136, -0.731506, 0, 1.0};
Point(121) = {-0.031156, -0.731271, 0, 1.0};
Point(122) = {-0.035394, -0.731075, 0, 1.0};
Point(123) = {-0.039956, -0.730871, 0, 1.0};
Point(124) = {-0.044934, -0.730669, 0, 1.0};
Point(125) = {-0.050626, -0.730453, 0, 1.0};
Point(126) = {-0.056319, -0.730269, 0, 1.0};
Point(127) = {-0.060827, -0.730169, 0, 1.0};
Point(128) = {-0.064964, -0.730209, 0, 1.0};
Point(129) = {-0.068914, -0.730414, 0, 1.0};
Point(130) = {-0.074675, -0.730802, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:46};
Spline(3) = {46:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:111};
Spline(7) = {111:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074720, 0.736423, 0, 1.0};
Point(2) = {0.073358, 0.736699, 0, 1.0};
Point(3) = {0.070904, 0.737191, 0, 1.0};
Point(4) = {0.068156, 0.737750, 0, 1.0};
Point(5) = {0.065126, 0.738376, 0, 1.0};
Point(6) = {0.061821, 0.739097, 0, 1.0};
Point(7) = {0.058258, 0.739904, 0, 1.0};
Point(8) = {0.054451, 0.740836, 0, 1.0};
Point(9) = {0.050414, 0.741888, 0, 1.0};
Point(10) = {0.046163, 0.743116, 0, 1.0};
Point(11) = {0.041716, 0.744467, 0, 1.0};
Point(12) = {0.037093, 0.745930, 0, 1.0};
Point(13) = {0.032343, 0.747066, 0, 1.0};
Point(14) = {0.027476, 0.748017, 0, 1.0};
Point(15) = {0.022514, 0.748744, 0, 1.0};
Point(16) = {0.017478, 0.749281, 0, 1.0};
Point(17) = {0.012382, 0.749686, 0, 1.0};
Point(18) = {0.007254, 0.749925, 0, 1.0};
Point(19) = {0.002115, 0.750000, 0, 1.0};
Point(20) = {-0.003016, 0.749922, 0, 1.0};
Point(21) = {-0.008114, 0.749681, 0, 1.0};
Point(22) = {-0.013161, 0.749305, 0, 1.0};
Point(23) = {-0.018132, 0.748776, 0, 1.0};
Point(24) = {-0.023008, 0.748116, 0, 1.0};
Point(25) = {-0.027767, 0.747316, 0, 1.0};
Point(26) = {-0.032391, 0.746407, 0, 1.0};
Point(27) = {-0.036859, 0.745377, 0, 1.0};
Point(28) = {-0.041154, 0.744258, 0, 1.0};
Point(29) = {-0.045254, 0.743029, 0, 1.0};
Point(30) = {-0.049146, 0.741745, 0, 1.0};
Point(31) = {-0.052811, 0.740372, 0, 1.0};
Point(32) = {-0.056237, 0.738967, 0, 1.0};
Point(33) = {-0.059407, 0.737507, 0, 1.0};
Point(34) = {-0.062310, 0.736061, 0, 1.0};
Point(35) = {-0.064933, 0.734595, 0, 1.0};
Point(36) = {-0.067268, 0.733180, 0, 1.0};
Point(37) = {-0.069301, 0.731770, 0, 1.0};
Point(38) = {-0.071031, 0.730461, 0, 1.0};
Point(39) = {-0.072442, 0.729182, 0, 1.0};
Point(40) = {-0.073538, 0.728026, 0, 1.0};
Point(41) = {-0.074308, 0.726940, 0, 1.0};
Point(42) = {-0.074760, 0.726102, 0, 1.0};
Point(43) = {-0.074857, 0.724957, 0, 1.0};
Point(44) = {-0.074631, 0.724009, 0, 1.0};
Point(45) = {-0.074092, 0.723450, 0, 1.0};
Point(46) = {-0.073221, 0.722891, 0, 1.0};
Point(47) = {-0.072013, 0.722222, 0, 1.0};
Point(48) = {-0.070487, 0.721658, 0, 1.0};
Point(49) = {-0.068647, 0.721176, 0, 1.0};
Point(50) = {-0.066496, 0.720675, 0, 1.0};
Point(51) = {-0.064047, 0.720253, 0, 1.0};
Point(52) = {-0.061307, 0.719831, 0, 1.0};
Point(53) = {-0.058295, 0.719488, 0, 1.0};
Point(54) = {-0.055014, 0.719157, 0, 1.0};
Point(55) = {-0.051485, 0.718904, 0, 1.0};
Point(56) = {-0.047721, 0.718673, 0, 1.0};
Point(57) = {-0.043741, 0.718526, 0, 1.0};
Point(58) = {-0.039558, 0.718406, 0, 1.0};
Point(59) = {-0.035191, 0.718373, 0, 1.0};
Point(60) = {-0.030660, 0.718379, 0, 1.0};
Point(61) = {-0.025986, 0.718476, 0, 1.0};
Point(62) = {-0.021186, 0.718616, 0, 1.0};
Point(63) = {-0.016284, 0.718856, 0, 1.0};
Point(64) = {-0.011299, 0.719154, 0, 1.0};
Point(65) = {-0.006254, 0.719557, 0, 1.0};
Point(66) = {-0.001170, 0.720039, 0, 1.0};
Point(67) = {0.003925, 0.720686, 0, 1.0};
Point(68) = {0.009013, 0.721440, 0, 1.0};
Point(69) = {0.014072, 0.722327, 0, 1.0};
Point(70) = {0.019081, 0.723329, 0, 1.0};
Point(71) = {0.024010, 0.724518, 0, 1.0};
Point(72) = {0.028831, 0.726072, 0, 1.0};
Point(73) = {0.033541, 0.727669, 0, 1.0};
Point(74) = {0.038136, 0.729040, 0, 1.0};
Point(75) = {0.042592, 0.730281, 0, 1.0};
Point(76) = {0.046892, 0.731305, 0, 1.0};
Point(77) = {0.051012, 0.732214, 0, 1.0};
Point(78) = {0.054938, 0.732945, 0, 1.0};
Point(79) = {0.058650, 0.733560, 0, 1.0};
Point(80) = {0.062134, 0.734027, 0, 1.0};
Point(81) = {0.065371, 0.734403, 0, 1.0};
Point(82) = {0.068348, 0.734643, 0, 1.0};
Point(83) = {0.071052, 0.734805, 0, 1.0};
Point(84) = {0.073469, 0.734889, 0, 1.0};
Point(85) = {0.074814, 0.734907, 0, 1.0};
Point(86) = {-0.074720, -0.736423, 0, 1.0};
Point(87) = {-0.073358, -0.736699, 0, 1.0};
Point(88) = {-0.070904, -0.737191, 0, 1.0};
Point(89) = {-0.068156, -0.737750, 0, 1.0};
Point(90) = {-0.065126, -0.738376, 0, 1.0};
Point(91) = {-0.061821, -0.739097, 0, 1.0};
Point(92) = {-0.058258, -0.739904, 0, 1.0};
Point(93) = {-0.054451, -0.740836, 0, 1.0};
Point(94) = {-0.050414, -0.741888, 0, 1.0};
Point(95) = {-0.046163, -0.743116, 0, 1.0};
Point(96) = {-0.041716, -0.744467, 0, 1.0};
Point(97) = {-0.037093, -0.745930, 0, 1.0};
Point(98) = {-0.032343, -0.747066, 0, 1.0};
Point(99) = {-0.027476, -0.748017, 0, 1.0};
Point(100) = {-0.022514, -0.748744, 0, 1.0};
Point(101) = {-0.017478, -0.749281, 0, 1.0};
Point(102) = {-0.012382, -0.749686, 0, 1.0};
Point(103) = {-0.007254, -0.749925, 0, 1.0};
Point(104) = {-0.002115, -0.750000, 0, 1.0};
Point(105) = {0.003016, -0.749922, 0, 1.0};
Point(106) = {0.008114, -0.749681, 0, 1.0};
Point(107) = {0.013161, -0.749305, 0, 1.0};
Point(108) = {0.018132, -0.748776, 0, 1.0};
Point(109) = {0.023008, -0.748116, 0, 1.0};
Point(110) = {0.027767, -0.747316, 0, 1.0};
Point(111) = {0.032391, -0.746407, 0, 1.0};
Point(112) = {0.036859, -0.745377, 0, 1.0};
Point(113) = {0.041154, -0.744258, 0, 1.0};
Point(114) = {0.045254, -0.743029, 0, 1.0};
Point(115) = {0.049146, -0.741745, 0, 1.0};
Point(116) = {0.052811, -0.740372, 0, 1.0};
Point(117) = {0.056237, -0.738967, 0, 1.0};
Point(118) = {0.059407, -0.737507, 0, 1.0};
Point(119) = {0.062310, -0.736061, 0, 1.0};
Point(120) = {0.064933, -0.734595, 0, 1.0};
Point(121) = {0.067268, -0.733180, 0, 1.0};
Point(122) = {0.069301, -0.731770, 0, 1.0};
Point(123) = {0.071031, -0.730461, 0, 1.0};
Point(124) = {0.072442, -0.729182, 0, 1.0};
Point(125) = {0.073538, -0.728026, 0, 1.0};
Point(126) = {0.074308, -0.726940, 0, 1.0};
Point(127) = {0.074760, -0.726102, 0, 1.0};
Point(128) = {0.074857, -0.724957, 0, 1.0};
Point(129) = {0.074631, -0.724009, 0, 1.0};
Point(130) = {0.074092, -0.723450, 0, 1.0};
Point(131) = {0.073221, -0.722891, 0, 1.0};
Point(132) = {0.072013, -0.722222, 0, 1.0};
Point(133) = {0.070487, -0.721658, 0, 1.0};
Point(134) = {0.068647, -0.721176, 0, 1.0};
Point(135) = {0.066496, -0.720675, 0, 1.0};
Point(136) = {0.064047, -0.720253, 0, 1.0};
Point(137) = {0.061307, -0.719831, 0, 1.0};
Point(138) = {0.058295, -0.719488, 0, 1.0};
Point(139) = {0.055014, -0.719157, 0, 1.0};
Point(140) = {0.051485, -0.718904, 0, 1.0};
Point(141) = {0.047721, -0.718673, 0, 1.0};
Point(142) = {0.043741, -0.718526, 0, 1.0};
Point(143) = {0.039558, -0.718406, 0, 1.0};
Point(144) = {0.035191, -0.718373, 0, 1.0};
Point(145) = {0.030660, -0.718379, 0, 1.0};
Point(146) = {0.025986, -0.718476, 0, 1.0};
Point(147) = {0.021186, -0.718616, 0, 1.0};
Point(148) = {0.016284, -0.718856, 0, 1.0};
Point(149) = {0.011299, -0.719154, 0, 1.0};
Point(150) = {0.006254, -0.719557, 0, 1.0};
Point(151) = {0.001170, -0.720039, 0, 1.0};
Point(152) = {-0.003925, -0.720686, 0, 1.0};
Point(153) = {-0.009013, -0.721440, 0, 1.0};
Point(154) = {-0.014072, -0.722327, 0, 1.0};
Point(155) = {-0.019081, -0.723329, 0, 1.0};
Point(156) = {-0.024010, -0.724518, 0, 1.0};
Point(157) = {-0.028831, -0.726072, 0, 1.0};
Point(158) = {-0.033541, -0.727669, 0, 1.0};
Point(159) = {-0.038136, -0.729040, 0, 1.0};
Point(160) = {-0.042592, -0.730281, 0, 1.0};
Point(161) = {-0.046892, -0.731305, 0, 1.0};
Point(162) = {-0.051012, -0.732214, 0, 1.0};
Point(163) = {-0.054938, -0.732945, 0, 1.0};
Point(164) = {-0.058650, -0.733560, 0, 1.0};
Point(165) = {-0.062134, -0.734027, 0, 1.0};
Point(166) = {-0.065371, -0.734403, 0, 1.0};
Point(167) = {-0.068348, -0.734643, 0, 1.0};
Point(168) = {-0.071052, -0.734805, 0, 1.0};
Point(169) = {-0.073469, -0.734889, 0, 1.0};
Point(170) = {-0.074814, -0.734907, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:60};
Spline(3) = {60:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:145};
Spline(7) = {145:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
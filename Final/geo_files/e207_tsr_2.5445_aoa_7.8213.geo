SetFactory("OpenCASCADE");

Point(1) = {0.148139, 0.713107, 0, 1.0};
Point(2) = {0.147452, 0.713292, 0, 1.0};
Point(3) = {0.145470, 0.713882, 0, 1.0};
Point(4) = {0.142350, 0.714890, 0, 1.0};
Point(5) = {0.138215, 0.716249, 0, 1.0};
Point(6) = {0.133124, 0.717869, 0, 1.0};
Point(7) = {0.127099, 0.719714, 0, 1.0};
Point(8) = {0.120213, 0.721788, 0, 1.0};
Point(9) = {0.112567, 0.724072, 0, 1.0};
Point(10) = {0.104273, 0.726534, 0, 1.0};
Point(11) = {0.095442, 0.729132, 0, 1.0};
Point(12) = {0.086196, 0.731821, 0, 1.0};
Point(13) = {0.076657, 0.734552, 0, 1.0};
Point(14) = {0.066949, 0.737263, 0, 1.0};
Point(15) = {0.057196, 0.739890, 0, 1.0};
Point(16) = {0.047521, 0.742348, 0, 1.0};
Point(17) = {0.038004, 0.744537, 0, 1.0};
Point(18) = {0.028692, 0.746396, 0, 1.0};
Point(19) = {0.019639, 0.747884, 0, 1.0};
Point(20) = {0.010890, 0.748978, 0, 1.0};
Point(21) = {0.002487, 0.749678, 0, 1.0};
Point(22) = {-0.005528, 0.750000, 0, 1.0};
Point(23) = {-0.013091, 0.749991, 0, 1.0};
Point(24) = {-0.020124, 0.749683, 0, 1.0};
Point(25) = {-0.026551, 0.749103, 0, 1.0};
Point(26) = {-0.032303, 0.748276, 0, 1.0};
Point(27) = {-0.037327, 0.747228, 0, 1.0};
Point(28) = {-0.041568, 0.745995, 0, 1.0};
Point(29) = {-0.044991, 0.744618, 0, 1.0};
Point(30) = {-0.047563, 0.743149, 0, 1.0};
Point(31) = {-0.049253, 0.741663, 0, 1.0};
Point(32) = {-0.050004, 0.740294, 0, 1.0};
Point(33) = {-0.049568, 0.739001, 0, 1.0};
Point(34) = {-0.047926, 0.737609, 0, 1.0};
Point(35) = {-0.045269, 0.736141, 0, 1.0};
Point(36) = {-0.041607, 0.734661, 0, 1.0};
Point(37) = {-0.036964, 0.733186, 0, 1.0};
Point(38) = {-0.031383, 0.731728, 0, 1.0};
Point(39) = {-0.024912, 0.730303, 0, 1.0};
Point(40) = {-0.017617, 0.728915, 0, 1.0};
Point(41) = {-0.009573, 0.727574, 0, 1.0};
Point(42) = {-0.000869, 0.726285, 0, 1.0};
Point(43) = {0.008398, 0.725063, 0, 1.0};
Point(44) = {0.018124, 0.723927, 0, 1.0};
Point(45) = {0.028232, 0.722912, 0, 1.0};
Point(46) = {0.038661, 0.722000, 0, 1.0};
Point(47) = {0.049304, 0.721144, 0, 1.0};
Point(48) = {0.060021, 0.720316, 0, 1.0};
Point(49) = {0.070667, 0.719505, 0, 1.0};
Point(50) = {0.081106, 0.718707, 0, 1.0};
Point(51) = {0.091199, 0.717925, 0, 1.0};
Point(52) = {0.100817, 0.717161, 0, 1.0};
Point(53) = {0.109827, 0.716426, 0, 1.0};
Point(54) = {0.118113, 0.715730, 0, 1.0};
Point(55) = {0.125561, 0.715088, 0, 1.0};
Point(56) = {0.132067, 0.714528, 0, 1.0};
Point(57) = {0.137571, 0.714076, 0, 1.0};
Point(58) = {0.142027, 0.713729, 0, 1.0};
Point(59) = {0.145354, 0.713437, 0, 1.0};
Point(60) = {0.147432, 0.713204, 0, 1.0};
Point(61) = {-0.148139, -0.713107, 0, 1.0};
Point(62) = {-0.147452, -0.713292, 0, 1.0};
Point(63) = {-0.145470, -0.713882, 0, 1.0};
Point(64) = {-0.142350, -0.714890, 0, 1.0};
Point(65) = {-0.138215, -0.716249, 0, 1.0};
Point(66) = {-0.133124, -0.717869, 0, 1.0};
Point(67) = {-0.127099, -0.719714, 0, 1.0};
Point(68) = {-0.120213, -0.721788, 0, 1.0};
Point(69) = {-0.112567, -0.724072, 0, 1.0};
Point(70) = {-0.104273, -0.726534, 0, 1.0};
Point(71) = {-0.095442, -0.729132, 0, 1.0};
Point(72) = {-0.086196, -0.731821, 0, 1.0};
Point(73) = {-0.076657, -0.734552, 0, 1.0};
Point(74) = {-0.066949, -0.737263, 0, 1.0};
Point(75) = {-0.057196, -0.739890, 0, 1.0};
Point(76) = {-0.047521, -0.742348, 0, 1.0};
Point(77) = {-0.038004, -0.744537, 0, 1.0};
Point(78) = {-0.028692, -0.746396, 0, 1.0};
Point(79) = {-0.019639, -0.747884, 0, 1.0};
Point(80) = {-0.010890, -0.748978, 0, 1.0};
Point(81) = {-0.002487, -0.749678, 0, 1.0};
Point(82) = {0.005528, -0.750000, 0, 1.0};
Point(83) = {0.013091, -0.749991, 0, 1.0};
Point(84) = {0.020124, -0.749683, 0, 1.0};
Point(85) = {0.026551, -0.749103, 0, 1.0};
Point(86) = {0.032303, -0.748276, 0, 1.0};
Point(87) = {0.037327, -0.747228, 0, 1.0};
Point(88) = {0.041568, -0.745995, 0, 1.0};
Point(89) = {0.044991, -0.744618, 0, 1.0};
Point(90) = {0.047563, -0.743149, 0, 1.0};
Point(91) = {0.049253, -0.741663, 0, 1.0};
Point(92) = {0.050004, -0.740294, 0, 1.0};
Point(93) = {0.049568, -0.739001, 0, 1.0};
Point(94) = {0.047926, -0.737609, 0, 1.0};
Point(95) = {0.045269, -0.736141, 0, 1.0};
Point(96) = {0.041607, -0.734661, 0, 1.0};
Point(97) = {0.036964, -0.733186, 0, 1.0};
Point(98) = {0.031383, -0.731728, 0, 1.0};
Point(99) = {0.024912, -0.730303, 0, 1.0};
Point(100) = {0.017617, -0.728915, 0, 1.0};
Point(101) = {0.009573, -0.727574, 0, 1.0};
Point(102) = {0.000869, -0.726285, 0, 1.0};
Point(103) = {-0.008398, -0.725063, 0, 1.0};
Point(104) = {-0.018124, -0.723927, 0, 1.0};
Point(105) = {-0.028232, -0.722912, 0, 1.0};
Point(106) = {-0.038661, -0.722000, 0, 1.0};
Point(107) = {-0.049304, -0.721144, 0, 1.0};
Point(108) = {-0.060021, -0.720316, 0, 1.0};
Point(109) = {-0.070667, -0.719505, 0, 1.0};
Point(110) = {-0.081106, -0.718707, 0, 1.0};
Point(111) = {-0.091199, -0.717925, 0, 1.0};
Point(112) = {-0.100817, -0.717161, 0, 1.0};
Point(113) = {-0.109827, -0.716426, 0, 1.0};
Point(114) = {-0.118113, -0.715730, 0, 1.0};
Point(115) = {-0.125561, -0.715088, 0, 1.0};
Point(116) = {-0.132067, -0.714528, 0, 1.0};
Point(117) = {-0.137571, -0.714076, 0, 1.0};
Point(118) = {-0.142027, -0.713729, 0, 1.0};
Point(119) = {-0.145354, -0.713437, 0, 1.0};
Point(120) = {-0.147432, -0.713204, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073742, 0.749006, 0, 1.0};
Point(2) = {0.068592, 0.749507, 0, 1.0};
Point(3) = {0.063473, 0.749816, 0, 1.0};
Point(4) = {0.058376, 0.749993, 0, 1.0};
Point(5) = {0.053308, 0.750000, 0, 1.0};
Point(6) = {0.048261, 0.749875, 0, 1.0};
Point(7) = {0.043235, 0.749623, 0, 1.0};
Point(8) = {0.038227, 0.749262, 0, 1.0};
Point(9) = {0.033235, 0.748803, 0, 1.0};
Point(10) = {0.028257, 0.748266, 0, 1.0};
Point(11) = {0.023292, 0.747639, 0, 1.0};
Point(12) = {0.018345, 0.746914, 0, 1.0};
Point(13) = {0.013411, 0.746100, 0, 1.0};
Point(14) = {0.008493, 0.745198, 0, 1.0};
Point(15) = {0.003590, 0.744197, 0, 1.0};
Point(16) = {-0.001296, 0.743097, 0, 1.0};
Point(17) = {-0.006164, 0.741890, 0, 1.0};
Point(18) = {-0.008102, 0.741352, 0, 1.0};
Point(19) = {-0.010041, 0.740813, 0, 1.0};
Point(20) = {-0.011973, 0.740239, 0, 1.0};
Point(21) = {-0.013899, 0.739627, 0, 1.0};
Point(22) = {-0.015820, 0.738986, 0, 1.0};
Point(23) = {-0.017735, 0.738306, 0, 1.0};
Point(24) = {-0.019633, 0.737526, 0, 1.0};
Point(25) = {-0.021509, 0.736611, 0, 1.0};
Point(26) = {-0.023356, 0.735519, 0, 1.0};
Point(27) = {-0.024238, 0.734722, 0, 1.0};
Point(28) = {-0.024451, 0.734478, 0, 1.0};
Point(29) = {-0.024655, 0.734177, 0, 1.0};
Point(30) = {-0.024849, 0.733815, 0, 1.0};
Point(31) = {-0.025000, 0.733196, 0, 1.0};
Point(32) = {-0.024595, 0.732276, 0, 1.0};
Point(33) = {-0.024297, 0.732007, 0, 1.0};
Point(34) = {-0.024019, 0.731856, 0, 1.0};
Point(35) = {-0.023746, 0.731739, 0, 1.0};
Point(36) = {-0.022686, 0.731453, 0, 1.0};
Point(37) = {-0.020615, 0.731188, 0, 1.0};
Point(38) = {-0.018567, 0.731060, 0, 1.0};
Point(39) = {-0.016536, 0.731038, 0, 1.0};
Point(40) = {-0.014517, 0.731088, 0, 1.0};
Point(41) = {-0.012511, 0.731214, 0, 1.0};
Point(42) = {-0.010506, 0.731346, 0, 1.0};
Point(43) = {-0.008505, 0.731503, 0, 1.0};
Point(44) = {-0.006509, 0.731695, 0, 1.0};
Point(45) = {-0.004514, 0.731886, 0, 1.0};
Point(46) = {0.000458, 0.732465, 0, 1.0};
Point(47) = {0.005414, 0.733139, 0, 1.0};
Point(48) = {0.010359, 0.733882, 0, 1.0};
Point(49) = {0.015291, 0.734705, 0, 1.0};
Point(50) = {0.020211, 0.735597, 0, 1.0};
Point(51) = {0.025118, 0.736569, 0, 1.0};
Point(52) = {0.030014, 0.737609, 0, 1.0};
Point(53) = {0.034899, 0.738719, 0, 1.0};
Point(54) = {0.039772, 0.739897, 0, 1.0};
Point(55) = {0.044632, 0.741153, 0, 1.0};
Point(56) = {0.049489, 0.742431, 0, 1.0};
Point(57) = {0.054342, 0.743728, 0, 1.0};
Point(58) = {0.059198, 0.745015, 0, 1.0};
Point(59) = {0.064053, 0.746302, 0, 1.0};
Point(60) = {0.068913, 0.747559, 0, 1.0};
Point(61) = {0.073777, 0.748788, 0, 1.0};
Point(62) = {-0.073742, -0.749006, 0, 1.0};
Point(63) = {-0.068592, -0.749507, 0, 1.0};
Point(64) = {-0.063473, -0.749816, 0, 1.0};
Point(65) = {-0.058376, -0.749993, 0, 1.0};
Point(66) = {-0.053308, -0.750000, 0, 1.0};
Point(67) = {-0.048261, -0.749875, 0, 1.0};
Point(68) = {-0.043235, -0.749623, 0, 1.0};
Point(69) = {-0.038227, -0.749262, 0, 1.0};
Point(70) = {-0.033235, -0.748803, 0, 1.0};
Point(71) = {-0.028257, -0.748266, 0, 1.0};
Point(72) = {-0.023292, -0.747639, 0, 1.0};
Point(73) = {-0.018345, -0.746914, 0, 1.0};
Point(74) = {-0.013411, -0.746100, 0, 1.0};
Point(75) = {-0.008493, -0.745198, 0, 1.0};
Point(76) = {-0.003590, -0.744197, 0, 1.0};
Point(77) = {0.001296, -0.743097, 0, 1.0};
Point(78) = {0.006164, -0.741890, 0, 1.0};
Point(79) = {0.008102, -0.741352, 0, 1.0};
Point(80) = {0.010041, -0.740813, 0, 1.0};
Point(81) = {0.011973, -0.740239, 0, 1.0};
Point(82) = {0.013899, -0.739627, 0, 1.0};
Point(83) = {0.015820, -0.738986, 0, 1.0};
Point(84) = {0.017735, -0.738306, 0, 1.0};
Point(85) = {0.019633, -0.737526, 0, 1.0};
Point(86) = {0.021509, -0.736611, 0, 1.0};
Point(87) = {0.023356, -0.735519, 0, 1.0};
Point(88) = {0.024238, -0.734722, 0, 1.0};
Point(89) = {0.024451, -0.734478, 0, 1.0};
Point(90) = {0.024655, -0.734177, 0, 1.0};
Point(91) = {0.024849, -0.733815, 0, 1.0};
Point(92) = {0.025000, -0.733196, 0, 1.0};
Point(93) = {0.024595, -0.732276, 0, 1.0};
Point(94) = {0.024297, -0.732007, 0, 1.0};
Point(95) = {0.024019, -0.731856, 0, 1.0};
Point(96) = {0.023746, -0.731739, 0, 1.0};
Point(97) = {0.022686, -0.731453, 0, 1.0};
Point(98) = {0.020615, -0.731188, 0, 1.0};
Point(99) = {0.018567, -0.731060, 0, 1.0};
Point(100) = {0.016536, -0.731038, 0, 1.0};
Point(101) = {0.014517, -0.731088, 0, 1.0};
Point(102) = {0.012511, -0.731214, 0, 1.0};
Point(103) = {0.010506, -0.731346, 0, 1.0};
Point(104) = {0.008505, -0.731503, 0, 1.0};
Point(105) = {0.006509, -0.731695, 0, 1.0};
Point(106) = {0.004514, -0.731886, 0, 1.0};
Point(107) = {-0.000458, -0.732465, 0, 1.0};
Point(108) = {-0.005414, -0.733139, 0, 1.0};
Point(109) = {-0.010359, -0.733882, 0, 1.0};
Point(110) = {-0.015291, -0.734705, 0, 1.0};
Point(111) = {-0.020211, -0.735597, 0, 1.0};
Point(112) = {-0.025118, -0.736569, 0, 1.0};
Point(113) = {-0.030014, -0.737609, 0, 1.0};
Point(114) = {-0.034899, -0.738719, 0, 1.0};
Point(115) = {-0.039772, -0.739897, 0, 1.0};
Point(116) = {-0.044632, -0.741153, 0, 1.0};
Point(117) = {-0.049489, -0.742431, 0, 1.0};
Point(118) = {-0.054342, -0.743728, 0, 1.0};
Point(119) = {-0.059198, -0.745015, 0, 1.0};
Point(120) = {-0.064053, -0.746302, 0, 1.0};
Point(121) = {-0.068913, -0.747559, 0, 1.0};
Point(122) = {-0.073777, -0.748788, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
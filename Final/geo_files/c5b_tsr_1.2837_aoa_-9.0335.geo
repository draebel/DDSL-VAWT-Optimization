SetFactory("OpenCASCADE");

Point(1) = {0.147485, 0.748012, 0, 1.0};
Point(2) = {0.137183, 0.749015, 0, 1.0};
Point(3) = {0.126946, 0.749633, 0, 1.0};
Point(4) = {0.116753, 0.749986, 0, 1.0};
Point(5) = {0.106616, 0.750000, 0, 1.0};
Point(6) = {0.096522, 0.749751, 0, 1.0};
Point(7) = {0.086470, 0.749246, 0, 1.0};
Point(8) = {0.076454, 0.748525, 0, 1.0};
Point(9) = {0.066471, 0.747607, 0, 1.0};
Point(10) = {0.056513, 0.746531, 0, 1.0};
Point(11) = {0.046585, 0.745278, 0, 1.0};
Point(12) = {0.036689, 0.743828, 0, 1.0};
Point(13) = {0.026823, 0.742200, 0, 1.0};
Point(14) = {0.016985, 0.740396, 0, 1.0};
Point(15) = {0.007181, 0.738393, 0, 1.0};
Point(16) = {-0.002592, 0.736195, 0, 1.0};
Point(17) = {-0.012328, 0.733779, 0, 1.0};
Point(18) = {-0.016205, 0.732704, 0, 1.0};
Point(19) = {-0.020081, 0.731626, 0, 1.0};
Point(20) = {-0.023946, 0.730479, 0, 1.0};
Point(21) = {-0.027798, 0.729254, 0, 1.0};
Point(22) = {-0.031640, 0.727972, 0, 1.0};
Point(23) = {-0.035470, 0.726612, 0, 1.0};
Point(24) = {-0.039267, 0.725053, 0, 1.0};
Point(25) = {-0.043019, 0.723222, 0, 1.0};
Point(26) = {-0.046712, 0.721038, 0, 1.0};
Point(27) = {-0.048477, 0.719445, 0, 1.0};
Point(28) = {-0.048903, 0.718957, 0, 1.0};
Point(29) = {-0.049310, 0.718353, 0, 1.0};
Point(30) = {-0.049697, 0.717630, 0, 1.0};
Point(31) = {-0.050000, 0.716392, 0, 1.0};
Point(32) = {-0.049190, 0.714552, 0, 1.0};
Point(33) = {-0.048594, 0.714014, 0, 1.0};
Point(34) = {-0.048038, 0.713711, 0, 1.0};
Point(35) = {-0.047492, 0.713478, 0, 1.0};
Point(36) = {-0.045371, 0.712906, 0, 1.0};
Point(37) = {-0.041230, 0.712377, 0, 1.0};
Point(38) = {-0.037134, 0.712121, 0, 1.0};
Point(39) = {-0.033072, 0.712075, 0, 1.0};
Point(40) = {-0.029035, 0.712176, 0, 1.0};
Point(41) = {-0.025022, 0.712428, 0, 1.0};
Point(42) = {-0.021012, 0.712692, 0, 1.0};
Point(43) = {-0.017010, 0.713007, 0, 1.0};
Point(44) = {-0.013019, 0.713389, 0, 1.0};
Point(45) = {-0.009028, 0.713772, 0, 1.0};
Point(46) = {0.000916, 0.714929, 0, 1.0};
Point(47) = {0.010829, 0.716278, 0, 1.0};
Point(48) = {0.020718, 0.717765, 0, 1.0};
Point(49) = {0.030582, 0.719409, 0, 1.0};
Point(50) = {0.040422, 0.721195, 0, 1.0};
Point(51) = {0.050237, 0.723138, 0, 1.0};
Point(52) = {0.060029, 0.725219, 0, 1.0};
Point(53) = {0.069797, 0.727437, 0, 1.0};
Point(54) = {0.079544, 0.729794, 0, 1.0};
Point(55) = {0.089264, 0.732307, 0, 1.0};
Point(56) = {0.098978, 0.734862, 0, 1.0};
Point(57) = {0.108685, 0.737455, 0, 1.0};
Point(58) = {0.118395, 0.740030, 0, 1.0};
Point(59) = {0.128106, 0.742603, 0, 1.0};
Point(60) = {0.137826, 0.745117, 0, 1.0};
Point(61) = {0.147554, 0.747577, 0, 1.0};
Point(62) = {-0.147485, -0.748012, 0, 1.0};
Point(63) = {-0.137183, -0.749015, 0, 1.0};
Point(64) = {-0.126946, -0.749633, 0, 1.0};
Point(65) = {-0.116753, -0.749986, 0, 1.0};
Point(66) = {-0.106616, -0.750000, 0, 1.0};
Point(67) = {-0.096522, -0.749751, 0, 1.0};
Point(68) = {-0.086470, -0.749246, 0, 1.0};
Point(69) = {-0.076454, -0.748525, 0, 1.0};
Point(70) = {-0.066471, -0.747607, 0, 1.0};
Point(71) = {-0.056513, -0.746531, 0, 1.0};
Point(72) = {-0.046585, -0.745278, 0, 1.0};
Point(73) = {-0.036689, -0.743828, 0, 1.0};
Point(74) = {-0.026823, -0.742200, 0, 1.0};
Point(75) = {-0.016985, -0.740396, 0, 1.0};
Point(76) = {-0.007181, -0.738393, 0, 1.0};
Point(77) = {0.002592, -0.736195, 0, 1.0};
Point(78) = {0.012328, -0.733779, 0, 1.0};
Point(79) = {0.016205, -0.732704, 0, 1.0};
Point(80) = {0.020081, -0.731626, 0, 1.0};
Point(81) = {0.023946, -0.730479, 0, 1.0};
Point(82) = {0.027798, -0.729254, 0, 1.0};
Point(83) = {0.031640, -0.727972, 0, 1.0};
Point(84) = {0.035470, -0.726612, 0, 1.0};
Point(85) = {0.039267, -0.725053, 0, 1.0};
Point(86) = {0.043019, -0.723222, 0, 1.0};
Point(87) = {0.046712, -0.721038, 0, 1.0};
Point(88) = {0.048477, -0.719445, 0, 1.0};
Point(89) = {0.048903, -0.718957, 0, 1.0};
Point(90) = {0.049310, -0.718353, 0, 1.0};
Point(91) = {0.049697, -0.717630, 0, 1.0};
Point(92) = {0.050000, -0.716392, 0, 1.0};
Point(93) = {0.049190, -0.714552, 0, 1.0};
Point(94) = {0.048594, -0.714014, 0, 1.0};
Point(95) = {0.048038, -0.713711, 0, 1.0};
Point(96) = {0.047492, -0.713478, 0, 1.0};
Point(97) = {0.045371, -0.712906, 0, 1.0};
Point(98) = {0.041230, -0.712377, 0, 1.0};
Point(99) = {0.037134, -0.712121, 0, 1.0};
Point(100) = {0.033072, -0.712075, 0, 1.0};
Point(101) = {0.029035, -0.712176, 0, 1.0};
Point(102) = {0.025022, -0.712428, 0, 1.0};
Point(103) = {0.021012, -0.712692, 0, 1.0};
Point(104) = {0.017010, -0.713007, 0, 1.0};
Point(105) = {0.013019, -0.713389, 0, 1.0};
Point(106) = {0.009028, -0.713772, 0, 1.0};
Point(107) = {-0.000916, -0.714929, 0, 1.0};
Point(108) = {-0.010829, -0.716278, 0, 1.0};
Point(109) = {-0.020718, -0.717765, 0, 1.0};
Point(110) = {-0.030582, -0.719409, 0, 1.0};
Point(111) = {-0.040422, -0.721195, 0, 1.0};
Point(112) = {-0.050237, -0.723138, 0, 1.0};
Point(113) = {-0.060029, -0.725219, 0, 1.0};
Point(114) = {-0.069797, -0.727437, 0, 1.0};
Point(115) = {-0.079544, -0.729794, 0, 1.0};
Point(116) = {-0.089264, -0.732307, 0, 1.0};
Point(117) = {-0.098978, -0.734862, 0, 1.0};
Point(118) = {-0.108685, -0.737455, 0, 1.0};
Point(119) = {-0.118395, -0.740030, 0, 1.0};
Point(120) = {-0.128106, -0.742603, 0, 1.0};
Point(121) = {-0.137826, -0.745117, 0, 1.0};
Point(122) = {-0.147554, -0.747577, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
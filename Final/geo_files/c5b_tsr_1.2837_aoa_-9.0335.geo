SetFactory("OpenCASCADE");

Point(1) = {0.110614, 0.748509, 0, 1.0};
Point(2) = {0.102887, 0.749261, 0, 1.0};
Point(3) = {0.095210, 0.749725, 0, 1.0};
Point(4) = {0.087565, 0.749990, 0, 1.0};
Point(5) = {0.079962, 0.750000, 0, 1.0};
Point(6) = {0.072391, 0.749813, 0, 1.0};
Point(7) = {0.064853, 0.749435, 0, 1.0};
Point(8) = {0.057341, 0.748894, 0, 1.0};
Point(9) = {0.049853, 0.748205, 0, 1.0};
Point(10) = {0.042385, 0.747398, 0, 1.0};
Point(11) = {0.034939, 0.746458, 0, 1.0};
Point(12) = {0.027517, 0.745371, 0, 1.0};
Point(13) = {0.020117, 0.744150, 0, 1.0};
Point(14) = {0.012739, 0.742797, 0, 1.0};
Point(15) = {0.005386, 0.741295, 0, 1.0};
Point(16) = {-0.001944, 0.739646, 0, 1.0};
Point(17) = {-0.009246, 0.737834, 0, 1.0};
Point(18) = {-0.012154, 0.737028, 0, 1.0};
Point(19) = {-0.015061, 0.736220, 0, 1.0};
Point(20) = {-0.017959, 0.735359, 0, 1.0};
Point(21) = {-0.020848, 0.734440, 0, 1.0};
Point(22) = {-0.023730, 0.733479, 0, 1.0};
Point(23) = {-0.026602, 0.732459, 0, 1.0};
Point(24) = {-0.029450, 0.731289, 0, 1.0};
Point(25) = {-0.032264, 0.729916, 0, 1.0};
Point(26) = {-0.035034, 0.728278, 0, 1.0};
Point(27) = {-0.036358, 0.727084, 0, 1.0};
Point(28) = {-0.036677, 0.726718, 0, 1.0};
Point(29) = {-0.036983, 0.726265, 0, 1.0};
Point(30) = {-0.037273, 0.725723, 0, 1.0};
Point(31) = {-0.037500, 0.724794, 0, 1.0};
Point(32) = {-0.036892, 0.723414, 0, 1.0};
Point(33) = {-0.036446, 0.723010, 0, 1.0};
Point(34) = {-0.036028, 0.722783, 0, 1.0};
Point(35) = {-0.035619, 0.722608, 0, 1.0};
Point(36) = {-0.034028, 0.722180, 0, 1.0};
Point(37) = {-0.030922, 0.721782, 0, 1.0};
Point(38) = {-0.027850, 0.721591, 0, 1.0};
Point(39) = {-0.024804, 0.721556, 0, 1.0};
Point(40) = {-0.021776, 0.721632, 0, 1.0};
Point(41) = {-0.018767, 0.721821, 0, 1.0};
Point(42) = {-0.015759, 0.722019, 0, 1.0};
Point(43) = {-0.012757, 0.722255, 0, 1.0};
Point(44) = {-0.009764, 0.722542, 0, 1.0};
Point(45) = {-0.006771, 0.722829, 0, 1.0};
Point(46) = {0.000687, 0.723697, 0, 1.0};
Point(47) = {0.008121, 0.724708, 0, 1.0};
Point(48) = {0.015539, 0.725824, 0, 1.0};
Point(49) = {0.022936, 0.727057, 0, 1.0};
Point(50) = {0.030317, 0.728396, 0, 1.0};
Point(51) = {0.037678, 0.729853, 0, 1.0};
Point(52) = {0.045021, 0.731414, 0, 1.0};
Point(53) = {0.052348, 0.733078, 0, 1.0};
Point(54) = {0.059658, 0.734846, 0, 1.0};
Point(55) = {0.066948, 0.736730, 0, 1.0};
Point(56) = {0.074233, 0.738647, 0, 1.0};
Point(57) = {0.081514, 0.740591, 0, 1.0};
Point(58) = {0.088796, 0.742523, 0, 1.0};
Point(59) = {0.096079, 0.744452, 0, 1.0};
Point(60) = {0.103370, 0.746338, 0, 1.0};
Point(61) = {0.110665, 0.748182, 0, 1.0};
Point(62) = {-0.110614, -0.748509, 0, 1.0};
Point(63) = {-0.102887, -0.749261, 0, 1.0};
Point(64) = {-0.095210, -0.749725, 0, 1.0};
Point(65) = {-0.087565, -0.749990, 0, 1.0};
Point(66) = {-0.079962, -0.750000, 0, 1.0};
Point(67) = {-0.072391, -0.749813, 0, 1.0};
Point(68) = {-0.064853, -0.749435, 0, 1.0};
Point(69) = {-0.057341, -0.748894, 0, 1.0};
Point(70) = {-0.049853, -0.748205, 0, 1.0};
Point(71) = {-0.042385, -0.747398, 0, 1.0};
Point(72) = {-0.034939, -0.746458, 0, 1.0};
Point(73) = {-0.027517, -0.745371, 0, 1.0};
Point(74) = {-0.020117, -0.744150, 0, 1.0};
Point(75) = {-0.012739, -0.742797, 0, 1.0};
Point(76) = {-0.005386, -0.741295, 0, 1.0};
Point(77) = {0.001944, -0.739646, 0, 1.0};
Point(78) = {0.009246, -0.737834, 0, 1.0};
Point(79) = {0.012154, -0.737028, 0, 1.0};
Point(80) = {0.015061, -0.736220, 0, 1.0};
Point(81) = {0.017959, -0.735359, 0, 1.0};
Point(82) = {0.020848, -0.734440, 0, 1.0};
Point(83) = {0.023730, -0.733479, 0, 1.0};
Point(84) = {0.026602, -0.732459, 0, 1.0};
Point(85) = {0.029450, -0.731289, 0, 1.0};
Point(86) = {0.032264, -0.729916, 0, 1.0};
Point(87) = {0.035034, -0.728278, 0, 1.0};
Point(88) = {0.036358, -0.727084, 0, 1.0};
Point(89) = {0.036677, -0.726718, 0, 1.0};
Point(90) = {0.036983, -0.726265, 0, 1.0};
Point(91) = {0.037273, -0.725723, 0, 1.0};
Point(92) = {0.037500, -0.724794, 0, 1.0};
Point(93) = {0.036892, -0.723414, 0, 1.0};
Point(94) = {0.036446, -0.723010, 0, 1.0};
Point(95) = {0.036028, -0.722783, 0, 1.0};
Point(96) = {0.035619, -0.722608, 0, 1.0};
Point(97) = {0.034028, -0.722180, 0, 1.0};
Point(98) = {0.030922, -0.721782, 0, 1.0};
Point(99) = {0.027850, -0.721591, 0, 1.0};
Point(100) = {0.024804, -0.721556, 0, 1.0};
Point(101) = {0.021776, -0.721632, 0, 1.0};
Point(102) = {0.018767, -0.721821, 0, 1.0};
Point(103) = {0.015759, -0.722019, 0, 1.0};
Point(104) = {0.012757, -0.722255, 0, 1.0};
Point(105) = {0.009764, -0.722542, 0, 1.0};
Point(106) = {0.006771, -0.722829, 0, 1.0};
Point(107) = {-0.000687, -0.723697, 0, 1.0};
Point(108) = {-0.008121, -0.724708, 0, 1.0};
Point(109) = {-0.015539, -0.725824, 0, 1.0};
Point(110) = {-0.022936, -0.727057, 0, 1.0};
Point(111) = {-0.030317, -0.728396, 0, 1.0};
Point(112) = {-0.037678, -0.729853, 0, 1.0};
Point(113) = {-0.045021, -0.731414, 0, 1.0};
Point(114) = {-0.052348, -0.733078, 0, 1.0};
Point(115) = {-0.059658, -0.734846, 0, 1.0};
Point(116) = {-0.066948, -0.736730, 0, 1.0};
Point(117) = {-0.074233, -0.738647, 0, 1.0};
Point(118) = {-0.081514, -0.740591, 0, 1.0};
Point(119) = {-0.088796, -0.742523, 0, 1.0};
Point(120) = {-0.096079, -0.744452, 0, 1.0};
Point(121) = {-0.103370, -0.746338, 0, 1.0};
Point(122) = {-0.110665, -0.748182, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074776, 0.742489, 0, 1.0};
Point(2) = {0.071253, 0.743015, 0, 1.0};
Point(3) = {0.067253, 0.743615, 0, 1.0};
Point(4) = {0.063252, 0.744218, 0, 1.0};
Point(5) = {0.059252, 0.744806, 0, 1.0};
Point(6) = {0.055253, 0.745385, 0, 1.0};
Point(7) = {0.051255, 0.745952, 0, 1.0};
Point(8) = {0.043262, 0.747004, 0, 1.0};
Point(9) = {0.035276, 0.747940, 0, 1.0};
Point(10) = {0.027299, 0.748726, 0, 1.0};
Point(11) = {0.019331, 0.749358, 0, 1.0};
Point(12) = {0.011374, 0.749790, 0, 1.0};
Point(13) = {0.003429, 0.750000, 0, 1.0};
Point(14) = {-0.004502, 0.749983, 0, 1.0};
Point(15) = {-0.012422, 0.749752, 0, 1.0};
Point(16) = {-0.016377, 0.749561, 0, 1.0};
Point(17) = {-0.020329, 0.749318, 0, 1.0};
Point(18) = {-0.024278, 0.749015, 0, 1.0};
Point(19) = {-0.028223, 0.748644, 0, 1.0};
Point(20) = {-0.032165, 0.748212, 0, 1.0};
Point(21) = {-0.036103, 0.747721, 0, 1.0};
Point(22) = {-0.040038, 0.747163, 0, 1.0};
Point(23) = {-0.043967, 0.746519, 0, 1.0};
Point(24) = {-0.047891, 0.745773, 0, 1.0};
Point(25) = {-0.051808, 0.744912, 0, 1.0};
Point(26) = {-0.055718, 0.743921, 0, 1.0};
Point(27) = {-0.059617, 0.742747, 0, 1.0};
Point(28) = {-0.063502, 0.741330, 0, 1.0};
Point(29) = {-0.067367, 0.739554, 0, 1.0};
Point(30) = {-0.069289, 0.738474, 0, 1.0};
Point(31) = {-0.071199, 0.737199, 0, 1.0};
Point(32) = {-0.072148, 0.736452, 0, 1.0};
Point(33) = {-0.073090, 0.735578, 0, 1.0};
Point(34) = {-0.073650, 0.734960, 0, 1.0};
Point(35) = {-0.074200, 0.734177, 0, 1.0};
Point(36) = {-0.074556, 0.733462, 0, 1.0};
Point(37) = {-0.074878, 0.732163, 0, 1.0};
Point(38) = {-0.074442, 0.731473, 0, 1.0};
Point(39) = {-0.074028, 0.731168, 0, 1.0};
Point(40) = {-0.073414, 0.730819, 0, 1.0};
Point(41) = {-0.072803, 0.730543, 0, 1.0};
Point(42) = {-0.071791, 0.730194, 0, 1.0};
Point(43) = {-0.070786, 0.729956, 0, 1.0};
Point(44) = {-0.068784, 0.729622, 0, 1.0};
Point(45) = {-0.066789, 0.729407, 0, 1.0};
Point(46) = {-0.062808, 0.729148, 0, 1.0};
Point(47) = {-0.058834, 0.729021, 0, 1.0};
Point(48) = {-0.054865, 0.728971, 0, 1.0};
Point(49) = {-0.050900, 0.728982, 0, 1.0};
Point(50) = {-0.046937, 0.729051, 0, 1.0};
Point(51) = {-0.042978, 0.729164, 0, 1.0};
Point(52) = {-0.039020, 0.729312, 0, 1.0};
Point(53) = {-0.035064, 0.729486, 0, 1.0};
Point(54) = {-0.031109, 0.729686, 0, 1.0};
Point(55) = {-0.027155, 0.729901, 0, 1.0};
Point(56) = {-0.023201, 0.730128, 0, 1.0};
Point(57) = {-0.019249, 0.730374, 0, 1.0};
Point(58) = {-0.015300, 0.730673, 0, 1.0};
Point(59) = {-0.011354, 0.731025, 0, 1.0};
Point(60) = {-0.003468, 0.731840, 0, 1.0};
Point(61) = {0.004410, 0.732795, 0, 1.0};
Point(62) = {0.012282, 0.733854, 0, 1.0};
Point(63) = {0.020149, 0.734998, 0, 1.0};
Point(64) = {0.028014, 0.736179, 0, 1.0};
Point(65) = {0.035881, 0.737334, 0, 1.0};
Point(66) = {0.043751, 0.738423, 0, 1.0};
Point(67) = {0.051629, 0.739385, 0, 1.0};
Point(68) = {0.055572, 0.739795, 0, 1.0};
Point(69) = {0.059518, 0.740153, 0, 1.0};
Point(70) = {0.063467, 0.740442, 0, 1.0};
Point(71) = {0.067420, 0.740683, 0, 1.0};
Point(72) = {0.071377, 0.740849, 0, 1.0};
Point(73) = {0.074861, 0.741000, 0, 1.0};
Point(74) = {-0.074776, -0.742489, 0, 1.0};
Point(75) = {-0.071253, -0.743015, 0, 1.0};
Point(76) = {-0.067253, -0.743615, 0, 1.0};
Point(77) = {-0.063252, -0.744218, 0, 1.0};
Point(78) = {-0.059252, -0.744806, 0, 1.0};
Point(79) = {-0.055253, -0.745385, 0, 1.0};
Point(80) = {-0.051255, -0.745952, 0, 1.0};
Point(81) = {-0.043262, -0.747004, 0, 1.0};
Point(82) = {-0.035276, -0.747940, 0, 1.0};
Point(83) = {-0.027299, -0.748726, 0, 1.0};
Point(84) = {-0.019331, -0.749358, 0, 1.0};
Point(85) = {-0.011374, -0.749790, 0, 1.0};
Point(86) = {-0.003429, -0.750000, 0, 1.0};
Point(87) = {0.004502, -0.749983, 0, 1.0};
Point(88) = {0.012422, -0.749752, 0, 1.0};
Point(89) = {0.016377, -0.749561, 0, 1.0};
Point(90) = {0.020329, -0.749318, 0, 1.0};
Point(91) = {0.024278, -0.749015, 0, 1.0};
Point(92) = {0.028223, -0.748644, 0, 1.0};
Point(93) = {0.032165, -0.748212, 0, 1.0};
Point(94) = {0.036103, -0.747721, 0, 1.0};
Point(95) = {0.040038, -0.747163, 0, 1.0};
Point(96) = {0.043967, -0.746519, 0, 1.0};
Point(97) = {0.047891, -0.745773, 0, 1.0};
Point(98) = {0.051808, -0.744912, 0, 1.0};
Point(99) = {0.055718, -0.743921, 0, 1.0};
Point(100) = {0.059617, -0.742747, 0, 1.0};
Point(101) = {0.063502, -0.741330, 0, 1.0};
Point(102) = {0.067367, -0.739554, 0, 1.0};
Point(103) = {0.069289, -0.738474, 0, 1.0};
Point(104) = {0.071199, -0.737199, 0, 1.0};
Point(105) = {0.072148, -0.736452, 0, 1.0};
Point(106) = {0.073090, -0.735578, 0, 1.0};
Point(107) = {0.073650, -0.734960, 0, 1.0};
Point(108) = {0.074200, -0.734177, 0, 1.0};
Point(109) = {0.074556, -0.733462, 0, 1.0};
Point(110) = {0.074878, -0.732163, 0, 1.0};
Point(111) = {0.074442, -0.731473, 0, 1.0};
Point(112) = {0.074028, -0.731168, 0, 1.0};
Point(113) = {0.073414, -0.730819, 0, 1.0};
Point(114) = {0.072803, -0.730543, 0, 1.0};
Point(115) = {0.071791, -0.730194, 0, 1.0};
Point(116) = {0.070786, -0.729956, 0, 1.0};
Point(117) = {0.068784, -0.729622, 0, 1.0};
Point(118) = {0.066789, -0.729407, 0, 1.0};
Point(119) = {0.062808, -0.729148, 0, 1.0};
Point(120) = {0.058834, -0.729021, 0, 1.0};
Point(121) = {0.054865, -0.728971, 0, 1.0};
Point(122) = {0.050900, -0.728982, 0, 1.0};
Point(123) = {0.046937, -0.729051, 0, 1.0};
Point(124) = {0.042978, -0.729164, 0, 1.0};
Point(125) = {0.039020, -0.729312, 0, 1.0};
Point(126) = {0.035064, -0.729486, 0, 1.0};
Point(127) = {0.031109, -0.729686, 0, 1.0};
Point(128) = {0.027155, -0.729901, 0, 1.0};
Point(129) = {0.023201, -0.730128, 0, 1.0};
Point(130) = {0.019249, -0.730374, 0, 1.0};
Point(131) = {0.015300, -0.730673, 0, 1.0};
Point(132) = {0.011354, -0.731025, 0, 1.0};
Point(133) = {0.003468, -0.731840, 0, 1.0};
Point(134) = {-0.004410, -0.732795, 0, 1.0};
Point(135) = {-0.012282, -0.733854, 0, 1.0};
Point(136) = {-0.020149, -0.734998, 0, 1.0};
Point(137) = {-0.028014, -0.736179, 0, 1.0};
Point(138) = {-0.035881, -0.737334, 0, 1.0};
Point(139) = {-0.043751, -0.738423, 0, 1.0};
Point(140) = {-0.051629, -0.739385, 0, 1.0};
Point(141) = {-0.055572, -0.739795, 0, 1.0};
Point(142) = {-0.059518, -0.740153, 0, 1.0};
Point(143) = {-0.063467, -0.740442, 0, 1.0};
Point(144) = {-0.067420, -0.740683, 0, 1.0};
Point(145) = {-0.071377, -0.740849, 0, 1.0};
Point(146) = {-0.074861, -0.741000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
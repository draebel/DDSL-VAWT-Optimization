SetFactory("OpenCASCADE");

Point(1) = {0.074878, 0.741646, 0, 1.0};
Point(2) = {0.071091, 0.742189, 0, 1.0};
Point(3) = {0.067301, 0.742785, 0, 1.0};
Point(4) = {0.063511, 0.743385, 0, 1.0};
Point(5) = {0.059723, 0.743953, 0, 1.0};
Point(6) = {0.055934, 0.744525, 0, 1.0};
Point(7) = {0.052146, 0.745081, 0, 1.0};
Point(8) = {0.048359, 0.745630, 0, 1.0};
Point(9) = {0.044572, 0.746167, 0, 1.0};
Point(10) = {0.037003, 0.747162, 0, 1.0};
Point(11) = {0.029440, 0.748049, 0, 1.0};
Point(12) = {0.021886, 0.748793, 0, 1.0};
Point(13) = {0.014339, 0.749392, 0, 1.0};
Point(14) = {0.006804, 0.749801, 0, 1.0};
Point(15) = {-0.000720, 0.750000, 0, 1.0};
Point(16) = {-0.008231, 0.749983, 0, 1.0};
Point(17) = {-0.015731, 0.749765, 0, 1.0};
Point(18) = {-0.019476, 0.749584, 0, 1.0};
Point(19) = {-0.023219, 0.749354, 0, 1.0};
Point(20) = {-0.026959, 0.749068, 0, 1.0};
Point(21) = {-0.030695, 0.748716, 0, 1.0};
Point(22) = {-0.034428, 0.748307, 0, 1.0};
Point(23) = {-0.038157, 0.747842, 0, 1.0};
Point(24) = {-0.041883, 0.747314, 0, 1.0};
Point(25) = {-0.045605, 0.746703, 0, 1.0};
Point(26) = {-0.049321, 0.745997, 0, 1.0};
Point(27) = {-0.053030, 0.745182, 0, 1.0};
Point(28) = {-0.056733, 0.744244, 0, 1.0};
Point(29) = {-0.060425, 0.743132, 0, 1.0};
Point(30) = {-0.064105, 0.741789, 0, 1.0};
Point(31) = {-0.067765, 0.740108, 0, 1.0};
Point(32) = {-0.069585, 0.739085, 0, 1.0};
Point(33) = {-0.071394, 0.737877, 0, 1.0};
Point(34) = {-0.072293, 0.737169, 0, 1.0};
Point(35) = {-0.073185, 0.736342, 0, 1.0};
Point(36) = {-0.073715, 0.735757, 0, 1.0};
Point(37) = {-0.074236, 0.735015, 0, 1.0};
Point(38) = {-0.074573, 0.734338, 0, 1.0};
Point(39) = {-0.074878, 0.733108, 0, 1.0};
Point(40) = {-0.074466, 0.732454, 0, 1.0};
Point(41) = {-0.074073, 0.732165, 0, 1.0};
Point(42) = {-0.073491, 0.731835, 0, 1.0};
Point(43) = {-0.072913, 0.731574, 0, 1.0};
Point(44) = {-0.071955, 0.731244, 0, 1.0};
Point(45) = {-0.071003, 0.731018, 0, 1.0};
Point(46) = {-0.069107, 0.730701, 0, 1.0};
Point(47) = {-0.067217, 0.730498, 0, 1.0};
Point(48) = {-0.063447, 0.730253, 0, 1.0};
Point(49) = {-0.059684, 0.730133, 0, 1.0};
Point(50) = {-0.055926, 0.730086, 0, 1.0};
Point(51) = {-0.052170, 0.730095, 0, 1.0};
Point(52) = {-0.048418, 0.730160, 0, 1.0};
Point(53) = {-0.044668, 0.730268, 0, 1.0};
Point(54) = {-0.040920, 0.730408, 0, 1.0};
Point(55) = {-0.037173, 0.730573, 0, 1.0};
Point(56) = {-0.033428, 0.730763, 0, 1.0};
Point(57) = {-0.029683, 0.730966, 0, 1.0};
Point(58) = {-0.025939, 0.731181, 0, 1.0};
Point(59) = {-0.022197, 0.731413, 0, 1.0};
Point(60) = {-0.018457, 0.731697, 0, 1.0};
Point(61) = {-0.014720, 0.732031, 0, 1.0};
Point(62) = {-0.007251, 0.732802, 0, 1.0};
Point(63) = {0.000209, 0.733706, 0, 1.0};
Point(64) = {0.007664, 0.734710, 0, 1.0};
Point(65) = {0.015115, 0.735793, 0, 1.0};
Point(66) = {0.022563, 0.736911, 0, 1.0};
Point(67) = {0.030013, 0.738005, 0, 1.0};
Point(68) = {0.037466, 0.739037, 0, 1.0};
Point(69) = {0.044927, 0.739947, 0, 1.0};
Point(70) = {0.048660, 0.740336, 0, 1.0};
Point(71) = {0.052397, 0.740675, 0, 1.0};
Point(72) = {0.056138, 0.740949, 0, 1.0};
Point(73) = {0.059881, 0.741177, 0, 1.0};
Point(74) = {0.063628, 0.741333, 0, 1.0};
Point(75) = {0.067375, 0.741494, 0, 1.0};
Point(76) = {0.071125, 0.741597, 0, 1.0};
Point(77) = {-0.074878, -0.741646, 0, 1.0};
Point(78) = {-0.071091, -0.742189, 0, 1.0};
Point(79) = {-0.067301, -0.742785, 0, 1.0};
Point(80) = {-0.063511, -0.743385, 0, 1.0};
Point(81) = {-0.059723, -0.743953, 0, 1.0};
Point(82) = {-0.055934, -0.744525, 0, 1.0};
Point(83) = {-0.052146, -0.745081, 0, 1.0};
Point(84) = {-0.048359, -0.745630, 0, 1.0};
Point(85) = {-0.044572, -0.746167, 0, 1.0};
Point(86) = {-0.037003, -0.747162, 0, 1.0};
Point(87) = {-0.029440, -0.748049, 0, 1.0};
Point(88) = {-0.021886, -0.748793, 0, 1.0};
Point(89) = {-0.014339, -0.749392, 0, 1.0};
Point(90) = {-0.006804, -0.749801, 0, 1.0};
Point(91) = {0.000720, -0.750000, 0, 1.0};
Point(92) = {0.008231, -0.749983, 0, 1.0};
Point(93) = {0.015731, -0.749765, 0, 1.0};
Point(94) = {0.019476, -0.749584, 0, 1.0};
Point(95) = {0.023219, -0.749354, 0, 1.0};
Point(96) = {0.026959, -0.749068, 0, 1.0};
Point(97) = {0.030695, -0.748716, 0, 1.0};
Point(98) = {0.034428, -0.748307, 0, 1.0};
Point(99) = {0.038157, -0.747842, 0, 1.0};
Point(100) = {0.041883, -0.747314, 0, 1.0};
Point(101) = {0.045605, -0.746703, 0, 1.0};
Point(102) = {0.049321, -0.745997, 0, 1.0};
Point(103) = {0.053030, -0.745182, 0, 1.0};
Point(104) = {0.056733, -0.744244, 0, 1.0};
Point(105) = {0.060425, -0.743132, 0, 1.0};
Point(106) = {0.064105, -0.741789, 0, 1.0};
Point(107) = {0.067765, -0.740108, 0, 1.0};
Point(108) = {0.069585, -0.739085, 0, 1.0};
Point(109) = {0.071394, -0.737877, 0, 1.0};
Point(110) = {0.072293, -0.737169, 0, 1.0};
Point(111) = {0.073185, -0.736342, 0, 1.0};
Point(112) = {0.073715, -0.735757, 0, 1.0};
Point(113) = {0.074236, -0.735015, 0, 1.0};
Point(114) = {0.074573, -0.734338, 0, 1.0};
Point(115) = {0.074878, -0.733108, 0, 1.0};
Point(116) = {0.074466, -0.732454, 0, 1.0};
Point(117) = {0.074073, -0.732165, 0, 1.0};
Point(118) = {0.073491, -0.731835, 0, 1.0};
Point(119) = {0.072913, -0.731574, 0, 1.0};
Point(120) = {0.071955, -0.731244, 0, 1.0};
Point(121) = {0.071003, -0.731018, 0, 1.0};
Point(122) = {0.069107, -0.730701, 0, 1.0};
Point(123) = {0.067217, -0.730498, 0, 1.0};
Point(124) = {0.063447, -0.730253, 0, 1.0};
Point(125) = {0.059684, -0.730133, 0, 1.0};
Point(126) = {0.055926, -0.730086, 0, 1.0};
Point(127) = {0.052170, -0.730095, 0, 1.0};
Point(128) = {0.048418, -0.730160, 0, 1.0};
Point(129) = {0.044668, -0.730268, 0, 1.0};
Point(130) = {0.040920, -0.730408, 0, 1.0};
Point(131) = {0.037173, -0.730573, 0, 1.0};
Point(132) = {0.033428, -0.730763, 0, 1.0};
Point(133) = {0.029683, -0.730966, 0, 1.0};
Point(134) = {0.025939, -0.731181, 0, 1.0};
Point(135) = {0.022197, -0.731413, 0, 1.0};
Point(136) = {0.018457, -0.731697, 0, 1.0};
Point(137) = {0.014720, -0.732031, 0, 1.0};
Point(138) = {0.007251, -0.732802, 0, 1.0};
Point(139) = {-0.000209, -0.733706, 0, 1.0};
Point(140) = {-0.007664, -0.734710, 0, 1.0};
Point(141) = {-0.015115, -0.735793, 0, 1.0};
Point(142) = {-0.022563, -0.736911, 0, 1.0};
Point(143) = {-0.030013, -0.738005, 0, 1.0};
Point(144) = {-0.037466, -0.739037, 0, 1.0};
Point(145) = {-0.044927, -0.739947, 0, 1.0};
Point(146) = {-0.048660, -0.740336, 0, 1.0};
Point(147) = {-0.052397, -0.740675, 0, 1.0};
Point(148) = {-0.056138, -0.740949, 0, 1.0};
Point(149) = {-0.059881, -0.741177, 0, 1.0};
Point(150) = {-0.063628, -0.741333, 0, 1.0};
Point(151) = {-0.067375, -0.741494, 0, 1.0};
Point(152) = {-0.071125, -0.741597, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074838, 0.744431, 0, 1.0};
Point(2) = {0.072313, 0.744792, 0, 1.0};
Point(3) = {0.069786, 0.745190, 0, 1.0};
Point(4) = {0.067260, 0.745590, 0, 1.0};
Point(5) = {0.064734, 0.745969, 0, 1.0};
Point(6) = {0.062208, 0.746350, 0, 1.0};
Point(7) = {0.059683, 0.746721, 0, 1.0};
Point(8) = {0.057158, 0.747087, 0, 1.0};
Point(9) = {0.054634, 0.747444, 0, 1.0};
Point(10) = {0.049588, 0.748108, 0, 1.0};
Point(11) = {0.044546, 0.748699, 0, 1.0};
Point(12) = {0.039509, 0.749195, 0, 1.0};
Point(13) = {0.034479, 0.749595, 0, 1.0};
Point(14) = {0.029455, 0.749867, 0, 1.0};
Point(15) = {0.024439, 0.750000, 0, 1.0};
Point(16) = {0.019432, 0.749989, 0, 1.0};
Point(17) = {0.014432, 0.749843, 0, 1.0};
Point(18) = {0.011935, 0.749723, 0, 1.0};
Point(19) = {0.009439, 0.749570, 0, 1.0};
Point(20) = {0.006946, 0.749378, 0, 1.0};
Point(21) = {0.004456, 0.749144, 0, 1.0};
Point(22) = {0.001967, 0.748871, 0, 1.0};
Point(23) = {-0.000519, 0.748561, 0, 1.0};
Point(24) = {-0.003003, 0.748209, 0, 1.0};
Point(25) = {-0.005484, 0.747802, 0, 1.0};
Point(26) = {-0.007961, 0.747332, 0, 1.0};
Point(27) = {-0.010435, 0.746788, 0, 1.0};
Point(28) = {-0.012903, 0.746162, 0, 1.0};
Point(29) = {-0.015365, 0.745421, 0, 1.0};
Point(30) = {-0.017818, 0.744526, 0, 1.0};
Point(31) = {-0.020258, 0.743405, 0, 1.0};
Point(32) = {-0.021471, 0.742723, 0, 1.0};
Point(33) = {-0.022677, 0.741918, 0, 1.0};
Point(34) = {-0.023276, 0.741446, 0, 1.0};
Point(35) = {-0.023871, 0.740895, 0, 1.0};
Point(36) = {-0.024224, 0.740505, 0, 1.0};
Point(37) = {-0.024572, 0.740010, 0, 1.0};
Point(38) = {-0.024796, 0.739559, 0, 1.0};
Point(39) = {-0.025000, 0.738739, 0, 1.0};
Point(40) = {-0.024725, 0.738303, 0, 1.0};
Point(41) = {-0.024463, 0.738110, 0, 1.0};
Point(42) = {-0.024075, 0.737890, 0, 1.0};
Point(43) = {-0.023690, 0.737716, 0, 1.0};
Point(44) = {-0.023051, 0.737496, 0, 1.0};
Point(45) = {-0.022417, 0.737346, 0, 1.0};
Point(46) = {-0.021152, 0.737134, 0, 1.0};
Point(47) = {-0.019893, 0.736999, 0, 1.0};
Point(48) = {-0.017379, 0.736835, 0, 1.0};
Point(49) = {-0.014871, 0.736755, 0, 1.0};
Point(50) = {-0.012365, 0.736724, 0, 1.0};
Point(51) = {-0.009861, 0.736730, 0, 1.0};
Point(52) = {-0.007360, 0.736774, 0, 1.0};
Point(53) = {-0.004860, 0.736845, 0, 1.0};
Point(54) = {-0.002361, 0.736938, 0, 1.0};
Point(55) = {0.000137, 0.737049, 0, 1.0};
Point(56) = {0.002634, 0.737175, 0, 1.0};
Point(57) = {0.005130, 0.737310, 0, 1.0};
Point(58) = {0.007626, 0.737454, 0, 1.0};
Point(59) = {0.010121, 0.737609, 0, 1.0};
Point(60) = {0.012615, 0.737798, 0, 1.0};
Point(61) = {0.015106, 0.738020, 0, 1.0};
Point(62) = {0.020085, 0.738535, 0, 1.0};
Point(63) = {0.025058, 0.739138, 0, 1.0};
Point(64) = {0.030028, 0.739807, 0, 1.0};
Point(65) = {0.034995, 0.740528, 0, 1.0};
Point(66) = {0.039961, 0.741274, 0, 1.0};
Point(67) = {0.044928, 0.742003, 0, 1.0};
Point(68) = {0.049896, 0.742691, 0, 1.0};
Point(69) = {0.054870, 0.743298, 0, 1.0};
Point(70) = {0.057359, 0.743557, 0, 1.0};
Point(71) = {0.059850, 0.743783, 0, 1.0};
Point(72) = {0.062344, 0.743966, 0, 1.0};
Point(73) = {0.064839, 0.744118, 0, 1.0};
Point(74) = {0.067338, 0.744222, 0, 1.0};
Point(75) = {0.069836, 0.744330, 0, 1.0};
Point(76) = {0.072336, 0.744398, 0, 1.0};
Point(77) = {-0.074838, -0.744431, 0, 1.0};
Point(78) = {-0.072313, -0.744792, 0, 1.0};
Point(79) = {-0.069786, -0.745190, 0, 1.0};
Point(80) = {-0.067260, -0.745590, 0, 1.0};
Point(81) = {-0.064734, -0.745969, 0, 1.0};
Point(82) = {-0.062208, -0.746350, 0, 1.0};
Point(83) = {-0.059683, -0.746721, 0, 1.0};
Point(84) = {-0.057158, -0.747087, 0, 1.0};
Point(85) = {-0.054634, -0.747444, 0, 1.0};
Point(86) = {-0.049588, -0.748108, 0, 1.0};
Point(87) = {-0.044546, -0.748699, 0, 1.0};
Point(88) = {-0.039509, -0.749195, 0, 1.0};
Point(89) = {-0.034479, -0.749595, 0, 1.0};
Point(90) = {-0.029455, -0.749867, 0, 1.0};
Point(91) = {-0.024439, -0.750000, 0, 1.0};
Point(92) = {-0.019432, -0.749989, 0, 1.0};
Point(93) = {-0.014432, -0.749843, 0, 1.0};
Point(94) = {-0.011935, -0.749723, 0, 1.0};
Point(95) = {-0.009439, -0.749570, 0, 1.0};
Point(96) = {-0.006946, -0.749378, 0, 1.0};
Point(97) = {-0.004456, -0.749144, 0, 1.0};
Point(98) = {-0.001967, -0.748871, 0, 1.0};
Point(99) = {0.000519, -0.748561, 0, 1.0};
Point(100) = {0.003003, -0.748209, 0, 1.0};
Point(101) = {0.005484, -0.747802, 0, 1.0};
Point(102) = {0.007961, -0.747332, 0, 1.0};
Point(103) = {0.010435, -0.746788, 0, 1.0};
Point(104) = {0.012903, -0.746162, 0, 1.0};
Point(105) = {0.015365, -0.745421, 0, 1.0};
Point(106) = {0.017818, -0.744526, 0, 1.0};
Point(107) = {0.020258, -0.743405, 0, 1.0};
Point(108) = {0.021471, -0.742723, 0, 1.0};
Point(109) = {0.022677, -0.741918, 0, 1.0};
Point(110) = {0.023276, -0.741446, 0, 1.0};
Point(111) = {0.023871, -0.740895, 0, 1.0};
Point(112) = {0.024224, -0.740505, 0, 1.0};
Point(113) = {0.024572, -0.740010, 0, 1.0};
Point(114) = {0.024796, -0.739559, 0, 1.0};
Point(115) = {0.025000, -0.738739, 0, 1.0};
Point(116) = {0.024725, -0.738303, 0, 1.0};
Point(117) = {0.024463, -0.738110, 0, 1.0};
Point(118) = {0.024075, -0.737890, 0, 1.0};
Point(119) = {0.023690, -0.737716, 0, 1.0};
Point(120) = {0.023051, -0.737496, 0, 1.0};
Point(121) = {0.022417, -0.737346, 0, 1.0};
Point(122) = {0.021152, -0.737134, 0, 1.0};
Point(123) = {0.019893, -0.736999, 0, 1.0};
Point(124) = {0.017379, -0.736835, 0, 1.0};
Point(125) = {0.014871, -0.736755, 0, 1.0};
Point(126) = {0.012365, -0.736724, 0, 1.0};
Point(127) = {0.009861, -0.736730, 0, 1.0};
Point(128) = {0.007360, -0.736774, 0, 1.0};
Point(129) = {0.004860, -0.736845, 0, 1.0};
Point(130) = {0.002361, -0.736938, 0, 1.0};
Point(131) = {-0.000137, -0.737049, 0, 1.0};
Point(132) = {-0.002634, -0.737175, 0, 1.0};
Point(133) = {-0.005130, -0.737310, 0, 1.0};
Point(134) = {-0.007626, -0.737454, 0, 1.0};
Point(135) = {-0.010121, -0.737609, 0, 1.0};
Point(136) = {-0.012615, -0.737798, 0, 1.0};
Point(137) = {-0.015106, -0.738020, 0, 1.0};
Point(138) = {-0.020085, -0.738535, 0, 1.0};
Point(139) = {-0.025058, -0.739138, 0, 1.0};
Point(140) = {-0.030028, -0.739807, 0, 1.0};
Point(141) = {-0.034995, -0.740528, 0, 1.0};
Point(142) = {-0.039961, -0.741274, 0, 1.0};
Point(143) = {-0.044928, -0.742003, 0, 1.0};
Point(144) = {-0.049896, -0.742691, 0, 1.0};
Point(145) = {-0.054870, -0.743298, 0, 1.0};
Point(146) = {-0.057359, -0.743557, 0, 1.0};
Point(147) = {-0.059850, -0.743783, 0, 1.0};
Point(148) = {-0.062344, -0.743966, 0, 1.0};
Point(149) = {-0.064839, -0.744118, 0, 1.0};
Point(150) = {-0.067338, -0.744222, 0, 1.0};
Point(151) = {-0.069836, -0.744330, 0, 1.0};
Point(152) = {-0.072336, -0.744398, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
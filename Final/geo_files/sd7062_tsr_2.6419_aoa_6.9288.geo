SetFactory("OpenCASCADE");

Point(1) = {0.148539, 0.710362, 0, 1.0};
Point(2) = {0.147862, 0.710559, 0, 1.0};
Point(3) = {0.145886, 0.711172, 0, 1.0};
Point(4) = {0.142729, 0.712218, 0, 1.0};
Point(5) = {0.138501, 0.713669, 0, 1.0};
Point(6) = {0.133298, 0.715467, 0, 1.0};
Point(7) = {0.127187, 0.717568, 0, 1.0};
Point(8) = {0.120251, 0.719942, 0, 1.0};
Point(9) = {0.112602, 0.722556, 0, 1.0};
Point(10) = {0.104358, 0.725357, 0, 1.0};
Point(11) = {0.095638, 0.728278, 0, 1.0};
Point(12) = {0.086552, 0.731244, 0, 1.0};
Point(13) = {0.077199, 0.734176, 0, 1.0};
Point(14) = {0.067671, 0.737006, 0, 1.0};
Point(15) = {0.058058, 0.739669, 0, 1.0};
Point(16) = {0.048443, 0.742115, 0, 1.0};
Point(17) = {0.038912, 0.744292, 0, 1.0};
Point(18) = {0.029547, 0.746162, 0, 1.0};
Point(19) = {0.020425, 0.747691, 0, 1.0};
Point(20) = {0.011623, 0.748852, 0, 1.0};
Point(21) = {0.003207, 0.749625, 0, 1.0};
Point(22) = {-0.004756, 0.750000, 0, 1.0};
Point(23) = {-0.012206, 0.749973, 0, 1.0};
Point(24) = {-0.019093, 0.749550, 0, 1.0};
Point(25) = {-0.025374, 0.748746, 0, 1.0};
Point(26) = {-0.031007, 0.747587, 0, 1.0};
Point(27) = {-0.035957, 0.746112, 0, 1.0};
Point(28) = {-0.040194, 0.744360, 0, 1.0};
Point(29) = {-0.043701, 0.742387, 0, 1.0};
Point(30) = {-0.046457, 0.740266, 0, 1.0};
Point(31) = {-0.048433, 0.738068, 0, 1.0};
Point(32) = {-0.049624, 0.735876, 0, 1.0};
Point(33) = {-0.050025, 0.733833, 0, 1.0};
Point(34) = {-0.049425, 0.732172, 0, 1.0};
Point(35) = {-0.047603, 0.730770, 0, 1.0};
Point(36) = {-0.044594, 0.729389, 0, 1.0};
Point(37) = {-0.040509, 0.728051, 0, 1.0};
Point(38) = {-0.035404, 0.726776, 0, 1.0};
Point(39) = {-0.029329, 0.725572, 0, 1.0};
Point(40) = {-0.022354, 0.724442, 0, 1.0};
Point(41) = {-0.014549, 0.723397, 0, 1.0};
Point(42) = {-0.005992, 0.722438, 0, 1.0};
Point(43) = {0.003227, 0.721561, 0, 1.0};
Point(44) = {0.013015, 0.720767, 0, 1.0};
Point(45) = {0.023269, 0.720050, 0, 1.0};
Point(46) = {0.033887, 0.719407, 0, 1.0};
Point(47) = {0.044759, 0.718815, 0, 1.0};
Point(48) = {0.055768, 0.718251, 0, 1.0};
Point(49) = {0.066776, 0.717689, 0, 1.0};
Point(50) = {0.077642, 0.717110, 0, 1.0};
Point(51) = {0.088223, 0.716497, 0, 1.0};
Point(52) = {0.098370, 0.715840, 0, 1.0};
Point(53) = {0.107933, 0.715137, 0, 1.0};
Point(54) = {0.116774, 0.714397, 0, 1.0};
Point(55) = {0.124756, 0.713632, 0, 1.0};
Point(56) = {0.131755, 0.712865, 0, 1.0};
Point(57) = {0.137654, 0.712120, 0, 1.0};
Point(58) = {0.142352, 0.711442, 0, 1.0};
Point(59) = {0.145768, 0.710884, 0, 1.0};
Point(60) = {0.147843, 0.710501, 0, 1.0};
Point(61) = {0.148541, 0.710361, 0, 1.0};
Point(62) = {-0.148539, -0.710362, 0, 1.0};
Point(63) = {-0.147862, -0.710559, 0, 1.0};
Point(64) = {-0.145886, -0.711172, 0, 1.0};
Point(65) = {-0.142729, -0.712218, 0, 1.0};
Point(66) = {-0.138501, -0.713669, 0, 1.0};
Point(67) = {-0.133298, -0.715467, 0, 1.0};
Point(68) = {-0.127187, -0.717568, 0, 1.0};
Point(69) = {-0.120251, -0.719942, 0, 1.0};
Point(70) = {-0.112602, -0.722556, 0, 1.0};
Point(71) = {-0.104358, -0.725357, 0, 1.0};
Point(72) = {-0.095638, -0.728278, 0, 1.0};
Point(73) = {-0.086552, -0.731244, 0, 1.0};
Point(74) = {-0.077199, -0.734176, 0, 1.0};
Point(75) = {-0.067671, -0.737006, 0, 1.0};
Point(76) = {-0.058058, -0.739669, 0, 1.0};
Point(77) = {-0.048443, -0.742115, 0, 1.0};
Point(78) = {-0.038912, -0.744292, 0, 1.0};
Point(79) = {-0.029547, -0.746162, 0, 1.0};
Point(80) = {-0.020425, -0.747691, 0, 1.0};
Point(81) = {-0.011623, -0.748852, 0, 1.0};
Point(82) = {-0.003207, -0.749625, 0, 1.0};
Point(83) = {0.004756, -0.750000, 0, 1.0};
Point(84) = {0.012206, -0.749973, 0, 1.0};
Point(85) = {0.019093, -0.749550, 0, 1.0};
Point(86) = {0.025374, -0.748746, 0, 1.0};
Point(87) = {0.031007, -0.747587, 0, 1.0};
Point(88) = {0.035957, -0.746112, 0, 1.0};
Point(89) = {0.040194, -0.744360, 0, 1.0};
Point(90) = {0.043701, -0.742387, 0, 1.0};
Point(91) = {0.046457, -0.740266, 0, 1.0};
Point(92) = {0.048433, -0.738068, 0, 1.0};
Point(93) = {0.049624, -0.735876, 0, 1.0};
Point(94) = {0.050025, -0.733833, 0, 1.0};
Point(95) = {0.049425, -0.732172, 0, 1.0};
Point(96) = {0.047603, -0.730770, 0, 1.0};
Point(97) = {0.044594, -0.729389, 0, 1.0};
Point(98) = {0.040509, -0.728051, 0, 1.0};
Point(99) = {0.035404, -0.726776, 0, 1.0};
Point(100) = {0.029329, -0.725572, 0, 1.0};
Point(101) = {0.022354, -0.724442, 0, 1.0};
Point(102) = {0.014549, -0.723397, 0, 1.0};
Point(103) = {0.005992, -0.722438, 0, 1.0};
Point(104) = {-0.003227, -0.721561, 0, 1.0};
Point(105) = {-0.013015, -0.720767, 0, 1.0};
Point(106) = {-0.023269, -0.720050, 0, 1.0};
Point(107) = {-0.033887, -0.719407, 0, 1.0};
Point(108) = {-0.044759, -0.718815, 0, 1.0};
Point(109) = {-0.055768, -0.718251, 0, 1.0};
Point(110) = {-0.066776, -0.717689, 0, 1.0};
Point(111) = {-0.077642, -0.717110, 0, 1.0};
Point(112) = {-0.088223, -0.716497, 0, 1.0};
Point(113) = {-0.098370, -0.715840, 0, 1.0};
Point(114) = {-0.107933, -0.715137, 0, 1.0};
Point(115) = {-0.116774, -0.714397, 0, 1.0};
Point(116) = {-0.124756, -0.713632, 0, 1.0};
Point(117) = {-0.131755, -0.712865, 0, 1.0};
Point(118) = {-0.137654, -0.712120, 0, 1.0};
Point(119) = {-0.142352, -0.711442, 0, 1.0};
Point(120) = {-0.145768, -0.710884, 0, 1.0};
Point(121) = {-0.147843, -0.710501, 0, 1.0};
Point(122) = {-0.148541, -0.710361, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
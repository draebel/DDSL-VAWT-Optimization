SetFactory("OpenCASCADE");

Point(1) = {0.074510, 0.720263, 0, 1.0};
Point(2) = {0.074002, 0.720411, 0, 1.0};
Point(3) = {0.072519, 0.720871, 0, 1.0};
Point(4) = {0.070151, 0.721656, 0, 1.0};
Point(5) = {0.066979, 0.722744, 0, 1.0};
Point(6) = {0.063076, 0.724094, 0, 1.0};
Point(7) = {0.058491, 0.725670, 0, 1.0};
Point(8) = {0.053288, 0.727451, 0, 1.0};
Point(9) = {0.047550, 0.729412, 0, 1.0};
Point(10) = {0.041365, 0.731513, 0, 1.0};
Point(11) = {0.034824, 0.733704, 0, 1.0};
Point(12) = {0.028007, 0.735929, 0, 1.0};
Point(13) = {0.020991, 0.738129, 0, 1.0};
Point(14) = {0.013843, 0.740252, 0, 1.0};
Point(15) = {0.006631, 0.742250, 0, 1.0};
Point(16) = {-0.000582, 0.744084, 0, 1.0};
Point(17) = {-0.007732, 0.745718, 0, 1.0};
Point(18) = {-0.014757, 0.747121, 0, 1.0};
Point(19) = {-0.021601, 0.748268, 0, 1.0};
Point(20) = {-0.028204, 0.749139, 0, 1.0};
Point(21) = {-0.034518, 0.749718, 0, 1.0};
Point(22) = {-0.040492, 0.750000, 0, 1.0};
Point(23) = {-0.046080, 0.749979, 0, 1.0};
Point(24) = {-0.051247, 0.749663, 0, 1.0};
Point(25) = {-0.055959, 0.749059, 0, 1.0};
Point(26) = {-0.060185, 0.748190, 0, 1.0};
Point(27) = {-0.063899, 0.747083, 0, 1.0};
Point(28) = {-0.067077, 0.745769, 0, 1.0};
Point(29) = {-0.069708, 0.744288, 0, 1.0};
Point(30) = {-0.071776, 0.742697, 0, 1.0};
Point(31) = {-0.073258, 0.741049, 0, 1.0};
Point(32) = {-0.074151, 0.739404, 0, 1.0};
Point(33) = {-0.074452, 0.737872, 0, 1.0};
Point(34) = {-0.074002, 0.736626, 0, 1.0};
Point(35) = {-0.072635, 0.735574, 0, 1.0};
Point(36) = {-0.070378, 0.734538, 0, 1.0};
Point(37) = {-0.067313, 0.733534, 0, 1.0};
Point(38) = {-0.063483, 0.732577, 0, 1.0};
Point(39) = {-0.058926, 0.731674, 0, 1.0};
Point(40) = {-0.053693, 0.730827, 0, 1.0};
Point(41) = {-0.047838, 0.730043, 0, 1.0};
Point(42) = {-0.041419, 0.729323, 0, 1.0};
Point(43) = {-0.034503, 0.728665, 0, 1.0};
Point(44) = {-0.027160, 0.728069, 0, 1.0};
Point(45) = {-0.019467, 0.727532, 0, 1.0};
Point(46) = {-0.011502, 0.727049, 0, 1.0};
Point(47) = {-0.003345, 0.726605, 0, 1.0};
Point(48) = {0.004913, 0.726182, 0, 1.0};
Point(49) = {0.013172, 0.725760, 0, 1.0};
Point(50) = {0.021323, 0.725326, 0, 1.0};
Point(51) = {0.029261, 0.724866, 0, 1.0};
Point(52) = {0.036873, 0.724373, 0, 1.0};
Point(53) = {0.044047, 0.723846, 0, 1.0};
Point(54) = {0.050680, 0.723291, 0, 1.0};
Point(55) = {0.056668, 0.722717, 0, 1.0};
Point(56) = {0.061918, 0.722141, 0, 1.0};
Point(57) = {0.066344, 0.721582, 0, 1.0};
Point(58) = {0.069869, 0.721074, 0, 1.0};
Point(59) = {0.072431, 0.720655, 0, 1.0};
Point(60) = {0.073988, 0.720368, 0, 1.0};
Point(61) = {0.074511, 0.720263, 0, 1.0};
Point(62) = {-0.074510, -0.720263, 0, 1.0};
Point(63) = {-0.074002, -0.720411, 0, 1.0};
Point(64) = {-0.072519, -0.720871, 0, 1.0};
Point(65) = {-0.070151, -0.721656, 0, 1.0};
Point(66) = {-0.066979, -0.722744, 0, 1.0};
Point(67) = {-0.063076, -0.724094, 0, 1.0};
Point(68) = {-0.058491, -0.725670, 0, 1.0};
Point(69) = {-0.053288, -0.727451, 0, 1.0};
Point(70) = {-0.047550, -0.729412, 0, 1.0};
Point(71) = {-0.041365, -0.731513, 0, 1.0};
Point(72) = {-0.034824, -0.733704, 0, 1.0};
Point(73) = {-0.028007, -0.735929, 0, 1.0};
Point(74) = {-0.020991, -0.738129, 0, 1.0};
Point(75) = {-0.013843, -0.740252, 0, 1.0};
Point(76) = {-0.006631, -0.742250, 0, 1.0};
Point(77) = {0.000582, -0.744084, 0, 1.0};
Point(78) = {0.007732, -0.745718, 0, 1.0};
Point(79) = {0.014757, -0.747121, 0, 1.0};
Point(80) = {0.021601, -0.748268, 0, 1.0};
Point(81) = {0.028204, -0.749139, 0, 1.0};
Point(82) = {0.034518, -0.749718, 0, 1.0};
Point(83) = {0.040492, -0.750000, 0, 1.0};
Point(84) = {0.046080, -0.749979, 0, 1.0};
Point(85) = {0.051247, -0.749663, 0, 1.0};
Point(86) = {0.055959, -0.749059, 0, 1.0};
Point(87) = {0.060185, -0.748190, 0, 1.0};
Point(88) = {0.063899, -0.747083, 0, 1.0};
Point(89) = {0.067077, -0.745769, 0, 1.0};
Point(90) = {0.069708, -0.744288, 0, 1.0};
Point(91) = {0.071776, -0.742697, 0, 1.0};
Point(92) = {0.073258, -0.741049, 0, 1.0};
Point(93) = {0.074151, -0.739404, 0, 1.0};
Point(94) = {0.074452, -0.737872, 0, 1.0};
Point(95) = {0.074002, -0.736626, 0, 1.0};
Point(96) = {0.072635, -0.735574, 0, 1.0};
Point(97) = {0.070378, -0.734538, 0, 1.0};
Point(98) = {0.067313, -0.733534, 0, 1.0};
Point(99) = {0.063483, -0.732577, 0, 1.0};
Point(100) = {0.058926, -0.731674, 0, 1.0};
Point(101) = {0.053693, -0.730827, 0, 1.0};
Point(102) = {0.047838, -0.730043, 0, 1.0};
Point(103) = {0.041419, -0.729323, 0, 1.0};
Point(104) = {0.034503, -0.728665, 0, 1.0};
Point(105) = {0.027160, -0.728069, 0, 1.0};
Point(106) = {0.019467, -0.727532, 0, 1.0};
Point(107) = {0.011502, -0.727049, 0, 1.0};
Point(108) = {0.003345, -0.726605, 0, 1.0};
Point(109) = {-0.004913, -0.726182, 0, 1.0};
Point(110) = {-0.013172, -0.725760, 0, 1.0};
Point(111) = {-0.021323, -0.725326, 0, 1.0};
Point(112) = {-0.029261, -0.724866, 0, 1.0};
Point(113) = {-0.036873, -0.724373, 0, 1.0};
Point(114) = {-0.044047, -0.723846, 0, 1.0};
Point(115) = {-0.050680, -0.723291, 0, 1.0};
Point(116) = {-0.056668, -0.722717, 0, 1.0};
Point(117) = {-0.061918, -0.722141, 0, 1.0};
Point(118) = {-0.066344, -0.721582, 0, 1.0};
Point(119) = {-0.069869, -0.721074, 0, 1.0};
Point(120) = {-0.072431, -0.720655, 0, 1.0};
Point(121) = {-0.073988, -0.720368, 0, 1.0};
Point(122) = {-0.074511, -0.720263, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
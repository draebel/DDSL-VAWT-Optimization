SetFactory("OpenCASCADE");

Point(1) = {0.074270, 0.730181, 0, 1.0};
Point(2) = {0.073931, 0.730279, 0, 1.0};
Point(3) = {0.072943, 0.730586, 0, 1.0};
Point(4) = {0.071364, 0.731109, 0, 1.0};
Point(5) = {0.069251, 0.731834, 0, 1.0};
Point(6) = {0.066649, 0.732734, 0, 1.0};
Point(7) = {0.063593, 0.733784, 0, 1.0};
Point(8) = {0.060125, 0.734971, 0, 1.0};
Point(9) = {0.056301, 0.736278, 0, 1.0};
Point(10) = {0.052179, 0.737678, 0, 1.0};
Point(11) = {0.047819, 0.739139, 0, 1.0};
Point(12) = {0.043276, 0.740622, 0, 1.0};
Point(13) = {0.038600, 0.742088, 0, 1.0};
Point(14) = {0.033836, 0.743503, 0, 1.0};
Point(15) = {0.029029, 0.744834, 0, 1.0};
Point(16) = {0.024221, 0.746057, 0, 1.0};
Point(17) = {0.019456, 0.747146, 0, 1.0};
Point(18) = {0.014774, 0.748081, 0, 1.0};
Point(19) = {0.010213, 0.748846, 0, 1.0};
Point(20) = {0.005811, 0.749426, 0, 1.0};
Point(21) = {0.001603, 0.749812, 0, 1.0};
Point(22) = {-0.002378, 0.750000, 0, 1.0};
Point(23) = {-0.006103, 0.749986, 0, 1.0};
Point(24) = {-0.009547, 0.749775, 0, 1.0};
Point(25) = {-0.012687, 0.749373, 0, 1.0};
Point(26) = {-0.015504, 0.748794, 0, 1.0};
Point(27) = {-0.017979, 0.748056, 0, 1.0};
Point(28) = {-0.020097, 0.747180, 0, 1.0};
Point(29) = {-0.021851, 0.746193, 0, 1.0};
Point(30) = {-0.023229, 0.745133, 0, 1.0};
Point(31) = {-0.024216, 0.744034, 0, 1.0};
Point(32) = {-0.024812, 0.742938, 0, 1.0};
Point(33) = {-0.025013, 0.741917, 0, 1.0};
Point(34) = {-0.024713, 0.741086, 0, 1.0};
Point(35) = {-0.023802, 0.740385, 0, 1.0};
Point(36) = {-0.022297, 0.739695, 0, 1.0};
Point(37) = {-0.020255, 0.739025, 0, 1.0};
Point(38) = {-0.017702, 0.738388, 0, 1.0};
Point(39) = {-0.014664, 0.737786, 0, 1.0};
Point(40) = {-0.011177, 0.737221, 0, 1.0};
Point(41) = {-0.007275, 0.736699, 0, 1.0};
Point(42) = {-0.002996, 0.736219, 0, 1.0};
Point(43) = {0.001614, 0.735781, 0, 1.0};
Point(44) = {0.006507, 0.735383, 0, 1.0};
Point(45) = {0.011635, 0.735025, 0, 1.0};
Point(46) = {0.016944, 0.734703, 0, 1.0};
Point(47) = {0.022380, 0.734407, 0, 1.0};
Point(48) = {0.027884, 0.734125, 0, 1.0};
Point(49) = {0.033388, 0.733844, 0, 1.0};
Point(50) = {0.038821, 0.733555, 0, 1.0};
Point(51) = {0.044111, 0.733248, 0, 1.0};
Point(52) = {0.049185, 0.732920, 0, 1.0};
Point(53) = {0.053966, 0.732568, 0, 1.0};
Point(54) = {0.058387, 0.732199, 0, 1.0};
Point(55) = {0.062378, 0.731816, 0, 1.0};
Point(56) = {0.065877, 0.731432, 0, 1.0};
Point(57) = {0.068827, 0.731060, 0, 1.0};
Point(58) = {0.071176, 0.730721, 0, 1.0};
Point(59) = {0.072884, 0.730442, 0, 1.0};
Point(60) = {0.073922, 0.730250, 0, 1.0};
Point(61) = {0.074271, 0.730181, 0, 1.0};
Point(62) = {-0.074270, -0.730181, 0, 1.0};
Point(63) = {-0.073931, -0.730279, 0, 1.0};
Point(64) = {-0.072943, -0.730586, 0, 1.0};
Point(65) = {-0.071364, -0.731109, 0, 1.0};
Point(66) = {-0.069251, -0.731834, 0, 1.0};
Point(67) = {-0.066649, -0.732734, 0, 1.0};
Point(68) = {-0.063593, -0.733784, 0, 1.0};
Point(69) = {-0.060125, -0.734971, 0, 1.0};
Point(70) = {-0.056301, -0.736278, 0, 1.0};
Point(71) = {-0.052179, -0.737678, 0, 1.0};
Point(72) = {-0.047819, -0.739139, 0, 1.0};
Point(73) = {-0.043276, -0.740622, 0, 1.0};
Point(74) = {-0.038600, -0.742088, 0, 1.0};
Point(75) = {-0.033836, -0.743503, 0, 1.0};
Point(76) = {-0.029029, -0.744834, 0, 1.0};
Point(77) = {-0.024221, -0.746057, 0, 1.0};
Point(78) = {-0.019456, -0.747146, 0, 1.0};
Point(79) = {-0.014774, -0.748081, 0, 1.0};
Point(80) = {-0.010213, -0.748846, 0, 1.0};
Point(81) = {-0.005811, -0.749426, 0, 1.0};
Point(82) = {-0.001603, -0.749812, 0, 1.0};
Point(83) = {0.002378, -0.750000, 0, 1.0};
Point(84) = {0.006103, -0.749986, 0, 1.0};
Point(85) = {0.009547, -0.749775, 0, 1.0};
Point(86) = {0.012687, -0.749373, 0, 1.0};
Point(87) = {0.015504, -0.748794, 0, 1.0};
Point(88) = {0.017979, -0.748056, 0, 1.0};
Point(89) = {0.020097, -0.747180, 0, 1.0};
Point(90) = {0.021851, -0.746193, 0, 1.0};
Point(91) = {0.023229, -0.745133, 0, 1.0};
Point(92) = {0.024216, -0.744034, 0, 1.0};
Point(93) = {0.024812, -0.742938, 0, 1.0};
Point(94) = {0.025013, -0.741917, 0, 1.0};
Point(95) = {0.024713, -0.741086, 0, 1.0};
Point(96) = {0.023802, -0.740385, 0, 1.0};
Point(97) = {0.022297, -0.739695, 0, 1.0};
Point(98) = {0.020255, -0.739025, 0, 1.0};
Point(99) = {0.017702, -0.738388, 0, 1.0};
Point(100) = {0.014664, -0.737786, 0, 1.0};
Point(101) = {0.011177, -0.737221, 0, 1.0};
Point(102) = {0.007275, -0.736699, 0, 1.0};
Point(103) = {0.002996, -0.736219, 0, 1.0};
Point(104) = {-0.001614, -0.735781, 0, 1.0};
Point(105) = {-0.006507, -0.735383, 0, 1.0};
Point(106) = {-0.011635, -0.735025, 0, 1.0};
Point(107) = {-0.016944, -0.734703, 0, 1.0};
Point(108) = {-0.022380, -0.734407, 0, 1.0};
Point(109) = {-0.027884, -0.734125, 0, 1.0};
Point(110) = {-0.033388, -0.733844, 0, 1.0};
Point(111) = {-0.038821, -0.733555, 0, 1.0};
Point(112) = {-0.044111, -0.733248, 0, 1.0};
Point(113) = {-0.049185, -0.732920, 0, 1.0};
Point(114) = {-0.053966, -0.732568, 0, 1.0};
Point(115) = {-0.058387, -0.732199, 0, 1.0};
Point(116) = {-0.062378, -0.731816, 0, 1.0};
Point(117) = {-0.065877, -0.731432, 0, 1.0};
Point(118) = {-0.068827, -0.731060, 0, 1.0};
Point(119) = {-0.071176, -0.730721, 0, 1.0};
Point(120) = {-0.072884, -0.730442, 0, 1.0};
Point(121) = {-0.073922, -0.730250, 0, 1.0};
Point(122) = {-0.074271, -0.730181, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
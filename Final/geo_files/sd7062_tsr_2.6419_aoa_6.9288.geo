SetFactory("OpenCASCADE");

Point(1) = {0.111659, 0.720279, 0, 1.0};
Point(2) = {0.111151, 0.720427, 0, 1.0};
Point(3) = {0.109669, 0.720886, 0, 1.0};
Point(4) = {0.107302, 0.721671, 0, 1.0};
Point(5) = {0.104132, 0.722759, 0, 1.0};
Point(6) = {0.100231, 0.724107, 0, 1.0};
Point(7) = {0.095648, 0.725682, 0, 1.0};
Point(8) = {0.090448, 0.727462, 0, 1.0};
Point(9) = {0.084713, 0.729422, 0, 1.0};
Point(10) = {0.078531, 0.731522, 0, 1.0};
Point(11) = {0.071993, 0.733713, 0, 1.0};
Point(12) = {0.065180, 0.735937, 0, 1.0};
Point(13) = {0.058167, 0.738135, 0, 1.0};
Point(14) = {0.051023, 0.740257, 0, 1.0};
Point(15) = {0.043815, 0.742254, 0, 1.0};
Point(16) = {0.036606, 0.744088, 0, 1.0};
Point(17) = {0.029460, 0.745720, 0, 1.0};
Point(18) = {0.022438, 0.747122, 0, 1.0};
Point(19) = {0.015598, 0.748269, 0, 1.0};
Point(20) = {0.008998, 0.749139, 0, 1.0};
Point(21) = {0.002687, 0.749719, 0, 1.0};
Point(22) = {-0.003283, 0.750000, 0, 1.0};
Point(23) = {-0.008869, 0.749979, 0, 1.0};
Point(24) = {-0.014033, 0.749663, 0, 1.0};
Point(25) = {-0.018743, 0.749060, 0, 1.0};
Point(26) = {-0.022966, 0.748191, 0, 1.0};
Point(27) = {-0.026678, 0.747084, 0, 1.0};
Point(28) = {-0.029854, 0.745771, 0, 1.0};
Point(29) = {-0.032484, 0.744291, 0, 1.0};
Point(30) = {-0.034551, 0.742701, 0, 1.0};
Point(31) = {-0.036032, 0.741053, 0, 1.0};
Point(32) = {-0.036925, 0.739409, 0, 1.0};
Point(33) = {-0.037226, 0.737878, 0, 1.0};
Point(34) = {-0.036776, 0.736633, 0, 1.0};
Point(35) = {-0.035410, 0.735582, 0, 1.0};
Point(36) = {-0.033153, 0.734546, 0, 1.0};
Point(37) = {-0.030091, 0.733542, 0, 1.0};
Point(38) = {-0.026263, 0.732586, 0, 1.0};
Point(39) = {-0.021708, 0.731684, 0, 1.0};
Point(40) = {-0.016478, 0.730837, 0, 1.0};
Point(41) = {-0.010626, 0.730053, 0, 1.0};
Point(42) = {-0.004210, 0.729334, 0, 1.0};
Point(43) = {0.002703, 0.728676, 0, 1.0};
Point(44) = {0.010042, 0.728081, 0, 1.0};
Point(45) = {0.017731, 0.727544, 0, 1.0};
Point(46) = {0.025692, 0.727061, 0, 1.0};
Point(47) = {0.033844, 0.726617, 0, 1.0};
Point(48) = {0.042098, 0.726194, 0, 1.0};
Point(49) = {0.050352, 0.725773, 0, 1.0};
Point(50) = {0.058499, 0.725339, 0, 1.0};
Point(51) = {0.066433, 0.724879, 0, 1.0};
Point(52) = {0.074041, 0.724386, 0, 1.0};
Point(53) = {0.081212, 0.723860, 0, 1.0};
Point(54) = {0.087841, 0.723305, 0, 1.0};
Point(55) = {0.093826, 0.722731, 0, 1.0};
Point(56) = {0.099073, 0.722156, 0, 1.0};
Point(57) = {0.103497, 0.721597, 0, 1.0};
Point(58) = {0.107020, 0.721089, 0, 1.0};
Point(59) = {0.109581, 0.720670, 0, 1.0};
Point(60) = {0.111137, 0.720383, 0, 1.0};
Point(61) = {0.111660, 0.720279, 0, 1.0};
Point(62) = {-0.111659, -0.720279, 0, 1.0};
Point(63) = {-0.111151, -0.720427, 0, 1.0};
Point(64) = {-0.109669, -0.720886, 0, 1.0};
Point(65) = {-0.107302, -0.721671, 0, 1.0};
Point(66) = {-0.104132, -0.722759, 0, 1.0};
Point(67) = {-0.100231, -0.724107, 0, 1.0};
Point(68) = {-0.095648, -0.725682, 0, 1.0};
Point(69) = {-0.090448, -0.727462, 0, 1.0};
Point(70) = {-0.084713, -0.729422, 0, 1.0};
Point(71) = {-0.078531, -0.731522, 0, 1.0};
Point(72) = {-0.071993, -0.733713, 0, 1.0};
Point(73) = {-0.065180, -0.735937, 0, 1.0};
Point(74) = {-0.058167, -0.738135, 0, 1.0};
Point(75) = {-0.051023, -0.740257, 0, 1.0};
Point(76) = {-0.043815, -0.742254, 0, 1.0};
Point(77) = {-0.036606, -0.744088, 0, 1.0};
Point(78) = {-0.029460, -0.745720, 0, 1.0};
Point(79) = {-0.022438, -0.747122, 0, 1.0};
Point(80) = {-0.015598, -0.748269, 0, 1.0};
Point(81) = {-0.008998, -0.749139, 0, 1.0};
Point(82) = {-0.002687, -0.749719, 0, 1.0};
Point(83) = {0.003283, -0.750000, 0, 1.0};
Point(84) = {0.008869, -0.749979, 0, 1.0};
Point(85) = {0.014033, -0.749663, 0, 1.0};
Point(86) = {0.018743, -0.749060, 0, 1.0};
Point(87) = {0.022966, -0.748191, 0, 1.0};
Point(88) = {0.026678, -0.747084, 0, 1.0};
Point(89) = {0.029854, -0.745771, 0, 1.0};
Point(90) = {0.032484, -0.744291, 0, 1.0};
Point(91) = {0.034551, -0.742701, 0, 1.0};
Point(92) = {0.036032, -0.741053, 0, 1.0};
Point(93) = {0.036925, -0.739409, 0, 1.0};
Point(94) = {0.037226, -0.737878, 0, 1.0};
Point(95) = {0.036776, -0.736633, 0, 1.0};
Point(96) = {0.035410, -0.735582, 0, 1.0};
Point(97) = {0.033153, -0.734546, 0, 1.0};
Point(98) = {0.030091, -0.733542, 0, 1.0};
Point(99) = {0.026263, -0.732586, 0, 1.0};
Point(100) = {0.021708, -0.731684, 0, 1.0};
Point(101) = {0.016478, -0.730837, 0, 1.0};
Point(102) = {0.010626, -0.730053, 0, 1.0};
Point(103) = {0.004210, -0.729334, 0, 1.0};
Point(104) = {-0.002703, -0.728676, 0, 1.0};
Point(105) = {-0.010042, -0.728081, 0, 1.0};
Point(106) = {-0.017731, -0.727544, 0, 1.0};
Point(107) = {-0.025692, -0.727061, 0, 1.0};
Point(108) = {-0.033844, -0.726617, 0, 1.0};
Point(109) = {-0.042098, -0.726194, 0, 1.0};
Point(110) = {-0.050352, -0.725773, 0, 1.0};
Point(111) = {-0.058499, -0.725339, 0, 1.0};
Point(112) = {-0.066433, -0.724879, 0, 1.0};
Point(113) = {-0.074041, -0.724386, 0, 1.0};
Point(114) = {-0.081212, -0.723860, 0, 1.0};
Point(115) = {-0.087841, -0.723305, 0, 1.0};
Point(116) = {-0.093826, -0.722731, 0, 1.0};
Point(117) = {-0.099073, -0.722156, 0, 1.0};
Point(118) = {-0.103497, -0.721597, 0, 1.0};
Point(119) = {-0.107020, -0.721089, 0, 1.0};
Point(120) = {-0.109581, -0.720670, 0, 1.0};
Point(121) = {-0.111137, -0.720383, 0, 1.0};
Point(122) = {-0.111660, -0.720279, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
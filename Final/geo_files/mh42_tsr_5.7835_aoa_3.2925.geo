SetFactory("OpenCASCADE");

Point(1) = {0.149670, 0.729035, 0, 1.0};
Point(2) = {0.149016, 0.729106, 0, 1.0};
Point(3) = {0.147085, 0.729342, 0, 1.0};
Point(4) = {0.143940, 0.729779, 0, 1.0};
Point(5) = {0.139656, 0.730433, 0, 1.0};
Point(6) = {0.134318, 0.731308, 0, 1.0};
Point(7) = {0.128024, 0.732396, 0, 1.0};
Point(8) = {0.120877, 0.733677, 0, 1.0};
Point(9) = {0.112986, 0.735121, 0, 1.0};
Point(10) = {0.104461, 0.736696, 0, 1.0};
Point(11) = {0.095415, 0.738361, 0, 1.0};
Point(12) = {0.085965, 0.740078, 0, 1.0};
Point(13) = {0.076229, 0.741798, 0, 1.0};
Point(14) = {0.066326, 0.743467, 0, 1.0};
Point(15) = {0.056358, 0.745023, 0, 1.0};
Point(16) = {0.046411, 0.746418, 0, 1.0};
Point(17) = {0.036569, 0.747612, 0, 1.0};
Point(18) = {0.026912, 0.748580, 0, 1.0};
Point(19) = {0.017519, 0.749305, 0, 1.0};
Point(20) = {0.008469, 0.749780, 0, 1.0};
Point(21) = {-0.000161, 0.750000, 0, 1.0};
Point(22) = {-0.008297, 0.749971, 0, 1.0};
Point(23) = {-0.015867, 0.749698, 0, 1.0};
Point(24) = {-0.022806, 0.749196, 0, 1.0};
Point(25) = {-0.029053, 0.748481, 0, 1.0};
Point(26) = {-0.034556, 0.747574, 0, 1.0};
Point(27) = {-0.039267, 0.746501, 0, 1.0};
Point(28) = {-0.043154, 0.745292, 0, 1.0};
Point(29) = {-0.046189, 0.743989, 0, 1.0};
Point(30) = {-0.048362, 0.742650, 0, 1.0};
Point(31) = {-0.049563, 0.741483, 0, 1.0};
Point(32) = {-0.049796, 0.741119, 0, 1.0};
Point(33) = {-0.049945, 0.740779, 0, 1.0};
Point(34) = {-0.049996, 0.740571, 0, 1.0};
Point(35) = {-0.049994, 0.740385, 0, 1.0};
Point(36) = {-0.049926, 0.740208, 0, 1.0};
Point(37) = {-0.049797, 0.740021, 0, 1.0};
Point(38) = {-0.049515, 0.739727, 0, 1.0};
Point(39) = {-0.049136, 0.739419, 0, 1.0};
Point(40) = {-0.046966, 0.738273, 0, 1.0};
Point(41) = {-0.043927, 0.737223, 0, 1.0};
Point(42) = {-0.039916, 0.736218, 0, 1.0};
Point(43) = {-0.034965, 0.735294, 0, 1.0};
Point(44) = {-0.029102, 0.734480, 0, 1.0};
Point(45) = {-0.022350, 0.733777, 0, 1.0};
Point(46) = {-0.014766, 0.733163, 0, 1.0};
Point(47) = {-0.006429, 0.732625, 0, 1.0};
Point(48) = {0.002567, 0.732150, 0, 1.0};
Point(49) = {0.012118, 0.731734, 0, 1.0};
Point(50) = {0.022119, 0.731372, 0, 1.0};
Point(51) = {0.032457, 0.731062, 0, 1.0};
Point(52) = {0.043019, 0.730794, 0, 1.0};
Point(53) = {0.053682, 0.730564, 0, 1.0};
Point(54) = {0.064325, 0.730366, 0, 1.0};
Point(55) = {0.074824, 0.730197, 0, 1.0};
Point(56) = {0.085060, 0.730054, 0, 1.0};
Point(57) = {0.094920, 0.729932, 0, 1.0};
Point(58) = {0.104287, 0.729817, 0, 1.0};
Point(59) = {0.113045, 0.729705, 0, 1.0};
Point(60) = {0.121082, 0.729589, 0, 1.0};
Point(61) = {0.128294, 0.729470, 0, 1.0};
Point(62) = {0.134585, 0.729350, 0, 1.0};
Point(63) = {0.139867, 0.729237, 0, 1.0};
Point(64) = {0.144067, 0.729141, 0, 1.0};
Point(65) = {0.147129, 0.729080, 0, 1.0};
Point(66) = {0.149021, 0.729047, 0, 1.0};
Point(67) = {-0.149670, -0.729035, 0, 1.0};
Point(68) = {-0.149016, -0.729106, 0, 1.0};
Point(69) = {-0.147085, -0.729342, 0, 1.0};
Point(70) = {-0.143940, -0.729779, 0, 1.0};
Point(71) = {-0.139656, -0.730433, 0, 1.0};
Point(72) = {-0.134318, -0.731308, 0, 1.0};
Point(73) = {-0.128024, -0.732396, 0, 1.0};
Point(74) = {-0.120877, -0.733677, 0, 1.0};
Point(75) = {-0.112986, -0.735121, 0, 1.0};
Point(76) = {-0.104461, -0.736696, 0, 1.0};
Point(77) = {-0.095415, -0.738361, 0, 1.0};
Point(78) = {-0.085965, -0.740078, 0, 1.0};
Point(79) = {-0.076229, -0.741798, 0, 1.0};
Point(80) = {-0.066326, -0.743467, 0, 1.0};
Point(81) = {-0.056358, -0.745023, 0, 1.0};
Point(82) = {-0.046411, -0.746418, 0, 1.0};
Point(83) = {-0.036569, -0.747612, 0, 1.0};
Point(84) = {-0.026912, -0.748580, 0, 1.0};
Point(85) = {-0.017519, -0.749305, 0, 1.0};
Point(86) = {-0.008469, -0.749780, 0, 1.0};
Point(87) = {0.000161, -0.750000, 0, 1.0};
Point(88) = {0.008297, -0.749971, 0, 1.0};
Point(89) = {0.015867, -0.749698, 0, 1.0};
Point(90) = {0.022806, -0.749196, 0, 1.0};
Point(91) = {0.029053, -0.748481, 0, 1.0};
Point(92) = {0.034556, -0.747574, 0, 1.0};
Point(93) = {0.039267, -0.746501, 0, 1.0};
Point(94) = {0.043154, -0.745292, 0, 1.0};
Point(95) = {0.046189, -0.743989, 0, 1.0};
Point(96) = {0.048362, -0.742650, 0, 1.0};
Point(97) = {0.049563, -0.741483, 0, 1.0};
Point(98) = {0.049796, -0.741119, 0, 1.0};
Point(99) = {0.049945, -0.740779, 0, 1.0};
Point(100) = {0.049996, -0.740571, 0, 1.0};
Point(101) = {0.049994, -0.740385, 0, 1.0};
Point(102) = {0.049926, -0.740208, 0, 1.0};
Point(103) = {0.049797, -0.740021, 0, 1.0};
Point(104) = {0.049515, -0.739727, 0, 1.0};
Point(105) = {0.049136, -0.739419, 0, 1.0};
Point(106) = {0.046966, -0.738273, 0, 1.0};
Point(107) = {0.043927, -0.737223, 0, 1.0};
Point(108) = {0.039916, -0.736218, 0, 1.0};
Point(109) = {0.034965, -0.735294, 0, 1.0};
Point(110) = {0.029102, -0.734480, 0, 1.0};
Point(111) = {0.022350, -0.733777, 0, 1.0};
Point(112) = {0.014766, -0.733163, 0, 1.0};
Point(113) = {0.006429, -0.732625, 0, 1.0};
Point(114) = {-0.002567, -0.732150, 0, 1.0};
Point(115) = {-0.012118, -0.731734, 0, 1.0};
Point(116) = {-0.022119, -0.731372, 0, 1.0};
Point(117) = {-0.032457, -0.731062, 0, 1.0};
Point(118) = {-0.043019, -0.730794, 0, 1.0};
Point(119) = {-0.053682, -0.730564, 0, 1.0};
Point(120) = {-0.064325, -0.730366, 0, 1.0};
Point(121) = {-0.074824, -0.730197, 0, 1.0};
Point(122) = {-0.085060, -0.730054, 0, 1.0};
Point(123) = {-0.094920, -0.729932, 0, 1.0};
Point(124) = {-0.104287, -0.729817, 0, 1.0};
Point(125) = {-0.113045, -0.729705, 0, 1.0};
Point(126) = {-0.121082, -0.729589, 0, 1.0};
Point(127) = {-0.128294, -0.729470, 0, 1.0};
Point(128) = {-0.134585, -0.729350, 0, 1.0};
Point(129) = {-0.139867, -0.729237, 0, 1.0};
Point(130) = {-0.144067, -0.729141, 0, 1.0};
Point(131) = {-0.147129, -0.729080, 0, 1.0};
Point(132) = {-0.149021, -0.729047, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074835, 0.739517, 0, 1.0};
Point(2) = {0.074508, 0.739553, 0, 1.0};
Point(3) = {0.073543, 0.739671, 0, 1.0};
Point(4) = {0.071970, 0.739890, 0, 1.0};
Point(5) = {0.069828, 0.740217, 0, 1.0};
Point(6) = {0.067159, 0.740654, 0, 1.0};
Point(7) = {0.064012, 0.741198, 0, 1.0};
Point(8) = {0.060438, 0.741839, 0, 1.0};
Point(9) = {0.056493, 0.742561, 0, 1.0};
Point(10) = {0.052231, 0.743348, 0, 1.0};
Point(11) = {0.047707, 0.744181, 0, 1.0};
Point(12) = {0.042982, 0.745039, 0, 1.0};
Point(13) = {0.038115, 0.745899, 0, 1.0};
Point(14) = {0.033163, 0.746734, 0, 1.0};
Point(15) = {0.028179, 0.747512, 0, 1.0};
Point(16) = {0.023205, 0.748209, 0, 1.0};
Point(17) = {0.018284, 0.748806, 0, 1.0};
Point(18) = {0.013456, 0.749290, 0, 1.0};
Point(19) = {0.008760, 0.749653, 0, 1.0};
Point(20) = {0.004235, 0.749890, 0, 1.0};
Point(21) = {-0.000080, 0.750000, 0, 1.0};
Point(22) = {-0.004148, 0.749985, 0, 1.0};
Point(23) = {-0.007933, 0.749849, 0, 1.0};
Point(24) = {-0.011403, 0.749598, 0, 1.0};
Point(25) = {-0.014527, 0.749240, 0, 1.0};
Point(26) = {-0.017278, 0.748787, 0, 1.0};
Point(27) = {-0.019634, 0.748250, 0, 1.0};
Point(28) = {-0.021577, 0.747646, 0, 1.0};
Point(29) = {-0.023095, 0.746995, 0, 1.0};
Point(30) = {-0.024181, 0.746325, 0, 1.0};
Point(31) = {-0.024782, 0.745742, 0, 1.0};
Point(32) = {-0.024898, 0.745559, 0, 1.0};
Point(33) = {-0.024973, 0.745389, 0, 1.0};
Point(34) = {-0.024998, 0.745285, 0, 1.0};
Point(35) = {-0.024997, 0.745193, 0, 1.0};
Point(36) = {-0.024963, 0.745104, 0, 1.0};
Point(37) = {-0.024899, 0.745010, 0, 1.0};
Point(38) = {-0.024757, 0.744863, 0, 1.0};
Point(39) = {-0.024568, 0.744710, 0, 1.0};
Point(40) = {-0.023483, 0.744136, 0, 1.0};
Point(41) = {-0.021964, 0.743611, 0, 1.0};
Point(42) = {-0.019958, 0.743109, 0, 1.0};
Point(43) = {-0.017482, 0.742647, 0, 1.0};
Point(44) = {-0.014551, 0.742240, 0, 1.0};
Point(45) = {-0.011175, 0.741888, 0, 1.0};
Point(46) = {-0.007383, 0.741582, 0, 1.0};
Point(47) = {-0.003214, 0.741312, 0, 1.0};
Point(48) = {0.001283, 0.741075, 0, 1.0};
Point(49) = {0.006059, 0.740867, 0, 1.0};
Point(50) = {0.011059, 0.740686, 0, 1.0};
Point(51) = {0.016229, 0.740531, 0, 1.0};
Point(52) = {0.021509, 0.740397, 0, 1.0};
Point(53) = {0.026841, 0.740282, 0, 1.0};
Point(54) = {0.032162, 0.740183, 0, 1.0};
Point(55) = {0.037412, 0.740099, 0, 1.0};
Point(56) = {0.042530, 0.740027, 0, 1.0};
Point(57) = {0.047460, 0.739966, 0, 1.0};
Point(58) = {0.052143, 0.739909, 0, 1.0};
Point(59) = {0.056522, 0.739853, 0, 1.0};
Point(60) = {0.060541, 0.739794, 0, 1.0};
Point(61) = {0.064147, 0.739735, 0, 1.0};
Point(62) = {0.067292, 0.739675, 0, 1.0};
Point(63) = {0.069934, 0.739619, 0, 1.0};
Point(64) = {0.072034, 0.739571, 0, 1.0};
Point(65) = {0.073565, 0.739540, 0, 1.0};
Point(66) = {0.074510, 0.739524, 0, 1.0};
Point(67) = {-0.074835, -0.739517, 0, 1.0};
Point(68) = {-0.074508, -0.739553, 0, 1.0};
Point(69) = {-0.073543, -0.739671, 0, 1.0};
Point(70) = {-0.071970, -0.739890, 0, 1.0};
Point(71) = {-0.069828, -0.740217, 0, 1.0};
Point(72) = {-0.067159, -0.740654, 0, 1.0};
Point(73) = {-0.064012, -0.741198, 0, 1.0};
Point(74) = {-0.060438, -0.741839, 0, 1.0};
Point(75) = {-0.056493, -0.742561, 0, 1.0};
Point(76) = {-0.052231, -0.743348, 0, 1.0};
Point(77) = {-0.047707, -0.744181, 0, 1.0};
Point(78) = {-0.042982, -0.745039, 0, 1.0};
Point(79) = {-0.038115, -0.745899, 0, 1.0};
Point(80) = {-0.033163, -0.746734, 0, 1.0};
Point(81) = {-0.028179, -0.747512, 0, 1.0};
Point(82) = {-0.023205, -0.748209, 0, 1.0};
Point(83) = {-0.018284, -0.748806, 0, 1.0};
Point(84) = {-0.013456, -0.749290, 0, 1.0};
Point(85) = {-0.008760, -0.749653, 0, 1.0};
Point(86) = {-0.004235, -0.749890, 0, 1.0};
Point(87) = {0.000080, -0.750000, 0, 1.0};
Point(88) = {0.004148, -0.749985, 0, 1.0};
Point(89) = {0.007933, -0.749849, 0, 1.0};
Point(90) = {0.011403, -0.749598, 0, 1.0};
Point(91) = {0.014527, -0.749240, 0, 1.0};
Point(92) = {0.017278, -0.748787, 0, 1.0};
Point(93) = {0.019634, -0.748250, 0, 1.0};
Point(94) = {0.021577, -0.747646, 0, 1.0};
Point(95) = {0.023095, -0.746995, 0, 1.0};
Point(96) = {0.024181, -0.746325, 0, 1.0};
Point(97) = {0.024782, -0.745742, 0, 1.0};
Point(98) = {0.024898, -0.745559, 0, 1.0};
Point(99) = {0.024973, -0.745389, 0, 1.0};
Point(100) = {0.024998, -0.745285, 0, 1.0};
Point(101) = {0.024997, -0.745193, 0, 1.0};
Point(102) = {0.024963, -0.745104, 0, 1.0};
Point(103) = {0.024899, -0.745010, 0, 1.0};
Point(104) = {0.024757, -0.744863, 0, 1.0};
Point(105) = {0.024568, -0.744710, 0, 1.0};
Point(106) = {0.023483, -0.744136, 0, 1.0};
Point(107) = {0.021964, -0.743611, 0, 1.0};
Point(108) = {0.019958, -0.743109, 0, 1.0};
Point(109) = {0.017482, -0.742647, 0, 1.0};
Point(110) = {0.014551, -0.742240, 0, 1.0};
Point(111) = {0.011175, -0.741888, 0, 1.0};
Point(112) = {0.007383, -0.741582, 0, 1.0};
Point(113) = {0.003214, -0.741312, 0, 1.0};
Point(114) = {-0.001283, -0.741075, 0, 1.0};
Point(115) = {-0.006059, -0.740867, 0, 1.0};
Point(116) = {-0.011059, -0.740686, 0, 1.0};
Point(117) = {-0.016229, -0.740531, 0, 1.0};
Point(118) = {-0.021509, -0.740397, 0, 1.0};
Point(119) = {-0.026841, -0.740282, 0, 1.0};
Point(120) = {-0.032162, -0.740183, 0, 1.0};
Point(121) = {-0.037412, -0.740099, 0, 1.0};
Point(122) = {-0.042530, -0.740027, 0, 1.0};
Point(123) = {-0.047460, -0.739966, 0, 1.0};
Point(124) = {-0.052143, -0.739909, 0, 1.0};
Point(125) = {-0.056522, -0.739853, 0, 1.0};
Point(126) = {-0.060541, -0.739794, 0, 1.0};
Point(127) = {-0.064147, -0.739735, 0, 1.0};
Point(128) = {-0.067292, -0.739675, 0, 1.0};
Point(129) = {-0.069934, -0.739619, 0, 1.0};
Point(130) = {-0.072034, -0.739571, 0, 1.0};
Point(131) = {-0.073565, -0.739540, 0, 1.0};
Point(132) = {-0.074510, -0.739524, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074937, 0.725285, 0, 1.0};
Point(2) = {0.071801, 0.726254, 0, 1.0};
Point(3) = {0.066821, 0.727723, 0, 1.0};
Point(4) = {0.060758, 0.729484, 0, 1.0};
Point(5) = {0.057352, 0.730483, 0, 1.0};
Point(6) = {0.053717, 0.731562, 0, 1.0};
Point(7) = {0.049867, 0.732713, 0, 1.0};
Point(8) = {0.045820, 0.733931, 0, 1.0};
Point(9) = {0.041591, 0.735211, 0, 1.0};
Point(10) = {0.037200, 0.736545, 0, 1.0};
Point(11) = {0.032665, 0.737920, 0, 1.0};
Point(12) = {0.028005, 0.739328, 0, 1.0};
Point(13) = {0.023240, 0.740752, 0, 1.0};
Point(14) = {0.018389, 0.742178, 0, 1.0};
Point(15) = {0.013470, 0.743590, 0, 1.0};
Point(16) = {0.008508, 0.744972, 0, 1.0};
Point(17) = {0.003519, 0.746280, 0, 1.0};
Point(18) = {-0.001478, 0.747455, 0, 1.0};
Point(19) = {-0.006466, 0.748434, 0, 1.0};
Point(20) = {-0.011426, 0.749187, 0, 1.0};
Point(21) = {-0.016336, 0.749689, 0, 1.0};
Point(22) = {-0.021175, 0.749961, 0, 1.0};
Point(23) = {-0.025922, 0.750000, 0, 1.0};
Point(24) = {-0.030585, 0.749837, 0, 1.0};
Point(25) = {-0.035054, 0.749462, 0, 1.0};
Point(26) = {-0.039398, 0.748925, 0, 1.0};
Point(27) = {-0.043566, 0.748243, 0, 1.0};
Point(28) = {-0.047539, 0.747439, 0, 1.0};
Point(29) = {-0.051301, 0.746526, 0, 1.0};
Point(30) = {-0.054835, 0.745523, 0, 1.0};
Point(31) = {-0.058123, 0.744445, 0, 1.0};
Point(32) = {-0.061150, 0.743309, 0, 1.0};
Point(33) = {-0.063905, 0.742130, 0, 1.0};
Point(34) = {-0.066374, 0.740930, 0, 1.0};
Point(35) = {-0.068545, 0.739725, 0, 1.0};
Point(36) = {-0.070408, 0.738535, 0, 1.0};
Point(37) = {-0.071953, 0.737383, 0, 1.0};
Point(38) = {-0.073182, 0.736190, 0, 1.0};
Point(39) = {-0.074069, 0.735230, 0, 1.0};
Point(40) = {-0.074624, 0.734342, 0, 1.0};
Point(41) = {-0.074849, 0.733401, 0, 1.0};
Point(42) = {-0.074717, 0.732866, 0, 1.0};
Point(43) = {-0.074261, 0.732215, 0, 1.0};
Point(44) = {-0.073478, 0.731518, 0, 1.0};
Point(45) = {-0.072365, 0.730895, 0, 1.0};
Point(46) = {-0.070938, 0.730189, 0, 1.0};
Point(47) = {-0.069195, 0.729478, 0, 1.0};
Point(48) = {-0.067147, 0.728765, 0, 1.0};
Point(49) = {-0.064798, 0.728056, 0, 1.0};
Point(50) = {-0.062163, 0.727355, 0, 1.0};
Point(51) = {-0.059252, 0.726669, 0, 1.0};
Point(52) = {-0.056074, 0.725999, 0, 1.0};
Point(53) = {-0.052646, 0.725353, 0, 1.0};
Point(54) = {-0.048982, 0.724730, 0, 1.0};
Point(55) = {-0.045096, 0.724142, 0, 1.0};
Point(56) = {-0.041013, 0.723507, 0, 1.0};
Point(57) = {-0.036730, 0.723074, 0, 1.0};
Point(58) = {-0.032314, 0.722607, 0, 1.0};
Point(59) = {-0.027687, 0.722199, 0, 1.0};
Point(60) = {-0.022960, 0.721853, 0, 1.0};
Point(61) = {-0.018120, 0.721597, 0, 1.0};
Point(62) = {-0.013189, 0.721424, 0, 1.0};
Point(63) = {-0.008186, 0.721356, 0, 1.0};
Point(64) = {-0.003132, 0.721409, 0, 1.0};
Point(65) = {0.001952, 0.721601, 0, 1.0};
Point(66) = {0.007044, 0.721919, 0, 1.0};
Point(67) = {0.012121, 0.722337, 0, 1.0};
Point(68) = {0.017158, 0.722794, 0, 1.0};
Point(69) = {0.022128, 0.723249, 0, 1.0};
Point(70) = {0.027010, 0.723657, 0, 1.0};
Point(71) = {0.031782, 0.724004, 0, 1.0};
Point(72) = {0.036421, 0.724279, 0, 1.0};
Point(73) = {0.040910, 0.724484, 0, 1.0};
Point(74) = {0.045229, 0.724622, 0, 1.0};
Point(75) = {0.049359, 0.724704, 0, 1.0};
Point(76) = {0.053283, 0.724734, 0, 1.0};
Point(77) = {0.056986, 0.724718, 0, 1.0};
Point(78) = {0.060452, 0.724659, 0, 1.0};
Point(79) = {0.066609, 0.724389, 0, 1.0};
Point(80) = {0.071658, 0.724000, 0, 1.0};
Point(81) = {0.074842, 0.723785, 0, 1.0};
Point(82) = {-0.074937, -0.725285, 0, 1.0};
Point(83) = {-0.071801, -0.726254, 0, 1.0};
Point(84) = {-0.066821, -0.727723, 0, 1.0};
Point(85) = {-0.060758, -0.729484, 0, 1.0};
Point(86) = {-0.057352, -0.730483, 0, 1.0};
Point(87) = {-0.053717, -0.731562, 0, 1.0};
Point(88) = {-0.049867, -0.732713, 0, 1.0};
Point(89) = {-0.045820, -0.733931, 0, 1.0};
Point(90) = {-0.041591, -0.735211, 0, 1.0};
Point(91) = {-0.037200, -0.736545, 0, 1.0};
Point(92) = {-0.032665, -0.737920, 0, 1.0};
Point(93) = {-0.028005, -0.739328, 0, 1.0};
Point(94) = {-0.023240, -0.740752, 0, 1.0};
Point(95) = {-0.018389, -0.742178, 0, 1.0};
Point(96) = {-0.013470, -0.743590, 0, 1.0};
Point(97) = {-0.008508, -0.744972, 0, 1.0};
Point(98) = {-0.003519, -0.746280, 0, 1.0};
Point(99) = {0.001478, -0.747455, 0, 1.0};
Point(100) = {0.006466, -0.748434, 0, 1.0};
Point(101) = {0.011426, -0.749187, 0, 1.0};
Point(102) = {0.016336, -0.749689, 0, 1.0};
Point(103) = {0.021175, -0.749961, 0, 1.0};
Point(104) = {0.025922, -0.750000, 0, 1.0};
Point(105) = {0.030585, -0.749837, 0, 1.0};
Point(106) = {0.035054, -0.749462, 0, 1.0};
Point(107) = {0.039398, -0.748925, 0, 1.0};
Point(108) = {0.043566, -0.748243, 0, 1.0};
Point(109) = {0.047539, -0.747439, 0, 1.0};
Point(110) = {0.051301, -0.746526, 0, 1.0};
Point(111) = {0.054835, -0.745523, 0, 1.0};
Point(112) = {0.058123, -0.744445, 0, 1.0};
Point(113) = {0.061150, -0.743309, 0, 1.0};
Point(114) = {0.063905, -0.742130, 0, 1.0};
Point(115) = {0.066374, -0.740930, 0, 1.0};
Point(116) = {0.068545, -0.739725, 0, 1.0};
Point(117) = {0.070408, -0.738535, 0, 1.0};
Point(118) = {0.071953, -0.737383, 0, 1.0};
Point(119) = {0.073182, -0.736190, 0, 1.0};
Point(120) = {0.074069, -0.735230, 0, 1.0};
Point(121) = {0.074624, -0.734342, 0, 1.0};
Point(122) = {0.074849, -0.733401, 0, 1.0};
Point(123) = {0.074717, -0.732866, 0, 1.0};
Point(124) = {0.074261, -0.732215, 0, 1.0};
Point(125) = {0.073478, -0.731518, 0, 1.0};
Point(126) = {0.072365, -0.730895, 0, 1.0};
Point(127) = {0.070938, -0.730189, 0, 1.0};
Point(128) = {0.069195, -0.729478, 0, 1.0};
Point(129) = {0.067147, -0.728765, 0, 1.0};
Point(130) = {0.064798, -0.728056, 0, 1.0};
Point(131) = {0.062163, -0.727355, 0, 1.0};
Point(132) = {0.059252, -0.726669, 0, 1.0};
Point(133) = {0.056074, -0.725999, 0, 1.0};
Point(134) = {0.052646, -0.725353, 0, 1.0};
Point(135) = {0.048982, -0.724730, 0, 1.0};
Point(136) = {0.045096, -0.724142, 0, 1.0};
Point(137) = {0.041013, -0.723507, 0, 1.0};
Point(138) = {0.036730, -0.723074, 0, 1.0};
Point(139) = {0.032314, -0.722607, 0, 1.0};
Point(140) = {0.027687, -0.722199, 0, 1.0};
Point(141) = {0.022960, -0.721853, 0, 1.0};
Point(142) = {0.018120, -0.721597, 0, 1.0};
Point(143) = {0.013189, -0.721424, 0, 1.0};
Point(144) = {0.008186, -0.721356, 0, 1.0};
Point(145) = {0.003132, -0.721409, 0, 1.0};
Point(146) = {-0.001952, -0.721601, 0, 1.0};
Point(147) = {-0.007044, -0.721919, 0, 1.0};
Point(148) = {-0.012121, -0.722337, 0, 1.0};
Point(149) = {-0.017158, -0.722794, 0, 1.0};
Point(150) = {-0.022128, -0.723249, 0, 1.0};
Point(151) = {-0.027010, -0.723657, 0, 1.0};
Point(152) = {-0.031782, -0.724004, 0, 1.0};
Point(153) = {-0.036421, -0.724279, 0, 1.0};
Point(154) = {-0.040910, -0.724484, 0, 1.0};
Point(155) = {-0.045229, -0.724622, 0, 1.0};
Point(156) = {-0.049359, -0.724704, 0, 1.0};
Point(157) = {-0.053283, -0.724734, 0, 1.0};
Point(158) = {-0.056986, -0.724718, 0, 1.0};
Point(159) = {-0.060452, -0.724659, 0, 1.0};
Point(160) = {-0.066609, -0.724389, 0, 1.0};
Point(161) = {-0.071658, -0.724000, 0, 1.0};
Point(162) = {-0.074842, -0.723785, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:105};
Spline(6) = {105:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {36.00000000, 15.00000000, 0, 1.0};
Point(166) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
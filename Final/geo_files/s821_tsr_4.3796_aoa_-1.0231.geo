SetFactory("OpenCASCADE");

Point(1) = {0.074984, 0.740456, 0, 1.0};
Point(2) = {0.074603, 0.740547, 0, 1.0};
Point(3) = {0.073514, 0.740857, 0, 1.0};
Point(4) = {0.071833, 0.741395, 0, 1.0};
Point(5) = {0.069671, 0.742101, 0, 1.0};
Point(6) = {0.067086, 0.742881, 0, 1.0};
Point(7) = {0.064077, 0.743650, 0, 1.0};
Point(8) = {0.060612, 0.744399, 0, 1.0};
Point(9) = {0.056731, 0.745153, 0, 1.0};
Point(10) = {0.052492, 0.745911, 0, 1.0};
Point(11) = {0.047958, 0.746659, 0, 1.0};
Point(12) = {0.043191, 0.747383, 0, 1.0};
Point(13) = {0.038255, 0.748060, 0, 1.0};
Point(14) = {0.033210, 0.748671, 0, 1.0};
Point(15) = {0.028116, 0.749191, 0, 1.0};
Point(16) = {0.023030, 0.749600, 0, 1.0};
Point(17) = {0.018006, 0.749876, 0, 1.0};
Point(18) = {0.013090, 0.750000, 0, 1.0};
Point(19) = {0.008330, 0.749956, 0, 1.0};
Point(20) = {0.003766, 0.749731, 0, 1.0};
Point(21) = {-0.000570, 0.749305, 0, 1.0};
Point(22) = {-0.004682, 0.748688, 0, 1.0};
Point(23) = {-0.008531, 0.747920, 0, 1.0};
Point(24) = {-0.012072, 0.747022, 0, 1.0};
Point(25) = {-0.015265, 0.746013, 0, 1.0};
Point(26) = {-0.018070, 0.744909, 0, 1.0};
Point(27) = {-0.020454, 0.743728, 0, 1.0};
Point(28) = {-0.022380, 0.742487, 0, 1.0};
Point(29) = {-0.023832, 0.741203, 0, 1.0};
Point(30) = {-0.024624, 0.740168, 0, 1.0};
Point(31) = {-0.024754, 0.739926, 0, 1.0};
Point(32) = {-0.024789, 0.739852, 0, 1.0};
Point(33) = {-0.024909, 0.739539, 0, 1.0};
Point(34) = {-0.024973, 0.739213, 0, 1.0};
Point(35) = {-0.024999, 0.738865, 0, 1.0};
Point(36) = {-0.024998, 0.738586, 0, 1.0};
Point(37) = {-0.024720, 0.737006, 0, 1.0};
Point(38) = {-0.024040, 0.735277, 0, 1.0};
Point(39) = {-0.023012, 0.733459, 0, 1.0};
Point(40) = {-0.021686, 0.731641, 0, 1.0};
Point(41) = {-0.020077, 0.729882, 0, 1.0};
Point(42) = {-0.018218, 0.728256, 0, 1.0};
Point(43) = {-0.016126, 0.726829, 0, 1.0};
Point(44) = {-0.013806, 0.725708, 0, 1.0};
Point(45) = {-0.011198, 0.724916, 0, 1.0};
Point(46) = {-0.008330, 0.724513, 0, 1.0};
Point(47) = {-0.005100, 0.724519, 0, 1.0};
Point(48) = {-0.001509, 0.724880, 0, 1.0};
Point(49) = {0.002431, 0.725573, 0, 1.0};
Point(50) = {0.006709, 0.726571, 0, 1.0};
Point(51) = {0.011312, 0.727839, 0, 1.0};
Point(52) = {0.016223, 0.729326, 0, 1.0};
Point(53) = {0.021411, 0.730971, 0, 1.0};
Point(54) = {0.026837, 0.732700, 0, 1.0};
Point(55) = {0.032440, 0.734436, 0, 1.0};
Point(56) = {0.038144, 0.736094, 0, 1.0};
Point(57) = {0.043853, 0.737598, 0, 1.0};
Point(58) = {0.049452, 0.738879, 0, 1.0};
Point(59) = {0.054812, 0.739886, 0, 1.0};
Point(60) = {0.059795, 0.740592, 0, 1.0};
Point(61) = {0.064262, 0.740995, 0, 1.0};
Point(62) = {0.068084, 0.741123, 0, 1.0};
Point(63) = {0.071148, 0.741028, 0, 1.0};
Point(64) = {0.073341, 0.740777, 0, 1.0};
Point(65) = {0.074590, 0.740541, 0, 1.0};
Point(66) = {-0.074984, -0.740456, 0, 1.0};
Point(67) = {-0.074603, -0.740547, 0, 1.0};
Point(68) = {-0.073514, -0.740857, 0, 1.0};
Point(69) = {-0.071833, -0.741395, 0, 1.0};
Point(70) = {-0.069671, -0.742101, 0, 1.0};
Point(71) = {-0.067086, -0.742881, 0, 1.0};
Point(72) = {-0.064077, -0.743650, 0, 1.0};
Point(73) = {-0.060612, -0.744399, 0, 1.0};
Point(74) = {-0.056731, -0.745153, 0, 1.0};
Point(75) = {-0.052492, -0.745911, 0, 1.0};
Point(76) = {-0.047958, -0.746659, 0, 1.0};
Point(77) = {-0.043191, -0.747383, 0, 1.0};
Point(78) = {-0.038255, -0.748060, 0, 1.0};
Point(79) = {-0.033210, -0.748671, 0, 1.0};
Point(80) = {-0.028116, -0.749191, 0, 1.0};
Point(81) = {-0.023030, -0.749600, 0, 1.0};
Point(82) = {-0.018006, -0.749876, 0, 1.0};
Point(83) = {-0.013090, -0.750000, 0, 1.0};
Point(84) = {-0.008330, -0.749956, 0, 1.0};
Point(85) = {-0.003766, -0.749731, 0, 1.0};
Point(86) = {0.000570, -0.749305, 0, 1.0};
Point(87) = {0.004682, -0.748688, 0, 1.0};
Point(88) = {0.008531, -0.747920, 0, 1.0};
Point(89) = {0.012072, -0.747022, 0, 1.0};
Point(90) = {0.015265, -0.746013, 0, 1.0};
Point(91) = {0.018070, -0.744909, 0, 1.0};
Point(92) = {0.020454, -0.743728, 0, 1.0};
Point(93) = {0.022380, -0.742487, 0, 1.0};
Point(94) = {0.023832, -0.741203, 0, 1.0};
Point(95) = {0.024624, -0.740168, 0, 1.0};
Point(96) = {0.024754, -0.739926, 0, 1.0};
Point(97) = {0.024789, -0.739852, 0, 1.0};
Point(98) = {0.024909, -0.739539, 0, 1.0};
Point(99) = {0.024973, -0.739213, 0, 1.0};
Point(100) = {0.024999, -0.738865, 0, 1.0};
Point(101) = {0.024998, -0.738586, 0, 1.0};
Point(102) = {0.024720, -0.737006, 0, 1.0};
Point(103) = {0.024040, -0.735277, 0, 1.0};
Point(104) = {0.023012, -0.733459, 0, 1.0};
Point(105) = {0.021686, -0.731641, 0, 1.0};
Point(106) = {0.020077, -0.729882, 0, 1.0};
Point(107) = {0.018218, -0.728256, 0, 1.0};
Point(108) = {0.016126, -0.726829, 0, 1.0};
Point(109) = {0.013806, -0.725708, 0, 1.0};
Point(110) = {0.011198, -0.724916, 0, 1.0};
Point(111) = {0.008330, -0.724513, 0, 1.0};
Point(112) = {0.005100, -0.724519, 0, 1.0};
Point(113) = {0.001509, -0.724880, 0, 1.0};
Point(114) = {-0.002431, -0.725573, 0, 1.0};
Point(115) = {-0.006709, -0.726571, 0, 1.0};
Point(116) = {-0.011312, -0.727839, 0, 1.0};
Point(117) = {-0.016223, -0.729326, 0, 1.0};
Point(118) = {-0.021411, -0.730971, 0, 1.0};
Point(119) = {-0.026837, -0.732700, 0, 1.0};
Point(120) = {-0.032440, -0.734436, 0, 1.0};
Point(121) = {-0.038144, -0.736094, 0, 1.0};
Point(122) = {-0.043853, -0.737598, 0, 1.0};
Point(123) = {-0.049452, -0.738879, 0, 1.0};
Point(124) = {-0.054812, -0.739886, 0, 1.0};
Point(125) = {-0.059795, -0.740592, 0, 1.0};
Point(126) = {-0.064262, -0.740995, 0, 1.0};
Point(127) = {-0.068084, -0.741123, 0, 1.0};
Point(128) = {-0.071148, -0.741028, 0, 1.0};
Point(129) = {-0.073341, -0.740777, 0, 1.0};
Point(130) = {-0.074590, -0.740541, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:114};
Spline(7) = {114:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112476, 0.735684, 0, 1.0};
Point(2) = {0.111905, 0.735821, 0, 1.0};
Point(3) = {0.110270, 0.736286, 0, 1.0};
Point(4) = {0.107750, 0.737093, 0, 1.0};
Point(5) = {0.104507, 0.738152, 0, 1.0};
Point(6) = {0.100629, 0.739321, 0, 1.0};
Point(7) = {0.096116, 0.740475, 0, 1.0};
Point(8) = {0.090918, 0.741598, 0, 1.0};
Point(9) = {0.085096, 0.742730, 0, 1.0};
Point(10) = {0.078738, 0.743866, 0, 1.0};
Point(11) = {0.071937, 0.744989, 0, 1.0};
Point(12) = {0.064787, 0.746074, 0, 1.0};
Point(13) = {0.057382, 0.747090, 0, 1.0};
Point(14) = {0.049815, 0.748006, 0, 1.0};
Point(15) = {0.042174, 0.748787, 0, 1.0};
Point(16) = {0.034546, 0.749400, 0, 1.0};
Point(17) = {0.027008, 0.749814, 0, 1.0};
Point(18) = {0.019636, 0.750000, 0, 1.0};
Point(19) = {0.012495, 0.749935, 0, 1.0};
Point(20) = {0.005649, 0.749597, 0, 1.0};
Point(21) = {-0.000855, 0.748957, 0, 1.0};
Point(22) = {-0.007023, 0.748032, 0, 1.0};
Point(23) = {-0.012797, 0.746880, 0, 1.0};
Point(24) = {-0.018109, 0.745533, 0, 1.0};
Point(25) = {-0.022898, 0.744020, 0, 1.0};
Point(26) = {-0.027104, 0.742364, 0, 1.0};
Point(27) = {-0.030682, 0.740592, 0, 1.0};
Point(28) = {-0.033570, 0.738730, 0, 1.0};
Point(29) = {-0.035748, 0.736805, 0, 1.0};
Point(30) = {-0.036936, 0.735252, 0, 1.0};
Point(31) = {-0.037131, 0.734889, 0, 1.0};
Point(32) = {-0.037184, 0.734778, 0, 1.0};
Point(33) = {-0.037363, 0.734308, 0, 1.0};
Point(34) = {-0.037460, 0.733819, 0, 1.0};
Point(35) = {-0.037499, 0.733297, 0, 1.0};
Point(36) = {-0.037497, 0.732879, 0, 1.0};
Point(37) = {-0.037080, 0.730508, 0, 1.0};
Point(38) = {-0.036059, 0.727916, 0, 1.0};
Point(39) = {-0.034519, 0.725189, 0, 1.0};
Point(40) = {-0.032529, 0.722462, 0, 1.0};
Point(41) = {-0.030116, 0.719824, 0, 1.0};
Point(42) = {-0.027326, 0.717383, 0, 1.0};
Point(43) = {-0.024189, 0.715243, 0, 1.0};
Point(44) = {-0.020709, 0.713562, 0, 1.0};
Point(45) = {-0.016797, 0.712374, 0, 1.0};
Point(46) = {-0.012495, 0.711770, 0, 1.0};
Point(47) = {-0.007649, 0.711779, 0, 1.0};
Point(48) = {-0.002263, 0.712320, 0, 1.0};
Point(49) = {0.003646, 0.713359, 0, 1.0};
Point(50) = {0.010063, 0.714857, 0, 1.0};
Point(51) = {0.016968, 0.716759, 0, 1.0};
Point(52) = {0.024334, 0.718989, 0, 1.0};
Point(53) = {0.032117, 0.721456, 0, 1.0};
Point(54) = {0.040255, 0.724051, 0, 1.0};
Point(55) = {0.048660, 0.726653, 0, 1.0};
Point(56) = {0.057216, 0.729142, 0, 1.0};
Point(57) = {0.065779, 0.731397, 0, 1.0};
Point(58) = {0.074177, 0.733318, 0, 1.0};
Point(59) = {0.082217, 0.734829, 0, 1.0};
Point(60) = {0.089692, 0.735888, 0, 1.0};
Point(61) = {0.096393, 0.736493, 0, 1.0};
Point(62) = {0.102127, 0.736685, 0, 1.0};
Point(63) = {0.106722, 0.736541, 0, 1.0};
Point(64) = {0.110011, 0.736165, 0, 1.0};
Point(65) = {0.111886, 0.735812, 0, 1.0};
Point(66) = {-0.112476, -0.735684, 0, 1.0};
Point(67) = {-0.111905, -0.735821, 0, 1.0};
Point(68) = {-0.110270, -0.736286, 0, 1.0};
Point(69) = {-0.107750, -0.737093, 0, 1.0};
Point(70) = {-0.104507, -0.738152, 0, 1.0};
Point(71) = {-0.100629, -0.739321, 0, 1.0};
Point(72) = {-0.096116, -0.740475, 0, 1.0};
Point(73) = {-0.090918, -0.741598, 0, 1.0};
Point(74) = {-0.085096, -0.742730, 0, 1.0};
Point(75) = {-0.078738, -0.743866, 0, 1.0};
Point(76) = {-0.071937, -0.744989, 0, 1.0};
Point(77) = {-0.064787, -0.746074, 0, 1.0};
Point(78) = {-0.057382, -0.747090, 0, 1.0};
Point(79) = {-0.049815, -0.748006, 0, 1.0};
Point(80) = {-0.042174, -0.748787, 0, 1.0};
Point(81) = {-0.034546, -0.749400, 0, 1.0};
Point(82) = {-0.027008, -0.749814, 0, 1.0};
Point(83) = {-0.019636, -0.750000, 0, 1.0};
Point(84) = {-0.012495, -0.749935, 0, 1.0};
Point(85) = {-0.005649, -0.749597, 0, 1.0};
Point(86) = {0.000855, -0.748957, 0, 1.0};
Point(87) = {0.007023, -0.748032, 0, 1.0};
Point(88) = {0.012797, -0.746880, 0, 1.0};
Point(89) = {0.018109, -0.745533, 0, 1.0};
Point(90) = {0.022898, -0.744020, 0, 1.0};
Point(91) = {0.027104, -0.742364, 0, 1.0};
Point(92) = {0.030682, -0.740592, 0, 1.0};
Point(93) = {0.033570, -0.738730, 0, 1.0};
Point(94) = {0.035748, -0.736805, 0, 1.0};
Point(95) = {0.036936, -0.735252, 0, 1.0};
Point(96) = {0.037131, -0.734889, 0, 1.0};
Point(97) = {0.037184, -0.734778, 0, 1.0};
Point(98) = {0.037363, -0.734308, 0, 1.0};
Point(99) = {0.037460, -0.733819, 0, 1.0};
Point(100) = {0.037499, -0.733297, 0, 1.0};
Point(101) = {0.037497, -0.732879, 0, 1.0};
Point(102) = {0.037080, -0.730508, 0, 1.0};
Point(103) = {0.036059, -0.727916, 0, 1.0};
Point(104) = {0.034519, -0.725189, 0, 1.0};
Point(105) = {0.032529, -0.722462, 0, 1.0};
Point(106) = {0.030116, -0.719824, 0, 1.0};
Point(107) = {0.027326, -0.717383, 0, 1.0};
Point(108) = {0.024189, -0.715243, 0, 1.0};
Point(109) = {0.020709, -0.713562, 0, 1.0};
Point(110) = {0.016797, -0.712374, 0, 1.0};
Point(111) = {0.012495, -0.711770, 0, 1.0};
Point(112) = {0.007649, -0.711779, 0, 1.0};
Point(113) = {0.002263, -0.712320, 0, 1.0};
Point(114) = {-0.003646, -0.713359, 0, 1.0};
Point(115) = {-0.010063, -0.714857, 0, 1.0};
Point(116) = {-0.016968, -0.716759, 0, 1.0};
Point(117) = {-0.024334, -0.718989, 0, 1.0};
Point(118) = {-0.032117, -0.721456, 0, 1.0};
Point(119) = {-0.040255, -0.724051, 0, 1.0};
Point(120) = {-0.048660, -0.726653, 0, 1.0};
Point(121) = {-0.057216, -0.729142, 0, 1.0};
Point(122) = {-0.065779, -0.731397, 0, 1.0};
Point(123) = {-0.074177, -0.733318, 0, 1.0};
Point(124) = {-0.082217, -0.734829, 0, 1.0};
Point(125) = {-0.089692, -0.735888, 0, 1.0};
Point(126) = {-0.096393, -0.736493, 0, 1.0};
Point(127) = {-0.102127, -0.736685, 0, 1.0};
Point(128) = {-0.106722, -0.736541, 0, 1.0};
Point(129) = {-0.110011, -0.736165, 0, 1.0};
Point(130) = {-0.111886, -0.735812, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:114};
Spline(7) = {114:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 35 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149968, 0.730912, 0, 1.0};
Point(2) = {0.149207, 0.731094, 0, 1.0};
Point(3) = {0.147027, 0.731714, 0, 1.0};
Point(4) = {0.143666, 0.732790, 0, 1.0};
Point(5) = {0.139343, 0.734202, 0, 1.0};
Point(6) = {0.134173, 0.735761, 0, 1.0};
Point(7) = {0.128154, 0.737300, 0, 1.0};
Point(8) = {0.121225, 0.738797, 0, 1.0};
Point(9) = {0.113461, 0.740307, 0, 1.0};
Point(10) = {0.104984, 0.741822, 0, 1.0};
Point(11) = {0.095916, 0.743319, 0, 1.0};
Point(12) = {0.086382, 0.744765, 0, 1.0};
Point(13) = {0.076509, 0.746120, 0, 1.0};
Point(14) = {0.066419, 0.747341, 0, 1.0};
Point(15) = {0.056232, 0.748383, 0, 1.0};
Point(16) = {0.046061, 0.749200, 0, 1.0};
Point(17) = {0.036011, 0.749752, 0, 1.0};
Point(18) = {0.026181, 0.750000, 0, 1.0};
Point(19) = {0.016661, 0.749913, 0, 1.0};
Point(20) = {0.007533, 0.749463, 0, 1.0};
Point(21) = {-0.001140, 0.748609, 0, 1.0};
Point(22) = {-0.009364, 0.747376, 0, 1.0};
Point(23) = {-0.017062, 0.745840, 0, 1.0};
Point(24) = {-0.024145, 0.744044, 0, 1.0};
Point(25) = {-0.030531, 0.742026, 0, 1.0};
Point(26) = {-0.036139, 0.739818, 0, 1.0};
Point(27) = {-0.040909, 0.737456, 0, 1.0};
Point(28) = {-0.044761, 0.734974, 0, 1.0};
Point(29) = {-0.047664, 0.732407, 0, 1.0};
Point(30) = {-0.049247, 0.730336, 0, 1.0};
Point(31) = {-0.049508, 0.729852, 0, 1.0};
Point(32) = {-0.049579, 0.729704, 0, 1.0};
Point(33) = {-0.049817, 0.729078, 0, 1.0};
Point(34) = {-0.049947, 0.728425, 0, 1.0};
Point(35) = {-0.049999, 0.727729, 0, 1.0};
Point(36) = {-0.049996, 0.727173, 0, 1.0};
Point(37) = {-0.049441, 0.724011, 0, 1.0};
Point(38) = {-0.048079, 0.720555, 0, 1.0};
Point(39) = {-0.046025, 0.716919, 0, 1.0};
Point(40) = {-0.043373, 0.713282, 0, 1.0};
Point(41) = {-0.040154, 0.709765, 0, 1.0};
Point(42) = {-0.036435, 0.706511, 0, 1.0};
Point(43) = {-0.032251, 0.703657, 0, 1.0};
Point(44) = {-0.027612, 0.701416, 0, 1.0};
Point(45) = {-0.022396, 0.699832, 0, 1.0};
Point(46) = {-0.016660, 0.699027, 0, 1.0};
Point(47) = {-0.010199, 0.699039, 0, 1.0};
Point(48) = {-0.003017, 0.699760, 0, 1.0};
Point(49) = {0.004861, 0.701145, 0, 1.0};
Point(50) = {0.013417, 0.703143, 0, 1.0};
Point(51) = {0.022624, 0.705678, 0, 1.0};
Point(52) = {0.032445, 0.708652, 0, 1.0};
Point(53) = {0.042823, 0.711941, 0, 1.0};
Point(54) = {0.053673, 0.715401, 0, 1.0};
Point(55) = {0.064880, 0.718871, 0, 1.0};
Point(56) = {0.076288, 0.722189, 0, 1.0};
Point(57) = {0.087706, 0.725196, 0, 1.0};
Point(58) = {0.098903, 0.727758, 0, 1.0};
Point(59) = {0.109623, 0.729772, 0, 1.0};
Point(60) = {0.119589, 0.731184, 0, 1.0};
Point(61) = {0.128525, 0.731990, 0, 1.0};
Point(62) = {0.136169, 0.732246, 0, 1.0};
Point(63) = {0.142296, 0.732055, 0, 1.0};
Point(64) = {0.146682, 0.731553, 0, 1.0};
Point(65) = {0.149181, 0.731082, 0, 1.0};
Point(66) = {-0.149968, -0.730912, 0, 1.0};
Point(67) = {-0.149207, -0.731094, 0, 1.0};
Point(68) = {-0.147027, -0.731714, 0, 1.0};
Point(69) = {-0.143666, -0.732790, 0, 1.0};
Point(70) = {-0.139343, -0.734202, 0, 1.0};
Point(71) = {-0.134173, -0.735761, 0, 1.0};
Point(72) = {-0.128154, -0.737300, 0, 1.0};
Point(73) = {-0.121225, -0.738797, 0, 1.0};
Point(74) = {-0.113461, -0.740307, 0, 1.0};
Point(75) = {-0.104984, -0.741822, 0, 1.0};
Point(76) = {-0.095916, -0.743319, 0, 1.0};
Point(77) = {-0.086382, -0.744765, 0, 1.0};
Point(78) = {-0.076509, -0.746120, 0, 1.0};
Point(79) = {-0.066419, -0.747341, 0, 1.0};
Point(80) = {-0.056232, -0.748383, 0, 1.0};
Point(81) = {-0.046061, -0.749200, 0, 1.0};
Point(82) = {-0.036011, -0.749752, 0, 1.0};
Point(83) = {-0.026181, -0.750000, 0, 1.0};
Point(84) = {-0.016661, -0.749913, 0, 1.0};
Point(85) = {-0.007533, -0.749463, 0, 1.0};
Point(86) = {0.001140, -0.748609, 0, 1.0};
Point(87) = {0.009364, -0.747376, 0, 1.0};
Point(88) = {0.017062, -0.745840, 0, 1.0};
Point(89) = {0.024145, -0.744044, 0, 1.0};
Point(90) = {0.030531, -0.742026, 0, 1.0};
Point(91) = {0.036139, -0.739818, 0, 1.0};
Point(92) = {0.040909, -0.737456, 0, 1.0};
Point(93) = {0.044761, -0.734974, 0, 1.0};
Point(94) = {0.047664, -0.732407, 0, 1.0};
Point(95) = {0.049247, -0.730336, 0, 1.0};
Point(96) = {0.049508, -0.729852, 0, 1.0};
Point(97) = {0.049579, -0.729704, 0, 1.0};
Point(98) = {0.049817, -0.729078, 0, 1.0};
Point(99) = {0.049947, -0.728425, 0, 1.0};
Point(100) = {0.049999, -0.727729, 0, 1.0};
Point(101) = {0.049996, -0.727173, 0, 1.0};
Point(102) = {0.049441, -0.724011, 0, 1.0};
Point(103) = {0.048079, -0.720555, 0, 1.0};
Point(104) = {0.046025, -0.716919, 0, 1.0};
Point(105) = {0.043373, -0.713282, 0, 1.0};
Point(106) = {0.040154, -0.709765, 0, 1.0};
Point(107) = {0.036435, -0.706511, 0, 1.0};
Point(108) = {0.032251, -0.703657, 0, 1.0};
Point(109) = {0.027612, -0.701416, 0, 1.0};
Point(110) = {0.022396, -0.699832, 0, 1.0};
Point(111) = {0.016660, -0.699027, 0, 1.0};
Point(112) = {0.010199, -0.699039, 0, 1.0};
Point(113) = {0.003017, -0.699760, 0, 1.0};
Point(114) = {-0.004861, -0.701145, 0, 1.0};
Point(115) = {-0.013417, -0.703143, 0, 1.0};
Point(116) = {-0.022624, -0.705678, 0, 1.0};
Point(117) = {-0.032445, -0.708652, 0, 1.0};
Point(118) = {-0.042823, -0.711941, 0, 1.0};
Point(119) = {-0.053673, -0.715401, 0, 1.0};
Point(120) = {-0.064880, -0.718871, 0, 1.0};
Point(121) = {-0.076288, -0.722189, 0, 1.0};
Point(122) = {-0.087706, -0.725196, 0, 1.0};
Point(123) = {-0.098903, -0.727758, 0, 1.0};
Point(124) = {-0.109623, -0.729772, 0, 1.0};
Point(125) = {-0.119589, -0.731184, 0, 1.0};
Point(126) = {-0.128525, -0.731990, 0, 1.0};
Point(127) = {-0.136169, -0.732246, 0, 1.0};
Point(128) = {-0.142296, -0.732055, 0, 1.0};
Point(129) = {-0.146682, -0.731553, 0, 1.0};
Point(130) = {-0.149181, -0.731082, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:114};
Spline(7) = {114:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 47 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
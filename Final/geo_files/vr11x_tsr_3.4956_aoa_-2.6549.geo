SetFactory("OpenCASCADE");

Point(1) = {0.074887, 0.742456, 0, 1.0};
Point(2) = {0.073943, 0.742485, 0, 1.0};
Point(3) = {0.071618, 0.742869, 0, 1.0};
Point(4) = {0.068516, 0.743403, 0, 1.0};
Point(5) = {0.064640, 0.744054, 0, 1.0};
Point(6) = {0.059987, 0.744879, 0, 1.0};
Point(7) = {0.054562, 0.745771, 0, 1.0};
Point(8) = {0.049128, 0.746843, 0, 1.0};
Point(9) = {0.042922, 0.747975, 0, 1.0};
Point(10) = {0.036730, 0.748802, 0, 1.0};
Point(11) = {0.030552, 0.749329, 0, 1.0};
Point(12) = {0.024387, 0.749594, 0, 1.0};
Point(13) = {0.016683, 0.749854, 0, 1.0};
Point(14) = {0.008987, 0.749938, 0, 1.0};
Point(15) = {0.001293, 0.750000, 0, 1.0};
Point(16) = {-0.006395, 0.749919, 0, 1.0};
Point(17) = {-0.014078, 0.749727, 0, 1.0};
Point(18) = {-0.021755, 0.749416, 0, 1.0};
Point(19) = {-0.029426, 0.748971, 0, 1.0};
Point(20) = {-0.037093, 0.748440, 0, 1.0};
Point(21) = {-0.044749, 0.747677, 0, 1.0};
Point(22) = {-0.052395, 0.746684, 0, 1.0};
Point(23) = {-0.060022, 0.745288, 0, 1.0};
Point(24) = {-0.063815, 0.744143, 0, 1.0};
Point(25) = {-0.067587, 0.742553, 0, 1.0};
Point(26) = {-0.071327, 0.740287, 0, 1.0};
Point(27) = {-0.073173, 0.738617, 0, 1.0};
Point(28) = {-0.073906, 0.737829, 0, 1.0};
Point(29) = {-0.074266, 0.737305, 0, 1.0};
Point(30) = {-0.074687, 0.736439, 0, 1.0};
Point(31) = {-0.074919, 0.734813, 0, 1.0};
Point(32) = {-0.074580, 0.734137, 0, 1.0};
Point(33) = {-0.074104, 0.733820, 0, 1.0};
Point(34) = {-0.073713, 0.733669, 0, 1.0};
Point(35) = {-0.072934, 0.733459, 0, 1.0};
Point(36) = {-0.070994, 0.733103, 0, 1.0};
Point(37) = {-0.067130, 0.732713, 0, 1.0};
Point(38) = {-0.063272, 0.732446, 0, 1.0};
Point(39) = {-0.059419, 0.732286, 0, 1.0};
Point(40) = {-0.051720, 0.732120, 0, 1.0};
Point(41) = {-0.044027, 0.732104, 0, 1.0};
Point(42) = {-0.036338, 0.732164, 0, 1.0};
Point(43) = {-0.028655, 0.732343, 0, 1.0};
Point(44) = {-0.020974, 0.732577, 0, 1.0};
Point(45) = {-0.013297, 0.732886, 0, 1.0};
Point(46) = {-0.005622, 0.733258, 0, 1.0};
Point(47) = {0.002048, 0.733713, 0, 1.0};
Point(48) = {0.009715, 0.734246, 0, 1.0};
Point(49) = {0.017380, 0.734832, 0, 1.0};
Point(50) = {0.025043, 0.735449, 0, 1.0};
Point(51) = {0.031172, 0.735964, 0, 1.0};
Point(52) = {0.037300, 0.736509, 0, 1.0};
Point(53) = {0.043426, 0.737093, 0, 1.0};
Point(54) = {0.049553, 0.737677, 0, 1.0};
Point(55) = {0.054911, 0.738234, 0, 1.0};
Point(56) = {0.060267, 0.738836, 0, 1.0};
Point(57) = {0.064855, 0.739433, 0, 1.0};
Point(58) = {0.068677, 0.739933, 0, 1.0};
Point(59) = {0.071733, 0.740383, 0, 1.0};
Point(60) = {0.074022, 0.740781, 0, 1.0};
Point(61) = {0.074957, 0.740962, 0, 1.0};
Point(62) = {-0.074887, -0.742456, 0, 1.0};
Point(63) = {-0.073943, -0.742485, 0, 1.0};
Point(64) = {-0.071618, -0.742869, 0, 1.0};
Point(65) = {-0.068516, -0.743403, 0, 1.0};
Point(66) = {-0.064640, -0.744054, 0, 1.0};
Point(67) = {-0.059987, -0.744879, 0, 1.0};
Point(68) = {-0.054562, -0.745771, 0, 1.0};
Point(69) = {-0.049128, -0.746843, 0, 1.0};
Point(70) = {-0.042922, -0.747975, 0, 1.0};
Point(71) = {-0.036730, -0.748802, 0, 1.0};
Point(72) = {-0.030552, -0.749329, 0, 1.0};
Point(73) = {-0.024387, -0.749594, 0, 1.0};
Point(74) = {-0.016683, -0.749854, 0, 1.0};
Point(75) = {-0.008987, -0.749938, 0, 1.0};
Point(76) = {-0.001293, -0.750000, 0, 1.0};
Point(77) = {0.006395, -0.749919, 0, 1.0};
Point(78) = {0.014078, -0.749727, 0, 1.0};
Point(79) = {0.021755, -0.749416, 0, 1.0};
Point(80) = {0.029426, -0.748971, 0, 1.0};
Point(81) = {0.037093, -0.748440, 0, 1.0};
Point(82) = {0.044749, -0.747677, 0, 1.0};
Point(83) = {0.052395, -0.746684, 0, 1.0};
Point(84) = {0.060022, -0.745288, 0, 1.0};
Point(85) = {0.063815, -0.744143, 0, 1.0};
Point(86) = {0.067587, -0.742553, 0, 1.0};
Point(87) = {0.071327, -0.740287, 0, 1.0};
Point(88) = {0.073173, -0.738617, 0, 1.0};
Point(89) = {0.073906, -0.737829, 0, 1.0};
Point(90) = {0.074266, -0.737305, 0, 1.0};
Point(91) = {0.074687, -0.736439, 0, 1.0};
Point(92) = {0.074919, -0.734813, 0, 1.0};
Point(93) = {0.074580, -0.734137, 0, 1.0};
Point(94) = {0.074104, -0.733820, 0, 1.0};
Point(95) = {0.073713, -0.733669, 0, 1.0};
Point(96) = {0.072934, -0.733459, 0, 1.0};
Point(97) = {0.070994, -0.733103, 0, 1.0};
Point(98) = {0.067130, -0.732713, 0, 1.0};
Point(99) = {0.063272, -0.732446, 0, 1.0};
Point(100) = {0.059419, -0.732286, 0, 1.0};
Point(101) = {0.051720, -0.732120, 0, 1.0};
Point(102) = {0.044027, -0.732104, 0, 1.0};
Point(103) = {0.036338, -0.732164, 0, 1.0};
Point(104) = {0.028655, -0.732343, 0, 1.0};
Point(105) = {0.020974, -0.732577, 0, 1.0};
Point(106) = {0.013297, -0.732886, 0, 1.0};
Point(107) = {0.005622, -0.733258, 0, 1.0};
Point(108) = {-0.002048, -0.733713, 0, 1.0};
Point(109) = {-0.009715, -0.734246, 0, 1.0};
Point(110) = {-0.017380, -0.734832, 0, 1.0};
Point(111) = {-0.025043, -0.735449, 0, 1.0};
Point(112) = {-0.031172, -0.735964, 0, 1.0};
Point(113) = {-0.037300, -0.736509, 0, 1.0};
Point(114) = {-0.043426, -0.737093, 0, 1.0};
Point(115) = {-0.049553, -0.737677, 0, 1.0};
Point(116) = {-0.054911, -0.738234, 0, 1.0};
Point(117) = {-0.060267, -0.738836, 0, 1.0};
Point(118) = {-0.064855, -0.739433, 0, 1.0};
Point(119) = {-0.068677, -0.739933, 0, 1.0};
Point(120) = {-0.071733, -0.740383, 0, 1.0};
Point(121) = {-0.074022, -0.740781, 0, 1.0};
Point(122) = {-0.074957, -0.740962, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {36.00000000, 15.00000000, 0, 1.0};
Point(126) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
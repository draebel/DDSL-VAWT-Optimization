SetFactory("OpenCASCADE");

Point(1) = {0.112439, 0.737662, 0, 1.0};
Point(2) = {0.111002, 0.737846, 0, 1.0};
Point(3) = {0.108476, 0.738292, 0, 1.0};
Point(4) = {0.104736, 0.738865, 0, 1.0};
Point(5) = {0.099848, 0.739578, 0, 1.0};
Point(6) = {0.093898, 0.740432, 0, 1.0};
Point(7) = {0.090555, 0.740906, 0, 1.0};
Point(8) = {0.086986, 0.741407, 0, 1.0};
Point(9) = {0.083206, 0.741938, 0, 1.0};
Point(10) = {0.079232, 0.742487, 0, 1.0};
Point(11) = {0.075077, 0.743050, 0, 1.0};
Point(12) = {0.070763, 0.743623, 0, 1.0};
Point(13) = {0.066308, 0.744199, 0, 1.0};
Point(14) = {0.061729, 0.744769, 0, 1.0};
Point(15) = {0.057047, 0.745326, 0, 1.0};
Point(16) = {0.052281, 0.745880, 0, 1.0};
Point(17) = {0.047451, 0.746414, 0, 1.0};
Point(18) = {0.042580, 0.746915, 0, 1.0};
Point(19) = {0.037687, 0.747408, 0, 1.0};
Point(20) = {0.032792, 0.747853, 0, 1.0};
Point(21) = {0.027919, 0.748279, 0, 1.0};
Point(22) = {0.023084, 0.748658, 0, 1.0};
Point(23) = {0.018313, 0.748999, 0, 1.0};
Point(24) = {0.013622, 0.749281, 0, 1.0};
Point(25) = {0.009034, 0.749525, 0, 1.0};
Point(26) = {0.004568, 0.749721, 0, 1.0};
Point(27) = {0.000241, 0.749860, 0, 1.0};
Point(28) = {-0.003926, 0.749964, 0, 1.0};
Point(29) = {-0.007915, 0.750000, 0, 1.0};
Point(30) = {-0.011711, 0.749961, 0, 1.0};
Point(31) = {-0.015297, 0.749876, 0, 1.0};
Point(32) = {-0.018659, 0.749707, 0, 1.0};
Point(33) = {-0.021780, 0.749484, 0, 1.0};
Point(34) = {-0.024647, 0.749189, 0, 1.0};
Point(35) = {-0.027251, 0.748837, 0, 1.0};
Point(36) = {-0.029579, 0.748386, 0, 1.0};
Point(37) = {-0.031619, 0.747883, 0, 1.0};
Point(38) = {-0.033373, 0.747052, 0, 1.0};
Point(39) = {-0.034825, 0.746088, 0, 1.0};
Point(40) = {-0.035968, 0.745079, 0, 1.0};
Point(41) = {-0.036798, 0.744038, 0, 1.0};
Point(42) = {-0.037309, 0.743011, 0, 1.0};
Point(43) = {-0.037500, 0.741945, 0, 1.0};
Point(44) = {-0.037370, 0.740870, 0, 1.0};
Point(45) = {-0.036919, 0.739815, 0, 1.0};
Point(46) = {-0.036150, 0.738728, 0, 1.0};
Point(47) = {-0.035065, 0.737656, 0, 1.0};
Point(48) = {-0.033671, 0.736610, 0, 1.0};
Point(49) = {-0.031968, 0.735681, 0, 1.0};
Point(50) = {-0.029959, 0.735062, 0, 1.0};
Point(51) = {-0.027661, 0.734479, 0, 1.0};
Point(52) = {-0.025082, 0.733979, 0, 1.0};
Point(53) = {-0.022236, 0.733521, 0, 1.0};
Point(54) = {-0.019132, 0.733120, 0, 1.0};
Point(55) = {-0.015786, 0.732759, 0, 1.0};
Point(56) = {-0.012211, 0.732470, 0, 1.0};
Point(57) = {-0.008423, 0.732214, 0, 1.0};
Point(58) = {-0.004438, 0.732022, 0, 1.0};
Point(59) = {-0.000272, 0.731888, 0, 1.0};
Point(60) = {0.004056, 0.731780, 0, 1.0};
Point(61) = {0.008526, 0.731721, 0, 1.0};
Point(62) = {0.013120, 0.731702, 0, 1.0};
Point(63) = {0.017819, 0.731717, 0, 1.0};
Point(64) = {0.022602, 0.731784, 0, 1.0};
Point(65) = {0.027450, 0.731887, 0, 1.0};
Point(66) = {0.032341, 0.732034, 0, 1.0};
Point(67) = {0.037252, 0.732199, 0, 1.0};
Point(68) = {0.042165, 0.732412, 0, 1.0};
Point(69) = {0.047058, 0.732634, 0, 1.0};
Point(70) = {0.051910, 0.732892, 0, 1.0};
Point(71) = {0.056699, 0.733172, 0, 1.0};
Point(72) = {0.061406, 0.733461, 0, 1.0};
Point(73) = {0.066010, 0.733769, 0, 1.0};
Point(74) = {0.070491, 0.734090, 0, 1.0};
Point(75) = {0.074831, 0.734416, 0, 1.0};
Point(76) = {0.079010, 0.734741, 0, 1.0};
Point(77) = {0.083010, 0.735062, 0, 1.0};
Point(78) = {0.086814, 0.735376, 0, 1.0};
Point(79) = {0.090406, 0.735673, 0, 1.0};
Point(80) = {0.093770, 0.735955, 0, 1.0};
Point(81) = {0.099759, 0.736468, 0, 1.0};
Point(82) = {0.104680, 0.736901, 0, 1.0};
Point(83) = {0.108446, 0.737260, 0, 1.0};
Point(84) = {0.110994, 0.737561, 0, 1.0};
Point(85) = {-0.112439, -0.737662, 0, 1.0};
Point(86) = {-0.111002, -0.737846, 0, 1.0};
Point(87) = {-0.108476, -0.738292, 0, 1.0};
Point(88) = {-0.104736, -0.738865, 0, 1.0};
Point(89) = {-0.099848, -0.739578, 0, 1.0};
Point(90) = {-0.093898, -0.740432, 0, 1.0};
Point(91) = {-0.090555, -0.740906, 0, 1.0};
Point(92) = {-0.086986, -0.741407, 0, 1.0};
Point(93) = {-0.083206, -0.741938, 0, 1.0};
Point(94) = {-0.079232, -0.742487, 0, 1.0};
Point(95) = {-0.075077, -0.743050, 0, 1.0};
Point(96) = {-0.070763, -0.743623, 0, 1.0};
Point(97) = {-0.066308, -0.744199, 0, 1.0};
Point(98) = {-0.061729, -0.744769, 0, 1.0};
Point(99) = {-0.057047, -0.745326, 0, 1.0};
Point(100) = {-0.052281, -0.745880, 0, 1.0};
Point(101) = {-0.047451, -0.746414, 0, 1.0};
Point(102) = {-0.042580, -0.746915, 0, 1.0};
Point(103) = {-0.037687, -0.747408, 0, 1.0};
Point(104) = {-0.032792, -0.747853, 0, 1.0};
Point(105) = {-0.027919, -0.748279, 0, 1.0};
Point(106) = {-0.023084, -0.748658, 0, 1.0};
Point(107) = {-0.018313, -0.748999, 0, 1.0};
Point(108) = {-0.013622, -0.749281, 0, 1.0};
Point(109) = {-0.009034, -0.749525, 0, 1.0};
Point(110) = {-0.004568, -0.749721, 0, 1.0};
Point(111) = {-0.000241, -0.749860, 0, 1.0};
Point(112) = {0.003926, -0.749964, 0, 1.0};
Point(113) = {0.007915, -0.750000, 0, 1.0};
Point(114) = {0.011711, -0.749961, 0, 1.0};
Point(115) = {0.015297, -0.749876, 0, 1.0};
Point(116) = {0.018659, -0.749707, 0, 1.0};
Point(117) = {0.021780, -0.749484, 0, 1.0};
Point(118) = {0.024647, -0.749189, 0, 1.0};
Point(119) = {0.027251, -0.748837, 0, 1.0};
Point(120) = {0.029579, -0.748386, 0, 1.0};
Point(121) = {0.031619, -0.747883, 0, 1.0};
Point(122) = {0.033373, -0.747052, 0, 1.0};
Point(123) = {0.034825, -0.746088, 0, 1.0};
Point(124) = {0.035968, -0.745079, 0, 1.0};
Point(125) = {0.036798, -0.744038, 0, 1.0};
Point(126) = {0.037309, -0.743011, 0, 1.0};
Point(127) = {0.037500, -0.741945, 0, 1.0};
Point(128) = {0.037370, -0.740870, 0, 1.0};
Point(129) = {0.036919, -0.739815, 0, 1.0};
Point(130) = {0.036150, -0.738728, 0, 1.0};
Point(131) = {0.035065, -0.737656, 0, 1.0};
Point(132) = {0.033671, -0.736610, 0, 1.0};
Point(133) = {0.031968, -0.735681, 0, 1.0};
Point(134) = {0.029959, -0.735062, 0, 1.0};
Point(135) = {0.027661, -0.734479, 0, 1.0};
Point(136) = {0.025082, -0.733979, 0, 1.0};
Point(137) = {0.022236, -0.733521, 0, 1.0};
Point(138) = {0.019132, -0.733120, 0, 1.0};
Point(139) = {0.015786, -0.732759, 0, 1.0};
Point(140) = {0.012211, -0.732470, 0, 1.0};
Point(141) = {0.008423, -0.732214, 0, 1.0};
Point(142) = {0.004438, -0.732022, 0, 1.0};
Point(143) = {0.000272, -0.731888, 0, 1.0};
Point(144) = {-0.004056, -0.731780, 0, 1.0};
Point(145) = {-0.008526, -0.731721, 0, 1.0};
Point(146) = {-0.013120, -0.731702, 0, 1.0};
Point(147) = {-0.017819, -0.731717, 0, 1.0};
Point(148) = {-0.022602, -0.731784, 0, 1.0};
Point(149) = {-0.027450, -0.731887, 0, 1.0};
Point(150) = {-0.032341, -0.732034, 0, 1.0};
Point(151) = {-0.037252, -0.732199, 0, 1.0};
Point(152) = {-0.042165, -0.732412, 0, 1.0};
Point(153) = {-0.047058, -0.732634, 0, 1.0};
Point(154) = {-0.051910, -0.732892, 0, 1.0};
Point(155) = {-0.056699, -0.733172, 0, 1.0};
Point(156) = {-0.061406, -0.733461, 0, 1.0};
Point(157) = {-0.066010, -0.733769, 0, 1.0};
Point(158) = {-0.070491, -0.734090, 0, 1.0};
Point(159) = {-0.074831, -0.734416, 0, 1.0};
Point(160) = {-0.079010, -0.734741, 0, 1.0};
Point(161) = {-0.083010, -0.735062, 0, 1.0};
Point(162) = {-0.086814, -0.735376, 0, 1.0};
Point(163) = {-0.090406, -0.735673, 0, 1.0};
Point(164) = {-0.093770, -0.735955, 0, 1.0};
Point(165) = {-0.099759, -0.736468, 0, 1.0};
Point(166) = {-0.104680, -0.736901, 0, 1.0};
Point(167) = {-0.108446, -0.737260, 0, 1.0};
Point(168) = {-0.110994, -0.737561, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:84};
Spline(4) = {84,1};

// Lines: second blade (splines 5-8)
Spline(5) = {85:110};
Spline(6) = {110:143};
Spline(7) = {143:168};
Spline(8) = {168,85};

// Outer domain (points 20001-4 and lines)
Point(169) = {-13.50000000, -15.00000000, 0, 1.0};
Point(170) = {-13.50000000, 15.00000000, 0, 1.0};
Point(171) = {13.50000000, 15.00000000, 0, 1.0};
Point(172) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {169, 170};
Line(12) = {170, 171};
Line(13) = {171, 172};
Line(14) = {169, 172};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149918, 0.733550, 0, 1.0};
Point(2) = {0.148003, 0.733794, 0, 1.0};
Point(3) = {0.144634, 0.734389, 0, 1.0};
Point(4) = {0.139648, 0.735153, 0, 1.0};
Point(5) = {0.133131, 0.736104, 0, 1.0};
Point(6) = {0.125198, 0.737243, 0, 1.0};
Point(7) = {0.120740, 0.737874, 0, 1.0};
Point(8) = {0.115981, 0.738543, 0, 1.0};
Point(9) = {0.110941, 0.739251, 0, 1.0};
Point(10) = {0.105642, 0.739982, 0, 1.0};
Point(11) = {0.100103, 0.740733, 0, 1.0};
Point(12) = {0.094351, 0.741497, 0, 1.0};
Point(13) = {0.088410, 0.742265, 0, 1.0};
Point(14) = {0.082305, 0.743026, 0, 1.0};
Point(15) = {0.076062, 0.743768, 0, 1.0};
Point(16) = {0.069709, 0.744506, 0, 1.0};
Point(17) = {0.063268, 0.745218, 0, 1.0};
Point(18) = {0.056773, 0.745886, 0, 1.0};
Point(19) = {0.050249, 0.746545, 0, 1.0};
Point(20) = {0.043723, 0.747137, 0, 1.0};
Point(21) = {0.037225, 0.747705, 0, 1.0};
Point(22) = {0.030779, 0.748211, 0, 1.0};
Point(23) = {0.024417, 0.748665, 0, 1.0};
Point(24) = {0.018163, 0.749042, 0, 1.0};
Point(25) = {0.012046, 0.749366, 0, 1.0};
Point(26) = {0.006091, 0.749629, 0, 1.0};
Point(27) = {0.000322, 0.749813, 0, 1.0};
Point(28) = {-0.005234, 0.749952, 0, 1.0};
Point(29) = {-0.010553, 0.750000, 0, 1.0};
Point(30) = {-0.015615, 0.749948, 0, 1.0};
Point(31) = {-0.020396, 0.749835, 0, 1.0};
Point(32) = {-0.024878, 0.749609, 0, 1.0};
Point(33) = {-0.029040, 0.749312, 0, 1.0};
Point(34) = {-0.032863, 0.748919, 0, 1.0};
Point(35) = {-0.036334, 0.748449, 0, 1.0};
Point(36) = {-0.039438, 0.747848, 0, 1.0};
Point(37) = {-0.042159, 0.747177, 0, 1.0};
Point(38) = {-0.044497, 0.746070, 0, 1.0};
Point(39) = {-0.046433, 0.744784, 0, 1.0};
Point(40) = {-0.047958, 0.743439, 0, 1.0};
Point(41) = {-0.049064, 0.742050, 0, 1.0};
Point(42) = {-0.049745, 0.740681, 0, 1.0};
Point(43) = {-0.050000, 0.739260, 0, 1.0};
Point(44) = {-0.049827, 0.737826, 0, 1.0};
Point(45) = {-0.049225, 0.736421, 0, 1.0};
Point(46) = {-0.048200, 0.734971, 0, 1.0};
Point(47) = {-0.046754, 0.733541, 0, 1.0};
Point(48) = {-0.044895, 0.732147, 0, 1.0};
Point(49) = {-0.042623, 0.730908, 0, 1.0};
Point(50) = {-0.039946, 0.730083, 0, 1.0};
Point(51) = {-0.036881, 0.729305, 0, 1.0};
Point(52) = {-0.033443, 0.728639, 0, 1.0};
Point(53) = {-0.029648, 0.728028, 0, 1.0};
Point(54) = {-0.025510, 0.727494, 0, 1.0};
Point(55) = {-0.021048, 0.727012, 0, 1.0};
Point(56) = {-0.016281, 0.726626, 0, 1.0};
Point(57) = {-0.011231, 0.726286, 0, 1.0};
Point(58) = {-0.005918, 0.726030, 0, 1.0};
Point(59) = {-0.000363, 0.725851, 0, 1.0};
Point(60) = {0.005408, 0.725706, 0, 1.0};
Point(61) = {0.011368, 0.725628, 0, 1.0};
Point(62) = {0.017494, 0.725603, 0, 1.0};
Point(63) = {0.023759, 0.725622, 0, 1.0};
Point(64) = {0.030136, 0.725712, 0, 1.0};
Point(65) = {0.036600, 0.725850, 0, 1.0};
Point(66) = {0.043121, 0.726046, 0, 1.0};
Point(67) = {0.049670, 0.726265, 0, 1.0};
Point(68) = {0.056220, 0.726550, 0, 1.0};
Point(69) = {0.062744, 0.726846, 0, 1.0};
Point(70) = {0.069214, 0.727189, 0, 1.0};
Point(71) = {0.075599, 0.727563, 0, 1.0};
Point(72) = {0.081875, 0.727948, 0, 1.0};
Point(73) = {0.088013, 0.728359, 0, 1.0};
Point(74) = {0.093988, 0.728787, 0, 1.0};
Point(75) = {0.099774, 0.729221, 0, 1.0};
Point(76) = {0.105347, 0.729655, 0, 1.0};
Point(77) = {0.110679, 0.730082, 0, 1.0};
Point(78) = {0.115752, 0.730502, 0, 1.0};
Point(79) = {0.120541, 0.730897, 0, 1.0};
Point(80) = {0.125027, 0.731273, 0, 1.0};
Point(81) = {0.133012, 0.731958, 0, 1.0};
Point(82) = {0.139573, 0.732534, 0, 1.0};
Point(83) = {0.144595, 0.733013, 0, 1.0};
Point(84) = {0.147992, 0.733414, 0, 1.0};
Point(85) = {-0.149918, -0.733550, 0, 1.0};
Point(86) = {-0.148003, -0.733794, 0, 1.0};
Point(87) = {-0.144634, -0.734389, 0, 1.0};
Point(88) = {-0.139648, -0.735153, 0, 1.0};
Point(89) = {-0.133131, -0.736104, 0, 1.0};
Point(90) = {-0.125198, -0.737243, 0, 1.0};
Point(91) = {-0.120740, -0.737874, 0, 1.0};
Point(92) = {-0.115981, -0.738543, 0, 1.0};
Point(93) = {-0.110941, -0.739251, 0, 1.0};
Point(94) = {-0.105642, -0.739982, 0, 1.0};
Point(95) = {-0.100103, -0.740733, 0, 1.0};
Point(96) = {-0.094351, -0.741497, 0, 1.0};
Point(97) = {-0.088410, -0.742265, 0, 1.0};
Point(98) = {-0.082305, -0.743026, 0, 1.0};
Point(99) = {-0.076062, -0.743768, 0, 1.0};
Point(100) = {-0.069709, -0.744506, 0, 1.0};
Point(101) = {-0.063268, -0.745218, 0, 1.0};
Point(102) = {-0.056773, -0.745886, 0, 1.0};
Point(103) = {-0.050249, -0.746545, 0, 1.0};
Point(104) = {-0.043723, -0.747137, 0, 1.0};
Point(105) = {-0.037225, -0.747705, 0, 1.0};
Point(106) = {-0.030779, -0.748211, 0, 1.0};
Point(107) = {-0.024417, -0.748665, 0, 1.0};
Point(108) = {-0.018163, -0.749042, 0, 1.0};
Point(109) = {-0.012046, -0.749366, 0, 1.0};
Point(110) = {-0.006091, -0.749629, 0, 1.0};
Point(111) = {-0.000322, -0.749813, 0, 1.0};
Point(112) = {0.005234, -0.749952, 0, 1.0};
Point(113) = {0.010553, -0.750000, 0, 1.0};
Point(114) = {0.015615, -0.749948, 0, 1.0};
Point(115) = {0.020396, -0.749835, 0, 1.0};
Point(116) = {0.024878, -0.749609, 0, 1.0};
Point(117) = {0.029040, -0.749312, 0, 1.0};
Point(118) = {0.032863, -0.748919, 0, 1.0};
Point(119) = {0.036334, -0.748449, 0, 1.0};
Point(120) = {0.039438, -0.747848, 0, 1.0};
Point(121) = {0.042159, -0.747177, 0, 1.0};
Point(122) = {0.044497, -0.746070, 0, 1.0};
Point(123) = {0.046433, -0.744784, 0, 1.0};
Point(124) = {0.047958, -0.743439, 0, 1.0};
Point(125) = {0.049064, -0.742050, 0, 1.0};
Point(126) = {0.049745, -0.740681, 0, 1.0};
Point(127) = {0.050000, -0.739260, 0, 1.0};
Point(128) = {0.049827, -0.737826, 0, 1.0};
Point(129) = {0.049225, -0.736421, 0, 1.0};
Point(130) = {0.048200, -0.734971, 0, 1.0};
Point(131) = {0.046754, -0.733541, 0, 1.0};
Point(132) = {0.044895, -0.732147, 0, 1.0};
Point(133) = {0.042623, -0.730908, 0, 1.0};
Point(134) = {0.039946, -0.730083, 0, 1.0};
Point(135) = {0.036881, -0.729305, 0, 1.0};
Point(136) = {0.033443, -0.728639, 0, 1.0};
Point(137) = {0.029648, -0.728028, 0, 1.0};
Point(138) = {0.025510, -0.727494, 0, 1.0};
Point(139) = {0.021048, -0.727012, 0, 1.0};
Point(140) = {0.016281, -0.726626, 0, 1.0};
Point(141) = {0.011231, -0.726286, 0, 1.0};
Point(142) = {0.005918, -0.726030, 0, 1.0};
Point(143) = {0.000363, -0.725851, 0, 1.0};
Point(144) = {-0.005408, -0.725706, 0, 1.0};
Point(145) = {-0.011368, -0.725628, 0, 1.0};
Point(146) = {-0.017494, -0.725603, 0, 1.0};
Point(147) = {-0.023759, -0.725622, 0, 1.0};
Point(148) = {-0.030136, -0.725712, 0, 1.0};
Point(149) = {-0.036600, -0.725850, 0, 1.0};
Point(150) = {-0.043121, -0.726046, 0, 1.0};
Point(151) = {-0.049670, -0.726265, 0, 1.0};
Point(152) = {-0.056220, -0.726550, 0, 1.0};
Point(153) = {-0.062744, -0.726846, 0, 1.0};
Point(154) = {-0.069214, -0.727189, 0, 1.0};
Point(155) = {-0.075599, -0.727563, 0, 1.0};
Point(156) = {-0.081875, -0.727948, 0, 1.0};
Point(157) = {-0.088013, -0.728359, 0, 1.0};
Point(158) = {-0.093988, -0.728787, 0, 1.0};
Point(159) = {-0.099774, -0.729221, 0, 1.0};
Point(160) = {-0.105347, -0.729655, 0, 1.0};
Point(161) = {-0.110679, -0.730082, 0, 1.0};
Point(162) = {-0.115752, -0.730502, 0, 1.0};
Point(163) = {-0.120541, -0.730897, 0, 1.0};
Point(164) = {-0.125027, -0.731273, 0, 1.0};
Point(165) = {-0.133012, -0.731958, 0, 1.0};
Point(166) = {-0.139573, -0.732534, 0, 1.0};
Point(167) = {-0.144595, -0.733013, 0, 1.0};
Point(168) = {-0.147992, -0.733414, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:84};
Spline(4) = {84,1};

// Lines: second blade (splines 5-8)
Spline(5) = {85:110};
Spline(6) = {110:143};
Spline(7) = {143:168};
Spline(8) = {168,85};

// Outer domain (points 20001-4 and lines)
Point(169) = {-13.50000000, -15.00000000, 0, 1.0};
Point(170) = {-13.50000000, 15.00000000, 0, 1.0};
Point(171) = {13.50000000, 15.00000000, 0, 1.0};
Point(172) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {169, 170};
Line(12) = {170, 171};
Line(13) = {171, 172};
Line(14) = {169, 172};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
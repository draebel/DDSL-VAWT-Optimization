SetFactory("OpenCASCADE");

Point(1) = {0.074244, 0.717150, 0, 1.0};
Point(2) = {0.072347, 0.717946, 0, 1.0};
Point(3) = {0.069755, 0.719060, 0, 1.0};
Point(4) = {0.066901, 0.720311, 0, 1.0};
Point(5) = {0.063794, 0.721697, 0, 1.0};
Point(6) = {0.060448, 0.723199, 0, 1.0};
Point(7) = {0.056878, 0.724811, 0, 1.0};
Point(8) = {0.053096, 0.726510, 0, 1.0};
Point(9) = {0.049116, 0.728277, 0, 1.0};
Point(10) = {0.044951, 0.730097, 0, 1.0};
Point(11) = {0.040619, 0.731944, 0, 1.0};
Point(12) = {0.036137, 0.733795, 0, 1.0};
Point(13) = {0.031520, 0.735631, 0, 1.0};
Point(14) = {0.026785, 0.737423, 0, 1.0};
Point(15) = {0.021951, 0.739153, 0, 1.0};
Point(16) = {0.017035, 0.740807, 0, 1.0};
Point(17) = {0.012058, 0.742355, 0, 1.0};
Point(18) = {0.007039, 0.743789, 0, 1.0};
Point(19) = {0.001999, 0.745096, 0, 1.0};
Point(20) = {-0.003043, 0.746254, 0, 1.0};
Point(21) = {-0.008067, 0.747268, 0, 1.0};
Point(22) = {-0.013048, 0.748124, 0, 1.0};
Point(23) = {-0.017967, 0.748816, 0, 1.0};
Point(24) = {-0.022803, 0.749352, 0, 1.0};
Point(25) = {-0.027534, 0.749720, 0, 1.0};
Point(26) = {-0.032140, 0.749933, 0, 1.0};
Point(27) = {-0.036599, 0.750000, 0, 1.0};
Point(28) = {-0.040889, 0.749921, 0, 1.0};
Point(29) = {-0.044990, 0.749719, 0, 1.0};
Point(30) = {-0.048886, 0.749393, 0, 1.0};
Point(31) = {-0.052558, 0.748953, 0, 1.0};
Point(32) = {-0.055988, 0.748409, 0, 1.0};
Point(33) = {-0.059159, 0.747774, 0, 1.0};
Point(34) = {-0.062057, 0.747070, 0, 1.0};
Point(35) = {-0.064666, 0.746309, 0, 1.0};
Point(36) = {-0.066973, 0.745501, 0, 1.0};
Point(37) = {-0.068969, 0.744662, 0, 1.0};
Point(38) = {-0.070640, 0.743800, 0, 1.0};
Point(39) = {-0.071980, 0.742935, 0, 1.0};
Point(40) = {-0.072985, 0.742055, 0, 1.0};
Point(41) = {-0.073649, 0.741176, 0, 1.0};
Point(42) = {-0.073965, 0.740321, 0, 1.0};
Point(43) = {-0.073931, 0.739497, 0, 1.0};
Point(44) = {-0.073548, 0.738706, 0, 1.0};
Point(45) = {-0.072821, 0.737927, 0, 1.0};
Point(46) = {-0.071754, 0.737161, 0, 1.0};
Point(47) = {-0.070352, 0.736422, 0, 1.0};
Point(48) = {-0.068618, 0.735703, 0, 1.0};
Point(49) = {-0.066565, 0.735003, 0, 1.0};
Point(50) = {-0.064198, 0.734316, 0, 1.0};
Point(51) = {-0.061532, 0.733640, 0, 1.0};
Point(52) = {-0.058580, 0.732971, 0, 1.0};
Point(53) = {-0.055353, 0.732304, 0, 1.0};
Point(54) = {-0.051868, 0.731635, 0, 1.0};
Point(55) = {-0.048139, 0.730964, 0, 1.0};
Point(56) = {-0.044185, 0.730287, 0, 1.0};
Point(57) = {-0.040023, 0.729603, 0, 1.0};
Point(58) = {-0.035670, 0.728910, 0, 1.0};
Point(59) = {-0.031145, 0.728210, 0, 1.0};
Point(60) = {-0.026471, 0.727506, 0, 1.0};
Point(61) = {-0.021664, 0.726798, 0, 1.0};
Point(62) = {-0.016746, 0.726095, 0, 1.0};
Point(63) = {-0.011739, 0.725396, 0, 1.0};
Point(64) = {-0.006661, 0.724707, 0, 1.0};
Point(65) = {-0.001537, 0.724035, 0, 1.0};
Point(66) = {0.003613, 0.723383, 0, 1.0};
Point(67) = {0.008767, 0.722754, 0, 1.0};
Point(68) = {0.013903, 0.722152, 0, 1.0};
Point(69) = {0.019001, 0.721579, 0, 1.0};
Point(70) = {0.024034, 0.721038, 0, 1.0};
Point(71) = {0.028984, 0.720525, 0, 1.0};
Point(72) = {0.033828, 0.720042, 0, 1.0};
Point(73) = {0.038544, 0.719584, 0, 1.0};
Point(74) = {0.043113, 0.719149, 0, 1.0};
Point(75) = {0.047513, 0.718732, 0, 1.0};
Point(76) = {0.051722, 0.718326, 0, 1.0};
Point(77) = {0.055723, 0.717931, 0, 1.0};
Point(78) = {0.059498, 0.717541, 0, 1.0};
Point(79) = {0.063031, 0.717154, 0, 1.0};
Point(80) = {0.066306, 0.716768, 0, 1.0};
Point(81) = {0.069305, 0.716383, 0, 1.0};
Point(82) = {0.072021, 0.716006, 0, 1.0};
Point(83) = {0.074002, 0.715707, 0, 1.0};
Point(84) = {-0.074244, -0.717150, 0, 1.0};
Point(85) = {-0.072347, -0.717946, 0, 1.0};
Point(86) = {-0.069755, -0.719060, 0, 1.0};
Point(87) = {-0.066901, -0.720311, 0, 1.0};
Point(88) = {-0.063794, -0.721697, 0, 1.0};
Point(89) = {-0.060448, -0.723199, 0, 1.0};
Point(90) = {-0.056878, -0.724811, 0, 1.0};
Point(91) = {-0.053096, -0.726510, 0, 1.0};
Point(92) = {-0.049116, -0.728277, 0, 1.0};
Point(93) = {-0.044951, -0.730097, 0, 1.0};
Point(94) = {-0.040619, -0.731944, 0, 1.0};
Point(95) = {-0.036137, -0.733795, 0, 1.0};
Point(96) = {-0.031520, -0.735631, 0, 1.0};
Point(97) = {-0.026785, -0.737423, 0, 1.0};
Point(98) = {-0.021951, -0.739153, 0, 1.0};
Point(99) = {-0.017035, -0.740807, 0, 1.0};
Point(100) = {-0.012058, -0.742355, 0, 1.0};
Point(101) = {-0.007039, -0.743789, 0, 1.0};
Point(102) = {-0.001999, -0.745096, 0, 1.0};
Point(103) = {0.003043, -0.746254, 0, 1.0};
Point(104) = {0.008067, -0.747268, 0, 1.0};
Point(105) = {0.013048, -0.748124, 0, 1.0};
Point(106) = {0.017967, -0.748816, 0, 1.0};
Point(107) = {0.022803, -0.749352, 0, 1.0};
Point(108) = {0.027534, -0.749720, 0, 1.0};
Point(109) = {0.032140, -0.749933, 0, 1.0};
Point(110) = {0.036599, -0.750000, 0, 1.0};
Point(111) = {0.040889, -0.749921, 0, 1.0};
Point(112) = {0.044990, -0.749719, 0, 1.0};
Point(113) = {0.048886, -0.749393, 0, 1.0};
Point(114) = {0.052558, -0.748953, 0, 1.0};
Point(115) = {0.055988, -0.748409, 0, 1.0};
Point(116) = {0.059159, -0.747774, 0, 1.0};
Point(117) = {0.062057, -0.747070, 0, 1.0};
Point(118) = {0.064666, -0.746309, 0, 1.0};
Point(119) = {0.066973, -0.745501, 0, 1.0};
Point(120) = {0.068969, -0.744662, 0, 1.0};
Point(121) = {0.070640, -0.743800, 0, 1.0};
Point(122) = {0.071980, -0.742935, 0, 1.0};
Point(123) = {0.072985, -0.742055, 0, 1.0};
Point(124) = {0.073649, -0.741176, 0, 1.0};
Point(125) = {0.073965, -0.740321, 0, 1.0};
Point(126) = {0.073931, -0.739497, 0, 1.0};
Point(127) = {0.073548, -0.738706, 0, 1.0};
Point(128) = {0.072821, -0.737927, 0, 1.0};
Point(129) = {0.071754, -0.737161, 0, 1.0};
Point(130) = {0.070352, -0.736422, 0, 1.0};
Point(131) = {0.068618, -0.735703, 0, 1.0};
Point(132) = {0.066565, -0.735003, 0, 1.0};
Point(133) = {0.064198, -0.734316, 0, 1.0};
Point(134) = {0.061532, -0.733640, 0, 1.0};
Point(135) = {0.058580, -0.732971, 0, 1.0};
Point(136) = {0.055353, -0.732304, 0, 1.0};
Point(137) = {0.051868, -0.731635, 0, 1.0};
Point(138) = {0.048139, -0.730964, 0, 1.0};
Point(139) = {0.044185, -0.730287, 0, 1.0};
Point(140) = {0.040023, -0.729603, 0, 1.0};
Point(141) = {0.035670, -0.728910, 0, 1.0};
Point(142) = {0.031145, -0.728210, 0, 1.0};
Point(143) = {0.026471, -0.727506, 0, 1.0};
Point(144) = {0.021664, -0.726798, 0, 1.0};
Point(145) = {0.016746, -0.726095, 0, 1.0};
Point(146) = {0.011739, -0.725396, 0, 1.0};
Point(147) = {0.006661, -0.724707, 0, 1.0};
Point(148) = {0.001537, -0.724035, 0, 1.0};
Point(149) = {-0.003613, -0.723383, 0, 1.0};
Point(150) = {-0.008767, -0.722754, 0, 1.0};
Point(151) = {-0.013903, -0.722152, 0, 1.0};
Point(152) = {-0.019001, -0.721579, 0, 1.0};
Point(153) = {-0.024034, -0.721038, 0, 1.0};
Point(154) = {-0.028984, -0.720525, 0, 1.0};
Point(155) = {-0.033828, -0.720042, 0, 1.0};
Point(156) = {-0.038544, -0.719584, 0, 1.0};
Point(157) = {-0.043113, -0.719149, 0, 1.0};
Point(158) = {-0.047513, -0.718732, 0, 1.0};
Point(159) = {-0.051722, -0.718326, 0, 1.0};
Point(160) = {-0.055723, -0.717931, 0, 1.0};
Point(161) = {-0.059498, -0.717541, 0, 1.0};
Point(162) = {-0.063031, -0.717154, 0, 1.0};
Point(163) = {-0.066306, -0.716768, 0, 1.0};
Point(164) = {-0.069305, -0.716383, 0, 1.0};
Point(165) = {-0.072021, -0.716006, 0, 1.0};
Point(166) = {-0.074002, -0.715707, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
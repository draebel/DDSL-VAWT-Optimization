SetFactory("OpenCASCADE");

Point(1) = {0.074798, 0.738641, 0, 1.0};
Point(2) = {0.072573, 0.739077, 0, 1.0};
Point(3) = {0.068252, 0.740018, 0, 1.0};
Point(4) = {0.063264, 0.741066, 0, 1.0};
Point(5) = {0.057637, 0.742211, 0, 1.0};
Point(6) = {0.051477, 0.743473, 0, 1.0};
Point(7) = {0.044917, 0.744826, 0, 1.0};
Point(8) = {0.038092, 0.746219, 0, 1.0};
Point(9) = {0.031134, 0.747572, 0, 1.0};
Point(10) = {0.024170, 0.748774, 0, 1.0};
Point(11) = {0.017272, 0.749613, 0, 1.0};
Point(12) = {0.010288, 0.750000, 0, 1.0};
Point(13) = {0.003199, 0.749994, 0, 1.0};
Point(14) = {-0.003984, 0.749654, 0, 1.0};
Point(15) = {-0.011188, 0.749042, 0, 1.0};
Point(16) = {-0.018338, 0.748195, 0, 1.0};
Point(17) = {-0.025354, 0.747142, 0, 1.0};
Point(18) = {-0.032163, 0.745912, 0, 1.0};
Point(19) = {-0.038690, 0.744534, 0, 1.0};
Point(20) = {-0.044867, 0.743037, 0, 1.0};
Point(21) = {-0.050622, 0.741451, 0, 1.0};
Point(22) = {-0.055896, 0.739808, 0, 1.0};
Point(23) = {-0.060623, 0.738141, 0, 1.0};
Point(24) = {-0.064752, 0.736481, 0, 1.0};
Point(25) = {-0.068219, 0.734863, 0, 1.0};
Point(26) = {-0.070978, 0.733298, 0, 1.0};
Point(27) = {-0.073014, 0.731812, 0, 1.0};
Point(28) = {-0.074285, 0.730434, 0, 1.0};
Point(29) = {-0.074853, 0.729193, 0, 1.0};
Point(30) = {-0.074883, 0.728993, 0, 1.0};
Point(31) = {-0.074883, 0.728750, 0, 1.0};
Point(32) = {-0.074865, 0.728642, 0, 1.0};
Point(33) = {-0.074831, 0.728545, 0, 1.0};
Point(34) = {-0.074774, 0.728457, 0, 1.0};
Point(35) = {-0.074696, 0.728371, 0, 1.0};
Point(36) = {-0.074650, 0.728328, 0, 1.0};
Point(37) = {-0.074489, 0.728202, 0, 1.0};
Point(38) = {-0.073384, 0.727711, 0, 1.0};
Point(39) = {-0.071150, 0.727210, 0, 1.0};
Point(40) = {-0.068007, 0.726829, 0, 1.0};
Point(41) = {-0.063944, 0.726539, 0, 1.0};
Point(42) = {-0.059028, 0.726251, 0, 1.0};
Point(43) = {-0.053402, 0.725947, 0, 1.0};
Point(44) = {-0.047154, 0.725638, 0, 1.0};
Point(45) = {-0.040402, 0.725337, 0, 1.0};
Point(46) = {-0.033235, 0.725067, 0, 1.0};
Point(47) = {-0.025762, 0.724850, 0, 1.0};
Point(48) = {-0.018073, 0.724711, 0, 1.0};
Point(49) = {-0.010273, 0.724677, 0, 1.0};
Point(50) = {-0.002451, 0.724778, 0, 1.0};
Point(51) = {0.005292, 0.725050, 0, 1.0};
Point(52) = {0.012865, 0.725545, 0, 1.0};
Point(53) = {0.020202, 0.726397, 0, 1.0};
Point(54) = {0.027462, 0.727632, 0, 1.0};
Point(55) = {0.034646, 0.729125, 0, 1.0};
Point(56) = {0.041757, 0.730755, 0, 1.0};
Point(57) = {0.048700, 0.732364, 0, 1.0};
Point(58) = {0.055345, 0.733842, 0, 1.0};
Point(59) = {0.061544, 0.735108, 0, 1.0};
Point(60) = {0.067145, 0.736112, 0, 1.0};
Point(61) = {0.071993, 0.736830, 0, 1.0};
Point(62) = {0.074880, 0.737170, 0, 1.0};
Point(63) = {-0.074798, -0.738641, 0, 1.0};
Point(64) = {-0.072573, -0.739077, 0, 1.0};
Point(65) = {-0.068252, -0.740018, 0, 1.0};
Point(66) = {-0.063264, -0.741066, 0, 1.0};
Point(67) = {-0.057637, -0.742211, 0, 1.0};
Point(68) = {-0.051477, -0.743473, 0, 1.0};
Point(69) = {-0.044917, -0.744826, 0, 1.0};
Point(70) = {-0.038092, -0.746219, 0, 1.0};
Point(71) = {-0.031134, -0.747572, 0, 1.0};
Point(72) = {-0.024170, -0.748774, 0, 1.0};
Point(73) = {-0.017272, -0.749613, 0, 1.0};
Point(74) = {-0.010288, -0.750000, 0, 1.0};
Point(75) = {-0.003199, -0.749994, 0, 1.0};
Point(76) = {0.003984, -0.749654, 0, 1.0};
Point(77) = {0.011188, -0.749042, 0, 1.0};
Point(78) = {0.018338, -0.748195, 0, 1.0};
Point(79) = {0.025354, -0.747142, 0, 1.0};
Point(80) = {0.032163, -0.745912, 0, 1.0};
Point(81) = {0.038690, -0.744534, 0, 1.0};
Point(82) = {0.044867, -0.743037, 0, 1.0};
Point(83) = {0.050622, -0.741451, 0, 1.0};
Point(84) = {0.055896, -0.739808, 0, 1.0};
Point(85) = {0.060623, -0.738141, 0, 1.0};
Point(86) = {0.064752, -0.736481, 0, 1.0};
Point(87) = {0.068219, -0.734863, 0, 1.0};
Point(88) = {0.070978, -0.733298, 0, 1.0};
Point(89) = {0.073014, -0.731812, 0, 1.0};
Point(90) = {0.074285, -0.730434, 0, 1.0};
Point(91) = {0.074853, -0.729193, 0, 1.0};
Point(92) = {0.074883, -0.728993, 0, 1.0};
Point(93) = {0.074883, -0.728750, 0, 1.0};
Point(94) = {0.074865, -0.728642, 0, 1.0};
Point(95) = {0.074831, -0.728545, 0, 1.0};
Point(96) = {0.074774, -0.728457, 0, 1.0};
Point(97) = {0.074696, -0.728371, 0, 1.0};
Point(98) = {0.074650, -0.728328, 0, 1.0};
Point(99) = {0.074489, -0.728202, 0, 1.0};
Point(100) = {0.073384, -0.727711, 0, 1.0};
Point(101) = {0.071150, -0.727210, 0, 1.0};
Point(102) = {0.068007, -0.726829, 0, 1.0};
Point(103) = {0.063944, -0.726539, 0, 1.0};
Point(104) = {0.059028, -0.726251, 0, 1.0};
Point(105) = {0.053402, -0.725947, 0, 1.0};
Point(106) = {0.047154, -0.725638, 0, 1.0};
Point(107) = {0.040402, -0.725337, 0, 1.0};
Point(108) = {0.033235, -0.725067, 0, 1.0};
Point(109) = {0.025762, -0.724850, 0, 1.0};
Point(110) = {0.018073, -0.724711, 0, 1.0};
Point(111) = {0.010273, -0.724677, 0, 1.0};
Point(112) = {0.002451, -0.724778, 0, 1.0};
Point(113) = {-0.005292, -0.725050, 0, 1.0};
Point(114) = {-0.012865, -0.725545, 0, 1.0};
Point(115) = {-0.020202, -0.726397, 0, 1.0};
Point(116) = {-0.027462, -0.727632, 0, 1.0};
Point(117) = {-0.034646, -0.729125, 0, 1.0};
Point(118) = {-0.041757, -0.730755, 0, 1.0};
Point(119) = {-0.048700, -0.732364, 0, 1.0};
Point(120) = {-0.055345, -0.733842, 0, 1.0};
Point(121) = {-0.061544, -0.735108, 0, 1.0};
Point(122) = {-0.067145, -0.736112, 0, 1.0};
Point(123) = {-0.071993, -0.736830, 0, 1.0};
Point(124) = {-0.074880, -0.737170, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:46};
Spline(3) = {46:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:80};
Spline(6) = {80:108};
Spline(7) = {108:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
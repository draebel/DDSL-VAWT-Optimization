SetFactory("OpenCASCADE");

Point(1) = {0.112363, 0.732540, 0, 1.0};
Point(2) = {0.111751, 0.732599, 0, 1.0};
Point(3) = {0.109969, 0.732878, 0, 1.0};
Point(4) = {0.107156, 0.733485, 0, 1.0};
Point(5) = {0.103480, 0.734442, 0, 1.0};
Point(6) = {0.099095, 0.735711, 0, 1.0};
Point(7) = {0.094113, 0.737219, 0, 1.0};
Point(8) = {0.088625, 0.738915, 0, 1.0};
Point(9) = {0.082745, 0.740742, 0, 1.0};
Point(10) = {0.076585, 0.742611, 0, 1.0};
Point(11) = {0.070230, 0.744410, 0, 1.0};
Point(12) = {0.063718, 0.746019, 0, 1.0};
Point(13) = {0.057053, 0.747352, 0, 1.0};
Point(14) = {0.050200, 0.748352, 0, 1.0};
Point(15) = {0.043129, 0.749071, 0, 1.0};
Point(16) = {0.035912, 0.749573, 0, 1.0};
Point(17) = {0.028636, 0.749877, 0, 1.0};
Point(18) = {0.021383, 0.750000, 0, 1.0};
Point(19) = {0.014238, 0.749952, 0, 1.0};
Point(20) = {0.007279, 0.749745, 0, 1.0};
Point(21) = {0.000590, 0.749389, 0, 1.0};
Point(22) = {-0.005756, 0.748894, 0, 1.0};
Point(23) = {-0.011683, 0.748269, 0, 1.0};
Point(24) = {-0.017126, 0.747527, 0, 1.0};
Point(25) = {-0.022022, 0.746679, 0, 1.0};
Point(26) = {-0.026316, 0.745738, 0, 1.0};
Point(27) = {-0.029960, 0.744719, 0, 1.0};
Point(28) = {-0.032909, 0.743633, 0, 1.0};
Point(29) = {-0.035152, 0.742502, 0, 1.0};
Point(30) = {-0.036649, 0.741367, 0, 1.0};
Point(31) = {-0.037329, 0.740450, 0, 1.0};
Point(32) = {-0.037396, 0.740288, 0, 1.0};
Point(33) = {-0.037423, 0.740201, 0, 1.0};
Point(34) = {-0.037453, 0.739972, 0, 1.0};
Point(35) = {-0.037398, 0.739745, 0, 1.0};
Point(36) = {-0.037276, 0.739498, 0, 1.0};
Point(37) = {-0.037168, 0.739332, 0, 1.0};
Point(38) = {-0.036030, 0.738208, 0, 1.0};
Point(39) = {-0.034129, 0.737023, 0, 1.0};
Point(40) = {-0.031465, 0.735815, 0, 1.0};
Point(41) = {-0.028078, 0.734609, 0, 1.0};
Point(42) = {-0.023992, 0.733424, 0, 1.0};
Point(43) = {-0.019256, 0.732269, 0, 1.0};
Point(44) = {-0.013921, 0.731158, 0, 1.0};
Point(45) = {-0.008049, 0.730103, 0, 1.0};
Point(46) = {-0.001706, 0.729115, 0, 1.0};
Point(47) = {0.005036, 0.728206, 0, 1.0};
Point(48) = {0.012096, 0.727389, 0, 1.0};
Point(49) = {0.019396, 0.726675, 0, 1.0};
Point(50) = {0.026850, 0.726078, 0, 1.0};
Point(51) = {0.034372, 0.725612, 0, 1.0};
Point(52) = {0.041878, 0.725292, 0, 1.0};
Point(53) = {0.049282, 0.725134, 0, 1.0};
Point(54) = {0.056499, 0.725161, 0, 1.0};
Point(55) = {0.063462, 0.725420, 0, 1.0};
Point(56) = {0.070161, 0.725939, 0, 1.0};
Point(57) = {0.076589, 0.726698, 0, 1.0};
Point(58) = {0.082738, 0.727640, 0, 1.0};
Point(59) = {0.088570, 0.728684, 0, 1.0};
Point(60) = {0.094027, 0.729737, 0, 1.0};
Point(61) = {0.099013, 0.730708, 0, 1.0};
Point(62) = {0.103425, 0.731521, 0, 1.0};
Point(63) = {0.107129, 0.732107, 0, 1.0};
Point(64) = {0.109961, 0.732434, 0, 1.0};
Point(65) = {0.111750, 0.732540, 0, 1.0};
Point(66) = {-0.112363, -0.732540, 0, 1.0};
Point(67) = {-0.111751, -0.732599, 0, 1.0};
Point(68) = {-0.109969, -0.732878, 0, 1.0};
Point(69) = {-0.107156, -0.733485, 0, 1.0};
Point(70) = {-0.103480, -0.734442, 0, 1.0};
Point(71) = {-0.099095, -0.735711, 0, 1.0};
Point(72) = {-0.094113, -0.737219, 0, 1.0};
Point(73) = {-0.088625, -0.738915, 0, 1.0};
Point(74) = {-0.082745, -0.740742, 0, 1.0};
Point(75) = {-0.076585, -0.742611, 0, 1.0};
Point(76) = {-0.070230, -0.744410, 0, 1.0};
Point(77) = {-0.063718, -0.746019, 0, 1.0};
Point(78) = {-0.057053, -0.747352, 0, 1.0};
Point(79) = {-0.050200, -0.748352, 0, 1.0};
Point(80) = {-0.043129, -0.749071, 0, 1.0};
Point(81) = {-0.035912, -0.749573, 0, 1.0};
Point(82) = {-0.028636, -0.749877, 0, 1.0};
Point(83) = {-0.021383, -0.750000, 0, 1.0};
Point(84) = {-0.014238, -0.749952, 0, 1.0};
Point(85) = {-0.007279, -0.749745, 0, 1.0};
Point(86) = {-0.000590, -0.749389, 0, 1.0};
Point(87) = {0.005756, -0.748894, 0, 1.0};
Point(88) = {0.011683, -0.748269, 0, 1.0};
Point(89) = {0.017126, -0.747527, 0, 1.0};
Point(90) = {0.022022, -0.746679, 0, 1.0};
Point(91) = {0.026316, -0.745738, 0, 1.0};
Point(92) = {0.029960, -0.744719, 0, 1.0};
Point(93) = {0.032909, -0.743633, 0, 1.0};
Point(94) = {0.035152, -0.742502, 0, 1.0};
Point(95) = {0.036649, -0.741367, 0, 1.0};
Point(96) = {0.037329, -0.740450, 0, 1.0};
Point(97) = {0.037396, -0.740288, 0, 1.0};
Point(98) = {0.037423, -0.740201, 0, 1.0};
Point(99) = {0.037453, -0.739972, 0, 1.0};
Point(100) = {0.037398, -0.739745, 0, 1.0};
Point(101) = {0.037276, -0.739498, 0, 1.0};
Point(102) = {0.037168, -0.739332, 0, 1.0};
Point(103) = {0.036030, -0.738208, 0, 1.0};
Point(104) = {0.034129, -0.737023, 0, 1.0};
Point(105) = {0.031465, -0.735815, 0, 1.0};
Point(106) = {0.028078, -0.734609, 0, 1.0};
Point(107) = {0.023992, -0.733424, 0, 1.0};
Point(108) = {0.019256, -0.732269, 0, 1.0};
Point(109) = {0.013921, -0.731158, 0, 1.0};
Point(110) = {0.008049, -0.730103, 0, 1.0};
Point(111) = {0.001706, -0.729115, 0, 1.0};
Point(112) = {-0.005036, -0.728206, 0, 1.0};
Point(113) = {-0.012096, -0.727389, 0, 1.0};
Point(114) = {-0.019396, -0.726675, 0, 1.0};
Point(115) = {-0.026850, -0.726078, 0, 1.0};
Point(116) = {-0.034372, -0.725612, 0, 1.0};
Point(117) = {-0.041878, -0.725292, 0, 1.0};
Point(118) = {-0.049282, -0.725134, 0, 1.0};
Point(119) = {-0.056499, -0.725161, 0, 1.0};
Point(120) = {-0.063462, -0.725420, 0, 1.0};
Point(121) = {-0.070161, -0.725939, 0, 1.0};
Point(122) = {-0.076589, -0.726698, 0, 1.0};
Point(123) = {-0.082738, -0.727640, 0, 1.0};
Point(124) = {-0.088570, -0.728684, 0, 1.0};
Point(125) = {-0.094027, -0.729737, 0, 1.0};
Point(126) = {-0.099013, -0.730708, 0, 1.0};
Point(127) = {-0.103425, -0.731521, 0, 1.0};
Point(128) = {-0.107129, -0.732107, 0, 1.0};
Point(129) = {-0.109961, -0.732434, 0, 1.0};
Point(130) = {-0.111750, -0.732540, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:46};
Spline(3) = {46:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:85};
Spline(6) = {85:111};
Spline(7) = {111:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
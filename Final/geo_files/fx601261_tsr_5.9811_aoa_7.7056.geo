SetFactory("OpenCASCADE");

Point(1) = {0.074712, 0.723151, 0, 1.0};
Point(2) = {0.072658, 0.723848, 0, 1.0};
Point(3) = {0.069655, 0.724862, 0, 1.0};
Point(4) = {0.066455, 0.725951, 0, 1.0};
Point(5) = {0.062966, 0.727141, 0, 1.0};
Point(6) = {0.059259, 0.728406, 0, 1.0};
Point(7) = {0.055310, 0.729752, 0, 1.0};
Point(8) = {0.051163, 0.731164, 0, 1.0};
Point(9) = {0.046834, 0.732623, 0, 1.0};
Point(10) = {0.042341, 0.734101, 0, 1.0};
Point(11) = {0.037682, 0.735587, 0, 1.0};
Point(12) = {0.032895, 0.737049, 0, 1.0};
Point(13) = {0.027981, 0.738497, 0, 1.0};
Point(14) = {0.022975, 0.739891, 0, 1.0};
Point(15) = {0.017903, 0.741244, 0, 1.0};
Point(16) = {0.012778, 0.742522, 0, 1.0};
Point(17) = {0.007603, 0.743744, 0, 1.0};
Point(18) = {0.002436, 0.744867, 0, 1.0};
Point(19) = {-0.002740, 0.745917, 0, 1.0};
Point(20) = {-0.007872, 0.746841, 0, 1.0};
Point(21) = {-0.012953, 0.747674, 0, 1.0};
Point(22) = {-0.017948, 0.748366, 0, 1.0};
Point(23) = {-0.022874, 0.748961, 0, 1.0};
Point(24) = {-0.027654, 0.749399, 0, 1.0};
Point(25) = {-0.032322, 0.749741, 0, 1.0};
Point(26) = {-0.036823, 0.749918, 0, 1.0};
Point(27) = {-0.041152, 0.750000, 0, 1.0};
Point(28) = {-0.045271, 0.749917, 0, 1.0};
Point(29) = {-0.049194, 0.749755, 0, 1.0};
Point(30) = {-0.052888, 0.749434, 0, 1.0};
Point(31) = {-0.056317, 0.749057, 0, 1.0};
Point(32) = {-0.059498, 0.748524, 0, 1.0};
Point(33) = {-0.062390, 0.747957, 0, 1.0};
Point(34) = {-0.064994, 0.747211, 0, 1.0};
Point(35) = {-0.067306, 0.746457, 0, 1.0};
Point(36) = {-0.069315, 0.745487, 0, 1.0};
Point(37) = {-0.070981, 0.744590, 0, 1.0};
Point(38) = {-0.072335, 0.743518, 0, 1.0};
Point(39) = {-0.073371, 0.742343, 0, 1.0};
Point(40) = {-0.074082, 0.740940, 0, 1.0};
Point(41) = {-0.074323, 0.740388, 0, 1.0};
Point(42) = {-0.074262, 0.739610, 0, 1.0};
Point(43) = {-0.073794, 0.739216, 0, 1.0};
Point(44) = {-0.072999, 0.738607, 0, 1.0};
Point(45) = {-0.071882, 0.737926, 0, 1.0};
Point(46) = {-0.070452, 0.737078, 0, 1.0};
Point(47) = {-0.068675, 0.736337, 0, 1.0};
Point(48) = {-0.066576, 0.735523, 0, 1.0};
Point(49) = {-0.064172, 0.734787, 0, 1.0};
Point(50) = {-0.061463, 0.734000, 0, 1.0};
Point(51) = {-0.058451, 0.733283, 0, 1.0};
Point(52) = {-0.055172, 0.732550, 0, 1.0};
Point(53) = {-0.051611, 0.731893, 0, 1.0};
Point(54) = {-0.047798, 0.731239, 0, 1.0};
Point(55) = {-0.043767, 0.730671, 0, 1.0};
Point(56) = {-0.039502, 0.730121, 0, 1.0};
Point(57) = {-0.035039, 0.729664, 0, 1.0};
Point(58) = {-0.030381, 0.729242, 0, 1.0};
Point(59) = {-0.025586, 0.728918, 0, 1.0};
Point(60) = {-0.020618, 0.728637, 0, 1.0};
Point(61) = {-0.015555, 0.728445, 0, 1.0};
Point(62) = {-0.010383, 0.728287, 0, 1.0};
Point(63) = {-0.005140, 0.728182, 0, 1.0};
Point(64) = {0.000164, 0.728075, 0, 1.0};
Point(65) = {0.005471, 0.727986, 0, 1.0};
Point(66) = {0.010795, 0.727870, 0, 1.0};
Point(67) = {0.016076, 0.727744, 0, 1.0};
Point(68) = {0.021307, 0.727566, 0, 1.0};
Point(69) = {0.026472, 0.727345, 0, 1.0};
Point(70) = {0.031543, 0.727056, 0, 1.0};
Point(71) = {0.036483, 0.726723, 0, 1.0};
Point(72) = {0.041290, 0.726338, 0, 1.0};
Point(73) = {0.045927, 0.725920, 0, 1.0};
Point(74) = {0.050390, 0.725453, 0, 1.0};
Point(75) = {0.054660, 0.724950, 0, 1.0};
Point(76) = {0.058717, 0.724406, 0, 1.0};
Point(77) = {0.062519, 0.723841, 0, 1.0};
Point(78) = {0.066090, 0.723257, 0, 1.0};
Point(79) = {0.069359, 0.722674, 0, 1.0};
Point(80) = {0.072420, 0.722089, 0, 1.0};
Point(81) = {0.074510, 0.721662, 0, 1.0};
Point(82) = {-0.074712, -0.723151, 0, 1.0};
Point(83) = {-0.072658, -0.723848, 0, 1.0};
Point(84) = {-0.069655, -0.724862, 0, 1.0};
Point(85) = {-0.066455, -0.725951, 0, 1.0};
Point(86) = {-0.062966, -0.727141, 0, 1.0};
Point(87) = {-0.059259, -0.728406, 0, 1.0};
Point(88) = {-0.055310, -0.729752, 0, 1.0};
Point(89) = {-0.051163, -0.731164, 0, 1.0};
Point(90) = {-0.046834, -0.732623, 0, 1.0};
Point(91) = {-0.042341, -0.734101, 0, 1.0};
Point(92) = {-0.037682, -0.735587, 0, 1.0};
Point(93) = {-0.032895, -0.737049, 0, 1.0};
Point(94) = {-0.027981, -0.738497, 0, 1.0};
Point(95) = {-0.022975, -0.739891, 0, 1.0};
Point(96) = {-0.017903, -0.741244, 0, 1.0};
Point(97) = {-0.012778, -0.742522, 0, 1.0};
Point(98) = {-0.007603, -0.743744, 0, 1.0};
Point(99) = {-0.002436, -0.744867, 0, 1.0};
Point(100) = {0.002740, -0.745917, 0, 1.0};
Point(101) = {0.007872, -0.746841, 0, 1.0};
Point(102) = {0.012953, -0.747674, 0, 1.0};
Point(103) = {0.017948, -0.748366, 0, 1.0};
Point(104) = {0.022874, -0.748961, 0, 1.0};
Point(105) = {0.027654, -0.749399, 0, 1.0};
Point(106) = {0.032322, -0.749741, 0, 1.0};
Point(107) = {0.036823, -0.749918, 0, 1.0};
Point(108) = {0.041152, -0.750000, 0, 1.0};
Point(109) = {0.045271, -0.749917, 0, 1.0};
Point(110) = {0.049194, -0.749755, 0, 1.0};
Point(111) = {0.052888, -0.749434, 0, 1.0};
Point(112) = {0.056317, -0.749057, 0, 1.0};
Point(113) = {0.059498, -0.748524, 0, 1.0};
Point(114) = {0.062390, -0.747957, 0, 1.0};
Point(115) = {0.064994, -0.747211, 0, 1.0};
Point(116) = {0.067306, -0.746457, 0, 1.0};
Point(117) = {0.069315, -0.745487, 0, 1.0};
Point(118) = {0.070981, -0.744590, 0, 1.0};
Point(119) = {0.072335, -0.743518, 0, 1.0};
Point(120) = {0.073371, -0.742343, 0, 1.0};
Point(121) = {0.074082, -0.740940, 0, 1.0};
Point(122) = {0.074323, -0.740388, 0, 1.0};
Point(123) = {0.074262, -0.739610, 0, 1.0};
Point(124) = {0.073794, -0.739216, 0, 1.0};
Point(125) = {0.072999, -0.738607, 0, 1.0};
Point(126) = {0.071882, -0.737926, 0, 1.0};
Point(127) = {0.070452, -0.737078, 0, 1.0};
Point(128) = {0.068675, -0.736337, 0, 1.0};
Point(129) = {0.066576, -0.735523, 0, 1.0};
Point(130) = {0.064172, -0.734787, 0, 1.0};
Point(131) = {0.061463, -0.734000, 0, 1.0};
Point(132) = {0.058451, -0.733283, 0, 1.0};
Point(133) = {0.055172, -0.732550, 0, 1.0};
Point(134) = {0.051611, -0.731893, 0, 1.0};
Point(135) = {0.047798, -0.731239, 0, 1.0};
Point(136) = {0.043767, -0.730671, 0, 1.0};
Point(137) = {0.039502, -0.730121, 0, 1.0};
Point(138) = {0.035039, -0.729664, 0, 1.0};
Point(139) = {0.030381, -0.729242, 0, 1.0};
Point(140) = {0.025586, -0.728918, 0, 1.0};
Point(141) = {0.020618, -0.728637, 0, 1.0};
Point(142) = {0.015555, -0.728445, 0, 1.0};
Point(143) = {0.010383, -0.728287, 0, 1.0};
Point(144) = {0.005140, -0.728182, 0, 1.0};
Point(145) = {-0.000164, -0.728075, 0, 1.0};
Point(146) = {-0.005471, -0.727986, 0, 1.0};
Point(147) = {-0.010795, -0.727870, 0, 1.0};
Point(148) = {-0.016076, -0.727744, 0, 1.0};
Point(149) = {-0.021307, -0.727566, 0, 1.0};
Point(150) = {-0.026472, -0.727345, 0, 1.0};
Point(151) = {-0.031543, -0.727056, 0, 1.0};
Point(152) = {-0.036483, -0.726723, 0, 1.0};
Point(153) = {-0.041290, -0.726338, 0, 1.0};
Point(154) = {-0.045927, -0.725920, 0, 1.0};
Point(155) = {-0.050390, -0.725453, 0, 1.0};
Point(156) = {-0.054660, -0.724950, 0, 1.0};
Point(157) = {-0.058717, -0.724406, 0, 1.0};
Point(158) = {-0.062519, -0.723841, 0, 1.0};
Point(159) = {-0.066090, -0.723257, 0, 1.0};
Point(160) = {-0.069359, -0.722674, 0, 1.0};
Point(161) = {-0.072420, -0.722089, 0, 1.0};
Point(162) = {-0.074510, -0.721662, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
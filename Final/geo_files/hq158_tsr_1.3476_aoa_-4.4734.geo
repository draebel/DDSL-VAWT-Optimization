SetFactory("OpenCASCADE");

Point(1) = {0.074659, 0.748313, 0, 1.0};
Point(2) = {0.074516, 0.748320, 0, 1.0};
Point(3) = {0.070440, 0.748490, 0, 1.0};
Point(4) = {0.066363, 0.748670, 0, 1.0};
Point(5) = {0.062286, 0.748848, 0, 1.0};
Point(6) = {0.058210, 0.749030, 0, 1.0};
Point(7) = {0.054133, 0.749208, 0, 1.0};
Point(8) = {0.045983, 0.749523, 0, 1.0};
Point(9) = {0.037839, 0.749773, 0, 1.0};
Point(10) = {0.029701, 0.749936, 0, 1.0};
Point(11) = {0.021570, 0.750000, 0, 1.0};
Point(12) = {0.013450, 0.749937, 0, 1.0};
Point(13) = {0.005341, 0.749731, 0, 1.0};
Point(14) = {-0.002757, 0.749382, 0, 1.0};
Point(15) = {-0.010845, 0.748909, 0, 1.0};
Point(16) = {-0.014886, 0.748630, 0, 1.0};
Point(17) = {-0.018925, 0.748327, 0, 1.0};
Point(18) = {-0.022961, 0.747992, 0, 1.0};
Point(19) = {-0.026980, 0.747440, 0, 1.0};
Point(20) = {-0.031021, 0.747156, 0, 1.0};
Point(21) = {-0.035046, 0.746674, 0, 1.0};
Point(22) = {-0.039068, 0.746164, 0, 1.0};
Point(23) = {-0.043088, 0.745616, 0, 1.0};
Point(24) = {-0.047103, 0.745009, 0, 1.0};
Point(25) = {-0.051112, 0.744317, 0, 1.0};
Point(26) = {-0.055111, 0.743515, 0, 1.0};
Point(27) = {-0.059101, 0.742584, 0, 1.0};
Point(28) = {-0.063079, 0.741497, 0, 1.0};
Point(29) = {-0.067040, 0.740199, 0, 1.0};
Point(30) = {-0.069011, 0.739434, 0, 1.0};
Point(31) = {-0.070973, 0.738543, 0, 1.0};
Point(32) = {-0.071948, 0.738025, 0, 1.0};
Point(33) = {-0.072916, 0.737418, 0, 1.0};
Point(34) = {-0.073492, 0.736994, 0, 1.0};
Point(35) = {-0.074061, 0.736473, 0, 1.0};
Point(36) = {-0.074431, 0.736014, 0, 1.0};
Point(37) = {-0.074772, 0.735170, 0, 1.0};
Point(38) = {-0.074326, 0.734671, 0, 1.0};
Point(39) = {-0.073903, 0.734453, 0, 1.0};
Point(40) = {-0.073275, 0.734211, 0, 1.0};
Point(41) = {-0.072651, 0.734024, 0, 1.0};
Point(42) = {-0.071617, 0.733791, 0, 1.0};
Point(43) = {-0.070589, 0.733633, 0, 1.0};
Point(44) = {-0.068541, 0.733421, 0, 1.0};
Point(45) = {-0.066500, 0.733298, 0, 1.0};
Point(46) = {-0.062429, 0.733189, 0, 1.0};
Point(47) = {-0.058367, 0.733193, 0, 1.0};
Point(48) = {-0.054309, 0.733264, 0, 1.0};
Point(49) = {-0.050256, 0.733386, 0, 1.0};
Point(50) = {-0.046207, 0.733553, 0, 1.0};
Point(51) = {-0.042160, 0.733759, 0, 1.0};
Point(52) = {-0.038116, 0.733994, 0, 1.0};
Point(53) = {-0.034074, 0.734254, 0, 1.0};
Point(54) = {-0.030033, 0.734531, 0, 1.0};
Point(55) = {-0.025993, 0.734824, 0, 1.0};
Point(56) = {-0.021955, 0.735138, 0, 1.0};
Point(57) = {-0.017920, 0.735480, 0, 1.0};
Point(58) = {-0.013886, 0.735851, 0, 1.0};
Point(59) = {-0.009855, 0.736249, 0, 1.0};
Point(60) = {-0.001797, 0.737113, 0, 1.0};
Point(61) = {0.006254, 0.738067, 0, 1.0};
Point(62) = {0.014298, 0.739102, 0, 1.0};
Point(63) = {0.022336, 0.740209, 0, 1.0};
Point(64) = {0.030372, 0.741361, 0, 1.0};
Point(65) = {0.038406, 0.742514, 0, 1.0};
Point(66) = {0.046443, 0.743645, 0, 1.0};
Point(67) = {0.054485, 0.744716, 0, 1.0};
Point(68) = {0.058508, 0.745218, 0, 1.0};
Point(69) = {0.062534, 0.745681, 0, 1.0};
Point(70) = {0.066565, 0.746089, 0, 1.0};
Point(71) = {0.070599, 0.746453, 0, 1.0};
Point(72) = {0.074636, 0.746785, 0, 1.0};
Point(73) = {0.074777, 0.746797, 0, 1.0};
Point(74) = {-0.074659, -0.748313, 0, 1.0};
Point(75) = {-0.074516, -0.748320, 0, 1.0};
Point(76) = {-0.070440, -0.748490, 0, 1.0};
Point(77) = {-0.066363, -0.748670, 0, 1.0};
Point(78) = {-0.062286, -0.748848, 0, 1.0};
Point(79) = {-0.058210, -0.749030, 0, 1.0};
Point(80) = {-0.054133, -0.749208, 0, 1.0};
Point(81) = {-0.045983, -0.749523, 0, 1.0};
Point(82) = {-0.037839, -0.749773, 0, 1.0};
Point(83) = {-0.029701, -0.749936, 0, 1.0};
Point(84) = {-0.021570, -0.750000, 0, 1.0};
Point(85) = {-0.013450, -0.749937, 0, 1.0};
Point(86) = {-0.005341, -0.749731, 0, 1.0};
Point(87) = {0.002757, -0.749382, 0, 1.0};
Point(88) = {0.010845, -0.748909, 0, 1.0};
Point(89) = {0.014886, -0.748630, 0, 1.0};
Point(90) = {0.018925, -0.748327, 0, 1.0};
Point(91) = {0.022961, -0.747992, 0, 1.0};
Point(92) = {0.026980, -0.747440, 0, 1.0};
Point(93) = {0.031021, -0.747156, 0, 1.0};
Point(94) = {0.035046, -0.746674, 0, 1.0};
Point(95) = {0.039068, -0.746164, 0, 1.0};
Point(96) = {0.043088, -0.745616, 0, 1.0};
Point(97) = {0.047103, -0.745009, 0, 1.0};
Point(98) = {0.051112, -0.744317, 0, 1.0};
Point(99) = {0.055111, -0.743515, 0, 1.0};
Point(100) = {0.059101, -0.742584, 0, 1.0};
Point(101) = {0.063079, -0.741497, 0, 1.0};
Point(102) = {0.067040, -0.740199, 0, 1.0};
Point(103) = {0.069011, -0.739434, 0, 1.0};
Point(104) = {0.070973, -0.738543, 0, 1.0};
Point(105) = {0.071948, -0.738025, 0, 1.0};
Point(106) = {0.072916, -0.737418, 0, 1.0};
Point(107) = {0.073492, -0.736994, 0, 1.0};
Point(108) = {0.074061, -0.736473, 0, 1.0};
Point(109) = {0.074431, -0.736014, 0, 1.0};
Point(110) = {0.074772, -0.735170, 0, 1.0};
Point(111) = {0.074326, -0.734671, 0, 1.0};
Point(112) = {0.073903, -0.734453, 0, 1.0};
Point(113) = {0.073275, -0.734211, 0, 1.0};
Point(114) = {0.072651, -0.734024, 0, 1.0};
Point(115) = {0.071617, -0.733791, 0, 1.0};
Point(116) = {0.070589, -0.733633, 0, 1.0};
Point(117) = {0.068541, -0.733421, 0, 1.0};
Point(118) = {0.066500, -0.733298, 0, 1.0};
Point(119) = {0.062429, -0.733189, 0, 1.0};
Point(120) = {0.058367, -0.733193, 0, 1.0};
Point(121) = {0.054309, -0.733264, 0, 1.0};
Point(122) = {0.050256, -0.733386, 0, 1.0};
Point(123) = {0.046207, -0.733553, 0, 1.0};
Point(124) = {0.042160, -0.733759, 0, 1.0};
Point(125) = {0.038116, -0.733994, 0, 1.0};
Point(126) = {0.034074, -0.734254, 0, 1.0};
Point(127) = {0.030033, -0.734531, 0, 1.0};
Point(128) = {0.025993, -0.734824, 0, 1.0};
Point(129) = {0.021955, -0.735138, 0, 1.0};
Point(130) = {0.017920, -0.735480, 0, 1.0};
Point(131) = {0.013886, -0.735851, 0, 1.0};
Point(132) = {0.009855, -0.736249, 0, 1.0};
Point(133) = {0.001797, -0.737113, 0, 1.0};
Point(134) = {-0.006254, -0.738067, 0, 1.0};
Point(135) = {-0.014298, -0.739102, 0, 1.0};
Point(136) = {-0.022336, -0.740209, 0, 1.0};
Point(137) = {-0.030372, -0.741361, 0, 1.0};
Point(138) = {-0.038406, -0.742514, 0, 1.0};
Point(139) = {-0.046443, -0.743645, 0, 1.0};
Point(140) = {-0.054485, -0.744716, 0, 1.0};
Point(141) = {-0.058508, -0.745218, 0, 1.0};
Point(142) = {-0.062534, -0.745681, 0, 1.0};
Point(143) = {-0.066565, -0.746089, 0, 1.0};
Point(144) = {-0.070599, -0.746453, 0, 1.0};
Point(145) = {-0.074636, -0.746785, 0, 1.0};
Point(146) = {-0.074777, -0.746797, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {36.00000000, 15.00000000, 0, 1.0};
Point(150) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
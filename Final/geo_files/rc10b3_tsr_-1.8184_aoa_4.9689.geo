SetFactory("OpenCASCADE");

Point(1) = {0.074785, 0.731188, 0, 1.0};
Point(2) = {0.073602, 0.731447, 0, 1.0};
Point(3) = {0.068768, 0.732564, 0, 1.0};
Point(4) = {0.063903, 0.733777, 0, 1.0};
Point(5) = {0.058880, 0.735034, 0, 1.0};
Point(6) = {0.053658, 0.736334, 0, 1.0};
Point(7) = {0.048188, 0.737667, 0, 1.0};
Point(8) = {0.042419, 0.739029, 0, 1.0};
Point(9) = {0.036438, 0.740379, 0, 1.0};
Point(10) = {0.030447, 0.741657, 0, 1.0};
Point(11) = {0.024537, 0.742839, 0, 1.0};
Point(12) = {0.018722, 0.743920, 0, 1.0};
Point(13) = {0.012945, 0.744910, 0, 1.0};
Point(14) = {0.007166, 0.745815, 0, 1.0};
Point(15) = {0.001374, 0.746636, 0, 1.0};
Point(16) = {-0.004441, 0.747376, 0, 1.0};
Point(17) = {-0.010264, 0.748035, 0, 1.0};
Point(18) = {-0.016062, 0.748609, 0, 1.0};
Point(19) = {-0.021786, 0.749089, 0, 1.0};
Point(20) = {-0.027386, 0.749476, 0, 1.0};
Point(21) = {-0.032816, 0.749760, 0, 1.0};
Point(22) = {-0.038053, 0.749934, 0, 1.0};
Point(23) = {-0.043084, 0.750000, 0, 1.0};
Point(24) = {-0.047891, 0.749951, 0, 1.0};
Point(25) = {-0.052454, 0.749773, 0, 1.0};
Point(26) = {-0.056753, 0.749481, 0, 1.0};
Point(27) = {-0.060772, 0.749045, 0, 1.0};
Point(28) = {-0.064488, 0.748472, 0, 1.0};
Point(29) = {-0.067842, 0.747744, 0, 1.0};
Point(30) = {-0.070712, 0.746866, 0, 1.0};
Point(31) = {-0.072819, 0.745874, 0, 1.0};
Point(32) = {-0.074123, 0.744762, 0, 1.0};
Point(33) = {-0.074718, 0.743416, 0, 1.0};
Point(34) = {-0.074345, 0.742204, 0, 1.0};
Point(35) = {-0.073209, 0.741388, 0, 1.0};
Point(36) = {-0.071255, 0.740618, 0, 1.0};
Point(37) = {-0.068526, 0.739870, 0, 1.0};
Point(38) = {-0.065294, 0.739199, 0, 1.0};
Point(39) = {-0.061681, 0.738581, 0, 1.0};
Point(40) = {-0.057751, 0.737991, 0, 1.0};
Point(41) = {-0.053529, 0.737416, 0, 1.0};
Point(42) = {-0.049031, 0.736838, 0, 1.0};
Point(43) = {-0.044278, 0.736261, 0, 1.0};
Point(44) = {-0.039292, 0.735678, 0, 1.0};
Point(45) = {-0.034091, 0.735092, 0, 1.0};
Point(46) = {-0.028688, 0.734503, 0, 1.0};
Point(47) = {-0.023105, 0.733917, 0, 1.0};
Point(48) = {-0.017390, 0.733340, 0, 1.0};
Point(49) = {-0.011591, 0.732781, 0, 1.0};
Point(50) = {-0.005757, 0.732243, 0, 1.0};
Point(51) = {0.000079, 0.731731, 0, 1.0};
Point(52) = {0.005900, 0.731246, 0, 1.0};
Point(53) = {0.011717, 0.730791, 0, 1.0};
Point(54) = {0.017543, 0.730366, 0, 1.0};
Point(55) = {0.023419, 0.729973, 0, 1.0};
Point(56) = {0.029400, 0.729615, 0, 1.0};
Point(57) = {0.035475, 0.729303, 0, 1.0};
Point(58) = {0.041551, 0.729053, 0, 1.0};
Point(59) = {0.047425, 0.728885, 0, 1.0};
Point(60) = {0.053003, 0.728808, 0, 1.0};
Point(61) = {0.058341, 0.728826, 0, 1.0};
Point(62) = {0.063483, 0.728942, 0, 1.0};
Point(63) = {0.068472, 0.729161, 0, 1.0};
Point(64) = {0.073438, 0.729559, 0, 1.0};
Point(65) = {0.074653, 0.729679, 0, 1.0};
Point(66) = {-0.074785, -0.731188, 0, 1.0};
Point(67) = {-0.073602, -0.731447, 0, 1.0};
Point(68) = {-0.068768, -0.732564, 0, 1.0};
Point(69) = {-0.063903, -0.733777, 0, 1.0};
Point(70) = {-0.058880, -0.735034, 0, 1.0};
Point(71) = {-0.053658, -0.736334, 0, 1.0};
Point(72) = {-0.048188, -0.737667, 0, 1.0};
Point(73) = {-0.042419, -0.739029, 0, 1.0};
Point(74) = {-0.036438, -0.740379, 0, 1.0};
Point(75) = {-0.030447, -0.741657, 0, 1.0};
Point(76) = {-0.024537, -0.742839, 0, 1.0};
Point(77) = {-0.018722, -0.743920, 0, 1.0};
Point(78) = {-0.012945, -0.744910, 0, 1.0};
Point(79) = {-0.007166, -0.745815, 0, 1.0};
Point(80) = {-0.001374, -0.746636, 0, 1.0};
Point(81) = {0.004441, -0.747376, 0, 1.0};
Point(82) = {0.010264, -0.748035, 0, 1.0};
Point(83) = {0.016062, -0.748609, 0, 1.0};
Point(84) = {0.021786, -0.749089, 0, 1.0};
Point(85) = {0.027386, -0.749476, 0, 1.0};
Point(86) = {0.032816, -0.749760, 0, 1.0};
Point(87) = {0.038053, -0.749934, 0, 1.0};
Point(88) = {0.043084, -0.750000, 0, 1.0};
Point(89) = {0.047891, -0.749951, 0, 1.0};
Point(90) = {0.052454, -0.749773, 0, 1.0};
Point(91) = {0.056753, -0.749481, 0, 1.0};
Point(92) = {0.060772, -0.749045, 0, 1.0};
Point(93) = {0.064488, -0.748472, 0, 1.0};
Point(94) = {0.067842, -0.747744, 0, 1.0};
Point(95) = {0.070712, -0.746866, 0, 1.0};
Point(96) = {0.072819, -0.745874, 0, 1.0};
Point(97) = {0.074123, -0.744762, 0, 1.0};
Point(98) = {0.074718, -0.743416, 0, 1.0};
Point(99) = {0.074345, -0.742204, 0, 1.0};
Point(100) = {0.073209, -0.741388, 0, 1.0};
Point(101) = {0.071255, -0.740618, 0, 1.0};
Point(102) = {0.068526, -0.739870, 0, 1.0};
Point(103) = {0.065294, -0.739199, 0, 1.0};
Point(104) = {0.061681, -0.738581, 0, 1.0};
Point(105) = {0.057751, -0.737991, 0, 1.0};
Point(106) = {0.053529, -0.737416, 0, 1.0};
Point(107) = {0.049031, -0.736838, 0, 1.0};
Point(108) = {0.044278, -0.736261, 0, 1.0};
Point(109) = {0.039292, -0.735678, 0, 1.0};
Point(110) = {0.034091, -0.735092, 0, 1.0};
Point(111) = {0.028688, -0.734503, 0, 1.0};
Point(112) = {0.023105, -0.733917, 0, 1.0};
Point(113) = {0.017390, -0.733340, 0, 1.0};
Point(114) = {0.011591, -0.732781, 0, 1.0};
Point(115) = {0.005757, -0.732243, 0, 1.0};
Point(116) = {-0.000079, -0.731731, 0, 1.0};
Point(117) = {-0.005900, -0.731246, 0, 1.0};
Point(118) = {-0.011717, -0.730791, 0, 1.0};
Point(119) = {-0.017543, -0.730366, 0, 1.0};
Point(120) = {-0.023419, -0.729973, 0, 1.0};
Point(121) = {-0.029400, -0.729615, 0, 1.0};
Point(122) = {-0.035475, -0.729303, 0, 1.0};
Point(123) = {-0.041551, -0.729053, 0, 1.0};
Point(124) = {-0.047425, -0.728885, 0, 1.0};
Point(125) = {-0.053003, -0.728808, 0, 1.0};
Point(126) = {-0.058341, -0.728826, 0, 1.0};
Point(127) = {-0.063483, -0.728942, 0, 1.0};
Point(128) = {-0.068472, -0.729161, 0, 1.0};
Point(129) = {-0.073438, -0.729559, 0, 1.0};
Point(130) = {-0.074653, -0.729679, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {36.00000000, 15.00000000, 0, 1.0};
Point(134) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074987, 0.742614, 0, 1.0};
Point(2) = {0.072479, 0.743098, 0, 1.0};
Point(3) = {0.069970, 0.743610, 0, 1.0};
Point(4) = {0.067462, 0.744116, 0, 1.0};
Point(5) = {0.064954, 0.744603, 0, 1.0};
Point(6) = {0.062446, 0.745084, 0, 1.0};
Point(7) = {0.059938, 0.745552, 0, 1.0};
Point(8) = {0.057430, 0.746010, 0, 1.0};
Point(9) = {0.054923, 0.746455, 0, 1.0};
Point(10) = {0.049909, 0.747278, 0, 1.0};
Point(11) = {0.044897, 0.748008, 0, 1.0};
Point(12) = {0.039886, 0.748632, 0, 1.0};
Point(13) = {0.034877, 0.749155, 0, 1.0};
Point(14) = {0.029870, 0.749557, 0, 1.0};
Point(15) = {0.024865, 0.749832, 0, 1.0};
Point(16) = {0.019862, 0.749976, 0, 1.0};
Point(17) = {0.014861, 0.750000, 0, 1.0};
Point(18) = {0.012361, 0.749969, 0, 1.0};
Point(19) = {0.009862, 0.749908, 0, 1.0};
Point(20) = {0.007363, 0.749813, 0, 1.0};
Point(21) = {0.004865, 0.749678, 0, 1.0};
Point(22) = {0.002367, 0.749503, 0, 1.0};
Point(23) = {-0.000130, 0.749298, 0, 1.0};
Point(24) = {-0.002626, 0.749065, 0, 1.0};
Point(25) = {-0.005122, 0.748793, 0, 1.0};
Point(26) = {-0.007617, 0.748464, 0, 1.0};
Point(27) = {-0.010111, 0.748054, 0, 1.0};
Point(28) = {-0.012603, 0.747539, 0, 1.0};
Point(29) = {-0.015093, 0.746902, 0, 1.0};
Point(30) = {-0.017581, 0.746117, 0, 1.0};
Point(31) = {-0.020065, 0.745125, 0, 1.0};
Point(32) = {-0.021306, 0.744518, 0, 1.0};
Point(33) = {-0.022544, 0.743790, 0, 1.0};
Point(34) = {-0.023162, 0.743359, 0, 1.0};
Point(35) = {-0.023780, 0.742861, 0, 1.0};
Point(36) = {-0.024149, 0.742514, 0, 1.0};
Point(37) = {-0.024517, 0.742095, 0, 1.0};
Point(38) = {-0.024761, 0.741720, 0, 1.0};
Point(39) = {-0.025000, 0.741009, 0, 1.0};
Point(40) = {-0.024745, 0.740690, 0, 1.0};
Point(41) = {-0.024493, 0.740558, 0, 1.0};
Point(42) = {-0.024115, 0.740396, 0, 1.0};
Point(43) = {-0.023738, 0.740267, 0, 1.0};
Point(44) = {-0.023110, 0.740109, 0, 1.0};
Point(45) = {-0.022484, 0.740009, 0, 1.0};
Point(46) = {-0.021231, 0.739872, 0, 1.0};
Point(47) = {-0.019980, 0.739789, 0, 1.0};
Point(48) = {-0.017478, 0.739691, 0, 1.0};
Point(49) = {-0.014977, 0.739639, 0, 1.0};
Point(50) = {-0.012476, 0.739610, 0, 1.0};
Point(51) = {-0.009975, 0.739596, 0, 1.0};
Point(52) = {-0.007475, 0.739600, 0, 1.0};
Point(53) = {-0.004975, 0.739618, 0, 1.0};
Point(54) = {-0.002475, 0.739649, 0, 1.0};
Point(55) = {0.000024, 0.739692, 0, 1.0};
Point(56) = {0.002524, 0.739741, 0, 1.0};
Point(57) = {0.005023, 0.739797, 0, 1.0};
Point(58) = {0.007523, 0.739864, 0, 1.0};
Point(59) = {0.010022, 0.739945, 0, 1.0};
Point(60) = {0.012520, 0.740046, 0, 1.0};
Point(61) = {0.015019, 0.740167, 0, 1.0};
Point(62) = {0.020015, 0.740449, 0, 1.0};
Point(63) = {0.025010, 0.740787, 0, 1.0};
Point(64) = {0.030005, 0.741167, 0, 1.0};
Point(65) = {0.034999, 0.741580, 0, 1.0};
Point(66) = {0.039992, 0.741999, 0, 1.0};
Point(67) = {0.044987, 0.742391, 0, 1.0};
Point(68) = {0.049982, 0.742732, 0, 1.0};
Point(69) = {0.054979, 0.742983, 0, 1.0};
Point(70) = {0.057478, 0.743061, 0, 1.0};
Point(71) = {0.059977, 0.743103, 0, 1.0};
Point(72) = {0.062478, 0.743097, 0, 1.0};
Point(73) = {0.064979, 0.743060, 0, 1.0};
Point(74) = {0.067480, 0.742976, 0, 1.0};
Point(75) = {0.069982, 0.742892, 0, 1.0};
Point(76) = {0.072484, 0.742768, 0, 1.0};
Point(77) = {-0.074987, -0.742614, 0, 1.0};
Point(78) = {-0.072479, -0.743098, 0, 1.0};
Point(79) = {-0.069970, -0.743610, 0, 1.0};
Point(80) = {-0.067462, -0.744116, 0, 1.0};
Point(81) = {-0.064954, -0.744603, 0, 1.0};
Point(82) = {-0.062446, -0.745084, 0, 1.0};
Point(83) = {-0.059938, -0.745552, 0, 1.0};
Point(84) = {-0.057430, -0.746010, 0, 1.0};
Point(85) = {-0.054923, -0.746455, 0, 1.0};
Point(86) = {-0.049909, -0.747278, 0, 1.0};
Point(87) = {-0.044897, -0.748008, 0, 1.0};
Point(88) = {-0.039886, -0.748632, 0, 1.0};
Point(89) = {-0.034877, -0.749155, 0, 1.0};
Point(90) = {-0.029870, -0.749557, 0, 1.0};
Point(91) = {-0.024865, -0.749832, 0, 1.0};
Point(92) = {-0.019862, -0.749976, 0, 1.0};
Point(93) = {-0.014861, -0.750000, 0, 1.0};
Point(94) = {-0.012361, -0.749969, 0, 1.0};
Point(95) = {-0.009862, -0.749908, 0, 1.0};
Point(96) = {-0.007363, -0.749813, 0, 1.0};
Point(97) = {-0.004865, -0.749678, 0, 1.0};
Point(98) = {-0.002367, -0.749503, 0, 1.0};
Point(99) = {0.000130, -0.749298, 0, 1.0};
Point(100) = {0.002626, -0.749065, 0, 1.0};
Point(101) = {0.005122, -0.748793, 0, 1.0};
Point(102) = {0.007617, -0.748464, 0, 1.0};
Point(103) = {0.010111, -0.748054, 0, 1.0};
Point(104) = {0.012603, -0.747539, 0, 1.0};
Point(105) = {0.015093, -0.746902, 0, 1.0};
Point(106) = {0.017581, -0.746117, 0, 1.0};
Point(107) = {0.020065, -0.745125, 0, 1.0};
Point(108) = {0.021306, -0.744518, 0, 1.0};
Point(109) = {0.022544, -0.743790, 0, 1.0};
Point(110) = {0.023162, -0.743359, 0, 1.0};
Point(111) = {0.023780, -0.742861, 0, 1.0};
Point(112) = {0.024149, -0.742514, 0, 1.0};
Point(113) = {0.024517, -0.742095, 0, 1.0};
Point(114) = {0.024761, -0.741720, 0, 1.0};
Point(115) = {0.025000, -0.741009, 0, 1.0};
Point(116) = {0.024745, -0.740690, 0, 1.0};
Point(117) = {0.024493, -0.740558, 0, 1.0};
Point(118) = {0.024115, -0.740396, 0, 1.0};
Point(119) = {0.023738, -0.740267, 0, 1.0};
Point(120) = {0.023110, -0.740109, 0, 1.0};
Point(121) = {0.022484, -0.740009, 0, 1.0};
Point(122) = {0.021231, -0.739872, 0, 1.0};
Point(123) = {0.019980, -0.739789, 0, 1.0};
Point(124) = {0.017478, -0.739691, 0, 1.0};
Point(125) = {0.014977, -0.739639, 0, 1.0};
Point(126) = {0.012476, -0.739610, 0, 1.0};
Point(127) = {0.009975, -0.739596, 0, 1.0};
Point(128) = {0.007475, -0.739600, 0, 1.0};
Point(129) = {0.004975, -0.739618, 0, 1.0};
Point(130) = {0.002475, -0.739649, 0, 1.0};
Point(131) = {-0.000024, -0.739692, 0, 1.0};
Point(132) = {-0.002524, -0.739741, 0, 1.0};
Point(133) = {-0.005023, -0.739797, 0, 1.0};
Point(134) = {-0.007523, -0.739864, 0, 1.0};
Point(135) = {-0.010022, -0.739945, 0, 1.0};
Point(136) = {-0.012520, -0.740046, 0, 1.0};
Point(137) = {-0.015019, -0.740167, 0, 1.0};
Point(138) = {-0.020015, -0.740449, 0, 1.0};
Point(139) = {-0.025010, -0.740787, 0, 1.0};
Point(140) = {-0.030005, -0.741167, 0, 1.0};
Point(141) = {-0.034999, -0.741580, 0, 1.0};
Point(142) = {-0.039992, -0.741999, 0, 1.0};
Point(143) = {-0.044987, -0.742391, 0, 1.0};
Point(144) = {-0.049982, -0.742732, 0, 1.0};
Point(145) = {-0.054979, -0.742983, 0, 1.0};
Point(146) = {-0.057478, -0.743061, 0, 1.0};
Point(147) = {-0.059977, -0.743103, 0, 1.0};
Point(148) = {-0.062478, -0.743097, 0, 1.0};
Point(149) = {-0.064979, -0.743060, 0, 1.0};
Point(150) = {-0.067480, -0.742976, 0, 1.0};
Point(151) = {-0.069982, -0.742892, 0, 1.0};
Point(152) = {-0.072484, -0.742768, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
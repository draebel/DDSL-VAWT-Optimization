SetFactory("OpenCASCADE");

Point(1) = {0.112486, 0.738921, 0, 1.0};
Point(2) = {0.108723, 0.739646, 0, 1.0};
Point(3) = {0.104961, 0.740416, 0, 1.0};
Point(4) = {0.101198, 0.741174, 0, 1.0};
Point(5) = {0.097436, 0.741905, 0, 1.0};
Point(6) = {0.093674, 0.742626, 0, 1.0};
Point(7) = {0.089912, 0.743328, 0, 1.0};
Point(8) = {0.086150, 0.744014, 0, 1.0};
Point(9) = {0.082389, 0.744683, 0, 1.0};
Point(10) = {0.074868, 0.745917, 0, 1.0};
Point(11) = {0.067350, 0.747012, 0, 1.0};
Point(12) = {0.059834, 0.747949, 0, 1.0};
Point(13) = {0.052320, 0.748733, 0, 1.0};
Point(14) = {0.044810, 0.749335, 0, 1.0};
Point(15) = {0.037302, 0.749747, 0, 1.0};
Point(16) = {0.029798, 0.749964, 0, 1.0};
Point(17) = {0.022296, 0.750000, 0, 1.0};
Point(18) = {0.018546, 0.749953, 0, 1.0};
Point(19) = {0.014797, 0.749862, 0, 1.0};
Point(20) = {0.011049, 0.749719, 0, 1.0};
Point(21) = {0.007302, 0.749516, 0, 1.0};
Point(22) = {0.003556, 0.749255, 0, 1.0};
Point(23) = {-0.000190, 0.748948, 0, 1.0};
Point(24) = {-0.003935, 0.748598, 0, 1.0};
Point(25) = {-0.007679, 0.748190, 0, 1.0};
Point(26) = {-0.011421, 0.747696, 0, 1.0};
Point(27) = {-0.015162, 0.747081, 0, 1.0};
Point(28) = {-0.018900, 0.746308, 0, 1.0};
Point(29) = {-0.022635, 0.745353, 0, 1.0};
Point(30) = {-0.026367, 0.744175, 0, 1.0};
Point(31) = {-0.030093, 0.742687, 0, 1.0};
Point(32) = {-0.031954, 0.741777, 0, 1.0};
Point(33) = {-0.033812, 0.740685, 0, 1.0};
Point(34) = {-0.034739, 0.740039, 0, 1.0};
Point(35) = {-0.035665, 0.739292, 0, 1.0};
Point(36) = {-0.036219, 0.738771, 0, 1.0};
Point(37) = {-0.036771, 0.738143, 0, 1.0};
Point(38) = {-0.037137, 0.737580, 0, 1.0};
Point(39) = {-0.037495, 0.736514, 0, 1.0};
Point(40) = {-0.037112, 0.736035, 0, 1.0};
Point(41) = {-0.036734, 0.735837, 0, 1.0};
Point(42) = {-0.036168, 0.735595, 0, 1.0};
Point(43) = {-0.035602, 0.735401, 0, 1.0};
Point(44) = {-0.034661, 0.735164, 0, 1.0};
Point(45) = {-0.033721, 0.735014, 0, 1.0};
Point(46) = {-0.031842, 0.734807, 0, 1.0};
Point(47) = {-0.029965, 0.734683, 0, 1.0};
Point(48) = {-0.026212, 0.734536, 0, 1.0};
Point(49) = {-0.022460, 0.734458, 0, 1.0};
Point(50) = {-0.018709, 0.734415, 0, 1.0};
Point(51) = {-0.014958, 0.734394, 0, 1.0};
Point(52) = {-0.011208, 0.734400, 0, 1.0};
Point(53) = {-0.007458, 0.734428, 0, 1.0};
Point(54) = {-0.003708, 0.734474, 0, 1.0};
Point(55) = {0.000041, 0.734537, 0, 1.0};
Point(56) = {0.003791, 0.734611, 0, 1.0};
Point(57) = {0.007540, 0.734695, 0, 1.0};
Point(58) = {0.011289, 0.734796, 0, 1.0};
Point(59) = {0.015037, 0.734918, 0, 1.0};
Point(60) = {0.018785, 0.735069, 0, 1.0};
Point(61) = {0.022533, 0.735251, 0, 1.0};
Point(62) = {0.030027, 0.735674, 0, 1.0};
Point(63) = {0.037520, 0.736180, 0, 1.0};
Point(64) = {0.045012, 0.736750, 0, 1.0};
Point(65) = {0.052503, 0.737370, 0, 1.0};
Point(66) = {0.059994, 0.737999, 0, 1.0};
Point(67) = {0.067485, 0.738587, 0, 1.0};
Point(68) = {0.074978, 0.739097, 0, 1.0};
Point(69) = {0.082473, 0.739474, 0, 1.0};
Point(70) = {0.086221, 0.739591, 0, 1.0};
Point(71) = {0.089971, 0.739655, 0, 1.0};
Point(72) = {0.093721, 0.739646, 0, 1.0};
Point(73) = {0.097473, 0.739590, 0, 1.0};
Point(74) = {0.101225, 0.739465, 0, 1.0};
Point(75) = {0.104978, 0.739337, 0, 1.0};
Point(76) = {0.108731, 0.739152, 0, 1.0};
Point(77) = {-0.112486, -0.738921, 0, 1.0};
Point(78) = {-0.108723, -0.739646, 0, 1.0};
Point(79) = {-0.104961, -0.740416, 0, 1.0};
Point(80) = {-0.101198, -0.741174, 0, 1.0};
Point(81) = {-0.097436, -0.741905, 0, 1.0};
Point(82) = {-0.093674, -0.742626, 0, 1.0};
Point(83) = {-0.089912, -0.743328, 0, 1.0};
Point(84) = {-0.086150, -0.744014, 0, 1.0};
Point(85) = {-0.082389, -0.744683, 0, 1.0};
Point(86) = {-0.074868, -0.745917, 0, 1.0};
Point(87) = {-0.067350, -0.747012, 0, 1.0};
Point(88) = {-0.059834, -0.747949, 0, 1.0};
Point(89) = {-0.052320, -0.748733, 0, 1.0};
Point(90) = {-0.044810, -0.749335, 0, 1.0};
Point(91) = {-0.037302, -0.749747, 0, 1.0};
Point(92) = {-0.029798, -0.749964, 0, 1.0};
Point(93) = {-0.022296, -0.750000, 0, 1.0};
Point(94) = {-0.018546, -0.749953, 0, 1.0};
Point(95) = {-0.014797, -0.749862, 0, 1.0};
Point(96) = {-0.011049, -0.749719, 0, 1.0};
Point(97) = {-0.007302, -0.749516, 0, 1.0};
Point(98) = {-0.003556, -0.749255, 0, 1.0};
Point(99) = {0.000190, -0.748948, 0, 1.0};
Point(100) = {0.003935, -0.748598, 0, 1.0};
Point(101) = {0.007679, -0.748190, 0, 1.0};
Point(102) = {0.011421, -0.747696, 0, 1.0};
Point(103) = {0.015162, -0.747081, 0, 1.0};
Point(104) = {0.018900, -0.746308, 0, 1.0};
Point(105) = {0.022635, -0.745353, 0, 1.0};
Point(106) = {0.026367, -0.744175, 0, 1.0};
Point(107) = {0.030093, -0.742687, 0, 1.0};
Point(108) = {0.031954, -0.741777, 0, 1.0};
Point(109) = {0.033812, -0.740685, 0, 1.0};
Point(110) = {0.034739, -0.740039, 0, 1.0};
Point(111) = {0.035665, -0.739292, 0, 1.0};
Point(112) = {0.036219, -0.738771, 0, 1.0};
Point(113) = {0.036771, -0.738143, 0, 1.0};
Point(114) = {0.037137, -0.737580, 0, 1.0};
Point(115) = {0.037495, -0.736514, 0, 1.0};
Point(116) = {0.037112, -0.736035, 0, 1.0};
Point(117) = {0.036734, -0.735837, 0, 1.0};
Point(118) = {0.036168, -0.735595, 0, 1.0};
Point(119) = {0.035602, -0.735401, 0, 1.0};
Point(120) = {0.034661, -0.735164, 0, 1.0};
Point(121) = {0.033721, -0.735014, 0, 1.0};
Point(122) = {0.031842, -0.734807, 0, 1.0};
Point(123) = {0.029965, -0.734683, 0, 1.0};
Point(124) = {0.026212, -0.734536, 0, 1.0};
Point(125) = {0.022460, -0.734458, 0, 1.0};
Point(126) = {0.018709, -0.734415, 0, 1.0};
Point(127) = {0.014958, -0.734394, 0, 1.0};
Point(128) = {0.011208, -0.734400, 0, 1.0};
Point(129) = {0.007458, -0.734428, 0, 1.0};
Point(130) = {0.003708, -0.734474, 0, 1.0};
Point(131) = {-0.000041, -0.734537, 0, 1.0};
Point(132) = {-0.003791, -0.734611, 0, 1.0};
Point(133) = {-0.007540, -0.734695, 0, 1.0};
Point(134) = {-0.011289, -0.734796, 0, 1.0};
Point(135) = {-0.015037, -0.734918, 0, 1.0};
Point(136) = {-0.018785, -0.735069, 0, 1.0};
Point(137) = {-0.022533, -0.735251, 0, 1.0};
Point(138) = {-0.030027, -0.735674, 0, 1.0};
Point(139) = {-0.037520, -0.736180, 0, 1.0};
Point(140) = {-0.045012, -0.736750, 0, 1.0};
Point(141) = {-0.052503, -0.737370, 0, 1.0};
Point(142) = {-0.059994, -0.737999, 0, 1.0};
Point(143) = {-0.067485, -0.738587, 0, 1.0};
Point(144) = {-0.074978, -0.739097, 0, 1.0};
Point(145) = {-0.082473, -0.739474, 0, 1.0};
Point(146) = {-0.086221, -0.739591, 0, 1.0};
Point(147) = {-0.089971, -0.739655, 0, 1.0};
Point(148) = {-0.093721, -0.739646, 0, 1.0};
Point(149) = {-0.097473, -0.739590, 0, 1.0};
Point(150) = {-0.101225, -0.739465, 0, 1.0};
Point(151) = {-0.104978, -0.739337, 0, 1.0};
Point(152) = {-0.108731, -0.739152, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
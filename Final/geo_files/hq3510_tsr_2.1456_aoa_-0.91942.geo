SetFactory("OpenCASCADE");

Point(1) = {0.149974, 0.735228, 0, 1.0};
Point(2) = {0.144958, 0.736195, 0, 1.0};
Point(3) = {0.139941, 0.737221, 0, 1.0};
Point(4) = {0.134924, 0.738233, 0, 1.0};
Point(5) = {0.129908, 0.739206, 0, 1.0};
Point(6) = {0.124892, 0.740168, 0, 1.0};
Point(7) = {0.119876, 0.741103, 0, 1.0};
Point(8) = {0.114861, 0.742019, 0, 1.0};
Point(9) = {0.109846, 0.742911, 0, 1.0};
Point(10) = {0.099818, 0.744556, 0, 1.0};
Point(11) = {0.089793, 0.746015, 0, 1.0};
Point(12) = {0.079772, 0.747265, 0, 1.0};
Point(13) = {0.069754, 0.748310, 0, 1.0};
Point(14) = {0.059740, 0.749114, 0, 1.0};
Point(15) = {0.049730, 0.749663, 0, 1.0};
Point(16) = {0.039724, 0.749952, 0, 1.0};
Point(17) = {0.029722, 0.750000, 0, 1.0};
Point(18) = {0.024722, 0.749938, 0, 1.0};
Point(19) = {0.019723, 0.749816, 0, 1.0};
Point(20) = {0.014726, 0.749625, 0, 1.0};
Point(21) = {0.009730, 0.749355, 0, 1.0};
Point(22) = {0.004734, 0.749007, 0, 1.0};
Point(23) = {-0.000260, 0.748597, 0, 1.0};
Point(24) = {-0.005253, 0.748131, 0, 1.0};
Point(25) = {-0.010245, 0.747586, 0, 1.0};
Point(26) = {-0.015235, 0.746928, 0, 1.0};
Point(27) = {-0.020222, 0.746108, 0, 1.0};
Point(28) = {-0.025206, 0.745078, 0, 1.0};
Point(29) = {-0.030187, 0.743804, 0, 1.0};
Point(30) = {-0.035162, 0.742234, 0, 1.0};
Point(31) = {-0.040131, 0.740250, 0, 1.0};
Point(32) = {-0.042612, 0.739036, 0, 1.0};
Point(33) = {-0.045089, 0.737580, 0, 1.0};
Point(34) = {-0.046325, 0.736718, 0, 1.0};
Point(35) = {-0.047559, 0.735722, 0, 1.0};
Point(36) = {-0.048298, 0.735028, 0, 1.0};
Point(37) = {-0.049035, 0.734190, 0, 1.0};
Point(38) = {-0.049523, 0.733440, 0, 1.0};
Point(39) = {-0.050000, 0.732018, 0, 1.0};
Point(40) = {-0.049490, 0.731381, 0, 1.0};
Point(41) = {-0.048985, 0.731117, 0, 1.0};
Point(42) = {-0.048230, 0.730793, 0, 1.0};
Point(43) = {-0.047476, 0.730535, 0, 1.0};
Point(44) = {-0.046221, 0.730219, 0, 1.0};
Point(45) = {-0.044967, 0.730019, 0, 1.0};
Point(46) = {-0.042463, 0.729743, 0, 1.0};
Point(47) = {-0.039960, 0.729577, 0, 1.0};
Point(48) = {-0.034956, 0.729382, 0, 1.0};
Point(49) = {-0.029953, 0.729278, 0, 1.0};
Point(50) = {-0.024952, 0.729220, 0, 1.0};
Point(51) = {-0.019951, 0.729192, 0, 1.0};
Point(52) = {-0.014950, 0.729201, 0, 1.0};
Point(53) = {-0.009950, 0.729237, 0, 1.0};
Point(54) = {-0.004951, 0.729299, 0, 1.0};
Point(55) = {0.000049, 0.729383, 0, 1.0};
Point(56) = {0.005048, 0.729481, 0, 1.0};
Point(57) = {0.010047, 0.729594, 0, 1.0};
Point(58) = {0.015045, 0.729728, 0, 1.0};
Point(59) = {0.020043, 0.729890, 0, 1.0};
Point(60) = {0.025041, 0.730092, 0, 1.0};
Point(61) = {0.030037, 0.730335, 0, 1.0};
Point(62) = {0.040030, 0.730899, 0, 1.0};
Point(63) = {0.050020, 0.731573, 0, 1.0};
Point(64) = {0.060009, 0.732334, 0, 1.0};
Point(65) = {0.069997, 0.733160, 0, 1.0};
Point(66) = {0.079985, 0.733998, 0, 1.0};
Point(67) = {0.089974, 0.734783, 0, 1.0};
Point(68) = {0.099964, 0.735463, 0, 1.0};
Point(69) = {0.109957, 0.735966, 0, 1.0};
Point(70) = {0.114955, 0.736122, 0, 1.0};
Point(71) = {0.119955, 0.736206, 0, 1.0};
Point(72) = {0.124956, 0.736194, 0, 1.0};
Point(73) = {0.129957, 0.736121, 0, 1.0};
Point(74) = {0.134961, 0.735953, 0, 1.0};
Point(75) = {0.139964, 0.735783, 0, 1.0};
Point(76) = {0.144969, 0.735535, 0, 1.0};
Point(77) = {-0.149974, -0.735228, 0, 1.0};
Point(78) = {-0.144958, -0.736195, 0, 1.0};
Point(79) = {-0.139941, -0.737221, 0, 1.0};
Point(80) = {-0.134924, -0.738233, 0, 1.0};
Point(81) = {-0.129908, -0.739206, 0, 1.0};
Point(82) = {-0.124892, -0.740168, 0, 1.0};
Point(83) = {-0.119876, -0.741103, 0, 1.0};
Point(84) = {-0.114861, -0.742019, 0, 1.0};
Point(85) = {-0.109846, -0.742911, 0, 1.0};
Point(86) = {-0.099818, -0.744556, 0, 1.0};
Point(87) = {-0.089793, -0.746015, 0, 1.0};
Point(88) = {-0.079772, -0.747265, 0, 1.0};
Point(89) = {-0.069754, -0.748310, 0, 1.0};
Point(90) = {-0.059740, -0.749114, 0, 1.0};
Point(91) = {-0.049730, -0.749663, 0, 1.0};
Point(92) = {-0.039724, -0.749952, 0, 1.0};
Point(93) = {-0.029722, -0.750000, 0, 1.0};
Point(94) = {-0.024722, -0.749938, 0, 1.0};
Point(95) = {-0.019723, -0.749816, 0, 1.0};
Point(96) = {-0.014726, -0.749625, 0, 1.0};
Point(97) = {-0.009730, -0.749355, 0, 1.0};
Point(98) = {-0.004734, -0.749007, 0, 1.0};
Point(99) = {0.000260, -0.748597, 0, 1.0};
Point(100) = {0.005253, -0.748131, 0, 1.0};
Point(101) = {0.010245, -0.747586, 0, 1.0};
Point(102) = {0.015235, -0.746928, 0, 1.0};
Point(103) = {0.020222, -0.746108, 0, 1.0};
Point(104) = {0.025206, -0.745078, 0, 1.0};
Point(105) = {0.030187, -0.743804, 0, 1.0};
Point(106) = {0.035162, -0.742234, 0, 1.0};
Point(107) = {0.040131, -0.740250, 0, 1.0};
Point(108) = {0.042612, -0.739036, 0, 1.0};
Point(109) = {0.045089, -0.737580, 0, 1.0};
Point(110) = {0.046325, -0.736718, 0, 1.0};
Point(111) = {0.047559, -0.735722, 0, 1.0};
Point(112) = {0.048298, -0.735028, 0, 1.0};
Point(113) = {0.049035, -0.734190, 0, 1.0};
Point(114) = {0.049523, -0.733440, 0, 1.0};
Point(115) = {0.050000, -0.732018, 0, 1.0};
Point(116) = {0.049490, -0.731381, 0, 1.0};
Point(117) = {0.048985, -0.731117, 0, 1.0};
Point(118) = {0.048230, -0.730793, 0, 1.0};
Point(119) = {0.047476, -0.730535, 0, 1.0};
Point(120) = {0.046221, -0.730219, 0, 1.0};
Point(121) = {0.044967, -0.730019, 0, 1.0};
Point(122) = {0.042463, -0.729743, 0, 1.0};
Point(123) = {0.039960, -0.729577, 0, 1.0};
Point(124) = {0.034956, -0.729382, 0, 1.0};
Point(125) = {0.029953, -0.729278, 0, 1.0};
Point(126) = {0.024952, -0.729220, 0, 1.0};
Point(127) = {0.019951, -0.729192, 0, 1.0};
Point(128) = {0.014950, -0.729201, 0, 1.0};
Point(129) = {0.009950, -0.729237, 0, 1.0};
Point(130) = {0.004951, -0.729299, 0, 1.0};
Point(131) = {-0.000049, -0.729383, 0, 1.0};
Point(132) = {-0.005048, -0.729481, 0, 1.0};
Point(133) = {-0.010047, -0.729594, 0, 1.0};
Point(134) = {-0.015045, -0.729728, 0, 1.0};
Point(135) = {-0.020043, -0.729890, 0, 1.0};
Point(136) = {-0.025041, -0.730092, 0, 1.0};
Point(137) = {-0.030037, -0.730335, 0, 1.0};
Point(138) = {-0.040030, -0.730899, 0, 1.0};
Point(139) = {-0.050020, -0.731573, 0, 1.0};
Point(140) = {-0.060009, -0.732334, 0, 1.0};
Point(141) = {-0.069997, -0.733160, 0, 1.0};
Point(142) = {-0.079985, -0.733998, 0, 1.0};
Point(143) = {-0.089974, -0.734783, 0, 1.0};
Point(144) = {-0.099964, -0.735463, 0, 1.0};
Point(145) = {-0.109957, -0.735966, 0, 1.0};
Point(146) = {-0.114955, -0.736122, 0, 1.0};
Point(147) = {-0.119955, -0.736206, 0, 1.0};
Point(148) = {-0.124956, -0.736194, 0, 1.0};
Point(149) = {-0.129957, -0.736121, 0, 1.0};
Point(150) = {-0.134961, -0.735953, 0, 1.0};
Point(151) = {-0.139964, -0.735783, 0, 1.0};
Point(152) = {-0.144969, -0.735535, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
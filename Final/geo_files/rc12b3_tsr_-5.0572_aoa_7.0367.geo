SetFactory("OpenCASCADE");

Point(1) = {0.074509, 0.724821, 0, 1.0};
Point(2) = {0.072335, 0.725432, 0, 1.0};
Point(3) = {0.067675, 0.726814, 0, 1.0};
Point(4) = {0.063147, 0.728227, 0, 1.0};
Point(5) = {0.058530, 0.729748, 0, 1.0};
Point(6) = {0.053674, 0.731350, 0, 1.0};
Point(7) = {0.048317, 0.733092, 0, 1.0};
Point(8) = {0.042655, 0.734880, 0, 1.0};
Point(9) = {0.036741, 0.736673, 0, 1.0};
Point(10) = {0.030779, 0.738391, 0, 1.0};
Point(11) = {0.024889, 0.739989, 0, 1.0};
Point(12) = {0.019101, 0.741456, 0, 1.0};
Point(13) = {0.013355, 0.742804, 0, 1.0};
Point(14) = {0.007622, 0.744041, 0, 1.0};
Point(15) = {0.001887, 0.745171, 0, 1.0};
Point(16) = {-0.003857, 0.746194, 0, 1.0};
Point(17) = {-0.009594, 0.747110, 0, 1.0};
Point(18) = {-0.015296, 0.747911, 0, 1.0};
Point(19) = {-0.020926, 0.748592, 0, 1.0};
Point(20) = {-0.026448, 0.749149, 0, 1.0};
Point(21) = {-0.031824, 0.749572, 0, 1.0};
Point(22) = {-0.037035, 0.749856, 0, 1.0};
Point(23) = {-0.042066, 0.750000, 0, 1.0};
Point(24) = {-0.046897, 0.749992, 0, 1.0};
Point(25) = {-0.051500, 0.749825, 0, 1.0};
Point(26) = {-0.055847, 0.749506, 0, 1.0};
Point(27) = {-0.059920, 0.749011, 0, 1.0};
Point(28) = {-0.063692, 0.748341, 0, 1.0};
Point(29) = {-0.067093, 0.747482, 0, 1.0};
Point(30) = {-0.069963, 0.746456, 0, 1.0};
Point(31) = {-0.072175, 0.745312, 0, 1.0};
Point(32) = {-0.073691, 0.744049, 0, 1.0};
Point(33) = {-0.074435, 0.742601, 0, 1.0};
Point(34) = {-0.074047, 0.741163, 0, 1.0};
Point(35) = {-0.072832, 0.739990, 0, 1.0};
Point(36) = {-0.070889, 0.738956, 0, 1.0};
Point(37) = {-0.068261, 0.738015, 0, 1.0};
Point(38) = {-0.065071, 0.737173, 0, 1.0};
Point(39) = {-0.061475, 0.736413, 0, 1.0};
Point(40) = {-0.057552, 0.735693, 0, 1.0};
Point(41) = {-0.053330, 0.734993, 0, 1.0};
Point(42) = {-0.048836, 0.734283, 0, 1.0};
Point(43) = {-0.044095, 0.733562, 0, 1.0};
Point(44) = {-0.039138, 0.732822, 0, 1.0};
Point(45) = {-0.033985, 0.732065, 0, 1.0};
Point(46) = {-0.028652, 0.731293, 0, 1.0};
Point(47) = {-0.023158, 0.730511, 0, 1.0};
Point(48) = {-0.017541, 0.729727, 0, 1.0};
Point(49) = {-0.011836, 0.728951, 0, 1.0};
Point(50) = {-0.006079, 0.728189, 0, 1.0};
Point(51) = {-0.000301, 0.727447, 0, 1.0};
Point(52) = {0.005485, 0.726729, 0, 1.0};
Point(53) = {0.011286, 0.726038, 0, 1.0};
Point(54) = {0.017116, 0.725375, 0, 1.0};
Point(55) = {0.023007, 0.724744, 0, 1.0};
Point(56) = {0.029021, 0.724149, 0, 1.0};
Point(57) = {0.035128, 0.723609, 0, 1.0};
Point(58) = {0.041208, 0.723151, 0, 1.0};
Point(59) = {0.047047, 0.722803, 0, 1.0};
Point(60) = {0.052591, 0.722576, 0, 1.0};
Point(61) = {0.057632, 0.722474, 0, 1.0};
Point(62) = {0.062442, 0.722513, 0, 1.0};
Point(63) = {0.067174, 0.722756, 0, 1.0};
Point(64) = {0.072053, 0.723148, 0, 1.0};
Point(65) = {0.074330, 0.723377, 0, 1.0};
Point(66) = {-0.074509, -0.724821, 0, 1.0};
Point(67) = {-0.072335, -0.725432, 0, 1.0};
Point(68) = {-0.067675, -0.726814, 0, 1.0};
Point(69) = {-0.063147, -0.728227, 0, 1.0};
Point(70) = {-0.058530, -0.729748, 0, 1.0};
Point(71) = {-0.053674, -0.731350, 0, 1.0};
Point(72) = {-0.048317, -0.733092, 0, 1.0};
Point(73) = {-0.042655, -0.734880, 0, 1.0};
Point(74) = {-0.036741, -0.736673, 0, 1.0};
Point(75) = {-0.030779, -0.738391, 0, 1.0};
Point(76) = {-0.024889, -0.739989, 0, 1.0};
Point(77) = {-0.019101, -0.741456, 0, 1.0};
Point(78) = {-0.013355, -0.742804, 0, 1.0};
Point(79) = {-0.007622, -0.744041, 0, 1.0};
Point(80) = {-0.001887, -0.745171, 0, 1.0};
Point(81) = {0.003857, -0.746194, 0, 1.0};
Point(82) = {0.009594, -0.747110, 0, 1.0};
Point(83) = {0.015296, -0.747911, 0, 1.0};
Point(84) = {0.020926, -0.748592, 0, 1.0};
Point(85) = {0.026448, -0.749149, 0, 1.0};
Point(86) = {0.031824, -0.749572, 0, 1.0};
Point(87) = {0.037035, -0.749856, 0, 1.0};
Point(88) = {0.042066, -0.750000, 0, 1.0};
Point(89) = {0.046897, -0.749992, 0, 1.0};
Point(90) = {0.051500, -0.749825, 0, 1.0};
Point(91) = {0.055847, -0.749506, 0, 1.0};
Point(92) = {0.059920, -0.749011, 0, 1.0};
Point(93) = {0.063692, -0.748341, 0, 1.0};
Point(94) = {0.067093, -0.747482, 0, 1.0};
Point(95) = {0.069963, -0.746456, 0, 1.0};
Point(96) = {0.072175, -0.745312, 0, 1.0};
Point(97) = {0.073691, -0.744049, 0, 1.0};
Point(98) = {0.074435, -0.742601, 0, 1.0};
Point(99) = {0.074047, -0.741163, 0, 1.0};
Point(100) = {0.072832, -0.739990, 0, 1.0};
Point(101) = {0.070889, -0.738956, 0, 1.0};
Point(102) = {0.068261, -0.738015, 0, 1.0};
Point(103) = {0.065071, -0.737173, 0, 1.0};
Point(104) = {0.061475, -0.736413, 0, 1.0};
Point(105) = {0.057552, -0.735693, 0, 1.0};
Point(106) = {0.053330, -0.734993, 0, 1.0};
Point(107) = {0.048836, -0.734283, 0, 1.0};
Point(108) = {0.044095, -0.733562, 0, 1.0};
Point(109) = {0.039138, -0.732822, 0, 1.0};
Point(110) = {0.033985, -0.732065, 0, 1.0};
Point(111) = {0.028652, -0.731293, 0, 1.0};
Point(112) = {0.023158, -0.730511, 0, 1.0};
Point(113) = {0.017541, -0.729727, 0, 1.0};
Point(114) = {0.011836, -0.728951, 0, 1.0};
Point(115) = {0.006079, -0.728189, 0, 1.0};
Point(116) = {0.000301, -0.727447, 0, 1.0};
Point(117) = {-0.005485, -0.726729, 0, 1.0};
Point(118) = {-0.011286, -0.726038, 0, 1.0};
Point(119) = {-0.017116, -0.725375, 0, 1.0};
Point(120) = {-0.023007, -0.724744, 0, 1.0};
Point(121) = {-0.029021, -0.724149, 0, 1.0};
Point(122) = {-0.035128, -0.723609, 0, 1.0};
Point(123) = {-0.041208, -0.723151, 0, 1.0};
Point(124) = {-0.047047, -0.722803, 0, 1.0};
Point(125) = {-0.052591, -0.722576, 0, 1.0};
Point(126) = {-0.057632, -0.722474, 0, 1.0};
Point(127) = {-0.062442, -0.722513, 0, 1.0};
Point(128) = {-0.067174, -0.722756, 0, 1.0};
Point(129) = {-0.072053, -0.723148, 0, 1.0};
Point(130) = {-0.074330, -0.723377, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {36.00000000, 15.00000000, 0, 1.0};
Point(134) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
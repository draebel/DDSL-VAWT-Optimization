SetFactory("OpenCASCADE");

Point(1) = {0.074997, 0.742854, 0, 1.0};
Point(2) = {0.071995, 0.743112, 0, 1.0};
Point(3) = {0.069743, 0.743306, 0, 1.0};
Point(4) = {0.066740, 0.743566, 0, 1.0};
Point(5) = {0.062987, 0.743887, 0, 1.0};
Point(6) = {0.058483, 0.744277, 0, 1.0};
Point(7) = {0.052479, 0.744793, 0, 1.0};
Point(8) = {0.044972, 0.745434, 0, 1.0};
Point(9) = {0.037466, 0.746071, 0, 1.0};
Point(10) = {0.029960, 0.746723, 0, 1.0};
Point(11) = {0.022454, 0.747376, 0, 1.0};
Point(12) = {0.014948, 0.748013, 0, 1.0};
Point(13) = {0.007442, 0.748635, 0, 1.0};
Point(14) = {-0.000063, 0.749183, 0, 1.0};
Point(15) = {-0.007568, 0.749640, 0, 1.0};
Point(16) = {-0.015070, 0.749918, 0, 1.0};
Point(17) = {-0.022571, 0.750000, 0, 1.0};
Point(18) = {-0.030070, 0.749857, 0, 1.0};
Point(19) = {-0.037567, 0.749490, 0, 1.0};
Point(20) = {-0.045063, 0.748972, 0, 1.0};
Point(21) = {-0.051058, 0.748378, 0, 1.0};
Point(22) = {-0.056302, 0.747701, 0, 1.0};
Point(23) = {-0.060796, 0.746985, 0, 1.0};
Point(24) = {-0.064539, 0.746232, 0, 1.0};
Point(25) = {-0.067533, 0.745485, 0, 1.0};
Point(26) = {-0.069777, 0.744804, 0, 1.0};
Point(27) = {-0.071272, 0.744281, 0, 1.0};
Point(28) = {-0.072016, 0.743667, 0, 1.0};
Point(29) = {-0.073513, 0.743278, 0, 1.0};
Point(30) = {-0.074258, 0.742784, 0, 1.0};
Point(31) = {-0.074997, 0.741502, 0, 1.0};
Point(32) = {-0.074240, 0.740706, 0, 1.0};
Point(33) = {-0.073487, 0.740410, 0, 1.0};
Point(34) = {-0.071985, 0.740209, 0, 1.0};
Point(35) = {-0.071232, 0.739901, 0, 1.0};
Point(36) = {-0.069730, 0.739667, 0, 1.0};
Point(37) = {-0.067477, 0.739372, 0, 1.0};
Point(38) = {-0.064475, 0.739069, 0, 1.0};
Point(39) = {-0.060722, 0.738781, 0, 1.0};
Point(40) = {-0.056219, 0.738491, 0, 1.0};
Point(41) = {-0.050967, 0.738239, 0, 1.0};
Point(42) = {-0.044964, 0.738023, 0, 1.0};
Point(43) = {-0.037463, 0.737850, 0, 1.0};
Point(44) = {-0.029961, 0.737753, 0, 1.0};
Point(45) = {-0.022461, 0.737775, 0, 1.0};
Point(46) = {-0.014962, 0.737903, 0, 1.0};
Point(47) = {-0.007464, 0.738136, 0, 1.0};
Point(48) = {0.000033, 0.738473, 0, 1.0};
Point(49) = {0.007530, 0.738871, 0, 1.0};
Point(50) = {0.015026, 0.739313, 0, 1.0};
Point(51) = {0.022523, 0.739756, 0, 1.0};
Point(52) = {0.030019, 0.740199, 0, 1.0};
Point(53) = {0.037515, 0.740641, 0, 1.0};
Point(54) = {0.045012, 0.741084, 0, 1.0};
Point(55) = {0.052508, 0.741526, 0, 1.0};
Point(56) = {0.058505, 0.741880, 0, 1.0};
Point(57) = {0.063003, 0.742146, 0, 1.0};
Point(58) = {0.066751, 0.742367, 0, 1.0};
Point(59) = {0.069000, 0.742538, 0, 1.0};
Point(60) = {0.069749, 0.742657, 0, 1.0};
Point(61) = {-0.074997, -0.742854, 0, 1.0};
Point(62) = {-0.071995, -0.743112, 0, 1.0};
Point(63) = {-0.069743, -0.743306, 0, 1.0};
Point(64) = {-0.066740, -0.743566, 0, 1.0};
Point(65) = {-0.062987, -0.743887, 0, 1.0};
Point(66) = {-0.058483, -0.744277, 0, 1.0};
Point(67) = {-0.052479, -0.744793, 0, 1.0};
Point(68) = {-0.044972, -0.745434, 0, 1.0};
Point(69) = {-0.037466, -0.746071, 0, 1.0};
Point(70) = {-0.029960, -0.746723, 0, 1.0};
Point(71) = {-0.022454, -0.747376, 0, 1.0};
Point(72) = {-0.014948, -0.748013, 0, 1.0};
Point(73) = {-0.007442, -0.748635, 0, 1.0};
Point(74) = {0.000063, -0.749183, 0, 1.0};
Point(75) = {0.007568, -0.749640, 0, 1.0};
Point(76) = {0.015070, -0.749918, 0, 1.0};
Point(77) = {0.022571, -0.750000, 0, 1.0};
Point(78) = {0.030070, -0.749857, 0, 1.0};
Point(79) = {0.037567, -0.749490, 0, 1.0};
Point(80) = {0.045063, -0.748972, 0, 1.0};
Point(81) = {0.051058, -0.748378, 0, 1.0};
Point(82) = {0.056302, -0.747701, 0, 1.0};
Point(83) = {0.060796, -0.746985, 0, 1.0};
Point(84) = {0.064539, -0.746232, 0, 1.0};
Point(85) = {0.067533, -0.745485, 0, 1.0};
Point(86) = {0.069777, -0.744804, 0, 1.0};
Point(87) = {0.071272, -0.744281, 0, 1.0};
Point(88) = {0.072016, -0.743667, 0, 1.0};
Point(89) = {0.073513, -0.743278, 0, 1.0};
Point(90) = {0.074258, -0.742784, 0, 1.0};
Point(91) = {0.074997, -0.741502, 0, 1.0};
Point(92) = {0.074240, -0.740706, 0, 1.0};
Point(93) = {0.073487, -0.740410, 0, 1.0};
Point(94) = {0.071985, -0.740209, 0, 1.0};
Point(95) = {0.071232, -0.739901, 0, 1.0};
Point(96) = {0.069730, -0.739667, 0, 1.0};
Point(97) = {0.067477, -0.739372, 0, 1.0};
Point(98) = {0.064475, -0.739069, 0, 1.0};
Point(99) = {0.060722, -0.738781, 0, 1.0};
Point(100) = {0.056219, -0.738491, 0, 1.0};
Point(101) = {0.050967, -0.738239, 0, 1.0};
Point(102) = {0.044964, -0.738023, 0, 1.0};
Point(103) = {0.037463, -0.737850, 0, 1.0};
Point(104) = {0.029961, -0.737753, 0, 1.0};
Point(105) = {0.022461, -0.737775, 0, 1.0};
Point(106) = {0.014962, -0.737903, 0, 1.0};
Point(107) = {0.007464, -0.738136, 0, 1.0};
Point(108) = {-0.000033, -0.738473, 0, 1.0};
Point(109) = {-0.007530, -0.738871, 0, 1.0};
Point(110) = {-0.015026, -0.739313, 0, 1.0};
Point(111) = {-0.022523, -0.739756, 0, 1.0};
Point(112) = {-0.030019, -0.740199, 0, 1.0};
Point(113) = {-0.037515, -0.740641, 0, 1.0};
Point(114) = {-0.045012, -0.741084, 0, 1.0};
Point(115) = {-0.052508, -0.741526, 0, 1.0};
Point(116) = {-0.058505, -0.741880, 0, 1.0};
Point(117) = {-0.063003, -0.742146, 0, 1.0};
Point(118) = {-0.066751, -0.742367, 0, 1.0};
Point(119) = {-0.069000, -0.742538, 0, 1.0};
Point(120) = {-0.069749, -0.742657, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074461, 0.724911, 0, 1.0};
Point(2) = {0.074350, 0.724936, 0, 1.0};
Point(3) = {0.071944, 0.725410, 0, 1.0};
Point(4) = {0.069273, 0.726047, 0, 1.0};
Point(5) = {0.066295, 0.726756, 0, 1.0};
Point(6) = {0.063113, 0.727460, 0, 1.0};
Point(7) = {0.059653, 0.728296, 0, 1.0};
Point(8) = {0.055973, 0.729161, 0, 1.0};
Point(9) = {0.052062, 0.730151, 0, 1.0};
Point(10) = {0.047978, 0.731356, 0, 1.0};
Point(11) = {0.043678, 0.732334, 0, 1.0};
Point(12) = {0.039231, 0.733426, 0, 1.0};
Point(13) = {0.034645, 0.734697, 0, 1.0};
Point(14) = {0.029942, 0.736014, 0, 1.0};
Point(15) = {0.025107, 0.737254, 0, 1.0};
Point(16) = {0.020208, 0.738645, 0, 1.0};
Point(17) = {0.015243, 0.739981, 0, 1.0};
Point(18) = {0.010243, 0.741369, 0, 1.0};
Point(19) = {0.005187, 0.742637, 0, 1.0};
Point(20) = {0.000155, 0.743934, 0, 1.0};
Point(21) = {-0.004898, 0.745074, 0, 1.0};
Point(22) = {-0.009908, 0.746081, 0, 1.0};
Point(23) = {-0.014869, 0.746986, 0, 1.0};
Point(24) = {-0.019741, 0.747784, 0, 1.0};
Point(25) = {-0.024551, 0.748446, 0, 1.0};
Point(26) = {-0.029213, 0.748994, 0, 1.0};
Point(27) = {-0.033770, 0.749400, 0, 1.0};
Point(28) = {-0.038154, 0.749719, 0, 1.0};
Point(29) = {-0.042372, 0.749921, 0, 1.0};
Point(30) = {-0.046380, 0.750000, 0, 1.0};
Point(31) = {-0.050197, 0.749990, 0, 1.0};
Point(32) = {-0.053776, 0.749917, 0, 1.0};
Point(33) = {-0.057102, 0.749748, 0, 1.0};
Point(34) = {-0.060174, 0.749513, 0, 1.0};
Point(35) = {-0.062980, 0.749115, 0, 1.0};
Point(36) = {-0.065486, 0.748679, 0, 1.0};
Point(37) = {-0.067721, 0.748111, 0, 1.0};
Point(38) = {-0.069633, 0.747533, 0, 1.0};
Point(39) = {-0.071237, 0.746818, 0, 1.0};
Point(40) = {-0.072527, 0.745999, 0, 1.0};
Point(41) = {-0.073502, 0.745107, 0, 1.0};
Point(42) = {-0.074118, 0.744295, 0, 1.0};
Point(43) = {-0.074364, 0.743658, 0, 1.0};
Point(44) = {-0.074291, 0.742979, 0, 1.0};
Point(45) = {-0.073904, 0.742036, 0, 1.0};
Point(46) = {-0.073193, 0.740923, 0, 1.0};
Point(47) = {-0.072157, 0.739799, 0, 1.0};
Point(48) = {-0.070791, 0.738695, 0, 1.0};
Point(49) = {-0.069093, 0.737644, 0, 1.0};
Point(50) = {-0.067079, 0.736519, 0, 1.0};
Point(51) = {-0.064771, 0.735452, 0, 1.0};
Point(52) = {-0.062162, 0.734345, 0, 1.0};
Point(53) = {-0.059254, 0.733327, 0, 1.0};
Point(54) = {-0.056084, 0.732306, 0, 1.0};
Point(55) = {-0.052644, 0.731313, 0, 1.0};
Point(56) = {-0.048959, 0.730320, 0, 1.0};
Point(57) = {-0.045066, 0.729364, 0, 1.0};
Point(58) = {-0.040939, 0.728472, 0, 1.0};
Point(59) = {-0.036620, 0.727651, 0, 1.0};
Point(60) = {-0.032112, 0.726869, 0, 1.0};
Point(61) = {-0.027466, 0.726197, 0, 1.0};
Point(62) = {-0.022649, 0.725597, 0, 1.0};
Point(63) = {-0.017735, 0.725113, 0, 1.0};
Point(64) = {-0.012708, 0.724709, 0, 1.0};
Point(65) = {-0.007608, 0.724391, 0, 1.0};
Point(66) = {-0.002433, 0.724191, 0, 1.0};
Point(67) = {0.002764, 0.724148, 0, 1.0};
Point(68) = {0.007977, 0.724070, 0, 1.0};
Point(69) = {0.013165, 0.724124, 0, 1.0};
Point(70) = {0.018307, 0.724135, 0, 1.0};
Point(71) = {0.023398, 0.724217, 0, 1.0};
Point(72) = {0.028390, 0.724169, 0, 1.0};
Point(73) = {0.033273, 0.724230, 0, 1.0};
Point(74) = {0.038032, 0.724276, 0, 1.0};
Point(75) = {0.042611, 0.724186, 0, 1.0};
Point(76) = {0.047017, 0.724023, 0, 1.0};
Point(77) = {0.051274, 0.724134, 0, 1.0};
Point(78) = {0.055308, 0.724084, 0, 1.0};
Point(79) = {0.059086, 0.723971, 0, 1.0};
Point(80) = {0.062645, 0.723887, 0, 1.0};
Point(81) = {0.065901, 0.723748, 0, 1.0};
Point(82) = {0.068961, 0.723665, 0, 1.0};
Point(83) = {0.071706, 0.723593, 0, 1.0};
Point(84) = {0.074153, 0.723431, 0, 1.0};
Point(85) = {0.074267, 0.723427, 0, 1.0};
Point(86) = {-0.074461, -0.724911, 0, 1.0};
Point(87) = {-0.074350, -0.724936, 0, 1.0};
Point(88) = {-0.071944, -0.725410, 0, 1.0};
Point(89) = {-0.069273, -0.726047, 0, 1.0};
Point(90) = {-0.066295, -0.726756, 0, 1.0};
Point(91) = {-0.063113, -0.727460, 0, 1.0};
Point(92) = {-0.059653, -0.728296, 0, 1.0};
Point(93) = {-0.055973, -0.729161, 0, 1.0};
Point(94) = {-0.052062, -0.730151, 0, 1.0};
Point(95) = {-0.047978, -0.731356, 0, 1.0};
Point(96) = {-0.043678, -0.732334, 0, 1.0};
Point(97) = {-0.039231, -0.733426, 0, 1.0};
Point(98) = {-0.034645, -0.734697, 0, 1.0};
Point(99) = {-0.029942, -0.736014, 0, 1.0};
Point(100) = {-0.025107, -0.737254, 0, 1.0};
Point(101) = {-0.020208, -0.738645, 0, 1.0};
Point(102) = {-0.015243, -0.739981, 0, 1.0};
Point(103) = {-0.010243, -0.741369, 0, 1.0};
Point(104) = {-0.005187, -0.742637, 0, 1.0};
Point(105) = {-0.000155, -0.743934, 0, 1.0};
Point(106) = {0.004898, -0.745074, 0, 1.0};
Point(107) = {0.009908, -0.746081, 0, 1.0};
Point(108) = {0.014869, -0.746986, 0, 1.0};
Point(109) = {0.019741, -0.747784, 0, 1.0};
Point(110) = {0.024551, -0.748446, 0, 1.0};
Point(111) = {0.029213, -0.748994, 0, 1.0};
Point(112) = {0.033770, -0.749400, 0, 1.0};
Point(113) = {0.038154, -0.749719, 0, 1.0};
Point(114) = {0.042372, -0.749921, 0, 1.0};
Point(115) = {0.046380, -0.750000, 0, 1.0};
Point(116) = {0.050197, -0.749990, 0, 1.0};
Point(117) = {0.053776, -0.749917, 0, 1.0};
Point(118) = {0.057102, -0.749748, 0, 1.0};
Point(119) = {0.060174, -0.749513, 0, 1.0};
Point(120) = {0.062980, -0.749115, 0, 1.0};
Point(121) = {0.065486, -0.748679, 0, 1.0};
Point(122) = {0.067721, -0.748111, 0, 1.0};
Point(123) = {0.069633, -0.747533, 0, 1.0};
Point(124) = {0.071237, -0.746818, 0, 1.0};
Point(125) = {0.072527, -0.745999, 0, 1.0};
Point(126) = {0.073502, -0.745107, 0, 1.0};
Point(127) = {0.074118, -0.744295, 0, 1.0};
Point(128) = {0.074364, -0.743658, 0, 1.0};
Point(129) = {0.074291, -0.742979, 0, 1.0};
Point(130) = {0.073904, -0.742036, 0, 1.0};
Point(131) = {0.073193, -0.740923, 0, 1.0};
Point(132) = {0.072157, -0.739799, 0, 1.0};
Point(133) = {0.070791, -0.738695, 0, 1.0};
Point(134) = {0.069093, -0.737644, 0, 1.0};
Point(135) = {0.067079, -0.736519, 0, 1.0};
Point(136) = {0.064771, -0.735452, 0, 1.0};
Point(137) = {0.062162, -0.734345, 0, 1.0};
Point(138) = {0.059254, -0.733327, 0, 1.0};
Point(139) = {0.056084, -0.732306, 0, 1.0};
Point(140) = {0.052644, -0.731313, 0, 1.0};
Point(141) = {0.048959, -0.730320, 0, 1.0};
Point(142) = {0.045066, -0.729364, 0, 1.0};
Point(143) = {0.040939, -0.728472, 0, 1.0};
Point(144) = {0.036620, -0.727651, 0, 1.0};
Point(145) = {0.032112, -0.726869, 0, 1.0};
Point(146) = {0.027466, -0.726197, 0, 1.0};
Point(147) = {0.022649, -0.725597, 0, 1.0};
Point(148) = {0.017735, -0.725113, 0, 1.0};
Point(149) = {0.012708, -0.724709, 0, 1.0};
Point(150) = {0.007608, -0.724391, 0, 1.0};
Point(151) = {0.002433, -0.724191, 0, 1.0};
Point(152) = {-0.002764, -0.724148, 0, 1.0};
Point(153) = {-0.007977, -0.724070, 0, 1.0};
Point(154) = {-0.013165, -0.724124, 0, 1.0};
Point(155) = {-0.018307, -0.724135, 0, 1.0};
Point(156) = {-0.023398, -0.724217, 0, 1.0};
Point(157) = {-0.028390, -0.724169, 0, 1.0};
Point(158) = {-0.033273, -0.724230, 0, 1.0};
Point(159) = {-0.038032, -0.724276, 0, 1.0};
Point(160) = {-0.042611, -0.724186, 0, 1.0};
Point(161) = {-0.047017, -0.724023, 0, 1.0};
Point(162) = {-0.051274, -0.724134, 0, 1.0};
Point(163) = {-0.055308, -0.724084, 0, 1.0};
Point(164) = {-0.059086, -0.723971, 0, 1.0};
Point(165) = {-0.062645, -0.723887, 0, 1.0};
Point(166) = {-0.065901, -0.723748, 0, 1.0};
Point(167) = {-0.068961, -0.723665, 0, 1.0};
Point(168) = {-0.071706, -0.723593, 0, 1.0};
Point(169) = {-0.074153, -0.723431, 0, 1.0};
Point(170) = {-0.074267, -0.723427, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
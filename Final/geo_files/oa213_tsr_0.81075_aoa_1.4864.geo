SetFactory("OpenCASCADE");

Point(1) = {0.074972, 0.738771, 0, 1.0};
Point(2) = {0.073968, 0.738702, 0, 1.0};
Point(3) = {0.072968, 0.738679, 0, 1.0};
Point(4) = {0.070969, 0.738752, 0, 1.0};
Point(5) = {0.068973, 0.738956, 0, 1.0};
Point(6) = {0.066979, 0.739262, 0, 1.0};
Point(7) = {0.064986, 0.739644, 0, 1.0};
Point(8) = {0.063991, 0.739857, 0, 1.0};
Point(9) = {0.062000, 0.740316, 0, 1.0};
Point(10) = {0.060010, 0.740806, 0, 1.0};
Point(11) = {0.057523, 0.741444, 0, 1.0};
Point(12) = {0.055036, 0.742092, 0, 1.0};
Point(13) = {0.052549, 0.742739, 0, 1.0};
Point(14) = {0.050061, 0.743373, 0, 1.0};
Point(15) = {0.047574, 0.743988, 0, 1.0};
Point(16) = {0.045086, 0.744580, 0, 1.0};
Point(17) = {0.042597, 0.745144, 0, 1.0};
Point(18) = {0.040108, 0.745680, 0, 1.0};
Point(19) = {0.037618, 0.746186, 0, 1.0};
Point(20) = {0.035127, 0.746663, 0, 1.0};
Point(21) = {0.032636, 0.747111, 0, 1.0};
Point(22) = {0.030145, 0.747530, 0, 1.0};
Point(23) = {0.027652, 0.747920, 0, 1.0};
Point(24) = {0.025159, 0.748282, 0, 1.0};
Point(25) = {0.022666, 0.748613, 0, 1.0};
Point(26) = {0.020171, 0.748911, 0, 1.0};
Point(27) = {0.017676, 0.749175, 0, 1.0};
Point(28) = {0.015181, 0.749402, 0, 1.0};
Point(29) = {0.012684, 0.749593, 0, 1.0};
Point(30) = {0.010187, 0.749746, 0, 1.0};
Point(31) = {0.007689, 0.749863, 0, 1.0};
Point(32) = {0.005190, 0.749946, 0, 1.0};
Point(33) = {0.002691, 0.749992, 0, 1.0};
Point(34) = {0.000190, 0.750000, 0, 1.0};
Point(35) = {-0.002311, 0.749963, 0, 1.0};
Point(36) = {-0.004813, 0.749874, 0, 1.0};
Point(37) = {-0.007317, 0.749717, 0, 1.0};
Point(38) = {-0.009823, 0.749474, 0, 1.0};
Point(39) = {-0.012331, 0.749111, 0, 1.0};
Point(40) = {-0.015345, 0.748444, 0, 1.0};
Point(41) = {-0.016352, 0.748141, 0, 1.0};
Point(42) = {-0.017360, 0.747783, 0, 1.0};
Point(43) = {-0.018369, 0.747354, 0, 1.0};
Point(44) = {-0.019380, 0.746839, 0, 1.0};
Point(45) = {-0.020292, 0.746288, 0, 1.0};
Point(46) = {-0.020900, 0.745871, 0, 1.0};
Point(47) = {-0.021307, 0.745571, 0, 1.0};
Point(48) = {-0.021917, 0.745091, 0, 1.0};
Point(49) = {-0.022630, 0.744487, 0, 1.0};
Point(50) = {-0.023344, 0.743835, 0, 1.0};
Point(51) = {-0.023957, 0.743212, 0, 1.0};
Point(52) = {-0.024213, 0.742917, 0, 1.0};
Point(53) = {-0.024470, 0.742576, 0, 1.0};
Point(54) = {-0.024803, 0.741979, 0, 1.0};
Point(55) = {-0.024909, 0.741687, 0, 1.0};
Point(56) = {-0.024963, 0.741469, 0, 1.0};
Point(57) = {-0.025000, 0.741155, 0, 1.0};
Point(58) = {-0.024976, 0.740887, 0, 1.0};
Point(59) = {-0.024929, 0.740742, 0, 1.0};
Point(60) = {-0.024832, 0.740577, 0, 1.0};
Point(61) = {-0.024518, 0.740290, 0, 1.0};
Point(62) = {-0.024271, 0.740145, 0, 1.0};
Point(63) = {-0.024023, 0.740027, 0, 1.0};
Point(64) = {-0.023428, 0.739805, 0, 1.0};
Point(65) = {-0.022732, 0.739608, 0, 1.0};
Point(66) = {-0.022035, 0.739448, 0, 1.0};
Point(67) = {-0.021437, 0.739333, 0, 1.0};
Point(68) = {-0.021039, 0.739263, 0, 1.0};
Point(69) = {-0.020441, 0.739169, 0, 1.0};
Point(70) = {-0.019543, 0.739046, 0, 1.0};
Point(71) = {-0.018545, 0.738926, 0, 1.0};
Point(72) = {-0.017547, 0.738820, 0, 1.0};
Point(73) = {-0.016549, 0.738724, 0, 1.0};
Point(74) = {-0.015551, 0.738635, 0, 1.0};
Point(75) = {-0.012555, 0.738400, 0, 1.0};
Point(76) = {-0.010058, 0.738228, 0, 1.0};
Point(77) = {-0.007561, 0.738069, 0, 1.0};
Point(78) = {-0.005064, 0.737920, 0, 1.0};
Point(79) = {-0.002566, 0.737779, 0, 1.0};
Point(80) = {-0.000069, 0.737646, 0, 1.0};
Point(81) = {0.002429, 0.737521, 0, 1.0};
Point(82) = {0.004927, 0.737405, 0, 1.0};
Point(83) = {0.007426, 0.737298, 0, 1.0};
Point(84) = {0.009924, 0.737198, 0, 1.0};
Point(85) = {0.012423, 0.737107, 0, 1.0};
Point(86) = {0.014921, 0.737024, 0, 1.0};
Point(87) = {0.017420, 0.736947, 0, 1.0};
Point(88) = {0.019919, 0.736875, 0, 1.0};
Point(89) = {0.022418, 0.736810, 0, 1.0};
Point(90) = {0.024918, 0.736750, 0, 1.0};
Point(91) = {0.027417, 0.736698, 0, 1.0};
Point(92) = {0.029917, 0.736655, 0, 1.0};
Point(93) = {0.032417, 0.736624, 0, 1.0};
Point(94) = {0.034917, 0.736609, 0, 1.0};
Point(95) = {0.037417, 0.736612, 0, 1.0};
Point(96) = {0.039918, 0.736637, 0, 1.0};
Point(97) = {0.042420, 0.736685, 0, 1.0};
Point(98) = {0.044922, 0.736755, 0, 1.0};
Point(99) = {0.047424, 0.736847, 0, 1.0};
Point(100) = {0.049927, 0.736959, 0, 1.0};
Point(101) = {0.052430, 0.737088, 0, 1.0};
Point(102) = {0.054934, 0.737232, 0, 1.0};
Point(103) = {0.057438, 0.737387, 0, 1.0};
Point(104) = {0.059941, 0.737549, 0, 1.0};
Point(105) = {0.061945, 0.737681, 0, 1.0};
Point(106) = {0.063948, 0.737813, 0, 1.0};
Point(107) = {0.064949, 0.737877, 0, 1.0};
Point(108) = {0.066952, 0.738000, 0, 1.0};
Point(109) = {0.068955, 0.738113, 0, 1.0};
Point(110) = {0.070958, 0.738213, 0, 1.0};
Point(111) = {0.072960, 0.738293, 0, 1.0};
Point(112) = {0.073960, 0.738325, 0, 1.0};
Point(113) = {0.074961, 0.738350, 0, 1.0};
Point(114) = {-0.074972, -0.738771, 0, 1.0};
Point(115) = {-0.073968, -0.738702, 0, 1.0};
Point(116) = {-0.072968, -0.738679, 0, 1.0};
Point(117) = {-0.070969, -0.738752, 0, 1.0};
Point(118) = {-0.068973, -0.738956, 0, 1.0};
Point(119) = {-0.066979, -0.739262, 0, 1.0};
Point(120) = {-0.064986, -0.739644, 0, 1.0};
Point(121) = {-0.063991, -0.739857, 0, 1.0};
Point(122) = {-0.062000, -0.740316, 0, 1.0};
Point(123) = {-0.060010, -0.740806, 0, 1.0};
Point(124) = {-0.057523, -0.741444, 0, 1.0};
Point(125) = {-0.055036, -0.742092, 0, 1.0};
Point(126) = {-0.052549, -0.742739, 0, 1.0};
Point(127) = {-0.050061, -0.743373, 0, 1.0};
Point(128) = {-0.047574, -0.743988, 0, 1.0};
Point(129) = {-0.045086, -0.744580, 0, 1.0};
Point(130) = {-0.042597, -0.745144, 0, 1.0};
Point(131) = {-0.040108, -0.745680, 0, 1.0};
Point(132) = {-0.037618, -0.746186, 0, 1.0};
Point(133) = {-0.035127, -0.746663, 0, 1.0};
Point(134) = {-0.032636, -0.747111, 0, 1.0};
Point(135) = {-0.030145, -0.747530, 0, 1.0};
Point(136) = {-0.027652, -0.747920, 0, 1.0};
Point(137) = {-0.025159, -0.748282, 0, 1.0};
Point(138) = {-0.022666, -0.748613, 0, 1.0};
Point(139) = {-0.020171, -0.748911, 0, 1.0};
Point(140) = {-0.017676, -0.749175, 0, 1.0};
Point(141) = {-0.015181, -0.749402, 0, 1.0};
Point(142) = {-0.012684, -0.749593, 0, 1.0};
Point(143) = {-0.010187, -0.749746, 0, 1.0};
Point(144) = {-0.007689, -0.749863, 0, 1.0};
Point(145) = {-0.005190, -0.749946, 0, 1.0};
Point(146) = {-0.002691, -0.749992, 0, 1.0};
Point(147) = {-0.000190, -0.750000, 0, 1.0};
Point(148) = {0.002311, -0.749963, 0, 1.0};
Point(149) = {0.004813, -0.749874, 0, 1.0};
Point(150) = {0.007317, -0.749717, 0, 1.0};
Point(151) = {0.009823, -0.749474, 0, 1.0};
Point(152) = {0.012331, -0.749111, 0, 1.0};
Point(153) = {0.015345, -0.748444, 0, 1.0};
Point(154) = {0.016352, -0.748141, 0, 1.0};
Point(155) = {0.017360, -0.747783, 0, 1.0};
Point(156) = {0.018369, -0.747354, 0, 1.0};
Point(157) = {0.019380, -0.746839, 0, 1.0};
Point(158) = {0.020292, -0.746288, 0, 1.0};
Point(159) = {0.020900, -0.745871, 0, 1.0};
Point(160) = {0.021307, -0.745571, 0, 1.0};
Point(161) = {0.021917, -0.745091, 0, 1.0};
Point(162) = {0.022630, -0.744487, 0, 1.0};
Point(163) = {0.023344, -0.743835, 0, 1.0};
Point(164) = {0.023957, -0.743212, 0, 1.0};
Point(165) = {0.024213, -0.742917, 0, 1.0};
Point(166) = {0.024470, -0.742576, 0, 1.0};
Point(167) = {0.024803, -0.741979, 0, 1.0};
Point(168) = {0.024909, -0.741687, 0, 1.0};
Point(169) = {0.024963, -0.741469, 0, 1.0};
Point(170) = {0.025000, -0.741155, 0, 1.0};
Point(171) = {0.024976, -0.740887, 0, 1.0};
Point(172) = {0.024929, -0.740742, 0, 1.0};
Point(173) = {0.024832, -0.740577, 0, 1.0};
Point(174) = {0.024518, -0.740290, 0, 1.0};
Point(175) = {0.024271, -0.740145, 0, 1.0};
Point(176) = {0.024023, -0.740027, 0, 1.0};
Point(177) = {0.023428, -0.739805, 0, 1.0};
Point(178) = {0.022732, -0.739608, 0, 1.0};
Point(179) = {0.022035, -0.739448, 0, 1.0};
Point(180) = {0.021437, -0.739333, 0, 1.0};
Point(181) = {0.021039, -0.739263, 0, 1.0};
Point(182) = {0.020441, -0.739169, 0, 1.0};
Point(183) = {0.019543, -0.739046, 0, 1.0};
Point(184) = {0.018545, -0.738926, 0, 1.0};
Point(185) = {0.017547, -0.738820, 0, 1.0};
Point(186) = {0.016549, -0.738724, 0, 1.0};
Point(187) = {0.015551, -0.738635, 0, 1.0};
Point(188) = {0.012555, -0.738400, 0, 1.0};
Point(189) = {0.010058, -0.738228, 0, 1.0};
Point(190) = {0.007561, -0.738069, 0, 1.0};
Point(191) = {0.005064, -0.737920, 0, 1.0};
Point(192) = {0.002566, -0.737779, 0, 1.0};
Point(193) = {0.000069, -0.737646, 0, 1.0};
Point(194) = {-0.002429, -0.737521, 0, 1.0};
Point(195) = {-0.004927, -0.737405, 0, 1.0};
Point(196) = {-0.007426, -0.737298, 0, 1.0};
Point(197) = {-0.009924, -0.737198, 0, 1.0};
Point(198) = {-0.012423, -0.737107, 0, 1.0};
Point(199) = {-0.014921, -0.737024, 0, 1.0};
Point(200) = {-0.017420, -0.736947, 0, 1.0};
Point(201) = {-0.019919, -0.736875, 0, 1.0};
Point(202) = {-0.022418, -0.736810, 0, 1.0};
Point(203) = {-0.024918, -0.736750, 0, 1.0};
Point(204) = {-0.027417, -0.736698, 0, 1.0};
Point(205) = {-0.029917, -0.736655, 0, 1.0};
Point(206) = {-0.032417, -0.736624, 0, 1.0};
Point(207) = {-0.034917, -0.736609, 0, 1.0};
Point(208) = {-0.037417, -0.736612, 0, 1.0};
Point(209) = {-0.039918, -0.736637, 0, 1.0};
Point(210) = {-0.042420, -0.736685, 0, 1.0};
Point(211) = {-0.044922, -0.736755, 0, 1.0};
Point(212) = {-0.047424, -0.736847, 0, 1.0};
Point(213) = {-0.049927, -0.736959, 0, 1.0};
Point(214) = {-0.052430, -0.737088, 0, 1.0};
Point(215) = {-0.054934, -0.737232, 0, 1.0};
Point(216) = {-0.057438, -0.737387, 0, 1.0};
Point(217) = {-0.059941, -0.737549, 0, 1.0};
Point(218) = {-0.061945, -0.737681, 0, 1.0};
Point(219) = {-0.063948, -0.737813, 0, 1.0};
Point(220) = {-0.064949, -0.737877, 0, 1.0};
Point(221) = {-0.066952, -0.738000, 0, 1.0};
Point(222) = {-0.068955, -0.738113, 0, 1.0};
Point(223) = {-0.070958, -0.738213, 0, 1.0};
Point(224) = {-0.072960, -0.738293, 0, 1.0};
Point(225) = {-0.073960, -0.738325, 0, 1.0};
Point(226) = {-0.074961, -0.738350, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:33};
Spline(2) = {33:81};
Spline(3) = {81:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:146};
Spline(6) = {146:194};
Spline(7) = {194:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
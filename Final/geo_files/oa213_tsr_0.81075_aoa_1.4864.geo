SetFactory("OpenCASCADE");

Point(1) = {0.074983, 0.733157, 0, 1.0};
Point(2) = {0.073478, 0.733053, 0, 1.0};
Point(3) = {0.071977, 0.733018, 0, 1.0};
Point(4) = {0.068979, 0.733127, 0, 1.0};
Point(5) = {0.065984, 0.733434, 0, 1.0};
Point(6) = {0.062993, 0.733892, 0, 1.0};
Point(7) = {0.060005, 0.734466, 0, 1.0};
Point(8) = {0.058511, 0.734786, 0, 1.0};
Point(9) = {0.055525, 0.735475, 0, 1.0};
Point(10) = {0.052540, 0.736210, 0, 1.0};
Point(11) = {0.048809, 0.737166, 0, 1.0};
Point(12) = {0.045079, 0.738138, 0, 1.0};
Point(13) = {0.041348, 0.739108, 0, 1.0};
Point(14) = {0.037617, 0.740059, 0, 1.0};
Point(15) = {0.033886, 0.740982, 0, 1.0};
Point(16) = {0.030154, 0.741869, 0, 1.0};
Point(17) = {0.026421, 0.742716, 0, 1.0};
Point(18) = {0.022687, 0.743520, 0, 1.0};
Point(19) = {0.018952, 0.744280, 0, 1.0};
Point(20) = {0.015216, 0.744995, 0, 1.0};
Point(21) = {0.011480, 0.745667, 0, 1.0};
Point(22) = {0.007742, 0.746295, 0, 1.0};
Point(23) = {0.004003, 0.746881, 0, 1.0};
Point(24) = {0.000264, 0.747423, 0, 1.0};
Point(25) = {-0.003476, 0.747919, 0, 1.0};
Point(26) = {-0.007218, 0.748367, 0, 1.0};
Point(27) = {-0.010960, 0.748763, 0, 1.0};
Point(28) = {-0.014704, 0.749104, 0, 1.0};
Point(29) = {-0.018449, 0.749389, 0, 1.0};
Point(30) = {-0.022194, 0.749619, 0, 1.0};
Point(31) = {-0.025942, 0.749795, 0, 1.0};
Point(32) = {-0.029690, 0.749919, 0, 1.0};
Point(33) = {-0.033439, 0.749988, 0, 1.0};
Point(34) = {-0.037189, 0.750000, 0, 1.0};
Point(35) = {-0.040941, 0.749945, 0, 1.0};
Point(36) = {-0.044695, 0.749811, 0, 1.0};
Point(37) = {-0.048451, 0.749576, 0, 1.0};
Point(38) = {-0.052209, 0.749211, 0, 1.0};
Point(39) = {-0.055971, 0.748667, 0, 1.0};
Point(40) = {-0.060493, 0.747667, 0, 1.0};
Point(41) = {-0.062003, 0.747212, 0, 1.0};
Point(42) = {-0.063514, 0.746674, 0, 1.0};
Point(43) = {-0.065028, 0.746031, 0, 1.0};
Point(44) = {-0.066545, 0.745259, 0, 1.0};
Point(45) = {-0.067912, 0.744433, 0, 1.0};
Point(46) = {-0.068825, 0.743807, 0, 1.0};
Point(47) = {-0.069435, 0.743357, 0, 1.0};
Point(48) = {-0.070350, 0.742636, 0, 1.0};
Point(49) = {-0.071419, 0.741731, 0, 1.0};
Point(50) = {-0.072490, 0.740752, 0, 1.0};
Point(51) = {-0.073410, 0.739818, 0, 1.0};
Point(52) = {-0.073794, 0.739376, 0, 1.0};
Point(53) = {-0.074180, 0.738865, 0, 1.0};
Point(54) = {-0.074679, 0.737969, 0, 1.0};
Point(55) = {-0.074838, 0.737531, 0, 1.0};
Point(56) = {-0.074920, 0.737204, 0, 1.0};
Point(57) = {-0.074975, 0.736732, 0, 1.0};
Point(58) = {-0.074938, 0.736331, 0, 1.0};
Point(59) = {-0.074868, 0.736114, 0, 1.0};
Point(60) = {-0.074723, 0.735865, 0, 1.0};
Point(61) = {-0.074252, 0.735436, 0, 1.0};
Point(62) = {-0.073881, 0.735217, 0, 1.0};
Point(63) = {-0.073510, 0.735040, 0, 1.0};
Point(64) = {-0.072617, 0.734708, 0, 1.0};
Point(65) = {-0.071573, 0.734412, 0, 1.0};
Point(66) = {-0.070528, 0.734173, 0, 1.0};
Point(67) = {-0.069631, 0.733999, 0, 1.0};
Point(68) = {-0.069033, 0.733895, 0, 1.0};
Point(69) = {-0.068136, 0.733754, 0, 1.0};
Point(70) = {-0.066789, 0.733569, 0, 1.0};
Point(71) = {-0.065293, 0.733389, 0, 1.0};
Point(72) = {-0.063796, 0.733230, 0, 1.0};
Point(73) = {-0.062299, 0.733085, 0, 1.0};
Point(74) = {-0.060801, 0.732952, 0, 1.0};
Point(75) = {-0.056308, 0.732600, 0, 1.0};
Point(76) = {-0.052562, 0.732342, 0, 1.0};
Point(77) = {-0.048817, 0.732103, 0, 1.0};
Point(78) = {-0.045070, 0.731879, 0, 1.0};
Point(79) = {-0.041324, 0.731668, 0, 1.0};
Point(80) = {-0.037578, 0.731469, 0, 1.0};
Point(81) = {-0.033831, 0.731282, 0, 1.0};
Point(82) = {-0.030084, 0.731108, 0, 1.0};
Point(83) = {-0.026336, 0.730946, 0, 1.0};
Point(84) = {-0.022589, 0.730798, 0, 1.0};
Point(85) = {-0.018841, 0.730661, 0, 1.0};
Point(86) = {-0.015093, 0.730536, 0, 1.0};
Point(87) = {-0.011344, 0.730420, 0, 1.0};
Point(88) = {-0.007596, 0.730313, 0, 1.0};
Point(89) = {-0.003847, 0.730214, 0, 1.0};
Point(90) = {-0.000098, 0.730125, 0, 1.0};
Point(91) = {0.003651, 0.730047, 0, 1.0};
Point(92) = {0.007400, 0.729982, 0, 1.0};
Point(93) = {0.011150, 0.729936, 0, 1.0};
Point(94) = {0.014900, 0.729913, 0, 1.0};
Point(95) = {0.018651, 0.729918, 0, 1.0};
Point(96) = {0.022403, 0.729956, 0, 1.0};
Point(97) = {0.026155, 0.730027, 0, 1.0};
Point(98) = {0.029908, 0.730133, 0, 1.0};
Point(99) = {0.033662, 0.730270, 0, 1.0};
Point(100) = {0.037416, 0.730438, 0, 1.0};
Point(101) = {0.041171, 0.730632, 0, 1.0};
Point(102) = {0.044926, 0.730848, 0, 1.0};
Point(103) = {0.048681, 0.731080, 0, 1.0};
Point(104) = {0.052437, 0.731324, 0, 1.0};
Point(105) = {0.055442, 0.731522, 0, 1.0};
Point(106) = {0.058447, 0.731719, 0, 1.0};
Point(107) = {0.059949, 0.731815, 0, 1.0};
Point(108) = {0.062954, 0.732000, 0, 1.0};
Point(109) = {0.065958, 0.732170, 0, 1.0};
Point(110) = {0.068962, 0.732319, 0, 1.0};
Point(111) = {0.071965, 0.732439, 0, 1.0};
Point(112) = {0.073466, 0.732487, 0, 1.0};
Point(113) = {0.074967, 0.732525, 0, 1.0};
Point(114) = {-0.074983, -0.733157, 0, 1.0};
Point(115) = {-0.073478, -0.733053, 0, 1.0};
Point(116) = {-0.071977, -0.733018, 0, 1.0};
Point(117) = {-0.068979, -0.733127, 0, 1.0};
Point(118) = {-0.065984, -0.733434, 0, 1.0};
Point(119) = {-0.062993, -0.733892, 0, 1.0};
Point(120) = {-0.060005, -0.734466, 0, 1.0};
Point(121) = {-0.058511, -0.734786, 0, 1.0};
Point(122) = {-0.055525, -0.735475, 0, 1.0};
Point(123) = {-0.052540, -0.736210, 0, 1.0};
Point(124) = {-0.048809, -0.737166, 0, 1.0};
Point(125) = {-0.045079, -0.738138, 0, 1.0};
Point(126) = {-0.041348, -0.739108, 0, 1.0};
Point(127) = {-0.037617, -0.740059, 0, 1.0};
Point(128) = {-0.033886, -0.740982, 0, 1.0};
Point(129) = {-0.030154, -0.741869, 0, 1.0};
Point(130) = {-0.026421, -0.742716, 0, 1.0};
Point(131) = {-0.022687, -0.743520, 0, 1.0};
Point(132) = {-0.018952, -0.744280, 0, 1.0};
Point(133) = {-0.015216, -0.744995, 0, 1.0};
Point(134) = {-0.011480, -0.745667, 0, 1.0};
Point(135) = {-0.007742, -0.746295, 0, 1.0};
Point(136) = {-0.004003, -0.746881, 0, 1.0};
Point(137) = {-0.000264, -0.747423, 0, 1.0};
Point(138) = {0.003476, -0.747919, 0, 1.0};
Point(139) = {0.007218, -0.748367, 0, 1.0};
Point(140) = {0.010960, -0.748763, 0, 1.0};
Point(141) = {0.014704, -0.749104, 0, 1.0};
Point(142) = {0.018449, -0.749389, 0, 1.0};
Point(143) = {0.022194, -0.749619, 0, 1.0};
Point(144) = {0.025942, -0.749795, 0, 1.0};
Point(145) = {0.029690, -0.749919, 0, 1.0};
Point(146) = {0.033439, -0.749988, 0, 1.0};
Point(147) = {0.037189, -0.750000, 0, 1.0};
Point(148) = {0.040941, -0.749945, 0, 1.0};
Point(149) = {0.044695, -0.749811, 0, 1.0};
Point(150) = {0.048451, -0.749576, 0, 1.0};
Point(151) = {0.052209, -0.749211, 0, 1.0};
Point(152) = {0.055971, -0.748667, 0, 1.0};
Point(153) = {0.060493, -0.747667, 0, 1.0};
Point(154) = {0.062003, -0.747212, 0, 1.0};
Point(155) = {0.063514, -0.746674, 0, 1.0};
Point(156) = {0.065028, -0.746031, 0, 1.0};
Point(157) = {0.066545, -0.745259, 0, 1.0};
Point(158) = {0.067912, -0.744433, 0, 1.0};
Point(159) = {0.068825, -0.743807, 0, 1.0};
Point(160) = {0.069435, -0.743357, 0, 1.0};
Point(161) = {0.070350, -0.742636, 0, 1.0};
Point(162) = {0.071419, -0.741731, 0, 1.0};
Point(163) = {0.072490, -0.740752, 0, 1.0};
Point(164) = {0.073410, -0.739818, 0, 1.0};
Point(165) = {0.073794, -0.739376, 0, 1.0};
Point(166) = {0.074180, -0.738865, 0, 1.0};
Point(167) = {0.074679, -0.737969, 0, 1.0};
Point(168) = {0.074838, -0.737531, 0, 1.0};
Point(169) = {0.074920, -0.737204, 0, 1.0};
Point(170) = {0.074975, -0.736732, 0, 1.0};
Point(171) = {0.074938, -0.736331, 0, 1.0};
Point(172) = {0.074868, -0.736114, 0, 1.0};
Point(173) = {0.074723, -0.735865, 0, 1.0};
Point(174) = {0.074252, -0.735436, 0, 1.0};
Point(175) = {0.073881, -0.735217, 0, 1.0};
Point(176) = {0.073510, -0.735040, 0, 1.0};
Point(177) = {0.072617, -0.734708, 0, 1.0};
Point(178) = {0.071573, -0.734412, 0, 1.0};
Point(179) = {0.070528, -0.734173, 0, 1.0};
Point(180) = {0.069631, -0.733999, 0, 1.0};
Point(181) = {0.069033, -0.733895, 0, 1.0};
Point(182) = {0.068136, -0.733754, 0, 1.0};
Point(183) = {0.066789, -0.733569, 0, 1.0};
Point(184) = {0.065293, -0.733389, 0, 1.0};
Point(185) = {0.063796, -0.733230, 0, 1.0};
Point(186) = {0.062299, -0.733085, 0, 1.0};
Point(187) = {0.060801, -0.732952, 0, 1.0};
Point(188) = {0.056308, -0.732600, 0, 1.0};
Point(189) = {0.052562, -0.732342, 0, 1.0};
Point(190) = {0.048817, -0.732103, 0, 1.0};
Point(191) = {0.045070, -0.731879, 0, 1.0};
Point(192) = {0.041324, -0.731668, 0, 1.0};
Point(193) = {0.037578, -0.731469, 0, 1.0};
Point(194) = {0.033831, -0.731282, 0, 1.0};
Point(195) = {0.030084, -0.731108, 0, 1.0};
Point(196) = {0.026336, -0.730946, 0, 1.0};
Point(197) = {0.022589, -0.730798, 0, 1.0};
Point(198) = {0.018841, -0.730661, 0, 1.0};
Point(199) = {0.015093, -0.730536, 0, 1.0};
Point(200) = {0.011344, -0.730420, 0, 1.0};
Point(201) = {0.007596, -0.730313, 0, 1.0};
Point(202) = {0.003847, -0.730214, 0, 1.0};
Point(203) = {0.000098, -0.730125, 0, 1.0};
Point(204) = {-0.003651, -0.730047, 0, 1.0};
Point(205) = {-0.007400, -0.729982, 0, 1.0};
Point(206) = {-0.011150, -0.729936, 0, 1.0};
Point(207) = {-0.014900, -0.729913, 0, 1.0};
Point(208) = {-0.018651, -0.729918, 0, 1.0};
Point(209) = {-0.022403, -0.729956, 0, 1.0};
Point(210) = {-0.026155, -0.730027, 0, 1.0};
Point(211) = {-0.029908, -0.730133, 0, 1.0};
Point(212) = {-0.033662, -0.730270, 0, 1.0};
Point(213) = {-0.037416, -0.730438, 0, 1.0};
Point(214) = {-0.041171, -0.730632, 0, 1.0};
Point(215) = {-0.044926, -0.730848, 0, 1.0};
Point(216) = {-0.048681, -0.731080, 0, 1.0};
Point(217) = {-0.052437, -0.731324, 0, 1.0};
Point(218) = {-0.055442, -0.731522, 0, 1.0};
Point(219) = {-0.058447, -0.731719, 0, 1.0};
Point(220) = {-0.059949, -0.731815, 0, 1.0};
Point(221) = {-0.062954, -0.732000, 0, 1.0};
Point(222) = {-0.065958, -0.732170, 0, 1.0};
Point(223) = {-0.068962, -0.732319, 0, 1.0};
Point(224) = {-0.071965, -0.732439, 0, 1.0};
Point(225) = {-0.073466, -0.732487, 0, 1.0};
Point(226) = {-0.074967, -0.732525, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:33};
Spline(2) = {33:81};
Spline(3) = {81:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:146};
Spline(6) = {146:194};
Spline(7) = {194:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
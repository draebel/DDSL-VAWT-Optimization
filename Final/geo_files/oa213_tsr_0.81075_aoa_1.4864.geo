SetFactory("OpenCASCADE");

Point(1) = {0.112470, 0.733157, 0, 1.0};
Point(2) = {0.110965, 0.733053, 0, 1.0};
Point(3) = {0.109464, 0.733018, 0, 1.0};
Point(4) = {0.106466, 0.733127, 0, 1.0};
Point(5) = {0.103472, 0.733434, 0, 1.0};
Point(6) = {0.100481, 0.733892, 0, 1.0};
Point(7) = {0.097492, 0.734466, 0, 1.0};
Point(8) = {0.095999, 0.734786, 0, 1.0};
Point(9) = {0.093012, 0.735475, 0, 1.0};
Point(10) = {0.090027, 0.736210, 0, 1.0};
Point(11) = {0.086296, 0.737166, 0, 1.0};
Point(12) = {0.082566, 0.738138, 0, 1.0};
Point(13) = {0.078836, 0.739108, 0, 1.0};
Point(14) = {0.075105, 0.740059, 0, 1.0};
Point(15) = {0.071373, 0.740982, 0, 1.0};
Point(16) = {0.067641, 0.741869, 0, 1.0};
Point(17) = {0.063908, 0.742716, 0, 1.0};
Point(18) = {0.060174, 0.743520, 0, 1.0};
Point(19) = {0.056439, 0.744280, 0, 1.0};
Point(20) = {0.052704, 0.744995, 0, 1.0};
Point(21) = {0.048967, 0.745667, 0, 1.0};
Point(22) = {0.045229, 0.746295, 0, 1.0};
Point(23) = {0.041491, 0.746881, 0, 1.0};
Point(24) = {0.037751, 0.747423, 0, 1.0};
Point(25) = {0.034011, 0.747919, 0, 1.0};
Point(26) = {0.030270, 0.748367, 0, 1.0};
Point(27) = {0.026527, 0.748763, 0, 1.0};
Point(28) = {0.022784, 0.749104, 0, 1.0};
Point(29) = {0.019039, 0.749389, 0, 1.0};
Point(30) = {0.015293, 0.749619, 0, 1.0};
Point(31) = {0.011546, 0.749795, 0, 1.0};
Point(32) = {0.007798, 0.749919, 0, 1.0};
Point(33) = {0.004048, 0.749988, 0, 1.0};
Point(34) = {0.000298, 0.750000, 0, 1.0};
Point(35) = {-0.003454, 0.749945, 0, 1.0};
Point(36) = {-0.007208, 0.749811, 0, 1.0};
Point(37) = {-0.010963, 0.749576, 0, 1.0};
Point(38) = {-0.014722, 0.749211, 0, 1.0};
Point(39) = {-0.018484, 0.748667, 0, 1.0};
Point(40) = {-0.023006, 0.747667, 0, 1.0};
Point(41) = {-0.024515, 0.747212, 0, 1.0};
Point(42) = {-0.026027, 0.746674, 0, 1.0};
Point(43) = {-0.027541, 0.746031, 0, 1.0};
Point(44) = {-0.029057, 0.745259, 0, 1.0};
Point(45) = {-0.030425, 0.744433, 0, 1.0};
Point(46) = {-0.031338, 0.743807, 0, 1.0};
Point(47) = {-0.031948, 0.743357, 0, 1.0};
Point(48) = {-0.032863, 0.742636, 0, 1.0};
Point(49) = {-0.033932, 0.741731, 0, 1.0};
Point(50) = {-0.035003, 0.740752, 0, 1.0};
Point(51) = {-0.035923, 0.739818, 0, 1.0};
Point(52) = {-0.036307, 0.739376, 0, 1.0};
Point(53) = {-0.036693, 0.738865, 0, 1.0};
Point(54) = {-0.037191, 0.737969, 0, 1.0};
Point(55) = {-0.037351, 0.737531, 0, 1.0};
Point(56) = {-0.037433, 0.737204, 0, 1.0};
Point(57) = {-0.037487, 0.736732, 0, 1.0};
Point(58) = {-0.037451, 0.736331, 0, 1.0};
Point(59) = {-0.037380, 0.736114, 0, 1.0};
Point(60) = {-0.037236, 0.735865, 0, 1.0};
Point(61) = {-0.036764, 0.735436, 0, 1.0};
Point(62) = {-0.036394, 0.735217, 0, 1.0};
Point(63) = {-0.036023, 0.735040, 0, 1.0};
Point(64) = {-0.035129, 0.734708, 0, 1.0};
Point(65) = {-0.034085, 0.734412, 0, 1.0};
Point(66) = {-0.033040, 0.734173, 0, 1.0};
Point(67) = {-0.032144, 0.733999, 0, 1.0};
Point(68) = {-0.031546, 0.733895, 0, 1.0};
Point(69) = {-0.030648, 0.733754, 0, 1.0};
Point(70) = {-0.029302, 0.733569, 0, 1.0};
Point(71) = {-0.027806, 0.733389, 0, 1.0};
Point(72) = {-0.026309, 0.733230, 0, 1.0};
Point(73) = {-0.024811, 0.733085, 0, 1.0};
Point(74) = {-0.023314, 0.732952, 0, 1.0};
Point(75) = {-0.018820, 0.732600, 0, 1.0};
Point(76) = {-0.015075, 0.732342, 0, 1.0};
Point(77) = {-0.011329, 0.732103, 0, 1.0};
Point(78) = {-0.007583, 0.731879, 0, 1.0};
Point(79) = {-0.003837, 0.731668, 0, 1.0};
Point(80) = {-0.000090, 0.731469, 0, 1.0};
Point(81) = {0.003657, 0.731282, 0, 1.0};
Point(82) = {0.007404, 0.731108, 0, 1.0};
Point(83) = {0.011151, 0.730946, 0, 1.0};
Point(84) = {0.014899, 0.730798, 0, 1.0};
Point(85) = {0.018647, 0.730661, 0, 1.0};
Point(86) = {0.022395, 0.730536, 0, 1.0};
Point(87) = {0.026143, 0.730420, 0, 1.0};
Point(88) = {0.029892, 0.730313, 0, 1.0};
Point(89) = {0.033640, 0.730214, 0, 1.0};
Point(90) = {0.037389, 0.730125, 0, 1.0};
Point(91) = {0.041138, 0.730047, 0, 1.0};
Point(92) = {0.044888, 0.729982, 0, 1.0};
Point(93) = {0.048638, 0.729936, 0, 1.0};
Point(94) = {0.052388, 0.729913, 0, 1.0};
Point(95) = {0.056139, 0.729918, 0, 1.0};
Point(96) = {0.059890, 0.729956, 0, 1.0};
Point(97) = {0.063642, 0.730027, 0, 1.0};
Point(98) = {0.067395, 0.730133, 0, 1.0};
Point(99) = {0.071149, 0.730270, 0, 1.0};
Point(100) = {0.074903, 0.730438, 0, 1.0};
Point(101) = {0.078658, 0.730632, 0, 1.0};
Point(102) = {0.082413, 0.730848, 0, 1.0};
Point(103) = {0.086169, 0.731080, 0, 1.0};
Point(104) = {0.089925, 0.731324, 0, 1.0};
Point(105) = {0.092930, 0.731522, 0, 1.0};
Point(106) = {0.095934, 0.731719, 0, 1.0};
Point(107) = {0.097437, 0.731815, 0, 1.0};
Point(108) = {0.100441, 0.732000, 0, 1.0};
Point(109) = {0.103445, 0.732170, 0, 1.0};
Point(110) = {0.106449, 0.732319, 0, 1.0};
Point(111) = {0.109452, 0.732439, 0, 1.0};
Point(112) = {0.110953, 0.732487, 0, 1.0};
Point(113) = {0.112454, 0.732525, 0, 1.0};
Point(114) = {-0.112470, -0.733157, 0, 1.0};
Point(115) = {-0.110965, -0.733053, 0, 1.0};
Point(116) = {-0.109464, -0.733018, 0, 1.0};
Point(117) = {-0.106466, -0.733127, 0, 1.0};
Point(118) = {-0.103472, -0.733434, 0, 1.0};
Point(119) = {-0.100481, -0.733892, 0, 1.0};
Point(120) = {-0.097492, -0.734466, 0, 1.0};
Point(121) = {-0.095999, -0.734786, 0, 1.0};
Point(122) = {-0.093012, -0.735475, 0, 1.0};
Point(123) = {-0.090027, -0.736210, 0, 1.0};
Point(124) = {-0.086296, -0.737166, 0, 1.0};
Point(125) = {-0.082566, -0.738138, 0, 1.0};
Point(126) = {-0.078836, -0.739108, 0, 1.0};
Point(127) = {-0.075105, -0.740059, 0, 1.0};
Point(128) = {-0.071373, -0.740982, 0, 1.0};
Point(129) = {-0.067641, -0.741869, 0, 1.0};
Point(130) = {-0.063908, -0.742716, 0, 1.0};
Point(131) = {-0.060174, -0.743520, 0, 1.0};
Point(132) = {-0.056439, -0.744280, 0, 1.0};
Point(133) = {-0.052704, -0.744995, 0, 1.0};
Point(134) = {-0.048967, -0.745667, 0, 1.0};
Point(135) = {-0.045229, -0.746295, 0, 1.0};
Point(136) = {-0.041491, -0.746881, 0, 1.0};
Point(137) = {-0.037751, -0.747423, 0, 1.0};
Point(138) = {-0.034011, -0.747919, 0, 1.0};
Point(139) = {-0.030270, -0.748367, 0, 1.0};
Point(140) = {-0.026527, -0.748763, 0, 1.0};
Point(141) = {-0.022784, -0.749104, 0, 1.0};
Point(142) = {-0.019039, -0.749389, 0, 1.0};
Point(143) = {-0.015293, -0.749619, 0, 1.0};
Point(144) = {-0.011546, -0.749795, 0, 1.0};
Point(145) = {-0.007798, -0.749919, 0, 1.0};
Point(146) = {-0.004048, -0.749988, 0, 1.0};
Point(147) = {-0.000298, -0.750000, 0, 1.0};
Point(148) = {0.003454, -0.749945, 0, 1.0};
Point(149) = {0.007208, -0.749811, 0, 1.0};
Point(150) = {0.010963, -0.749576, 0, 1.0};
Point(151) = {0.014722, -0.749211, 0, 1.0};
Point(152) = {0.018484, -0.748667, 0, 1.0};
Point(153) = {0.023006, -0.747667, 0, 1.0};
Point(154) = {0.024515, -0.747212, 0, 1.0};
Point(155) = {0.026027, -0.746674, 0, 1.0};
Point(156) = {0.027541, -0.746031, 0, 1.0};
Point(157) = {0.029057, -0.745259, 0, 1.0};
Point(158) = {0.030425, -0.744433, 0, 1.0};
Point(159) = {0.031338, -0.743807, 0, 1.0};
Point(160) = {0.031948, -0.743357, 0, 1.0};
Point(161) = {0.032863, -0.742636, 0, 1.0};
Point(162) = {0.033932, -0.741731, 0, 1.0};
Point(163) = {0.035003, -0.740752, 0, 1.0};
Point(164) = {0.035923, -0.739818, 0, 1.0};
Point(165) = {0.036307, -0.739376, 0, 1.0};
Point(166) = {0.036693, -0.738865, 0, 1.0};
Point(167) = {0.037191, -0.737969, 0, 1.0};
Point(168) = {0.037351, -0.737531, 0, 1.0};
Point(169) = {0.037433, -0.737204, 0, 1.0};
Point(170) = {0.037487, -0.736732, 0, 1.0};
Point(171) = {0.037451, -0.736331, 0, 1.0};
Point(172) = {0.037380, -0.736114, 0, 1.0};
Point(173) = {0.037236, -0.735865, 0, 1.0};
Point(174) = {0.036764, -0.735436, 0, 1.0};
Point(175) = {0.036394, -0.735217, 0, 1.0};
Point(176) = {0.036023, -0.735040, 0, 1.0};
Point(177) = {0.035129, -0.734708, 0, 1.0};
Point(178) = {0.034085, -0.734412, 0, 1.0};
Point(179) = {0.033040, -0.734173, 0, 1.0};
Point(180) = {0.032144, -0.733999, 0, 1.0};
Point(181) = {0.031546, -0.733895, 0, 1.0};
Point(182) = {0.030648, -0.733754, 0, 1.0};
Point(183) = {0.029302, -0.733569, 0, 1.0};
Point(184) = {0.027806, -0.733389, 0, 1.0};
Point(185) = {0.026309, -0.733230, 0, 1.0};
Point(186) = {0.024811, -0.733085, 0, 1.0};
Point(187) = {0.023314, -0.732952, 0, 1.0};
Point(188) = {0.018820, -0.732600, 0, 1.0};
Point(189) = {0.015075, -0.732342, 0, 1.0};
Point(190) = {0.011329, -0.732103, 0, 1.0};
Point(191) = {0.007583, -0.731879, 0, 1.0};
Point(192) = {0.003837, -0.731668, 0, 1.0};
Point(193) = {0.000090, -0.731469, 0, 1.0};
Point(194) = {-0.003657, -0.731282, 0, 1.0};
Point(195) = {-0.007404, -0.731108, 0, 1.0};
Point(196) = {-0.011151, -0.730946, 0, 1.0};
Point(197) = {-0.014899, -0.730798, 0, 1.0};
Point(198) = {-0.018647, -0.730661, 0, 1.0};
Point(199) = {-0.022395, -0.730536, 0, 1.0};
Point(200) = {-0.026143, -0.730420, 0, 1.0};
Point(201) = {-0.029892, -0.730313, 0, 1.0};
Point(202) = {-0.033640, -0.730214, 0, 1.0};
Point(203) = {-0.037389, -0.730125, 0, 1.0};
Point(204) = {-0.041138, -0.730047, 0, 1.0};
Point(205) = {-0.044888, -0.729982, 0, 1.0};
Point(206) = {-0.048638, -0.729936, 0, 1.0};
Point(207) = {-0.052388, -0.729913, 0, 1.0};
Point(208) = {-0.056139, -0.729918, 0, 1.0};
Point(209) = {-0.059890, -0.729956, 0, 1.0};
Point(210) = {-0.063642, -0.730027, 0, 1.0};
Point(211) = {-0.067395, -0.730133, 0, 1.0};
Point(212) = {-0.071149, -0.730270, 0, 1.0};
Point(213) = {-0.074903, -0.730438, 0, 1.0};
Point(214) = {-0.078658, -0.730632, 0, 1.0};
Point(215) = {-0.082413, -0.730848, 0, 1.0};
Point(216) = {-0.086169, -0.731080, 0, 1.0};
Point(217) = {-0.089925, -0.731324, 0, 1.0};
Point(218) = {-0.092930, -0.731522, 0, 1.0};
Point(219) = {-0.095934, -0.731719, 0, 1.0};
Point(220) = {-0.097437, -0.731815, 0, 1.0};
Point(221) = {-0.100441, -0.732000, 0, 1.0};
Point(222) = {-0.103445, -0.732170, 0, 1.0};
Point(223) = {-0.106449, -0.732319, 0, 1.0};
Point(224) = {-0.109452, -0.732439, 0, 1.0};
Point(225) = {-0.110953, -0.732487, 0, 1.0};
Point(226) = {-0.112454, -0.732525, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:33};
Spline(2) = {33:81};
Spline(3) = {81:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:146};
Spline(6) = {146:194};
Spline(7) = {194:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
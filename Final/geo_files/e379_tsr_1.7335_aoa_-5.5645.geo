SetFactory("OpenCASCADE");

Point(1) = {0.148470, 0.745159, 0, 1.0};
Point(2) = {0.146706, 0.745118, 0, 1.0};
Point(3) = {0.143769, 0.745091, 0, 1.0};
Point(4) = {0.139696, 0.745125, 0, 1.0};
Point(5) = {0.134572, 0.745250, 0, 1.0};
Point(6) = {0.128490, 0.745470, 0, 1.0};
Point(7) = {0.121540, 0.745775, 0, 1.0};
Point(8) = {0.113818, 0.746164, 0, 1.0};
Point(9) = {0.105434, 0.746621, 0, 1.0};
Point(10) = {0.096504, 0.747134, 0, 1.0};
Point(11) = {0.087147, 0.747685, 0, 1.0};
Point(12) = {0.077484, 0.748251, 0, 1.0};
Point(13) = {0.067646, 0.748801, 0, 1.0};
Point(14) = {0.057763, 0.749305, 0, 1.0};
Point(15) = {0.047963, 0.749719, 0, 1.0};
Point(16) = {0.038374, 0.749981, 0, 1.0};
Point(17) = {0.029086, 0.750000, 0, 1.0};
Point(18) = {0.020139, 0.749723, 0, 1.0};
Point(19) = {0.011571, 0.749127, 0, 1.0};
Point(20) = {0.003413, 0.748208, 0, 1.0};
Point(21) = {-0.004305, 0.746972, 0, 1.0};
Point(22) = {-0.011564, 0.745455, 0, 1.0};
Point(23) = {-0.018330, 0.743719, 0, 1.0};
Point(24) = {-0.024542, 0.741825, 0, 1.0};
Point(25) = {-0.030143, 0.739819, 0, 1.0};
Point(26) = {-0.035091, 0.737741, 0, 1.0};
Point(27) = {-0.039347, 0.735639, 0, 1.0};
Point(28) = {-0.042888, 0.733557, 0, 1.0};
Point(29) = {-0.045701, 0.731551, 0, 1.0};
Point(30) = {-0.047782, 0.729670, 0, 1.0};
Point(31) = {-0.049153, 0.727996, 0, 1.0};
Point(32) = {-0.049847, 0.726602, 0, 1.0};
Point(33) = {-0.049969, 0.725653, 0, 1.0};
Point(34) = {-0.049418, 0.725627, 0, 1.0};
Point(35) = {-0.047733, 0.726486, 0, 1.0};
Point(36) = {-0.044777, 0.728068, 0, 1.0};
Point(37) = {-0.040508, 0.730365, 0, 1.0};
Point(38) = {-0.034764, 0.733290, 0, 1.0};
Point(39) = {-0.027414, 0.736675, 0, 1.0};
Point(40) = {-0.018305, 0.740184, 0, 1.0};
Point(41) = {-0.007600, 0.743269, 0, 1.0};
Point(42) = {0.004195, 0.745586, 0, 1.0};
Point(43) = {0.016571, 0.747163, 0, 1.0};
Point(44) = {0.029196, 0.748070, 0, 1.0};
Point(45) = {0.041777, 0.748441, 0, 1.0};
Point(46) = {0.054097, 0.748402, 0, 1.0};
Point(47) = {0.065993, 0.748112, 0, 1.0};
Point(48) = {0.077370, 0.747665, 0, 1.0};
Point(49) = {0.088135, 0.747148, 0, 1.0};
Point(50) = {0.098207, 0.746604, 0, 1.0};
Point(51) = {0.107509, 0.746088, 0, 1.0};
Point(52) = {0.115977, 0.745621, 0, 1.0};
Point(53) = {0.123547, 0.745241, 0, 1.0};
Point(54) = {0.130174, 0.744956, 0, 1.0};
Point(55) = {0.135819, 0.744789, 0, 1.0};
Point(56) = {0.140449, 0.744748, 0, 1.0};
Point(57) = {0.144086, 0.744851, 0, 1.0};
Point(58) = {0.146776, 0.745020, 0, 1.0};
Point(59) = {0.148472, 0.745144, 0, 1.0};
Point(60) = {-0.148470, -0.745159, 0, 1.0};
Point(61) = {-0.146706, -0.745118, 0, 1.0};
Point(62) = {-0.143769, -0.745091, 0, 1.0};
Point(63) = {-0.139696, -0.745125, 0, 1.0};
Point(64) = {-0.134572, -0.745250, 0, 1.0};
Point(65) = {-0.128490, -0.745470, 0, 1.0};
Point(66) = {-0.121540, -0.745775, 0, 1.0};
Point(67) = {-0.113818, -0.746164, 0, 1.0};
Point(68) = {-0.105434, -0.746621, 0, 1.0};
Point(69) = {-0.096504, -0.747134, 0, 1.0};
Point(70) = {-0.087147, -0.747685, 0, 1.0};
Point(71) = {-0.077484, -0.748251, 0, 1.0};
Point(72) = {-0.067646, -0.748801, 0, 1.0};
Point(73) = {-0.057763, -0.749305, 0, 1.0};
Point(74) = {-0.047963, -0.749719, 0, 1.0};
Point(75) = {-0.038374, -0.749981, 0, 1.0};
Point(76) = {-0.029086, -0.750000, 0, 1.0};
Point(77) = {-0.020139, -0.749723, 0, 1.0};
Point(78) = {-0.011571, -0.749127, 0, 1.0};
Point(79) = {-0.003413, -0.748208, 0, 1.0};
Point(80) = {0.004305, -0.746972, 0, 1.0};
Point(81) = {0.011564, -0.745455, 0, 1.0};
Point(82) = {0.018330, -0.743719, 0, 1.0};
Point(83) = {0.024542, -0.741825, 0, 1.0};
Point(84) = {0.030143, -0.739819, 0, 1.0};
Point(85) = {0.035091, -0.737741, 0, 1.0};
Point(86) = {0.039347, -0.735639, 0, 1.0};
Point(87) = {0.042888, -0.733557, 0, 1.0};
Point(88) = {0.045701, -0.731551, 0, 1.0};
Point(89) = {0.047782, -0.729670, 0, 1.0};
Point(90) = {0.049153, -0.727996, 0, 1.0};
Point(91) = {0.049847, -0.726602, 0, 1.0};
Point(92) = {0.049969, -0.725653, 0, 1.0};
Point(93) = {0.049418, -0.725627, 0, 1.0};
Point(94) = {0.047733, -0.726486, 0, 1.0};
Point(95) = {0.044777, -0.728068, 0, 1.0};
Point(96) = {0.040508, -0.730365, 0, 1.0};
Point(97) = {0.034764, -0.733290, 0, 1.0};
Point(98) = {0.027414, -0.736675, 0, 1.0};
Point(99) = {0.018305, -0.740184, 0, 1.0};
Point(100) = {0.007600, -0.743269, 0, 1.0};
Point(101) = {-0.004195, -0.745586, 0, 1.0};
Point(102) = {-0.016571, -0.747163, 0, 1.0};
Point(103) = {-0.029196, -0.748070, 0, 1.0};
Point(104) = {-0.041777, -0.748441, 0, 1.0};
Point(105) = {-0.054097, -0.748402, 0, 1.0};
Point(106) = {-0.065993, -0.748112, 0, 1.0};
Point(107) = {-0.077370, -0.747665, 0, 1.0};
Point(108) = {-0.088135, -0.747148, 0, 1.0};
Point(109) = {-0.098207, -0.746604, 0, 1.0};
Point(110) = {-0.107509, -0.746088, 0, 1.0};
Point(111) = {-0.115977, -0.745621, 0, 1.0};
Point(112) = {-0.123547, -0.745241, 0, 1.0};
Point(113) = {-0.130174, -0.744956, 0, 1.0};
Point(114) = {-0.135819, -0.744789, 0, 1.0};
Point(115) = {-0.140449, -0.744748, 0, 1.0};
Point(116) = {-0.144086, -0.744851, 0, 1.0};
Point(117) = {-0.146776, -0.745020, 0, 1.0};
Point(118) = {-0.148472, -0.745144, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:79};
Spline(6) = {79:101};
Spline(7) = {101:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
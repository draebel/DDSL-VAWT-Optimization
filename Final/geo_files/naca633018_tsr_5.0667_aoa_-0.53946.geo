SetFactory("OpenCASCADE");

Point(1) = {0.074989, 0.737266, 0, 1.0};
Point(2) = {0.074143, 0.737357, 0, 1.0};
Point(3) = {0.071377, 0.737686, 0, 1.0};
Point(4) = {0.068328, 0.738095, 0, 1.0};
Point(5) = {0.065004, 0.738582, 0, 1.0};
Point(6) = {0.061423, 0.739141, 0, 1.0};
Point(7) = {0.057599, 0.739775, 0, 1.0};
Point(8) = {0.053549, 0.740479, 0, 1.0};
Point(9) = {0.049291, 0.741244, 0, 1.0};
Point(10) = {0.044841, 0.742063, 0, 1.0};
Point(11) = {0.040219, 0.742916, 0, 1.0};
Point(12) = {0.035446, 0.743794, 0, 1.0};
Point(13) = {0.030543, 0.744675, 0, 1.0};
Point(14) = {0.025529, 0.745545, 0, 1.0};
Point(15) = {0.020428, 0.746384, 0, 1.0};
Point(16) = {0.015258, 0.747178, 0, 1.0};
Point(17) = {0.010046, 0.747906, 0, 1.0};
Point(18) = {0.004812, 0.748551, 0, 1.0};
Point(19) = {-0.000421, 0.749096, 0, 1.0};
Point(20) = {-0.005630, 0.749525, 0, 1.0};
Point(21) = {-0.010795, 0.749827, 0, 1.0};
Point(22) = {-0.015890, 0.749986, 0, 1.0};
Point(23) = {-0.020896, 0.750000, 0, 1.0};
Point(24) = {-0.025790, 0.749871, 0, 1.0};
Point(25) = {-0.030552, 0.749610, 0, 1.0};
Point(26) = {-0.035162, 0.749233, 0, 1.0};
Point(27) = {-0.039600, 0.748751, 0, 1.0};
Point(28) = {-0.043846, 0.748172, 0, 1.0};
Point(29) = {-0.047883, 0.747508, 0, 1.0};
Point(30) = {-0.051694, 0.746770, 0, 1.0};
Point(31) = {-0.055262, 0.745969, 0, 1.0};
Point(32) = {-0.058573, 0.745111, 0, 1.0};
Point(33) = {-0.061610, 0.744202, 0, 1.0};
Point(34) = {-0.064364, 0.743250, 0, 1.0};
Point(35) = {-0.066821, 0.742269, 0, 1.0};
Point(36) = {-0.068970, 0.741276, 0, 1.0};
Point(37) = {-0.070804, 0.740269, 0, 1.0};
Point(38) = {-0.072311, 0.739211, 0, 1.0};
Point(39) = {-0.073488, 0.738080, 0, 1.0};
Point(40) = {-0.074330, 0.736958, 0, 1.0};
Point(41) = {-0.074834, 0.735954, 0, 1.0};
Point(42) = {-0.074997, 0.735091, 0, 1.0};
Point(43) = {-0.074818, 0.734231, 0, 1.0};
Point(44) = {-0.074295, 0.733237, 0, 1.0};
Point(45) = {-0.073432, 0.732131, 0, 1.0};
Point(46) = {-0.072234, 0.731023, 0, 1.0};
Point(47) = {-0.070707, 0.729993, 0, 1.0};
Point(48) = {-0.068855, 0.729021, 0, 1.0};
Point(49) = {-0.066688, 0.728068, 0, 1.0};
Point(50) = {-0.064212, 0.727134, 0, 1.0};
Point(51) = {-0.061441, 0.726234, 0, 1.0};
Point(52) = {-0.058387, 0.725382, 0, 1.0};
Point(53) = {-0.055061, 0.724587, 0, 1.0};
Point(54) = {-0.051478, 0.723853, 0, 1.0};
Point(55) = {-0.047654, 0.723187, 0, 1.0};
Point(56) = {-0.043605, 0.722599, 0, 1.0};
Point(57) = {-0.039349, 0.722100, 0, 1.0};
Point(58) = {-0.034903, 0.721702, 0, 1.0};
Point(59) = {-0.030286, 0.721411, 0, 1.0};
Point(60) = {-0.025521, 0.721240, 0, 1.0};
Point(61) = {-0.020625, 0.721203, 0, 1.0};
Point(62) = {-0.015620, 0.721311, 0, 1.0};
Point(63) = {-0.010529, 0.721567, 0, 1.0};
Point(64) = {-0.005371, 0.721966, 0, 1.0};
Point(65) = {-0.000170, 0.722493, 0, 1.0};
Point(66) = {0.005051, 0.723137, 0, 1.0};
Point(67) = {0.010272, 0.723880, 0, 1.0};
Point(68) = {0.015470, 0.724706, 0, 1.0};
Point(69) = {0.020623, 0.725597, 0, 1.0};
Point(70) = {0.025708, 0.726532, 0, 1.0};
Point(71) = {0.030705, 0.727496, 0, 1.0};
Point(72) = {0.035591, 0.728470, 0, 1.0};
Point(73) = {0.040346, 0.729437, 0, 1.0};
Point(74) = {0.044951, 0.730377, 0, 1.0};
Point(75) = {0.049385, 0.731279, 0, 1.0};
Point(76) = {0.053628, 0.732125, 0, 1.0};
Point(77) = {0.057664, 0.732905, 0, 1.0};
Point(78) = {0.061475, 0.733610, 0, 1.0};
Point(79) = {0.065045, 0.734237, 0, 1.0};
Point(80) = {0.068359, 0.734786, 0, 1.0};
Point(81) = {0.071400, 0.735253, 0, 1.0};
Point(82) = {0.074159, 0.735634, 0, 1.0};
Point(83) = {0.075004, 0.735741, 0, 1.0};
Point(84) = {-0.074989, -0.737266, 0, 1.0};
Point(85) = {-0.074143, -0.737357, 0, 1.0};
Point(86) = {-0.071377, -0.737686, 0, 1.0};
Point(87) = {-0.068328, -0.738095, 0, 1.0};
Point(88) = {-0.065004, -0.738582, 0, 1.0};
Point(89) = {-0.061423, -0.739141, 0, 1.0};
Point(90) = {-0.057599, -0.739775, 0, 1.0};
Point(91) = {-0.053549, -0.740479, 0, 1.0};
Point(92) = {-0.049291, -0.741244, 0, 1.0};
Point(93) = {-0.044841, -0.742063, 0, 1.0};
Point(94) = {-0.040219, -0.742916, 0, 1.0};
Point(95) = {-0.035446, -0.743794, 0, 1.0};
Point(96) = {-0.030543, -0.744675, 0, 1.0};
Point(97) = {-0.025529, -0.745545, 0, 1.0};
Point(98) = {-0.020428, -0.746384, 0, 1.0};
Point(99) = {-0.015258, -0.747178, 0, 1.0};
Point(100) = {-0.010046, -0.747906, 0, 1.0};
Point(101) = {-0.004812, -0.748551, 0, 1.0};
Point(102) = {0.000421, -0.749096, 0, 1.0};
Point(103) = {0.005630, -0.749525, 0, 1.0};
Point(104) = {0.010795, -0.749827, 0, 1.0};
Point(105) = {0.015890, -0.749986, 0, 1.0};
Point(106) = {0.020896, -0.750000, 0, 1.0};
Point(107) = {0.025790, -0.749871, 0, 1.0};
Point(108) = {0.030552, -0.749610, 0, 1.0};
Point(109) = {0.035162, -0.749233, 0, 1.0};
Point(110) = {0.039600, -0.748751, 0, 1.0};
Point(111) = {0.043846, -0.748172, 0, 1.0};
Point(112) = {0.047883, -0.747508, 0, 1.0};
Point(113) = {0.051694, -0.746770, 0, 1.0};
Point(114) = {0.055262, -0.745969, 0, 1.0};
Point(115) = {0.058573, -0.745111, 0, 1.0};
Point(116) = {0.061610, -0.744202, 0, 1.0};
Point(117) = {0.064364, -0.743250, 0, 1.0};
Point(118) = {0.066821, -0.742269, 0, 1.0};
Point(119) = {0.068970, -0.741276, 0, 1.0};
Point(120) = {0.070804, -0.740269, 0, 1.0};
Point(121) = {0.072311, -0.739211, 0, 1.0};
Point(122) = {0.073488, -0.738080, 0, 1.0};
Point(123) = {0.074330, -0.736958, 0, 1.0};
Point(124) = {0.074834, -0.735954, 0, 1.0};
Point(125) = {0.074997, -0.735091, 0, 1.0};
Point(126) = {0.074818, -0.734231, 0, 1.0};
Point(127) = {0.074295, -0.733237, 0, 1.0};
Point(128) = {0.073432, -0.732131, 0, 1.0};
Point(129) = {0.072234, -0.731023, 0, 1.0};
Point(130) = {0.070707, -0.729993, 0, 1.0};
Point(131) = {0.068855, -0.729021, 0, 1.0};
Point(132) = {0.066688, -0.728068, 0, 1.0};
Point(133) = {0.064212, -0.727134, 0, 1.0};
Point(134) = {0.061441, -0.726234, 0, 1.0};
Point(135) = {0.058387, -0.725382, 0, 1.0};
Point(136) = {0.055061, -0.724587, 0, 1.0};
Point(137) = {0.051478, -0.723853, 0, 1.0};
Point(138) = {0.047654, -0.723187, 0, 1.0};
Point(139) = {0.043605, -0.722599, 0, 1.0};
Point(140) = {0.039349, -0.722100, 0, 1.0};
Point(141) = {0.034903, -0.721702, 0, 1.0};
Point(142) = {0.030286, -0.721411, 0, 1.0};
Point(143) = {0.025521, -0.721240, 0, 1.0};
Point(144) = {0.020625, -0.721203, 0, 1.0};
Point(145) = {0.015620, -0.721311, 0, 1.0};
Point(146) = {0.010529, -0.721567, 0, 1.0};
Point(147) = {0.005371, -0.721966, 0, 1.0};
Point(148) = {0.000170, -0.722493, 0, 1.0};
Point(149) = {-0.005051, -0.723137, 0, 1.0};
Point(150) = {-0.010272, -0.723880, 0, 1.0};
Point(151) = {-0.015470, -0.724706, 0, 1.0};
Point(152) = {-0.020623, -0.725597, 0, 1.0};
Point(153) = {-0.025708, -0.726532, 0, 1.0};
Point(154) = {-0.030705, -0.727496, 0, 1.0};
Point(155) = {-0.035591, -0.728470, 0, 1.0};
Point(156) = {-0.040346, -0.729437, 0, 1.0};
Point(157) = {-0.044951, -0.730377, 0, 1.0};
Point(158) = {-0.049385, -0.731279, 0, 1.0};
Point(159) = {-0.053628, -0.732125, 0, 1.0};
Point(160) = {-0.057664, -0.732905, 0, 1.0};
Point(161) = {-0.061475, -0.733610, 0, 1.0};
Point(162) = {-0.065045, -0.734237, 0, 1.0};
Point(163) = {-0.068359, -0.734786, 0, 1.0};
Point(164) = {-0.071400, -0.735253, 0, 1.0};
Point(165) = {-0.074159, -0.735634, 0, 1.0};
Point(166) = {-0.075004, -0.735741, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
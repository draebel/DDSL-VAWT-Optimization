SetFactory("OpenCASCADE");

Point(1) = {0.074903, 0.742753, 0, 1.0};
Point(2) = {0.071433, 0.743355, 0, 1.0};
Point(3) = {0.066889, 0.744092, 0, 1.0};
Point(4) = {0.061676, 0.744886, 0, 1.0};
Point(5) = {0.055875, 0.745724, 0, 1.0};
Point(6) = {0.049574, 0.746584, 0, 1.0};
Point(7) = {0.042864, 0.747439, 0, 1.0};
Point(8) = {0.035840, 0.748251, 0, 1.0};
Point(9) = {0.028595, 0.748967, 0, 1.0};
Point(10) = {0.021192, 0.749519, 0, 1.0};
Point(11) = {0.013669, 0.749867, 0, 1.0};
Point(12) = {0.006063, 0.750000, 0, 1.0};
Point(13) = {-0.001584, 0.749919, 0, 1.0};
Point(14) = {-0.009216, 0.749656, 0, 1.0};
Point(15) = {-0.016748, 0.749230, 0, 1.0};
Point(16) = {-0.024105, 0.748656, 0, 1.0};
Point(17) = {-0.031211, 0.747947, 0, 1.0};
Point(18) = {-0.037988, 0.747120, 0, 1.0};
Point(19) = {-0.044370, 0.746187, 0, 1.0};
Point(20) = {-0.050288, 0.745166, 0, 1.0};
Point(21) = {-0.055682, 0.744075, 0, 1.0};
Point(22) = {-0.060495, 0.742935, 0, 1.0};
Point(23) = {-0.064677, 0.741763, 0, 1.0};
Point(24) = {-0.068182, 0.740584, 0, 1.0};
Point(25) = {-0.070977, 0.739411, 0, 1.0};
Point(26) = {-0.073046, 0.738270, 0, 1.0};
Point(27) = {-0.074114, 0.737459, 0, 1.0};
Point(28) = {-0.074663, 0.736862, 0, 1.0};
Point(29) = {-0.074882, 0.736505, 0, 1.0};
Point(30) = {-0.074961, 0.736269, 0, 1.0};
Point(31) = {-0.074965, 0.736135, 0, 1.0};
Point(32) = {-0.074914, 0.736009, 0, 1.0};
Point(33) = {-0.074752, 0.735807, 0, 1.0};
Point(34) = {-0.074409, 0.735529, 0, 1.0};
Point(35) = {-0.073650, 0.735110, 0, 1.0};
Point(36) = {-0.073252, 0.734943, 0, 1.0};
Point(37) = {-0.071132, 0.734301, 0, 1.0};
Point(38) = {-0.068219, 0.733740, 0, 1.0};
Point(39) = {-0.064538, 0.733276, 0, 1.0};
Point(40) = {-0.060123, 0.732904, 0, 1.0};
Point(41) = {-0.055030, 0.732624, 0, 1.0};
Point(42) = {-0.049325, 0.732441, 0, 1.0};
Point(43) = {-0.043075, 0.732366, 0, 1.0};
Point(44) = {-0.036358, 0.732412, 0, 1.0};
Point(45) = {-0.029253, 0.732598, 0, 1.0};
Point(46) = {-0.021822, 0.732960, 0, 1.0};
Point(47) = {-0.014104, 0.733513, 0, 1.0};
Point(48) = {-0.006138, 0.734256, 0, 1.0};
Point(49) = {0.002047, 0.735152, 0, 1.0};
Point(50) = {0.010394, 0.736125, 0, 1.0};
Point(51) = {0.018797, 0.737108, 0, 1.0};
Point(52) = {0.027143, 0.738053, 0, 1.0};
Point(53) = {0.035315, 0.738917, 0, 1.0};
Point(54) = {0.043191, 0.739669, 0, 1.0};
Point(55) = {0.050649, 0.740286, 0, 1.0};
Point(56) = {0.057570, 0.740752, 0, 1.0};
Point(57) = {0.063836, 0.741067, 0, 1.0};
Point(58) = {0.069343, 0.741240, 0, 1.0};
Point(59) = {0.073993, 0.741287, 0, 1.0};
Point(60) = {0.074947, 0.741283, 0, 1.0};
Point(61) = {-0.074903, -0.742753, 0, 1.0};
Point(62) = {-0.071433, -0.743355, 0, 1.0};
Point(63) = {-0.066889, -0.744092, 0, 1.0};
Point(64) = {-0.061676, -0.744886, 0, 1.0};
Point(65) = {-0.055875, -0.745724, 0, 1.0};
Point(66) = {-0.049574, -0.746584, 0, 1.0};
Point(67) = {-0.042864, -0.747439, 0, 1.0};
Point(68) = {-0.035840, -0.748251, 0, 1.0};
Point(69) = {-0.028595, -0.748967, 0, 1.0};
Point(70) = {-0.021192, -0.749519, 0, 1.0};
Point(71) = {-0.013669, -0.749867, 0, 1.0};
Point(72) = {-0.006063, -0.750000, 0, 1.0};
Point(73) = {0.001584, -0.749919, 0, 1.0};
Point(74) = {0.009216, -0.749656, 0, 1.0};
Point(75) = {0.016748, -0.749230, 0, 1.0};
Point(76) = {0.024105, -0.748656, 0, 1.0};
Point(77) = {0.031211, -0.747947, 0, 1.0};
Point(78) = {0.037988, -0.747120, 0, 1.0};
Point(79) = {0.044370, -0.746187, 0, 1.0};
Point(80) = {0.050288, -0.745166, 0, 1.0};
Point(81) = {0.055682, -0.744075, 0, 1.0};
Point(82) = {0.060495, -0.742935, 0, 1.0};
Point(83) = {0.064677, -0.741763, 0, 1.0};
Point(84) = {0.068182, -0.740584, 0, 1.0};
Point(85) = {0.070977, -0.739411, 0, 1.0};
Point(86) = {0.073046, -0.738270, 0, 1.0};
Point(87) = {0.074114, -0.737459, 0, 1.0};
Point(88) = {0.074663, -0.736862, 0, 1.0};
Point(89) = {0.074882, -0.736505, 0, 1.0};
Point(90) = {0.074961, -0.736269, 0, 1.0};
Point(91) = {0.074965, -0.736135, 0, 1.0};
Point(92) = {0.074914, -0.736009, 0, 1.0};
Point(93) = {0.074752, -0.735807, 0, 1.0};
Point(94) = {0.074409, -0.735529, 0, 1.0};
Point(95) = {0.073650, -0.735110, 0, 1.0};
Point(96) = {0.073252, -0.734943, 0, 1.0};
Point(97) = {0.071132, -0.734301, 0, 1.0};
Point(98) = {0.068219, -0.733740, 0, 1.0};
Point(99) = {0.064538, -0.733276, 0, 1.0};
Point(100) = {0.060123, -0.732904, 0, 1.0};
Point(101) = {0.055030, -0.732624, 0, 1.0};
Point(102) = {0.049325, -0.732441, 0, 1.0};
Point(103) = {0.043075, -0.732366, 0, 1.0};
Point(104) = {0.036358, -0.732412, 0, 1.0};
Point(105) = {0.029253, -0.732598, 0, 1.0};
Point(106) = {0.021822, -0.732960, 0, 1.0};
Point(107) = {0.014104, -0.733513, 0, 1.0};
Point(108) = {0.006138, -0.734256, 0, 1.0};
Point(109) = {-0.002047, -0.735152, 0, 1.0};
Point(110) = {-0.010394, -0.736125, 0, 1.0};
Point(111) = {-0.018797, -0.737108, 0, 1.0};
Point(112) = {-0.027143, -0.738053, 0, 1.0};
Point(113) = {-0.035315, -0.738917, 0, 1.0};
Point(114) = {-0.043191, -0.739669, 0, 1.0};
Point(115) = {-0.050649, -0.740286, 0, 1.0};
Point(116) = {-0.057570, -0.740752, 0, 1.0};
Point(117) = {-0.063836, -0.741067, 0, 1.0};
Point(118) = {-0.069343, -0.741240, 0, 1.0};
Point(119) = {-0.073993, -0.741287, 0, 1.0};
Point(120) = {-0.074947, -0.741283, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
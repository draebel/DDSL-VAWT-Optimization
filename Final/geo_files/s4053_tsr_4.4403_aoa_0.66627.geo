SetFactory("OpenCASCADE");

Point(1) = {0.074993, 0.741867, 0, 1.0};
Point(2) = {0.074656, 0.741924, 0, 1.0};
Point(3) = {0.073682, 0.742113, 0, 1.0};
Point(4) = {0.072153, 0.742438, 0, 1.0};
Point(5) = {0.070123, 0.742859, 0, 1.0};
Point(6) = {0.067611, 0.743334, 0, 1.0};
Point(7) = {0.064627, 0.743864, 0, 1.0};
Point(8) = {0.061214, 0.744449, 0, 1.0};
Point(9) = {0.057422, 0.745082, 0, 1.0};
Point(10) = {0.053303, 0.745751, 0, 1.0};
Point(11) = {0.048914, 0.746441, 0, 1.0};
Point(12) = {0.044312, 0.747135, 0, 1.0};
Point(13) = {0.039560, 0.747810, 0, 1.0};
Point(14) = {0.034714, 0.748438, 0, 1.0};
Point(15) = {0.029826, 0.748985, 0, 1.0};
Point(16) = {0.024931, 0.749422, 0, 1.0};
Point(17) = {0.020058, 0.749738, 0, 1.0};
Point(18) = {0.015243, 0.749930, 0, 1.0};
Point(19) = {0.010527, 0.750000, 0, 1.0};
Point(20) = {0.005951, 0.749950, 0, 1.0};
Point(21) = {0.001556, 0.749787, 0, 1.0};
Point(22) = {-0.002613, 0.749519, 0, 1.0};
Point(23) = {-0.006519, 0.749148, 0, 1.0};
Point(24) = {-0.010120, 0.748685, 0, 1.0};
Point(25) = {-0.013389, 0.748138, 0, 1.0};
Point(26) = {-0.016292, 0.747517, 0, 1.0};
Point(27) = {-0.018808, 0.746837, 0, 1.0};
Point(28) = {-0.020911, 0.746113, 0, 1.0};
Point(29) = {-0.022585, 0.745362, 0, 1.0};
Point(30) = {-0.023819, 0.744600, 0, 1.0};
Point(31) = {-0.024613, 0.743848, 0, 1.0};
Point(32) = {-0.024985, 0.743160, 0, 1.0};
Point(33) = {-0.025000, 0.743030, 0, 1.0};
Point(34) = {-0.024853, 0.742635, 0, 1.0};
Point(35) = {-0.024133, 0.742239, 0, 1.0};
Point(36) = {-0.022748, 0.741887, 0, 1.0};
Point(37) = {-0.021026, 0.741595, 0, 1.0};
Point(38) = {-0.018685, 0.741364, 0, 1.0};
Point(39) = {-0.015844, 0.741194, 0, 1.0};
Point(40) = {-0.012528, 0.741076, 0, 1.0};
Point(41) = {-0.008773, 0.741001, 0, 1.0};
Point(42) = {-0.004632, 0.740964, 0, 1.0};
Point(43) = {-0.000147, 0.740970, 0, 1.0};
Point(44) = {0.004640, 0.741014, 0, 1.0};
Point(45) = {0.009678, 0.741085, 0, 1.0};
Point(46) = {0.014908, 0.741173, 0, 1.0};
Point(47) = {0.020269, 0.741272, 0, 1.0};
Point(48) = {0.025695, 0.741376, 0, 1.0};
Point(49) = {0.031124, 0.741481, 0, 1.0};
Point(50) = {0.036494, 0.741583, 0, 1.0};
Point(51) = {0.041741, 0.741674, 0, 1.0};
Point(52) = {0.046799, 0.741752, 0, 1.0};
Point(53) = {0.051605, 0.741811, 0, 1.0};
Point(54) = {0.056097, 0.741851, 0, 1.0};
Point(55) = {0.060218, 0.741874, 0, 1.0};
Point(56) = {0.063916, 0.741883, 0, 1.0};
Point(57) = {0.067138, 0.741883, 0, 1.0};
Point(58) = {0.069847, 0.741886, 0, 1.0};
Point(59) = {0.072021, 0.741898, 0, 1.0};
Point(60) = {0.073640, 0.741901, 0, 1.0};
Point(61) = {0.074648, 0.741881, 0, 1.0};
Point(62) = {-0.074993, -0.741867, 0, 1.0};
Point(63) = {-0.074656, -0.741924, 0, 1.0};
Point(64) = {-0.073682, -0.742113, 0, 1.0};
Point(65) = {-0.072153, -0.742438, 0, 1.0};
Point(66) = {-0.070123, -0.742859, 0, 1.0};
Point(67) = {-0.067611, -0.743334, 0, 1.0};
Point(68) = {-0.064627, -0.743864, 0, 1.0};
Point(69) = {-0.061214, -0.744449, 0, 1.0};
Point(70) = {-0.057422, -0.745082, 0, 1.0};
Point(71) = {-0.053303, -0.745751, 0, 1.0};
Point(72) = {-0.048914, -0.746441, 0, 1.0};
Point(73) = {-0.044312, -0.747135, 0, 1.0};
Point(74) = {-0.039560, -0.747810, 0, 1.0};
Point(75) = {-0.034714, -0.748438, 0, 1.0};
Point(76) = {-0.029826, -0.748985, 0, 1.0};
Point(77) = {-0.024931, -0.749422, 0, 1.0};
Point(78) = {-0.020058, -0.749738, 0, 1.0};
Point(79) = {-0.015243, -0.749930, 0, 1.0};
Point(80) = {-0.010527, -0.750000, 0, 1.0};
Point(81) = {-0.005951, -0.749950, 0, 1.0};
Point(82) = {-0.001556, -0.749787, 0, 1.0};
Point(83) = {0.002613, -0.749519, 0, 1.0};
Point(84) = {0.006519, -0.749148, 0, 1.0};
Point(85) = {0.010120, -0.748685, 0, 1.0};
Point(86) = {0.013389, -0.748138, 0, 1.0};
Point(87) = {0.016292, -0.747517, 0, 1.0};
Point(88) = {0.018808, -0.746837, 0, 1.0};
Point(89) = {0.020911, -0.746113, 0, 1.0};
Point(90) = {0.022585, -0.745362, 0, 1.0};
Point(91) = {0.023819, -0.744600, 0, 1.0};
Point(92) = {0.024613, -0.743848, 0, 1.0};
Point(93) = {0.024985, -0.743160, 0, 1.0};
Point(94) = {0.025000, -0.743030, 0, 1.0};
Point(95) = {0.024853, -0.742635, 0, 1.0};
Point(96) = {0.024133, -0.742239, 0, 1.0};
Point(97) = {0.022748, -0.741887, 0, 1.0};
Point(98) = {0.021026, -0.741595, 0, 1.0};
Point(99) = {0.018685, -0.741364, 0, 1.0};
Point(100) = {0.015844, -0.741194, 0, 1.0};
Point(101) = {0.012528, -0.741076, 0, 1.0};
Point(102) = {0.008773, -0.741001, 0, 1.0};
Point(103) = {0.004632, -0.740964, 0, 1.0};
Point(104) = {0.000147, -0.740970, 0, 1.0};
Point(105) = {-0.004640, -0.741014, 0, 1.0};
Point(106) = {-0.009678, -0.741085, 0, 1.0};
Point(107) = {-0.014908, -0.741173, 0, 1.0};
Point(108) = {-0.020269, -0.741272, 0, 1.0};
Point(109) = {-0.025695, -0.741376, 0, 1.0};
Point(110) = {-0.031124, -0.741481, 0, 1.0};
Point(111) = {-0.036494, -0.741583, 0, 1.0};
Point(112) = {-0.041741, -0.741674, 0, 1.0};
Point(113) = {-0.046799, -0.741752, 0, 1.0};
Point(114) = {-0.051605, -0.741811, 0, 1.0};
Point(115) = {-0.056097, -0.741851, 0, 1.0};
Point(116) = {-0.060218, -0.741874, 0, 1.0};
Point(117) = {-0.063916, -0.741883, 0, 1.0};
Point(118) = {-0.067138, -0.741883, 0, 1.0};
Point(119) = {-0.069847, -0.741886, 0, 1.0};
Point(120) = {-0.072021, -0.741898, 0, 1.0};
Point(121) = {-0.073640, -0.741901, 0, 1.0};
Point(122) = {-0.074648, -0.741881, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
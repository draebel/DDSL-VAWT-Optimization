SetFactory("OpenCASCADE");

Point(1) = {0.149986, 0.733734, 0, 1.0};
Point(2) = {0.149312, 0.733847, 0, 1.0};
Point(3) = {0.147364, 0.734226, 0, 1.0};
Point(4) = {0.144305, 0.734876, 0, 1.0};
Point(5) = {0.140247, 0.735717, 0, 1.0};
Point(6) = {0.135222, 0.736668, 0, 1.0};
Point(7) = {0.129254, 0.737729, 0, 1.0};
Point(8) = {0.122429, 0.738898, 0, 1.0};
Point(9) = {0.114845, 0.740165, 0, 1.0};
Point(10) = {0.106606, 0.741503, 0, 1.0};
Point(11) = {0.097827, 0.742883, 0, 1.0};
Point(12) = {0.088625, 0.744270, 0, 1.0};
Point(13) = {0.079120, 0.745621, 0, 1.0};
Point(14) = {0.069428, 0.746875, 0, 1.0};
Point(15) = {0.059652, 0.747969, 0, 1.0};
Point(16) = {0.049861, 0.748845, 0, 1.0};
Point(17) = {0.040116, 0.749476, 0, 1.0};
Point(18) = {0.030486, 0.749860, 0, 1.0};
Point(19) = {0.021055, 0.750000, 0, 1.0};
Point(20) = {0.011901, 0.749900, 0, 1.0};
Point(21) = {0.003113, 0.749575, 0, 1.0};
Point(22) = {-0.005226, 0.749038, 0, 1.0};
Point(23) = {-0.013037, 0.748296, 0, 1.0};
Point(24) = {-0.020240, 0.747370, 0, 1.0};
Point(25) = {-0.026778, 0.746276, 0, 1.0};
Point(26) = {-0.032584, 0.745033, 0, 1.0};
Point(27) = {-0.037617, 0.743674, 0, 1.0};
Point(28) = {-0.041822, 0.742227, 0, 1.0};
Point(29) = {-0.045169, 0.740723, 0, 1.0};
Point(30) = {-0.047637, 0.739200, 0, 1.0};
Point(31) = {-0.049227, 0.737696, 0, 1.0};
Point(32) = {-0.049971, 0.736321, 0, 1.0};
Point(33) = {-0.050000, 0.736059, 0, 1.0};
Point(34) = {-0.049705, 0.735270, 0, 1.0};
Point(35) = {-0.048266, 0.734477, 0, 1.0};
Point(36) = {-0.045496, 0.733775, 0, 1.0};
Point(37) = {-0.042053, 0.733191, 0, 1.0};
Point(38) = {-0.037370, 0.732728, 0, 1.0};
Point(39) = {-0.031687, 0.732388, 0, 1.0};
Point(40) = {-0.025056, 0.732153, 0, 1.0};
Point(41) = {-0.017547, 0.732002, 0, 1.0};
Point(42) = {-0.009263, 0.731927, 0, 1.0};
Point(43) = {-0.000295, 0.731939, 0, 1.0};
Point(44) = {0.009279, 0.732028, 0, 1.0};
Point(45) = {0.019355, 0.732171, 0, 1.0};
Point(46) = {0.029816, 0.732347, 0, 1.0};
Point(47) = {0.040537, 0.732544, 0, 1.0};
Point(48) = {0.051390, 0.732752, 0, 1.0};
Point(49) = {0.062248, 0.732962, 0, 1.0};
Point(50) = {0.072989, 0.733167, 0, 1.0};
Point(51) = {0.083482, 0.733349, 0, 1.0};
Point(52) = {0.093598, 0.733503, 0, 1.0};
Point(53) = {0.103210, 0.733622, 0, 1.0};
Point(54) = {0.112194, 0.733701, 0, 1.0};
Point(55) = {0.120437, 0.733747, 0, 1.0};
Point(56) = {0.127831, 0.733765, 0, 1.0};
Point(57) = {0.134276, 0.733766, 0, 1.0};
Point(58) = {0.139694, 0.733771, 0, 1.0};
Point(59) = {0.144043, 0.733797, 0, 1.0};
Point(60) = {0.147279, 0.733801, 0, 1.0};
Point(61) = {0.149297, 0.733762, 0, 1.0};
Point(62) = {-0.149986, -0.733734, 0, 1.0};
Point(63) = {-0.149312, -0.733847, 0, 1.0};
Point(64) = {-0.147364, -0.734226, 0, 1.0};
Point(65) = {-0.144305, -0.734876, 0, 1.0};
Point(66) = {-0.140247, -0.735717, 0, 1.0};
Point(67) = {-0.135222, -0.736668, 0, 1.0};
Point(68) = {-0.129254, -0.737729, 0, 1.0};
Point(69) = {-0.122429, -0.738898, 0, 1.0};
Point(70) = {-0.114845, -0.740165, 0, 1.0};
Point(71) = {-0.106606, -0.741503, 0, 1.0};
Point(72) = {-0.097827, -0.742883, 0, 1.0};
Point(73) = {-0.088625, -0.744270, 0, 1.0};
Point(74) = {-0.079120, -0.745621, 0, 1.0};
Point(75) = {-0.069428, -0.746875, 0, 1.0};
Point(76) = {-0.059652, -0.747969, 0, 1.0};
Point(77) = {-0.049861, -0.748845, 0, 1.0};
Point(78) = {-0.040116, -0.749476, 0, 1.0};
Point(79) = {-0.030486, -0.749860, 0, 1.0};
Point(80) = {-0.021055, -0.750000, 0, 1.0};
Point(81) = {-0.011901, -0.749900, 0, 1.0};
Point(82) = {-0.003113, -0.749575, 0, 1.0};
Point(83) = {0.005226, -0.749038, 0, 1.0};
Point(84) = {0.013037, -0.748296, 0, 1.0};
Point(85) = {0.020240, -0.747370, 0, 1.0};
Point(86) = {0.026778, -0.746276, 0, 1.0};
Point(87) = {0.032584, -0.745033, 0, 1.0};
Point(88) = {0.037617, -0.743674, 0, 1.0};
Point(89) = {0.041822, -0.742227, 0, 1.0};
Point(90) = {0.045169, -0.740723, 0, 1.0};
Point(91) = {0.047637, -0.739200, 0, 1.0};
Point(92) = {0.049227, -0.737696, 0, 1.0};
Point(93) = {0.049971, -0.736321, 0, 1.0};
Point(94) = {0.050000, -0.736059, 0, 1.0};
Point(95) = {0.049705, -0.735270, 0, 1.0};
Point(96) = {0.048266, -0.734477, 0, 1.0};
Point(97) = {0.045496, -0.733775, 0, 1.0};
Point(98) = {0.042053, -0.733191, 0, 1.0};
Point(99) = {0.037370, -0.732728, 0, 1.0};
Point(100) = {0.031687, -0.732388, 0, 1.0};
Point(101) = {0.025056, -0.732153, 0, 1.0};
Point(102) = {0.017547, -0.732002, 0, 1.0};
Point(103) = {0.009263, -0.731927, 0, 1.0};
Point(104) = {0.000295, -0.731939, 0, 1.0};
Point(105) = {-0.009279, -0.732028, 0, 1.0};
Point(106) = {-0.019355, -0.732171, 0, 1.0};
Point(107) = {-0.029816, -0.732347, 0, 1.0};
Point(108) = {-0.040537, -0.732544, 0, 1.0};
Point(109) = {-0.051390, -0.732752, 0, 1.0};
Point(110) = {-0.062248, -0.732962, 0, 1.0};
Point(111) = {-0.072989, -0.733167, 0, 1.0};
Point(112) = {-0.083482, -0.733349, 0, 1.0};
Point(113) = {-0.093598, -0.733503, 0, 1.0};
Point(114) = {-0.103210, -0.733622, 0, 1.0};
Point(115) = {-0.112194, -0.733701, 0, 1.0};
Point(116) = {-0.120437, -0.733747, 0, 1.0};
Point(117) = {-0.127831, -0.733765, 0, 1.0};
Point(118) = {-0.134276, -0.733766, 0, 1.0};
Point(119) = {-0.139694, -0.733771, 0, 1.0};
Point(120) = {-0.144043, -0.733797, 0, 1.0};
Point(121) = {-0.147279, -0.733801, 0, 1.0};
Point(122) = {-0.149297, -0.733762, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
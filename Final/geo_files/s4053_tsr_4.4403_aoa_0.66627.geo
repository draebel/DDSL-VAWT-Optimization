SetFactory("OpenCASCADE");

Point(1) = {0.074995, 0.737800, 0, 1.0};
Point(2) = {0.074489, 0.737886, 0, 1.0};
Point(3) = {0.073028, 0.738170, 0, 1.0};
Point(4) = {0.070734, 0.738657, 0, 1.0};
Point(5) = {0.067690, 0.739288, 0, 1.0};
Point(6) = {0.063921, 0.740001, 0, 1.0};
Point(7) = {0.059445, 0.740797, 0, 1.0};
Point(8) = {0.054327, 0.741674, 0, 1.0};
Point(9) = {0.048639, 0.742624, 0, 1.0};
Point(10) = {0.042459, 0.743627, 0, 1.0};
Point(11) = {0.035876, 0.744662, 0, 1.0};
Point(12) = {0.028974, 0.745702, 0, 1.0};
Point(13) = {0.021845, 0.746715, 0, 1.0};
Point(14) = {0.014576, 0.747656, 0, 1.0};
Point(15) = {0.007244, 0.748477, 0, 1.0};
Point(16) = {-0.000099, 0.749134, 0, 1.0};
Point(17) = {-0.007408, 0.749607, 0, 1.0};
Point(18) = {-0.014630, 0.749895, 0, 1.0};
Point(19) = {-0.021704, 0.750000, 0, 1.0};
Point(20) = {-0.028569, 0.749925, 0, 1.0};
Point(21) = {-0.035160, 0.749681, 0, 1.0};
Point(22) = {-0.041414, 0.749278, 0, 1.0};
Point(23) = {-0.047273, 0.748722, 0, 1.0};
Point(24) = {-0.052675, 0.748028, 0, 1.0};
Point(25) = {-0.057578, 0.747207, 0, 1.0};
Point(26) = {-0.061933, 0.746275, 0, 1.0};
Point(27) = {-0.065707, 0.745255, 0, 1.0};
Point(28) = {-0.068861, 0.744170, 0, 1.0};
Point(29) = {-0.071372, 0.743043, 0, 1.0};
Point(30) = {-0.073223, 0.741900, 0, 1.0};
Point(31) = {-0.074415, 0.740772, 0, 1.0};
Point(32) = {-0.074973, 0.739741, 0, 1.0};
Point(33) = {-0.074995, 0.739544, 0, 1.0};
Point(34) = {-0.074774, 0.738952, 0, 1.0};
Point(35) = {-0.073695, 0.738358, 0, 1.0};
Point(36) = {-0.071617, 0.737831, 0, 1.0};
Point(37) = {-0.069035, 0.737393, 0, 1.0};
Point(38) = {-0.065522, 0.737046, 0, 1.0};
Point(39) = {-0.061261, 0.736791, 0, 1.0};
Point(40) = {-0.056287, 0.736615, 0, 1.0};
Point(41) = {-0.050655, 0.736501, 0, 1.0};
Point(42) = {-0.044442, 0.736445, 0, 1.0};
Point(43) = {-0.037716, 0.736454, 0, 1.0};
Point(44) = {-0.030536, 0.736521, 0, 1.0};
Point(45) = {-0.022978, 0.736628, 0, 1.0};
Point(46) = {-0.015133, 0.736760, 0, 1.0};
Point(47) = {-0.007092, 0.736908, 0, 1.0};
Point(48) = {0.001048, 0.737064, 0, 1.0};
Point(49) = {0.009191, 0.737221, 0, 1.0};
Point(50) = {0.017247, 0.737375, 0, 1.0};
Point(51) = {0.025116, 0.737512, 0, 1.0};
Point(52) = {0.032704, 0.737627, 0, 1.0};
Point(53) = {0.039913, 0.737716, 0, 1.0};
Point(54) = {0.046650, 0.737776, 0, 1.0};
Point(55) = {0.052833, 0.737810, 0, 1.0};
Point(56) = {0.058379, 0.737824, 0, 1.0};
Point(57) = {0.063212, 0.737825, 0, 1.0};
Point(58) = {0.067276, 0.737828, 0, 1.0};
Point(59) = {0.070537, 0.737848, 0, 1.0};
Point(60) = {0.072964, 0.737851, 0, 1.0};
Point(61) = {0.074478, 0.737821, 0, 1.0};
Point(62) = {-0.074995, -0.737800, 0, 1.0};
Point(63) = {-0.074489, -0.737886, 0, 1.0};
Point(64) = {-0.073028, -0.738170, 0, 1.0};
Point(65) = {-0.070734, -0.738657, 0, 1.0};
Point(66) = {-0.067690, -0.739288, 0, 1.0};
Point(67) = {-0.063921, -0.740001, 0, 1.0};
Point(68) = {-0.059445, -0.740797, 0, 1.0};
Point(69) = {-0.054327, -0.741674, 0, 1.0};
Point(70) = {-0.048639, -0.742624, 0, 1.0};
Point(71) = {-0.042459, -0.743627, 0, 1.0};
Point(72) = {-0.035876, -0.744662, 0, 1.0};
Point(73) = {-0.028974, -0.745702, 0, 1.0};
Point(74) = {-0.021845, -0.746715, 0, 1.0};
Point(75) = {-0.014576, -0.747656, 0, 1.0};
Point(76) = {-0.007244, -0.748477, 0, 1.0};
Point(77) = {0.000099, -0.749134, 0, 1.0};
Point(78) = {0.007408, -0.749607, 0, 1.0};
Point(79) = {0.014630, -0.749895, 0, 1.0};
Point(80) = {0.021704, -0.750000, 0, 1.0};
Point(81) = {0.028569, -0.749925, 0, 1.0};
Point(82) = {0.035160, -0.749681, 0, 1.0};
Point(83) = {0.041414, -0.749278, 0, 1.0};
Point(84) = {0.047273, -0.748722, 0, 1.0};
Point(85) = {0.052675, -0.748028, 0, 1.0};
Point(86) = {0.057578, -0.747207, 0, 1.0};
Point(87) = {0.061933, -0.746275, 0, 1.0};
Point(88) = {0.065707, -0.745255, 0, 1.0};
Point(89) = {0.068861, -0.744170, 0, 1.0};
Point(90) = {0.071372, -0.743043, 0, 1.0};
Point(91) = {0.073223, -0.741900, 0, 1.0};
Point(92) = {0.074415, -0.740772, 0, 1.0};
Point(93) = {0.074973, -0.739741, 0, 1.0};
Point(94) = {0.074995, -0.739544, 0, 1.0};
Point(95) = {0.074774, -0.738952, 0, 1.0};
Point(96) = {0.073695, -0.738358, 0, 1.0};
Point(97) = {0.071617, -0.737831, 0, 1.0};
Point(98) = {0.069035, -0.737393, 0, 1.0};
Point(99) = {0.065522, -0.737046, 0, 1.0};
Point(100) = {0.061261, -0.736791, 0, 1.0};
Point(101) = {0.056287, -0.736615, 0, 1.0};
Point(102) = {0.050655, -0.736501, 0, 1.0};
Point(103) = {0.044442, -0.736445, 0, 1.0};
Point(104) = {0.037716, -0.736454, 0, 1.0};
Point(105) = {0.030536, -0.736521, 0, 1.0};
Point(106) = {0.022978, -0.736628, 0, 1.0};
Point(107) = {0.015133, -0.736760, 0, 1.0};
Point(108) = {0.007092, -0.736908, 0, 1.0};
Point(109) = {-0.001048, -0.737064, 0, 1.0};
Point(110) = {-0.009191, -0.737221, 0, 1.0};
Point(111) = {-0.017247, -0.737375, 0, 1.0};
Point(112) = {-0.025116, -0.737512, 0, 1.0};
Point(113) = {-0.032704, -0.737627, 0, 1.0};
Point(114) = {-0.039913, -0.737716, 0, 1.0};
Point(115) = {-0.046650, -0.737776, 0, 1.0};
Point(116) = {-0.052833, -0.737810, 0, 1.0};
Point(117) = {-0.058379, -0.737824, 0, 1.0};
Point(118) = {-0.063212, -0.737825, 0, 1.0};
Point(119) = {-0.067276, -0.737828, 0, 1.0};
Point(120) = {-0.070537, -0.737848, 0, 1.0};
Point(121) = {-0.072964, -0.737851, 0, 1.0};
Point(122) = {-0.074478, -0.737821, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
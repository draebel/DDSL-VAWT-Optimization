SetFactory("OpenCASCADE");

Point(1) = {0.074333, 0.748313, 0, 1.0};
Point(2) = {0.073743, 0.748372, 0, 1.0};
Point(3) = {0.071670, 0.748496, 0, 1.0};
Point(4) = {0.069123, 0.748534, 0, 1.0};
Point(5) = {0.066084, 0.748511, 0, 1.0};
Point(6) = {0.062571, 0.748479, 0, 1.0};
Point(7) = {0.058617, 0.748491, 0, 1.0};
Point(8) = {0.054254, 0.748581, 0, 1.0};
Point(9) = {0.049529, 0.748756, 0, 1.0};
Point(10) = {0.044489, 0.748988, 0, 1.0};
Point(11) = {0.039184, 0.749240, 0, 1.0};
Point(12) = {0.033664, 0.749475, 0, 1.0};
Point(13) = {0.027979, 0.749673, 0, 1.0};
Point(14) = {0.022174, 0.749829, 0, 1.0};
Point(15) = {0.016297, 0.749940, 0, 1.0};
Point(16) = {0.010388, 0.749999, 0, 1.0};
Point(17) = {0.004491, 0.750000, 0, 1.0};
Point(18) = {-0.001392, 0.749939, 0, 1.0};
Point(19) = {-0.007260, 0.749815, 0, 1.0};
Point(20) = {-0.013070, 0.749625, 0, 1.0};
Point(21) = {-0.018799, 0.749356, 0, 1.0};
Point(22) = {-0.024411, 0.748991, 0, 1.0};
Point(23) = {-0.029873, 0.748511, 0, 1.0};
Point(24) = {-0.035157, 0.747905, 0, 1.0};
Point(25) = {-0.040225, 0.747164, 0, 1.0};
Point(26) = {-0.045045, 0.746271, 0, 1.0};
Point(27) = {-0.049586, 0.745191, 0, 1.0};
Point(28) = {-0.053810, 0.743905, 0, 1.0};
Point(29) = {-0.057694, 0.742438, 0, 1.0};
Point(30) = {-0.061213, 0.740840, 0, 1.0};
Point(31) = {-0.064347, 0.739131, 0, 1.0};
Point(32) = {-0.067071, 0.737275, 0, 1.0};
Point(33) = {-0.069368, 0.735316, 0, 1.0};
Point(34) = {-0.071249, 0.733463, 0, 1.0};
Point(35) = {-0.072727, 0.731854, 0, 1.0};
Point(36) = {-0.073756, 0.730404, 0, 1.0};
Point(37) = {-0.074292, 0.729181, 0, 1.0};
Point(38) = {-0.074400, 0.728849, 0, 1.0};
Point(39) = {-0.074162, 0.728159, 0, 1.0};
Point(40) = {-0.073337, 0.727110, 0, 1.0};
Point(41) = {-0.071977, 0.725964, 0, 1.0};
Point(42) = {-0.070144, 0.724776, 0, 1.0};
Point(43) = {-0.067858, 0.723453, 0, 1.0};
Point(44) = {-0.065144, 0.722132, 0, 1.0};
Point(45) = {-0.062041, 0.721017, 0, 1.0};
Point(46) = {-0.058580, 0.720147, 0, 1.0};
Point(47) = {-0.054772, 0.719481, 0, 1.0};
Point(48) = {-0.050645, 0.719035, 0, 1.0};
Point(49) = {-0.046234, 0.718847, 0, 1.0};
Point(50) = {-0.041567, 0.718939, 0, 1.0};
Point(51) = {-0.036677, 0.719281, 0, 1.0};
Point(52) = {-0.031585, 0.719833, 0, 1.0};
Point(53) = {-0.026318, 0.720570, 0, 1.0};
Point(54) = {-0.020909, 0.721474, 0, 1.0};
Point(55) = {-0.015385, 0.722526, 0, 1.0};
Point(56) = {-0.009771, 0.723700, 0, 1.0};
Point(57) = {-0.004099, 0.724971, 0, 1.0};
Point(58) = {0.001614, 0.726321, 0, 1.0};
Point(59) = {0.007325, 0.727735, 0, 1.0};
Point(60) = {0.013033, 0.729213, 0, 1.0};
Point(61) = {0.018739, 0.730750, 0, 1.0};
Point(62) = {0.024401, 0.732330, 0, 1.0};
Point(63) = {0.029982, 0.733934, 0, 1.0};
Point(64) = {0.035436, 0.735550, 0, 1.0};
Point(65) = {0.040721, 0.737160, 0, 1.0};
Point(66) = {0.045794, 0.738732, 0, 1.0};
Point(67) = {0.050615, 0.740220, 0, 1.0};
Point(68) = {0.055146, 0.741572, 0, 1.0};
Point(69) = {0.059347, 0.742752, 0, 1.0};
Point(70) = {0.063173, 0.743754, 0, 1.0};
Point(71) = {0.066582, 0.744603, 0, 1.0};
Point(72) = {0.069530, 0.745342, 0, 1.0};
Point(73) = {0.071985, 0.746017, 0, 1.0};
Point(74) = {0.073961, 0.746656, 0, 1.0};
Point(75) = {0.074518, 0.746860, 0, 1.0};
Point(76) = {-0.074333, -0.748313, 0, 1.0};
Point(77) = {-0.073743, -0.748372, 0, 1.0};
Point(78) = {-0.071670, -0.748496, 0, 1.0};
Point(79) = {-0.069123, -0.748534, 0, 1.0};
Point(80) = {-0.066084, -0.748511, 0, 1.0};
Point(81) = {-0.062571, -0.748479, 0, 1.0};
Point(82) = {-0.058617, -0.748491, 0, 1.0};
Point(83) = {-0.054254, -0.748581, 0, 1.0};
Point(84) = {-0.049529, -0.748756, 0, 1.0};
Point(85) = {-0.044489, -0.748988, 0, 1.0};
Point(86) = {-0.039184, -0.749240, 0, 1.0};
Point(87) = {-0.033664, -0.749475, 0, 1.0};
Point(88) = {-0.027979, -0.749673, 0, 1.0};
Point(89) = {-0.022174, -0.749829, 0, 1.0};
Point(90) = {-0.016297, -0.749940, 0, 1.0};
Point(91) = {-0.010388, -0.749999, 0, 1.0};
Point(92) = {-0.004491, -0.750000, 0, 1.0};
Point(93) = {0.001392, -0.749939, 0, 1.0};
Point(94) = {0.007260, -0.749815, 0, 1.0};
Point(95) = {0.013070, -0.749625, 0, 1.0};
Point(96) = {0.018799, -0.749356, 0, 1.0};
Point(97) = {0.024411, -0.748991, 0, 1.0};
Point(98) = {0.029873, -0.748511, 0, 1.0};
Point(99) = {0.035157, -0.747905, 0, 1.0};
Point(100) = {0.040225, -0.747164, 0, 1.0};
Point(101) = {0.045045, -0.746271, 0, 1.0};
Point(102) = {0.049586, -0.745191, 0, 1.0};
Point(103) = {0.053810, -0.743905, 0, 1.0};
Point(104) = {0.057694, -0.742438, 0, 1.0};
Point(105) = {0.061213, -0.740840, 0, 1.0};
Point(106) = {0.064347, -0.739131, 0, 1.0};
Point(107) = {0.067071, -0.737275, 0, 1.0};
Point(108) = {0.069368, -0.735316, 0, 1.0};
Point(109) = {0.071249, -0.733463, 0, 1.0};
Point(110) = {0.072727, -0.731854, 0, 1.0};
Point(111) = {0.073756, -0.730404, 0, 1.0};
Point(112) = {0.074292, -0.729181, 0, 1.0};
Point(113) = {0.074400, -0.728849, 0, 1.0};
Point(114) = {0.074162, -0.728159, 0, 1.0};
Point(115) = {0.073337, -0.727110, 0, 1.0};
Point(116) = {0.071977, -0.725964, 0, 1.0};
Point(117) = {0.070144, -0.724776, 0, 1.0};
Point(118) = {0.067858, -0.723453, 0, 1.0};
Point(119) = {0.065144, -0.722132, 0, 1.0};
Point(120) = {0.062041, -0.721017, 0, 1.0};
Point(121) = {0.058580, -0.720147, 0, 1.0};
Point(122) = {0.054772, -0.719481, 0, 1.0};
Point(123) = {0.050645, -0.719035, 0, 1.0};
Point(124) = {0.046234, -0.718847, 0, 1.0};
Point(125) = {0.041567, -0.718939, 0, 1.0};
Point(126) = {0.036677, -0.719281, 0, 1.0};
Point(127) = {0.031585, -0.719833, 0, 1.0};
Point(128) = {0.026318, -0.720570, 0, 1.0};
Point(129) = {0.020909, -0.721474, 0, 1.0};
Point(130) = {0.015385, -0.722526, 0, 1.0};
Point(131) = {0.009771, -0.723700, 0, 1.0};
Point(132) = {0.004099, -0.724971, 0, 1.0};
Point(133) = {-0.001614, -0.726321, 0, 1.0};
Point(134) = {-0.007325, -0.727735, 0, 1.0};
Point(135) = {-0.013033, -0.729213, 0, 1.0};
Point(136) = {-0.018739, -0.730750, 0, 1.0};
Point(137) = {-0.024401, -0.732330, 0, 1.0};
Point(138) = {-0.029982, -0.733934, 0, 1.0};
Point(139) = {-0.035436, -0.735550, 0, 1.0};
Point(140) = {-0.040721, -0.737160, 0, 1.0};
Point(141) = {-0.045794, -0.738732, 0, 1.0};
Point(142) = {-0.050615, -0.740220, 0, 1.0};
Point(143) = {-0.055146, -0.741572, 0, 1.0};
Point(144) = {-0.059347, -0.742752, 0, 1.0};
Point(145) = {-0.063173, -0.743754, 0, 1.0};
Point(146) = {-0.066582, -0.744603, 0, 1.0};
Point(147) = {-0.069530, -0.745342, 0, 1.0};
Point(148) = {-0.071985, -0.746017, 0, 1.0};
Point(149) = {-0.073961, -0.746656, 0, 1.0};
Point(150) = {-0.074518, -0.746860, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:99};
Spline(6) = {99:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {36.00000000, 15.00000000, 0, 1.0};
Point(154) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
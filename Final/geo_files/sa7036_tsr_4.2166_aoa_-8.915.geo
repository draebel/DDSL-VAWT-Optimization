SetFactory("OpenCASCADE");

Point(1) = {0.147584, 0.749680, 0, 1.0};
Point(2) = {0.147212, 0.749660, 0, 1.0};
Point(3) = {0.146107, 0.749621, 0, 1.0};
Point(4) = {0.144294, 0.749589, 0, 1.0};
Point(5) = {0.141814, 0.749581, 0, 1.0};
Point(6) = {0.138705, 0.749603, 0, 1.0};
Point(7) = {0.135013, 0.749658, 0, 1.0};
Point(8) = {0.130790, 0.749738, 0, 1.0};
Point(9) = {0.126077, 0.749829, 0, 1.0};
Point(10) = {0.120919, 0.749915, 0, 1.0};
Point(11) = {0.115354, 0.749977, 0, 1.0};
Point(12) = {0.109421, 0.750000, 0, 1.0};
Point(13) = {0.103152, 0.749974, 0, 1.0};
Point(14) = {0.096586, 0.749888, 0, 1.0};
Point(15) = {0.089759, 0.749732, 0, 1.0};
Point(16) = {0.082709, 0.749508, 0, 1.0};
Point(17) = {0.075481, 0.749217, 0, 1.0};
Point(18) = {0.068125, 0.748850, 0, 1.0};
Point(19) = {0.060680, 0.748403, 0, 1.0};
Point(20) = {0.053197, 0.747875, 0, 1.0};
Point(21) = {0.045718, 0.747261, 0, 1.0};
Point(22) = {0.038286, 0.746557, 0, 1.0};
Point(23) = {0.030946, 0.745764, 0, 1.0};
Point(24) = {0.023739, 0.744874, 0, 1.0};
Point(25) = {0.016699, 0.743897, 0, 1.0};
Point(26) = {0.009870, 0.742826, 0, 1.0};
Point(27) = {0.003285, 0.741664, 0, 1.0};
Point(28) = {-0.003018, 0.740418, 0, 1.0};
Point(29) = {-0.009015, 0.739088, 0, 1.0};
Point(30) = {-0.014675, 0.737680, 0, 1.0};
Point(31) = {-0.019966, 0.736204, 0, 1.0};
Point(32) = {-0.024872, 0.734663, 0, 1.0};
Point(33) = {-0.029379, 0.733076, 0, 1.0};
Point(34) = {-0.033456, 0.731448, 0, 1.0};
Point(35) = {-0.037101, 0.729790, 0, 1.0};
Point(36) = {-0.040298, 0.728130, 0, 1.0};
Point(37) = {-0.043041, 0.726477, 0, 1.0};
Point(38) = {-0.045331, 0.724852, 0, 1.0};
Point(39) = {-0.047163, 0.723290, 0, 1.0};
Point(40) = {-0.048530, 0.721820, 0, 1.0};
Point(41) = {-0.049440, 0.720473, 0, 1.0};
Point(42) = {-0.049891, 0.719293, 0, 1.0};
Point(43) = {-0.049895, 0.718391, 0, 1.0};
Point(44) = {-0.049259, 0.717796, 0, 1.0};
Point(45) = {-0.047900, 0.717376, 0, 1.0};
Point(46) = {-0.045955, 0.717074, 0, 1.0};
Point(47) = {-0.043451, 0.716930, 0, 1.0};
Point(48) = {-0.040391, 0.716963, 0, 1.0};
Point(49) = {-0.036782, 0.717158, 0, 1.0};
Point(50) = {-0.032647, 0.717513, 0, 1.0};
Point(51) = {-0.028006, 0.718027, 0, 1.0};
Point(52) = {-0.022884, 0.718695, 0, 1.0};
Point(53) = {-0.017306, 0.719505, 0, 1.0};
Point(54) = {-0.011306, 0.720450, 0, 1.0};
Point(55) = {-0.004914, 0.721520, 0, 1.0};
Point(56) = {0.001830, 0.722703, 0, 1.0};
Point(57) = {0.008886, 0.723986, 0, 1.0};
Point(58) = {0.016216, 0.725356, 0, 1.0};
Point(59) = {0.023772, 0.726799, 0, 1.0};
Point(60) = {0.031508, 0.728296, 0, 1.0};
Point(61) = {0.039372, 0.729835, 0, 1.0};
Point(62) = {0.047315, 0.731403, 0, 1.0};
Point(63) = {0.055281, 0.732989, 0, 1.0};
Point(64) = {0.063231, 0.734582, 0, 1.0};
Point(65) = {0.071116, 0.736159, 0, 1.0};
Point(66) = {0.078882, 0.737705, 0, 1.0};
Point(67) = {0.086478, 0.739200, 0, 1.0};
Point(68) = {0.093846, 0.740627, 0, 1.0};
Point(69) = {0.100934, 0.741978, 0, 1.0};
Point(70) = {0.107691, 0.743234, 0, 1.0};
Point(71) = {0.114064, 0.744392, 0, 1.0};
Point(72) = {0.120004, 0.745441, 0, 1.0};
Point(73) = {0.125460, 0.746380, 0, 1.0};
Point(74) = {0.130399, 0.747209, 0, 1.0};
Point(75) = {0.134786, 0.747922, 0, 1.0};
Point(76) = {0.138582, 0.748511, 0, 1.0};
Point(77) = {0.141757, 0.748975, 0, 1.0};
Point(78) = {0.144275, 0.749313, 0, 1.0};
Point(79) = {0.146101, 0.749533, 0, 1.0};
Point(80) = {0.147210, 0.749648, 0, 1.0};
Point(81) = {-0.147584, -0.749680, 0, 1.0};
Point(82) = {-0.147212, -0.749660, 0, 1.0};
Point(83) = {-0.146107, -0.749621, 0, 1.0};
Point(84) = {-0.144294, -0.749589, 0, 1.0};
Point(85) = {-0.141814, -0.749581, 0, 1.0};
Point(86) = {-0.138705, -0.749603, 0, 1.0};
Point(87) = {-0.135013, -0.749658, 0, 1.0};
Point(88) = {-0.130790, -0.749738, 0, 1.0};
Point(89) = {-0.126077, -0.749829, 0, 1.0};
Point(90) = {-0.120919, -0.749915, 0, 1.0};
Point(91) = {-0.115354, -0.749977, 0, 1.0};
Point(92) = {-0.109421, -0.750000, 0, 1.0};
Point(93) = {-0.103152, -0.749974, 0, 1.0};
Point(94) = {-0.096586, -0.749888, 0, 1.0};
Point(95) = {-0.089759, -0.749732, 0, 1.0};
Point(96) = {-0.082709, -0.749508, 0, 1.0};
Point(97) = {-0.075481, -0.749217, 0, 1.0};
Point(98) = {-0.068125, -0.748850, 0, 1.0};
Point(99) = {-0.060680, -0.748403, 0, 1.0};
Point(100) = {-0.053197, -0.747875, 0, 1.0};
Point(101) = {-0.045718, -0.747261, 0, 1.0};
Point(102) = {-0.038286, -0.746557, 0, 1.0};
Point(103) = {-0.030946, -0.745764, 0, 1.0};
Point(104) = {-0.023739, -0.744874, 0, 1.0};
Point(105) = {-0.016699, -0.743897, 0, 1.0};
Point(106) = {-0.009870, -0.742826, 0, 1.0};
Point(107) = {-0.003285, -0.741664, 0, 1.0};
Point(108) = {0.003018, -0.740418, 0, 1.0};
Point(109) = {0.009015, -0.739088, 0, 1.0};
Point(110) = {0.014675, -0.737680, 0, 1.0};
Point(111) = {0.019966, -0.736204, 0, 1.0};
Point(112) = {0.024872, -0.734663, 0, 1.0};
Point(113) = {0.029379, -0.733076, 0, 1.0};
Point(114) = {0.033456, -0.731448, 0, 1.0};
Point(115) = {0.037101, -0.729790, 0, 1.0};
Point(116) = {0.040298, -0.728130, 0, 1.0};
Point(117) = {0.043041, -0.726477, 0, 1.0};
Point(118) = {0.045331, -0.724852, 0, 1.0};
Point(119) = {0.047163, -0.723290, 0, 1.0};
Point(120) = {0.048530, -0.721820, 0, 1.0};
Point(121) = {0.049440, -0.720473, 0, 1.0};
Point(122) = {0.049891, -0.719293, 0, 1.0};
Point(123) = {0.049895, -0.718391, 0, 1.0};
Point(124) = {0.049259, -0.717796, 0, 1.0};
Point(125) = {0.047900, -0.717376, 0, 1.0};
Point(126) = {0.045955, -0.717074, 0, 1.0};
Point(127) = {0.043451, -0.716930, 0, 1.0};
Point(128) = {0.040391, -0.716963, 0, 1.0};
Point(129) = {0.036782, -0.717158, 0, 1.0};
Point(130) = {0.032647, -0.717513, 0, 1.0};
Point(131) = {0.028006, -0.718027, 0, 1.0};
Point(132) = {0.022884, -0.718695, 0, 1.0};
Point(133) = {0.017306, -0.719505, 0, 1.0};
Point(134) = {0.011306, -0.720450, 0, 1.0};
Point(135) = {0.004914, -0.721520, 0, 1.0};
Point(136) = {-0.001830, -0.722703, 0, 1.0};
Point(137) = {-0.008886, -0.723986, 0, 1.0};
Point(138) = {-0.016216, -0.725356, 0, 1.0};
Point(139) = {-0.023772, -0.726799, 0, 1.0};
Point(140) = {-0.031508, -0.728296, 0, 1.0};
Point(141) = {-0.039372, -0.729835, 0, 1.0};
Point(142) = {-0.047315, -0.731403, 0, 1.0};
Point(143) = {-0.055281, -0.732989, 0, 1.0};
Point(144) = {-0.063231, -0.734582, 0, 1.0};
Point(145) = {-0.071116, -0.736159, 0, 1.0};
Point(146) = {-0.078882, -0.737705, 0, 1.0};
Point(147) = {-0.086478, -0.739200, 0, 1.0};
Point(148) = {-0.093846, -0.740627, 0, 1.0};
Point(149) = {-0.100934, -0.741978, 0, 1.0};
Point(150) = {-0.107691, -0.743234, 0, 1.0};
Point(151) = {-0.114064, -0.744392, 0, 1.0};
Point(152) = {-0.120004, -0.745441, 0, 1.0};
Point(153) = {-0.125460, -0.746380, 0, 1.0};
Point(154) = {-0.130399, -0.747209, 0, 1.0};
Point(155) = {-0.134786, -0.747922, 0, 1.0};
Point(156) = {-0.138582, -0.748511, 0, 1.0};
Point(157) = {-0.141757, -0.748975, 0, 1.0};
Point(158) = {-0.144275, -0.749313, 0, 1.0};
Point(159) = {-0.146101, -0.749533, 0, 1.0};
Point(160) = {-0.147210, -0.749648, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:136};
Spline(7) = {136:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
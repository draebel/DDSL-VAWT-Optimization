SetFactory("OpenCASCADE");

Point(1) = {0.073792, 0.749840, 0, 1.0};
Point(2) = {0.073606, 0.749830, 0, 1.0};
Point(3) = {0.073054, 0.749810, 0, 1.0};
Point(4) = {0.072147, 0.749795, 0, 1.0};
Point(5) = {0.070907, 0.749790, 0, 1.0};
Point(6) = {0.069352, 0.749802, 0, 1.0};
Point(7) = {0.067507, 0.749829, 0, 1.0};
Point(8) = {0.065395, 0.749869, 0, 1.0};
Point(9) = {0.063038, 0.749915, 0, 1.0};
Point(10) = {0.060460, 0.749957, 0, 1.0};
Point(11) = {0.057677, 0.749989, 0, 1.0};
Point(12) = {0.054711, 0.750000, 0, 1.0};
Point(13) = {0.051576, 0.749987, 0, 1.0};
Point(14) = {0.048293, 0.749944, 0, 1.0};
Point(15) = {0.044880, 0.749866, 0, 1.0};
Point(16) = {0.041354, 0.749754, 0, 1.0};
Point(17) = {0.037740, 0.749608, 0, 1.0};
Point(18) = {0.034062, 0.749425, 0, 1.0};
Point(19) = {0.030340, 0.749202, 0, 1.0};
Point(20) = {0.026599, 0.748938, 0, 1.0};
Point(21) = {0.022859, 0.748630, 0, 1.0};
Point(22) = {0.019143, 0.748278, 0, 1.0};
Point(23) = {0.015473, 0.747882, 0, 1.0};
Point(24) = {0.011869, 0.747437, 0, 1.0};
Point(25) = {0.008349, 0.746949, 0, 1.0};
Point(26) = {0.004935, 0.746413, 0, 1.0};
Point(27) = {0.001642, 0.745832, 0, 1.0};
Point(28) = {-0.001509, 0.745209, 0, 1.0};
Point(29) = {-0.004507, 0.744544, 0, 1.0};
Point(30) = {-0.007337, 0.743840, 0, 1.0};
Point(31) = {-0.009983, 0.743102, 0, 1.0};
Point(32) = {-0.012436, 0.742332, 0, 1.0};
Point(33) = {-0.014689, 0.741538, 0, 1.0};
Point(34) = {-0.016728, 0.740724, 0, 1.0};
Point(35) = {-0.018550, 0.739895, 0, 1.0};
Point(36) = {-0.020149, 0.739065, 0, 1.0};
Point(37) = {-0.021521, 0.738238, 0, 1.0};
Point(38) = {-0.022666, 0.737426, 0, 1.0};
Point(39) = {-0.023582, 0.736645, 0, 1.0};
Point(40) = {-0.024265, 0.735910, 0, 1.0};
Point(41) = {-0.024720, 0.735236, 0, 1.0};
Point(42) = {-0.024945, 0.734646, 0, 1.0};
Point(43) = {-0.024947, 0.734196, 0, 1.0};
Point(44) = {-0.024630, 0.733898, 0, 1.0};
Point(45) = {-0.023950, 0.733688, 0, 1.0};
Point(46) = {-0.022978, 0.733537, 0, 1.0};
Point(47) = {-0.021725, 0.733465, 0, 1.0};
Point(48) = {-0.020195, 0.733481, 0, 1.0};
Point(49) = {-0.018391, 0.733579, 0, 1.0};
Point(50) = {-0.016323, 0.733757, 0, 1.0};
Point(51) = {-0.014003, 0.734013, 0, 1.0};
Point(52) = {-0.011442, 0.734347, 0, 1.0};
Point(53) = {-0.008653, 0.734752, 0, 1.0};
Point(54) = {-0.005653, 0.735225, 0, 1.0};
Point(55) = {-0.002457, 0.735760, 0, 1.0};
Point(56) = {0.000915, 0.736351, 0, 1.0};
Point(57) = {0.004443, 0.736993, 0, 1.0};
Point(58) = {0.008108, 0.737678, 0, 1.0};
Point(59) = {0.011886, 0.738399, 0, 1.0};
Point(60) = {0.015754, 0.739148, 0, 1.0};
Point(61) = {0.019686, 0.739917, 0, 1.0};
Point(62) = {0.023657, 0.740701, 0, 1.0};
Point(63) = {0.027641, 0.741494, 0, 1.0};
Point(64) = {0.031615, 0.742291, 0, 1.0};
Point(65) = {0.035558, 0.743079, 0, 1.0};
Point(66) = {0.039441, 0.743852, 0, 1.0};
Point(67) = {0.043239, 0.744600, 0, 1.0};
Point(68) = {0.046923, 0.745314, 0, 1.0};
Point(69) = {0.050467, 0.745989, 0, 1.0};
Point(70) = {0.053845, 0.746617, 0, 1.0};
Point(71) = {0.057032, 0.747196, 0, 1.0};
Point(72) = {0.060002, 0.747720, 0, 1.0};
Point(73) = {0.062730, 0.748190, 0, 1.0};
Point(74) = {0.065200, 0.748605, 0, 1.0};
Point(75) = {0.067393, 0.748961, 0, 1.0};
Point(76) = {0.069291, 0.749256, 0, 1.0};
Point(77) = {0.070878, 0.749487, 0, 1.0};
Point(78) = {0.072137, 0.749656, 0, 1.0};
Point(79) = {0.073050, 0.749766, 0, 1.0};
Point(80) = {0.073605, 0.749824, 0, 1.0};
Point(81) = {-0.073792, -0.749840, 0, 1.0};
Point(82) = {-0.073606, -0.749830, 0, 1.0};
Point(83) = {-0.073054, -0.749810, 0, 1.0};
Point(84) = {-0.072147, -0.749795, 0, 1.0};
Point(85) = {-0.070907, -0.749790, 0, 1.0};
Point(86) = {-0.069352, -0.749802, 0, 1.0};
Point(87) = {-0.067507, -0.749829, 0, 1.0};
Point(88) = {-0.065395, -0.749869, 0, 1.0};
Point(89) = {-0.063038, -0.749915, 0, 1.0};
Point(90) = {-0.060460, -0.749957, 0, 1.0};
Point(91) = {-0.057677, -0.749989, 0, 1.0};
Point(92) = {-0.054711, -0.750000, 0, 1.0};
Point(93) = {-0.051576, -0.749987, 0, 1.0};
Point(94) = {-0.048293, -0.749944, 0, 1.0};
Point(95) = {-0.044880, -0.749866, 0, 1.0};
Point(96) = {-0.041354, -0.749754, 0, 1.0};
Point(97) = {-0.037740, -0.749608, 0, 1.0};
Point(98) = {-0.034062, -0.749425, 0, 1.0};
Point(99) = {-0.030340, -0.749202, 0, 1.0};
Point(100) = {-0.026599, -0.748938, 0, 1.0};
Point(101) = {-0.022859, -0.748630, 0, 1.0};
Point(102) = {-0.019143, -0.748278, 0, 1.0};
Point(103) = {-0.015473, -0.747882, 0, 1.0};
Point(104) = {-0.011869, -0.747437, 0, 1.0};
Point(105) = {-0.008349, -0.746949, 0, 1.0};
Point(106) = {-0.004935, -0.746413, 0, 1.0};
Point(107) = {-0.001642, -0.745832, 0, 1.0};
Point(108) = {0.001509, -0.745209, 0, 1.0};
Point(109) = {0.004507, -0.744544, 0, 1.0};
Point(110) = {0.007337, -0.743840, 0, 1.0};
Point(111) = {0.009983, -0.743102, 0, 1.0};
Point(112) = {0.012436, -0.742332, 0, 1.0};
Point(113) = {0.014689, -0.741538, 0, 1.0};
Point(114) = {0.016728, -0.740724, 0, 1.0};
Point(115) = {0.018550, -0.739895, 0, 1.0};
Point(116) = {0.020149, -0.739065, 0, 1.0};
Point(117) = {0.021521, -0.738238, 0, 1.0};
Point(118) = {0.022666, -0.737426, 0, 1.0};
Point(119) = {0.023582, -0.736645, 0, 1.0};
Point(120) = {0.024265, -0.735910, 0, 1.0};
Point(121) = {0.024720, -0.735236, 0, 1.0};
Point(122) = {0.024945, -0.734646, 0, 1.0};
Point(123) = {0.024947, -0.734196, 0, 1.0};
Point(124) = {0.024630, -0.733898, 0, 1.0};
Point(125) = {0.023950, -0.733688, 0, 1.0};
Point(126) = {0.022978, -0.733537, 0, 1.0};
Point(127) = {0.021725, -0.733465, 0, 1.0};
Point(128) = {0.020195, -0.733481, 0, 1.0};
Point(129) = {0.018391, -0.733579, 0, 1.0};
Point(130) = {0.016323, -0.733757, 0, 1.0};
Point(131) = {0.014003, -0.734013, 0, 1.0};
Point(132) = {0.011442, -0.734347, 0, 1.0};
Point(133) = {0.008653, -0.734752, 0, 1.0};
Point(134) = {0.005653, -0.735225, 0, 1.0};
Point(135) = {0.002457, -0.735760, 0, 1.0};
Point(136) = {-0.000915, -0.736351, 0, 1.0};
Point(137) = {-0.004443, -0.736993, 0, 1.0};
Point(138) = {-0.008108, -0.737678, 0, 1.0};
Point(139) = {-0.011886, -0.738399, 0, 1.0};
Point(140) = {-0.015754, -0.739148, 0, 1.0};
Point(141) = {-0.019686, -0.739917, 0, 1.0};
Point(142) = {-0.023657, -0.740701, 0, 1.0};
Point(143) = {-0.027641, -0.741494, 0, 1.0};
Point(144) = {-0.031615, -0.742291, 0, 1.0};
Point(145) = {-0.035558, -0.743079, 0, 1.0};
Point(146) = {-0.039441, -0.743852, 0, 1.0};
Point(147) = {-0.043239, -0.744600, 0, 1.0};
Point(148) = {-0.046923, -0.745314, 0, 1.0};
Point(149) = {-0.050467, -0.745989, 0, 1.0};
Point(150) = {-0.053845, -0.746617, 0, 1.0};
Point(151) = {-0.057032, -0.747196, 0, 1.0};
Point(152) = {-0.060002, -0.747720, 0, 1.0};
Point(153) = {-0.062730, -0.748190, 0, 1.0};
Point(154) = {-0.065200, -0.748605, 0, 1.0};
Point(155) = {-0.067393, -0.748961, 0, 1.0};
Point(156) = {-0.069291, -0.749256, 0, 1.0};
Point(157) = {-0.070878, -0.749487, 0, 1.0};
Point(158) = {-0.072137, -0.749656, 0, 1.0};
Point(159) = {-0.073050, -0.749766, 0, 1.0};
Point(160) = {-0.073605, -0.749824, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:136};
Spline(7) = {136:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149897, 0.728369, 0, 1.0};
Point(2) = {0.149242, 0.728539, 0, 1.0};
Point(3) = {0.147361, 0.729066, 0, 1.0};
Point(4) = {0.144405, 0.729922, 0, 1.0};
Point(5) = {0.140459, 0.731017, 0, 1.0};
Point(6) = {0.135548, 0.732298, 0, 1.0};
Point(7) = {0.129732, 0.733760, 0, 1.0};
Point(8) = {0.123108, 0.735380, 0, 1.0};
Point(9) = {0.115778, 0.737119, 0, 1.0};
Point(10) = {0.107841, 0.738926, 0, 1.0};
Point(11) = {0.099398, 0.740749, 0, 1.0};
Point(12) = {0.090545, 0.742532, 0, 1.0};
Point(13) = {0.081375, 0.744220, 0, 1.0};
Point(14) = {0.071978, 0.745761, 0, 1.0};
Point(15) = {0.062436, 0.747112, 0, 1.0};
Point(16) = {0.052831, 0.748232, 0, 1.0};
Point(17) = {0.043240, 0.749094, 0, 1.0};
Point(18) = {0.033735, 0.749674, 0, 1.0};
Point(19) = {0.024380, 0.749971, 0, 1.0};
Point(20) = {0.015252, 0.750000, 0, 1.0};
Point(21) = {0.006444, 0.749777, 0, 1.0};
Point(22) = {-0.001958, 0.749307, 0, 1.0};
Point(23) = {-0.009874, 0.748603, 0, 1.0};
Point(24) = {-0.017232, 0.747678, 0, 1.0};
Point(25) = {-0.023966, 0.746553, 0, 1.0};
Point(26) = {-0.030015, 0.745251, 0, 1.0};
Point(27) = {-0.035325, 0.743801, 0, 1.0};
Point(28) = {-0.039852, 0.742230, 0, 1.0};
Point(29) = {-0.043568, 0.740576, 0, 1.0};
Point(30) = {-0.046451, 0.738886, 0, 1.0};
Point(31) = {-0.048500, 0.737226, 0, 1.0};
Point(32) = {-0.049638, 0.735817, 0, 1.0};
Point(33) = {-0.049843, 0.735405, 0, 1.0};
Point(34) = {-0.049967, 0.735028, 0, 1.0};
Point(35) = {-0.050000, 0.734802, 0, 1.0};
Point(36) = {-0.049981, 0.734604, 0, 1.0};
Point(37) = {-0.049895, 0.734421, 0, 1.0};
Point(38) = {-0.049745, 0.734232, 0, 1.0};
Point(39) = {-0.049428, 0.733941, 0, 1.0};
Point(40) = {-0.049011, 0.733643, 0, 1.0};
Point(41) = {-0.046763, 0.732610, 0, 1.0};
Point(42) = {-0.043623, 0.731755, 0, 1.0};
Point(43) = {-0.039483, 0.731059, 0, 1.0};
Point(44) = {-0.034352, 0.730535, 0, 1.0};
Point(45) = {-0.028258, 0.730182, 0, 1.0};
Point(46) = {-0.021241, 0.729987, 0, 1.0};
Point(47) = {-0.013360, 0.729929, 0, 1.0};
Point(48) = {-0.004687, 0.729984, 0, 1.0};
Point(49) = {0.004691, 0.730121, 0, 1.0};
Point(50) = {0.014669, 0.730309, 0, 1.0};
Point(51) = {0.025126, 0.730517, 0, 1.0};
Point(52) = {0.035936, 0.730726, 0, 1.0};
Point(53) = {0.046964, 0.730913, 0, 1.0};
Point(54) = {0.058075, 0.731063, 0, 1.0};
Point(55) = {0.069128, 0.731161, 0, 1.0};
Point(56) = {0.079983, 0.731198, 0, 1.0};
Point(57) = {0.090500, 0.731164, 0, 1.0};
Point(58) = {0.100542, 0.731058, 0, 1.0};
Point(59) = {0.109976, 0.730877, 0, 1.0};
Point(60) = {0.118675, 0.730626, 0, 1.0};
Point(61) = {0.126517, 0.730311, 0, 1.0};
Point(62) = {0.133391, 0.729945, 0, 1.0};
Point(63) = {0.139191, 0.729544, 0, 1.0};
Point(64) = {0.143816, 0.729131, 0, 1.0};
Point(65) = {0.147177, 0.728752, 0, 1.0};
Point(66) = {0.149214, 0.728473, 0, 1.0};
Point(67) = {-0.149897, -0.728369, 0, 1.0};
Point(68) = {-0.149242, -0.728539, 0, 1.0};
Point(69) = {-0.147361, -0.729066, 0, 1.0};
Point(70) = {-0.144405, -0.729922, 0, 1.0};
Point(71) = {-0.140459, -0.731017, 0, 1.0};
Point(72) = {-0.135548, -0.732298, 0, 1.0};
Point(73) = {-0.129732, -0.733760, 0, 1.0};
Point(74) = {-0.123108, -0.735380, 0, 1.0};
Point(75) = {-0.115778, -0.737119, 0, 1.0};
Point(76) = {-0.107841, -0.738926, 0, 1.0};
Point(77) = {-0.099398, -0.740749, 0, 1.0};
Point(78) = {-0.090545, -0.742532, 0, 1.0};
Point(79) = {-0.081375, -0.744220, 0, 1.0};
Point(80) = {-0.071978, -0.745761, 0, 1.0};
Point(81) = {-0.062436, -0.747112, 0, 1.0};
Point(82) = {-0.052831, -0.748232, 0, 1.0};
Point(83) = {-0.043240, -0.749094, 0, 1.0};
Point(84) = {-0.033735, -0.749674, 0, 1.0};
Point(85) = {-0.024380, -0.749971, 0, 1.0};
Point(86) = {-0.015252, -0.750000, 0, 1.0};
Point(87) = {-0.006444, -0.749777, 0, 1.0};
Point(88) = {0.001958, -0.749307, 0, 1.0};
Point(89) = {0.009874, -0.748603, 0, 1.0};
Point(90) = {0.017232, -0.747678, 0, 1.0};
Point(91) = {0.023966, -0.746553, 0, 1.0};
Point(92) = {0.030015, -0.745251, 0, 1.0};
Point(93) = {0.035325, -0.743801, 0, 1.0};
Point(94) = {0.039852, -0.742230, 0, 1.0};
Point(95) = {0.043568, -0.740576, 0, 1.0};
Point(96) = {0.046451, -0.738886, 0, 1.0};
Point(97) = {0.048500, -0.737226, 0, 1.0};
Point(98) = {0.049638, -0.735817, 0, 1.0};
Point(99) = {0.049843, -0.735405, 0, 1.0};
Point(100) = {0.049967, -0.735028, 0, 1.0};
Point(101) = {0.050000, -0.734802, 0, 1.0};
Point(102) = {0.049981, -0.734604, 0, 1.0};
Point(103) = {0.049895, -0.734421, 0, 1.0};
Point(104) = {0.049745, -0.734232, 0, 1.0};
Point(105) = {0.049428, -0.733941, 0, 1.0};
Point(106) = {0.049011, -0.733643, 0, 1.0};
Point(107) = {0.046763, -0.732610, 0, 1.0};
Point(108) = {0.043623, -0.731755, 0, 1.0};
Point(109) = {0.039483, -0.731059, 0, 1.0};
Point(110) = {0.034352, -0.730535, 0, 1.0};
Point(111) = {0.028258, -0.730182, 0, 1.0};
Point(112) = {0.021241, -0.729987, 0, 1.0};
Point(113) = {0.013360, -0.729929, 0, 1.0};
Point(114) = {0.004687, -0.729984, 0, 1.0};
Point(115) = {-0.004691, -0.730121, 0, 1.0};
Point(116) = {-0.014669, -0.730309, 0, 1.0};
Point(117) = {-0.025126, -0.730517, 0, 1.0};
Point(118) = {-0.035936, -0.730726, 0, 1.0};
Point(119) = {-0.046964, -0.730913, 0, 1.0};
Point(120) = {-0.058075, -0.731063, 0, 1.0};
Point(121) = {-0.069128, -0.731161, 0, 1.0};
Point(122) = {-0.079983, -0.731198, 0, 1.0};
Point(123) = {-0.090500, -0.731164, 0, 1.0};
Point(124) = {-0.100542, -0.731058, 0, 1.0};
Point(125) = {-0.109976, -0.730877, 0, 1.0};
Point(126) = {-0.118675, -0.730626, 0, 1.0};
Point(127) = {-0.126517, -0.730311, 0, 1.0};
Point(128) = {-0.133391, -0.729945, 0, 1.0};
Point(129) = {-0.139191, -0.729544, 0, 1.0};
Point(130) = {-0.143816, -0.729131, 0, 1.0};
Point(131) = {-0.147177, -0.728752, 0, 1.0};
Point(132) = {-0.149214, -0.728473, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
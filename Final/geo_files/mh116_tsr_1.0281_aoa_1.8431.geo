SetFactory("OpenCASCADE");

Point(1) = {0.112422, 0.733777, 0, 1.0};
Point(2) = {0.111931, 0.733905, 0, 1.0};
Point(3) = {0.110521, 0.734299, 0, 1.0};
Point(4) = {0.108304, 0.734942, 0, 1.0};
Point(5) = {0.105344, 0.735763, 0, 1.0};
Point(6) = {0.101661, 0.736724, 0, 1.0};
Point(7) = {0.097299, 0.737820, 0, 1.0};
Point(8) = {0.092331, 0.739035, 0, 1.0};
Point(9) = {0.086833, 0.740339, 0, 1.0};
Point(10) = {0.080881, 0.741695, 0, 1.0};
Point(11) = {0.074548, 0.743062, 0, 1.0};
Point(12) = {0.067909, 0.744399, 0, 1.0};
Point(13) = {0.061031, 0.745665, 0, 1.0};
Point(14) = {0.053984, 0.746821, 0, 1.0};
Point(15) = {0.046827, 0.747834, 0, 1.0};
Point(16) = {0.039623, 0.748674, 0, 1.0};
Point(17) = {0.032430, 0.749321, 0, 1.0};
Point(18) = {0.025301, 0.749756, 0, 1.0};
Point(19) = {0.018285, 0.749978, 0, 1.0};
Point(20) = {0.011439, 0.750000, 0, 1.0};
Point(21) = {0.004833, 0.749832, 0, 1.0};
Point(22) = {-0.001468, 0.749480, 0, 1.0};
Point(23) = {-0.007406, 0.748952, 0, 1.0};
Point(24) = {-0.012924, 0.748258, 0, 1.0};
Point(25) = {-0.017974, 0.747414, 0, 1.0};
Point(26) = {-0.022511, 0.746438, 0, 1.0};
Point(27) = {-0.026494, 0.745351, 0, 1.0};
Point(28) = {-0.029889, 0.744173, 0, 1.0};
Point(29) = {-0.032676, 0.742932, 0, 1.0};
Point(30) = {-0.034838, 0.741664, 0, 1.0};
Point(31) = {-0.036375, 0.740420, 0, 1.0};
Point(32) = {-0.037229, 0.739363, 0, 1.0};
Point(33) = {-0.037383, 0.739054, 0, 1.0};
Point(34) = {-0.037475, 0.738771, 0, 1.0};
Point(35) = {-0.037500, 0.738602, 0, 1.0};
Point(36) = {-0.037486, 0.738453, 0, 1.0};
Point(37) = {-0.037421, 0.738316, 0, 1.0};
Point(38) = {-0.037309, 0.738174, 0, 1.0};
Point(39) = {-0.037071, 0.737956, 0, 1.0};
Point(40) = {-0.036758, 0.737732, 0, 1.0};
Point(41) = {-0.035072, 0.736957, 0, 1.0};
Point(42) = {-0.032718, 0.736316, 0, 1.0};
Point(43) = {-0.029612, 0.735794, 0, 1.0};
Point(44) = {-0.025764, 0.735401, 0, 1.0};
Point(45) = {-0.021194, 0.735136, 0, 1.0};
Point(46) = {-0.015931, 0.734990, 0, 1.0};
Point(47) = {-0.010020, 0.734947, 0, 1.0};
Point(48) = {-0.003515, 0.734988, 0, 1.0};
Point(49) = {0.003518, 0.735091, 0, 1.0};
Point(50) = {0.011002, 0.735232, 0, 1.0};
Point(51) = {0.018845, 0.735388, 0, 1.0};
Point(52) = {0.026952, 0.735544, 0, 1.0};
Point(53) = {0.035223, 0.735685, 0, 1.0};
Point(54) = {0.043556, 0.735797, 0, 1.0};
Point(55) = {0.051846, 0.735871, 0, 1.0};
Point(56) = {0.059988, 0.735898, 0, 1.0};
Point(57) = {0.067875, 0.735873, 0, 1.0};
Point(58) = {0.075406, 0.735793, 0, 1.0};
Point(59) = {0.082482, 0.735658, 0, 1.0};
Point(60) = {0.089006, 0.735469, 0, 1.0};
Point(61) = {0.094888, 0.735233, 0, 1.0};
Point(62) = {0.100043, 0.734959, 0, 1.0};
Point(63) = {0.104393, 0.734658, 0, 1.0};
Point(64) = {0.107862, 0.734348, 0, 1.0};
Point(65) = {0.110383, 0.734064, 0, 1.0};
Point(66) = {0.111910, 0.733855, 0, 1.0};
Point(67) = {-0.112422, -0.733777, 0, 1.0};
Point(68) = {-0.111931, -0.733905, 0, 1.0};
Point(69) = {-0.110521, -0.734299, 0, 1.0};
Point(70) = {-0.108304, -0.734942, 0, 1.0};
Point(71) = {-0.105344, -0.735763, 0, 1.0};
Point(72) = {-0.101661, -0.736724, 0, 1.0};
Point(73) = {-0.097299, -0.737820, 0, 1.0};
Point(74) = {-0.092331, -0.739035, 0, 1.0};
Point(75) = {-0.086833, -0.740339, 0, 1.0};
Point(76) = {-0.080881, -0.741695, 0, 1.0};
Point(77) = {-0.074548, -0.743062, 0, 1.0};
Point(78) = {-0.067909, -0.744399, 0, 1.0};
Point(79) = {-0.061031, -0.745665, 0, 1.0};
Point(80) = {-0.053984, -0.746821, 0, 1.0};
Point(81) = {-0.046827, -0.747834, 0, 1.0};
Point(82) = {-0.039623, -0.748674, 0, 1.0};
Point(83) = {-0.032430, -0.749321, 0, 1.0};
Point(84) = {-0.025301, -0.749756, 0, 1.0};
Point(85) = {-0.018285, -0.749978, 0, 1.0};
Point(86) = {-0.011439, -0.750000, 0, 1.0};
Point(87) = {-0.004833, -0.749832, 0, 1.0};
Point(88) = {0.001468, -0.749480, 0, 1.0};
Point(89) = {0.007406, -0.748952, 0, 1.0};
Point(90) = {0.012924, -0.748258, 0, 1.0};
Point(91) = {0.017974, -0.747414, 0, 1.0};
Point(92) = {0.022511, -0.746438, 0, 1.0};
Point(93) = {0.026494, -0.745351, 0, 1.0};
Point(94) = {0.029889, -0.744173, 0, 1.0};
Point(95) = {0.032676, -0.742932, 0, 1.0};
Point(96) = {0.034838, -0.741664, 0, 1.0};
Point(97) = {0.036375, -0.740420, 0, 1.0};
Point(98) = {0.037229, -0.739363, 0, 1.0};
Point(99) = {0.037383, -0.739054, 0, 1.0};
Point(100) = {0.037475, -0.738771, 0, 1.0};
Point(101) = {0.037500, -0.738602, 0, 1.0};
Point(102) = {0.037486, -0.738453, 0, 1.0};
Point(103) = {0.037421, -0.738316, 0, 1.0};
Point(104) = {0.037309, -0.738174, 0, 1.0};
Point(105) = {0.037071, -0.737956, 0, 1.0};
Point(106) = {0.036758, -0.737732, 0, 1.0};
Point(107) = {0.035072, -0.736957, 0, 1.0};
Point(108) = {0.032718, -0.736316, 0, 1.0};
Point(109) = {0.029612, -0.735794, 0, 1.0};
Point(110) = {0.025764, -0.735401, 0, 1.0};
Point(111) = {0.021194, -0.735136, 0, 1.0};
Point(112) = {0.015931, -0.734990, 0, 1.0};
Point(113) = {0.010020, -0.734947, 0, 1.0};
Point(114) = {0.003515, -0.734988, 0, 1.0};
Point(115) = {-0.003518, -0.735091, 0, 1.0};
Point(116) = {-0.011002, -0.735232, 0, 1.0};
Point(117) = {-0.018845, -0.735388, 0, 1.0};
Point(118) = {-0.026952, -0.735544, 0, 1.0};
Point(119) = {-0.035223, -0.735685, 0, 1.0};
Point(120) = {-0.043556, -0.735797, 0, 1.0};
Point(121) = {-0.051846, -0.735871, 0, 1.0};
Point(122) = {-0.059988, -0.735898, 0, 1.0};
Point(123) = {-0.067875, -0.735873, 0, 1.0};
Point(124) = {-0.075406, -0.735793, 0, 1.0};
Point(125) = {-0.082482, -0.735658, 0, 1.0};
Point(126) = {-0.089006, -0.735469, 0, 1.0};
Point(127) = {-0.094888, -0.735233, 0, 1.0};
Point(128) = {-0.100043, -0.734959, 0, 1.0};
Point(129) = {-0.104393, -0.734658, 0, 1.0};
Point(130) = {-0.107862, -0.734348, 0, 1.0};
Point(131) = {-0.110383, -0.734064, 0, 1.0};
Point(132) = {-0.111910, -0.733855, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
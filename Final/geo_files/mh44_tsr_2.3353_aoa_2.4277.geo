SetFactory("OpenCASCADE");

Point(1) = {0.074960, 0.735955, 0, 1.0};
Point(2) = {0.071441, 0.736456, 0, 1.0};
Point(3) = {0.066235, 0.737265, 0, 1.0};
Point(4) = {0.060351, 0.738251, 0, 1.0};
Point(5) = {0.053901, 0.739399, 0, 1.0};
Point(6) = {0.047015, 0.740656, 0, 1.0};
Point(7) = {0.039776, 0.741932, 0, 1.0};
Point(8) = {0.032223, 0.743177, 0, 1.0};
Point(9) = {0.024419, 0.744385, 0, 1.0};
Point(10) = {0.016457, 0.745536, 0, 1.0};
Point(11) = {0.008421, 0.746601, 0, 1.0};
Point(12) = {0.000390, 0.747556, 0, 1.0};
Point(13) = {-0.007552, 0.748383, 0, 1.0};
Point(14) = {-0.015322, 0.749060, 0, 1.0};
Point(15) = {-0.022848, 0.749564, 0, 1.0};
Point(16) = {-0.030061, 0.749881, 0, 1.0};
Point(17) = {-0.036900, 0.750000, 0, 1.0};
Point(18) = {-0.043311, 0.749918, 0, 1.0};
Point(19) = {-0.049240, 0.749640, 0, 1.0};
Point(20) = {-0.054634, 0.749175, 0, 1.0};
Point(21) = {-0.059451, 0.748528, 0, 1.0};
Point(22) = {-0.063657, 0.747716, 0, 1.0};
Point(23) = {-0.067225, 0.746760, 0, 1.0};
Point(24) = {-0.070134, 0.745689, 0, 1.0};
Point(25) = {-0.072368, 0.744544, 0, 1.0};
Point(26) = {-0.073920, 0.743377, 0, 1.0};
Point(27) = {-0.074673, 0.742456, 0, 1.0};
Point(28) = {-0.074825, 0.742138, 0, 1.0};
Point(29) = {-0.074913, 0.741841, 0, 1.0};
Point(30) = {-0.074933, 0.741659, 0, 1.0};
Point(31) = {-0.074913, 0.741496, 0, 1.0};
Point(32) = {-0.074841, 0.741343, 0, 1.0};
Point(33) = {-0.074718, 0.741183, 0, 1.0};
Point(34) = {-0.074460, 0.740935, 0, 1.0};
Point(35) = {-0.074121, 0.740677, 0, 1.0};
Point(36) = {-0.073886, 0.740520, 0, 1.0};
Point(37) = {-0.072068, 0.739619, 0, 1.0};
Point(38) = {-0.069453, 0.738709, 0, 1.0};
Point(39) = {-0.066088, 0.737824, 0, 1.0};
Point(40) = {-0.062012, 0.737002, 0, 1.0};
Point(41) = {-0.057254, 0.736282, 0, 1.0};
Point(42) = {-0.051833, 0.735682, 0, 1.0};
Point(43) = {-0.045781, 0.735200, 0, 1.0};
Point(44) = {-0.039145, 0.734828, 0, 1.0};
Point(45) = {-0.031986, 0.734546, 0, 1.0};
Point(46) = {-0.024382, 0.734341, 0, 1.0};
Point(47) = {-0.016417, 0.734204, 0, 1.0};
Point(48) = {-0.008177, 0.734123, 0, 1.0};
Point(49) = {0.000245, 0.734084, 0, 1.0};
Point(50) = {0.008749, 0.734076, 0, 1.0};
Point(51) = {0.017235, 0.734088, 0, 1.0};
Point(52) = {0.025599, 0.734111, 0, 1.0};
Point(53) = {0.033738, 0.734140, 0, 1.0};
Point(54) = {0.041550, 0.734174, 0, 1.0};
Point(55) = {0.048941, 0.734211, 0, 1.0};
Point(56) = {0.055821, 0.734254, 0, 1.0};
Point(57) = {0.062106, 0.734301, 0, 1.0};
Point(58) = {0.067720, 0.734358, 0, 1.0};
Point(59) = {0.072594, 0.734423, 0, 1.0};
Point(60) = {0.074897, 0.734465, 0, 1.0};
Point(61) = {-0.074960, -0.735955, 0, 1.0};
Point(62) = {-0.071441, -0.736456, 0, 1.0};
Point(63) = {-0.066235, -0.737265, 0, 1.0};
Point(64) = {-0.060351, -0.738251, 0, 1.0};
Point(65) = {-0.053901, -0.739399, 0, 1.0};
Point(66) = {-0.047015, -0.740656, 0, 1.0};
Point(67) = {-0.039776, -0.741932, 0, 1.0};
Point(68) = {-0.032223, -0.743177, 0, 1.0};
Point(69) = {-0.024419, -0.744385, 0, 1.0};
Point(70) = {-0.016457, -0.745536, 0, 1.0};
Point(71) = {-0.008421, -0.746601, 0, 1.0};
Point(72) = {-0.000390, -0.747556, 0, 1.0};
Point(73) = {0.007552, -0.748383, 0, 1.0};
Point(74) = {0.015322, -0.749060, 0, 1.0};
Point(75) = {0.022848, -0.749564, 0, 1.0};
Point(76) = {0.030061, -0.749881, 0, 1.0};
Point(77) = {0.036900, -0.750000, 0, 1.0};
Point(78) = {0.043311, -0.749918, 0, 1.0};
Point(79) = {0.049240, -0.749640, 0, 1.0};
Point(80) = {0.054634, -0.749175, 0, 1.0};
Point(81) = {0.059451, -0.748528, 0, 1.0};
Point(82) = {0.063657, -0.747716, 0, 1.0};
Point(83) = {0.067225, -0.746760, 0, 1.0};
Point(84) = {0.070134, -0.745689, 0, 1.0};
Point(85) = {0.072368, -0.744544, 0, 1.0};
Point(86) = {0.073920, -0.743377, 0, 1.0};
Point(87) = {0.074673, -0.742456, 0, 1.0};
Point(88) = {0.074825, -0.742138, 0, 1.0};
Point(89) = {0.074913, -0.741841, 0, 1.0};
Point(90) = {0.074933, -0.741659, 0, 1.0};
Point(91) = {0.074913, -0.741496, 0, 1.0};
Point(92) = {0.074841, -0.741343, 0, 1.0};
Point(93) = {0.074718, -0.741183, 0, 1.0};
Point(94) = {0.074460, -0.740935, 0, 1.0};
Point(95) = {0.074121, -0.740677, 0, 1.0};
Point(96) = {0.073886, -0.740520, 0, 1.0};
Point(97) = {0.072068, -0.739619, 0, 1.0};
Point(98) = {0.069453, -0.738709, 0, 1.0};
Point(99) = {0.066088, -0.737824, 0, 1.0};
Point(100) = {0.062012, -0.737002, 0, 1.0};
Point(101) = {0.057254, -0.736282, 0, 1.0};
Point(102) = {0.051833, -0.735682, 0, 1.0};
Point(103) = {0.045781, -0.735200, 0, 1.0};
Point(104) = {0.039145, -0.734828, 0, 1.0};
Point(105) = {0.031986, -0.734546, 0, 1.0};
Point(106) = {0.024382, -0.734341, 0, 1.0};
Point(107) = {0.016417, -0.734204, 0, 1.0};
Point(108) = {0.008177, -0.734123, 0, 1.0};
Point(109) = {-0.000245, -0.734084, 0, 1.0};
Point(110) = {-0.008749, -0.734076, 0, 1.0};
Point(111) = {-0.017235, -0.734088, 0, 1.0};
Point(112) = {-0.025599, -0.734111, 0, 1.0};
Point(113) = {-0.033738, -0.734140, 0, 1.0};
Point(114) = {-0.041550, -0.734174, 0, 1.0};
Point(115) = {-0.048941, -0.734211, 0, 1.0};
Point(116) = {-0.055821, -0.734254, 0, 1.0};
Point(117) = {-0.062106, -0.734301, 0, 1.0};
Point(118) = {-0.067720, -0.734358, 0, 1.0};
Point(119) = {-0.072594, -0.734423, 0, 1.0};
Point(120) = {-0.074897, -0.734465, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:76};
Spline(6) = {76:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {36.00000000, 15.00000000, 0, 1.0};
Point(124) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
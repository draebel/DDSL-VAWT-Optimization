SetFactory("OpenCASCADE");

Point(1) = {0.075065, 0.727315, 0, 1.0};
Point(2) = {0.073224, 0.727989, 0, 1.0};
Point(3) = {0.066827, 0.730332, 0, 1.0};
Point(4) = {0.063233, 0.731648, 0, 1.0};
Point(5) = {0.059397, 0.733053, 0, 1.0};
Point(6) = {0.055334, 0.734541, 0, 1.0};
Point(7) = {0.051061, 0.736107, 0, 1.0};
Point(8) = {0.046597, 0.737740, 0, 1.0};
Point(9) = {0.041957, 0.739303, 0, 1.0};
Point(10) = {0.037166, 0.740866, 0, 1.0};
Point(11) = {0.032240, 0.742368, 0, 1.0};
Point(12) = {0.027202, 0.743830, 0, 1.0};
Point(13) = {0.022074, 0.745190, 0, 1.0};
Point(14) = {0.016873, 0.746448, 0, 1.0};
Point(15) = {0.011626, 0.747547, 0, 1.0};
Point(16) = {0.006354, 0.748514, 0, 1.0};
Point(17) = {0.001077, 0.749254, 0, 1.0};
Point(18) = {-0.004181, 0.749792, 0, 1.0};
Point(19) = {-0.009402, 0.750000, 0, 1.0};
Point(20) = {-0.014558, 0.749977, 0, 1.0};
Point(21) = {-0.019630, 0.749651, 0, 1.0};
Point(22) = {-0.024594, 0.749168, 0, 1.0};
Point(23) = {-0.029430, 0.748472, 0, 1.0};
Point(24) = {-0.034116, 0.747638, 0, 1.0};
Point(25) = {-0.038632, 0.746643, 0, 1.0};
Point(26) = {-0.042956, 0.745522, 0, 1.0};
Point(27) = {-0.047072, 0.744290, 0, 1.0};
Point(28) = {-0.050962, 0.742956, 0, 1.0};
Point(29) = {-0.054610, 0.741532, 0, 1.0};
Point(30) = {-0.057998, 0.740045, 0, 1.0};
Point(31) = {-0.061110, 0.738507, 0, 1.0};
Point(32) = {-0.063937, 0.736931, 0, 1.0};
Point(33) = {-0.066464, 0.735345, 0, 1.0};
Point(34) = {-0.068680, 0.733774, 0, 1.0};
Point(35) = {-0.070575, 0.732228, 0, 1.0};
Point(36) = {-0.072139, 0.730763, 0, 1.0};
Point(37) = {-0.073369, 0.729360, 0, 1.0};
Point(38) = {-0.074254, 0.728191, 0, 1.0};
Point(39) = {-0.074791, 0.727275, 0, 1.0};
Point(40) = {-0.074986, 0.726180, 0, 1.0};
Point(41) = {-0.074831, 0.725212, 0, 1.0};
Point(42) = {-0.074327, 0.724458, 0, 1.0};
Point(43) = {-0.073471, 0.724134, 0, 1.0};
Point(44) = {-0.072273, 0.723894, 0, 1.0};
Point(45) = {-0.070740, 0.723780, 0, 1.0};
Point(46) = {-0.068876, 0.723656, 0, 1.0};
Point(47) = {-0.066693, 0.723615, 0, 1.0};
Point(48) = {-0.064196, 0.723606, 0, 1.0};
Point(49) = {-0.061400, 0.723639, 0, 1.0};
Point(50) = {-0.058316, 0.723706, 0, 1.0};
Point(51) = {-0.054955, 0.723798, 0, 1.0};
Point(52) = {-0.051333, 0.723918, 0, 1.0};
Point(53) = {-0.047466, 0.724066, 0, 1.0};
Point(54) = {-0.043371, 0.724228, 0, 1.0};
Point(55) = {-0.039064, 0.724414, 0, 1.0};
Point(56) = {-0.034564, 0.724616, 0, 1.0};
Point(57) = {-0.029889, 0.724854, 0, 1.0};
Point(58) = {-0.025063, 0.725092, 0, 1.0};
Point(59) = {-0.020102, 0.725388, 0, 1.0};
Point(60) = {-0.015030, 0.725697, 0, 1.0};
Point(61) = {-0.009867, 0.726111, 0, 1.0};
Point(62) = {-0.004633, 0.726574, 0, 1.0};
Point(63) = {0.000647, 0.727145, 0, 1.0};
Point(64) = {0.005948, 0.727648, 0, 1.0};
Point(65) = {0.011249, 0.728168, 0, 1.0};
Point(66) = {0.016526, 0.728620, 0, 1.0};
Point(67) = {0.021759, 0.729028, 0, 1.0};
Point(68) = {0.026920, 0.729326, 0, 1.0};
Point(69) = {0.031991, 0.729539, 0, 1.0};
Point(70) = {0.036947, 0.729621, 0, 1.0};
Point(71) = {0.041768, 0.729606, 0, 1.0};
Point(72) = {0.046435, 0.729459, 0, 1.0};
Point(73) = {0.050927, 0.729216, 0, 1.0};
Point(74) = {0.055223, 0.728861, 0, 1.0};
Point(75) = {0.059307, 0.728428, 0, 1.0};
Point(76) = {0.063161, 0.727917, 0, 1.0};
Point(77) = {0.066770, 0.727364, 0, 1.0};
Point(78) = {0.073189, 0.726197, 0, 1.0};
Point(79) = {0.075036, 0.725831, 0, 1.0};
Point(80) = {-0.075065, -0.727315, 0, 1.0};
Point(81) = {-0.073224, -0.727989, 0, 1.0};
Point(82) = {-0.066827, -0.730332, 0, 1.0};
Point(83) = {-0.063233, -0.731648, 0, 1.0};
Point(84) = {-0.059397, -0.733053, 0, 1.0};
Point(85) = {-0.055334, -0.734541, 0, 1.0};
Point(86) = {-0.051061, -0.736107, 0, 1.0};
Point(87) = {-0.046597, -0.737740, 0, 1.0};
Point(88) = {-0.041957, -0.739303, 0, 1.0};
Point(89) = {-0.037166, -0.740866, 0, 1.0};
Point(90) = {-0.032240, -0.742368, 0, 1.0};
Point(91) = {-0.027202, -0.743830, 0, 1.0};
Point(92) = {-0.022074, -0.745190, 0, 1.0};
Point(93) = {-0.016873, -0.746448, 0, 1.0};
Point(94) = {-0.011626, -0.747547, 0, 1.0};
Point(95) = {-0.006354, -0.748514, 0, 1.0};
Point(96) = {-0.001077, -0.749254, 0, 1.0};
Point(97) = {0.004181, -0.749792, 0, 1.0};
Point(98) = {0.009402, -0.750000, 0, 1.0};
Point(99) = {0.014558, -0.749977, 0, 1.0};
Point(100) = {0.019630, -0.749651, 0, 1.0};
Point(101) = {0.024594, -0.749168, 0, 1.0};
Point(102) = {0.029430, -0.748472, 0, 1.0};
Point(103) = {0.034116, -0.747638, 0, 1.0};
Point(104) = {0.038632, -0.746643, 0, 1.0};
Point(105) = {0.042956, -0.745522, 0, 1.0};
Point(106) = {0.047072, -0.744290, 0, 1.0};
Point(107) = {0.050962, -0.742956, 0, 1.0};
Point(108) = {0.054610, -0.741532, 0, 1.0};
Point(109) = {0.057998, -0.740045, 0, 1.0};
Point(110) = {0.061110, -0.738507, 0, 1.0};
Point(111) = {0.063937, -0.736931, 0, 1.0};
Point(112) = {0.066464, -0.735345, 0, 1.0};
Point(113) = {0.068680, -0.733774, 0, 1.0};
Point(114) = {0.070575, -0.732228, 0, 1.0};
Point(115) = {0.072139, -0.730763, 0, 1.0};
Point(116) = {0.073369, -0.729360, 0, 1.0};
Point(117) = {0.074254, -0.728191, 0, 1.0};
Point(118) = {0.074791, -0.727275, 0, 1.0};
Point(119) = {0.074986, -0.726180, 0, 1.0};
Point(120) = {0.074831, -0.725212, 0, 1.0};
Point(121) = {0.074327, -0.724458, 0, 1.0};
Point(122) = {0.073471, -0.724134, 0, 1.0};
Point(123) = {0.072273, -0.723894, 0, 1.0};
Point(124) = {0.070740, -0.723780, 0, 1.0};
Point(125) = {0.068876, -0.723656, 0, 1.0};
Point(126) = {0.066693, -0.723615, 0, 1.0};
Point(127) = {0.064196, -0.723606, 0, 1.0};
Point(128) = {0.061400, -0.723639, 0, 1.0};
Point(129) = {0.058316, -0.723706, 0, 1.0};
Point(130) = {0.054955, -0.723798, 0, 1.0};
Point(131) = {0.051333, -0.723918, 0, 1.0};
Point(132) = {0.047466, -0.724066, 0, 1.0};
Point(133) = {0.043371, -0.724228, 0, 1.0};
Point(134) = {0.039064, -0.724414, 0, 1.0};
Point(135) = {0.034564, -0.724616, 0, 1.0};
Point(136) = {0.029889, -0.724854, 0, 1.0};
Point(137) = {0.025063, -0.725092, 0, 1.0};
Point(138) = {0.020102, -0.725388, 0, 1.0};
Point(139) = {0.015030, -0.725697, 0, 1.0};
Point(140) = {0.009867, -0.726111, 0, 1.0};
Point(141) = {0.004633, -0.726574, 0, 1.0};
Point(142) = {-0.000647, -0.727145, 0, 1.0};
Point(143) = {-0.005948, -0.727648, 0, 1.0};
Point(144) = {-0.011249, -0.728168, 0, 1.0};
Point(145) = {-0.016526, -0.728620, 0, 1.0};
Point(146) = {-0.021759, -0.729028, 0, 1.0};
Point(147) = {-0.026920, -0.729326, 0, 1.0};
Point(148) = {-0.031991, -0.729539, 0, 1.0};
Point(149) = {-0.036947, -0.729621, 0, 1.0};
Point(150) = {-0.041768, -0.729606, 0, 1.0};
Point(151) = {-0.046435, -0.729459, 0, 1.0};
Point(152) = {-0.050927, -0.729216, 0, 1.0};
Point(153) = {-0.055223, -0.728861, 0, 1.0};
Point(154) = {-0.059307, -0.728428, 0, 1.0};
Point(155) = {-0.063161, -0.727917, 0, 1.0};
Point(156) = {-0.066770, -0.727364, 0, 1.0};
Point(157) = {-0.073189, -0.726197, 0, 1.0};
Point(158) = {-0.075036, -0.725831, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:56};
Spline(3) = {56:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:103};
Spline(6) = {103:135};
Spline(7) = {135:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074982, 0.744139, 0, 1.0};
Point(2) = {0.073247, 0.744389, 0, 1.0};
Point(3) = {0.069260, 0.744922, 0, 1.0};
Point(4) = {0.067380, 0.745159, 0, 1.0};
Point(5) = {0.065333, 0.745418, 0, 1.0};
Point(6) = {0.060141, 0.746049, 0, 1.0};
Point(7) = {0.054415, 0.746673, 0, 1.0};
Point(8) = {0.048208, 0.747318, 0, 1.0};
Point(9) = {0.041577, 0.747974, 0, 1.0};
Point(10) = {0.034590, 0.748600, 0, 1.0};
Point(11) = {0.027314, 0.749143, 0, 1.0};
Point(12) = {0.019816, 0.749541, 0, 1.0};
Point(13) = {0.012171, 0.749792, 0, 1.0};
Point(14) = {0.004456, 0.749960, 0, 1.0};
Point(15) = {-0.003259, 0.750000, 0, 1.0};
Point(16) = {-0.010903, 0.749939, 0, 1.0};
Point(17) = {-0.018396, 0.749830, 0, 1.0};
Point(18) = {-0.025669, 0.749619, 0, 1.0};
Point(19) = {-0.032650, 0.749353, 0, 1.0};
Point(20) = {-0.039276, 0.748998, 0, 1.0};
Point(21) = {-0.045476, 0.748526, 0, 1.0};
Point(22) = {-0.051196, 0.747945, 0, 1.0};
Point(23) = {-0.056381, 0.747292, 0, 1.0};
Point(24) = {-0.060982, 0.746607, 0, 1.0};
Point(25) = {-0.064946, 0.745939, 0, 1.0};
Point(26) = {-0.068248, 0.745250, 0, 1.0};
Point(27) = {-0.070842, 0.744505, 0, 1.0};
Point(28) = {-0.072718, 0.743724, 0, 1.0};
Point(29) = {-0.073849, 0.742889, 0, 1.0};
Point(30) = {-0.074223, 0.742467, 0, 1.0};
Point(31) = {-0.074536, 0.742008, 0, 1.0};
Point(32) = {-0.074846, 0.741133, 0, 1.0};
Point(33) = {-0.074999, 0.740207, 0, 1.0};
Point(34) = {-0.074836, 0.739431, 0, 1.0};
Point(35) = {-0.074519, 0.738902, 0, 1.0};
Point(36) = {-0.074202, 0.738634, 0, 1.0};
Point(37) = {-0.073824, 0.738354, 0, 1.0};
Point(38) = {-0.072685, 0.737742, 0, 1.0};
Point(39) = {-0.070801, 0.737097, 0, 1.0};
Point(40) = {-0.068200, 0.736491, 0, 1.0};
Point(41) = {-0.064891, 0.735924, 0, 1.0};
Point(42) = {-0.060920, 0.735434, 0, 1.0};
Point(43) = {-0.056313, 0.734933, 0, 1.0};
Point(44) = {-0.051122, 0.734487, 0, 1.0};
Point(45) = {-0.045397, 0.734078, 0, 1.0};
Point(46) = {-0.039192, 0.733638, 0, 1.0};
Point(47) = {-0.032561, 0.733239, 0, 1.0};
Point(48) = {-0.025578, 0.733015, 0, 1.0};
Point(49) = {-0.018303, 0.732954, 0, 1.0};
Point(50) = {-0.010811, 0.733145, 0, 1.0};
Point(51) = {-0.003170, 0.733659, 0, 1.0};
Point(52) = {0.004541, 0.734446, 0, 1.0};
Point(53) = {0.012250, 0.735389, 0, 1.0};
Point(54) = {0.019888, 0.736426, 0, 1.0};
Point(55) = {0.027378, 0.737490, 0, 1.0};
Point(56) = {0.034646, 0.738523, 0, 1.0};
Point(57) = {0.041623, 0.739495, 0, 1.0};
Point(58) = {0.048247, 0.740331, 0, 1.0};
Point(59) = {0.054445, 0.741045, 0, 1.0};
Point(60) = {0.060165, 0.741622, 0, 1.0};
Point(61) = {0.065351, 0.742070, 0, 1.0};
Point(62) = {0.067396, 0.742208, 0, 1.0};
Point(63) = {0.069274, 0.742359, 0, 1.0};
Point(64) = {0.073257, 0.742560, 0, 1.0};
Point(65) = {0.074990, 0.742615, 0, 1.0};
Point(66) = {-0.074982, -0.744139, 0, 1.0};
Point(67) = {-0.073247, -0.744389, 0, 1.0};
Point(68) = {-0.069260, -0.744922, 0, 1.0};
Point(69) = {-0.067380, -0.745159, 0, 1.0};
Point(70) = {-0.065333, -0.745418, 0, 1.0};
Point(71) = {-0.060141, -0.746049, 0, 1.0};
Point(72) = {-0.054415, -0.746673, 0, 1.0};
Point(73) = {-0.048208, -0.747318, 0, 1.0};
Point(74) = {-0.041577, -0.747974, 0, 1.0};
Point(75) = {-0.034590, -0.748600, 0, 1.0};
Point(76) = {-0.027314, -0.749143, 0, 1.0};
Point(77) = {-0.019816, -0.749541, 0, 1.0};
Point(78) = {-0.012171, -0.749792, 0, 1.0};
Point(79) = {-0.004456, -0.749960, 0, 1.0};
Point(80) = {0.003259, -0.750000, 0, 1.0};
Point(81) = {0.010903, -0.749939, 0, 1.0};
Point(82) = {0.018396, -0.749830, 0, 1.0};
Point(83) = {0.025669, -0.749619, 0, 1.0};
Point(84) = {0.032650, -0.749353, 0, 1.0};
Point(85) = {0.039276, -0.748998, 0, 1.0};
Point(86) = {0.045476, -0.748526, 0, 1.0};
Point(87) = {0.051196, -0.747945, 0, 1.0};
Point(88) = {0.056381, -0.747292, 0, 1.0};
Point(89) = {0.060982, -0.746607, 0, 1.0};
Point(90) = {0.064946, -0.745939, 0, 1.0};
Point(91) = {0.068248, -0.745250, 0, 1.0};
Point(92) = {0.070842, -0.744505, 0, 1.0};
Point(93) = {0.072718, -0.743724, 0, 1.0};
Point(94) = {0.073849, -0.742889, 0, 1.0};
Point(95) = {0.074223, -0.742467, 0, 1.0};
Point(96) = {0.074536, -0.742008, 0, 1.0};
Point(97) = {0.074846, -0.741133, 0, 1.0};
Point(98) = {0.074999, -0.740207, 0, 1.0};
Point(99) = {0.074836, -0.739431, 0, 1.0};
Point(100) = {0.074519, -0.738902, 0, 1.0};
Point(101) = {0.074202, -0.738634, 0, 1.0};
Point(102) = {0.073824, -0.738354, 0, 1.0};
Point(103) = {0.072685, -0.737742, 0, 1.0};
Point(104) = {0.070801, -0.737097, 0, 1.0};
Point(105) = {0.068200, -0.736491, 0, 1.0};
Point(106) = {0.064891, -0.735924, 0, 1.0};
Point(107) = {0.060920, -0.735434, 0, 1.0};
Point(108) = {0.056313, -0.734933, 0, 1.0};
Point(109) = {0.051122, -0.734487, 0, 1.0};
Point(110) = {0.045397, -0.734078, 0, 1.0};
Point(111) = {0.039192, -0.733638, 0, 1.0};
Point(112) = {0.032561, -0.733239, 0, 1.0};
Point(113) = {0.025578, -0.733015, 0, 1.0};
Point(114) = {0.018303, -0.732954, 0, 1.0};
Point(115) = {0.010811, -0.733145, 0, 1.0};
Point(116) = {0.003170, -0.733659, 0, 1.0};
Point(117) = {-0.004541, -0.734446, 0, 1.0};
Point(118) = {-0.012250, -0.735389, 0, 1.0};
Point(119) = {-0.019888, -0.736426, 0, 1.0};
Point(120) = {-0.027378, -0.737490, 0, 1.0};
Point(121) = {-0.034646, -0.738523, 0, 1.0};
Point(122) = {-0.041623, -0.739495, 0, 1.0};
Point(123) = {-0.048247, -0.740331, 0, 1.0};
Point(124) = {-0.054445, -0.741045, 0, 1.0};
Point(125) = {-0.060165, -0.741622, 0, 1.0};
Point(126) = {-0.065351, -0.742070, 0, 1.0};
Point(127) = {-0.067396, -0.742208, 0, 1.0};
Point(128) = {-0.069274, -0.742359, 0, 1.0};
Point(129) = {-0.073257, -0.742560, 0, 1.0};
Point(130) = {-0.074990, -0.742615, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:47};
Spline(3) = {47:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:84};
Spline(6) = {84:112};
Spline(7) = {112:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {36.00000000, 15.00000000, 0, 1.0};
Point(134) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
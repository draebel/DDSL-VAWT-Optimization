SetFactory("OpenCASCADE");

Point(1) = {0.074208, 0.742519, 0, 1.0};
Point(2) = {0.072185, 0.742745, 0, 1.0};
Point(3) = {0.069714, 0.743084, 0, 1.0};
Point(4) = {0.066944, 0.743495, 0, 1.0};
Point(5) = {0.063885, 0.743977, 0, 1.0};
Point(6) = {0.060549, 0.744529, 0, 1.0};
Point(7) = {0.056952, 0.745147, 0, 1.0};
Point(8) = {0.053109, 0.745822, 0, 1.0};
Point(9) = {0.049038, 0.746551, 0, 1.0};
Point(10) = {0.044756, 0.747331, 0, 1.0};
Point(11) = {0.040282, 0.748132, 0, 1.0};
Point(12) = {0.035647, 0.748882, 0, 1.0};
Point(13) = {0.030883, 0.749480, 0, 1.0};
Point(14) = {0.026018, 0.749855, 0, 1.0};
Point(15) = {0.021074, 0.750000, 0, 1.0};
Point(16) = {0.016067, 0.749958, 0, 1.0};
Point(17) = {0.011011, 0.749772, 0, 1.0};
Point(18) = {0.005928, 0.749464, 0, 1.0};
Point(19) = {0.000837, 0.749039, 0, 1.0};
Point(20) = {-0.004239, 0.748505, 0, 1.0};
Point(21) = {-0.009281, 0.747866, 0, 1.0};
Point(22) = {-0.014267, 0.747129, 0, 1.0};
Point(23) = {-0.019174, 0.746297, 0, 1.0};
Point(24) = {-0.023982, 0.745375, 0, 1.0};
Point(25) = {-0.028671, 0.744363, 0, 1.0};
Point(26) = {-0.033220, 0.743264, 0, 1.0};
Point(27) = {-0.037609, 0.742077, 0, 1.0};
Point(28) = {-0.041820, 0.740810, 0, 1.0};
Point(29) = {-0.045833, 0.739470, 0, 1.0};
Point(30) = {-0.049634, 0.738069, 0, 1.0};
Point(31) = {-0.053207, 0.736619, 0, 1.0};
Point(32) = {-0.056539, 0.735142, 0, 1.0};
Point(33) = {-0.059616, 0.733655, 0, 1.0};
Point(34) = {-0.062425, 0.732177, 0, 1.0};
Point(35) = {-0.064959, 0.730720, 0, 1.0};
Point(36) = {-0.067206, 0.729296, 0, 1.0};
Point(37) = {-0.069154, 0.727914, 0, 1.0};
Point(38) = {-0.070801, 0.726594, 0, 1.0};
Point(39) = {-0.072138, 0.725372, 0, 1.0};
Point(40) = {-0.073171, 0.724296, 0, 1.0};
Point(41) = {-0.073896, 0.723400, 0, 1.0};
Point(42) = {-0.074309, 0.722682, 0, 1.0};
Point(43) = {-0.074403, 0.722094, 0, 1.0};
Point(44) = {-0.074169, 0.721576, 0, 1.0};
Point(45) = {-0.073603, 0.721094, 0, 1.0};
Point(46) = {-0.072710, 0.720665, 0, 1.0};
Point(47) = {-0.071497, 0.720319, 0, 1.0};
Point(48) = {-0.069973, 0.720073, 0, 1.0};
Point(49) = {-0.068139, 0.719914, 0, 1.0};
Point(50) = {-0.066004, 0.719823, 0, 1.0};
Point(51) = {-0.063571, 0.719784, 0, 1.0};
Point(52) = {-0.060855, 0.719799, 0, 1.0};
Point(53) = {-0.057866, 0.719863, 0, 1.0};
Point(54) = {-0.054615, 0.719982, 0, 1.0};
Point(55) = {-0.051117, 0.720153, 0, 1.0};
Point(56) = {-0.047389, 0.720380, 0, 1.0};
Point(57) = {-0.043446, 0.720660, 0, 1.0};
Point(58) = {-0.039306, 0.720998, 0, 1.0};
Point(59) = {-0.034984, 0.721389, 0, 1.0};
Point(60) = {-0.030500, 0.721832, 0, 1.0};
Point(61) = {-0.025874, 0.722322, 0, 1.0};
Point(62) = {-0.021123, 0.722849, 0, 1.0};
Point(63) = {-0.016270, 0.723415, 0, 1.0};
Point(64) = {-0.011333, 0.724015, 0, 1.0};
Point(65) = {-0.006334, 0.724646, 0, 1.0};
Point(66) = {-0.001295, 0.725306, 0, 1.0};
Point(67) = {0.003762, 0.725994, 0, 1.0};
Point(68) = {0.008816, 0.726706, 0, 1.0};
Point(69) = {0.013845, 0.727443, 0, 1.0};
Point(70) = {0.018828, 0.728201, 0, 1.0};
Point(71) = {0.023742, 0.728979, 0, 1.0};
Point(72) = {0.028566, 0.729779, 0, 1.0};
Point(73) = {0.033279, 0.730602, 0, 1.0};
Point(74) = {0.037857, 0.731471, 0, 1.0};
Point(75) = {0.042277, 0.732412, 0, 1.0};
Point(76) = {0.046517, 0.733455, 0, 1.0};
Point(77) = {0.050556, 0.734590, 0, 1.0};
Point(78) = {0.054386, 0.735761, 0, 1.0};
Point(79) = {0.057999, 0.736895, 0, 1.0};
Point(80) = {0.061388, 0.737924, 0, 1.0};
Point(81) = {0.064540, 0.738820, 0, 1.0};
Point(82) = {0.067441, 0.739574, 0, 1.0};
Point(83) = {0.070081, 0.740193, 0, 1.0};
Point(84) = {0.072446, 0.740687, 0, 1.0};
Point(85) = {0.074395, 0.741042, 0, 1.0};
Point(86) = {-0.074208, -0.742519, 0, 1.0};
Point(87) = {-0.072185, -0.742745, 0, 1.0};
Point(88) = {-0.069714, -0.743084, 0, 1.0};
Point(89) = {-0.066944, -0.743495, 0, 1.0};
Point(90) = {-0.063885, -0.743977, 0, 1.0};
Point(91) = {-0.060549, -0.744529, 0, 1.0};
Point(92) = {-0.056952, -0.745147, 0, 1.0};
Point(93) = {-0.053109, -0.745822, 0, 1.0};
Point(94) = {-0.049038, -0.746551, 0, 1.0};
Point(95) = {-0.044756, -0.747331, 0, 1.0};
Point(96) = {-0.040282, -0.748132, 0, 1.0};
Point(97) = {-0.035647, -0.748882, 0, 1.0};
Point(98) = {-0.030883, -0.749480, 0, 1.0};
Point(99) = {-0.026018, -0.749855, 0, 1.0};
Point(100) = {-0.021074, -0.750000, 0, 1.0};
Point(101) = {-0.016067, -0.749958, 0, 1.0};
Point(102) = {-0.011011, -0.749772, 0, 1.0};
Point(103) = {-0.005928, -0.749464, 0, 1.0};
Point(104) = {-0.000837, -0.749039, 0, 1.0};
Point(105) = {0.004239, -0.748505, 0, 1.0};
Point(106) = {0.009281, -0.747866, 0, 1.0};
Point(107) = {0.014267, -0.747129, 0, 1.0};
Point(108) = {0.019174, -0.746297, 0, 1.0};
Point(109) = {0.023982, -0.745375, 0, 1.0};
Point(110) = {0.028671, -0.744363, 0, 1.0};
Point(111) = {0.033220, -0.743264, 0, 1.0};
Point(112) = {0.037609, -0.742077, 0, 1.0};
Point(113) = {0.041820, -0.740810, 0, 1.0};
Point(114) = {0.045833, -0.739470, 0, 1.0};
Point(115) = {0.049634, -0.738069, 0, 1.0};
Point(116) = {0.053207, -0.736619, 0, 1.0};
Point(117) = {0.056539, -0.735142, 0, 1.0};
Point(118) = {0.059616, -0.733655, 0, 1.0};
Point(119) = {0.062425, -0.732177, 0, 1.0};
Point(120) = {0.064959, -0.730720, 0, 1.0};
Point(121) = {0.067206, -0.729296, 0, 1.0};
Point(122) = {0.069154, -0.727914, 0, 1.0};
Point(123) = {0.070801, -0.726594, 0, 1.0};
Point(124) = {0.072138, -0.725372, 0, 1.0};
Point(125) = {0.073171, -0.724296, 0, 1.0};
Point(126) = {0.073896, -0.723400, 0, 1.0};
Point(127) = {0.074309, -0.722682, 0, 1.0};
Point(128) = {0.074403, -0.722094, 0, 1.0};
Point(129) = {0.074169, -0.721576, 0, 1.0};
Point(130) = {0.073603, -0.721094, 0, 1.0};
Point(131) = {0.072710, -0.720665, 0, 1.0};
Point(132) = {0.071497, -0.720319, 0, 1.0};
Point(133) = {0.069973, -0.720073, 0, 1.0};
Point(134) = {0.068139, -0.719914, 0, 1.0};
Point(135) = {0.066004, -0.719823, 0, 1.0};
Point(136) = {0.063571, -0.719784, 0, 1.0};
Point(137) = {0.060855, -0.719799, 0, 1.0};
Point(138) = {0.057866, -0.719863, 0, 1.0};
Point(139) = {0.054615, -0.719982, 0, 1.0};
Point(140) = {0.051117, -0.720153, 0, 1.0};
Point(141) = {0.047389, -0.720380, 0, 1.0};
Point(142) = {0.043446, -0.720660, 0, 1.0};
Point(143) = {0.039306, -0.720998, 0, 1.0};
Point(144) = {0.034984, -0.721389, 0, 1.0};
Point(145) = {0.030500, -0.721832, 0, 1.0};
Point(146) = {0.025874, -0.722322, 0, 1.0};
Point(147) = {0.021123, -0.722849, 0, 1.0};
Point(148) = {0.016270, -0.723415, 0, 1.0};
Point(149) = {0.011333, -0.724015, 0, 1.0};
Point(150) = {0.006334, -0.724646, 0, 1.0};
Point(151) = {0.001295, -0.725306, 0, 1.0};
Point(152) = {-0.003762, -0.725994, 0, 1.0};
Point(153) = {-0.008816, -0.726706, 0, 1.0};
Point(154) = {-0.013845, -0.727443, 0, 1.0};
Point(155) = {-0.018828, -0.728201, 0, 1.0};
Point(156) = {-0.023742, -0.728979, 0, 1.0};
Point(157) = {-0.028566, -0.729779, 0, 1.0};
Point(158) = {-0.033279, -0.730602, 0, 1.0};
Point(159) = {-0.037857, -0.731471, 0, 1.0};
Point(160) = {-0.042277, -0.732412, 0, 1.0};
Point(161) = {-0.046517, -0.733455, 0, 1.0};
Point(162) = {-0.050556, -0.734590, 0, 1.0};
Point(163) = {-0.054386, -0.735761, 0, 1.0};
Point(164) = {-0.057999, -0.736895, 0, 1.0};
Point(165) = {-0.061388, -0.737924, 0, 1.0};
Point(166) = {-0.064540, -0.738820, 0, 1.0};
Point(167) = {-0.067441, -0.739574, 0, 1.0};
Point(168) = {-0.070081, -0.740193, 0, 1.0};
Point(169) = {-0.072446, -0.740687, 0, 1.0};
Point(170) = {-0.074395, -0.741042, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
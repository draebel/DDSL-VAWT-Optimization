SetFactory("OpenCASCADE");

Point(1) = {0.074207, 0.747987, 0, 1.0};
Point(2) = {0.070697, 0.748274, 0, 1.0};
Point(3) = {0.066104, 0.748598, 0, 1.0};
Point(4) = {0.060841, 0.748919, 0, 1.0};
Point(5) = {0.054988, 0.749230, 0, 1.0};
Point(6) = {0.048636, 0.749518, 0, 1.0};
Point(7) = {0.041876, 0.749765, 0, 1.0};
Point(8) = {0.034807, 0.749940, 0, 1.0};
Point(9) = {0.027527, 0.750000, 0, 1.0};
Point(10) = {0.020104, 0.749882, 0, 1.0};
Point(11) = {0.012581, 0.749551, 0, 1.0};
Point(12) = {0.004994, 0.748997, 0, 1.0};
Point(13) = {-0.002615, 0.748227, 0, 1.0};
Point(14) = {-0.010192, 0.747277, 0, 1.0};
Point(15) = {-0.017655, 0.746173, 0, 1.0};
Point(16) = {-0.024931, 0.744938, 0, 1.0};
Point(17) = {-0.031943, 0.743592, 0, 1.0};
Point(18) = {-0.038618, 0.742156, 0, 1.0};
Point(19) = {-0.044889, 0.740652, 0, 1.0};
Point(20) = {-0.050691, 0.739102, 0, 1.0};
Point(21) = {-0.055965, 0.737528, 0, 1.0};
Point(22) = {-0.060656, 0.735959, 0, 1.0};
Point(23) = {-0.064715, 0.734415, 0, 1.0};
Point(24) = {-0.068099, 0.732925, 0, 1.0};
Point(25) = {-0.070777, 0.731504, 0, 1.0};
Point(26) = {-0.072735, 0.730182, 0, 1.0};
Point(27) = {-0.073726, 0.729277, 0, 1.0};
Point(28) = {-0.074218, 0.728633, 0, 1.0};
Point(29) = {-0.074404, 0.728258, 0, 1.0};
Point(30) = {-0.074462, 0.728016, 0, 1.0};
Point(31) = {-0.074454, 0.727882, 0, 1.0};
Point(32) = {-0.074392, 0.727761, 0, 1.0};
Point(33) = {-0.074212, 0.727575, 0, 1.0};
Point(34) = {-0.073845, 0.727328, 0, 1.0};
Point(35) = {-0.073052, 0.726980, 0, 1.0};
Point(36) = {-0.072641, 0.726849, 0, 1.0};
Point(37) = {-0.070471, 0.726401, 0, 1.0};
Point(38) = {-0.067520, 0.726105, 0, 1.0};
Point(39) = {-0.063812, 0.725975, 0, 1.0};
Point(40) = {-0.059381, 0.726003, 0, 1.0};
Point(41) = {-0.054284, 0.726183, 0, 1.0};
Point(42) = {-0.048585, 0.726515, 0, 1.0};
Point(43) = {-0.042354, 0.727004, 0, 1.0};
Point(44) = {-0.035668, 0.727655, 0, 1.0};
Point(45) = {-0.028609, 0.728481, 0, 1.0};
Point(46) = {-0.021241, 0.729512, 0, 1.0};
Point(47) = {-0.013604, 0.730759, 0, 1.0};
Point(48) = {-0.005738, 0.732217, 0, 1.0};
Point(49) = {0.002333, 0.733847, 0, 1.0};
Point(50) = {0.010558, 0.735569, 0, 1.0};
Point(51) = {0.018838, 0.737306, 0, 1.0};
Point(52) = {0.027065, 0.739000, 0, 1.0};
Point(53) = {0.035126, 0.740597, 0, 1.0};
Point(54) = {0.042902, 0.742056, 0, 1.0};
Point(55) = {0.050274, 0.743343, 0, 1.0};
Point(56) = {0.057125, 0.744431, 0, 1.0};
Point(57) = {0.063337, 0.745310, 0, 1.0};
Point(58) = {0.068806, 0.745979, 0, 1.0};
Point(59) = {0.073432, 0.746445, 0, 1.0};
Point(60) = {0.074384, 0.746528, 0, 1.0};
Point(61) = {-0.074207, -0.747987, 0, 1.0};
Point(62) = {-0.070697, -0.748274, 0, 1.0};
Point(63) = {-0.066104, -0.748598, 0, 1.0};
Point(64) = {-0.060841, -0.748919, 0, 1.0};
Point(65) = {-0.054988, -0.749230, 0, 1.0};
Point(66) = {-0.048636, -0.749518, 0, 1.0};
Point(67) = {-0.041876, -0.749765, 0, 1.0};
Point(68) = {-0.034807, -0.749940, 0, 1.0};
Point(69) = {-0.027527, -0.750000, 0, 1.0};
Point(70) = {-0.020104, -0.749882, 0, 1.0};
Point(71) = {-0.012581, -0.749551, 0, 1.0};
Point(72) = {-0.004994, -0.748997, 0, 1.0};
Point(73) = {0.002615, -0.748227, 0, 1.0};
Point(74) = {0.010192, -0.747277, 0, 1.0};
Point(75) = {0.017655, -0.746173, 0, 1.0};
Point(76) = {0.024931, -0.744938, 0, 1.0};
Point(77) = {0.031943, -0.743592, 0, 1.0};
Point(78) = {0.038618, -0.742156, 0, 1.0};
Point(79) = {0.044889, -0.740652, 0, 1.0};
Point(80) = {0.050691, -0.739102, 0, 1.0};
Point(81) = {0.055965, -0.737528, 0, 1.0};
Point(82) = {0.060656, -0.735959, 0, 1.0};
Point(83) = {0.064715, -0.734415, 0, 1.0};
Point(84) = {0.068099, -0.732925, 0, 1.0};
Point(85) = {0.070777, -0.731504, 0, 1.0};
Point(86) = {0.072735, -0.730182, 0, 1.0};
Point(87) = {0.073726, -0.729277, 0, 1.0};
Point(88) = {0.074218, -0.728633, 0, 1.0};
Point(89) = {0.074404, -0.728258, 0, 1.0};
Point(90) = {0.074462, -0.728016, 0, 1.0};
Point(91) = {0.074454, -0.727882, 0, 1.0};
Point(92) = {0.074392, -0.727761, 0, 1.0};
Point(93) = {0.074212, -0.727575, 0, 1.0};
Point(94) = {0.073845, -0.727328, 0, 1.0};
Point(95) = {0.073052, -0.726980, 0, 1.0};
Point(96) = {0.072641, -0.726849, 0, 1.0};
Point(97) = {0.070471, -0.726401, 0, 1.0};
Point(98) = {0.067520, -0.726105, 0, 1.0};
Point(99) = {0.063812, -0.725975, 0, 1.0};
Point(100) = {0.059381, -0.726003, 0, 1.0};
Point(101) = {0.054284, -0.726183, 0, 1.0};
Point(102) = {0.048585, -0.726515, 0, 1.0};
Point(103) = {0.042354, -0.727004, 0, 1.0};
Point(104) = {0.035668, -0.727655, 0, 1.0};
Point(105) = {0.028609, -0.728481, 0, 1.0};
Point(106) = {0.021241, -0.729512, 0, 1.0};
Point(107) = {0.013604, -0.730759, 0, 1.0};
Point(108) = {0.005738, -0.732217, 0, 1.0};
Point(109) = {-0.002333, -0.733847, 0, 1.0};
Point(110) = {-0.010558, -0.735569, 0, 1.0};
Point(111) = {-0.018838, -0.737306, 0, 1.0};
Point(112) = {-0.027065, -0.739000, 0, 1.0};
Point(113) = {-0.035126, -0.740597, 0, 1.0};
Point(114) = {-0.042902, -0.742056, 0, 1.0};
Point(115) = {-0.050274, -0.743343, 0, 1.0};
Point(116) = {-0.057125, -0.744431, 0, 1.0};
Point(117) = {-0.063337, -0.745310, 0, 1.0};
Point(118) = {-0.068806, -0.745979, 0, 1.0};
Point(119) = {-0.073432, -0.746445, 0, 1.0};
Point(120) = {-0.074384, -0.746528, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
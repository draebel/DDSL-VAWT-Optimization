SetFactory("OpenCASCADE");

Point(1) = {0.149971, 0.734933, 0, 1.0};
Point(2) = {0.149292, 0.735023, 0, 1.0};
Point(3) = {0.147312, 0.735328, 0, 1.0};
Point(4) = {0.144170, 0.735879, 0, 1.0};
Point(5) = {0.139987, 0.736628, 0, 1.0};
Point(6) = {0.134829, 0.737506, 0, 1.0};
Point(7) = {0.128736, 0.738487, 0, 1.0};
Point(8) = {0.121779, 0.739572, 0, 1.0};
Point(9) = {0.114059, 0.740755, 0, 1.0};
Point(10) = {0.105691, 0.742011, 0, 1.0};
Point(11) = {0.096790, 0.743319, 0, 1.0};
Point(12) = {0.087476, 0.744639, 0, 1.0};
Point(13) = {0.077878, 0.745937, 0, 1.0};
Point(14) = {0.068126, 0.747163, 0, 1.0};
Point(15) = {0.058344, 0.748256, 0, 1.0};
Point(16) = {0.048632, 0.749127, 0, 1.0};
Point(17) = {0.039051, 0.749721, 0, 1.0};
Point(18) = {0.029657, 0.750000, 0, 1.0};
Point(19) = {0.020504, 0.749949, 0, 1.0};
Point(20) = {0.011639, 0.749567, 0, 1.0};
Point(21) = {0.003106, 0.748874, 0, 1.0};
Point(22) = {-0.005031, 0.747922, 0, 1.0};
Point(23) = {-0.012690, 0.746748, 0, 1.0};
Point(24) = {-0.019794, 0.745385, 0, 1.0};
Point(25) = {-0.026269, 0.743863, 0, 1.0};
Point(26) = {-0.032056, 0.742215, 0, 1.0};
Point(27) = {-0.037099, 0.740471, 0, 1.0};
Point(28) = {-0.041354, 0.738669, 0, 1.0};
Point(29) = {-0.044785, 0.736853, 0, 1.0};
Point(30) = {-0.047371, 0.735071, 0, 1.0};
Point(31) = {-0.049101, 0.733393, 0, 1.0};
Point(32) = {-0.049955, 0.731928, 0, 1.0};
Point(33) = {-0.049729, 0.730802, 0, 1.0};
Point(34) = {-0.048334, 0.729897, 0, 1.0};
Point(35) = {-0.045870, 0.729113, 0, 1.0};
Point(36) = {-0.042365, 0.728500, 0, 1.0};
Point(37) = {-0.037841, 0.728071, 0, 1.0};
Point(38) = {-0.032332, 0.727826, 0, 1.0};
Point(39) = {-0.025880, 0.727758, 0, 1.0};
Point(40) = {-0.018539, 0.727856, 0, 1.0};
Point(41) = {-0.010380, 0.728096, 0, 1.0};
Point(42) = {-0.001487, 0.728457, 0, 1.0};
Point(43) = {0.008049, 0.728915, 0, 1.0};
Point(44) = {0.018115, 0.729443, 0, 1.0};
Point(45) = {0.028597, 0.730017, 0, 1.0};
Point(46) = {0.039373, 0.730612, 0, 1.0};
Point(47) = {0.050310, 0.731207, 0, 1.0};
Point(48) = {0.061272, 0.731783, 0, 1.0};
Point(49) = {0.072122, 0.732325, 0, 1.0};
Point(50) = {0.082725, 0.732823, 0, 1.0};
Point(51) = {0.092949, 0.733266, 0, 1.0};
Point(52) = {0.102664, 0.733653, 0, 1.0};
Point(53) = {0.111746, 0.733979, 0, 1.0};
Point(54) = {0.120079, 0.734246, 0, 1.0};
Point(55) = {0.127552, 0.734457, 0, 1.0};
Point(56) = {0.134070, 0.734627, 0, 1.0};
Point(57) = {0.139560, 0.734776, 0, 1.0};
Point(58) = {0.143977, 0.734897, 0, 1.0};
Point(59) = {0.147251, 0.734955, 0, 1.0};
Point(60) = {0.149281, 0.734949, 0, 1.0};
Point(61) = {-0.149971, -0.734933, 0, 1.0};
Point(62) = {-0.149292, -0.735023, 0, 1.0};
Point(63) = {-0.147312, -0.735328, 0, 1.0};
Point(64) = {-0.144170, -0.735879, 0, 1.0};
Point(65) = {-0.139987, -0.736628, 0, 1.0};
Point(66) = {-0.134829, -0.737506, 0, 1.0};
Point(67) = {-0.128736, -0.738487, 0, 1.0};
Point(68) = {-0.121779, -0.739572, 0, 1.0};
Point(69) = {-0.114059, -0.740755, 0, 1.0};
Point(70) = {-0.105691, -0.742011, 0, 1.0};
Point(71) = {-0.096790, -0.743319, 0, 1.0};
Point(72) = {-0.087476, -0.744639, 0, 1.0};
Point(73) = {-0.077878, -0.745937, 0, 1.0};
Point(74) = {-0.068126, -0.747163, 0, 1.0};
Point(75) = {-0.058344, -0.748256, 0, 1.0};
Point(76) = {-0.048632, -0.749127, 0, 1.0};
Point(77) = {-0.039051, -0.749721, 0, 1.0};
Point(78) = {-0.029657, -0.750000, 0, 1.0};
Point(79) = {-0.020504, -0.749949, 0, 1.0};
Point(80) = {-0.011639, -0.749567, 0, 1.0};
Point(81) = {-0.003106, -0.748874, 0, 1.0};
Point(82) = {0.005031, -0.747922, 0, 1.0};
Point(83) = {0.012690, -0.746748, 0, 1.0};
Point(84) = {0.019794, -0.745385, 0, 1.0};
Point(85) = {0.026269, -0.743863, 0, 1.0};
Point(86) = {0.032056, -0.742215, 0, 1.0};
Point(87) = {0.037099, -0.740471, 0, 1.0};
Point(88) = {0.041354, -0.738669, 0, 1.0};
Point(89) = {0.044785, -0.736853, 0, 1.0};
Point(90) = {0.047371, -0.735071, 0, 1.0};
Point(91) = {0.049101, -0.733393, 0, 1.0};
Point(92) = {0.049955, -0.731928, 0, 1.0};
Point(93) = {0.049729, -0.730802, 0, 1.0};
Point(94) = {0.048334, -0.729897, 0, 1.0};
Point(95) = {0.045870, -0.729113, 0, 1.0};
Point(96) = {0.042365, -0.728500, 0, 1.0};
Point(97) = {0.037841, -0.728071, 0, 1.0};
Point(98) = {0.032332, -0.727826, 0, 1.0};
Point(99) = {0.025880, -0.727758, 0, 1.0};
Point(100) = {0.018539, -0.727856, 0, 1.0};
Point(101) = {0.010380, -0.728096, 0, 1.0};
Point(102) = {0.001487, -0.728457, 0, 1.0};
Point(103) = {-0.008049, -0.728915, 0, 1.0};
Point(104) = {-0.018115, -0.729443, 0, 1.0};
Point(105) = {-0.028597, -0.730017, 0, 1.0};
Point(106) = {-0.039373, -0.730612, 0, 1.0};
Point(107) = {-0.050310, -0.731207, 0, 1.0};
Point(108) = {-0.061272, -0.731783, 0, 1.0};
Point(109) = {-0.072122, -0.732325, 0, 1.0};
Point(110) = {-0.082725, -0.732823, 0, 1.0};
Point(111) = {-0.092949, -0.733266, 0, 1.0};
Point(112) = {-0.102664, -0.733653, 0, 1.0};
Point(113) = {-0.111746, -0.733979, 0, 1.0};
Point(114) = {-0.120079, -0.734246, 0, 1.0};
Point(115) = {-0.127552, -0.734457, 0, 1.0};
Point(116) = {-0.134070, -0.734627, 0, 1.0};
Point(117) = {-0.139560, -0.734776, 0, 1.0};
Point(118) = {-0.143977, -0.734897, 0, 1.0};
Point(119) = {-0.147251, -0.734955, 0, 1.0};
Point(120) = {-0.149281, -0.734949, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074993, 0.738256, 0, 1.0};
Point(2) = {0.072550, 0.738533, 0, 1.0};
Point(3) = {0.069732, 0.738860, 0, 1.0};
Point(4) = {0.066661, 0.739224, 0, 1.0};
Point(5) = {0.063347, 0.739626, 0, 1.0};
Point(6) = {0.059804, 0.740064, 0, 1.0};
Point(7) = {0.056045, 0.740536, 0, 1.0};
Point(8) = {0.052086, 0.741040, 0, 1.0};
Point(9) = {0.047942, 0.741575, 0, 1.0};
Point(10) = {0.043630, 0.742136, 0, 1.0};
Point(11) = {0.039166, 0.742721, 0, 1.0};
Point(12) = {0.034568, 0.743326, 0, 1.0};
Point(13) = {0.029854, 0.743946, 0, 1.0};
Point(14) = {0.025043, 0.744574, 0, 1.0};
Point(15) = {0.020154, 0.745206, 0, 1.0};
Point(16) = {0.015205, 0.745834, 0, 1.0};
Point(17) = {0.010216, 0.746450, 0, 1.0};
Point(18) = {0.005207, 0.747045, 0, 1.0};
Point(19) = {0.000197, 0.747612, 0, 1.0};
Point(20) = {-0.004794, 0.748139, 0, 1.0};
Point(21) = {-0.009747, 0.748618, 0, 1.0};
Point(22) = {-0.014642, 0.749040, 0, 1.0};
Point(23) = {-0.019460, 0.749396, 0, 1.0};
Point(24) = {-0.024183, 0.749676, 0, 1.0};
Point(25) = {-0.028792, 0.749874, 0, 1.0};
Point(26) = {-0.033269, 0.749984, 0, 1.0};
Point(27) = {-0.037596, 0.750000, 0, 1.0};
Point(28) = {-0.041756, 0.749921, 0, 1.0};
Point(29) = {-0.045734, 0.749745, 0, 1.0};
Point(30) = {-0.049512, 0.749474, 0, 1.0};
Point(31) = {-0.053077, 0.749112, 0, 1.0};
Point(32) = {-0.056414, 0.748665, 0, 1.0};
Point(33) = {-0.059510, 0.748139, 0, 1.0};
Point(34) = {-0.062352, 0.747546, 0, 1.0};
Point(35) = {-0.064929, 0.746895, 0, 1.0};
Point(36) = {-0.067230, 0.746200, 0, 1.0};
Point(37) = {-0.069247, 0.745474, 0, 1.0};
Point(38) = {-0.070970, 0.744732, 0, 1.0};
Point(39) = {-0.072392, 0.743995, 0, 1.0};
Point(40) = {-0.073508, 0.743290, 0, 1.0};
Point(41) = {-0.074312, 0.742645, 0, 1.0};
Point(42) = {-0.074801, 0.742073, 0, 1.0};
Point(43) = {-0.074973, 0.741566, 0, 1.0};
Point(44) = {-0.074827, 0.741094, 0, 1.0};
Point(45) = {-0.074367, 0.740629, 0, 1.0};
Point(46) = {-0.073593, 0.740155, 0, 1.0};
Point(47) = {-0.072509, 0.739679, 0, 1.0};
Point(48) = {-0.071119, 0.739217, 0, 1.0};
Point(49) = {-0.069428, 0.738783, 0, 1.0};
Point(50) = {-0.067442, 0.738383, 0, 1.0};
Point(51) = {-0.065169, 0.738016, 0, 1.0};
Point(52) = {-0.062619, 0.737679, 0, 1.0};
Point(53) = {-0.059801, 0.737369, 0, 1.0};
Point(54) = {-0.056728, 0.737083, 0, 1.0};
Point(55) = {-0.053410, 0.736816, 0, 1.0};
Point(56) = {-0.049862, 0.736565, 0, 1.0};
Point(57) = {-0.046097, 0.736328, 0, 1.0};
Point(58) = {-0.042130, 0.736103, 0, 1.0};
Point(59) = {-0.037978, 0.735888, 0, 1.0};
Point(60) = {-0.033656, 0.735684, 0, 1.0};
Point(61) = {-0.029181, 0.735490, 0, 1.0};
Point(62) = {-0.024572, 0.735308, 0, 1.0};
Point(63) = {-0.019846, 0.735140, 0, 1.0};
Point(64) = {-0.015022, 0.734987, 0, 1.0};
Point(65) = {-0.010119, 0.734853, 0, 1.0};
Point(66) = {-0.005157, 0.734741, 0, 1.0};
Point(67) = {-0.000153, 0.734654, 0, 1.0};
Point(68) = {0.004870, 0.734594, 0, 1.0};
Point(69) = {0.009894, 0.734562, 0, 1.0};
Point(70) = {0.014900, 0.734562, 0, 1.0};
Point(71) = {0.019867, 0.734592, 0, 1.0};
Point(72) = {0.024775, 0.734653, 0, 1.0};
Point(73) = {0.029605, 0.734743, 0, 1.0};
Point(74) = {0.034339, 0.734860, 0, 1.0};
Point(75) = {0.038957, 0.735001, 0, 1.0};
Point(76) = {0.043441, 0.735163, 0, 1.0};
Point(77) = {0.047773, 0.735340, 0, 1.0};
Point(78) = {0.051937, 0.735529, 0, 1.0};
Point(79) = {0.055915, 0.735724, 0, 1.0};
Point(80) = {0.059691, 0.735921, 0, 1.0};
Point(81) = {0.063252, 0.736113, 0, 1.0};
Point(82) = {0.066582, 0.736298, 0, 1.0};
Point(83) = {0.069668, 0.736471, 0, 1.0};
Point(84) = {0.072498, 0.736628, 0, 1.0};
Point(85) = {0.074952, 0.736764, 0, 1.0};
Point(86) = {-0.074993, -0.738256, 0, 1.0};
Point(87) = {-0.072550, -0.738533, 0, 1.0};
Point(88) = {-0.069732, -0.738860, 0, 1.0};
Point(89) = {-0.066661, -0.739224, 0, 1.0};
Point(90) = {-0.063347, -0.739626, 0, 1.0};
Point(91) = {-0.059804, -0.740064, 0, 1.0};
Point(92) = {-0.056045, -0.740536, 0, 1.0};
Point(93) = {-0.052086, -0.741040, 0, 1.0};
Point(94) = {-0.047942, -0.741575, 0, 1.0};
Point(95) = {-0.043630, -0.742136, 0, 1.0};
Point(96) = {-0.039166, -0.742721, 0, 1.0};
Point(97) = {-0.034568, -0.743326, 0, 1.0};
Point(98) = {-0.029854, -0.743946, 0, 1.0};
Point(99) = {-0.025043, -0.744574, 0, 1.0};
Point(100) = {-0.020154, -0.745206, 0, 1.0};
Point(101) = {-0.015205, -0.745834, 0, 1.0};
Point(102) = {-0.010216, -0.746450, 0, 1.0};
Point(103) = {-0.005207, -0.747045, 0, 1.0};
Point(104) = {-0.000197, -0.747612, 0, 1.0};
Point(105) = {0.004794, -0.748139, 0, 1.0};
Point(106) = {0.009747, -0.748618, 0, 1.0};
Point(107) = {0.014642, -0.749040, 0, 1.0};
Point(108) = {0.019460, -0.749396, 0, 1.0};
Point(109) = {0.024183, -0.749676, 0, 1.0};
Point(110) = {0.028792, -0.749874, 0, 1.0};
Point(111) = {0.033269, -0.749984, 0, 1.0};
Point(112) = {0.037596, -0.750000, 0, 1.0};
Point(113) = {0.041756, -0.749921, 0, 1.0};
Point(114) = {0.045734, -0.749745, 0, 1.0};
Point(115) = {0.049512, -0.749474, 0, 1.0};
Point(116) = {0.053077, -0.749112, 0, 1.0};
Point(117) = {0.056414, -0.748665, 0, 1.0};
Point(118) = {0.059510, -0.748139, 0, 1.0};
Point(119) = {0.062352, -0.747546, 0, 1.0};
Point(120) = {0.064929, -0.746895, 0, 1.0};
Point(121) = {0.067230, -0.746200, 0, 1.0};
Point(122) = {0.069247, -0.745474, 0, 1.0};
Point(123) = {0.070970, -0.744732, 0, 1.0};
Point(124) = {0.072392, -0.743995, 0, 1.0};
Point(125) = {0.073508, -0.743290, 0, 1.0};
Point(126) = {0.074312, -0.742645, 0, 1.0};
Point(127) = {0.074801, -0.742073, 0, 1.0};
Point(128) = {0.074973, -0.741566, 0, 1.0};
Point(129) = {0.074827, -0.741094, 0, 1.0};
Point(130) = {0.074367, -0.740629, 0, 1.0};
Point(131) = {0.073593, -0.740155, 0, 1.0};
Point(132) = {0.072509, -0.739679, 0, 1.0};
Point(133) = {0.071119, -0.739217, 0, 1.0};
Point(134) = {0.069428, -0.738783, 0, 1.0};
Point(135) = {0.067442, -0.738383, 0, 1.0};
Point(136) = {0.065169, -0.738016, 0, 1.0};
Point(137) = {0.062619, -0.737679, 0, 1.0};
Point(138) = {0.059801, -0.737369, 0, 1.0};
Point(139) = {0.056728, -0.737083, 0, 1.0};
Point(140) = {0.053410, -0.736816, 0, 1.0};
Point(141) = {0.049862, -0.736565, 0, 1.0};
Point(142) = {0.046097, -0.736328, 0, 1.0};
Point(143) = {0.042130, -0.736103, 0, 1.0};
Point(144) = {0.037978, -0.735888, 0, 1.0};
Point(145) = {0.033656, -0.735684, 0, 1.0};
Point(146) = {0.029181, -0.735490, 0, 1.0};
Point(147) = {0.024572, -0.735308, 0, 1.0};
Point(148) = {0.019846, -0.735140, 0, 1.0};
Point(149) = {0.015022, -0.734987, 0, 1.0};
Point(150) = {0.010119, -0.734853, 0, 1.0};
Point(151) = {0.005157, -0.734741, 0, 1.0};
Point(152) = {0.000153, -0.734654, 0, 1.0};
Point(153) = {-0.004870, -0.734594, 0, 1.0};
Point(154) = {-0.009894, -0.734562, 0, 1.0};
Point(155) = {-0.014900, -0.734562, 0, 1.0};
Point(156) = {-0.019867, -0.734592, 0, 1.0};
Point(157) = {-0.024775, -0.734653, 0, 1.0};
Point(158) = {-0.029605, -0.734743, 0, 1.0};
Point(159) = {-0.034339, -0.734860, 0, 1.0};
Point(160) = {-0.038957, -0.735001, 0, 1.0};
Point(161) = {-0.043441, -0.735163, 0, 1.0};
Point(162) = {-0.047773, -0.735340, 0, 1.0};
Point(163) = {-0.051937, -0.735529, 0, 1.0};
Point(164) = {-0.055915, -0.735724, 0, 1.0};
Point(165) = {-0.059691, -0.735921, 0, 1.0};
Point(166) = {-0.063252, -0.736113, 0, 1.0};
Point(167) = {-0.066582, -0.736298, 0, 1.0};
Point(168) = {-0.069668, -0.736471, 0, 1.0};
Point(169) = {-0.072498, -0.736628, 0, 1.0};
Point(170) = {-0.074952, -0.736764, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:60};
Spline(3) = {60:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:145};
Spline(7) = {145:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
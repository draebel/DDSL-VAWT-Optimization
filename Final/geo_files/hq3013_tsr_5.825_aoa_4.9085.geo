SetFactory("OpenCASCADE");

Point(1) = {0.074872, 0.728274, 0, 1.0};
Point(2) = {0.074720, 0.728290, 0, 1.0};
Point(3) = {0.070868, 0.729518, 0, 1.0};
Point(4) = {0.067013, 0.730715, 0, 1.0};
Point(5) = {0.063157, 0.731906, 0, 1.0};
Point(6) = {0.059300, 0.733075, 0, 1.0};
Point(7) = {0.055442, 0.734243, 0, 1.0};
Point(8) = {0.051585, 0.735409, 0, 1.0};
Point(9) = {0.043862, 0.737655, 0, 1.0};
Point(10) = {0.036132, 0.739815, 0, 1.0};
Point(11) = {0.028386, 0.741796, 0, 1.0};
Point(12) = {0.020626, 0.743613, 0, 1.0};
Point(13) = {0.012848, 0.745219, 0, 1.0};
Point(14) = {0.005051, 0.746598, 0, 1.0};
Point(15) = {-0.002767, 0.747741, 0, 1.0};
Point(16) = {-0.010603, 0.748662, 0, 1.0};
Point(17) = {-0.014528, 0.749044, 0, 1.0};
Point(18) = {-0.018458, 0.749370, 0, 1.0};
Point(19) = {-0.022393, 0.749632, 0, 1.0};
Point(20) = {-0.026335, 0.749820, 0, 1.0};
Point(21) = {-0.030283, 0.749942, 0, 1.0};
Point(22) = {-0.034235, 0.750000, 0, 1.0};
Point(23) = {-0.038194, 0.749992, 0, 1.0};
Point(24) = {-0.042160, 0.749892, 0, 1.0};
Point(25) = {-0.046136, 0.749684, 0, 1.0};
Point(26) = {-0.050122, 0.749358, 0, 1.0};
Point(27) = {-0.054120, 0.748893, 0, 1.0};
Point(28) = {-0.058134, 0.748235, 0, 1.0};
Point(29) = {-0.062170, 0.747325, 0, 1.0};
Point(30) = {-0.066239, 0.746039, 0, 1.0};
Point(31) = {-0.068290, 0.745194, 0, 1.0};
Point(32) = {-0.070359, 0.744142, 0, 1.0};
Point(33) = {-0.071404, 0.743498, 0, 1.0};
Point(34) = {-0.072460, 0.742720, 0, 1.0};
Point(35) = {-0.073103, 0.742153, 0, 1.0};
Point(36) = {-0.073760, 0.741410, 0, 1.0};
Point(37) = {-0.074216, 0.740713, 0, 1.0};
Point(38) = {-0.074725, 0.739395, 0, 1.0};
Point(39) = {-0.074400, 0.738576, 0, 1.0};
Point(40) = {-0.074038, 0.738179, 0, 1.0};
Point(41) = {-0.073485, 0.737702, 0, 1.0};
Point(42) = {-0.072925, 0.737306, 0, 1.0};
Point(43) = {-0.071982, 0.736766, 0, 1.0};
Point(44) = {-0.071029, 0.736347, 0, 1.0};
Point(45) = {-0.069109, 0.735661, 0, 1.0};
Point(46) = {-0.067177, 0.735112, 0, 1.0};
Point(47) = {-0.063297, 0.734209, 0, 1.0};
Point(48) = {-0.059403, 0.733458, 0, 1.0};
Point(49) = {-0.055502, 0.732797, 0, 1.0};
Point(50) = {-0.051595, 0.732205, 0, 1.0};
Point(51) = {-0.047683, 0.731677, 0, 1.0};
Point(52) = {-0.043765, 0.731203, 0, 1.0};
Point(53) = {-0.039845, 0.730767, 0, 1.0};
Point(54) = {-0.035922, 0.730363, 0, 1.0};
Point(55) = {-0.031996, 0.729988, 0, 1.0};
Point(56) = {-0.028069, 0.729630, 0, 1.0};
Point(57) = {-0.024141, 0.729287, 0, 1.0};
Point(58) = {-0.020211, 0.728960, 0, 1.0};
Point(59) = {-0.016276, 0.728690, 0, 1.0};
Point(60) = {-0.012336, 0.728487, 0, 1.0};
Point(61) = {-0.004443, 0.728225, 0, 1.0};
Point(62) = {0.003465, 0.728133, 0, 1.0};
Point(63) = {0.011382, 0.728147, 0, 1.0};
Point(64) = {0.019305, 0.728230, 0, 1.0};
Point(65) = {0.027229, 0.728323, 0, 1.0};
Point(66) = {0.035150, 0.728390, 0, 1.0};
Point(67) = {0.043067, 0.728404, 0, 1.0};
Point(68) = {0.050976, 0.728318, 0, 1.0};
Point(69) = {0.054925, 0.728215, 0, 1.0};
Point(70) = {0.058869, 0.728057, 0, 1.0};
Point(71) = {0.062806, 0.727818, 0, 1.0};
Point(72) = {0.066740, 0.727531, 0, 1.0};
Point(73) = {0.070666, 0.727167, 0, 1.0};
Point(74) = {0.074593, 0.726808, 0, 1.0};
Point(75) = {0.074745, 0.726793, 0, 1.0};
Point(76) = {-0.074872, -0.728274, 0, 1.0};
Point(77) = {-0.074720, -0.728290, 0, 1.0};
Point(78) = {-0.070868, -0.729518, 0, 1.0};
Point(79) = {-0.067013, -0.730715, 0, 1.0};
Point(80) = {-0.063157, -0.731906, 0, 1.0};
Point(81) = {-0.059300, -0.733075, 0, 1.0};
Point(82) = {-0.055442, -0.734243, 0, 1.0};
Point(83) = {-0.051585, -0.735409, 0, 1.0};
Point(84) = {-0.043862, -0.737655, 0, 1.0};
Point(85) = {-0.036132, -0.739815, 0, 1.0};
Point(86) = {-0.028386, -0.741796, 0, 1.0};
Point(87) = {-0.020626, -0.743613, 0, 1.0};
Point(88) = {-0.012848, -0.745219, 0, 1.0};
Point(89) = {-0.005051, -0.746598, 0, 1.0};
Point(90) = {0.002767, -0.747741, 0, 1.0};
Point(91) = {0.010603, -0.748662, 0, 1.0};
Point(92) = {0.014528, -0.749044, 0, 1.0};
Point(93) = {0.018458, -0.749370, 0, 1.0};
Point(94) = {0.022393, -0.749632, 0, 1.0};
Point(95) = {0.026335, -0.749820, 0, 1.0};
Point(96) = {0.030283, -0.749942, 0, 1.0};
Point(97) = {0.034235, -0.750000, 0, 1.0};
Point(98) = {0.038194, -0.749992, 0, 1.0};
Point(99) = {0.042160, -0.749892, 0, 1.0};
Point(100) = {0.046136, -0.749684, 0, 1.0};
Point(101) = {0.050122, -0.749358, 0, 1.0};
Point(102) = {0.054120, -0.748893, 0, 1.0};
Point(103) = {0.058134, -0.748235, 0, 1.0};
Point(104) = {0.062170, -0.747325, 0, 1.0};
Point(105) = {0.066239, -0.746039, 0, 1.0};
Point(106) = {0.068290, -0.745194, 0, 1.0};
Point(107) = {0.070359, -0.744142, 0, 1.0};
Point(108) = {0.071404, -0.743498, 0, 1.0};
Point(109) = {0.072460, -0.742720, 0, 1.0};
Point(110) = {0.073103, -0.742153, 0, 1.0};
Point(111) = {0.073760, -0.741410, 0, 1.0};
Point(112) = {0.074216, -0.740713, 0, 1.0};
Point(113) = {0.074725, -0.739395, 0, 1.0};
Point(114) = {0.074400, -0.738576, 0, 1.0};
Point(115) = {0.074038, -0.738179, 0, 1.0};
Point(116) = {0.073485, -0.737702, 0, 1.0};
Point(117) = {0.072925, -0.737306, 0, 1.0};
Point(118) = {0.071982, -0.736766, 0, 1.0};
Point(119) = {0.071029, -0.736347, 0, 1.0};
Point(120) = {0.069109, -0.735661, 0, 1.0};
Point(121) = {0.067177, -0.735112, 0, 1.0};
Point(122) = {0.063297, -0.734209, 0, 1.0};
Point(123) = {0.059403, -0.733458, 0, 1.0};
Point(124) = {0.055502, -0.732797, 0, 1.0};
Point(125) = {0.051595, -0.732205, 0, 1.0};
Point(126) = {0.047683, -0.731677, 0, 1.0};
Point(127) = {0.043765, -0.731203, 0, 1.0};
Point(128) = {0.039845, -0.730767, 0, 1.0};
Point(129) = {0.035922, -0.730363, 0, 1.0};
Point(130) = {0.031996, -0.729988, 0, 1.0};
Point(131) = {0.028069, -0.729630, 0, 1.0};
Point(132) = {0.024141, -0.729287, 0, 1.0};
Point(133) = {0.020211, -0.728960, 0, 1.0};
Point(134) = {0.016276, -0.728690, 0, 1.0};
Point(135) = {0.012336, -0.728487, 0, 1.0};
Point(136) = {0.004443, -0.728225, 0, 1.0};
Point(137) = {-0.003465, -0.728133, 0, 1.0};
Point(138) = {-0.011382, -0.728147, 0, 1.0};
Point(139) = {-0.019305, -0.728230, 0, 1.0};
Point(140) = {-0.027229, -0.728323, 0, 1.0};
Point(141) = {-0.035150, -0.728390, 0, 1.0};
Point(142) = {-0.043067, -0.728404, 0, 1.0};
Point(143) = {-0.050976, -0.728318, 0, 1.0};
Point(144) = {-0.054925, -0.728215, 0, 1.0};
Point(145) = {-0.058869, -0.728057, 0, 1.0};
Point(146) = {-0.062806, -0.727818, 0, 1.0};
Point(147) = {-0.066740, -0.727531, 0, 1.0};
Point(148) = {-0.070666, -0.727167, 0, 1.0};
Point(149) = {-0.074593, -0.726808, 0, 1.0};
Point(150) = {-0.074745, -0.726793, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:97};
Spline(6) = {97:130};
Spline(7) = {130:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {36.00000000, 15.00000000, 0, 1.0};
Point(154) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074684, 0.728984, 0, 1.0};
Point(2) = {0.072266, 0.729850, 0, 1.0};
Point(3) = {0.069147, 0.730946, 0, 1.0};
Point(4) = {0.065393, 0.732221, 0, 1.0};
Point(5) = {0.061035, 0.733625, 0, 1.0};
Point(6) = {0.056110, 0.735091, 0, 1.0};
Point(7) = {0.050664, 0.736599, 0, 1.0};
Point(8) = {0.044753, 0.738155, 0, 1.0};
Point(9) = {0.038427, 0.739695, 0, 1.0};
Point(10) = {0.031746, 0.741191, 0, 1.0};
Point(11) = {0.024774, 0.742623, 0, 1.0};
Point(12) = {0.017577, 0.743963, 0, 1.0};
Point(13) = {0.010223, 0.745192, 0, 1.0};
Point(14) = {0.002783, 0.746293, 0, 1.0};
Point(15) = {-0.004673, 0.747250, 0, 1.0};
Point(16) = {-0.012072, 0.748055, 0, 1.0};
Point(17) = {-0.019342, 0.748704, 0, 1.0};
Point(18) = {-0.026412, 0.749217, 0, 1.0};
Point(19) = {-0.033211, 0.749601, 0, 1.0};
Point(20) = {-0.039674, 0.749854, 0, 1.0};
Point(21) = {-0.045738, 0.749987, 0, 1.0};
Point(22) = {-0.051343, 0.750000, 0, 1.0};
Point(23) = {-0.056441, 0.749842, 0, 1.0};
Point(24) = {-0.060986, 0.749495, 0, 1.0};
Point(25) = {-0.064924, 0.749038, 0, 1.0};
Point(26) = {-0.068225, 0.748423, 0, 1.0};
Point(27) = {-0.070859, 0.747623, 0, 1.0};
Point(28) = {-0.072797, 0.746690, 0, 1.0};
Point(29) = {-0.074034, 0.745503, 0, 1.0};
Point(30) = {-0.074578, 0.743886, 0, 1.0};
Point(31) = {-0.074338, 0.742648, 0, 1.0};
Point(32) = {-0.073357, 0.741438, 0, 1.0};
Point(33) = {-0.071627, 0.740422, 0, 1.0};
Point(34) = {-0.069170, 0.739552, 0, 1.0};
Point(35) = {-0.066016, 0.738793, 0, 1.0};
Point(36) = {-0.062199, 0.738110, 0, 1.0};
Point(37) = {-0.057765, 0.737420, 0, 1.0};
Point(38) = {-0.052760, 0.736701, 0, 1.0};
Point(39) = {-0.047237, 0.735922, 0, 1.0};
Point(40) = {-0.041242, 0.735139, 0, 1.0};
Point(41) = {-0.034837, 0.734341, 0, 1.0};
Point(42) = {-0.028081, 0.733549, 0, 1.0};
Point(43) = {-0.021040, 0.732771, 0, 1.0};
Point(44) = {-0.013779, 0.732027, 0, 1.0};
Point(45) = {-0.006367, 0.731344, 0, 1.0};
Point(46) = {0.001124, 0.730728, 0, 1.0};
Point(47) = {0.008624, 0.730182, 0, 1.0};
Point(48) = {0.016060, 0.729723, 0, 1.0};
Point(49) = {0.023358, 0.729333, 0, 1.0};
Point(50) = {0.030446, 0.728995, 0, 1.0};
Point(51) = {0.037254, 0.728694, 0, 1.0};
Point(52) = {0.043715, 0.728420, 0, 1.0};
Point(53) = {0.049767, 0.728179, 0, 1.0};
Point(54) = {0.055353, 0.727990, 0, 1.0};
Point(55) = {0.060419, 0.727843, 0, 1.0};
Point(56) = {0.064914, 0.727727, 0, 1.0};
Point(57) = {0.068795, 0.727637, 0, 1.0};
Point(58) = {0.072022, 0.727565, 0, 1.0};
Point(59) = {0.074526, 0.727505, 0, 1.0};
Point(60) = {-0.074684, -0.728984, 0, 1.0};
Point(61) = {-0.072266, -0.729850, 0, 1.0};
Point(62) = {-0.069147, -0.730946, 0, 1.0};
Point(63) = {-0.065393, -0.732221, 0, 1.0};
Point(64) = {-0.061035, -0.733625, 0, 1.0};
Point(65) = {-0.056110, -0.735091, 0, 1.0};
Point(66) = {-0.050664, -0.736599, 0, 1.0};
Point(67) = {-0.044753, -0.738155, 0, 1.0};
Point(68) = {-0.038427, -0.739695, 0, 1.0};
Point(69) = {-0.031746, -0.741191, 0, 1.0};
Point(70) = {-0.024774, -0.742623, 0, 1.0};
Point(71) = {-0.017577, -0.743963, 0, 1.0};
Point(72) = {-0.010223, -0.745192, 0, 1.0};
Point(73) = {-0.002783, -0.746293, 0, 1.0};
Point(74) = {0.004673, -0.747250, 0, 1.0};
Point(75) = {0.012072, -0.748055, 0, 1.0};
Point(76) = {0.019342, -0.748704, 0, 1.0};
Point(77) = {0.026412, -0.749217, 0, 1.0};
Point(78) = {0.033211, -0.749601, 0, 1.0};
Point(79) = {0.039674, -0.749854, 0, 1.0};
Point(80) = {0.045738, -0.749987, 0, 1.0};
Point(81) = {0.051343, -0.750000, 0, 1.0};
Point(82) = {0.056441, -0.749842, 0, 1.0};
Point(83) = {0.060986, -0.749495, 0, 1.0};
Point(84) = {0.064924, -0.749038, 0, 1.0};
Point(85) = {0.068225, -0.748423, 0, 1.0};
Point(86) = {0.070859, -0.747623, 0, 1.0};
Point(87) = {0.072797, -0.746690, 0, 1.0};
Point(88) = {0.074034, -0.745503, 0, 1.0};
Point(89) = {0.074578, -0.743886, 0, 1.0};
Point(90) = {0.074338, -0.742648, 0, 1.0};
Point(91) = {0.073357, -0.741438, 0, 1.0};
Point(92) = {0.071627, -0.740422, 0, 1.0};
Point(93) = {0.069170, -0.739552, 0, 1.0};
Point(94) = {0.066016, -0.738793, 0, 1.0};
Point(95) = {0.062199, -0.738110, 0, 1.0};
Point(96) = {0.057765, -0.737420, 0, 1.0};
Point(97) = {0.052760, -0.736701, 0, 1.0};
Point(98) = {0.047237, -0.735922, 0, 1.0};
Point(99) = {0.041242, -0.735139, 0, 1.0};
Point(100) = {0.034837, -0.734341, 0, 1.0};
Point(101) = {0.028081, -0.733549, 0, 1.0};
Point(102) = {0.021040, -0.732771, 0, 1.0};
Point(103) = {0.013779, -0.732027, 0, 1.0};
Point(104) = {0.006367, -0.731344, 0, 1.0};
Point(105) = {-0.001124, -0.730728, 0, 1.0};
Point(106) = {-0.008624, -0.730182, 0, 1.0};
Point(107) = {-0.016060, -0.729723, 0, 1.0};
Point(108) = {-0.023358, -0.729333, 0, 1.0};
Point(109) = {-0.030446, -0.728995, 0, 1.0};
Point(110) = {-0.037254, -0.728694, 0, 1.0};
Point(111) = {-0.043715, -0.728420, 0, 1.0};
Point(112) = {-0.049767, -0.728179, 0, 1.0};
Point(113) = {-0.055353, -0.727990, 0, 1.0};
Point(114) = {-0.060419, -0.727843, 0, 1.0};
Point(115) = {-0.064914, -0.727727, 0, 1.0};
Point(116) = {-0.068795, -0.727637, 0, 1.0};
Point(117) = {-0.072022, -0.727565, 0, 1.0};
Point(118) = {-0.074526, -0.727505, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:41};
Spline(3) = {41:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:78};
Spline(6) = {78:100};
Spline(7) = {100:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {36.00000000, 15.00000000, 0, 1.0};
Point(122) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
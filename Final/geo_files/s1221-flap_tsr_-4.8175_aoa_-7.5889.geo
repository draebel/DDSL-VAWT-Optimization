SetFactory("OpenCASCADE");

Point(1) = {0.073392, 0.749107, 0, 1.0};
Point(2) = {0.068243, 0.749560, 0, 1.0};
Point(3) = {0.065631, 0.749750, 0, 1.0};
Point(4) = {0.063018, 0.749893, 0, 1.0};
Point(5) = {0.060402, 0.749978, 0, 1.0};
Point(6) = {0.057785, 0.750000, 0, 1.0};
Point(7) = {0.048636, 0.749921, 0, 1.0};
Point(8) = {0.035648, 0.749800, 0, 1.0};
Point(9) = {0.034089, 0.749792, 0, 1.0};
Point(10) = {0.027587, 0.749726, 0, 1.0};
Point(11) = {0.020996, 0.749617, 0, 1.0};
Point(12) = {0.014354, 0.749466, 0, 1.0};
Point(13) = {0.007712, 0.749277, 0, 1.0};
Point(14) = {0.001123, 0.749053, 0, 1.0};
Point(15) = {-0.005356, 0.748791, 0, 1.0};
Point(16) = {-0.011667, 0.748472, 0, 1.0};
Point(17) = {-0.017762, 0.748080, 0, 1.0};
Point(18) = {-0.023604, 0.747588, 0, 1.0};
Point(19) = {-0.029166, 0.746975, 0, 1.0};
Point(20) = {-0.034418, 0.746236, 0, 1.0};
Point(21) = {-0.039328, 0.745322, 0, 1.0};
Point(22) = {-0.043918, 0.744209, 0, 1.0};
Point(23) = {-0.048214, 0.742920, 0, 1.0};
Point(24) = {-0.052221, 0.741470, 0, 1.0};
Point(25) = {-0.055941, 0.739898, 0, 1.0};
Point(26) = {-0.059355, 0.738237, 0, 1.0};
Point(27) = {-0.062448, 0.736516, 0, 1.0};
Point(28) = {-0.065209, 0.734750, 0, 1.0};
Point(29) = {-0.067624, 0.732966, 0, 1.0};
Point(30) = {-0.069690, 0.731192, 0, 1.0};
Point(31) = {-0.071393, 0.729453, 0, 1.0};
Point(32) = {-0.072726, 0.727781, 0, 1.0};
Point(33) = {-0.073664, 0.726189, 0, 1.0};
Point(34) = {-0.074226, 0.724687, 0, 1.0};
Point(35) = {-0.074449, 0.723315, 0, 1.0};
Point(36) = {-0.074343, 0.722156, 0, 1.0};
Point(37) = {-0.073830, 0.721373, 0, 1.0};
Point(38) = {-0.072742, 0.720918, 0, 1.0};
Point(39) = {-0.071040, 0.720612, 0, 1.0};
Point(40) = {-0.068817, 0.720445, 0, 1.0};
Point(41) = {-0.066103, 0.720419, 0, 1.0};
Point(42) = {-0.062932, 0.720530, 0, 1.0};
Point(43) = {-0.059328, 0.720785, 0, 1.0};
Point(44) = {-0.055330, 0.721188, 0, 1.0};
Point(45) = {-0.050969, 0.721745, 0, 1.0};
Point(46) = {-0.046281, 0.722467, 0, 1.0};
Point(47) = {-0.041317, 0.723385, 0, 1.0};
Point(48) = {-0.036063, 0.724589, 0, 1.0};
Point(49) = {-0.030436, 0.726072, 0, 1.0};
Point(50) = {-0.024421, 0.727746, 0, 1.0};
Point(51) = {-0.018045, 0.729553, 0, 1.0};
Point(52) = {-0.011346, 0.731447, 0, 1.0};
Point(53) = {-0.004366, 0.733381, 0, 1.0};
Point(54) = {0.002845, 0.735318, 0, 1.0};
Point(55) = {0.010234, 0.737212, 0, 1.0};
Point(56) = {0.017739, 0.739026, 0, 1.0};
Point(57) = {0.025296, 0.740725, 0, 1.0};
Point(58) = {0.032841, 0.742283, 0, 1.0};
Point(59) = {0.036644, 0.743008, 0, 1.0};
Point(60) = {0.049449, 0.745317, 0, 1.0};
Point(61) = {0.057150, 0.746553, 0, 1.0};
Point(62) = {0.059729, 0.746900, 0, 1.0};
Point(63) = {0.062316, 0.747174, 0, 1.0};
Point(64) = {0.064911, 0.747375, 0, 1.0};
Point(65) = {0.067511, 0.747498, 0, 1.0};
Point(66) = {0.073592, 0.747604, 0, 1.0};
Point(67) = {-0.073392, -0.749107, 0, 1.0};
Point(68) = {-0.068243, -0.749560, 0, 1.0};
Point(69) = {-0.065631, -0.749750, 0, 1.0};
Point(70) = {-0.063018, -0.749893, 0, 1.0};
Point(71) = {-0.060402, -0.749978, 0, 1.0};
Point(72) = {-0.057785, -0.750000, 0, 1.0};
Point(73) = {-0.048636, -0.749921, 0, 1.0};
Point(74) = {-0.035648, -0.749800, 0, 1.0};
Point(75) = {-0.034089, -0.749792, 0, 1.0};
Point(76) = {-0.027587, -0.749726, 0, 1.0};
Point(77) = {-0.020996, -0.749617, 0, 1.0};
Point(78) = {-0.014354, -0.749466, 0, 1.0};
Point(79) = {-0.007712, -0.749277, 0, 1.0};
Point(80) = {-0.001123, -0.749053, 0, 1.0};
Point(81) = {0.005356, -0.748791, 0, 1.0};
Point(82) = {0.011667, -0.748472, 0, 1.0};
Point(83) = {0.017762, -0.748080, 0, 1.0};
Point(84) = {0.023604, -0.747588, 0, 1.0};
Point(85) = {0.029166, -0.746975, 0, 1.0};
Point(86) = {0.034418, -0.746236, 0, 1.0};
Point(87) = {0.039328, -0.745322, 0, 1.0};
Point(88) = {0.043918, -0.744209, 0, 1.0};
Point(89) = {0.048214, -0.742920, 0, 1.0};
Point(90) = {0.052221, -0.741470, 0, 1.0};
Point(91) = {0.055941, -0.739898, 0, 1.0};
Point(92) = {0.059355, -0.738237, 0, 1.0};
Point(93) = {0.062448, -0.736516, 0, 1.0};
Point(94) = {0.065209, -0.734750, 0, 1.0};
Point(95) = {0.067624, -0.732966, 0, 1.0};
Point(96) = {0.069690, -0.731192, 0, 1.0};
Point(97) = {0.071393, -0.729453, 0, 1.0};
Point(98) = {0.072726, -0.727781, 0, 1.0};
Point(99) = {0.073664, -0.726189, 0, 1.0};
Point(100) = {0.074226, -0.724687, 0, 1.0};
Point(101) = {0.074449, -0.723315, 0, 1.0};
Point(102) = {0.074343, -0.722156, 0, 1.0};
Point(103) = {0.073830, -0.721373, 0, 1.0};
Point(104) = {0.072742, -0.720918, 0, 1.0};
Point(105) = {0.071040, -0.720612, 0, 1.0};
Point(106) = {0.068817, -0.720445, 0, 1.0};
Point(107) = {0.066103, -0.720419, 0, 1.0};
Point(108) = {0.062932, -0.720530, 0, 1.0};
Point(109) = {0.059328, -0.720785, 0, 1.0};
Point(110) = {0.055330, -0.721188, 0, 1.0};
Point(111) = {0.050969, -0.721745, 0, 1.0};
Point(112) = {0.046281, -0.722467, 0, 1.0};
Point(113) = {0.041317, -0.723385, 0, 1.0};
Point(114) = {0.036063, -0.724589, 0, 1.0};
Point(115) = {0.030436, -0.726072, 0, 1.0};
Point(116) = {0.024421, -0.727746, 0, 1.0};
Point(117) = {0.018045, -0.729553, 0, 1.0};
Point(118) = {0.011346, -0.731447, 0, 1.0};
Point(119) = {0.004366, -0.733381, 0, 1.0};
Point(120) = {-0.002845, -0.735318, 0, 1.0};
Point(121) = {-0.010234, -0.737212, 0, 1.0};
Point(122) = {-0.017739, -0.739026, 0, 1.0};
Point(123) = {-0.025296, -0.740725, 0, 1.0};
Point(124) = {-0.032841, -0.742283, 0, 1.0};
Point(125) = {-0.036644, -0.743008, 0, 1.0};
Point(126) = {-0.049449, -0.745317, 0, 1.0};
Point(127) = {-0.057150, -0.746553, 0, 1.0};
Point(128) = {-0.059729, -0.746900, 0, 1.0};
Point(129) = {-0.062316, -0.747174, 0, 1.0};
Point(130) = {-0.064911, -0.747375, 0, 1.0};
Point(131) = {-0.067511, -0.747498, 0, 1.0};
Point(132) = {-0.073592, -0.747604, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {36.00000000, 15.00000000, 0, 1.0};
Point(136) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.147870, 0.748593, 0, 1.0};
Point(2) = {0.147162, 0.748484, 0, 1.0};
Point(3) = {0.145032, 0.748211, 0, 1.0};
Point(4) = {0.141500, 0.747904, 0, 1.0};
Point(5) = {0.136662, 0.747696, 0, 1.0};
Point(6) = {0.130692, 0.747663, 0, 1.0};
Point(7) = {0.123771, 0.747805, 0, 1.0};
Point(8) = {0.116056, 0.748090, 0, 1.0};
Point(9) = {0.107694, 0.748476, 0, 1.0};
Point(10) = {0.098822, 0.748911, 0, 1.0};
Point(11) = {0.089568, 0.749337, 0, 1.0};
Point(12) = {0.080053, 0.749697, 0, 1.0};
Point(13) = {0.070391, 0.749939, 0, 1.0};
Point(14) = {0.060708, 0.750000, 0, 1.0};
Point(15) = {0.051094, 0.749773, 0, 1.0};
Point(16) = {0.041550, 0.749190, 0, 1.0};
Point(17) = {0.032078, 0.748287, 0, 1.0};
Point(18) = {0.022759, 0.747127, 0, 1.0};
Point(19) = {0.013696, 0.745740, 0, 1.0};
Point(20) = {0.004986, 0.744143, 0, 1.0};
Point(21) = {-0.003287, 0.742348, 0, 1.0};
Point(22) = {-0.011050, 0.740373, 0, 1.0};
Point(23) = {-0.018240, 0.738241, 0, 1.0};
Point(24) = {-0.024804, 0.735981, 0, 1.0};
Point(25) = {-0.030692, 0.733636, 0, 1.0};
Point(26) = {-0.035857, 0.731250, 0, 1.0};
Point(27) = {-0.040259, 0.728869, 0, 1.0};
Point(28) = {-0.043871, 0.726543, 0, 1.0};
Point(29) = {-0.046669, 0.724337, 0, 1.0};
Point(30) = {-0.048637, 0.722326, 0, 1.0};
Point(31) = {-0.049748, 0.720610, 0, 1.0};
Point(32) = {-0.049913, 0.720163, 0, 1.0};
Point(33) = {-0.049998, 0.719770, 0, 1.0};
Point(34) = {-0.050006, 0.719539, 0, 1.0};
Point(35) = {-0.049965, 0.719344, 0, 1.0};
Point(36) = {-0.049857, 0.719173, 0, 1.0};
Point(37) = {-0.049684, 0.719004, 0, 1.0};
Point(38) = {-0.049331, 0.718756, 0, 1.0};
Point(39) = {-0.048876, 0.718514, 0, 1.0};
Point(40) = {-0.046701, 0.717828, 0, 1.0};
Point(41) = {-0.043520, 0.717371, 0, 1.0};
Point(42) = {-0.039361, 0.717193, 0, 1.0};
Point(43) = {-0.034247, 0.717304, 0, 1.0};
Point(44) = {-0.028214, 0.717701, 0, 1.0};
Point(45) = {-0.021306, 0.718370, 0, 1.0};
Point(46) = {-0.013584, 0.719285, 0, 1.0};
Point(47) = {-0.005126, 0.720413, 0, 1.0};
Point(48) = {0.003976, 0.721721, 0, 1.0};
Point(49) = {0.013614, 0.723174, 0, 1.0};
Point(50) = {0.023668, 0.724743, 0, 1.0};
Point(51) = {0.034018, 0.726410, 0, 1.0};
Point(52) = {0.044544, 0.728151, 0, 1.0};
Point(53) = {0.055124, 0.729945, 0, 1.0};
Point(54) = {0.065638, 0.731765, 0, 1.0};
Point(55) = {0.075962, 0.733591, 0, 1.0};
Point(56) = {0.085979, 0.735399, 0, 1.0};
Point(57) = {0.095572, 0.737168, 0, 1.0};
Point(58) = {0.104628, 0.738876, 0, 1.0};
Point(59) = {0.113043, 0.740504, 0, 1.0};
Point(60) = {0.120717, 0.742034, 0, 1.0};
Point(61) = {0.127559, 0.743451, 0, 1.0};
Point(62) = {0.133486, 0.744740, 0, 1.0};
Point(63) = {0.138422, 0.745905, 0, 1.0};
Point(64) = {0.142348, 0.746964, 0, 1.0};
Point(65) = {0.145297, 0.747849, 0, 1.0};
Point(66) = {0.147200, 0.748411, 0, 1.0};
Point(67) = {-0.147870, -0.748593, 0, 1.0};
Point(68) = {-0.147162, -0.748484, 0, 1.0};
Point(69) = {-0.145032, -0.748211, 0, 1.0};
Point(70) = {-0.141500, -0.747904, 0, 1.0};
Point(71) = {-0.136662, -0.747696, 0, 1.0};
Point(72) = {-0.130692, -0.747663, 0, 1.0};
Point(73) = {-0.123771, -0.747805, 0, 1.0};
Point(74) = {-0.116056, -0.748090, 0, 1.0};
Point(75) = {-0.107694, -0.748476, 0, 1.0};
Point(76) = {-0.098822, -0.748911, 0, 1.0};
Point(77) = {-0.089568, -0.749337, 0, 1.0};
Point(78) = {-0.080053, -0.749697, 0, 1.0};
Point(79) = {-0.070391, -0.749939, 0, 1.0};
Point(80) = {-0.060708, -0.750000, 0, 1.0};
Point(81) = {-0.051094, -0.749773, 0, 1.0};
Point(82) = {-0.041550, -0.749190, 0, 1.0};
Point(83) = {-0.032078, -0.748287, 0, 1.0};
Point(84) = {-0.022759, -0.747127, 0, 1.0};
Point(85) = {-0.013696, -0.745740, 0, 1.0};
Point(86) = {-0.004986, -0.744143, 0, 1.0};
Point(87) = {0.003287, -0.742348, 0, 1.0};
Point(88) = {0.011050, -0.740373, 0, 1.0};
Point(89) = {0.018240, -0.738241, 0, 1.0};
Point(90) = {0.024804, -0.735981, 0, 1.0};
Point(91) = {0.030692, -0.733636, 0, 1.0};
Point(92) = {0.035857, -0.731250, 0, 1.0};
Point(93) = {0.040259, -0.728869, 0, 1.0};
Point(94) = {0.043871, -0.726543, 0, 1.0};
Point(95) = {0.046669, -0.724337, 0, 1.0};
Point(96) = {0.048637, -0.722326, 0, 1.0};
Point(97) = {0.049748, -0.720610, 0, 1.0};
Point(98) = {0.049913, -0.720163, 0, 1.0};
Point(99) = {0.049998, -0.719770, 0, 1.0};
Point(100) = {0.050006, -0.719539, 0, 1.0};
Point(101) = {0.049965, -0.719344, 0, 1.0};
Point(102) = {0.049857, -0.719173, 0, 1.0};
Point(103) = {0.049684, -0.719004, 0, 1.0};
Point(104) = {0.049331, -0.718756, 0, 1.0};
Point(105) = {0.048876, -0.718514, 0, 1.0};
Point(106) = {0.046701, -0.717828, 0, 1.0};
Point(107) = {0.043520, -0.717371, 0, 1.0};
Point(108) = {0.039361, -0.717193, 0, 1.0};
Point(109) = {0.034247, -0.717304, 0, 1.0};
Point(110) = {0.028214, -0.717701, 0, 1.0};
Point(111) = {0.021306, -0.718370, 0, 1.0};
Point(112) = {0.013584, -0.719285, 0, 1.0};
Point(113) = {0.005126, -0.720413, 0, 1.0};
Point(114) = {-0.003976, -0.721721, 0, 1.0};
Point(115) = {-0.013614, -0.723174, 0, 1.0};
Point(116) = {-0.023668, -0.724743, 0, 1.0};
Point(117) = {-0.034018, -0.726410, 0, 1.0};
Point(118) = {-0.044544, -0.728151, 0, 1.0};
Point(119) = {-0.055124, -0.729945, 0, 1.0};
Point(120) = {-0.065638, -0.731765, 0, 1.0};
Point(121) = {-0.075962, -0.733591, 0, 1.0};
Point(122) = {-0.085979, -0.735399, 0, 1.0};
Point(123) = {-0.095572, -0.737168, 0, 1.0};
Point(124) = {-0.104628, -0.738876, 0, 1.0};
Point(125) = {-0.113043, -0.740504, 0, 1.0};
Point(126) = {-0.120717, -0.742034, 0, 1.0};
Point(127) = {-0.127559, -0.743451, 0, 1.0};
Point(128) = {-0.133486, -0.744740, 0, 1.0};
Point(129) = {-0.138422, -0.745905, 0, 1.0};
Point(130) = {-0.142348, -0.746964, 0, 1.0};
Point(131) = {-0.145297, -0.747849, 0, 1.0};
Point(132) = {-0.147200, -0.748411, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.110903, 0.748945, 0, 1.0};
Point(2) = {0.110371, 0.748863, 0, 1.0};
Point(3) = {0.108774, 0.748658, 0, 1.0};
Point(4) = {0.106125, 0.748428, 0, 1.0};
Point(5) = {0.102497, 0.748272, 0, 1.0};
Point(6) = {0.098019, 0.748248, 0, 1.0};
Point(7) = {0.092829, 0.748354, 0, 1.0};
Point(8) = {0.087042, 0.748568, 0, 1.0};
Point(9) = {0.080770, 0.748857, 0, 1.0};
Point(10) = {0.074116, 0.749183, 0, 1.0};
Point(11) = {0.067176, 0.749503, 0, 1.0};
Point(12) = {0.060039, 0.749773, 0, 1.0};
Point(13) = {0.052793, 0.749954, 0, 1.0};
Point(14) = {0.045531, 0.750000, 0, 1.0};
Point(15) = {0.038321, 0.749830, 0, 1.0};
Point(16) = {0.031162, 0.749393, 0, 1.0};
Point(17) = {0.024059, 0.748715, 0, 1.0};
Point(18) = {0.017069, 0.747845, 0, 1.0};
Point(19) = {0.010272, 0.746805, 0, 1.0};
Point(20) = {0.003739, 0.745607, 0, 1.0};
Point(21) = {-0.002465, 0.744261, 0, 1.0};
Point(22) = {-0.008287, 0.742780, 0, 1.0};
Point(23) = {-0.013680, 0.741180, 0, 1.0};
Point(24) = {-0.018603, 0.739486, 0, 1.0};
Point(25) = {-0.023019, 0.737727, 0, 1.0};
Point(26) = {-0.026893, 0.735938, 0, 1.0};
Point(27) = {-0.030194, 0.734151, 0, 1.0};
Point(28) = {-0.032903, 0.732407, 0, 1.0};
Point(29) = {-0.035002, 0.730753, 0, 1.0};
Point(30) = {-0.036478, 0.729245, 0, 1.0};
Point(31) = {-0.037311, 0.727958, 0, 1.0};
Point(32) = {-0.037435, 0.727622, 0, 1.0};
Point(33) = {-0.037499, 0.727327, 0, 1.0};
Point(34) = {-0.037505, 0.727154, 0, 1.0};
Point(35) = {-0.037474, 0.727008, 0, 1.0};
Point(36) = {-0.037393, 0.726880, 0, 1.0};
Point(37) = {-0.037263, 0.726753, 0, 1.0};
Point(38) = {-0.036998, 0.726567, 0, 1.0};
Point(39) = {-0.036657, 0.726385, 0, 1.0};
Point(40) = {-0.035026, 0.725871, 0, 1.0};
Point(41) = {-0.032640, 0.725528, 0, 1.0};
Point(42) = {-0.029521, 0.725395, 0, 1.0};
Point(43) = {-0.025685, 0.725478, 0, 1.0};
Point(44) = {-0.021160, 0.725776, 0, 1.0};
Point(45) = {-0.015979, 0.726277, 0, 1.0};
Point(46) = {-0.010188, 0.726964, 0, 1.0};
Point(47) = {-0.003844, 0.727810, 0, 1.0};
Point(48) = {0.002982, 0.728790, 0, 1.0};
Point(49) = {0.010210, 0.729880, 0, 1.0};
Point(50) = {0.017751, 0.731058, 0, 1.0};
Point(51) = {0.025513, 0.732308, 0, 1.0};
Point(52) = {0.033408, 0.733614, 0, 1.0};
Point(53) = {0.041343, 0.734958, 0, 1.0};
Point(54) = {0.049228, 0.736324, 0, 1.0};
Point(55) = {0.056972, 0.737694, 0, 1.0};
Point(56) = {0.064484, 0.739049, 0, 1.0};
Point(57) = {0.071679, 0.740376, 0, 1.0};
Point(58) = {0.078471, 0.741657, 0, 1.0};
Point(59) = {0.084782, 0.742878, 0, 1.0};
Point(60) = {0.090538, 0.744025, 0, 1.0};
Point(61) = {0.095669, 0.745088, 0, 1.0};
Point(62) = {0.100115, 0.746055, 0, 1.0};
Point(63) = {0.103816, 0.746929, 0, 1.0};
Point(64) = {0.106761, 0.747723, 0, 1.0};
Point(65) = {0.108973, 0.748387, 0, 1.0};
Point(66) = {0.110400, 0.748808, 0, 1.0};
Point(67) = {-0.110903, -0.748945, 0, 1.0};
Point(68) = {-0.110371, -0.748863, 0, 1.0};
Point(69) = {-0.108774, -0.748658, 0, 1.0};
Point(70) = {-0.106125, -0.748428, 0, 1.0};
Point(71) = {-0.102497, -0.748272, 0, 1.0};
Point(72) = {-0.098019, -0.748248, 0, 1.0};
Point(73) = {-0.092829, -0.748354, 0, 1.0};
Point(74) = {-0.087042, -0.748568, 0, 1.0};
Point(75) = {-0.080770, -0.748857, 0, 1.0};
Point(76) = {-0.074116, -0.749183, 0, 1.0};
Point(77) = {-0.067176, -0.749503, 0, 1.0};
Point(78) = {-0.060039, -0.749773, 0, 1.0};
Point(79) = {-0.052793, -0.749954, 0, 1.0};
Point(80) = {-0.045531, -0.750000, 0, 1.0};
Point(81) = {-0.038321, -0.749830, 0, 1.0};
Point(82) = {-0.031162, -0.749393, 0, 1.0};
Point(83) = {-0.024059, -0.748715, 0, 1.0};
Point(84) = {-0.017069, -0.747845, 0, 1.0};
Point(85) = {-0.010272, -0.746805, 0, 1.0};
Point(86) = {-0.003739, -0.745607, 0, 1.0};
Point(87) = {0.002465, -0.744261, 0, 1.0};
Point(88) = {0.008287, -0.742780, 0, 1.0};
Point(89) = {0.013680, -0.741180, 0, 1.0};
Point(90) = {0.018603, -0.739486, 0, 1.0};
Point(91) = {0.023019, -0.737727, 0, 1.0};
Point(92) = {0.026893, -0.735938, 0, 1.0};
Point(93) = {0.030194, -0.734151, 0, 1.0};
Point(94) = {0.032903, -0.732407, 0, 1.0};
Point(95) = {0.035002, -0.730753, 0, 1.0};
Point(96) = {0.036478, -0.729245, 0, 1.0};
Point(97) = {0.037311, -0.727958, 0, 1.0};
Point(98) = {0.037435, -0.727622, 0, 1.0};
Point(99) = {0.037499, -0.727327, 0, 1.0};
Point(100) = {0.037505, -0.727154, 0, 1.0};
Point(101) = {0.037474, -0.727008, 0, 1.0};
Point(102) = {0.037393, -0.726880, 0, 1.0};
Point(103) = {0.037263, -0.726753, 0, 1.0};
Point(104) = {0.036998, -0.726567, 0, 1.0};
Point(105) = {0.036657, -0.726385, 0, 1.0};
Point(106) = {0.035026, -0.725871, 0, 1.0};
Point(107) = {0.032640, -0.725528, 0, 1.0};
Point(108) = {0.029521, -0.725395, 0, 1.0};
Point(109) = {0.025685, -0.725478, 0, 1.0};
Point(110) = {0.021160, -0.725776, 0, 1.0};
Point(111) = {0.015979, -0.726277, 0, 1.0};
Point(112) = {0.010188, -0.726964, 0, 1.0};
Point(113) = {0.003844, -0.727810, 0, 1.0};
Point(114) = {-0.002982, -0.728790, 0, 1.0};
Point(115) = {-0.010210, -0.729880, 0, 1.0};
Point(116) = {-0.017751, -0.731058, 0, 1.0};
Point(117) = {-0.025513, -0.732308, 0, 1.0};
Point(118) = {-0.033408, -0.733614, 0, 1.0};
Point(119) = {-0.041343, -0.734958, 0, 1.0};
Point(120) = {-0.049228, -0.736324, 0, 1.0};
Point(121) = {-0.056972, -0.737694, 0, 1.0};
Point(122) = {-0.064484, -0.739049, 0, 1.0};
Point(123) = {-0.071679, -0.740376, 0, 1.0};
Point(124) = {-0.078471, -0.741657, 0, 1.0};
Point(125) = {-0.084782, -0.742878, 0, 1.0};
Point(126) = {-0.090538, -0.744025, 0, 1.0};
Point(127) = {-0.095669, -0.745088, 0, 1.0};
Point(128) = {-0.100115, -0.746055, 0, 1.0};
Point(129) = {-0.103816, -0.746929, 0, 1.0};
Point(130) = {-0.106761, -0.747723, 0, 1.0};
Point(131) = {-0.108973, -0.748387, 0, 1.0};
Point(132) = {-0.110400, -0.748808, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
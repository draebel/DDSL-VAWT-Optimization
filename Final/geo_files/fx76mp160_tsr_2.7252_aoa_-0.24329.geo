SetFactory("OpenCASCADE");

Point(1) = {0.074988, 0.731251, 0, 1.0};
Point(2) = {0.074199, 0.731505, 0, 1.0};
Point(3) = {0.071768, 0.732262, 0, 1.0};
Point(4) = {0.069046, 0.733141, 0, 1.0};
Point(5) = {0.066045, 0.734087, 0, 1.0};
Point(6) = {0.062774, 0.735158, 0, 1.0};
Point(7) = {0.059250, 0.736287, 0, 1.0};
Point(8) = {0.055488, 0.737539, 0, 1.0};
Point(9) = {0.051504, 0.738837, 0, 1.0};
Point(10) = {0.047314, 0.740243, 0, 1.0};
Point(11) = {0.042936, 0.741658, 0, 1.0};
Point(12) = {0.038390, 0.743089, 0, 1.0};
Point(13) = {0.033696, 0.744418, 0, 1.0};
Point(14) = {0.028873, 0.745634, 0, 1.0};
Point(15) = {0.023943, 0.746681, 0, 1.0};
Point(16) = {0.018927, 0.747602, 0, 1.0};
Point(17) = {0.013844, 0.748340, 0, 1.0};
Point(18) = {0.008718, 0.748954, 0, 1.0};
Point(19) = {0.003572, 0.749392, 0, 1.0};
Point(20) = {-0.001574, 0.749738, 0, 1.0};
Point(21) = {-0.006697, 0.749919, 0, 1.0};
Point(22) = {-0.011778, 0.750000, 0, 1.0};
Point(23) = {-0.016790, 0.749913, 0, 1.0};
Point(24) = {-0.021715, 0.749736, 0, 1.0};
Point(25) = {-0.026531, 0.749390, 0, 1.0};
Point(26) = {-0.031217, 0.748958, 0, 1.0};
Point(27) = {-0.035755, 0.748353, 0, 1.0};
Point(28) = {-0.040124, 0.747668, 0, 1.0};
Point(29) = {-0.044304, 0.746814, 0, 1.0};
Point(30) = {-0.048279, 0.745885, 0, 1.0};
Point(31) = {-0.052031, 0.744787, 0, 1.0};
Point(32) = {-0.055545, 0.743619, 0, 1.0};
Point(33) = {-0.058806, 0.742304, 0, 1.0};
Point(34) = {-0.061797, 0.740947, 0, 1.0};
Point(35) = {-0.064509, 0.739479, 0, 1.0};
Point(36) = {-0.066931, 0.737998, 0, 1.0};
Point(37) = {-0.069048, 0.736420, 0, 1.0};
Point(38) = {-0.070855, 0.734882, 0, 1.0};
Point(39) = {-0.072342, 0.733298, 0, 1.0};
Point(40) = {-0.073504, 0.731812, 0, 1.0};
Point(41) = {-0.074337, 0.730379, 0, 1.0};
Point(42) = {-0.074836, 0.729129, 0, 1.0};
Point(43) = {-0.074999, 0.727876, 0, 1.0};
Point(44) = {-0.074827, 0.726985, 0, 1.0};
Point(45) = {-0.074318, 0.726103, 0, 1.0};
Point(46) = {-0.073476, 0.725213, 0, 1.0};
Point(47) = {-0.072304, 0.724546, 0, 1.0};
Point(48) = {-0.070809, 0.723891, 0, 1.0};
Point(49) = {-0.068993, 0.723466, 0, 1.0};
Point(50) = {-0.066867, 0.723035, 0, 1.0};
Point(51) = {-0.064439, 0.722809, 0, 1.0};
Point(52) = {-0.061719, 0.722567, 0, 1.0};
Point(53) = {-0.058722, 0.722527, 0, 1.0};
Point(54) = {-0.055455, 0.722479, 0, 1.0};
Point(55) = {-0.051937, 0.722614, 0, 1.0};
Point(56) = {-0.048180, 0.722701, 0, 1.0};
Point(57) = {-0.044202, 0.722950, 0, 1.0};
Point(58) = {-0.040020, 0.723130, 0, 1.0};
Point(59) = {-0.035649, 0.723451, 0, 1.0};
Point(60) = {-0.031110, 0.723690, 0, 1.0};
Point(61) = {-0.026423, 0.724059, 0, 1.0};
Point(62) = {-0.021607, 0.724333, 0, 1.0};
Point(63) = {-0.016683, 0.724719, 0, 1.0};
Point(64) = {-0.011672, 0.725006, 0, 1.0};
Point(65) = {-0.006593, 0.725396, 0, 1.0};
Point(66) = {-0.001472, 0.725688, 0, 1.0};
Point(67) = {0.003671, 0.726086, 0, 1.0};
Point(68) = {0.008814, 0.726383, 0, 1.0};
Point(69) = {0.013935, 0.726787, 0, 1.0};
Point(70) = {0.019014, 0.727108, 0, 1.0};
Point(71) = {0.024024, 0.727538, 0, 1.0};
Point(72) = {0.028949, 0.727905, 0, 1.0};
Point(73) = {0.033764, 0.728383, 0, 1.0};
Point(74) = {0.038450, 0.728792, 0, 1.0};
Point(75) = {0.042989, 0.729282, 0, 1.0};
Point(76) = {0.047359, 0.729634, 0, 1.0};
Point(77) = {0.051541, 0.730005, 0, 1.0};
Point(78) = {0.055519, 0.730186, 0, 1.0};
Point(79) = {0.059275, 0.730373, 0, 1.0};
Point(80) = {0.062795, 0.730365, 0, 1.0};
Point(81) = {0.066061, 0.730366, 0, 1.0};
Point(82) = {0.069058, 0.730195, 0, 1.0};
Point(83) = {0.071778, 0.730060, 0, 1.0};
Point(84) = {0.074206, 0.729782, 0, 1.0};
Point(85) = {0.074994, 0.729717, 0, 1.0};
Point(86) = {-0.074988, -0.731251, 0, 1.0};
Point(87) = {-0.074199, -0.731505, 0, 1.0};
Point(88) = {-0.071768, -0.732262, 0, 1.0};
Point(89) = {-0.069046, -0.733141, 0, 1.0};
Point(90) = {-0.066045, -0.734087, 0, 1.0};
Point(91) = {-0.062774, -0.735158, 0, 1.0};
Point(92) = {-0.059250, -0.736287, 0, 1.0};
Point(93) = {-0.055488, -0.737539, 0, 1.0};
Point(94) = {-0.051504, -0.738837, 0, 1.0};
Point(95) = {-0.047314, -0.740243, 0, 1.0};
Point(96) = {-0.042936, -0.741658, 0, 1.0};
Point(97) = {-0.038390, -0.743089, 0, 1.0};
Point(98) = {-0.033696, -0.744418, 0, 1.0};
Point(99) = {-0.028873, -0.745634, 0, 1.0};
Point(100) = {-0.023943, -0.746681, 0, 1.0};
Point(101) = {-0.018927, -0.747602, 0, 1.0};
Point(102) = {-0.013844, -0.748340, 0, 1.0};
Point(103) = {-0.008718, -0.748954, 0, 1.0};
Point(104) = {-0.003572, -0.749392, 0, 1.0};
Point(105) = {0.001574, -0.749738, 0, 1.0};
Point(106) = {0.006697, -0.749919, 0, 1.0};
Point(107) = {0.011778, -0.750000, 0, 1.0};
Point(108) = {0.016790, -0.749913, 0, 1.0};
Point(109) = {0.021715, -0.749736, 0, 1.0};
Point(110) = {0.026531, -0.749390, 0, 1.0};
Point(111) = {0.031217, -0.748958, 0, 1.0};
Point(112) = {0.035755, -0.748353, 0, 1.0};
Point(113) = {0.040124, -0.747668, 0, 1.0};
Point(114) = {0.044304, -0.746814, 0, 1.0};
Point(115) = {0.048279, -0.745885, 0, 1.0};
Point(116) = {0.052031, -0.744787, 0, 1.0};
Point(117) = {0.055545, -0.743619, 0, 1.0};
Point(118) = {0.058806, -0.742304, 0, 1.0};
Point(119) = {0.061797, -0.740947, 0, 1.0};
Point(120) = {0.064509, -0.739479, 0, 1.0};
Point(121) = {0.066931, -0.737998, 0, 1.0};
Point(122) = {0.069048, -0.736420, 0, 1.0};
Point(123) = {0.070855, -0.734882, 0, 1.0};
Point(124) = {0.072342, -0.733298, 0, 1.0};
Point(125) = {0.073504, -0.731812, 0, 1.0};
Point(126) = {0.074337, -0.730379, 0, 1.0};
Point(127) = {0.074836, -0.729129, 0, 1.0};
Point(128) = {0.074999, -0.727876, 0, 1.0};
Point(129) = {0.074827, -0.726985, 0, 1.0};
Point(130) = {0.074318, -0.726103, 0, 1.0};
Point(131) = {0.073476, -0.725213, 0, 1.0};
Point(132) = {0.072304, -0.724546, 0, 1.0};
Point(133) = {0.070809, -0.723891, 0, 1.0};
Point(134) = {0.068993, -0.723466, 0, 1.0};
Point(135) = {0.066867, -0.723035, 0, 1.0};
Point(136) = {0.064439, -0.722809, 0, 1.0};
Point(137) = {0.061719, -0.722567, 0, 1.0};
Point(138) = {0.058722, -0.722527, 0, 1.0};
Point(139) = {0.055455, -0.722479, 0, 1.0};
Point(140) = {0.051937, -0.722614, 0, 1.0};
Point(141) = {0.048180, -0.722701, 0, 1.0};
Point(142) = {0.044202, -0.722950, 0, 1.0};
Point(143) = {0.040020, -0.723130, 0, 1.0};
Point(144) = {0.035649, -0.723451, 0, 1.0};
Point(145) = {0.031110, -0.723690, 0, 1.0};
Point(146) = {0.026423, -0.724059, 0, 1.0};
Point(147) = {0.021607, -0.724333, 0, 1.0};
Point(148) = {0.016683, -0.724719, 0, 1.0};
Point(149) = {0.011672, -0.725006, 0, 1.0};
Point(150) = {0.006593, -0.725396, 0, 1.0};
Point(151) = {0.001472, -0.725688, 0, 1.0};
Point(152) = {-0.003671, -0.726086, 0, 1.0};
Point(153) = {-0.008814, -0.726383, 0, 1.0};
Point(154) = {-0.013935, -0.726787, 0, 1.0};
Point(155) = {-0.019014, -0.727108, 0, 1.0};
Point(156) = {-0.024024, -0.727538, 0, 1.0};
Point(157) = {-0.028949, -0.727905, 0, 1.0};
Point(158) = {-0.033764, -0.728383, 0, 1.0};
Point(159) = {-0.038450, -0.728792, 0, 1.0};
Point(160) = {-0.042989, -0.729282, 0, 1.0};
Point(161) = {-0.047359, -0.729634, 0, 1.0};
Point(162) = {-0.051541, -0.730005, 0, 1.0};
Point(163) = {-0.055519, -0.730186, 0, 1.0};
Point(164) = {-0.059275, -0.730373, 0, 1.0};
Point(165) = {-0.062795, -0.730365, 0, 1.0};
Point(166) = {-0.066061, -0.730366, 0, 1.0};
Point(167) = {-0.069058, -0.730195, 0, 1.0};
Point(168) = {-0.071778, -0.730060, 0, 1.0};
Point(169) = {-0.074206, -0.729782, 0, 1.0};
Point(170) = {-0.074994, -0.729717, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
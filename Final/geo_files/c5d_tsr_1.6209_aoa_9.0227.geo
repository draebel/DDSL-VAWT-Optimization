SetFactory("OpenCASCADE");

Point(1) = {0.074098, 0.722525, 0, 1.0};
Point(2) = {0.066965, 0.725507, 0, 1.0};
Point(3) = {0.059805, 0.728300, 0, 1.0};
Point(4) = {0.052608, 0.730856, 0, 1.0};
Point(5) = {0.045386, 0.733241, 0, 1.0};
Point(6) = {0.038134, 0.735434, 0, 1.0};
Point(7) = {0.030852, 0.737431, 0, 1.0};
Point(8) = {0.023545, 0.739267, 0, 1.0};
Point(9) = {0.016221, 0.740988, 0, 1.0};
Point(10) = {0.008876, 0.742570, 0, 1.0};
Point(11) = {0.001511, 0.744026, 0, 1.0};
Point(12) = {-0.005875, 0.745339, 0, 1.0};
Point(13) = {-0.013286, 0.746488, 0, 1.0};
Point(14) = {-0.020717, 0.747511, 0, 1.0};
Point(15) = {-0.028172, 0.748372, 0, 1.0};
Point(16) = {-0.035650, 0.749088, 0, 1.0};
Point(17) = {-0.043154, 0.749627, 0, 1.0};
Point(18) = {-0.046169, 0.749759, 0, 1.0};
Point(19) = {-0.049184, 0.749886, 0, 1.0};
Point(20) = {-0.052202, 0.749993, 0, 1.0};
Point(21) = {-0.055236, 0.750000, 0, 1.0};
Point(22) = {-0.058274, 0.749978, 0, 1.0};
Point(23) = {-0.061326, 0.749867, 0, 1.0};
Point(24) = {-0.064391, 0.749666, 0, 1.0};
Point(25) = {-0.067491, 0.749234, 0, 1.0};
Point(26) = {-0.070632, 0.748538, 0, 1.0};
Point(27) = {-0.072263, 0.747795, 0, 1.0};
Point(28) = {-0.072683, 0.747532, 0, 1.0};
Point(29) = {-0.073111, 0.747209, 0, 1.0};
Point(30) = {-0.073555, 0.746785, 0, 1.0};
Point(31) = {-0.074072, 0.745885, 0, 1.0};
Point(32) = {-0.073924, 0.744368, 0, 1.0};
Point(33) = {-0.073630, 0.743808, 0, 1.0};
Point(34) = {-0.073303, 0.743465, 0, 1.0};
Point(35) = {-0.072969, 0.743172, 0, 1.0};
Point(36) = {-0.071587, 0.742282, 0, 1.0};
Point(37) = {-0.068744, 0.741027, 0, 1.0};
Point(38) = {-0.065868, 0.739989, 0, 1.0};
Point(39) = {-0.062966, 0.739115, 0, 1.0};
Point(40) = {-0.060050, 0.738341, 0, 1.0};
Point(41) = {-0.057118, 0.737665, 0, 1.0};
Point(42) = {-0.054185, 0.737000, 0, 1.0};
Point(43) = {-0.051248, 0.736363, 0, 1.0};
Point(44) = {-0.048304, 0.735766, 0, 1.0};
Point(45) = {-0.045361, 0.735169, 0, 1.0};
Point(46) = {-0.037984, 0.733791, 0, 1.0};
Point(47) = {-0.030599, 0.732472, 0, 1.0};
Point(48) = {-0.023201, 0.731231, 0, 1.0};
Point(49) = {-0.015788, 0.730097, 0, 1.0};
Point(50) = {-0.008360, 0.729055, 0, 1.0};
Point(51) = {-0.000915, 0.728125, 0, 1.0};
Point(52) = {0.006546, 0.727301, 0, 1.0};
Point(53) = {0.014022, 0.726576, 0, 1.0};
Point(54) = {0.021507, 0.725915, 0, 1.0};
Point(55) = {0.029012, 0.725376, 0, 1.0};
Point(56) = {0.036520, 0.724859, 0, 1.0};
Point(57) = {0.044030, 0.724358, 0, 1.0};
Point(58) = {0.051540, 0.723856, 0, 1.0};
Point(59) = {0.059048, 0.723339, 0, 1.0};
Point(60) = {0.066550, 0.722785, 0, 1.0};
Point(61) = {0.074046, 0.722197, 0, 1.0};
Point(62) = {-0.074098, -0.722525, 0, 1.0};
Point(63) = {-0.066965, -0.725507, 0, 1.0};
Point(64) = {-0.059805, -0.728300, 0, 1.0};
Point(65) = {-0.052608, -0.730856, 0, 1.0};
Point(66) = {-0.045386, -0.733241, 0, 1.0};
Point(67) = {-0.038134, -0.735434, 0, 1.0};
Point(68) = {-0.030852, -0.737431, 0, 1.0};
Point(69) = {-0.023545, -0.739267, 0, 1.0};
Point(70) = {-0.016221, -0.740988, 0, 1.0};
Point(71) = {-0.008876, -0.742570, 0, 1.0};
Point(72) = {-0.001511, -0.744026, 0, 1.0};
Point(73) = {0.005875, -0.745339, 0, 1.0};
Point(74) = {0.013286, -0.746488, 0, 1.0};
Point(75) = {0.020717, -0.747511, 0, 1.0};
Point(76) = {0.028172, -0.748372, 0, 1.0};
Point(77) = {0.035650, -0.749088, 0, 1.0};
Point(78) = {0.043154, -0.749627, 0, 1.0};
Point(79) = {0.046169, -0.749759, 0, 1.0};
Point(80) = {0.049184, -0.749886, 0, 1.0};
Point(81) = {0.052202, -0.749993, 0, 1.0};
Point(82) = {0.055236, -0.750000, 0, 1.0};
Point(83) = {0.058274, -0.749978, 0, 1.0};
Point(84) = {0.061326, -0.749867, 0, 1.0};
Point(85) = {0.064391, -0.749666, 0, 1.0};
Point(86) = {0.067491, -0.749234, 0, 1.0};
Point(87) = {0.070632, -0.748538, 0, 1.0};
Point(88) = {0.072263, -0.747795, 0, 1.0};
Point(89) = {0.072683, -0.747532, 0, 1.0};
Point(90) = {0.073111, -0.747209, 0, 1.0};
Point(91) = {0.073555, -0.746785, 0, 1.0};
Point(92) = {0.074072, -0.745885, 0, 1.0};
Point(93) = {0.073924, -0.744368, 0, 1.0};
Point(94) = {0.073630, -0.743808, 0, 1.0};
Point(95) = {0.073303, -0.743465, 0, 1.0};
Point(96) = {0.072969, -0.743172, 0, 1.0};
Point(97) = {0.071587, -0.742282, 0, 1.0};
Point(98) = {0.068744, -0.741027, 0, 1.0};
Point(99) = {0.065868, -0.739989, 0, 1.0};
Point(100) = {0.062966, -0.739115, 0, 1.0};
Point(101) = {0.060050, -0.738341, 0, 1.0};
Point(102) = {0.057118, -0.737665, 0, 1.0};
Point(103) = {0.054185, -0.737000, 0, 1.0};
Point(104) = {0.051248, -0.736363, 0, 1.0};
Point(105) = {0.048304, -0.735766, 0, 1.0};
Point(106) = {0.045361, -0.735169, 0, 1.0};
Point(107) = {0.037984, -0.733791, 0, 1.0};
Point(108) = {0.030599, -0.732472, 0, 1.0};
Point(109) = {0.023201, -0.731231, 0, 1.0};
Point(110) = {0.015788, -0.730097, 0, 1.0};
Point(111) = {0.008360, -0.729055, 0, 1.0};
Point(112) = {0.000915, -0.728125, 0, 1.0};
Point(113) = {-0.006546, -0.727301, 0, 1.0};
Point(114) = {-0.014022, -0.726576, 0, 1.0};
Point(115) = {-0.021507, -0.725915, 0, 1.0};
Point(116) = {-0.029012, -0.725376, 0, 1.0};
Point(117) = {-0.036520, -0.724859, 0, 1.0};
Point(118) = {-0.044030, -0.724358, 0, 1.0};
Point(119) = {-0.051540, -0.723856, 0, 1.0};
Point(120) = {-0.059048, -0.723339, 0, 1.0};
Point(121) = {-0.066550, -0.722785, 0, 1.0};
Point(122) = {-0.074046, -0.722197, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
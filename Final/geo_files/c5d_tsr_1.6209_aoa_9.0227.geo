SetFactory("OpenCASCADE");

Point(1) = {0.073780, 0.731683, 0, 1.0};
Point(2) = {0.069025, 0.733671, 0, 1.0};
Point(3) = {0.064251, 0.735533, 0, 1.0};
Point(4) = {0.059454, 0.737237, 0, 1.0};
Point(5) = {0.054638, 0.738827, 0, 1.0};
Point(6) = {0.049804, 0.740289, 0, 1.0};
Point(7) = {0.044949, 0.741621, 0, 1.0};
Point(8) = {0.040078, 0.742844, 0, 1.0};
Point(9) = {0.035195, 0.743992, 0, 1.0};
Point(10) = {0.030299, 0.745047, 0, 1.0};
Point(11) = {0.025389, 0.746018, 0, 1.0};
Point(12) = {0.020465, 0.746892, 0, 1.0};
Point(13) = {0.015524, 0.747659, 0, 1.0};
Point(14) = {0.010570, 0.748341, 0, 1.0};
Point(15) = {0.005600, 0.748914, 0, 1.0};
Point(16) = {0.000615, 0.749392, 0, 1.0};
Point(17) = {-0.004388, 0.749751, 0, 1.0};
Point(18) = {-0.006398, 0.749840, 0, 1.0};
Point(19) = {-0.008408, 0.749924, 0, 1.0};
Point(20) = {-0.010420, 0.749995, 0, 1.0};
Point(21) = {-0.012443, 0.750000, 0, 1.0};
Point(22) = {-0.014468, 0.749985, 0, 1.0};
Point(23) = {-0.016502, 0.749911, 0, 1.0};
Point(24) = {-0.018546, 0.749777, 0, 1.0};
Point(25) = {-0.020613, 0.749490, 0, 1.0};
Point(26) = {-0.022707, 0.749025, 0, 1.0};
Point(27) = {-0.023794, 0.748530, 0, 1.0};
Point(28) = {-0.024074, 0.748355, 0, 1.0};
Point(29) = {-0.024360, 0.748139, 0, 1.0};
Point(30) = {-0.024655, 0.747857, 0, 1.0};
Point(31) = {-0.025000, 0.747256, 0, 1.0};
Point(32) = {-0.024901, 0.746245, 0, 1.0};
Point(33) = {-0.024705, 0.745872, 0, 1.0};
Point(34) = {-0.024488, 0.745643, 0, 1.0};
Point(35) = {-0.024264, 0.745448, 0, 1.0};
Point(36) = {-0.023343, 0.744854, 0, 1.0};
Point(37) = {-0.021448, 0.744018, 0, 1.0};
Point(38) = {-0.019530, 0.743326, 0, 1.0};
Point(39) = {-0.017596, 0.742743, 0, 1.0};
Point(40) = {-0.015652, 0.742227, 0, 1.0};
Point(41) = {-0.013697, 0.741777, 0, 1.0};
Point(42) = {-0.011742, 0.741334, 0, 1.0};
Point(43) = {-0.009784, 0.740909, 0, 1.0};
Point(44) = {-0.007821, 0.740511, 0, 1.0};
Point(45) = {-0.005859, 0.740112, 0, 1.0};
Point(46) = {-0.000941, 0.739194, 0, 1.0};
Point(47) = {0.003982, 0.738315, 0, 1.0};
Point(48) = {0.008914, 0.737487, 0, 1.0};
Point(49) = {0.013856, 0.736731, 0, 1.0};
Point(50) = {0.018808, 0.736037, 0, 1.0};
Point(51) = {0.023771, 0.735417, 0, 1.0};
Point(52) = {0.028745, 0.734867, 0, 1.0};
Point(53) = {0.033729, 0.734384, 0, 1.0};
Point(54) = {0.038720, 0.733943, 0, 1.0};
Point(55) = {0.043723, 0.733584, 0, 1.0};
Point(56) = {0.048728, 0.733239, 0, 1.0};
Point(57) = {0.053735, 0.732905, 0, 1.0};
Point(58) = {0.058741, 0.732571, 0, 1.0};
Point(59) = {0.063747, 0.732226, 0, 1.0};
Point(60) = {0.068748, 0.731857, 0, 1.0};
Point(61) = {0.073745, 0.731464, 0, 1.0};
Point(62) = {-0.073780, -0.731683, 0, 1.0};
Point(63) = {-0.069025, -0.733671, 0, 1.0};
Point(64) = {-0.064251, -0.735533, 0, 1.0};
Point(65) = {-0.059454, -0.737237, 0, 1.0};
Point(66) = {-0.054638, -0.738827, 0, 1.0};
Point(67) = {-0.049804, -0.740289, 0, 1.0};
Point(68) = {-0.044949, -0.741621, 0, 1.0};
Point(69) = {-0.040078, -0.742844, 0, 1.0};
Point(70) = {-0.035195, -0.743992, 0, 1.0};
Point(71) = {-0.030299, -0.745047, 0, 1.0};
Point(72) = {-0.025389, -0.746018, 0, 1.0};
Point(73) = {-0.020465, -0.746892, 0, 1.0};
Point(74) = {-0.015524, -0.747659, 0, 1.0};
Point(75) = {-0.010570, -0.748341, 0, 1.0};
Point(76) = {-0.005600, -0.748914, 0, 1.0};
Point(77) = {-0.000615, -0.749392, 0, 1.0};
Point(78) = {0.004388, -0.749751, 0, 1.0};
Point(79) = {0.006398, -0.749840, 0, 1.0};
Point(80) = {0.008408, -0.749924, 0, 1.0};
Point(81) = {0.010420, -0.749995, 0, 1.0};
Point(82) = {0.012443, -0.750000, 0, 1.0};
Point(83) = {0.014468, -0.749985, 0, 1.0};
Point(84) = {0.016502, -0.749911, 0, 1.0};
Point(85) = {0.018546, -0.749777, 0, 1.0};
Point(86) = {0.020613, -0.749490, 0, 1.0};
Point(87) = {0.022707, -0.749025, 0, 1.0};
Point(88) = {0.023794, -0.748530, 0, 1.0};
Point(89) = {0.024074, -0.748355, 0, 1.0};
Point(90) = {0.024360, -0.748139, 0, 1.0};
Point(91) = {0.024655, -0.747857, 0, 1.0};
Point(92) = {0.025000, -0.747256, 0, 1.0};
Point(93) = {0.024901, -0.746245, 0, 1.0};
Point(94) = {0.024705, -0.745872, 0, 1.0};
Point(95) = {0.024488, -0.745643, 0, 1.0};
Point(96) = {0.024264, -0.745448, 0, 1.0};
Point(97) = {0.023343, -0.744854, 0, 1.0};
Point(98) = {0.021448, -0.744018, 0, 1.0};
Point(99) = {0.019530, -0.743326, 0, 1.0};
Point(100) = {0.017596, -0.742743, 0, 1.0};
Point(101) = {0.015652, -0.742227, 0, 1.0};
Point(102) = {0.013697, -0.741777, 0, 1.0};
Point(103) = {0.011742, -0.741334, 0, 1.0};
Point(104) = {0.009784, -0.740909, 0, 1.0};
Point(105) = {0.007821, -0.740511, 0, 1.0};
Point(106) = {0.005859, -0.740112, 0, 1.0};
Point(107) = {0.000941, -0.739194, 0, 1.0};
Point(108) = {-0.003982, -0.738315, 0, 1.0};
Point(109) = {-0.008914, -0.737487, 0, 1.0};
Point(110) = {-0.013856, -0.736731, 0, 1.0};
Point(111) = {-0.018808, -0.736037, 0, 1.0};
Point(112) = {-0.023771, -0.735417, 0, 1.0};
Point(113) = {-0.028745, -0.734867, 0, 1.0};
Point(114) = {-0.033729, -0.734384, 0, 1.0};
Point(115) = {-0.038720, -0.733943, 0, 1.0};
Point(116) = {-0.043723, -0.733584, 0, 1.0};
Point(117) = {-0.048728, -0.733239, 0, 1.0};
Point(118) = {-0.053735, -0.732905, 0, 1.0};
Point(119) = {-0.058741, -0.732571, 0, 1.0};
Point(120) = {-0.063747, -0.732226, 0, 1.0};
Point(121) = {-0.068748, -0.731857, 0, 1.0};
Point(122) = {-0.073745, -0.731464, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
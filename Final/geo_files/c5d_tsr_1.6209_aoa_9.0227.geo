SetFactory("OpenCASCADE");

Point(1) = {0.147560, 0.713366, 0, 1.0};
Point(2) = {0.138050, 0.717343, 0, 1.0};
Point(3) = {0.128502, 0.721066, 0, 1.0};
Point(4) = {0.118907, 0.724475, 0, 1.0};
Point(5) = {0.109277, 0.727655, 0, 1.0};
Point(6) = {0.099607, 0.730579, 0, 1.0};
Point(7) = {0.089898, 0.733241, 0, 1.0};
Point(8) = {0.080156, 0.735689, 0, 1.0};
Point(9) = {0.070391, 0.737984, 0, 1.0};
Point(10) = {0.060597, 0.740093, 0, 1.0};
Point(11) = {0.050778, 0.742035, 0, 1.0};
Point(12) = {0.040929, 0.743785, 0, 1.0};
Point(13) = {0.031048, 0.745318, 0, 1.0};
Point(14) = {0.021140, 0.746682, 0, 1.0};
Point(15) = {0.011200, 0.747829, 0, 1.0};
Point(16) = {0.001230, 0.748785, 0, 1.0};
Point(17) = {-0.008776, 0.749502, 0, 1.0};
Point(18) = {-0.012795, 0.749679, 0, 1.0};
Point(19) = {-0.016816, 0.749848, 0, 1.0};
Point(20) = {-0.020840, 0.749990, 0, 1.0};
Point(21) = {-0.024885, 0.750000, 0, 1.0};
Point(22) = {-0.028936, 0.749971, 0, 1.0};
Point(23) = {-0.033005, 0.749823, 0, 1.0};
Point(24) = {-0.037092, 0.749554, 0, 1.0};
Point(25) = {-0.041226, 0.748979, 0, 1.0};
Point(26) = {-0.045414, 0.748051, 0, 1.0};
Point(27) = {-0.047588, 0.747060, 0, 1.0};
Point(28) = {-0.048147, 0.746709, 0, 1.0};
Point(29) = {-0.048719, 0.746279, 0, 1.0};
Point(30) = {-0.049311, 0.745714, 0, 1.0};
Point(31) = {-0.050000, 0.744513, 0, 1.0};
Point(32) = {-0.049803, 0.742490, 0, 1.0};
Point(33) = {-0.049411, 0.741744, 0, 1.0};
Point(34) = {-0.048975, 0.741287, 0, 1.0};
Point(35) = {-0.048529, 0.740896, 0, 1.0};
Point(36) = {-0.046687, 0.739709, 0, 1.0};
Point(37) = {-0.042896, 0.738036, 0, 1.0};
Point(38) = {-0.039061, 0.736653, 0, 1.0};
Point(39) = {-0.035193, 0.735486, 0, 1.0};
Point(40) = {-0.031304, 0.734454, 0, 1.0};
Point(41) = {-0.027395, 0.733554, 0, 1.0};
Point(42) = {-0.023484, 0.732667, 0, 1.0};
Point(43) = {-0.019568, 0.731817, 0, 1.0};
Point(44) = {-0.015643, 0.731021, 0, 1.0};
Point(45) = {-0.011718, 0.730225, 0, 1.0};
Point(46) = {-0.001883, 0.728388, 0, 1.0};
Point(47) = {0.007964, 0.726630, 0, 1.0};
Point(48) = {0.017827, 0.724975, 0, 1.0};
Point(49) = {0.027712, 0.723463, 0, 1.0};
Point(50) = {0.037616, 0.722073, 0, 1.0};
Point(51) = {0.047542, 0.720834, 0, 1.0};
Point(52) = {0.057490, 0.719735, 0, 1.0};
Point(53) = {0.067458, 0.718768, 0, 1.0};
Point(54) = {0.077439, 0.717886, 0, 1.0};
Point(55) = {0.087445, 0.717167, 0, 1.0};
Point(56) = {0.097456, 0.716479, 0, 1.0};
Point(57) = {0.107469, 0.715810, 0, 1.0};
Point(58) = {0.117483, 0.715141, 0, 1.0};
Point(59) = {0.127493, 0.714451, 0, 1.0};
Point(60) = {0.137496, 0.713714, 0, 1.0};
Point(61) = {0.147490, 0.712929, 0, 1.0};
Point(62) = {-0.147560, -0.713366, 0, 1.0};
Point(63) = {-0.138050, -0.717343, 0, 1.0};
Point(64) = {-0.128502, -0.721066, 0, 1.0};
Point(65) = {-0.118907, -0.724475, 0, 1.0};
Point(66) = {-0.109277, -0.727655, 0, 1.0};
Point(67) = {-0.099607, -0.730579, 0, 1.0};
Point(68) = {-0.089898, -0.733241, 0, 1.0};
Point(69) = {-0.080156, -0.735689, 0, 1.0};
Point(70) = {-0.070391, -0.737984, 0, 1.0};
Point(71) = {-0.060597, -0.740093, 0, 1.0};
Point(72) = {-0.050778, -0.742035, 0, 1.0};
Point(73) = {-0.040929, -0.743785, 0, 1.0};
Point(74) = {-0.031048, -0.745318, 0, 1.0};
Point(75) = {-0.021140, -0.746682, 0, 1.0};
Point(76) = {-0.011200, -0.747829, 0, 1.0};
Point(77) = {-0.001230, -0.748785, 0, 1.0};
Point(78) = {0.008776, -0.749502, 0, 1.0};
Point(79) = {0.012795, -0.749679, 0, 1.0};
Point(80) = {0.016816, -0.749848, 0, 1.0};
Point(81) = {0.020840, -0.749990, 0, 1.0};
Point(82) = {0.024885, -0.750000, 0, 1.0};
Point(83) = {0.028936, -0.749971, 0, 1.0};
Point(84) = {0.033005, -0.749823, 0, 1.0};
Point(85) = {0.037092, -0.749554, 0, 1.0};
Point(86) = {0.041226, -0.748979, 0, 1.0};
Point(87) = {0.045414, -0.748051, 0, 1.0};
Point(88) = {0.047588, -0.747060, 0, 1.0};
Point(89) = {0.048147, -0.746709, 0, 1.0};
Point(90) = {0.048719, -0.746279, 0, 1.0};
Point(91) = {0.049311, -0.745714, 0, 1.0};
Point(92) = {0.050000, -0.744513, 0, 1.0};
Point(93) = {0.049803, -0.742490, 0, 1.0};
Point(94) = {0.049411, -0.741744, 0, 1.0};
Point(95) = {0.048975, -0.741287, 0, 1.0};
Point(96) = {0.048529, -0.740896, 0, 1.0};
Point(97) = {0.046687, -0.739709, 0, 1.0};
Point(98) = {0.042896, -0.738036, 0, 1.0};
Point(99) = {0.039061, -0.736653, 0, 1.0};
Point(100) = {0.035193, -0.735486, 0, 1.0};
Point(101) = {0.031304, -0.734454, 0, 1.0};
Point(102) = {0.027395, -0.733554, 0, 1.0};
Point(103) = {0.023484, -0.732667, 0, 1.0};
Point(104) = {0.019568, -0.731817, 0, 1.0};
Point(105) = {0.015643, -0.731021, 0, 1.0};
Point(106) = {0.011718, -0.730225, 0, 1.0};
Point(107) = {0.001883, -0.728388, 0, 1.0};
Point(108) = {-0.007964, -0.726630, 0, 1.0};
Point(109) = {-0.017827, -0.724975, 0, 1.0};
Point(110) = {-0.027712, -0.723463, 0, 1.0};
Point(111) = {-0.037616, -0.722073, 0, 1.0};
Point(112) = {-0.047542, -0.720834, 0, 1.0};
Point(113) = {-0.057490, -0.719735, 0, 1.0};
Point(114) = {-0.067458, -0.718768, 0, 1.0};
Point(115) = {-0.077439, -0.717886, 0, 1.0};
Point(116) = {-0.087445, -0.717167, 0, 1.0};
Point(117) = {-0.097456, -0.716479, 0, 1.0};
Point(118) = {-0.107469, -0.715810, 0, 1.0};
Point(119) = {-0.117483, -0.715141, 0, 1.0};
Point(120) = {-0.127493, -0.714451, 0, 1.0};
Point(121) = {-0.137496, -0.713714, 0, 1.0};
Point(122) = {-0.147490, -0.712929, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
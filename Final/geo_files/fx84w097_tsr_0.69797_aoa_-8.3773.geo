SetFactory("OpenCASCADE");

Point(1) = {0.073997, 0.749481, 0, 1.0};
Point(2) = {0.072739, 0.749475, 0, 1.0};
Point(3) = {0.069610, 0.749477, 0, 1.0};
Point(4) = {0.066198, 0.749502, 0, 1.0};
Point(5) = {0.062518, 0.749548, 0, 1.0};
Point(6) = {0.058588, 0.749611, 0, 1.0};
Point(7) = {0.054424, 0.749686, 0, 1.0};
Point(8) = {0.050046, 0.749769, 0, 1.0};
Point(9) = {0.045471, 0.749852, 0, 1.0};
Point(10) = {0.040722, 0.749924, 0, 1.0};
Point(11) = {0.035821, 0.749976, 0, 1.0};
Point(12) = {0.030790, 0.750000, 0, 1.0};
Point(13) = {0.025652, 0.749981, 0, 1.0};
Point(14) = {0.020430, 0.749913, 0, 1.0};
Point(15) = {0.015147, 0.749785, 0, 1.0};
Point(16) = {0.009831, 0.749585, 0, 1.0};
Point(17) = {0.004502, 0.749311, 0, 1.0};
Point(18) = {-0.000815, 0.748953, 0, 1.0};
Point(19) = {-0.006094, 0.748501, 0, 1.0};
Point(20) = {-0.011316, 0.747958, 0, 1.0};
Point(21) = {-0.016453, 0.747318, 0, 1.0};
Point(22) = {-0.021486, 0.746586, 0, 1.0};
Point(23) = {-0.026393, 0.745764, 0, 1.0};
Point(24) = {-0.031152, 0.744850, 0, 1.0};
Point(25) = {-0.035744, 0.743857, 0, 1.0};
Point(26) = {-0.040150, 0.742793, 0, 1.0};
Point(27) = {-0.044350, 0.741662, 0, 1.0};
Point(28) = {-0.048329, 0.740488, 0, 1.0};
Point(29) = {-0.052071, 0.739272, 0, 1.0};
Point(30) = {-0.055561, 0.738026, 0, 1.0};
Point(31) = {-0.058783, 0.736760, 0, 1.0};
Point(32) = {-0.061724, 0.735491, 0, 1.0};
Point(33) = {-0.064377, 0.734237, 0, 1.0};
Point(34) = {-0.066730, 0.733010, 0, 1.0};
Point(35) = {-0.068772, 0.731826, 0, 1.0};
Point(36) = {-0.070498, 0.730693, 0, 1.0};
Point(37) = {-0.071900, 0.729630, 0, 1.0};
Point(38) = {-0.072974, 0.728639, 0, 1.0};
Point(39) = {-0.073717, 0.727742, 0, 1.0};
Point(40) = {-0.074127, 0.726946, 0, 1.0};
Point(41) = {-0.074200, 0.726247, 0, 1.0};
Point(42) = {-0.073936, 0.725650, 0, 1.0};
Point(43) = {-0.073336, 0.725156, 0, 1.0};
Point(44) = {-0.072405, 0.724777, 0, 1.0};
Point(45) = {-0.071147, 0.724515, 0, 1.0};
Point(46) = {-0.069566, 0.724363, 0, 1.0};
Point(47) = {-0.067666, 0.724318, 0, 1.0};
Point(48) = {-0.065458, 0.724377, 0, 1.0};
Point(49) = {-0.062948, 0.724535, 0, 1.0};
Point(50) = {-0.060148, 0.724785, 0, 1.0};
Point(51) = {-0.057069, 0.725123, 0, 1.0};
Point(52) = {-0.053722, 0.725540, 0, 1.0};
Point(53) = {-0.050121, 0.726030, 0, 1.0};
Point(54) = {-0.046282, 0.726585, 0, 1.0};
Point(55) = {-0.042220, 0.727200, 0, 1.0};
Point(56) = {-0.037952, 0.727868, 0, 1.0};
Point(57) = {-0.033494, 0.728580, 0, 1.0};
Point(58) = {-0.028866, 0.729330, 0, 1.0};
Point(59) = {-0.024089, 0.730116, 0, 1.0};
Point(60) = {-0.019181, 0.730932, 0, 1.0};
Point(61) = {-0.014164, 0.731773, 0, 1.0};
Point(62) = {-0.009060, 0.732638, 0, 1.0};
Point(63) = {-0.003888, 0.733521, 0, 1.0};
Point(64) = {0.001326, 0.734419, 0, 1.0};
Point(65) = {0.006560, 0.735331, 0, 1.0};
Point(66) = {0.011794, 0.736251, 0, 1.0};
Point(67) = {0.017003, 0.737180, 0, 1.0};
Point(68) = {0.022168, 0.738113, 0, 1.0};
Point(69) = {0.027262, 0.739046, 0, 1.0};
Point(70) = {0.032266, 0.739975, 0, 1.0};
Point(71) = {0.037159, 0.740892, 0, 1.0};
Point(72) = {0.041919, 0.741797, 0, 1.0};
Point(73) = {0.046527, 0.742681, 0, 1.0};
Point(74) = {0.050964, 0.743539, 0, 1.0};
Point(75) = {0.055208, 0.744362, 0, 1.0};
Point(76) = {0.059246, 0.745143, 0, 1.0};
Point(77) = {0.063059, 0.745879, 0, 1.0};
Point(78) = {0.066631, 0.746563, 0, 1.0};
Point(79) = {0.069948, 0.747187, 0, 1.0};
Point(80) = {0.072993, 0.747749, 0, 1.0};
Point(81) = {0.074219, 0.747969, 0, 1.0};
Point(82) = {-0.073997, -0.749481, 0, 1.0};
Point(83) = {-0.072739, -0.749475, 0, 1.0};
Point(84) = {-0.069610, -0.749477, 0, 1.0};
Point(85) = {-0.066198, -0.749502, 0, 1.0};
Point(86) = {-0.062518, -0.749548, 0, 1.0};
Point(87) = {-0.058588, -0.749611, 0, 1.0};
Point(88) = {-0.054424, -0.749686, 0, 1.0};
Point(89) = {-0.050046, -0.749769, 0, 1.0};
Point(90) = {-0.045471, -0.749852, 0, 1.0};
Point(91) = {-0.040722, -0.749924, 0, 1.0};
Point(92) = {-0.035821, -0.749976, 0, 1.0};
Point(93) = {-0.030790, -0.750000, 0, 1.0};
Point(94) = {-0.025652, -0.749981, 0, 1.0};
Point(95) = {-0.020430, -0.749913, 0, 1.0};
Point(96) = {-0.015147, -0.749785, 0, 1.0};
Point(97) = {-0.009831, -0.749585, 0, 1.0};
Point(98) = {-0.004502, -0.749311, 0, 1.0};
Point(99) = {0.000815, -0.748953, 0, 1.0};
Point(100) = {0.006094, -0.748501, 0, 1.0};
Point(101) = {0.011316, -0.747958, 0, 1.0};
Point(102) = {0.016453, -0.747318, 0, 1.0};
Point(103) = {0.021486, -0.746586, 0, 1.0};
Point(104) = {0.026393, -0.745764, 0, 1.0};
Point(105) = {0.031152, -0.744850, 0, 1.0};
Point(106) = {0.035744, -0.743857, 0, 1.0};
Point(107) = {0.040150, -0.742793, 0, 1.0};
Point(108) = {0.044350, -0.741662, 0, 1.0};
Point(109) = {0.048329, -0.740488, 0, 1.0};
Point(110) = {0.052071, -0.739272, 0, 1.0};
Point(111) = {0.055561, -0.738026, 0, 1.0};
Point(112) = {0.058783, -0.736760, 0, 1.0};
Point(113) = {0.061724, -0.735491, 0, 1.0};
Point(114) = {0.064377, -0.734237, 0, 1.0};
Point(115) = {0.066730, -0.733010, 0, 1.0};
Point(116) = {0.068772, -0.731826, 0, 1.0};
Point(117) = {0.070498, -0.730693, 0, 1.0};
Point(118) = {0.071900, -0.729630, 0, 1.0};
Point(119) = {0.072974, -0.728639, 0, 1.0};
Point(120) = {0.073717, -0.727742, 0, 1.0};
Point(121) = {0.074127, -0.726946, 0, 1.0};
Point(122) = {0.074200, -0.726247, 0, 1.0};
Point(123) = {0.073936, -0.725650, 0, 1.0};
Point(124) = {0.073336, -0.725156, 0, 1.0};
Point(125) = {0.072405, -0.724777, 0, 1.0};
Point(126) = {0.071147, -0.724515, 0, 1.0};
Point(127) = {0.069566, -0.724363, 0, 1.0};
Point(128) = {0.067666, -0.724318, 0, 1.0};
Point(129) = {0.065458, -0.724377, 0, 1.0};
Point(130) = {0.062948, -0.724535, 0, 1.0};
Point(131) = {0.060148, -0.724785, 0, 1.0};
Point(132) = {0.057069, -0.725123, 0, 1.0};
Point(133) = {0.053722, -0.725540, 0, 1.0};
Point(134) = {0.050121, -0.726030, 0, 1.0};
Point(135) = {0.046282, -0.726585, 0, 1.0};
Point(136) = {0.042220, -0.727200, 0, 1.0};
Point(137) = {0.037952, -0.727868, 0, 1.0};
Point(138) = {0.033494, -0.728580, 0, 1.0};
Point(139) = {0.028866, -0.729330, 0, 1.0};
Point(140) = {0.024089, -0.730116, 0, 1.0};
Point(141) = {0.019181, -0.730932, 0, 1.0};
Point(142) = {0.014164, -0.731773, 0, 1.0};
Point(143) = {0.009060, -0.732638, 0, 1.0};
Point(144) = {0.003888, -0.733521, 0, 1.0};
Point(145) = {-0.001326, -0.734419, 0, 1.0};
Point(146) = {-0.006560, -0.735331, 0, 1.0};
Point(147) = {-0.011794, -0.736251, 0, 1.0};
Point(148) = {-0.017003, -0.737180, 0, 1.0};
Point(149) = {-0.022168, -0.738113, 0, 1.0};
Point(150) = {-0.027262, -0.739046, 0, 1.0};
Point(151) = {-0.032266, -0.739975, 0, 1.0};
Point(152) = {-0.037159, -0.740892, 0, 1.0};
Point(153) = {-0.041919, -0.741797, 0, 1.0};
Point(154) = {-0.046527, -0.742681, 0, 1.0};
Point(155) = {-0.050964, -0.743539, 0, 1.0};
Point(156) = {-0.055208, -0.744362, 0, 1.0};
Point(157) = {-0.059246, -0.745143, 0, 1.0};
Point(158) = {-0.063059, -0.745879, 0, 1.0};
Point(159) = {-0.066631, -0.746563, 0, 1.0};
Point(160) = {-0.069948, -0.747187, 0, 1.0};
Point(161) = {-0.072993, -0.747749, 0, 1.0};
Point(162) = {-0.074219, -0.747969, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
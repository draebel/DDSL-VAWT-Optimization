SetFactory("OpenCASCADE");

Point(1) = {0.074517, 0.744632, 0, 1.0};
Point(2) = {0.070739, 0.745204, 0, 1.0};
Point(3) = {0.066045, 0.745844, 0, 1.0};
Point(4) = {0.060680, 0.746516, 0, 1.0};
Point(5) = {0.054726, 0.747204, 0, 1.0};
Point(6) = {0.048272, 0.747889, 0, 1.0};
Point(7) = {0.041408, 0.748544, 0, 1.0};
Point(8) = {0.034233, 0.749136, 0, 1.0};
Point(9) = {0.026841, 0.749614, 0, 1.0};
Point(10) = {0.019296, 0.749910, 0, 1.0};
Point(11) = {0.011622, 0.750000, 0, 1.0};
Point(12) = {0.003877, 0.749903, 0, 1.0};
Point(13) = {-0.003858, 0.749622, 0, 1.0};
Point(14) = {-0.011510, 0.749158, 0, 1.0};
Point(15) = {-0.019004, 0.748517, 0, 1.0};
Point(16) = {-0.026265, 0.747707, 0, 1.0};
Point(17) = {-0.033220, 0.746735, 0, 1.0};
Point(18) = {-0.039801, 0.745612, 0, 1.0};
Point(19) = {-0.045945, 0.744349, 0, 1.0};
Point(20) = {-0.051592, 0.742958, 0, 1.0};
Point(21) = {-0.056694, 0.741455, 0, 1.0};
Point(22) = {-0.061208, 0.739856, 0, 1.0};
Point(23) = {-0.065100, 0.738187, 0, 1.0};
Point(24) = {-0.068343, 0.736472, 0, 1.0};
Point(25) = {-0.070920, 0.734739, 0, 1.0};
Point(26) = {-0.072830, 0.733029, 0, 1.0};
Point(27) = {-0.074078, 0.731400, 0, 1.0};
Point(28) = {-0.074645, 0.730045, 0, 1.0};
Point(29) = {-0.074709, 0.729650, 0, 1.0};
Point(30) = {-0.074713, 0.729291, 0, 1.0};
Point(31) = {-0.074682, 0.729076, 0, 1.0};
Point(32) = {-0.074614, 0.728890, 0, 1.0};
Point(33) = {-0.074494, 0.728724, 0, 1.0};
Point(34) = {-0.074320, 0.728562, 0, 1.0};
Point(35) = {-0.073980, 0.728324, 0, 1.0};
Point(36) = {-0.073554, 0.728089, 0, 1.0};
Point(37) = {-0.071381, 0.727306, 0, 1.0};
Point(38) = {-0.068521, 0.726689, 0, 1.0};
Point(39) = {-0.064901, 0.726213, 0, 1.0};
Point(40) = {-0.060559, 0.725898, 0, 1.0};
Point(41) = {-0.055535, 0.725752, 0, 1.0};
Point(42) = {-0.049878, 0.725778, 0, 1.0};
Point(43) = {-0.043645, 0.725974, 0, 1.0};
Point(44) = {-0.036896, 0.726332, 0, 1.0};
Point(45) = {-0.029708, 0.726837, 0, 1.0};
Point(46) = {-0.022168, 0.727482, 0, 1.0};
Point(47) = {-0.014362, 0.728270, 0, 1.0};
Point(48) = {-0.006366, 0.729193, 0, 1.0};
Point(49) = {0.001730, 0.730233, 0, 1.0};
Point(50) = {0.009821, 0.731392, 0, 1.0};
Point(51) = {0.017827, 0.732686, 0, 1.0};
Point(52) = {0.025690, 0.734130, 0, 1.0};
Point(53) = {0.033388, 0.735732, 0, 1.0};
Point(54) = {0.040948, 0.737424, 0, 1.0};
Point(55) = {0.048319, 0.739047, 0, 1.0};
Point(56) = {0.055357, 0.740479, 0, 1.0};
Point(57) = {0.061910, 0.741644, 0, 1.0};
Point(58) = {0.067817, 0.742500, 0, 1.0};
Point(59) = {0.072924, 0.743021, 0, 1.0};
Point(60) = {0.074648, 0.743133, 0, 1.0};
Point(61) = {-0.074517, -0.744632, 0, 1.0};
Point(62) = {-0.070739, -0.745204, 0, 1.0};
Point(63) = {-0.066045, -0.745844, 0, 1.0};
Point(64) = {-0.060680, -0.746516, 0, 1.0};
Point(65) = {-0.054726, -0.747204, 0, 1.0};
Point(66) = {-0.048272, -0.747889, 0, 1.0};
Point(67) = {-0.041408, -0.748544, 0, 1.0};
Point(68) = {-0.034233, -0.749136, 0, 1.0};
Point(69) = {-0.026841, -0.749614, 0, 1.0};
Point(70) = {-0.019296, -0.749910, 0, 1.0};
Point(71) = {-0.011622, -0.750000, 0, 1.0};
Point(72) = {-0.003877, -0.749903, 0, 1.0};
Point(73) = {0.003858, -0.749622, 0, 1.0};
Point(74) = {0.011510, -0.749158, 0, 1.0};
Point(75) = {0.019004, -0.748517, 0, 1.0};
Point(76) = {0.026265, -0.747707, 0, 1.0};
Point(77) = {0.033220, -0.746735, 0, 1.0};
Point(78) = {0.039801, -0.745612, 0, 1.0};
Point(79) = {0.045945, -0.744349, 0, 1.0};
Point(80) = {0.051592, -0.742958, 0, 1.0};
Point(81) = {0.056694, -0.741455, 0, 1.0};
Point(82) = {0.061208, -0.739856, 0, 1.0};
Point(83) = {0.065100, -0.738187, 0, 1.0};
Point(84) = {0.068343, -0.736472, 0, 1.0};
Point(85) = {0.070920, -0.734739, 0, 1.0};
Point(86) = {0.072830, -0.733029, 0, 1.0};
Point(87) = {0.074078, -0.731400, 0, 1.0};
Point(88) = {0.074645, -0.730045, 0, 1.0};
Point(89) = {0.074709, -0.729650, 0, 1.0};
Point(90) = {0.074713, -0.729291, 0, 1.0};
Point(91) = {0.074682, -0.729076, 0, 1.0};
Point(92) = {0.074614, -0.728890, 0, 1.0};
Point(93) = {0.074494, -0.728724, 0, 1.0};
Point(94) = {0.074320, -0.728562, 0, 1.0};
Point(95) = {0.073980, -0.728324, 0, 1.0};
Point(96) = {0.073554, -0.728089, 0, 1.0};
Point(97) = {0.071381, -0.727306, 0, 1.0};
Point(98) = {0.068521, -0.726689, 0, 1.0};
Point(99) = {0.064901, -0.726213, 0, 1.0};
Point(100) = {0.060559, -0.725898, 0, 1.0};
Point(101) = {0.055535, -0.725752, 0, 1.0};
Point(102) = {0.049878, -0.725778, 0, 1.0};
Point(103) = {0.043645, -0.725974, 0, 1.0};
Point(104) = {0.036896, -0.726332, 0, 1.0};
Point(105) = {0.029708, -0.726837, 0, 1.0};
Point(106) = {0.022168, -0.727482, 0, 1.0};
Point(107) = {0.014362, -0.728270, 0, 1.0};
Point(108) = {0.006366, -0.729193, 0, 1.0};
Point(109) = {-0.001730, -0.730233, 0, 1.0};
Point(110) = {-0.009821, -0.731392, 0, 1.0};
Point(111) = {-0.017827, -0.732686, 0, 1.0};
Point(112) = {-0.025690, -0.734130, 0, 1.0};
Point(113) = {-0.033388, -0.735732, 0, 1.0};
Point(114) = {-0.040948, -0.737424, 0, 1.0};
Point(115) = {-0.048319, -0.739047, 0, 1.0};
Point(116) = {-0.055357, -0.740479, 0, 1.0};
Point(117) = {-0.061910, -0.741644, 0, 1.0};
Point(118) = {-0.067817, -0.742500, 0, 1.0};
Point(119) = {-0.072924, -0.743021, 0, 1.0};
Point(120) = {-0.074648, -0.743133, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {36.00000000, 15.00000000, 0, 1.0};
Point(124) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074268, 0.743994, 0, 1.0};
Point(2) = {0.073689, 0.744049, 0, 1.0};
Point(3) = {0.072041, 0.744263, 0, 1.0};
Point(4) = {0.069510, 0.744637, 0, 1.0};
Point(5) = {0.066187, 0.745079, 0, 1.0};
Point(6) = {0.062080, 0.745546, 0, 1.0};
Point(7) = {0.057234, 0.746072, 0, 1.0};
Point(8) = {0.051754, 0.746673, 0, 1.0};
Point(9) = {0.045752, 0.747338, 0, 1.0};
Point(10) = {0.039344, 0.748041, 0, 1.0};
Point(11) = {0.032655, 0.748738, 0, 1.0};
Point(12) = {0.025802, 0.749372, 0, 1.0};
Point(13) = {0.018903, 0.749839, 0, 1.0};
Point(14) = {0.011987, 0.750000, 0, 1.0};
Point(15) = {0.004998, 0.749810, 0, 1.0};
Point(16) = {-0.002061, 0.749326, 0, 1.0};
Point(17) = {-0.008827, 0.748628, 0, 1.0};
Point(18) = {-0.016124, 0.747614, 0, 1.0};
Point(19) = {-0.022987, 0.746430, 0, 1.0};
Point(20) = {-0.029644, 0.745056, 0, 1.0};
Point(21) = {-0.036028, 0.743509, 0, 1.0};
Point(22) = {-0.042079, 0.741807, 0, 1.0};
Point(23) = {-0.047734, 0.739976, 0, 1.0};
Point(24) = {-0.052947, 0.738038, 0, 1.0};
Point(25) = {-0.057665, 0.736024, 0, 1.0};
Point(26) = {-0.061849, 0.733959, 0, 1.0};
Point(27) = {-0.065464, 0.731880, 0, 1.0};
Point(28) = {-0.068481, 0.729822, 0, 1.0};
Point(29) = {-0.070878, 0.727825, 0, 1.0};
Point(30) = {-0.072640, 0.725934, 0, 1.0};
Point(31) = {-0.073758, 0.724213, 0, 1.0};
Point(32) = {-0.074219, 0.722742, 0, 1.0};
Point(33) = {-0.073874, 0.721655, 0, 1.0};
Point(34) = {-0.072610, 0.720850, 0, 1.0};
Point(35) = {-0.070494, 0.720182, 0, 1.0};
Point(36) = {-0.067597, 0.719684, 0, 1.0};
Point(37) = {-0.063953, 0.719372, 0, 1.0};
Point(38) = {-0.059593, 0.719243, 0, 1.0};
Point(39) = {-0.054570, 0.719285, 0, 1.0};
Point(40) = {-0.048946, 0.719489, 0, 1.0};
Point(41) = {-0.042792, 0.719851, 0, 1.0};
Point(42) = {-0.036183, 0.720362, 0, 1.0};
Point(43) = {-0.029198, 0.721016, 0, 1.0};
Point(44) = {-0.021919, 0.721806, 0, 1.0};
Point(45) = {-0.014436, 0.722719, 0, 1.0};
Point(46) = {-0.006847, 0.723747, 0, 1.0};
Point(47) = {0.000752, 0.724892, 0, 1.0};
Point(48) = {0.008264, 0.726156, 0, 1.0};
Point(49) = {0.015590, 0.727546, 0, 1.0};
Point(50) = {0.022630, 0.729103, 0, 1.0};
Point(51) = {0.029349, 0.730907, 0, 1.0};
Point(52) = {0.035784, 0.732988, 0, 1.0};
Point(53) = {0.042036, 0.735328, 0, 1.0};
Point(54) = {0.048222, 0.737723, 0, 1.0};
Point(55) = {0.054249, 0.739857, 0, 1.0};
Point(56) = {0.059856, 0.741558, 0, 1.0};
Point(57) = {0.064805, 0.742772, 0, 1.0};
Point(58) = {0.068858, 0.743507, 0, 1.0};
Point(59) = {0.071862, 0.743859, 0, 1.0};
Point(60) = {0.073668, 0.743974, 0, 1.0};
Point(61) = {-0.074268, -0.743994, 0, 1.0};
Point(62) = {-0.073689, -0.744049, 0, 1.0};
Point(63) = {-0.072041, -0.744263, 0, 1.0};
Point(64) = {-0.069510, -0.744637, 0, 1.0};
Point(65) = {-0.066187, -0.745079, 0, 1.0};
Point(66) = {-0.062080, -0.745546, 0, 1.0};
Point(67) = {-0.057234, -0.746072, 0, 1.0};
Point(68) = {-0.051754, -0.746673, 0, 1.0};
Point(69) = {-0.045752, -0.747338, 0, 1.0};
Point(70) = {-0.039344, -0.748041, 0, 1.0};
Point(71) = {-0.032655, -0.748738, 0, 1.0};
Point(72) = {-0.025802, -0.749372, 0, 1.0};
Point(73) = {-0.018903, -0.749839, 0, 1.0};
Point(74) = {-0.011987, -0.750000, 0, 1.0};
Point(75) = {-0.004998, -0.749810, 0, 1.0};
Point(76) = {0.002061, -0.749326, 0, 1.0};
Point(77) = {0.008827, -0.748628, 0, 1.0};
Point(78) = {0.016124, -0.747614, 0, 1.0};
Point(79) = {0.022987, -0.746430, 0, 1.0};
Point(80) = {0.029644, -0.745056, 0, 1.0};
Point(81) = {0.036028, -0.743509, 0, 1.0};
Point(82) = {0.042079, -0.741807, 0, 1.0};
Point(83) = {0.047734, -0.739976, 0, 1.0};
Point(84) = {0.052947, -0.738038, 0, 1.0};
Point(85) = {0.057665, -0.736024, 0, 1.0};
Point(86) = {0.061849, -0.733959, 0, 1.0};
Point(87) = {0.065464, -0.731880, 0, 1.0};
Point(88) = {0.068481, -0.729822, 0, 1.0};
Point(89) = {0.070878, -0.727825, 0, 1.0};
Point(90) = {0.072640, -0.725934, 0, 1.0};
Point(91) = {0.073758, -0.724213, 0, 1.0};
Point(92) = {0.074219, -0.722742, 0, 1.0};
Point(93) = {0.073874, -0.721655, 0, 1.0};
Point(94) = {0.072610, -0.720850, 0, 1.0};
Point(95) = {0.070494, -0.720182, 0, 1.0};
Point(96) = {0.067597, -0.719684, 0, 1.0};
Point(97) = {0.063953, -0.719372, 0, 1.0};
Point(98) = {0.059593, -0.719243, 0, 1.0};
Point(99) = {0.054570, -0.719285, 0, 1.0};
Point(100) = {0.048946, -0.719489, 0, 1.0};
Point(101) = {0.042792, -0.719851, 0, 1.0};
Point(102) = {0.036183, -0.720362, 0, 1.0};
Point(103) = {0.029198, -0.721016, 0, 1.0};
Point(104) = {0.021919, -0.721806, 0, 1.0};
Point(105) = {0.014436, -0.722719, 0, 1.0};
Point(106) = {0.006847, -0.723747, 0, 1.0};
Point(107) = {-0.000752, -0.724892, 0, 1.0};
Point(108) = {-0.008264, -0.726156, 0, 1.0};
Point(109) = {-0.015590, -0.727546, 0, 1.0};
Point(110) = {-0.022630, -0.729103, 0, 1.0};
Point(111) = {-0.029349, -0.730907, 0, 1.0};
Point(112) = {-0.035784, -0.732988, 0, 1.0};
Point(113) = {-0.042036, -0.735328, 0, 1.0};
Point(114) = {-0.048222, -0.737723, 0, 1.0};
Point(115) = {-0.054249, -0.739857, 0, 1.0};
Point(116) = {-0.059856, -0.741558, 0, 1.0};
Point(117) = {-0.064805, -0.742772, 0, 1.0};
Point(118) = {-0.068858, -0.743507, 0, 1.0};
Point(119) = {-0.071862, -0.743859, 0, 1.0};
Point(120) = {-0.073668, -0.743974, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
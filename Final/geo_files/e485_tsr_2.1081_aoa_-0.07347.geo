SetFactory("OpenCASCADE");

Point(1) = {0.074999, 0.739550, 0, 1.0};
Point(2) = {0.073748, 0.739729, 0, 1.0};
Point(3) = {0.069473, 0.740321, 0, 1.0};
Point(4) = {0.064413, 0.741028, 0, 1.0};
Point(5) = {0.058659, 0.741852, 0, 1.0};
Point(6) = {0.052313, 0.742783, 0, 1.0};
Point(7) = {0.045481, 0.743796, 0, 1.0};
Point(8) = {0.038269, 0.744846, 0, 1.0};
Point(9) = {0.030769, 0.745883, 0, 1.0};
Point(10) = {0.023056, 0.746861, 0, 1.0};
Point(11) = {0.015202, 0.747744, 0, 1.0};
Point(12) = {0.007282, 0.748504, 0, 1.0};
Point(13) = {-0.000633, 0.749124, 0, 1.0};
Point(14) = {-0.008468, 0.749586, 0, 1.0};
Point(15) = {-0.016150, 0.749881, 0, 1.0};
Point(16) = {-0.023605, 0.750000, 0, 1.0};
Point(17) = {-0.030761, 0.749941, 0, 1.0};
Point(18) = {-0.037548, 0.749696, 0, 1.0};
Point(19) = {-0.043903, 0.749269, 0, 1.0};
Point(20) = {-0.049768, 0.748657, 0, 1.0};
Point(21) = {-0.055091, 0.747864, 0, 1.0};
Point(22) = {-0.059838, 0.746897, 0, 1.0};
Point(23) = {-0.063976, 0.745776, 0, 1.0};
Point(24) = {-0.067478, 0.744524, 0, 1.0};
Point(25) = {-0.070330, 0.743173, 0, 1.0};
Point(26) = {-0.072516, 0.741766, 0, 1.0};
Point(27) = {-0.074028, 0.740362, 0, 1.0};
Point(28) = {-0.074692, 0.739396, 0, 1.0};
Point(29) = {-0.074864, 0.739014, 0, 1.0};
Point(30) = {-0.074942, 0.738772, 0, 1.0};
Point(31) = {-0.074989, 0.738541, 0, 1.0};
Point(32) = {-0.075000, 0.738432, 0, 1.0};
Point(33) = {-0.075000, 0.738326, 0, 1.0};
Point(34) = {-0.074990, 0.738228, 0, 1.0};
Point(35) = {-0.074965, 0.738130, 0, 1.0};
Point(36) = {-0.074927, 0.738031, 0, 1.0};
Point(37) = {-0.074877, 0.737931, 0, 1.0};
Point(38) = {-0.074751, 0.737727, 0, 1.0};
Point(39) = {-0.074588, 0.737522, 0, 1.0};
Point(40) = {-0.074284, 0.737211, 0, 1.0};
Point(41) = {-0.073927, 0.736917, 0, 1.0};
Point(42) = {-0.072140, 0.735867, 0, 1.0};
Point(43) = {-0.069572, 0.734868, 0, 1.0};
Point(44) = {-0.066243, 0.733947, 0, 1.0};
Point(45) = {-0.062178, 0.733116, 0, 1.0};
Point(46) = {-0.057418, 0.732384, 0, 1.0};
Point(47) = {-0.052011, 0.731757, 0, 1.0};
Point(48) = {-0.046013, 0.731239, 0, 1.0};
Point(49) = {-0.039487, 0.730833, 0, 1.0};
Point(50) = {-0.032504, 0.730539, 0, 1.0};
Point(51) = {-0.025140, 0.730361, 0, 1.0};
Point(52) = {-0.017477, 0.730302, 0, 1.0};
Point(53) = {-0.009596, 0.730361, 0, 1.0};
Point(54) = {-0.001581, 0.730538, 0, 1.0};
Point(55) = {0.006477, 0.730834, 0, 1.0};
Point(56) = {0.014499, 0.731251, 0, 1.0};
Point(57) = {0.022403, 0.731788, 0, 1.0};
Point(58) = {0.030117, 0.732443, 0, 1.0};
Point(59) = {0.037582, 0.733203, 0, 1.0};
Point(60) = {0.044734, 0.734041, 0, 1.0};
Point(61) = {0.051509, 0.734921, 0, 1.0};
Point(62) = {0.057841, 0.735800, 0, 1.0};
Point(63) = {0.063661, 0.736622, 0, 1.0};
Point(64) = {0.068871, 0.737320, 0, 1.0};
Point(65) = {0.073349, 0.737861, 0, 1.0};
Point(66) = {0.075001, 0.738037, 0, 1.0};
Point(67) = {-0.074999, -0.739550, 0, 1.0};
Point(68) = {-0.073748, -0.739729, 0, 1.0};
Point(69) = {-0.069473, -0.740321, 0, 1.0};
Point(70) = {-0.064413, -0.741028, 0, 1.0};
Point(71) = {-0.058659, -0.741852, 0, 1.0};
Point(72) = {-0.052313, -0.742783, 0, 1.0};
Point(73) = {-0.045481, -0.743796, 0, 1.0};
Point(74) = {-0.038269, -0.744846, 0, 1.0};
Point(75) = {-0.030769, -0.745883, 0, 1.0};
Point(76) = {-0.023056, -0.746861, 0, 1.0};
Point(77) = {-0.015202, -0.747744, 0, 1.0};
Point(78) = {-0.007282, -0.748504, 0, 1.0};
Point(79) = {0.000633, -0.749124, 0, 1.0};
Point(80) = {0.008468, -0.749586, 0, 1.0};
Point(81) = {0.016150, -0.749881, 0, 1.0};
Point(82) = {0.023605, -0.750000, 0, 1.0};
Point(83) = {0.030761, -0.749941, 0, 1.0};
Point(84) = {0.037548, -0.749696, 0, 1.0};
Point(85) = {0.043903, -0.749269, 0, 1.0};
Point(86) = {0.049768, -0.748657, 0, 1.0};
Point(87) = {0.055091, -0.747864, 0, 1.0};
Point(88) = {0.059838, -0.746897, 0, 1.0};
Point(89) = {0.063976, -0.745776, 0, 1.0};
Point(90) = {0.067478, -0.744524, 0, 1.0};
Point(91) = {0.070330, -0.743173, 0, 1.0};
Point(92) = {0.072516, -0.741766, 0, 1.0};
Point(93) = {0.074028, -0.740362, 0, 1.0};
Point(94) = {0.074692, -0.739396, 0, 1.0};
Point(95) = {0.074864, -0.739014, 0, 1.0};
Point(96) = {0.074942, -0.738772, 0, 1.0};
Point(97) = {0.074989, -0.738541, 0, 1.0};
Point(98) = {0.075000, -0.738432, 0, 1.0};
Point(99) = {0.075000, -0.738326, 0, 1.0};
Point(100) = {0.074990, -0.738228, 0, 1.0};
Point(101) = {0.074965, -0.738130, 0, 1.0};
Point(102) = {0.074927, -0.738031, 0, 1.0};
Point(103) = {0.074877, -0.737931, 0, 1.0};
Point(104) = {0.074751, -0.737727, 0, 1.0};
Point(105) = {0.074588, -0.737522, 0, 1.0};
Point(106) = {0.074284, -0.737211, 0, 1.0};
Point(107) = {0.073927, -0.736917, 0, 1.0};
Point(108) = {0.072140, -0.735867, 0, 1.0};
Point(109) = {0.069572, -0.734868, 0, 1.0};
Point(110) = {0.066243, -0.733947, 0, 1.0};
Point(111) = {0.062178, -0.733116, 0, 1.0};
Point(112) = {0.057418, -0.732384, 0, 1.0};
Point(113) = {0.052011, -0.731757, 0, 1.0};
Point(114) = {0.046013, -0.731239, 0, 1.0};
Point(115) = {0.039487, -0.730833, 0, 1.0};
Point(116) = {0.032504, -0.730539, 0, 1.0};
Point(117) = {0.025140, -0.730361, 0, 1.0};
Point(118) = {0.017477, -0.730302, 0, 1.0};
Point(119) = {0.009596, -0.730361, 0, 1.0};
Point(120) = {0.001581, -0.730538, 0, 1.0};
Point(121) = {-0.006477, -0.730834, 0, 1.0};
Point(122) = {-0.014499, -0.731251, 0, 1.0};
Point(123) = {-0.022403, -0.731788, 0, 1.0};
Point(124) = {-0.030117, -0.732443, 0, 1.0};
Point(125) = {-0.037582, -0.733203, 0, 1.0};
Point(126) = {-0.044734, -0.734041, 0, 1.0};
Point(127) = {-0.051509, -0.734921, 0, 1.0};
Point(128) = {-0.057841, -0.735800, 0, 1.0};
Point(129) = {-0.063661, -0.736622, 0, 1.0};
Point(130) = {-0.068871, -0.737320, 0, 1.0};
Point(131) = {-0.073349, -0.737861, 0, 1.0};
Point(132) = {-0.075001, -0.738037, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:83};
Spline(6) = {83:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
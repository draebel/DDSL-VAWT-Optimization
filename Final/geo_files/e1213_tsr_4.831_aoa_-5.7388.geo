SetFactory("OpenCASCADE");

Point(1) = {0.111748, 0.744748, 0, 1.0};
Point(2) = {0.111178, 0.744747, 0, 1.0};
Point(3) = {0.109531, 0.744791, 0, 1.0};
Point(4) = {0.106937, 0.744919, 0, 1.0};
Point(5) = {0.103479, 0.745073, 0, 1.0};
Point(6) = {0.099163, 0.745232, 0, 1.0};
Point(7) = {0.094028, 0.745434, 0, 1.0};
Point(8) = {0.088163, 0.745711, 0, 1.0};
Point(9) = {0.081671, 0.746073, 0, 1.0};
Point(10) = {0.074665, 0.746520, 0, 1.0};
Point(11) = {0.067255, 0.747040, 0, 1.0};
Point(12) = {0.059562, 0.747606, 0, 1.0};
Point(13) = {0.051699, 0.748192, 0, 1.0};
Point(14) = {0.043774, 0.748758, 0, 1.0};
Point(15) = {0.035891, 0.749264, 0, 1.0};
Point(16) = {0.028141, 0.749666, 0, 1.0};
Point(17) = {0.020608, 0.749924, 0, 1.0};
Point(18) = {0.013362, 0.750000, 0, 1.0};
Point(19) = {0.006469, 0.749861, 0, 1.0};
Point(20) = {-0.000020, 0.749484, 0, 1.0};
Point(21) = {-0.006059, 0.748853, 0, 1.0};
Point(22) = {-0.011609, 0.747955, 0, 1.0};
Point(23) = {-0.016645, 0.746790, 0, 1.0};
Point(24) = {-0.021140, 0.745372, 0, 1.0};
Point(25) = {-0.025071, 0.743694, 0, 1.0};
Point(26) = {-0.028473, 0.741773, 0, 1.0};
Point(27) = {-0.031365, 0.739687, 0, 1.0};
Point(28) = {-0.033722, 0.737516, 0, 1.0};
Point(29) = {-0.035527, 0.735326, 0, 1.0};
Point(30) = {-0.036763, 0.733179, 0, 1.0};
Point(31) = {-0.037500, 0.729749, 0, 1.0};
Point(32) = {-0.036661, 0.727842, 0, 1.0};
Point(33) = {-0.035035, 0.726431, 0, 1.0};
Point(34) = {-0.032729, 0.725102, 0, 1.0};
Point(35) = {-0.029819, 0.723926, 0, 1.0};
Point(36) = {-0.026344, 0.722969, 0, 1.0};
Point(37) = {-0.022333, 0.722290, 0, 1.0};
Point(38) = {-0.017803, 0.721943, 0, 1.0};
Point(39) = {-0.012762, 0.721970, 0, 1.0};
Point(40) = {-0.007191, 0.722405, 0, 1.0};
Point(41) = {-0.001046, 0.723223, 0, 1.0};
Point(42) = {0.005662, 0.724318, 0, 1.0};
Point(43) = {0.012843, 0.725610, 0, 1.0};
Point(44) = {0.020402, 0.727052, 0, 1.0};
Point(45) = {0.028245, 0.728594, 0, 1.0};
Point(46) = {0.036267, 0.730200, 0, 1.0};
Point(47) = {0.044365, 0.731829, 0, 1.0};
Point(48) = {0.052434, 0.733451, 0, 1.0};
Point(49) = {0.060366, 0.735037, 0, 1.0};
Point(50) = {0.068056, 0.736556, 0, 1.0};
Point(51) = {0.075403, 0.737987, 0, 1.0};
Point(52) = {0.082305, 0.739309, 0, 1.0};
Point(53) = {0.088668, 0.740505, 0, 1.0};
Point(54) = {0.094402, 0.741563, 0, 1.0};
Point(55) = {0.099421, 0.742478, 0, 1.0};
Point(56) = {0.103651, 0.743248, 0, 1.0};
Point(57) = {0.107043, 0.743892, 0, 1.0};
Point(58) = {0.109581, 0.744383, 0, 1.0};
Point(59) = {0.111190, 0.744665, 0, 1.0};
Point(60) = {-0.111748, -0.744748, 0, 1.0};
Point(61) = {-0.111178, -0.744747, 0, 1.0};
Point(62) = {-0.109531, -0.744791, 0, 1.0};
Point(63) = {-0.106937, -0.744919, 0, 1.0};
Point(64) = {-0.103479, -0.745073, 0, 1.0};
Point(65) = {-0.099163, -0.745232, 0, 1.0};
Point(66) = {-0.094028, -0.745434, 0, 1.0};
Point(67) = {-0.088163, -0.745711, 0, 1.0};
Point(68) = {-0.081671, -0.746073, 0, 1.0};
Point(69) = {-0.074665, -0.746520, 0, 1.0};
Point(70) = {-0.067255, -0.747040, 0, 1.0};
Point(71) = {-0.059562, -0.747606, 0, 1.0};
Point(72) = {-0.051699, -0.748192, 0, 1.0};
Point(73) = {-0.043774, -0.748758, 0, 1.0};
Point(74) = {-0.035891, -0.749264, 0, 1.0};
Point(75) = {-0.028141, -0.749666, 0, 1.0};
Point(76) = {-0.020608, -0.749924, 0, 1.0};
Point(77) = {-0.013362, -0.750000, 0, 1.0};
Point(78) = {-0.006469, -0.749861, 0, 1.0};
Point(79) = {0.000020, -0.749484, 0, 1.0};
Point(80) = {0.006059, -0.748853, 0, 1.0};
Point(81) = {0.011609, -0.747955, 0, 1.0};
Point(82) = {0.016645, -0.746790, 0, 1.0};
Point(83) = {0.021140, -0.745372, 0, 1.0};
Point(84) = {0.025071, -0.743694, 0, 1.0};
Point(85) = {0.028473, -0.741773, 0, 1.0};
Point(86) = {0.031365, -0.739687, 0, 1.0};
Point(87) = {0.033722, -0.737516, 0, 1.0};
Point(88) = {0.035527, -0.735326, 0, 1.0};
Point(89) = {0.036763, -0.733179, 0, 1.0};
Point(90) = {0.037500, -0.729749, 0, 1.0};
Point(91) = {0.036661, -0.727842, 0, 1.0};
Point(92) = {0.035035, -0.726431, 0, 1.0};
Point(93) = {0.032729, -0.725102, 0, 1.0};
Point(94) = {0.029819, -0.723926, 0, 1.0};
Point(95) = {0.026344, -0.722969, 0, 1.0};
Point(96) = {0.022333, -0.722290, 0, 1.0};
Point(97) = {0.017803, -0.721943, 0, 1.0};
Point(98) = {0.012762, -0.721970, 0, 1.0};
Point(99) = {0.007191, -0.722405, 0, 1.0};
Point(100) = {0.001046, -0.723223, 0, 1.0};
Point(101) = {-0.005662, -0.724318, 0, 1.0};
Point(102) = {-0.012843, -0.725610, 0, 1.0};
Point(103) = {-0.020402, -0.727052, 0, 1.0};
Point(104) = {-0.028245, -0.728594, 0, 1.0};
Point(105) = {-0.036267, -0.730200, 0, 1.0};
Point(106) = {-0.044365, -0.731829, 0, 1.0};
Point(107) = {-0.052434, -0.733451, 0, 1.0};
Point(108) = {-0.060366, -0.735037, 0, 1.0};
Point(109) = {-0.068056, -0.736556, 0, 1.0};
Point(110) = {-0.075403, -0.737987, 0, 1.0};
Point(111) = {-0.082305, -0.739309, 0, 1.0};
Point(112) = {-0.088668, -0.740505, 0, 1.0};
Point(113) = {-0.094402, -0.741563, 0, 1.0};
Point(114) = {-0.099421, -0.742478, 0, 1.0};
Point(115) = {-0.103651, -0.743248, 0, 1.0};
Point(116) = {-0.107043, -0.743892, 0, 1.0};
Point(117) = {-0.109581, -0.744383, 0, 1.0};
Point(118) = {-0.111190, -0.744665, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:79};
Spline(6) = {79:101};
Spline(7) = {101:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
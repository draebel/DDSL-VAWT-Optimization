SetFactory("OpenCASCADE");

Point(1) = {0.074608, 0.718445, 0, 1.0};
Point(2) = {0.073365, 0.718898, 0, 1.0};
Point(3) = {0.068445, 0.720845, 0, 1.0};
Point(4) = {0.062464, 0.723267, 0, 1.0};
Point(5) = {0.059106, 0.724642, 0, 1.0};
Point(6) = {0.055525, 0.726151, 0, 1.0};
Point(7) = {0.051732, 0.727736, 0, 1.0};
Point(8) = {0.047748, 0.729435, 0, 1.0};
Point(9) = {0.043580, 0.731181, 0, 1.0};
Point(10) = {0.039253, 0.733006, 0, 1.0};
Point(11) = {0.034781, 0.734855, 0, 1.0};
Point(12) = {0.030186, 0.736761, 0, 1.0};
Point(13) = {0.025479, 0.738642, 0, 1.0};
Point(14) = {0.020685, 0.740522, 0, 1.0};
Point(15) = {0.015811, 0.742308, 0, 1.0};
Point(16) = {0.010885, 0.744026, 0, 1.0};
Point(17) = {0.005916, 0.745575, 0, 1.0};
Point(18) = {0.000926, 0.746968, 0, 1.0};
Point(19) = {-0.004080, 0.748066, 0, 1.0};
Point(20) = {-0.009073, 0.748928, 0, 1.0};
Point(21) = {-0.014036, 0.749500, 0, 1.0};
Point(22) = {-0.018940, 0.749862, 0, 1.0};
Point(23) = {-0.023763, 0.750000, 0, 1.0};
Point(24) = {-0.028507, 0.749992, 0, 1.0};
Point(25) = {-0.033064, 0.749789, 0, 1.0};
Point(26) = {-0.037498, 0.749472, 0, 1.0};
Point(27) = {-0.041764, 0.748996, 0, 1.0};
Point(28) = {-0.045836, 0.748422, 0, 1.0};
Point(29) = {-0.049703, 0.747712, 0, 1.0};
Point(30) = {-0.053341, 0.746930, 0, 1.0};
Point(31) = {-0.056739, 0.746037, 0, 1.0};
Point(32) = {-0.059872, 0.745096, 0, 1.0};
Point(33) = {-0.062736, 0.744072, 0, 1.0};
Point(34) = {-0.065310, 0.743033, 0, 1.0};
Point(35) = {-0.067586, 0.741939, 0, 1.0};
Point(36) = {-0.069548, 0.740866, 0, 1.0};
Point(37) = {-0.071189, 0.739777, 0, 1.0};
Point(38) = {-0.072497, 0.738746, 0, 1.0};
Point(39) = {-0.073467, 0.737762, 0, 1.0};
Point(40) = {-0.074085, 0.736901, 0, 1.0};
Point(41) = {-0.074381, 0.735921, 0, 1.0};
Point(42) = {-0.074283, 0.735369, 0, 1.0};
Point(43) = {-0.073874, 0.734606, 0, 1.0};
Point(44) = {-0.073132, 0.733829, 0, 1.0};
Point(45) = {-0.072067, 0.732985, 0, 1.0};
Point(46) = {-0.070677, 0.732127, 0, 1.0};
Point(47) = {-0.068973, 0.731211, 0, 1.0};
Point(48) = {-0.066957, 0.730297, 0, 1.0};
Point(49) = {-0.064641, 0.729342, 0, 1.0};
Point(50) = {-0.062030, 0.728400, 0, 1.0};
Point(51) = {-0.059144, 0.727428, 0, 1.0};
Point(52) = {-0.055985, 0.726479, 0, 1.0};
Point(53) = {-0.052575, 0.725498, 0, 1.0};
Point(54) = {-0.048918, 0.724584, 0, 1.0};
Point(55) = {-0.045040, 0.723649, 0, 1.0};
Point(56) = {-0.040951, 0.722765, 0, 1.0};
Point(57) = {-0.036670, 0.721892, 0, 1.0};
Point(58) = {-0.032243, 0.721088, 0, 1.0};
Point(59) = {-0.027601, 0.720304, 0, 1.0};
Point(60) = {-0.022850, 0.719609, 0, 1.0};
Point(61) = {-0.017983, 0.718969, 0, 1.0};
Point(62) = {-0.013012, 0.718456, 0, 1.0};
Point(63) = {-0.007960, 0.718044, 0, 1.0};
Point(64) = {-0.002858, 0.717694, 0, 1.0};
Point(65) = {0.002323, 0.717777, 0, 1.0};
Point(66) = {0.007506, 0.717881, 0, 1.0};
Point(67) = {0.012674, 0.718037, 0, 1.0};
Point(68) = {0.017805, 0.718240, 0, 1.0};
Point(69) = {0.022863, 0.718402, 0, 1.0};
Point(70) = {0.027833, 0.718558, 0, 1.0};
Point(71) = {0.032688, 0.718669, 0, 1.0};
Point(72) = {0.037411, 0.718756, 0, 1.0};
Point(73) = {0.041975, 0.718765, 0, 1.0};
Point(74) = {0.046367, 0.718754, 0, 1.0};
Point(75) = {0.050560, 0.718672, 0, 1.0};
Point(76) = {0.054545, 0.718569, 0, 1.0};
Point(77) = {0.058299, 0.718405, 0, 1.0};
Point(78) = {0.061813, 0.718227, 0, 1.0};
Point(79) = {0.068045, 0.717749, 0, 1.0};
Point(80) = {0.073143, 0.717183, 0, 1.0};
Point(81) = {0.074420, 0.716993, 0, 1.0};
Point(82) = {-0.074608, -0.718445, 0, 1.0};
Point(83) = {-0.073365, -0.718898, 0, 1.0};
Point(84) = {-0.068445, -0.720845, 0, 1.0};
Point(85) = {-0.062464, -0.723267, 0, 1.0};
Point(86) = {-0.059106, -0.724642, 0, 1.0};
Point(87) = {-0.055525, -0.726151, 0, 1.0};
Point(88) = {-0.051732, -0.727736, 0, 1.0};
Point(89) = {-0.047748, -0.729435, 0, 1.0};
Point(90) = {-0.043580, -0.731181, 0, 1.0};
Point(91) = {-0.039253, -0.733006, 0, 1.0};
Point(92) = {-0.034781, -0.734855, 0, 1.0};
Point(93) = {-0.030186, -0.736761, 0, 1.0};
Point(94) = {-0.025479, -0.738642, 0, 1.0};
Point(95) = {-0.020685, -0.740522, 0, 1.0};
Point(96) = {-0.015811, -0.742308, 0, 1.0};
Point(97) = {-0.010885, -0.744026, 0, 1.0};
Point(98) = {-0.005916, -0.745575, 0, 1.0};
Point(99) = {-0.000926, -0.746968, 0, 1.0};
Point(100) = {0.004080, -0.748066, 0, 1.0};
Point(101) = {0.009073, -0.748928, 0, 1.0};
Point(102) = {0.014036, -0.749500, 0, 1.0};
Point(103) = {0.018940, -0.749862, 0, 1.0};
Point(104) = {0.023763, -0.750000, 0, 1.0};
Point(105) = {0.028507, -0.749992, 0, 1.0};
Point(106) = {0.033064, -0.749789, 0, 1.0};
Point(107) = {0.037498, -0.749472, 0, 1.0};
Point(108) = {0.041764, -0.748996, 0, 1.0};
Point(109) = {0.045836, -0.748422, 0, 1.0};
Point(110) = {0.049703, -0.747712, 0, 1.0};
Point(111) = {0.053341, -0.746930, 0, 1.0};
Point(112) = {0.056739, -0.746037, 0, 1.0};
Point(113) = {0.059872, -0.745096, 0, 1.0};
Point(114) = {0.062736, -0.744072, 0, 1.0};
Point(115) = {0.065310, -0.743033, 0, 1.0};
Point(116) = {0.067586, -0.741939, 0, 1.0};
Point(117) = {0.069548, -0.740866, 0, 1.0};
Point(118) = {0.071189, -0.739777, 0, 1.0};
Point(119) = {0.072497, -0.738746, 0, 1.0};
Point(120) = {0.073467, -0.737762, 0, 1.0};
Point(121) = {0.074085, -0.736901, 0, 1.0};
Point(122) = {0.074381, -0.735921, 0, 1.0};
Point(123) = {0.074283, -0.735369, 0, 1.0};
Point(124) = {0.073874, -0.734606, 0, 1.0};
Point(125) = {0.073132, -0.733829, 0, 1.0};
Point(126) = {0.072067, -0.732985, 0, 1.0};
Point(127) = {0.070677, -0.732127, 0, 1.0};
Point(128) = {0.068973, -0.731211, 0, 1.0};
Point(129) = {0.066957, -0.730297, 0, 1.0};
Point(130) = {0.064641, -0.729342, 0, 1.0};
Point(131) = {0.062030, -0.728400, 0, 1.0};
Point(132) = {0.059144, -0.727428, 0, 1.0};
Point(133) = {0.055985, -0.726479, 0, 1.0};
Point(134) = {0.052575, -0.725498, 0, 1.0};
Point(135) = {0.048918, -0.724584, 0, 1.0};
Point(136) = {0.045040, -0.723649, 0, 1.0};
Point(137) = {0.040951, -0.722765, 0, 1.0};
Point(138) = {0.036670, -0.721892, 0, 1.0};
Point(139) = {0.032243, -0.721088, 0, 1.0};
Point(140) = {0.027601, -0.720304, 0, 1.0};
Point(141) = {0.022850, -0.719609, 0, 1.0};
Point(142) = {0.017983, -0.718969, 0, 1.0};
Point(143) = {0.013012, -0.718456, 0, 1.0};
Point(144) = {0.007960, -0.718044, 0, 1.0};
Point(145) = {0.002858, -0.717694, 0, 1.0};
Point(146) = {-0.002323, -0.717777, 0, 1.0};
Point(147) = {-0.007506, -0.717881, 0, 1.0};
Point(148) = {-0.012674, -0.718037, 0, 1.0};
Point(149) = {-0.017805, -0.718240, 0, 1.0};
Point(150) = {-0.022863, -0.718402, 0, 1.0};
Point(151) = {-0.027833, -0.718558, 0, 1.0};
Point(152) = {-0.032688, -0.718669, 0, 1.0};
Point(153) = {-0.037411, -0.718756, 0, 1.0};
Point(154) = {-0.041975, -0.718765, 0, 1.0};
Point(155) = {-0.046367, -0.718754, 0, 1.0};
Point(156) = {-0.050560, -0.718672, 0, 1.0};
Point(157) = {-0.054545, -0.718569, 0, 1.0};
Point(158) = {-0.058299, -0.718405, 0, 1.0};
Point(159) = {-0.061813, -0.718227, 0, 1.0};
Point(160) = {-0.068045, -0.717749, 0, 1.0};
Point(161) = {-0.073143, -0.717183, 0, 1.0};
Point(162) = {-0.074420, -0.716993, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111197, 0.748811, 0, 1.0};
Point(2) = {0.110680, 0.748856, 0, 1.0};
Point(3) = {0.109214, 0.749019, 0, 1.0};
Point(4) = {0.106956, 0.749282, 0, 1.0};
Point(5) = {0.103984, 0.749541, 0, 1.0};
Point(6) = {0.100293, 0.749735, 0, 1.0};
Point(7) = {0.095900, 0.749877, 0, 1.0};
Point(8) = {0.090869, 0.749968, 0, 1.0};
Point(9) = {0.085266, 0.750000, 0, 1.0};
Point(10) = {0.079162, 0.749964, 0, 1.0};
Point(11) = {0.072627, 0.749849, 0, 1.0};
Point(12) = {0.065741, 0.749643, 0, 1.0};
Point(13) = {0.058579, 0.749340, 0, 1.0};
Point(14) = {0.051222, 0.748932, 0, 1.0};
Point(15) = {0.043751, 0.748409, 0, 1.0};
Point(16) = {0.036244, 0.747767, 0, 1.0};
Point(17) = {0.028779, 0.747002, 0, 1.0};
Point(18) = {0.021433, 0.746113, 0, 1.0};
Point(19) = {0.014278, 0.745100, 0, 1.0};
Point(20) = {0.007385, 0.743965, 0, 1.0};
Point(21) = {0.000818, 0.742714, 0, 1.0};
Point(22) = {-0.005361, 0.741355, 0, 1.0};
Point(23) = {-0.011098, 0.739897, 0, 1.0};
Point(24) = {-0.016346, 0.738356, 0, 1.0};
Point(25) = {-0.021063, 0.736748, 0, 1.0};
Point(26) = {-0.025215, 0.735097, 0, 1.0};
Point(27) = {-0.028773, 0.733428, 0, 1.0};
Point(28) = {-0.031715, 0.731773, 0, 1.0};
Point(29) = {-0.034024, 0.730166, 0, 1.0};
Point(30) = {-0.035692, 0.728654, 0, 1.0};
Point(31) = {-0.036709, 0.727286, 0, 1.0};
Point(32) = {-0.037066, 0.726050, 0, 1.0};
Point(33) = {-0.036622, 0.725327, 0, 1.0};
Point(34) = {-0.035298, 0.724656, 0, 1.0};
Point(35) = {-0.033240, 0.724140, 0, 1.0};
Point(36) = {-0.030465, 0.723820, 0, 1.0};
Point(37) = {-0.026997, 0.723712, 0, 1.0};
Point(38) = {-0.022860, 0.723825, 0, 1.0};
Point(39) = {-0.018081, 0.724153, 0, 1.0};
Point(40) = {-0.012706, 0.724686, 0, 1.0};
Point(41) = {-0.006792, 0.725410, 0, 1.0};
Point(42) = {-0.000403, 0.726309, 0, 1.0};
Point(43) = {0.006390, 0.727371, 0, 1.0};
Point(44) = {0.013505, 0.728584, 0, 1.0};
Point(45) = {0.020858, 0.729935, 0, 1.0};
Point(46) = {0.028357, 0.731436, 0, 1.0};
Point(47) = {0.035945, 0.733118, 0, 1.0};
Point(48) = {0.043622, 0.734966, 0, 1.0};
Point(49) = {0.051355, 0.736889, 0, 1.0};
Point(50) = {0.059050, 0.738806, 0, 1.0};
Point(51) = {0.066606, 0.740657, 0, 1.0};
Point(52) = {0.073917, 0.742385, 0, 1.0};
Point(53) = {0.080870, 0.743945, 0, 1.0};
Point(54) = {0.087354, 0.745305, 0, 1.0};
Point(55) = {0.093259, 0.746439, 0, 1.0};
Point(56) = {0.098477, 0.747336, 0, 1.0};
Point(57) = {0.102909, 0.747996, 0, 1.0};
Point(58) = {0.106467, 0.748438, 0, 1.0};
Point(59) = {0.109071, 0.748686, 0, 1.0};
Point(60) = {0.110662, 0.748789, 0, 1.0};
Point(61) = {-0.111197, -0.748811, 0, 1.0};
Point(62) = {-0.110680, -0.748856, 0, 1.0};
Point(63) = {-0.109214, -0.749019, 0, 1.0};
Point(64) = {-0.106956, -0.749282, 0, 1.0};
Point(65) = {-0.103984, -0.749541, 0, 1.0};
Point(66) = {-0.100293, -0.749735, 0, 1.0};
Point(67) = {-0.095900, -0.749877, 0, 1.0};
Point(68) = {-0.090869, -0.749968, 0, 1.0};
Point(69) = {-0.085266, -0.750000, 0, 1.0};
Point(70) = {-0.079162, -0.749964, 0, 1.0};
Point(71) = {-0.072627, -0.749849, 0, 1.0};
Point(72) = {-0.065741, -0.749643, 0, 1.0};
Point(73) = {-0.058579, -0.749340, 0, 1.0};
Point(74) = {-0.051222, -0.748932, 0, 1.0};
Point(75) = {-0.043751, -0.748409, 0, 1.0};
Point(76) = {-0.036244, -0.747767, 0, 1.0};
Point(77) = {-0.028779, -0.747002, 0, 1.0};
Point(78) = {-0.021433, -0.746113, 0, 1.0};
Point(79) = {-0.014278, -0.745100, 0, 1.0};
Point(80) = {-0.007385, -0.743965, 0, 1.0};
Point(81) = {-0.000818, -0.742714, 0, 1.0};
Point(82) = {0.005361, -0.741355, 0, 1.0};
Point(83) = {0.011098, -0.739897, 0, 1.0};
Point(84) = {0.016346, -0.738356, 0, 1.0};
Point(85) = {0.021063, -0.736748, 0, 1.0};
Point(86) = {0.025215, -0.735097, 0, 1.0};
Point(87) = {0.028773, -0.733428, 0, 1.0};
Point(88) = {0.031715, -0.731773, 0, 1.0};
Point(89) = {0.034024, -0.730166, 0, 1.0};
Point(90) = {0.035692, -0.728654, 0, 1.0};
Point(91) = {0.036709, -0.727286, 0, 1.0};
Point(92) = {0.037066, -0.726050, 0, 1.0};
Point(93) = {0.036622, -0.725327, 0, 1.0};
Point(94) = {0.035298, -0.724656, 0, 1.0};
Point(95) = {0.033240, -0.724140, 0, 1.0};
Point(96) = {0.030465, -0.723820, 0, 1.0};
Point(97) = {0.026997, -0.723712, 0, 1.0};
Point(98) = {0.022860, -0.723825, 0, 1.0};
Point(99) = {0.018081, -0.724153, 0, 1.0};
Point(100) = {0.012706, -0.724686, 0, 1.0};
Point(101) = {0.006792, -0.725410, 0, 1.0};
Point(102) = {0.000403, -0.726309, 0, 1.0};
Point(103) = {-0.006390, -0.727371, 0, 1.0};
Point(104) = {-0.013505, -0.728584, 0, 1.0};
Point(105) = {-0.020858, -0.729935, 0, 1.0};
Point(106) = {-0.028357, -0.731436, 0, 1.0};
Point(107) = {-0.035945, -0.733118, 0, 1.0};
Point(108) = {-0.043622, -0.734966, 0, 1.0};
Point(109) = {-0.051355, -0.736889, 0, 1.0};
Point(110) = {-0.059050, -0.738806, 0, 1.0};
Point(111) = {-0.066606, -0.740657, 0, 1.0};
Point(112) = {-0.073917, -0.742385, 0, 1.0};
Point(113) = {-0.080870, -0.743945, 0, 1.0};
Point(114) = {-0.087354, -0.745305, 0, 1.0};
Point(115) = {-0.093259, -0.746439, 0, 1.0};
Point(116) = {-0.098477, -0.747336, 0, 1.0};
Point(117) = {-0.102909, -0.747996, 0, 1.0};
Point(118) = {-0.106467, -0.748438, 0, 1.0};
Point(119) = {-0.109071, -0.748686, 0, 1.0};
Point(120) = {-0.110662, -0.748789, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
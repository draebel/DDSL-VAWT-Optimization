SetFactory("OpenCASCADE");

Point(1) = {0.074327, 0.748396, 0, 1.0};
Point(2) = {0.073971, 0.748400, 0, 1.0};
Point(3) = {0.072938, 0.748438, 0, 1.0};
Point(4) = {0.071302, 0.748536, 0, 1.0};
Point(5) = {0.069130, 0.748677, 0, 1.0};
Point(6) = {0.066463, 0.748825, 0, 1.0};
Point(7) = {0.063315, 0.748966, 0, 1.0};
Point(8) = {0.059722, 0.749110, 0, 1.0};
Point(9) = {0.055735, 0.749260, 0, 1.0};
Point(10) = {0.051412, 0.749416, 0, 1.0};
Point(11) = {0.046812, 0.749570, 0, 1.0};
Point(12) = {0.042000, 0.749717, 0, 1.0};
Point(13) = {0.037040, 0.749847, 0, 1.0};
Point(14) = {0.032002, 0.749946, 0, 1.0};
Point(15) = {0.026952, 0.750000, 0, 1.0};
Point(16) = {0.021960, 0.749981, 0, 1.0};
Point(17) = {0.017080, 0.749852, 0, 1.0};
Point(18) = {0.012339, 0.749588, 0, 1.0};
Point(19) = {0.007770, 0.749177, 0, 1.0};
Point(20) = {0.003398, 0.748614, 0, 1.0};
Point(21) = {-0.000758, 0.747903, 0, 1.0};
Point(22) = {-0.004678, 0.747057, 0, 1.0};
Point(23) = {-0.008339, 0.746108, 0, 1.0};
Point(24) = {-0.011706, 0.745080, 0, 1.0};
Point(25) = {-0.014744, 0.743996, 0, 1.0};
Point(26) = {-0.017426, 0.742877, 0, 1.0};
Point(27) = {-0.019727, 0.741742, 0, 1.0};
Point(28) = {-0.021626, 0.740616, 0, 1.0};
Point(29) = {-0.023112, 0.739521, 0, 1.0};
Point(30) = {-0.024173, 0.738488, 0, 1.0};
Point(31) = {-0.024806, 0.737558, 0, 1.0};
Point(32) = {-0.024998, 0.736801, 0, 1.0};
Point(33) = {-0.024626, 0.736230, 0, 1.0};
Point(34) = {-0.023657, 0.735761, 0, 1.0};
Point(35) = {-0.022187, 0.735382, 0, 1.0};
Point(36) = {-0.020229, 0.735123, 0, 1.0};
Point(37) = {-0.017797, 0.734989, 0, 1.0};
Point(38) = {-0.014913, 0.734981, 0, 1.0};
Point(39) = {-0.011602, 0.735099, 0, 1.0};
Point(40) = {-0.007897, 0.735339, 0, 1.0};
Point(41) = {-0.003835, 0.735695, 0, 1.0};
Point(42) = {0.000540, 0.736158, 0, 1.0};
Point(43) = {0.005180, 0.736724, 0, 1.0};
Point(44) = {0.010030, 0.737390, 0, 1.0};
Point(45) = {0.015051, 0.738161, 0, 1.0};
Point(46) = {0.020214, 0.739023, 0, 1.0};
Point(47) = {0.025473, 0.739938, 0, 1.0};
Point(48) = {0.030765, 0.740876, 0, 1.0};
Point(49) = {0.036021, 0.741814, 0, 1.0};
Point(50) = {0.041174, 0.742732, 0, 1.0};
Point(51) = {0.046159, 0.743614, 0, 1.0};
Point(52) = {0.050910, 0.744446, 0, 1.0};
Point(53) = {0.055364, 0.745216, 0, 1.0};
Point(54) = {0.059463, 0.745914, 0, 1.0};
Point(55) = {0.063149, 0.746534, 0, 1.0};
Point(56) = {0.066369, 0.747076, 0, 1.0};
Point(57) = {0.069090, 0.747545, 0, 1.0};
Point(58) = {0.071290, 0.747933, 0, 1.0};
Point(59) = {0.072938, 0.748208, 0, 1.0};
Point(60) = {0.073973, 0.748355, 0, 1.0};
Point(61) = {-0.074327, -0.748396, 0, 1.0};
Point(62) = {-0.073971, -0.748400, 0, 1.0};
Point(63) = {-0.072938, -0.748438, 0, 1.0};
Point(64) = {-0.071302, -0.748536, 0, 1.0};
Point(65) = {-0.069130, -0.748677, 0, 1.0};
Point(66) = {-0.066463, -0.748825, 0, 1.0};
Point(67) = {-0.063315, -0.748966, 0, 1.0};
Point(68) = {-0.059722, -0.749110, 0, 1.0};
Point(69) = {-0.055735, -0.749260, 0, 1.0};
Point(70) = {-0.051412, -0.749416, 0, 1.0};
Point(71) = {-0.046812, -0.749570, 0, 1.0};
Point(72) = {-0.042000, -0.749717, 0, 1.0};
Point(73) = {-0.037040, -0.749847, 0, 1.0};
Point(74) = {-0.032002, -0.749946, 0, 1.0};
Point(75) = {-0.026952, -0.750000, 0, 1.0};
Point(76) = {-0.021960, -0.749981, 0, 1.0};
Point(77) = {-0.017080, -0.749852, 0, 1.0};
Point(78) = {-0.012339, -0.749588, 0, 1.0};
Point(79) = {-0.007770, -0.749177, 0, 1.0};
Point(80) = {-0.003398, -0.748614, 0, 1.0};
Point(81) = {0.000758, -0.747903, 0, 1.0};
Point(82) = {0.004678, -0.747057, 0, 1.0};
Point(83) = {0.008339, -0.746108, 0, 1.0};
Point(84) = {0.011706, -0.745080, 0, 1.0};
Point(85) = {0.014744, -0.743996, 0, 1.0};
Point(86) = {0.017426, -0.742877, 0, 1.0};
Point(87) = {0.019727, -0.741742, 0, 1.0};
Point(88) = {0.021626, -0.740616, 0, 1.0};
Point(89) = {0.023112, -0.739521, 0, 1.0};
Point(90) = {0.024173, -0.738488, 0, 1.0};
Point(91) = {0.024806, -0.737558, 0, 1.0};
Point(92) = {0.024998, -0.736801, 0, 1.0};
Point(93) = {0.024626, -0.736230, 0, 1.0};
Point(94) = {0.023657, -0.735761, 0, 1.0};
Point(95) = {0.022187, -0.735382, 0, 1.0};
Point(96) = {0.020229, -0.735123, 0, 1.0};
Point(97) = {0.017797, -0.734989, 0, 1.0};
Point(98) = {0.014913, -0.734981, 0, 1.0};
Point(99) = {0.011602, -0.735099, 0, 1.0};
Point(100) = {0.007897, -0.735339, 0, 1.0};
Point(101) = {0.003835, -0.735695, 0, 1.0};
Point(102) = {-0.000540, -0.736158, 0, 1.0};
Point(103) = {-0.005180, -0.736724, 0, 1.0};
Point(104) = {-0.010030, -0.737390, 0, 1.0};
Point(105) = {-0.015051, -0.738161, 0, 1.0};
Point(106) = {-0.020214, -0.739023, 0, 1.0};
Point(107) = {-0.025473, -0.739938, 0, 1.0};
Point(108) = {-0.030765, -0.740876, 0, 1.0};
Point(109) = {-0.036021, -0.741814, 0, 1.0};
Point(110) = {-0.041174, -0.742732, 0, 1.0};
Point(111) = {-0.046159, -0.743614, 0, 1.0};
Point(112) = {-0.050910, -0.744446, 0, 1.0};
Point(113) = {-0.055364, -0.745216, 0, 1.0};
Point(114) = {-0.059463, -0.745914, 0, 1.0};
Point(115) = {-0.063149, -0.746534, 0, 1.0};
Point(116) = {-0.066369, -0.747076, 0, 1.0};
Point(117) = {-0.069090, -0.747545, 0, 1.0};
Point(118) = {-0.071290, -0.747933, 0, 1.0};
Point(119) = {-0.072938, -0.748208, 0, 1.0};
Point(120) = {-0.073973, -0.748355, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
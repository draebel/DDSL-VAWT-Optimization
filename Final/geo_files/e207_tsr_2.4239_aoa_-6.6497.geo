SetFactory("OpenCASCADE");

Point(1) = {0.148655, 0.746793, 0, 1.0};
Point(2) = {0.147943, 0.746800, 0, 1.0};
Point(3) = {0.145876, 0.746875, 0, 1.0};
Point(4) = {0.142603, 0.747072, 0, 1.0};
Point(5) = {0.138260, 0.747355, 0, 1.0};
Point(6) = {0.132925, 0.747651, 0, 1.0};
Point(7) = {0.126630, 0.747932, 0, 1.0};
Point(8) = {0.119445, 0.748220, 0, 1.0};
Point(9) = {0.111470, 0.748520, 0, 1.0};
Point(10) = {0.102824, 0.748831, 0, 1.0};
Point(11) = {0.093624, 0.749140, 0, 1.0};
Point(12) = {0.084000, 0.749433, 0, 1.0};
Point(13) = {0.074081, 0.749694, 0, 1.0};
Point(14) = {0.064004, 0.749893, 0, 1.0};
Point(15) = {0.053904, 0.750000, 0, 1.0};
Point(16) = {0.043921, 0.749962, 0, 1.0};
Point(17) = {0.034159, 0.749704, 0, 1.0};
Point(18) = {0.024678, 0.749176, 0, 1.0};
Point(19) = {0.015540, 0.748354, 0, 1.0};
Point(20) = {0.006796, 0.747228, 0, 1.0};
Point(21) = {-0.001516, 0.745806, 0, 1.0};
Point(22) = {-0.009356, 0.744115, 0, 1.0};
Point(23) = {-0.016678, 0.742216, 0, 1.0};
Point(24) = {-0.023411, 0.740161, 0, 1.0};
Point(25) = {-0.029489, 0.737992, 0, 1.0};
Point(26) = {-0.034852, 0.735754, 0, 1.0};
Point(27) = {-0.039454, 0.733484, 0, 1.0};
Point(28) = {-0.043253, 0.731231, 0, 1.0};
Point(29) = {-0.046223, 0.729042, 0, 1.0};
Point(30) = {-0.048346, 0.726977, 0, 1.0};
Point(31) = {-0.049611, 0.725116, 0, 1.0};
Point(32) = {-0.049997, 0.723603, 0, 1.0};
Point(33) = {-0.049251, 0.722459, 0, 1.0};
Point(34) = {-0.047313, 0.721522, 0, 1.0};
Point(35) = {-0.044374, 0.720765, 0, 1.0};
Point(36) = {-0.040458, 0.720247, 0, 1.0};
Point(37) = {-0.035594, 0.719978, 0, 1.0};
Point(38) = {-0.029825, 0.719962, 0, 1.0};
Point(39) = {-0.023204, 0.720198, 0, 1.0};
Point(40) = {-0.015794, 0.720678, 0, 1.0};
Point(41) = {-0.007669, 0.721389, 0, 1.0};
Point(42) = {0.001080, 0.722317, 0, 1.0};
Point(43) = {0.010359, 0.723449, 0, 1.0};
Point(44) = {0.020061, 0.724779, 0, 1.0};
Point(45) = {0.030101, 0.726322, 0, 1.0};
Point(46) = {0.040427, 0.728046, 0, 1.0};
Point(47) = {0.050946, 0.729876, 0, 1.0};
Point(48) = {0.061530, 0.731752, 0, 1.0};
Point(49) = {0.072042, 0.733628, 0, 1.0};
Point(50) = {0.082348, 0.735464, 0, 1.0};
Point(51) = {0.092317, 0.737228, 0, 1.0};
Point(52) = {0.101820, 0.738892, 0, 1.0};
Point(53) = {0.110728, 0.740432, 0, 1.0};
Point(54) = {0.118925, 0.741829, 0, 1.0};
Point(55) = {0.126297, 0.743069, 0, 1.0};
Point(56) = {0.132737, 0.744152, 0, 1.0};
Point(57) = {0.138179, 0.745090, 0, 1.0};
Point(58) = {0.142581, 0.745867, 0, 1.0};
Point(59) = {0.145875, 0.746416, 0, 1.0};
Point(60) = {0.147945, 0.746710, 0, 1.0};
Point(61) = {-0.148655, -0.746793, 0, 1.0};
Point(62) = {-0.147943, -0.746800, 0, 1.0};
Point(63) = {-0.145876, -0.746875, 0, 1.0};
Point(64) = {-0.142603, -0.747072, 0, 1.0};
Point(65) = {-0.138260, -0.747355, 0, 1.0};
Point(66) = {-0.132925, -0.747651, 0, 1.0};
Point(67) = {-0.126630, -0.747932, 0, 1.0};
Point(68) = {-0.119445, -0.748220, 0, 1.0};
Point(69) = {-0.111470, -0.748520, 0, 1.0};
Point(70) = {-0.102824, -0.748831, 0, 1.0};
Point(71) = {-0.093624, -0.749140, 0, 1.0};
Point(72) = {-0.084000, -0.749433, 0, 1.0};
Point(73) = {-0.074081, -0.749694, 0, 1.0};
Point(74) = {-0.064004, -0.749893, 0, 1.0};
Point(75) = {-0.053904, -0.750000, 0, 1.0};
Point(76) = {-0.043921, -0.749962, 0, 1.0};
Point(77) = {-0.034159, -0.749704, 0, 1.0};
Point(78) = {-0.024678, -0.749176, 0, 1.0};
Point(79) = {-0.015540, -0.748354, 0, 1.0};
Point(80) = {-0.006796, -0.747228, 0, 1.0};
Point(81) = {0.001516, -0.745806, 0, 1.0};
Point(82) = {0.009356, -0.744115, 0, 1.0};
Point(83) = {0.016678, -0.742216, 0, 1.0};
Point(84) = {0.023411, -0.740161, 0, 1.0};
Point(85) = {0.029489, -0.737992, 0, 1.0};
Point(86) = {0.034852, -0.735754, 0, 1.0};
Point(87) = {0.039454, -0.733484, 0, 1.0};
Point(88) = {0.043253, -0.731231, 0, 1.0};
Point(89) = {0.046223, -0.729042, 0, 1.0};
Point(90) = {0.048346, -0.726977, 0, 1.0};
Point(91) = {0.049611, -0.725116, 0, 1.0};
Point(92) = {0.049997, -0.723603, 0, 1.0};
Point(93) = {0.049251, -0.722459, 0, 1.0};
Point(94) = {0.047313, -0.721522, 0, 1.0};
Point(95) = {0.044374, -0.720765, 0, 1.0};
Point(96) = {0.040458, -0.720247, 0, 1.0};
Point(97) = {0.035594, -0.719978, 0, 1.0};
Point(98) = {0.029825, -0.719962, 0, 1.0};
Point(99) = {0.023204, -0.720198, 0, 1.0};
Point(100) = {0.015794, -0.720678, 0, 1.0};
Point(101) = {0.007669, -0.721389, 0, 1.0};
Point(102) = {-0.001080, -0.722317, 0, 1.0};
Point(103) = {-0.010359, -0.723449, 0, 1.0};
Point(104) = {-0.020061, -0.724779, 0, 1.0};
Point(105) = {-0.030101, -0.726322, 0, 1.0};
Point(106) = {-0.040427, -0.728046, 0, 1.0};
Point(107) = {-0.050946, -0.729876, 0, 1.0};
Point(108) = {-0.061530, -0.731752, 0, 1.0};
Point(109) = {-0.072042, -0.733628, 0, 1.0};
Point(110) = {-0.082348, -0.735464, 0, 1.0};
Point(111) = {-0.092317, -0.737228, 0, 1.0};
Point(112) = {-0.101820, -0.738892, 0, 1.0};
Point(113) = {-0.110728, -0.740432, 0, 1.0};
Point(114) = {-0.118925, -0.741829, 0, 1.0};
Point(115) = {-0.126297, -0.743069, 0, 1.0};
Point(116) = {-0.132737, -0.744152, 0, 1.0};
Point(117) = {-0.138179, -0.745090, 0, 1.0};
Point(118) = {-0.142581, -0.745867, 0, 1.0};
Point(119) = {-0.145875, -0.746416, 0, 1.0};
Point(120) = {-0.147945, -0.746710, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.075036, 0.728311, 0, 1.0};
Point(2) = {0.073522, 0.728676, 0, 1.0};
Point(3) = {0.068614, 0.730012, 0, 1.0};
Point(4) = {0.063809, 0.731407, 0, 1.0};
Point(5) = {0.059009, 0.732876, 0, 1.0};
Point(6) = {0.054185, 0.734415, 0, 1.0};
Point(7) = {0.049320, 0.736014, 0, 1.0};
Point(8) = {0.044406, 0.737658, 0, 1.0};
Point(9) = {0.039460, 0.739328, 0, 1.0};
Point(10) = {0.034596, 0.740954, 0, 1.0};
Point(11) = {0.029834, 0.742496, 0, 1.0};
Point(12) = {0.025167, 0.743922, 0, 1.0};
Point(13) = {0.020573, 0.745204, 0, 1.0};
Point(14) = {0.016014, 0.746326, 0, 1.0};
Point(15) = {0.011445, 0.747287, 0, 1.0};
Point(16) = {0.006843, 0.748099, 0, 1.0};
Point(17) = {0.002205, 0.748767, 0, 1.0};
Point(18) = {-0.002458, 0.749292, 0, 1.0};
Point(19) = {-0.007138, 0.749674, 0, 1.0};
Point(20) = {-0.011832, 0.749908, 0, 1.0};
Point(21) = {-0.016533, 0.750000, 0, 1.0};
Point(22) = {-0.021231, 0.749951, 0, 1.0};
Point(23) = {-0.025913, 0.749755, 0, 1.0};
Point(24) = {-0.030571, 0.749413, 0, 1.0};
Point(25) = {-0.035196, 0.748919, 0, 1.0};
Point(26) = {-0.039771, 0.748269, 0, 1.0};
Point(27) = {-0.044276, 0.747458, 0, 1.0};
Point(28) = {-0.048681, 0.746481, 0, 1.0};
Point(29) = {-0.052953, 0.745338, 0, 1.0};
Point(30) = {-0.057046, 0.744026, 0, 1.0};
Point(31) = {-0.060900, 0.742554, 0, 1.0};
Point(32) = {-0.064440, 0.740940, 0, 1.0};
Point(33) = {-0.067560, 0.739229, 0, 1.0};
Point(34) = {-0.070145, 0.737504, 0, 1.0};
Point(35) = {-0.072122, 0.735864, 0, 1.0};
Point(36) = {-0.073502, 0.734394, 0, 1.0};
Point(37) = {-0.074355, 0.733152, 0, 1.0};
Point(38) = {-0.074801, 0.732145, 0, 1.0};
Point(39) = {-0.074952, 0.731319, 0, 1.0};
Point(40) = {-0.074893, 0.730753, 0, 1.0};
Point(41) = {-0.074664, 0.730269, 0, 1.0};
Point(42) = {-0.074290, 0.729873, 0, 1.0};
Point(43) = {-0.073708, 0.729544, 0, 1.0};
Point(44) = {-0.072744, 0.729239, 0, 1.0};
Point(45) = {-0.071063, 0.728936, 0, 1.0};
Point(46) = {-0.068343, 0.728675, 0, 1.0};
Point(47) = {-0.064557, 0.728512, 0, 1.0};
Point(48) = {-0.060077, 0.728450, 0, 1.0};
Point(49) = {-0.055228, 0.728466, 0, 1.0};
Point(50) = {-0.050197, 0.728537, 0, 1.0};
Point(51) = {-0.045065, 0.728642, 0, 1.0};
Point(52) = {-0.039875, 0.728766, 0, 1.0};
Point(53) = {-0.034648, 0.728901, 0, 1.0};
Point(54) = {-0.029397, 0.729038, 0, 1.0};
Point(55) = {-0.024146, 0.729173, 0, 1.0};
Point(56) = {-0.018909, 0.729302, 0, 1.0};
Point(57) = {-0.013685, 0.729418, 0, 1.0};
Point(58) = {-0.008474, 0.729521, 0, 1.0};
Point(59) = {-0.003276, 0.729605, 0, 1.0};
Point(60) = {0.001909, 0.729668, 0, 1.0};
Point(61) = {0.007081, 0.729707, 0, 1.0};
Point(62) = {0.012240, 0.729716, 0, 1.0};
Point(63) = {0.017389, 0.729691, 0, 1.0};
Point(64) = {0.022530, 0.729630, 0, 1.0};
Point(65) = {0.027665, 0.729532, 0, 1.0};
Point(66) = {0.032796, 0.729397, 0, 1.0};
Point(67) = {0.037923, 0.729225, 0, 1.0};
Point(68) = {0.043046, 0.729017, 0, 1.0};
Point(69) = {0.048163, 0.728773, 0, 1.0};
Point(70) = {0.053269, 0.728491, 0, 1.0};
Point(71) = {0.058364, 0.728168, 0, 1.0};
Point(72) = {0.063456, 0.727802, 0, 1.0};
Point(73) = {0.068579, 0.727388, 0, 1.0};
Point(74) = {0.073687, 0.726929, 0, 1.0};
Point(75) = {0.074982, 0.726805, 0, 1.0};
Point(76) = {-0.075036, -0.728311, 0, 1.0};
Point(77) = {-0.073522, -0.728676, 0, 1.0};
Point(78) = {-0.068614, -0.730012, 0, 1.0};
Point(79) = {-0.063809, -0.731407, 0, 1.0};
Point(80) = {-0.059009, -0.732876, 0, 1.0};
Point(81) = {-0.054185, -0.734415, 0, 1.0};
Point(82) = {-0.049320, -0.736014, 0, 1.0};
Point(83) = {-0.044406, -0.737658, 0, 1.0};
Point(84) = {-0.039460, -0.739328, 0, 1.0};
Point(85) = {-0.034596, -0.740954, 0, 1.0};
Point(86) = {-0.029834, -0.742496, 0, 1.0};
Point(87) = {-0.025167, -0.743922, 0, 1.0};
Point(88) = {-0.020573, -0.745204, 0, 1.0};
Point(89) = {-0.016014, -0.746326, 0, 1.0};
Point(90) = {-0.011445, -0.747287, 0, 1.0};
Point(91) = {-0.006843, -0.748099, 0, 1.0};
Point(92) = {-0.002205, -0.748767, 0, 1.0};
Point(93) = {0.002458, -0.749292, 0, 1.0};
Point(94) = {0.007138, -0.749674, 0, 1.0};
Point(95) = {0.011832, -0.749908, 0, 1.0};
Point(96) = {0.016533, -0.750000, 0, 1.0};
Point(97) = {0.021231, -0.749951, 0, 1.0};
Point(98) = {0.025913, -0.749755, 0, 1.0};
Point(99) = {0.030571, -0.749413, 0, 1.0};
Point(100) = {0.035196, -0.748919, 0, 1.0};
Point(101) = {0.039771, -0.748269, 0, 1.0};
Point(102) = {0.044276, -0.747458, 0, 1.0};
Point(103) = {0.048681, -0.746481, 0, 1.0};
Point(104) = {0.052953, -0.745338, 0, 1.0};
Point(105) = {0.057046, -0.744026, 0, 1.0};
Point(106) = {0.060900, -0.742554, 0, 1.0};
Point(107) = {0.064440, -0.740940, 0, 1.0};
Point(108) = {0.067560, -0.739229, 0, 1.0};
Point(109) = {0.070145, -0.737504, 0, 1.0};
Point(110) = {0.072122, -0.735864, 0, 1.0};
Point(111) = {0.073502, -0.734394, 0, 1.0};
Point(112) = {0.074355, -0.733152, 0, 1.0};
Point(113) = {0.074801, -0.732145, 0, 1.0};
Point(114) = {0.074952, -0.731319, 0, 1.0};
Point(115) = {0.074893, -0.730753, 0, 1.0};
Point(116) = {0.074664, -0.730269, 0, 1.0};
Point(117) = {0.074290, -0.729873, 0, 1.0};
Point(118) = {0.073708, -0.729544, 0, 1.0};
Point(119) = {0.072744, -0.729239, 0, 1.0};
Point(120) = {0.071063, -0.728936, 0, 1.0};
Point(121) = {0.068343, -0.728675, 0, 1.0};
Point(122) = {0.064557, -0.728512, 0, 1.0};
Point(123) = {0.060077, -0.728450, 0, 1.0};
Point(124) = {0.055228, -0.728466, 0, 1.0};
Point(125) = {0.050197, -0.728537, 0, 1.0};
Point(126) = {0.045065, -0.728642, 0, 1.0};
Point(127) = {0.039875, -0.728766, 0, 1.0};
Point(128) = {0.034648, -0.728901, 0, 1.0};
Point(129) = {0.029397, -0.729038, 0, 1.0};
Point(130) = {0.024146, -0.729173, 0, 1.0};
Point(131) = {0.018909, -0.729302, 0, 1.0};
Point(132) = {0.013685, -0.729418, 0, 1.0};
Point(133) = {0.008474, -0.729521, 0, 1.0};
Point(134) = {0.003276, -0.729605, 0, 1.0};
Point(135) = {-0.001909, -0.729668, 0, 1.0};
Point(136) = {-0.007081, -0.729707, 0, 1.0};
Point(137) = {-0.012240, -0.729716, 0, 1.0};
Point(138) = {-0.017389, -0.729691, 0, 1.0};
Point(139) = {-0.022530, -0.729630, 0, 1.0};
Point(140) = {-0.027665, -0.729532, 0, 1.0};
Point(141) = {-0.032796, -0.729397, 0, 1.0};
Point(142) = {-0.037923, -0.729225, 0, 1.0};
Point(143) = {-0.043046, -0.729017, 0, 1.0};
Point(144) = {-0.048163, -0.728773, 0, 1.0};
Point(145) = {-0.053269, -0.728491, 0, 1.0};
Point(146) = {-0.058364, -0.728168, 0, 1.0};
Point(147) = {-0.063456, -0.727802, 0, 1.0};
Point(148) = {-0.068579, -0.727388, 0, 1.0};
Point(149) = {-0.073687, -0.726929, 0, 1.0};
Point(150) = {-0.074982, -0.726805, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:53};
Spline(3) = {53:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:100};
Spline(6) = {100:128};
Spline(7) = {128:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {36.00000000, 15.00000000, 0, 1.0};
Point(154) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
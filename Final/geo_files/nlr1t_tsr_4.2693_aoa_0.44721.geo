SetFactory("OpenCASCADE");

Point(1) = {0.074999, 0.741037, 0, 1.0};
Point(2) = {0.069304, 0.741902, 0, 1.0};
Point(3) = {0.065393, 0.742486, 0, 1.0};
Point(4) = {0.061282, 0.743119, 0, 1.0};
Point(5) = {0.056790, 0.743874, 0, 1.0};
Point(6) = {0.051111, 0.744867, 0, 1.0};
Point(7) = {0.045430, 0.745822, 0, 1.0};
Point(8) = {0.040460, 0.746617, 0, 1.0};
Point(9) = {0.035903, 0.747212, 0, 1.0};
Point(10) = {0.031668, 0.747656, 0, 1.0};
Point(11) = {0.026650, 0.748044, 0, 1.0};
Point(12) = {0.020647, 0.748466, 0, 1.0};
Point(13) = {0.014452, 0.748842, 0, 1.0};
Point(14) = {0.008135, 0.749165, 0, 1.0};
Point(15) = {0.001805, 0.749437, 0, 1.0};
Point(16) = {-0.004663, 0.749660, 0, 1.0};
Point(17) = {-0.011143, 0.749830, 0, 1.0};
Point(18) = {-0.017531, 0.749943, 0, 1.0};
Point(19) = {-0.023838, 0.750000, 0, 1.0};
Point(20) = {-0.029966, 0.749997, 0, 1.0};
Point(21) = {-0.035854, 0.749935, 0, 1.0};
Point(22) = {-0.041467, 0.749808, 0, 1.0};
Point(23) = {-0.046787, 0.749614, 0, 1.0};
Point(24) = {-0.051822, 0.749350, 0, 1.0};
Point(25) = {-0.056431, 0.749018, 0, 1.0};
Point(26) = {-0.060178, 0.748640, 0, 1.0};
Point(27) = {-0.063321, 0.748108, 0, 1.0};
Point(28) = {-0.066443, 0.747367, 0, 1.0};
Point(29) = {-0.069269, 0.746465, 0, 1.0};
Point(30) = {-0.071693, 0.745470, 0, 1.0};
Point(31) = {-0.073519, 0.744326, 0, 1.0};
Point(32) = {-0.074601, 0.743105, 0, 1.0};
Point(33) = {-0.074998, 0.742052, 0, 1.0};
Point(34) = {-0.074615, 0.741281, 0, 1.0};
Point(35) = {-0.073547, 0.740740, 0, 1.0};
Point(36) = {-0.071734, 0.740256, 0, 1.0};
Point(37) = {-0.069321, 0.739810, 0, 1.0};
Point(38) = {-0.066506, 0.739416, 0, 1.0};
Point(39) = {-0.063391, 0.739067, 0, 1.0};
Point(40) = {-0.060255, 0.738768, 0, 1.0};
Point(41) = {-0.056514, 0.738459, 0, 1.0};
Point(42) = {-0.051910, 0.738130, 0, 1.0};
Point(43) = {-0.046879, 0.737825, 0, 1.0};
Point(44) = {-0.041562, 0.737559, 0, 1.0};
Point(45) = {-0.035952, 0.737331, 0, 1.0};
Point(46) = {-0.030066, 0.737141, 0, 1.0};
Point(47) = {-0.023940, 0.736997, 0, 1.0};
Point(48) = {-0.017633, 0.736891, 0, 1.0};
Point(49) = {-0.011245, 0.736829, 0, 1.0};
Point(50) = {-0.004763, 0.736805, 0, 1.0};
Point(51) = {0.001707, 0.736833, 0, 1.0};
Point(52) = {0.008039, 0.736915, 0, 1.0};
Point(53) = {0.014360, 0.737053, 0, 1.0};
Point(54) = {0.020559, 0.737205, 0, 1.0};
Point(55) = {0.026567, 0.737389, 0, 1.0};
Point(56) = {0.031589, 0.737572, 0, 1.0};
Point(57) = {0.035829, 0.737729, 0, 1.0};
Point(58) = {0.040392, 0.737905, 0, 1.0};
Point(59) = {0.045370, 0.738118, 0, 1.0};
Point(60) = {0.051060, 0.738377, 0, 1.0};
Point(61) = {0.056749, 0.738667, 0, 1.0};
Point(62) = {0.061250, 0.738942, 0, 1.0};
Point(63) = {0.065369, 0.739325, 0, 1.0};
Point(64) = {0.069288, 0.739859, 0, 1.0};
Point(65) = {0.074996, 0.740725, 0, 1.0};
Point(66) = {-0.074999, -0.741037, 0, 1.0};
Point(67) = {-0.069304, -0.741902, 0, 1.0};
Point(68) = {-0.065393, -0.742486, 0, 1.0};
Point(69) = {-0.061282, -0.743119, 0, 1.0};
Point(70) = {-0.056790, -0.743874, 0, 1.0};
Point(71) = {-0.051111, -0.744867, 0, 1.0};
Point(72) = {-0.045430, -0.745822, 0, 1.0};
Point(73) = {-0.040460, -0.746617, 0, 1.0};
Point(74) = {-0.035903, -0.747212, 0, 1.0};
Point(75) = {-0.031668, -0.747656, 0, 1.0};
Point(76) = {-0.026650, -0.748044, 0, 1.0};
Point(77) = {-0.020647, -0.748466, 0, 1.0};
Point(78) = {-0.014452, -0.748842, 0, 1.0};
Point(79) = {-0.008135, -0.749165, 0, 1.0};
Point(80) = {-0.001805, -0.749437, 0, 1.0};
Point(81) = {0.004663, -0.749660, 0, 1.0};
Point(82) = {0.011143, -0.749830, 0, 1.0};
Point(83) = {0.017531, -0.749943, 0, 1.0};
Point(84) = {0.023838, -0.750000, 0, 1.0};
Point(85) = {0.029966, -0.749997, 0, 1.0};
Point(86) = {0.035854, -0.749935, 0, 1.0};
Point(87) = {0.041467, -0.749808, 0, 1.0};
Point(88) = {0.046787, -0.749614, 0, 1.0};
Point(89) = {0.051822, -0.749350, 0, 1.0};
Point(90) = {0.056431, -0.749018, 0, 1.0};
Point(91) = {0.060178, -0.748640, 0, 1.0};
Point(92) = {0.063321, -0.748108, 0, 1.0};
Point(93) = {0.066443, -0.747367, 0, 1.0};
Point(94) = {0.069269, -0.746465, 0, 1.0};
Point(95) = {0.071693, -0.745470, 0, 1.0};
Point(96) = {0.073519, -0.744326, 0, 1.0};
Point(97) = {0.074601, -0.743105, 0, 1.0};
Point(98) = {0.074998, -0.742052, 0, 1.0};
Point(99) = {0.074615, -0.741281, 0, 1.0};
Point(100) = {0.073547, -0.740740, 0, 1.0};
Point(101) = {0.071734, -0.740256, 0, 1.0};
Point(102) = {0.069321, -0.739810, 0, 1.0};
Point(103) = {0.066506, -0.739416, 0, 1.0};
Point(104) = {0.063391, -0.739067, 0, 1.0};
Point(105) = {0.060255, -0.738768, 0, 1.0};
Point(106) = {0.056514, -0.738459, 0, 1.0};
Point(107) = {0.051910, -0.738130, 0, 1.0};
Point(108) = {0.046879, -0.737825, 0, 1.0};
Point(109) = {0.041562, -0.737559, 0, 1.0};
Point(110) = {0.035952, -0.737331, 0, 1.0};
Point(111) = {0.030066, -0.737141, 0, 1.0};
Point(112) = {0.023940, -0.736997, 0, 1.0};
Point(113) = {0.017633, -0.736891, 0, 1.0};
Point(114) = {0.011245, -0.736829, 0, 1.0};
Point(115) = {0.004763, -0.736805, 0, 1.0};
Point(116) = {-0.001707, -0.736833, 0, 1.0};
Point(117) = {-0.008039, -0.736915, 0, 1.0};
Point(118) = {-0.014360, -0.737053, 0, 1.0};
Point(119) = {-0.020559, -0.737205, 0, 1.0};
Point(120) = {-0.026567, -0.737389, 0, 1.0};
Point(121) = {-0.031589, -0.737572, 0, 1.0};
Point(122) = {-0.035829, -0.737729, 0, 1.0};
Point(123) = {-0.040392, -0.737905, 0, 1.0};
Point(124) = {-0.045370, -0.738118, 0, 1.0};
Point(125) = {-0.051060, -0.738377, 0, 1.0};
Point(126) = {-0.056749, -0.738667, 0, 1.0};
Point(127) = {-0.061250, -0.738942, 0, 1.0};
Point(128) = {-0.065369, -0.739325, 0, 1.0};
Point(129) = {-0.069288, -0.739859, 0, 1.0};
Point(130) = {-0.074996, -0.740725, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:46};
Spline(3) = {46:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:111};
Spline(7) = {111:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
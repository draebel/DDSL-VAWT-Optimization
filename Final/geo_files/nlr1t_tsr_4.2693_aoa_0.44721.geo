SetFactory("OpenCASCADE");

Point(1) = {0.074998, 0.744025, 0, 1.0};
Point(2) = {0.071201, 0.744601, 0, 1.0};
Point(3) = {0.068594, 0.744991, 0, 1.0};
Point(4) = {0.065853, 0.745413, 0, 1.0};
Point(5) = {0.062858, 0.745916, 0, 1.0};
Point(6) = {0.059072, 0.746578, 0, 1.0};
Point(7) = {0.055285, 0.747214, 0, 1.0};
Point(8) = {0.051972, 0.747744, 0, 1.0};
Point(9) = {0.048934, 0.748141, 0, 1.0};
Point(10) = {0.046110, 0.748437, 0, 1.0};
Point(11) = {0.042765, 0.748696, 0, 1.0};
Point(12) = {0.038763, 0.748977, 0, 1.0};
Point(13) = {0.034633, 0.749228, 0, 1.0};
Point(14) = {0.030422, 0.749444, 0, 1.0};
Point(15) = {0.026202, 0.749625, 0, 1.0};
Point(16) = {0.021890, 0.749773, 0, 1.0};
Point(17) = {0.017570, 0.749887, 0, 1.0};
Point(18) = {0.013311, 0.749962, 0, 1.0};
Point(19) = {0.009106, 0.750000, 0, 1.0};
Point(20) = {0.005021, 0.749998, 0, 1.0};
Point(21) = {0.001096, 0.749957, 0, 1.0};
Point(22) = {-0.002646, 0.749872, 0, 1.0};
Point(23) = {-0.006193, 0.749742, 0, 1.0};
Point(24) = {-0.009550, 0.749567, 0, 1.0};
Point(25) = {-0.012622, 0.749346, 0, 1.0};
Point(26) = {-0.015120, 0.749093, 0, 1.0};
Point(27) = {-0.017215, 0.748738, 0, 1.0};
Point(28) = {-0.019297, 0.748245, 0, 1.0};
Point(29) = {-0.021181, 0.747643, 0, 1.0};
Point(30) = {-0.022797, 0.746980, 0, 1.0};
Point(31) = {-0.024014, 0.746217, 0, 1.0};
Point(32) = {-0.024736, 0.745403, 0, 1.0};
Point(33) = {-0.025000, 0.744701, 0, 1.0};
Point(34) = {-0.024745, 0.744187, 0, 1.0};
Point(35) = {-0.024033, 0.743826, 0, 1.0};
Point(36) = {-0.022824, 0.743504, 0, 1.0};
Point(37) = {-0.021216, 0.743206, 0, 1.0};
Point(38) = {-0.019339, 0.742944, 0, 1.0};
Point(39) = {-0.017262, 0.742712, 0, 1.0};
Point(40) = {-0.015172, 0.742512, 0, 1.0};
Point(41) = {-0.012677, 0.742306, 0, 1.0};
Point(42) = {-0.009608, 0.742087, 0, 1.0};
Point(43) = {-0.006254, 0.741884, 0, 1.0};
Point(44) = {-0.002710, 0.741706, 0, 1.0};
Point(45) = {0.001030, 0.741554, 0, 1.0};
Point(46) = {0.004954, 0.741427, 0, 1.0};
Point(47) = {0.009039, 0.741331, 0, 1.0};
Point(48) = {0.013243, 0.741260, 0, 1.0};
Point(49) = {0.017502, 0.741219, 0, 1.0};
Point(50) = {0.021823, 0.741203, 0, 1.0};
Point(51) = {0.026136, 0.741222, 0, 1.0};
Point(52) = {0.030358, 0.741277, 0, 1.0};
Point(53) = {0.034572, 0.741369, 0, 1.0};
Point(54) = {0.038705, 0.741470, 0, 1.0};
Point(55) = {0.042710, 0.741592, 0, 1.0};
Point(56) = {0.046058, 0.741714, 0, 1.0};
Point(57) = {0.048885, 0.741819, 0, 1.0};
Point(58) = {0.051927, 0.741937, 0, 1.0};
Point(59) = {0.055245, 0.742079, 0, 1.0};
Point(60) = {0.059038, 0.742251, 0, 1.0};
Point(61) = {0.062831, 0.742444, 0, 1.0};
Point(62) = {0.065832, 0.742628, 0, 1.0};
Point(63) = {0.068578, 0.742884, 0, 1.0};
Point(64) = {0.071191, 0.743239, 0, 1.0};
Point(65) = {0.074996, 0.743817, 0, 1.0};
Point(66) = {-0.074998, -0.744025, 0, 1.0};
Point(67) = {-0.071201, -0.744601, 0, 1.0};
Point(68) = {-0.068594, -0.744991, 0, 1.0};
Point(69) = {-0.065853, -0.745413, 0, 1.0};
Point(70) = {-0.062858, -0.745916, 0, 1.0};
Point(71) = {-0.059072, -0.746578, 0, 1.0};
Point(72) = {-0.055285, -0.747214, 0, 1.0};
Point(73) = {-0.051972, -0.747744, 0, 1.0};
Point(74) = {-0.048934, -0.748141, 0, 1.0};
Point(75) = {-0.046110, -0.748437, 0, 1.0};
Point(76) = {-0.042765, -0.748696, 0, 1.0};
Point(77) = {-0.038763, -0.748977, 0, 1.0};
Point(78) = {-0.034633, -0.749228, 0, 1.0};
Point(79) = {-0.030422, -0.749444, 0, 1.0};
Point(80) = {-0.026202, -0.749625, 0, 1.0};
Point(81) = {-0.021890, -0.749773, 0, 1.0};
Point(82) = {-0.017570, -0.749887, 0, 1.0};
Point(83) = {-0.013311, -0.749962, 0, 1.0};
Point(84) = {-0.009106, -0.750000, 0, 1.0};
Point(85) = {-0.005021, -0.749998, 0, 1.0};
Point(86) = {-0.001096, -0.749957, 0, 1.0};
Point(87) = {0.002646, -0.749872, 0, 1.0};
Point(88) = {0.006193, -0.749742, 0, 1.0};
Point(89) = {0.009550, -0.749567, 0, 1.0};
Point(90) = {0.012622, -0.749346, 0, 1.0};
Point(91) = {0.015120, -0.749093, 0, 1.0};
Point(92) = {0.017215, -0.748738, 0, 1.0};
Point(93) = {0.019297, -0.748245, 0, 1.0};
Point(94) = {0.021181, -0.747643, 0, 1.0};
Point(95) = {0.022797, -0.746980, 0, 1.0};
Point(96) = {0.024014, -0.746217, 0, 1.0};
Point(97) = {0.024736, -0.745403, 0, 1.0};
Point(98) = {0.025000, -0.744701, 0, 1.0};
Point(99) = {0.024745, -0.744187, 0, 1.0};
Point(100) = {0.024033, -0.743826, 0, 1.0};
Point(101) = {0.022824, -0.743504, 0, 1.0};
Point(102) = {0.021216, -0.743206, 0, 1.0};
Point(103) = {0.019339, -0.742944, 0, 1.0};
Point(104) = {0.017262, -0.742712, 0, 1.0};
Point(105) = {0.015172, -0.742512, 0, 1.0};
Point(106) = {0.012677, -0.742306, 0, 1.0};
Point(107) = {0.009608, -0.742087, 0, 1.0};
Point(108) = {0.006254, -0.741884, 0, 1.0};
Point(109) = {0.002710, -0.741706, 0, 1.0};
Point(110) = {-0.001030, -0.741554, 0, 1.0};
Point(111) = {-0.004954, -0.741427, 0, 1.0};
Point(112) = {-0.009039, -0.741331, 0, 1.0};
Point(113) = {-0.013243, -0.741260, 0, 1.0};
Point(114) = {-0.017502, -0.741219, 0, 1.0};
Point(115) = {-0.021823, -0.741203, 0, 1.0};
Point(116) = {-0.026136, -0.741222, 0, 1.0};
Point(117) = {-0.030358, -0.741277, 0, 1.0};
Point(118) = {-0.034572, -0.741369, 0, 1.0};
Point(119) = {-0.038705, -0.741470, 0, 1.0};
Point(120) = {-0.042710, -0.741592, 0, 1.0};
Point(121) = {-0.046058, -0.741714, 0, 1.0};
Point(122) = {-0.048885, -0.741819, 0, 1.0};
Point(123) = {-0.051927, -0.741937, 0, 1.0};
Point(124) = {-0.055245, -0.742079, 0, 1.0};
Point(125) = {-0.059038, -0.742251, 0, 1.0};
Point(126) = {-0.062831, -0.742444, 0, 1.0};
Point(127) = {-0.065832, -0.742628, 0, 1.0};
Point(128) = {-0.068578, -0.742884, 0, 1.0};
Point(129) = {-0.071191, -0.743239, 0, 1.0};
Point(130) = {-0.074996, -0.743817, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:46};
Spline(3) = {46:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:111};
Spline(7) = {111:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
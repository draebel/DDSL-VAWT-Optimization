SetFactory("OpenCASCADE");

Point(1) = {0.073555, 0.730177, 0, 1.0};
Point(2) = {0.073227, 0.730282, 0, 1.0};
Point(3) = {0.072265, 0.730617, 0, 1.0};
Point(4) = {0.070709, 0.731177, 0, 1.0};
Point(5) = {0.068593, 0.731908, 0, 1.0};
Point(6) = {0.065948, 0.732777, 0, 1.0};
Point(7) = {0.062821, 0.733781, 0, 1.0};
Point(8) = {0.059269, 0.734898, 0, 1.0};
Point(9) = {0.055353, 0.736105, 0, 1.0};
Point(10) = {0.051139, 0.737373, 0, 1.0};
Point(11) = {0.046679, 0.738677, 0, 1.0};
Point(12) = {0.041990, 0.740003, 0, 1.0};
Point(13) = {0.037093, 0.741336, 0, 1.0};
Point(14) = {0.032046, 0.742649, 0, 1.0};
Point(15) = {0.026909, 0.743918, 0, 1.0};
Point(16) = {0.021738, 0.745121, 0, 1.0};
Point(17) = {0.016595, 0.746228, 0, 1.0};
Point(18) = {0.011535, 0.747223, 0, 1.0};
Point(19) = {0.006618, 0.748082, 0, 1.0};
Point(20) = {0.001900, 0.748793, 0, 1.0};
Point(21) = {-0.002569, 0.749341, 0, 1.0};
Point(22) = {-0.006737, 0.749716, 0, 1.0};
Point(23) = {-0.010561, 0.749916, 0, 1.0};
Point(24) = {-0.013990, 0.750000, 0, 1.0};
Point(25) = {-0.017001, 0.749901, 0, 1.0};
Point(26) = {-0.019562, 0.749647, 0, 1.0};
Point(27) = {-0.021653, 0.749244, 0, 1.0};
Point(28) = {-0.023259, 0.748705, 0, 1.0};
Point(29) = {-0.024368, 0.748049, 0, 1.0};
Point(30) = {-0.025000, 0.747118, 0, 1.0};
Point(31) = {-0.024657, 0.746366, 0, 1.0};
Point(32) = {-0.023781, 0.745669, 0, 1.0};
Point(33) = {-0.022393, 0.744941, 0, 1.0};
Point(34) = {-0.020500, 0.744190, 0, 1.0};
Point(35) = {-0.018114, 0.743428, 0, 1.0};
Point(36) = {-0.015252, 0.742654, 0, 1.0};
Point(37) = {-0.011944, 0.741874, 0, 1.0};
Point(38) = {-0.008220, 0.741087, 0, 1.0};
Point(39) = {-0.004124, 0.740298, 0, 1.0};
Point(40) = {0.000304, 0.739508, 0, 1.0};
Point(41) = {0.005009, 0.738719, 0, 1.0};
Point(42) = {0.009939, 0.737939, 0, 1.0};
Point(43) = {0.015037, 0.737168, 0, 1.0};
Point(44) = {0.020241, 0.736412, 0, 1.0};
Point(45) = {0.025493, 0.735680, 0, 1.0};
Point(46) = {0.030728, 0.734976, 0, 1.0};
Point(47) = {0.035886, 0.734312, 0, 1.0};
Point(48) = {0.040906, 0.733694, 0, 1.0};
Point(49) = {0.045729, 0.733150, 0, 1.0};
Point(50) = {0.050335, 0.732697, 0, 1.0};
Point(51) = {0.054700, 0.732305, 0, 1.0};
Point(52) = {0.058759, 0.731934, 0, 1.0};
Point(53) = {0.062442, 0.731576, 0, 1.0};
Point(54) = {0.065683, 0.731232, 0, 1.0};
Point(55) = {0.068422, 0.730912, 0, 1.0};
Point(56) = {0.070615, 0.730633, 0, 1.0};
Point(57) = {0.072228, 0.730405, 0, 1.0};
Point(58) = {0.073219, 0.730240, 0, 1.0};
Point(59) = {-0.073555, -0.730177, 0, 1.0};
Point(60) = {-0.073227, -0.730282, 0, 1.0};
Point(61) = {-0.072265, -0.730617, 0, 1.0};
Point(62) = {-0.070709, -0.731177, 0, 1.0};
Point(63) = {-0.068593, -0.731908, 0, 1.0};
Point(64) = {-0.065948, -0.732777, 0, 1.0};
Point(65) = {-0.062821, -0.733781, 0, 1.0};
Point(66) = {-0.059269, -0.734898, 0, 1.0};
Point(67) = {-0.055353, -0.736105, 0, 1.0};
Point(68) = {-0.051139, -0.737373, 0, 1.0};
Point(69) = {-0.046679, -0.738677, 0, 1.0};
Point(70) = {-0.041990, -0.740003, 0, 1.0};
Point(71) = {-0.037093, -0.741336, 0, 1.0};
Point(72) = {-0.032046, -0.742649, 0, 1.0};
Point(73) = {-0.026909, -0.743918, 0, 1.0};
Point(74) = {-0.021738, -0.745121, 0, 1.0};
Point(75) = {-0.016595, -0.746228, 0, 1.0};
Point(76) = {-0.011535, -0.747223, 0, 1.0};
Point(77) = {-0.006618, -0.748082, 0, 1.0};
Point(78) = {-0.001900, -0.748793, 0, 1.0};
Point(79) = {0.002569, -0.749341, 0, 1.0};
Point(80) = {0.006737, -0.749716, 0, 1.0};
Point(81) = {0.010561, -0.749916, 0, 1.0};
Point(82) = {0.013990, -0.750000, 0, 1.0};
Point(83) = {0.017001, -0.749901, 0, 1.0};
Point(84) = {0.019562, -0.749647, 0, 1.0};
Point(85) = {0.021653, -0.749244, 0, 1.0};
Point(86) = {0.023259, -0.748705, 0, 1.0};
Point(87) = {0.024368, -0.748049, 0, 1.0};
Point(88) = {0.025000, -0.747118, 0, 1.0};
Point(89) = {0.024657, -0.746366, 0, 1.0};
Point(90) = {0.023781, -0.745669, 0, 1.0};
Point(91) = {0.022393, -0.744941, 0, 1.0};
Point(92) = {0.020500, -0.744190, 0, 1.0};
Point(93) = {0.018114, -0.743428, 0, 1.0};
Point(94) = {0.015252, -0.742654, 0, 1.0};
Point(95) = {0.011944, -0.741874, 0, 1.0};
Point(96) = {0.008220, -0.741087, 0, 1.0};
Point(97) = {0.004124, -0.740298, 0, 1.0};
Point(98) = {-0.000304, -0.739508, 0, 1.0};
Point(99) = {-0.005009, -0.738719, 0, 1.0};
Point(100) = {-0.009939, -0.737939, 0, 1.0};
Point(101) = {-0.015037, -0.737168, 0, 1.0};
Point(102) = {-0.020241, -0.736412, 0, 1.0};
Point(103) = {-0.025493, -0.735680, 0, 1.0};
Point(104) = {-0.030728, -0.734976, 0, 1.0};
Point(105) = {-0.035886, -0.734312, 0, 1.0};
Point(106) = {-0.040906, -0.733694, 0, 1.0};
Point(107) = {-0.045729, -0.733150, 0, 1.0};
Point(108) = {-0.050335, -0.732697, 0, 1.0};
Point(109) = {-0.054700, -0.732305, 0, 1.0};
Point(110) = {-0.058759, -0.731934, 0, 1.0};
Point(111) = {-0.062442, -0.731576, 0, 1.0};
Point(112) = {-0.065683, -0.731232, 0, 1.0};
Point(113) = {-0.068422, -0.730912, 0, 1.0};
Point(114) = {-0.070615, -0.730633, 0, 1.0};
Point(115) = {-0.072228, -0.730405, 0, 1.0};
Point(116) = {-0.073219, -0.730240, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:78};
Spline(6) = {78:99};
Spline(7) = {99:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
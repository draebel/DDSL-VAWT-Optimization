SetFactory("OpenCASCADE");

Point(1) = {0.147109, 0.710353, 0, 1.0};
Point(2) = {0.146453, 0.710563, 0, 1.0};
Point(3) = {0.144529, 0.711235, 0, 1.0};
Point(4) = {0.141418, 0.712354, 0, 1.0};
Point(5) = {0.137186, 0.713816, 0, 1.0};
Point(6) = {0.131896, 0.715553, 0, 1.0};
Point(7) = {0.125642, 0.717562, 0, 1.0};
Point(8) = {0.118538, 0.719796, 0, 1.0};
Point(9) = {0.110706, 0.722210, 0, 1.0};
Point(10) = {0.102277, 0.724746, 0, 1.0};
Point(11) = {0.093358, 0.727355, 0, 1.0};
Point(12) = {0.083980, 0.730006, 0, 1.0};
Point(13) = {0.074186, 0.732672, 0, 1.0};
Point(14) = {0.064093, 0.735297, 0, 1.0};
Point(15) = {0.053819, 0.737837, 0, 1.0};
Point(16) = {0.043477, 0.740242, 0, 1.0};
Point(17) = {0.033189, 0.742456, 0, 1.0};
Point(18) = {0.023070, 0.744445, 0, 1.0};
Point(19) = {0.013237, 0.746164, 0, 1.0};
Point(20) = {0.003799, 0.747585, 0, 1.0};
Point(21) = {-0.005138, 0.748681, 0, 1.0};
Point(22) = {-0.013474, 0.749432, 0, 1.0};
Point(23) = {-0.021122, 0.749832, 0, 1.0};
Point(24) = {-0.027979, 0.750000, 0, 1.0};
Point(25) = {-0.034002, 0.749801, 0, 1.0};
Point(26) = {-0.039124, 0.749294, 0, 1.0};
Point(27) = {-0.043307, 0.748489, 0, 1.0};
Point(28) = {-0.046518, 0.747409, 0, 1.0};
Point(29) = {-0.048736, 0.746098, 0, 1.0};
Point(30) = {-0.050000, 0.744235, 0, 1.0};
Point(31) = {-0.049315, 0.742731, 0, 1.0};
Point(32) = {-0.047562, 0.741338, 0, 1.0};
Point(33) = {-0.044786, 0.739881, 0, 1.0};
Point(34) = {-0.041000, 0.738380, 0, 1.0};
Point(35) = {-0.036227, 0.736855, 0, 1.0};
Point(36) = {-0.030505, 0.735307, 0, 1.0};
Point(37) = {-0.023887, 0.733748, 0, 1.0};
Point(38) = {-0.016440, 0.732174, 0, 1.0};
Point(39) = {-0.008247, 0.730597, 0, 1.0};
Point(40) = {0.000607, 0.729016, 0, 1.0};
Point(41) = {0.010018, 0.727439, 0, 1.0};
Point(42) = {0.019878, 0.725878, 0, 1.0};
Point(43) = {0.030074, 0.724336, 0, 1.0};
Point(44) = {0.040483, 0.722825, 0, 1.0};
Point(45) = {0.050986, 0.721360, 0, 1.0};
Point(46) = {0.061455, 0.719952, 0, 1.0};
Point(47) = {0.071771, 0.718624, 0, 1.0};
Point(48) = {0.081811, 0.717389, 0, 1.0};
Point(49) = {0.091458, 0.716301, 0, 1.0};
Point(50) = {0.100670, 0.715393, 0, 1.0};
Point(51) = {0.109399, 0.714609, 0, 1.0};
Point(52) = {0.117519, 0.713869, 0, 1.0};
Point(53) = {0.124884, 0.713153, 0, 1.0};
Point(54) = {0.131365, 0.712465, 0, 1.0};
Point(55) = {0.136844, 0.711823, 0, 1.0};
Point(56) = {0.141231, 0.711266, 0, 1.0};
Point(57) = {0.144456, 0.710809, 0, 1.0};
Point(58) = {0.146439, 0.710480, 0, 1.0};
Point(59) = {-0.147109, -0.710353, 0, 1.0};
Point(60) = {-0.146453, -0.710563, 0, 1.0};
Point(61) = {-0.144529, -0.711235, 0, 1.0};
Point(62) = {-0.141418, -0.712354, 0, 1.0};
Point(63) = {-0.137186, -0.713816, 0, 1.0};
Point(64) = {-0.131896, -0.715553, 0, 1.0};
Point(65) = {-0.125642, -0.717562, 0, 1.0};
Point(66) = {-0.118538, -0.719796, 0, 1.0};
Point(67) = {-0.110706, -0.722210, 0, 1.0};
Point(68) = {-0.102277, -0.724746, 0, 1.0};
Point(69) = {-0.093358, -0.727355, 0, 1.0};
Point(70) = {-0.083980, -0.730006, 0, 1.0};
Point(71) = {-0.074186, -0.732672, 0, 1.0};
Point(72) = {-0.064093, -0.735297, 0, 1.0};
Point(73) = {-0.053819, -0.737837, 0, 1.0};
Point(74) = {-0.043477, -0.740242, 0, 1.0};
Point(75) = {-0.033189, -0.742456, 0, 1.0};
Point(76) = {-0.023070, -0.744445, 0, 1.0};
Point(77) = {-0.013237, -0.746164, 0, 1.0};
Point(78) = {-0.003799, -0.747585, 0, 1.0};
Point(79) = {0.005138, -0.748681, 0, 1.0};
Point(80) = {0.013474, -0.749432, 0, 1.0};
Point(81) = {0.021122, -0.749832, 0, 1.0};
Point(82) = {0.027979, -0.750000, 0, 1.0};
Point(83) = {0.034002, -0.749801, 0, 1.0};
Point(84) = {0.039124, -0.749294, 0, 1.0};
Point(85) = {0.043307, -0.748489, 0, 1.0};
Point(86) = {0.046518, -0.747409, 0, 1.0};
Point(87) = {0.048736, -0.746098, 0, 1.0};
Point(88) = {0.050000, -0.744235, 0, 1.0};
Point(89) = {0.049315, -0.742731, 0, 1.0};
Point(90) = {0.047562, -0.741338, 0, 1.0};
Point(91) = {0.044786, -0.739881, 0, 1.0};
Point(92) = {0.041000, -0.738380, 0, 1.0};
Point(93) = {0.036227, -0.736855, 0, 1.0};
Point(94) = {0.030505, -0.735307, 0, 1.0};
Point(95) = {0.023887, -0.733748, 0, 1.0};
Point(96) = {0.016440, -0.732174, 0, 1.0};
Point(97) = {0.008247, -0.730597, 0, 1.0};
Point(98) = {-0.000607, -0.729016, 0, 1.0};
Point(99) = {-0.010018, -0.727439, 0, 1.0};
Point(100) = {-0.019878, -0.725878, 0, 1.0};
Point(101) = {-0.030074, -0.724336, 0, 1.0};
Point(102) = {-0.040483, -0.722825, 0, 1.0};
Point(103) = {-0.050986, -0.721360, 0, 1.0};
Point(104) = {-0.061455, -0.719952, 0, 1.0};
Point(105) = {-0.071771, -0.718624, 0, 1.0};
Point(106) = {-0.081811, -0.717389, 0, 1.0};
Point(107) = {-0.091458, -0.716301, 0, 1.0};
Point(108) = {-0.100670, -0.715393, 0, 1.0};
Point(109) = {-0.109399, -0.714609, 0, 1.0};
Point(110) = {-0.117519, -0.713869, 0, 1.0};
Point(111) = {-0.124884, -0.713153, 0, 1.0};
Point(112) = {-0.131365, -0.712465, 0, 1.0};
Point(113) = {-0.136844, -0.711823, 0, 1.0};
Point(114) = {-0.141231, -0.711266, 0, 1.0};
Point(115) = {-0.144456, -0.710809, 0, 1.0};
Point(116) = {-0.146439, -0.710480, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:41};
Spline(3) = {41:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:78};
Spline(6) = {78:99};
Spline(7) = {99:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149580, 0.728836, 0, 1.0};
Point(2) = {0.144625, 0.729697, 0, 1.0};
Point(3) = {0.139674, 0.730615, 0, 1.0};
Point(4) = {0.134725, 0.731550, 0, 1.0};
Point(5) = {0.129773, 0.732461, 0, 1.0};
Point(6) = {0.124823, 0.733395, 0, 1.0};
Point(7) = {0.119874, 0.734338, 0, 1.0};
Point(8) = {0.114926, 0.735300, 0, 1.0};
Point(9) = {0.109979, 0.736277, 0, 1.0};
Point(10) = {0.100083, 0.738208, 0, 1.0};
Point(11) = {0.090184, 0.740083, 0, 1.0};
Point(12) = {0.080278, 0.741857, 0, 1.0};
Point(13) = {0.070365, 0.743518, 0, 1.0};
Point(14) = {0.060441, 0.745018, 0, 1.0};
Point(15) = {0.050505, 0.746335, 0, 1.0};
Point(16) = {0.040557, 0.747454, 0, 1.0};
Point(17) = {0.030596, 0.748379, 0, 1.0};
Point(18) = {0.025611, 0.748773, 0, 1.0};
Point(19) = {0.020623, 0.749112, 0, 1.0};
Point(20) = {0.015630, 0.749394, 0, 1.0};
Point(21) = {0.010634, 0.749614, 0, 1.0};
Point(22) = {0.005634, 0.749779, 0, 1.0};
Point(23) = {0.000632, 0.749899, 0, 1.0};
Point(24) = {-0.004374, 0.749977, 0, 1.0};
Point(25) = {-0.009383, 0.750000, 0, 1.0};
Point(26) = {-0.014397, 0.749939, 0, 1.0};
Point(27) = {-0.019420, 0.749760, 0, 1.0};
Point(28) = {-0.024451, 0.749435, 0, 1.0};
Point(29) = {-0.029494, 0.748943, 0, 1.0};
Point(30) = {-0.034550, 0.748243, 0, 1.0};
Point(31) = {-0.039625, 0.747241, 0, 1.0};
Point(32) = {-0.042174, 0.746575, 0, 1.0};
Point(33) = {-0.044735, 0.745715, 0, 1.0};
Point(34) = {-0.046022, 0.745177, 0, 1.0};
Point(35) = {-0.047318, 0.744514, 0, 1.0};
Point(36) = {-0.048101, 0.744034, 0, 1.0};
Point(37) = {-0.048891, 0.743438, 0, 1.0};
Point(38) = {-0.049427, 0.742897, 0, 1.0};
Point(39) = {-0.050000, 0.741792, 0, 1.0};
Point(40) = {-0.049561, 0.740841, 0, 1.0};
Point(41) = {-0.049090, 0.740368, 0, 1.0};
Point(42) = {-0.048375, 0.739809, 0, 1.0};
Point(43) = {-0.047653, 0.739349, 0, 1.0};
Point(44) = {-0.046443, 0.738705, 0, 1.0};
Point(45) = {-0.045224, 0.738185, 0, 1.0};
Point(46) = {-0.042774, 0.737320, 0, 1.0};
Point(47) = {-0.040315, 0.736610, 0, 1.0};
Point(48) = {-0.035382, 0.735428, 0, 1.0};
Point(49) = {-0.030434, 0.734453, 0, 1.0};
Point(50) = {-0.025478, 0.733614, 0, 1.0};
Point(51) = {-0.020515, 0.732885, 0, 1.0};
Point(52) = {-0.015546, 0.732250, 0, 1.0};
Point(53) = {-0.010571, 0.731693, 0, 1.0};
Point(54) = {-0.005593, 0.731191, 0, 1.0};
Point(55) = {-0.000613, 0.730731, 0, 1.0};
Point(56) = {0.004370, 0.730300, 0, 1.0};
Point(57) = {0.009354, 0.729900, 0, 1.0};
Point(58) = {0.014342, 0.729542, 0, 1.0};
Point(59) = {0.019332, 0.729234, 0, 1.0};
Point(60) = {0.024326, 0.728976, 0, 1.0};
Point(61) = {0.029322, 0.728760, 0, 1.0};
Point(62) = {0.039323, 0.728446, 0, 1.0};
Point(63) = {0.049334, 0.728283, 0, 1.0};
Point(64) = {0.059354, 0.728272, 0, 1.0};
Point(65) = {0.069383, 0.728394, 0, 1.0};
Point(66) = {0.079418, 0.728613, 0, 1.0};
Point(67) = {0.089456, 0.728871, 0, 1.0};
Point(68) = {0.099494, 0.729137, 0, 1.0};
Point(69) = {0.109529, 0.729351, 0, 1.0};
Point(70) = {0.114544, 0.729421, 0, 1.0};
Point(71) = {0.119557, 0.729450, 0, 1.0};
Point(72) = {0.124566, 0.729428, 0, 1.0};
Point(73) = {0.129573, 0.729373, 0, 1.0};
Point(74) = {0.134576, 0.729265, 0, 1.0};
Point(75) = {0.139580, 0.729168, 0, 1.0};
Point(76) = {0.144582, 0.729030, 0, 1.0};
Point(77) = {-0.149580, -0.728836, 0, 1.0};
Point(78) = {-0.144625, -0.729697, 0, 1.0};
Point(79) = {-0.139674, -0.730615, 0, 1.0};
Point(80) = {-0.134725, -0.731550, 0, 1.0};
Point(81) = {-0.129773, -0.732461, 0, 1.0};
Point(82) = {-0.124823, -0.733395, 0, 1.0};
Point(83) = {-0.119874, -0.734338, 0, 1.0};
Point(84) = {-0.114926, -0.735300, 0, 1.0};
Point(85) = {-0.109979, -0.736277, 0, 1.0};
Point(86) = {-0.100083, -0.738208, 0, 1.0};
Point(87) = {-0.090184, -0.740083, 0, 1.0};
Point(88) = {-0.080278, -0.741857, 0, 1.0};
Point(89) = {-0.070365, -0.743518, 0, 1.0};
Point(90) = {-0.060441, -0.745018, 0, 1.0};
Point(91) = {-0.050505, -0.746335, 0, 1.0};
Point(92) = {-0.040557, -0.747454, 0, 1.0};
Point(93) = {-0.030596, -0.748379, 0, 1.0};
Point(94) = {-0.025611, -0.748773, 0, 1.0};
Point(95) = {-0.020623, -0.749112, 0, 1.0};
Point(96) = {-0.015630, -0.749394, 0, 1.0};
Point(97) = {-0.010634, -0.749614, 0, 1.0};
Point(98) = {-0.005634, -0.749779, 0, 1.0};
Point(99) = {-0.000632, -0.749899, 0, 1.0};
Point(100) = {0.004374, -0.749977, 0, 1.0};
Point(101) = {0.009383, -0.750000, 0, 1.0};
Point(102) = {0.014397, -0.749939, 0, 1.0};
Point(103) = {0.019420, -0.749760, 0, 1.0};
Point(104) = {0.024451, -0.749435, 0, 1.0};
Point(105) = {0.029494, -0.748943, 0, 1.0};
Point(106) = {0.034550, -0.748243, 0, 1.0};
Point(107) = {0.039625, -0.747241, 0, 1.0};
Point(108) = {0.042174, -0.746575, 0, 1.0};
Point(109) = {0.044735, -0.745715, 0, 1.0};
Point(110) = {0.046022, -0.745177, 0, 1.0};
Point(111) = {0.047318, -0.744514, 0, 1.0};
Point(112) = {0.048101, -0.744034, 0, 1.0};
Point(113) = {0.048891, -0.743438, 0, 1.0};
Point(114) = {0.049427, -0.742897, 0, 1.0};
Point(115) = {0.050000, -0.741792, 0, 1.0};
Point(116) = {0.049561, -0.740841, 0, 1.0};
Point(117) = {0.049090, -0.740368, 0, 1.0};
Point(118) = {0.048375, -0.739809, 0, 1.0};
Point(119) = {0.047653, -0.739349, 0, 1.0};
Point(120) = {0.046443, -0.738705, 0, 1.0};
Point(121) = {0.045224, -0.738185, 0, 1.0};
Point(122) = {0.042774, -0.737320, 0, 1.0};
Point(123) = {0.040315, -0.736610, 0, 1.0};
Point(124) = {0.035382, -0.735428, 0, 1.0};
Point(125) = {0.030434, -0.734453, 0, 1.0};
Point(126) = {0.025478, -0.733614, 0, 1.0};
Point(127) = {0.020515, -0.732885, 0, 1.0};
Point(128) = {0.015546, -0.732250, 0, 1.0};
Point(129) = {0.010571, -0.731693, 0, 1.0};
Point(130) = {0.005593, -0.731191, 0, 1.0};
Point(131) = {0.000613, -0.730731, 0, 1.0};
Point(132) = {-0.004370, -0.730300, 0, 1.0};
Point(133) = {-0.009354, -0.729900, 0, 1.0};
Point(134) = {-0.014342, -0.729542, 0, 1.0};
Point(135) = {-0.019332, -0.729234, 0, 1.0};
Point(136) = {-0.024326, -0.728976, 0, 1.0};
Point(137) = {-0.029322, -0.728760, 0, 1.0};
Point(138) = {-0.039323, -0.728446, 0, 1.0};
Point(139) = {-0.049334, -0.728283, 0, 1.0};
Point(140) = {-0.059354, -0.728272, 0, 1.0};
Point(141) = {-0.069383, -0.728394, 0, 1.0};
Point(142) = {-0.079418, -0.728613, 0, 1.0};
Point(143) = {-0.089456, -0.728871, 0, 1.0};
Point(144) = {-0.099494, -0.729137, 0, 1.0};
Point(145) = {-0.109529, -0.729351, 0, 1.0};
Point(146) = {-0.114544, -0.729421, 0, 1.0};
Point(147) = {-0.119557, -0.729450, 0, 1.0};
Point(148) = {-0.124566, -0.729428, 0, 1.0};
Point(149) = {-0.129573, -0.729373, 0, 1.0};
Point(150) = {-0.134576, -0.729265, 0, 1.0};
Point(151) = {-0.139580, -0.729168, 0, 1.0};
Point(152) = {-0.144582, -0.729030, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
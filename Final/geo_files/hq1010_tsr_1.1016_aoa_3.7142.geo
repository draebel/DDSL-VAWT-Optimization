SetFactory("OpenCASCADE");

Point(1) = {0.112264, 0.734127, 0, 1.0};
Point(2) = {0.108548, 0.734773, 0, 1.0};
Point(3) = {0.104835, 0.735461, 0, 1.0};
Point(4) = {0.101122, 0.736162, 0, 1.0};
Point(5) = {0.097409, 0.736845, 0, 1.0};
Point(6) = {0.093696, 0.737546, 0, 1.0};
Point(7) = {0.089984, 0.738253, 0, 1.0};
Point(8) = {0.086273, 0.738975, 0, 1.0};
Point(9) = {0.082563, 0.739708, 0, 1.0};
Point(10) = {0.075141, 0.741156, 0, 1.0};
Point(11) = {0.067717, 0.742562, 0, 1.0};
Point(12) = {0.060287, 0.743892, 0, 1.0};
Point(13) = {0.052852, 0.745139, 0, 1.0};
Point(14) = {0.045410, 0.746264, 0, 1.0};
Point(15) = {0.037958, 0.747251, 0, 1.0};
Point(16) = {0.030496, 0.748090, 0, 1.0};
Point(17) = {0.023026, 0.748784, 0, 1.0};
Point(18) = {0.019287, 0.749079, 0, 1.0};
Point(19) = {0.015546, 0.749334, 0, 1.0};
Point(20) = {0.011802, 0.749546, 0, 1.0};
Point(21) = {0.008054, 0.749711, 0, 1.0};
Point(22) = {0.004304, 0.749834, 0, 1.0};
Point(23) = {0.000552, 0.749924, 0, 1.0};
Point(24) = {-0.003202, 0.749983, 0, 1.0};
Point(25) = {-0.006958, 0.750000, 0, 1.0};
Point(26) = {-0.010719, 0.749954, 0, 1.0};
Point(27) = {-0.014486, 0.749820, 0, 1.0};
Point(28) = {-0.018260, 0.749576, 0, 1.0};
Point(29) = {-0.022042, 0.749207, 0, 1.0};
Point(30) = {-0.025833, 0.748682, 0, 1.0};
Point(31) = {-0.029640, 0.747931, 0, 1.0};
Point(32) = {-0.031552, 0.747431, 0, 1.0};
Point(33) = {-0.033472, 0.746786, 0, 1.0};
Point(34) = {-0.034438, 0.746383, 0, 1.0};
Point(35) = {-0.035410, 0.745885, 0, 1.0};
Point(36) = {-0.035997, 0.745525, 0, 1.0};
Point(37) = {-0.036590, 0.745078, 0, 1.0};
Point(38) = {-0.036992, 0.744673, 0, 1.0};
Point(39) = {-0.037421, 0.743844, 0, 1.0};
Point(40) = {-0.037092, 0.743131, 0, 1.0};
Point(41) = {-0.036739, 0.742776, 0, 1.0};
Point(42) = {-0.036203, 0.742356, 0, 1.0};
Point(43) = {-0.035661, 0.742012, 0, 1.0};
Point(44) = {-0.034753, 0.741529, 0, 1.0};
Point(45) = {-0.033839, 0.741139, 0, 1.0};
Point(46) = {-0.032002, 0.740490, 0, 1.0};
Point(47) = {-0.030158, 0.739957, 0, 1.0};
Point(48) = {-0.026457, 0.739071, 0, 1.0};
Point(49) = {-0.022747, 0.738340, 0, 1.0};
Point(50) = {-0.019030, 0.737711, 0, 1.0};
Point(51) = {-0.015308, 0.737164, 0, 1.0};
Point(52) = {-0.011581, 0.736687, 0, 1.0};
Point(53) = {-0.007850, 0.736269, 0, 1.0};
Point(54) = {-0.004116, 0.735893, 0, 1.0};
Point(55) = {-0.000381, 0.735549, 0, 1.0};
Point(56) = {0.003356, 0.735225, 0, 1.0};
Point(57) = {0.007094, 0.734925, 0, 1.0};
Point(58) = {0.010835, 0.734657, 0, 1.0};
Point(59) = {0.014578, 0.734426, 0, 1.0};
Point(60) = {0.018323, 0.734232, 0, 1.0};
Point(61) = {0.022071, 0.734070, 0, 1.0};
Point(62) = {0.029571, 0.733834, 0, 1.0};
Point(63) = {0.037079, 0.733712, 0, 1.0};
Point(64) = {0.044594, 0.733704, 0, 1.0};
Point(65) = {0.052116, 0.733796, 0, 1.0};
Point(66) = {0.059642, 0.733959, 0, 1.0};
Point(67) = {0.067171, 0.734153, 0, 1.0};
Point(68) = {0.074699, 0.734353, 0, 1.0};
Point(69) = {0.082226, 0.734514, 0, 1.0};
Point(70) = {0.085987, 0.734566, 0, 1.0};
Point(71) = {0.089746, 0.734588, 0, 1.0};
Point(72) = {0.093503, 0.734571, 0, 1.0};
Point(73) = {0.097258, 0.734530, 0, 1.0};
Point(74) = {0.101011, 0.734449, 0, 1.0};
Point(75) = {0.104764, 0.734376, 0, 1.0};
Point(76) = {0.108515, 0.734273, 0, 1.0};
Point(77) = {-0.112264, -0.734127, 0, 1.0};
Point(78) = {-0.108548, -0.734773, 0, 1.0};
Point(79) = {-0.104835, -0.735461, 0, 1.0};
Point(80) = {-0.101122, -0.736162, 0, 1.0};
Point(81) = {-0.097409, -0.736845, 0, 1.0};
Point(82) = {-0.093696, -0.737546, 0, 1.0};
Point(83) = {-0.089984, -0.738253, 0, 1.0};
Point(84) = {-0.086273, -0.738975, 0, 1.0};
Point(85) = {-0.082563, -0.739708, 0, 1.0};
Point(86) = {-0.075141, -0.741156, 0, 1.0};
Point(87) = {-0.067717, -0.742562, 0, 1.0};
Point(88) = {-0.060287, -0.743892, 0, 1.0};
Point(89) = {-0.052852, -0.745139, 0, 1.0};
Point(90) = {-0.045410, -0.746264, 0, 1.0};
Point(91) = {-0.037958, -0.747251, 0, 1.0};
Point(92) = {-0.030496, -0.748090, 0, 1.0};
Point(93) = {-0.023026, -0.748784, 0, 1.0};
Point(94) = {-0.019287, -0.749079, 0, 1.0};
Point(95) = {-0.015546, -0.749334, 0, 1.0};
Point(96) = {-0.011802, -0.749546, 0, 1.0};
Point(97) = {-0.008054, -0.749711, 0, 1.0};
Point(98) = {-0.004304, -0.749834, 0, 1.0};
Point(99) = {-0.000552, -0.749924, 0, 1.0};
Point(100) = {0.003202, -0.749983, 0, 1.0};
Point(101) = {0.006958, -0.750000, 0, 1.0};
Point(102) = {0.010719, -0.749954, 0, 1.0};
Point(103) = {0.014486, -0.749820, 0, 1.0};
Point(104) = {0.018260, -0.749576, 0, 1.0};
Point(105) = {0.022042, -0.749207, 0, 1.0};
Point(106) = {0.025833, -0.748682, 0, 1.0};
Point(107) = {0.029640, -0.747931, 0, 1.0};
Point(108) = {0.031552, -0.747431, 0, 1.0};
Point(109) = {0.033472, -0.746786, 0, 1.0};
Point(110) = {0.034438, -0.746383, 0, 1.0};
Point(111) = {0.035410, -0.745885, 0, 1.0};
Point(112) = {0.035997, -0.745525, 0, 1.0};
Point(113) = {0.036590, -0.745078, 0, 1.0};
Point(114) = {0.036992, -0.744673, 0, 1.0};
Point(115) = {0.037421, -0.743844, 0, 1.0};
Point(116) = {0.037092, -0.743131, 0, 1.0};
Point(117) = {0.036739, -0.742776, 0, 1.0};
Point(118) = {0.036203, -0.742356, 0, 1.0};
Point(119) = {0.035661, -0.742012, 0, 1.0};
Point(120) = {0.034753, -0.741529, 0, 1.0};
Point(121) = {0.033839, -0.741139, 0, 1.0};
Point(122) = {0.032002, -0.740490, 0, 1.0};
Point(123) = {0.030158, -0.739957, 0, 1.0};
Point(124) = {0.026457, -0.739071, 0, 1.0};
Point(125) = {0.022747, -0.738340, 0, 1.0};
Point(126) = {0.019030, -0.737711, 0, 1.0};
Point(127) = {0.015308, -0.737164, 0, 1.0};
Point(128) = {0.011581, -0.736687, 0, 1.0};
Point(129) = {0.007850, -0.736269, 0, 1.0};
Point(130) = {0.004116, -0.735893, 0, 1.0};
Point(131) = {0.000381, -0.735549, 0, 1.0};
Point(132) = {-0.003356, -0.735225, 0, 1.0};
Point(133) = {-0.007094, -0.734925, 0, 1.0};
Point(134) = {-0.010835, -0.734657, 0, 1.0};
Point(135) = {-0.014578, -0.734426, 0, 1.0};
Point(136) = {-0.018323, -0.734232, 0, 1.0};
Point(137) = {-0.022071, -0.734070, 0, 1.0};
Point(138) = {-0.029571, -0.733834, 0, 1.0};
Point(139) = {-0.037079, -0.733712, 0, 1.0};
Point(140) = {-0.044594, -0.733704, 0, 1.0};
Point(141) = {-0.052116, -0.733796, 0, 1.0};
Point(142) = {-0.059642, -0.733959, 0, 1.0};
Point(143) = {-0.067171, -0.734153, 0, 1.0};
Point(144) = {-0.074699, -0.734353, 0, 1.0};
Point(145) = {-0.082226, -0.734514, 0, 1.0};
Point(146) = {-0.085987, -0.734566, 0, 1.0};
Point(147) = {-0.089746, -0.734588, 0, 1.0};
Point(148) = {-0.093503, -0.734571, 0, 1.0};
Point(149) = {-0.097258, -0.734530, 0, 1.0};
Point(150) = {-0.101011, -0.734449, 0, 1.0};
Point(151) = {-0.104764, -0.734376, 0, 1.0};
Point(152) = {-0.108515, -0.734273, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074790, 0.739418, 0, 1.0};
Point(2) = {0.072313, 0.739848, 0, 1.0};
Point(3) = {0.069837, 0.740308, 0, 1.0};
Point(4) = {0.067362, 0.740775, 0, 1.0};
Point(5) = {0.064887, 0.741230, 0, 1.0};
Point(6) = {0.062412, 0.741698, 0, 1.0};
Point(7) = {0.059937, 0.742169, 0, 1.0};
Point(8) = {0.057463, 0.742650, 0, 1.0};
Point(9) = {0.054989, 0.743138, 0, 1.0};
Point(10) = {0.050042, 0.744104, 0, 1.0};
Point(11) = {0.045092, 0.745042, 0, 1.0};
Point(12) = {0.040139, 0.745928, 0, 1.0};
Point(13) = {0.035182, 0.746759, 0, 1.0};
Point(14) = {0.030220, 0.747509, 0, 1.0};
Point(15) = {0.025253, 0.748167, 0, 1.0};
Point(16) = {0.020278, 0.748727, 0, 1.0};
Point(17) = {0.015298, 0.749189, 0, 1.0};
Point(18) = {0.012806, 0.749386, 0, 1.0};
Point(19) = {0.010311, 0.749556, 0, 1.0};
Point(20) = {0.007815, 0.749697, 0, 1.0};
Point(21) = {0.005317, 0.749807, 0, 1.0};
Point(22) = {0.002817, 0.749889, 0, 1.0};
Point(23) = {0.000316, 0.749950, 0, 1.0};
Point(24) = {-0.002187, 0.749989, 0, 1.0};
Point(25) = {-0.004691, 0.750000, 0, 1.0};
Point(26) = {-0.007199, 0.749969, 0, 1.0};
Point(27) = {-0.009710, 0.749880, 0, 1.0};
Point(28) = {-0.012226, 0.749717, 0, 1.0};
Point(29) = {-0.014747, 0.749471, 0, 1.0};
Point(30) = {-0.017275, 0.749121, 0, 1.0};
Point(31) = {-0.019813, 0.748621, 0, 1.0};
Point(32) = {-0.021087, 0.748287, 0, 1.0};
Point(33) = {-0.022367, 0.747858, 0, 1.0};
Point(34) = {-0.023011, 0.747589, 0, 1.0};
Point(35) = {-0.023659, 0.747257, 0, 1.0};
Point(36) = {-0.024050, 0.747017, 0, 1.0};
Point(37) = {-0.024446, 0.746719, 0, 1.0};
Point(38) = {-0.024714, 0.746449, 0, 1.0};
Point(39) = {-0.025000, 0.745896, 0, 1.0};
Point(40) = {-0.024780, 0.745421, 0, 1.0};
Point(41) = {-0.024545, 0.745184, 0, 1.0};
Point(42) = {-0.024188, 0.744904, 0, 1.0};
Point(43) = {-0.023827, 0.744674, 0, 1.0};
Point(44) = {-0.023221, 0.744352, 0, 1.0};
Point(45) = {-0.022612, 0.744092, 0, 1.0};
Point(46) = {-0.021387, 0.743660, 0, 1.0};
Point(47) = {-0.020158, 0.743305, 0, 1.0};
Point(48) = {-0.017691, 0.742714, 0, 1.0};
Point(49) = {-0.015217, 0.742227, 0, 1.0};
Point(50) = {-0.012739, 0.741807, 0, 1.0};
Point(51) = {-0.010258, 0.741443, 0, 1.0};
Point(52) = {-0.007773, 0.741125, 0, 1.0};
Point(53) = {-0.005286, 0.740846, 0, 1.0};
Point(54) = {-0.002797, 0.740596, 0, 1.0};
Point(55) = {-0.000306, 0.740366, 0, 1.0};
Point(56) = {0.002185, 0.740150, 0, 1.0};
Point(57) = {0.004677, 0.739950, 0, 1.0};
Point(58) = {0.007171, 0.739771, 0, 1.0};
Point(59) = {0.009666, 0.739617, 0, 1.0};
Point(60) = {0.012163, 0.739488, 0, 1.0};
Point(61) = {0.014661, 0.739380, 0, 1.0};
Point(62) = {0.019662, 0.739223, 0, 1.0};
Point(63) = {0.024667, 0.739141, 0, 1.0};
Point(64) = {0.029677, 0.739136, 0, 1.0};
Point(65) = {0.034691, 0.739197, 0, 1.0};
Point(66) = {0.039709, 0.739306, 0, 1.0};
Point(67) = {0.044728, 0.739435, 0, 1.0};
Point(68) = {0.049747, 0.739569, 0, 1.0};
Point(69) = {0.054765, 0.739676, 0, 1.0};
Point(70) = {0.057272, 0.739710, 0, 1.0};
Point(71) = {0.059778, 0.739725, 0, 1.0};
Point(72) = {0.062283, 0.739714, 0, 1.0};
Point(73) = {0.064786, 0.739687, 0, 1.0};
Point(74) = {0.067288, 0.739632, 0, 1.0};
Point(75) = {0.069790, 0.739584, 0, 1.0};
Point(76) = {0.072291, 0.739515, 0, 1.0};
Point(77) = {-0.074790, -0.739418, 0, 1.0};
Point(78) = {-0.072313, -0.739848, 0, 1.0};
Point(79) = {-0.069837, -0.740308, 0, 1.0};
Point(80) = {-0.067362, -0.740775, 0, 1.0};
Point(81) = {-0.064887, -0.741230, 0, 1.0};
Point(82) = {-0.062412, -0.741698, 0, 1.0};
Point(83) = {-0.059937, -0.742169, 0, 1.0};
Point(84) = {-0.057463, -0.742650, 0, 1.0};
Point(85) = {-0.054989, -0.743138, 0, 1.0};
Point(86) = {-0.050042, -0.744104, 0, 1.0};
Point(87) = {-0.045092, -0.745042, 0, 1.0};
Point(88) = {-0.040139, -0.745928, 0, 1.0};
Point(89) = {-0.035182, -0.746759, 0, 1.0};
Point(90) = {-0.030220, -0.747509, 0, 1.0};
Point(91) = {-0.025253, -0.748167, 0, 1.0};
Point(92) = {-0.020278, -0.748727, 0, 1.0};
Point(93) = {-0.015298, -0.749189, 0, 1.0};
Point(94) = {-0.012806, -0.749386, 0, 1.0};
Point(95) = {-0.010311, -0.749556, 0, 1.0};
Point(96) = {-0.007815, -0.749697, 0, 1.0};
Point(97) = {-0.005317, -0.749807, 0, 1.0};
Point(98) = {-0.002817, -0.749889, 0, 1.0};
Point(99) = {-0.000316, -0.749950, 0, 1.0};
Point(100) = {0.002187, -0.749989, 0, 1.0};
Point(101) = {0.004691, -0.750000, 0, 1.0};
Point(102) = {0.007199, -0.749969, 0, 1.0};
Point(103) = {0.009710, -0.749880, 0, 1.0};
Point(104) = {0.012226, -0.749717, 0, 1.0};
Point(105) = {0.014747, -0.749471, 0, 1.0};
Point(106) = {0.017275, -0.749121, 0, 1.0};
Point(107) = {0.019813, -0.748621, 0, 1.0};
Point(108) = {0.021087, -0.748287, 0, 1.0};
Point(109) = {0.022367, -0.747858, 0, 1.0};
Point(110) = {0.023011, -0.747589, 0, 1.0};
Point(111) = {0.023659, -0.747257, 0, 1.0};
Point(112) = {0.024050, -0.747017, 0, 1.0};
Point(113) = {0.024446, -0.746719, 0, 1.0};
Point(114) = {0.024714, -0.746449, 0, 1.0};
Point(115) = {0.025000, -0.745896, 0, 1.0};
Point(116) = {0.024780, -0.745421, 0, 1.0};
Point(117) = {0.024545, -0.745184, 0, 1.0};
Point(118) = {0.024188, -0.744904, 0, 1.0};
Point(119) = {0.023827, -0.744674, 0, 1.0};
Point(120) = {0.023221, -0.744352, 0, 1.0};
Point(121) = {0.022612, -0.744092, 0, 1.0};
Point(122) = {0.021387, -0.743660, 0, 1.0};
Point(123) = {0.020158, -0.743305, 0, 1.0};
Point(124) = {0.017691, -0.742714, 0, 1.0};
Point(125) = {0.015217, -0.742227, 0, 1.0};
Point(126) = {0.012739, -0.741807, 0, 1.0};
Point(127) = {0.010258, -0.741443, 0, 1.0};
Point(128) = {0.007773, -0.741125, 0, 1.0};
Point(129) = {0.005286, -0.740846, 0, 1.0};
Point(130) = {0.002797, -0.740596, 0, 1.0};
Point(131) = {0.000306, -0.740366, 0, 1.0};
Point(132) = {-0.002185, -0.740150, 0, 1.0};
Point(133) = {-0.004677, -0.739950, 0, 1.0};
Point(134) = {-0.007171, -0.739771, 0, 1.0};
Point(135) = {-0.009666, -0.739617, 0, 1.0};
Point(136) = {-0.012163, -0.739488, 0, 1.0};
Point(137) = {-0.014661, -0.739380, 0, 1.0};
Point(138) = {-0.019662, -0.739223, 0, 1.0};
Point(139) = {-0.024667, -0.739141, 0, 1.0};
Point(140) = {-0.029677, -0.739136, 0, 1.0};
Point(141) = {-0.034691, -0.739197, 0, 1.0};
Point(142) = {-0.039709, -0.739306, 0, 1.0};
Point(143) = {-0.044728, -0.739435, 0, 1.0};
Point(144) = {-0.049747, -0.739569, 0, 1.0};
Point(145) = {-0.054765, -0.739676, 0, 1.0};
Point(146) = {-0.057272, -0.739710, 0, 1.0};
Point(147) = {-0.059778, -0.739725, 0, 1.0};
Point(148) = {-0.062283, -0.739714, 0, 1.0};
Point(149) = {-0.064786, -0.739687, 0, 1.0};
Point(150) = {-0.067288, -0.739632, 0, 1.0};
Point(151) = {-0.069790, -0.739584, 0, 1.0};
Point(152) = {-0.072291, -0.739515, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
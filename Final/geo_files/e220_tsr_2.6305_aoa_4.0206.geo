SetFactory("OpenCASCADE");

Point(1) = {0.112166, 0.730561, 0, 1.0};
Point(2) = {0.111627, 0.730611, 0, 1.0};
Point(3) = {0.110041, 0.730803, 0, 1.0};
Point(4) = {0.107483, 0.731200, 0, 1.0};
Point(5) = {0.104042, 0.731817, 0, 1.0};
Point(6) = {0.099792, 0.732647, 0, 1.0};
Point(7) = {0.094802, 0.733689, 0, 1.0};
Point(8) = {0.089164, 0.734950, 0, 1.0};
Point(9) = {0.082996, 0.736416, 0, 1.0};
Point(10) = {0.076410, 0.738051, 0, 1.0};
Point(11) = {0.069523, 0.739806, 0, 1.0};
Point(12) = {0.062444, 0.741619, 0, 1.0};
Point(13) = {0.055275, 0.743414, 0, 1.0};
Point(14) = {0.048105, 0.745098, 0, 1.0};
Point(15) = {0.040971, 0.746565, 0, 1.0};
Point(16) = {0.033869, 0.747766, 0, 1.0};
Point(17) = {0.026821, 0.748694, 0, 1.0};
Point(18) = {0.019852, 0.749359, 0, 1.0};
Point(19) = {0.013011, 0.749785, 0, 1.0};
Point(20) = {0.006376, 0.749998, 0, 1.0};
Point(21) = {0.000011, 0.750000, 0, 1.0};
Point(22) = {-0.006018, 0.749804, 0, 1.0};
Point(23) = {-0.011649, 0.749417, 0, 1.0};
Point(24) = {-0.016831, 0.748852, 0, 1.0};
Point(25) = {-0.021514, 0.748123, 0, 1.0};
Point(26) = {-0.025653, 0.747250, 0, 1.0};
Point(27) = {-0.029216, 0.746256, 0, 1.0};
Point(28) = {-0.032168, 0.745168, 0, 1.0};
Point(29) = {-0.034487, 0.744018, 0, 1.0};
Point(30) = {-0.036158, 0.742852, 0, 1.0};
Point(31) = {-0.037158, 0.741736, 0, 1.0};
Point(32) = {-0.037408, 0.740815, 0, 1.0};
Point(33) = {-0.036764, 0.739991, 0, 1.0};
Point(34) = {-0.035232, 0.739105, 0, 1.0};
Point(35) = {-0.032916, 0.738219, 0, 1.0};
Point(36) = {-0.029839, 0.737366, 0, 1.0};
Point(37) = {-0.026026, 0.736555, 0, 1.0};
Point(38) = {-0.021511, 0.735794, 0, 1.0};
Point(39) = {-0.016332, 0.735089, 0, 1.0};
Point(40) = {-0.010542, 0.734434, 0, 1.0};
Point(41) = {-0.004202, 0.733830, 0, 1.0};
Point(42) = {0.002621, 0.733275, 0, 1.0};
Point(43) = {0.009852, 0.732764, 0, 1.0};
Point(44) = {0.017406, 0.732295, 0, 1.0};
Point(45) = {0.025199, 0.731864, 0, 1.0};
Point(46) = {0.033141, 0.731473, 0, 1.0};
Point(47) = {0.041136, 0.731120, 0, 1.0};
Point(48) = {0.049092, 0.730804, 0, 1.0};
Point(49) = {0.056917, 0.730529, 0, 1.0};
Point(50) = {0.064519, 0.730296, 0, 1.0};
Point(51) = {0.071809, 0.730104, 0, 1.0};
Point(52) = {0.078700, 0.729956, 0, 1.0};
Point(53) = {0.085113, 0.729857, 0, 1.0};
Point(54) = {0.090971, 0.729808, 0, 1.0};
Point(55) = {0.096203, 0.729813, 0, 1.0};
Point(56) = {0.100747, 0.729889, 0, 1.0};
Point(57) = {0.104580, 0.730055, 0, 1.0};
Point(58) = {0.107713, 0.730277, 0, 1.0};
Point(59) = {0.110104, 0.730462, 0, 1.0};
Point(60) = {0.111635, 0.730547, 0, 1.0};
Point(61) = {-0.112166, -0.730561, 0, 1.0};
Point(62) = {-0.111627, -0.730611, 0, 1.0};
Point(63) = {-0.110041, -0.730803, 0, 1.0};
Point(64) = {-0.107483, -0.731200, 0, 1.0};
Point(65) = {-0.104042, -0.731817, 0, 1.0};
Point(66) = {-0.099792, -0.732647, 0, 1.0};
Point(67) = {-0.094802, -0.733689, 0, 1.0};
Point(68) = {-0.089164, -0.734950, 0, 1.0};
Point(69) = {-0.082996, -0.736416, 0, 1.0};
Point(70) = {-0.076410, -0.738051, 0, 1.0};
Point(71) = {-0.069523, -0.739806, 0, 1.0};
Point(72) = {-0.062444, -0.741619, 0, 1.0};
Point(73) = {-0.055275, -0.743414, 0, 1.0};
Point(74) = {-0.048105, -0.745098, 0, 1.0};
Point(75) = {-0.040971, -0.746565, 0, 1.0};
Point(76) = {-0.033869, -0.747766, 0, 1.0};
Point(77) = {-0.026821, -0.748694, 0, 1.0};
Point(78) = {-0.019852, -0.749359, 0, 1.0};
Point(79) = {-0.013011, -0.749785, 0, 1.0};
Point(80) = {-0.006376, -0.749998, 0, 1.0};
Point(81) = {-0.000011, -0.750000, 0, 1.0};
Point(82) = {0.006018, -0.749804, 0, 1.0};
Point(83) = {0.011649, -0.749417, 0, 1.0};
Point(84) = {0.016831, -0.748852, 0, 1.0};
Point(85) = {0.021514, -0.748123, 0, 1.0};
Point(86) = {0.025653, -0.747250, 0, 1.0};
Point(87) = {0.029216, -0.746256, 0, 1.0};
Point(88) = {0.032168, -0.745168, 0, 1.0};
Point(89) = {0.034487, -0.744018, 0, 1.0};
Point(90) = {0.036158, -0.742852, 0, 1.0};
Point(91) = {0.037158, -0.741736, 0, 1.0};
Point(92) = {0.037408, -0.740815, 0, 1.0};
Point(93) = {0.036764, -0.739991, 0, 1.0};
Point(94) = {0.035232, -0.739105, 0, 1.0};
Point(95) = {0.032916, -0.738219, 0, 1.0};
Point(96) = {0.029839, -0.737366, 0, 1.0};
Point(97) = {0.026026, -0.736555, 0, 1.0};
Point(98) = {0.021511, -0.735794, 0, 1.0};
Point(99) = {0.016332, -0.735089, 0, 1.0};
Point(100) = {0.010542, -0.734434, 0, 1.0};
Point(101) = {0.004202, -0.733830, 0, 1.0};
Point(102) = {-0.002621, -0.733275, 0, 1.0};
Point(103) = {-0.009852, -0.732764, 0, 1.0};
Point(104) = {-0.017406, -0.732295, 0, 1.0};
Point(105) = {-0.025199, -0.731864, 0, 1.0};
Point(106) = {-0.033141, -0.731473, 0, 1.0};
Point(107) = {-0.041136, -0.731120, 0, 1.0};
Point(108) = {-0.049092, -0.730804, 0, 1.0};
Point(109) = {-0.056917, -0.730529, 0, 1.0};
Point(110) = {-0.064519, -0.730296, 0, 1.0};
Point(111) = {-0.071809, -0.730104, 0, 1.0};
Point(112) = {-0.078700, -0.729956, 0, 1.0};
Point(113) = {-0.085113, -0.729857, 0, 1.0};
Point(114) = {-0.090971, -0.729808, 0, 1.0};
Point(115) = {-0.096203, -0.729813, 0, 1.0};
Point(116) = {-0.100747, -0.729889, 0, 1.0};
Point(117) = {-0.104580, -0.730055, 0, 1.0};
Point(118) = {-0.107713, -0.730277, 0, 1.0};
Point(119) = {-0.110104, -0.730462, 0, 1.0};
Point(120) = {-0.111635, -0.730547, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073538, 0.722854, 0, 1.0};
Point(2) = {0.072749, 0.723317, 0, 1.0};
Point(3) = {0.071187, 0.724235, 0, 1.0};
Point(4) = {0.068876, 0.725594, 0, 1.0};
Point(5) = {0.065856, 0.727368, 0, 1.0};
Point(6) = {0.062180, 0.729529, 0, 1.0};
Point(7) = {0.060115, 0.730743, 0, 1.0};
Point(8) = {0.057910, 0.732039, 0, 1.0};
Point(9) = {0.055575, 0.733411, 0, 1.0};
Point(10) = {0.053120, 0.734854, 0, 1.0};
Point(11) = {0.050554, 0.736362, 0, 1.0};
Point(12) = {0.047871, 0.737813, 0, 1.0};
Point(13) = {0.045093, 0.739272, 0, 1.0};
Point(14) = {0.042226, 0.740696, 0, 1.0};
Point(15) = {0.039286, 0.742099, 0, 1.0};
Point(16) = {0.036279, 0.743438, 0, 1.0};
Point(17) = {0.033218, 0.744710, 0, 1.0};
Point(18) = {0.030112, 0.745878, 0, 1.0};
Point(19) = {0.026977, 0.746959, 0, 1.0};
Point(20) = {0.023817, 0.747889, 0, 1.0};
Point(21) = {0.020648, 0.748682, 0, 1.0};
Point(22) = {0.017471, 0.749257, 0, 1.0};
Point(23) = {0.014311, 0.749678, 0, 1.0};
Point(24) = {0.011172, 0.749894, 0, 1.0};
Point(25) = {0.008086, 0.750000, 0, 1.0};
Point(26) = {0.005057, 0.749955, 0, 1.0};
Point(27) = {0.002107, 0.749807, 0, 1.0};
Point(28) = {-0.000755, 0.749540, 0, 1.0};
Point(29) = {-0.003513, 0.749172, 0, 1.0};
Point(30) = {-0.006153, 0.748713, 0, 1.0};
Point(31) = {-0.008665, 0.748170, 0, 1.0};
Point(32) = {-0.011037, 0.747542, 0, 1.0};
Point(33) = {-0.013257, 0.746853, 0, 1.0};
Point(34) = {-0.015313, 0.746104, 0, 1.0};
Point(35) = {-0.017198, 0.745307, 0, 1.0};
Point(36) = {-0.018902, 0.744474, 0, 1.0};
Point(37) = {-0.020411, 0.743629, 0, 1.0};
Point(38) = {-0.021724, 0.742768, 0, 1.0};
Point(39) = {-0.022817, 0.741980, 0, 1.0};
Point(40) = {-0.023698, 0.741215, 0, 1.0};
Point(41) = {-0.024359, 0.740494, 0, 1.0};
Point(42) = {-0.024787, 0.739876, 0, 1.0};
Point(43) = {-0.025000, 0.739252, 0, 1.0};
Point(44) = {-0.024987, 0.738682, 0, 1.0};
Point(45) = {-0.024734, 0.738245, 0, 1.0};
Point(46) = {-0.024241, 0.737960, 0, 1.0};
Point(47) = {-0.023522, 0.737755, 0, 1.0};
Point(48) = {-0.022588, 0.737590, 0, 1.0};
Point(49) = {-0.021448, 0.737416, 0, 1.0};
Point(50) = {-0.020102, 0.737281, 0, 1.0};
Point(51) = {-0.018562, 0.737134, 0, 1.0};
Point(52) = {-0.016834, 0.736992, 0, 1.0};
Point(53) = {-0.014927, 0.736846, 0, 1.0};
Point(54) = {-0.012848, 0.736691, 0, 1.0};
Point(55) = {-0.010608, 0.736523, 0, 1.0};
Point(56) = {-0.008215, 0.736353, 0, 1.0};
Point(57) = {-0.005683, 0.736163, 0, 1.0};
Point(58) = {-0.003020, 0.735967, 0, 1.0};
Point(59) = {-0.000238, 0.735756, 0, 1.0};
Point(60) = {0.002653, 0.735548, 0, 1.0};
Point(61) = {0.005636, 0.735315, 0, 1.0};
Point(62) = {0.008704, 0.735098, 0, 1.0};
Point(63) = {0.011840, 0.734872, 0, 1.0};
Point(64) = {0.015041, 0.734693, 0, 1.0};
Point(65) = {0.018287, 0.734527, 0, 1.0};
Point(66) = {0.021569, 0.734415, 0, 1.0};
Point(67) = {0.024856, 0.734245, 0, 1.0};
Point(68) = {0.028143, 0.734076, 0, 1.0};
Point(69) = {0.031407, 0.733858, 0, 1.0};
Point(70) = {0.034639, 0.733606, 0, 1.0};
Point(71) = {0.037815, 0.733283, 0, 1.0};
Point(72) = {0.040927, 0.732907, 0, 1.0};
Point(73) = {0.043955, 0.732451, 0, 1.0};
Point(74) = {0.046891, 0.731941, 0, 1.0};
Point(75) = {0.049719, 0.731355, 0, 1.0};
Point(76) = {0.052431, 0.730723, 0, 1.0};
Point(77) = {0.055012, 0.730033, 0, 1.0};
Point(78) = {0.057456, 0.729315, 0, 1.0};
Point(79) = {0.059752, 0.728567, 0, 1.0};
Point(80) = {0.061895, 0.727818, 0, 1.0};
Point(81) = {0.065688, 0.726362, 0, 1.0};
Point(82) = {0.068786, 0.725055, 0, 1.0};
Point(83) = {0.071146, 0.723989, 0, 1.0};
Point(84) = {0.072737, 0.723246, 0, 1.0};
Point(85) = {0.073538, 0.722855, 0, 1.0};
Point(86) = {-0.073538, -0.722854, 0, 1.0};
Point(87) = {-0.072749, -0.723317, 0, 1.0};
Point(88) = {-0.071187, -0.724235, 0, 1.0};
Point(89) = {-0.068876, -0.725594, 0, 1.0};
Point(90) = {-0.065856, -0.727368, 0, 1.0};
Point(91) = {-0.062180, -0.729529, 0, 1.0};
Point(92) = {-0.060115, -0.730743, 0, 1.0};
Point(93) = {-0.057910, -0.732039, 0, 1.0};
Point(94) = {-0.055575, -0.733411, 0, 1.0};
Point(95) = {-0.053120, -0.734854, 0, 1.0};
Point(96) = {-0.050554, -0.736362, 0, 1.0};
Point(97) = {-0.047871, -0.737813, 0, 1.0};
Point(98) = {-0.045093, -0.739272, 0, 1.0};
Point(99) = {-0.042226, -0.740696, 0, 1.0};
Point(100) = {-0.039286, -0.742099, 0, 1.0};
Point(101) = {-0.036279, -0.743438, 0, 1.0};
Point(102) = {-0.033218, -0.744710, 0, 1.0};
Point(103) = {-0.030112, -0.745878, 0, 1.0};
Point(104) = {-0.026977, -0.746959, 0, 1.0};
Point(105) = {-0.023817, -0.747889, 0, 1.0};
Point(106) = {-0.020648, -0.748682, 0, 1.0};
Point(107) = {-0.017471, -0.749257, 0, 1.0};
Point(108) = {-0.014311, -0.749678, 0, 1.0};
Point(109) = {-0.011172, -0.749894, 0, 1.0};
Point(110) = {-0.008086, -0.750000, 0, 1.0};
Point(111) = {-0.005057, -0.749955, 0, 1.0};
Point(112) = {-0.002107, -0.749807, 0, 1.0};
Point(113) = {0.000755, -0.749540, 0, 1.0};
Point(114) = {0.003513, -0.749172, 0, 1.0};
Point(115) = {0.006153, -0.748713, 0, 1.0};
Point(116) = {0.008665, -0.748170, 0, 1.0};
Point(117) = {0.011037, -0.747542, 0, 1.0};
Point(118) = {0.013257, -0.746853, 0, 1.0};
Point(119) = {0.015313, -0.746104, 0, 1.0};
Point(120) = {0.017198, -0.745307, 0, 1.0};
Point(121) = {0.018902, -0.744474, 0, 1.0};
Point(122) = {0.020411, -0.743629, 0, 1.0};
Point(123) = {0.021724, -0.742768, 0, 1.0};
Point(124) = {0.022817, -0.741980, 0, 1.0};
Point(125) = {0.023698, -0.741215, 0, 1.0};
Point(126) = {0.024359, -0.740494, 0, 1.0};
Point(127) = {0.024787, -0.739876, 0, 1.0};
Point(128) = {0.025000, -0.739252, 0, 1.0};
Point(129) = {0.024987, -0.738682, 0, 1.0};
Point(130) = {0.024734, -0.738245, 0, 1.0};
Point(131) = {0.024241, -0.737960, 0, 1.0};
Point(132) = {0.023522, -0.737755, 0, 1.0};
Point(133) = {0.022588, -0.737590, 0, 1.0};
Point(134) = {0.021448, -0.737416, 0, 1.0};
Point(135) = {0.020102, -0.737281, 0, 1.0};
Point(136) = {0.018562, -0.737134, 0, 1.0};
Point(137) = {0.016834, -0.736992, 0, 1.0};
Point(138) = {0.014927, -0.736846, 0, 1.0};
Point(139) = {0.012848, -0.736691, 0, 1.0};
Point(140) = {0.010608, -0.736523, 0, 1.0};
Point(141) = {0.008215, -0.736353, 0, 1.0};
Point(142) = {0.005683, -0.736163, 0, 1.0};
Point(143) = {0.003020, -0.735967, 0, 1.0};
Point(144) = {0.000238, -0.735756, 0, 1.0};
Point(145) = {-0.002653, -0.735548, 0, 1.0};
Point(146) = {-0.005636, -0.735315, 0, 1.0};
Point(147) = {-0.008704, -0.735098, 0, 1.0};
Point(148) = {-0.011840, -0.734872, 0, 1.0};
Point(149) = {-0.015041, -0.734693, 0, 1.0};
Point(150) = {-0.018287, -0.734527, 0, 1.0};
Point(151) = {-0.021569, -0.734415, 0, 1.0};
Point(152) = {-0.024856, -0.734245, 0, 1.0};
Point(153) = {-0.028143, -0.734076, 0, 1.0};
Point(154) = {-0.031407, -0.733858, 0, 1.0};
Point(155) = {-0.034639, -0.733606, 0, 1.0};
Point(156) = {-0.037815, -0.733283, 0, 1.0};
Point(157) = {-0.040927, -0.732907, 0, 1.0};
Point(158) = {-0.043955, -0.732451, 0, 1.0};
Point(159) = {-0.046891, -0.731941, 0, 1.0};
Point(160) = {-0.049719, -0.731355, 0, 1.0};
Point(161) = {-0.052431, -0.730723, 0, 1.0};
Point(162) = {-0.055012, -0.730033, 0, 1.0};
Point(163) = {-0.057456, -0.729315, 0, 1.0};
Point(164) = {-0.059752, -0.728567, 0, 1.0};
Point(165) = {-0.061895, -0.727818, 0, 1.0};
Point(166) = {-0.065688, -0.726362, 0, 1.0};
Point(167) = {-0.068786, -0.725055, 0, 1.0};
Point(168) = {-0.071146, -0.723989, 0, 1.0};
Point(169) = {-0.072737, -0.723246, 0, 1.0};
Point(170) = {-0.073538, -0.722855, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
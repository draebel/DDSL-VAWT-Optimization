SetFactory("OpenCASCADE");

Point(1) = {0.147076, 0.695707, 0, 1.0};
Point(2) = {0.145498, 0.696633, 0, 1.0};
Point(3) = {0.142374, 0.698471, 0, 1.0};
Point(4) = {0.137752, 0.701188, 0, 1.0};
Point(5) = {0.131712, 0.704737, 0, 1.0};
Point(6) = {0.124361, 0.709057, 0, 1.0};
Point(7) = {0.120230, 0.711486, 0, 1.0};
Point(8) = {0.115821, 0.714077, 0, 1.0};
Point(9) = {0.111150, 0.716821, 0, 1.0};
Point(10) = {0.106241, 0.719709, 0, 1.0};
Point(11) = {0.101109, 0.722724, 0, 1.0};
Point(12) = {0.095741, 0.725625, 0, 1.0};
Point(13) = {0.090186, 0.728543, 0, 1.0};
Point(14) = {0.084452, 0.731391, 0, 1.0};
Point(15) = {0.078572, 0.734197, 0, 1.0};
Point(16) = {0.072559, 0.736876, 0, 1.0};
Point(17) = {0.066436, 0.739420, 0, 1.0};
Point(18) = {0.060224, 0.741756, 0, 1.0};
Point(19) = {0.053954, 0.743917, 0, 1.0};
Point(20) = {0.047634, 0.745779, 0, 1.0};
Point(21) = {0.041296, 0.747363, 0, 1.0};
Point(22) = {0.034941, 0.748515, 0, 1.0};
Point(23) = {0.028621, 0.749356, 0, 1.0};
Point(24) = {0.022345, 0.749787, 0, 1.0};
Point(25) = {0.016172, 0.750000, 0, 1.0};
Point(26) = {0.010114, 0.749910, 0, 1.0};
Point(27) = {0.004213, 0.749615, 0, 1.0};
Point(28) = {-0.001511, 0.749079, 0, 1.0};
Point(29) = {-0.007025, 0.748345, 0, 1.0};
Point(30) = {-0.012306, 0.747425, 0, 1.0};
Point(31) = {-0.017330, 0.746339, 0, 1.0};
Point(32) = {-0.022075, 0.745083, 0, 1.0};
Point(33) = {-0.026514, 0.743707, 0, 1.0};
Point(34) = {-0.030627, 0.742207, 0, 1.0};
Point(35) = {-0.034396, 0.740614, 0, 1.0};
Point(36) = {-0.037803, 0.738948, 0, 1.0};
Point(37) = {-0.040822, 0.737258, 0, 1.0};
Point(38) = {-0.043447, 0.735536, 0, 1.0};
Point(39) = {-0.045635, 0.733961, 0, 1.0};
Point(40) = {-0.047397, 0.732430, 0, 1.0};
Point(41) = {-0.048718, 0.730988, 0, 1.0};
Point(42) = {-0.049575, 0.729752, 0, 1.0};
Point(43) = {-0.050000, 0.728505, 0, 1.0};
Point(44) = {-0.049973, 0.727365, 0, 1.0};
Point(45) = {-0.049468, 0.726490, 0, 1.0};
Point(46) = {-0.048483, 0.725920, 0, 1.0};
Point(47) = {-0.047045, 0.725509, 0, 1.0};
Point(48) = {-0.045175, 0.725179, 0, 1.0};
Point(49) = {-0.042896, 0.724831, 0, 1.0};
Point(50) = {-0.040203, 0.724563, 0, 1.0};
Point(51) = {-0.037124, 0.724268, 0, 1.0};
Point(52) = {-0.033667, 0.723983, 0, 1.0};
Point(53) = {-0.029853, 0.723692, 0, 1.0};
Point(54) = {-0.025696, 0.723381, 0, 1.0};
Point(55) = {-0.021216, 0.723045, 0, 1.0};
Point(56) = {-0.016431, 0.722705, 0, 1.0};
Point(57) = {-0.011366, 0.722326, 0, 1.0};
Point(58) = {-0.006040, 0.721935, 0, 1.0};
Point(59) = {-0.000476, 0.721511, 0, 1.0};
Point(60) = {0.005307, 0.721096, 0, 1.0};
Point(61) = {0.011271, 0.720630, 0, 1.0};
Point(62) = {0.017408, 0.720196, 0, 1.0};
Point(63) = {0.023681, 0.719744, 0, 1.0};
Point(64) = {0.030081, 0.719386, 0, 1.0};
Point(65) = {0.036573, 0.719055, 0, 1.0};
Point(66) = {0.043138, 0.718829, 0, 1.0};
Point(67) = {0.049712, 0.718491, 0, 1.0};
Point(68) = {0.056285, 0.718152, 0, 1.0};
Point(69) = {0.062815, 0.717716, 0, 1.0};
Point(70) = {0.069278, 0.717211, 0, 1.0};
Point(71) = {0.075630, 0.716565, 0, 1.0};
Point(72) = {0.081853, 0.715815, 0, 1.0};
Point(73) = {0.087910, 0.714902, 0, 1.0};
Point(74) = {0.093782, 0.713881, 0, 1.0};
Point(75) = {0.099438, 0.712711, 0, 1.0};
Point(76) = {0.104862, 0.711447, 0, 1.0};
Point(77) = {0.110023, 0.710067, 0, 1.0};
Point(78) = {0.114912, 0.708631, 0, 1.0};
Point(79) = {0.119504, 0.707134, 0, 1.0};
Point(80) = {0.123790, 0.705637, 0, 1.0};
Point(81) = {0.131376, 0.702724, 0, 1.0};
Point(82) = {0.137572, 0.700109, 0, 1.0};
Point(83) = {0.142292, 0.697977, 0, 1.0};
Point(84) = {0.145475, 0.696491, 0, 1.0};
Point(85) = {0.147076, 0.695709, 0, 1.0};
Point(86) = {-0.147076, -0.695707, 0, 1.0};
Point(87) = {-0.145498, -0.696633, 0, 1.0};
Point(88) = {-0.142374, -0.698471, 0, 1.0};
Point(89) = {-0.137752, -0.701188, 0, 1.0};
Point(90) = {-0.131712, -0.704737, 0, 1.0};
Point(91) = {-0.124361, -0.709057, 0, 1.0};
Point(92) = {-0.120230, -0.711486, 0, 1.0};
Point(93) = {-0.115821, -0.714077, 0, 1.0};
Point(94) = {-0.111150, -0.716821, 0, 1.0};
Point(95) = {-0.106241, -0.719709, 0, 1.0};
Point(96) = {-0.101109, -0.722724, 0, 1.0};
Point(97) = {-0.095741, -0.725625, 0, 1.0};
Point(98) = {-0.090186, -0.728543, 0, 1.0};
Point(99) = {-0.084452, -0.731391, 0, 1.0};
Point(100) = {-0.078572, -0.734197, 0, 1.0};
Point(101) = {-0.072559, -0.736876, 0, 1.0};
Point(102) = {-0.066436, -0.739420, 0, 1.0};
Point(103) = {-0.060224, -0.741756, 0, 1.0};
Point(104) = {-0.053954, -0.743917, 0, 1.0};
Point(105) = {-0.047634, -0.745779, 0, 1.0};
Point(106) = {-0.041296, -0.747363, 0, 1.0};
Point(107) = {-0.034941, -0.748515, 0, 1.0};
Point(108) = {-0.028621, -0.749356, 0, 1.0};
Point(109) = {-0.022345, -0.749787, 0, 1.0};
Point(110) = {-0.016172, -0.750000, 0, 1.0};
Point(111) = {-0.010114, -0.749910, 0, 1.0};
Point(112) = {-0.004213, -0.749615, 0, 1.0};
Point(113) = {0.001511, -0.749079, 0, 1.0};
Point(114) = {0.007025, -0.748345, 0, 1.0};
Point(115) = {0.012306, -0.747425, 0, 1.0};
Point(116) = {0.017330, -0.746339, 0, 1.0};
Point(117) = {0.022075, -0.745083, 0, 1.0};
Point(118) = {0.026514, -0.743707, 0, 1.0};
Point(119) = {0.030627, -0.742207, 0, 1.0};
Point(120) = {0.034396, -0.740614, 0, 1.0};
Point(121) = {0.037803, -0.738948, 0, 1.0};
Point(122) = {0.040822, -0.737258, 0, 1.0};
Point(123) = {0.043447, -0.735536, 0, 1.0};
Point(124) = {0.045635, -0.733961, 0, 1.0};
Point(125) = {0.047397, -0.732430, 0, 1.0};
Point(126) = {0.048718, -0.730988, 0, 1.0};
Point(127) = {0.049575, -0.729752, 0, 1.0};
Point(128) = {0.050000, -0.728505, 0, 1.0};
Point(129) = {0.049973, -0.727365, 0, 1.0};
Point(130) = {0.049468, -0.726490, 0, 1.0};
Point(131) = {0.048483, -0.725920, 0, 1.0};
Point(132) = {0.047045, -0.725509, 0, 1.0};
Point(133) = {0.045175, -0.725179, 0, 1.0};
Point(134) = {0.042896, -0.724831, 0, 1.0};
Point(135) = {0.040203, -0.724563, 0, 1.0};
Point(136) = {0.037124, -0.724268, 0, 1.0};
Point(137) = {0.033667, -0.723983, 0, 1.0};
Point(138) = {0.029853, -0.723692, 0, 1.0};
Point(139) = {0.025696, -0.723381, 0, 1.0};
Point(140) = {0.021216, -0.723045, 0, 1.0};
Point(141) = {0.016431, -0.722705, 0, 1.0};
Point(142) = {0.011366, -0.722326, 0, 1.0};
Point(143) = {0.006040, -0.721935, 0, 1.0};
Point(144) = {0.000476, -0.721511, 0, 1.0};
Point(145) = {-0.005307, -0.721096, 0, 1.0};
Point(146) = {-0.011271, -0.720630, 0, 1.0};
Point(147) = {-0.017408, -0.720196, 0, 1.0};
Point(148) = {-0.023681, -0.719744, 0, 1.0};
Point(149) = {-0.030081, -0.719386, 0, 1.0};
Point(150) = {-0.036573, -0.719055, 0, 1.0};
Point(151) = {-0.043138, -0.718829, 0, 1.0};
Point(152) = {-0.049712, -0.718491, 0, 1.0};
Point(153) = {-0.056285, -0.718152, 0, 1.0};
Point(154) = {-0.062815, -0.717716, 0, 1.0};
Point(155) = {-0.069278, -0.717211, 0, 1.0};
Point(156) = {-0.075630, -0.716565, 0, 1.0};
Point(157) = {-0.081853, -0.715815, 0, 1.0};
Point(158) = {-0.087910, -0.714902, 0, 1.0};
Point(159) = {-0.093782, -0.713881, 0, 1.0};
Point(160) = {-0.099438, -0.712711, 0, 1.0};
Point(161) = {-0.104862, -0.711447, 0, 1.0};
Point(162) = {-0.110023, -0.710067, 0, 1.0};
Point(163) = {-0.114912, -0.708631, 0, 1.0};
Point(164) = {-0.119504, -0.707134, 0, 1.0};
Point(165) = {-0.123790, -0.705637, 0, 1.0};
Point(166) = {-0.131376, -0.702724, 0, 1.0};
Point(167) = {-0.137572, -0.700109, 0, 1.0};
Point(168) = {-0.142292, -0.697977, 0, 1.0};
Point(169) = {-0.145475, -0.696491, 0, 1.0};
Point(170) = {-0.147076, -0.695709, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
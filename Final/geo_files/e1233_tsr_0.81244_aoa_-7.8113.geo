SetFactory("OpenCASCADE");

Point(1) = {0.074020, 0.743331, 0, 1.0};
Point(2) = {0.073725, 0.743415, 0, 1.0};
Point(3) = {0.071842, 0.743902, 0, 1.0};
Point(4) = {0.069683, 0.744359, 0, 1.0};
Point(5) = {0.067218, 0.744781, 0, 1.0};
Point(6) = {0.064444, 0.745189, 0, 1.0};
Point(7) = {0.061380, 0.745593, 0, 1.0};
Point(8) = {0.058044, 0.745995, 0, 1.0};
Point(9) = {0.054452, 0.746392, 0, 1.0};
Point(10) = {0.050629, 0.746789, 0, 1.0};
Point(11) = {0.046594, 0.747181, 0, 1.0};
Point(12) = {0.042370, 0.747567, 0, 1.0};
Point(13) = {0.037980, 0.747943, 0, 1.0};
Point(14) = {0.033451, 0.748306, 0, 1.0};
Point(15) = {0.028804, 0.748649, 0, 1.0};
Point(16) = {0.024065, 0.748968, 0, 1.0};
Point(17) = {0.019260, 0.749257, 0, 1.0};
Point(18) = {0.014412, 0.749508, 0, 1.0};
Point(19) = {0.009544, 0.749716, 0, 1.0};
Point(20) = {0.004681, 0.749872, 0, 1.0};
Point(21) = {-0.000155, 0.749969, 0, 1.0};
Point(22) = {-0.004943, 0.750000, 0, 1.0};
Point(23) = {-0.009662, 0.749956, 0, 1.0};
Point(24) = {-0.014293, 0.749832, 0, 1.0};
Point(25) = {-0.018817, 0.749620, 0, 1.0};
Point(26) = {-0.023219, 0.749312, 0, 1.0};
Point(27) = {-0.027479, 0.748904, 0, 1.0};
Point(28) = {-0.031584, 0.748387, 0, 1.0};
Point(29) = {-0.035525, 0.747753, 0, 1.0};
Point(30) = {-0.039295, 0.746999, 0, 1.0};
Point(31) = {-0.042887, 0.746121, 0, 1.0};
Point(32) = {-0.046299, 0.745118, 0, 1.0};
Point(33) = {-0.049532, 0.743995, 0, 1.0};
Point(34) = {-0.052583, 0.742760, 0, 1.0};
Point(35) = {-0.055453, 0.741420, 0, 1.0};
Point(36) = {-0.058142, 0.739988, 0, 1.0};
Point(37) = {-0.060649, 0.738483, 0, 1.0};
Point(38) = {-0.062966, 0.736924, 0, 1.0};
Point(39) = {-0.065088, 0.735327, 0, 1.0};
Point(40) = {-0.067005, 0.733706, 0, 1.0};
Point(41) = {-0.068711, 0.732074, 0, 1.0};
Point(42) = {-0.070199, 0.730447, 0, 1.0};
Point(43) = {-0.071466, 0.728841, 0, 1.0};
Point(44) = {-0.072508, 0.727267, 0, 1.0};
Point(45) = {-0.073321, 0.725744, 0, 1.0};
Point(46) = {-0.074155, 0.723131, 0, 1.0};
Point(47) = {-0.074350, 0.721936, 0, 1.0};
Point(48) = {-0.074304, 0.720876, 0, 1.0};
Point(49) = {-0.073994, 0.720027, 0, 1.0};
Point(50) = {-0.073309, 0.719357, 0, 1.0};
Point(51) = {-0.072219, 0.718764, 0, 1.0};
Point(52) = {-0.070805, 0.718240, 0, 1.0};
Point(53) = {-0.069088, 0.717796, 0, 1.0};
Point(54) = {-0.067081, 0.717449, 0, 1.0};
Point(55) = {-0.064780, 0.717208, 0, 1.0};
Point(56) = {-0.062186, 0.717067, 0, 1.0};
Point(57) = {-0.059306, 0.717018, 0, 1.0};
Point(58) = {-0.056155, 0.717054, 0, 1.0};
Point(59) = {-0.052748, 0.717169, 0, 1.0};
Point(60) = {-0.049103, 0.717362, 0, 1.0};
Point(61) = {-0.045241, 0.717627, 0, 1.0};
Point(62) = {-0.041179, 0.717963, 0, 1.0};
Point(63) = {-0.036938, 0.718368, 0, 1.0};
Point(64) = {-0.032539, 0.718841, 0, 1.0};
Point(65) = {-0.028003, 0.719378, 0, 1.0};
Point(66) = {-0.023353, 0.719980, 0, 1.0};
Point(67) = {-0.018611, 0.720644, 0, 1.0};
Point(68) = {-0.013801, 0.721371, 0, 1.0};
Point(69) = {-0.008946, 0.722160, 0, 1.0};
Point(70) = {-0.004069, 0.723018, 0, 1.0};
Point(71) = {0.000808, 0.723953, 0, 1.0};
Point(72) = {0.005678, 0.724969, 0, 1.0};
Point(73) = {0.010531, 0.726067, 0, 1.0};
Point(74) = {0.015357, 0.727238, 0, 1.0};
Point(75) = {0.020145, 0.728480, 0, 1.0};
Point(76) = {0.024884, 0.729786, 0, 1.0};
Point(77) = {0.029571, 0.731159, 0, 1.0};
Point(78) = {0.034229, 0.732574, 0, 1.0};
Point(79) = {0.038851, 0.733981, 0, 1.0};
Point(80) = {0.043407, 0.735336, 0, 1.0};
Point(81) = {0.047859, 0.736607, 0, 1.0};
Point(82) = {0.052168, 0.737771, 0, 1.0};
Point(83) = {0.056294, 0.738807, 0, 1.0};
Point(84) = {0.060193, 0.739701, 0, 1.0};
Point(85) = {0.063826, 0.740444, 0, 1.0};
Point(86) = {0.067149, 0.741034, 0, 1.0};
Point(87) = {0.070120, 0.741468, 0, 1.0};
Point(88) = {0.072693, 0.741758, 0, 1.0};
Point(89) = {0.074218, 0.741890, 0, 1.0};
Point(90) = {-0.074020, -0.743331, 0, 1.0};
Point(91) = {-0.073725, -0.743415, 0, 1.0};
Point(92) = {-0.071842, -0.743902, 0, 1.0};
Point(93) = {-0.069683, -0.744359, 0, 1.0};
Point(94) = {-0.067218, -0.744781, 0, 1.0};
Point(95) = {-0.064444, -0.745189, 0, 1.0};
Point(96) = {-0.061380, -0.745593, 0, 1.0};
Point(97) = {-0.058044, -0.745995, 0, 1.0};
Point(98) = {-0.054452, -0.746392, 0, 1.0};
Point(99) = {-0.050629, -0.746789, 0, 1.0};
Point(100) = {-0.046594, -0.747181, 0, 1.0};
Point(101) = {-0.042370, -0.747567, 0, 1.0};
Point(102) = {-0.037980, -0.747943, 0, 1.0};
Point(103) = {-0.033451, -0.748306, 0, 1.0};
Point(104) = {-0.028804, -0.748649, 0, 1.0};
Point(105) = {-0.024065, -0.748968, 0, 1.0};
Point(106) = {-0.019260, -0.749257, 0, 1.0};
Point(107) = {-0.014412, -0.749508, 0, 1.0};
Point(108) = {-0.009544, -0.749716, 0, 1.0};
Point(109) = {-0.004681, -0.749872, 0, 1.0};
Point(110) = {0.000155, -0.749969, 0, 1.0};
Point(111) = {0.004943, -0.750000, 0, 1.0};
Point(112) = {0.009662, -0.749956, 0, 1.0};
Point(113) = {0.014293, -0.749832, 0, 1.0};
Point(114) = {0.018817, -0.749620, 0, 1.0};
Point(115) = {0.023219, -0.749312, 0, 1.0};
Point(116) = {0.027479, -0.748904, 0, 1.0};
Point(117) = {0.031584, -0.748387, 0, 1.0};
Point(118) = {0.035525, -0.747753, 0, 1.0};
Point(119) = {0.039295, -0.746999, 0, 1.0};
Point(120) = {0.042887, -0.746121, 0, 1.0};
Point(121) = {0.046299, -0.745118, 0, 1.0};
Point(122) = {0.049532, -0.743995, 0, 1.0};
Point(123) = {0.052583, -0.742760, 0, 1.0};
Point(124) = {0.055453, -0.741420, 0, 1.0};
Point(125) = {0.058142, -0.739988, 0, 1.0};
Point(126) = {0.060649, -0.738483, 0, 1.0};
Point(127) = {0.062966, -0.736924, 0, 1.0};
Point(128) = {0.065088, -0.735327, 0, 1.0};
Point(129) = {0.067005, -0.733706, 0, 1.0};
Point(130) = {0.068711, -0.732074, 0, 1.0};
Point(131) = {0.070199, -0.730447, 0, 1.0};
Point(132) = {0.071466, -0.728841, 0, 1.0};
Point(133) = {0.072508, -0.727267, 0, 1.0};
Point(134) = {0.073321, -0.725744, 0, 1.0};
Point(135) = {0.074155, -0.723131, 0, 1.0};
Point(136) = {0.074350, -0.721936, 0, 1.0};
Point(137) = {0.074304, -0.720876, 0, 1.0};
Point(138) = {0.073994, -0.720027, 0, 1.0};
Point(139) = {0.073309, -0.719357, 0, 1.0};
Point(140) = {0.072219, -0.718764, 0, 1.0};
Point(141) = {0.070805, -0.718240, 0, 1.0};
Point(142) = {0.069088, -0.717796, 0, 1.0};
Point(143) = {0.067081, -0.717449, 0, 1.0};
Point(144) = {0.064780, -0.717208, 0, 1.0};
Point(145) = {0.062186, -0.717067, 0, 1.0};
Point(146) = {0.059306, -0.717018, 0, 1.0};
Point(147) = {0.056155, -0.717054, 0, 1.0};
Point(148) = {0.052748, -0.717169, 0, 1.0};
Point(149) = {0.049103, -0.717362, 0, 1.0};
Point(150) = {0.045241, -0.717627, 0, 1.0};
Point(151) = {0.041179, -0.717963, 0, 1.0};
Point(152) = {0.036938, -0.718368, 0, 1.0};
Point(153) = {0.032539, -0.718841, 0, 1.0};
Point(154) = {0.028003, -0.719378, 0, 1.0};
Point(155) = {0.023353, -0.719980, 0, 1.0};
Point(156) = {0.018611, -0.720644, 0, 1.0};
Point(157) = {0.013801, -0.721371, 0, 1.0};
Point(158) = {0.008946, -0.722160, 0, 1.0};
Point(159) = {0.004069, -0.723018, 0, 1.0};
Point(160) = {-0.000808, -0.723953, 0, 1.0};
Point(161) = {-0.005678, -0.724969, 0, 1.0};
Point(162) = {-0.010531, -0.726067, 0, 1.0};
Point(163) = {-0.015357, -0.727238, 0, 1.0};
Point(164) = {-0.020145, -0.728480, 0, 1.0};
Point(165) = {-0.024884, -0.729786, 0, 1.0};
Point(166) = {-0.029571, -0.731159, 0, 1.0};
Point(167) = {-0.034229, -0.732574, 0, 1.0};
Point(168) = {-0.038851, -0.733981, 0, 1.0};
Point(169) = {-0.043407, -0.735336, 0, 1.0};
Point(170) = {-0.047859, -0.736607, 0, 1.0};
Point(171) = {-0.052168, -0.737771, 0, 1.0};
Point(172) = {-0.056294, -0.738807, 0, 1.0};
Point(173) = {-0.060193, -0.739701, 0, 1.0};
Point(174) = {-0.063826, -0.740444, 0, 1.0};
Point(175) = {-0.067149, -0.741034, 0, 1.0};
Point(176) = {-0.070120, -0.741468, 0, 1.0};
Point(177) = {-0.072693, -0.741758, 0, 1.0};
Point(178) = {-0.074218, -0.741890, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:64};
Spline(3) = {64:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:153};
Spline(7) = {153:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
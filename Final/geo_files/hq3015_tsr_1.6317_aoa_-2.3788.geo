SetFactory("OpenCASCADE");

Point(1) = {0.149828, 0.734317, 0, 1.0};
Point(2) = {0.144786, 0.735219, 0, 1.0};
Point(3) = {0.139741, 0.736206, 0, 1.0};
Point(4) = {0.134695, 0.737204, 0, 1.0};
Point(5) = {0.129651, 0.738157, 0, 1.0};
Point(6) = {0.124606, 0.739126, 0, 1.0};
Point(7) = {0.119562, 0.740088, 0, 1.0};
Point(8) = {0.114518, 0.741055, 0, 1.0};
Point(9) = {0.109473, 0.742017, 0, 1.0};
Point(10) = {0.099389, 0.743838, 0, 1.0};
Point(11) = {0.089311, 0.745499, 0, 1.0};
Point(12) = {0.079243, 0.746946, 0, 1.0};
Point(13) = {0.069183, 0.748170, 0, 1.0};
Point(14) = {0.059136, 0.749104, 0, 1.0};
Point(15) = {0.049102, 0.749718, 0, 1.0};
Point(16) = {0.039081, 0.750000, 0, 1.0};
Point(17) = {0.029074, 0.749959, 0, 1.0};
Point(18) = {0.024076, 0.749823, 0, 1.0};
Point(19) = {0.019080, 0.749603, 0, 1.0};
Point(20) = {0.014089, 0.749290, 0, 1.0};
Point(21) = {0.009102, 0.748877, 0, 1.0};
Point(22) = {0.004119, 0.748373, 0, 1.0};
Point(23) = {-0.000861, 0.747784, 0, 1.0};
Point(24) = {-0.005837, 0.747101, 0, 1.0};
Point(25) = {-0.010808, 0.746290, 0, 1.0};
Point(26) = {-0.015772, 0.745323, 0, 1.0};
Point(27) = {-0.020729, 0.744184, 0, 1.0};
Point(28) = {-0.025678, 0.742848, 0, 1.0};
Point(29) = {-0.030615, 0.741244, 0, 1.0};
Point(30) = {-0.035538, 0.739284, 0, 1.0};
Point(31) = {-0.040439, 0.736798, 0, 1.0};
Point(32) = {-0.042878, 0.735271, 0, 1.0};
Point(33) = {-0.045304, 0.733449, 0, 1.0};
Point(34) = {-0.046511, 0.732370, 0, 1.0};
Point(35) = {-0.047709, 0.731093, 0, 1.0};
Point(36) = {-0.048422, 0.730181, 0, 1.0};
Point(37) = {-0.049124, 0.729021, 0, 1.0};
Point(38) = {-0.049580, 0.727961, 0, 1.0};
Point(39) = {-0.050000, 0.726016, 0, 1.0};
Point(40) = {-0.049450, 0.724834, 0, 1.0};
Point(41) = {-0.048927, 0.724289, 0, 1.0};
Point(42) = {-0.048151, 0.723659, 0, 1.0};
Point(43) = {-0.047379, 0.723156, 0, 1.0};
Point(44) = {-0.046101, 0.722501, 0, 1.0};
Point(45) = {-0.044830, 0.722023, 0, 1.0};
Point(46) = {-0.042298, 0.721302, 0, 1.0};
Point(47) = {-0.039774, 0.720784, 0, 1.0};
Point(48) = {-0.034739, 0.720054, 0, 1.0};
Point(49) = {-0.029715, 0.719566, 0, 1.0};
Point(50) = {-0.024696, 0.719226, 0, 1.0};
Point(51) = {-0.019683, 0.719006, 0, 1.0};
Point(52) = {-0.014674, 0.718892, 0, 1.0};
Point(53) = {-0.009668, 0.718864, 0, 1.0};
Point(54) = {-0.004666, 0.718899, 0, 1.0};
Point(55) = {0.000335, 0.718985, 0, 1.0};
Point(56) = {0.005334, 0.719117, 0, 1.0};
Point(57) = {0.010332, 0.719272, 0, 1.0};
Point(58) = {0.015329, 0.719450, 0, 1.0};
Point(59) = {0.020324, 0.719663, 0, 1.0};
Point(60) = {0.025316, 0.719965, 0, 1.0};
Point(61) = {0.030304, 0.720358, 0, 1.0};
Point(62) = {0.040272, 0.721335, 0, 1.0};
Point(63) = {0.050230, 0.722547, 0, 1.0};
Point(64) = {0.060181, 0.723935, 0, 1.0};
Point(65) = {0.070126, 0.725465, 0, 1.0};
Point(66) = {0.080068, 0.727073, 0, 1.0};
Point(67) = {0.090010, 0.728678, 0, 1.0};
Point(68) = {0.099955, 0.730222, 0, 1.0};
Point(69) = {0.109905, 0.731620, 0, 1.0};
Point(70) = {0.114884, 0.732227, 0, 1.0};
Point(71) = {0.119867, 0.732758, 0, 1.0};
Point(72) = {0.124853, 0.733184, 0, 1.0};
Point(73) = {0.129843, 0.733541, 0, 1.0};
Point(74) = {0.134837, 0.733792, 0, 1.0};
Point(75) = {0.139830, 0.734054, 0, 1.0};
Point(76) = {0.144827, 0.734230, 0, 1.0};
Point(77) = {-0.149828, -0.734317, 0, 1.0};
Point(78) = {-0.144786, -0.735219, 0, 1.0};
Point(79) = {-0.139741, -0.736206, 0, 1.0};
Point(80) = {-0.134695, -0.737204, 0, 1.0};
Point(81) = {-0.129651, -0.738157, 0, 1.0};
Point(82) = {-0.124606, -0.739126, 0, 1.0};
Point(83) = {-0.119562, -0.740088, 0, 1.0};
Point(84) = {-0.114518, -0.741055, 0, 1.0};
Point(85) = {-0.109473, -0.742017, 0, 1.0};
Point(86) = {-0.099389, -0.743838, 0, 1.0};
Point(87) = {-0.089311, -0.745499, 0, 1.0};
Point(88) = {-0.079243, -0.746946, 0, 1.0};
Point(89) = {-0.069183, -0.748170, 0, 1.0};
Point(90) = {-0.059136, -0.749104, 0, 1.0};
Point(91) = {-0.049102, -0.749718, 0, 1.0};
Point(92) = {-0.039081, -0.750000, 0, 1.0};
Point(93) = {-0.029074, -0.749959, 0, 1.0};
Point(94) = {-0.024076, -0.749823, 0, 1.0};
Point(95) = {-0.019080, -0.749603, 0, 1.0};
Point(96) = {-0.014089, -0.749290, 0, 1.0};
Point(97) = {-0.009102, -0.748877, 0, 1.0};
Point(98) = {-0.004119, -0.748373, 0, 1.0};
Point(99) = {0.000861, -0.747784, 0, 1.0};
Point(100) = {0.005837, -0.747101, 0, 1.0};
Point(101) = {0.010808, -0.746290, 0, 1.0};
Point(102) = {0.015772, -0.745323, 0, 1.0};
Point(103) = {0.020729, -0.744184, 0, 1.0};
Point(104) = {0.025678, -0.742848, 0, 1.0};
Point(105) = {0.030615, -0.741244, 0, 1.0};
Point(106) = {0.035538, -0.739284, 0, 1.0};
Point(107) = {0.040439, -0.736798, 0, 1.0};
Point(108) = {0.042878, -0.735271, 0, 1.0};
Point(109) = {0.045304, -0.733449, 0, 1.0};
Point(110) = {0.046511, -0.732370, 0, 1.0};
Point(111) = {0.047709, -0.731093, 0, 1.0};
Point(112) = {0.048422, -0.730181, 0, 1.0};
Point(113) = {0.049124, -0.729021, 0, 1.0};
Point(114) = {0.049580, -0.727961, 0, 1.0};
Point(115) = {0.050000, -0.726016, 0, 1.0};
Point(116) = {0.049450, -0.724834, 0, 1.0};
Point(117) = {0.048927, -0.724289, 0, 1.0};
Point(118) = {0.048151, -0.723659, 0, 1.0};
Point(119) = {0.047379, -0.723156, 0, 1.0};
Point(120) = {0.046101, -0.722501, 0, 1.0};
Point(121) = {0.044830, -0.722023, 0, 1.0};
Point(122) = {0.042298, -0.721302, 0, 1.0};
Point(123) = {0.039774, -0.720784, 0, 1.0};
Point(124) = {0.034739, -0.720054, 0, 1.0};
Point(125) = {0.029715, -0.719566, 0, 1.0};
Point(126) = {0.024696, -0.719226, 0, 1.0};
Point(127) = {0.019683, -0.719006, 0, 1.0};
Point(128) = {0.014674, -0.718892, 0, 1.0};
Point(129) = {0.009668, -0.718864, 0, 1.0};
Point(130) = {0.004666, -0.718899, 0, 1.0};
Point(131) = {-0.000335, -0.718985, 0, 1.0};
Point(132) = {-0.005334, -0.719117, 0, 1.0};
Point(133) = {-0.010332, -0.719272, 0, 1.0};
Point(134) = {-0.015329, -0.719450, 0, 1.0};
Point(135) = {-0.020324, -0.719663, 0, 1.0};
Point(136) = {-0.025316, -0.719965, 0, 1.0};
Point(137) = {-0.030304, -0.720358, 0, 1.0};
Point(138) = {-0.040272, -0.721335, 0, 1.0};
Point(139) = {-0.050230, -0.722547, 0, 1.0};
Point(140) = {-0.060181, -0.723935, 0, 1.0};
Point(141) = {-0.070126, -0.725465, 0, 1.0};
Point(142) = {-0.080068, -0.727073, 0, 1.0};
Point(143) = {-0.090010, -0.728678, 0, 1.0};
Point(144) = {-0.099955, -0.730222, 0, 1.0};
Point(145) = {-0.109905, -0.731620, 0, 1.0};
Point(146) = {-0.114884, -0.732227, 0, 1.0};
Point(147) = {-0.119867, -0.732758, 0, 1.0};
Point(148) = {-0.124853, -0.733184, 0, 1.0};
Point(149) = {-0.129843, -0.733541, 0, 1.0};
Point(150) = {-0.134837, -0.733792, 0, 1.0};
Point(151) = {-0.139830, -0.734054, 0, 1.0};
Point(152) = {-0.144827, -0.734230, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
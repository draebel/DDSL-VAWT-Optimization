SetFactory("OpenCASCADE");

Point(1) = {0.074914, 0.742159, 0, 1.0};
Point(2) = {0.072393, 0.742609, 0, 1.0};
Point(3) = {0.069870, 0.743103, 0, 1.0};
Point(4) = {0.067347, 0.743602, 0, 1.0};
Point(5) = {0.064825, 0.744079, 0, 1.0};
Point(6) = {0.062303, 0.744563, 0, 1.0};
Point(7) = {0.059781, 0.745044, 0, 1.0};
Point(8) = {0.057259, 0.745528, 0, 1.0};
Point(9) = {0.054737, 0.746008, 0, 1.0};
Point(10) = {0.049695, 0.746919, 0, 1.0};
Point(11) = {0.044656, 0.747749, 0, 1.0};
Point(12) = {0.039621, 0.748473, 0, 1.0};
Point(13) = {0.034592, 0.749085, 0, 1.0};
Point(14) = {0.029568, 0.749552, 0, 1.0};
Point(15) = {0.024551, 0.749859, 0, 1.0};
Point(16) = {0.019541, 0.750000, 0, 1.0};
Point(17) = {0.014537, 0.749979, 0, 1.0};
Point(18) = {0.012038, 0.749912, 0, 1.0};
Point(19) = {0.009540, 0.749802, 0, 1.0};
Point(20) = {0.007045, 0.749645, 0, 1.0};
Point(21) = {0.004551, 0.749438, 0, 1.0};
Point(22) = {0.002059, 0.749187, 0, 1.0};
Point(23) = {-0.000431, 0.748892, 0, 1.0};
Point(24) = {-0.002919, 0.748551, 0, 1.0};
Point(25) = {-0.005404, 0.748145, 0, 1.0};
Point(26) = {-0.007886, 0.747662, 0, 1.0};
Point(27) = {-0.010364, 0.747092, 0, 1.0};
Point(28) = {-0.012839, 0.746424, 0, 1.0};
Point(29) = {-0.015308, 0.745622, 0, 1.0};
Point(30) = {-0.017769, 0.744642, 0, 1.0};
Point(31) = {-0.020220, 0.743399, 0, 1.0};
Point(32) = {-0.021439, 0.742636, 0, 1.0};
Point(33) = {-0.022652, 0.741725, 0, 1.0};
Point(34) = {-0.023255, 0.741185, 0, 1.0};
Point(35) = {-0.023854, 0.740547, 0, 1.0};
Point(36) = {-0.024211, 0.740090, 0, 1.0};
Point(37) = {-0.024562, 0.739510, 0, 1.0};
Point(38) = {-0.024790, 0.738980, 0, 1.0};
Point(39) = {-0.025000, 0.738008, 0, 1.0};
Point(40) = {-0.024725, 0.737417, 0, 1.0};
Point(41) = {-0.024464, 0.737144, 0, 1.0};
Point(42) = {-0.024075, 0.736829, 0, 1.0};
Point(43) = {-0.023690, 0.736578, 0, 1.0};
Point(44) = {-0.023050, 0.736250, 0, 1.0};
Point(45) = {-0.022415, 0.736012, 0, 1.0};
Point(46) = {-0.021149, 0.735651, 0, 1.0};
Point(47) = {-0.019887, 0.735392, 0, 1.0};
Point(48) = {-0.017370, 0.735027, 0, 1.0};
Point(49) = {-0.014857, 0.734783, 0, 1.0};
Point(50) = {-0.012348, 0.734613, 0, 1.0};
Point(51) = {-0.009841, 0.734503, 0, 1.0};
Point(52) = {-0.007337, 0.734446, 0, 1.0};
Point(53) = {-0.004834, 0.734432, 0, 1.0};
Point(54) = {-0.002333, 0.734450, 0, 1.0};
Point(55) = {0.000168, 0.734493, 0, 1.0};
Point(56) = {0.002667, 0.734558, 0, 1.0};
Point(57) = {0.005166, 0.734636, 0, 1.0};
Point(58) = {0.007664, 0.734725, 0, 1.0};
Point(59) = {0.010162, 0.734832, 0, 1.0};
Point(60) = {0.012658, 0.734982, 0, 1.0};
Point(61) = {0.015152, 0.735179, 0, 1.0};
Point(62) = {0.020136, 0.735667, 0, 1.0};
Point(63) = {0.025115, 0.736274, 0, 1.0};
Point(64) = {0.030091, 0.736968, 0, 1.0};
Point(65) = {0.035063, 0.737733, 0, 1.0};
Point(66) = {0.040034, 0.738537, 0, 1.0};
Point(67) = {0.045005, 0.739339, 0, 1.0};
Point(68) = {0.049977, 0.740111, 0, 1.0};
Point(69) = {0.054953, 0.740810, 0, 1.0};
Point(70) = {0.057442, 0.741114, 0, 1.0};
Point(71) = {0.059933, 0.741379, 0, 1.0};
Point(72) = {0.062427, 0.741592, 0, 1.0};
Point(73) = {0.064921, 0.741771, 0, 1.0};
Point(74) = {0.067418, 0.741896, 0, 1.0};
Point(75) = {0.069915, 0.742027, 0, 1.0};
Point(76) = {0.072413, 0.742115, 0, 1.0};
Point(77) = {-0.074914, -0.742159, 0, 1.0};
Point(78) = {-0.072393, -0.742609, 0, 1.0};
Point(79) = {-0.069870, -0.743103, 0, 1.0};
Point(80) = {-0.067347, -0.743602, 0, 1.0};
Point(81) = {-0.064825, -0.744079, 0, 1.0};
Point(82) = {-0.062303, -0.744563, 0, 1.0};
Point(83) = {-0.059781, -0.745044, 0, 1.0};
Point(84) = {-0.057259, -0.745528, 0, 1.0};
Point(85) = {-0.054737, -0.746008, 0, 1.0};
Point(86) = {-0.049695, -0.746919, 0, 1.0};
Point(87) = {-0.044656, -0.747749, 0, 1.0};
Point(88) = {-0.039621, -0.748473, 0, 1.0};
Point(89) = {-0.034592, -0.749085, 0, 1.0};
Point(90) = {-0.029568, -0.749552, 0, 1.0};
Point(91) = {-0.024551, -0.749859, 0, 1.0};
Point(92) = {-0.019541, -0.750000, 0, 1.0};
Point(93) = {-0.014537, -0.749979, 0, 1.0};
Point(94) = {-0.012038, -0.749912, 0, 1.0};
Point(95) = {-0.009540, -0.749802, 0, 1.0};
Point(96) = {-0.007045, -0.749645, 0, 1.0};
Point(97) = {-0.004551, -0.749438, 0, 1.0};
Point(98) = {-0.002059, -0.749187, 0, 1.0};
Point(99) = {0.000431, -0.748892, 0, 1.0};
Point(100) = {0.002919, -0.748551, 0, 1.0};
Point(101) = {0.005404, -0.748145, 0, 1.0};
Point(102) = {0.007886, -0.747662, 0, 1.0};
Point(103) = {0.010364, -0.747092, 0, 1.0};
Point(104) = {0.012839, -0.746424, 0, 1.0};
Point(105) = {0.015308, -0.745622, 0, 1.0};
Point(106) = {0.017769, -0.744642, 0, 1.0};
Point(107) = {0.020220, -0.743399, 0, 1.0};
Point(108) = {0.021439, -0.742636, 0, 1.0};
Point(109) = {0.022652, -0.741725, 0, 1.0};
Point(110) = {0.023255, -0.741185, 0, 1.0};
Point(111) = {0.023854, -0.740547, 0, 1.0};
Point(112) = {0.024211, -0.740090, 0, 1.0};
Point(113) = {0.024562, -0.739510, 0, 1.0};
Point(114) = {0.024790, -0.738980, 0, 1.0};
Point(115) = {0.025000, -0.738008, 0, 1.0};
Point(116) = {0.024725, -0.737417, 0, 1.0};
Point(117) = {0.024464, -0.737144, 0, 1.0};
Point(118) = {0.024075, -0.736829, 0, 1.0};
Point(119) = {0.023690, -0.736578, 0, 1.0};
Point(120) = {0.023050, -0.736250, 0, 1.0};
Point(121) = {0.022415, -0.736012, 0, 1.0};
Point(122) = {0.021149, -0.735651, 0, 1.0};
Point(123) = {0.019887, -0.735392, 0, 1.0};
Point(124) = {0.017370, -0.735027, 0, 1.0};
Point(125) = {0.014857, -0.734783, 0, 1.0};
Point(126) = {0.012348, -0.734613, 0, 1.0};
Point(127) = {0.009841, -0.734503, 0, 1.0};
Point(128) = {0.007337, -0.734446, 0, 1.0};
Point(129) = {0.004834, -0.734432, 0, 1.0};
Point(130) = {0.002333, -0.734450, 0, 1.0};
Point(131) = {-0.000168, -0.734493, 0, 1.0};
Point(132) = {-0.002667, -0.734558, 0, 1.0};
Point(133) = {-0.005166, -0.734636, 0, 1.0};
Point(134) = {-0.007664, -0.734725, 0, 1.0};
Point(135) = {-0.010162, -0.734832, 0, 1.0};
Point(136) = {-0.012658, -0.734982, 0, 1.0};
Point(137) = {-0.015152, -0.735179, 0, 1.0};
Point(138) = {-0.020136, -0.735667, 0, 1.0};
Point(139) = {-0.025115, -0.736274, 0, 1.0};
Point(140) = {-0.030091, -0.736968, 0, 1.0};
Point(141) = {-0.035063, -0.737733, 0, 1.0};
Point(142) = {-0.040034, -0.738537, 0, 1.0};
Point(143) = {-0.045005, -0.739339, 0, 1.0};
Point(144) = {-0.049977, -0.740111, 0, 1.0};
Point(145) = {-0.054953, -0.740810, 0, 1.0};
Point(146) = {-0.057442, -0.741114, 0, 1.0};
Point(147) = {-0.059933, -0.741379, 0, 1.0};
Point(148) = {-0.062427, -0.741592, 0, 1.0};
Point(149) = {-0.064921, -0.741771, 0, 1.0};
Point(150) = {-0.067418, -0.741896, 0, 1.0};
Point(151) = {-0.069915, -0.742027, 0, 1.0};
Point(152) = {-0.072413, -0.742115, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074935, 0.738238, 0, 1.0};
Point(2) = {0.071154, 0.738914, 0, 1.0};
Point(3) = {0.067370, 0.739655, 0, 1.0};
Point(4) = {0.063586, 0.740403, 0, 1.0};
Point(5) = {0.059803, 0.741118, 0, 1.0};
Point(6) = {0.056019, 0.741845, 0, 1.0};
Point(7) = {0.052236, 0.742566, 0, 1.0};
Point(8) = {0.048453, 0.743292, 0, 1.0};
Point(9) = {0.044670, 0.744013, 0, 1.0};
Point(10) = {0.037106, 0.745378, 0, 1.0};
Point(11) = {0.029548, 0.746624, 0, 1.0};
Point(12) = {0.021997, 0.747710, 0, 1.0};
Point(13) = {0.014452, 0.748627, 0, 1.0};
Point(14) = {0.006916, 0.749328, 0, 1.0};
Point(15) = {-0.000609, 0.749788, 0, 1.0};
Point(16) = {-0.008124, 0.750000, 0, 1.0};
Point(17) = {-0.015630, 0.749969, 0, 1.0};
Point(18) = {-0.019379, 0.749867, 0, 1.0};
Point(19) = {-0.023125, 0.749703, 0, 1.0};
Point(20) = {-0.026868, 0.749468, 0, 1.0};
Point(21) = {-0.030609, 0.749158, 0, 1.0};
Point(22) = {-0.034346, 0.748780, 0, 1.0};
Point(23) = {-0.038081, 0.748338, 0, 1.0};
Point(24) = {-0.041813, 0.747826, 0, 1.0};
Point(25) = {-0.045541, 0.747218, 0, 1.0};
Point(26) = {-0.049264, 0.746492, 0, 1.0};
Point(27) = {-0.052982, 0.745638, 0, 1.0};
Point(28) = {-0.056694, 0.744636, 0, 1.0};
Point(29) = {-0.060397, 0.743433, 0, 1.0};
Point(30) = {-0.064089, 0.741963, 0, 1.0};
Point(31) = {-0.067765, 0.740099, 0, 1.0};
Point(32) = {-0.069594, 0.738954, 0, 1.0};
Point(33) = {-0.071414, 0.737587, 0, 1.0};
Point(34) = {-0.072318, 0.736778, 0, 1.0};
Point(35) = {-0.073217, 0.735820, 0, 1.0};
Point(36) = {-0.073752, 0.735136, 0, 1.0};
Point(37) = {-0.074278, 0.734266, 0, 1.0};
Point(38) = {-0.074621, 0.733471, 0, 1.0};
Point(39) = {-0.074935, 0.732012, 0, 1.0};
Point(40) = {-0.074523, 0.731125, 0, 1.0};
Point(41) = {-0.074131, 0.730717, 0, 1.0};
Point(42) = {-0.073548, 0.730244, 0, 1.0};
Point(43) = {-0.072970, 0.729867, 0, 1.0};
Point(44) = {-0.072011, 0.729376, 0, 1.0};
Point(45) = {-0.071058, 0.729017, 0, 1.0};
Point(46) = {-0.069159, 0.728476, 0, 1.0};
Point(47) = {-0.067266, 0.728088, 0, 1.0};
Point(48) = {-0.063490, 0.727541, 0, 1.0};
Point(49) = {-0.059721, 0.727175, 0, 1.0};
Point(50) = {-0.055958, 0.726920, 0, 1.0};
Point(51) = {-0.052198, 0.726755, 0, 1.0};
Point(52) = {-0.048441, 0.726669, 0, 1.0};
Point(53) = {-0.044687, 0.726648, 0, 1.0};
Point(54) = {-0.040935, 0.726675, 0, 1.0};
Point(55) = {-0.037184, 0.726739, 0, 1.0};
Point(56) = {-0.033435, 0.726837, 0, 1.0};
Point(57) = {-0.029686, 0.726954, 0, 1.0};
Point(58) = {-0.025939, 0.727087, 0, 1.0};
Point(59) = {-0.022192, 0.727247, 0, 1.0};
Point(60) = {-0.018448, 0.727474, 0, 1.0};
Point(61) = {-0.014707, 0.727769, 0, 1.0};
Point(62) = {-0.007231, 0.728501, 0, 1.0};
Point(63) = {0.000237, 0.729410, 0, 1.0};
Point(64) = {0.007701, 0.730451, 0, 1.0};
Point(65) = {0.015159, 0.731599, 0, 1.0};
Point(66) = {0.022616, 0.732805, 0, 1.0};
Point(67) = {0.030072, 0.734008, 0, 1.0};
Point(68) = {0.037531, 0.735166, 0, 1.0};
Point(69) = {0.044994, 0.736215, 0, 1.0};
Point(70) = {0.048728, 0.736670, 0, 1.0};
Point(71) = {0.052465, 0.737069, 0, 1.0};
Point(72) = {0.056205, 0.737388, 0, 1.0};
Point(73) = {0.059947, 0.737656, 0, 1.0};
Point(74) = {0.063692, 0.737844, 0, 1.0};
Point(75) = {0.067437, 0.738040, 0, 1.0};
Point(76) = {0.071185, 0.738172, 0, 1.0};
Point(77) = {-0.074935, -0.738238, 0, 1.0};
Point(78) = {-0.071154, -0.738914, 0, 1.0};
Point(79) = {-0.067370, -0.739655, 0, 1.0};
Point(80) = {-0.063586, -0.740403, 0, 1.0};
Point(81) = {-0.059803, -0.741118, 0, 1.0};
Point(82) = {-0.056019, -0.741845, 0, 1.0};
Point(83) = {-0.052236, -0.742566, 0, 1.0};
Point(84) = {-0.048453, -0.743292, 0, 1.0};
Point(85) = {-0.044670, -0.744013, 0, 1.0};
Point(86) = {-0.037106, -0.745378, 0, 1.0};
Point(87) = {-0.029548, -0.746624, 0, 1.0};
Point(88) = {-0.021997, -0.747710, 0, 1.0};
Point(89) = {-0.014452, -0.748627, 0, 1.0};
Point(90) = {-0.006916, -0.749328, 0, 1.0};
Point(91) = {0.000609, -0.749788, 0, 1.0};
Point(92) = {0.008124, -0.750000, 0, 1.0};
Point(93) = {0.015630, -0.749969, 0, 1.0};
Point(94) = {0.019379, -0.749867, 0, 1.0};
Point(95) = {0.023125, -0.749703, 0, 1.0};
Point(96) = {0.026868, -0.749468, 0, 1.0};
Point(97) = {0.030609, -0.749158, 0, 1.0};
Point(98) = {0.034346, -0.748780, 0, 1.0};
Point(99) = {0.038081, -0.748338, 0, 1.0};
Point(100) = {0.041813, -0.747826, 0, 1.0};
Point(101) = {0.045541, -0.747218, 0, 1.0};
Point(102) = {0.049264, -0.746492, 0, 1.0};
Point(103) = {0.052982, -0.745638, 0, 1.0};
Point(104) = {0.056694, -0.744636, 0, 1.0};
Point(105) = {0.060397, -0.743433, 0, 1.0};
Point(106) = {0.064089, -0.741963, 0, 1.0};
Point(107) = {0.067765, -0.740099, 0, 1.0};
Point(108) = {0.069594, -0.738954, 0, 1.0};
Point(109) = {0.071414, -0.737587, 0, 1.0};
Point(110) = {0.072318, -0.736778, 0, 1.0};
Point(111) = {0.073217, -0.735820, 0, 1.0};
Point(112) = {0.073752, -0.735136, 0, 1.0};
Point(113) = {0.074278, -0.734266, 0, 1.0};
Point(114) = {0.074621, -0.733471, 0, 1.0};
Point(115) = {0.074935, -0.732012, 0, 1.0};
Point(116) = {0.074523, -0.731125, 0, 1.0};
Point(117) = {0.074131, -0.730717, 0, 1.0};
Point(118) = {0.073548, -0.730244, 0, 1.0};
Point(119) = {0.072970, -0.729867, 0, 1.0};
Point(120) = {0.072011, -0.729376, 0, 1.0};
Point(121) = {0.071058, -0.729017, 0, 1.0};
Point(122) = {0.069159, -0.728476, 0, 1.0};
Point(123) = {0.067266, -0.728088, 0, 1.0};
Point(124) = {0.063490, -0.727541, 0, 1.0};
Point(125) = {0.059721, -0.727175, 0, 1.0};
Point(126) = {0.055958, -0.726920, 0, 1.0};
Point(127) = {0.052198, -0.726755, 0, 1.0};
Point(128) = {0.048441, -0.726669, 0, 1.0};
Point(129) = {0.044687, -0.726648, 0, 1.0};
Point(130) = {0.040935, -0.726675, 0, 1.0};
Point(131) = {0.037184, -0.726739, 0, 1.0};
Point(132) = {0.033435, -0.726837, 0, 1.0};
Point(133) = {0.029686, -0.726954, 0, 1.0};
Point(134) = {0.025939, -0.727087, 0, 1.0};
Point(135) = {0.022192, -0.727247, 0, 1.0};
Point(136) = {0.018448, -0.727474, 0, 1.0};
Point(137) = {0.014707, -0.727769, 0, 1.0};
Point(138) = {0.007231, -0.728501, 0, 1.0};
Point(139) = {-0.000237, -0.729410, 0, 1.0};
Point(140) = {-0.007701, -0.730451, 0, 1.0};
Point(141) = {-0.015159, -0.731599, 0, 1.0};
Point(142) = {-0.022616, -0.732805, 0, 1.0};
Point(143) = {-0.030072, -0.734008, 0, 1.0};
Point(144) = {-0.037531, -0.735166, 0, 1.0};
Point(145) = {-0.044994, -0.736215, 0, 1.0};
Point(146) = {-0.048728, -0.736670, 0, 1.0};
Point(147) = {-0.052465, -0.737069, 0, 1.0};
Point(148) = {-0.056205, -0.737388, 0, 1.0};
Point(149) = {-0.059947, -0.737656, 0, 1.0};
Point(150) = {-0.063692, -0.737844, 0, 1.0};
Point(151) = {-0.067437, -0.738040, 0, 1.0};
Point(152) = {-0.071185, -0.738172, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
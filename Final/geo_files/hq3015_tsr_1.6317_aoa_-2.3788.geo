SetFactory("OpenCASCADE");

Point(1) = {0.112371, 0.738238, 0, 1.0};
Point(2) = {0.108589, 0.738914, 0, 1.0};
Point(3) = {0.104805, 0.739655, 0, 1.0};
Point(4) = {0.101021, 0.740403, 0, 1.0};
Point(5) = {0.097238, 0.741118, 0, 1.0};
Point(6) = {0.093455, 0.741845, 0, 1.0};
Point(7) = {0.089672, 0.742566, 0, 1.0};
Point(8) = {0.085888, 0.743292, 0, 1.0};
Point(9) = {0.082105, 0.744013, 0, 1.0};
Point(10) = {0.074542, 0.745378, 0, 1.0};
Point(11) = {0.066984, 0.746624, 0, 1.0};
Point(12) = {0.059432, 0.747710, 0, 1.0};
Point(13) = {0.051887, 0.748627, 0, 1.0};
Point(14) = {0.044352, 0.749328, 0, 1.0};
Point(15) = {0.036826, 0.749788, 0, 1.0};
Point(16) = {0.029311, 0.750000, 0, 1.0};
Point(17) = {0.021806, 0.749969, 0, 1.0};
Point(18) = {0.018057, 0.749867, 0, 1.0};
Point(19) = {0.014310, 0.749703, 0, 1.0};
Point(20) = {0.010567, 0.749468, 0, 1.0};
Point(21) = {0.006827, 0.749158, 0, 1.0};
Point(22) = {0.003089, 0.748780, 0, 1.0};
Point(23) = {-0.000646, 0.748338, 0, 1.0};
Point(24) = {-0.004378, 0.747826, 0, 1.0};
Point(25) = {-0.008106, 0.747218, 0, 1.0};
Point(26) = {-0.011829, 0.746492, 0, 1.0};
Point(27) = {-0.015547, 0.745638, 0, 1.0};
Point(28) = {-0.019258, 0.744636, 0, 1.0};
Point(29) = {-0.022962, 0.743433, 0, 1.0};
Point(30) = {-0.026654, 0.741963, 0, 1.0};
Point(31) = {-0.030329, 0.740099, 0, 1.0};
Point(32) = {-0.032159, 0.738954, 0, 1.0};
Point(33) = {-0.033978, 0.737587, 0, 1.0};
Point(34) = {-0.034883, 0.736778, 0, 1.0};
Point(35) = {-0.035782, 0.735820, 0, 1.0};
Point(36) = {-0.036316, 0.735136, 0, 1.0};
Point(37) = {-0.036843, 0.734266, 0, 1.0};
Point(38) = {-0.037185, 0.733471, 0, 1.0};
Point(39) = {-0.037500, 0.732012, 0, 1.0};
Point(40) = {-0.037088, 0.731125, 0, 1.0};
Point(41) = {-0.036696, 0.730717, 0, 1.0};
Point(42) = {-0.036113, 0.730244, 0, 1.0};
Point(43) = {-0.035534, 0.729867, 0, 1.0};
Point(44) = {-0.034576, 0.729376, 0, 1.0};
Point(45) = {-0.033622, 0.729017, 0, 1.0};
Point(46) = {-0.031723, 0.728476, 0, 1.0};
Point(47) = {-0.029831, 0.728088, 0, 1.0};
Point(48) = {-0.026055, 0.727541, 0, 1.0};
Point(49) = {-0.022286, 0.727175, 0, 1.0};
Point(50) = {-0.018522, 0.726920, 0, 1.0};
Point(51) = {-0.014762, 0.726755, 0, 1.0};
Point(52) = {-0.011005, 0.726669, 0, 1.0};
Point(53) = {-0.007251, 0.726648, 0, 1.0};
Point(54) = {-0.003499, 0.726675, 0, 1.0};
Point(55) = {0.000251, 0.726739, 0, 1.0};
Point(56) = {0.004001, 0.726837, 0, 1.0};
Point(57) = {0.007749, 0.726954, 0, 1.0};
Point(58) = {0.011497, 0.727087, 0, 1.0};
Point(59) = {0.015243, 0.727247, 0, 1.0};
Point(60) = {0.018987, 0.727474, 0, 1.0};
Point(61) = {0.022728, 0.727769, 0, 1.0};
Point(62) = {0.030204, 0.728501, 0, 1.0};
Point(63) = {0.037673, 0.729410, 0, 1.0};
Point(64) = {0.045136, 0.730451, 0, 1.0};
Point(65) = {0.052595, 0.731599, 0, 1.0};
Point(66) = {0.060051, 0.732805, 0, 1.0};
Point(67) = {0.067508, 0.734008, 0, 1.0};
Point(68) = {0.074966, 0.735166, 0, 1.0};
Point(69) = {0.082429, 0.736215, 0, 1.0};
Point(70) = {0.086163, 0.736670, 0, 1.0};
Point(71) = {0.089900, 0.737069, 0, 1.0};
Point(72) = {0.093640, 0.737388, 0, 1.0};
Point(73) = {0.097382, 0.737656, 0, 1.0};
Point(74) = {0.101127, 0.737844, 0, 1.0};
Point(75) = {0.104872, 0.738040, 0, 1.0};
Point(76) = {0.108620, 0.738172, 0, 1.0};
Point(77) = {-0.112371, -0.738238, 0, 1.0};
Point(78) = {-0.108589, -0.738914, 0, 1.0};
Point(79) = {-0.104805, -0.739655, 0, 1.0};
Point(80) = {-0.101021, -0.740403, 0, 1.0};
Point(81) = {-0.097238, -0.741118, 0, 1.0};
Point(82) = {-0.093455, -0.741845, 0, 1.0};
Point(83) = {-0.089672, -0.742566, 0, 1.0};
Point(84) = {-0.085888, -0.743292, 0, 1.0};
Point(85) = {-0.082105, -0.744013, 0, 1.0};
Point(86) = {-0.074542, -0.745378, 0, 1.0};
Point(87) = {-0.066984, -0.746624, 0, 1.0};
Point(88) = {-0.059432, -0.747710, 0, 1.0};
Point(89) = {-0.051887, -0.748627, 0, 1.0};
Point(90) = {-0.044352, -0.749328, 0, 1.0};
Point(91) = {-0.036826, -0.749788, 0, 1.0};
Point(92) = {-0.029311, -0.750000, 0, 1.0};
Point(93) = {-0.021806, -0.749969, 0, 1.0};
Point(94) = {-0.018057, -0.749867, 0, 1.0};
Point(95) = {-0.014310, -0.749703, 0, 1.0};
Point(96) = {-0.010567, -0.749468, 0, 1.0};
Point(97) = {-0.006827, -0.749158, 0, 1.0};
Point(98) = {-0.003089, -0.748780, 0, 1.0};
Point(99) = {0.000646, -0.748338, 0, 1.0};
Point(100) = {0.004378, -0.747826, 0, 1.0};
Point(101) = {0.008106, -0.747218, 0, 1.0};
Point(102) = {0.011829, -0.746492, 0, 1.0};
Point(103) = {0.015547, -0.745638, 0, 1.0};
Point(104) = {0.019258, -0.744636, 0, 1.0};
Point(105) = {0.022962, -0.743433, 0, 1.0};
Point(106) = {0.026654, -0.741963, 0, 1.0};
Point(107) = {0.030329, -0.740099, 0, 1.0};
Point(108) = {0.032159, -0.738954, 0, 1.0};
Point(109) = {0.033978, -0.737587, 0, 1.0};
Point(110) = {0.034883, -0.736778, 0, 1.0};
Point(111) = {0.035782, -0.735820, 0, 1.0};
Point(112) = {0.036316, -0.735136, 0, 1.0};
Point(113) = {0.036843, -0.734266, 0, 1.0};
Point(114) = {0.037185, -0.733471, 0, 1.0};
Point(115) = {0.037500, -0.732012, 0, 1.0};
Point(116) = {0.037088, -0.731125, 0, 1.0};
Point(117) = {0.036696, -0.730717, 0, 1.0};
Point(118) = {0.036113, -0.730244, 0, 1.0};
Point(119) = {0.035534, -0.729867, 0, 1.0};
Point(120) = {0.034576, -0.729376, 0, 1.0};
Point(121) = {0.033622, -0.729017, 0, 1.0};
Point(122) = {0.031723, -0.728476, 0, 1.0};
Point(123) = {0.029831, -0.728088, 0, 1.0};
Point(124) = {0.026055, -0.727541, 0, 1.0};
Point(125) = {0.022286, -0.727175, 0, 1.0};
Point(126) = {0.018522, -0.726920, 0, 1.0};
Point(127) = {0.014762, -0.726755, 0, 1.0};
Point(128) = {0.011005, -0.726669, 0, 1.0};
Point(129) = {0.007251, -0.726648, 0, 1.0};
Point(130) = {0.003499, -0.726675, 0, 1.0};
Point(131) = {-0.000251, -0.726739, 0, 1.0};
Point(132) = {-0.004001, -0.726837, 0, 1.0};
Point(133) = {-0.007749, -0.726954, 0, 1.0};
Point(134) = {-0.011497, -0.727087, 0, 1.0};
Point(135) = {-0.015243, -0.727247, 0, 1.0};
Point(136) = {-0.018987, -0.727474, 0, 1.0};
Point(137) = {-0.022728, -0.727769, 0, 1.0};
Point(138) = {-0.030204, -0.728501, 0, 1.0};
Point(139) = {-0.037673, -0.729410, 0, 1.0};
Point(140) = {-0.045136, -0.730451, 0, 1.0};
Point(141) = {-0.052595, -0.731599, 0, 1.0};
Point(142) = {-0.060051, -0.732805, 0, 1.0};
Point(143) = {-0.067508, -0.734008, 0, 1.0};
Point(144) = {-0.074966, -0.735166, 0, 1.0};
Point(145) = {-0.082429, -0.736215, 0, 1.0};
Point(146) = {-0.086163, -0.736670, 0, 1.0};
Point(147) = {-0.089900, -0.737069, 0, 1.0};
Point(148) = {-0.093640, -0.737388, 0, 1.0};
Point(149) = {-0.097382, -0.737656, 0, 1.0};
Point(150) = {-0.101127, -0.737844, 0, 1.0};
Point(151) = {-0.104872, -0.738040, 0, 1.0};
Point(152) = {-0.108620, -0.738172, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074888, 0.746239, 0, 1.0};
Point(2) = {0.074566, 0.746254, 0, 1.0};
Point(3) = {0.074043, 0.746279, 0, 1.0};
Point(4) = {0.073299, 0.746315, 0, 1.0};
Point(5) = {0.072344, 0.746362, 0, 1.0};
Point(6) = {0.071189, 0.746420, 0, 1.0};
Point(7) = {0.069844, 0.746498, 0, 1.0};
Point(8) = {0.068301, 0.746593, 0, 1.0};
Point(9) = {0.066579, 0.746707, 0, 1.0};
Point(10) = {0.064669, 0.746833, 0, 1.0};
Point(11) = {0.062591, 0.746970, 0, 1.0};
Point(12) = {0.060359, 0.747123, 0, 1.0};
Point(13) = {0.057970, 0.747299, 0, 1.0};
Point(14) = {0.055437, 0.747495, 0, 1.0};
Point(15) = {0.052783, 0.747706, 0, 1.0};
Point(16) = {0.050006, 0.747924, 0, 1.0};
Point(17) = {0.047118, 0.748153, 0, 1.0};
Point(18) = {0.044141, 0.748386, 0, 1.0};
Point(19) = {0.041076, 0.748623, 0, 1.0};
Point(20) = {0.037953, 0.748857, 0, 1.0};
Point(21) = {0.034766, 0.749080, 0, 1.0};
Point(22) = {0.031533, 0.749284, 0, 1.0};
Point(23) = {0.028279, 0.749462, 0, 1.0};
Point(24) = {0.025012, 0.749613, 0, 1.0};
Point(25) = {0.021746, 0.749733, 0, 1.0};
Point(26) = {0.018491, 0.749830, 0, 1.0};
Point(27) = {0.015258, 0.749911, 0, 1.0};
Point(28) = {0.012070, 0.749974, 0, 1.0};
Point(29) = {0.008947, 0.750000, 0, 1.0};
Point(30) = {0.005881, 0.749987, 0, 1.0};
Point(31) = {0.002903, 0.749954, 0, 1.0};
Point(32) = {0.000013, 0.749906, 0, 1.0};
Point(33) = {-0.002765, 0.749835, 0, 1.0};
Point(34) = {-0.005420, 0.749754, 0, 1.0};
Point(35) = {-0.007955, 0.749665, 0, 1.0};
Point(36) = {-0.010344, 0.749532, 0, 1.0};
Point(37) = {-0.012578, 0.749361, 0, 1.0};
Point(38) = {-0.014657, 0.749167, 0, 1.0};
Point(39) = {-0.016569, 0.748960, 0, 1.0};
Point(40) = {-0.018291, 0.748743, 0, 1.0};
Point(41) = {-0.019836, 0.748511, 0, 1.0};
Point(42) = {-0.021182, 0.748265, 0, 1.0};
Point(43) = {-0.022338, 0.748005, 0, 1.0};
Point(44) = {-0.023296, 0.747730, 0, 1.0};
Point(45) = {-0.024041, 0.747450, 0, 1.0};
Point(46) = {-0.024565, 0.747165, 0, 1.0};
Point(47) = {-0.024888, 0.746866, 0, 1.0};
Point(48) = {-0.025000, 0.746638, 0, 1.0};
Point(49) = {-0.024890, 0.746410, 0, 1.0};
Point(50) = {-0.024569, 0.746109, 0, 1.0};
Point(51) = {-0.024047, 0.745818, 0, 1.0};
Point(52) = {-0.023304, 0.745532, 0, 1.0};
Point(53) = {-0.022350, 0.745251, 0, 1.0};
Point(54) = {-0.021196, 0.744981, 0, 1.0};
Point(55) = {-0.019852, 0.744723, 0, 1.0};
Point(56) = {-0.018309, 0.744479, 0, 1.0};
Point(57) = {-0.016588, 0.744248, 0, 1.0};
Point(58) = {-0.014677, 0.744026, 0, 1.0};
Point(59) = {-0.012600, 0.743815, 0, 1.0};
Point(60) = {-0.010368, 0.743626, 0, 1.0};
Point(61) = {-0.007980, 0.743473, 0, 1.0};
Point(62) = {-0.005446, 0.743364, 0, 1.0};
Point(63) = {-0.002791, 0.743261, 0, 1.0};
Point(64) = {-0.000014, 0.743168, 0, 1.0};
Point(65) = {0.002875, 0.743097, 0, 1.0};
Point(66) = {0.005853, 0.743039, 0, 1.0};
Point(67) = {0.008919, 0.743002, 0, 1.0};
Point(68) = {0.012042, 0.743002, 0, 1.0};
Point(69) = {0.015230, 0.743040, 0, 1.0};
Point(70) = {0.018464, 0.743094, 0, 1.0};
Point(71) = {0.021719, 0.743165, 0, 1.0};
Point(72) = {0.024987, 0.743259, 0, 1.0};
Point(73) = {0.028254, 0.743384, 0, 1.0};
Point(74) = {0.031510, 0.743536, 0, 1.0};
Point(75) = {0.034745, 0.743714, 0, 1.0};
Point(76) = {0.037933, 0.743911, 0, 1.0};
Point(77) = {0.041057, 0.744119, 0, 1.0};
Point(78) = {0.044124, 0.744332, 0, 1.0};
Point(79) = {0.047103, 0.744541, 0, 1.0};
Point(80) = {0.049993, 0.744746, 0, 1.0};
Point(81) = {0.052772, 0.744942, 0, 1.0};
Point(82) = {0.055428, 0.745131, 0, 1.0};
Point(83) = {0.057962, 0.745307, 0, 1.0};
Point(84) = {0.060352, 0.745463, 0, 1.0};
Point(85) = {0.062586, 0.745598, 0, 1.0};
Point(86) = {0.064664, 0.745719, 0, 1.0};
Point(87) = {0.066575, 0.745829, 0, 1.0};
Point(88) = {0.068298, 0.745929, 0, 1.0};
Point(89) = {0.069842, 0.746012, 0, 1.0};
Point(90) = {0.071188, 0.746078, 0, 1.0};
Point(91) = {0.072343, 0.746128, 0, 1.0};
Point(92) = {0.073299, 0.746167, 0, 1.0};
Point(93) = {0.074043, 0.746197, 0, 1.0};
Point(94) = {0.074566, 0.746218, 0, 1.0};
Point(95) = {0.074888, 0.746229, 0, 1.0};
Point(96) = {-0.074888, -0.746239, 0, 1.0};
Point(97) = {-0.074566, -0.746254, 0, 1.0};
Point(98) = {-0.074043, -0.746279, 0, 1.0};
Point(99) = {-0.073299, -0.746315, 0, 1.0};
Point(100) = {-0.072344, -0.746362, 0, 1.0};
Point(101) = {-0.071189, -0.746420, 0, 1.0};
Point(102) = {-0.069844, -0.746498, 0, 1.0};
Point(103) = {-0.068301, -0.746593, 0, 1.0};
Point(104) = {-0.066579, -0.746707, 0, 1.0};
Point(105) = {-0.064669, -0.746833, 0, 1.0};
Point(106) = {-0.062591, -0.746970, 0, 1.0};
Point(107) = {-0.060359, -0.747123, 0, 1.0};
Point(108) = {-0.057970, -0.747299, 0, 1.0};
Point(109) = {-0.055437, -0.747495, 0, 1.0};
Point(110) = {-0.052783, -0.747706, 0, 1.0};
Point(111) = {-0.050006, -0.747924, 0, 1.0};
Point(112) = {-0.047118, -0.748153, 0, 1.0};
Point(113) = {-0.044141, -0.748386, 0, 1.0};
Point(114) = {-0.041076, -0.748623, 0, 1.0};
Point(115) = {-0.037953, -0.748857, 0, 1.0};
Point(116) = {-0.034766, -0.749080, 0, 1.0};
Point(117) = {-0.031533, -0.749284, 0, 1.0};
Point(118) = {-0.028279, -0.749462, 0, 1.0};
Point(119) = {-0.025012, -0.749613, 0, 1.0};
Point(120) = {-0.021746, -0.749733, 0, 1.0};
Point(121) = {-0.018491, -0.749830, 0, 1.0};
Point(122) = {-0.015258, -0.749911, 0, 1.0};
Point(123) = {-0.012070, -0.749974, 0, 1.0};
Point(124) = {-0.008947, -0.750000, 0, 1.0};
Point(125) = {-0.005881, -0.749987, 0, 1.0};
Point(126) = {-0.002903, -0.749954, 0, 1.0};
Point(127) = {-0.000013, -0.749906, 0, 1.0};
Point(128) = {0.002765, -0.749835, 0, 1.0};
Point(129) = {0.005420, -0.749754, 0, 1.0};
Point(130) = {0.007955, -0.749665, 0, 1.0};
Point(131) = {0.010344, -0.749532, 0, 1.0};
Point(132) = {0.012578, -0.749361, 0, 1.0};
Point(133) = {0.014657, -0.749167, 0, 1.0};
Point(134) = {0.016569, -0.748960, 0, 1.0};
Point(135) = {0.018291, -0.748743, 0, 1.0};
Point(136) = {0.019836, -0.748511, 0, 1.0};
Point(137) = {0.021182, -0.748265, 0, 1.0};
Point(138) = {0.022338, -0.748005, 0, 1.0};
Point(139) = {0.023296, -0.747730, 0, 1.0};
Point(140) = {0.024041, -0.747450, 0, 1.0};
Point(141) = {0.024565, -0.747165, 0, 1.0};
Point(142) = {0.024888, -0.746866, 0, 1.0};
Point(143) = {0.025000, -0.746638, 0, 1.0};
Point(144) = {0.024890, -0.746410, 0, 1.0};
Point(145) = {0.024569, -0.746109, 0, 1.0};
Point(146) = {0.024047, -0.745818, 0, 1.0};
Point(147) = {0.023304, -0.745532, 0, 1.0};
Point(148) = {0.022350, -0.745251, 0, 1.0};
Point(149) = {0.021196, -0.744981, 0, 1.0};
Point(150) = {0.019852, -0.744723, 0, 1.0};
Point(151) = {0.018309, -0.744479, 0, 1.0};
Point(152) = {0.016588, -0.744248, 0, 1.0};
Point(153) = {0.014677, -0.744026, 0, 1.0};
Point(154) = {0.012600, -0.743815, 0, 1.0};
Point(155) = {0.010368, -0.743626, 0, 1.0};
Point(156) = {0.007980, -0.743473, 0, 1.0};
Point(157) = {0.005446, -0.743364, 0, 1.0};
Point(158) = {0.002791, -0.743261, 0, 1.0};
Point(159) = {0.000014, -0.743168, 0, 1.0};
Point(160) = {-0.002875, -0.743097, 0, 1.0};
Point(161) = {-0.005853, -0.743039, 0, 1.0};
Point(162) = {-0.008919, -0.743002, 0, 1.0};
Point(163) = {-0.012042, -0.743002, 0, 1.0};
Point(164) = {-0.015230, -0.743040, 0, 1.0};
Point(165) = {-0.018464, -0.743094, 0, 1.0};
Point(166) = {-0.021719, -0.743165, 0, 1.0};
Point(167) = {-0.024987, -0.743259, 0, 1.0};
Point(168) = {-0.028254, -0.743384, 0, 1.0};
Point(169) = {-0.031510, -0.743536, 0, 1.0};
Point(170) = {-0.034745, -0.743714, 0, 1.0};
Point(171) = {-0.037933, -0.743911, 0, 1.0};
Point(172) = {-0.041057, -0.744119, 0, 1.0};
Point(173) = {-0.044124, -0.744332, 0, 1.0};
Point(174) = {-0.047103, -0.744541, 0, 1.0};
Point(175) = {-0.049993, -0.744746, 0, 1.0};
Point(176) = {-0.052772, -0.744942, 0, 1.0};
Point(177) = {-0.055428, -0.745131, 0, 1.0};
Point(178) = {-0.057962, -0.745307, 0, 1.0};
Point(179) = {-0.060352, -0.745463, 0, 1.0};
Point(180) = {-0.062586, -0.745598, 0, 1.0};
Point(181) = {-0.064664, -0.745719, 0, 1.0};
Point(182) = {-0.066575, -0.745829, 0, 1.0};
Point(183) = {-0.068298, -0.745929, 0, 1.0};
Point(184) = {-0.069842, -0.746012, 0, 1.0};
Point(185) = {-0.071188, -0.746078, 0, 1.0};
Point(186) = {-0.072343, -0.746128, 0, 1.0};
Point(187) = {-0.073299, -0.746167, 0, 1.0};
Point(188) = {-0.074043, -0.746197, 0, 1.0};
Point(189) = {-0.074566, -0.746218, 0, 1.0};
Point(190) = {-0.074888, -0.746229, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:31};
Spline(2) = {31:65};
Spline(3) = {65:95};
Spline(4) = {95,1};

// Lines: second blade (splines 5-8)
Spline(5) = {96:126};
Spline(6) = {126:160};
Spline(7) = {160:190};
Spline(8) = {190,96};

// Outer domain (points 20001-4 and lines)
Point(191) = {-13.50000000, -15.00000000, 0, 1.0};
Point(192) = {-13.50000000, 15.00000000, 0, 1.0};
Point(193) = {13.50000000, 15.00000000, 0, 1.0};
Point(194) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {191, 192};
Line(12) = {192, 193};
Line(13) = {193, 194};
Line(14) = {191, 194};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
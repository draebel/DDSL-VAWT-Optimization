SetFactory("OpenCASCADE");

Point(1) = {0.112052, 0.727670, 0, 1.0};
Point(2) = {0.111671, 0.727799, 0, 1.0};
Point(3) = {0.110483, 0.728188, 0, 1.0};
Point(4) = {0.108517, 0.728825, 0, 1.0};
Point(5) = {0.105792, 0.729692, 0, 1.0};
Point(6) = {0.102332, 0.730768, 0, 1.0};
Point(7) = {0.098174, 0.732026, 0, 1.0};
Point(8) = {0.093361, 0.733434, 0, 1.0};
Point(9) = {0.087938, 0.734964, 0, 1.0};
Point(10) = {0.081965, 0.736580, 0, 1.0};
Point(11) = {0.075503, 0.738248, 0, 1.0};
Point(12) = {0.068618, 0.739933, 0, 1.0};
Point(13) = {0.061385, 0.741600, 0, 1.0};
Point(14) = {0.053882, 0.743213, 0, 1.0};
Point(15) = {0.046189, 0.744737, 0, 1.0};
Point(16) = {0.038389, 0.746139, 0, 1.0};
Point(17) = {0.030569, 0.747383, 0, 1.0};
Point(18) = {0.022807, 0.748439, 0, 1.0};
Point(19) = {0.015123, 0.749253, 0, 1.0};
Point(20) = {0.007673, 0.749777, 0, 1.0};
Point(21) = {0.000548, 0.750000, 0, 1.0};
Point(22) = {-0.006170, 0.749923, 0, 1.0};
Point(23) = {-0.012397, 0.749553, 0, 1.0};
Point(24) = {-0.018062, 0.748910, 0, 1.0};
Point(25) = {-0.023097, 0.748017, 0, 1.0};
Point(26) = {-0.027443, 0.746908, 0, 1.0};
Point(27) = {-0.031051, 0.745615, 0, 1.0};
Point(28) = {-0.033884, 0.744175, 0, 1.0};
Point(29) = {-0.035913, 0.742619, 0, 1.0};
Point(30) = {-0.037122, 0.740972, 0, 1.0};
Point(31) = {-0.037500, 0.739255, 0, 1.0};
Point(32) = {-0.037052, 0.737555, 0, 1.0};
Point(33) = {-0.035793, 0.735955, 0, 1.0};
Point(34) = {-0.033741, 0.734466, 0, 1.0};
Point(35) = {-0.030924, 0.733095, 0, 1.0};
Point(36) = {-0.027379, 0.731854, 0, 1.0};
Point(37) = {-0.023147, 0.730749, 0, 1.0};
Point(38) = {-0.018274, 0.729787, 0, 1.0};
Point(39) = {-0.012816, 0.728969, 0, 1.0};
Point(40) = {-0.006829, 0.728290, 0, 1.0};
Point(41) = {-0.000375, 0.727739, 0, 1.0};
Point(42) = {0.006480, 0.727302, 0, 1.0};
Point(43) = {0.013667, 0.726960, 0, 1.0};
Point(44) = {0.021110, 0.726689, 0, 1.0};
Point(45) = {0.028806, 0.726486, 0, 1.0};
Point(46) = {0.036604, 0.726366, 0, 1.0};
Point(47) = {0.044418, 0.726313, 0, 1.0};
Point(48) = {0.052159, 0.726310, 0, 1.0};
Point(49) = {0.059744, 0.726344, 0, 1.0};
Point(50) = {0.067088, 0.726402, 0, 1.0};
Point(51) = {0.074109, 0.726479, 0, 1.0};
Point(52) = {0.080731, 0.726566, 0, 1.0};
Point(53) = {0.086877, 0.726661, 0, 1.0};
Point(54) = {0.092479, 0.726758, 0, 1.0};
Point(55) = {0.097474, 0.726854, 0, 1.0};
Point(56) = {0.101801, 0.726947, 0, 1.0};
Point(57) = {0.105414, 0.727032, 0, 1.0};
Point(58) = {0.108270, 0.727102, 0, 1.0};
Point(59) = {0.110334, 0.727156, 0, 1.0};
Point(60) = {0.111581, 0.727190, 0, 1.0};
Point(61) = {0.112015, 0.727200, 0, 1.0};
Point(62) = {-0.112052, -0.727670, 0, 1.0};
Point(63) = {-0.111671, -0.727799, 0, 1.0};
Point(64) = {-0.110483, -0.728188, 0, 1.0};
Point(65) = {-0.108517, -0.728825, 0, 1.0};
Point(66) = {-0.105792, -0.729692, 0, 1.0};
Point(67) = {-0.102332, -0.730768, 0, 1.0};
Point(68) = {-0.098174, -0.732026, 0, 1.0};
Point(69) = {-0.093361, -0.733434, 0, 1.0};
Point(70) = {-0.087938, -0.734964, 0, 1.0};
Point(71) = {-0.081965, -0.736580, 0, 1.0};
Point(72) = {-0.075503, -0.738248, 0, 1.0};
Point(73) = {-0.068618, -0.739933, 0, 1.0};
Point(74) = {-0.061385, -0.741600, 0, 1.0};
Point(75) = {-0.053882, -0.743213, 0, 1.0};
Point(76) = {-0.046189, -0.744737, 0, 1.0};
Point(77) = {-0.038389, -0.746139, 0, 1.0};
Point(78) = {-0.030569, -0.747383, 0, 1.0};
Point(79) = {-0.022807, -0.748439, 0, 1.0};
Point(80) = {-0.015123, -0.749253, 0, 1.0};
Point(81) = {-0.007673, -0.749777, 0, 1.0};
Point(82) = {-0.000548, -0.750000, 0, 1.0};
Point(83) = {0.006170, -0.749923, 0, 1.0};
Point(84) = {0.012397, -0.749553, 0, 1.0};
Point(85) = {0.018062, -0.748910, 0, 1.0};
Point(86) = {0.023097, -0.748017, 0, 1.0};
Point(87) = {0.027443, -0.746908, 0, 1.0};
Point(88) = {0.031051, -0.745615, 0, 1.0};
Point(89) = {0.033884, -0.744175, 0, 1.0};
Point(90) = {0.035913, -0.742619, 0, 1.0};
Point(91) = {0.037122, -0.740972, 0, 1.0};
Point(92) = {0.037500, -0.739255, 0, 1.0};
Point(93) = {0.037052, -0.737555, 0, 1.0};
Point(94) = {0.035793, -0.735955, 0, 1.0};
Point(95) = {0.033741, -0.734466, 0, 1.0};
Point(96) = {0.030924, -0.733095, 0, 1.0};
Point(97) = {0.027379, -0.731854, 0, 1.0};
Point(98) = {0.023147, -0.730749, 0, 1.0};
Point(99) = {0.018274, -0.729787, 0, 1.0};
Point(100) = {0.012816, -0.728969, 0, 1.0};
Point(101) = {0.006829, -0.728290, 0, 1.0};
Point(102) = {0.000375, -0.727739, 0, 1.0};
Point(103) = {-0.006480, -0.727302, 0, 1.0};
Point(104) = {-0.013667, -0.726960, 0, 1.0};
Point(105) = {-0.021110, -0.726689, 0, 1.0};
Point(106) = {-0.028806, -0.726486, 0, 1.0};
Point(107) = {-0.036604, -0.726366, 0, 1.0};
Point(108) = {-0.044418, -0.726313, 0, 1.0};
Point(109) = {-0.052159, -0.726310, 0, 1.0};
Point(110) = {-0.059744, -0.726344, 0, 1.0};
Point(111) = {-0.067088, -0.726402, 0, 1.0};
Point(112) = {-0.074109, -0.726479, 0, 1.0};
Point(113) = {-0.080731, -0.726566, 0, 1.0};
Point(114) = {-0.086877, -0.726661, 0, 1.0};
Point(115) = {-0.092479, -0.726758, 0, 1.0};
Point(116) = {-0.097474, -0.726854, 0, 1.0};
Point(117) = {-0.101801, -0.726947, 0, 1.0};
Point(118) = {-0.105414, -0.727032, 0, 1.0};
Point(119) = {-0.108270, -0.727102, 0, 1.0};
Point(120) = {-0.110334, -0.727156, 0, 1.0};
Point(121) = {-0.111581, -0.727190, 0, 1.0};
Point(122) = {-0.112015, -0.727200, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
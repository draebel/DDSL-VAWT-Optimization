SetFactory("OpenCASCADE");

Point(1) = {0.149403, 0.720227, 0, 1.0};
Point(2) = {0.148895, 0.720399, 0, 1.0};
Point(3) = {0.147311, 0.720918, 0, 1.0};
Point(4) = {0.144690, 0.721767, 0, 1.0};
Point(5) = {0.141055, 0.722923, 0, 1.0};
Point(6) = {0.136442, 0.724357, 0, 1.0};
Point(7) = {0.130899, 0.726035, 0, 1.0};
Point(8) = {0.124481, 0.727912, 0, 1.0};
Point(9) = {0.117251, 0.729952, 0, 1.0};
Point(10) = {0.109286, 0.732107, 0, 1.0};
Point(11) = {0.100671, 0.734330, 0, 1.0};
Point(12) = {0.091491, 0.736577, 0, 1.0};
Point(13) = {0.081846, 0.738800, 0, 1.0};
Point(14) = {0.071843, 0.740951, 0, 1.0};
Point(15) = {0.061585, 0.742983, 0, 1.0};
Point(16) = {0.051186, 0.744852, 0, 1.0};
Point(17) = {0.040758, 0.746511, 0, 1.0};
Point(18) = {0.030409, 0.747919, 0, 1.0};
Point(19) = {0.020165, 0.749004, 0, 1.0};
Point(20) = {0.010231, 0.749703, 0, 1.0};
Point(21) = {0.000731, 0.750000, 0, 1.0};
Point(22) = {-0.008227, 0.749898, 0, 1.0};
Point(23) = {-0.016530, 0.749404, 0, 1.0};
Point(24) = {-0.024083, 0.748547, 0, 1.0};
Point(25) = {-0.030796, 0.747356, 0, 1.0};
Point(26) = {-0.036590, 0.745878, 0, 1.0};
Point(27) = {-0.041401, 0.744154, 0, 1.0};
Point(28) = {-0.045178, 0.742233, 0, 1.0};
Point(29) = {-0.047884, 0.740158, 0, 1.0};
Point(30) = {-0.049496, 0.737962, 0, 1.0};
Point(31) = {-0.050000, 0.735673, 0, 1.0};
Point(32) = {-0.049403, 0.733407, 0, 1.0};
Point(33) = {-0.047724, 0.731274, 0, 1.0};
Point(34) = {-0.044988, 0.729288, 0, 1.0};
Point(35) = {-0.041232, 0.727460, 0, 1.0};
Point(36) = {-0.036506, 0.725805, 0, 1.0};
Point(37) = {-0.030862, 0.724332, 0, 1.0};
Point(38) = {-0.024365, 0.723050, 0, 1.0};
Point(39) = {-0.017088, 0.721959, 0, 1.0};
Point(40) = {-0.009105, 0.721053, 0, 1.0};
Point(41) = {-0.000500, 0.720319, 0, 1.0};
Point(42) = {0.008641, 0.719737, 0, 1.0};
Point(43) = {0.018222, 0.719280, 0, 1.0};
Point(44) = {0.028147, 0.718919, 0, 1.0};
Point(45) = {0.038407, 0.718648, 0, 1.0};
Point(46) = {0.048805, 0.718488, 0, 1.0};
Point(47) = {0.059224, 0.718417, 0, 1.0};
Point(48) = {0.069546, 0.718413, 0, 1.0};
Point(49) = {0.079659, 0.718459, 0, 1.0};
Point(50) = {0.089451, 0.718535, 0, 1.0};
Point(51) = {0.098812, 0.718638, 0, 1.0};
Point(52) = {0.107641, 0.718755, 0, 1.0};
Point(53) = {0.115837, 0.718881, 0, 1.0};
Point(54) = {0.123306, 0.719011, 0, 1.0};
Point(55) = {0.129965, 0.719139, 0, 1.0};
Point(56) = {0.135734, 0.719263, 0, 1.0};
Point(57) = {0.140552, 0.719375, 0, 1.0};
Point(58) = {0.144360, 0.719470, 0, 1.0};
Point(59) = {0.147112, 0.719541, 0, 1.0};
Point(60) = {0.148774, 0.719586, 0, 1.0};
Point(61) = {0.149353, 0.719601, 0, 1.0};
Point(62) = {-0.149403, -0.720227, 0, 1.0};
Point(63) = {-0.148895, -0.720399, 0, 1.0};
Point(64) = {-0.147311, -0.720918, 0, 1.0};
Point(65) = {-0.144690, -0.721767, 0, 1.0};
Point(66) = {-0.141055, -0.722923, 0, 1.0};
Point(67) = {-0.136442, -0.724357, 0, 1.0};
Point(68) = {-0.130899, -0.726035, 0, 1.0};
Point(69) = {-0.124481, -0.727912, 0, 1.0};
Point(70) = {-0.117251, -0.729952, 0, 1.0};
Point(71) = {-0.109286, -0.732107, 0, 1.0};
Point(72) = {-0.100671, -0.734330, 0, 1.0};
Point(73) = {-0.091491, -0.736577, 0, 1.0};
Point(74) = {-0.081846, -0.738800, 0, 1.0};
Point(75) = {-0.071843, -0.740951, 0, 1.0};
Point(76) = {-0.061585, -0.742983, 0, 1.0};
Point(77) = {-0.051186, -0.744852, 0, 1.0};
Point(78) = {-0.040758, -0.746511, 0, 1.0};
Point(79) = {-0.030409, -0.747919, 0, 1.0};
Point(80) = {-0.020165, -0.749004, 0, 1.0};
Point(81) = {-0.010231, -0.749703, 0, 1.0};
Point(82) = {-0.000731, -0.750000, 0, 1.0};
Point(83) = {0.008227, -0.749898, 0, 1.0};
Point(84) = {0.016530, -0.749404, 0, 1.0};
Point(85) = {0.024083, -0.748547, 0, 1.0};
Point(86) = {0.030796, -0.747356, 0, 1.0};
Point(87) = {0.036590, -0.745878, 0, 1.0};
Point(88) = {0.041401, -0.744154, 0, 1.0};
Point(89) = {0.045178, -0.742233, 0, 1.0};
Point(90) = {0.047884, -0.740158, 0, 1.0};
Point(91) = {0.049496, -0.737962, 0, 1.0};
Point(92) = {0.050000, -0.735673, 0, 1.0};
Point(93) = {0.049403, -0.733407, 0, 1.0};
Point(94) = {0.047724, -0.731274, 0, 1.0};
Point(95) = {0.044988, -0.729288, 0, 1.0};
Point(96) = {0.041232, -0.727460, 0, 1.0};
Point(97) = {0.036506, -0.725805, 0, 1.0};
Point(98) = {0.030862, -0.724332, 0, 1.0};
Point(99) = {0.024365, -0.723050, 0, 1.0};
Point(100) = {0.017088, -0.721959, 0, 1.0};
Point(101) = {0.009105, -0.721053, 0, 1.0};
Point(102) = {0.000500, -0.720319, 0, 1.0};
Point(103) = {-0.008641, -0.719737, 0, 1.0};
Point(104) = {-0.018222, -0.719280, 0, 1.0};
Point(105) = {-0.028147, -0.718919, 0, 1.0};
Point(106) = {-0.038407, -0.718648, 0, 1.0};
Point(107) = {-0.048805, -0.718488, 0, 1.0};
Point(108) = {-0.059224, -0.718417, 0, 1.0};
Point(109) = {-0.069546, -0.718413, 0, 1.0};
Point(110) = {-0.079659, -0.718459, 0, 1.0};
Point(111) = {-0.089451, -0.718535, 0, 1.0};
Point(112) = {-0.098812, -0.718638, 0, 1.0};
Point(113) = {-0.107641, -0.718755, 0, 1.0};
Point(114) = {-0.115837, -0.718881, 0, 1.0};
Point(115) = {-0.123306, -0.719011, 0, 1.0};
Point(116) = {-0.129965, -0.719139, 0, 1.0};
Point(117) = {-0.135734, -0.719263, 0, 1.0};
Point(118) = {-0.140552, -0.719375, 0, 1.0};
Point(119) = {-0.144360, -0.719470, 0, 1.0};
Point(120) = {-0.147112, -0.719541, 0, 1.0};
Point(121) = {-0.148774, -0.719586, 0, 1.0};
Point(122) = {-0.149353, -0.719601, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
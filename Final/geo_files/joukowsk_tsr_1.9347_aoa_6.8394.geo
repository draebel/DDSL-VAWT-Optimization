SetFactory("OpenCASCADE");

Point(1) = {0.074554, 0.726746, 0, 1.0};
Point(2) = {0.073281, 0.726998, 0, 1.0};
Point(3) = {0.069808, 0.727701, 0, 1.0};
Point(4) = {0.066036, 0.728489, 0, 1.0};
Point(5) = {0.061983, 0.729358, 0, 1.0};
Point(6) = {0.057670, 0.730303, 0, 1.0};
Point(7) = {0.053116, 0.731320, 0, 1.0};
Point(8) = {0.048345, 0.732401, 0, 1.0};
Point(9) = {0.043379, 0.733536, 0, 1.0};
Point(10) = {0.038242, 0.734717, 0, 1.0};
Point(11) = {0.032957, 0.735932, 0, 1.0};
Point(12) = {0.027551, 0.737170, 0, 1.0};
Point(13) = {0.022048, 0.738418, 0, 1.0};
Point(14) = {0.016475, 0.739664, 0, 1.0};
Point(15) = {0.010858, 0.740894, 0, 1.0};
Point(16) = {0.005223, 0.742095, 0, 1.0};
Point(17) = {-0.000403, 0.743252, 0, 1.0};
Point(18) = {-0.005993, 0.744354, 0, 1.0};
Point(19) = {-0.011522, 0.745387, 0, 1.0};
Point(20) = {-0.016963, 0.746340, 0, 1.0};
Point(21) = {-0.022290, 0.747201, 0, 1.0};
Point(22) = {-0.027478, 0.747961, 0, 1.0};
Point(23) = {-0.032502, 0.748610, 0, 1.0};
Point(24) = {-0.037339, 0.749142, 0, 1.0};
Point(25) = {-0.041965, 0.749551, 0, 1.0};
Point(26) = {-0.046358, 0.749831, 0, 1.0};
Point(27) = {-0.050497, 0.749981, 0, 1.0};
Point(28) = {-0.054362, 0.750000, 0, 1.0};
Point(29) = {-0.057933, 0.749888, 0, 1.0};
Point(30) = {-0.061193, 0.749647, 0, 1.0};
Point(31) = {-0.064127, 0.749282, 0, 1.0};
Point(32) = {-0.066718, 0.748798, 0, 1.0};
Point(33) = {-0.068954, 0.748202, 0, 1.0};
Point(34) = {-0.070824, 0.747503, 0, 1.0};
Point(35) = {-0.072317, 0.746709, 0, 1.0};
Point(36) = {-0.073426, 0.745832, 0, 1.0};
Point(37) = {-0.074144, 0.744883, 0, 1.0};
Point(38) = {-0.074466, 0.743874, 0, 1.0};
Point(39) = {-0.074391, 0.742817, 0, 1.0};
Point(40) = {-0.073918, 0.741725, 0, 1.0};
Point(41) = {-0.073049, 0.740611, 0, 1.0};
Point(42) = {-0.071785, 0.739487, 0, 1.0};
Point(43) = {-0.070134, 0.738365, 0, 1.0};
Point(44) = {-0.068102, 0.737258, 0, 1.0};
Point(45) = {-0.065699, 0.736175, 0, 1.0};
Point(46) = {-0.062935, 0.735126, 0, 1.0};
Point(47) = {-0.059824, 0.734121, 0, 1.0};
Point(48) = {-0.056381, 0.733168, 0, 1.0};
Point(49) = {-0.052621, 0.732272, 0, 1.0};
Point(50) = {-0.048564, 0.731439, 0, 1.0};
Point(51) = {-0.044230, 0.730673, 0, 1.0};
Point(52) = {-0.039638, 0.729976, 0, 1.0};
Point(53) = {-0.034813, 0.729349, 0, 1.0};
Point(54) = {-0.029777, 0.728792, 0, 1.0};
Point(55) = {-0.024556, 0.728303, 0, 1.0};
Point(56) = {-0.019177, 0.727880, 0, 1.0};
Point(57) = {-0.013665, 0.727519, 0, 1.0};
Point(58) = {-0.008049, 0.727216, 0, 1.0};
Point(59) = {-0.002357, 0.726964, 0, 1.0};
Point(60) = {0.003383, 0.726759, 0, 1.0};
Point(61) = {0.009142, 0.726593, 0, 1.0};
Point(62) = {0.014891, 0.726459, 0, 1.0};
Point(63) = {0.020601, 0.726352, 0, 1.0};
Point(64) = {0.026243, 0.726263, 0, 1.0};
Point(65) = {0.031789, 0.726188, 0, 1.0};
Point(66) = {0.037210, 0.726119, 0, 1.0};
Point(67) = {0.042481, 0.726051, 0, 1.0};
Point(68) = {0.047575, 0.725980, 0, 1.0};
Point(69) = {0.052467, 0.725901, 0, 1.0};
Point(70) = {0.057131, 0.725813, 0, 1.0};
Point(71) = {0.061546, 0.725712, 0, 1.0};
Point(72) = {0.065689, 0.725598, 0, 1.0};
Point(73) = {0.069541, 0.725471, 0, 1.0};
Point(74) = {0.073082, 0.725333, 0, 1.0};
Point(75) = {0.074378, 0.725276, 0, 1.0};
Point(76) = {-0.074554, -0.726746, 0, 1.0};
Point(77) = {-0.073281, -0.726998, 0, 1.0};
Point(78) = {-0.069808, -0.727701, 0, 1.0};
Point(79) = {-0.066036, -0.728489, 0, 1.0};
Point(80) = {-0.061983, -0.729358, 0, 1.0};
Point(81) = {-0.057670, -0.730303, 0, 1.0};
Point(82) = {-0.053116, -0.731320, 0, 1.0};
Point(83) = {-0.048345, -0.732401, 0, 1.0};
Point(84) = {-0.043379, -0.733536, 0, 1.0};
Point(85) = {-0.038242, -0.734717, 0, 1.0};
Point(86) = {-0.032957, -0.735932, 0, 1.0};
Point(87) = {-0.027551, -0.737170, 0, 1.0};
Point(88) = {-0.022048, -0.738418, 0, 1.0};
Point(89) = {-0.016475, -0.739664, 0, 1.0};
Point(90) = {-0.010858, -0.740894, 0, 1.0};
Point(91) = {-0.005223, -0.742095, 0, 1.0};
Point(92) = {0.000403, -0.743252, 0, 1.0};
Point(93) = {0.005993, -0.744354, 0, 1.0};
Point(94) = {0.011522, -0.745387, 0, 1.0};
Point(95) = {0.016963, -0.746340, 0, 1.0};
Point(96) = {0.022290, -0.747201, 0, 1.0};
Point(97) = {0.027478, -0.747961, 0, 1.0};
Point(98) = {0.032502, -0.748610, 0, 1.0};
Point(99) = {0.037339, -0.749142, 0, 1.0};
Point(100) = {0.041965, -0.749551, 0, 1.0};
Point(101) = {0.046358, -0.749831, 0, 1.0};
Point(102) = {0.050497, -0.749981, 0, 1.0};
Point(103) = {0.054362, -0.750000, 0, 1.0};
Point(104) = {0.057933, -0.749888, 0, 1.0};
Point(105) = {0.061193, -0.749647, 0, 1.0};
Point(106) = {0.064127, -0.749282, 0, 1.0};
Point(107) = {0.066718, -0.748798, 0, 1.0};
Point(108) = {0.068954, -0.748202, 0, 1.0};
Point(109) = {0.070824, -0.747503, 0, 1.0};
Point(110) = {0.072317, -0.746709, 0, 1.0};
Point(111) = {0.073426, -0.745832, 0, 1.0};
Point(112) = {0.074144, -0.744883, 0, 1.0};
Point(113) = {0.074466, -0.743874, 0, 1.0};
Point(114) = {0.074391, -0.742817, 0, 1.0};
Point(115) = {0.073918, -0.741725, 0, 1.0};
Point(116) = {0.073049, -0.740611, 0, 1.0};
Point(117) = {0.071785, -0.739487, 0, 1.0};
Point(118) = {0.070134, -0.738365, 0, 1.0};
Point(119) = {0.068102, -0.737258, 0, 1.0};
Point(120) = {0.065699, -0.736175, 0, 1.0};
Point(121) = {0.062935, -0.735126, 0, 1.0};
Point(122) = {0.059824, -0.734121, 0, 1.0};
Point(123) = {0.056381, -0.733168, 0, 1.0};
Point(124) = {0.052621, -0.732272, 0, 1.0};
Point(125) = {0.048564, -0.731439, 0, 1.0};
Point(126) = {0.044230, -0.730673, 0, 1.0};
Point(127) = {0.039638, -0.729976, 0, 1.0};
Point(128) = {0.034813, -0.729349, 0, 1.0};
Point(129) = {0.029777, -0.728792, 0, 1.0};
Point(130) = {0.024556, -0.728303, 0, 1.0};
Point(131) = {0.019177, -0.727880, 0, 1.0};
Point(132) = {0.013665, -0.727519, 0, 1.0};
Point(133) = {0.008049, -0.727216, 0, 1.0};
Point(134) = {0.002357, -0.726964, 0, 1.0};
Point(135) = {-0.003383, -0.726759, 0, 1.0};
Point(136) = {-0.009142, -0.726593, 0, 1.0};
Point(137) = {-0.014891, -0.726459, 0, 1.0};
Point(138) = {-0.020601, -0.726352, 0, 1.0};
Point(139) = {-0.026243, -0.726263, 0, 1.0};
Point(140) = {-0.031789, -0.726188, 0, 1.0};
Point(141) = {-0.037210, -0.726119, 0, 1.0};
Point(142) = {-0.042481, -0.726051, 0, 1.0};
Point(143) = {-0.047575, -0.725980, 0, 1.0};
Point(144) = {-0.052467, -0.725901, 0, 1.0};
Point(145) = {-0.057131, -0.725813, 0, 1.0};
Point(146) = {-0.061546, -0.725712, 0, 1.0};
Point(147) = {-0.065689, -0.725598, 0, 1.0};
Point(148) = {-0.069541, -0.725471, 0, 1.0};
Point(149) = {-0.073082, -0.725333, 0, 1.0};
Point(150) = {-0.074378, -0.725276, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:23};
Spline(2) = {23:53};
Spline(3) = {53:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:98};
Spline(6) = {98:128};
Spline(7) = {128:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074168, 0.734381, 0, 1.0};
Point(2) = {0.073806, 0.734429, 0, 1.0};
Point(3) = {0.073206, 0.734516, 0, 1.0};
Point(4) = {0.072371, 0.734644, 0, 1.0};
Point(5) = {0.071306, 0.734817, 0, 1.0};
Point(6) = {0.070015, 0.735039, 0, 1.0};
Point(7) = {0.068507, 0.735310, 0, 1.0};
Point(8) = {0.066788, 0.735633, 0, 1.0};
Point(9) = {0.064868, 0.736009, 0, 1.0};
Point(10) = {0.062755, 0.736436, 0, 1.0};
Point(11) = {0.060461, 0.736916, 0, 1.0};
Point(12) = {0.057996, 0.737444, 0, 1.0};
Point(13) = {0.055372, 0.738019, 0, 1.0};
Point(14) = {0.052602, 0.738638, 0, 1.0};
Point(15) = {0.049701, 0.739295, 0, 1.0};
Point(16) = {0.046680, 0.739986, 0, 1.0};
Point(17) = {0.043555, 0.740704, 0, 1.0};
Point(18) = {0.040340, 0.741443, 0, 1.0};
Point(19) = {0.037052, 0.742196, 0, 1.0};
Point(20) = {0.033705, 0.742955, 0, 1.0};
Point(21) = {0.030315, 0.743713, 0, 1.0};
Point(22) = {0.026898, 0.744461, 0, 1.0};
Point(23) = {0.023471, 0.745192, 0, 1.0};
Point(24) = {0.020049, 0.745896, 0, 1.0};
Point(25) = {0.016649, 0.746566, 0, 1.0};
Point(26) = {0.013286, 0.747194, 0, 1.0};
Point(27) = {0.009977, 0.747774, 0, 1.0};
Point(28) = {0.006737, 0.748298, 0, 1.0};
Point(29) = {0.003581, 0.748760, 0, 1.0};
Point(30) = {0.000525, 0.749155, 0, 1.0};
Point(31) = {-0.002417, 0.749478, 0, 1.0};
Point(32) = {-0.005231, 0.749727, 0, 1.0};
Point(33) = {-0.007903, 0.749897, 0, 1.0};
Point(34) = {-0.010421, 0.749989, 0, 1.0};
Point(35) = {-0.012771, 0.750000, 0, 1.0};
Point(36) = {-0.014944, 0.749932, 0, 1.0};
Point(37) = {-0.016927, 0.749785, 0, 1.0};
Point(38) = {-0.018711, 0.749563, 0, 1.0};
Point(39) = {-0.020287, 0.749269, 0, 1.0};
Point(40) = {-0.021647, 0.748907, 0, 1.0};
Point(41) = {-0.022784, 0.748481, 0, 1.0};
Point(42) = {-0.023693, 0.747999, 0, 1.0};
Point(43) = {-0.024367, 0.747465, 0, 1.0};
Point(44) = {-0.024804, 0.746888, 0, 1.0};
Point(45) = {-0.025000, 0.746274, 0, 1.0};
Point(46) = {-0.024954, 0.745631, 0, 1.0};
Point(47) = {-0.024667, 0.744967, 0, 1.0};
Point(48) = {-0.024138, 0.744289, 0, 1.0};
Point(49) = {-0.023369, 0.743605, 0, 1.0};
Point(50) = {-0.022365, 0.742923, 0, 1.0};
Point(51) = {-0.021129, 0.742249, 0, 1.0};
Point(52) = {-0.019667, 0.741591, 0, 1.0};
Point(53) = {-0.017986, 0.740953, 0, 1.0};
Point(54) = {-0.016094, 0.740342, 0, 1.0};
Point(55) = {-0.013999, 0.739762, 0, 1.0};
Point(56) = {-0.011713, 0.739217, 0, 1.0};
Point(57) = {-0.009245, 0.738710, 0, 1.0};
Point(58) = {-0.006608, 0.738244, 0, 1.0};
Point(59) = {-0.003816, 0.737820, 0, 1.0};
Point(60) = {-0.000881, 0.737439, 0, 1.0};
Point(61) = {0.002182, 0.737100, 0, 1.0};
Point(62) = {0.005358, 0.736803, 0, 1.0};
Point(63) = {0.008630, 0.736546, 0, 1.0};
Point(64) = {0.011982, 0.736326, 0, 1.0};
Point(65) = {0.015398, 0.736141, 0, 1.0};
Point(66) = {0.018861, 0.735988, 0, 1.0};
Point(67) = {0.022352, 0.735863, 0, 1.0};
Point(68) = {0.025855, 0.735762, 0, 1.0};
Point(69) = {0.029352, 0.735681, 0, 1.0};
Point(70) = {0.032825, 0.735616, 0, 1.0};
Point(71) = {0.036256, 0.735562, 0, 1.0};
Point(72) = {0.039630, 0.735516, 0, 1.0};
Point(73) = {0.042928, 0.735474, 0, 1.0};
Point(74) = {0.046134, 0.735433, 0, 1.0};
Point(75) = {0.049232, 0.735390, 0, 1.0};
Point(76) = {0.052207, 0.735342, 0, 1.0};
Point(77) = {0.055044, 0.735288, 0, 1.0};
Point(78) = {0.057730, 0.735227, 0, 1.0};
Point(79) = {0.060250, 0.735157, 0, 1.0};
Point(80) = {0.062592, 0.735080, 0, 1.0};
Point(81) = {0.064747, 0.734996, 0, 1.0};
Point(82) = {0.066701, 0.734907, 0, 1.0};
Point(83) = {0.068448, 0.734814, 0, 1.0};
Point(84) = {0.069977, 0.734722, 0, 1.0};
Point(85) = {0.071283, 0.734631, 0, 1.0};
Point(86) = {0.072359, 0.734548, 0, 1.0};
Point(87) = {0.073201, 0.734475, 0, 1.0};
Point(88) = {0.073805, 0.734417, 0, 1.0};
Point(89) = {0.074167, 0.734379, 0, 1.0};
Point(90) = {-0.074168, -0.734381, 0, 1.0};
Point(91) = {-0.073806, -0.734429, 0, 1.0};
Point(92) = {-0.073206, -0.734516, 0, 1.0};
Point(93) = {-0.072371, -0.734644, 0, 1.0};
Point(94) = {-0.071306, -0.734817, 0, 1.0};
Point(95) = {-0.070015, -0.735039, 0, 1.0};
Point(96) = {-0.068507, -0.735310, 0, 1.0};
Point(97) = {-0.066788, -0.735633, 0, 1.0};
Point(98) = {-0.064868, -0.736009, 0, 1.0};
Point(99) = {-0.062755, -0.736436, 0, 1.0};
Point(100) = {-0.060461, -0.736916, 0, 1.0};
Point(101) = {-0.057996, -0.737444, 0, 1.0};
Point(102) = {-0.055372, -0.738019, 0, 1.0};
Point(103) = {-0.052602, -0.738638, 0, 1.0};
Point(104) = {-0.049701, -0.739295, 0, 1.0};
Point(105) = {-0.046680, -0.739986, 0, 1.0};
Point(106) = {-0.043555, -0.740704, 0, 1.0};
Point(107) = {-0.040340, -0.741443, 0, 1.0};
Point(108) = {-0.037052, -0.742196, 0, 1.0};
Point(109) = {-0.033705, -0.742955, 0, 1.0};
Point(110) = {-0.030315, -0.743713, 0, 1.0};
Point(111) = {-0.026898, -0.744461, 0, 1.0};
Point(112) = {-0.023471, -0.745192, 0, 1.0};
Point(113) = {-0.020049, -0.745896, 0, 1.0};
Point(114) = {-0.016649, -0.746566, 0, 1.0};
Point(115) = {-0.013286, -0.747194, 0, 1.0};
Point(116) = {-0.009977, -0.747774, 0, 1.0};
Point(117) = {-0.006737, -0.748298, 0, 1.0};
Point(118) = {-0.003581, -0.748760, 0, 1.0};
Point(119) = {-0.000525, -0.749155, 0, 1.0};
Point(120) = {0.002417, -0.749478, 0, 1.0};
Point(121) = {0.005231, -0.749727, 0, 1.0};
Point(122) = {0.007903, -0.749897, 0, 1.0};
Point(123) = {0.010421, -0.749989, 0, 1.0};
Point(124) = {0.012771, -0.750000, 0, 1.0};
Point(125) = {0.014944, -0.749932, 0, 1.0};
Point(126) = {0.016927, -0.749785, 0, 1.0};
Point(127) = {0.018711, -0.749563, 0, 1.0};
Point(128) = {0.020287, -0.749269, 0, 1.0};
Point(129) = {0.021647, -0.748907, 0, 1.0};
Point(130) = {0.022784, -0.748481, 0, 1.0};
Point(131) = {0.023693, -0.747999, 0, 1.0};
Point(132) = {0.024367, -0.747465, 0, 1.0};
Point(133) = {0.024804, -0.746888, 0, 1.0};
Point(134) = {0.025000, -0.746274, 0, 1.0};
Point(135) = {0.024954, -0.745631, 0, 1.0};
Point(136) = {0.024667, -0.744967, 0, 1.0};
Point(137) = {0.024138, -0.744289, 0, 1.0};
Point(138) = {0.023369, -0.743605, 0, 1.0};
Point(139) = {0.022365, -0.742923, 0, 1.0};
Point(140) = {0.021129, -0.742249, 0, 1.0};
Point(141) = {0.019667, -0.741591, 0, 1.0};
Point(142) = {0.017986, -0.740953, 0, 1.0};
Point(143) = {0.016094, -0.740342, 0, 1.0};
Point(144) = {0.013999, -0.739762, 0, 1.0};
Point(145) = {0.011713, -0.739217, 0, 1.0};
Point(146) = {0.009245, -0.738710, 0, 1.0};
Point(147) = {0.006608, -0.738244, 0, 1.0};
Point(148) = {0.003816, -0.737820, 0, 1.0};
Point(149) = {0.000881, -0.737439, 0, 1.0};
Point(150) = {-0.002182, -0.737100, 0, 1.0};
Point(151) = {-0.005358, -0.736803, 0, 1.0};
Point(152) = {-0.008630, -0.736546, 0, 1.0};
Point(153) = {-0.011982, -0.736326, 0, 1.0};
Point(154) = {-0.015398, -0.736141, 0, 1.0};
Point(155) = {-0.018861, -0.735988, 0, 1.0};
Point(156) = {-0.022352, -0.735863, 0, 1.0};
Point(157) = {-0.025855, -0.735762, 0, 1.0};
Point(158) = {-0.029352, -0.735681, 0, 1.0};
Point(159) = {-0.032825, -0.735616, 0, 1.0};
Point(160) = {-0.036256, -0.735562, 0, 1.0};
Point(161) = {-0.039630, -0.735516, 0, 1.0};
Point(162) = {-0.042928, -0.735474, 0, 1.0};
Point(163) = {-0.046134, -0.735433, 0, 1.0};
Point(164) = {-0.049232, -0.735390, 0, 1.0};
Point(165) = {-0.052207, -0.735342, 0, 1.0};
Point(166) = {-0.055044, -0.735288, 0, 1.0};
Point(167) = {-0.057730, -0.735227, 0, 1.0};
Point(168) = {-0.060250, -0.735157, 0, 1.0};
Point(169) = {-0.062592, -0.735080, 0, 1.0};
Point(170) = {-0.064747, -0.734996, 0, 1.0};
Point(171) = {-0.066701, -0.734907, 0, 1.0};
Point(172) = {-0.068448, -0.734814, 0, 1.0};
Point(173) = {-0.069977, -0.734722, 0, 1.0};
Point(174) = {-0.071283, -0.734631, 0, 1.0};
Point(175) = {-0.072359, -0.734548, 0, 1.0};
Point(176) = {-0.073201, -0.734475, 0, 1.0};
Point(177) = {-0.073805, -0.734417, 0, 1.0};
Point(178) = {-0.074167, -0.734379, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:118};
Spline(6) = {118:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
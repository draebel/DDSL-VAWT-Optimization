SetFactory("OpenCASCADE");

Point(1) = {0.074334, 0.724198, 0, 1.0};
Point(2) = {0.073846, 0.724387, 0, 1.0};
Point(3) = {0.072466, 0.724971, 0, 1.0};
Point(4) = {0.070345, 0.725915, 0, 1.0};
Point(5) = {0.067584, 0.727105, 0, 1.0};
Point(6) = {0.064184, 0.728420, 0, 1.0};
Point(7) = {0.060114, 0.729824, 0, 1.0};
Point(8) = {0.055397, 0.731331, 0, 1.0};
Point(9) = {0.050098, 0.732933, 0, 1.0};
Point(10) = {0.044278, 0.734609, 0, 1.0};
Point(11) = {0.038013, 0.736332, 0, 1.0};
Point(12) = {0.031375, 0.738079, 0, 1.0};
Point(13) = {0.024442, 0.739821, 0, 1.0};
Point(14) = {0.017297, 0.741528, 0, 1.0};
Point(15) = {0.010022, 0.743166, 0, 1.0};
Point(16) = {0.002701, 0.744698, 0, 1.0};
Point(17) = {-0.004594, 0.746081, 0, 1.0};
Point(18) = {-0.011805, 0.747279, 0, 1.0};
Point(19) = {-0.018871, 0.748274, 0, 1.0};
Point(20) = {-0.025737, 0.749044, 0, 1.0};
Point(21) = {-0.032354, 0.749585, 0, 1.0};
Point(22) = {-0.038674, 0.749898, 0, 1.0};
Point(23) = {-0.044641, 0.750000, 0, 1.0};
Point(24) = {-0.050194, 0.749904, 0, 1.0};
Point(25) = {-0.055276, 0.749618, 0, 1.0};
Point(26) = {-0.059838, 0.749156, 0, 1.0};
Point(27) = {-0.063837, 0.748532, 0, 1.0};
Point(28) = {-0.067236, 0.747764, 0, 1.0};
Point(29) = {-0.070010, 0.746874, 0, 1.0};
Point(30) = {-0.072135, 0.745898, 0, 1.0};
Point(31) = {-0.073593, 0.744882, 0, 1.0};
Point(32) = {-0.074365, 0.743907, 0, 1.0};
Point(33) = {-0.074272, 0.743005, 0, 1.0};
Point(34) = {-0.073279, 0.742061, 0, 1.0};
Point(35) = {-0.071516, 0.741051, 0, 1.0};
Point(36) = {-0.068997, 0.740025, 0, 1.0};
Point(37) = {-0.065736, 0.739000, 0, 1.0};
Point(38) = {-0.061759, 0.737988, 0, 1.0};
Point(39) = {-0.057104, 0.736994, 0, 1.0};
Point(40) = {-0.051818, 0.736025, 0, 1.0};
Point(41) = {-0.045955, 0.735085, 0, 1.0};
Point(42) = {-0.039581, 0.734180, 0, 1.0};
Point(43) = {-0.032767, 0.733315, 0, 1.0};
Point(44) = {-0.025594, 0.732501, 0, 1.0};
Point(45) = {-0.018145, 0.731753, 0, 1.0};
Point(46) = {-0.010509, 0.731101, 0, 1.0};
Point(47) = {-0.002729, 0.730594, 0, 1.0};
Point(48) = {0.005192, 0.730215, 0, 1.0};
Point(49) = {0.013192, 0.729888, 0, 1.0};
Point(50) = {0.021157, 0.729561, 0, 1.0};
Point(51) = {0.028975, 0.729201, 0, 1.0};
Point(52) = {0.036526, 0.728788, 0, 1.0};
Point(53) = {0.043688, 0.728307, 0, 1.0};
Point(54) = {0.050340, 0.727760, 0, 1.0};
Point(55) = {0.056372, 0.727152, 0, 1.0};
Point(56) = {0.061672, 0.726505, 0, 1.0};
Point(57) = {0.066142, 0.725847, 0, 1.0};
Point(58) = {0.069694, 0.725225, 0, 1.0};
Point(59) = {0.072265, 0.724699, 0, 1.0};
Point(60) = {0.073816, 0.724332, 0, 1.0};
Point(61) = {-0.074334, -0.724198, 0, 1.0};
Point(62) = {-0.073846, -0.724387, 0, 1.0};
Point(63) = {-0.072466, -0.724971, 0, 1.0};
Point(64) = {-0.070345, -0.725915, 0, 1.0};
Point(65) = {-0.067584, -0.727105, 0, 1.0};
Point(66) = {-0.064184, -0.728420, 0, 1.0};
Point(67) = {-0.060114, -0.729824, 0, 1.0};
Point(68) = {-0.055397, -0.731331, 0, 1.0};
Point(69) = {-0.050098, -0.732933, 0, 1.0};
Point(70) = {-0.044278, -0.734609, 0, 1.0};
Point(71) = {-0.038013, -0.736332, 0, 1.0};
Point(72) = {-0.031375, -0.738079, 0, 1.0};
Point(73) = {-0.024442, -0.739821, 0, 1.0};
Point(74) = {-0.017297, -0.741528, 0, 1.0};
Point(75) = {-0.010022, -0.743166, 0, 1.0};
Point(76) = {-0.002701, -0.744698, 0, 1.0};
Point(77) = {0.004594, -0.746081, 0, 1.0};
Point(78) = {0.011805, -0.747279, 0, 1.0};
Point(79) = {0.018871, -0.748274, 0, 1.0};
Point(80) = {0.025737, -0.749044, 0, 1.0};
Point(81) = {0.032354, -0.749585, 0, 1.0};
Point(82) = {0.038674, -0.749898, 0, 1.0};
Point(83) = {0.044641, -0.750000, 0, 1.0};
Point(84) = {0.050194, -0.749904, 0, 1.0};
Point(85) = {0.055276, -0.749618, 0, 1.0};
Point(86) = {0.059838, -0.749156, 0, 1.0};
Point(87) = {0.063837, -0.748532, 0, 1.0};
Point(88) = {0.067236, -0.747764, 0, 1.0};
Point(89) = {0.070010, -0.746874, 0, 1.0};
Point(90) = {0.072135, -0.745898, 0, 1.0};
Point(91) = {0.073593, -0.744882, 0, 1.0};
Point(92) = {0.074365, -0.743907, 0, 1.0};
Point(93) = {0.074272, -0.743005, 0, 1.0};
Point(94) = {0.073279, -0.742061, 0, 1.0};
Point(95) = {0.071516, -0.741051, 0, 1.0};
Point(96) = {0.068997, -0.740025, 0, 1.0};
Point(97) = {0.065736, -0.739000, 0, 1.0};
Point(98) = {0.061759, -0.737988, 0, 1.0};
Point(99) = {0.057104, -0.736994, 0, 1.0};
Point(100) = {0.051818, -0.736025, 0, 1.0};
Point(101) = {0.045955, -0.735085, 0, 1.0};
Point(102) = {0.039581, -0.734180, 0, 1.0};
Point(103) = {0.032767, -0.733315, 0, 1.0};
Point(104) = {0.025594, -0.732501, 0, 1.0};
Point(105) = {0.018145, -0.731753, 0, 1.0};
Point(106) = {0.010509, -0.731101, 0, 1.0};
Point(107) = {0.002729, -0.730594, 0, 1.0};
Point(108) = {-0.005192, -0.730215, 0, 1.0};
Point(109) = {-0.013192, -0.729888, 0, 1.0};
Point(110) = {-0.021157, -0.729561, 0, 1.0};
Point(111) = {-0.028975, -0.729201, 0, 1.0};
Point(112) = {-0.036526, -0.728788, 0, 1.0};
Point(113) = {-0.043688, -0.728307, 0, 1.0};
Point(114) = {-0.050340, -0.727760, 0, 1.0};
Point(115) = {-0.056372, -0.727152, 0, 1.0};
Point(116) = {-0.061672, -0.726505, 0, 1.0};
Point(117) = {-0.066142, -0.725847, 0, 1.0};
Point(118) = {-0.069694, -0.725225, 0, 1.0};
Point(119) = {-0.072265, -0.724699, 0, 1.0};
Point(120) = {-0.073816, -0.724332, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
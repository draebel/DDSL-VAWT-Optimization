SetFactory("OpenCASCADE");

Point(1) = {0.111231, 0.724202, 0, 1.0};
Point(2) = {0.110743, 0.724392, 0, 1.0};
Point(3) = {0.109362, 0.724975, 0, 1.0};
Point(4) = {0.107242, 0.725920, 0, 1.0};
Point(5) = {0.104481, 0.727109, 0, 1.0};
Point(6) = {0.101082, 0.728424, 0, 1.0};
Point(7) = {0.097013, 0.729828, 0, 1.0};
Point(8) = {0.092297, 0.731335, 0, 1.0};
Point(9) = {0.086998, 0.732936, 0, 1.0};
Point(10) = {0.081180, 0.734612, 0, 1.0};
Point(11) = {0.074916, 0.736335, 0, 1.0};
Point(12) = {0.068279, 0.738081, 0, 1.0};
Point(13) = {0.061347, 0.739822, 0, 1.0};
Point(14) = {0.054203, 0.741529, 0, 1.0};
Point(15) = {0.046929, 0.743167, 0, 1.0};
Point(16) = {0.039610, 0.744699, 0, 1.0};
Point(17) = {0.032316, 0.746082, 0, 1.0};
Point(18) = {0.025107, 0.747280, 0, 1.0};
Point(19) = {0.018043, 0.748274, 0, 1.0};
Point(20) = {0.011177, 0.749044, 0, 1.0};
Point(21) = {0.004561, 0.749585, 0, 1.0};
Point(22) = {-0.001758, 0.749898, 0, 1.0};
Point(23) = {-0.007723, 0.750000, 0, 1.0};
Point(24) = {-0.013275, 0.749904, 0, 1.0};
Point(25) = {-0.018357, 0.749618, 0, 1.0};
Point(26) = {-0.022918, 0.749156, 0, 1.0};
Point(27) = {-0.026916, 0.748533, 0, 1.0};
Point(28) = {-0.030314, 0.747764, 0, 1.0};
Point(29) = {-0.033087, 0.746875, 0, 1.0};
Point(30) = {-0.035212, 0.745899, 0, 1.0};
Point(31) = {-0.036670, 0.744883, 0, 1.0};
Point(32) = {-0.037442, 0.743908, 0, 1.0};
Point(33) = {-0.037349, 0.743006, 0, 1.0};
Point(34) = {-0.036356, 0.742062, 0, 1.0};
Point(35) = {-0.034594, 0.741053, 0, 1.0};
Point(36) = {-0.032075, 0.740027, 0, 1.0};
Point(37) = {-0.028814, 0.739002, 0, 1.0};
Point(38) = {-0.024838, 0.737990, 0, 1.0};
Point(39) = {-0.020184, 0.736997, 0, 1.0};
Point(40) = {-0.014898, 0.736028, 0, 1.0};
Point(41) = {-0.009037, 0.735088, 0, 1.0};
Point(42) = {-0.002664, 0.734182, 0, 1.0};
Point(43) = {0.004148, 0.733318, 0, 1.0};
Point(44) = {0.011320, 0.732504, 0, 1.0};
Point(45) = {0.018768, 0.731756, 0, 1.0};
Point(46) = {0.026402, 0.731105, 0, 1.0};
Point(47) = {0.034181, 0.730597, 0, 1.0};
Point(48) = {0.042101, 0.730219, 0, 1.0};
Point(49) = {0.050099, 0.729892, 0, 1.0};
Point(50) = {0.058063, 0.729564, 0, 1.0};
Point(51) = {0.065880, 0.729205, 0, 1.0};
Point(52) = {0.073429, 0.728792, 0, 1.0};
Point(53) = {0.080590, 0.728311, 0, 1.0};
Point(54) = {0.087241, 0.727764, 0, 1.0};
Point(55) = {0.093272, 0.727156, 0, 1.0};
Point(56) = {0.098571, 0.726509, 0, 1.0};
Point(57) = {0.103040, 0.725851, 0, 1.0};
Point(58) = {0.106591, 0.725229, 0, 1.0};
Point(59) = {0.109162, 0.724703, 0, 1.0};
Point(60) = {0.110713, 0.724337, 0, 1.0};
Point(61) = {-0.111231, -0.724202, 0, 1.0};
Point(62) = {-0.110743, -0.724392, 0, 1.0};
Point(63) = {-0.109362, -0.724975, 0, 1.0};
Point(64) = {-0.107242, -0.725920, 0, 1.0};
Point(65) = {-0.104481, -0.727109, 0, 1.0};
Point(66) = {-0.101082, -0.728424, 0, 1.0};
Point(67) = {-0.097013, -0.729828, 0, 1.0};
Point(68) = {-0.092297, -0.731335, 0, 1.0};
Point(69) = {-0.086998, -0.732936, 0, 1.0};
Point(70) = {-0.081180, -0.734612, 0, 1.0};
Point(71) = {-0.074916, -0.736335, 0, 1.0};
Point(72) = {-0.068279, -0.738081, 0, 1.0};
Point(73) = {-0.061347, -0.739822, 0, 1.0};
Point(74) = {-0.054203, -0.741529, 0, 1.0};
Point(75) = {-0.046929, -0.743167, 0, 1.0};
Point(76) = {-0.039610, -0.744699, 0, 1.0};
Point(77) = {-0.032316, -0.746082, 0, 1.0};
Point(78) = {-0.025107, -0.747280, 0, 1.0};
Point(79) = {-0.018043, -0.748274, 0, 1.0};
Point(80) = {-0.011177, -0.749044, 0, 1.0};
Point(81) = {-0.004561, -0.749585, 0, 1.0};
Point(82) = {0.001758, -0.749898, 0, 1.0};
Point(83) = {0.007723, -0.750000, 0, 1.0};
Point(84) = {0.013275, -0.749904, 0, 1.0};
Point(85) = {0.018357, -0.749618, 0, 1.0};
Point(86) = {0.022918, -0.749156, 0, 1.0};
Point(87) = {0.026916, -0.748533, 0, 1.0};
Point(88) = {0.030314, -0.747764, 0, 1.0};
Point(89) = {0.033087, -0.746875, 0, 1.0};
Point(90) = {0.035212, -0.745899, 0, 1.0};
Point(91) = {0.036670, -0.744883, 0, 1.0};
Point(92) = {0.037442, -0.743908, 0, 1.0};
Point(93) = {0.037349, -0.743006, 0, 1.0};
Point(94) = {0.036356, -0.742062, 0, 1.0};
Point(95) = {0.034594, -0.741053, 0, 1.0};
Point(96) = {0.032075, -0.740027, 0, 1.0};
Point(97) = {0.028814, -0.739002, 0, 1.0};
Point(98) = {0.024838, -0.737990, 0, 1.0};
Point(99) = {0.020184, -0.736997, 0, 1.0};
Point(100) = {0.014898, -0.736028, 0, 1.0};
Point(101) = {0.009037, -0.735088, 0, 1.0};
Point(102) = {0.002664, -0.734182, 0, 1.0};
Point(103) = {-0.004148, -0.733318, 0, 1.0};
Point(104) = {-0.011320, -0.732504, 0, 1.0};
Point(105) = {-0.018768, -0.731756, 0, 1.0};
Point(106) = {-0.026402, -0.731105, 0, 1.0};
Point(107) = {-0.034181, -0.730597, 0, 1.0};
Point(108) = {-0.042101, -0.730219, 0, 1.0};
Point(109) = {-0.050099, -0.729892, 0, 1.0};
Point(110) = {-0.058063, -0.729564, 0, 1.0};
Point(111) = {-0.065880, -0.729205, 0, 1.0};
Point(112) = {-0.073429, -0.728792, 0, 1.0};
Point(113) = {-0.080590, -0.728311, 0, 1.0};
Point(114) = {-0.087241, -0.727764, 0, 1.0};
Point(115) = {-0.093272, -0.727156, 0, 1.0};
Point(116) = {-0.098571, -0.726509, 0, 1.0};
Point(117) = {-0.103040, -0.725851, 0, 1.0};
Point(118) = {-0.106591, -0.725229, 0, 1.0};
Point(119) = {-0.109162, -0.724703, 0, 1.0};
Point(120) = {-0.110713, -0.724337, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
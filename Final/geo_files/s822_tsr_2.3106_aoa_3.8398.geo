SetFactory("OpenCASCADE");

Point(1) = {0.074837, 0.729364, 0, 1.0};
Point(2) = {0.074258, 0.729499, 0, 1.0};
Point(3) = {0.072631, 0.729987, 0, 1.0};
Point(4) = {0.070144, 0.730822, 0, 1.0};
Point(5) = {0.066896, 0.731900, 0, 1.0};
Point(6) = {0.062890, 0.733185, 0, 1.0};
Point(7) = {0.058212, 0.734696, 0, 1.0};
Point(8) = {0.052975, 0.736399, 0, 1.0};
Point(9) = {0.047286, 0.738239, 0, 1.0};
Point(10) = {0.041244, 0.740140, 0, 1.0};
Point(11) = {0.034935, 0.742012, 0, 1.0};
Point(12) = {0.028409, 0.743728, 0, 1.0};
Point(13) = {0.021623, 0.745262, 0, 1.0};
Point(14) = {0.014652, 0.746622, 0, 1.0};
Point(15) = {0.007566, 0.747782, 0, 1.0};
Point(16) = {0.000432, 0.748685, 0, 1.0};
Point(17) = {-0.006763, 0.749325, 0, 1.0};
Point(18) = {-0.013951, 0.749748, 0, 1.0};
Point(19) = {-0.021049, 0.749971, 0, 1.0};
Point(20) = {-0.027974, 0.750000, 0, 1.0};
Point(21) = {-0.034651, 0.749841, 0, 1.0};
Point(22) = {-0.041007, 0.749499, 0, 1.0};
Point(23) = {-0.046972, 0.748981, 0, 1.0};
Point(24) = {-0.052489, 0.748296, 0, 1.0};
Point(25) = {-0.057496, 0.747456, 0, 1.0};
Point(26) = {-0.061948, 0.746476, 0, 1.0};
Point(27) = {-0.065796, 0.745375, 0, 1.0};
Point(28) = {-0.069008, 0.744176, 0, 1.0};
Point(29) = {-0.071542, 0.742903, 0, 1.0};
Point(30) = {-0.073391, 0.741589, 0, 1.0};
Point(31) = {-0.074505, 0.740301, 0, 1.0};
Point(32) = {-0.074698, 0.739911, 0, 1.0};
Point(33) = {-0.074795, 0.739611, 0, 1.0};
Point(34) = {-0.074832, 0.739328, 0, 1.0};
Point(35) = {-0.074805, 0.739117, 0, 1.0};
Point(36) = {-0.074788, 0.739044, 0, 1.0};
Point(37) = {-0.074682, 0.738740, 0, 1.0};
Point(38) = {-0.074134, 0.737841, 0, 1.0};
Point(39) = {-0.072716, 0.736459, 0, 1.0};
Point(40) = {-0.070580, 0.735039, 0, 1.0};
Point(41) = {-0.067766, 0.733643, 0, 1.0};
Point(42) = {-0.064276, 0.732302, 0, 1.0};
Point(43) = {-0.060150, 0.731048, 0, 1.0};
Point(44) = {-0.055406, 0.729900, 0, 1.0};
Point(45) = {-0.050096, 0.728874, 0, 1.0};
Point(46) = {-0.044253, 0.727982, 0, 1.0};
Point(47) = {-0.037942, 0.727230, 0, 1.0};
Point(48) = {-0.031212, 0.726622, 0, 1.0};
Point(49) = {-0.024139, 0.726159, 0, 1.0};
Point(50) = {-0.016786, 0.725841, 0, 1.0};
Point(51) = {-0.009238, 0.725664, 0, 1.0};
Point(52) = {-0.001570, 0.725627, 0, 1.0};
Point(53) = {0.006127, 0.725732, 0, 1.0};
Point(54) = {0.013785, 0.726005, 0, 1.0};
Point(55) = {0.021388, 0.726417, 0, 1.0};
Point(56) = {0.028841, 0.726907, 0, 1.0};
Point(57) = {0.036049, 0.727447, 0, 1.0};
Point(58) = {0.042918, 0.728044, 0, 1.0};
Point(59) = {0.049446, 0.728650, 0, 1.0};
Point(60) = {0.055523, 0.729156, 0, 1.0};
Point(61) = {0.061008, 0.729507, 0, 1.0};
Point(62) = {0.065754, 0.729681, 0, 1.0};
Point(63) = {0.069620, 0.729694, 0, 1.0};
Point(64) = {0.072484, 0.729589, 0, 1.0};
Point(65) = {0.074244, 0.729443, 0, 1.0};
Point(66) = {-0.074837, -0.729364, 0, 1.0};
Point(67) = {-0.074258, -0.729499, 0, 1.0};
Point(68) = {-0.072631, -0.729987, 0, 1.0};
Point(69) = {-0.070144, -0.730822, 0, 1.0};
Point(70) = {-0.066896, -0.731900, 0, 1.0};
Point(71) = {-0.062890, -0.733185, 0, 1.0};
Point(72) = {-0.058212, -0.734696, 0, 1.0};
Point(73) = {-0.052975, -0.736399, 0, 1.0};
Point(74) = {-0.047286, -0.738239, 0, 1.0};
Point(75) = {-0.041244, -0.740140, 0, 1.0};
Point(76) = {-0.034935, -0.742012, 0, 1.0};
Point(77) = {-0.028409, -0.743728, 0, 1.0};
Point(78) = {-0.021623, -0.745262, 0, 1.0};
Point(79) = {-0.014652, -0.746622, 0, 1.0};
Point(80) = {-0.007566, -0.747782, 0, 1.0};
Point(81) = {-0.000432, -0.748685, 0, 1.0};
Point(82) = {0.006763, -0.749325, 0, 1.0};
Point(83) = {0.013951, -0.749748, 0, 1.0};
Point(84) = {0.021049, -0.749971, 0, 1.0};
Point(85) = {0.027974, -0.750000, 0, 1.0};
Point(86) = {0.034651, -0.749841, 0, 1.0};
Point(87) = {0.041007, -0.749499, 0, 1.0};
Point(88) = {0.046972, -0.748981, 0, 1.0};
Point(89) = {0.052489, -0.748296, 0, 1.0};
Point(90) = {0.057496, -0.747456, 0, 1.0};
Point(91) = {0.061948, -0.746476, 0, 1.0};
Point(92) = {0.065796, -0.745375, 0, 1.0};
Point(93) = {0.069008, -0.744176, 0, 1.0};
Point(94) = {0.071542, -0.742903, 0, 1.0};
Point(95) = {0.073391, -0.741589, 0, 1.0};
Point(96) = {0.074505, -0.740301, 0, 1.0};
Point(97) = {0.074698, -0.739911, 0, 1.0};
Point(98) = {0.074795, -0.739611, 0, 1.0};
Point(99) = {0.074832, -0.739328, 0, 1.0};
Point(100) = {0.074805, -0.739117, 0, 1.0};
Point(101) = {0.074788, -0.739044, 0, 1.0};
Point(102) = {0.074682, -0.738740, 0, 1.0};
Point(103) = {0.074134, -0.737841, 0, 1.0};
Point(104) = {0.072716, -0.736459, 0, 1.0};
Point(105) = {0.070580, -0.735039, 0, 1.0};
Point(106) = {0.067766, -0.733643, 0, 1.0};
Point(107) = {0.064276, -0.732302, 0, 1.0};
Point(108) = {0.060150, -0.731048, 0, 1.0};
Point(109) = {0.055406, -0.729900, 0, 1.0};
Point(110) = {0.050096, -0.728874, 0, 1.0};
Point(111) = {0.044253, -0.727982, 0, 1.0};
Point(112) = {0.037942, -0.727230, 0, 1.0};
Point(113) = {0.031212, -0.726622, 0, 1.0};
Point(114) = {0.024139, -0.726159, 0, 1.0};
Point(115) = {0.016786, -0.725841, 0, 1.0};
Point(116) = {0.009238, -0.725664, 0, 1.0};
Point(117) = {0.001570, -0.725627, 0, 1.0};
Point(118) = {-0.006127, -0.725732, 0, 1.0};
Point(119) = {-0.013785, -0.726005, 0, 1.0};
Point(120) = {-0.021388, -0.726417, 0, 1.0};
Point(121) = {-0.028841, -0.726907, 0, 1.0};
Point(122) = {-0.036049, -0.727447, 0, 1.0};
Point(123) = {-0.042918, -0.728044, 0, 1.0};
Point(124) = {-0.049446, -0.728650, 0, 1.0};
Point(125) = {-0.055523, -0.729156, 0, 1.0};
Point(126) = {-0.061008, -0.729507, 0, 1.0};
Point(127) = {-0.065754, -0.729681, 0, 1.0};
Point(128) = {-0.069620, -0.729694, 0, 1.0};
Point(129) = {-0.072484, -0.729589, 0, 1.0};
Point(130) = {-0.074244, -0.729443, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
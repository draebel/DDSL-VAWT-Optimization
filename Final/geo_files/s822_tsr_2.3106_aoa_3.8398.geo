SetFactory("OpenCASCADE");

Point(1) = {0.112246, 0.729365, 0, 1.0};
Point(2) = {0.111667, 0.729500, 0, 1.0};
Point(3) = {0.110040, 0.729988, 0, 1.0};
Point(4) = {0.107553, 0.730823, 0, 1.0};
Point(5) = {0.104305, 0.731901, 0, 1.0};
Point(6) = {0.100299, 0.733186, 0, 1.0};
Point(7) = {0.095622, 0.734697, 0, 1.0};
Point(8) = {0.090385, 0.736400, 0, 1.0};
Point(9) = {0.084696, 0.738239, 0, 1.0};
Point(10) = {0.078654, 0.740140, 0, 1.0};
Point(11) = {0.072346, 0.742012, 0, 1.0};
Point(12) = {0.065820, 0.743729, 0, 1.0};
Point(13) = {0.059034, 0.745262, 0, 1.0};
Point(14) = {0.052064, 0.746622, 0, 1.0};
Point(15) = {0.044978, 0.747782, 0, 1.0};
Point(16) = {0.037845, 0.748685, 0, 1.0};
Point(17) = {0.030649, 0.749325, 0, 1.0};
Point(18) = {0.023462, 0.749748, 0, 1.0};
Point(19) = {0.016365, 0.749971, 0, 1.0};
Point(20) = {0.009439, 0.750000, 0, 1.0};
Point(21) = {0.002763, 0.749841, 0, 1.0};
Point(22) = {-0.003592, 0.749499, 0, 1.0};
Point(23) = {-0.009558, 0.748981, 0, 1.0};
Point(24) = {-0.015074, 0.748296, 0, 1.0};
Point(25) = {-0.020081, 0.747456, 0, 1.0};
Point(26) = {-0.024533, 0.746476, 0, 1.0};
Point(27) = {-0.028381, 0.745375, 0, 1.0};
Point(28) = {-0.031593, 0.744176, 0, 1.0};
Point(29) = {-0.034126, 0.742903, 0, 1.0};
Point(30) = {-0.035975, 0.741589, 0, 1.0};
Point(31) = {-0.037089, 0.740301, 0, 1.0};
Point(32) = {-0.037282, 0.739911, 0, 1.0};
Point(33) = {-0.037380, 0.739612, 0, 1.0};
Point(34) = {-0.037416, 0.739328, 0, 1.0};
Point(35) = {-0.037389, 0.739117, 0, 1.0};
Point(36) = {-0.037372, 0.739044, 0, 1.0};
Point(37) = {-0.037266, 0.738741, 0, 1.0};
Point(38) = {-0.036718, 0.737842, 0, 1.0};
Point(39) = {-0.035300, 0.736460, 0, 1.0};
Point(40) = {-0.033165, 0.735039, 0, 1.0};
Point(41) = {-0.030350, 0.733644, 0, 1.0};
Point(42) = {-0.026860, 0.732303, 0, 1.0};
Point(43) = {-0.022735, 0.731049, 0, 1.0};
Point(44) = {-0.017991, 0.729901, 0, 1.0};
Point(45) = {-0.012681, 0.728875, 0, 1.0};
Point(46) = {-0.006839, 0.727983, 0, 1.0};
Point(47) = {-0.000528, 0.727231, 0, 1.0};
Point(48) = {0.006202, 0.726623, 0, 1.0};
Point(49) = {0.013275, 0.726160, 0, 1.0};
Point(50) = {0.020627, 0.725842, 0, 1.0};
Point(51) = {0.028174, 0.725665, 0, 1.0};
Point(52) = {0.035843, 0.725628, 0, 1.0};
Point(53) = {0.043539, 0.725733, 0, 1.0};
Point(54) = {0.051197, 0.726006, 0, 1.0};
Point(55) = {0.058799, 0.726418, 0, 1.0};
Point(56) = {0.066252, 0.726909, 0, 1.0};
Point(57) = {0.073460, 0.727448, 0, 1.0};
Point(58) = {0.080329, 0.728045, 0, 1.0};
Point(59) = {0.086856, 0.728651, 0, 1.0};
Point(60) = {0.092933, 0.729157, 0, 1.0};
Point(61) = {0.098418, 0.729508, 0, 1.0};
Point(62) = {0.103163, 0.729682, 0, 1.0};
Point(63) = {0.107029, 0.729695, 0, 1.0};
Point(64) = {0.109893, 0.729590, 0, 1.0};
Point(65) = {0.111653, 0.729444, 0, 1.0};
Point(66) = {-0.112246, -0.729365, 0, 1.0};
Point(67) = {-0.111667, -0.729500, 0, 1.0};
Point(68) = {-0.110040, -0.729988, 0, 1.0};
Point(69) = {-0.107553, -0.730823, 0, 1.0};
Point(70) = {-0.104305, -0.731901, 0, 1.0};
Point(71) = {-0.100299, -0.733186, 0, 1.0};
Point(72) = {-0.095622, -0.734697, 0, 1.0};
Point(73) = {-0.090385, -0.736400, 0, 1.0};
Point(74) = {-0.084696, -0.738239, 0, 1.0};
Point(75) = {-0.078654, -0.740140, 0, 1.0};
Point(76) = {-0.072346, -0.742012, 0, 1.0};
Point(77) = {-0.065820, -0.743729, 0, 1.0};
Point(78) = {-0.059034, -0.745262, 0, 1.0};
Point(79) = {-0.052064, -0.746622, 0, 1.0};
Point(80) = {-0.044978, -0.747782, 0, 1.0};
Point(81) = {-0.037845, -0.748685, 0, 1.0};
Point(82) = {-0.030649, -0.749325, 0, 1.0};
Point(83) = {-0.023462, -0.749748, 0, 1.0};
Point(84) = {-0.016365, -0.749971, 0, 1.0};
Point(85) = {-0.009439, -0.750000, 0, 1.0};
Point(86) = {-0.002763, -0.749841, 0, 1.0};
Point(87) = {0.003592, -0.749499, 0, 1.0};
Point(88) = {0.009558, -0.748981, 0, 1.0};
Point(89) = {0.015074, -0.748296, 0, 1.0};
Point(90) = {0.020081, -0.747456, 0, 1.0};
Point(91) = {0.024533, -0.746476, 0, 1.0};
Point(92) = {0.028381, -0.745375, 0, 1.0};
Point(93) = {0.031593, -0.744176, 0, 1.0};
Point(94) = {0.034126, -0.742903, 0, 1.0};
Point(95) = {0.035975, -0.741589, 0, 1.0};
Point(96) = {0.037089, -0.740301, 0, 1.0};
Point(97) = {0.037282, -0.739911, 0, 1.0};
Point(98) = {0.037380, -0.739612, 0, 1.0};
Point(99) = {0.037416, -0.739328, 0, 1.0};
Point(100) = {0.037389, -0.739117, 0, 1.0};
Point(101) = {0.037372, -0.739044, 0, 1.0};
Point(102) = {0.037266, -0.738741, 0, 1.0};
Point(103) = {0.036718, -0.737842, 0, 1.0};
Point(104) = {0.035300, -0.736460, 0, 1.0};
Point(105) = {0.033165, -0.735039, 0, 1.0};
Point(106) = {0.030350, -0.733644, 0, 1.0};
Point(107) = {0.026860, -0.732303, 0, 1.0};
Point(108) = {0.022735, -0.731049, 0, 1.0};
Point(109) = {0.017991, -0.729901, 0, 1.0};
Point(110) = {0.012681, -0.728875, 0, 1.0};
Point(111) = {0.006839, -0.727983, 0, 1.0};
Point(112) = {0.000528, -0.727231, 0, 1.0};
Point(113) = {-0.006202, -0.726623, 0, 1.0};
Point(114) = {-0.013275, -0.726160, 0, 1.0};
Point(115) = {-0.020627, -0.725842, 0, 1.0};
Point(116) = {-0.028174, -0.725665, 0, 1.0};
Point(117) = {-0.035843, -0.725628, 0, 1.0};
Point(118) = {-0.043539, -0.725733, 0, 1.0};
Point(119) = {-0.051197, -0.726006, 0, 1.0};
Point(120) = {-0.058799, -0.726418, 0, 1.0};
Point(121) = {-0.066252, -0.726909, 0, 1.0};
Point(122) = {-0.073460, -0.727448, 0, 1.0};
Point(123) = {-0.080329, -0.728045, 0, 1.0};
Point(124) = {-0.086856, -0.728651, 0, 1.0};
Point(125) = {-0.092933, -0.729157, 0, 1.0};
Point(126) = {-0.098418, -0.729508, 0, 1.0};
Point(127) = {-0.103163, -0.729682, 0, 1.0};
Point(128) = {-0.107029, -0.729695, 0, 1.0};
Point(129) = {-0.109893, -0.729590, 0, 1.0};
Point(130) = {-0.111653, -0.729444, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149551, 0.722486, 0, 1.0};
Point(2) = {0.148779, 0.722666, 0, 1.0};
Point(3) = {0.146610, 0.723316, 0, 1.0};
Point(4) = {0.143294, 0.724430, 0, 1.0};
Point(5) = {0.138963, 0.725867, 0, 1.0};
Point(6) = {0.133621, 0.727581, 0, 1.0};
Point(7) = {0.127385, 0.729595, 0, 1.0};
Point(8) = {0.120403, 0.731866, 0, 1.0};
Point(9) = {0.112817, 0.734319, 0, 1.0};
Point(10) = {0.104761, 0.736853, 0, 1.0};
Point(11) = {0.096350, 0.739349, 0, 1.0};
Point(12) = {0.087649, 0.741638, 0, 1.0};
Point(13) = {0.078600, 0.743682, 0, 1.0};
Point(14) = {0.069306, 0.745496, 0, 1.0};
Point(15) = {0.059858, 0.747043, 0, 1.0};
Point(16) = {0.050347, 0.748246, 0, 1.0};
Point(17) = {0.040753, 0.749100, 0, 1.0};
Point(18) = {0.031170, 0.749664, 0, 1.0};
Point(19) = {0.021706, 0.749961, 0, 1.0};
Point(20) = {0.012472, 0.750000, 0, 1.0};
Point(21) = {0.003570, 0.749787, 0, 1.0};
Point(22) = {-0.004904, 0.749332, 0, 1.0};
Point(23) = {-0.012858, 0.748641, 0, 1.0};
Point(24) = {-0.020213, 0.747728, 0, 1.0};
Point(25) = {-0.026888, 0.746608, 0, 1.0};
Point(26) = {-0.032825, 0.745301, 0, 1.0};
Point(27) = {-0.037956, 0.743833, 0, 1.0};
Point(28) = {-0.042239, 0.742234, 0, 1.0};
Point(29) = {-0.045616, 0.740537, 0, 1.0};
Point(30) = {-0.048081, 0.738786, 0, 1.0};
Point(31) = {-0.049567, 0.737068, 0, 1.0};
Point(32) = {-0.049825, 0.736548, 0, 1.0};
Point(33) = {-0.049954, 0.736148, 0, 1.0};
Point(34) = {-0.050003, 0.735771, 0, 1.0};
Point(35) = {-0.049967, 0.735489, 0, 1.0};
Point(36) = {-0.049944, 0.735392, 0, 1.0};
Point(37) = {-0.049803, 0.734987, 0, 1.0};
Point(38) = {-0.049072, 0.733789, 0, 1.0};
Point(39) = {-0.047182, 0.731946, 0, 1.0};
Point(40) = {-0.044334, 0.730052, 0, 1.0};
Point(41) = {-0.040582, 0.728191, 0, 1.0};
Point(42) = {-0.035928, 0.726403, 0, 1.0};
Point(43) = {-0.030428, 0.724732, 0, 1.0};
Point(44) = {-0.024103, 0.723200, 0, 1.0};
Point(45) = {-0.017023, 0.721833, 0, 1.0};
Point(46) = {-0.009232, 0.720643, 0, 1.0};
Point(47) = {-0.000818, 0.719640, 0, 1.0};
Point(48) = {0.008156, 0.718830, 0, 1.0};
Point(49) = {0.017586, 0.718213, 0, 1.0};
Point(50) = {0.027390, 0.717788, 0, 1.0};
Point(51) = {0.037453, 0.717553, 0, 1.0};
Point(52) = {0.047678, 0.717504, 0, 1.0};
Point(53) = {0.057940, 0.717643, 0, 1.0};
Point(54) = {0.068150, 0.718008, 0, 1.0};
Point(55) = {0.078287, 0.718557, 0, 1.0};
Point(56) = {0.088224, 0.719211, 0, 1.0};
Point(57) = {0.097835, 0.719930, 0, 1.0};
Point(58) = {0.106993, 0.720726, 0, 1.0};
Point(59) = {0.115697, 0.721534, 0, 1.0};
Point(60) = {0.123800, 0.722209, 0, 1.0};
Point(61) = {0.131113, 0.722676, 0, 1.0};
Point(62) = {0.137440, 0.722909, 0, 1.0};
Point(63) = {0.142595, 0.722926, 0, 1.0};
Point(64) = {0.146413, 0.722786, 0, 1.0};
Point(65) = {0.148761, 0.722591, 0, 1.0};
Point(66) = {-0.149551, -0.722486, 0, 1.0};
Point(67) = {-0.148779, -0.722666, 0, 1.0};
Point(68) = {-0.146610, -0.723316, 0, 1.0};
Point(69) = {-0.143294, -0.724430, 0, 1.0};
Point(70) = {-0.138963, -0.725867, 0, 1.0};
Point(71) = {-0.133621, -0.727581, 0, 1.0};
Point(72) = {-0.127385, -0.729595, 0, 1.0};
Point(73) = {-0.120403, -0.731866, 0, 1.0};
Point(74) = {-0.112817, -0.734319, 0, 1.0};
Point(75) = {-0.104761, -0.736853, 0, 1.0};
Point(76) = {-0.096350, -0.739349, 0, 1.0};
Point(77) = {-0.087649, -0.741638, 0, 1.0};
Point(78) = {-0.078600, -0.743682, 0, 1.0};
Point(79) = {-0.069306, -0.745496, 0, 1.0};
Point(80) = {-0.059858, -0.747043, 0, 1.0};
Point(81) = {-0.050347, -0.748246, 0, 1.0};
Point(82) = {-0.040753, -0.749100, 0, 1.0};
Point(83) = {-0.031170, -0.749664, 0, 1.0};
Point(84) = {-0.021706, -0.749961, 0, 1.0};
Point(85) = {-0.012472, -0.750000, 0, 1.0};
Point(86) = {-0.003570, -0.749787, 0, 1.0};
Point(87) = {0.004904, -0.749332, 0, 1.0};
Point(88) = {0.012858, -0.748641, 0, 1.0};
Point(89) = {0.020213, -0.747728, 0, 1.0};
Point(90) = {0.026888, -0.746608, 0, 1.0};
Point(91) = {0.032825, -0.745301, 0, 1.0};
Point(92) = {0.037956, -0.743833, 0, 1.0};
Point(93) = {0.042239, -0.742234, 0, 1.0};
Point(94) = {0.045616, -0.740537, 0, 1.0};
Point(95) = {0.048081, -0.738786, 0, 1.0};
Point(96) = {0.049567, -0.737068, 0, 1.0};
Point(97) = {0.049825, -0.736548, 0, 1.0};
Point(98) = {0.049954, -0.736148, 0, 1.0};
Point(99) = {0.050003, -0.735771, 0, 1.0};
Point(100) = {0.049967, -0.735489, 0, 1.0};
Point(101) = {0.049944, -0.735392, 0, 1.0};
Point(102) = {0.049803, -0.734987, 0, 1.0};
Point(103) = {0.049072, -0.733789, 0, 1.0};
Point(104) = {0.047182, -0.731946, 0, 1.0};
Point(105) = {0.044334, -0.730052, 0, 1.0};
Point(106) = {0.040582, -0.728191, 0, 1.0};
Point(107) = {0.035928, -0.726403, 0, 1.0};
Point(108) = {0.030428, -0.724732, 0, 1.0};
Point(109) = {0.024103, -0.723200, 0, 1.0};
Point(110) = {0.017023, -0.721833, 0, 1.0};
Point(111) = {0.009232, -0.720643, 0, 1.0};
Point(112) = {0.000818, -0.719640, 0, 1.0};
Point(113) = {-0.008156, -0.718830, 0, 1.0};
Point(114) = {-0.017586, -0.718213, 0, 1.0};
Point(115) = {-0.027390, -0.717788, 0, 1.0};
Point(116) = {-0.037453, -0.717553, 0, 1.0};
Point(117) = {-0.047678, -0.717504, 0, 1.0};
Point(118) = {-0.057940, -0.717643, 0, 1.0};
Point(119) = {-0.068150, -0.718008, 0, 1.0};
Point(120) = {-0.078287, -0.718557, 0, 1.0};
Point(121) = {-0.088224, -0.719211, 0, 1.0};
Point(122) = {-0.097835, -0.719930, 0, 1.0};
Point(123) = {-0.106993, -0.720726, 0, 1.0};
Point(124) = {-0.115697, -0.721534, 0, 1.0};
Point(125) = {-0.123800, -0.722209, 0, 1.0};
Point(126) = {-0.131113, -0.722676, 0, 1.0};
Point(127) = {-0.137440, -0.722909, 0, 1.0};
Point(128) = {-0.142595, -0.722926, 0, 1.0};
Point(129) = {-0.146413, -0.722786, 0, 1.0};
Point(130) = {-0.148761, -0.722591, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
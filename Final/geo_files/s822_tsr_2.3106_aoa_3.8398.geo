SetFactory("OpenCASCADE");

Point(1) = {0.074776, 0.736243, 0, 1.0};
Point(2) = {0.074390, 0.736333, 0, 1.0};
Point(3) = {0.073305, 0.736658, 0, 1.0};
Point(4) = {0.071647, 0.737215, 0, 1.0};
Point(5) = {0.069481, 0.737934, 0, 1.0};
Point(6) = {0.066811, 0.738790, 0, 1.0};
Point(7) = {0.063692, 0.739798, 0, 1.0};
Point(8) = {0.060201, 0.740933, 0, 1.0};
Point(9) = {0.056409, 0.742159, 0, 1.0};
Point(10) = {0.052381, 0.743427, 0, 1.0};
Point(11) = {0.048175, 0.744675, 0, 1.0};
Point(12) = {0.043824, 0.745819, 0, 1.0};
Point(13) = {0.039300, 0.746841, 0, 1.0};
Point(14) = {0.034653, 0.747748, 0, 1.0};
Point(15) = {0.029929, 0.748521, 0, 1.0};
Point(16) = {0.025173, 0.749123, 0, 1.0};
Point(17) = {0.020377, 0.749550, 0, 1.0};
Point(18) = {0.015585, 0.749832, 0, 1.0};
Point(19) = {0.010853, 0.749980, 0, 1.0};
Point(20) = {0.006236, 0.750000, 0, 1.0};
Point(21) = {0.001785, 0.749894, 0, 1.0};
Point(22) = {-0.002452, 0.749666, 0, 1.0};
Point(23) = {-0.006429, 0.749320, 0, 1.0};
Point(24) = {-0.010106, 0.748864, 0, 1.0};
Point(25) = {-0.013444, 0.748304, 0, 1.0};
Point(26) = {-0.016412, 0.747651, 0, 1.0};
Point(27) = {-0.018978, 0.746917, 0, 1.0};
Point(28) = {-0.021119, 0.746117, 0, 1.0};
Point(29) = {-0.022808, 0.745269, 0, 1.0};
Point(30) = {-0.024041, 0.744393, 0, 1.0};
Point(31) = {-0.024784, 0.743534, 0, 1.0};
Point(32) = {-0.024912, 0.743274, 0, 1.0};
Point(33) = {-0.024977, 0.743074, 0, 1.0};
Point(34) = {-0.025001, 0.742885, 0, 1.0};
Point(35) = {-0.024984, 0.742745, 0, 1.0};
Point(36) = {-0.024972, 0.742696, 0, 1.0};
Point(37) = {-0.024901, 0.742494, 0, 1.0};
Point(38) = {-0.024536, 0.741894, 0, 1.0};
Point(39) = {-0.023591, 0.740973, 0, 1.0};
Point(40) = {-0.022167, 0.740026, 0, 1.0};
Point(41) = {-0.020291, 0.739096, 0, 1.0};
Point(42) = {-0.017964, 0.738202, 0, 1.0};
Point(43) = {-0.015214, 0.737366, 0, 1.0};
Point(44) = {-0.012051, 0.736600, 0, 1.0};
Point(45) = {-0.008511, 0.735917, 0, 1.0};
Point(46) = {-0.004616, 0.735321, 0, 1.0};
Point(47) = {-0.000409, 0.734820, 0, 1.0};
Point(48) = {0.004078, 0.734415, 0, 1.0};
Point(49) = {0.008793, 0.734106, 0, 1.0};
Point(50) = {0.013695, 0.733894, 0, 1.0};
Point(51) = {0.018727, 0.733776, 0, 1.0};
Point(52) = {0.023839, 0.733752, 0, 1.0};
Point(53) = {0.028970, 0.733822, 0, 1.0};
Point(54) = {0.034075, 0.734004, 0, 1.0};
Point(55) = {0.039143, 0.734279, 0, 1.0};
Point(56) = {0.044112, 0.734605, 0, 1.0};
Point(57) = {0.048918, 0.734965, 0, 1.0};
Point(58) = {0.053497, 0.735363, 0, 1.0};
Point(59) = {0.057848, 0.735767, 0, 1.0};
Point(60) = {0.061900, 0.736105, 0, 1.0};
Point(61) = {0.065556, 0.736338, 0, 1.0};
Point(62) = {0.068720, 0.736454, 0, 1.0};
Point(63) = {0.071297, 0.736463, 0, 1.0};
Point(64) = {0.073207, 0.736393, 0, 1.0};
Point(65) = {0.074380, 0.736295, 0, 1.0};
Point(66) = {-0.074776, -0.736243, 0, 1.0};
Point(67) = {-0.074390, -0.736333, 0, 1.0};
Point(68) = {-0.073305, -0.736658, 0, 1.0};
Point(69) = {-0.071647, -0.737215, 0, 1.0};
Point(70) = {-0.069481, -0.737934, 0, 1.0};
Point(71) = {-0.066811, -0.738790, 0, 1.0};
Point(72) = {-0.063692, -0.739798, 0, 1.0};
Point(73) = {-0.060201, -0.740933, 0, 1.0};
Point(74) = {-0.056409, -0.742159, 0, 1.0};
Point(75) = {-0.052381, -0.743427, 0, 1.0};
Point(76) = {-0.048175, -0.744675, 0, 1.0};
Point(77) = {-0.043824, -0.745819, 0, 1.0};
Point(78) = {-0.039300, -0.746841, 0, 1.0};
Point(79) = {-0.034653, -0.747748, 0, 1.0};
Point(80) = {-0.029929, -0.748521, 0, 1.0};
Point(81) = {-0.025173, -0.749123, 0, 1.0};
Point(82) = {-0.020377, -0.749550, 0, 1.0};
Point(83) = {-0.015585, -0.749832, 0, 1.0};
Point(84) = {-0.010853, -0.749980, 0, 1.0};
Point(85) = {-0.006236, -0.750000, 0, 1.0};
Point(86) = {-0.001785, -0.749894, 0, 1.0};
Point(87) = {0.002452, -0.749666, 0, 1.0};
Point(88) = {0.006429, -0.749320, 0, 1.0};
Point(89) = {0.010106, -0.748864, 0, 1.0};
Point(90) = {0.013444, -0.748304, 0, 1.0};
Point(91) = {0.016412, -0.747651, 0, 1.0};
Point(92) = {0.018978, -0.746917, 0, 1.0};
Point(93) = {0.021119, -0.746117, 0, 1.0};
Point(94) = {0.022808, -0.745269, 0, 1.0};
Point(95) = {0.024041, -0.744393, 0, 1.0};
Point(96) = {0.024784, -0.743534, 0, 1.0};
Point(97) = {0.024912, -0.743274, 0, 1.0};
Point(98) = {0.024977, -0.743074, 0, 1.0};
Point(99) = {0.025001, -0.742885, 0, 1.0};
Point(100) = {0.024984, -0.742745, 0, 1.0};
Point(101) = {0.024972, -0.742696, 0, 1.0};
Point(102) = {0.024901, -0.742494, 0, 1.0};
Point(103) = {0.024536, -0.741894, 0, 1.0};
Point(104) = {0.023591, -0.740973, 0, 1.0};
Point(105) = {0.022167, -0.740026, 0, 1.0};
Point(106) = {0.020291, -0.739096, 0, 1.0};
Point(107) = {0.017964, -0.738202, 0, 1.0};
Point(108) = {0.015214, -0.737366, 0, 1.0};
Point(109) = {0.012051, -0.736600, 0, 1.0};
Point(110) = {0.008511, -0.735917, 0, 1.0};
Point(111) = {0.004616, -0.735321, 0, 1.0};
Point(112) = {0.000409, -0.734820, 0, 1.0};
Point(113) = {-0.004078, -0.734415, 0, 1.0};
Point(114) = {-0.008793, -0.734106, 0, 1.0};
Point(115) = {-0.013695, -0.733894, 0, 1.0};
Point(116) = {-0.018727, -0.733776, 0, 1.0};
Point(117) = {-0.023839, -0.733752, 0, 1.0};
Point(118) = {-0.028970, -0.733822, 0, 1.0};
Point(119) = {-0.034075, -0.734004, 0, 1.0};
Point(120) = {-0.039143, -0.734279, 0, 1.0};
Point(121) = {-0.044112, -0.734605, 0, 1.0};
Point(122) = {-0.048918, -0.734965, 0, 1.0};
Point(123) = {-0.053497, -0.735363, 0, 1.0};
Point(124) = {-0.057848, -0.735767, 0, 1.0};
Point(125) = {-0.061900, -0.736105, 0, 1.0};
Point(126) = {-0.065556, -0.736338, 0, 1.0};
Point(127) = {-0.068720, -0.736454, 0, 1.0};
Point(128) = {-0.071297, -0.736463, 0, 1.0};
Point(129) = {-0.073207, -0.736393, 0, 1.0};
Point(130) = {-0.074380, -0.736295, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
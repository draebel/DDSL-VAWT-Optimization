SetFactory("OpenCASCADE");

Point(1) = {0.074124, 0.747991, 0, 1.0};
Point(2) = {0.073523, 0.747969, 0, 1.0};
Point(3) = {0.071803, 0.748010, 0, 1.0};
Point(4) = {0.069144, 0.748211, 0, 1.0};
Point(5) = {0.065712, 0.748555, 0, 1.0};
Point(6) = {0.061635, 0.748986, 0, 1.0};
Point(7) = {0.057012, 0.749432, 0, 1.0};
Point(8) = {0.051928, 0.749805, 0, 1.0};
Point(9) = {0.046408, 0.750000, 0, 1.0};
Point(10) = {0.040424, 0.749985, 0, 1.0};
Point(11) = {0.033999, 0.749796, 0, 1.0};
Point(12) = {0.027210, 0.749453, 0, 1.0};
Point(13) = {0.020125, 0.748961, 0, 1.0};
Point(14) = {0.012823, 0.748331, 0, 1.0};
Point(15) = {0.005385, 0.747568, 0, 1.0};
Point(16) = {-0.002108, 0.746679, 0, 1.0};
Point(17) = {-0.009575, 0.745669, 0, 1.0};
Point(18) = {-0.016936, 0.744548, 0, 1.0};
Point(19) = {-0.024112, 0.743324, 0, 1.0};
Point(20) = {-0.031029, 0.742007, 0, 1.0};
Point(21) = {-0.037615, 0.740607, 0, 1.0};
Point(22) = {-0.043804, 0.739138, 0, 1.0};
Point(23) = {-0.049533, 0.737611, 0, 1.0};
Point(24) = {-0.054750, 0.736041, 0, 1.0};
Point(25) = {-0.059408, 0.734445, 0, 1.0};
Point(26) = {-0.063469, 0.732843, 0, 1.0};
Point(27) = {-0.066899, 0.731258, 0, 1.0};
Point(28) = {-0.069679, 0.729716, 0, 1.0};
Point(29) = {-0.071792, 0.728251, 0, 1.0};
Point(30) = {-0.073233, 0.726908, 0, 1.0};
Point(31) = {-0.073951, 0.725849, 0, 1.0};
Point(32) = {-0.074064, 0.725541, 0, 1.0};
Point(33) = {-0.074118, 0.725264, 0, 1.0};
Point(34) = {-0.074120, 0.725101, 0, 1.0};
Point(35) = {-0.074085, 0.724964, 0, 1.0};
Point(36) = {-0.074002, 0.724844, 0, 1.0};
Point(37) = {-0.073869, 0.724727, 0, 1.0};
Point(38) = {-0.073598, 0.724555, 0, 1.0};
Point(39) = {-0.073248, 0.724386, 0, 1.0};
Point(40) = {-0.071367, 0.723857, 0, 1.0};
Point(41) = {-0.068838, 0.723515, 0, 1.0};
Point(42) = {-0.065571, 0.723341, 0, 1.0};
Point(43) = {-0.061593, 0.723345, 0, 1.0};
Point(44) = {-0.056936, 0.723524, 0, 1.0};
Point(45) = {-0.051649, 0.723866, 0, 1.0};
Point(46) = {-0.045793, 0.724360, 0, 1.0};
Point(47) = {-0.039438, 0.725000, 0, 1.0};
Point(48) = {-0.032656, 0.725778, 0, 1.0};
Point(49) = {-0.025522, 0.726692, 0, 1.0};
Point(50) = {-0.018106, 0.727728, 0, 1.0};
Point(51) = {-0.010490, 0.728870, 0, 1.0};
Point(52) = {-0.002758, 0.730098, 0, 1.0};
Point(53) = {0.004998, 0.731398, 0, 1.0};
Point(54) = {0.012690, 0.732752, 0, 1.0};
Point(55) = {0.020230, 0.734148, 0, 1.0};
Point(56) = {0.027530, 0.735571, 0, 1.0};
Point(57) = {0.034506, 0.737013, 0, 1.0};
Point(58) = {0.041078, 0.738461, 0, 1.0};
Point(59) = {0.047164, 0.739921, 0, 1.0};
Point(60) = {0.052738, 0.741418, 0, 1.0};
Point(61) = {0.057807, 0.742901, 0, 1.0};
Point(62) = {0.062308, 0.744290, 0, 1.0};
Point(63) = {0.066185, 0.745561, 0, 1.0};
Point(64) = {0.069419, 0.746643, 0, 1.0};
Point(65) = {0.071927, 0.747432, 0, 1.0};
Point(66) = {0.073553, 0.747867, 0, 1.0};
Point(67) = {-0.074124, -0.747991, 0, 1.0};
Point(68) = {-0.073523, -0.747969, 0, 1.0};
Point(69) = {-0.071803, -0.748010, 0, 1.0};
Point(70) = {-0.069144, -0.748211, 0, 1.0};
Point(71) = {-0.065712, -0.748555, 0, 1.0};
Point(72) = {-0.061635, -0.748986, 0, 1.0};
Point(73) = {-0.057012, -0.749432, 0, 1.0};
Point(74) = {-0.051928, -0.749805, 0, 1.0};
Point(75) = {-0.046408, -0.750000, 0, 1.0};
Point(76) = {-0.040424, -0.749985, 0, 1.0};
Point(77) = {-0.033999, -0.749796, 0, 1.0};
Point(78) = {-0.027210, -0.749453, 0, 1.0};
Point(79) = {-0.020125, -0.748961, 0, 1.0};
Point(80) = {-0.012823, -0.748331, 0, 1.0};
Point(81) = {-0.005385, -0.747568, 0, 1.0};
Point(82) = {0.002108, -0.746679, 0, 1.0};
Point(83) = {0.009575, -0.745669, 0, 1.0};
Point(84) = {0.016936, -0.744548, 0, 1.0};
Point(85) = {0.024112, -0.743324, 0, 1.0};
Point(86) = {0.031029, -0.742007, 0, 1.0};
Point(87) = {0.037615, -0.740607, 0, 1.0};
Point(88) = {0.043804, -0.739138, 0, 1.0};
Point(89) = {0.049533, -0.737611, 0, 1.0};
Point(90) = {0.054750, -0.736041, 0, 1.0};
Point(91) = {0.059408, -0.734445, 0, 1.0};
Point(92) = {0.063469, -0.732843, 0, 1.0};
Point(93) = {0.066899, -0.731258, 0, 1.0};
Point(94) = {0.069679, -0.729716, 0, 1.0};
Point(95) = {0.071792, -0.728251, 0, 1.0};
Point(96) = {0.073233, -0.726908, 0, 1.0};
Point(97) = {0.073951, -0.725849, 0, 1.0};
Point(98) = {0.074064, -0.725541, 0, 1.0};
Point(99) = {0.074118, -0.725264, 0, 1.0};
Point(100) = {0.074120, -0.725101, 0, 1.0};
Point(101) = {0.074085, -0.724964, 0, 1.0};
Point(102) = {0.074002, -0.724844, 0, 1.0};
Point(103) = {0.073869, -0.724727, 0, 1.0};
Point(104) = {0.073598, -0.724555, 0, 1.0};
Point(105) = {0.073248, -0.724386, 0, 1.0};
Point(106) = {0.071367, -0.723857, 0, 1.0};
Point(107) = {0.068838, -0.723515, 0, 1.0};
Point(108) = {0.065571, -0.723341, 0, 1.0};
Point(109) = {0.061593, -0.723345, 0, 1.0};
Point(110) = {0.056936, -0.723524, 0, 1.0};
Point(111) = {0.051649, -0.723866, 0, 1.0};
Point(112) = {0.045793, -0.724360, 0, 1.0};
Point(113) = {0.039438, -0.725000, 0, 1.0};
Point(114) = {0.032656, -0.725778, 0, 1.0};
Point(115) = {0.025522, -0.726692, 0, 1.0};
Point(116) = {0.018106, -0.727728, 0, 1.0};
Point(117) = {0.010490, -0.728870, 0, 1.0};
Point(118) = {0.002758, -0.730098, 0, 1.0};
Point(119) = {-0.004998, -0.731398, 0, 1.0};
Point(120) = {-0.012690, -0.732752, 0, 1.0};
Point(121) = {-0.020230, -0.734148, 0, 1.0};
Point(122) = {-0.027530, -0.735571, 0, 1.0};
Point(123) = {-0.034506, -0.737013, 0, 1.0};
Point(124) = {-0.041078, -0.738461, 0, 1.0};
Point(125) = {-0.047164, -0.739921, 0, 1.0};
Point(126) = {-0.052738, -0.741418, 0, 1.0};
Point(127) = {-0.057807, -0.742901, 0, 1.0};
Point(128) = {-0.062308, -0.744290, 0, 1.0};
Point(129) = {-0.066185, -0.745561, 0, 1.0};
Point(130) = {-0.069419, -0.746643, 0, 1.0};
Point(131) = {-0.071927, -0.747432, 0, 1.0};
Point(132) = {-0.073553, -0.747867, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
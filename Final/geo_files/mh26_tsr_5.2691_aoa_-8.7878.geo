SetFactory("OpenCASCADE");

Point(1) = {0.147652, 0.747322, 0, 1.0};
Point(2) = {0.146851, 0.747293, 0, 1.0};
Point(3) = {0.144558, 0.747347, 0, 1.0};
Point(4) = {0.141013, 0.747615, 0, 1.0};
Point(5) = {0.136437, 0.748073, 0, 1.0};
Point(6) = {0.131001, 0.748647, 0, 1.0};
Point(7) = {0.124837, 0.749242, 0, 1.0};
Point(8) = {0.118058, 0.749741, 0, 1.0};
Point(9) = {0.110698, 0.750000, 0, 1.0};
Point(10) = {0.102719, 0.749979, 0, 1.0};
Point(11) = {0.094153, 0.749728, 0, 1.0};
Point(12) = {0.085101, 0.749271, 0, 1.0};
Point(13) = {0.075655, 0.748615, 0, 1.0};
Point(14) = {0.065918, 0.747775, 0, 1.0};
Point(15) = {0.056001, 0.746757, 0, 1.0};
Point(16) = {0.046011, 0.745571, 0, 1.0};
Point(17) = {0.036055, 0.744225, 0, 1.0};
Point(18) = {0.026241, 0.742731, 0, 1.0};
Point(19) = {0.016672, 0.741098, 0, 1.0};
Point(20) = {0.007449, 0.739342, 0, 1.0};
Point(21) = {-0.001332, 0.737476, 0, 1.0};
Point(22) = {-0.009584, 0.735518, 0, 1.0};
Point(23) = {-0.017223, 0.733481, 0, 1.0};
Point(24) = {-0.024179, 0.731388, 0, 1.0};
Point(25) = {-0.030389, 0.729260, 0, 1.0};
Point(26) = {-0.035803, 0.727124, 0, 1.0};
Point(27) = {-0.040377, 0.725010, 0, 1.0};
Point(28) = {-0.044083, 0.722954, 0, 1.0};
Point(29) = {-0.046901, 0.721001, 0, 1.0};
Point(30) = {-0.048823, 0.719211, 0, 1.0};
Point(31) = {-0.049780, 0.717799, 0, 1.0};
Point(32) = {-0.049930, 0.717388, 0, 1.0};
Point(33) = {-0.050002, 0.717018, 0, 1.0};
Point(34) = {-0.050004, 0.716801, 0, 1.0};
Point(35) = {-0.049959, 0.716618, 0, 1.0};
Point(36) = {-0.049848, 0.716458, 0, 1.0};
Point(37) = {-0.049670, 0.716302, 0, 1.0};
Point(38) = {-0.049309, 0.716073, 0, 1.0};
Point(39) = {-0.048843, 0.715848, 0, 1.0};
Point(40) = {-0.046334, 0.715142, 0, 1.0};
Point(41) = {-0.042963, 0.714687, 0, 1.0};
Point(42) = {-0.038607, 0.714455, 0, 1.0};
Point(43) = {-0.033302, 0.714461, 0, 1.0};
Point(44) = {-0.027094, 0.714699, 0, 1.0};
Point(45) = {-0.020044, 0.715155, 0, 1.0};
Point(46) = {-0.012236, 0.715814, 0, 1.0};
Point(47) = {-0.003762, 0.716667, 0, 1.0};
Point(48) = {0.005279, 0.717705, 0, 1.0};
Point(49) = {0.014792, 0.718923, 0, 1.0};
Point(50) = {0.024679, 0.720305, 0, 1.0};
Point(51) = {0.034835, 0.721827, 0, 1.0};
Point(52) = {0.045143, 0.723464, 0, 1.0};
Point(53) = {0.055485, 0.725197, 0, 1.0};
Point(54) = {0.065742, 0.727002, 0, 1.0};
Point(55) = {0.075795, 0.728864, 0, 1.0};
Point(56) = {0.085528, 0.730762, 0, 1.0};
Point(57) = {0.094829, 0.732684, 0, 1.0};
Point(58) = {0.103591, 0.734614, 0, 1.0};
Point(59) = {0.111707, 0.736561, 0, 1.0};
Point(60) = {0.119138, 0.738557, 0, 1.0};
Point(61) = {0.125896, 0.740535, 0, 1.0};
Point(62) = {0.131898, 0.742387, 0, 1.0};
Point(63) = {0.137068, 0.744081, 0, 1.0};
Point(64) = {0.141380, 0.745524, 0, 1.0};
Point(65) = {0.144724, 0.746575, 0, 1.0};
Point(66) = {0.146892, 0.747156, 0, 1.0};
Point(67) = {-0.147652, -0.747322, 0, 1.0};
Point(68) = {-0.146851, -0.747293, 0, 1.0};
Point(69) = {-0.144558, -0.747347, 0, 1.0};
Point(70) = {-0.141013, -0.747615, 0, 1.0};
Point(71) = {-0.136437, -0.748073, 0, 1.0};
Point(72) = {-0.131001, -0.748647, 0, 1.0};
Point(73) = {-0.124837, -0.749242, 0, 1.0};
Point(74) = {-0.118058, -0.749741, 0, 1.0};
Point(75) = {-0.110698, -0.750000, 0, 1.0};
Point(76) = {-0.102719, -0.749979, 0, 1.0};
Point(77) = {-0.094153, -0.749728, 0, 1.0};
Point(78) = {-0.085101, -0.749271, 0, 1.0};
Point(79) = {-0.075655, -0.748615, 0, 1.0};
Point(80) = {-0.065918, -0.747775, 0, 1.0};
Point(81) = {-0.056001, -0.746757, 0, 1.0};
Point(82) = {-0.046011, -0.745571, 0, 1.0};
Point(83) = {-0.036055, -0.744225, 0, 1.0};
Point(84) = {-0.026241, -0.742731, 0, 1.0};
Point(85) = {-0.016672, -0.741098, 0, 1.0};
Point(86) = {-0.007449, -0.739342, 0, 1.0};
Point(87) = {0.001332, -0.737476, 0, 1.0};
Point(88) = {0.009584, -0.735518, 0, 1.0};
Point(89) = {0.017223, -0.733481, 0, 1.0};
Point(90) = {0.024179, -0.731388, 0, 1.0};
Point(91) = {0.030389, -0.729260, 0, 1.0};
Point(92) = {0.035803, -0.727124, 0, 1.0};
Point(93) = {0.040377, -0.725010, 0, 1.0};
Point(94) = {0.044083, -0.722954, 0, 1.0};
Point(95) = {0.046901, -0.721001, 0, 1.0};
Point(96) = {0.048823, -0.719211, 0, 1.0};
Point(97) = {0.049780, -0.717799, 0, 1.0};
Point(98) = {0.049930, -0.717388, 0, 1.0};
Point(99) = {0.050002, -0.717018, 0, 1.0};
Point(100) = {0.050004, -0.716801, 0, 1.0};
Point(101) = {0.049959, -0.716618, 0, 1.0};
Point(102) = {0.049848, -0.716458, 0, 1.0};
Point(103) = {0.049670, -0.716302, 0, 1.0};
Point(104) = {0.049309, -0.716073, 0, 1.0};
Point(105) = {0.048843, -0.715848, 0, 1.0};
Point(106) = {0.046334, -0.715142, 0, 1.0};
Point(107) = {0.042963, -0.714687, 0, 1.0};
Point(108) = {0.038607, -0.714455, 0, 1.0};
Point(109) = {0.033302, -0.714461, 0, 1.0};
Point(110) = {0.027094, -0.714699, 0, 1.0};
Point(111) = {0.020044, -0.715155, 0, 1.0};
Point(112) = {0.012236, -0.715814, 0, 1.0};
Point(113) = {0.003762, -0.716667, 0, 1.0};
Point(114) = {-0.005279, -0.717705, 0, 1.0};
Point(115) = {-0.014792, -0.718923, 0, 1.0};
Point(116) = {-0.024679, -0.720305, 0, 1.0};
Point(117) = {-0.034835, -0.721827, 0, 1.0};
Point(118) = {-0.045143, -0.723464, 0, 1.0};
Point(119) = {-0.055485, -0.725197, 0, 1.0};
Point(120) = {-0.065742, -0.727002, 0, 1.0};
Point(121) = {-0.075795, -0.728864, 0, 1.0};
Point(122) = {-0.085528, -0.730762, 0, 1.0};
Point(123) = {-0.094829, -0.732684, 0, 1.0};
Point(124) = {-0.103591, -0.734614, 0, 1.0};
Point(125) = {-0.111707, -0.736561, 0, 1.0};
Point(126) = {-0.119138, -0.738557, 0, 1.0};
Point(127) = {-0.125896, -0.740535, 0, 1.0};
Point(128) = {-0.131898, -0.742387, 0, 1.0};
Point(129) = {-0.137068, -0.744081, 0, 1.0};
Point(130) = {-0.141380, -0.745524, 0, 1.0};
Point(131) = {-0.144724, -0.746575, 0, 1.0};
Point(132) = {-0.146892, -0.747156, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
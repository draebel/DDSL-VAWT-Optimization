SetFactory("OpenCASCADE");

Point(1) = {0.074674, 0.711667, 0, 1.0};
Point(2) = {0.072935, 0.713490, 0, 1.0};
Point(3) = {0.070271, 0.716143, 0, 1.0};
Point(4) = {0.067525, 0.718712, 0, 1.0};
Point(5) = {0.064701, 0.721194, 0, 1.0};
Point(6) = {0.061801, 0.723586, 0, 1.0};
Point(7) = {0.058828, 0.725888, 0, 1.0};
Point(8) = {0.055784, 0.728095, 0, 1.0};
Point(9) = {0.052673, 0.730207, 0, 1.0};
Point(10) = {0.049498, 0.732221, 0, 1.0};
Point(11) = {0.046262, 0.734135, 0, 1.0};
Point(12) = {0.042968, 0.735947, 0, 1.0};
Point(13) = {0.039619, 0.737656, 0, 1.0};
Point(14) = {0.036218, 0.739260, 0, 1.0};
Point(15) = {0.032769, 0.740757, 0, 1.0};
Point(16) = {0.029275, 0.742146, 0, 1.0};
Point(17) = {0.025740, 0.743426, 0, 1.0};
Point(18) = {0.022166, 0.744595, 0, 1.0};
Point(19) = {0.018558, 0.745652, 0, 1.0};
Point(20) = {0.014919, 0.746596, 0, 1.0};
Point(21) = {0.011252, 0.747426, 0, 1.0};
Point(22) = {0.007560, 0.748142, 0, 1.0};
Point(23) = {0.003849, 0.748743, 0, 1.0};
Point(24) = {0.000121, 0.749228, 0, 1.0};
Point(25) = {-0.003621, 0.749596, 0, 1.0};
Point(26) = {-0.007373, 0.749848, 0, 1.0};
Point(27) = {-0.011130, 0.749982, 0, 1.0};
Point(28) = {-0.014890, 0.750000, 0, 1.0};
Point(29) = {-0.018649, 0.749901, 0, 1.0};
Point(30) = {-0.022402, 0.749684, 0, 1.0};
Point(31) = {-0.026147, 0.749351, 0, 1.0};
Point(32) = {-0.029880, 0.748902, 0, 1.0};
Point(33) = {-0.033597, 0.748336, 0, 1.0};
Point(34) = {-0.037295, 0.747655, 0, 1.0};
Point(35) = {-0.040970, 0.746859, 0, 1.0};
Point(36) = {-0.044618, 0.745949, 0, 1.0};
Point(37) = {-0.048236, 0.744926, 0, 1.0};
Point(38) = {-0.051820, 0.743791, 0, 1.0};
Point(39) = {-0.055368, 0.742545, 0, 1.0};
Point(40) = {-0.058874, 0.741189, 0, 1.0};
Point(41) = {-0.062337, 0.739724, 0, 1.0};
Point(42) = {-0.065753, 0.738153, 0, 1.0};
Point(43) = {-0.069118, 0.736475, 0, 1.0};
Point(44) = {-0.072429, 0.734694, 0, 1.0};
Point(45) = {-0.072705, 0.734520, 0, 1.0};
Point(46) = {-0.072961, 0.734316, 0, 1.0};
Point(47) = {-0.073194, 0.734086, 0, 1.0};
Point(48) = {-0.073400, 0.733833, 0, 1.0};
Point(49) = {-0.073577, 0.733558, 0, 1.0};
Point(50) = {-0.073724, 0.733266, 0, 1.0};
Point(51) = {-0.073838, 0.732960, 0, 1.0};
Point(52) = {-0.073919, 0.732643, 0, 1.0};
Point(53) = {-0.073965, 0.732320, 0, 1.0};
Point(54) = {-0.073976, 0.731993, 0, 1.0};
Point(55) = {-0.073951, 0.731667, 0, 1.0};
Point(56) = {-0.073891, 0.731346, 0, 1.0};
Point(57) = {-0.073797, 0.731033, 0, 1.0};
Point(58) = {-0.073669, 0.730732, 0, 1.0};
Point(59) = {-0.073510, 0.730447, 0, 1.0};
Point(60) = {-0.073321, 0.730180, 0, 1.0};
Point(61) = {-0.073104, 0.729936, 0, 1.0};
Point(62) = {-0.072862, 0.729716, 0, 1.0};
Point(63) = {-0.072597, 0.729524, 0, 1.0};
Point(64) = {-0.072314, 0.729362, 0, 1.0};
Point(65) = {-0.072014, 0.729231, 0, 1.0};
Point(66) = {-0.071702, 0.729133, 0, 1.0};
Point(67) = {-0.071382, 0.729070, 0, 1.0};
Point(68) = {-0.071056, 0.729042, 0, 1.0};
Point(69) = {-0.070729, 0.729049, 0, 1.0};
Point(70) = {-0.070405, 0.729091, 0, 1.0};
Point(71) = {-0.070088, 0.729168, 0, 1.0};
Point(72) = {-0.069780, 0.729279, 0, 1.0};
Point(73) = {-0.069486, 0.729423, 0, 1.0};
Point(74) = {-0.066264, 0.731155, 0, 1.0};
Point(75) = {-0.062987, 0.732783, 0, 1.0};
Point(76) = {-0.059661, 0.734306, 0, 1.0};
Point(77) = {-0.056287, 0.735723, 0, 1.0};
Point(78) = {-0.052870, 0.737031, 0, 1.0};
Point(79) = {-0.049413, 0.738229, 0, 1.0};
Point(80) = {-0.045920, 0.739316, 0, 1.0};
Point(81) = {-0.042394, 0.740292, 0, 1.0};
Point(82) = {-0.038838, 0.741154, 0, 1.0};
Point(83) = {-0.035257, 0.741903, 0, 1.0};
Point(84) = {-0.031653, 0.742537, 0, 1.0};
Point(85) = {-0.028032, 0.743056, 0, 1.0};
Point(86) = {-0.024395, 0.743459, 0, 1.0};
Point(87) = {-0.020748, 0.743746, 0, 1.0};
Point(88) = {-0.017093, 0.743916, 0, 1.0};
Point(89) = {-0.013435, 0.743970, 0, 1.0};
Point(90) = {-0.009776, 0.743907, 0, 1.0};
Point(91) = {-0.006122, 0.743728, 0, 1.0};
Point(92) = {-0.002475, 0.743431, 0, 1.0};
Point(93) = {0.001160, 0.743019, 0, 1.0};
Point(94) = {0.004781, 0.742491, 0, 1.0};
Point(95) = {0.008382, 0.741848, 0, 1.0};
Point(96) = {0.011962, 0.741091, 0, 1.0};
Point(97) = {0.015515, 0.740219, 0, 1.0};
Point(98) = {0.019039, 0.739235, 0, 1.0};
Point(99) = {0.022530, 0.738139, 0, 1.0};
Point(100) = {0.025984, 0.736931, 0, 1.0};
Point(101) = {0.029397, 0.735615, 0, 1.0};
Point(102) = {0.032767, 0.734190, 0, 1.0};
Point(103) = {0.036090, 0.732659, 0, 1.0};
Point(104) = {0.039362, 0.731022, 0, 1.0};
Point(105) = {0.042581, 0.729282, 0, 1.0};
Point(106) = {0.045742, 0.727440, 0, 1.0};
Point(107) = {0.049327, 0.725273, 0, 1.0};
Point(108) = {0.052913, 0.723107, 0, 1.0};
Point(109) = {0.056498, 0.720940, 0, 1.0};
Point(110) = {0.060083, 0.718774, 0, 1.0};
Point(111) = {0.063669, 0.716608, 0, 1.0};
Point(112) = {0.067254, 0.714441, 0, 1.0};
Point(113) = {0.070839, 0.712275, 0, 1.0};
Point(114) = {0.074416, 0.710163, 0, 1.0};
Point(115) = {-0.074674, -0.711667, 0, 1.0};
Point(116) = {-0.072935, -0.713490, 0, 1.0};
Point(117) = {-0.070271, -0.716143, 0, 1.0};
Point(118) = {-0.067525, -0.718712, 0, 1.0};
Point(119) = {-0.064701, -0.721194, 0, 1.0};
Point(120) = {-0.061801, -0.723586, 0, 1.0};
Point(121) = {-0.058828, -0.725888, 0, 1.0};
Point(122) = {-0.055784, -0.728095, 0, 1.0};
Point(123) = {-0.052673, -0.730207, 0, 1.0};
Point(124) = {-0.049498, -0.732221, 0, 1.0};
Point(125) = {-0.046262, -0.734135, 0, 1.0};
Point(126) = {-0.042968, -0.735947, 0, 1.0};
Point(127) = {-0.039619, -0.737656, 0, 1.0};
Point(128) = {-0.036218, -0.739260, 0, 1.0};
Point(129) = {-0.032769, -0.740757, 0, 1.0};
Point(130) = {-0.029275, -0.742146, 0, 1.0};
Point(131) = {-0.025740, -0.743426, 0, 1.0};
Point(132) = {-0.022166, -0.744595, 0, 1.0};
Point(133) = {-0.018558, -0.745652, 0, 1.0};
Point(134) = {-0.014919, -0.746596, 0, 1.0};
Point(135) = {-0.011252, -0.747426, 0, 1.0};
Point(136) = {-0.007560, -0.748142, 0, 1.0};
Point(137) = {-0.003849, -0.748743, 0, 1.0};
Point(138) = {-0.000121, -0.749228, 0, 1.0};
Point(139) = {0.003621, -0.749596, 0, 1.0};
Point(140) = {0.007373, -0.749848, 0, 1.0};
Point(141) = {0.011130, -0.749982, 0, 1.0};
Point(142) = {0.014890, -0.750000, 0, 1.0};
Point(143) = {0.018649, -0.749901, 0, 1.0};
Point(144) = {0.022402, -0.749684, 0, 1.0};
Point(145) = {0.026147, -0.749351, 0, 1.0};
Point(146) = {0.029880, -0.748902, 0, 1.0};
Point(147) = {0.033597, -0.748336, 0, 1.0};
Point(148) = {0.037295, -0.747655, 0, 1.0};
Point(149) = {0.040970, -0.746859, 0, 1.0};
Point(150) = {0.044618, -0.745949, 0, 1.0};
Point(151) = {0.048236, -0.744926, 0, 1.0};
Point(152) = {0.051820, -0.743791, 0, 1.0};
Point(153) = {0.055368, -0.742545, 0, 1.0};
Point(154) = {0.058874, -0.741189, 0, 1.0};
Point(155) = {0.062337, -0.739724, 0, 1.0};
Point(156) = {0.065753, -0.738153, 0, 1.0};
Point(157) = {0.069118, -0.736475, 0, 1.0};
Point(158) = {0.072429, -0.734694, 0, 1.0};
Point(159) = {0.072705, -0.734520, 0, 1.0};
Point(160) = {0.072961, -0.734316, 0, 1.0};
Point(161) = {0.073194, -0.734086, 0, 1.0};
Point(162) = {0.073400, -0.733833, 0, 1.0};
Point(163) = {0.073577, -0.733558, 0, 1.0};
Point(164) = {0.073724, -0.733266, 0, 1.0};
Point(165) = {0.073838, -0.732960, 0, 1.0};
Point(166) = {0.073919, -0.732643, 0, 1.0};
Point(167) = {0.073965, -0.732320, 0, 1.0};
Point(168) = {0.073976, -0.731993, 0, 1.0};
Point(169) = {0.073951, -0.731667, 0, 1.0};
Point(170) = {0.073891, -0.731346, 0, 1.0};
Point(171) = {0.073797, -0.731033, 0, 1.0};
Point(172) = {0.073669, -0.730732, 0, 1.0};
Point(173) = {0.073510, -0.730447, 0, 1.0};
Point(174) = {0.073321, -0.730180, 0, 1.0};
Point(175) = {0.073104, -0.729936, 0, 1.0};
Point(176) = {0.072862, -0.729716, 0, 1.0};
Point(177) = {0.072597, -0.729524, 0, 1.0};
Point(178) = {0.072314, -0.729362, 0, 1.0};
Point(179) = {0.072014, -0.729231, 0, 1.0};
Point(180) = {0.071702, -0.729133, 0, 1.0};
Point(181) = {0.071382, -0.729070, 0, 1.0};
Point(182) = {0.071056, -0.729042, 0, 1.0};
Point(183) = {0.070729, -0.729049, 0, 1.0};
Point(184) = {0.070405, -0.729091, 0, 1.0};
Point(185) = {0.070088, -0.729168, 0, 1.0};
Point(186) = {0.069780, -0.729279, 0, 1.0};
Point(187) = {0.069486, -0.729423, 0, 1.0};
Point(188) = {0.066264, -0.731155, 0, 1.0};
Point(189) = {0.062987, -0.732783, 0, 1.0};
Point(190) = {0.059661, -0.734306, 0, 1.0};
Point(191) = {0.056287, -0.735723, 0, 1.0};
Point(192) = {0.052870, -0.737031, 0, 1.0};
Point(193) = {0.049413, -0.738229, 0, 1.0};
Point(194) = {0.045920, -0.739316, 0, 1.0};
Point(195) = {0.042394, -0.740292, 0, 1.0};
Point(196) = {0.038838, -0.741154, 0, 1.0};
Point(197) = {0.035257, -0.741903, 0, 1.0};
Point(198) = {0.031653, -0.742537, 0, 1.0};
Point(199) = {0.028032, -0.743056, 0, 1.0};
Point(200) = {0.024395, -0.743459, 0, 1.0};
Point(201) = {0.020748, -0.743746, 0, 1.0};
Point(202) = {0.017093, -0.743916, 0, 1.0};
Point(203) = {0.013435, -0.743970, 0, 1.0};
Point(204) = {0.009776, -0.743907, 0, 1.0};
Point(205) = {0.006122, -0.743728, 0, 1.0};
Point(206) = {0.002475, -0.743431, 0, 1.0};
Point(207) = {-0.001160, -0.743019, 0, 1.0};
Point(208) = {-0.004781, -0.742491, 0, 1.0};
Point(209) = {-0.008382, -0.741848, 0, 1.0};
Point(210) = {-0.011962, -0.741091, 0, 1.0};
Point(211) = {-0.015515, -0.740219, 0, 1.0};
Point(212) = {-0.019039, -0.739235, 0, 1.0};
Point(213) = {-0.022530, -0.738139, 0, 1.0};
Point(214) = {-0.025984, -0.736931, 0, 1.0};
Point(215) = {-0.029397, -0.735615, 0, 1.0};
Point(216) = {-0.032767, -0.734190, 0, 1.0};
Point(217) = {-0.036090, -0.732659, 0, 1.0};
Point(218) = {-0.039362, -0.731022, 0, 1.0};
Point(219) = {-0.042581, -0.729282, 0, 1.0};
Point(220) = {-0.045742, -0.727440, 0, 1.0};
Point(221) = {-0.049327, -0.725273, 0, 1.0};
Point(222) = {-0.052913, -0.723107, 0, 1.0};
Point(223) = {-0.056498, -0.720940, 0, 1.0};
Point(224) = {-0.060083, -0.718774, 0, 1.0};
Point(225) = {-0.063669, -0.716608, 0, 1.0};
Point(226) = {-0.067254, -0.714441, 0, 1.0};
Point(227) = {-0.070839, -0.712275, 0, 1.0};
Point(228) = {-0.074416, -0.710163, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:32};
Spline(2) = {32:83};
Spline(3) = {83:114};
Spline(4) = {114,1};

// Lines: second blade (splines 5-8)
Spline(5) = {115:146};
Spline(6) = {146:197};
Spline(7) = {197:228};
Spline(8) = {228,115};

// Outer domain (points 20001-4 and lines)
Point(229) = {-13.50000000, -15.00000000, 0, 1.0};
Point(230) = {-13.50000000, 15.00000000, 0, 1.0};
Point(231) = {13.50000000, 15.00000000, 0, 1.0};
Point(232) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {229, 230};
Line(12) = {230, 231};
Line(13) = {231, 232};
Line(14) = {229, 232};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 36 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
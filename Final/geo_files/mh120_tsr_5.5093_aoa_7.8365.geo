SetFactory("OpenCASCADE");

Point(1) = {0.074066, 0.731801, 0, 1.0};
Point(2) = {0.073746, 0.731985, 0, 1.0};
Point(3) = {0.072818, 0.732380, 0, 1.0};
Point(4) = {0.071333, 0.732919, 0, 1.0};
Point(5) = {0.069296, 0.733611, 0, 1.0};
Point(6) = {0.066756, 0.734456, 0, 1.0};
Point(7) = {0.063763, 0.735445, 0, 1.0};
Point(8) = {0.060367, 0.736555, 0, 1.0};
Point(9) = {0.056625, 0.737761, 0, 1.0};
Point(10) = {0.052580, 0.739025, 0, 1.0};
Point(11) = {0.048274, 0.740325, 0, 1.0};
Point(12) = {0.043755, 0.741641, 0, 1.0};
Point(13) = {0.039085, 0.742952, 0, 1.0};
Point(14) = {0.034316, 0.744219, 0, 1.0};
Point(15) = {0.029496, 0.745416, 0, 1.0};
Point(16) = {0.024669, 0.746510, 0, 1.0};
Point(17) = {0.019877, 0.747480, 0, 1.0};
Point(18) = {0.015156, 0.748302, 0, 1.0};
Point(19) = {0.010540, 0.748966, 0, 1.0};
Point(20) = {0.006061, 0.749459, 0, 1.0};
Point(21) = {0.001746, 0.749789, 0, 1.0};
Point(22) = {-0.002366, 0.749966, 0, 1.0};
Point(23) = {-0.006227, 0.750000, 0, 1.0};
Point(24) = {-0.009800, 0.749889, 0, 1.0};
Point(25) = {-0.013053, 0.749640, 0, 1.0};
Point(26) = {-0.015960, 0.749262, 0, 1.0};
Point(27) = {-0.018494, 0.748771, 0, 1.0};
Point(28) = {-0.020635, 0.748180, 0, 1.0};
Point(29) = {-0.022371, 0.747511, 0, 1.0};
Point(30) = {-0.023690, 0.746800, 0, 1.0};
Point(31) = {-0.024575, 0.746093, 0, 1.0};
Point(32) = {-0.024996, 0.745463, 0, 1.0};
Point(33) = {-0.024794, 0.744914, 0, 1.0};
Point(34) = {-0.023932, 0.744330, 0, 1.0};
Point(35) = {-0.022523, 0.743673, 0, 1.0};
Point(36) = {-0.020599, 0.742972, 0, 1.0};
Point(37) = {-0.018188, 0.742243, 0, 1.0};
Point(38) = {-0.015313, 0.741502, 0, 1.0};
Point(39) = {-0.012010, 0.740758, 0, 1.0};
Point(40) = {-0.008310, 0.740029, 0, 1.0};
Point(41) = {-0.004248, 0.739322, 0, 1.0};
Point(42) = {0.000142, 0.738652, 0, 1.0};
Point(43) = {0.004819, 0.738014, 0, 1.0};
Point(44) = {0.009741, 0.737413, 0, 1.0};
Point(45) = {0.014854, 0.736842, 0, 1.0};
Point(46) = {0.020104, 0.736302, 0, 1.0};
Point(47) = {0.025434, 0.735784, 0, 1.0};
Point(48) = {0.030779, 0.735287, 0, 1.0};
Point(49) = {0.036073, 0.734804, 0, 1.0};
Point(50) = {0.041248, 0.734343, 0, 1.0};
Point(51) = {0.046240, 0.733900, 0, 1.0};
Point(52) = {0.050987, 0.733482, 0, 1.0};
Point(53) = {0.055427, 0.733091, 0, 1.0};
Point(54) = {0.059502, 0.732734, 0, 1.0};
Point(55) = {0.063160, 0.732415, 0, 1.0};
Point(56) = {0.066351, 0.732145, 0, 1.0};
Point(57) = {0.069032, 0.731929, 0, 1.0};
Point(58) = {0.071165, 0.731779, 0, 1.0};
Point(59) = {0.072721, 0.731716, 0, 1.0};
Point(60) = {0.073708, 0.731744, 0, 1.0};
Point(61) = {-0.074066, -0.731801, 0, 1.0};
Point(62) = {-0.073746, -0.731985, 0, 1.0};
Point(63) = {-0.072818, -0.732380, 0, 1.0};
Point(64) = {-0.071333, -0.732919, 0, 1.0};
Point(65) = {-0.069296, -0.733611, 0, 1.0};
Point(66) = {-0.066756, -0.734456, 0, 1.0};
Point(67) = {-0.063763, -0.735445, 0, 1.0};
Point(68) = {-0.060367, -0.736555, 0, 1.0};
Point(69) = {-0.056625, -0.737761, 0, 1.0};
Point(70) = {-0.052580, -0.739025, 0, 1.0};
Point(71) = {-0.048274, -0.740325, 0, 1.0};
Point(72) = {-0.043755, -0.741641, 0, 1.0};
Point(73) = {-0.039085, -0.742952, 0, 1.0};
Point(74) = {-0.034316, -0.744219, 0, 1.0};
Point(75) = {-0.029496, -0.745416, 0, 1.0};
Point(76) = {-0.024669, -0.746510, 0, 1.0};
Point(77) = {-0.019877, -0.747480, 0, 1.0};
Point(78) = {-0.015156, -0.748302, 0, 1.0};
Point(79) = {-0.010540, -0.748966, 0, 1.0};
Point(80) = {-0.006061, -0.749459, 0, 1.0};
Point(81) = {-0.001746, -0.749789, 0, 1.0};
Point(82) = {0.002366, -0.749966, 0, 1.0};
Point(83) = {0.006227, -0.750000, 0, 1.0};
Point(84) = {0.009800, -0.749889, 0, 1.0};
Point(85) = {0.013053, -0.749640, 0, 1.0};
Point(86) = {0.015960, -0.749262, 0, 1.0};
Point(87) = {0.018494, -0.748771, 0, 1.0};
Point(88) = {0.020635, -0.748180, 0, 1.0};
Point(89) = {0.022371, -0.747511, 0, 1.0};
Point(90) = {0.023690, -0.746800, 0, 1.0};
Point(91) = {0.024575, -0.746093, 0, 1.0};
Point(92) = {0.024996, -0.745463, 0, 1.0};
Point(93) = {0.024794, -0.744914, 0, 1.0};
Point(94) = {0.023932, -0.744330, 0, 1.0};
Point(95) = {0.022523, -0.743673, 0, 1.0};
Point(96) = {0.020599, -0.742972, 0, 1.0};
Point(97) = {0.018188, -0.742243, 0, 1.0};
Point(98) = {0.015313, -0.741502, 0, 1.0};
Point(99) = {0.012010, -0.740758, 0, 1.0};
Point(100) = {0.008310, -0.740029, 0, 1.0};
Point(101) = {0.004248, -0.739322, 0, 1.0};
Point(102) = {-0.000142, -0.738652, 0, 1.0};
Point(103) = {-0.004819, -0.738014, 0, 1.0};
Point(104) = {-0.009741, -0.737413, 0, 1.0};
Point(105) = {-0.014854, -0.736842, 0, 1.0};
Point(106) = {-0.020104, -0.736302, 0, 1.0};
Point(107) = {-0.025434, -0.735784, 0, 1.0};
Point(108) = {-0.030779, -0.735287, 0, 1.0};
Point(109) = {-0.036073, -0.734804, 0, 1.0};
Point(110) = {-0.041248, -0.734343, 0, 1.0};
Point(111) = {-0.046240, -0.733900, 0, 1.0};
Point(112) = {-0.050987, -0.733482, 0, 1.0};
Point(113) = {-0.055427, -0.733091, 0, 1.0};
Point(114) = {-0.059502, -0.732734, 0, 1.0};
Point(115) = {-0.063160, -0.732415, 0, 1.0};
Point(116) = {-0.066351, -0.732145, 0, 1.0};
Point(117) = {-0.069032, -0.731929, 0, 1.0};
Point(118) = {-0.071165, -0.731779, 0, 1.0};
Point(119) = {-0.072721, -0.731716, 0, 1.0};
Point(120) = {-0.073708, -0.731744, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
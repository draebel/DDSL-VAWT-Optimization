SetFactory("OpenCASCADE");

Point(1) = {0.074894, 0.738958, 0, 1.0};
Point(2) = {0.074158, 0.739046, 0, 1.0};
Point(3) = {0.071707, 0.739403, 0, 1.0};
Point(4) = {0.068972, 0.739787, 0, 1.0};
Point(5) = {0.065924, 0.740204, 0, 1.0};
Point(6) = {0.062674, 0.740658, 0, 1.0};
Point(7) = {0.059130, 0.741150, 0, 1.0};
Point(8) = {0.055364, 0.741677, 0, 1.0};
Point(9) = {0.051352, 0.742247, 0, 1.0};
Point(10) = {0.047140, 0.742842, 0, 1.0};
Point(11) = {0.042744, 0.743483, 0, 1.0};
Point(12) = {0.038186, 0.744131, 0, 1.0};
Point(13) = {0.033467, 0.744823, 0, 1.0};
Point(14) = {0.028626, 0.745504, 0, 1.0};
Point(15) = {0.023664, 0.746207, 0, 1.0};
Point(16) = {0.018621, 0.746885, 0, 1.0};
Point(17) = {0.013677, 0.747560, 0, 1.0};
Point(18) = {0.008379, 0.748164, 0, 1.0};
Point(19) = {0.003199, 0.748755, 0, 1.0};
Point(20) = {-0.001958, 0.749234, 0, 1.0};
Point(21) = {-0.007111, 0.749639, 0, 1.0};
Point(22) = {-0.012199, 0.749865, 0, 1.0};
Point(23) = {-0.017222, 0.750000, 0, 1.0};
Point(24) = {-0.022137, 0.749912, 0, 1.0};
Point(25) = {-0.026968, 0.749738, 0, 1.0};
Point(26) = {-0.031631, 0.749326, 0, 1.0};
Point(27) = {-0.036171, 0.748864, 0, 1.0};
Point(28) = {-0.040519, 0.748153, 0, 1.0};
Point(29) = {-0.044688, 0.747443, 0, 1.0};
Point(30) = {-0.048624, 0.746467, 0, 1.0};
Point(31) = {-0.052363, 0.745557, 0, 1.0};
Point(32) = {-0.055850, 0.744376, 0, 1.0};
Point(33) = {-0.059078, 0.743340, 0, 1.0};
Point(34) = {-0.062037, 0.742014, 0, 1.0};
Point(35) = {-0.064721, 0.740926, 0, 1.0};
Point(36) = {-0.067092, 0.739521, 0, 1.0};
Point(37) = {-0.069190, 0.738448, 0, 1.0};
Point(38) = {-0.070962, 0.737217, 0, 1.0};
Point(39) = {-0.072414, 0.736038, 0, 1.0};
Point(40) = {-0.073543, 0.734892, 0, 1.0};
Point(41) = {-0.074356, 0.733902, 0, 1.0};
Point(42) = {-0.074825, 0.732880, 0, 1.0};
Point(43) = {-0.074956, 0.732009, 0, 1.0};
Point(44) = {-0.074779, 0.731543, 0, 1.0};
Point(45) = {-0.074264, 0.731222, 0, 1.0};
Point(46) = {-0.073393, 0.730518, 0, 1.0};
Point(47) = {-0.072216, 0.730278, 0, 1.0};
Point(48) = {-0.070703, 0.729674, 0, 1.0};
Point(49) = {-0.068881, 0.729443, 0, 1.0};
Point(50) = {-0.066729, 0.728949, 0, 1.0};
Point(51) = {-0.064303, 0.728761, 0, 1.0};
Point(52) = {-0.061568, 0.728353, 0, 1.0};
Point(53) = {-0.058558, 0.728187, 0, 1.0};
Point(54) = {-0.055282, 0.727849, 0, 1.0};
Point(55) = {-0.051751, 0.727722, 0, 1.0};
Point(56) = {-0.047972, 0.727464, 0, 1.0};
Point(57) = {-0.043996, 0.727278, 0, 1.0};
Point(58) = {-0.039801, 0.727245, 0, 1.0};
Point(59) = {-0.035429, 0.727263, 0, 1.0};
Point(60) = {-0.030872, 0.727216, 0, 1.0};
Point(61) = {-0.026199, 0.727325, 0, 1.0};
Point(62) = {-0.021364, 0.727390, 0, 1.0};
Point(63) = {-0.016453, 0.727592, 0, 1.0};
Point(64) = {-0.011440, 0.727761, 0, 1.0};
Point(65) = {-0.006370, 0.728045, 0, 1.0};
Point(66) = {-0.001239, 0.728302, 0, 1.0};
Point(67) = {0.003889, 0.728654, 0, 1.0};
Point(68) = {0.009038, 0.728987, 0, 1.0};
Point(69) = {0.014300, 0.729404, 0, 1.0};
Point(70) = {0.019208, 0.729793, 0, 1.0};
Point(71) = {0.024212, 0.730251, 0, 1.0};
Point(72) = {0.029135, 0.730699, 0, 1.0};
Point(73) = {0.033934, 0.731202, 0, 1.0};
Point(74) = {0.038613, 0.731700, 0, 1.0};
Point(75) = {0.043129, 0.732256, 0, 1.0};
Point(76) = {0.047484, 0.732815, 0, 1.0};
Point(77) = {0.051656, 0.733415, 0, 1.0};
Point(78) = {0.055626, 0.734024, 0, 1.0};
Point(79) = {0.059352, 0.734665, 0, 1.0};
Point(80) = {0.062857, 0.735312, 0, 1.0};
Point(81) = {0.066069, 0.735959, 0, 1.0};
Point(82) = {0.069084, 0.736539, 0, 1.0};
Point(83) = {0.071788, 0.737020, 0, 1.0};
Point(84) = {0.074216, 0.737368, 0, 1.0};
Point(85) = {0.074946, 0.737454, 0, 1.0};
Point(86) = {-0.074894, -0.738958, 0, 1.0};
Point(87) = {-0.074158, -0.739046, 0, 1.0};
Point(88) = {-0.071707, -0.739403, 0, 1.0};
Point(89) = {-0.068972, -0.739787, 0, 1.0};
Point(90) = {-0.065924, -0.740204, 0, 1.0};
Point(91) = {-0.062674, -0.740658, 0, 1.0};
Point(92) = {-0.059130, -0.741150, 0, 1.0};
Point(93) = {-0.055364, -0.741677, 0, 1.0};
Point(94) = {-0.051352, -0.742247, 0, 1.0};
Point(95) = {-0.047140, -0.742842, 0, 1.0};
Point(96) = {-0.042744, -0.743483, 0, 1.0};
Point(97) = {-0.038186, -0.744131, 0, 1.0};
Point(98) = {-0.033467, -0.744823, 0, 1.0};
Point(99) = {-0.028626, -0.745504, 0, 1.0};
Point(100) = {-0.023664, -0.746207, 0, 1.0};
Point(101) = {-0.018621, -0.746885, 0, 1.0};
Point(102) = {-0.013677, -0.747560, 0, 1.0};
Point(103) = {-0.008379, -0.748164, 0, 1.0};
Point(104) = {-0.003199, -0.748755, 0, 1.0};
Point(105) = {0.001958, -0.749234, 0, 1.0};
Point(106) = {0.007111, -0.749639, 0, 1.0};
Point(107) = {0.012199, -0.749865, 0, 1.0};
Point(108) = {0.017222, -0.750000, 0, 1.0};
Point(109) = {0.022137, -0.749912, 0, 1.0};
Point(110) = {0.026968, -0.749738, 0, 1.0};
Point(111) = {0.031631, -0.749326, 0, 1.0};
Point(112) = {0.036171, -0.748864, 0, 1.0};
Point(113) = {0.040519, -0.748153, 0, 1.0};
Point(114) = {0.044688, -0.747443, 0, 1.0};
Point(115) = {0.048624, -0.746467, 0, 1.0};
Point(116) = {0.052363, -0.745557, 0, 1.0};
Point(117) = {0.055850, -0.744376, 0, 1.0};
Point(118) = {0.059078, -0.743340, 0, 1.0};
Point(119) = {0.062037, -0.742014, 0, 1.0};
Point(120) = {0.064721, -0.740926, 0, 1.0};
Point(121) = {0.067092, -0.739521, 0, 1.0};
Point(122) = {0.069190, -0.738448, 0, 1.0};
Point(123) = {0.070962, -0.737217, 0, 1.0};
Point(124) = {0.072414, -0.736038, 0, 1.0};
Point(125) = {0.073543, -0.734892, 0, 1.0};
Point(126) = {0.074356, -0.733902, 0, 1.0};
Point(127) = {0.074825, -0.732880, 0, 1.0};
Point(128) = {0.074956, -0.732009, 0, 1.0};
Point(129) = {0.074779, -0.731543, 0, 1.0};
Point(130) = {0.074264, -0.731222, 0, 1.0};
Point(131) = {0.073393, -0.730518, 0, 1.0};
Point(132) = {0.072216, -0.730278, 0, 1.0};
Point(133) = {0.070703, -0.729674, 0, 1.0};
Point(134) = {0.068881, -0.729443, 0, 1.0};
Point(135) = {0.066729, -0.728949, 0, 1.0};
Point(136) = {0.064303, -0.728761, 0, 1.0};
Point(137) = {0.061568, -0.728353, 0, 1.0};
Point(138) = {0.058558, -0.728187, 0, 1.0};
Point(139) = {0.055282, -0.727849, 0, 1.0};
Point(140) = {0.051751, -0.727722, 0, 1.0};
Point(141) = {0.047972, -0.727464, 0, 1.0};
Point(142) = {0.043996, -0.727278, 0, 1.0};
Point(143) = {0.039801, -0.727245, 0, 1.0};
Point(144) = {0.035429, -0.727263, 0, 1.0};
Point(145) = {0.030872, -0.727216, 0, 1.0};
Point(146) = {0.026199, -0.727325, 0, 1.0};
Point(147) = {0.021364, -0.727390, 0, 1.0};
Point(148) = {0.016453, -0.727592, 0, 1.0};
Point(149) = {0.011440, -0.727761, 0, 1.0};
Point(150) = {0.006370, -0.728045, 0, 1.0};
Point(151) = {0.001239, -0.728302, 0, 1.0};
Point(152) = {-0.003889, -0.728654, 0, 1.0};
Point(153) = {-0.009038, -0.728987, 0, 1.0};
Point(154) = {-0.014300, -0.729404, 0, 1.0};
Point(155) = {-0.019208, -0.729793, 0, 1.0};
Point(156) = {-0.024212, -0.730251, 0, 1.0};
Point(157) = {-0.029135, -0.730699, 0, 1.0};
Point(158) = {-0.033934, -0.731202, 0, 1.0};
Point(159) = {-0.038613, -0.731700, 0, 1.0};
Point(160) = {-0.043129, -0.732256, 0, 1.0};
Point(161) = {-0.047484, -0.732815, 0, 1.0};
Point(162) = {-0.051656, -0.733415, 0, 1.0};
Point(163) = {-0.055626, -0.734024, 0, 1.0};
Point(164) = {-0.059352, -0.734665, 0, 1.0};
Point(165) = {-0.062857, -0.735312, 0, 1.0};
Point(166) = {-0.066069, -0.735959, 0, 1.0};
Point(167) = {-0.069084, -0.736539, 0, 1.0};
Point(168) = {-0.071788, -0.737020, 0, 1.0};
Point(169) = {-0.074216, -0.737368, 0, 1.0};
Point(170) = {-0.074946, -0.737454, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:60};
Spline(3) = {60:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:145};
Spline(7) = {145:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
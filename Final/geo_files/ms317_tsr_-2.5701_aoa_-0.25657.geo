SetFactory("OpenCASCADE");

Point(1) = {0.074995, 0.736119, 0, 1.0};
Point(2) = {0.074556, 0.736220, 0, 1.0};
Point(3) = {0.070718, 0.737096, 0, 1.0};
Point(4) = {0.066879, 0.737954, 0, 1.0};
Point(5) = {0.063040, 0.738813, 0, 1.0};
Point(6) = {0.059201, 0.739669, 0, 1.0};
Point(7) = {0.055363, 0.740515, 0, 1.0};
Point(8) = {0.051524, 0.741351, 0, 1.0};
Point(9) = {0.047685, 0.742185, 0, 1.0};
Point(10) = {0.043847, 0.742993, 0, 1.0};
Point(11) = {0.040008, 0.743789, 0, 1.0};
Point(12) = {0.036170, 0.744560, 0, 1.0};
Point(13) = {0.032331, 0.745301, 0, 1.0};
Point(14) = {0.028493, 0.746003, 0, 1.0};
Point(15) = {0.024655, 0.746661, 0, 1.0};
Point(16) = {0.020818, 0.747268, 0, 1.0};
Point(17) = {0.016980, 0.747817, 0, 1.0};
Point(18) = {0.013143, 0.748304, 0, 1.0};
Point(19) = {0.009306, 0.748741, 0, 1.0};
Point(20) = {0.005470, 0.749108, 0, 1.0};
Point(21) = {0.001633, 0.749416, 0, 1.0};
Point(22) = {-0.002203, 0.749651, 0, 1.0};
Point(23) = {-0.006038, 0.749828, 0, 1.0};
Point(24) = {-0.009874, 0.749938, 0, 1.0};
Point(25) = {-0.013709, 0.749993, 0, 1.0};
Point(26) = {-0.017544, 0.750000, 0, 1.0};
Point(27) = {-0.021379, 0.749952, 0, 1.0};
Point(28) = {-0.025213, 0.749857, 0, 1.0};
Point(29) = {-0.029048, 0.749708, 0, 1.0};
Point(30) = {-0.032882, 0.749505, 0, 1.0};
Point(31) = {-0.036715, 0.749245, 0, 1.0};
Point(32) = {-0.040549, 0.748926, 0, 1.0};
Point(33) = {-0.044382, 0.748536, 0, 1.0};
Point(34) = {-0.048215, 0.748073, 0, 1.0};
Point(35) = {-0.052047, 0.747517, 0, 1.0};
Point(36) = {-0.055879, 0.746854, 0, 1.0};
Point(37) = {-0.059711, 0.746036, 0, 1.0};
Point(38) = {-0.063541, 0.744990, 0, 1.0};
Point(39) = {-0.067369, 0.743520, 0, 1.0};
Point(40) = {-0.069282, 0.742464, 0, 1.0};
Point(41) = {-0.071193, 0.741093, 0, 1.0};
Point(42) = {-0.073102, 0.739208, 0, 1.0};
Point(43) = {-0.074245, 0.737441, 0, 1.0};
Point(44) = {-0.074700, 0.736362, 0, 1.0};
Point(45) = {-0.074999, 0.734598, 0, 1.0};
Point(46) = {-0.074686, 0.733133, 0, 1.0};
Point(47) = {-0.074222, 0.732354, 0, 1.0};
Point(48) = {-0.073067, 0.731225, 0, 1.0};
Point(49) = {-0.071144, 0.730067, 0, 1.0};
Point(50) = {-0.069223, 0.729221, 0, 1.0};
Point(51) = {-0.067302, 0.728552, 0, 1.0};
Point(52) = {-0.063463, 0.727532, 0, 1.0};
Point(53) = {-0.059624, 0.726756, 0, 1.0};
Point(54) = {-0.055787, 0.726130, 0, 1.0};
Point(55) = {-0.051949, 0.725626, 0, 1.0};
Point(56) = {-0.048113, 0.725211, 0, 1.0};
Point(57) = {-0.044276, 0.724873, 0, 1.0};
Point(58) = {-0.040440, 0.724588, 0, 1.0};
Point(59) = {-0.036604, 0.724363, 0, 1.0};
Point(60) = {-0.032768, 0.724186, 0, 1.0};
Point(61) = {-0.028933, 0.724054, 0, 1.0};
Point(62) = {-0.025097, 0.723965, 0, 1.0};
Point(63) = {-0.021262, 0.723916, 0, 1.0};
Point(64) = {-0.017427, 0.723911, 0, 1.0};
Point(65) = {-0.013592, 0.723954, 0, 1.0};
Point(66) = {-0.009758, 0.724051, 0, 1.0};
Point(67) = {-0.005924, 0.724201, 0, 1.0};
Point(68) = {-0.002090, 0.724410, 0, 1.0};
Point(69) = {0.001744, 0.724679, 0, 1.0};
Point(70) = {0.005578, 0.725006, 0, 1.0};
Point(71) = {0.009411, 0.725408, 0, 1.0};
Point(72) = {0.013244, 0.725875, 0, 1.0};
Point(73) = {0.017076, 0.726420, 0, 1.0};
Point(74) = {0.020908, 0.727043, 0, 1.0};
Point(75) = {0.024740, 0.727723, 0, 1.0};
Point(76) = {0.028572, 0.728445, 0, 1.0};
Point(77) = {0.032403, 0.729197, 0, 1.0};
Point(78) = {0.036235, 0.729951, 0, 1.0};
Point(79) = {0.040067, 0.730697, 0, 1.0};
Point(80) = {0.043898, 0.731436, 0, 1.0};
Point(81) = {0.047730, 0.732147, 0, 1.0};
Point(82) = {0.051562, 0.732814, 0, 1.0};
Point(83) = {0.055394, 0.733421, 0, 1.0};
Point(84) = {0.059227, 0.733944, 0, 1.0};
Point(85) = {0.063060, 0.734358, 0, 1.0};
Point(86) = {0.066894, 0.734638, 0, 1.0};
Point(87) = {0.070728, 0.734743, 0, 1.0};
Point(88) = {0.074564, 0.734619, 0, 1.0};
Point(89) = {0.075002, 0.734593, 0, 1.0};
Point(90) = {-0.074995, -0.736119, 0, 1.0};
Point(91) = {-0.074556, -0.736220, 0, 1.0};
Point(92) = {-0.070718, -0.737096, 0, 1.0};
Point(93) = {-0.066879, -0.737954, 0, 1.0};
Point(94) = {-0.063040, -0.738813, 0, 1.0};
Point(95) = {-0.059201, -0.739669, 0, 1.0};
Point(96) = {-0.055363, -0.740515, 0, 1.0};
Point(97) = {-0.051524, -0.741351, 0, 1.0};
Point(98) = {-0.047685, -0.742185, 0, 1.0};
Point(99) = {-0.043847, -0.742993, 0, 1.0};
Point(100) = {-0.040008, -0.743789, 0, 1.0};
Point(101) = {-0.036170, -0.744560, 0, 1.0};
Point(102) = {-0.032331, -0.745301, 0, 1.0};
Point(103) = {-0.028493, -0.746003, 0, 1.0};
Point(104) = {-0.024655, -0.746661, 0, 1.0};
Point(105) = {-0.020818, -0.747268, 0, 1.0};
Point(106) = {-0.016980, -0.747817, 0, 1.0};
Point(107) = {-0.013143, -0.748304, 0, 1.0};
Point(108) = {-0.009306, -0.748741, 0, 1.0};
Point(109) = {-0.005470, -0.749108, 0, 1.0};
Point(110) = {-0.001633, -0.749416, 0, 1.0};
Point(111) = {0.002203, -0.749651, 0, 1.0};
Point(112) = {0.006038, -0.749828, 0, 1.0};
Point(113) = {0.009874, -0.749938, 0, 1.0};
Point(114) = {0.013709, -0.749993, 0, 1.0};
Point(115) = {0.017544, -0.750000, 0, 1.0};
Point(116) = {0.021379, -0.749952, 0, 1.0};
Point(117) = {0.025213, -0.749857, 0, 1.0};
Point(118) = {0.029048, -0.749708, 0, 1.0};
Point(119) = {0.032882, -0.749505, 0, 1.0};
Point(120) = {0.036715, -0.749245, 0, 1.0};
Point(121) = {0.040549, -0.748926, 0, 1.0};
Point(122) = {0.044382, -0.748536, 0, 1.0};
Point(123) = {0.048215, -0.748073, 0, 1.0};
Point(124) = {0.052047, -0.747517, 0, 1.0};
Point(125) = {0.055879, -0.746854, 0, 1.0};
Point(126) = {0.059711, -0.746036, 0, 1.0};
Point(127) = {0.063541, -0.744990, 0, 1.0};
Point(128) = {0.067369, -0.743520, 0, 1.0};
Point(129) = {0.069282, -0.742464, 0, 1.0};
Point(130) = {0.071193, -0.741093, 0, 1.0};
Point(131) = {0.073102, -0.739208, 0, 1.0};
Point(132) = {0.074245, -0.737441, 0, 1.0};
Point(133) = {0.074700, -0.736362, 0, 1.0};
Point(134) = {0.074999, -0.734598, 0, 1.0};
Point(135) = {0.074686, -0.733133, 0, 1.0};
Point(136) = {0.074222, -0.732354, 0, 1.0};
Point(137) = {0.073067, -0.731225, 0, 1.0};
Point(138) = {0.071144, -0.730067, 0, 1.0};
Point(139) = {0.069223, -0.729221, 0, 1.0};
Point(140) = {0.067302, -0.728552, 0, 1.0};
Point(141) = {0.063463, -0.727532, 0, 1.0};
Point(142) = {0.059624, -0.726756, 0, 1.0};
Point(143) = {0.055787, -0.726130, 0, 1.0};
Point(144) = {0.051949, -0.725626, 0, 1.0};
Point(145) = {0.048113, -0.725211, 0, 1.0};
Point(146) = {0.044276, -0.724873, 0, 1.0};
Point(147) = {0.040440, -0.724588, 0, 1.0};
Point(148) = {0.036604, -0.724363, 0, 1.0};
Point(149) = {0.032768, -0.724186, 0, 1.0};
Point(150) = {0.028933, -0.724054, 0, 1.0};
Point(151) = {0.025097, -0.723965, 0, 1.0};
Point(152) = {0.021262, -0.723916, 0, 1.0};
Point(153) = {0.017427, -0.723911, 0, 1.0};
Point(154) = {0.013592, -0.723954, 0, 1.0};
Point(155) = {0.009758, -0.724051, 0, 1.0};
Point(156) = {0.005924, -0.724201, 0, 1.0};
Point(157) = {0.002090, -0.724410, 0, 1.0};
Point(158) = {-0.001744, -0.724679, 0, 1.0};
Point(159) = {-0.005578, -0.725006, 0, 1.0};
Point(160) = {-0.009411, -0.725408, 0, 1.0};
Point(161) = {-0.013244, -0.725875, 0, 1.0};
Point(162) = {-0.017076, -0.726420, 0, 1.0};
Point(163) = {-0.020908, -0.727043, 0, 1.0};
Point(164) = {-0.024740, -0.727723, 0, 1.0};
Point(165) = {-0.028572, -0.728445, 0, 1.0};
Point(166) = {-0.032403, -0.729197, 0, 1.0};
Point(167) = {-0.036235, -0.729951, 0, 1.0};
Point(168) = {-0.040067, -0.730697, 0, 1.0};
Point(169) = {-0.043898, -0.731436, 0, 1.0};
Point(170) = {-0.047730, -0.732147, 0, 1.0};
Point(171) = {-0.051562, -0.732814, 0, 1.0};
Point(172) = {-0.055394, -0.733421, 0, 1.0};
Point(173) = {-0.059227, -0.733944, 0, 1.0};
Point(174) = {-0.063060, -0.734358, 0, 1.0};
Point(175) = {-0.066894, -0.734638, 0, 1.0};
Point(176) = {-0.070728, -0.734743, 0, 1.0};
Point(177) = {-0.074564, -0.734619, 0, 1.0};
Point(178) = {-0.075002, -0.734593, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:31};
Spline(2) = {31:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:120};
Spline(6) = {120:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {36.00000000, 15.00000000, 0, 1.0};
Point(182) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
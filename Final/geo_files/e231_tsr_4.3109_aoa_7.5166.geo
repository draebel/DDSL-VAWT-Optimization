SetFactory("OpenCASCADE");

Point(1) = {0.074141, 0.732132, 0, 1.0};
Point(2) = {0.073779, 0.732219, 0, 1.0};
Point(3) = {0.072732, 0.732507, 0, 1.0};
Point(4) = {0.071075, 0.733018, 0, 1.0};
Point(5) = {0.068874, 0.733738, 0, 1.0};
Point(6) = {0.066176, 0.734656, 0, 1.0};
Point(7) = {0.063044, 0.735763, 0, 1.0};
Point(8) = {0.059554, 0.737035, 0, 1.0};
Point(9) = {0.055774, 0.738426, 0, 1.0};
Point(10) = {0.051773, 0.739884, 0, 1.0};
Point(11) = {0.047598, 0.741337, 0, 1.0};
Point(12) = {0.043267, 0.742720, 0, 1.0};
Point(13) = {0.038785, 0.744002, 0, 1.0};
Point(14) = {0.034174, 0.745174, 0, 1.0};
Point(15) = {0.029465, 0.746224, 0, 1.0};
Point(16) = {0.024696, 0.747148, 0, 1.0};
Point(17) = {0.019907, 0.747947, 0, 1.0};
Point(18) = {0.015147, 0.748619, 0, 1.0};
Point(19) = {0.010468, 0.749164, 0, 1.0};
Point(20) = {0.005917, 0.749577, 0, 1.0};
Point(21) = {0.001545, 0.749855, 0, 1.0};
Point(22) = {-0.002606, 0.749996, 0, 1.0};
Point(23) = {-0.006494, 0.750000, 0, 1.0};
Point(24) = {-0.010081, 0.749867, 0, 1.0};
Point(25) = {-0.013337, 0.749603, 0, 1.0};
Point(26) = {-0.016231, 0.749212, 0, 1.0};
Point(27) = {-0.018739, 0.748707, 0, 1.0};
Point(28) = {-0.020845, 0.748102, 0, 1.0};
Point(29) = {-0.022532, 0.747418, 0, 1.0};
Point(30) = {-0.023793, 0.746681, 0, 1.0};
Point(31) = {-0.024618, 0.745934, 0, 1.0};
Point(32) = {-0.024962, 0.745362, 0, 1.0};
Point(33) = {-0.025000, 0.745214, 0, 1.0};
Point(34) = {-0.024998, 0.745073, 0, 1.0};
Point(35) = {-0.024942, 0.744945, 0, 1.0};
Point(36) = {-0.024835, 0.744807, 0, 1.0};
Point(37) = {-0.024739, 0.744709, 0, 1.0};
Point(38) = {-0.023846, 0.744087, 0, 1.0};
Point(39) = {-0.022410, 0.743411, 0, 1.0};
Point(40) = {-0.020446, 0.742706, 0, 1.0};
Point(41) = {-0.017982, 0.741980, 0, 1.0};
Point(42) = {-0.015040, 0.741239, 0, 1.0};
Point(43) = {-0.011655, 0.740489, 0, 1.0};
Point(44) = {-0.007865, 0.739736, 0, 1.0};
Point(45) = {-0.003711, 0.738986, 0, 1.0};
Point(46) = {0.000760, 0.738243, 0, 1.0};
Point(47) = {0.005495, 0.737514, 0, 1.0};
Point(48) = {0.010443, 0.736805, 0, 1.0};
Point(49) = {0.015544, 0.736121, 0, 1.0};
Point(50) = {0.020742, 0.735469, 0, 1.0};
Point(51) = {0.025975, 0.734857, 0, 1.0};
Point(52) = {0.031184, 0.734293, 0, 1.0};
Point(53) = {0.036311, 0.733783, 0, 1.0};
Point(54) = {0.041294, 0.733336, 0, 1.0};
Point(55) = {0.046075, 0.732960, 0, 1.0};
Point(56) = {0.050601, 0.732679, 0, 1.0};
Point(57) = {0.054851, 0.732513, 0, 1.0};
Point(58) = {0.058816, 0.732448, 0, 1.0};
Point(59) = {0.062472, 0.732437, 0, 1.0};
Point(60) = {0.065766, 0.732434, 0, 1.0};
Point(61) = {0.068617, 0.732404, 0, 1.0};
Point(62) = {0.070944, 0.732343, 0, 1.0};
Point(63) = {0.072684, 0.732261, 0, 1.0};
Point(64) = {0.073771, 0.732174, 0, 1.0};
Point(65) = {-0.074141, -0.732132, 0, 1.0};
Point(66) = {-0.073779, -0.732219, 0, 1.0};
Point(67) = {-0.072732, -0.732507, 0, 1.0};
Point(68) = {-0.071075, -0.733018, 0, 1.0};
Point(69) = {-0.068874, -0.733738, 0, 1.0};
Point(70) = {-0.066176, -0.734656, 0, 1.0};
Point(71) = {-0.063044, -0.735763, 0, 1.0};
Point(72) = {-0.059554, -0.737035, 0, 1.0};
Point(73) = {-0.055774, -0.738426, 0, 1.0};
Point(74) = {-0.051773, -0.739884, 0, 1.0};
Point(75) = {-0.047598, -0.741337, 0, 1.0};
Point(76) = {-0.043267, -0.742720, 0, 1.0};
Point(77) = {-0.038785, -0.744002, 0, 1.0};
Point(78) = {-0.034174, -0.745174, 0, 1.0};
Point(79) = {-0.029465, -0.746224, 0, 1.0};
Point(80) = {-0.024696, -0.747148, 0, 1.0};
Point(81) = {-0.019907, -0.747947, 0, 1.0};
Point(82) = {-0.015147, -0.748619, 0, 1.0};
Point(83) = {-0.010468, -0.749164, 0, 1.0};
Point(84) = {-0.005917, -0.749577, 0, 1.0};
Point(85) = {-0.001545, -0.749855, 0, 1.0};
Point(86) = {0.002606, -0.749996, 0, 1.0};
Point(87) = {0.006494, -0.750000, 0, 1.0};
Point(88) = {0.010081, -0.749867, 0, 1.0};
Point(89) = {0.013337, -0.749603, 0, 1.0};
Point(90) = {0.016231, -0.749212, 0, 1.0};
Point(91) = {0.018739, -0.748707, 0, 1.0};
Point(92) = {0.020845, -0.748102, 0, 1.0};
Point(93) = {0.022532, -0.747418, 0, 1.0};
Point(94) = {0.023793, -0.746681, 0, 1.0};
Point(95) = {0.024618, -0.745934, 0, 1.0};
Point(96) = {0.024962, -0.745362, 0, 1.0};
Point(97) = {0.025000, -0.745214, 0, 1.0};
Point(98) = {0.024998, -0.745073, 0, 1.0};
Point(99) = {0.024942, -0.744945, 0, 1.0};
Point(100) = {0.024835, -0.744807, 0, 1.0};
Point(101) = {0.024739, -0.744709, 0, 1.0};
Point(102) = {0.023846, -0.744087, 0, 1.0};
Point(103) = {0.022410, -0.743411, 0, 1.0};
Point(104) = {0.020446, -0.742706, 0, 1.0};
Point(105) = {0.017982, -0.741980, 0, 1.0};
Point(106) = {0.015040, -0.741239, 0, 1.0};
Point(107) = {0.011655, -0.740489, 0, 1.0};
Point(108) = {0.007865, -0.739736, 0, 1.0};
Point(109) = {0.003711, -0.738986, 0, 1.0};
Point(110) = {-0.000760, -0.738243, 0, 1.0};
Point(111) = {-0.005495, -0.737514, 0, 1.0};
Point(112) = {-0.010443, -0.736805, 0, 1.0};
Point(113) = {-0.015544, -0.736121, 0, 1.0};
Point(114) = {-0.020742, -0.735469, 0, 1.0};
Point(115) = {-0.025975, -0.734857, 0, 1.0};
Point(116) = {-0.031184, -0.734293, 0, 1.0};
Point(117) = {-0.036311, -0.733783, 0, 1.0};
Point(118) = {-0.041294, -0.733336, 0, 1.0};
Point(119) = {-0.046075, -0.732960, 0, 1.0};
Point(120) = {-0.050601, -0.732679, 0, 1.0};
Point(121) = {-0.054851, -0.732513, 0, 1.0};
Point(122) = {-0.058816, -0.732448, 0, 1.0};
Point(123) = {-0.062472, -0.732437, 0, 1.0};
Point(124) = {-0.065766, -0.732434, 0, 1.0};
Point(125) = {-0.068617, -0.732404, 0, 1.0};
Point(126) = {-0.070944, -0.732343, 0, 1.0};
Point(127) = {-0.072684, -0.732261, 0, 1.0};
Point(128) = {-0.073771, -0.732174, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:46};
Spline(3) = {46:64};
Spline(4) = {64,1};

// Lines: second blade (splines 5-8)
Spline(5) = {65:84};
Spline(6) = {84:110};
Spline(7) = {110:128};
Spline(8) = {128,65};

// Outer domain (points 20001-4 and lines)
Point(129) = {-13.50000000, -15.00000000, 0, 1.0};
Point(130) = {-13.50000000, 15.00000000, 0, 1.0};
Point(131) = {13.50000000, 15.00000000, 0, 1.0};
Point(132) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {129, 130};
Line(12) = {130, 131};
Line(13) = {131, 132};
Line(14) = {129, 132};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
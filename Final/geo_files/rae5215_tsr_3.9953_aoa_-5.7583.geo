SetFactory("OpenCASCADE");

Point(1) = {0.074457, 0.749042, 0, 1.0};
Point(2) = {0.074214, 0.749054, 0, 1.0};
Point(3) = {0.073487, 0.749090, 0, 1.0};
Point(4) = {0.072282, 0.749151, 0, 1.0};
Point(5) = {0.070613, 0.749228, 0, 1.0};
Point(6) = {0.068495, 0.749326, 0, 1.0};
Point(7) = {0.065948, 0.749437, 0, 1.0};
Point(8) = {0.063000, 0.749546, 0, 1.0};
Point(9) = {0.059675, 0.749666, 0, 1.0};
Point(10) = {0.056010, 0.749786, 0, 1.0};
Point(11) = {0.052038, 0.749889, 0, 1.0};
Point(12) = {0.047800, 0.749968, 0, 1.0};
Point(13) = {0.043338, 0.750000, 0, 1.0};
Point(14) = {0.038699, 0.749955, 0, 1.0};
Point(15) = {0.033931, 0.749808, 0, 1.0};
Point(16) = {0.029076, 0.749574, 0, 1.0};
Point(17) = {0.024182, 0.749256, 0, 1.0};
Point(18) = {0.019296, 0.748862, 0, 1.0};
Point(19) = {0.014462, 0.748419, 0, 1.0};
Point(20) = {0.009729, 0.747925, 0, 1.0};
Point(21) = {0.005139, 0.747396, 0, 1.0};
Point(22) = {0.000737, 0.746836, 0, 1.0};
Point(23) = {-0.003436, 0.746260, 0, 1.0};
Point(24) = {-0.007337, 0.745670, 0, 1.0};
Point(25) = {-0.010930, 0.745070, 0, 1.0};
Point(26) = {-0.014182, 0.744465, 0, 1.0};
Point(27) = {-0.017059, 0.743875, 0, 1.0};
Point(28) = {-0.019530, 0.743236, 0, 1.0};
Point(29) = {-0.021564, 0.742491, 0, 1.0};
Point(30) = {-0.022338, 0.742132, 0, 1.0};
Point(31) = {-0.023143, 0.741674, 0, 1.0};
Point(32) = {-0.023756, 0.741249, 0, 1.0};
Point(33) = {-0.024254, 0.740807, 0, 1.0};
Point(34) = {-0.024399, 0.740642, 0, 1.0};
Point(35) = {-0.024532, 0.740465, 0, 1.0};
Point(36) = {-0.024661, 0.740253, 0, 1.0};
Point(37) = {-0.024787, 0.740002, 0, 1.0};
Point(38) = {-0.024873, 0.739778, 0, 1.0};
Point(39) = {-0.024934, 0.739567, 0, 1.0};
Point(40) = {-0.024974, 0.739369, 0, 1.0};
Point(41) = {-0.025003, 0.739155, 0, 1.0};
Point(42) = {-0.025000, 0.738631, 0, 1.0};
Point(43) = {-0.024909, 0.738228, 0, 1.0};
Point(44) = {-0.024846, 0.738099, 0, 1.0};
Point(45) = {-0.024774, 0.737985, 0, 1.0};
Point(46) = {-0.024681, 0.737874, 0, 1.0};
Point(47) = {-0.024561, 0.737771, 0, 1.0};
Point(48) = {-0.024399, 0.737656, 0, 1.0};
Point(49) = {-0.024239, 0.737563, 0, 1.0};
Point(50) = {-0.024081, 0.737490, 0, 1.0};
Point(51) = {-0.023912, 0.737418, 0, 1.0};
Point(52) = {-0.023354, 0.737256, 0, 1.0};
Point(53) = {-0.022685, 0.737129, 0, 1.0};
Point(54) = {-0.021820, 0.736995, 0, 1.0};
Point(55) = {-0.021001, 0.736906, 0, 1.0};
Point(56) = {-0.018879, 0.736777, 0, 1.0};
Point(57) = {-0.016336, 0.736705, 0, 1.0};
Point(58) = {-0.013400, 0.736711, 0, 1.0};
Point(59) = {-0.010095, 0.736785, 0, 1.0};
Point(60) = {-0.006455, 0.736927, 0, 1.0};
Point(61) = {-0.002517, 0.737148, 0, 1.0};
Point(62) = {0.001684, 0.737446, 0, 1.0};
Point(63) = {0.006103, 0.737833, 0, 1.0};
Point(64) = {0.010697, 0.738322, 0, 1.0};
Point(65) = {0.015420, 0.738915, 0, 1.0};
Point(66) = {0.020229, 0.739614, 0, 1.0};
Point(67) = {0.025072, 0.740432, 0, 1.0};
Point(68) = {0.029904, 0.741366, 0, 1.0};
Point(69) = {0.034681, 0.742371, 0, 1.0};
Point(70) = {0.039361, 0.743397, 0, 1.0};
Point(71) = {0.043905, 0.744375, 0, 1.0};
Point(72) = {0.048276, 0.745248, 0, 1.0};
Point(73) = {0.052429, 0.746013, 0, 1.0};
Point(74) = {0.056325, 0.746656, 0, 1.0};
Point(75) = {0.059925, 0.747185, 0, 1.0};
Point(76) = {0.063195, 0.747610, 0, 1.0};
Point(77) = {0.066098, 0.747948, 0, 1.0};
Point(78) = {0.068609, 0.748197, 0, 1.0};
Point(79) = {0.070699, 0.748380, 0, 1.0};
Point(80) = {0.072347, 0.748510, 0, 1.0};
Point(81) = {0.073536, 0.748597, 0, 1.0};
Point(82) = {0.074255, 0.748646, 0, 1.0};
Point(83) = {0.074495, 0.748664, 0, 1.0};
Point(84) = {-0.074457, -0.749042, 0, 1.0};
Point(85) = {-0.074214, -0.749054, 0, 1.0};
Point(86) = {-0.073487, -0.749090, 0, 1.0};
Point(87) = {-0.072282, -0.749151, 0, 1.0};
Point(88) = {-0.070613, -0.749228, 0, 1.0};
Point(89) = {-0.068495, -0.749326, 0, 1.0};
Point(90) = {-0.065948, -0.749437, 0, 1.0};
Point(91) = {-0.063000, -0.749546, 0, 1.0};
Point(92) = {-0.059675, -0.749666, 0, 1.0};
Point(93) = {-0.056010, -0.749786, 0, 1.0};
Point(94) = {-0.052038, -0.749889, 0, 1.0};
Point(95) = {-0.047800, -0.749968, 0, 1.0};
Point(96) = {-0.043338, -0.750000, 0, 1.0};
Point(97) = {-0.038699, -0.749955, 0, 1.0};
Point(98) = {-0.033931, -0.749808, 0, 1.0};
Point(99) = {-0.029076, -0.749574, 0, 1.0};
Point(100) = {-0.024182, -0.749256, 0, 1.0};
Point(101) = {-0.019296, -0.748862, 0, 1.0};
Point(102) = {-0.014462, -0.748419, 0, 1.0};
Point(103) = {-0.009729, -0.747925, 0, 1.0};
Point(104) = {-0.005139, -0.747396, 0, 1.0};
Point(105) = {-0.000737, -0.746836, 0, 1.0};
Point(106) = {0.003436, -0.746260, 0, 1.0};
Point(107) = {0.007337, -0.745670, 0, 1.0};
Point(108) = {0.010930, -0.745070, 0, 1.0};
Point(109) = {0.014182, -0.744465, 0, 1.0};
Point(110) = {0.017059, -0.743875, 0, 1.0};
Point(111) = {0.019530, -0.743236, 0, 1.0};
Point(112) = {0.021564, -0.742491, 0, 1.0};
Point(113) = {0.022338, -0.742132, 0, 1.0};
Point(114) = {0.023143, -0.741674, 0, 1.0};
Point(115) = {0.023756, -0.741249, 0, 1.0};
Point(116) = {0.024254, -0.740807, 0, 1.0};
Point(117) = {0.024399, -0.740642, 0, 1.0};
Point(118) = {0.024532, -0.740465, 0, 1.0};
Point(119) = {0.024661, -0.740253, 0, 1.0};
Point(120) = {0.024787, -0.740002, 0, 1.0};
Point(121) = {0.024873, -0.739778, 0, 1.0};
Point(122) = {0.024934, -0.739567, 0, 1.0};
Point(123) = {0.024974, -0.739369, 0, 1.0};
Point(124) = {0.025003, -0.739155, 0, 1.0};
Point(125) = {0.025000, -0.738631, 0, 1.0};
Point(126) = {0.024909, -0.738228, 0, 1.0};
Point(127) = {0.024846, -0.738099, 0, 1.0};
Point(128) = {0.024774, -0.737985, 0, 1.0};
Point(129) = {0.024681, -0.737874, 0, 1.0};
Point(130) = {0.024561, -0.737771, 0, 1.0};
Point(131) = {0.024399, -0.737656, 0, 1.0};
Point(132) = {0.024239, -0.737563, 0, 1.0};
Point(133) = {0.024081, -0.737490, 0, 1.0};
Point(134) = {0.023912, -0.737418, 0, 1.0};
Point(135) = {0.023354, -0.737256, 0, 1.0};
Point(136) = {0.022685, -0.737129, 0, 1.0};
Point(137) = {0.021820, -0.736995, 0, 1.0};
Point(138) = {0.021001, -0.736906, 0, 1.0};
Point(139) = {0.018879, -0.736777, 0, 1.0};
Point(140) = {0.016336, -0.736705, 0, 1.0};
Point(141) = {0.013400, -0.736711, 0, 1.0};
Point(142) = {0.010095, -0.736785, 0, 1.0};
Point(143) = {0.006455, -0.736927, 0, 1.0};
Point(144) = {0.002517, -0.737148, 0, 1.0};
Point(145) = {-0.001684, -0.737446, 0, 1.0};
Point(146) = {-0.006103, -0.737833, 0, 1.0};
Point(147) = {-0.010697, -0.738322, 0, 1.0};
Point(148) = {-0.015420, -0.738915, 0, 1.0};
Point(149) = {-0.020229, -0.739614, 0, 1.0};
Point(150) = {-0.025072, -0.740432, 0, 1.0};
Point(151) = {-0.029904, -0.741366, 0, 1.0};
Point(152) = {-0.034681, -0.742371, 0, 1.0};
Point(153) = {-0.039361, -0.743397, 0, 1.0};
Point(154) = {-0.043905, -0.744375, 0, 1.0};
Point(155) = {-0.048276, -0.745248, 0, 1.0};
Point(156) = {-0.052429, -0.746013, 0, 1.0};
Point(157) = {-0.056325, -0.746656, 0, 1.0};
Point(158) = {-0.059925, -0.747185, 0, 1.0};
Point(159) = {-0.063195, -0.747610, 0, 1.0};
Point(160) = {-0.066098, -0.747948, 0, 1.0};
Point(161) = {-0.068609, -0.748197, 0, 1.0};
Point(162) = {-0.070699, -0.748380, 0, 1.0};
Point(163) = {-0.072347, -0.748510, 0, 1.0};
Point(164) = {-0.073536, -0.748597, 0, 1.0};
Point(165) = {-0.074255, -0.748646, 0, 1.0};
Point(166) = {-0.074495, -0.748664, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
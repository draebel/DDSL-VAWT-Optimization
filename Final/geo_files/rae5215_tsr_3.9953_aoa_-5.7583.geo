SetFactory("OpenCASCADE");

Point(1) = {0.111875, 0.748564, 0, 1.0};
Point(2) = {0.111510, 0.748581, 0, 1.0};
Point(3) = {0.110419, 0.748635, 0, 1.0};
Point(4) = {0.108613, 0.748726, 0, 1.0};
Point(5) = {0.106109, 0.748842, 0, 1.0};
Point(6) = {0.102931, 0.748988, 0, 1.0};
Point(7) = {0.099111, 0.749155, 0, 1.0};
Point(8) = {0.094689, 0.749320, 0, 1.0};
Point(9) = {0.089702, 0.749500, 0, 1.0};
Point(10) = {0.084204, 0.749679, 0, 1.0};
Point(11) = {0.078246, 0.749834, 0, 1.0};
Point(12) = {0.071889, 0.749953, 0, 1.0};
Point(13) = {0.065196, 0.750000, 0, 1.0};
Point(14) = {0.058238, 0.749933, 0, 1.0};
Point(15) = {0.051086, 0.749712, 0, 1.0};
Point(16) = {0.043803, 0.749361, 0, 1.0};
Point(17) = {0.036462, 0.748884, 0, 1.0};
Point(18) = {0.029133, 0.748293, 0, 1.0};
Point(19) = {0.021882, 0.747628, 0, 1.0};
Point(20) = {0.014782, 0.746888, 0, 1.0};
Point(21) = {0.007897, 0.746094, 0, 1.0};
Point(22) = {0.001294, 0.745254, 0, 1.0};
Point(23) = {-0.004964, 0.744390, 0, 1.0};
Point(24) = {-0.010816, 0.743505, 0, 1.0};
Point(25) = {-0.016206, 0.742605, 0, 1.0};
Point(26) = {-0.021083, 0.741697, 0, 1.0};
Point(27) = {-0.025399, 0.740813, 0, 1.0};
Point(28) = {-0.029106, 0.739854, 0, 1.0};
Point(29) = {-0.032157, 0.738737, 0, 1.0};
Point(30) = {-0.033317, 0.738198, 0, 1.0};
Point(31) = {-0.034525, 0.737511, 0, 1.0};
Point(32) = {-0.035445, 0.736874, 0, 1.0};
Point(33) = {-0.036191, 0.736210, 0, 1.0};
Point(34) = {-0.036409, 0.735962, 0, 1.0};
Point(35) = {-0.036608, 0.735698, 0, 1.0};
Point(36) = {-0.036802, 0.735380, 0, 1.0};
Point(37) = {-0.036991, 0.735004, 0, 1.0};
Point(38) = {-0.037121, 0.734666, 0, 1.0};
Point(39) = {-0.037211, 0.734351, 0, 1.0};
Point(40) = {-0.037272, 0.734054, 0, 1.0};
Point(41) = {-0.037315, 0.733733, 0, 1.0};
Point(42) = {-0.037311, 0.732947, 0, 1.0};
Point(43) = {-0.037174, 0.732342, 0, 1.0};
Point(44) = {-0.037080, 0.732148, 0, 1.0};
Point(45) = {-0.036972, 0.731978, 0, 1.0};
Point(46) = {-0.036833, 0.731811, 0, 1.0};
Point(47) = {-0.036653, 0.731656, 0, 1.0};
Point(48) = {-0.036410, 0.731485, 0, 1.0};
Point(49) = {-0.036169, 0.731345, 0, 1.0};
Point(50) = {-0.035932, 0.731234, 0, 1.0};
Point(51) = {-0.035678, 0.731127, 0, 1.0};
Point(52) = {-0.034841, 0.730884, 0, 1.0};
Point(53) = {-0.033838, 0.730693, 0, 1.0};
Point(54) = {-0.032540, 0.730492, 0, 1.0};
Point(55) = {-0.031312, 0.730358, 0, 1.0};
Point(56) = {-0.028129, 0.730165, 0, 1.0};
Point(57) = {-0.024315, 0.730057, 0, 1.0};
Point(58) = {-0.019911, 0.730067, 0, 1.0};
Point(59) = {-0.014953, 0.730178, 0, 1.0};
Point(60) = {-0.009494, 0.730391, 0, 1.0};
Point(61) = {-0.003586, 0.730723, 0, 1.0};
Point(62) = {0.002715, 0.731169, 0, 1.0};
Point(63) = {0.009344, 0.731749, 0, 1.0};
Point(64) = {0.016235, 0.732483, 0, 1.0};
Point(65) = {0.023320, 0.733373, 0, 1.0};
Point(66) = {0.030532, 0.734421, 0, 1.0};
Point(67) = {0.037797, 0.735648, 0, 1.0};
Point(68) = {0.045045, 0.737048, 0, 1.0};
Point(69) = {0.052211, 0.738556, 0, 1.0};
Point(70) = {0.059230, 0.740095, 0, 1.0};
Point(71) = {0.066047, 0.741562, 0, 1.0};
Point(72) = {0.072603, 0.742873, 0, 1.0};
Point(73) = {0.078833, 0.744019, 0, 1.0};
Point(74) = {0.084677, 0.744984, 0, 1.0};
Point(75) = {0.090077, 0.745778, 0, 1.0};
Point(76) = {0.094982, 0.746415, 0, 1.0};
Point(77) = {0.099336, 0.746922, 0, 1.0};
Point(78) = {0.103102, 0.747296, 0, 1.0};
Point(79) = {0.106237, 0.747570, 0, 1.0};
Point(80) = {0.108710, 0.747765, 0, 1.0};
Point(81) = {0.110494, 0.747895, 0, 1.0};
Point(82) = {0.111572, 0.747969, 0, 1.0};
Point(83) = {0.111932, 0.747997, 0, 1.0};
Point(84) = {-0.111875, -0.748564, 0, 1.0};
Point(85) = {-0.111510, -0.748581, 0, 1.0};
Point(86) = {-0.110419, -0.748635, 0, 1.0};
Point(87) = {-0.108613, -0.748726, 0, 1.0};
Point(88) = {-0.106109, -0.748842, 0, 1.0};
Point(89) = {-0.102931, -0.748988, 0, 1.0};
Point(90) = {-0.099111, -0.749155, 0, 1.0};
Point(91) = {-0.094689, -0.749320, 0, 1.0};
Point(92) = {-0.089702, -0.749500, 0, 1.0};
Point(93) = {-0.084204, -0.749679, 0, 1.0};
Point(94) = {-0.078246, -0.749834, 0, 1.0};
Point(95) = {-0.071889, -0.749953, 0, 1.0};
Point(96) = {-0.065196, -0.750000, 0, 1.0};
Point(97) = {-0.058238, -0.749933, 0, 1.0};
Point(98) = {-0.051086, -0.749712, 0, 1.0};
Point(99) = {-0.043803, -0.749361, 0, 1.0};
Point(100) = {-0.036462, -0.748884, 0, 1.0};
Point(101) = {-0.029133, -0.748293, 0, 1.0};
Point(102) = {-0.021882, -0.747628, 0, 1.0};
Point(103) = {-0.014782, -0.746888, 0, 1.0};
Point(104) = {-0.007897, -0.746094, 0, 1.0};
Point(105) = {-0.001294, -0.745254, 0, 1.0};
Point(106) = {0.004964, -0.744390, 0, 1.0};
Point(107) = {0.010816, -0.743505, 0, 1.0};
Point(108) = {0.016206, -0.742605, 0, 1.0};
Point(109) = {0.021083, -0.741697, 0, 1.0};
Point(110) = {0.025399, -0.740813, 0, 1.0};
Point(111) = {0.029106, -0.739854, 0, 1.0};
Point(112) = {0.032157, -0.738737, 0, 1.0};
Point(113) = {0.033317, -0.738198, 0, 1.0};
Point(114) = {0.034525, -0.737511, 0, 1.0};
Point(115) = {0.035445, -0.736874, 0, 1.0};
Point(116) = {0.036191, -0.736210, 0, 1.0};
Point(117) = {0.036409, -0.735962, 0, 1.0};
Point(118) = {0.036608, -0.735698, 0, 1.0};
Point(119) = {0.036802, -0.735380, 0, 1.0};
Point(120) = {0.036991, -0.735004, 0, 1.0};
Point(121) = {0.037121, -0.734666, 0, 1.0};
Point(122) = {0.037211, -0.734351, 0, 1.0};
Point(123) = {0.037272, -0.734054, 0, 1.0};
Point(124) = {0.037315, -0.733733, 0, 1.0};
Point(125) = {0.037311, -0.732947, 0, 1.0};
Point(126) = {0.037174, -0.732342, 0, 1.0};
Point(127) = {0.037080, -0.732148, 0, 1.0};
Point(128) = {0.036972, -0.731978, 0, 1.0};
Point(129) = {0.036833, -0.731811, 0, 1.0};
Point(130) = {0.036653, -0.731656, 0, 1.0};
Point(131) = {0.036410, -0.731485, 0, 1.0};
Point(132) = {0.036169, -0.731345, 0, 1.0};
Point(133) = {0.035932, -0.731234, 0, 1.0};
Point(134) = {0.035678, -0.731127, 0, 1.0};
Point(135) = {0.034841, -0.730884, 0, 1.0};
Point(136) = {0.033838, -0.730693, 0, 1.0};
Point(137) = {0.032540, -0.730492, 0, 1.0};
Point(138) = {0.031312, -0.730358, 0, 1.0};
Point(139) = {0.028129, -0.730165, 0, 1.0};
Point(140) = {0.024315, -0.730057, 0, 1.0};
Point(141) = {0.019911, -0.730067, 0, 1.0};
Point(142) = {0.014953, -0.730178, 0, 1.0};
Point(143) = {0.009494, -0.730391, 0, 1.0};
Point(144) = {0.003586, -0.730723, 0, 1.0};
Point(145) = {-0.002715, -0.731169, 0, 1.0};
Point(146) = {-0.009344, -0.731749, 0, 1.0};
Point(147) = {-0.016235, -0.732483, 0, 1.0};
Point(148) = {-0.023320, -0.733373, 0, 1.0};
Point(149) = {-0.030532, -0.734421, 0, 1.0};
Point(150) = {-0.037797, -0.735648, 0, 1.0};
Point(151) = {-0.045045, -0.737048, 0, 1.0};
Point(152) = {-0.052211, -0.738556, 0, 1.0};
Point(153) = {-0.059230, -0.740095, 0, 1.0};
Point(154) = {-0.066047, -0.741562, 0, 1.0};
Point(155) = {-0.072603, -0.742873, 0, 1.0};
Point(156) = {-0.078833, -0.744019, 0, 1.0};
Point(157) = {-0.084677, -0.744984, 0, 1.0};
Point(158) = {-0.090077, -0.745778, 0, 1.0};
Point(159) = {-0.094982, -0.746415, 0, 1.0};
Point(160) = {-0.099336, -0.746922, 0, 1.0};
Point(161) = {-0.103102, -0.747296, 0, 1.0};
Point(162) = {-0.106237, -0.747570, 0, 1.0};
Point(163) = {-0.108710, -0.747765, 0, 1.0};
Point(164) = {-0.110494, -0.747895, 0, 1.0};
Point(165) = {-0.111572, -0.747969, 0, 1.0};
Point(166) = {-0.111932, -0.747997, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:145};
Spline(7) = {145:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
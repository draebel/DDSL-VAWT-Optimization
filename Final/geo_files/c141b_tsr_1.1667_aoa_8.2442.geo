SetFactory("OpenCASCADE");

Point(1) = {0.110963, 0.723311, 0, 1.0};
Point(2) = {0.110619, 0.723456, 0, 1.0};
Point(3) = {0.109591, 0.723887, 0, 1.0};
Point(4) = {0.107886, 0.724594, 0, 1.0};
Point(5) = {0.105521, 0.725560, 0, 1.0};
Point(6) = {0.102515, 0.726764, 0, 1.0};
Point(7) = {0.098897, 0.728179, 0, 1.0};
Point(8) = {0.094696, 0.729762, 0, 1.0};
Point(9) = {0.089949, 0.731471, 0, 1.0};
Point(10) = {0.084702, 0.733287, 0, 1.0};
Point(11) = {0.078995, 0.735126, 0, 1.0};
Point(12) = {0.072875, 0.736914, 0, 1.0};
Point(13) = {0.066400, 0.738622, 0, 1.0};
Point(14) = {0.059638, 0.740280, 0, 1.0};
Point(15) = {0.052653, 0.741862, 0, 1.0};
Point(16) = {0.045510, 0.743338, 0, 1.0};
Point(17) = {0.038277, 0.744688, 0, 1.0};
Point(18) = {0.031024, 0.745894, 0, 1.0};
Point(19) = {0.023820, 0.746945, 0, 1.0};
Point(20) = {0.016735, 0.747836, 0, 1.0};
Point(21) = {0.009839, 0.748571, 0, 1.0};
Point(22) = {0.003201, 0.749155, 0, 1.0};
Point(23) = {-0.003116, 0.749586, 0, 1.0};
Point(24) = {-0.009048, 0.749869, 0, 1.0};
Point(25) = {-0.014540, 0.750000, 0, 1.0};
Point(26) = {-0.019538, 0.749976, 0, 1.0};
Point(27) = {-0.023995, 0.749789, 0, 1.0};
Point(28) = {-0.027870, 0.749433, 0, 1.0};
Point(29) = {-0.031127, 0.748901, 0, 1.0};
Point(30) = {-0.033735, 0.748189, 0, 1.0};
Point(31) = {-0.035672, 0.747295, 0, 1.0};
Point(32) = {-0.036919, 0.746220, 0, 1.0};
Point(33) = {-0.037500, 0.744728, 0, 1.0};
Point(34) = {-0.037306, 0.743546, 0, 1.0};
Point(35) = {-0.036402, 0.742254, 0, 1.0};
Point(36) = {-0.034781, 0.740970, 0, 1.0};
Point(37) = {-0.032457, 0.739721, 0, 1.0};
Point(38) = {-0.029455, 0.738494, 0, 1.0};
Point(39) = {-0.025807, 0.737281, 0, 1.0};
Point(40) = {-0.021551, 0.736077, 0, 1.0};
Point(41) = {-0.016730, 0.734879, 0, 1.0};
Point(42) = {-0.011392, 0.733690, 0, 1.0};
Point(43) = {-0.005589, 0.732513, 0, 1.0};
Point(44) = {0.000622, 0.731357, 0, 1.0};
Point(45) = {0.007183, 0.730236, 0, 1.0};
Point(46) = {0.014030, 0.729168, 0, 1.0};
Point(47) = {0.021100, 0.728174, 0, 1.0};
Point(48) = {0.028326, 0.727272, 0, 1.0};
Point(49) = {0.035638, 0.726473, 0, 1.0};
Point(50) = {0.042967, 0.725788, 0, 1.0};
Point(51) = {0.050241, 0.725214, 0, 1.0};
Point(52) = {0.057388, 0.724757, 0, 1.0};
Point(53) = {0.064337, 0.724387, 0, 1.0};
Point(54) = {0.071019, 0.724104, 0, 1.0};
Point(55) = {0.077359, 0.723833, 0, 1.0};
Point(56) = {0.083299, 0.723606, 0, 1.0};
Point(57) = {0.088786, 0.723438, 0, 1.0};
Point(58) = {0.093760, 0.723304, 0, 1.0};
Point(59) = {0.098177, 0.723209, 0, 1.0};
Point(60) = {0.101993, 0.723162, 0, 1.0};
Point(61) = {0.105170, 0.723142, 0, 1.0};
Point(62) = {0.107675, 0.723134, 0, 1.0};
Point(63) = {0.109481, 0.723133, 0, 1.0};
Point(64) = {0.110572, 0.723129, 0, 1.0};
Point(65) = {0.110937, 0.723128, 0, 1.0};
Point(66) = {-0.110963, -0.723311, 0, 1.0};
Point(67) = {-0.110619, -0.723456, 0, 1.0};
Point(68) = {-0.109591, -0.723887, 0, 1.0};
Point(69) = {-0.107886, -0.724594, 0, 1.0};
Point(70) = {-0.105521, -0.725560, 0, 1.0};
Point(71) = {-0.102515, -0.726764, 0, 1.0};
Point(72) = {-0.098897, -0.728179, 0, 1.0};
Point(73) = {-0.094696, -0.729762, 0, 1.0};
Point(74) = {-0.089949, -0.731471, 0, 1.0};
Point(75) = {-0.084702, -0.733287, 0, 1.0};
Point(76) = {-0.078995, -0.735126, 0, 1.0};
Point(77) = {-0.072875, -0.736914, 0, 1.0};
Point(78) = {-0.066400, -0.738622, 0, 1.0};
Point(79) = {-0.059638, -0.740280, 0, 1.0};
Point(80) = {-0.052653, -0.741862, 0, 1.0};
Point(81) = {-0.045510, -0.743338, 0, 1.0};
Point(82) = {-0.038277, -0.744688, 0, 1.0};
Point(83) = {-0.031024, -0.745894, 0, 1.0};
Point(84) = {-0.023820, -0.746945, 0, 1.0};
Point(85) = {-0.016735, -0.747836, 0, 1.0};
Point(86) = {-0.009839, -0.748571, 0, 1.0};
Point(87) = {-0.003201, -0.749155, 0, 1.0};
Point(88) = {0.003116, -0.749586, 0, 1.0};
Point(89) = {0.009048, -0.749869, 0, 1.0};
Point(90) = {0.014540, -0.750000, 0, 1.0};
Point(91) = {0.019538, -0.749976, 0, 1.0};
Point(92) = {0.023995, -0.749789, 0, 1.0};
Point(93) = {0.027870, -0.749433, 0, 1.0};
Point(94) = {0.031127, -0.748901, 0, 1.0};
Point(95) = {0.033735, -0.748189, 0, 1.0};
Point(96) = {0.035672, -0.747295, 0, 1.0};
Point(97) = {0.036919, -0.746220, 0, 1.0};
Point(98) = {0.037500, -0.744728, 0, 1.0};
Point(99) = {0.037306, -0.743546, 0, 1.0};
Point(100) = {0.036402, -0.742254, 0, 1.0};
Point(101) = {0.034781, -0.740970, 0, 1.0};
Point(102) = {0.032457, -0.739721, 0, 1.0};
Point(103) = {0.029455, -0.738494, 0, 1.0};
Point(104) = {0.025807, -0.737281, 0, 1.0};
Point(105) = {0.021551, -0.736077, 0, 1.0};
Point(106) = {0.016730, -0.734879, 0, 1.0};
Point(107) = {0.011392, -0.733690, 0, 1.0};
Point(108) = {0.005589, -0.732513, 0, 1.0};
Point(109) = {-0.000622, -0.731357, 0, 1.0};
Point(110) = {-0.007183, -0.730236, 0, 1.0};
Point(111) = {-0.014030, -0.729168, 0, 1.0};
Point(112) = {-0.021100, -0.728174, 0, 1.0};
Point(113) = {-0.028326, -0.727272, 0, 1.0};
Point(114) = {-0.035638, -0.726473, 0, 1.0};
Point(115) = {-0.042967, -0.725788, 0, 1.0};
Point(116) = {-0.050241, -0.725214, 0, 1.0};
Point(117) = {-0.057388, -0.724757, 0, 1.0};
Point(118) = {-0.064337, -0.724387, 0, 1.0};
Point(119) = {-0.071019, -0.724104, 0, 1.0};
Point(120) = {-0.077359, -0.723833, 0, 1.0};
Point(121) = {-0.083299, -0.723606, 0, 1.0};
Point(122) = {-0.088786, -0.723438, 0, 1.0};
Point(123) = {-0.093760, -0.723304, 0, 1.0};
Point(124) = {-0.098177, -0.723209, 0, 1.0};
Point(125) = {-0.101993, -0.723162, 0, 1.0};
Point(126) = {-0.105170, -0.723142, 0, 1.0};
Point(127) = {-0.107675, -0.723134, 0, 1.0};
Point(128) = {-0.109481, -0.723133, 0, 1.0};
Point(129) = {-0.110572, -0.723129, 0, 1.0};
Point(130) = {-0.110937, -0.723128, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
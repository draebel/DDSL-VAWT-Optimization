SetFactory("OpenCASCADE");

Point(1) = {0.149203, 0.738621, 0, 1.0};
Point(2) = {0.148694, 0.738800, 0, 1.0};
Point(3) = {0.147279, 0.739291, 0, 1.0};
Point(4) = {0.145147, 0.739981, 0, 1.0};
Point(5) = {0.142389, 0.740794, 0, 1.0};
Point(6) = {0.138992, 0.741693, 0, 1.0};
Point(7) = {0.134936, 0.742647, 0, 1.0};
Point(8) = {0.130258, 0.743617, 0, 1.0};
Point(9) = {0.125011, 0.744572, 0, 1.0};
Point(10) = {0.119248, 0.745489, 0, 1.0};
Point(11) = {0.113030, 0.746348, 0, 1.0};
Point(12) = {0.106416, 0.747138, 0, 1.0};
Point(13) = {0.099466, 0.747849, 0, 1.0};
Point(14) = {0.092241, 0.748470, 0, 1.0};
Point(15) = {0.084801, 0.748995, 0, 1.0};
Point(16) = {0.077207, 0.749416, 0, 1.0};
Point(17) = {0.069521, 0.749727, 0, 1.0};
Point(18) = {0.061794, 0.749922, 0, 1.0};
Point(19) = {0.054083, 0.750000, 0, 1.0};
Point(20) = {0.046391, 0.749957, 0, 1.0};
Point(21) = {0.038717, 0.749790, 0, 1.0};
Point(22) = {0.031120, 0.749496, 0, 1.0};
Point(23) = {0.023627, 0.749071, 0, 1.0};
Point(24) = {0.016282, 0.748510, 0, 1.0};
Point(25) = {0.009126, 0.747808, 0, 1.0};
Point(26) = {0.002195, 0.746957, 0, 1.0};
Point(27) = {-0.004463, 0.745948, 0, 1.0};
Point(28) = {-0.010807, 0.744770, 0, 1.0};
Point(29) = {-0.016803, 0.743408, 0, 1.0};
Point(30) = {-0.022403, 0.741851, 0, 1.0};
Point(31) = {-0.027569, 0.740083, 0, 1.0};
Point(32) = {-0.032262, 0.738096, 0, 1.0};
Point(33) = {-0.036451, 0.735888, 0, 1.0};
Point(34) = {-0.040113, 0.733484, 0, 1.0};
Point(35) = {-0.043224, 0.730974, 0, 1.0};
Point(36) = {-0.045776, 0.728469, 0, 1.0};
Point(37) = {-0.047768, 0.726065, 0, 1.0};
Point(38) = {-0.049165, 0.723861, 0, 1.0};
Point(39) = {-0.049904, 0.721951, 0, 1.0};
Point(40) = {-0.050003, 0.720806, 0, 1.0};
Point(41) = {-0.049728, 0.719892, 0, 1.0};
Point(42) = {-0.048749, 0.719010, 0, 1.0};
Point(43) = {-0.047123, 0.718534, 0, 1.0};
Point(44) = {-0.044914, 0.718409, 0, 1.0};
Point(45) = {-0.042160, 0.718553, 0, 1.0};
Point(46) = {-0.038863, 0.718887, 0, 1.0};
Point(47) = {-0.035033, 0.719338, 0, 1.0};
Point(48) = {-0.030699, 0.719845, 0, 1.0};
Point(49) = {-0.025881, 0.720382, 0, 1.0};
Point(50) = {-0.020611, 0.720943, 0, 1.0};
Point(51) = {-0.014928, 0.721523, 0, 1.0};
Point(52) = {-0.008867, 0.722123, 0, 1.0};
Point(53) = {-0.002475, 0.722743, 0, 1.0};
Point(54) = {0.004215, 0.723381, 0, 1.0};
Point(55) = {0.011162, 0.724039, 0, 1.0};
Point(56) = {0.018321, 0.724713, 0, 1.0};
Point(57) = {0.025655, 0.725404, 0, 1.0};
Point(58) = {0.033124, 0.726107, 0, 1.0};
Point(59) = {0.040685, 0.726819, 0, 1.0};
Point(60) = {0.048311, 0.727540, 0, 1.0};
Point(61) = {0.055945, 0.728262, 0, 1.0};
Point(62) = {0.063587, 0.728986, 0, 1.0};
Point(63) = {0.071235, 0.729711, 0, 1.0};
Point(64) = {0.078834, 0.730431, 0, 1.0};
Point(65) = {0.086330, 0.731141, 0, 1.0};
Point(66) = {0.093666, 0.731836, 0, 1.0};
Point(67) = {0.100780, 0.732509, 0, 1.0};
Point(68) = {0.107614, 0.733156, 0, 1.0};
Point(69) = {0.114108, 0.733769, 0, 1.0};
Point(70) = {0.120203, 0.734343, 0, 1.0};
Point(71) = {0.125842, 0.734874, 0, 1.0};
Point(72) = {0.130966, 0.735355, 0, 1.0};
Point(73) = {0.135524, 0.735782, 0, 1.0};
Point(74) = {0.139467, 0.736151, 0, 1.0};
Point(75) = {0.142760, 0.736459, 0, 1.0};
Point(76) = {0.145427, 0.736709, 0, 1.0};
Point(77) = {0.147484, 0.736902, 0, 1.0};
Point(78) = {0.148846, 0.737029, 0, 1.0};
Point(79) = {0.149336, 0.737075, 0, 1.0};
Point(80) = {-0.149203, -0.738621, 0, 1.0};
Point(81) = {-0.148694, -0.738800, 0, 1.0};
Point(82) = {-0.147279, -0.739291, 0, 1.0};
Point(83) = {-0.145147, -0.739981, 0, 1.0};
Point(84) = {-0.142389, -0.740794, 0, 1.0};
Point(85) = {-0.138992, -0.741693, 0, 1.0};
Point(86) = {-0.134936, -0.742647, 0, 1.0};
Point(87) = {-0.130258, -0.743617, 0, 1.0};
Point(88) = {-0.125011, -0.744572, 0, 1.0};
Point(89) = {-0.119248, -0.745489, 0, 1.0};
Point(90) = {-0.113030, -0.746348, 0, 1.0};
Point(91) = {-0.106416, -0.747138, 0, 1.0};
Point(92) = {-0.099466, -0.747849, 0, 1.0};
Point(93) = {-0.092241, -0.748470, 0, 1.0};
Point(94) = {-0.084801, -0.748995, 0, 1.0};
Point(95) = {-0.077207, -0.749416, 0, 1.0};
Point(96) = {-0.069521, -0.749727, 0, 1.0};
Point(97) = {-0.061794, -0.749922, 0, 1.0};
Point(98) = {-0.054083, -0.750000, 0, 1.0};
Point(99) = {-0.046391, -0.749957, 0, 1.0};
Point(100) = {-0.038717, -0.749790, 0, 1.0};
Point(101) = {-0.031120, -0.749496, 0, 1.0};
Point(102) = {-0.023627, -0.749071, 0, 1.0};
Point(103) = {-0.016282, -0.748510, 0, 1.0};
Point(104) = {-0.009126, -0.747808, 0, 1.0};
Point(105) = {-0.002195, -0.746957, 0, 1.0};
Point(106) = {0.004463, -0.745948, 0, 1.0};
Point(107) = {0.010807, -0.744770, 0, 1.0};
Point(108) = {0.016803, -0.743408, 0, 1.0};
Point(109) = {0.022403, -0.741851, 0, 1.0};
Point(110) = {0.027569, -0.740083, 0, 1.0};
Point(111) = {0.032262, -0.738096, 0, 1.0};
Point(112) = {0.036451, -0.735888, 0, 1.0};
Point(113) = {0.040113, -0.733484, 0, 1.0};
Point(114) = {0.043224, -0.730974, 0, 1.0};
Point(115) = {0.045776, -0.728469, 0, 1.0};
Point(116) = {0.047768, -0.726065, 0, 1.0};
Point(117) = {0.049165, -0.723861, 0, 1.0};
Point(118) = {0.049904, -0.721951, 0, 1.0};
Point(119) = {0.050003, -0.720806, 0, 1.0};
Point(120) = {0.049728, -0.719892, 0, 1.0};
Point(121) = {0.048749, -0.719010, 0, 1.0};
Point(122) = {0.047123, -0.718534, 0, 1.0};
Point(123) = {0.044914, -0.718409, 0, 1.0};
Point(124) = {0.042160, -0.718553, 0, 1.0};
Point(125) = {0.038863, -0.718887, 0, 1.0};
Point(126) = {0.035033, -0.719338, 0, 1.0};
Point(127) = {0.030699, -0.719845, 0, 1.0};
Point(128) = {0.025881, -0.720382, 0, 1.0};
Point(129) = {0.020611, -0.720943, 0, 1.0};
Point(130) = {0.014928, -0.721523, 0, 1.0};
Point(131) = {0.008867, -0.722123, 0, 1.0};
Point(132) = {0.002475, -0.722743, 0, 1.0};
Point(133) = {-0.004215, -0.723381, 0, 1.0};
Point(134) = {-0.011162, -0.724039, 0, 1.0};
Point(135) = {-0.018321, -0.724713, 0, 1.0};
Point(136) = {-0.025655, -0.725404, 0, 1.0};
Point(137) = {-0.033124, -0.726107, 0, 1.0};
Point(138) = {-0.040685, -0.726819, 0, 1.0};
Point(139) = {-0.048311, -0.727540, 0, 1.0};
Point(140) = {-0.055945, -0.728262, 0, 1.0};
Point(141) = {-0.063587, -0.728986, 0, 1.0};
Point(142) = {-0.071235, -0.729711, 0, 1.0};
Point(143) = {-0.078834, -0.730431, 0, 1.0};
Point(144) = {-0.086330, -0.731141, 0, 1.0};
Point(145) = {-0.093666, -0.731836, 0, 1.0};
Point(146) = {-0.100780, -0.732509, 0, 1.0};
Point(147) = {-0.107614, -0.733156, 0, 1.0};
Point(148) = {-0.114108, -0.733769, 0, 1.0};
Point(149) = {-0.120203, -0.734343, 0, 1.0};
Point(150) = {-0.125842, -0.734874, 0, 1.0};
Point(151) = {-0.130966, -0.735355, 0, 1.0};
Point(152) = {-0.135524, -0.735782, 0, 1.0};
Point(153) = {-0.139467, -0.736151, 0, 1.0};
Point(154) = {-0.142760, -0.736459, 0, 1.0};
Point(155) = {-0.145427, -0.736709, 0, 1.0};
Point(156) = {-0.147484, -0.736902, 0, 1.0};
Point(157) = {-0.148846, -0.737029, 0, 1.0};
Point(158) = {-0.149336, -0.737075, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
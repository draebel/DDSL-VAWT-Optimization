SetFactory("OpenCASCADE");

Point(1) = {0.074602, 0.744310, 0, 1.0};
Point(2) = {0.074347, 0.744400, 0, 1.0};
Point(3) = {0.073640, 0.744646, 0, 1.0};
Point(4) = {0.072573, 0.744991, 0, 1.0};
Point(5) = {0.071195, 0.745397, 0, 1.0};
Point(6) = {0.069496, 0.745846, 0, 1.0};
Point(7) = {0.067468, 0.746323, 0, 1.0};
Point(8) = {0.065129, 0.746808, 0, 1.0};
Point(9) = {0.062506, 0.747286, 0, 1.0};
Point(10) = {0.059624, 0.747745, 0, 1.0};
Point(11) = {0.056515, 0.748174, 0, 1.0};
Point(12) = {0.053208, 0.748569, 0, 1.0};
Point(13) = {0.049733, 0.748924, 0, 1.0};
Point(14) = {0.046120, 0.749235, 0, 1.0};
Point(15) = {0.042400, 0.749498, 0, 1.0};
Point(16) = {0.038604, 0.749708, 0, 1.0};
Point(17) = {0.034760, 0.749864, 0, 1.0};
Point(18) = {0.030897, 0.749961, 0, 1.0};
Point(19) = {0.027042, 0.750000, 0, 1.0};
Point(20) = {0.023195, 0.749979, 0, 1.0};
Point(21) = {0.019358, 0.749895, 0, 1.0};
Point(22) = {0.015560, 0.749748, 0, 1.0};
Point(23) = {0.011814, 0.749535, 0, 1.0};
Point(24) = {0.008141, 0.749255, 0, 1.0};
Point(25) = {0.004563, 0.748904, 0, 1.0};
Point(26) = {0.001098, 0.748478, 0, 1.0};
Point(27) = {-0.002231, 0.747974, 0, 1.0};
Point(28) = {-0.005404, 0.747385, 0, 1.0};
Point(29) = {-0.008402, 0.746704, 0, 1.0};
Point(30) = {-0.011201, 0.745925, 0, 1.0};
Point(31) = {-0.013784, 0.745042, 0, 1.0};
Point(32) = {-0.016131, 0.744048, 0, 1.0};
Point(33) = {-0.018225, 0.742944, 0, 1.0};
Point(34) = {-0.020057, 0.741742, 0, 1.0};
Point(35) = {-0.021612, 0.740487, 0, 1.0};
Point(36) = {-0.022888, 0.739234, 0, 1.0};
Point(37) = {-0.023884, 0.738033, 0, 1.0};
Point(38) = {-0.024582, 0.736930, 0, 1.0};
Point(39) = {-0.024952, 0.735976, 0, 1.0};
Point(40) = {-0.025001, 0.735403, 0, 1.0};
Point(41) = {-0.024864, 0.734946, 0, 1.0};
Point(42) = {-0.024375, 0.734505, 0, 1.0};
Point(43) = {-0.023561, 0.734267, 0, 1.0};
Point(44) = {-0.022457, 0.734204, 0, 1.0};
Point(45) = {-0.021080, 0.734277, 0, 1.0};
Point(46) = {-0.019431, 0.734444, 0, 1.0};
Point(47) = {-0.017517, 0.734669, 0, 1.0};
Point(48) = {-0.015349, 0.734923, 0, 1.0};
Point(49) = {-0.012940, 0.735191, 0, 1.0};
Point(50) = {-0.010306, 0.735471, 0, 1.0};
Point(51) = {-0.007464, 0.735761, 0, 1.0};
Point(52) = {-0.004434, 0.736062, 0, 1.0};
Point(53) = {-0.001237, 0.736371, 0, 1.0};
Point(54) = {0.002108, 0.736691, 0, 1.0};
Point(55) = {0.005581, 0.737019, 0, 1.0};
Point(56) = {0.009160, 0.737357, 0, 1.0};
Point(57) = {0.012827, 0.737702, 0, 1.0};
Point(58) = {0.016562, 0.738053, 0, 1.0};
Point(59) = {0.020342, 0.738410, 0, 1.0};
Point(60) = {0.024156, 0.738770, 0, 1.0};
Point(61) = {0.027973, 0.739131, 0, 1.0};
Point(62) = {0.031794, 0.739493, 0, 1.0};
Point(63) = {0.035618, 0.739855, 0, 1.0};
Point(64) = {0.039417, 0.740215, 0, 1.0};
Point(65) = {0.043165, 0.740571, 0, 1.0};
Point(66) = {0.046833, 0.740918, 0, 1.0};
Point(67) = {0.050390, 0.741255, 0, 1.0};
Point(68) = {0.053807, 0.741578, 0, 1.0};
Point(69) = {0.057054, 0.741884, 0, 1.0};
Point(70) = {0.060101, 0.742171, 0, 1.0};
Point(71) = {0.062921, 0.742437, 0, 1.0};
Point(72) = {0.065483, 0.742677, 0, 1.0};
Point(73) = {0.067762, 0.742891, 0, 1.0};
Point(74) = {0.069733, 0.743076, 0, 1.0};
Point(75) = {0.071380, 0.743230, 0, 1.0};
Point(76) = {0.072713, 0.743354, 0, 1.0};
Point(77) = {0.073742, 0.743451, 0, 1.0};
Point(78) = {0.074423, 0.743515, 0, 1.0};
Point(79) = {0.074668, 0.743538, 0, 1.0};
Point(80) = {-0.074602, -0.744310, 0, 1.0};
Point(81) = {-0.074347, -0.744400, 0, 1.0};
Point(82) = {-0.073640, -0.744646, 0, 1.0};
Point(83) = {-0.072573, -0.744991, 0, 1.0};
Point(84) = {-0.071195, -0.745397, 0, 1.0};
Point(85) = {-0.069496, -0.745846, 0, 1.0};
Point(86) = {-0.067468, -0.746323, 0, 1.0};
Point(87) = {-0.065129, -0.746808, 0, 1.0};
Point(88) = {-0.062506, -0.747286, 0, 1.0};
Point(89) = {-0.059624, -0.747745, 0, 1.0};
Point(90) = {-0.056515, -0.748174, 0, 1.0};
Point(91) = {-0.053208, -0.748569, 0, 1.0};
Point(92) = {-0.049733, -0.748924, 0, 1.0};
Point(93) = {-0.046120, -0.749235, 0, 1.0};
Point(94) = {-0.042400, -0.749498, 0, 1.0};
Point(95) = {-0.038604, -0.749708, 0, 1.0};
Point(96) = {-0.034760, -0.749864, 0, 1.0};
Point(97) = {-0.030897, -0.749961, 0, 1.0};
Point(98) = {-0.027042, -0.750000, 0, 1.0};
Point(99) = {-0.023195, -0.749979, 0, 1.0};
Point(100) = {-0.019358, -0.749895, 0, 1.0};
Point(101) = {-0.015560, -0.749748, 0, 1.0};
Point(102) = {-0.011814, -0.749535, 0, 1.0};
Point(103) = {-0.008141, -0.749255, 0, 1.0};
Point(104) = {-0.004563, -0.748904, 0, 1.0};
Point(105) = {-0.001098, -0.748478, 0, 1.0};
Point(106) = {0.002231, -0.747974, 0, 1.0};
Point(107) = {0.005404, -0.747385, 0, 1.0};
Point(108) = {0.008402, -0.746704, 0, 1.0};
Point(109) = {0.011201, -0.745925, 0, 1.0};
Point(110) = {0.013784, -0.745042, 0, 1.0};
Point(111) = {0.016131, -0.744048, 0, 1.0};
Point(112) = {0.018225, -0.742944, 0, 1.0};
Point(113) = {0.020057, -0.741742, 0, 1.0};
Point(114) = {0.021612, -0.740487, 0, 1.0};
Point(115) = {0.022888, -0.739234, 0, 1.0};
Point(116) = {0.023884, -0.738033, 0, 1.0};
Point(117) = {0.024582, -0.736930, 0, 1.0};
Point(118) = {0.024952, -0.735976, 0, 1.0};
Point(119) = {0.025001, -0.735403, 0, 1.0};
Point(120) = {0.024864, -0.734946, 0, 1.0};
Point(121) = {0.024375, -0.734505, 0, 1.0};
Point(122) = {0.023561, -0.734267, 0, 1.0};
Point(123) = {0.022457, -0.734204, 0, 1.0};
Point(124) = {0.021080, -0.734277, 0, 1.0};
Point(125) = {0.019431, -0.734444, 0, 1.0};
Point(126) = {0.017517, -0.734669, 0, 1.0};
Point(127) = {0.015349, -0.734923, 0, 1.0};
Point(128) = {0.012940, -0.735191, 0, 1.0};
Point(129) = {0.010306, -0.735471, 0, 1.0};
Point(130) = {0.007464, -0.735761, 0, 1.0};
Point(131) = {0.004434, -0.736062, 0, 1.0};
Point(132) = {0.001237, -0.736371, 0, 1.0};
Point(133) = {-0.002108, -0.736691, 0, 1.0};
Point(134) = {-0.005581, -0.737019, 0, 1.0};
Point(135) = {-0.009160, -0.737357, 0, 1.0};
Point(136) = {-0.012827, -0.737702, 0, 1.0};
Point(137) = {-0.016562, -0.738053, 0, 1.0};
Point(138) = {-0.020342, -0.738410, 0, 1.0};
Point(139) = {-0.024156, -0.738770, 0, 1.0};
Point(140) = {-0.027973, -0.739131, 0, 1.0};
Point(141) = {-0.031794, -0.739493, 0, 1.0};
Point(142) = {-0.035618, -0.739855, 0, 1.0};
Point(143) = {-0.039417, -0.740215, 0, 1.0};
Point(144) = {-0.043165, -0.740571, 0, 1.0};
Point(145) = {-0.046833, -0.740918, 0, 1.0};
Point(146) = {-0.050390, -0.741255, 0, 1.0};
Point(147) = {-0.053807, -0.741578, 0, 1.0};
Point(148) = {-0.057054, -0.741884, 0, 1.0};
Point(149) = {-0.060101, -0.742171, 0, 1.0};
Point(150) = {-0.062921, -0.742437, 0, 1.0};
Point(151) = {-0.065483, -0.742677, 0, 1.0};
Point(152) = {-0.067762, -0.742891, 0, 1.0};
Point(153) = {-0.069733, -0.743076, 0, 1.0};
Point(154) = {-0.071380, -0.743230, 0, 1.0};
Point(155) = {-0.072713, -0.743354, 0, 1.0};
Point(156) = {-0.073742, -0.743451, 0, 1.0};
Point(157) = {-0.074423, -0.743515, 0, 1.0};
Point(158) = {-0.074668, -0.743538, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
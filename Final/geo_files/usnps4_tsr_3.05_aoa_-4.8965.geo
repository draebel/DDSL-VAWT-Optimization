SetFactory("OpenCASCADE");

Point(1) = {0.112042, 0.741466, 0, 1.0};
Point(2) = {0.111660, 0.741600, 0, 1.0};
Point(3) = {0.110598, 0.741969, 0, 1.0};
Point(4) = {0.108999, 0.742486, 0, 1.0};
Point(5) = {0.106931, 0.743095, 0, 1.0};
Point(6) = {0.104383, 0.743769, 0, 1.0};
Point(7) = {0.101341, 0.744485, 0, 1.0};
Point(8) = {0.097832, 0.745213, 0, 1.0};
Point(9) = {0.093897, 0.745929, 0, 1.0};
Point(10) = {0.089575, 0.746617, 0, 1.0};
Point(11) = {0.084911, 0.747261, 0, 1.0};
Point(12) = {0.079951, 0.747853, 0, 1.0};
Point(13) = {0.074739, 0.748387, 0, 1.0};
Point(14) = {0.069320, 0.748853, 0, 1.0};
Point(15) = {0.063740, 0.749246, 0, 1.0};
Point(16) = {0.058044, 0.749562, 0, 1.0};
Point(17) = {0.052280, 0.749795, 0, 1.0};
Point(18) = {0.046484, 0.749942, 0, 1.0};
Point(19) = {0.040701, 0.750000, 0, 1.0};
Point(20) = {0.034932, 0.749968, 0, 1.0};
Point(21) = {0.029177, 0.749843, 0, 1.0};
Point(22) = {0.023479, 0.749622, 0, 1.0};
Point(23) = {0.017859, 0.749303, 0, 1.0};
Point(24) = {0.012351, 0.748882, 0, 1.0};
Point(25) = {0.006984, 0.748356, 0, 1.0};
Point(26) = {0.001786, 0.747718, 0, 1.0};
Point(27) = {-0.003208, 0.746961, 0, 1.0};
Point(28) = {-0.007966, 0.746077, 0, 1.0};
Point(29) = {-0.012463, 0.745056, 0, 1.0};
Point(30) = {-0.016663, 0.743888, 0, 1.0};
Point(31) = {-0.020537, 0.742563, 0, 1.0};
Point(32) = {-0.024057, 0.741072, 0, 1.0};
Point(33) = {-0.027199, 0.739416, 0, 1.0};
Point(34) = {-0.029946, 0.737613, 0, 1.0};
Point(35) = {-0.032279, 0.735731, 0, 1.0};
Point(36) = {-0.034193, 0.733851, 0, 1.0};
Point(37) = {-0.035687, 0.732049, 0, 1.0};
Point(38) = {-0.036734, 0.730395, 0, 1.0};
Point(39) = {-0.037289, 0.728963, 0, 1.0};
Point(40) = {-0.037363, 0.728104, 0, 1.0};
Point(41) = {-0.037157, 0.727419, 0, 1.0};
Point(42) = {-0.036423, 0.726757, 0, 1.0};
Point(43) = {-0.035203, 0.726401, 0, 1.0};
Point(44) = {-0.033546, 0.726307, 0, 1.0};
Point(45) = {-0.031481, 0.726415, 0, 1.0};
Point(46) = {-0.029008, 0.726665, 0, 1.0};
Point(47) = {-0.026136, 0.727004, 0, 1.0};
Point(48) = {-0.022885, 0.727384, 0, 1.0};
Point(49) = {-0.019272, 0.727787, 0, 1.0};
Point(50) = {-0.015319, 0.728207, 0, 1.0};
Point(51) = {-0.011057, 0.728642, 0, 1.0};
Point(52) = {-0.006511, 0.729092, 0, 1.0};
Point(53) = {-0.001717, 0.729557, 0, 1.0};
Point(54) = {0.003300, 0.730036, 0, 1.0};
Point(55) = {0.008511, 0.730529, 0, 1.0};
Point(56) = {0.013880, 0.731035, 0, 1.0};
Point(57) = {0.019380, 0.731553, 0, 1.0};
Point(58) = {0.024982, 0.732080, 0, 1.0};
Point(59) = {0.030653, 0.732615, 0, 1.0};
Point(60) = {0.036372, 0.733155, 0, 1.0};
Point(61) = {0.042098, 0.733696, 0, 1.0};
Point(62) = {0.047830, 0.734239, 0, 1.0};
Point(63) = {0.053566, 0.734783, 0, 1.0};
Point(64) = {0.059264, 0.735323, 0, 1.0};
Point(65) = {0.064887, 0.735856, 0, 1.0};
Point(66) = {0.070388, 0.736377, 0, 1.0};
Point(67) = {0.075724, 0.736882, 0, 1.0};
Point(68) = {0.080850, 0.737367, 0, 1.0};
Point(69) = {0.085720, 0.737826, 0, 1.0};
Point(70) = {0.090291, 0.738257, 0, 1.0};
Point(71) = {0.094521, 0.738655, 0, 1.0};
Point(72) = {0.098363, 0.739016, 0, 1.0};
Point(73) = {0.101782, 0.739337, 0, 1.0};
Point(74) = {0.104739, 0.739613, 0, 1.0};
Point(75) = {0.107209, 0.739844, 0, 1.0};
Point(76) = {0.109209, 0.740032, 0, 1.0};
Point(77) = {0.110752, 0.740176, 0, 1.0};
Point(78) = {0.111774, 0.740272, 0, 1.0};
Point(79) = {0.112141, 0.740307, 0, 1.0};
Point(80) = {-0.112042, -0.741466, 0, 1.0};
Point(81) = {-0.111660, -0.741600, 0, 1.0};
Point(82) = {-0.110598, -0.741969, 0, 1.0};
Point(83) = {-0.108999, -0.742486, 0, 1.0};
Point(84) = {-0.106931, -0.743095, 0, 1.0};
Point(85) = {-0.104383, -0.743769, 0, 1.0};
Point(86) = {-0.101341, -0.744485, 0, 1.0};
Point(87) = {-0.097832, -0.745213, 0, 1.0};
Point(88) = {-0.093897, -0.745929, 0, 1.0};
Point(89) = {-0.089575, -0.746617, 0, 1.0};
Point(90) = {-0.084911, -0.747261, 0, 1.0};
Point(91) = {-0.079951, -0.747853, 0, 1.0};
Point(92) = {-0.074739, -0.748387, 0, 1.0};
Point(93) = {-0.069320, -0.748853, 0, 1.0};
Point(94) = {-0.063740, -0.749246, 0, 1.0};
Point(95) = {-0.058044, -0.749562, 0, 1.0};
Point(96) = {-0.052280, -0.749795, 0, 1.0};
Point(97) = {-0.046484, -0.749942, 0, 1.0};
Point(98) = {-0.040701, -0.750000, 0, 1.0};
Point(99) = {-0.034932, -0.749968, 0, 1.0};
Point(100) = {-0.029177, -0.749843, 0, 1.0};
Point(101) = {-0.023479, -0.749622, 0, 1.0};
Point(102) = {-0.017859, -0.749303, 0, 1.0};
Point(103) = {-0.012351, -0.748882, 0, 1.0};
Point(104) = {-0.006984, -0.748356, 0, 1.0};
Point(105) = {-0.001786, -0.747718, 0, 1.0};
Point(106) = {0.003208, -0.746961, 0, 1.0};
Point(107) = {0.007966, -0.746077, 0, 1.0};
Point(108) = {0.012463, -0.745056, 0, 1.0};
Point(109) = {0.016663, -0.743888, 0, 1.0};
Point(110) = {0.020537, -0.742563, 0, 1.0};
Point(111) = {0.024057, -0.741072, 0, 1.0};
Point(112) = {0.027199, -0.739416, 0, 1.0};
Point(113) = {0.029946, -0.737613, 0, 1.0};
Point(114) = {0.032279, -0.735731, 0, 1.0};
Point(115) = {0.034193, -0.733851, 0, 1.0};
Point(116) = {0.035687, -0.732049, 0, 1.0};
Point(117) = {0.036734, -0.730395, 0, 1.0};
Point(118) = {0.037289, -0.728963, 0, 1.0};
Point(119) = {0.037363, -0.728104, 0, 1.0};
Point(120) = {0.037157, -0.727419, 0, 1.0};
Point(121) = {0.036423, -0.726757, 0, 1.0};
Point(122) = {0.035203, -0.726401, 0, 1.0};
Point(123) = {0.033546, -0.726307, 0, 1.0};
Point(124) = {0.031481, -0.726415, 0, 1.0};
Point(125) = {0.029008, -0.726665, 0, 1.0};
Point(126) = {0.026136, -0.727004, 0, 1.0};
Point(127) = {0.022885, -0.727384, 0, 1.0};
Point(128) = {0.019272, -0.727787, 0, 1.0};
Point(129) = {0.015319, -0.728207, 0, 1.0};
Point(130) = {0.011057, -0.728642, 0, 1.0};
Point(131) = {0.006511, -0.729092, 0, 1.0};
Point(132) = {0.001717, -0.729557, 0, 1.0};
Point(133) = {-0.003300, -0.730036, 0, 1.0};
Point(134) = {-0.008511, -0.730529, 0, 1.0};
Point(135) = {-0.013880, -0.731035, 0, 1.0};
Point(136) = {-0.019380, -0.731553, 0, 1.0};
Point(137) = {-0.024982, -0.732080, 0, 1.0};
Point(138) = {-0.030653, -0.732615, 0, 1.0};
Point(139) = {-0.036372, -0.733155, 0, 1.0};
Point(140) = {-0.042098, -0.733696, 0, 1.0};
Point(141) = {-0.047830, -0.734239, 0, 1.0};
Point(142) = {-0.053566, -0.734783, 0, 1.0};
Point(143) = {-0.059264, -0.735323, 0, 1.0};
Point(144) = {-0.064887, -0.735856, 0, 1.0};
Point(145) = {-0.070388, -0.736377, 0, 1.0};
Point(146) = {-0.075724, -0.736882, 0, 1.0};
Point(147) = {-0.080850, -0.737367, 0, 1.0};
Point(148) = {-0.085720, -0.737826, 0, 1.0};
Point(149) = {-0.090291, -0.738257, 0, 1.0};
Point(150) = {-0.094521, -0.738655, 0, 1.0};
Point(151) = {-0.098363, -0.739016, 0, 1.0};
Point(152) = {-0.101782, -0.739337, 0, 1.0};
Point(153) = {-0.104739, -0.739613, 0, 1.0};
Point(154) = {-0.107209, -0.739844, 0, 1.0};
Point(155) = {-0.109209, -0.740032, 0, 1.0};
Point(156) = {-0.110752, -0.740176, 0, 1.0};
Point(157) = {-0.111774, -0.740272, 0, 1.0};
Point(158) = {-0.112141, -0.740307, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
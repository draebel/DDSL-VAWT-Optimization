SetFactory("OpenCASCADE");

Point(1) = {0.074981, 0.723811, 0, 1.0};
Point(2) = {0.074618, 0.724090, 0, 1.0};
Point(3) = {0.073608, 0.724766, 0, 1.0};
Point(4) = {0.072077, 0.725591, 0, 1.0};
Point(5) = {0.070089, 0.726523, 0, 1.0};
Point(6) = {0.067632, 0.727572, 0, 1.0};
Point(7) = {0.064690, 0.728820, 0, 1.0};
Point(8) = {0.061286, 0.730119, 0, 1.0};
Point(9) = {0.057457, 0.731479, 0, 1.0};
Point(10) = {0.053241, 0.732882, 0, 1.0};
Point(11) = {0.048682, 0.734335, 0, 1.0};
Point(12) = {0.043824, 0.735848, 0, 1.0};
Point(13) = {0.038711, 0.737409, 0, 1.0};
Point(14) = {0.033387, 0.738991, 0, 1.0};
Point(15) = {0.027896, 0.740565, 0, 1.0};
Point(16) = {0.022283, 0.742104, 0, 1.0};
Point(17) = {0.016592, 0.743590, 0, 1.0};
Point(18) = {0.010861, 0.744998, 0, 1.0};
Point(19) = {0.005133, 0.746300, 0, 1.0};
Point(20) = {-0.000593, 0.747466, 0, 1.0};
Point(21) = {-0.006316, 0.748458, 0, 1.0};
Point(22) = {-0.011995, 0.749234, 0, 1.0};
Point(23) = {-0.017611, 0.749758, 0, 1.0};
Point(24) = {-0.023131, 0.750000, 0, 1.0};
Point(25) = {-0.028527, 0.749939, 0, 1.0};
Point(26) = {-0.033770, 0.749571, 0, 1.0};
Point(27) = {-0.038827, 0.748894, 0, 1.0};
Point(28) = {-0.043667, 0.747925, 0, 1.0};
Point(29) = {-0.048265, 0.746683, 0, 1.0};
Point(30) = {-0.052585, 0.745205, 0, 1.0};
Point(31) = {-0.056598, 0.743525, 0, 1.0};
Point(32) = {-0.060276, 0.741684, 0, 1.0};
Point(33) = {-0.063595, 0.739710, 0, 1.0};
Point(34) = {-0.066534, 0.737634, 0, 1.0};
Point(35) = {-0.069070, 0.735511, 0, 1.0};
Point(36) = {-0.071186, 0.733413, 0, 1.0};
Point(37) = {-0.072876, 0.731388, 0, 1.0};
Point(38) = {-0.074104, 0.729540, 0, 1.0};
Point(39) = {-0.074814, 0.728056, 0, 1.0};
Point(40) = {-0.074980, 0.727251, 0, 1.0};
Point(41) = {-0.074847, 0.726627, 0, 1.0};
Point(42) = {-0.074185, 0.726083, 0, 1.0};
Point(43) = {-0.073003, 0.725930, 0, 1.0};
Point(44) = {-0.071357, 0.726067, 0, 1.0};
Point(45) = {-0.069283, 0.726341, 0, 1.0};
Point(46) = {-0.066789, 0.726654, 0, 1.0};
Point(47) = {-0.063890, 0.726992, 0, 1.0};
Point(48) = {-0.060609, 0.727354, 0, 1.0};
Point(49) = {-0.056965, 0.727740, 0, 1.0};
Point(50) = {-0.052981, 0.728153, 0, 1.0};
Point(51) = {-0.048686, 0.728590, 0, 1.0};
Point(52) = {-0.044106, 0.729042, 0, 1.0};
Point(53) = {-0.039278, 0.729499, 0, 1.0};
Point(54) = {-0.034226, 0.729951, 0, 1.0};
Point(55) = {-0.028981, 0.730394, 0, 1.0};
Point(56) = {-0.023577, 0.730817, 0, 1.0};
Point(57) = {-0.018042, 0.731215, 0, 1.0};
Point(58) = {-0.012405, 0.731578, 0, 1.0};
Point(59) = {-0.006701, 0.731898, 0, 1.0};
Point(60) = {-0.000948, 0.732164, 0, 1.0};
Point(61) = {0.004809, 0.732366, 0, 1.0};
Point(62) = {0.010571, 0.732498, 0, 1.0};
Point(63) = {0.016335, 0.732550, 0, 1.0};
Point(64) = {0.022060, 0.732517, 0, 1.0};
Point(65) = {0.027706, 0.732394, 0, 1.0};
Point(66) = {0.033228, 0.732174, 0, 1.0};
Point(67) = {0.038582, 0.731856, 0, 1.0};
Point(68) = {0.043722, 0.731438, 0, 1.0};
Point(69) = {0.048602, 0.730913, 0, 1.0};
Point(70) = {0.053180, 0.730273, 0, 1.0};
Point(71) = {0.057412, 0.729513, 0, 1.0};
Point(72) = {0.061252, 0.728637, 0, 1.0};
Point(73) = {0.064664, 0.727689, 0, 1.0};
Point(74) = {0.067613, 0.726746, 0, 1.0};
Point(75) = {0.070074, 0.725847, 0, 1.0};
Point(76) = {0.072063, 0.725000, 0, 1.0};
Point(77) = {0.073597, 0.724308, 0, 1.0};
Point(78) = {0.074614, 0.723908, 0, 1.0};
Point(79) = {0.074980, 0.723793, 0, 1.0};
Point(80) = {-0.074981, -0.723811, 0, 1.0};
Point(81) = {-0.074618, -0.724090, 0, 1.0};
Point(82) = {-0.073608, -0.724766, 0, 1.0};
Point(83) = {-0.072077, -0.725591, 0, 1.0};
Point(84) = {-0.070089, -0.726523, 0, 1.0};
Point(85) = {-0.067632, -0.727572, 0, 1.0};
Point(86) = {-0.064690, -0.728820, 0, 1.0};
Point(87) = {-0.061286, -0.730119, 0, 1.0};
Point(88) = {-0.057457, -0.731479, 0, 1.0};
Point(89) = {-0.053241, -0.732882, 0, 1.0};
Point(90) = {-0.048682, -0.734335, 0, 1.0};
Point(91) = {-0.043824, -0.735848, 0, 1.0};
Point(92) = {-0.038711, -0.737409, 0, 1.0};
Point(93) = {-0.033387, -0.738991, 0, 1.0};
Point(94) = {-0.027896, -0.740565, 0, 1.0};
Point(95) = {-0.022283, -0.742104, 0, 1.0};
Point(96) = {-0.016592, -0.743590, 0, 1.0};
Point(97) = {-0.010861, -0.744998, 0, 1.0};
Point(98) = {-0.005133, -0.746300, 0, 1.0};
Point(99) = {0.000593, -0.747466, 0, 1.0};
Point(100) = {0.006316, -0.748458, 0, 1.0};
Point(101) = {0.011995, -0.749234, 0, 1.0};
Point(102) = {0.017611, -0.749758, 0, 1.0};
Point(103) = {0.023131, -0.750000, 0, 1.0};
Point(104) = {0.028527, -0.749939, 0, 1.0};
Point(105) = {0.033770, -0.749571, 0, 1.0};
Point(106) = {0.038827, -0.748894, 0, 1.0};
Point(107) = {0.043667, -0.747925, 0, 1.0};
Point(108) = {0.048265, -0.746683, 0, 1.0};
Point(109) = {0.052585, -0.745205, 0, 1.0};
Point(110) = {0.056598, -0.743525, 0, 1.0};
Point(111) = {0.060276, -0.741684, 0, 1.0};
Point(112) = {0.063595, -0.739710, 0, 1.0};
Point(113) = {0.066534, -0.737634, 0, 1.0};
Point(114) = {0.069070, -0.735511, 0, 1.0};
Point(115) = {0.071186, -0.733413, 0, 1.0};
Point(116) = {0.072876, -0.731388, 0, 1.0};
Point(117) = {0.074104, -0.729540, 0, 1.0};
Point(118) = {0.074814, -0.728056, 0, 1.0};
Point(119) = {0.074980, -0.727251, 0, 1.0};
Point(120) = {0.074847, -0.726627, 0, 1.0};
Point(121) = {0.074185, -0.726083, 0, 1.0};
Point(122) = {0.073003, -0.725930, 0, 1.0};
Point(123) = {0.071357, -0.726067, 0, 1.0};
Point(124) = {0.069283, -0.726341, 0, 1.0};
Point(125) = {0.066789, -0.726654, 0, 1.0};
Point(126) = {0.063890, -0.726992, 0, 1.0};
Point(127) = {0.060609, -0.727354, 0, 1.0};
Point(128) = {0.056965, -0.727740, 0, 1.0};
Point(129) = {0.052981, -0.728153, 0, 1.0};
Point(130) = {0.048686, -0.728590, 0, 1.0};
Point(131) = {0.044106, -0.729042, 0, 1.0};
Point(132) = {0.039278, -0.729499, 0, 1.0};
Point(133) = {0.034226, -0.729951, 0, 1.0};
Point(134) = {0.028981, -0.730394, 0, 1.0};
Point(135) = {0.023577, -0.730817, 0, 1.0};
Point(136) = {0.018042, -0.731215, 0, 1.0};
Point(137) = {0.012405, -0.731578, 0, 1.0};
Point(138) = {0.006701, -0.731898, 0, 1.0};
Point(139) = {0.000948, -0.732164, 0, 1.0};
Point(140) = {-0.004809, -0.732366, 0, 1.0};
Point(141) = {-0.010571, -0.732498, 0, 1.0};
Point(142) = {-0.016335, -0.732550, 0, 1.0};
Point(143) = {-0.022060, -0.732517, 0, 1.0};
Point(144) = {-0.027706, -0.732394, 0, 1.0};
Point(145) = {-0.033228, -0.732174, 0, 1.0};
Point(146) = {-0.038582, -0.731856, 0, 1.0};
Point(147) = {-0.043722, -0.731438, 0, 1.0};
Point(148) = {-0.048602, -0.730913, 0, 1.0};
Point(149) = {-0.053180, -0.730273, 0, 1.0};
Point(150) = {-0.057412, -0.729513, 0, 1.0};
Point(151) = {-0.061252, -0.728637, 0, 1.0};
Point(152) = {-0.064664, -0.727689, 0, 1.0};
Point(153) = {-0.067613, -0.726746, 0, 1.0};
Point(154) = {-0.070074, -0.725847, 0, 1.0};
Point(155) = {-0.072063, -0.725000, 0, 1.0};
Point(156) = {-0.073597, -0.724308, 0, 1.0};
Point(157) = {-0.074614, -0.723908, 0, 1.0};
Point(158) = {-0.074980, -0.723793, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
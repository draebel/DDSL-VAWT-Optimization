SetFactory("OpenCASCADE");

Point(1) = {0.074973, 0.732541, 0, 1.0};
Point(2) = {0.074731, 0.732726, 0, 1.0};
Point(3) = {0.074058, 0.733177, 0, 1.0};
Point(4) = {0.073037, 0.733727, 0, 1.0};
Point(5) = {0.071712, 0.734349, 0, 1.0};
Point(6) = {0.070074, 0.735048, 0, 1.0};
Point(7) = {0.068113, 0.735880, 0, 1.0};
Point(8) = {0.065843, 0.736746, 0, 1.0};
Point(9) = {0.063291, 0.737652, 0, 1.0};
Point(10) = {0.060480, 0.738588, 0, 1.0};
Point(11) = {0.057440, 0.739557, 0, 1.0};
Point(12) = {0.054202, 0.740565, 0, 1.0};
Point(13) = {0.050793, 0.741606, 0, 1.0};
Point(14) = {0.047244, 0.742661, 0, 1.0};
Point(15) = {0.043583, 0.743710, 0, 1.0};
Point(16) = {0.039841, 0.744736, 0, 1.0};
Point(17) = {0.036047, 0.745727, 0, 1.0};
Point(18) = {0.032227, 0.746666, 0, 1.0};
Point(19) = {0.028408, 0.747534, 0, 1.0};
Point(20) = {0.024591, 0.748310, 0, 1.0};
Point(21) = {0.020775, 0.748972, 0, 1.0};
Point(22) = {0.016989, 0.749489, 0, 1.0};
Point(23) = {0.013245, 0.749838, 0, 1.0};
Point(24) = {0.009565, 0.750000, 0, 1.0};
Point(25) = {0.005968, 0.749960, 0, 1.0};
Point(26) = {0.002473, 0.749714, 0, 1.0};
Point(27) = {-0.000899, 0.749263, 0, 1.0};
Point(28) = {-0.004126, 0.748617, 0, 1.0};
Point(29) = {-0.007191, 0.747789, 0, 1.0};
Point(30) = {-0.010070, 0.746803, 0, 1.0};
Point(31) = {-0.012746, 0.745683, 0, 1.0};
Point(32) = {-0.015198, 0.744456, 0, 1.0};
Point(33) = {-0.017410, 0.743140, 0, 1.0};
Point(34) = {-0.019370, 0.741756, 0, 1.0};
Point(35) = {-0.021060, 0.740341, 0, 1.0};
Point(36) = {-0.022471, 0.738942, 0, 1.0};
Point(37) = {-0.023598, 0.737592, 0, 1.0};
Point(38) = {-0.024417, 0.736360, 0, 1.0};
Point(39) = {-0.024890, 0.735371, 0, 1.0};
Point(40) = {-0.025000, 0.734834, 0, 1.0};
Point(41) = {-0.024912, 0.734418, 0, 1.0};
Point(42) = {-0.024470, 0.734055, 0, 1.0};
Point(43) = {-0.023683, 0.733953, 0, 1.0};
Point(44) = {-0.022585, 0.734045, 0, 1.0};
Point(45) = {-0.021203, 0.734228, 0, 1.0};
Point(46) = {-0.019540, 0.734436, 0, 1.0};
Point(47) = {-0.017608, 0.734661, 0, 1.0};
Point(48) = {-0.015420, 0.734902, 0, 1.0};
Point(49) = {-0.012991, 0.735160, 0, 1.0};
Point(50) = {-0.010335, 0.735435, 0, 1.0};
Point(51) = {-0.007471, 0.735727, 0, 1.0};
Point(52) = {-0.004418, 0.736028, 0, 1.0};
Point(53) = {-0.001199, 0.736332, 0, 1.0};
Point(54) = {0.002169, 0.736634, 0, 1.0};
Point(55) = {0.005665, 0.736929, 0, 1.0};
Point(56) = {0.009268, 0.737211, 0, 1.0};
Point(57) = {0.012958, 0.737477, 0, 1.0};
Point(58) = {0.016716, 0.737719, 0, 1.0};
Point(59) = {0.020519, 0.737932, 0, 1.0};
Point(60) = {0.024354, 0.738109, 0, 1.0};
Point(61) = {0.028192, 0.738244, 0, 1.0};
Point(62) = {0.032033, 0.738332, 0, 1.0};
Point(63) = {0.035876, 0.738367, 0, 1.0};
Point(64) = {0.039693, 0.738345, 0, 1.0};
Point(65) = {0.043457, 0.738262, 0, 1.0};
Point(66) = {0.047138, 0.738116, 0, 1.0};
Point(67) = {0.050707, 0.737904, 0, 1.0};
Point(68) = {0.054134, 0.737625, 0, 1.0};
Point(69) = {0.057387, 0.737276, 0, 1.0};
Point(70) = {0.060439, 0.736849, 0, 1.0};
Point(71) = {0.063260, 0.736342, 0, 1.0};
Point(72) = {0.065820, 0.735758, 0, 1.0};
Point(73) = {0.068095, 0.735126, 0, 1.0};
Point(74) = {0.070061, 0.734497, 0, 1.0};
Point(75) = {0.071702, 0.733898, 0, 1.0};
Point(76) = {0.073028, 0.733333, 0, 1.0};
Point(77) = {0.074051, 0.732872, 0, 1.0};
Point(78) = {0.074729, 0.732605, 0, 1.0};
Point(79) = {0.074973, 0.732529, 0, 1.0};
Point(80) = {-0.074973, -0.732541, 0, 1.0};
Point(81) = {-0.074731, -0.732726, 0, 1.0};
Point(82) = {-0.074058, -0.733177, 0, 1.0};
Point(83) = {-0.073037, -0.733727, 0, 1.0};
Point(84) = {-0.071712, -0.734349, 0, 1.0};
Point(85) = {-0.070074, -0.735048, 0, 1.0};
Point(86) = {-0.068113, -0.735880, 0, 1.0};
Point(87) = {-0.065843, -0.736746, 0, 1.0};
Point(88) = {-0.063291, -0.737652, 0, 1.0};
Point(89) = {-0.060480, -0.738588, 0, 1.0};
Point(90) = {-0.057440, -0.739557, 0, 1.0};
Point(91) = {-0.054202, -0.740565, 0, 1.0};
Point(92) = {-0.050793, -0.741606, 0, 1.0};
Point(93) = {-0.047244, -0.742661, 0, 1.0};
Point(94) = {-0.043583, -0.743710, 0, 1.0};
Point(95) = {-0.039841, -0.744736, 0, 1.0};
Point(96) = {-0.036047, -0.745727, 0, 1.0};
Point(97) = {-0.032227, -0.746666, 0, 1.0};
Point(98) = {-0.028408, -0.747534, 0, 1.0};
Point(99) = {-0.024591, -0.748310, 0, 1.0};
Point(100) = {-0.020775, -0.748972, 0, 1.0};
Point(101) = {-0.016989, -0.749489, 0, 1.0};
Point(102) = {-0.013245, -0.749838, 0, 1.0};
Point(103) = {-0.009565, -0.750000, 0, 1.0};
Point(104) = {-0.005968, -0.749960, 0, 1.0};
Point(105) = {-0.002473, -0.749714, 0, 1.0};
Point(106) = {0.000899, -0.749263, 0, 1.0};
Point(107) = {0.004126, -0.748617, 0, 1.0};
Point(108) = {0.007191, -0.747789, 0, 1.0};
Point(109) = {0.010070, -0.746803, 0, 1.0};
Point(110) = {0.012746, -0.745683, 0, 1.0};
Point(111) = {0.015198, -0.744456, 0, 1.0};
Point(112) = {0.017410, -0.743140, 0, 1.0};
Point(113) = {0.019370, -0.741756, 0, 1.0};
Point(114) = {0.021060, -0.740341, 0, 1.0};
Point(115) = {0.022471, -0.738942, 0, 1.0};
Point(116) = {0.023598, -0.737592, 0, 1.0};
Point(117) = {0.024417, -0.736360, 0, 1.0};
Point(118) = {0.024890, -0.735371, 0, 1.0};
Point(119) = {0.025000, -0.734834, 0, 1.0};
Point(120) = {0.024912, -0.734418, 0, 1.0};
Point(121) = {0.024470, -0.734055, 0, 1.0};
Point(122) = {0.023683, -0.733953, 0, 1.0};
Point(123) = {0.022585, -0.734045, 0, 1.0};
Point(124) = {0.021203, -0.734228, 0, 1.0};
Point(125) = {0.019540, -0.734436, 0, 1.0};
Point(126) = {0.017608, -0.734661, 0, 1.0};
Point(127) = {0.015420, -0.734902, 0, 1.0};
Point(128) = {0.012991, -0.735160, 0, 1.0};
Point(129) = {0.010335, -0.735435, 0, 1.0};
Point(130) = {0.007471, -0.735727, 0, 1.0};
Point(131) = {0.004418, -0.736028, 0, 1.0};
Point(132) = {0.001199, -0.736332, 0, 1.0};
Point(133) = {-0.002169, -0.736634, 0, 1.0};
Point(134) = {-0.005665, -0.736929, 0, 1.0};
Point(135) = {-0.009268, -0.737211, 0, 1.0};
Point(136) = {-0.012958, -0.737477, 0, 1.0};
Point(137) = {-0.016716, -0.737719, 0, 1.0};
Point(138) = {-0.020519, -0.737932, 0, 1.0};
Point(139) = {-0.024354, -0.738109, 0, 1.0};
Point(140) = {-0.028192, -0.738244, 0, 1.0};
Point(141) = {-0.032033, -0.738332, 0, 1.0};
Point(142) = {-0.035876, -0.738367, 0, 1.0};
Point(143) = {-0.039693, -0.738345, 0, 1.0};
Point(144) = {-0.043457, -0.738262, 0, 1.0};
Point(145) = {-0.047138, -0.738116, 0, 1.0};
Point(146) = {-0.050707, -0.737904, 0, 1.0};
Point(147) = {-0.054134, -0.737625, 0, 1.0};
Point(148) = {-0.057387, -0.737276, 0, 1.0};
Point(149) = {-0.060439, -0.736849, 0, 1.0};
Point(150) = {-0.063260, -0.736342, 0, 1.0};
Point(151) = {-0.065820, -0.735758, 0, 1.0};
Point(152) = {-0.068095, -0.735126, 0, 1.0};
Point(153) = {-0.070061, -0.734497, 0, 1.0};
Point(154) = {-0.071702, -0.733898, 0, 1.0};
Point(155) = {-0.073028, -0.733333, 0, 1.0};
Point(156) = {-0.074051, -0.732872, 0, 1.0};
Point(157) = {-0.074729, -0.732605, 0, 1.0};
Point(158) = {-0.074973, -0.732529, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
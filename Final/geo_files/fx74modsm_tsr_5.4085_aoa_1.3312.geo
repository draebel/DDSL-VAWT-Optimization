SetFactory("OpenCASCADE");

Point(1) = {0.149946, 0.715081, 0, 1.0};
Point(2) = {0.149463, 0.715453, 0, 1.0};
Point(3) = {0.148116, 0.716354, 0, 1.0};
Point(4) = {0.146075, 0.717454, 0, 1.0};
Point(5) = {0.143425, 0.718698, 0, 1.0};
Point(6) = {0.140148, 0.720096, 0, 1.0};
Point(7) = {0.136226, 0.721760, 0, 1.0};
Point(8) = {0.131687, 0.723492, 0, 1.0};
Point(9) = {0.126582, 0.725305, 0, 1.0};
Point(10) = {0.120960, 0.727176, 0, 1.0};
Point(11) = {0.114881, 0.729114, 0, 1.0};
Point(12) = {0.108404, 0.731131, 0, 1.0};
Point(13) = {0.101587, 0.733212, 0, 1.0};
Point(14) = {0.094488, 0.735321, 0, 1.0};
Point(15) = {0.087166, 0.737420, 0, 1.0};
Point(16) = {0.079682, 0.739472, 0, 1.0};
Point(17) = {0.072094, 0.741453, 0, 1.0};
Point(18) = {0.064454, 0.743331, 0, 1.0};
Point(19) = {0.056816, 0.745067, 0, 1.0};
Point(20) = {0.049182, 0.746621, 0, 1.0};
Point(21) = {0.041551, 0.747945, 0, 1.0};
Point(22) = {0.033979, 0.748979, 0, 1.0};
Point(23) = {0.026491, 0.749677, 0, 1.0};
Point(24) = {0.019130, 0.750000, 0, 1.0};
Point(25) = {0.011937, 0.749919, 0, 1.0};
Point(26) = {0.004945, 0.749427, 0, 1.0};
Point(27) = {-0.001798, 0.748526, 0, 1.0};
Point(28) = {-0.008251, 0.747233, 0, 1.0};
Point(29) = {-0.014381, 0.745577, 0, 1.0};
Point(30) = {-0.020141, 0.743607, 0, 1.0};
Point(31) = {-0.025492, 0.741366, 0, 1.0};
Point(32) = {-0.030397, 0.738912, 0, 1.0};
Point(33) = {-0.034821, 0.736280, 0, 1.0};
Point(34) = {-0.038740, 0.733512, 0, 1.0};
Point(35) = {-0.042121, 0.730682, 0, 1.0};
Point(36) = {-0.044943, 0.727885, 0, 1.0};
Point(37) = {-0.047196, 0.725184, 0, 1.0};
Point(38) = {-0.048834, 0.722720, 0, 1.0};
Point(39) = {-0.049780, 0.720741, 0, 1.0};
Point(40) = {-0.050001, 0.719668, 0, 1.0};
Point(41) = {-0.049824, 0.718836, 0, 1.0};
Point(42) = {-0.048941, 0.718111, 0, 1.0};
Point(43) = {-0.047365, 0.717906, 0, 1.0};
Point(44) = {-0.045170, 0.718089, 0, 1.0};
Point(45) = {-0.042405, 0.718455, 0, 1.0};
Point(46) = {-0.039081, 0.718872, 0, 1.0};
Point(47) = {-0.035215, 0.719322, 0, 1.0};
Point(48) = {-0.030841, 0.719805, 0, 1.0};
Point(49) = {-0.025981, 0.720320, 0, 1.0};
Point(50) = {-0.020669, 0.720871, 0, 1.0};
Point(51) = {-0.014942, 0.721454, 0, 1.0};
Point(52) = {-0.008836, 0.722056, 0, 1.0};
Point(53) = {-0.002399, 0.722665, 0, 1.0};
Point(54) = {0.004337, 0.723268, 0, 1.0};
Point(55) = {0.011331, 0.723858, 0, 1.0};
Point(56) = {0.018536, 0.724423, 0, 1.0};
Point(57) = {0.025916, 0.724954, 0, 1.0};
Point(58) = {0.033432, 0.725437, 0, 1.0};
Point(59) = {0.041038, 0.725865, 0, 1.0};
Point(60) = {0.048708, 0.726218, 0, 1.0};
Point(61) = {0.056384, 0.726488, 0, 1.0};
Point(62) = {0.064066, 0.726664, 0, 1.0};
Point(63) = {0.071752, 0.726733, 0, 1.0};
Point(64) = {0.079385, 0.726690, 0, 1.0};
Point(65) = {0.086913, 0.726525, 0, 1.0};
Point(66) = {0.094276, 0.726232, 0, 1.0};
Point(67) = {0.101415, 0.725808, 0, 1.0};
Point(68) = {0.108267, 0.725250, 0, 1.0};
Point(69) = {0.114775, 0.724551, 0, 1.0};
Point(70) = {0.120879, 0.723697, 0, 1.0};
Point(71) = {0.126521, 0.722684, 0, 1.0};
Point(72) = {0.131641, 0.721516, 0, 1.0};
Point(73) = {0.136191, 0.720252, 0, 1.0};
Point(74) = {0.140123, 0.718995, 0, 1.0};
Point(75) = {0.143404, 0.717796, 0, 1.0};
Point(76) = {0.146056, 0.716666, 0, 1.0};
Point(77) = {0.148101, 0.715744, 0, 1.0};
Point(78) = {0.149457, 0.715211, 0, 1.0};
Point(79) = {0.149946, 0.715057, 0, 1.0};
Point(80) = {-0.149946, -0.715081, 0, 1.0};
Point(81) = {-0.149463, -0.715453, 0, 1.0};
Point(82) = {-0.148116, -0.716354, 0, 1.0};
Point(83) = {-0.146075, -0.717454, 0, 1.0};
Point(84) = {-0.143425, -0.718698, 0, 1.0};
Point(85) = {-0.140148, -0.720096, 0, 1.0};
Point(86) = {-0.136226, -0.721760, 0, 1.0};
Point(87) = {-0.131687, -0.723492, 0, 1.0};
Point(88) = {-0.126582, -0.725305, 0, 1.0};
Point(89) = {-0.120960, -0.727176, 0, 1.0};
Point(90) = {-0.114881, -0.729114, 0, 1.0};
Point(91) = {-0.108404, -0.731131, 0, 1.0};
Point(92) = {-0.101587, -0.733212, 0, 1.0};
Point(93) = {-0.094488, -0.735321, 0, 1.0};
Point(94) = {-0.087166, -0.737420, 0, 1.0};
Point(95) = {-0.079682, -0.739472, 0, 1.0};
Point(96) = {-0.072094, -0.741453, 0, 1.0};
Point(97) = {-0.064454, -0.743331, 0, 1.0};
Point(98) = {-0.056816, -0.745067, 0, 1.0};
Point(99) = {-0.049182, -0.746621, 0, 1.0};
Point(100) = {-0.041551, -0.747945, 0, 1.0};
Point(101) = {-0.033979, -0.748979, 0, 1.0};
Point(102) = {-0.026491, -0.749677, 0, 1.0};
Point(103) = {-0.019130, -0.750000, 0, 1.0};
Point(104) = {-0.011937, -0.749919, 0, 1.0};
Point(105) = {-0.004945, -0.749427, 0, 1.0};
Point(106) = {0.001798, -0.748526, 0, 1.0};
Point(107) = {0.008251, -0.747233, 0, 1.0};
Point(108) = {0.014381, -0.745577, 0, 1.0};
Point(109) = {0.020141, -0.743607, 0, 1.0};
Point(110) = {0.025492, -0.741366, 0, 1.0};
Point(111) = {0.030397, -0.738912, 0, 1.0};
Point(112) = {0.034821, -0.736280, 0, 1.0};
Point(113) = {0.038740, -0.733512, 0, 1.0};
Point(114) = {0.042121, -0.730682, 0, 1.0};
Point(115) = {0.044943, -0.727885, 0, 1.0};
Point(116) = {0.047196, -0.725184, 0, 1.0};
Point(117) = {0.048834, -0.722720, 0, 1.0};
Point(118) = {0.049780, -0.720741, 0, 1.0};
Point(119) = {0.050001, -0.719668, 0, 1.0};
Point(120) = {0.049824, -0.718836, 0, 1.0};
Point(121) = {0.048941, -0.718111, 0, 1.0};
Point(122) = {0.047365, -0.717906, 0, 1.0};
Point(123) = {0.045170, -0.718089, 0, 1.0};
Point(124) = {0.042405, -0.718455, 0, 1.0};
Point(125) = {0.039081, -0.718872, 0, 1.0};
Point(126) = {0.035215, -0.719322, 0, 1.0};
Point(127) = {0.030841, -0.719805, 0, 1.0};
Point(128) = {0.025981, -0.720320, 0, 1.0};
Point(129) = {0.020669, -0.720871, 0, 1.0};
Point(130) = {0.014942, -0.721454, 0, 1.0};
Point(131) = {0.008836, -0.722056, 0, 1.0};
Point(132) = {0.002399, -0.722665, 0, 1.0};
Point(133) = {-0.004337, -0.723268, 0, 1.0};
Point(134) = {-0.011331, -0.723858, 0, 1.0};
Point(135) = {-0.018536, -0.724423, 0, 1.0};
Point(136) = {-0.025916, -0.724954, 0, 1.0};
Point(137) = {-0.033432, -0.725437, 0, 1.0};
Point(138) = {-0.041038, -0.725865, 0, 1.0};
Point(139) = {-0.048708, -0.726218, 0, 1.0};
Point(140) = {-0.056384, -0.726488, 0, 1.0};
Point(141) = {-0.064066, -0.726664, 0, 1.0};
Point(142) = {-0.071752, -0.726733, 0, 1.0};
Point(143) = {-0.079385, -0.726690, 0, 1.0};
Point(144) = {-0.086913, -0.726525, 0, 1.0};
Point(145) = {-0.094276, -0.726232, 0, 1.0};
Point(146) = {-0.101415, -0.725808, 0, 1.0};
Point(147) = {-0.108267, -0.725250, 0, 1.0};
Point(148) = {-0.114775, -0.724551, 0, 1.0};
Point(149) = {-0.120879, -0.723697, 0, 1.0};
Point(150) = {-0.126521, -0.722684, 0, 1.0};
Point(151) = {-0.131641, -0.721516, 0, 1.0};
Point(152) = {-0.136191, -0.720252, 0, 1.0};
Point(153) = {-0.140123, -0.718995, 0, 1.0};
Point(154) = {-0.143404, -0.717796, 0, 1.0};
Point(155) = {-0.146056, -0.716666, 0, 1.0};
Point(156) = {-0.148101, -0.715744, 0, 1.0};
Point(157) = {-0.149457, -0.715211, 0, 1.0};
Point(158) = {-0.149946, -0.715057, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
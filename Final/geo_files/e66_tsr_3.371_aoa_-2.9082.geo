SetFactory("OpenCASCADE");

Point(1) = {0.112280, 0.741119, 0, 1.0};
Point(2) = {0.111778, 0.741247, 0, 1.0};
Point(3) = {0.110366, 0.741639, 0, 1.0};
Point(4) = {0.108198, 0.742253, 0, 1.0};
Point(5) = {0.105340, 0.742968, 0, 1.0};
Point(6) = {0.101783, 0.743727, 0, 1.0};
Point(7) = {0.097548, 0.744533, 0, 1.0};
Point(8) = {0.092708, 0.745376, 0, 1.0};
Point(9) = {0.087328, 0.746229, 0, 1.0};
Point(10) = {0.081479, 0.747057, 0, 1.0};
Point(11) = {0.075225, 0.747829, 0, 1.0};
Point(12) = {0.068626, 0.748516, 0, 1.0};
Point(13) = {0.061751, 0.749095, 0, 1.0};
Point(14) = {0.054664, 0.749546, 0, 1.0};
Point(15) = {0.047436, 0.749853, 0, 1.0};
Point(16) = {0.040133, 0.750000, 0, 1.0};
Point(17) = {0.032824, 0.749979, 0, 1.0};
Point(18) = {0.025573, 0.749786, 0, 1.0};
Point(19) = {0.018452, 0.749418, 0, 1.0};
Point(20) = {0.011524, 0.748877, 0, 1.0};
Point(21) = {0.004850, 0.748172, 0, 1.0};
Point(22) = {-0.001504, 0.747310, 0, 1.0};
Point(23) = {-0.007485, 0.746303, 0, 1.0};
Point(24) = {-0.013034, 0.745168, 0, 1.0};
Point(25) = {-0.018105, 0.743921, 0, 1.0};
Point(26) = {-0.022652, 0.742582, 0, 1.0};
Point(27) = {-0.026638, 0.741175, 0, 1.0};
Point(28) = {-0.030030, 0.739725, 0, 1.0};
Point(29) = {-0.032807, 0.738262, 0, 1.0};
Point(30) = {-0.034950, 0.736823, 0, 1.0};
Point(31) = {-0.036454, 0.735454, 0, 1.0};
Point(32) = {-0.037306, 0.734224, 0, 1.0};
Point(33) = {-0.037452, 0.733274, 0, 1.0};
Point(34) = {-0.036759, 0.732536, 0, 1.0};
Point(35) = {-0.035214, 0.731881, 0, 1.0};
Point(36) = {-0.032916, 0.731367, 0, 1.0};
Point(37) = {-0.029880, 0.731026, 0, 1.0};
Point(38) = {-0.026123, 0.730872, 0, 1.0};
Point(39) = {-0.021665, 0.730903, 0, 1.0};
Point(40) = {-0.016537, 0.731114, 0, 1.0};
Point(41) = {-0.010778, 0.731494, 0, 1.0};
Point(42) = {-0.004443, 0.732021, 0, 1.0};
Point(43) = {0.002411, 0.732677, 0, 1.0};
Point(44) = {0.009712, 0.733437, 0, 1.0};
Point(45) = {0.017383, 0.734277, 0, 1.0};
Point(46) = {0.025338, 0.735169, 0, 1.0};
Point(47) = {0.033489, 0.736089, 0, 1.0};
Point(48) = {0.041740, 0.737010, 0, 1.0};
Point(49) = {0.049994, 0.737905, 0, 1.0};
Point(50) = {0.058148, 0.738752, 0, 1.0};
Point(51) = {0.066101, 0.739524, 0, 1.0};
Point(52) = {0.073749, 0.740201, 0, 1.0};
Point(53) = {0.080986, 0.740765, 0, 1.0};
Point(54) = {0.087713, 0.741200, 0, 1.0};
Point(55) = {0.093826, 0.741497, 0, 1.0};
Point(56) = {0.099228, 0.741653, 0, 1.0};
Point(57) = {0.103821, 0.741662, 0, 1.0};
Point(58) = {0.107497, 0.741541, 0, 1.0};
Point(59) = {0.110155, 0.741352, 0, 1.0};
Point(60) = {0.111750, 0.741185, 0, 1.0};
Point(61) = {-0.112280, -0.741119, 0, 1.0};
Point(62) = {-0.111778, -0.741247, 0, 1.0};
Point(63) = {-0.110366, -0.741639, 0, 1.0};
Point(64) = {-0.108198, -0.742253, 0, 1.0};
Point(65) = {-0.105340, -0.742968, 0, 1.0};
Point(66) = {-0.101783, -0.743727, 0, 1.0};
Point(67) = {-0.097548, -0.744533, 0, 1.0};
Point(68) = {-0.092708, -0.745376, 0, 1.0};
Point(69) = {-0.087328, -0.746229, 0, 1.0};
Point(70) = {-0.081479, -0.747057, 0, 1.0};
Point(71) = {-0.075225, -0.747829, 0, 1.0};
Point(72) = {-0.068626, -0.748516, 0, 1.0};
Point(73) = {-0.061751, -0.749095, 0, 1.0};
Point(74) = {-0.054664, -0.749546, 0, 1.0};
Point(75) = {-0.047436, -0.749853, 0, 1.0};
Point(76) = {-0.040133, -0.750000, 0, 1.0};
Point(77) = {-0.032824, -0.749979, 0, 1.0};
Point(78) = {-0.025573, -0.749786, 0, 1.0};
Point(79) = {-0.018452, -0.749418, 0, 1.0};
Point(80) = {-0.011524, -0.748877, 0, 1.0};
Point(81) = {-0.004850, -0.748172, 0, 1.0};
Point(82) = {0.001504, -0.747310, 0, 1.0};
Point(83) = {0.007485, -0.746303, 0, 1.0};
Point(84) = {0.013034, -0.745168, 0, 1.0};
Point(85) = {0.018105, -0.743921, 0, 1.0};
Point(86) = {0.022652, -0.742582, 0, 1.0};
Point(87) = {0.026638, -0.741175, 0, 1.0};
Point(88) = {0.030030, -0.739725, 0, 1.0};
Point(89) = {0.032807, -0.738262, 0, 1.0};
Point(90) = {0.034950, -0.736823, 0, 1.0};
Point(91) = {0.036454, -0.735454, 0, 1.0};
Point(92) = {0.037306, -0.734224, 0, 1.0};
Point(93) = {0.037452, -0.733274, 0, 1.0};
Point(94) = {0.036759, -0.732536, 0, 1.0};
Point(95) = {0.035214, -0.731881, 0, 1.0};
Point(96) = {0.032916, -0.731367, 0, 1.0};
Point(97) = {0.029880, -0.731026, 0, 1.0};
Point(98) = {0.026123, -0.730872, 0, 1.0};
Point(99) = {0.021665, -0.730903, 0, 1.0};
Point(100) = {0.016537, -0.731114, 0, 1.0};
Point(101) = {0.010778, -0.731494, 0, 1.0};
Point(102) = {0.004443, -0.732021, 0, 1.0};
Point(103) = {-0.002411, -0.732677, 0, 1.0};
Point(104) = {-0.009712, -0.733437, 0, 1.0};
Point(105) = {-0.017383, -0.734277, 0, 1.0};
Point(106) = {-0.025338, -0.735169, 0, 1.0};
Point(107) = {-0.033489, -0.736089, 0, 1.0};
Point(108) = {-0.041740, -0.737010, 0, 1.0};
Point(109) = {-0.049994, -0.737905, 0, 1.0};
Point(110) = {-0.058148, -0.738752, 0, 1.0};
Point(111) = {-0.066101, -0.739524, 0, 1.0};
Point(112) = {-0.073749, -0.740201, 0, 1.0};
Point(113) = {-0.080986, -0.740765, 0, 1.0};
Point(114) = {-0.087713, -0.741200, 0, 1.0};
Point(115) = {-0.093826, -0.741497, 0, 1.0};
Point(116) = {-0.099228, -0.741653, 0, 1.0};
Point(117) = {-0.103821, -0.741662, 0, 1.0};
Point(118) = {-0.107497, -0.741541, 0, 1.0};
Point(119) = {-0.110155, -0.741352, 0, 1.0};
Point(120) = {-0.111750, -0.741185, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
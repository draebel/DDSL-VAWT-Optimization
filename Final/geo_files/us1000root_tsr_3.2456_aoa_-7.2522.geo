SetFactory("OpenCASCADE");

Point(1) = {0.074199, 0.748621, 0, 1.0};
Point(2) = {0.073944, 0.748678, 0, 1.0};
Point(3) = {0.073238, 0.748806, 0, 1.0};
Point(4) = {0.072181, 0.748932, 0, 1.0};
Point(5) = {0.070821, 0.749013, 0, 1.0};
Point(6) = {0.069150, 0.749038, 0, 1.0};
Point(7) = {0.067156, 0.749023, 0, 1.0};
Point(8) = {0.064852, 0.749002, 0, 1.0};
Point(9) = {0.062257, 0.749010, 0, 1.0};
Point(10) = {0.059394, 0.749069, 0, 1.0};
Point(11) = {0.056294, 0.749184, 0, 1.0};
Point(12) = {0.052987, 0.749336, 0, 1.0};
Point(13) = {0.049507, 0.749501, 0, 1.0};
Point(14) = {0.045885, 0.749656, 0, 1.0};
Point(15) = {0.042155, 0.749786, 0, 1.0};
Point(16) = {0.038347, 0.749888, 0, 1.0};
Point(17) = {0.034491, 0.749961, 0, 1.0};
Point(18) = {0.030614, 0.750000, 0, 1.0};
Point(19) = {0.026745, 0.750000, 0, 1.0};
Point(20) = {0.022885, 0.749960, 0, 1.0};
Point(21) = {0.019034, 0.749879, 0, 1.0};
Point(22) = {0.015223, 0.749754, 0, 1.0};
Point(23) = {0.011464, 0.749577, 0, 1.0};
Point(24) = {0.007782, 0.749338, 0, 1.0};
Point(25) = {0.004198, 0.749023, 0, 1.0};
Point(26) = {0.000731, 0.748626, 0, 1.0};
Point(27) = {-0.002594, 0.748139, 0, 1.0};
Point(28) = {-0.005756, 0.747553, 0, 1.0};
Point(29) = {-0.008736, 0.746845, 0, 1.0};
Point(30) = {-0.011507, 0.746001, 0, 1.0};
Point(31) = {-0.014055, 0.745039, 0, 1.0};
Point(32) = {-0.016364, 0.743990, 0, 1.0};
Point(33) = {-0.018420, 0.742869, 0, 1.0};
Point(34) = {-0.020208, 0.741651, 0, 1.0};
Point(35) = {-0.021715, 0.740366, 0, 1.0};
Point(36) = {-0.022949, 0.739150, 0, 1.0};
Point(37) = {-0.023919, 0.738094, 0, 1.0};
Point(38) = {-0.024594, 0.737143, 0, 1.0};
Point(39) = {-0.024945, 0.736341, 0, 1.0};
Point(40) = {-0.025016, 0.736122, 0, 1.0};
Point(41) = {-0.024860, 0.735670, 0, 1.0};
Point(42) = {-0.024319, 0.734981, 0, 1.0};
Point(43) = {-0.023427, 0.734230, 0, 1.0};
Point(44) = {-0.022224, 0.733450, 0, 1.0};
Point(45) = {-0.020724, 0.732582, 0, 1.0};
Point(46) = {-0.018944, 0.731716, 0, 1.0};
Point(47) = {-0.016908, 0.730984, 0, 1.0};
Point(48) = {-0.014637, 0.730413, 0, 1.0};
Point(49) = {-0.012139, 0.729976, 0, 1.0};
Point(50) = {-0.009431, 0.729683, 0, 1.0};
Point(51) = {-0.006536, 0.729560, 0, 1.0};
Point(52) = {-0.003474, 0.729621, 0, 1.0};
Point(53) = {-0.000266, 0.729845, 0, 1.0};
Point(54) = {0.003075, 0.730207, 0, 1.0};
Point(55) = {0.006531, 0.730691, 0, 1.0};
Point(56) = {0.010079, 0.731284, 0, 1.0};
Point(57) = {0.013704, 0.731974, 0, 1.0};
Point(58) = {0.017387, 0.732745, 0, 1.0};
Point(59) = {0.021109, 0.733578, 0, 1.0};
Point(60) = {0.024857, 0.734464, 0, 1.0};
Point(61) = {0.028604, 0.735392, 0, 1.0};
Point(62) = {0.032349, 0.736361, 0, 1.0};
Point(63) = {0.036093, 0.737370, 0, 1.0};
Point(64) = {0.039808, 0.738406, 0, 1.0};
Point(65) = {0.043469, 0.739459, 0, 1.0};
Point(66) = {0.047048, 0.740519, 0, 1.0};
Point(67) = {0.050515, 0.741576, 0, 1.0};
Point(68) = {0.053844, 0.742607, 0, 1.0};
Point(69) = {0.057007, 0.743583, 0, 1.0};
Point(70) = {0.059980, 0.744470, 0, 1.0};
Point(71) = {0.062736, 0.745245, 0, 1.0};
Point(72) = {0.065246, 0.745902, 0, 1.0};
Point(73) = {0.067483, 0.746459, 0, 1.0};
Point(74) = {0.069417, 0.746944, 0, 1.0};
Point(75) = {0.071028, 0.747386, 0, 1.0};
Point(76) = {0.072324, 0.747806, 0, 1.0};
Point(77) = {0.073316, 0.748193, 0, 1.0};
Point(78) = {0.073968, 0.748493, 0, 1.0};
Point(79) = {0.074201, 0.748612, 0, 1.0};
Point(80) = {-0.074199, -0.748621, 0, 1.0};
Point(81) = {-0.073944, -0.748678, 0, 1.0};
Point(82) = {-0.073238, -0.748806, 0, 1.0};
Point(83) = {-0.072181, -0.748932, 0, 1.0};
Point(84) = {-0.070821, -0.749013, 0, 1.0};
Point(85) = {-0.069150, -0.749038, 0, 1.0};
Point(86) = {-0.067156, -0.749023, 0, 1.0};
Point(87) = {-0.064852, -0.749002, 0, 1.0};
Point(88) = {-0.062257, -0.749010, 0, 1.0};
Point(89) = {-0.059394, -0.749069, 0, 1.0};
Point(90) = {-0.056294, -0.749184, 0, 1.0};
Point(91) = {-0.052987, -0.749336, 0, 1.0};
Point(92) = {-0.049507, -0.749501, 0, 1.0};
Point(93) = {-0.045885, -0.749656, 0, 1.0};
Point(94) = {-0.042155, -0.749786, 0, 1.0};
Point(95) = {-0.038347, -0.749888, 0, 1.0};
Point(96) = {-0.034491, -0.749961, 0, 1.0};
Point(97) = {-0.030614, -0.750000, 0, 1.0};
Point(98) = {-0.026745, -0.750000, 0, 1.0};
Point(99) = {-0.022885, -0.749960, 0, 1.0};
Point(100) = {-0.019034, -0.749879, 0, 1.0};
Point(101) = {-0.015223, -0.749754, 0, 1.0};
Point(102) = {-0.011464, -0.749577, 0, 1.0};
Point(103) = {-0.007782, -0.749338, 0, 1.0};
Point(104) = {-0.004198, -0.749023, 0, 1.0};
Point(105) = {-0.000731, -0.748626, 0, 1.0};
Point(106) = {0.002594, -0.748139, 0, 1.0};
Point(107) = {0.005756, -0.747553, 0, 1.0};
Point(108) = {0.008736, -0.746845, 0, 1.0};
Point(109) = {0.011507, -0.746001, 0, 1.0};
Point(110) = {0.014055, -0.745039, 0, 1.0};
Point(111) = {0.016364, -0.743990, 0, 1.0};
Point(112) = {0.018420, -0.742869, 0, 1.0};
Point(113) = {0.020208, -0.741651, 0, 1.0};
Point(114) = {0.021715, -0.740366, 0, 1.0};
Point(115) = {0.022949, -0.739150, 0, 1.0};
Point(116) = {0.023919, -0.738094, 0, 1.0};
Point(117) = {0.024594, -0.737143, 0, 1.0};
Point(118) = {0.024945, -0.736341, 0, 1.0};
Point(119) = {0.025016, -0.736122, 0, 1.0};
Point(120) = {0.024860, -0.735670, 0, 1.0};
Point(121) = {0.024319, -0.734981, 0, 1.0};
Point(122) = {0.023427, -0.734230, 0, 1.0};
Point(123) = {0.022224, -0.733450, 0, 1.0};
Point(124) = {0.020724, -0.732582, 0, 1.0};
Point(125) = {0.018944, -0.731716, 0, 1.0};
Point(126) = {0.016908, -0.730984, 0, 1.0};
Point(127) = {0.014637, -0.730413, 0, 1.0};
Point(128) = {0.012139, -0.729976, 0, 1.0};
Point(129) = {0.009431, -0.729683, 0, 1.0};
Point(130) = {0.006536, -0.729560, 0, 1.0};
Point(131) = {0.003474, -0.729621, 0, 1.0};
Point(132) = {0.000266, -0.729845, 0, 1.0};
Point(133) = {-0.003075, -0.730207, 0, 1.0};
Point(134) = {-0.006531, -0.730691, 0, 1.0};
Point(135) = {-0.010079, -0.731284, 0, 1.0};
Point(136) = {-0.013704, -0.731974, 0, 1.0};
Point(137) = {-0.017387, -0.732745, 0, 1.0};
Point(138) = {-0.021109, -0.733578, 0, 1.0};
Point(139) = {-0.024857, -0.734464, 0, 1.0};
Point(140) = {-0.028604, -0.735392, 0, 1.0};
Point(141) = {-0.032349, -0.736361, 0, 1.0};
Point(142) = {-0.036093, -0.737370, 0, 1.0};
Point(143) = {-0.039808, -0.738406, 0, 1.0};
Point(144) = {-0.043469, -0.739459, 0, 1.0};
Point(145) = {-0.047048, -0.740519, 0, 1.0};
Point(146) = {-0.050515, -0.741576, 0, 1.0};
Point(147) = {-0.053844, -0.742607, 0, 1.0};
Point(148) = {-0.057007, -0.743583, 0, 1.0};
Point(149) = {-0.059980, -0.744470, 0, 1.0};
Point(150) = {-0.062736, -0.745245, 0, 1.0};
Point(151) = {-0.065246, -0.745902, 0, 1.0};
Point(152) = {-0.067483, -0.746459, 0, 1.0};
Point(153) = {-0.069417, -0.746944, 0, 1.0};
Point(154) = {-0.071028, -0.747386, 0, 1.0};
Point(155) = {-0.072324, -0.747806, 0, 1.0};
Point(156) = {-0.073316, -0.748193, 0, 1.0};
Point(157) = {-0.073968, -0.748493, 0, 1.0};
Point(158) = {-0.074201, -0.748612, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.148399, 0.747243, 0, 1.0};
Point(2) = {0.147888, 0.747357, 0, 1.0};
Point(3) = {0.146477, 0.747612, 0, 1.0};
Point(4) = {0.144362, 0.747864, 0, 1.0};
Point(5) = {0.141642, 0.748026, 0, 1.0};
Point(6) = {0.138301, 0.748076, 0, 1.0};
Point(7) = {0.134313, 0.748046, 0, 1.0};
Point(8) = {0.129703, 0.748004, 0, 1.0};
Point(9) = {0.124514, 0.748020, 0, 1.0};
Point(10) = {0.118789, 0.748139, 0, 1.0};
Point(11) = {0.112588, 0.748367, 0, 1.0};
Point(12) = {0.105975, 0.748673, 0, 1.0};
Point(13) = {0.099014, 0.749003, 0, 1.0};
Point(14) = {0.091771, 0.749311, 0, 1.0};
Point(15) = {0.084310, 0.749571, 0, 1.0};
Point(16) = {0.076693, 0.749776, 0, 1.0};
Point(17) = {0.068981, 0.749921, 0, 1.0};
Point(18) = {0.061228, 0.749999, 0, 1.0};
Point(19) = {0.053489, 0.750000, 0, 1.0};
Point(20) = {0.045770, 0.749920, 0, 1.0};
Point(21) = {0.038069, 0.749757, 0, 1.0};
Point(22) = {0.030445, 0.749507, 0, 1.0};
Point(23) = {0.022928, 0.749155, 0, 1.0};
Point(24) = {0.015563, 0.748675, 0, 1.0};
Point(25) = {0.008395, 0.748046, 0, 1.0};
Point(26) = {0.001462, 0.747251, 0, 1.0};
Point(27) = {-0.005188, 0.746279, 0, 1.0};
Point(28) = {-0.011513, 0.745106, 0, 1.0};
Point(29) = {-0.017472, 0.743690, 0, 1.0};
Point(30) = {-0.023015, 0.742002, 0, 1.0};
Point(31) = {-0.028111, 0.740078, 0, 1.0};
Point(32) = {-0.032729, 0.737980, 0, 1.0};
Point(33) = {-0.036841, 0.735738, 0, 1.0};
Point(34) = {-0.040416, 0.733302, 0, 1.0};
Point(35) = {-0.043430, 0.730732, 0, 1.0};
Point(36) = {-0.045898, 0.728300, 0, 1.0};
Point(37) = {-0.047837, 0.726188, 0, 1.0};
Point(38) = {-0.049188, 0.724286, 0, 1.0};
Point(39) = {-0.049891, 0.722682, 0, 1.0};
Point(40) = {-0.050033, 0.722245, 0, 1.0};
Point(41) = {-0.049720, 0.721340, 0, 1.0};
Point(42) = {-0.048638, 0.719963, 0, 1.0};
Point(43) = {-0.046854, 0.718459, 0, 1.0};
Point(44) = {-0.044448, 0.716900, 0, 1.0};
Point(45) = {-0.041448, 0.715164, 0, 1.0};
Point(46) = {-0.037887, 0.713431, 0, 1.0};
Point(47) = {-0.033816, 0.711968, 0, 1.0};
Point(48) = {-0.029273, 0.710827, 0, 1.0};
Point(49) = {-0.024277, 0.709953, 0, 1.0};
Point(50) = {-0.018862, 0.709367, 0, 1.0};
Point(51) = {-0.013073, 0.709121, 0, 1.0};
Point(52) = {-0.006949, 0.709242, 0, 1.0};
Point(53) = {-0.000532, 0.709690, 0, 1.0};
Point(54) = {0.006150, 0.710415, 0, 1.0};
Point(55) = {0.013061, 0.711382, 0, 1.0};
Point(56) = {0.020158, 0.712567, 0, 1.0};
Point(57) = {0.027408, 0.713948, 0, 1.0};
Point(58) = {0.034774, 0.715489, 0, 1.0};
Point(59) = {0.042217, 0.717157, 0, 1.0};
Point(60) = {0.049714, 0.718928, 0, 1.0};
Point(61) = {0.057207, 0.720784, 0, 1.0};
Point(62) = {0.064699, 0.722723, 0, 1.0};
Point(63) = {0.072186, 0.724740, 0, 1.0};
Point(64) = {0.079616, 0.726813, 0, 1.0};
Point(65) = {0.086938, 0.728918, 0, 1.0};
Point(66) = {0.094096, 0.731038, 0, 1.0};
Point(67) = {0.101031, 0.733151, 0, 1.0};
Point(68) = {0.107688, 0.735214, 0, 1.0};
Point(69) = {0.114014, 0.737167, 0, 1.0};
Point(70) = {0.119959, 0.738941, 0, 1.0};
Point(71) = {0.125472, 0.740490, 0, 1.0};
Point(72) = {0.130492, 0.741804, 0, 1.0};
Point(73) = {0.134965, 0.742918, 0, 1.0};
Point(74) = {0.138834, 0.743888, 0, 1.0};
Point(75) = {0.142056, 0.744773, 0, 1.0};
Point(76) = {0.144649, 0.745612, 0, 1.0};
Point(77) = {0.146633, 0.746385, 0, 1.0};
Point(78) = {0.147936, 0.746986, 0, 1.0};
Point(79) = {0.148401, 0.747224, 0, 1.0};
Point(80) = {-0.148399, -0.747243, 0, 1.0};
Point(81) = {-0.147888, -0.747357, 0, 1.0};
Point(82) = {-0.146477, -0.747612, 0, 1.0};
Point(83) = {-0.144362, -0.747864, 0, 1.0};
Point(84) = {-0.141642, -0.748026, 0, 1.0};
Point(85) = {-0.138301, -0.748076, 0, 1.0};
Point(86) = {-0.134313, -0.748046, 0, 1.0};
Point(87) = {-0.129703, -0.748004, 0, 1.0};
Point(88) = {-0.124514, -0.748020, 0, 1.0};
Point(89) = {-0.118789, -0.748139, 0, 1.0};
Point(90) = {-0.112588, -0.748367, 0, 1.0};
Point(91) = {-0.105975, -0.748673, 0, 1.0};
Point(92) = {-0.099014, -0.749003, 0, 1.0};
Point(93) = {-0.091771, -0.749311, 0, 1.0};
Point(94) = {-0.084310, -0.749571, 0, 1.0};
Point(95) = {-0.076693, -0.749776, 0, 1.0};
Point(96) = {-0.068981, -0.749921, 0, 1.0};
Point(97) = {-0.061228, -0.749999, 0, 1.0};
Point(98) = {-0.053489, -0.750000, 0, 1.0};
Point(99) = {-0.045770, -0.749920, 0, 1.0};
Point(100) = {-0.038069, -0.749757, 0, 1.0};
Point(101) = {-0.030445, -0.749507, 0, 1.0};
Point(102) = {-0.022928, -0.749155, 0, 1.0};
Point(103) = {-0.015563, -0.748675, 0, 1.0};
Point(104) = {-0.008395, -0.748046, 0, 1.0};
Point(105) = {-0.001462, -0.747251, 0, 1.0};
Point(106) = {0.005188, -0.746279, 0, 1.0};
Point(107) = {0.011513, -0.745106, 0, 1.0};
Point(108) = {0.017472, -0.743690, 0, 1.0};
Point(109) = {0.023015, -0.742002, 0, 1.0};
Point(110) = {0.028111, -0.740078, 0, 1.0};
Point(111) = {0.032729, -0.737980, 0, 1.0};
Point(112) = {0.036841, -0.735738, 0, 1.0};
Point(113) = {0.040416, -0.733302, 0, 1.0};
Point(114) = {0.043430, -0.730732, 0, 1.0};
Point(115) = {0.045898, -0.728300, 0, 1.0};
Point(116) = {0.047837, -0.726188, 0, 1.0};
Point(117) = {0.049188, -0.724286, 0, 1.0};
Point(118) = {0.049891, -0.722682, 0, 1.0};
Point(119) = {0.050033, -0.722245, 0, 1.0};
Point(120) = {0.049720, -0.721340, 0, 1.0};
Point(121) = {0.048638, -0.719963, 0, 1.0};
Point(122) = {0.046854, -0.718459, 0, 1.0};
Point(123) = {0.044448, -0.716900, 0, 1.0};
Point(124) = {0.041448, -0.715164, 0, 1.0};
Point(125) = {0.037887, -0.713431, 0, 1.0};
Point(126) = {0.033816, -0.711968, 0, 1.0};
Point(127) = {0.029273, -0.710827, 0, 1.0};
Point(128) = {0.024277, -0.709953, 0, 1.0};
Point(129) = {0.018862, -0.709367, 0, 1.0};
Point(130) = {0.013073, -0.709121, 0, 1.0};
Point(131) = {0.006949, -0.709242, 0, 1.0};
Point(132) = {0.000532, -0.709690, 0, 1.0};
Point(133) = {-0.006150, -0.710415, 0, 1.0};
Point(134) = {-0.013061, -0.711382, 0, 1.0};
Point(135) = {-0.020158, -0.712567, 0, 1.0};
Point(136) = {-0.027408, -0.713948, 0, 1.0};
Point(137) = {-0.034774, -0.715489, 0, 1.0};
Point(138) = {-0.042217, -0.717157, 0, 1.0};
Point(139) = {-0.049714, -0.718928, 0, 1.0};
Point(140) = {-0.057207, -0.720784, 0, 1.0};
Point(141) = {-0.064699, -0.722723, 0, 1.0};
Point(142) = {-0.072186, -0.724740, 0, 1.0};
Point(143) = {-0.079616, -0.726813, 0, 1.0};
Point(144) = {-0.086938, -0.728918, 0, 1.0};
Point(145) = {-0.094096, -0.731038, 0, 1.0};
Point(146) = {-0.101031, -0.733151, 0, 1.0};
Point(147) = {-0.107688, -0.735214, 0, 1.0};
Point(148) = {-0.114014, -0.737167, 0, 1.0};
Point(149) = {-0.119959, -0.738941, 0, 1.0};
Point(150) = {-0.125472, -0.740490, 0, 1.0};
Point(151) = {-0.130492, -0.741804, 0, 1.0};
Point(152) = {-0.134965, -0.742918, 0, 1.0};
Point(153) = {-0.138834, -0.743888, 0, 1.0};
Point(154) = {-0.142056, -0.744773, 0, 1.0};
Point(155) = {-0.144649, -0.745612, 0, 1.0};
Point(156) = {-0.146633, -0.746385, 0, 1.0};
Point(157) = {-0.147936, -0.746986, 0, 1.0};
Point(158) = {-0.148401, -0.747224, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
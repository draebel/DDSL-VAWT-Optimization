SetFactory("OpenCASCADE");

Point(1) = {0.111624, 0.747932, 0, 1.0};
Point(2) = {0.111241, 0.748017, 0, 1.0};
Point(3) = {0.110182, 0.748209, 0, 1.0};
Point(4) = {0.108596, 0.748398, 0, 1.0};
Point(5) = {0.106556, 0.748520, 0, 1.0};
Point(6) = {0.104050, 0.748557, 0, 1.0};
Point(7) = {0.101059, 0.748535, 0, 1.0};
Point(8) = {0.097602, 0.748503, 0, 1.0};
Point(9) = {0.093710, 0.748515, 0, 1.0};
Point(10) = {0.089416, 0.748604, 0, 1.0};
Point(11) = {0.084766, 0.748775, 0, 1.0};
Point(12) = {0.079806, 0.749004, 0, 1.0};
Point(13) = {0.074585, 0.749252, 0, 1.0};
Point(14) = {0.069153, 0.749484, 0, 1.0};
Point(15) = {0.063557, 0.749679, 0, 1.0};
Point(16) = {0.057845, 0.749832, 0, 1.0};
Point(17) = {0.052061, 0.749941, 0, 1.0};
Point(18) = {0.046245, 0.749999, 0, 1.0};
Point(19) = {0.040442, 0.750000, 0, 1.0};
Point(20) = {0.034652, 0.749940, 0, 1.0};
Point(21) = {0.028876, 0.749818, 0, 1.0};
Point(22) = {0.023159, 0.749631, 0, 1.0};
Point(23) = {0.017520, 0.749366, 0, 1.0};
Point(24) = {0.011997, 0.749007, 0, 1.0};
Point(25) = {0.006621, 0.748534, 0, 1.0};
Point(26) = {0.001421, 0.747938, 0, 1.0};
Point(27) = {-0.003566, 0.747209, 0, 1.0};
Point(28) = {-0.008310, 0.746330, 0, 1.0};
Point(29) = {-0.012779, 0.745267, 0, 1.0};
Point(30) = {-0.016936, 0.744001, 0, 1.0};
Point(31) = {-0.020758, 0.742558, 0, 1.0};
Point(32) = {-0.024222, 0.740985, 0, 1.0};
Point(33) = {-0.027306, 0.739303, 0, 1.0};
Point(34) = {-0.029987, 0.737476, 0, 1.0};
Point(35) = {-0.032247, 0.735549, 0, 1.0};
Point(36) = {-0.034099, 0.733725, 0, 1.0};
Point(37) = {-0.035553, 0.732141, 0, 1.0};
Point(38) = {-0.036566, 0.730714, 0, 1.0};
Point(39) = {-0.037093, 0.729511, 0, 1.0};
Point(40) = {-0.037200, 0.729184, 0, 1.0};
Point(41) = {-0.036965, 0.728505, 0, 1.0};
Point(42) = {-0.036154, 0.727472, 0, 1.0};
Point(43) = {-0.034816, 0.726345, 0, 1.0};
Point(44) = {-0.033011, 0.725175, 0, 1.0};
Point(45) = {-0.030762, 0.723873, 0, 1.0};
Point(46) = {-0.028091, 0.722573, 0, 1.0};
Point(47) = {-0.025037, 0.721476, 0, 1.0};
Point(48) = {-0.021630, 0.720620, 0, 1.0};
Point(49) = {-0.017883, 0.719965, 0, 1.0};
Point(50) = {-0.013822, 0.719525, 0, 1.0};
Point(51) = {-0.009480, 0.719340, 0, 1.0};
Point(52) = {-0.004887, 0.719431, 0, 1.0};
Point(53) = {-0.000074, 0.719768, 0, 1.0};
Point(54) = {0.004937, 0.720311, 0, 1.0};
Point(55) = {0.010121, 0.721036, 0, 1.0};
Point(56) = {0.015443, 0.721926, 0, 1.0};
Point(57) = {0.020881, 0.722961, 0, 1.0};
Point(58) = {0.026405, 0.724117, 0, 1.0};
Point(59) = {0.031988, 0.725368, 0, 1.0};
Point(60) = {0.037610, 0.726696, 0, 1.0};
Point(61) = {0.043230, 0.728088, 0, 1.0};
Point(62) = {0.048849, 0.729542, 0, 1.0};
Point(63) = {0.054464, 0.731055, 0, 1.0};
Point(64) = {0.060036, 0.732609, 0, 1.0};
Point(65) = {0.065529, 0.734189, 0, 1.0};
Point(66) = {0.070897, 0.735779, 0, 1.0};
Point(67) = {0.076098, 0.737363, 0, 1.0};
Point(68) = {0.081090, 0.738911, 0, 1.0};
Point(69) = {0.085835, 0.740375, 0, 1.0};
Point(70) = {0.090294, 0.741706, 0, 1.0};
Point(71) = {0.094429, 0.742867, 0, 1.0};
Point(72) = {0.098194, 0.743853, 0, 1.0};
Point(73) = {0.101549, 0.744688, 0, 1.0};
Point(74) = {0.104450, 0.745416, 0, 1.0};
Point(75) = {0.106867, 0.746080, 0, 1.0};
Point(76) = {0.108811, 0.746709, 0, 1.0};
Point(77) = {0.110299, 0.747289, 0, 1.0};
Point(78) = {0.111276, 0.747739, 0, 1.0};
Point(79) = {0.111626, 0.747918, 0, 1.0};
Point(80) = {-0.111624, -0.747932, 0, 1.0};
Point(81) = {-0.111241, -0.748017, 0, 1.0};
Point(82) = {-0.110182, -0.748209, 0, 1.0};
Point(83) = {-0.108596, -0.748398, 0, 1.0};
Point(84) = {-0.106556, -0.748520, 0, 1.0};
Point(85) = {-0.104050, -0.748557, 0, 1.0};
Point(86) = {-0.101059, -0.748535, 0, 1.0};
Point(87) = {-0.097602, -0.748503, 0, 1.0};
Point(88) = {-0.093710, -0.748515, 0, 1.0};
Point(89) = {-0.089416, -0.748604, 0, 1.0};
Point(90) = {-0.084766, -0.748775, 0, 1.0};
Point(91) = {-0.079806, -0.749004, 0, 1.0};
Point(92) = {-0.074585, -0.749252, 0, 1.0};
Point(93) = {-0.069153, -0.749484, 0, 1.0};
Point(94) = {-0.063557, -0.749679, 0, 1.0};
Point(95) = {-0.057845, -0.749832, 0, 1.0};
Point(96) = {-0.052061, -0.749941, 0, 1.0};
Point(97) = {-0.046245, -0.749999, 0, 1.0};
Point(98) = {-0.040442, -0.750000, 0, 1.0};
Point(99) = {-0.034652, -0.749940, 0, 1.0};
Point(100) = {-0.028876, -0.749818, 0, 1.0};
Point(101) = {-0.023159, -0.749631, 0, 1.0};
Point(102) = {-0.017520, -0.749366, 0, 1.0};
Point(103) = {-0.011997, -0.749007, 0, 1.0};
Point(104) = {-0.006621, -0.748534, 0, 1.0};
Point(105) = {-0.001421, -0.747938, 0, 1.0};
Point(106) = {0.003566, -0.747209, 0, 1.0};
Point(107) = {0.008310, -0.746330, 0, 1.0};
Point(108) = {0.012779, -0.745267, 0, 1.0};
Point(109) = {0.016936, -0.744001, 0, 1.0};
Point(110) = {0.020758, -0.742558, 0, 1.0};
Point(111) = {0.024222, -0.740985, 0, 1.0};
Point(112) = {0.027306, -0.739303, 0, 1.0};
Point(113) = {0.029987, -0.737476, 0, 1.0};
Point(114) = {0.032247, -0.735549, 0, 1.0};
Point(115) = {0.034099, -0.733725, 0, 1.0};
Point(116) = {0.035553, -0.732141, 0, 1.0};
Point(117) = {0.036566, -0.730714, 0, 1.0};
Point(118) = {0.037093, -0.729511, 0, 1.0};
Point(119) = {0.037200, -0.729184, 0, 1.0};
Point(120) = {0.036965, -0.728505, 0, 1.0};
Point(121) = {0.036154, -0.727472, 0, 1.0};
Point(122) = {0.034816, -0.726345, 0, 1.0};
Point(123) = {0.033011, -0.725175, 0, 1.0};
Point(124) = {0.030762, -0.723873, 0, 1.0};
Point(125) = {0.028091, -0.722573, 0, 1.0};
Point(126) = {0.025037, -0.721476, 0, 1.0};
Point(127) = {0.021630, -0.720620, 0, 1.0};
Point(128) = {0.017883, -0.719965, 0, 1.0};
Point(129) = {0.013822, -0.719525, 0, 1.0};
Point(130) = {0.009480, -0.719340, 0, 1.0};
Point(131) = {0.004887, -0.719431, 0, 1.0};
Point(132) = {0.000074, -0.719768, 0, 1.0};
Point(133) = {-0.004937, -0.720311, 0, 1.0};
Point(134) = {-0.010121, -0.721036, 0, 1.0};
Point(135) = {-0.015443, -0.721926, 0, 1.0};
Point(136) = {-0.020881, -0.722961, 0, 1.0};
Point(137) = {-0.026405, -0.724117, 0, 1.0};
Point(138) = {-0.031988, -0.725368, 0, 1.0};
Point(139) = {-0.037610, -0.726696, 0, 1.0};
Point(140) = {-0.043230, -0.728088, 0, 1.0};
Point(141) = {-0.048849, -0.729542, 0, 1.0};
Point(142) = {-0.054464, -0.731055, 0, 1.0};
Point(143) = {-0.060036, -0.732609, 0, 1.0};
Point(144) = {-0.065529, -0.734189, 0, 1.0};
Point(145) = {-0.070897, -0.735779, 0, 1.0};
Point(146) = {-0.076098, -0.737363, 0, 1.0};
Point(147) = {-0.081090, -0.738911, 0, 1.0};
Point(148) = {-0.085835, -0.740375, 0, 1.0};
Point(149) = {-0.090294, -0.741706, 0, 1.0};
Point(150) = {-0.094429, -0.742867, 0, 1.0};
Point(151) = {-0.098194, -0.743853, 0, 1.0};
Point(152) = {-0.101549, -0.744688, 0, 1.0};
Point(153) = {-0.104450, -0.745416, 0, 1.0};
Point(154) = {-0.106867, -0.746080, 0, 1.0};
Point(155) = {-0.108811, -0.746709, 0, 1.0};
Point(156) = {-0.110299, -0.747289, 0, 1.0};
Point(157) = {-0.111276, -0.747739, 0, 1.0};
Point(158) = {-0.111626, -0.747918, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:105};
Spline(6) = {105:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112490, 0.743063, 0, 1.0};
Point(2) = {0.107763, 0.743961, 0, 1.0};
Point(3) = {0.103038, 0.744681, 0, 1.0};
Point(4) = {0.099259, 0.745186, 0, 1.0};
Point(5) = {0.097477, 0.745411, 0, 1.0};
Point(6) = {0.095536, 0.745656, 0, 1.0};
Point(7) = {0.090614, 0.746255, 0, 1.0};
Point(8) = {0.085185, 0.746846, 0, 1.0};
Point(9) = {0.079302, 0.747457, 0, 1.0};
Point(10) = {0.073015, 0.748080, 0, 1.0};
Point(11) = {0.066392, 0.748673, 0, 1.0};
Point(12) = {0.059493, 0.749187, 0, 1.0};
Point(13) = {0.052386, 0.749565, 0, 1.0};
Point(14) = {0.045138, 0.749803, 0, 1.0};
Point(15) = {0.037824, 0.749962, 0, 1.0};
Point(16) = {0.030510, 0.750000, 0, 1.0};
Point(17) = {0.023264, 0.749942, 0, 1.0};
Point(18) = {0.016160, 0.749839, 0, 1.0};
Point(19) = {0.009266, 0.749639, 0, 1.0};
Point(20) = {0.002648, 0.749386, 0, 1.0};
Point(21) = {-0.003634, 0.749050, 0, 1.0};
Point(22) = {-0.009512, 0.748602, 0, 1.0};
Point(23) = {-0.014934, 0.748052, 0, 1.0};
Point(24) = {-0.019850, 0.747433, 0, 1.0};
Point(25) = {-0.024211, 0.746783, 0, 1.0};
Point(26) = {-0.027970, 0.746150, 0, 1.0};
Point(27) = {-0.031100, 0.745497, 0, 1.0};
Point(28) = {-0.033559, 0.744791, 0, 1.0};
Point(29) = {-0.035337, 0.744050, 0, 1.0};
Point(30) = {-0.036409, 0.743259, 0, 1.0};
Point(31) = {-0.036764, 0.742859, 0, 1.0};
Point(32) = {-0.037060, 0.742424, 0, 1.0};
Point(33) = {-0.037354, 0.741594, 0, 1.0};
Point(34) = {-0.037499, 0.740716, 0, 1.0};
Point(35) = {-0.037345, 0.739980, 0, 1.0};
Point(36) = {-0.037044, 0.739479, 0, 1.0};
Point(37) = {-0.036744, 0.739225, 0, 1.0};
Point(38) = {-0.036386, 0.738960, 0, 1.0};
Point(39) = {-0.035306, 0.738379, 0, 1.0};
Point(40) = {-0.033520, 0.737768, 0, 1.0};
Point(41) = {-0.031054, 0.737193, 0, 1.0};
Point(42) = {-0.027917, 0.736656, 0, 1.0};
Point(43) = {-0.024153, 0.736192, 0, 1.0};
Point(44) = {-0.019785, 0.735716, 0, 1.0};
Point(45) = {-0.014864, 0.735293, 0, 1.0};
Point(46) = {-0.009437, 0.734906, 0, 1.0};
Point(47) = {-0.003554, 0.734489, 0, 1.0};
Point(48) = {0.002731, 0.734111, 0, 1.0};
Point(49) = {0.009352, 0.733898, 0, 1.0};
Point(50) = {0.016248, 0.733840, 0, 1.0};
Point(51) = {0.023351, 0.734021, 0, 1.0};
Point(52) = {0.030595, 0.734508, 0, 1.0};
Point(53) = {0.037905, 0.735255, 0, 1.0};
Point(54) = {0.045213, 0.736149, 0, 1.0};
Point(55) = {0.052454, 0.737132, 0, 1.0};
Point(56) = {0.059554, 0.738140, 0, 1.0};
Point(57) = {0.066444, 0.739120, 0, 1.0};
Point(58) = {0.073059, 0.740041, 0, 1.0};
Point(59) = {0.079338, 0.740833, 0, 1.0};
Point(60) = {0.085215, 0.741511, 0, 1.0};
Point(61) = {0.090637, 0.742058, 0, 1.0};
Point(62) = {0.095553, 0.742482, 0, 1.0};
Point(63) = {0.097492, 0.742613, 0, 1.0};
Point(64) = {0.099272, 0.742756, 0, 1.0};
Point(65) = {0.103048, 0.742947, 0, 1.0};
Point(66) = {0.107768, 0.743076, 0, 1.0};
Point(67) = {-0.112490, -0.743063, 0, 1.0};
Point(68) = {-0.107763, -0.743961, 0, 1.0};
Point(69) = {-0.103038, -0.744681, 0, 1.0};
Point(70) = {-0.099259, -0.745186, 0, 1.0};
Point(71) = {-0.097477, -0.745411, 0, 1.0};
Point(72) = {-0.095536, -0.745656, 0, 1.0};
Point(73) = {-0.090614, -0.746255, 0, 1.0};
Point(74) = {-0.085185, -0.746846, 0, 1.0};
Point(75) = {-0.079302, -0.747457, 0, 1.0};
Point(76) = {-0.073015, -0.748080, 0, 1.0};
Point(77) = {-0.066392, -0.748673, 0, 1.0};
Point(78) = {-0.059493, -0.749187, 0, 1.0};
Point(79) = {-0.052386, -0.749565, 0, 1.0};
Point(80) = {-0.045138, -0.749803, 0, 1.0};
Point(81) = {-0.037824, -0.749962, 0, 1.0};
Point(82) = {-0.030510, -0.750000, 0, 1.0};
Point(83) = {-0.023264, -0.749942, 0, 1.0};
Point(84) = {-0.016160, -0.749839, 0, 1.0};
Point(85) = {-0.009266, -0.749639, 0, 1.0};
Point(86) = {-0.002648, -0.749386, 0, 1.0};
Point(87) = {0.003634, -0.749050, 0, 1.0};
Point(88) = {0.009512, -0.748602, 0, 1.0};
Point(89) = {0.014934, -0.748052, 0, 1.0};
Point(90) = {0.019850, -0.747433, 0, 1.0};
Point(91) = {0.024211, -0.746783, 0, 1.0};
Point(92) = {0.027970, -0.746150, 0, 1.0};
Point(93) = {0.031100, -0.745497, 0, 1.0};
Point(94) = {0.033559, -0.744791, 0, 1.0};
Point(95) = {0.035337, -0.744050, 0, 1.0};
Point(96) = {0.036409, -0.743259, 0, 1.0};
Point(97) = {0.036764, -0.742859, 0, 1.0};
Point(98) = {0.037060, -0.742424, 0, 1.0};
Point(99) = {0.037354, -0.741594, 0, 1.0};
Point(100) = {0.037499, -0.740716, 0, 1.0};
Point(101) = {0.037345, -0.739980, 0, 1.0};
Point(102) = {0.037044, -0.739479, 0, 1.0};
Point(103) = {0.036744, -0.739225, 0, 1.0};
Point(104) = {0.036386, -0.738960, 0, 1.0};
Point(105) = {0.035306, -0.738379, 0, 1.0};
Point(106) = {0.033520, -0.737768, 0, 1.0};
Point(107) = {0.031054, -0.737193, 0, 1.0};
Point(108) = {0.027917, -0.736656, 0, 1.0};
Point(109) = {0.024153, -0.736192, 0, 1.0};
Point(110) = {0.019785, -0.735716, 0, 1.0};
Point(111) = {0.014864, -0.735293, 0, 1.0};
Point(112) = {0.009437, -0.734906, 0, 1.0};
Point(113) = {0.003554, -0.734489, 0, 1.0};
Point(114) = {-0.002731, -0.734111, 0, 1.0};
Point(115) = {-0.009352, -0.733898, 0, 1.0};
Point(116) = {-0.016248, -0.733840, 0, 1.0};
Point(117) = {-0.023351, -0.734021, 0, 1.0};
Point(118) = {-0.030595, -0.734508, 0, 1.0};
Point(119) = {-0.037905, -0.735255, 0, 1.0};
Point(120) = {-0.045213, -0.736149, 0, 1.0};
Point(121) = {-0.052454, -0.737132, 0, 1.0};
Point(122) = {-0.059554, -0.738140, 0, 1.0};
Point(123) = {-0.066444, -0.739120, 0, 1.0};
Point(124) = {-0.073059, -0.740041, 0, 1.0};
Point(125) = {-0.079338, -0.740833, 0, 1.0};
Point(126) = {-0.085215, -0.741511, 0, 1.0};
Point(127) = {-0.090637, -0.742058, 0, 1.0};
Point(128) = {-0.095553, -0.742482, 0, 1.0};
Point(129) = {-0.097492, -0.742613, 0, 1.0};
Point(130) = {-0.099272, -0.742756, 0, 1.0};
Point(131) = {-0.103048, -0.742947, 0, 1.0};
Point(132) = {-0.107768, -0.743076, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
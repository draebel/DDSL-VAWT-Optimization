SetFactory("OpenCASCADE");

Point(1) = {0.149997, 0.740751, 0, 1.0};
Point(2) = {0.143694, 0.741948, 0, 1.0};
Point(3) = {0.137395, 0.742908, 0, 1.0};
Point(4) = {0.132355, 0.743582, 0, 1.0};
Point(5) = {0.129979, 0.743881, 0, 1.0};
Point(6) = {0.127392, 0.744209, 0, 1.0};
Point(7) = {0.120829, 0.745006, 0, 1.0};
Point(8) = {0.113591, 0.745795, 0, 1.0};
Point(9) = {0.105746, 0.746610, 0, 1.0};
Point(10) = {0.097363, 0.747440, 0, 1.0};
Point(11) = {0.088533, 0.748231, 0, 1.0};
Point(12) = {0.079335, 0.748916, 0, 1.0};
Point(13) = {0.069858, 0.749420, 0, 1.0};
Point(14) = {0.060194, 0.749737, 0, 1.0};
Point(15) = {0.050443, 0.749950, 0, 1.0};
Point(16) = {0.040690, 0.750000, 0, 1.0};
Point(17) = {0.031029, 0.749923, 0, 1.0};
Point(18) = {0.021557, 0.749785, 0, 1.0};
Point(19) = {0.012365, 0.749518, 0, 1.0};
Point(20) = {0.003540, 0.749182, 0, 1.0};
Point(21) = {-0.004835, 0.748734, 0, 1.0};
Point(22) = {-0.012672, 0.748137, 0, 1.0};
Point(23) = {-0.019902, 0.747403, 0, 1.0};
Point(24) = {-0.026456, 0.746577, 0, 1.0};
Point(25) = {-0.032271, 0.745711, 0, 1.0};
Point(26) = {-0.037282, 0.744867, 0, 1.0};
Point(27) = {-0.041456, 0.743996, 0, 1.0};
Point(28) = {-0.044735, 0.743054, 0, 1.0};
Point(29) = {-0.047105, 0.742067, 0, 1.0};
Point(30) = {-0.048535, 0.741011, 0, 1.0};
Point(31) = {-0.049009, 0.740479, 0, 1.0};
Point(32) = {-0.049403, 0.739899, 0, 1.0};
Point(33) = {-0.049795, 0.738792, 0, 1.0};
Point(34) = {-0.049989, 0.737621, 0, 1.0};
Point(35) = {-0.049783, 0.736640, 0, 1.0};
Point(36) = {-0.049382, 0.735973, 0, 1.0};
Point(37) = {-0.048982, 0.735633, 0, 1.0};
Point(38) = {-0.048504, 0.735279, 0, 1.0};
Point(39) = {-0.047064, 0.734505, 0, 1.0};
Point(40) = {-0.044683, 0.733690, 0, 1.0};
Point(41) = {-0.041395, 0.732924, 0, 1.0};
Point(42) = {-0.037213, 0.732207, 0, 1.0};
Point(43) = {-0.032193, 0.731589, 0, 1.0};
Point(44) = {-0.026370, 0.730955, 0, 1.0};
Point(45) = {-0.019809, 0.730391, 0, 1.0};
Point(46) = {-0.012572, 0.729875, 0, 1.0};
Point(47) = {-0.004729, 0.729318, 0, 1.0};
Point(48) = {0.003652, 0.728814, 0, 1.0};
Point(49) = {0.012480, 0.728531, 0, 1.0};
Point(50) = {0.021675, 0.728453, 0, 1.0};
Point(51) = {0.031145, 0.728695, 0, 1.0};
Point(52) = {0.040804, 0.729344, 0, 1.0};
Point(53) = {0.050551, 0.730340, 0, 1.0};
Point(54) = {0.060294, 0.731531, 0, 1.0};
Point(55) = {0.069949, 0.732843, 0, 1.0};
Point(56) = {0.079416, 0.734187, 0, 1.0};
Point(57) = {0.088603, 0.735493, 0, 1.0};
Point(58) = {0.097422, 0.736722, 0, 1.0};
Point(59) = {0.105795, 0.737778, 0, 1.0};
Point(60) = {0.113630, 0.738681, 0, 1.0};
Point(61) = {0.120860, 0.739411, 0, 1.0};
Point(62) = {0.127415, 0.739977, 0, 1.0};
Point(63) = {0.130000, 0.740151, 0, 1.0};
Point(64) = {0.132373, 0.740342, 0, 1.0};
Point(65) = {0.137408, 0.740596, 0, 1.0};
Point(66) = {0.143701, 0.740768, 0, 1.0};
Point(67) = {-0.149997, -0.740751, 0, 1.0};
Point(68) = {-0.143694, -0.741948, 0, 1.0};
Point(69) = {-0.137395, -0.742908, 0, 1.0};
Point(70) = {-0.132355, -0.743582, 0, 1.0};
Point(71) = {-0.129979, -0.743881, 0, 1.0};
Point(72) = {-0.127392, -0.744209, 0, 1.0};
Point(73) = {-0.120829, -0.745006, 0, 1.0};
Point(74) = {-0.113591, -0.745795, 0, 1.0};
Point(75) = {-0.105746, -0.746610, 0, 1.0};
Point(76) = {-0.097363, -0.747440, 0, 1.0};
Point(77) = {-0.088533, -0.748231, 0, 1.0};
Point(78) = {-0.079335, -0.748916, 0, 1.0};
Point(79) = {-0.069858, -0.749420, 0, 1.0};
Point(80) = {-0.060194, -0.749737, 0, 1.0};
Point(81) = {-0.050443, -0.749950, 0, 1.0};
Point(82) = {-0.040690, -0.750000, 0, 1.0};
Point(83) = {-0.031029, -0.749923, 0, 1.0};
Point(84) = {-0.021557, -0.749785, 0, 1.0};
Point(85) = {-0.012365, -0.749518, 0, 1.0};
Point(86) = {-0.003540, -0.749182, 0, 1.0};
Point(87) = {0.004835, -0.748734, 0, 1.0};
Point(88) = {0.012672, -0.748137, 0, 1.0};
Point(89) = {0.019902, -0.747403, 0, 1.0};
Point(90) = {0.026456, -0.746577, 0, 1.0};
Point(91) = {0.032271, -0.745711, 0, 1.0};
Point(92) = {0.037282, -0.744867, 0, 1.0};
Point(93) = {0.041456, -0.743996, 0, 1.0};
Point(94) = {0.044735, -0.743054, 0, 1.0};
Point(95) = {0.047105, -0.742067, 0, 1.0};
Point(96) = {0.048535, -0.741011, 0, 1.0};
Point(97) = {0.049009, -0.740479, 0, 1.0};
Point(98) = {0.049403, -0.739899, 0, 1.0};
Point(99) = {0.049795, -0.738792, 0, 1.0};
Point(100) = {0.049989, -0.737621, 0, 1.0};
Point(101) = {0.049783, -0.736640, 0, 1.0};
Point(102) = {0.049382, -0.735973, 0, 1.0};
Point(103) = {0.048982, -0.735633, 0, 1.0};
Point(104) = {0.048504, -0.735279, 0, 1.0};
Point(105) = {0.047064, -0.734505, 0, 1.0};
Point(106) = {0.044683, -0.733690, 0, 1.0};
Point(107) = {0.041395, -0.732924, 0, 1.0};
Point(108) = {0.037213, -0.732207, 0, 1.0};
Point(109) = {0.032193, -0.731589, 0, 1.0};
Point(110) = {0.026370, -0.730955, 0, 1.0};
Point(111) = {0.019809, -0.730391, 0, 1.0};
Point(112) = {0.012572, -0.729875, 0, 1.0};
Point(113) = {0.004729, -0.729318, 0, 1.0};
Point(114) = {-0.003652, -0.728814, 0, 1.0};
Point(115) = {-0.012480, -0.728531, 0, 1.0};
Point(116) = {-0.021675, -0.728453, 0, 1.0};
Point(117) = {-0.031145, -0.728695, 0, 1.0};
Point(118) = {-0.040804, -0.729344, 0, 1.0};
Point(119) = {-0.050551, -0.730340, 0, 1.0};
Point(120) = {-0.060294, -0.731531, 0, 1.0};
Point(121) = {-0.069949, -0.732843, 0, 1.0};
Point(122) = {-0.079416, -0.734187, 0, 1.0};
Point(123) = {-0.088603, -0.735493, 0, 1.0};
Point(124) = {-0.097422, -0.736722, 0, 1.0};
Point(125) = {-0.105795, -0.737778, 0, 1.0};
Point(126) = {-0.113630, -0.738681, 0, 1.0};
Point(127) = {-0.120860, -0.739411, 0, 1.0};
Point(128) = {-0.127415, -0.739977, 0, 1.0};
Point(129) = {-0.130000, -0.740151, 0, 1.0};
Point(130) = {-0.132373, -0.740342, 0, 1.0};
Point(131) = {-0.137408, -0.740596, 0, 1.0};
Point(132) = {-0.143701, -0.740768, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
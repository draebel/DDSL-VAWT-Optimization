SetFactory("OpenCASCADE");

Point(1) = {0.074998, 0.745375, 0, 1.0};
Point(2) = {0.071847, 0.745974, 0, 1.0};
Point(3) = {0.068697, 0.746454, 0, 1.0};
Point(4) = {0.066178, 0.746791, 0, 1.0};
Point(5) = {0.064990, 0.746940, 0, 1.0};
Point(6) = {0.063696, 0.747104, 0, 1.0};
Point(7) = {0.060415, 0.747503, 0, 1.0};
Point(8) = {0.056795, 0.747897, 0, 1.0};
Point(9) = {0.052873, 0.748305, 0, 1.0};
Point(10) = {0.048682, 0.748720, 0, 1.0};
Point(11) = {0.044266, 0.749115, 0, 1.0};
Point(12) = {0.039668, 0.749458, 0, 1.0};
Point(13) = {0.034929, 0.749710, 0, 1.0};
Point(14) = {0.030097, 0.749869, 0, 1.0};
Point(15) = {0.025221, 0.749975, 0, 1.0};
Point(16) = {0.020345, 0.750000, 0, 1.0};
Point(17) = {0.015514, 0.749961, 0, 1.0};
Point(18) = {0.010779, 0.749892, 0, 1.0};
Point(19) = {0.006182, 0.749759, 0, 1.0};
Point(20) = {0.001770, 0.749591, 0, 1.0};
Point(21) = {-0.002418, 0.749367, 0, 1.0};
Point(22) = {-0.006336, 0.749068, 0, 1.0};
Point(23) = {-0.009951, 0.748701, 0, 1.0};
Point(24) = {-0.013228, 0.748288, 0, 1.0};
Point(25) = {-0.016136, 0.747855, 0, 1.0};
Point(26) = {-0.018641, 0.747434, 0, 1.0};
Point(27) = {-0.020728, 0.746998, 0, 1.0};
Point(28) = {-0.022367, 0.746527, 0, 1.0};
Point(29) = {-0.023553, 0.746034, 0, 1.0};
Point(30) = {-0.024268, 0.745506, 0, 1.0};
Point(31) = {-0.024504, 0.745239, 0, 1.0};
Point(32) = {-0.024702, 0.744949, 0, 1.0};
Point(33) = {-0.024898, 0.744396, 0, 1.0};
Point(34) = {-0.024994, 0.743811, 0, 1.0};
Point(35) = {-0.024892, 0.743320, 0, 1.0};
Point(36) = {-0.024691, 0.742986, 0, 1.0};
Point(37) = {-0.024491, 0.742816, 0, 1.0};
Point(38) = {-0.024252, 0.742640, 0, 1.0};
Point(39) = {-0.023532, 0.742253, 0, 1.0};
Point(40) = {-0.022342, 0.741845, 0, 1.0};
Point(41) = {-0.020697, 0.741462, 0, 1.0};
Point(42) = {-0.018606, 0.741104, 0, 1.0};
Point(43) = {-0.016097, 0.740795, 0, 1.0};
Point(44) = {-0.013185, 0.740478, 0, 1.0};
Point(45) = {-0.009904, 0.740196, 0, 1.0};
Point(46) = {-0.006286, 0.739937, 0, 1.0};
Point(47) = {-0.002364, 0.739659, 0, 1.0};
Point(48) = {0.001826, 0.739407, 0, 1.0};
Point(49) = {0.006240, 0.739265, 0, 1.0};
Point(50) = {0.010837, 0.739227, 0, 1.0};
Point(51) = {0.015573, 0.739348, 0, 1.0};
Point(52) = {0.020402, 0.739672, 0, 1.0};
Point(53) = {0.025275, 0.740170, 0, 1.0};
Point(54) = {0.030147, 0.740766, 0, 1.0};
Point(55) = {0.034975, 0.741421, 0, 1.0};
Point(56) = {0.039708, 0.742093, 0, 1.0};
Point(57) = {0.044301, 0.742747, 0, 1.0};
Point(58) = {0.048711, 0.743361, 0, 1.0};
Point(59) = {0.052897, 0.743889, 0, 1.0};
Point(60) = {0.056815, 0.744340, 0, 1.0};
Point(61) = {0.060430, 0.744705, 0, 1.0};
Point(62) = {0.063707, 0.744988, 0, 1.0};
Point(63) = {0.065000, 0.745075, 0, 1.0};
Point(64) = {0.066186, 0.745171, 0, 1.0};
Point(65) = {0.068704, 0.745298, 0, 1.0};
Point(66) = {0.071850, 0.745384, 0, 1.0};
Point(67) = {-0.074998, -0.745375, 0, 1.0};
Point(68) = {-0.071847, -0.745974, 0, 1.0};
Point(69) = {-0.068697, -0.746454, 0, 1.0};
Point(70) = {-0.066178, -0.746791, 0, 1.0};
Point(71) = {-0.064990, -0.746940, 0, 1.0};
Point(72) = {-0.063696, -0.747104, 0, 1.0};
Point(73) = {-0.060415, -0.747503, 0, 1.0};
Point(74) = {-0.056795, -0.747897, 0, 1.0};
Point(75) = {-0.052873, -0.748305, 0, 1.0};
Point(76) = {-0.048682, -0.748720, 0, 1.0};
Point(77) = {-0.044266, -0.749115, 0, 1.0};
Point(78) = {-0.039668, -0.749458, 0, 1.0};
Point(79) = {-0.034929, -0.749710, 0, 1.0};
Point(80) = {-0.030097, -0.749869, 0, 1.0};
Point(81) = {-0.025221, -0.749975, 0, 1.0};
Point(82) = {-0.020345, -0.750000, 0, 1.0};
Point(83) = {-0.015514, -0.749961, 0, 1.0};
Point(84) = {-0.010779, -0.749892, 0, 1.0};
Point(85) = {-0.006182, -0.749759, 0, 1.0};
Point(86) = {-0.001770, -0.749591, 0, 1.0};
Point(87) = {0.002418, -0.749367, 0, 1.0};
Point(88) = {0.006336, -0.749068, 0, 1.0};
Point(89) = {0.009951, -0.748701, 0, 1.0};
Point(90) = {0.013228, -0.748288, 0, 1.0};
Point(91) = {0.016136, -0.747855, 0, 1.0};
Point(92) = {0.018641, -0.747434, 0, 1.0};
Point(93) = {0.020728, -0.746998, 0, 1.0};
Point(94) = {0.022367, -0.746527, 0, 1.0};
Point(95) = {0.023553, -0.746034, 0, 1.0};
Point(96) = {0.024268, -0.745506, 0, 1.0};
Point(97) = {0.024504, -0.745239, 0, 1.0};
Point(98) = {0.024702, -0.744949, 0, 1.0};
Point(99) = {0.024898, -0.744396, 0, 1.0};
Point(100) = {0.024994, -0.743811, 0, 1.0};
Point(101) = {0.024892, -0.743320, 0, 1.0};
Point(102) = {0.024691, -0.742986, 0, 1.0};
Point(103) = {0.024491, -0.742816, 0, 1.0};
Point(104) = {0.024252, -0.742640, 0, 1.0};
Point(105) = {0.023532, -0.742253, 0, 1.0};
Point(106) = {0.022342, -0.741845, 0, 1.0};
Point(107) = {0.020697, -0.741462, 0, 1.0};
Point(108) = {0.018606, -0.741104, 0, 1.0};
Point(109) = {0.016097, -0.740795, 0, 1.0};
Point(110) = {0.013185, -0.740478, 0, 1.0};
Point(111) = {0.009904, -0.740196, 0, 1.0};
Point(112) = {0.006286, -0.739937, 0, 1.0};
Point(113) = {0.002364, -0.739659, 0, 1.0};
Point(114) = {-0.001826, -0.739407, 0, 1.0};
Point(115) = {-0.006240, -0.739265, 0, 1.0};
Point(116) = {-0.010837, -0.739227, 0, 1.0};
Point(117) = {-0.015573, -0.739348, 0, 1.0};
Point(118) = {-0.020402, -0.739672, 0, 1.0};
Point(119) = {-0.025275, -0.740170, 0, 1.0};
Point(120) = {-0.030147, -0.740766, 0, 1.0};
Point(121) = {-0.034975, -0.741421, 0, 1.0};
Point(122) = {-0.039708, -0.742093, 0, 1.0};
Point(123) = {-0.044301, -0.742747, 0, 1.0};
Point(124) = {-0.048711, -0.743361, 0, 1.0};
Point(125) = {-0.052897, -0.743889, 0, 1.0};
Point(126) = {-0.056815, -0.744340, 0, 1.0};
Point(127) = {-0.060430, -0.744705, 0, 1.0};
Point(128) = {-0.063707, -0.744988, 0, 1.0};
Point(129) = {-0.065000, -0.745075, 0, 1.0};
Point(130) = {-0.066186, -0.745171, 0, 1.0};
Point(131) = {-0.068704, -0.745298, 0, 1.0};
Point(132) = {-0.071850, -0.745384, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
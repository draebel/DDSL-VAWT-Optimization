SetFactory("OpenCASCADE");

Point(1) = {0.111676, 0.724544, 0, 1.0};
Point(2) = {0.106935, 0.725870, 0, 1.0};
Point(3) = {0.102357, 0.727227, 0, 1.0};
Point(4) = {0.097910, 0.728616, 0, 1.0};
Point(5) = {0.093376, 0.730109, 0, 1.0};
Point(6) = {0.088606, 0.731683, 0, 1.0};
Point(7) = {0.083345, 0.733394, 0, 1.0};
Point(8) = {0.077784, 0.735149, 0, 1.0};
Point(9) = {0.071975, 0.736911, 0, 1.0};
Point(10) = {0.066120, 0.738598, 0, 1.0};
Point(11) = {0.060335, 0.740168, 0, 1.0};
Point(12) = {0.054650, 0.741608, 0, 1.0};
Point(13) = {0.049007, 0.742932, 0, 1.0};
Point(14) = {0.043376, 0.744148, 0, 1.0};
Point(15) = {0.037743, 0.745257, 0, 1.0};
Point(16) = {0.032102, 0.746262, 0, 1.0};
Point(17) = {0.026466, 0.747161, 0, 1.0};
Point(18) = {0.020866, 0.747948, 0, 1.0};
Point(19) = {0.015337, 0.748618, 0, 1.0};
Point(20) = {0.009914, 0.749164, 0, 1.0};
Point(21) = {0.004633, 0.749580, 0, 1.0};
Point(22) = {-0.000485, 0.749859, 0, 1.0};
Point(23) = {-0.005426, 0.750000, 0, 1.0};
Point(24) = {-0.010170, 0.749993, 0, 1.0};
Point(25) = {-0.014691, 0.749829, 0, 1.0};
Point(26) = {-0.018961, 0.749515, 0, 1.0};
Point(27) = {-0.022962, 0.749028, 0, 1.0};
Point(28) = {-0.026667, 0.748371, 0, 1.0};
Point(29) = {-0.030006, 0.747527, 0, 1.0};
Point(30) = {-0.032825, 0.746520, 0, 1.0};
Point(31) = {-0.034998, 0.745396, 0, 1.0};
Point(32) = {-0.036486, 0.744155, 0, 1.0};
Point(33) = {-0.037218, 0.742733, 0, 1.0};
Point(34) = {-0.036836, 0.741320, 0, 1.0};
Point(35) = {-0.035643, 0.740169, 0, 1.0};
Point(36) = {-0.033734, 0.739153, 0, 1.0};
Point(37) = {-0.031154, 0.738228, 0, 1.0};
Point(38) = {-0.028020, 0.737402, 0, 1.0};
Point(39) = {-0.024489, 0.736655, 0, 1.0};
Point(40) = {-0.020635, 0.735949, 0, 1.0};
Point(41) = {-0.016489, 0.735261, 0, 1.0};
Point(42) = {-0.012075, 0.734563, 0, 1.0};
Point(43) = {-0.007419, 0.733855, 0, 1.0};
Point(44) = {-0.002550, 0.733129, 0, 1.0};
Point(45) = {0.002511, 0.732385, 0, 1.0};
Point(46) = {0.007749, 0.731627, 0, 1.0};
Point(47) = {0.013144, 0.730858, 0, 1.0};
Point(48) = {0.018662, 0.730089, 0, 1.0};
Point(49) = {0.024265, 0.729327, 0, 1.0};
Point(50) = {0.029919, 0.728578, 0, 1.0};
Point(51) = {0.035594, 0.727849, 0, 1.0};
Point(52) = {0.041277, 0.727144, 0, 1.0};
Point(53) = {0.046974, 0.726465, 0, 1.0};
Point(54) = {0.052700, 0.725815, 0, 1.0};
Point(55) = {0.058487, 0.725195, 0, 1.0};
Point(56) = {0.064393, 0.724610, 0, 1.0};
Point(57) = {0.070391, 0.724080, 0, 1.0};
Point(58) = {0.076362, 0.723630, 0, 1.0};
Point(59) = {0.082097, 0.723288, 0, 1.0};
Point(60) = {0.087542, 0.723065, 0, 1.0};
Point(61) = {0.092494, 0.722965, 0, 1.0};
Point(62) = {0.097218, 0.723003, 0, 1.0};
Point(63) = {0.101865, 0.723242, 0, 1.0};
Point(64) = {0.106658, 0.723627, 0, 1.0};
Point(65) = {0.111630, 0.724171, 0, 1.0};
Point(66) = {-0.111676, -0.724544, 0, 1.0};
Point(67) = {-0.106935, -0.725870, 0, 1.0};
Point(68) = {-0.102357, -0.727227, 0, 1.0};
Point(69) = {-0.097910, -0.728616, 0, 1.0};
Point(70) = {-0.093376, -0.730109, 0, 1.0};
Point(71) = {-0.088606, -0.731683, 0, 1.0};
Point(72) = {-0.083345, -0.733394, 0, 1.0};
Point(73) = {-0.077784, -0.735149, 0, 1.0};
Point(74) = {-0.071975, -0.736911, 0, 1.0};
Point(75) = {-0.066120, -0.738598, 0, 1.0};
Point(76) = {-0.060335, -0.740168, 0, 1.0};
Point(77) = {-0.054650, -0.741608, 0, 1.0};
Point(78) = {-0.049007, -0.742932, 0, 1.0};
Point(79) = {-0.043376, -0.744148, 0, 1.0};
Point(80) = {-0.037743, -0.745257, 0, 1.0};
Point(81) = {-0.032102, -0.746262, 0, 1.0};
Point(82) = {-0.026466, -0.747161, 0, 1.0};
Point(83) = {-0.020866, -0.747948, 0, 1.0};
Point(84) = {-0.015337, -0.748618, 0, 1.0};
Point(85) = {-0.009914, -0.749164, 0, 1.0};
Point(86) = {-0.004633, -0.749580, 0, 1.0};
Point(87) = {0.000485, -0.749859, 0, 1.0};
Point(88) = {0.005426, -0.750000, 0, 1.0};
Point(89) = {0.010170, -0.749993, 0, 1.0};
Point(90) = {0.014691, -0.749829, 0, 1.0};
Point(91) = {0.018961, -0.749515, 0, 1.0};
Point(92) = {0.022962, -0.749028, 0, 1.0};
Point(93) = {0.026667, -0.748371, 0, 1.0};
Point(94) = {0.030006, -0.747527, 0, 1.0};
Point(95) = {0.032825, -0.746520, 0, 1.0};
Point(96) = {0.034998, -0.745396, 0, 1.0};
Point(97) = {0.036486, -0.744155, 0, 1.0};
Point(98) = {0.037218, -0.742733, 0, 1.0};
Point(99) = {0.036836, -0.741320, 0, 1.0};
Point(100) = {0.035643, -0.740169, 0, 1.0};
Point(101) = {0.033734, -0.739153, 0, 1.0};
Point(102) = {0.031154, -0.738228, 0, 1.0};
Point(103) = {0.028020, -0.737402, 0, 1.0};
Point(104) = {0.024489, -0.736655, 0, 1.0};
Point(105) = {0.020635, -0.735949, 0, 1.0};
Point(106) = {0.016489, -0.735261, 0, 1.0};
Point(107) = {0.012075, -0.734563, 0, 1.0};
Point(108) = {0.007419, -0.733855, 0, 1.0};
Point(109) = {0.002550, -0.733129, 0, 1.0};
Point(110) = {-0.002511, -0.732385, 0, 1.0};
Point(111) = {-0.007749, -0.731627, 0, 1.0};
Point(112) = {-0.013144, -0.730858, 0, 1.0};
Point(113) = {-0.018662, -0.730089, 0, 1.0};
Point(114) = {-0.024265, -0.729327, 0, 1.0};
Point(115) = {-0.029919, -0.728578, 0, 1.0};
Point(116) = {-0.035594, -0.727849, 0, 1.0};
Point(117) = {-0.041277, -0.727144, 0, 1.0};
Point(118) = {-0.046974, -0.726465, 0, 1.0};
Point(119) = {-0.052700, -0.725815, 0, 1.0};
Point(120) = {-0.058487, -0.725195, 0, 1.0};
Point(121) = {-0.064393, -0.724610, 0, 1.0};
Point(122) = {-0.070391, -0.724080, 0, 1.0};
Point(123) = {-0.076362, -0.723630, 0, 1.0};
Point(124) = {-0.082097, -0.723288, 0, 1.0};
Point(125) = {-0.087542, -0.723065, 0, 1.0};
Point(126) = {-0.092494, -0.722965, 0, 1.0};
Point(127) = {-0.097218, -0.723003, 0, 1.0};
Point(128) = {-0.101865, -0.723242, 0, 1.0};
Point(129) = {-0.106658, -0.723627, 0, 1.0};
Point(130) = {-0.111630, -0.724171, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
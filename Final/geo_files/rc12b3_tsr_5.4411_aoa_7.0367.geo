SetFactory("OpenCASCADE");

Point(1) = {0.074262, 0.733029, 0, 1.0};
Point(2) = {0.071101, 0.733914, 0, 1.0};
Point(3) = {0.068050, 0.734818, 0, 1.0};
Point(4) = {0.065085, 0.735744, 0, 1.0};
Point(5) = {0.062062, 0.736739, 0, 1.0};
Point(6) = {0.058882, 0.737789, 0, 1.0};
Point(7) = {0.055375, 0.738929, 0, 1.0};
Point(8) = {0.051668, 0.740099, 0, 1.0};
Point(9) = {0.047795, 0.741274, 0, 1.0};
Point(10) = {0.043892, 0.742399, 0, 1.0};
Point(11) = {0.040035, 0.743445, 0, 1.0};
Point(12) = {0.036245, 0.744405, 0, 1.0};
Point(13) = {0.032483, 0.745288, 0, 1.0};
Point(14) = {0.028729, 0.746098, 0, 1.0};
Point(15) = {0.024974, 0.746838, 0, 1.0};
Point(16) = {0.021213, 0.747508, 0, 1.0};
Point(17) = {0.017456, 0.748107, 0, 1.0};
Point(18) = {0.013723, 0.748632, 0, 1.0};
Point(19) = {0.010036, 0.749078, 0, 1.0};
Point(20) = {0.006421, 0.749443, 0, 1.0};
Point(21) = {0.002901, 0.749720, 0, 1.0};
Point(22) = {-0.000512, 0.749906, 0, 1.0};
Point(23) = {-0.003806, 0.750000, 0, 1.0};
Point(24) = {-0.006969, 0.749995, 0, 1.0};
Point(25) = {-0.009982, 0.749886, 0, 1.0};
Point(26) = {-0.012829, 0.749677, 0, 1.0};
Point(27) = {-0.015496, 0.749352, 0, 1.0};
Point(28) = {-0.017966, 0.748914, 0, 1.0};
Point(29) = {-0.020192, 0.748351, 0, 1.0};
Point(30) = {-0.022072, 0.747680, 0, 1.0};
Point(31) = {-0.023520, 0.746931, 0, 1.0};
Point(32) = {-0.024513, 0.746103, 0, 1.0};
Point(33) = {-0.025000, 0.745156, 0, 1.0};
Point(34) = {-0.024746, 0.744214, 0, 1.0};
Point(35) = {-0.023950, 0.743446, 0, 1.0};
Point(36) = {-0.022678, 0.742768, 0, 1.0};
Point(37) = {-0.020957, 0.742152, 0, 1.0};
Point(38) = {-0.018869, 0.741602, 0, 1.0};
Point(39) = {-0.016514, 0.741104, 0, 1.0};
Point(40) = {-0.013945, 0.740632, 0, 1.0};
Point(41) = {-0.011181, 0.740174, 0, 1.0};
Point(42) = {-0.008238, 0.739709, 0, 1.0};
Point(43) = {-0.005134, 0.739237, 0, 1.0};
Point(44) = {-0.001888, 0.738752, 0, 1.0};
Point(45) = {0.001486, 0.738257, 0, 1.0};
Point(46) = {0.004978, 0.737751, 0, 1.0};
Point(47) = {0.008575, 0.737239, 0, 1.0};
Point(48) = {0.012253, 0.736726, 0, 1.0};
Point(49) = {0.015988, 0.736218, 0, 1.0};
Point(50) = {0.019758, 0.735719, 0, 1.0};
Point(51) = {0.023541, 0.735233, 0, 1.0};
Point(52) = {0.027330, 0.734763, 0, 1.0};
Point(53) = {0.031128, 0.734310, 0, 1.0};
Point(54) = {0.034945, 0.733876, 0, 1.0};
Point(55) = {0.038803, 0.733463, 0, 1.0};
Point(56) = {0.042740, 0.733074, 0, 1.0};
Point(57) = {0.046739, 0.732720, 0, 1.0};
Point(58) = {0.050720, 0.732420, 0, 1.0};
Point(59) = {0.054543, 0.732192, 0, 1.0};
Point(60) = {0.058173, 0.732043, 0, 1.0};
Point(61) = {0.061474, 0.731977, 0, 1.0};
Point(62) = {0.064623, 0.732002, 0, 1.0};
Point(63) = {0.067722, 0.732161, 0, 1.0};
Point(64) = {0.070917, 0.732418, 0, 1.0};
Point(65) = {0.074231, 0.732781, 0, 1.0};
Point(66) = {-0.074262, -0.733029, 0, 1.0};
Point(67) = {-0.071101, -0.733914, 0, 1.0};
Point(68) = {-0.068050, -0.734818, 0, 1.0};
Point(69) = {-0.065085, -0.735744, 0, 1.0};
Point(70) = {-0.062062, -0.736739, 0, 1.0};
Point(71) = {-0.058882, -0.737789, 0, 1.0};
Point(72) = {-0.055375, -0.738929, 0, 1.0};
Point(73) = {-0.051668, -0.740099, 0, 1.0};
Point(74) = {-0.047795, -0.741274, 0, 1.0};
Point(75) = {-0.043892, -0.742399, 0, 1.0};
Point(76) = {-0.040035, -0.743445, 0, 1.0};
Point(77) = {-0.036245, -0.744405, 0, 1.0};
Point(78) = {-0.032483, -0.745288, 0, 1.0};
Point(79) = {-0.028729, -0.746098, 0, 1.0};
Point(80) = {-0.024974, -0.746838, 0, 1.0};
Point(81) = {-0.021213, -0.747508, 0, 1.0};
Point(82) = {-0.017456, -0.748107, 0, 1.0};
Point(83) = {-0.013723, -0.748632, 0, 1.0};
Point(84) = {-0.010036, -0.749078, 0, 1.0};
Point(85) = {-0.006421, -0.749443, 0, 1.0};
Point(86) = {-0.002901, -0.749720, 0, 1.0};
Point(87) = {0.000512, -0.749906, 0, 1.0};
Point(88) = {0.003806, -0.750000, 0, 1.0};
Point(89) = {0.006969, -0.749995, 0, 1.0};
Point(90) = {0.009982, -0.749886, 0, 1.0};
Point(91) = {0.012829, -0.749677, 0, 1.0};
Point(92) = {0.015496, -0.749352, 0, 1.0};
Point(93) = {0.017966, -0.748914, 0, 1.0};
Point(94) = {0.020192, -0.748351, 0, 1.0};
Point(95) = {0.022072, -0.747680, 0, 1.0};
Point(96) = {0.023520, -0.746931, 0, 1.0};
Point(97) = {0.024513, -0.746103, 0, 1.0};
Point(98) = {0.025000, -0.745156, 0, 1.0};
Point(99) = {0.024746, -0.744214, 0, 1.0};
Point(100) = {0.023950, -0.743446, 0, 1.0};
Point(101) = {0.022678, -0.742768, 0, 1.0};
Point(102) = {0.020957, -0.742152, 0, 1.0};
Point(103) = {0.018869, -0.741602, 0, 1.0};
Point(104) = {0.016514, -0.741104, 0, 1.0};
Point(105) = {0.013945, -0.740632, 0, 1.0};
Point(106) = {0.011181, -0.740174, 0, 1.0};
Point(107) = {0.008238, -0.739709, 0, 1.0};
Point(108) = {0.005134, -0.739237, 0, 1.0};
Point(109) = {0.001888, -0.738752, 0, 1.0};
Point(110) = {-0.001486, -0.738257, 0, 1.0};
Point(111) = {-0.004978, -0.737751, 0, 1.0};
Point(112) = {-0.008575, -0.737239, 0, 1.0};
Point(113) = {-0.012253, -0.736726, 0, 1.0};
Point(114) = {-0.015988, -0.736218, 0, 1.0};
Point(115) = {-0.019758, -0.735719, 0, 1.0};
Point(116) = {-0.023541, -0.735233, 0, 1.0};
Point(117) = {-0.027330, -0.734763, 0, 1.0};
Point(118) = {-0.031128, -0.734310, 0, 1.0};
Point(119) = {-0.034945, -0.733876, 0, 1.0};
Point(120) = {-0.038803, -0.733463, 0, 1.0};
Point(121) = {-0.042740, -0.733074, 0, 1.0};
Point(122) = {-0.046739, -0.732720, 0, 1.0};
Point(123) = {-0.050720, -0.732420, 0, 1.0};
Point(124) = {-0.054543, -0.732192, 0, 1.0};
Point(125) = {-0.058173, -0.732043, 0, 1.0};
Point(126) = {-0.061474, -0.731977, 0, 1.0};
Point(127) = {-0.064623, -0.732002, 0, 1.0};
Point(128) = {-0.067722, -0.732161, 0, 1.0};
Point(129) = {-0.070917, -0.732418, 0, 1.0};
Point(130) = {-0.074231, -0.732781, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149892, 0.727200, 0, 1.0};
Point(2) = {0.149207, 0.727426, 0, 1.0};
Point(3) = {0.147241, 0.728139, 0, 1.0};
Point(4) = {0.144189, 0.729337, 0, 1.0};
Point(5) = {0.140215, 0.730916, 0, 1.0};
Point(6) = {0.135405, 0.732755, 0, 1.0};
Point(7) = {0.129817, 0.734788, 0, 1.0};
Point(8) = {0.123570, 0.736947, 0, 1.0};
Point(9) = {0.116759, 0.739082, 0, 1.0};
Point(10) = {0.109381, 0.741086, 0, 1.0};
Point(11) = {0.101457, 0.742918, 0, 1.0};
Point(12) = {0.093030, 0.744550, 0, 1.0};
Point(13) = {0.084154, 0.745970, 0, 1.0};
Point(14) = {0.074900, 0.747173, 0, 1.0};
Point(15) = {0.065354, 0.748168, 0, 1.0};
Point(16) = {0.055622, 0.748953, 0, 1.0};
Point(17) = {0.045806, 0.749522, 0, 1.0};
Point(18) = {0.036014, 0.749872, 0, 1.0};
Point(19) = {0.026351, 0.750000, 0, 1.0};
Point(20) = {0.016921, 0.749900, 0, 1.0};
Point(21) = {0.007825, 0.749571, 0, 1.0};
Point(22) = {-0.000849, 0.749004, 0, 1.0};
Point(23) = {-0.009019, 0.748203, 0, 1.0};
Point(24) = {-0.016613, 0.747186, 0, 1.0};
Point(25) = {-0.023555, 0.745961, 0, 1.0};
Point(26) = {-0.029793, 0.744550, 0, 1.0};
Point(27) = {-0.035271, 0.742987, 0, 1.0};
Point(28) = {-0.039935, 0.741298, 0, 1.0};
Point(29) = {-0.043766, 0.739523, 0, 1.0};
Point(30) = {-0.046722, 0.737729, 0, 1.0};
Point(31) = {-0.048771, 0.735976, 0, 1.0};
Point(32) = {-0.049885, 0.734361, 0, 1.0};
Point(33) = {-0.049819, 0.733002, 0, 1.0};
Point(34) = {-0.048473, 0.731713, 0, 1.0};
Point(35) = {-0.046015, 0.730336, 0, 1.0};
Point(36) = {-0.042535, 0.728939, 0, 1.0};
Point(37) = {-0.038086, 0.727560, 0, 1.0};
Point(38) = {-0.032725, 0.726228, 0, 1.0};
Point(39) = {-0.026517, 0.724960, 0, 1.0};
Point(40) = {-0.019547, 0.723778, 0, 1.0};
Point(41) = {-0.011896, 0.722707, 0, 1.0};
Point(42) = {-0.003658, 0.721772, 0, 1.0};
Point(43) = {0.005066, 0.721004, 0, 1.0};
Point(44) = {0.014172, 0.720433, 0, 1.0};
Point(45) = {0.023554, 0.720104, 0, 1.0};
Point(46) = {0.033130, 0.720083, 0, 1.0};
Point(47) = {0.042843, 0.720417, 0, 1.0};
Point(48) = {0.052666, 0.721151, 0, 1.0};
Point(49) = {0.062610, 0.722272, 0, 1.0};
Point(50) = {0.072690, 0.723735, 0, 1.0};
Point(51) = {0.082940, 0.725383, 0, 1.0};
Point(52) = {0.093269, 0.726960, 0, 1.0};
Point(53) = {0.103444, 0.728270, 0, 1.0};
Point(54) = {0.113208, 0.729206, 0, 1.0};
Point(55) = {0.122303, 0.729709, 0, 1.0};
Point(56) = {0.130474, 0.729772, 0, 1.0};
Point(57) = {0.137480, 0.729419, 0, 1.0};
Point(58) = {0.143040, 0.728728, 0, 1.0};
Point(59) = {0.146935, 0.727953, 0, 1.0};
Point(60) = {0.149172, 0.727394, 0, 1.0};
Point(61) = {-0.149892, -0.727200, 0, 1.0};
Point(62) = {-0.149207, -0.727426, 0, 1.0};
Point(63) = {-0.147241, -0.728139, 0, 1.0};
Point(64) = {-0.144189, -0.729337, 0, 1.0};
Point(65) = {-0.140215, -0.730916, 0, 1.0};
Point(66) = {-0.135405, -0.732755, 0, 1.0};
Point(67) = {-0.129817, -0.734788, 0, 1.0};
Point(68) = {-0.123570, -0.736947, 0, 1.0};
Point(69) = {-0.116759, -0.739082, 0, 1.0};
Point(70) = {-0.109381, -0.741086, 0, 1.0};
Point(71) = {-0.101457, -0.742918, 0, 1.0};
Point(72) = {-0.093030, -0.744550, 0, 1.0};
Point(73) = {-0.084154, -0.745970, 0, 1.0};
Point(74) = {-0.074900, -0.747173, 0, 1.0};
Point(75) = {-0.065354, -0.748168, 0, 1.0};
Point(76) = {-0.055622, -0.748953, 0, 1.0};
Point(77) = {-0.045806, -0.749522, 0, 1.0};
Point(78) = {-0.036014, -0.749872, 0, 1.0};
Point(79) = {-0.026351, -0.750000, 0, 1.0};
Point(80) = {-0.016921, -0.749900, 0, 1.0};
Point(81) = {-0.007825, -0.749571, 0, 1.0};
Point(82) = {0.000849, -0.749004, 0, 1.0};
Point(83) = {0.009019, -0.748203, 0, 1.0};
Point(84) = {0.016613, -0.747186, 0, 1.0};
Point(85) = {0.023555, -0.745961, 0, 1.0};
Point(86) = {0.029793, -0.744550, 0, 1.0};
Point(87) = {0.035271, -0.742987, 0, 1.0};
Point(88) = {0.039935, -0.741298, 0, 1.0};
Point(89) = {0.043766, -0.739523, 0, 1.0};
Point(90) = {0.046722, -0.737729, 0, 1.0};
Point(91) = {0.048771, -0.735976, 0, 1.0};
Point(92) = {0.049885, -0.734361, 0, 1.0};
Point(93) = {0.049819, -0.733002, 0, 1.0};
Point(94) = {0.048473, -0.731713, 0, 1.0};
Point(95) = {0.046015, -0.730336, 0, 1.0};
Point(96) = {0.042535, -0.728939, 0, 1.0};
Point(97) = {0.038086, -0.727560, 0, 1.0};
Point(98) = {0.032725, -0.726228, 0, 1.0};
Point(99) = {0.026517, -0.724960, 0, 1.0};
Point(100) = {0.019547, -0.723778, 0, 1.0};
Point(101) = {0.011896, -0.722707, 0, 1.0};
Point(102) = {0.003658, -0.721772, 0, 1.0};
Point(103) = {-0.005066, -0.721004, 0, 1.0};
Point(104) = {-0.014172, -0.720433, 0, 1.0};
Point(105) = {-0.023554, -0.720104, 0, 1.0};
Point(106) = {-0.033130, -0.720083, 0, 1.0};
Point(107) = {-0.042843, -0.720417, 0, 1.0};
Point(108) = {-0.052666, -0.721151, 0, 1.0};
Point(109) = {-0.062610, -0.722272, 0, 1.0};
Point(110) = {-0.072690, -0.723735, 0, 1.0};
Point(111) = {-0.082940, -0.725383, 0, 1.0};
Point(112) = {-0.093269, -0.726960, 0, 1.0};
Point(113) = {-0.103444, -0.728270, 0, 1.0};
Point(114) = {-0.113208, -0.729206, 0, 1.0};
Point(115) = {-0.122303, -0.729709, 0, 1.0};
Point(116) = {-0.130474, -0.729772, 0, 1.0};
Point(117) = {-0.137480, -0.729419, 0, 1.0};
Point(118) = {-0.143040, -0.728728, 0, 1.0};
Point(119) = {-0.146935, -0.727953, 0, 1.0};
Point(120) = {-0.149172, -0.727394, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
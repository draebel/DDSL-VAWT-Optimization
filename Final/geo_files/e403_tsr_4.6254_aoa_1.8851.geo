SetFactory("OpenCASCADE");

Point(1) = {0.074945, 0.732892, 0, 1.0};
Point(2) = {0.074431, 0.733062, 0, 1.0};
Point(3) = {0.072956, 0.733597, 0, 1.0};
Point(4) = {0.070666, 0.734495, 0, 1.0};
Point(5) = {0.067684, 0.735680, 0, 1.0};
Point(6) = {0.064074, 0.737060, 0, 1.0};
Point(7) = {0.059881, 0.738586, 0, 1.0};
Point(8) = {0.055194, 0.740205, 0, 1.0};
Point(9) = {0.050083, 0.741808, 0, 1.0};
Point(10) = {0.044547, 0.743311, 0, 1.0};
Point(11) = {0.038601, 0.744686, 0, 1.0};
Point(12) = {0.032278, 0.745910, 0, 1.0};
Point(13) = {0.025618, 0.746976, 0, 1.0};
Point(14) = {0.018674, 0.747879, 0, 1.0};
Point(15) = {0.011511, 0.748625, 0, 1.0};
Point(16) = {0.004209, 0.749214, 0, 1.0};
Point(17) = {-0.003157, 0.749641, 0, 1.0};
Point(18) = {-0.010504, 0.749904, 0, 1.0};
Point(19) = {-0.017755, 0.750000, 0, 1.0};
Point(20) = {-0.024831, 0.749925, 0, 1.0};
Point(21) = {-0.031656, 0.749678, 0, 1.0};
Point(22) = {-0.038165, 0.749253, 0, 1.0};
Point(23) = {-0.044296, 0.748651, 0, 1.0};
Point(24) = {-0.049994, 0.747888, 0, 1.0};
Point(25) = {-0.055203, 0.746970, 0, 1.0};
Point(26) = {-0.059883, 0.745910, 0, 1.0};
Point(27) = {-0.063994, 0.744738, 0, 1.0};
Point(28) = {-0.067494, 0.743470, 0, 1.0};
Point(29) = {-0.070368, 0.742138, 0, 1.0};
Point(30) = {-0.072586, 0.740792, 0, 1.0};
Point(31) = {-0.074124, 0.739477, 0, 1.0};
Point(32) = {-0.074959, 0.738265, 0, 1.0};
Point(33) = {-0.074910, 0.737246, 0, 1.0};
Point(34) = {-0.073900, 0.736279, 0, 1.0};
Point(35) = {-0.072056, 0.735245, 0, 1.0};
Point(36) = {-0.069445, 0.734196, 0, 1.0};
Point(37) = {-0.066106, 0.733162, 0, 1.0};
Point(38) = {-0.062083, 0.732163, 0, 1.0};
Point(39) = {-0.057425, 0.731211, 0, 1.0};
Point(40) = {-0.052195, 0.730324, 0, 1.0};
Point(41) = {-0.046454, 0.729521, 0, 1.0};
Point(42) = {-0.040273, 0.728819, 0, 1.0};
Point(43) = {-0.033727, 0.728243, 0, 1.0};
Point(44) = {-0.026894, 0.727814, 0, 1.0};
Point(45) = {-0.019854, 0.727567, 0, 1.0};
Point(46) = {-0.012668, 0.727551, 0, 1.0};
Point(47) = {-0.005380, 0.727802, 0, 1.0};
Point(48) = {0.001991, 0.728353, 0, 1.0};
Point(49) = {0.009453, 0.729194, 0, 1.0};
Point(50) = {0.017016, 0.730292, 0, 1.0};
Point(51) = {0.024707, 0.731529, 0, 1.0};
Point(52) = {0.032458, 0.732712, 0, 1.0};
Point(53) = {0.040092, 0.733695, 0, 1.0};
Point(54) = {0.047419, 0.734397, 0, 1.0};
Point(55) = {0.054244, 0.734774, 0, 1.0};
Point(56) = {0.060375, 0.734822, 0, 1.0};
Point(57) = {0.065632, 0.734557, 0, 1.0};
Point(58) = {0.069804, 0.734038, 0, 1.0};
Point(59) = {0.072726, 0.733457, 0, 1.0};
Point(60) = {0.074405, 0.733037, 0, 1.0};
Point(61) = {-0.074945, -0.732892, 0, 1.0};
Point(62) = {-0.074431, -0.733062, 0, 1.0};
Point(63) = {-0.072956, -0.733597, 0, 1.0};
Point(64) = {-0.070666, -0.734495, 0, 1.0};
Point(65) = {-0.067684, -0.735680, 0, 1.0};
Point(66) = {-0.064074, -0.737060, 0, 1.0};
Point(67) = {-0.059881, -0.738586, 0, 1.0};
Point(68) = {-0.055194, -0.740205, 0, 1.0};
Point(69) = {-0.050083, -0.741808, 0, 1.0};
Point(70) = {-0.044547, -0.743311, 0, 1.0};
Point(71) = {-0.038601, -0.744686, 0, 1.0};
Point(72) = {-0.032278, -0.745910, 0, 1.0};
Point(73) = {-0.025618, -0.746976, 0, 1.0};
Point(74) = {-0.018674, -0.747879, 0, 1.0};
Point(75) = {-0.011511, -0.748625, 0, 1.0};
Point(76) = {-0.004209, -0.749214, 0, 1.0};
Point(77) = {0.003157, -0.749641, 0, 1.0};
Point(78) = {0.010504, -0.749904, 0, 1.0};
Point(79) = {0.017755, -0.750000, 0, 1.0};
Point(80) = {0.024831, -0.749925, 0, 1.0};
Point(81) = {0.031656, -0.749678, 0, 1.0};
Point(82) = {0.038165, -0.749253, 0, 1.0};
Point(83) = {0.044296, -0.748651, 0, 1.0};
Point(84) = {0.049994, -0.747888, 0, 1.0};
Point(85) = {0.055203, -0.746970, 0, 1.0};
Point(86) = {0.059883, -0.745910, 0, 1.0};
Point(87) = {0.063994, -0.744738, 0, 1.0};
Point(88) = {0.067494, -0.743470, 0, 1.0};
Point(89) = {0.070368, -0.742138, 0, 1.0};
Point(90) = {0.072586, -0.740792, 0, 1.0};
Point(91) = {0.074124, -0.739477, 0, 1.0};
Point(92) = {0.074959, -0.738265, 0, 1.0};
Point(93) = {0.074910, -0.737246, 0, 1.0};
Point(94) = {0.073900, -0.736279, 0, 1.0};
Point(95) = {0.072056, -0.735245, 0, 1.0};
Point(96) = {0.069445, -0.734196, 0, 1.0};
Point(97) = {0.066106, -0.733162, 0, 1.0};
Point(98) = {0.062083, -0.732163, 0, 1.0};
Point(99) = {0.057425, -0.731211, 0, 1.0};
Point(100) = {0.052195, -0.730324, 0, 1.0};
Point(101) = {0.046454, -0.729521, 0, 1.0};
Point(102) = {0.040273, -0.728819, 0, 1.0};
Point(103) = {0.033727, -0.728243, 0, 1.0};
Point(104) = {0.026894, -0.727814, 0, 1.0};
Point(105) = {0.019854, -0.727567, 0, 1.0};
Point(106) = {0.012668, -0.727551, 0, 1.0};
Point(107) = {0.005380, -0.727802, 0, 1.0};
Point(108) = {-0.001991, -0.728353, 0, 1.0};
Point(109) = {-0.009453, -0.729194, 0, 1.0};
Point(110) = {-0.017016, -0.730292, 0, 1.0};
Point(111) = {-0.024707, -0.731529, 0, 1.0};
Point(112) = {-0.032458, -0.732712, 0, 1.0};
Point(113) = {-0.040092, -0.733695, 0, 1.0};
Point(114) = {-0.047419, -0.734397, 0, 1.0};
Point(115) = {-0.054244, -0.734774, 0, 1.0};
Point(116) = {-0.060375, -0.734822, 0, 1.0};
Point(117) = {-0.065632, -0.734557, 0, 1.0};
Point(118) = {-0.069804, -0.734038, 0, 1.0};
Point(119) = {-0.072726, -0.733457, 0, 1.0};
Point(120) = {-0.074405, -0.733037, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074361, 0.724042, 0, 1.0};
Point(2) = {0.071976, 0.725017, 0, 1.0};
Point(3) = {0.068904, 0.726247, 0, 1.0};
Point(4) = {0.065205, 0.727693, 0, 1.0};
Point(5) = {0.060911, 0.729312, 0, 1.0};
Point(6) = {0.056059, 0.731059, 0, 1.0};
Point(7) = {0.050695, 0.732916, 0, 1.0};
Point(8) = {0.044861, 0.734795, 0, 1.0};
Point(9) = {0.038605, 0.736622, 0, 1.0};
Point(10) = {0.031985, 0.738369, 0, 1.0};
Point(11) = {0.025073, 0.740064, 0, 1.0};
Point(12) = {0.017933, 0.741681, 0, 1.0};
Point(13) = {0.010631, 0.743190, 0, 1.0};
Point(14) = {0.003237, 0.744569, 0, 1.0};
Point(15) = {-0.004177, 0.745802, 0, 1.0};
Point(16) = {-0.011541, 0.746877, 0, 1.0};
Point(17) = {-0.018784, 0.747788, 0, 1.0};
Point(18) = {-0.025833, 0.748540, 0, 1.0};
Point(19) = {-0.032619, 0.749136, 0, 1.0};
Point(20) = {-0.039076, 0.749577, 0, 1.0};
Point(21) = {-0.045140, 0.749866, 0, 1.0};
Point(22) = {-0.050754, 0.750000, 0, 1.0};
Point(23) = {-0.055863, 0.749976, 0, 1.0};
Point(24) = {-0.060419, 0.749784, 0, 1.0};
Point(25) = {-0.064381, 0.749420, 0, 1.0};
Point(26) = {-0.067710, 0.748876, 0, 1.0};
Point(27) = {-0.070376, 0.748149, 0, 1.0};
Point(28) = {-0.072356, 0.747235, 0, 1.0};
Point(29) = {-0.073631, 0.746136, 0, 1.0};
Point(30) = {-0.074225, 0.744611, 0, 1.0};
Point(31) = {-0.074027, 0.743402, 0, 1.0};
Point(32) = {-0.073103, 0.742082, 0, 1.0};
Point(33) = {-0.071446, 0.740769, 0, 1.0};
Point(34) = {-0.069070, 0.739493, 0, 1.0};
Point(35) = {-0.066001, 0.738238, 0, 1.0};
Point(36) = {-0.062272, 0.736999, 0, 1.0};
Point(37) = {-0.057922, 0.735768, 0, 1.0};
Point(38) = {-0.052994, 0.734543, 0, 1.0};
Point(39) = {-0.047537, 0.733327, 0, 1.0};
Point(40) = {-0.041605, 0.732124, 0, 1.0};
Point(41) = {-0.035255, 0.730942, 0, 1.0};
Point(42) = {-0.028549, 0.729797, 0, 1.0};
Point(43) = {-0.021549, 0.728705, 0, 1.0};
Point(44) = {-0.014322, 0.727688, 0, 1.0};
Point(45) = {-0.006935, 0.726766, 0, 1.0};
Point(46) = {0.000540, 0.725950, 0, 1.0};
Point(47) = {0.008032, 0.725249, 0, 1.0};
Point(48) = {0.015467, 0.724663, 0, 1.0};
Point(49) = {0.022774, 0.724196, 0, 1.0};
Point(50) = {0.029877, 0.723818, 0, 1.0};
Point(51) = {0.036707, 0.723528, 0, 1.0};
Point(52) = {0.043188, 0.723251, 0, 1.0};
Point(53) = {0.049261, 0.723019, 0, 1.0};
Point(54) = {0.054869, 0.722848, 0, 1.0};
Point(55) = {0.059954, 0.722710, 0, 1.0};
Point(56) = {0.064469, 0.722613, 0, 1.0};
Point(57) = {0.068371, 0.722565, 0, 1.0};
Point(58) = {0.071618, 0.722545, 0, 1.0};
Point(59) = {0.074142, 0.722527, 0, 1.0};
Point(60) = {-0.074361, -0.724042, 0, 1.0};
Point(61) = {-0.071976, -0.725017, 0, 1.0};
Point(62) = {-0.068904, -0.726247, 0, 1.0};
Point(63) = {-0.065205, -0.727693, 0, 1.0};
Point(64) = {-0.060911, -0.729312, 0, 1.0};
Point(65) = {-0.056059, -0.731059, 0, 1.0};
Point(66) = {-0.050695, -0.732916, 0, 1.0};
Point(67) = {-0.044861, -0.734795, 0, 1.0};
Point(68) = {-0.038605, -0.736622, 0, 1.0};
Point(69) = {-0.031985, -0.738369, 0, 1.0};
Point(70) = {-0.025073, -0.740064, 0, 1.0};
Point(71) = {-0.017933, -0.741681, 0, 1.0};
Point(72) = {-0.010631, -0.743190, 0, 1.0};
Point(73) = {-0.003237, -0.744569, 0, 1.0};
Point(74) = {0.004177, -0.745802, 0, 1.0};
Point(75) = {0.011541, -0.746877, 0, 1.0};
Point(76) = {0.018784, -0.747788, 0, 1.0};
Point(77) = {0.025833, -0.748540, 0, 1.0};
Point(78) = {0.032619, -0.749136, 0, 1.0};
Point(79) = {0.039076, -0.749577, 0, 1.0};
Point(80) = {0.045140, -0.749866, 0, 1.0};
Point(81) = {0.050754, -0.750000, 0, 1.0};
Point(82) = {0.055863, -0.749976, 0, 1.0};
Point(83) = {0.060419, -0.749784, 0, 1.0};
Point(84) = {0.064381, -0.749420, 0, 1.0};
Point(85) = {0.067710, -0.748876, 0, 1.0};
Point(86) = {0.070376, -0.748149, 0, 1.0};
Point(87) = {0.072356, -0.747235, 0, 1.0};
Point(88) = {0.073631, -0.746136, 0, 1.0};
Point(89) = {0.074225, -0.744611, 0, 1.0};
Point(90) = {0.074027, -0.743402, 0, 1.0};
Point(91) = {0.073103, -0.742082, 0, 1.0};
Point(92) = {0.071446, -0.740769, 0, 1.0};
Point(93) = {0.069070, -0.739493, 0, 1.0};
Point(94) = {0.066001, -0.738238, 0, 1.0};
Point(95) = {0.062272, -0.736999, 0, 1.0};
Point(96) = {0.057922, -0.735768, 0, 1.0};
Point(97) = {0.052994, -0.734543, 0, 1.0};
Point(98) = {0.047537, -0.733327, 0, 1.0};
Point(99) = {0.041605, -0.732124, 0, 1.0};
Point(100) = {0.035255, -0.730942, 0, 1.0};
Point(101) = {0.028549, -0.729797, 0, 1.0};
Point(102) = {0.021549, -0.728705, 0, 1.0};
Point(103) = {0.014322, -0.727688, 0, 1.0};
Point(104) = {0.006935, -0.726766, 0, 1.0};
Point(105) = {-0.000540, -0.725950, 0, 1.0};
Point(106) = {-0.008032, -0.725249, 0, 1.0};
Point(107) = {-0.015467, -0.724663, 0, 1.0};
Point(108) = {-0.022774, -0.724196, 0, 1.0};
Point(109) = {-0.029877, -0.723818, 0, 1.0};
Point(110) = {-0.036707, -0.723528, 0, 1.0};
Point(111) = {-0.043188, -0.723251, 0, 1.0};
Point(112) = {-0.049261, -0.723019, 0, 1.0};
Point(113) = {-0.054869, -0.722848, 0, 1.0};
Point(114) = {-0.059954, -0.722710, 0, 1.0};
Point(115) = {-0.064469, -0.722613, 0, 1.0};
Point(116) = {-0.068371, -0.722565, 0, 1.0};
Point(117) = {-0.071618, -0.722545, 0, 1.0};
Point(118) = {-0.074142, -0.722527, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:41};
Spline(3) = {41:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:78};
Spline(6) = {78:100};
Spline(7) = {100:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
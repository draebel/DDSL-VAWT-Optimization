SetFactory("OpenCASCADE");

Point(1) = {0.149780, 0.742210, 0, 1.0};
Point(2) = {0.143405, 0.742763, 0, 1.0};
Point(3) = {0.136976, 0.743378, 0, 1.0};
Point(4) = {0.130493, 0.744110, 0, 1.0};
Point(5) = {0.123797, 0.744873, 0, 1.0};
Point(6) = {0.116837, 0.745655, 0, 1.0};
Point(7) = {0.109552, 0.746439, 0, 1.0};
Point(8) = {0.101876, 0.747210, 0, 1.0};
Point(9) = {0.093929, 0.747928, 0, 1.0};
Point(10) = {0.085981, 0.748552, 0, 1.0};
Point(11) = {0.078154, 0.749065, 0, 1.0};
Point(12) = {0.070466, 0.749464, 0, 1.0};
Point(13) = {0.062843, 0.749753, 0, 1.0};
Point(14) = {0.055233, 0.749931, 0, 1.0};
Point(15) = {0.047620, 0.750000, 0, 1.0};
Point(16) = {0.039990, 0.749960, 0, 1.0};
Point(17) = {0.032365, 0.749813, 0, 1.0};
Point(18) = {0.024787, 0.749561, 0, 1.0};
Point(19) = {0.017320, 0.749202, 0, 1.0};
Point(20) = {0.010029, 0.748742, 0, 1.0};
Point(21) = {0.002975, 0.748179, 0, 1.0};
Point(22) = {-0.003812, 0.747508, 0, 1.0};
Point(23) = {-0.010313, 0.746732, 0, 1.0};
Point(24) = {-0.016507, 0.745846, 0, 1.0};
Point(25) = {-0.022364, 0.744836, 0, 1.0};
Point(26) = {-0.027859, 0.743723, 0, 1.0};
Point(27) = {-0.032970, 0.742473, 0, 1.0};
Point(28) = {-0.037667, 0.741098, 0, 1.0};
Point(29) = {-0.041869, 0.739585, 0, 1.0};
Point(30) = {-0.045421, 0.737961, 0, 1.0};
Point(31) = {-0.047970, 0.736320, 0, 1.0};
Point(32) = {-0.049462, 0.734663, 0, 1.0};
Point(33) = {-0.050000, 0.732825, 0, 1.0};
Point(34) = {-0.049312, 0.731324, 0, 1.0};
Point(35) = {-0.047705, 0.730466, 0, 1.0};
Point(36) = {-0.045053, 0.729807, 0, 1.0};
Point(37) = {-0.041405, 0.729309, 0, 1.0};
Point(38) = {-0.037120, 0.728996, 0, 1.0};
Point(39) = {-0.032353, 0.728817, 0, 1.0};
Point(40) = {-0.027182, 0.728729, 0, 1.0};
Point(41) = {-0.021635, 0.728709, 0, 1.0};
Point(42) = {-0.015734, 0.728733, 0, 1.0};
Point(43) = {-0.009503, 0.728802, 0, 1.0};
Point(44) = {-0.002971, 0.728903, 0, 1.0};
Point(45) = {0.003840, 0.729037, 0, 1.0};
Point(46) = {0.010912, 0.729202, 0, 1.0};
Point(47) = {0.018214, 0.729402, 0, 1.0};
Point(48) = {0.025687, 0.729635, 0, 1.0};
Point(49) = {0.033265, 0.729906, 0, 1.0};
Point(50) = {0.040883, 0.730210, 0, 1.0};
Point(51) = {0.048499, 0.730548, 0, 1.0};
Point(52) = {0.056092, 0.730919, 0, 1.0};
Point(53) = {0.063675, 0.731328, 0, 1.0};
Point(54) = {0.071265, 0.731776, 0, 1.0};
Point(55) = {0.078912, 0.732274, 0, 1.0};
Point(56) = {0.086691, 0.732836, 0, 1.0};
Point(57) = {0.094582, 0.733473, 0, 1.0};
Point(58) = {0.102464, 0.734191, 0, 1.0};
Point(59) = {0.110070, 0.734979, 0, 1.0};
Point(60) = {0.117281, 0.735833, 0, 1.0};
Point(61) = {0.124163, 0.736771, 0, 1.0};
Point(62) = {0.130778, 0.737800, 0, 1.0};
Point(63) = {0.137177, 0.738936, 0, 1.0};
Point(64) = {0.143516, 0.740300, 0, 1.0};
Point(65) = {0.149798, 0.741811, 0, 1.0};
Point(66) = {-0.149780, -0.742210, 0, 1.0};
Point(67) = {-0.143405, -0.742763, 0, 1.0};
Point(68) = {-0.136976, -0.743378, 0, 1.0};
Point(69) = {-0.130493, -0.744110, 0, 1.0};
Point(70) = {-0.123797, -0.744873, 0, 1.0};
Point(71) = {-0.116837, -0.745655, 0, 1.0};
Point(72) = {-0.109552, -0.746439, 0, 1.0};
Point(73) = {-0.101876, -0.747210, 0, 1.0};
Point(74) = {-0.093929, -0.747928, 0, 1.0};
Point(75) = {-0.085981, -0.748552, 0, 1.0};
Point(76) = {-0.078154, -0.749065, 0, 1.0};
Point(77) = {-0.070466, -0.749464, 0, 1.0};
Point(78) = {-0.062843, -0.749753, 0, 1.0};
Point(79) = {-0.055233, -0.749931, 0, 1.0};
Point(80) = {-0.047620, -0.750000, 0, 1.0};
Point(81) = {-0.039990, -0.749960, 0, 1.0};
Point(82) = {-0.032365, -0.749813, 0, 1.0};
Point(83) = {-0.024787, -0.749561, 0, 1.0};
Point(84) = {-0.017320, -0.749202, 0, 1.0};
Point(85) = {-0.010029, -0.748742, 0, 1.0};
Point(86) = {-0.002975, -0.748179, 0, 1.0};
Point(87) = {0.003812, -0.747508, 0, 1.0};
Point(88) = {0.010313, -0.746732, 0, 1.0};
Point(89) = {0.016507, -0.745846, 0, 1.0};
Point(90) = {0.022364, -0.744836, 0, 1.0};
Point(91) = {0.027859, -0.743723, 0, 1.0};
Point(92) = {0.032970, -0.742473, 0, 1.0};
Point(93) = {0.037667, -0.741098, 0, 1.0};
Point(94) = {0.041869, -0.739585, 0, 1.0};
Point(95) = {0.045421, -0.737961, 0, 1.0};
Point(96) = {0.047970, -0.736320, 0, 1.0};
Point(97) = {0.049462, -0.734663, 0, 1.0};
Point(98) = {0.050000, -0.732825, 0, 1.0};
Point(99) = {0.049312, -0.731324, 0, 1.0};
Point(100) = {0.047705, -0.730466, 0, 1.0};
Point(101) = {0.045053, -0.729807, 0, 1.0};
Point(102) = {0.041405, -0.729309, 0, 1.0};
Point(103) = {0.037120, -0.728996, 0, 1.0};
Point(104) = {0.032353, -0.728817, 0, 1.0};
Point(105) = {0.027182, -0.728729, 0, 1.0};
Point(106) = {0.021635, -0.728709, 0, 1.0};
Point(107) = {0.015734, -0.728733, 0, 1.0};
Point(108) = {0.009503, -0.728802, 0, 1.0};
Point(109) = {0.002971, -0.728903, 0, 1.0};
Point(110) = {-0.003840, -0.729037, 0, 1.0};
Point(111) = {-0.010912, -0.729202, 0, 1.0};
Point(112) = {-0.018214, -0.729402, 0, 1.0};
Point(113) = {-0.025687, -0.729635, 0, 1.0};
Point(114) = {-0.033265, -0.729906, 0, 1.0};
Point(115) = {-0.040883, -0.730210, 0, 1.0};
Point(116) = {-0.048499, -0.730548, 0, 1.0};
Point(117) = {-0.056092, -0.730919, 0, 1.0};
Point(118) = {-0.063675, -0.731328, 0, 1.0};
Point(119) = {-0.071265, -0.731776, 0, 1.0};
Point(120) = {-0.078912, -0.732274, 0, 1.0};
Point(121) = {-0.086691, -0.732836, 0, 1.0};
Point(122) = {-0.094582, -0.733473, 0, 1.0};
Point(123) = {-0.102464, -0.734191, 0, 1.0};
Point(124) = {-0.110070, -0.734979, 0, 1.0};
Point(125) = {-0.117281, -0.735833, 0, 1.0};
Point(126) = {-0.124163, -0.736771, 0, 1.0};
Point(127) = {-0.130778, -0.737800, 0, 1.0};
Point(128) = {-0.137177, -0.738936, 0, 1.0};
Point(129) = {-0.143516, -0.740300, 0, 1.0};
Point(130) = {-0.149798, -0.741811, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
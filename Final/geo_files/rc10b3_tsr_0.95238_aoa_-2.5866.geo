SetFactory("OpenCASCADE");

Point(1) = {0.074889, 0.744339, 0, 1.0};
Point(2) = {0.073683, 0.744440, 0, 1.0};
Point(3) = {0.068743, 0.744912, 0, 1.0};
Point(4) = {0.063762, 0.745474, 0, 1.0};
Point(5) = {0.058617, 0.746060, 0, 1.0};
Point(6) = {0.053269, 0.746662, 0, 1.0};
Point(7) = {0.047672, 0.747264, 0, 1.0};
Point(8) = {0.041773, 0.747856, 0, 1.0};
Point(9) = {0.035667, 0.748408, 0, 1.0};
Point(10) = {0.029560, 0.748887, 0, 1.0};
Point(11) = {0.023546, 0.749282, 0, 1.0};
Point(12) = {0.017639, 0.749589, 0, 1.0};
Point(13) = {0.011782, 0.749810, 0, 1.0};
Point(14) = {0.005934, 0.749947, 0, 1.0};
Point(15) = {0.000085, 0.750000, 0, 1.0};
Point(16) = {-0.005778, 0.749969, 0, 1.0};
Point(17) = {-0.011637, 0.749857, 0, 1.0};
Point(18) = {-0.017460, 0.749663, 0, 1.0};
Point(19) = {-0.023197, 0.749387, 0, 1.0};
Point(20) = {-0.028799, 0.749034, 0, 1.0};
Point(21) = {-0.034219, 0.748601, 0, 1.0};
Point(22) = {-0.039434, 0.748085, 0, 1.0};
Point(23) = {-0.044429, 0.747489, 0, 1.0};
Point(24) = {-0.049189, 0.746808, 0, 1.0};
Point(25) = {-0.053689, 0.746032, 0, 1.0};
Point(26) = {-0.057911, 0.745177, 0, 1.0};
Point(27) = {-0.061838, 0.744217, 0, 1.0};
Point(28) = {-0.065447, 0.743160, 0, 1.0};
Point(29) = {-0.068676, 0.741997, 0, 1.0};
Point(30) = {-0.071405, 0.740749, 0, 1.0};
Point(31) = {-0.073364, 0.739489, 0, 1.0};
Point(32) = {-0.074511, 0.738216, 0, 1.0};
Point(33) = {-0.074924, 0.736803, 0, 1.0};
Point(34) = {-0.074395, 0.735650, 0, 1.0};
Point(35) = {-0.073160, 0.734991, 0, 1.0};
Point(36) = {-0.071122, 0.734484, 0, 1.0};
Point(37) = {-0.068319, 0.734102, 0, 1.0};
Point(38) = {-0.065027, 0.733861, 0, 1.0};
Point(39) = {-0.061364, 0.733724, 0, 1.0};
Point(40) = {-0.057391, 0.733656, 0, 1.0};
Point(41) = {-0.053129, 0.733641, 0, 1.0};
Point(42) = {-0.048595, 0.733659, 0, 1.0};
Point(43) = {-0.043807, 0.733712, 0, 1.0};
Point(44) = {-0.038788, 0.733790, 0, 1.0};
Point(45) = {-0.033555, 0.733893, 0, 1.0};
Point(46) = {-0.028121, 0.734020, 0, 1.0};
Point(47) = {-0.022510, 0.734173, 0, 1.0};
Point(48) = {-0.016768, 0.734352, 0, 1.0};
Point(49) = {-0.010946, 0.734560, 0, 1.0};
Point(50) = {-0.005092, 0.734794, 0, 1.0};
Point(51) = {0.000760, 0.735054, 0, 1.0};
Point(52) = {0.006594, 0.735339, 0, 1.0};
Point(53) = {0.012421, 0.735653, 0, 1.0};
Point(54) = {0.018253, 0.735998, 0, 1.0};
Point(55) = {0.024129, 0.736380, 0, 1.0};
Point(56) = {0.030106, 0.736811, 0, 1.0};
Point(57) = {0.036169, 0.737301, 0, 1.0};
Point(58) = {0.042225, 0.737853, 0, 1.0};
Point(59) = {0.048069, 0.738458, 0, 1.0};
Point(60) = {0.053610, 0.739115, 0, 1.0};
Point(61) = {0.058898, 0.739835, 0, 1.0};
Point(62) = {0.063981, 0.740626, 0, 1.0};
Point(63) = {0.068898, 0.741499, 0, 1.0};
Point(64) = {0.073768, 0.742547, 0, 1.0};
Point(65) = {0.074957, 0.742825, 0, 1.0};
Point(66) = {-0.074889, -0.744339, 0, 1.0};
Point(67) = {-0.073683, -0.744440, 0, 1.0};
Point(68) = {-0.068743, -0.744912, 0, 1.0};
Point(69) = {-0.063762, -0.745474, 0, 1.0};
Point(70) = {-0.058617, -0.746060, 0, 1.0};
Point(71) = {-0.053269, -0.746662, 0, 1.0};
Point(72) = {-0.047672, -0.747264, 0, 1.0};
Point(73) = {-0.041773, -0.747856, 0, 1.0};
Point(74) = {-0.035667, -0.748408, 0, 1.0};
Point(75) = {-0.029560, -0.748887, 0, 1.0};
Point(76) = {-0.023546, -0.749282, 0, 1.0};
Point(77) = {-0.017639, -0.749589, 0, 1.0};
Point(78) = {-0.011782, -0.749810, 0, 1.0};
Point(79) = {-0.005934, -0.749947, 0, 1.0};
Point(80) = {-0.000085, -0.750000, 0, 1.0};
Point(81) = {0.005778, -0.749969, 0, 1.0};
Point(82) = {0.011637, -0.749857, 0, 1.0};
Point(83) = {0.017460, -0.749663, 0, 1.0};
Point(84) = {0.023197, -0.749387, 0, 1.0};
Point(85) = {0.028799, -0.749034, 0, 1.0};
Point(86) = {0.034219, -0.748601, 0, 1.0};
Point(87) = {0.039434, -0.748085, 0, 1.0};
Point(88) = {0.044429, -0.747489, 0, 1.0};
Point(89) = {0.049189, -0.746808, 0, 1.0};
Point(90) = {0.053689, -0.746032, 0, 1.0};
Point(91) = {0.057911, -0.745177, 0, 1.0};
Point(92) = {0.061838, -0.744217, 0, 1.0};
Point(93) = {0.065447, -0.743160, 0, 1.0};
Point(94) = {0.068676, -0.741997, 0, 1.0};
Point(95) = {0.071405, -0.740749, 0, 1.0};
Point(96) = {0.073364, -0.739489, 0, 1.0};
Point(97) = {0.074511, -0.738216, 0, 1.0};
Point(98) = {0.074924, -0.736803, 0, 1.0};
Point(99) = {0.074395, -0.735650, 0, 1.0};
Point(100) = {0.073160, -0.734991, 0, 1.0};
Point(101) = {0.071122, -0.734484, 0, 1.0};
Point(102) = {0.068319, -0.734102, 0, 1.0};
Point(103) = {0.065027, -0.733861, 0, 1.0};
Point(104) = {0.061364, -0.733724, 0, 1.0};
Point(105) = {0.057391, -0.733656, 0, 1.0};
Point(106) = {0.053129, -0.733641, 0, 1.0};
Point(107) = {0.048595, -0.733659, 0, 1.0};
Point(108) = {0.043807, -0.733712, 0, 1.0};
Point(109) = {0.038788, -0.733790, 0, 1.0};
Point(110) = {0.033555, -0.733893, 0, 1.0};
Point(111) = {0.028121, -0.734020, 0, 1.0};
Point(112) = {0.022510, -0.734173, 0, 1.0};
Point(113) = {0.016768, -0.734352, 0, 1.0};
Point(114) = {0.010946, -0.734560, 0, 1.0};
Point(115) = {0.005092, -0.734794, 0, 1.0};
Point(116) = {-0.000760, -0.735054, 0, 1.0};
Point(117) = {-0.006594, -0.735339, 0, 1.0};
Point(118) = {-0.012421, -0.735653, 0, 1.0};
Point(119) = {-0.018253, -0.735998, 0, 1.0};
Point(120) = {-0.024129, -0.736380, 0, 1.0};
Point(121) = {-0.030106, -0.736811, 0, 1.0};
Point(122) = {-0.036169, -0.737301, 0, 1.0};
Point(123) = {-0.042225, -0.737853, 0, 1.0};
Point(124) = {-0.048069, -0.738458, 0, 1.0};
Point(125) = {-0.053610, -0.739115, 0, 1.0};
Point(126) = {-0.058898, -0.739835, 0, 1.0};
Point(127) = {-0.063981, -0.740626, 0, 1.0};
Point(128) = {-0.068898, -0.741499, 0, 1.0};
Point(129) = {-0.073768, -0.742547, 0, 1.0};
Point(130) = {-0.074957, -0.742825, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112373, 0.744158, 0, 1.0};
Point(2) = {0.107592, 0.744572, 0, 1.0};
Point(3) = {0.102770, 0.745033, 0, 1.0};
Point(4) = {0.097908, 0.745582, 0, 1.0};
Point(5) = {0.092886, 0.746154, 0, 1.0};
Point(6) = {0.087666, 0.746741, 0, 1.0};
Point(7) = {0.082202, 0.747329, 0, 1.0};
Point(8) = {0.076445, 0.747907, 0, 1.0};
Point(9) = {0.070485, 0.748446, 0, 1.0};
Point(10) = {0.064524, 0.748914, 0, 1.0};
Point(11) = {0.058653, 0.749299, 0, 1.0};
Point(12) = {0.052888, 0.749598, 0, 1.0};
Point(13) = {0.047170, 0.749815, 0, 1.0};
Point(14) = {0.041463, 0.749949, 0, 1.0};
Point(15) = {0.035753, 0.750000, 0, 1.0};
Point(16) = {0.030031, 0.749970, 0, 1.0};
Point(17) = {0.024312, 0.749860, 0, 1.0};
Point(18) = {0.018628, 0.749671, 0, 1.0};
Point(19) = {0.013028, 0.749401, 0, 1.0};
Point(20) = {0.007560, 0.749057, 0, 1.0};
Point(21) = {0.002269, 0.748634, 0, 1.0};
Point(22) = {-0.002820, 0.748131, 0, 1.0};
Point(23) = {-0.007697, 0.747549, 0, 1.0};
Point(24) = {-0.012342, 0.746884, 0, 1.0};
Point(25) = {-0.016735, 0.746127, 0, 1.0};
Point(26) = {-0.020856, 0.745292, 0, 1.0};
Point(27) = {-0.024689, 0.744355, 0, 1.0};
Point(28) = {-0.028212, 0.743323, 0, 1.0};
Point(29) = {-0.031363, 0.742189, 0, 1.0};
Point(30) = {-0.034028, 0.740971, 0, 1.0};
Point(31) = {-0.035939, 0.739740, 0, 1.0};
Point(32) = {-0.037059, 0.738497, 0, 1.0};
Point(33) = {-0.037462, 0.737119, 0, 1.0};
Point(34) = {-0.036945, 0.735993, 0, 1.0};
Point(35) = {-0.035741, 0.735350, 0, 1.0};
Point(36) = {-0.033751, 0.734855, 0, 1.0};
Point(37) = {-0.031015, 0.734482, 0, 1.0};
Point(38) = {-0.027802, 0.734247, 0, 1.0};
Point(39) = {-0.024227, 0.734113, 0, 1.0};
Point(40) = {-0.020348, 0.734046, 0, 1.0};
Point(41) = {-0.016188, 0.734032, 0, 1.0};
Point(42) = {-0.011763, 0.734050, 0, 1.0};
Point(43) = {-0.007089, 0.734102, 0, 1.0};
Point(44) = {-0.002190, 0.734178, 0, 1.0};
Point(45) = {0.002918, 0.734278, 0, 1.0};
Point(46) = {0.008222, 0.734402, 0, 1.0};
Point(47) = {0.013699, 0.734551, 0, 1.0};
Point(48) = {0.019303, 0.734727, 0, 1.0};
Point(49) = {0.024987, 0.734929, 0, 1.0};
Point(50) = {0.030700, 0.735157, 0, 1.0};
Point(51) = {0.036413, 0.735411, 0, 1.0};
Point(52) = {0.042107, 0.735689, 0, 1.0};
Point(53) = {0.047795, 0.735996, 0, 1.0};
Point(54) = {0.053487, 0.736332, 0, 1.0};
Point(55) = {0.059222, 0.736706, 0, 1.0};
Point(56) = {0.065056, 0.737127, 0, 1.0};
Point(57) = {0.070975, 0.737604, 0, 1.0};
Point(58) = {0.076886, 0.738143, 0, 1.0};
Point(59) = {0.082591, 0.738734, 0, 1.0};
Point(60) = {0.087999, 0.739375, 0, 1.0};
Point(61) = {0.093161, 0.740078, 0, 1.0};
Point(62) = {0.098121, 0.740850, 0, 1.0};
Point(63) = {0.102921, 0.741702, 0, 1.0};
Point(64) = {0.107675, 0.742725, 0, 1.0};
Point(65) = {0.112387, 0.743858, 0, 1.0};
Point(66) = {-0.112373, -0.744158, 0, 1.0};
Point(67) = {-0.107592, -0.744572, 0, 1.0};
Point(68) = {-0.102770, -0.745033, 0, 1.0};
Point(69) = {-0.097908, -0.745582, 0, 1.0};
Point(70) = {-0.092886, -0.746154, 0, 1.0};
Point(71) = {-0.087666, -0.746741, 0, 1.0};
Point(72) = {-0.082202, -0.747329, 0, 1.0};
Point(73) = {-0.076445, -0.747907, 0, 1.0};
Point(74) = {-0.070485, -0.748446, 0, 1.0};
Point(75) = {-0.064524, -0.748914, 0, 1.0};
Point(76) = {-0.058653, -0.749299, 0, 1.0};
Point(77) = {-0.052888, -0.749598, 0, 1.0};
Point(78) = {-0.047170, -0.749815, 0, 1.0};
Point(79) = {-0.041463, -0.749949, 0, 1.0};
Point(80) = {-0.035753, -0.750000, 0, 1.0};
Point(81) = {-0.030031, -0.749970, 0, 1.0};
Point(82) = {-0.024312, -0.749860, 0, 1.0};
Point(83) = {-0.018628, -0.749671, 0, 1.0};
Point(84) = {-0.013028, -0.749401, 0, 1.0};
Point(85) = {-0.007560, -0.749057, 0, 1.0};
Point(86) = {-0.002269, -0.748634, 0, 1.0};
Point(87) = {0.002820, -0.748131, 0, 1.0};
Point(88) = {0.007697, -0.747549, 0, 1.0};
Point(89) = {0.012342, -0.746884, 0, 1.0};
Point(90) = {0.016735, -0.746127, 0, 1.0};
Point(91) = {0.020856, -0.745292, 0, 1.0};
Point(92) = {0.024689, -0.744355, 0, 1.0};
Point(93) = {0.028212, -0.743323, 0, 1.0};
Point(94) = {0.031363, -0.742189, 0, 1.0};
Point(95) = {0.034028, -0.740971, 0, 1.0};
Point(96) = {0.035939, -0.739740, 0, 1.0};
Point(97) = {0.037059, -0.738497, 0, 1.0};
Point(98) = {0.037462, -0.737119, 0, 1.0};
Point(99) = {0.036945, -0.735993, 0, 1.0};
Point(100) = {0.035741, -0.735350, 0, 1.0};
Point(101) = {0.033751, -0.734855, 0, 1.0};
Point(102) = {0.031015, -0.734482, 0, 1.0};
Point(103) = {0.027802, -0.734247, 0, 1.0};
Point(104) = {0.024227, -0.734113, 0, 1.0};
Point(105) = {0.020348, -0.734046, 0, 1.0};
Point(106) = {0.016188, -0.734032, 0, 1.0};
Point(107) = {0.011763, -0.734050, 0, 1.0};
Point(108) = {0.007089, -0.734102, 0, 1.0};
Point(109) = {0.002190, -0.734178, 0, 1.0};
Point(110) = {-0.002918, -0.734278, 0, 1.0};
Point(111) = {-0.008222, -0.734402, 0, 1.0};
Point(112) = {-0.013699, -0.734551, 0, 1.0};
Point(113) = {-0.019303, -0.734727, 0, 1.0};
Point(114) = {-0.024987, -0.734929, 0, 1.0};
Point(115) = {-0.030700, -0.735157, 0, 1.0};
Point(116) = {-0.036413, -0.735411, 0, 1.0};
Point(117) = {-0.042107, -0.735689, 0, 1.0};
Point(118) = {-0.047795, -0.735996, 0, 1.0};
Point(119) = {-0.053487, -0.736332, 0, 1.0};
Point(120) = {-0.059222, -0.736706, 0, 1.0};
Point(121) = {-0.065056, -0.737127, 0, 1.0};
Point(122) = {-0.070975, -0.737604, 0, 1.0};
Point(123) = {-0.076886, -0.738143, 0, 1.0};
Point(124) = {-0.082591, -0.738734, 0, 1.0};
Point(125) = {-0.087999, -0.739375, 0, 1.0};
Point(126) = {-0.093161, -0.740078, 0, 1.0};
Point(127) = {-0.098121, -0.740850, 0, 1.0};
Point(128) = {-0.102921, -0.741702, 0, 1.0};
Point(129) = {-0.107675, -0.742725, 0, 1.0};
Point(130) = {-0.112387, -0.743858, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
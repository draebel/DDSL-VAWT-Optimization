SetFactory("OpenCASCADE");

Point(1) = {0.074890, 0.746105, 0, 1.0};
Point(2) = {0.071702, 0.746382, 0, 1.0};
Point(3) = {0.068488, 0.746689, 0, 1.0};
Point(4) = {0.065246, 0.747055, 0, 1.0};
Point(5) = {0.061899, 0.747436, 0, 1.0};
Point(6) = {0.058418, 0.747828, 0, 1.0};
Point(7) = {0.054776, 0.748220, 0, 1.0};
Point(8) = {0.050938, 0.748605, 0, 1.0};
Point(9) = {0.046965, 0.748964, 0, 1.0};
Point(10) = {0.042990, 0.749276, 0, 1.0};
Point(11) = {0.039077, 0.749533, 0, 1.0};
Point(12) = {0.035233, 0.749732, 0, 1.0};
Point(13) = {0.031422, 0.749876, 0, 1.0};
Point(14) = {0.027617, 0.749966, 0, 1.0};
Point(15) = {0.023810, 0.750000, 0, 1.0};
Point(16) = {0.019995, 0.749980, 0, 1.0};
Point(17) = {0.016183, 0.749907, 0, 1.0};
Point(18) = {0.012393, 0.749781, 0, 1.0};
Point(19) = {0.008660, 0.749601, 0, 1.0};
Point(20) = {0.005014, 0.749371, 0, 1.0};
Point(21) = {0.001488, 0.749090, 0, 1.0};
Point(22) = {-0.001906, 0.748754, 0, 1.0};
Point(23) = {-0.005157, 0.748366, 0, 1.0};
Point(24) = {-0.008254, 0.747923, 0, 1.0};
Point(25) = {-0.011182, 0.747418, 0, 1.0};
Point(26) = {-0.013930, 0.746862, 0, 1.0};
Point(27) = {-0.016485, 0.746237, 0, 1.0};
Point(28) = {-0.018833, 0.745549, 0, 1.0};
Point(29) = {-0.020934, 0.744792, 0, 1.0};
Point(30) = {-0.022711, 0.743980, 0, 1.0};
Point(31) = {-0.023985, 0.743160, 0, 1.0};
Point(32) = {-0.024731, 0.742332, 0, 1.0};
Point(33) = {-0.025000, 0.741412, 0, 1.0};
Point(34) = {-0.024656, 0.740662, 0, 1.0};
Point(35) = {-0.023853, 0.740233, 0, 1.0};
Point(36) = {-0.022526, 0.739904, 0, 1.0};
Point(37) = {-0.020702, 0.739655, 0, 1.0};
Point(38) = {-0.018560, 0.739498, 0, 1.0};
Point(39) = {-0.016177, 0.739409, 0, 1.0};
Point(40) = {-0.013591, 0.739364, 0, 1.0};
Point(41) = {-0.010818, 0.739354, 0, 1.0};
Point(42) = {-0.007867, 0.739367, 0, 1.0};
Point(43) = {-0.004752, 0.739401, 0, 1.0};
Point(44) = {-0.001486, 0.739452, 0, 1.0};
Point(45) = {0.001920, 0.739518, 0, 1.0};
Point(46) = {0.005456, 0.739601, 0, 1.0};
Point(47) = {0.009107, 0.739701, 0, 1.0};
Point(48) = {0.012844, 0.739818, 0, 1.0};
Point(49) = {0.016632, 0.739953, 0, 1.0};
Point(50) = {0.020441, 0.740105, 0, 1.0};
Point(51) = {0.024250, 0.740274, 0, 1.0};
Point(52) = {0.028046, 0.740459, 0, 1.0};
Point(53) = {0.031838, 0.740664, 0, 1.0};
Point(54) = {0.035632, 0.740888, 0, 1.0};
Point(55) = {0.039456, 0.741137, 0, 1.0};
Point(56) = {0.043345, 0.741418, 0, 1.0};
Point(57) = {0.047291, 0.741736, 0, 1.0};
Point(58) = {0.051232, 0.742095, 0, 1.0};
Point(59) = {0.055035, 0.742490, 0, 1.0};
Point(60) = {0.058640, 0.742917, 0, 1.0};
Point(61) = {0.062082, 0.743385, 0, 1.0};
Point(62) = {0.065389, 0.743900, 0, 1.0};
Point(63) = {0.068588, 0.744468, 0, 1.0};
Point(64) = {0.071758, 0.745150, 0, 1.0};
Point(65) = {0.074899, 0.745905, 0, 1.0};
Point(66) = {-0.074890, -0.746105, 0, 1.0};
Point(67) = {-0.071702, -0.746382, 0, 1.0};
Point(68) = {-0.068488, -0.746689, 0, 1.0};
Point(69) = {-0.065246, -0.747055, 0, 1.0};
Point(70) = {-0.061899, -0.747436, 0, 1.0};
Point(71) = {-0.058418, -0.747828, 0, 1.0};
Point(72) = {-0.054776, -0.748220, 0, 1.0};
Point(73) = {-0.050938, -0.748605, 0, 1.0};
Point(74) = {-0.046965, -0.748964, 0, 1.0};
Point(75) = {-0.042990, -0.749276, 0, 1.0};
Point(76) = {-0.039077, -0.749533, 0, 1.0};
Point(77) = {-0.035233, -0.749732, 0, 1.0};
Point(78) = {-0.031422, -0.749876, 0, 1.0};
Point(79) = {-0.027617, -0.749966, 0, 1.0};
Point(80) = {-0.023810, -0.750000, 0, 1.0};
Point(81) = {-0.019995, -0.749980, 0, 1.0};
Point(82) = {-0.016183, -0.749907, 0, 1.0};
Point(83) = {-0.012393, -0.749781, 0, 1.0};
Point(84) = {-0.008660, -0.749601, 0, 1.0};
Point(85) = {-0.005014, -0.749371, 0, 1.0};
Point(86) = {-0.001488, -0.749090, 0, 1.0};
Point(87) = {0.001906, -0.748754, 0, 1.0};
Point(88) = {0.005157, -0.748366, 0, 1.0};
Point(89) = {0.008254, -0.747923, 0, 1.0};
Point(90) = {0.011182, -0.747418, 0, 1.0};
Point(91) = {0.013930, -0.746862, 0, 1.0};
Point(92) = {0.016485, -0.746237, 0, 1.0};
Point(93) = {0.018833, -0.745549, 0, 1.0};
Point(94) = {0.020934, -0.744792, 0, 1.0};
Point(95) = {0.022711, -0.743980, 0, 1.0};
Point(96) = {0.023985, -0.743160, 0, 1.0};
Point(97) = {0.024731, -0.742332, 0, 1.0};
Point(98) = {0.025000, -0.741412, 0, 1.0};
Point(99) = {0.024656, -0.740662, 0, 1.0};
Point(100) = {0.023853, -0.740233, 0, 1.0};
Point(101) = {0.022526, -0.739904, 0, 1.0};
Point(102) = {0.020702, -0.739655, 0, 1.0};
Point(103) = {0.018560, -0.739498, 0, 1.0};
Point(104) = {0.016177, -0.739409, 0, 1.0};
Point(105) = {0.013591, -0.739364, 0, 1.0};
Point(106) = {0.010818, -0.739354, 0, 1.0};
Point(107) = {0.007867, -0.739367, 0, 1.0};
Point(108) = {0.004752, -0.739401, 0, 1.0};
Point(109) = {0.001486, -0.739452, 0, 1.0};
Point(110) = {-0.001920, -0.739518, 0, 1.0};
Point(111) = {-0.005456, -0.739601, 0, 1.0};
Point(112) = {-0.009107, -0.739701, 0, 1.0};
Point(113) = {-0.012844, -0.739818, 0, 1.0};
Point(114) = {-0.016632, -0.739953, 0, 1.0};
Point(115) = {-0.020441, -0.740105, 0, 1.0};
Point(116) = {-0.024250, -0.740274, 0, 1.0};
Point(117) = {-0.028046, -0.740459, 0, 1.0};
Point(118) = {-0.031838, -0.740664, 0, 1.0};
Point(119) = {-0.035632, -0.740888, 0, 1.0};
Point(120) = {-0.039456, -0.741137, 0, 1.0};
Point(121) = {-0.043345, -0.741418, 0, 1.0};
Point(122) = {-0.047291, -0.741736, 0, 1.0};
Point(123) = {-0.051232, -0.742095, 0, 1.0};
Point(124) = {-0.055035, -0.742490, 0, 1.0};
Point(125) = {-0.058640, -0.742917, 0, 1.0};
Point(126) = {-0.062082, -0.743385, 0, 1.0};
Point(127) = {-0.065389, -0.743900, 0, 1.0};
Point(128) = {-0.068588, -0.744468, 0, 1.0};
Point(129) = {-0.071758, -0.745150, 0, 1.0};
Point(130) = {-0.074899, -0.745905, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
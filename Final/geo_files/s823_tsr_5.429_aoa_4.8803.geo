SetFactory("OpenCASCADE");

Point(1) = {0.074637, 0.733661, 0, 1.0};
Point(2) = {0.074266, 0.733796, 0, 1.0};
Point(3) = {0.073246, 0.734231, 0, 1.0};
Point(4) = {0.071716, 0.734908, 0, 1.0};
Point(5) = {0.069714, 0.735706, 0, 1.0};
Point(6) = {0.067191, 0.736591, 0, 1.0};
Point(7) = {0.064177, 0.737590, 0, 1.0};
Point(8) = {0.060730, 0.738693, 0, 1.0};
Point(9) = {0.056906, 0.739882, 0, 1.0};
Point(10) = {0.052766, 0.741130, 0, 1.0};
Point(11) = {0.048367, 0.742407, 0, 1.0};
Point(12) = {0.043767, 0.743681, 0, 1.0};
Point(13) = {0.039020, 0.744916, 0, 1.0};
Point(14) = {0.034176, 0.746080, 0, 1.0};
Point(15) = {0.029286, 0.747141, 0, 1.0};
Point(16) = {0.024396, 0.748070, 0, 1.0};
Point(17) = {0.019547, 0.748843, 0, 1.0};
Point(18) = {0.014783, 0.749434, 0, 1.0};
Point(19) = {0.010134, 0.749819, 0, 1.0};
Point(20) = {0.005612, 0.750000, 0, 1.0};
Point(21) = {0.001263, 0.749985, 0, 1.0};
Point(22) = {-0.002890, 0.749782, 0, 1.0};
Point(23) = {-0.006803, 0.749413, 0, 1.0};
Point(24) = {-0.010435, 0.748892, 0, 1.0};
Point(25) = {-0.013744, 0.748232, 0, 1.0};
Point(26) = {-0.016697, 0.747446, 0, 1.0};
Point(27) = {-0.019257, 0.746552, 0, 1.0};
Point(28) = {-0.021400, 0.745568, 0, 1.0};
Point(29) = {-0.023092, 0.744521, 0, 1.0};
Point(30) = {-0.024302, 0.743439, 0, 1.0};
Point(31) = {-0.024796, 0.742756, 0, 1.0};
Point(32) = {-0.024919, 0.742495, 0, 1.0};
Point(33) = {-0.024958, 0.742382, 0, 1.0};
Point(34) = {-0.024991, 0.742242, 0, 1.0};
Point(35) = {-0.024999, 0.741975, 0, 1.0};
Point(36) = {-0.024961, 0.741680, 0, 1.0};
Point(37) = {-0.024843, 0.741213, 0, 1.0};
Point(38) = {-0.024188, 0.739694, 0, 1.0};
Point(39) = {-0.023218, 0.737861, 0, 1.0};
Point(40) = {-0.022085, 0.735960, 0, 1.0};
Point(41) = {-0.020758, 0.734110, 0, 1.0};
Point(42) = {-0.019261, 0.732475, 0, 1.0};
Point(43) = {-0.017468, 0.731238, 0, 1.0};
Point(44) = {-0.015167, 0.730311, 0, 1.0};
Point(45) = {-0.012415, 0.729609, 0, 1.0};
Point(46) = {-0.009246, 0.729130, 0, 1.0};
Point(47) = {-0.005683, 0.728873, 0, 1.0};
Point(48) = {-0.001745, 0.728836, 0, 1.0};
Point(49) = {0.002544, 0.729009, 0, 1.0};
Point(50) = {0.007162, 0.729373, 0, 1.0};
Point(51) = {0.012078, 0.729902, 0, 1.0};
Point(52) = {0.017255, 0.730561, 0, 1.0};
Point(53) = {0.022648, 0.731309, 0, 1.0};
Point(54) = {0.028202, 0.732097, 0, 1.0};
Point(55) = {0.033849, 0.732877, 0, 1.0};
Point(56) = {0.039510, 0.733598, 0, 1.0};
Point(57) = {0.045096, 0.734212, 0, 1.0};
Point(58) = {0.050505, 0.734680, 0, 1.0};
Point(59) = {0.055628, 0.734976, 0, 1.0};
Point(60) = {0.060351, 0.735086, 0, 1.0};
Point(61) = {0.064562, 0.735016, 0, 1.0};
Point(62) = {0.068155, 0.734786, 0, 1.0};
Point(63) = {0.071019, 0.734431, 0, 1.0};
Point(64) = {0.073055, 0.734051, 0, 1.0};
Point(65) = {0.074248, 0.733768, 0, 1.0};
Point(66) = {-0.074637, -0.733661, 0, 1.0};
Point(67) = {-0.074266, -0.733796, 0, 1.0};
Point(68) = {-0.073246, -0.734231, 0, 1.0};
Point(69) = {-0.071716, -0.734908, 0, 1.0};
Point(70) = {-0.069714, -0.735706, 0, 1.0};
Point(71) = {-0.067191, -0.736591, 0, 1.0};
Point(72) = {-0.064177, -0.737590, 0, 1.0};
Point(73) = {-0.060730, -0.738693, 0, 1.0};
Point(74) = {-0.056906, -0.739882, 0, 1.0};
Point(75) = {-0.052766, -0.741130, 0, 1.0};
Point(76) = {-0.048367, -0.742407, 0, 1.0};
Point(77) = {-0.043767, -0.743681, 0, 1.0};
Point(78) = {-0.039020, -0.744916, 0, 1.0};
Point(79) = {-0.034176, -0.746080, 0, 1.0};
Point(80) = {-0.029286, -0.747141, 0, 1.0};
Point(81) = {-0.024396, -0.748070, 0, 1.0};
Point(82) = {-0.019547, -0.748843, 0, 1.0};
Point(83) = {-0.014783, -0.749434, 0, 1.0};
Point(84) = {-0.010134, -0.749819, 0, 1.0};
Point(85) = {-0.005612, -0.750000, 0, 1.0};
Point(86) = {-0.001263, -0.749985, 0, 1.0};
Point(87) = {0.002890, -0.749782, 0, 1.0};
Point(88) = {0.006803, -0.749413, 0, 1.0};
Point(89) = {0.010435, -0.748892, 0, 1.0};
Point(90) = {0.013744, -0.748232, 0, 1.0};
Point(91) = {0.016697, -0.747446, 0, 1.0};
Point(92) = {0.019257, -0.746552, 0, 1.0};
Point(93) = {0.021400, -0.745568, 0, 1.0};
Point(94) = {0.023092, -0.744521, 0, 1.0};
Point(95) = {0.024302, -0.743439, 0, 1.0};
Point(96) = {0.024796, -0.742756, 0, 1.0};
Point(97) = {0.024919, -0.742495, 0, 1.0};
Point(98) = {0.024958, -0.742382, 0, 1.0};
Point(99) = {0.024991, -0.742242, 0, 1.0};
Point(100) = {0.024999, -0.741975, 0, 1.0};
Point(101) = {0.024961, -0.741680, 0, 1.0};
Point(102) = {0.024843, -0.741213, 0, 1.0};
Point(103) = {0.024188, -0.739694, 0, 1.0};
Point(104) = {0.023218, -0.737861, 0, 1.0};
Point(105) = {0.022085, -0.735960, 0, 1.0};
Point(106) = {0.020758, -0.734110, 0, 1.0};
Point(107) = {0.019261, -0.732475, 0, 1.0};
Point(108) = {0.017468, -0.731238, 0, 1.0};
Point(109) = {0.015167, -0.730311, 0, 1.0};
Point(110) = {0.012415, -0.729609, 0, 1.0};
Point(111) = {0.009246, -0.729130, 0, 1.0};
Point(112) = {0.005683, -0.728873, 0, 1.0};
Point(113) = {0.001745, -0.728836, 0, 1.0};
Point(114) = {-0.002544, -0.729009, 0, 1.0};
Point(115) = {-0.007162, -0.729373, 0, 1.0};
Point(116) = {-0.012078, -0.729902, 0, 1.0};
Point(117) = {-0.017255, -0.730561, 0, 1.0};
Point(118) = {-0.022648, -0.731309, 0, 1.0};
Point(119) = {-0.028202, -0.732097, 0, 1.0};
Point(120) = {-0.033849, -0.732877, 0, 1.0};
Point(121) = {-0.039510, -0.733598, 0, 1.0};
Point(122) = {-0.045096, -0.734212, 0, 1.0};
Point(123) = {-0.050505, -0.734680, 0, 1.0};
Point(124) = {-0.055628, -0.734976, 0, 1.0};
Point(125) = {-0.060351, -0.735086, 0, 1.0};
Point(126) = {-0.064562, -0.735016, 0, 1.0};
Point(127) = {-0.068155, -0.734786, 0, 1.0};
Point(128) = {-0.071019, -0.734431, 0, 1.0};
Point(129) = {-0.073055, -0.734051, 0, 1.0};
Point(130) = {-0.074248, -0.733768, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
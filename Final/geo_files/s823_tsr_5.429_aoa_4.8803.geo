SetFactory("OpenCASCADE");

Point(1) = {0.149275, 0.717323, 0, 1.0};
Point(2) = {0.148531, 0.717591, 0, 1.0};
Point(3) = {0.146491, 0.718461, 0, 1.0};
Point(4) = {0.143433, 0.719816, 0, 1.0};
Point(5) = {0.139429, 0.721412, 0, 1.0};
Point(6) = {0.134382, 0.723183, 0, 1.0};
Point(7) = {0.128354, 0.725180, 0, 1.0};
Point(8) = {0.121459, 0.727387, 0, 1.0};
Point(9) = {0.113812, 0.729764, 0, 1.0};
Point(10) = {0.105532, 0.732260, 0, 1.0};
Point(11) = {0.096735, 0.734815, 0, 1.0};
Point(12) = {0.087534, 0.737361, 0, 1.0};
Point(13) = {0.078039, 0.739832, 0, 1.0};
Point(14) = {0.068353, 0.742160, 0, 1.0};
Point(15) = {0.058573, 0.744282, 0, 1.0};
Point(16) = {0.048791, 0.746141, 0, 1.0};
Point(17) = {0.039095, 0.747685, 0, 1.0};
Point(18) = {0.029565, 0.748869, 0, 1.0};
Point(19) = {0.020267, 0.749638, 0, 1.0};
Point(20) = {0.011224, 0.750000, 0, 1.0};
Point(21) = {0.002526, 0.749969, 0, 1.0};
Point(22) = {-0.005779, 0.749564, 0, 1.0};
Point(23) = {-0.013605, 0.748826, 0, 1.0};
Point(24) = {-0.020870, 0.747784, 0, 1.0};
Point(25) = {-0.027488, 0.746463, 0, 1.0};
Point(26) = {-0.033394, 0.744893, 0, 1.0};
Point(27) = {-0.038515, 0.743105, 0, 1.0};
Point(28) = {-0.042801, 0.741137, 0, 1.0};
Point(29) = {-0.046183, 0.739042, 0, 1.0};
Point(30) = {-0.048605, 0.736879, 0, 1.0};
Point(31) = {-0.049591, 0.735511, 0, 1.0};
Point(32) = {-0.049837, 0.734991, 0, 1.0};
Point(33) = {-0.049916, 0.734764, 0, 1.0};
Point(34) = {-0.049982, 0.734483, 0, 1.0};
Point(35) = {-0.049998, 0.733950, 0, 1.0};
Point(36) = {-0.049923, 0.733360, 0, 1.0};
Point(37) = {-0.049687, 0.732427, 0, 1.0};
Point(38) = {-0.048377, 0.729387, 0, 1.0};
Point(39) = {-0.046435, 0.725722, 0, 1.0};
Point(40) = {-0.044169, 0.721920, 0, 1.0};
Point(41) = {-0.041516, 0.718219, 0, 1.0};
Point(42) = {-0.038523, 0.714950, 0, 1.0};
Point(43) = {-0.034936, 0.712475, 0, 1.0};
Point(44) = {-0.030335, 0.710623, 0, 1.0};
Point(45) = {-0.024831, 0.709219, 0, 1.0};
Point(46) = {-0.018493, 0.708259, 0, 1.0};
Point(47) = {-0.011366, 0.707746, 0, 1.0};
Point(48) = {-0.003491, 0.707672, 0, 1.0};
Point(49) = {0.005089, 0.708017, 0, 1.0};
Point(50) = {0.014325, 0.708745, 0, 1.0};
Point(51) = {0.024156, 0.709803, 0, 1.0};
Point(52) = {0.034510, 0.711121, 0, 1.0};
Point(53) = {0.045296, 0.712617, 0, 1.0};
Point(54) = {0.056403, 0.714195, 0, 1.0};
Point(55) = {0.067697, 0.715755, 0, 1.0};
Point(56) = {0.079021, 0.717195, 0, 1.0};
Point(57) = {0.090192, 0.718423, 0, 1.0};
Point(58) = {0.101010, 0.719361, 0, 1.0};
Point(59) = {0.111255, 0.719953, 0, 1.0};
Point(60) = {0.120702, 0.720173, 0, 1.0};
Point(61) = {0.129124, 0.720031, 0, 1.0};
Point(62) = {0.136309, 0.719571, 0, 1.0};
Point(63) = {0.142038, 0.718863, 0, 1.0};
Point(64) = {0.146110, 0.718103, 0, 1.0};
Point(65) = {0.148497, 0.717536, 0, 1.0};
Point(66) = {-0.149275, -0.717323, 0, 1.0};
Point(67) = {-0.148531, -0.717591, 0, 1.0};
Point(68) = {-0.146491, -0.718461, 0, 1.0};
Point(69) = {-0.143433, -0.719816, 0, 1.0};
Point(70) = {-0.139429, -0.721412, 0, 1.0};
Point(71) = {-0.134382, -0.723183, 0, 1.0};
Point(72) = {-0.128354, -0.725180, 0, 1.0};
Point(73) = {-0.121459, -0.727387, 0, 1.0};
Point(74) = {-0.113812, -0.729764, 0, 1.0};
Point(75) = {-0.105532, -0.732260, 0, 1.0};
Point(76) = {-0.096735, -0.734815, 0, 1.0};
Point(77) = {-0.087534, -0.737361, 0, 1.0};
Point(78) = {-0.078039, -0.739832, 0, 1.0};
Point(79) = {-0.068353, -0.742160, 0, 1.0};
Point(80) = {-0.058573, -0.744282, 0, 1.0};
Point(81) = {-0.048791, -0.746141, 0, 1.0};
Point(82) = {-0.039095, -0.747685, 0, 1.0};
Point(83) = {-0.029565, -0.748869, 0, 1.0};
Point(84) = {-0.020267, -0.749638, 0, 1.0};
Point(85) = {-0.011224, -0.750000, 0, 1.0};
Point(86) = {-0.002526, -0.749969, 0, 1.0};
Point(87) = {0.005779, -0.749564, 0, 1.0};
Point(88) = {0.013605, -0.748826, 0, 1.0};
Point(89) = {0.020870, -0.747784, 0, 1.0};
Point(90) = {0.027488, -0.746463, 0, 1.0};
Point(91) = {0.033394, -0.744893, 0, 1.0};
Point(92) = {0.038515, -0.743105, 0, 1.0};
Point(93) = {0.042801, -0.741137, 0, 1.0};
Point(94) = {0.046183, -0.739042, 0, 1.0};
Point(95) = {0.048605, -0.736879, 0, 1.0};
Point(96) = {0.049591, -0.735511, 0, 1.0};
Point(97) = {0.049837, -0.734991, 0, 1.0};
Point(98) = {0.049916, -0.734764, 0, 1.0};
Point(99) = {0.049982, -0.734483, 0, 1.0};
Point(100) = {0.049998, -0.733950, 0, 1.0};
Point(101) = {0.049923, -0.733360, 0, 1.0};
Point(102) = {0.049687, -0.732427, 0, 1.0};
Point(103) = {0.048377, -0.729387, 0, 1.0};
Point(104) = {0.046435, -0.725722, 0, 1.0};
Point(105) = {0.044169, -0.721920, 0, 1.0};
Point(106) = {0.041516, -0.718219, 0, 1.0};
Point(107) = {0.038523, -0.714950, 0, 1.0};
Point(108) = {0.034936, -0.712475, 0, 1.0};
Point(109) = {0.030335, -0.710623, 0, 1.0};
Point(110) = {0.024831, -0.709219, 0, 1.0};
Point(111) = {0.018493, -0.708259, 0, 1.0};
Point(112) = {0.011366, -0.707746, 0, 1.0};
Point(113) = {0.003491, -0.707672, 0, 1.0};
Point(114) = {-0.005089, -0.708017, 0, 1.0};
Point(115) = {-0.014325, -0.708745, 0, 1.0};
Point(116) = {-0.024156, -0.709803, 0, 1.0};
Point(117) = {-0.034510, -0.711121, 0, 1.0};
Point(118) = {-0.045296, -0.712617, 0, 1.0};
Point(119) = {-0.056403, -0.714195, 0, 1.0};
Point(120) = {-0.067697, -0.715755, 0, 1.0};
Point(121) = {-0.079021, -0.717195, 0, 1.0};
Point(122) = {-0.090192, -0.718423, 0, 1.0};
Point(123) = {-0.101010, -0.719361, 0, 1.0};
Point(124) = {-0.111255, -0.719953, 0, 1.0};
Point(125) = {-0.120702, -0.720173, 0, 1.0};
Point(126) = {-0.129124, -0.720031, 0, 1.0};
Point(127) = {-0.136309, -0.719571, 0, 1.0};
Point(128) = {-0.142038, -0.718863, 0, 1.0};
Point(129) = {-0.146110, -0.718103, 0, 1.0};
Point(130) = {-0.148497, -0.717536, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
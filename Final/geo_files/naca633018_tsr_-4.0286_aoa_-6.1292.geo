SetFactory("OpenCASCADE");

Point(1) = {0.074490, 0.745572, 0, 1.0};
Point(2) = {0.073638, 0.745580, 0, 1.0};
Point(3) = {0.070854, 0.745638, 0, 1.0};
Point(4) = {0.067779, 0.745748, 0, 1.0};
Point(5) = {0.064424, 0.745909, 0, 1.0};
Point(6) = {0.060805, 0.746116, 0, 1.0};
Point(7) = {0.056938, 0.746375, 0, 1.0};
Point(8) = {0.052839, 0.746681, 0, 1.0};
Point(9) = {0.048526, 0.747028, 0, 1.0};
Point(10) = {0.044017, 0.747409, 0, 1.0};
Point(11) = {0.039334, 0.747808, 0, 1.0};
Point(12) = {0.034499, 0.748216, 0, 1.0};
Point(13) = {0.029533, 0.748616, 0, 1.0};
Point(14) = {0.024458, 0.748994, 0, 1.0};
Point(15) = {0.019299, 0.749332, 0, 1.0};
Point(16) = {0.014077, 0.749618, 0, 1.0};
Point(17) = {0.008819, 0.749835, 0, 1.0};
Point(18) = {0.003547, 0.749967, 0, 1.0};
Point(19) = {-0.001714, 0.750000, 0, 1.0};
Point(20) = {-0.006941, 0.749920, 0, 1.0};
Point(21) = {-0.012111, 0.749716, 0, 1.0};
Point(22) = {-0.017197, 0.749379, 0, 1.0};
Point(23) = {-0.022180, 0.748905, 0, 1.0};
Point(24) = {-0.027038, 0.748300, 0, 1.0};
Point(25) = {-0.031752, 0.747577, 0, 1.0};
Point(26) = {-0.036304, 0.746752, 0, 1.0};
Point(27) = {-0.040674, 0.745840, 0, 1.0};
Point(28) = {-0.044843, 0.744851, 0, 1.0};
Point(29) = {-0.048796, 0.743796, 0, 1.0};
Point(30) = {-0.052517, 0.742691, 0, 1.0};
Point(31) = {-0.055990, 0.741546, 0, 1.0};
Point(32) = {-0.059202, 0.740370, 0, 1.0};
Point(33) = {-0.062136, 0.739169, 0, 1.0};
Point(34) = {-0.064784, 0.737954, 0, 1.0};
Point(35) = {-0.067134, 0.736738, 0, 1.0};
Point(36) = {-0.069176, 0.735540, 0, 1.0};
Point(37) = {-0.070903, 0.734359, 0, 1.0};
Point(38) = {-0.072300, 0.733159, 0, 1.0};
Point(39) = {-0.073361, 0.731920, 0, 1.0};
Point(40) = {-0.074090, 0.730721, 0, 1.0};
Point(41) = {-0.074493, 0.729673, 0, 1.0};
Point(42) = {-0.074571, 0.728798, 0, 1.0};
Point(43) = {-0.074309, 0.727959, 0, 1.0};
Point(44) = {-0.073692, 0.727020, 0, 1.0};
Point(45) = {-0.072726, 0.726004, 0, 1.0};
Point(46) = {-0.071426, 0.725018, 0, 1.0};
Point(47) = {-0.069806, 0.724142, 0, 1.0};
Point(48) = {-0.067867, 0.723355, 0, 1.0};
Point(49) = {-0.065618, 0.722617, 0, 1.0};
Point(50) = {-0.063063, 0.721928, 0, 1.0};
Point(51) = {-0.060217, 0.721303, 0, 1.0};
Point(52) = {-0.057095, 0.720752, 0, 1.0};
Point(53) = {-0.053707, 0.720285, 0, 1.0};
Point(54) = {-0.050070, 0.719904, 0, 1.0};
Point(55) = {-0.046199, 0.719614, 0, 1.0};
Point(56) = {-0.042112, 0.719422, 0, 1.0};
Point(57) = {-0.037828, 0.719340, 0, 1.0};
Point(58) = {-0.033364, 0.719378, 0, 1.0};
Point(59) = {-0.028741, 0.719538, 0, 1.0};
Point(60) = {-0.023981, 0.719832, 0, 1.0};
Point(61) = {-0.019105, 0.720272, 0, 1.0};
Point(62) = {-0.014135, 0.720867, 0, 1.0};
Point(63) = {-0.009093, 0.721617, 0, 1.0};
Point(64) = {-0.003998, 0.722517, 0, 1.0};
Point(65) = {0.001126, 0.723548, 0, 1.0};
Point(66) = {0.006260, 0.724697, 0, 1.0};
Point(67) = {0.011384, 0.725945, 0, 1.0};
Point(68) = {0.016476, 0.727273, 0, 1.0};
Point(69) = {0.021519, 0.728662, 0, 1.0};
Point(70) = {0.026488, 0.730088, 0, 1.0};
Point(71) = {0.031367, 0.731535, 0, 1.0};
Point(72) = {0.036135, 0.732979, 0, 1.0};
Point(73) = {0.040773, 0.734405, 0, 1.0};
Point(74) = {0.045265, 0.735789, 0, 1.0};
Point(75) = {0.049590, 0.737119, 0, 1.0};
Point(76) = {0.053731, 0.738374, 0, 1.0};
Point(77) = {0.057671, 0.739543, 0, 1.0};
Point(78) = {0.061396, 0.740617, 0, 1.0};
Point(79) = {0.064888, 0.741588, 0, 1.0};
Point(80) = {0.068132, 0.742458, 0, 1.0};
Point(81) = {0.071114, 0.743218, 0, 1.0};
Point(82) = {0.073822, 0.743866, 0, 1.0};
Point(83) = {0.074653, 0.744055, 0, 1.0};
Point(84) = {-0.074490, -0.745572, 0, 1.0};
Point(85) = {-0.073638, -0.745580, 0, 1.0};
Point(86) = {-0.070854, -0.745638, 0, 1.0};
Point(87) = {-0.067779, -0.745748, 0, 1.0};
Point(88) = {-0.064424, -0.745909, 0, 1.0};
Point(89) = {-0.060805, -0.746116, 0, 1.0};
Point(90) = {-0.056938, -0.746375, 0, 1.0};
Point(91) = {-0.052839, -0.746681, 0, 1.0};
Point(92) = {-0.048526, -0.747028, 0, 1.0};
Point(93) = {-0.044017, -0.747409, 0, 1.0};
Point(94) = {-0.039334, -0.747808, 0, 1.0};
Point(95) = {-0.034499, -0.748216, 0, 1.0};
Point(96) = {-0.029533, -0.748616, 0, 1.0};
Point(97) = {-0.024458, -0.748994, 0, 1.0};
Point(98) = {-0.019299, -0.749332, 0, 1.0};
Point(99) = {-0.014077, -0.749618, 0, 1.0};
Point(100) = {-0.008819, -0.749835, 0, 1.0};
Point(101) = {-0.003547, -0.749967, 0, 1.0};
Point(102) = {0.001714, -0.750000, 0, 1.0};
Point(103) = {0.006941, -0.749920, 0, 1.0};
Point(104) = {0.012111, -0.749716, 0, 1.0};
Point(105) = {0.017197, -0.749379, 0, 1.0};
Point(106) = {0.022180, -0.748905, 0, 1.0};
Point(107) = {0.027038, -0.748300, 0, 1.0};
Point(108) = {0.031752, -0.747577, 0, 1.0};
Point(109) = {0.036304, -0.746752, 0, 1.0};
Point(110) = {0.040674, -0.745840, 0, 1.0};
Point(111) = {0.044843, -0.744851, 0, 1.0};
Point(112) = {0.048796, -0.743796, 0, 1.0};
Point(113) = {0.052517, -0.742691, 0, 1.0};
Point(114) = {0.055990, -0.741546, 0, 1.0};
Point(115) = {0.059202, -0.740370, 0, 1.0};
Point(116) = {0.062136, -0.739169, 0, 1.0};
Point(117) = {0.064784, -0.737954, 0, 1.0};
Point(118) = {0.067134, -0.736738, 0, 1.0};
Point(119) = {0.069176, -0.735540, 0, 1.0};
Point(120) = {0.070903, -0.734359, 0, 1.0};
Point(121) = {0.072300, -0.733159, 0, 1.0};
Point(122) = {0.073361, -0.731920, 0, 1.0};
Point(123) = {0.074090, -0.730721, 0, 1.0};
Point(124) = {0.074493, -0.729673, 0, 1.0};
Point(125) = {0.074571, -0.728798, 0, 1.0};
Point(126) = {0.074309, -0.727959, 0, 1.0};
Point(127) = {0.073692, -0.727020, 0, 1.0};
Point(128) = {0.072726, -0.726004, 0, 1.0};
Point(129) = {0.071426, -0.725018, 0, 1.0};
Point(130) = {0.069806, -0.724142, 0, 1.0};
Point(131) = {0.067867, -0.723355, 0, 1.0};
Point(132) = {0.065618, -0.722617, 0, 1.0};
Point(133) = {0.063063, -0.721928, 0, 1.0};
Point(134) = {0.060217, -0.721303, 0, 1.0};
Point(135) = {0.057095, -0.720752, 0, 1.0};
Point(136) = {0.053707, -0.720285, 0, 1.0};
Point(137) = {0.050070, -0.719904, 0, 1.0};
Point(138) = {0.046199, -0.719614, 0, 1.0};
Point(139) = {0.042112, -0.719422, 0, 1.0};
Point(140) = {0.037828, -0.719340, 0, 1.0};
Point(141) = {0.033364, -0.719378, 0, 1.0};
Point(142) = {0.028741, -0.719538, 0, 1.0};
Point(143) = {0.023981, -0.719832, 0, 1.0};
Point(144) = {0.019105, -0.720272, 0, 1.0};
Point(145) = {0.014135, -0.720867, 0, 1.0};
Point(146) = {0.009093, -0.721617, 0, 1.0};
Point(147) = {0.003998, -0.722517, 0, 1.0};
Point(148) = {-0.001126, -0.723548, 0, 1.0};
Point(149) = {-0.006260, -0.724697, 0, 1.0};
Point(150) = {-0.011384, -0.725945, 0, 1.0};
Point(151) = {-0.016476, -0.727273, 0, 1.0};
Point(152) = {-0.021519, -0.728662, 0, 1.0};
Point(153) = {-0.026488, -0.730088, 0, 1.0};
Point(154) = {-0.031367, -0.731535, 0, 1.0};
Point(155) = {-0.036135, -0.732979, 0, 1.0};
Point(156) = {-0.040773, -0.734405, 0, 1.0};
Point(157) = {-0.045265, -0.735789, 0, 1.0};
Point(158) = {-0.049590, -0.737119, 0, 1.0};
Point(159) = {-0.053731, -0.738374, 0, 1.0};
Point(160) = {-0.057671, -0.739543, 0, 1.0};
Point(161) = {-0.061396, -0.740617, 0, 1.0};
Point(162) = {-0.064888, -0.741588, 0, 1.0};
Point(163) = {-0.068132, -0.742458, 0, 1.0};
Point(164) = {-0.071114, -0.743218, 0, 1.0};
Point(165) = {-0.073822, -0.743866, 0, 1.0};
Point(166) = {-0.074653, -0.744055, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074256, 0.716847, 0, 1.0};
Point(2) = {0.073722, 0.717079, 0, 1.0};
Point(3) = {0.072233, 0.717785, 0, 1.0};
Point(4) = {0.069966, 0.718906, 0, 1.0};
Point(5) = {0.066981, 0.720305, 0, 1.0};
Point(6) = {0.063250, 0.721939, 0, 1.0};
Point(7) = {0.058815, 0.723829, 0, 1.0};
Point(8) = {0.053773, 0.725967, 0, 1.0};
Point(9) = {0.048216, 0.728317, 0, 1.0};
Point(10) = {0.042245, 0.730831, 0, 1.0};
Point(11) = {0.035955, 0.733447, 0, 1.0};
Point(12) = {0.029440, 0.736097, 0, 1.0};
Point(13) = {0.022786, 0.738706, 0, 1.0};
Point(14) = {0.016072, 0.741188, 0, 1.0};
Point(15) = {0.009366, 0.743439, 0, 1.0};
Point(16) = {0.002671, 0.745354, 0, 1.0};
Point(17) = {-0.004050, 0.746912, 0, 1.0};
Point(18) = {-0.010710, 0.748136, 0, 1.0};
Point(19) = {-0.017423, 0.749064, 0, 1.0};
Point(20) = {-0.023955, 0.749673, 0, 1.0};
Point(21) = {-0.030313, 0.749980, 0, 1.0};
Point(22) = {-0.036438, 0.750000, 0, 1.0};
Point(23) = {-0.042268, 0.749748, 0, 1.0};
Point(24) = {-0.047748, 0.749238, 0, 1.0};
Point(25) = {-0.052824, 0.748489, 0, 1.0};
Point(26) = {-0.057453, 0.747524, 0, 1.0};
Point(27) = {-0.061591, 0.746370, 0, 1.0};
Point(28) = {-0.065200, 0.745057, 0, 1.0};
Point(29) = {-0.068248, 0.743629, 0, 1.0};
Point(30) = {-0.070706, 0.742126, 0, 1.0};
Point(31) = {-0.072548, 0.740604, 0, 1.0};
Point(32) = {-0.073749, 0.739136, 0, 1.0};
Point(33) = {-0.074072, 0.738514, 0, 1.0};
Point(34) = {-0.074209, 0.738124, 0, 1.0};
Point(35) = {-0.074262, 0.737879, 0, 1.0};
Point(36) = {-0.074286, 0.737647, 0, 1.0};
Point(37) = {-0.074286, 0.737538, 0, 1.0};
Point(38) = {-0.074275, 0.737434, 0, 1.0};
Point(39) = {-0.074252, 0.737338, 0, 1.0};
Point(40) = {-0.074214, 0.737245, 0, 1.0};
Point(41) = {-0.074159, 0.737149, 0, 1.0};
Point(42) = {-0.074092, 0.737053, 0, 1.0};
Point(43) = {-0.073924, 0.736859, 0, 1.0};
Point(44) = {-0.073716, 0.736658, 0, 1.0};
Point(45) = {-0.073334, 0.736351, 0, 1.0};
Point(46) = {-0.072427, 0.735768, 0, 1.0};
Point(47) = {-0.070117, 0.734678, 0, 1.0};
Point(48) = {-0.066974, 0.733567, 0, 1.0};
Point(49) = {-0.063043, 0.732441, 0, 1.0};
Point(50) = {-0.058364, 0.731301, 0, 1.0};
Point(51) = {-0.053000, 0.730141, 0, 1.0};
Point(52) = {-0.047021, 0.728966, 0, 1.0};
Point(53) = {-0.040506, 0.727782, 0, 1.0};
Point(54) = {-0.033539, 0.726597, 0, 1.0};
Point(55) = {-0.026209, 0.725424, 0, 1.0};
Point(56) = {-0.018608, 0.724280, 0, 1.0};
Point(57) = {-0.010831, 0.723183, 0, 1.0};
Point(58) = {-0.002973, 0.722153, 0, 1.0};
Point(59) = {0.004869, 0.721212, 0, 1.0};
Point(60) = {0.012602, 0.720394, 0, 1.0};
Point(61) = {0.020131, 0.719751, 0, 1.0};
Point(62) = {0.027441, 0.719355, 0, 1.0};
Point(63) = {0.034560, 0.719191, 0, 1.0};
Point(64) = {0.041476, 0.719173, 0, 1.0};
Point(65) = {0.048132, 0.719190, 0, 1.0};
Point(66) = {0.054399, 0.719114, 0, 1.0};
Point(67) = {0.060095, 0.718884, 0, 1.0};
Point(68) = {0.065030, 0.718487, 0, 1.0};
Point(69) = {0.069027, 0.717965, 0, 1.0};
Point(70) = {0.071935, 0.717424, 0, 1.0};
Point(71) = {0.073679, 0.717006, 0, 1.0};
Point(72) = {-0.074256, -0.716847, 0, 1.0};
Point(73) = {-0.073722, -0.717079, 0, 1.0};
Point(74) = {-0.072233, -0.717785, 0, 1.0};
Point(75) = {-0.069966, -0.718906, 0, 1.0};
Point(76) = {-0.066981, -0.720305, 0, 1.0};
Point(77) = {-0.063250, -0.721939, 0, 1.0};
Point(78) = {-0.058815, -0.723829, 0, 1.0};
Point(79) = {-0.053773, -0.725967, 0, 1.0};
Point(80) = {-0.048216, -0.728317, 0, 1.0};
Point(81) = {-0.042245, -0.730831, 0, 1.0};
Point(82) = {-0.035955, -0.733447, 0, 1.0};
Point(83) = {-0.029440, -0.736097, 0, 1.0};
Point(84) = {-0.022786, -0.738706, 0, 1.0};
Point(85) = {-0.016072, -0.741188, 0, 1.0};
Point(86) = {-0.009366, -0.743439, 0, 1.0};
Point(87) = {-0.002671, -0.745354, 0, 1.0};
Point(88) = {0.004050, -0.746912, 0, 1.0};
Point(89) = {0.010710, -0.748136, 0, 1.0};
Point(90) = {0.017423, -0.749064, 0, 1.0};
Point(91) = {0.023955, -0.749673, 0, 1.0};
Point(92) = {0.030313, -0.749980, 0, 1.0};
Point(93) = {0.036438, -0.750000, 0, 1.0};
Point(94) = {0.042268, -0.749748, 0, 1.0};
Point(95) = {0.047748, -0.749238, 0, 1.0};
Point(96) = {0.052824, -0.748489, 0, 1.0};
Point(97) = {0.057453, -0.747524, 0, 1.0};
Point(98) = {0.061591, -0.746370, 0, 1.0};
Point(99) = {0.065200, -0.745057, 0, 1.0};
Point(100) = {0.068248, -0.743629, 0, 1.0};
Point(101) = {0.070706, -0.742126, 0, 1.0};
Point(102) = {0.072548, -0.740604, 0, 1.0};
Point(103) = {0.073749, -0.739136, 0, 1.0};
Point(104) = {0.074072, -0.738514, 0, 1.0};
Point(105) = {0.074209, -0.738124, 0, 1.0};
Point(106) = {0.074262, -0.737879, 0, 1.0};
Point(107) = {0.074286, -0.737647, 0, 1.0};
Point(108) = {0.074286, -0.737538, 0, 1.0};
Point(109) = {0.074275, -0.737434, 0, 1.0};
Point(110) = {0.074252, -0.737338, 0, 1.0};
Point(111) = {0.074214, -0.737245, 0, 1.0};
Point(112) = {0.074159, -0.737149, 0, 1.0};
Point(113) = {0.074092, -0.737053, 0, 1.0};
Point(114) = {0.073924, -0.736859, 0, 1.0};
Point(115) = {0.073716, -0.736658, 0, 1.0};
Point(116) = {0.073334, -0.736351, 0, 1.0};
Point(117) = {0.072427, -0.735768, 0, 1.0};
Point(118) = {0.070117, -0.734678, 0, 1.0};
Point(119) = {0.066974, -0.733567, 0, 1.0};
Point(120) = {0.063043, -0.732441, 0, 1.0};
Point(121) = {0.058364, -0.731301, 0, 1.0};
Point(122) = {0.053000, -0.730141, 0, 1.0};
Point(123) = {0.047021, -0.728966, 0, 1.0};
Point(124) = {0.040506, -0.727782, 0, 1.0};
Point(125) = {0.033539, -0.726597, 0, 1.0};
Point(126) = {0.026209, -0.725424, 0, 1.0};
Point(127) = {0.018608, -0.724280, 0, 1.0};
Point(128) = {0.010831, -0.723183, 0, 1.0};
Point(129) = {0.002973, -0.722153, 0, 1.0};
Point(130) = {-0.004869, -0.721212, 0, 1.0};
Point(131) = {-0.012602, -0.720394, 0, 1.0};
Point(132) = {-0.020131, -0.719751, 0, 1.0};
Point(133) = {-0.027441, -0.719355, 0, 1.0};
Point(134) = {-0.034560, -0.719191, 0, 1.0};
Point(135) = {-0.041476, -0.719173, 0, 1.0};
Point(136) = {-0.048132, -0.719190, 0, 1.0};
Point(137) = {-0.054399, -0.719114, 0, 1.0};
Point(138) = {-0.060095, -0.718884, 0, 1.0};
Point(139) = {-0.065030, -0.718487, 0, 1.0};
Point(140) = {-0.069027, -0.717965, 0, 1.0};
Point(141) = {-0.071935, -0.717424, 0, 1.0};
Point(142) = {-0.073679, -0.717006, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:71};
Spline(4) = {71,1};

// Lines: second blade (splines 5-8)
Spline(5) = {72:92};
Spline(6) = {92:125};
Spline(7) = {125:142};
Spline(8) = {142,72};

// Outer domain (points 20001-4 and lines)
Point(143) = {-13.50000000, -15.00000000, 0, 1.0};
Point(144) = {-13.50000000, 15.00000000, 0, 1.0};
Point(145) = {13.50000000, 15.00000000, 0, 1.0};
Point(146) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {143, 144};
Line(12) = {144, 145};
Line(13) = {145, 146};
Line(14) = {143, 146};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074909, 0.740392, 0, 1.0};
Point(2) = {0.073963, 0.740564, 0, 1.0};
Point(3) = {0.071938, 0.740937, 0, 1.0};
Point(4) = {0.069568, 0.741381, 0, 1.0};
Point(5) = {0.066865, 0.741894, 0, 1.0};
Point(6) = {0.063841, 0.742474, 0, 1.0};
Point(7) = {0.060513, 0.743113, 0, 1.0};
Point(8) = {0.056895, 0.743801, 0, 1.0};
Point(9) = {0.053006, 0.744524, 0, 1.0};
Point(10) = {0.048867, 0.745261, 0, 1.0};
Point(11) = {0.044497, 0.745974, 0, 1.0};
Point(12) = {0.039920, 0.746654, 0, 1.0};
Point(13) = {0.035156, 0.747302, 0, 1.0};
Point(14) = {0.030229, 0.747908, 0, 1.0};
Point(15) = {0.025164, 0.748461, 0, 1.0};
Point(16) = {0.019986, 0.748949, 0, 1.0};
Point(17) = {0.014720, 0.749359, 0, 1.0};
Point(18) = {0.009393, 0.749679, 0, 1.0};
Point(19) = {0.004030, 0.749896, 0, 1.0};
Point(20) = {-0.001342, 0.750000, 0, 1.0};
Point(21) = {-0.006696, 0.749983, 0, 1.0};
Point(22) = {-0.012006, 0.749838, 0, 1.0};
Point(23) = {-0.017246, 0.749565, 0, 1.0};
Point(24) = {-0.022392, 0.749199, 0, 1.0};
Point(25) = {-0.027419, 0.748754, 0, 1.0};
Point(26) = {-0.032303, 0.748238, 0, 1.0};
Point(27) = {-0.037021, 0.747656, 0, 1.0};
Point(28) = {-0.041549, 0.747016, 0, 1.0};
Point(29) = {-0.045865, 0.746322, 0, 1.0};
Point(30) = {-0.049949, 0.745579, 0, 1.0};
Point(31) = {-0.053780, 0.744791, 0, 1.0};
Point(32) = {-0.057341, 0.743960, 0, 1.0};
Point(33) = {-0.060613, 0.743089, 0, 1.0};
Point(34) = {-0.063580, 0.742179, 0, 1.0};
Point(35) = {-0.066228, 0.741232, 0, 1.0};
Point(36) = {-0.068544, 0.740247, 0, 1.0};
Point(37) = {-0.070516, 0.739228, 0, 1.0};
Point(38) = {-0.072135, 0.738175, 0, 1.0};
Point(39) = {-0.073393, 0.737093, 0, 1.0};
Point(40) = {-0.074283, 0.735984, 0, 1.0};
Point(41) = {-0.074802, 0.734859, 0, 1.0};
Point(42) = {-0.074947, 0.733732, 0, 1.0};
Point(43) = {-0.074720, 0.732696, 0, 1.0};
Point(44) = {-0.074125, 0.731789, 0, 1.0};
Point(45) = {-0.073163, 0.730996, 0, 1.0};
Point(46) = {-0.071838, 0.730306, 0, 1.0};
Point(47) = {-0.070157, 0.729712, 0, 1.0};
Point(48) = {-0.068127, 0.729206, 0, 1.0};
Point(49) = {-0.065758, 0.728780, 0, 1.0};
Point(50) = {-0.063061, 0.728427, 0, 1.0};
Point(51) = {-0.060049, 0.728141, 0, 1.0};
Point(52) = {-0.056735, 0.727916, 0, 1.0};
Point(53) = {-0.053137, 0.727746, 0, 1.0};
Point(54) = {-0.049272, 0.727627, 0, 1.0};
Point(55) = {-0.045157, 0.727556, 0, 1.0};
Point(56) = {-0.040814, 0.727531, 0, 1.0};
Point(57) = {-0.036262, 0.727550, 0, 1.0};
Point(58) = {-0.031525, 0.727614, 0, 1.0};
Point(59) = {-0.026626, 0.727723, 0, 1.0};
Point(60) = {-0.021588, 0.727881, 0, 1.0};
Point(61) = {-0.016436, 0.728090, 0, 1.0};
Point(62) = {-0.011195, 0.728359, 0, 1.0};
Point(63) = {-0.005894, 0.728720, 0, 1.0};
Point(64) = {-0.000556, 0.729169, 0, 1.0};
Point(65) = {0.004792, 0.729698, 0, 1.0};
Point(66) = {0.010124, 0.730293, 0, 1.0};
Point(67) = {0.015415, 0.730942, 0, 1.0};
Point(68) = {0.020639, 0.731631, 0, 1.0};
Point(69) = {0.025772, 0.732344, 0, 1.0};
Point(70) = {0.030789, 0.733066, 0, 1.0};
Point(71) = {0.035666, 0.733783, 0, 1.0};
Point(72) = {0.040379, 0.734478, 0, 1.0};
Point(73) = {0.044906, 0.735136, 0, 1.0};
Point(74) = {0.049226, 0.735735, 0, 1.0};
Point(75) = {0.053318, 0.736261, 0, 1.0};
Point(76) = {0.057161, 0.736738, 0, 1.0};
Point(77) = {0.060737, 0.737172, 0, 1.0};
Point(78) = {0.064027, 0.737565, 0, 1.0};
Point(79) = {0.067015, 0.737919, 0, 1.0};
Point(80) = {0.069687, 0.738235, 0, 1.0};
Point(81) = {0.072029, 0.738512, 0, 1.0};
Point(82) = {0.074031, 0.738750, 0, 1.0};
Point(83) = {0.074967, 0.738856, 0, 1.0};
Point(84) = {-0.074909, -0.740392, 0, 1.0};
Point(85) = {-0.073963, -0.740564, 0, 1.0};
Point(86) = {-0.071938, -0.740937, 0, 1.0};
Point(87) = {-0.069568, -0.741381, 0, 1.0};
Point(88) = {-0.066865, -0.741894, 0, 1.0};
Point(89) = {-0.063841, -0.742474, 0, 1.0};
Point(90) = {-0.060513, -0.743113, 0, 1.0};
Point(91) = {-0.056895, -0.743801, 0, 1.0};
Point(92) = {-0.053006, -0.744524, 0, 1.0};
Point(93) = {-0.048867, -0.745261, 0, 1.0};
Point(94) = {-0.044497, -0.745974, 0, 1.0};
Point(95) = {-0.039920, -0.746654, 0, 1.0};
Point(96) = {-0.035156, -0.747302, 0, 1.0};
Point(97) = {-0.030229, -0.747908, 0, 1.0};
Point(98) = {-0.025164, -0.748461, 0, 1.0};
Point(99) = {-0.019986, -0.748949, 0, 1.0};
Point(100) = {-0.014720, -0.749359, 0, 1.0};
Point(101) = {-0.009393, -0.749679, 0, 1.0};
Point(102) = {-0.004030, -0.749896, 0, 1.0};
Point(103) = {0.001342, -0.750000, 0, 1.0};
Point(104) = {0.006696, -0.749983, 0, 1.0};
Point(105) = {0.012006, -0.749838, 0, 1.0};
Point(106) = {0.017246, -0.749565, 0, 1.0};
Point(107) = {0.022392, -0.749199, 0, 1.0};
Point(108) = {0.027419, -0.748754, 0, 1.0};
Point(109) = {0.032303, -0.748238, 0, 1.0};
Point(110) = {0.037021, -0.747656, 0, 1.0};
Point(111) = {0.041549, -0.747016, 0, 1.0};
Point(112) = {0.045865, -0.746322, 0, 1.0};
Point(113) = {0.049949, -0.745579, 0, 1.0};
Point(114) = {0.053780, -0.744791, 0, 1.0};
Point(115) = {0.057341, -0.743960, 0, 1.0};
Point(116) = {0.060613, -0.743089, 0, 1.0};
Point(117) = {0.063580, -0.742179, 0, 1.0};
Point(118) = {0.066228, -0.741232, 0, 1.0};
Point(119) = {0.068544, -0.740247, 0, 1.0};
Point(120) = {0.070516, -0.739228, 0, 1.0};
Point(121) = {0.072135, -0.738175, 0, 1.0};
Point(122) = {0.073393, -0.737093, 0, 1.0};
Point(123) = {0.074283, -0.735984, 0, 1.0};
Point(124) = {0.074802, -0.734859, 0, 1.0};
Point(125) = {0.074947, -0.733732, 0, 1.0};
Point(126) = {0.074720, -0.732696, 0, 1.0};
Point(127) = {0.074125, -0.731789, 0, 1.0};
Point(128) = {0.073163, -0.730996, 0, 1.0};
Point(129) = {0.071838, -0.730306, 0, 1.0};
Point(130) = {0.070157, -0.729712, 0, 1.0};
Point(131) = {0.068127, -0.729206, 0, 1.0};
Point(132) = {0.065758, -0.728780, 0, 1.0};
Point(133) = {0.063061, -0.728427, 0, 1.0};
Point(134) = {0.060049, -0.728141, 0, 1.0};
Point(135) = {0.056735, -0.727916, 0, 1.0};
Point(136) = {0.053137, -0.727746, 0, 1.0};
Point(137) = {0.049272, -0.727627, 0, 1.0};
Point(138) = {0.045157, -0.727556, 0, 1.0};
Point(139) = {0.040814, -0.727531, 0, 1.0};
Point(140) = {0.036262, -0.727550, 0, 1.0};
Point(141) = {0.031525, -0.727614, 0, 1.0};
Point(142) = {0.026626, -0.727723, 0, 1.0};
Point(143) = {0.021588, -0.727881, 0, 1.0};
Point(144) = {0.016436, -0.728090, 0, 1.0};
Point(145) = {0.011195, -0.728359, 0, 1.0};
Point(146) = {0.005894, -0.728720, 0, 1.0};
Point(147) = {0.000556, -0.729169, 0, 1.0};
Point(148) = {-0.004792, -0.729698, 0, 1.0};
Point(149) = {-0.010124, -0.730293, 0, 1.0};
Point(150) = {-0.015415, -0.730942, 0, 1.0};
Point(151) = {-0.020639, -0.731631, 0, 1.0};
Point(152) = {-0.025772, -0.732344, 0, 1.0};
Point(153) = {-0.030789, -0.733066, 0, 1.0};
Point(154) = {-0.035666, -0.733783, 0, 1.0};
Point(155) = {-0.040379, -0.734478, 0, 1.0};
Point(156) = {-0.044906, -0.735136, 0, 1.0};
Point(157) = {-0.049226, -0.735735, 0, 1.0};
Point(158) = {-0.053318, -0.736261, 0, 1.0};
Point(159) = {-0.057161, -0.736738, 0, 1.0};
Point(160) = {-0.060737, -0.737172, 0, 1.0};
Point(161) = {-0.064027, -0.737565, 0, 1.0};
Point(162) = {-0.067015, -0.737919, 0, 1.0};
Point(163) = {-0.069687, -0.738235, 0, 1.0};
Point(164) = {-0.072029, -0.738512, 0, 1.0};
Point(165) = {-0.074031, -0.738750, 0, 1.0};
Point(166) = {-0.074967, -0.738856, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:57};
Spline(3) = {57:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:140};
Spline(7) = {140:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111712, 0.725028, 0, 1.0};
Point(2) = {0.111274, 0.725286, 0, 1.0};
Point(3) = {0.110068, 0.726030, 0, 1.0};
Point(4) = {0.108254, 0.727129, 0, 1.0};
Point(5) = {0.105842, 0.728407, 0, 1.0};
Point(6) = {0.102767, 0.729797, 0, 1.0};
Point(7) = {0.099031, 0.731310, 0, 1.0};
Point(8) = {0.094686, 0.732932, 0, 1.0};
Point(9) = {0.089787, 0.734626, 0, 1.0};
Point(10) = {0.084385, 0.736363, 0, 1.0};
Point(11) = {0.078537, 0.738105, 0, 1.0};
Point(12) = {0.072302, 0.739822, 0, 1.0};
Point(13) = {0.065740, 0.741482, 0, 1.0};
Point(14) = {0.058916, 0.743059, 0, 1.0};
Point(15) = {0.051900, 0.744526, 0, 1.0};
Point(16) = {0.044758, 0.745858, 0, 1.0};
Point(17) = {0.037560, 0.747035, 0, 1.0};
Point(18) = {0.030375, 0.748034, 0, 1.0};
Point(19) = {0.023268, 0.748841, 0, 1.0};
Point(20) = {0.016306, 0.749443, 0, 1.0};
Point(21) = {0.009554, 0.749832, 0, 1.0};
Point(22) = {0.003071, 0.750000, 0, 1.0};
Point(23) = {-0.003087, 0.749949, 0, 1.0};
Point(24) = {-0.008867, 0.749683, 0, 1.0};
Point(25) = {-0.014220, 0.749209, 0, 1.0};
Point(26) = {-0.019102, 0.748544, 0, 1.0};
Point(27) = {-0.023473, 0.747703, 0, 1.0};
Point(28) = {-0.027299, 0.746713, 0, 1.0};
Point(29) = {-0.030549, 0.745598, 0, 1.0};
Point(30) = {-0.033203, 0.744395, 0, 1.0};
Point(31) = {-0.035240, 0.743142, 0, 1.0};
Point(32) = {-0.036650, 0.741896, 0, 1.0};
Point(33) = {-0.037417, 0.740738, 0, 1.0};
Point(34) = {-0.037398, 0.739797, 0, 1.0};
Point(35) = {-0.036486, 0.738977, 0, 1.0};
Point(36) = {-0.034745, 0.738157, 0, 1.0};
Point(37) = {-0.032225, 0.737387, 0, 1.0};
Point(38) = {-0.028948, 0.736689, 0, 1.0};
Point(39) = {-0.024933, 0.736080, 0, 1.0};
Point(40) = {-0.020211, 0.735562, 0, 1.0};
Point(41) = {-0.014817, 0.735140, 0, 1.0};
Point(42) = {-0.008791, 0.734806, 0, 1.0};
Point(43) = {-0.002187, 0.734551, 0, 1.0};
Point(44) = {0.004937, 0.734364, 0, 1.0};
Point(45) = {0.012514, 0.734222, 0, 1.0};
Point(46) = {0.020463, 0.734105, 0, 1.0};
Point(47) = {0.028704, 0.733989, 0, 1.0};
Point(48) = {0.037140, 0.733846, 0, 1.0};
Point(49) = {0.045669, 0.733653, 0, 1.0};
Point(50) = {0.054183, 0.733380, 0, 1.0};
Point(51) = {0.062563, 0.733008, 0, 1.0};
Point(52) = {0.070693, 0.732518, 0, 1.0};
Point(53) = {0.078446, 0.731897, 0, 1.0};
Point(54) = {0.085697, 0.731140, 0, 1.0};
Point(55) = {0.092317, 0.730247, 0, 1.0};
Point(56) = {0.098176, 0.729231, 0, 1.0};
Point(57) = {0.103139, 0.728106, 0, 1.0};
Point(58) = {0.107027, 0.726936, 0, 1.0};
Point(59) = {0.109703, 0.725912, 0, 1.0};
Point(60) = {0.111223, 0.725249, 0, 1.0};
Point(61) = {-0.111712, -0.725028, 0, 1.0};
Point(62) = {-0.111274, -0.725286, 0, 1.0};
Point(63) = {-0.110068, -0.726030, 0, 1.0};
Point(64) = {-0.108254, -0.727129, 0, 1.0};
Point(65) = {-0.105842, -0.728407, 0, 1.0};
Point(66) = {-0.102767, -0.729797, 0, 1.0};
Point(67) = {-0.099031, -0.731310, 0, 1.0};
Point(68) = {-0.094686, -0.732932, 0, 1.0};
Point(69) = {-0.089787, -0.734626, 0, 1.0};
Point(70) = {-0.084385, -0.736363, 0, 1.0};
Point(71) = {-0.078537, -0.738105, 0, 1.0};
Point(72) = {-0.072302, -0.739822, 0, 1.0};
Point(73) = {-0.065740, -0.741482, 0, 1.0};
Point(74) = {-0.058916, -0.743059, 0, 1.0};
Point(75) = {-0.051900, -0.744526, 0, 1.0};
Point(76) = {-0.044758, -0.745858, 0, 1.0};
Point(77) = {-0.037560, -0.747035, 0, 1.0};
Point(78) = {-0.030375, -0.748034, 0, 1.0};
Point(79) = {-0.023268, -0.748841, 0, 1.0};
Point(80) = {-0.016306, -0.749443, 0, 1.0};
Point(81) = {-0.009554, -0.749832, 0, 1.0};
Point(82) = {-0.003071, -0.750000, 0, 1.0};
Point(83) = {0.003087, -0.749949, 0, 1.0};
Point(84) = {0.008867, -0.749683, 0, 1.0};
Point(85) = {0.014220, -0.749209, 0, 1.0};
Point(86) = {0.019102, -0.748544, 0, 1.0};
Point(87) = {0.023473, -0.747703, 0, 1.0};
Point(88) = {0.027299, -0.746713, 0, 1.0};
Point(89) = {0.030549, -0.745598, 0, 1.0};
Point(90) = {0.033203, -0.744395, 0, 1.0};
Point(91) = {0.035240, -0.743142, 0, 1.0};
Point(92) = {0.036650, -0.741896, 0, 1.0};
Point(93) = {0.037417, -0.740738, 0, 1.0};
Point(94) = {0.037398, -0.739797, 0, 1.0};
Point(95) = {0.036486, -0.738977, 0, 1.0};
Point(96) = {0.034745, -0.738157, 0, 1.0};
Point(97) = {0.032225, -0.737387, 0, 1.0};
Point(98) = {0.028948, -0.736689, 0, 1.0};
Point(99) = {0.024933, -0.736080, 0, 1.0};
Point(100) = {0.020211, -0.735562, 0, 1.0};
Point(101) = {0.014817, -0.735140, 0, 1.0};
Point(102) = {0.008791, -0.734806, 0, 1.0};
Point(103) = {0.002187, -0.734551, 0, 1.0};
Point(104) = {-0.004937, -0.734364, 0, 1.0};
Point(105) = {-0.012514, -0.734222, 0, 1.0};
Point(106) = {-0.020463, -0.734105, 0, 1.0};
Point(107) = {-0.028704, -0.733989, 0, 1.0};
Point(108) = {-0.037140, -0.733846, 0, 1.0};
Point(109) = {-0.045669, -0.733653, 0, 1.0};
Point(110) = {-0.054183, -0.733380, 0, 1.0};
Point(111) = {-0.062563, -0.733008, 0, 1.0};
Point(112) = {-0.070693, -0.732518, 0, 1.0};
Point(113) = {-0.078446, -0.731897, 0, 1.0};
Point(114) = {-0.085697, -0.731140, 0, 1.0};
Point(115) = {-0.092317, -0.730247, 0, 1.0};
Point(116) = {-0.098176, -0.729231, 0, 1.0};
Point(117) = {-0.103139, -0.728106, 0, 1.0};
Point(118) = {-0.107027, -0.726936, 0, 1.0};
Point(119) = {-0.109703, -0.725912, 0, 1.0};
Point(120) = {-0.111223, -0.725249, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:82};
Spline(6) = {82:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
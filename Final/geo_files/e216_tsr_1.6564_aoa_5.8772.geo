SetFactory("OpenCASCADE");

Point(1) = {0.111780, 0.725036, 0, 1.0};
Point(2) = {0.111342, 0.725294, 0, 1.0};
Point(3) = {0.110137, 0.726037, 0, 1.0};
Point(4) = {0.108324, 0.727136, 0, 1.0};
Point(5) = {0.105912, 0.728414, 0, 1.0};
Point(6) = {0.102838, 0.729804, 0, 1.0};
Point(7) = {0.099103, 0.731316, 0, 1.0};
Point(8) = {0.094760, 0.732937, 0, 1.0};
Point(9) = {0.089861, 0.734631, 0, 1.0};
Point(10) = {0.084461, 0.736367, 0, 1.0};
Point(11) = {0.078615, 0.738108, 0, 1.0};
Point(12) = {0.072382, 0.739825, 0, 1.0};
Point(13) = {0.065822, 0.741484, 0, 1.0};
Point(14) = {0.059000, 0.743061, 0, 1.0};
Point(15) = {0.051986, 0.744528, 0, 1.0};
Point(16) = {0.044847, 0.745859, 0, 1.0};
Point(17) = {0.037651, 0.747036, 0, 1.0};
Point(18) = {0.030468, 0.748034, 0, 1.0};
Point(19) = {0.023363, 0.748841, 0, 1.0};
Point(20) = {0.016404, 0.749443, 0, 1.0};
Point(21) = {0.009654, 0.749832, 0, 1.0};
Point(22) = {0.003173, 0.750000, 0, 1.0};
Point(23) = {-0.002983, 0.749949, 0, 1.0};
Point(24) = {-0.008761, 0.749683, 0, 1.0};
Point(25) = {-0.014113, 0.749209, 0, 1.0};
Point(26) = {-0.018993, 0.748545, 0, 1.0};
Point(27) = {-0.023363, 0.747704, 0, 1.0};
Point(28) = {-0.027188, 0.746714, 0, 1.0};
Point(29) = {-0.030437, 0.745600, 0, 1.0};
Point(30) = {-0.033090, 0.744397, 0, 1.0};
Point(31) = {-0.035126, 0.743144, 0, 1.0};
Point(32) = {-0.036536, 0.741898, 0, 1.0};
Point(33) = {-0.037303, 0.740741, 0, 1.0};
Point(34) = {-0.037284, 0.739800, 0, 1.0};
Point(35) = {-0.036372, 0.738981, 0, 1.0};
Point(36) = {-0.034632, 0.738161, 0, 1.0};
Point(37) = {-0.032112, 0.737391, 0, 1.0};
Point(38) = {-0.028836, 0.736693, 0, 1.0};
Point(39) = {-0.024823, 0.736084, 0, 1.0};
Point(40) = {-0.020102, 0.735567, 0, 1.0};
Point(41) = {-0.014709, 0.735144, 0, 1.0};
Point(42) = {-0.008685, 0.734810, 0, 1.0};
Point(43) = {-0.002083, 0.734556, 0, 1.0};
Point(44) = {0.005038, 0.734369, 0, 1.0};
Point(45) = {0.012612, 0.734227, 0, 1.0};
Point(46) = {0.020560, 0.734109, 0, 1.0};
Point(47) = {0.028798, 0.733994, 0, 1.0};
Point(48) = {0.037231, 0.733851, 0, 1.0};
Point(49) = {0.045757, 0.733658, 0, 1.0};
Point(50) = {0.054269, 0.733385, 0, 1.0};
Point(51) = {0.062647, 0.733014, 0, 1.0};
Point(52) = {0.070774, 0.732524, 0, 1.0};
Point(53) = {0.078525, 0.731902, 0, 1.0};
Point(54) = {0.085773, 0.731146, 0, 1.0};
Point(55) = {0.092391, 0.730253, 0, 1.0};
Point(56) = {0.098249, 0.729237, 0, 1.0};
Point(57) = {0.103210, 0.728113, 0, 1.0};
Point(58) = {0.107096, 0.726943, 0, 1.0};
Point(59) = {0.109772, 0.725920, 0, 1.0};
Point(60) = {0.111291, 0.725257, 0, 1.0};
Point(61) = {-0.111780, -0.725036, 0, 1.0};
Point(62) = {-0.111342, -0.725294, 0, 1.0};
Point(63) = {-0.110137, -0.726037, 0, 1.0};
Point(64) = {-0.108324, -0.727136, 0, 1.0};
Point(65) = {-0.105912, -0.728414, 0, 1.0};
Point(66) = {-0.102838, -0.729804, 0, 1.0};
Point(67) = {-0.099103, -0.731316, 0, 1.0};
Point(68) = {-0.094760, -0.732937, 0, 1.0};
Point(69) = {-0.089861, -0.734631, 0, 1.0};
Point(70) = {-0.084461, -0.736367, 0, 1.0};
Point(71) = {-0.078615, -0.738108, 0, 1.0};
Point(72) = {-0.072382, -0.739825, 0, 1.0};
Point(73) = {-0.065822, -0.741484, 0, 1.0};
Point(74) = {-0.059000, -0.743061, 0, 1.0};
Point(75) = {-0.051986, -0.744528, 0, 1.0};
Point(76) = {-0.044847, -0.745859, 0, 1.0};
Point(77) = {-0.037651, -0.747036, 0, 1.0};
Point(78) = {-0.030468, -0.748034, 0, 1.0};
Point(79) = {-0.023363, -0.748841, 0, 1.0};
Point(80) = {-0.016404, -0.749443, 0, 1.0};
Point(81) = {-0.009654, -0.749832, 0, 1.0};
Point(82) = {-0.003173, -0.750000, 0, 1.0};
Point(83) = {0.002983, -0.749949, 0, 1.0};
Point(84) = {0.008761, -0.749683, 0, 1.0};
Point(85) = {0.014113, -0.749209, 0, 1.0};
Point(86) = {0.018993, -0.748545, 0, 1.0};
Point(87) = {0.023363, -0.747704, 0, 1.0};
Point(88) = {0.027188, -0.746714, 0, 1.0};
Point(89) = {0.030437, -0.745600, 0, 1.0};
Point(90) = {0.033090, -0.744397, 0, 1.0};
Point(91) = {0.035126, -0.743144, 0, 1.0};
Point(92) = {0.036536, -0.741898, 0, 1.0};
Point(93) = {0.037303, -0.740741, 0, 1.0};
Point(94) = {0.037284, -0.739800, 0, 1.0};
Point(95) = {0.036372, -0.738981, 0, 1.0};
Point(96) = {0.034632, -0.738161, 0, 1.0};
Point(97) = {0.032112, -0.737391, 0, 1.0};
Point(98) = {0.028836, -0.736693, 0, 1.0};
Point(99) = {0.024823, -0.736084, 0, 1.0};
Point(100) = {0.020102, -0.735567, 0, 1.0};
Point(101) = {0.014709, -0.735144, 0, 1.0};
Point(102) = {0.008685, -0.734810, 0, 1.0};
Point(103) = {0.002083, -0.734556, 0, 1.0};
Point(104) = {-0.005038, -0.734369, 0, 1.0};
Point(105) = {-0.012612, -0.734227, 0, 1.0};
Point(106) = {-0.020560, -0.734109, 0, 1.0};
Point(107) = {-0.028798, -0.733994, 0, 1.0};
Point(108) = {-0.037231, -0.733851, 0, 1.0};
Point(109) = {-0.045757, -0.733658, 0, 1.0};
Point(110) = {-0.054269, -0.733385, 0, 1.0};
Point(111) = {-0.062647, -0.733014, 0, 1.0};
Point(112) = {-0.070774, -0.732524, 0, 1.0};
Point(113) = {-0.078525, -0.731902, 0, 1.0};
Point(114) = {-0.085773, -0.731146, 0, 1.0};
Point(115) = {-0.092391, -0.730253, 0, 1.0};
Point(116) = {-0.098249, -0.729237, 0, 1.0};
Point(117) = {-0.103210, -0.728113, 0, 1.0};
Point(118) = {-0.107096, -0.726943, 0, 1.0};
Point(119) = {-0.109772, -0.725920, 0, 1.0};
Point(120) = {-0.111291, -0.725257, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:82};
Spline(6) = {82:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
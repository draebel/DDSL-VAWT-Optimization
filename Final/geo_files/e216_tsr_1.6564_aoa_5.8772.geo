SetFactory("OpenCASCADE");

Point(1) = {0.074569, 0.725021, 0, 1.0};
Point(2) = {0.074131, 0.725278, 0, 1.0};
Point(3) = {0.072926, 0.726022, 0, 1.0};
Point(4) = {0.071111, 0.727122, 0, 1.0};
Point(5) = {0.068698, 0.728400, 0, 1.0};
Point(6) = {0.065622, 0.729791, 0, 1.0};
Point(7) = {0.061885, 0.731304, 0, 1.0};
Point(8) = {0.057539, 0.732926, 0, 1.0};
Point(9) = {0.052637, 0.734621, 0, 1.0};
Point(10) = {0.047234, 0.736358, 0, 1.0};
Point(11) = {0.041384, 0.738101, 0, 1.0};
Point(12) = {0.035147, 0.739818, 0, 1.0};
Point(13) = {0.028583, 0.741479, 0, 1.0};
Point(14) = {0.021757, 0.743057, 0, 1.0};
Point(15) = {0.014739, 0.744524, 0, 1.0};
Point(16) = {0.007595, 0.745857, 0, 1.0};
Point(17) = {0.000394, 0.747034, 0, 1.0};
Point(18) = {-0.006793, 0.748033, 0, 1.0};
Point(19) = {-0.013902, 0.748840, 0, 1.0};
Point(20) = {-0.020866, 0.749443, 0, 1.0};
Point(21) = {-0.027620, 0.749832, 0, 1.0};
Point(22) = {-0.034105, 0.750000, 0, 1.0};
Point(23) = {-0.040265, 0.749949, 0, 1.0};
Point(24) = {-0.046046, 0.749683, 0, 1.0};
Point(25) = {-0.051402, 0.749209, 0, 1.0};
Point(26) = {-0.056285, 0.748544, 0, 1.0};
Point(27) = {-0.060657, 0.747703, 0, 1.0};
Point(28) = {-0.064485, 0.746712, 0, 1.0};
Point(29) = {-0.067735, 0.745597, 0, 1.0};
Point(30) = {-0.070390, 0.744394, 0, 1.0};
Point(31) = {-0.072427, 0.743140, 0, 1.0};
Point(32) = {-0.073838, 0.741893, 0, 1.0};
Point(33) = {-0.074606, 0.740735, 0, 1.0};
Point(34) = {-0.074587, 0.739794, 0, 1.0};
Point(35) = {-0.073674, 0.738974, 0, 1.0};
Point(36) = {-0.071933, 0.738154, 0, 1.0};
Point(37) = {-0.069412, 0.737383, 0, 1.0};
Point(38) = {-0.066134, 0.736685, 0, 1.0};
Point(39) = {-0.062118, 0.736076, 0, 1.0};
Point(40) = {-0.057394, 0.735558, 0, 1.0};
Point(41) = {-0.051998, 0.735135, 0, 1.0};
Point(42) = {-0.045970, 0.734801, 0, 1.0};
Point(43) = {-0.039364, 0.734546, 0, 1.0};
Point(44) = {-0.032238, 0.734359, 0, 1.0};
Point(45) = {-0.024660, 0.734217, 0, 1.0};
Point(46) = {-0.016707, 0.734100, 0, 1.0};
Point(47) = {-0.008464, 0.733984, 0, 1.0};
Point(48) = {-0.000025, 0.733841, 0, 1.0};
Point(49) = {0.008506, 0.733648, 0, 1.0};
Point(50) = {0.017023, 0.733374, 0, 1.0};
Point(51) = {0.025406, 0.733003, 0, 1.0};
Point(52) = {0.033538, 0.732513, 0, 1.0};
Point(53) = {0.041294, 0.731891, 0, 1.0};
Point(54) = {0.048547, 0.731134, 0, 1.0};
Point(55) = {0.055169, 0.730241, 0, 1.0};
Point(56) = {0.061030, 0.729225, 0, 1.0};
Point(57) = {0.065994, 0.728100, 0, 1.0};
Point(58) = {0.069883, 0.726928, 0, 1.0};
Point(59) = {0.072561, 0.725905, 0, 1.0};
Point(60) = {0.074081, 0.725241, 0, 1.0};
Point(61) = {-0.074569, -0.725021, 0, 1.0};
Point(62) = {-0.074131, -0.725278, 0, 1.0};
Point(63) = {-0.072926, -0.726022, 0, 1.0};
Point(64) = {-0.071111, -0.727122, 0, 1.0};
Point(65) = {-0.068698, -0.728400, 0, 1.0};
Point(66) = {-0.065622, -0.729791, 0, 1.0};
Point(67) = {-0.061885, -0.731304, 0, 1.0};
Point(68) = {-0.057539, -0.732926, 0, 1.0};
Point(69) = {-0.052637, -0.734621, 0, 1.0};
Point(70) = {-0.047234, -0.736358, 0, 1.0};
Point(71) = {-0.041384, -0.738101, 0, 1.0};
Point(72) = {-0.035147, -0.739818, 0, 1.0};
Point(73) = {-0.028583, -0.741479, 0, 1.0};
Point(74) = {-0.021757, -0.743057, 0, 1.0};
Point(75) = {-0.014739, -0.744524, 0, 1.0};
Point(76) = {-0.007595, -0.745857, 0, 1.0};
Point(77) = {-0.000394, -0.747034, 0, 1.0};
Point(78) = {0.006793, -0.748033, 0, 1.0};
Point(79) = {0.013902, -0.748840, 0, 1.0};
Point(80) = {0.020866, -0.749443, 0, 1.0};
Point(81) = {0.027620, -0.749832, 0, 1.0};
Point(82) = {0.034105, -0.750000, 0, 1.0};
Point(83) = {0.040265, -0.749949, 0, 1.0};
Point(84) = {0.046046, -0.749683, 0, 1.0};
Point(85) = {0.051402, -0.749209, 0, 1.0};
Point(86) = {0.056285, -0.748544, 0, 1.0};
Point(87) = {0.060657, -0.747703, 0, 1.0};
Point(88) = {0.064485, -0.746712, 0, 1.0};
Point(89) = {0.067735, -0.745597, 0, 1.0};
Point(90) = {0.070390, -0.744394, 0, 1.0};
Point(91) = {0.072427, -0.743140, 0, 1.0};
Point(92) = {0.073838, -0.741893, 0, 1.0};
Point(93) = {0.074606, -0.740735, 0, 1.0};
Point(94) = {0.074587, -0.739794, 0, 1.0};
Point(95) = {0.073674, -0.738974, 0, 1.0};
Point(96) = {0.071933, -0.738154, 0, 1.0};
Point(97) = {0.069412, -0.737383, 0, 1.0};
Point(98) = {0.066134, -0.736685, 0, 1.0};
Point(99) = {0.062118, -0.736076, 0, 1.0};
Point(100) = {0.057394, -0.735558, 0, 1.0};
Point(101) = {0.051998, -0.735135, 0, 1.0};
Point(102) = {0.045970, -0.734801, 0, 1.0};
Point(103) = {0.039364, -0.734546, 0, 1.0};
Point(104) = {0.032238, -0.734359, 0, 1.0};
Point(105) = {0.024660, -0.734217, 0, 1.0};
Point(106) = {0.016707, -0.734100, 0, 1.0};
Point(107) = {0.008464, -0.733984, 0, 1.0};
Point(108) = {0.000025, -0.733841, 0, 1.0};
Point(109) = {-0.008506, -0.733648, 0, 1.0};
Point(110) = {-0.017023, -0.733374, 0, 1.0};
Point(111) = {-0.025406, -0.733003, 0, 1.0};
Point(112) = {-0.033538, -0.732513, 0, 1.0};
Point(113) = {-0.041294, -0.731891, 0, 1.0};
Point(114) = {-0.048547, -0.731134, 0, 1.0};
Point(115) = {-0.055169, -0.730241, 0, 1.0};
Point(116) = {-0.061030, -0.729225, 0, 1.0};
Point(117) = {-0.065994, -0.728100, 0, 1.0};
Point(118) = {-0.069883, -0.726928, 0, 1.0};
Point(119) = {-0.072561, -0.725905, 0, 1.0};
Point(120) = {-0.074081, -0.725241, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:82};
Spline(6) = {82:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149994, 0.737620, 0, 1.0};
Point(2) = {0.149353, 0.737777, 0, 1.0};
Point(3) = {0.147519, 0.738267, 0, 1.0};
Point(4) = {0.144661, 0.739047, 0, 1.0};
Point(5) = {0.140859, 0.739996, 0, 1.0};
Point(6) = {0.136123, 0.741053, 0, 1.0};
Point(7) = {0.130500, 0.742221, 0, 1.0};
Point(8) = {0.124096, 0.743488, 0, 1.0};
Point(9) = {0.117017, 0.744801, 0, 1.0};
Point(10) = {0.109377, 0.746108, 0, 1.0};
Point(11) = {0.101284, 0.747309, 0, 1.0};
Point(12) = {0.092780, 0.748294, 0, 1.0};
Point(13) = {0.083848, 0.749018, 0, 1.0};
Point(14) = {0.074525, 0.749534, 0, 1.0};
Point(15) = {0.064919, 0.749858, 0, 1.0};
Point(16) = {0.055125, 0.750000, 0, 1.0};
Point(17) = {0.045247, 0.749960, 0, 1.0};
Point(18) = {0.035389, 0.749749, 0, 1.0};
Point(19) = {0.025653, 0.749368, 0, 1.0};
Point(20) = {0.016137, 0.748828, 0, 1.0};
Point(21) = {0.006942, 0.748137, 0, 1.0};
Point(22) = {-0.001838, 0.747311, 0, 1.0};
Point(23) = {-0.010112, 0.746361, 0, 1.0};
Point(24) = {-0.017797, 0.745305, 0, 1.0};
Point(25) = {-0.024810, 0.744161, 0, 1.0};
Point(26) = {-0.031083, 0.742952, 0, 1.0};
Point(27) = {-0.036549, 0.741700, 0, 1.0};
Point(28) = {-0.041158, 0.740436, 0, 1.0};
Point(29) = {-0.044850, 0.739190, 0, 1.0};
Point(30) = {-0.047593, 0.738000, 0, 1.0};
Point(31) = {-0.048593, 0.737446, 0, 1.0};
Point(32) = {-0.049446, 0.736816, 0, 1.0};
Point(33) = {-0.049811, 0.736445, 0, 1.0};
Point(34) = {-0.049967, 0.736204, 0, 1.0};
Point(35) = {-0.049998, 0.736066, 0, 1.0};
Point(36) = {-0.049959, 0.735930, 0, 1.0};
Point(37) = {-0.049789, 0.735699, 0, 1.0};
Point(38) = {-0.049404, 0.735350, 0, 1.0};
Point(39) = {-0.048520, 0.734773, 0, 1.0};
Point(40) = {-0.047490, 0.734279, 0, 1.0};
Point(41) = {-0.044712, 0.733264, 0, 1.0};
Point(42) = {-0.041010, 0.732263, 0, 1.0};
Point(43) = {-0.036433, 0.731322, 0, 1.0};
Point(44) = {-0.031044, 0.730486, 0, 1.0};
Point(45) = {-0.024905, 0.729810, 0, 1.0};
Point(46) = {-0.018061, 0.729361, 0, 1.0};
Point(47) = {-0.010517, 0.729179, 0, 1.0};
Point(48) = {-0.002310, 0.729243, 0, 1.0};
Point(49) = {0.006504, 0.729543, 0, 1.0};
Point(50) = {0.015851, 0.730059, 0, 1.0};
Point(51) = {0.025655, 0.730769, 0, 1.0};
Point(52) = {0.035833, 0.731638, 0, 1.0};
Point(53) = {0.046290, 0.732631, 0, 1.0};
Point(54) = {0.056924, 0.733695, 0, 1.0};
Point(55) = {0.067619, 0.734786, 0, 1.0};
Point(56) = {0.078254, 0.735845, 0, 1.0};
Point(57) = {0.088700, 0.736820, 0, 1.0};
Point(58) = {0.098810, 0.737662, 0, 1.0};
Point(59) = {0.108431, 0.738328, 0, 1.0};
Point(60) = {0.117410, 0.738788, 0, 1.0};
Point(61) = {0.125588, 0.739023, 0, 1.0};
Point(62) = {0.132815, 0.739033, 0, 1.0};
Point(63) = {0.138940, 0.738837, 0, 1.0};
Point(64) = {0.143805, 0.738468, 0, 1.0};
Point(65) = {0.147275, 0.738051, 0, 1.0};
Point(66) = {0.149321, 0.737735, 0, 1.0};
Point(67) = {-0.149994, -0.737620, 0, 1.0};
Point(68) = {-0.149353, -0.737777, 0, 1.0};
Point(69) = {-0.147519, -0.738267, 0, 1.0};
Point(70) = {-0.144661, -0.739047, 0, 1.0};
Point(71) = {-0.140859, -0.739996, 0, 1.0};
Point(72) = {-0.136123, -0.741053, 0, 1.0};
Point(73) = {-0.130500, -0.742221, 0, 1.0};
Point(74) = {-0.124096, -0.743488, 0, 1.0};
Point(75) = {-0.117017, -0.744801, 0, 1.0};
Point(76) = {-0.109377, -0.746108, 0, 1.0};
Point(77) = {-0.101284, -0.747309, 0, 1.0};
Point(78) = {-0.092780, -0.748294, 0, 1.0};
Point(79) = {-0.083848, -0.749018, 0, 1.0};
Point(80) = {-0.074525, -0.749534, 0, 1.0};
Point(81) = {-0.064919, -0.749858, 0, 1.0};
Point(82) = {-0.055125, -0.750000, 0, 1.0};
Point(83) = {-0.045247, -0.749960, 0, 1.0};
Point(84) = {-0.035389, -0.749749, 0, 1.0};
Point(85) = {-0.025653, -0.749368, 0, 1.0};
Point(86) = {-0.016137, -0.748828, 0, 1.0};
Point(87) = {-0.006942, -0.748137, 0, 1.0};
Point(88) = {0.001838, -0.747311, 0, 1.0};
Point(89) = {0.010112, -0.746361, 0, 1.0};
Point(90) = {0.017797, -0.745305, 0, 1.0};
Point(91) = {0.024810, -0.744161, 0, 1.0};
Point(92) = {0.031083, -0.742952, 0, 1.0};
Point(93) = {0.036549, -0.741700, 0, 1.0};
Point(94) = {0.041158, -0.740436, 0, 1.0};
Point(95) = {0.044850, -0.739190, 0, 1.0};
Point(96) = {0.047593, -0.738000, 0, 1.0};
Point(97) = {0.048593, -0.737446, 0, 1.0};
Point(98) = {0.049446, -0.736816, 0, 1.0};
Point(99) = {0.049811, -0.736445, 0, 1.0};
Point(100) = {0.049967, -0.736204, 0, 1.0};
Point(101) = {0.049998, -0.736066, 0, 1.0};
Point(102) = {0.049959, -0.735930, 0, 1.0};
Point(103) = {0.049789, -0.735699, 0, 1.0};
Point(104) = {0.049404, -0.735350, 0, 1.0};
Point(105) = {0.048520, -0.734773, 0, 1.0};
Point(106) = {0.047490, -0.734279, 0, 1.0};
Point(107) = {0.044712, -0.733264, 0, 1.0};
Point(108) = {0.041010, -0.732263, 0, 1.0};
Point(109) = {0.036433, -0.731322, 0, 1.0};
Point(110) = {0.031044, -0.730486, 0, 1.0};
Point(111) = {0.024905, -0.729810, 0, 1.0};
Point(112) = {0.018061, -0.729361, 0, 1.0};
Point(113) = {0.010517, -0.729179, 0, 1.0};
Point(114) = {0.002310, -0.729243, 0, 1.0};
Point(115) = {-0.006504, -0.729543, 0, 1.0};
Point(116) = {-0.015851, -0.730059, 0, 1.0};
Point(117) = {-0.025655, -0.730769, 0, 1.0};
Point(118) = {-0.035833, -0.731638, 0, 1.0};
Point(119) = {-0.046290, -0.732631, 0, 1.0};
Point(120) = {-0.056924, -0.733695, 0, 1.0};
Point(121) = {-0.067619, -0.734786, 0, 1.0};
Point(122) = {-0.078254, -0.735845, 0, 1.0};
Point(123) = {-0.088700, -0.736820, 0, 1.0};
Point(124) = {-0.098810, -0.737662, 0, 1.0};
Point(125) = {-0.108431, -0.738328, 0, 1.0};
Point(126) = {-0.117410, -0.738788, 0, 1.0};
Point(127) = {-0.125588, -0.739023, 0, 1.0};
Point(128) = {-0.132815, -0.739033, 0, 1.0};
Point(129) = {-0.138940, -0.738837, 0, 1.0};
Point(130) = {-0.143805, -0.738468, 0, 1.0};
Point(131) = {-0.147275, -0.738051, 0, 1.0};
Point(132) = {-0.149321, -0.737735, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
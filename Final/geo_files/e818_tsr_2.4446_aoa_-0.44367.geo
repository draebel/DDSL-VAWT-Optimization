SetFactory("OpenCASCADE");

Point(1) = {0.074997, 0.743810, 0, 1.0};
Point(2) = {0.074676, 0.743889, 0, 1.0};
Point(3) = {0.073759, 0.744134, 0, 1.0};
Point(4) = {0.072330, 0.744523, 0, 1.0};
Point(5) = {0.070430, 0.744998, 0, 1.0};
Point(6) = {0.068062, 0.745526, 0, 1.0};
Point(7) = {0.065250, 0.746111, 0, 1.0};
Point(8) = {0.062048, 0.746744, 0, 1.0};
Point(9) = {0.058509, 0.747401, 0, 1.0};
Point(10) = {0.054689, 0.748054, 0, 1.0};
Point(11) = {0.050642, 0.748655, 0, 1.0};
Point(12) = {0.046390, 0.749147, 0, 1.0};
Point(13) = {0.041924, 0.749509, 0, 1.0};
Point(14) = {0.037263, 0.749767, 0, 1.0};
Point(15) = {0.032459, 0.749929, 0, 1.0};
Point(16) = {0.027563, 0.750000, 0, 1.0};
Point(17) = {0.022624, 0.749980, 0, 1.0};
Point(18) = {0.017694, 0.749875, 0, 1.0};
Point(19) = {0.012827, 0.749684, 0, 1.0};
Point(20) = {0.008069, 0.749414, 0, 1.0};
Point(21) = {0.003471, 0.749068, 0, 1.0};
Point(22) = {-0.000919, 0.748655, 0, 1.0};
Point(23) = {-0.005056, 0.748180, 0, 1.0};
Point(24) = {-0.008898, 0.747653, 0, 1.0};
Point(25) = {-0.012405, 0.747080, 0, 1.0};
Point(26) = {-0.015541, 0.746476, 0, 1.0};
Point(27) = {-0.018275, 0.745850, 0, 1.0};
Point(28) = {-0.020579, 0.745218, 0, 1.0};
Point(29) = {-0.022425, 0.744595, 0, 1.0};
Point(30) = {-0.023796, 0.744000, 0, 1.0};
Point(31) = {-0.024296, 0.743723, 0, 1.0};
Point(32) = {-0.024723, 0.743408, 0, 1.0};
Point(33) = {-0.024905, 0.743223, 0, 1.0};
Point(34) = {-0.024984, 0.743102, 0, 1.0};
Point(35) = {-0.024999, 0.743033, 0, 1.0};
Point(36) = {-0.024979, 0.742965, 0, 1.0};
Point(37) = {-0.024895, 0.742850, 0, 1.0};
Point(38) = {-0.024702, 0.742675, 0, 1.0};
Point(39) = {-0.024260, 0.742386, 0, 1.0};
Point(40) = {-0.023745, 0.742139, 0, 1.0};
Point(41) = {-0.022356, 0.741632, 0, 1.0};
Point(42) = {-0.020505, 0.741132, 0, 1.0};
Point(43) = {-0.018216, 0.740661, 0, 1.0};
Point(44) = {-0.015522, 0.740243, 0, 1.0};
Point(45) = {-0.012452, 0.739905, 0, 1.0};
Point(46) = {-0.009031, 0.739680, 0, 1.0};
Point(47) = {-0.005259, 0.739590, 0, 1.0};
Point(48) = {-0.001155, 0.739621, 0, 1.0};
Point(49) = {0.003252, 0.739771, 0, 1.0};
Point(50) = {0.007925, 0.740030, 0, 1.0};
Point(51) = {0.012828, 0.740385, 0, 1.0};
Point(52) = {0.017916, 0.740819, 0, 1.0};
Point(53) = {0.023145, 0.741316, 0, 1.0};
Point(54) = {0.028462, 0.741848, 0, 1.0};
Point(55) = {0.033810, 0.742393, 0, 1.0};
Point(56) = {0.039127, 0.742922, 0, 1.0};
Point(57) = {0.044350, 0.743410, 0, 1.0};
Point(58) = {0.049405, 0.743831, 0, 1.0};
Point(59) = {0.054216, 0.744164, 0, 1.0};
Point(60) = {0.058705, 0.744394, 0, 1.0};
Point(61) = {0.062794, 0.744512, 0, 1.0};
Point(62) = {0.066407, 0.744517, 0, 1.0};
Point(63) = {0.069470, 0.744418, 0, 1.0};
Point(64) = {0.071903, 0.744234, 0, 1.0};
Point(65) = {0.073637, 0.744026, 0, 1.0};
Point(66) = {0.074661, 0.743868, 0, 1.0};
Point(67) = {-0.074997, -0.743810, 0, 1.0};
Point(68) = {-0.074676, -0.743889, 0, 1.0};
Point(69) = {-0.073759, -0.744134, 0, 1.0};
Point(70) = {-0.072330, -0.744523, 0, 1.0};
Point(71) = {-0.070430, -0.744998, 0, 1.0};
Point(72) = {-0.068062, -0.745526, 0, 1.0};
Point(73) = {-0.065250, -0.746111, 0, 1.0};
Point(74) = {-0.062048, -0.746744, 0, 1.0};
Point(75) = {-0.058509, -0.747401, 0, 1.0};
Point(76) = {-0.054689, -0.748054, 0, 1.0};
Point(77) = {-0.050642, -0.748655, 0, 1.0};
Point(78) = {-0.046390, -0.749147, 0, 1.0};
Point(79) = {-0.041924, -0.749509, 0, 1.0};
Point(80) = {-0.037263, -0.749767, 0, 1.0};
Point(81) = {-0.032459, -0.749929, 0, 1.0};
Point(82) = {-0.027563, -0.750000, 0, 1.0};
Point(83) = {-0.022624, -0.749980, 0, 1.0};
Point(84) = {-0.017694, -0.749875, 0, 1.0};
Point(85) = {-0.012827, -0.749684, 0, 1.0};
Point(86) = {-0.008069, -0.749414, 0, 1.0};
Point(87) = {-0.003471, -0.749068, 0, 1.0};
Point(88) = {0.000919, -0.748655, 0, 1.0};
Point(89) = {0.005056, -0.748180, 0, 1.0};
Point(90) = {0.008898, -0.747653, 0, 1.0};
Point(91) = {0.012405, -0.747080, 0, 1.0};
Point(92) = {0.015541, -0.746476, 0, 1.0};
Point(93) = {0.018275, -0.745850, 0, 1.0};
Point(94) = {0.020579, -0.745218, 0, 1.0};
Point(95) = {0.022425, -0.744595, 0, 1.0};
Point(96) = {0.023796, -0.744000, 0, 1.0};
Point(97) = {0.024296, -0.743723, 0, 1.0};
Point(98) = {0.024723, -0.743408, 0, 1.0};
Point(99) = {0.024905, -0.743223, 0, 1.0};
Point(100) = {0.024984, -0.743102, 0, 1.0};
Point(101) = {0.024999, -0.743033, 0, 1.0};
Point(102) = {0.024979, -0.742965, 0, 1.0};
Point(103) = {0.024895, -0.742850, 0, 1.0};
Point(104) = {0.024702, -0.742675, 0, 1.0};
Point(105) = {0.024260, -0.742386, 0, 1.0};
Point(106) = {0.023745, -0.742139, 0, 1.0};
Point(107) = {0.022356, -0.741632, 0, 1.0};
Point(108) = {0.020505, -0.741132, 0, 1.0};
Point(109) = {0.018216, -0.740661, 0, 1.0};
Point(110) = {0.015522, -0.740243, 0, 1.0};
Point(111) = {0.012452, -0.739905, 0, 1.0};
Point(112) = {0.009031, -0.739680, 0, 1.0};
Point(113) = {0.005259, -0.739590, 0, 1.0};
Point(114) = {0.001155, -0.739621, 0, 1.0};
Point(115) = {-0.003252, -0.739771, 0, 1.0};
Point(116) = {-0.007925, -0.740030, 0, 1.0};
Point(117) = {-0.012828, -0.740385, 0, 1.0};
Point(118) = {-0.017916, -0.740819, 0, 1.0};
Point(119) = {-0.023145, -0.741316, 0, 1.0};
Point(120) = {-0.028462, -0.741848, 0, 1.0};
Point(121) = {-0.033810, -0.742393, 0, 1.0};
Point(122) = {-0.039127, -0.742922, 0, 1.0};
Point(123) = {-0.044350, -0.743410, 0, 1.0};
Point(124) = {-0.049405, -0.743831, 0, 1.0};
Point(125) = {-0.054216, -0.744164, 0, 1.0};
Point(126) = {-0.058705, -0.744394, 0, 1.0};
Point(127) = {-0.062794, -0.744512, 0, 1.0};
Point(128) = {-0.066407, -0.744517, 0, 1.0};
Point(129) = {-0.069470, -0.744418, 0, 1.0};
Point(130) = {-0.071903, -0.744234, 0, 1.0};
Point(131) = {-0.073637, -0.744026, 0, 1.0};
Point(132) = {-0.074661, -0.743868, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112494, 0.740715, 0, 1.0};
Point(2) = {0.112013, 0.740833, 0, 1.0};
Point(3) = {0.110637, 0.741200, 0, 1.0};
Point(4) = {0.108494, 0.741785, 0, 1.0};
Point(5) = {0.105643, 0.742497, 0, 1.0};
Point(6) = {0.102090, 0.743290, 0, 1.0};
Point(7) = {0.097873, 0.744166, 0, 1.0};
Point(8) = {0.093070, 0.745116, 0, 1.0};
Point(9) = {0.087761, 0.746101, 0, 1.0};
Point(10) = {0.082031, 0.747081, 0, 1.0};
Point(11) = {0.075961, 0.747982, 0, 1.0};
Point(12) = {0.069583, 0.748720, 0, 1.0};
Point(13) = {0.062884, 0.749264, 0, 1.0};
Point(14) = {0.055893, 0.749651, 0, 1.0};
Point(15) = {0.048688, 0.749893, 0, 1.0};
Point(16) = {0.041343, 0.750000, 0, 1.0};
Point(17) = {0.033934, 0.749970, 0, 1.0};
Point(18) = {0.026540, 0.749812, 0, 1.0};
Point(19) = {0.019239, 0.749526, 0, 1.0};
Point(20) = {0.012102, 0.749121, 0, 1.0};
Point(21) = {0.005206, 0.748603, 0, 1.0};
Point(22) = {-0.001379, 0.747983, 0, 1.0};
Point(23) = {-0.007585, 0.747271, 0, 1.0};
Point(24) = {-0.013348, 0.746479, 0, 1.0};
Point(25) = {-0.018608, 0.745621, 0, 1.0};
Point(26) = {-0.023313, 0.744714, 0, 1.0};
Point(27) = {-0.027412, 0.743775, 0, 1.0};
Point(28) = {-0.030869, 0.742827, 0, 1.0};
Point(29) = {-0.033638, 0.741892, 0, 1.0};
Point(30) = {-0.035695, 0.741000, 0, 1.0};
Point(31) = {-0.036445, 0.740585, 0, 1.0};
Point(32) = {-0.037085, 0.740112, 0, 1.0};
Point(33) = {-0.037359, 0.739834, 0, 1.0};
Point(34) = {-0.037476, 0.739653, 0, 1.0};
Point(35) = {-0.037499, 0.739549, 0, 1.0};
Point(36) = {-0.037470, 0.739448, 0, 1.0};
Point(37) = {-0.037342, 0.739274, 0, 1.0};
Point(38) = {-0.037054, 0.739013, 0, 1.0};
Point(39) = {-0.036390, 0.738580, 0, 1.0};
Point(40) = {-0.035618, 0.738209, 0, 1.0};
Point(41) = {-0.033535, 0.737448, 0, 1.0};
Point(42) = {-0.030758, 0.736697, 0, 1.0};
Point(43) = {-0.027325, 0.735992, 0, 1.0};
Point(44) = {-0.023284, 0.735365, 0, 1.0};
Point(45) = {-0.018679, 0.734857, 0, 1.0};
Point(46) = {-0.013546, 0.734521, 0, 1.0};
Point(47) = {-0.007889, 0.734384, 0, 1.0};
Point(48) = {-0.001733, 0.734432, 0, 1.0};
Point(49) = {0.004877, 0.734657, 0, 1.0};
Point(50) = {0.011887, 0.735045, 0, 1.0};
Point(51) = {0.019241, 0.735577, 0, 1.0};
Point(52) = {0.026874, 0.736229, 0, 1.0};
Point(53) = {0.034716, 0.736973, 0, 1.0};
Point(54) = {0.042691, 0.737772, 0, 1.0};
Point(55) = {0.050713, 0.738590, 0, 1.0};
Point(56) = {0.058689, 0.739384, 0, 1.0};
Point(57) = {0.066524, 0.740115, 0, 1.0};
Point(58) = {0.074106, 0.740747, 0, 1.0};
Point(59) = {0.081322, 0.741246, 0, 1.0};
Point(60) = {0.088056, 0.741591, 0, 1.0};
Point(61) = {0.094190, 0.741768, 0, 1.0};
Point(62) = {0.099609, 0.741775, 0, 1.0};
Point(63) = {0.104203, 0.741628, 0, 1.0};
Point(64) = {0.107852, 0.741351, 0, 1.0};
Point(65) = {0.110454, 0.741038, 0, 1.0};
Point(66) = {0.111989, 0.740801, 0, 1.0};
Point(67) = {-0.112494, -0.740715, 0, 1.0};
Point(68) = {-0.112013, -0.740833, 0, 1.0};
Point(69) = {-0.110637, -0.741200, 0, 1.0};
Point(70) = {-0.108494, -0.741785, 0, 1.0};
Point(71) = {-0.105643, -0.742497, 0, 1.0};
Point(72) = {-0.102090, -0.743290, 0, 1.0};
Point(73) = {-0.097873, -0.744166, 0, 1.0};
Point(74) = {-0.093070, -0.745116, 0, 1.0};
Point(75) = {-0.087761, -0.746101, 0, 1.0};
Point(76) = {-0.082031, -0.747081, 0, 1.0};
Point(77) = {-0.075961, -0.747982, 0, 1.0};
Point(78) = {-0.069583, -0.748720, 0, 1.0};
Point(79) = {-0.062884, -0.749264, 0, 1.0};
Point(80) = {-0.055893, -0.749651, 0, 1.0};
Point(81) = {-0.048688, -0.749893, 0, 1.0};
Point(82) = {-0.041343, -0.750000, 0, 1.0};
Point(83) = {-0.033934, -0.749970, 0, 1.0};
Point(84) = {-0.026540, -0.749812, 0, 1.0};
Point(85) = {-0.019239, -0.749526, 0, 1.0};
Point(86) = {-0.012102, -0.749121, 0, 1.0};
Point(87) = {-0.005206, -0.748603, 0, 1.0};
Point(88) = {0.001379, -0.747983, 0, 1.0};
Point(89) = {0.007585, -0.747271, 0, 1.0};
Point(90) = {0.013348, -0.746479, 0, 1.0};
Point(91) = {0.018608, -0.745621, 0, 1.0};
Point(92) = {0.023313, -0.744714, 0, 1.0};
Point(93) = {0.027412, -0.743775, 0, 1.0};
Point(94) = {0.030869, -0.742827, 0, 1.0};
Point(95) = {0.033638, -0.741892, 0, 1.0};
Point(96) = {0.035695, -0.741000, 0, 1.0};
Point(97) = {0.036445, -0.740585, 0, 1.0};
Point(98) = {0.037085, -0.740112, 0, 1.0};
Point(99) = {0.037359, -0.739834, 0, 1.0};
Point(100) = {0.037476, -0.739653, 0, 1.0};
Point(101) = {0.037499, -0.739549, 0, 1.0};
Point(102) = {0.037470, -0.739448, 0, 1.0};
Point(103) = {0.037342, -0.739274, 0, 1.0};
Point(104) = {0.037054, -0.739013, 0, 1.0};
Point(105) = {0.036390, -0.738580, 0, 1.0};
Point(106) = {0.035618, -0.738209, 0, 1.0};
Point(107) = {0.033535, -0.737448, 0, 1.0};
Point(108) = {0.030758, -0.736697, 0, 1.0};
Point(109) = {0.027325, -0.735992, 0, 1.0};
Point(110) = {0.023284, -0.735365, 0, 1.0};
Point(111) = {0.018679, -0.734857, 0, 1.0};
Point(112) = {0.013546, -0.734521, 0, 1.0};
Point(113) = {0.007889, -0.734384, 0, 1.0};
Point(114) = {0.001733, -0.734432, 0, 1.0};
Point(115) = {-0.004877, -0.734657, 0, 1.0};
Point(116) = {-0.011887, -0.735045, 0, 1.0};
Point(117) = {-0.019241, -0.735577, 0, 1.0};
Point(118) = {-0.026874, -0.736229, 0, 1.0};
Point(119) = {-0.034716, -0.736973, 0, 1.0};
Point(120) = {-0.042691, -0.737772, 0, 1.0};
Point(121) = {-0.050713, -0.738590, 0, 1.0};
Point(122) = {-0.058689, -0.739384, 0, 1.0};
Point(123) = {-0.066524, -0.740115, 0, 1.0};
Point(124) = {-0.074106, -0.740747, 0, 1.0};
Point(125) = {-0.081322, -0.741246, 0, 1.0};
Point(126) = {-0.088056, -0.741591, 0, 1.0};
Point(127) = {-0.094190, -0.741768, 0, 1.0};
Point(128) = {-0.099609, -0.741775, 0, 1.0};
Point(129) = {-0.104203, -0.741628, 0, 1.0};
Point(130) = {-0.107852, -0.741351, 0, 1.0};
Point(131) = {-0.110454, -0.741038, 0, 1.0};
Point(132) = {-0.111989, -0.740801, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
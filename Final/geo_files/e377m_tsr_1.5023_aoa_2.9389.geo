SetFactory("OpenCASCADE");

Point(1) = {0.112330, 0.730543, 0, 1.0};
Point(2) = {0.111899, 0.730626, 0, 1.0};
Point(3) = {0.110606, 0.730871, 0, 1.0};
Point(4) = {0.108474, 0.731286, 0, 1.0};
Point(5) = {0.105542, 0.731889, 0, 1.0};
Point(6) = {0.101862, 0.732673, 0, 1.0};
Point(7) = {0.097492, 0.733625, 0, 1.0};
Point(8) = {0.092496, 0.734733, 0, 1.0};
Point(9) = {0.086941, 0.735978, 0, 1.0};
Point(10) = {0.080902, 0.737337, 0, 1.0};
Point(11) = {0.074458, 0.738785, 0, 1.0};
Point(12) = {0.067692, 0.740293, 0, 1.0};
Point(13) = {0.060689, 0.741831, 0, 1.0};
Point(14) = {0.053540, 0.743364, 0, 1.0};
Point(15) = {0.046334, 0.744853, 0, 1.0};
Point(16) = {0.039158, 0.746253, 0, 1.0};
Point(17) = {0.032099, 0.747507, 0, 1.0};
Point(18) = {0.025215, 0.748541, 0, 1.0};
Point(19) = {0.018530, 0.749314, 0, 1.0};
Point(20) = {0.012072, 0.749803, 0, 1.0};
Point(21) = {0.005867, 0.750000, 0, 1.0};
Point(22) = {-0.000059, 0.749911, 0, 1.0};
Point(23) = {-0.005690, 0.749556, 0, 1.0};
Point(24) = {-0.010986, 0.748977, 0, 1.0};
Point(25) = {-0.015899, 0.748211, 0, 1.0};
Point(26) = {-0.020380, 0.747285, 0, 1.0};
Point(27) = {-0.024390, 0.746223, 0, 1.0};
Point(28) = {-0.027895, 0.745058, 0, 1.0};
Point(29) = {-0.030869, 0.743820, 0, 1.0};
Point(30) = {-0.033294, 0.742545, 0, 1.0};
Point(31) = {-0.035157, 0.741272, 0, 1.0};
Point(32) = {-0.036460, 0.740050, 0, 1.0};
Point(33) = {-0.037217, 0.738945, 0, 1.0};
Point(34) = {-0.037451, 0.738080, 0, 1.0};
Point(35) = {-0.037004, 0.737600, 0, 1.0};
Point(36) = {-0.035784, 0.737452, 0, 1.0};
Point(37) = {-0.033816, 0.737740, 0, 1.0};
Point(38) = {-0.031004, 0.738447, 0, 1.0};
Point(39) = {-0.027625, 0.739606, 0, 1.0};
Point(40) = {-0.024152, 0.741201, 0, 1.0};
Point(41) = {-0.020340, 0.743236, 0, 1.0};
Point(42) = {-0.016065, 0.745395, 0, 1.0};
Point(43) = {-0.011201, 0.747221, 0, 1.0};
Point(44) = {-0.005737, 0.748514, 0, 1.0};
Point(45) = {-0.000102, 0.749156, 0, 1.0};
Point(46) = {0.005835, 0.749257, 0, 1.0};
Point(47) = {0.012105, 0.748995, 0, 1.0};
Point(48) = {0.018568, 0.748442, 0, 1.0};
Point(49) = {0.025171, 0.747648, 0, 1.0};
Point(50) = {0.032207, 0.746617, 0, 1.0};
Point(51) = {0.039270, 0.745424, 0, 1.0};
Point(52) = {0.046300, 0.744101, 0, 1.0};
Point(53) = {0.053606, 0.742610, 0, 1.0};
Point(54) = {0.060744, 0.741075, 0, 1.0};
Point(55) = {0.067647, 0.739550, 0, 1.0};
Point(56) = {0.074476, 0.738031, 0, 1.0};
Point(57) = {0.080919, 0.736586, 0, 1.0};
Point(58) = {0.086904, 0.735228, 0, 1.0};
Point(59) = {0.092483, 0.733961, 0, 1.0};
Point(60) = {0.097476, 0.732895, 0, 1.0};
Point(61) = {0.101836, 0.732073, 0, 1.0};
Point(62) = {0.105548, 0.731479, 0, 1.0};
Point(63) = {0.108486, 0.731059, 0, 1.0};
Point(64) = {0.110613, 0.730771, 0, 1.0};
Point(65) = {0.111899, 0.730600, 0, 1.0};
Point(66) = {-0.112330, -0.730543, 0, 1.0};
Point(67) = {-0.111899, -0.730626, 0, 1.0};
Point(68) = {-0.110606, -0.730871, 0, 1.0};
Point(69) = {-0.108474, -0.731286, 0, 1.0};
Point(70) = {-0.105542, -0.731889, 0, 1.0};
Point(71) = {-0.101862, -0.732673, 0, 1.0};
Point(72) = {-0.097492, -0.733625, 0, 1.0};
Point(73) = {-0.092496, -0.734733, 0, 1.0};
Point(74) = {-0.086941, -0.735978, 0, 1.0};
Point(75) = {-0.080902, -0.737337, 0, 1.0};
Point(76) = {-0.074458, -0.738785, 0, 1.0};
Point(77) = {-0.067692, -0.740293, 0, 1.0};
Point(78) = {-0.060689, -0.741831, 0, 1.0};
Point(79) = {-0.053540, -0.743364, 0, 1.0};
Point(80) = {-0.046334, -0.744853, 0, 1.0};
Point(81) = {-0.039158, -0.746253, 0, 1.0};
Point(82) = {-0.032099, -0.747507, 0, 1.0};
Point(83) = {-0.025215, -0.748541, 0, 1.0};
Point(84) = {-0.018530, -0.749314, 0, 1.0};
Point(85) = {-0.012072, -0.749803, 0, 1.0};
Point(86) = {-0.005867, -0.750000, 0, 1.0};
Point(87) = {0.000059, -0.749911, 0, 1.0};
Point(88) = {0.005690, -0.749556, 0, 1.0};
Point(89) = {0.010986, -0.748977, 0, 1.0};
Point(90) = {0.015899, -0.748211, 0, 1.0};
Point(91) = {0.020380, -0.747285, 0, 1.0};
Point(92) = {0.024390, -0.746223, 0, 1.0};
Point(93) = {0.027895, -0.745058, 0, 1.0};
Point(94) = {0.030869, -0.743820, 0, 1.0};
Point(95) = {0.033294, -0.742545, 0, 1.0};
Point(96) = {0.035157, -0.741272, 0, 1.0};
Point(97) = {0.036460, -0.740050, 0, 1.0};
Point(98) = {0.037217, -0.738945, 0, 1.0};
Point(99) = {0.037451, -0.738080, 0, 1.0};
Point(100) = {0.037004, -0.737600, 0, 1.0};
Point(101) = {0.035784, -0.737452, 0, 1.0};
Point(102) = {0.033816, -0.737740, 0, 1.0};
Point(103) = {0.031004, -0.738447, 0, 1.0};
Point(104) = {0.027625, -0.739606, 0, 1.0};
Point(105) = {0.024152, -0.741201, 0, 1.0};
Point(106) = {0.020340, -0.743236, 0, 1.0};
Point(107) = {0.016065, -0.745395, 0, 1.0};
Point(108) = {0.011201, -0.747221, 0, 1.0};
Point(109) = {0.005737, -0.748514, 0, 1.0};
Point(110) = {0.000102, -0.749156, 0, 1.0};
Point(111) = {-0.005835, -0.749257, 0, 1.0};
Point(112) = {-0.012105, -0.748995, 0, 1.0};
Point(113) = {-0.018568, -0.748442, 0, 1.0};
Point(114) = {-0.025171, -0.747648, 0, 1.0};
Point(115) = {-0.032207, -0.746617, 0, 1.0};
Point(116) = {-0.039270, -0.745424, 0, 1.0};
Point(117) = {-0.046300, -0.744101, 0, 1.0};
Point(118) = {-0.053606, -0.742610, 0, 1.0};
Point(119) = {-0.060744, -0.741075, 0, 1.0};
Point(120) = {-0.067647, -0.739550, 0, 1.0};
Point(121) = {-0.074476, -0.738031, 0, 1.0};
Point(122) = {-0.080919, -0.736586, 0, 1.0};
Point(123) = {-0.086904, -0.735228, 0, 1.0};
Point(124) = {-0.092483, -0.733961, 0, 1.0};
Point(125) = {-0.097476, -0.732895, 0, 1.0};
Point(126) = {-0.101836, -0.732073, 0, 1.0};
Point(127) = {-0.105548, -0.731479, 0, 1.0};
Point(128) = {-0.108486, -0.731059, 0, 1.0};
Point(129) = {-0.110613, -0.730771, 0, 1.0};
Point(130) = {-0.111899, -0.730600, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074868, 0.737028, 0, 1.0};
Point(2) = {0.074581, 0.737082, 0, 1.0};
Point(3) = {0.073719, 0.737246, 0, 1.0};
Point(4) = {0.072297, 0.737523, 0, 1.0};
Point(5) = {0.070343, 0.737925, 0, 1.0};
Point(6) = {0.067889, 0.738447, 0, 1.0};
Point(7) = {0.064976, 0.739082, 0, 1.0};
Point(8) = {0.061644, 0.739821, 0, 1.0};
Point(9) = {0.057941, 0.740651, 0, 1.0};
Point(10) = {0.053914, 0.741557, 0, 1.0};
Point(11) = {0.049618, 0.742522, 0, 1.0};
Point(12) = {0.045107, 0.743528, 0, 1.0};
Point(13) = {0.040438, 0.744554, 0, 1.0};
Point(14) = {0.035671, 0.745576, 0, 1.0};
Point(15) = {0.030867, 0.746568, 0, 1.0};
Point(16) = {0.026082, 0.747502, 0, 1.0};
Point(17) = {0.021376, 0.748338, 0, 1.0};
Point(18) = {0.016786, 0.749027, 0, 1.0};
Point(19) = {0.012329, 0.749543, 0, 1.0};
Point(20) = {0.008023, 0.749869, 0, 1.0};
Point(21) = {0.003886, 0.750000, 0, 1.0};
Point(22) = {-0.000065, 0.749941, 0, 1.0};
Point(23) = {-0.003819, 0.749704, 0, 1.0};
Point(24) = {-0.007351, 0.749318, 0, 1.0};
Point(25) = {-0.010626, 0.748807, 0, 1.0};
Point(26) = {-0.013614, 0.748190, 0, 1.0};
Point(27) = {-0.016287, 0.747482, 0, 1.0};
Point(28) = {-0.018624, 0.746705, 0, 1.0};
Point(29) = {-0.020607, 0.745879, 0, 1.0};
Point(30) = {-0.022224, 0.745029, 0, 1.0};
Point(31) = {-0.023466, 0.744181, 0, 1.0};
Point(32) = {-0.024335, 0.743366, 0, 1.0};
Point(33) = {-0.024839, 0.742629, 0, 1.0};
Point(34) = {-0.024995, 0.742052, 0, 1.0};
Point(35) = {-0.024697, 0.741733, 0, 1.0};
Point(36) = {-0.023884, 0.741634, 0, 1.0};
Point(37) = {-0.022572, 0.741826, 0, 1.0};
Point(38) = {-0.020697, 0.742297, 0, 1.0};
Point(39) = {-0.018444, 0.743070, 0, 1.0};
Point(40) = {-0.016129, 0.744133, 0, 1.0};
Point(41) = {-0.013587, 0.745490, 0, 1.0};
Point(42) = {-0.010736, 0.746930, 0, 1.0};
Point(43) = {-0.007494, 0.748147, 0, 1.0};
Point(44) = {-0.003851, 0.749009, 0, 1.0};
Point(45) = {-0.000094, 0.749437, 0, 1.0};
Point(46) = {0.003865, 0.749504, 0, 1.0};
Point(47) = {0.008045, 0.749330, 0, 1.0};
Point(48) = {0.012354, 0.748961, 0, 1.0};
Point(49) = {0.016757, 0.748432, 0, 1.0};
Point(50) = {0.021448, 0.747745, 0, 1.0};
Point(51) = {0.026157, 0.746949, 0, 1.0};
Point(52) = {0.030844, 0.746067, 0, 1.0};
Point(53) = {0.035715, 0.745073, 0, 1.0};
Point(54) = {0.040474, 0.744049, 0, 1.0};
Point(55) = {0.045077, 0.743033, 0, 1.0};
Point(56) = {0.049630, 0.742020, 0, 1.0};
Point(57) = {0.053926, 0.741057, 0, 1.0};
Point(58) = {0.057916, 0.740151, 0, 1.0};
Point(59) = {0.061636, 0.739306, 0, 1.0};
Point(60) = {0.064965, 0.738595, 0, 1.0};
Point(61) = {0.067872, 0.738048, 0, 1.0};
Point(62) = {0.070347, 0.737651, 0, 1.0};
Point(63) = {0.072306, 0.737371, 0, 1.0};
Point(64) = {0.073724, 0.737179, 0, 1.0};
Point(65) = {0.074581, 0.737065, 0, 1.0};
Point(66) = {-0.074868, -0.737028, 0, 1.0};
Point(67) = {-0.074581, -0.737082, 0, 1.0};
Point(68) = {-0.073719, -0.737246, 0, 1.0};
Point(69) = {-0.072297, -0.737523, 0, 1.0};
Point(70) = {-0.070343, -0.737925, 0, 1.0};
Point(71) = {-0.067889, -0.738447, 0, 1.0};
Point(72) = {-0.064976, -0.739082, 0, 1.0};
Point(73) = {-0.061644, -0.739821, 0, 1.0};
Point(74) = {-0.057941, -0.740651, 0, 1.0};
Point(75) = {-0.053914, -0.741557, 0, 1.0};
Point(76) = {-0.049618, -0.742522, 0, 1.0};
Point(77) = {-0.045107, -0.743528, 0, 1.0};
Point(78) = {-0.040438, -0.744554, 0, 1.0};
Point(79) = {-0.035671, -0.745576, 0, 1.0};
Point(80) = {-0.030867, -0.746568, 0, 1.0};
Point(81) = {-0.026082, -0.747502, 0, 1.0};
Point(82) = {-0.021376, -0.748338, 0, 1.0};
Point(83) = {-0.016786, -0.749027, 0, 1.0};
Point(84) = {-0.012329, -0.749543, 0, 1.0};
Point(85) = {-0.008023, -0.749869, 0, 1.0};
Point(86) = {-0.003886, -0.750000, 0, 1.0};
Point(87) = {0.000065, -0.749941, 0, 1.0};
Point(88) = {0.003819, -0.749704, 0, 1.0};
Point(89) = {0.007351, -0.749318, 0, 1.0};
Point(90) = {0.010626, -0.748807, 0, 1.0};
Point(91) = {0.013614, -0.748190, 0, 1.0};
Point(92) = {0.016287, -0.747482, 0, 1.0};
Point(93) = {0.018624, -0.746705, 0, 1.0};
Point(94) = {0.020607, -0.745879, 0, 1.0};
Point(95) = {0.022224, -0.745029, 0, 1.0};
Point(96) = {0.023466, -0.744181, 0, 1.0};
Point(97) = {0.024335, -0.743366, 0, 1.0};
Point(98) = {0.024839, -0.742629, 0, 1.0};
Point(99) = {0.024995, -0.742052, 0, 1.0};
Point(100) = {0.024697, -0.741733, 0, 1.0};
Point(101) = {0.023884, -0.741634, 0, 1.0};
Point(102) = {0.022572, -0.741826, 0, 1.0};
Point(103) = {0.020697, -0.742297, 0, 1.0};
Point(104) = {0.018444, -0.743070, 0, 1.0};
Point(105) = {0.016129, -0.744133, 0, 1.0};
Point(106) = {0.013587, -0.745490, 0, 1.0};
Point(107) = {0.010736, -0.746930, 0, 1.0};
Point(108) = {0.007494, -0.748147, 0, 1.0};
Point(109) = {0.003851, -0.749009, 0, 1.0};
Point(110) = {0.000094, -0.749437, 0, 1.0};
Point(111) = {-0.003865, -0.749504, 0, 1.0};
Point(112) = {-0.008045, -0.749330, 0, 1.0};
Point(113) = {-0.012354, -0.748961, 0, 1.0};
Point(114) = {-0.016757, -0.748432, 0, 1.0};
Point(115) = {-0.021448, -0.747745, 0, 1.0};
Point(116) = {-0.026157, -0.746949, 0, 1.0};
Point(117) = {-0.030844, -0.746067, 0, 1.0};
Point(118) = {-0.035715, -0.745073, 0, 1.0};
Point(119) = {-0.040474, -0.744049, 0, 1.0};
Point(120) = {-0.045077, -0.743033, 0, 1.0};
Point(121) = {-0.049630, -0.742020, 0, 1.0};
Point(122) = {-0.053926, -0.741057, 0, 1.0};
Point(123) = {-0.057916, -0.740151, 0, 1.0};
Point(124) = {-0.061636, -0.739306, 0, 1.0};
Point(125) = {-0.064965, -0.738595, 0, 1.0};
Point(126) = {-0.067872, -0.738048, 0, 1.0};
Point(127) = {-0.070347, -0.737651, 0, 1.0};
Point(128) = {-0.072306, -0.737371, 0, 1.0};
Point(129) = {-0.073724, -0.737179, 0, 1.0};
Point(130) = {-0.074581, -0.737065, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
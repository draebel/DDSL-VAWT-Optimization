SetFactory("OpenCASCADE");

Point(1) = {0.074909, 0.730539, 0, 1.0};
Point(2) = {0.074478, 0.730622, 0, 1.0};
Point(3) = {0.073185, 0.730867, 0, 1.0};
Point(4) = {0.071052, 0.731283, 0, 1.0};
Point(5) = {0.068120, 0.731885, 0, 1.0};
Point(6) = {0.064439, 0.732669, 0, 1.0};
Point(7) = {0.060069, 0.733622, 0, 1.0};
Point(8) = {0.055071, 0.734730, 0, 1.0};
Point(9) = {0.049515, 0.735975, 0, 1.0};
Point(10) = {0.043475, 0.737334, 0, 1.0};
Point(11) = {0.037030, 0.738783, 0, 1.0};
Point(12) = {0.030262, 0.740291, 0, 1.0};
Point(13) = {0.023258, 0.741830, 0, 1.0};
Point(14) = {0.016107, 0.743363, 0, 1.0};
Point(15) = {0.008900, 0.744852, 0, 1.0};
Point(16) = {0.001723, 0.746252, 0, 1.0};
Point(17) = {-0.005337, 0.747507, 0, 1.0};
Point(18) = {-0.012223, 0.748541, 0, 1.0};
Point(19) = {-0.018910, 0.749314, 0, 1.0};
Point(20) = {-0.025369, 0.749803, 0, 1.0};
Point(21) = {-0.031575, 0.750000, 0, 1.0};
Point(22) = {-0.037502, 0.749911, 0, 1.0};
Point(23) = {-0.043134, 0.749555, 0, 1.0};
Point(24) = {-0.048432, 0.748977, 0, 1.0};
Point(25) = {-0.053345, 0.748211, 0, 1.0};
Point(26) = {-0.057827, 0.747285, 0, 1.0};
Point(27) = {-0.061838, 0.746223, 0, 1.0};
Point(28) = {-0.065344, 0.745057, 0, 1.0};
Point(29) = {-0.068319, 0.743818, 0, 1.0};
Point(30) = {-0.070744, 0.742543, 0, 1.0};
Point(31) = {-0.072607, 0.741270, 0, 1.0};
Point(32) = {-0.073911, 0.740048, 0, 1.0};
Point(33) = {-0.074668, 0.738943, 0, 1.0};
Point(34) = {-0.074901, 0.738077, 0, 1.0};
Point(35) = {-0.074454, 0.737598, 0, 1.0};
Point(36) = {-0.073235, 0.737449, 0, 1.0};
Point(37) = {-0.071266, 0.737737, 0, 1.0};
Point(38) = {-0.068453, 0.738445, 0, 1.0};
Point(39) = {-0.065074, 0.739604, 0, 1.0};
Point(40) = {-0.061600, 0.741199, 0, 1.0};
Point(41) = {-0.057787, 0.743234, 0, 1.0};
Point(42) = {-0.053511, 0.745394, 0, 1.0};
Point(43) = {-0.048646, 0.747220, 0, 1.0};
Point(44) = {-0.043181, 0.748514, 0, 1.0};
Point(45) = {-0.037546, 0.749156, 0, 1.0};
Point(46) = {-0.031607, 0.749257, 0, 1.0};
Point(47) = {-0.025336, 0.748995, 0, 1.0};
Point(48) = {-0.018872, 0.748442, 0, 1.0};
Point(49) = {-0.012267, 0.747648, 0, 1.0};
Point(50) = {-0.005230, 0.746617, 0, 1.0};
Point(51) = {0.001835, 0.745423, 0, 1.0};
Point(52) = {0.008866, 0.744099, 0, 1.0};
Point(53) = {0.016174, 0.742608, 0, 1.0};
Point(54) = {0.023313, 0.741073, 0, 1.0};
Point(55) = {0.030218, 0.739548, 0, 1.0};
Point(56) = {0.037048, 0.738029, 0, 1.0};
Point(57) = {0.043492, 0.736584, 0, 1.0};
Point(58) = {0.049478, 0.735225, 0, 1.0};
Point(59) = {0.055058, 0.733957, 0, 1.0};
Point(60) = {0.060052, 0.732891, 0, 1.0};
Point(61) = {0.064413, 0.732070, 0, 1.0};
Point(62) = {0.068126, 0.731475, 0, 1.0};
Point(63) = {0.071065, 0.731055, 0, 1.0};
Point(64) = {0.073192, 0.730767, 0, 1.0};
Point(65) = {0.074478, 0.730596, 0, 1.0};
Point(66) = {-0.074909, -0.730539, 0, 1.0};
Point(67) = {-0.074478, -0.730622, 0, 1.0};
Point(68) = {-0.073185, -0.730867, 0, 1.0};
Point(69) = {-0.071052, -0.731283, 0, 1.0};
Point(70) = {-0.068120, -0.731885, 0, 1.0};
Point(71) = {-0.064439, -0.732669, 0, 1.0};
Point(72) = {-0.060069, -0.733622, 0, 1.0};
Point(73) = {-0.055071, -0.734730, 0, 1.0};
Point(74) = {-0.049515, -0.735975, 0, 1.0};
Point(75) = {-0.043475, -0.737334, 0, 1.0};
Point(76) = {-0.037030, -0.738783, 0, 1.0};
Point(77) = {-0.030262, -0.740291, 0, 1.0};
Point(78) = {-0.023258, -0.741830, 0, 1.0};
Point(79) = {-0.016107, -0.743363, 0, 1.0};
Point(80) = {-0.008900, -0.744852, 0, 1.0};
Point(81) = {-0.001723, -0.746252, 0, 1.0};
Point(82) = {0.005337, -0.747507, 0, 1.0};
Point(83) = {0.012223, -0.748541, 0, 1.0};
Point(84) = {0.018910, -0.749314, 0, 1.0};
Point(85) = {0.025369, -0.749803, 0, 1.0};
Point(86) = {0.031575, -0.750000, 0, 1.0};
Point(87) = {0.037502, -0.749911, 0, 1.0};
Point(88) = {0.043134, -0.749555, 0, 1.0};
Point(89) = {0.048432, -0.748977, 0, 1.0};
Point(90) = {0.053345, -0.748211, 0, 1.0};
Point(91) = {0.057827, -0.747285, 0, 1.0};
Point(92) = {0.061838, -0.746223, 0, 1.0};
Point(93) = {0.065344, -0.745057, 0, 1.0};
Point(94) = {0.068319, -0.743818, 0, 1.0};
Point(95) = {0.070744, -0.742543, 0, 1.0};
Point(96) = {0.072607, -0.741270, 0, 1.0};
Point(97) = {0.073911, -0.740048, 0, 1.0};
Point(98) = {0.074668, -0.738943, 0, 1.0};
Point(99) = {0.074901, -0.738077, 0, 1.0};
Point(100) = {0.074454, -0.737598, 0, 1.0};
Point(101) = {0.073235, -0.737449, 0, 1.0};
Point(102) = {0.071266, -0.737737, 0, 1.0};
Point(103) = {0.068453, -0.738445, 0, 1.0};
Point(104) = {0.065074, -0.739604, 0, 1.0};
Point(105) = {0.061600, -0.741199, 0, 1.0};
Point(106) = {0.057787, -0.743234, 0, 1.0};
Point(107) = {0.053511, -0.745394, 0, 1.0};
Point(108) = {0.048646, -0.747220, 0, 1.0};
Point(109) = {0.043181, -0.748514, 0, 1.0};
Point(110) = {0.037546, -0.749156, 0, 1.0};
Point(111) = {0.031607, -0.749257, 0, 1.0};
Point(112) = {0.025336, -0.748995, 0, 1.0};
Point(113) = {0.018872, -0.748442, 0, 1.0};
Point(114) = {0.012267, -0.747648, 0, 1.0};
Point(115) = {0.005230, -0.746617, 0, 1.0};
Point(116) = {-0.001835, -0.745423, 0, 1.0};
Point(117) = {-0.008866, -0.744099, 0, 1.0};
Point(118) = {-0.016174, -0.742608, 0, 1.0};
Point(119) = {-0.023313, -0.741073, 0, 1.0};
Point(120) = {-0.030218, -0.739548, 0, 1.0};
Point(121) = {-0.037048, -0.738029, 0, 1.0};
Point(122) = {-0.043492, -0.736584, 0, 1.0};
Point(123) = {-0.049478, -0.735225, 0, 1.0};
Point(124) = {-0.055058, -0.733957, 0, 1.0};
Point(125) = {-0.060052, -0.732891, 0, 1.0};
Point(126) = {-0.064413, -0.732070, 0, 1.0};
Point(127) = {-0.068126, -0.731475, 0, 1.0};
Point(128) = {-0.071065, -0.731055, 0, 1.0};
Point(129) = {-0.073192, -0.730767, 0, 1.0};
Point(130) = {-0.074478, -0.730596, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
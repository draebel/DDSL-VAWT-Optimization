SetFactory("OpenCASCADE");

Point(1) = {0.149737, 0.724055, 0, 1.0};
Point(2) = {0.149162, 0.724165, 0, 1.0};
Point(3) = {0.147438, 0.724492, 0, 1.0};
Point(4) = {0.144595, 0.725046, 0, 1.0};
Point(5) = {0.140685, 0.725850, 0, 1.0};
Point(6) = {0.135778, 0.726895, 0, 1.0};
Point(7) = {0.129952, 0.728165, 0, 1.0};
Point(8) = {0.123289, 0.729643, 0, 1.0};
Point(9) = {0.115882, 0.731302, 0, 1.0};
Point(10) = {0.107828, 0.733114, 0, 1.0};
Point(11) = {0.099236, 0.735045, 0, 1.0};
Point(12) = {0.090213, 0.737056, 0, 1.0};
Point(13) = {0.080876, 0.739108, 0, 1.0};
Point(14) = {0.071342, 0.741151, 0, 1.0};
Point(15) = {0.061734, 0.743136, 0, 1.0};
Point(16) = {0.052165, 0.745003, 0, 1.0};
Point(17) = {0.042752, 0.746676, 0, 1.0};
Point(18) = {0.033573, 0.748055, 0, 1.0};
Point(19) = {0.024658, 0.749085, 0, 1.0};
Point(20) = {0.016046, 0.749737, 0, 1.0};
Point(21) = {0.007772, 0.750000, 0, 1.0};
Point(22) = {-0.000130, 0.749881, 0, 1.0};
Point(23) = {-0.007638, 0.749407, 0, 1.0};
Point(24) = {-0.014701, 0.748636, 0, 1.0};
Point(25) = {-0.021252, 0.747615, 0, 1.0};
Point(26) = {-0.027227, 0.746380, 0, 1.0};
Point(27) = {-0.032575, 0.744964, 0, 1.0};
Point(28) = {-0.037249, 0.743410, 0, 1.0};
Point(29) = {-0.041215, 0.741759, 0, 1.0};
Point(30) = {-0.044448, 0.740058, 0, 1.0};
Point(31) = {-0.046932, 0.738361, 0, 1.0};
Point(32) = {-0.048670, 0.736732, 0, 1.0};
Point(33) = {-0.049679, 0.735258, 0, 1.0};
Point(34) = {-0.049990, 0.734105, 0, 1.0};
Point(35) = {-0.049394, 0.733465, 0, 1.0};
Point(36) = {-0.047768, 0.733268, 0, 1.0};
Point(37) = {-0.045143, 0.733652, 0, 1.0};
Point(38) = {-0.041394, 0.734595, 0, 1.0};
Point(39) = {-0.036889, 0.736140, 0, 1.0};
Point(40) = {-0.032258, 0.738267, 0, 1.0};
Point(41) = {-0.027174, 0.740980, 0, 1.0};
Point(42) = {-0.021473, 0.743859, 0, 1.0};
Point(43) = {-0.014987, 0.746294, 0, 1.0};
Point(44) = {-0.007701, 0.748019, 0, 1.0};
Point(45) = {-0.000188, 0.748875, 0, 1.0};
Point(46) = {0.007730, 0.749009, 0, 1.0};
Point(47) = {0.016091, 0.748660, 0, 1.0};
Point(48) = {0.024708, 0.747923, 0, 1.0};
Point(49) = {0.033514, 0.746864, 0, 1.0};
Point(50) = {0.042895, 0.745489, 0, 1.0};
Point(51) = {0.052314, 0.743898, 0, 1.0};
Point(52) = {0.061688, 0.742133, 0, 1.0};
Point(53) = {0.071431, 0.740145, 0, 1.0};
Point(54) = {0.080949, 0.738099, 0, 1.0};
Point(55) = {0.090154, 0.736066, 0, 1.0};
Point(56) = {0.099261, 0.734040, 0, 1.0};
Point(57) = {0.107851, 0.732113, 0, 1.0};
Point(58) = {0.115833, 0.730302, 0, 1.0};
Point(59) = {0.123272, 0.728612, 0, 1.0};
Point(60) = {0.129930, 0.727191, 0, 1.0};
Point(61) = {0.135743, 0.726095, 0, 1.0};
Point(62) = {0.140693, 0.725302, 0, 1.0};
Point(63) = {0.144611, 0.724743, 0, 1.0};
Point(64) = {0.147448, 0.724359, 0, 1.0};
Point(65) = {0.149162, 0.724131, 0, 1.0};
Point(66) = {-0.149737, -0.724055, 0, 1.0};
Point(67) = {-0.149162, -0.724165, 0, 1.0};
Point(68) = {-0.147438, -0.724492, 0, 1.0};
Point(69) = {-0.144595, -0.725046, 0, 1.0};
Point(70) = {-0.140685, -0.725850, 0, 1.0};
Point(71) = {-0.135778, -0.726895, 0, 1.0};
Point(72) = {-0.129952, -0.728165, 0, 1.0};
Point(73) = {-0.123289, -0.729643, 0, 1.0};
Point(74) = {-0.115882, -0.731302, 0, 1.0};
Point(75) = {-0.107828, -0.733114, 0, 1.0};
Point(76) = {-0.099236, -0.735045, 0, 1.0};
Point(77) = {-0.090213, -0.737056, 0, 1.0};
Point(78) = {-0.080876, -0.739108, 0, 1.0};
Point(79) = {-0.071342, -0.741151, 0, 1.0};
Point(80) = {-0.061734, -0.743136, 0, 1.0};
Point(81) = {-0.052165, -0.745003, 0, 1.0};
Point(82) = {-0.042752, -0.746676, 0, 1.0};
Point(83) = {-0.033573, -0.748055, 0, 1.0};
Point(84) = {-0.024658, -0.749085, 0, 1.0};
Point(85) = {-0.016046, -0.749737, 0, 1.0};
Point(86) = {-0.007772, -0.750000, 0, 1.0};
Point(87) = {0.000130, -0.749881, 0, 1.0};
Point(88) = {0.007638, -0.749407, 0, 1.0};
Point(89) = {0.014701, -0.748636, 0, 1.0};
Point(90) = {0.021252, -0.747615, 0, 1.0};
Point(91) = {0.027227, -0.746380, 0, 1.0};
Point(92) = {0.032575, -0.744964, 0, 1.0};
Point(93) = {0.037249, -0.743410, 0, 1.0};
Point(94) = {0.041215, -0.741759, 0, 1.0};
Point(95) = {0.044448, -0.740058, 0, 1.0};
Point(96) = {0.046932, -0.738361, 0, 1.0};
Point(97) = {0.048670, -0.736732, 0, 1.0};
Point(98) = {0.049679, -0.735258, 0, 1.0};
Point(99) = {0.049990, -0.734105, 0, 1.0};
Point(100) = {0.049394, -0.733465, 0, 1.0};
Point(101) = {0.047768, -0.733268, 0, 1.0};
Point(102) = {0.045143, -0.733652, 0, 1.0};
Point(103) = {0.041394, -0.734595, 0, 1.0};
Point(104) = {0.036889, -0.736140, 0, 1.0};
Point(105) = {0.032258, -0.738267, 0, 1.0};
Point(106) = {0.027174, -0.740980, 0, 1.0};
Point(107) = {0.021473, -0.743859, 0, 1.0};
Point(108) = {0.014987, -0.746294, 0, 1.0};
Point(109) = {0.007701, -0.748019, 0, 1.0};
Point(110) = {0.000188, -0.748875, 0, 1.0};
Point(111) = {-0.007730, -0.749009, 0, 1.0};
Point(112) = {-0.016091, -0.748660, 0, 1.0};
Point(113) = {-0.024708, -0.747923, 0, 1.0};
Point(114) = {-0.033514, -0.746864, 0, 1.0};
Point(115) = {-0.042895, -0.745489, 0, 1.0};
Point(116) = {-0.052314, -0.743898, 0, 1.0};
Point(117) = {-0.061688, -0.742133, 0, 1.0};
Point(118) = {-0.071431, -0.740145, 0, 1.0};
Point(119) = {-0.080949, -0.738099, 0, 1.0};
Point(120) = {-0.090154, -0.736066, 0, 1.0};
Point(121) = {-0.099261, -0.734040, 0, 1.0};
Point(122) = {-0.107851, -0.732113, 0, 1.0};
Point(123) = {-0.115833, -0.730302, 0, 1.0};
Point(124) = {-0.123272, -0.728612, 0, 1.0};
Point(125) = {-0.129930, -0.727191, 0, 1.0};
Point(126) = {-0.135743, -0.726095, 0, 1.0};
Point(127) = {-0.140693, -0.725302, 0, 1.0};
Point(128) = {-0.144611, -0.724743, 0, 1.0};
Point(129) = {-0.147448, -0.724359, 0, 1.0};
Point(130) = {-0.149162, -0.724131, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
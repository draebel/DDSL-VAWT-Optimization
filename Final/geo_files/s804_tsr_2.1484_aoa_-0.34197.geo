SetFactory("OpenCASCADE");

Point(1) = {0.112498, 0.730970, 0, 1.0};
Point(2) = {0.111986, 0.731135, 0, 1.0};
Point(3) = {0.110500, 0.731642, 0, 1.0};
Point(4) = {0.108255, 0.732424, 0, 1.0};
Point(5) = {0.105284, 0.733330, 0, 1.0};
Point(6) = {0.101541, 0.734303, 0, 1.0};
Point(7) = {0.097038, 0.735374, 0, 1.0};
Point(8) = {0.091998, 0.736554, 0, 1.0};
Point(9) = {0.086051, 0.737833, 0, 1.0};
Point(10) = {0.079732, 0.739196, 0, 1.0};
Point(11) = {0.072987, 0.740620, 0, 1.0};
Point(12) = {0.065913, 0.742076, 0, 1.0};
Point(13) = {0.058607, 0.743528, 0, 1.0};
Point(14) = {0.051166, 0.744936, 0, 1.0};
Point(15) = {0.043683, 0.746256, 0, 1.0};
Point(16) = {0.036246, 0.747445, 0, 1.0};
Point(17) = {0.028938, 0.748455, 0, 1.0};
Point(18) = {0.021834, 0.749246, 0, 1.0};
Point(19) = {0.015001, 0.749775, 0, 1.0};
Point(20) = {0.008503, 0.750000, 0, 1.0};
Point(21) = {0.002396, 0.749872, 0, 1.0};
Point(22) = {-0.003325, 0.749317, 0, 1.0};
Point(23) = {-0.008719, 0.748354, 0, 1.0};
Point(24) = {-0.013792, 0.747074, 0, 1.0};
Point(25) = {-0.018487, 0.745547, 0, 1.0};
Point(26) = {-0.022757, 0.743825, 0, 1.0};
Point(27) = {-0.026551, 0.741952, 0, 1.0};
Point(28) = {-0.029830, 0.739973, 0, 1.0};
Point(29) = {-0.032560, 0.737929, 0, 1.0};
Point(30) = {-0.034708, 0.735868, 0, 1.0};
Point(31) = {-0.036256, 0.733834, 0, 1.0};
Point(32) = {-0.037189, 0.731880, 0, 1.0};
Point(33) = {-0.037499, 0.730075, 0, 1.0};
Point(34) = {-0.037174, 0.728542, 0, 1.0};
Point(35) = {-0.036014, 0.727324, 0, 1.0};
Point(36) = {-0.033923, 0.726298, 0, 1.0};
Point(37) = {-0.031027, 0.725390, 0, 1.0};
Point(38) = {-0.027384, 0.724609, 0, 1.0};
Point(39) = {-0.023045, 0.723969, 0, 1.0};
Point(40) = {-0.018062, 0.723475, 0, 1.0};
Point(41) = {-0.012494, 0.723135, 0, 1.0};
Point(42) = {-0.006408, 0.722953, 0, 1.0};
Point(43) = {0.000123, 0.722935, 0, 1.0};
Point(44) = {0.007018, 0.723094, 0, 1.0};
Point(45) = {0.014188, 0.723467, 0, 1.0};
Point(46) = {0.021594, 0.724122, 0, 1.0};
Point(47) = {0.029270, 0.725065, 0, 1.0};
Point(48) = {0.037222, 0.726211, 0, 1.0};
Point(49) = {0.045384, 0.727451, 0, 1.0};
Point(50) = {0.053655, 0.728698, 0, 1.0};
Point(51) = {0.061924, 0.729870, 0, 1.0};
Point(52) = {0.070060, 0.730899, 0, 1.0};
Point(53) = {0.077921, 0.731716, 0, 1.0};
Point(54) = {0.085358, 0.732281, 0, 1.0};
Point(55) = {0.092213, 0.732553, 0, 1.0};
Point(56) = {0.098298, 0.732665, 0, 1.0};
Point(57) = {0.103414, 0.732217, 0, 1.0};
Point(58) = {0.107416, 0.731792, 0, 1.0};
Point(59) = {0.110256, 0.731377, 0, 1.0};
Point(60) = {0.111941, 0.731080, 0, 1.0};
Point(61) = {-0.112498, -0.730970, 0, 1.0};
Point(62) = {-0.111986, -0.731135, 0, 1.0};
Point(63) = {-0.110500, -0.731642, 0, 1.0};
Point(64) = {-0.108255, -0.732424, 0, 1.0};
Point(65) = {-0.105284, -0.733330, 0, 1.0};
Point(66) = {-0.101541, -0.734303, 0, 1.0};
Point(67) = {-0.097038, -0.735374, 0, 1.0};
Point(68) = {-0.091998, -0.736554, 0, 1.0};
Point(69) = {-0.086051, -0.737833, 0, 1.0};
Point(70) = {-0.079732, -0.739196, 0, 1.0};
Point(71) = {-0.072987, -0.740620, 0, 1.0};
Point(72) = {-0.065913, -0.742076, 0, 1.0};
Point(73) = {-0.058607, -0.743528, 0, 1.0};
Point(74) = {-0.051166, -0.744936, 0, 1.0};
Point(75) = {-0.043683, -0.746256, 0, 1.0};
Point(76) = {-0.036246, -0.747445, 0, 1.0};
Point(77) = {-0.028938, -0.748455, 0, 1.0};
Point(78) = {-0.021834, -0.749246, 0, 1.0};
Point(79) = {-0.015001, -0.749775, 0, 1.0};
Point(80) = {-0.008503, -0.750000, 0, 1.0};
Point(81) = {-0.002396, -0.749872, 0, 1.0};
Point(82) = {0.003325, -0.749317, 0, 1.0};
Point(83) = {0.008719, -0.748354, 0, 1.0};
Point(84) = {0.013792, -0.747074, 0, 1.0};
Point(85) = {0.018487, -0.745547, 0, 1.0};
Point(86) = {0.022757, -0.743825, 0, 1.0};
Point(87) = {0.026551, -0.741952, 0, 1.0};
Point(88) = {0.029830, -0.739973, 0, 1.0};
Point(89) = {0.032560, -0.737929, 0, 1.0};
Point(90) = {0.034708, -0.735868, 0, 1.0};
Point(91) = {0.036256, -0.733834, 0, 1.0};
Point(92) = {0.037189, -0.731880, 0, 1.0};
Point(93) = {0.037499, -0.730075, 0, 1.0};
Point(94) = {0.037174, -0.728542, 0, 1.0};
Point(95) = {0.036014, -0.727324, 0, 1.0};
Point(96) = {0.033923, -0.726298, 0, 1.0};
Point(97) = {0.031027, -0.725390, 0, 1.0};
Point(98) = {0.027384, -0.724609, 0, 1.0};
Point(99) = {0.023045, -0.723969, 0, 1.0};
Point(100) = {0.018062, -0.723475, 0, 1.0};
Point(101) = {0.012494, -0.723135, 0, 1.0};
Point(102) = {0.006408, -0.722953, 0, 1.0};
Point(103) = {-0.000123, -0.722935, 0, 1.0};
Point(104) = {-0.007018, -0.723094, 0, 1.0};
Point(105) = {-0.014188, -0.723467, 0, 1.0};
Point(106) = {-0.021594, -0.724122, 0, 1.0};
Point(107) = {-0.029270, -0.725065, 0, 1.0};
Point(108) = {-0.037222, -0.726211, 0, 1.0};
Point(109) = {-0.045384, -0.727451, 0, 1.0};
Point(110) = {-0.053655, -0.728698, 0, 1.0};
Point(111) = {-0.061924, -0.729870, 0, 1.0};
Point(112) = {-0.070060, -0.730899, 0, 1.0};
Point(113) = {-0.077921, -0.731716, 0, 1.0};
Point(114) = {-0.085358, -0.732281, 0, 1.0};
Point(115) = {-0.092213, -0.732553, 0, 1.0};
Point(116) = {-0.098298, -0.732665, 0, 1.0};
Point(117) = {-0.103414, -0.732217, 0, 1.0};
Point(118) = {-0.107416, -0.731792, 0, 1.0};
Point(119) = {-0.110256, -0.731377, 0, 1.0};
Point(120) = {-0.111941, -0.731080, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.148293, 0.747916, 0, 1.0};
Point(2) = {0.143183, 0.748404, 0, 1.0};
Point(3) = {0.138092, 0.748753, 0, 1.0};
Point(4) = {0.133006, 0.749063, 0, 1.0};
Point(5) = {0.127929, 0.749313, 0, 1.0};
Point(6) = {0.122856, 0.749523, 0, 1.0};
Point(7) = {0.117789, 0.749694, 0, 1.0};
Point(8) = {0.112724, 0.749845, 0, 1.0};
Point(9) = {0.107668, 0.749936, 0, 1.0};
Point(10) = {0.102619, 0.749968, 0, 1.0};
Point(11) = {0.097571, 0.750000, 0, 1.0};
Point(12) = {0.092530, 0.749972, 0, 1.0};
Point(13) = {0.087494, 0.749905, 0, 1.0};
Point(14) = {0.082467, 0.749779, 0, 1.0};
Point(15) = {0.077445, 0.749612, 0, 1.0};
Point(16) = {0.072433, 0.749367, 0, 1.0};
Point(17) = {0.067429, 0.749062, 0, 1.0};
Point(18) = {0.062434, 0.748697, 0, 1.0};
Point(19) = {0.057446, 0.748273, 0, 1.0};
Point(20) = {0.047484, 0.747326, 0, 1.0};
Point(21) = {0.037548, 0.746181, 0, 1.0};
Point(22) = {0.027633, 0.744877, 0, 1.0};
Point(23) = {0.017740, 0.743414, 0, 1.0};
Point(24) = {0.007870, 0.741773, 0, 1.0};
Point(25) = {-0.001978, 0.739974, 0, 1.0};
Point(26) = {-0.011800, 0.737976, 0, 1.0};
Point(27) = {-0.016698, 0.736878, 0, 1.0};
Point(28) = {-0.021585, 0.735700, 0, 1.0};
Point(29) = {-0.026462, 0.734444, 0, 1.0};
Point(30) = {-0.031322, 0.733068, 0, 1.0};
Point(31) = {-0.036162, 0.731534, 0, 1.0};
Point(32) = {-0.040970, 0.729762, 0, 1.0};
Point(33) = {-0.043350, 0.728698, 0, 1.0};
Point(34) = {-0.045703, 0.727435, 0, 1.0};
Point(35) = {-0.047996, 0.725716, 0, 1.0};
Point(36) = {-0.049324, 0.724328, 0, 1.0};
Point(37) = {-0.049807, 0.723416, 0, 1.0};
Point(38) = {-0.050000, 0.721837, 0, 1.0};
Point(39) = {-0.049519, 0.721256, 0, 1.0};
Point(40) = {-0.048900, 0.721157, 0, 1.0};
Point(41) = {-0.047363, 0.720978, 0, 1.0};
Point(42) = {-0.044840, 0.720972, 0, 1.0};
Point(43) = {-0.042328, 0.721046, 0, 1.0};
Point(44) = {-0.039823, 0.721178, 0, 1.0};
Point(45) = {-0.034820, 0.721483, 0, 1.0};
Point(46) = {-0.029827, 0.721868, 0, 1.0};
Point(47) = {-0.024839, 0.722292, 0, 1.0};
Point(48) = {-0.019856, 0.722755, 0, 1.0};
Point(49) = {-0.014882, 0.723279, 0, 1.0};
Point(50) = {-0.009910, 0.723822, 0, 1.0};
Point(51) = {0.000023, 0.724987, 0, 1.0};
Point(52) = {0.009938, 0.726291, 0, 1.0};
Point(53) = {0.019845, 0.727654, 0, 1.0};
Point(54) = {0.029741, 0.729097, 0, 1.0};
Point(55) = {0.039626, 0.730619, 0, 1.0};
Point(56) = {0.049501, 0.732220, 0, 1.0};
Point(57) = {0.059355, 0.733980, 0, 1.0};
Point(58) = {0.064269, 0.734959, 0, 1.0};
Point(59) = {0.069182, 0.735938, 0, 1.0};
Point(60) = {0.074088, 0.736977, 0, 1.0};
Point(61) = {0.078994, 0.738015, 0, 1.0};
Point(62) = {0.083899, 0.739054, 0, 1.0};
Point(63) = {0.088808, 0.740073, 0, 1.0};
Point(64) = {0.093713, 0.741111, 0, 1.0};
Point(65) = {0.098627, 0.742090, 0, 1.0};
Point(66) = {0.103541, 0.743069, 0, 1.0};
Point(67) = {0.108462, 0.743989, 0, 1.0};
Point(68) = {0.113389, 0.744869, 0, 1.0};
Point(69) = {0.118332, 0.745630, 0, 1.0};
Point(70) = {0.123290, 0.746272, 0, 1.0};
Point(71) = {0.128260, 0.746835, 0, 1.0};
Point(72) = {0.133253, 0.747219, 0, 1.0};
Point(73) = {0.138272, 0.747405, 0, 1.0};
Point(74) = {0.143318, 0.747393, 0, 1.0};
Point(75) = {0.148417, 0.746984, 0, 1.0};
Point(76) = {-0.148293, -0.747916, 0, 1.0};
Point(77) = {-0.143183, -0.748404, 0, 1.0};
Point(78) = {-0.138092, -0.748753, 0, 1.0};
Point(79) = {-0.133006, -0.749063, 0, 1.0};
Point(80) = {-0.127929, -0.749313, 0, 1.0};
Point(81) = {-0.122856, -0.749523, 0, 1.0};
Point(82) = {-0.117789, -0.749694, 0, 1.0};
Point(83) = {-0.112724, -0.749845, 0, 1.0};
Point(84) = {-0.107668, -0.749936, 0, 1.0};
Point(85) = {-0.102619, -0.749968, 0, 1.0};
Point(86) = {-0.097571, -0.750000, 0, 1.0};
Point(87) = {-0.092530, -0.749972, 0, 1.0};
Point(88) = {-0.087494, -0.749905, 0, 1.0};
Point(89) = {-0.082467, -0.749779, 0, 1.0};
Point(90) = {-0.077445, -0.749612, 0, 1.0};
Point(91) = {-0.072433, -0.749367, 0, 1.0};
Point(92) = {-0.067429, -0.749062, 0, 1.0};
Point(93) = {-0.062434, -0.748697, 0, 1.0};
Point(94) = {-0.057446, -0.748273, 0, 1.0};
Point(95) = {-0.047484, -0.747326, 0, 1.0};
Point(96) = {-0.037548, -0.746181, 0, 1.0};
Point(97) = {-0.027633, -0.744877, 0, 1.0};
Point(98) = {-0.017740, -0.743414, 0, 1.0};
Point(99) = {-0.007870, -0.741773, 0, 1.0};
Point(100) = {0.001978, -0.739974, 0, 1.0};
Point(101) = {0.011800, -0.737976, 0, 1.0};
Point(102) = {0.016698, -0.736878, 0, 1.0};
Point(103) = {0.021585, -0.735700, 0, 1.0};
Point(104) = {0.026462, -0.734444, 0, 1.0};
Point(105) = {0.031322, -0.733068, 0, 1.0};
Point(106) = {0.036162, -0.731534, 0, 1.0};
Point(107) = {0.040970, -0.729762, 0, 1.0};
Point(108) = {0.043350, -0.728698, 0, 1.0};
Point(109) = {0.045703, -0.727435, 0, 1.0};
Point(110) = {0.047996, -0.725716, 0, 1.0};
Point(111) = {0.049324, -0.724328, 0, 1.0};
Point(112) = {0.049807, -0.723416, 0, 1.0};
Point(113) = {0.050000, -0.721837, 0, 1.0};
Point(114) = {0.049519, -0.721256, 0, 1.0};
Point(115) = {0.048900, -0.721157, 0, 1.0};
Point(116) = {0.047363, -0.720978, 0, 1.0};
Point(117) = {0.044840, -0.720972, 0, 1.0};
Point(118) = {0.042328, -0.721046, 0, 1.0};
Point(119) = {0.039823, -0.721178, 0, 1.0};
Point(120) = {0.034820, -0.721483, 0, 1.0};
Point(121) = {0.029827, -0.721868, 0, 1.0};
Point(122) = {0.024839, -0.722292, 0, 1.0};
Point(123) = {0.019856, -0.722755, 0, 1.0};
Point(124) = {0.014882, -0.723279, 0, 1.0};
Point(125) = {0.009910, -0.723822, 0, 1.0};
Point(126) = {-0.000023, -0.724987, 0, 1.0};
Point(127) = {-0.009938, -0.726291, 0, 1.0};
Point(128) = {-0.019845, -0.727654, 0, 1.0};
Point(129) = {-0.029741, -0.729097, 0, 1.0};
Point(130) = {-0.039626, -0.730619, 0, 1.0};
Point(131) = {-0.049501, -0.732220, 0, 1.0};
Point(132) = {-0.059355, -0.733980, 0, 1.0};
Point(133) = {-0.064269, -0.734959, 0, 1.0};
Point(134) = {-0.069182, -0.735938, 0, 1.0};
Point(135) = {-0.074088, -0.736977, 0, 1.0};
Point(136) = {-0.078994, -0.738015, 0, 1.0};
Point(137) = {-0.083899, -0.739054, 0, 1.0};
Point(138) = {-0.088808, -0.740073, 0, 1.0};
Point(139) = {-0.093713, -0.741111, 0, 1.0};
Point(140) = {-0.098627, -0.742090, 0, 1.0};
Point(141) = {-0.103541, -0.743069, 0, 1.0};
Point(142) = {-0.108462, -0.743989, 0, 1.0};
Point(143) = {-0.113389, -0.744869, 0, 1.0};
Point(144) = {-0.118332, -0.745630, 0, 1.0};
Point(145) = {-0.123290, -0.746272, 0, 1.0};
Point(146) = {-0.128260, -0.746835, 0, 1.0};
Point(147) = {-0.133253, -0.747219, 0, 1.0};
Point(148) = {-0.138272, -0.747405, 0, 1.0};
Point(149) = {-0.143318, -0.747393, 0, 1.0};
Point(150) = {-0.148417, -0.746984, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:99};
Spline(6) = {99:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
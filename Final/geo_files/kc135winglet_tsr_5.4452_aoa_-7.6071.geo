SetFactory("OpenCASCADE");

Point(1) = {0.074146, 0.748958, 0, 1.0};
Point(2) = {0.071592, 0.749202, 0, 1.0};
Point(3) = {0.069046, 0.749377, 0, 1.0};
Point(4) = {0.066503, 0.749531, 0, 1.0};
Point(5) = {0.063964, 0.749656, 0, 1.0};
Point(6) = {0.061428, 0.749762, 0, 1.0};
Point(7) = {0.058895, 0.749847, 0, 1.0};
Point(8) = {0.056362, 0.749922, 0, 1.0};
Point(9) = {0.053834, 0.749968, 0, 1.0};
Point(10) = {0.051310, 0.749984, 0, 1.0};
Point(11) = {0.048785, 0.750000, 0, 1.0};
Point(12) = {0.046265, 0.749986, 0, 1.0};
Point(13) = {0.043747, 0.749953, 0, 1.0};
Point(14) = {0.041233, 0.749889, 0, 1.0};
Point(15) = {0.038722, 0.749806, 0, 1.0};
Point(16) = {0.036217, 0.749683, 0, 1.0};
Point(17) = {0.033715, 0.749531, 0, 1.0};
Point(18) = {0.031217, 0.749349, 0, 1.0};
Point(19) = {0.028723, 0.749137, 0, 1.0};
Point(20) = {0.023742, 0.748663, 0, 1.0};
Point(21) = {0.018774, 0.748090, 0, 1.0};
Point(22) = {0.013817, 0.747438, 0, 1.0};
Point(23) = {0.008870, 0.746707, 0, 1.0};
Point(24) = {0.003935, 0.745887, 0, 1.0};
Point(25) = {-0.000989, 0.744987, 0, 1.0};
Point(26) = {-0.005900, 0.743988, 0, 1.0};
Point(27) = {-0.008349, 0.743439, 0, 1.0};
Point(28) = {-0.010793, 0.742850, 0, 1.0};
Point(29) = {-0.013231, 0.742222, 0, 1.0};
Point(30) = {-0.015661, 0.741534, 0, 1.0};
Point(31) = {-0.018081, 0.740767, 0, 1.0};
Point(32) = {-0.020485, 0.739881, 0, 1.0};
Point(33) = {-0.021675, 0.739349, 0, 1.0};
Point(34) = {-0.022852, 0.738718, 0, 1.0};
Point(35) = {-0.023998, 0.737858, 0, 1.0};
Point(36) = {-0.024662, 0.737164, 0, 1.0};
Point(37) = {-0.024904, 0.736708, 0, 1.0};
Point(38) = {-0.025000, 0.735918, 0, 1.0};
Point(39) = {-0.024759, 0.735628, 0, 1.0};
Point(40) = {-0.024450, 0.735578, 0, 1.0};
Point(41) = {-0.023682, 0.735489, 0, 1.0};
Point(42) = {-0.022420, 0.735486, 0, 1.0};
Point(43) = {-0.021164, 0.735523, 0, 1.0};
Point(44) = {-0.019912, 0.735589, 0, 1.0};
Point(45) = {-0.017410, 0.735742, 0, 1.0};
Point(46) = {-0.014913, 0.735934, 0, 1.0};
Point(47) = {-0.012419, 0.736146, 0, 1.0};
Point(48) = {-0.009928, 0.736378, 0, 1.0};
Point(49) = {-0.007441, 0.736639, 0, 1.0};
Point(50) = {-0.004955, 0.736911, 0, 1.0};
Point(51) = {0.000012, 0.737493, 0, 1.0};
Point(52) = {0.004969, 0.738145, 0, 1.0};
Point(53) = {0.009922, 0.738827, 0, 1.0};
Point(54) = {0.014870, 0.739548, 0, 1.0};
Point(55) = {0.019813, 0.740309, 0, 1.0};
Point(56) = {0.024751, 0.741110, 0, 1.0};
Point(57) = {0.029677, 0.741990, 0, 1.0};
Point(58) = {0.032134, 0.742480, 0, 1.0};
Point(59) = {0.034591, 0.742969, 0, 1.0};
Point(60) = {0.037044, 0.743488, 0, 1.0};
Point(61) = {0.039497, 0.744008, 0, 1.0};
Point(62) = {0.041950, 0.744527, 0, 1.0};
Point(63) = {0.044404, 0.745036, 0, 1.0};
Point(64) = {0.046857, 0.745556, 0, 1.0};
Point(65) = {0.049313, 0.746045, 0, 1.0};
Point(66) = {0.051770, 0.746535, 0, 1.0};
Point(67) = {0.054231, 0.746994, 0, 1.0};
Point(68) = {0.056695, 0.747434, 0, 1.0};
Point(69) = {0.059166, 0.747815, 0, 1.0};
Point(70) = {0.061645, 0.748136, 0, 1.0};
Point(71) = {0.064130, 0.748417, 0, 1.0};
Point(72) = {0.066626, 0.748610, 0, 1.0};
Point(73) = {0.069136, 0.748703, 0, 1.0};
Point(74) = {0.071659, 0.748697, 0, 1.0};
Point(75) = {0.074209, 0.748492, 0, 1.0};
Point(76) = {-0.074146, -0.748958, 0, 1.0};
Point(77) = {-0.071592, -0.749202, 0, 1.0};
Point(78) = {-0.069046, -0.749377, 0, 1.0};
Point(79) = {-0.066503, -0.749531, 0, 1.0};
Point(80) = {-0.063964, -0.749656, 0, 1.0};
Point(81) = {-0.061428, -0.749762, 0, 1.0};
Point(82) = {-0.058895, -0.749847, 0, 1.0};
Point(83) = {-0.056362, -0.749922, 0, 1.0};
Point(84) = {-0.053834, -0.749968, 0, 1.0};
Point(85) = {-0.051310, -0.749984, 0, 1.0};
Point(86) = {-0.048785, -0.750000, 0, 1.0};
Point(87) = {-0.046265, -0.749986, 0, 1.0};
Point(88) = {-0.043747, -0.749953, 0, 1.0};
Point(89) = {-0.041233, -0.749889, 0, 1.0};
Point(90) = {-0.038722, -0.749806, 0, 1.0};
Point(91) = {-0.036217, -0.749683, 0, 1.0};
Point(92) = {-0.033715, -0.749531, 0, 1.0};
Point(93) = {-0.031217, -0.749349, 0, 1.0};
Point(94) = {-0.028723, -0.749137, 0, 1.0};
Point(95) = {-0.023742, -0.748663, 0, 1.0};
Point(96) = {-0.018774, -0.748090, 0, 1.0};
Point(97) = {-0.013817, -0.747438, 0, 1.0};
Point(98) = {-0.008870, -0.746707, 0, 1.0};
Point(99) = {-0.003935, -0.745887, 0, 1.0};
Point(100) = {0.000989, -0.744987, 0, 1.0};
Point(101) = {0.005900, -0.743988, 0, 1.0};
Point(102) = {0.008349, -0.743439, 0, 1.0};
Point(103) = {0.010793, -0.742850, 0, 1.0};
Point(104) = {0.013231, -0.742222, 0, 1.0};
Point(105) = {0.015661, -0.741534, 0, 1.0};
Point(106) = {0.018081, -0.740767, 0, 1.0};
Point(107) = {0.020485, -0.739881, 0, 1.0};
Point(108) = {0.021675, -0.739349, 0, 1.0};
Point(109) = {0.022852, -0.738718, 0, 1.0};
Point(110) = {0.023998, -0.737858, 0, 1.0};
Point(111) = {0.024662, -0.737164, 0, 1.0};
Point(112) = {0.024904, -0.736708, 0, 1.0};
Point(113) = {0.025000, -0.735918, 0, 1.0};
Point(114) = {0.024759, -0.735628, 0, 1.0};
Point(115) = {0.024450, -0.735578, 0, 1.0};
Point(116) = {0.023682, -0.735489, 0, 1.0};
Point(117) = {0.022420, -0.735486, 0, 1.0};
Point(118) = {0.021164, -0.735523, 0, 1.0};
Point(119) = {0.019912, -0.735589, 0, 1.0};
Point(120) = {0.017410, -0.735742, 0, 1.0};
Point(121) = {0.014913, -0.735934, 0, 1.0};
Point(122) = {0.012419, -0.736146, 0, 1.0};
Point(123) = {0.009928, -0.736378, 0, 1.0};
Point(124) = {0.007441, -0.736639, 0, 1.0};
Point(125) = {0.004955, -0.736911, 0, 1.0};
Point(126) = {-0.000012, -0.737493, 0, 1.0};
Point(127) = {-0.004969, -0.738145, 0, 1.0};
Point(128) = {-0.009922, -0.738827, 0, 1.0};
Point(129) = {-0.014870, -0.739548, 0, 1.0};
Point(130) = {-0.019813, -0.740309, 0, 1.0};
Point(131) = {-0.024751, -0.741110, 0, 1.0};
Point(132) = {-0.029677, -0.741990, 0, 1.0};
Point(133) = {-0.032134, -0.742480, 0, 1.0};
Point(134) = {-0.034591, -0.742969, 0, 1.0};
Point(135) = {-0.037044, -0.743488, 0, 1.0};
Point(136) = {-0.039497, -0.744008, 0, 1.0};
Point(137) = {-0.041950, -0.744527, 0, 1.0};
Point(138) = {-0.044404, -0.745036, 0, 1.0};
Point(139) = {-0.046857, -0.745556, 0, 1.0};
Point(140) = {-0.049313, -0.746045, 0, 1.0};
Point(141) = {-0.051770, -0.746535, 0, 1.0};
Point(142) = {-0.054231, -0.746994, 0, 1.0};
Point(143) = {-0.056695, -0.747434, 0, 1.0};
Point(144) = {-0.059166, -0.747815, 0, 1.0};
Point(145) = {-0.061645, -0.748136, 0, 1.0};
Point(146) = {-0.064130, -0.748417, 0, 1.0};
Point(147) = {-0.066626, -0.748610, 0, 1.0};
Point(148) = {-0.069136, -0.748703, 0, 1.0};
Point(149) = {-0.071659, -0.748697, 0, 1.0};
Point(150) = {-0.074209, -0.748492, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:99};
Spline(6) = {99:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111220, 0.748437, 0, 1.0};
Point(2) = {0.107387, 0.748803, 0, 1.0};
Point(3) = {0.103569, 0.749065, 0, 1.0};
Point(4) = {0.099755, 0.749297, 0, 1.0};
Point(5) = {0.095947, 0.749485, 0, 1.0};
Point(6) = {0.092142, 0.749642, 0, 1.0};
Point(7) = {0.088342, 0.749770, 0, 1.0};
Point(8) = {0.084543, 0.749884, 0, 1.0};
Point(9) = {0.080751, 0.749952, 0, 1.0};
Point(10) = {0.076964, 0.749976, 0, 1.0};
Point(11) = {0.073178, 0.750000, 0, 1.0};
Point(12) = {0.069397, 0.749979, 0, 1.0};
Point(13) = {0.065621, 0.749929, 0, 1.0};
Point(14) = {0.061850, 0.749834, 0, 1.0};
Point(15) = {0.058084, 0.749709, 0, 1.0};
Point(16) = {0.054325, 0.749525, 0, 1.0};
Point(17) = {0.050572, 0.749296, 0, 1.0};
Point(18) = {0.046825, 0.749023, 0, 1.0};
Point(19) = {0.043085, 0.748705, 0, 1.0};
Point(20) = {0.035613, 0.747995, 0, 1.0};
Point(21) = {0.028161, 0.747136, 0, 1.0};
Point(22) = {0.020725, 0.746158, 0, 1.0};
Point(23) = {0.013305, 0.745061, 0, 1.0};
Point(24) = {0.005903, 0.743830, 0, 1.0};
Point(25) = {-0.001484, 0.742480, 0, 1.0};
Point(26) = {-0.008850, 0.740982, 0, 1.0};
Point(27) = {-0.012524, 0.740158, 0, 1.0};
Point(28) = {-0.016189, 0.739275, 0, 1.0};
Point(29) = {-0.019846, 0.738333, 0, 1.0};
Point(30) = {-0.023492, 0.737301, 0, 1.0};
Point(31) = {-0.027121, 0.736151, 0, 1.0};
Point(32) = {-0.030727, 0.734822, 0, 1.0};
Point(33) = {-0.032512, 0.734023, 0, 1.0};
Point(34) = {-0.034277, 0.733076, 0, 1.0};
Point(35) = {-0.035997, 0.731787, 0, 1.0};
Point(36) = {-0.036993, 0.730746, 0, 1.0};
Point(37) = {-0.037356, 0.730062, 0, 1.0};
Point(38) = {-0.037500, 0.728878, 0, 1.0};
Point(39) = {-0.037139, 0.728442, 0, 1.0};
Point(40) = {-0.036675, 0.728367, 0, 1.0};
Point(41) = {-0.035522, 0.728234, 0, 1.0};
Point(42) = {-0.033630, 0.728229, 0, 1.0};
Point(43) = {-0.031746, 0.728284, 0, 1.0};
Point(44) = {-0.029867, 0.728384, 0, 1.0};
Point(45) = {-0.026115, 0.728613, 0, 1.0};
Point(46) = {-0.022370, 0.728901, 0, 1.0};
Point(47) = {-0.018629, 0.729219, 0, 1.0};
Point(48) = {-0.014892, 0.729567, 0, 1.0};
Point(49) = {-0.011161, 0.729959, 0, 1.0};
Point(50) = {-0.007432, 0.730366, 0, 1.0};
Point(51) = {0.000017, 0.731240, 0, 1.0};
Point(52) = {0.007453, 0.732218, 0, 1.0};
Point(53) = {0.014883, 0.733241, 0, 1.0};
Point(54) = {0.022306, 0.734323, 0, 1.0};
Point(55) = {0.029720, 0.735464, 0, 1.0};
Point(56) = {0.037126, 0.736665, 0, 1.0};
Point(57) = {0.044516, 0.737985, 0, 1.0};
Point(58) = {0.048201, 0.738719, 0, 1.0};
Point(59) = {0.051887, 0.739454, 0, 1.0};
Point(60) = {0.055566, 0.740233, 0, 1.0};
Point(61) = {0.059245, 0.741011, 0, 1.0};
Point(62) = {0.062924, 0.741790, 0, 1.0};
Point(63) = {0.066606, 0.742554, 0, 1.0};
Point(64) = {0.070285, 0.743333, 0, 1.0};
Point(65) = {0.073970, 0.744068, 0, 1.0};
Point(66) = {0.077655, 0.744802, 0, 1.0};
Point(67) = {0.081347, 0.745492, 0, 1.0};
Point(68) = {0.085042, 0.746152, 0, 1.0};
Point(69) = {0.088749, 0.746722, 0, 1.0};
Point(70) = {0.092468, 0.747204, 0, 1.0};
Point(71) = {0.096195, 0.747626, 0, 1.0};
Point(72) = {0.099940, 0.747914, 0, 1.0};
Point(73) = {0.103704, 0.748054, 0, 1.0};
Point(74) = {0.107489, 0.748045, 0, 1.0};
Point(75) = {0.111313, 0.747738, 0, 1.0};
Point(76) = {-0.111220, -0.748437, 0, 1.0};
Point(77) = {-0.107387, -0.748803, 0, 1.0};
Point(78) = {-0.103569, -0.749065, 0, 1.0};
Point(79) = {-0.099755, -0.749297, 0, 1.0};
Point(80) = {-0.095947, -0.749485, 0, 1.0};
Point(81) = {-0.092142, -0.749642, 0, 1.0};
Point(82) = {-0.088342, -0.749770, 0, 1.0};
Point(83) = {-0.084543, -0.749884, 0, 1.0};
Point(84) = {-0.080751, -0.749952, 0, 1.0};
Point(85) = {-0.076964, -0.749976, 0, 1.0};
Point(86) = {-0.073178, -0.750000, 0, 1.0};
Point(87) = {-0.069397, -0.749979, 0, 1.0};
Point(88) = {-0.065621, -0.749929, 0, 1.0};
Point(89) = {-0.061850, -0.749834, 0, 1.0};
Point(90) = {-0.058084, -0.749709, 0, 1.0};
Point(91) = {-0.054325, -0.749525, 0, 1.0};
Point(92) = {-0.050572, -0.749296, 0, 1.0};
Point(93) = {-0.046825, -0.749023, 0, 1.0};
Point(94) = {-0.043085, -0.748705, 0, 1.0};
Point(95) = {-0.035613, -0.747995, 0, 1.0};
Point(96) = {-0.028161, -0.747136, 0, 1.0};
Point(97) = {-0.020725, -0.746158, 0, 1.0};
Point(98) = {-0.013305, -0.745061, 0, 1.0};
Point(99) = {-0.005903, -0.743830, 0, 1.0};
Point(100) = {0.001484, -0.742480, 0, 1.0};
Point(101) = {0.008850, -0.740982, 0, 1.0};
Point(102) = {0.012524, -0.740158, 0, 1.0};
Point(103) = {0.016189, -0.739275, 0, 1.0};
Point(104) = {0.019846, -0.738333, 0, 1.0};
Point(105) = {0.023492, -0.737301, 0, 1.0};
Point(106) = {0.027121, -0.736151, 0, 1.0};
Point(107) = {0.030727, -0.734822, 0, 1.0};
Point(108) = {0.032512, -0.734023, 0, 1.0};
Point(109) = {0.034277, -0.733076, 0, 1.0};
Point(110) = {0.035997, -0.731787, 0, 1.0};
Point(111) = {0.036993, -0.730746, 0, 1.0};
Point(112) = {0.037356, -0.730062, 0, 1.0};
Point(113) = {0.037500, -0.728878, 0, 1.0};
Point(114) = {0.037139, -0.728442, 0, 1.0};
Point(115) = {0.036675, -0.728367, 0, 1.0};
Point(116) = {0.035522, -0.728234, 0, 1.0};
Point(117) = {0.033630, -0.728229, 0, 1.0};
Point(118) = {0.031746, -0.728284, 0, 1.0};
Point(119) = {0.029867, -0.728384, 0, 1.0};
Point(120) = {0.026115, -0.728613, 0, 1.0};
Point(121) = {0.022370, -0.728901, 0, 1.0};
Point(122) = {0.018629, -0.729219, 0, 1.0};
Point(123) = {0.014892, -0.729567, 0, 1.0};
Point(124) = {0.011161, -0.729959, 0, 1.0};
Point(125) = {0.007432, -0.730366, 0, 1.0};
Point(126) = {-0.000017, -0.731240, 0, 1.0};
Point(127) = {-0.007453, -0.732218, 0, 1.0};
Point(128) = {-0.014883, -0.733241, 0, 1.0};
Point(129) = {-0.022306, -0.734323, 0, 1.0};
Point(130) = {-0.029720, -0.735464, 0, 1.0};
Point(131) = {-0.037126, -0.736665, 0, 1.0};
Point(132) = {-0.044516, -0.737985, 0, 1.0};
Point(133) = {-0.048201, -0.738719, 0, 1.0};
Point(134) = {-0.051887, -0.739454, 0, 1.0};
Point(135) = {-0.055566, -0.740233, 0, 1.0};
Point(136) = {-0.059245, -0.741011, 0, 1.0};
Point(137) = {-0.062924, -0.741790, 0, 1.0};
Point(138) = {-0.066606, -0.742554, 0, 1.0};
Point(139) = {-0.070285, -0.743333, 0, 1.0};
Point(140) = {-0.073970, -0.744068, 0, 1.0};
Point(141) = {-0.077655, -0.744802, 0, 1.0};
Point(142) = {-0.081347, -0.745492, 0, 1.0};
Point(143) = {-0.085042, -0.746152, 0, 1.0};
Point(144) = {-0.088749, -0.746722, 0, 1.0};
Point(145) = {-0.092468, -0.747204, 0, 1.0};
Point(146) = {-0.096195, -0.747626, 0, 1.0};
Point(147) = {-0.099940, -0.747914, 0, 1.0};
Point(148) = {-0.103704, -0.748054, 0, 1.0};
Point(149) = {-0.107489, -0.748045, 0, 1.0};
Point(150) = {-0.111313, -0.747738, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:99};
Spline(6) = {99:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074806, 0.745400, 0, 1.0};
Point(2) = {0.071353, 0.745897, 0, 1.0};
Point(3) = {0.066828, 0.746504, 0, 1.0};
Point(4) = {0.061651, 0.747148, 0, 1.0};
Point(5) = {0.055907, 0.747813, 0, 1.0};
Point(6) = {0.049687, 0.748468, 0, 1.0};
Point(7) = {0.043083, 0.749069, 0, 1.0};
Point(8) = {0.036165, 0.749547, 0, 1.0};
Point(9) = {0.028967, 0.749863, 0, 1.0};
Point(10) = {0.021531, 0.750000, 0, 1.0};
Point(11) = {0.013904, 0.749960, 0, 1.0};
Point(12) = {0.006143, 0.749764, 0, 1.0};
Point(13) = {-0.001663, 0.749428, 0, 1.0};
Point(14) = {-0.009437, 0.748960, 0, 1.0};
Point(15) = {-0.017097, 0.748370, 0, 1.0};
Point(16) = {-0.024560, 0.747669, 0, 1.0};
Point(17) = {-0.031750, 0.746868, 0, 1.0};
Point(18) = {-0.038593, 0.745980, 0, 1.0};
Point(19) = {-0.045015, 0.745018, 0, 1.0};
Point(20) = {-0.050951, 0.743996, 0, 1.0};
Point(21) = {-0.056338, 0.742929, 0, 1.0};
Point(22) = {-0.061122, 0.741840, 0, 1.0};
Point(23) = {-0.065250, 0.740741, 0, 1.0};
Point(24) = {-0.068677, 0.739652, 0, 1.0};
Point(25) = {-0.071371, 0.738584, 0, 1.0};
Point(26) = {-0.073319, 0.737563, 0, 1.0};
Point(27) = {-0.074017, 0.737076, 0, 1.0};
Point(28) = {-0.074580, 0.736536, 0, 1.0};
Point(29) = {-0.074809, 0.736215, 0, 1.0};
Point(30) = {-0.074896, 0.736004, 0, 1.0};
Point(31) = {-0.074904, 0.735887, 0, 1.0};
Point(32) = {-0.074859, 0.735775, 0, 1.0};
Point(33) = {-0.074708, 0.735597, 0, 1.0};
Point(34) = {-0.074383, 0.735345, 0, 1.0};
Point(35) = {-0.073655, 0.734963, 0, 1.0};
Point(36) = {-0.072841, 0.734670, 0, 1.0};
Point(37) = {-0.070578, 0.734115, 0, 1.0};
Point(38) = {-0.067535, 0.733651, 0, 1.0};
Point(39) = {-0.063735, 0.733284, 0, 1.0};
Point(40) = {-0.059218, 0.733012, 0, 1.0};
Point(41) = {-0.054041, 0.732840, 0, 1.0};
Point(42) = {-0.048268, 0.732773, 0, 1.0};
Point(43) = {-0.041969, 0.732818, 0, 1.0};
Point(44) = {-0.035217, 0.732988, 0, 1.0};
Point(45) = {-0.028094, 0.733304, 0, 1.0};
Point(46) = {-0.020660, 0.733797, 0, 1.0};
Point(47) = {-0.012956, 0.734482, 0, 1.0};
Point(48) = {-0.005023, 0.735354, 0, 1.0};
Point(49) = {0.003110, 0.736381, 0, 1.0};
Point(50) = {0.011386, 0.737485, 0, 1.0};
Point(51) = {0.019701, 0.738605, 0, 1.0};
Point(52) = {0.027946, 0.739688, 0, 1.0};
Point(53) = {0.036010, 0.740694, 0, 1.0};
Point(54) = {0.043769, 0.741591, 0, 1.0};
Point(55) = {0.051111, 0.742354, 0, 1.0};
Point(56) = {0.057916, 0.742965, 0, 1.0};
Point(57) = {0.064075, 0.743422, 0, 1.0};
Point(58) = {0.069483, 0.743727, 0, 1.0};
Point(59) = {0.074046, 0.743901, 0, 1.0};
Point(60) = {0.074881, 0.743923, 0, 1.0};
Point(61) = {-0.074806, -0.745400, 0, 1.0};
Point(62) = {-0.071353, -0.745897, 0, 1.0};
Point(63) = {-0.066828, -0.746504, 0, 1.0};
Point(64) = {-0.061651, -0.747148, 0, 1.0};
Point(65) = {-0.055907, -0.747813, 0, 1.0};
Point(66) = {-0.049687, -0.748468, 0, 1.0};
Point(67) = {-0.043083, -0.749069, 0, 1.0};
Point(68) = {-0.036165, -0.749547, 0, 1.0};
Point(69) = {-0.028967, -0.749863, 0, 1.0};
Point(70) = {-0.021531, -0.750000, 0, 1.0};
Point(71) = {-0.013904, -0.749960, 0, 1.0};
Point(72) = {-0.006143, -0.749764, 0, 1.0};
Point(73) = {0.001663, -0.749428, 0, 1.0};
Point(74) = {0.009437, -0.748960, 0, 1.0};
Point(75) = {0.017097, -0.748370, 0, 1.0};
Point(76) = {0.024560, -0.747669, 0, 1.0};
Point(77) = {0.031750, -0.746868, 0, 1.0};
Point(78) = {0.038593, -0.745980, 0, 1.0};
Point(79) = {0.045015, -0.745018, 0, 1.0};
Point(80) = {0.050951, -0.743996, 0, 1.0};
Point(81) = {0.056338, -0.742929, 0, 1.0};
Point(82) = {0.061122, -0.741840, 0, 1.0};
Point(83) = {0.065250, -0.740741, 0, 1.0};
Point(84) = {0.068677, -0.739652, 0, 1.0};
Point(85) = {0.071371, -0.738584, 0, 1.0};
Point(86) = {0.073319, -0.737563, 0, 1.0};
Point(87) = {0.074017, -0.737076, 0, 1.0};
Point(88) = {0.074580, -0.736536, 0, 1.0};
Point(89) = {0.074809, -0.736215, 0, 1.0};
Point(90) = {0.074896, -0.736004, 0, 1.0};
Point(91) = {0.074904, -0.735887, 0, 1.0};
Point(92) = {0.074859, -0.735775, 0, 1.0};
Point(93) = {0.074708, -0.735597, 0, 1.0};
Point(94) = {0.074383, -0.735345, 0, 1.0};
Point(95) = {0.073655, -0.734963, 0, 1.0};
Point(96) = {0.072841, -0.734670, 0, 1.0};
Point(97) = {0.070578, -0.734115, 0, 1.0};
Point(98) = {0.067535, -0.733651, 0, 1.0};
Point(99) = {0.063735, -0.733284, 0, 1.0};
Point(100) = {0.059218, -0.733012, 0, 1.0};
Point(101) = {0.054041, -0.732840, 0, 1.0};
Point(102) = {0.048268, -0.732773, 0, 1.0};
Point(103) = {0.041969, -0.732818, 0, 1.0};
Point(104) = {0.035217, -0.732988, 0, 1.0};
Point(105) = {0.028094, -0.733304, 0, 1.0};
Point(106) = {0.020660, -0.733797, 0, 1.0};
Point(107) = {0.012956, -0.734482, 0, 1.0};
Point(108) = {0.005023, -0.735354, 0, 1.0};
Point(109) = {-0.003110, -0.736381, 0, 1.0};
Point(110) = {-0.011386, -0.737485, 0, 1.0};
Point(111) = {-0.019701, -0.738605, 0, 1.0};
Point(112) = {-0.027946, -0.739688, 0, 1.0};
Point(113) = {-0.036010, -0.740694, 0, 1.0};
Point(114) = {-0.043769, -0.741591, 0, 1.0};
Point(115) = {-0.051111, -0.742354, 0, 1.0};
Point(116) = {-0.057916, -0.742965, 0, 1.0};
Point(117) = {-0.064075, -0.743422, 0, 1.0};
Point(118) = {-0.069483, -0.743727, 0, 1.0};
Point(119) = {-0.074046, -0.743901, 0, 1.0};
Point(120) = {-0.074881, -0.743923, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112307, 0.744176, 0, 1.0};
Point(2) = {0.111805, 0.744265, 0, 1.0};
Point(3) = {0.110383, 0.744554, 0, 1.0};
Point(4) = {0.108190, 0.745018, 0, 1.0};
Point(5) = {0.105293, 0.745548, 0, 1.0};
Point(6) = {0.101678, 0.746096, 0, 1.0};
Point(7) = {0.097372, 0.746674, 0, 1.0};
Point(8) = {0.092446, 0.747286, 0, 1.0};
Point(9) = {0.086980, 0.747918, 0, 1.0};
Point(10) = {0.081061, 0.748543, 0, 1.0};
Point(11) = {0.074776, 0.749114, 0, 1.0};
Point(12) = {0.068193, 0.749569, 0, 1.0};
Point(13) = {0.061344, 0.749870, 0, 1.0};
Point(14) = {0.054267, 0.750000, 0, 1.0};
Point(15) = {0.047009, 0.749962, 0, 1.0};
Point(16) = {0.039624, 0.749776, 0, 1.0};
Point(17) = {0.032196, 0.749455, 0, 1.0};
Point(18) = {0.024798, 0.749010, 0, 1.0};
Point(19) = {0.017510, 0.748449, 0, 1.0};
Point(20) = {0.010408, 0.747782, 0, 1.0};
Point(21) = {0.003566, 0.747020, 0, 1.0};
Point(22) = {-0.002946, 0.746175, 0, 1.0};
Point(23) = {-0.009058, 0.745259, 0, 1.0};
Point(24) = {-0.014707, 0.744287, 0, 1.0};
Point(25) = {-0.019832, 0.743272, 0, 1.0};
Point(26) = {-0.024385, 0.742235, 0, 1.0};
Point(27) = {-0.028314, 0.741189, 0, 1.0};
Point(28) = {-0.031575, 0.740153, 0, 1.0};
Point(29) = {-0.034138, 0.739137, 0, 1.0};
Point(30) = {-0.035992, 0.738165, 0, 1.0};
Point(31) = {-0.036656, 0.737701, 0, 1.0};
Point(32) = {-0.037192, 0.737188, 0, 1.0};
Point(33) = {-0.037409, 0.736882, 0, 1.0};
Point(34) = {-0.037492, 0.736681, 0, 1.0};
Point(35) = {-0.037500, 0.736570, 0, 1.0};
Point(36) = {-0.037457, 0.736464, 0, 1.0};
Point(37) = {-0.037313, 0.736294, 0, 1.0};
Point(38) = {-0.037004, 0.736054, 0, 1.0};
Point(39) = {-0.036311, 0.735691, 0, 1.0};
Point(40) = {-0.035537, 0.735412, 0, 1.0};
Point(41) = {-0.033384, 0.734884, 0, 1.0};
Point(42) = {-0.030488, 0.734442, 0, 1.0};
Point(43) = {-0.026872, 0.734093, 0, 1.0};
Point(44) = {-0.022574, 0.733835, 0, 1.0};
Point(45) = {-0.017646, 0.733671, 0, 1.0};
Point(46) = {-0.012154, 0.733606, 0, 1.0};
Point(47) = {-0.006159, 0.733650, 0, 1.0};
Point(48) = {0.000266, 0.733811, 0, 1.0};
Point(49) = {0.007044, 0.734112, 0, 1.0};
Point(50) = {0.014118, 0.734582, 0, 1.0};
Point(51) = {0.021449, 0.735233, 0, 1.0};
Point(52) = {0.028998, 0.736063, 0, 1.0};
Point(53) = {0.036738, 0.737040, 0, 1.0};
Point(54) = {0.044613, 0.738091, 0, 1.0};
Point(55) = {0.052526, 0.739156, 0, 1.0};
Point(56) = {0.060372, 0.740187, 0, 1.0};
Point(57) = {0.068045, 0.741145, 0, 1.0};
Point(58) = {0.075429, 0.741998, 0, 1.0};
Point(59) = {0.082415, 0.742724, 0, 1.0};
Point(60) = {0.088891, 0.743305, 0, 1.0};
Point(61) = {0.094752, 0.743740, 0, 1.0};
Point(62) = {0.099898, 0.744030, 0, 1.0};
Point(63) = {0.104241, 0.744196, 0, 1.0};
Point(64) = {0.107708, 0.744260, 0, 1.0};
Point(65) = {0.110241, 0.744250, 0, 1.0};
Point(66) = {0.111786, 0.744204, 0, 1.0};
Point(67) = {-0.112307, -0.744176, 0, 1.0};
Point(68) = {-0.111805, -0.744265, 0, 1.0};
Point(69) = {-0.110383, -0.744554, 0, 1.0};
Point(70) = {-0.108190, -0.745018, 0, 1.0};
Point(71) = {-0.105293, -0.745548, 0, 1.0};
Point(72) = {-0.101678, -0.746096, 0, 1.0};
Point(73) = {-0.097372, -0.746674, 0, 1.0};
Point(74) = {-0.092446, -0.747286, 0, 1.0};
Point(75) = {-0.086980, -0.747918, 0, 1.0};
Point(76) = {-0.081061, -0.748543, 0, 1.0};
Point(77) = {-0.074776, -0.749114, 0, 1.0};
Point(78) = {-0.068193, -0.749569, 0, 1.0};
Point(79) = {-0.061344, -0.749870, 0, 1.0};
Point(80) = {-0.054267, -0.750000, 0, 1.0};
Point(81) = {-0.047009, -0.749962, 0, 1.0};
Point(82) = {-0.039624, -0.749776, 0, 1.0};
Point(83) = {-0.032196, -0.749455, 0, 1.0};
Point(84) = {-0.024798, -0.749010, 0, 1.0};
Point(85) = {-0.017510, -0.748449, 0, 1.0};
Point(86) = {-0.010408, -0.747782, 0, 1.0};
Point(87) = {-0.003566, -0.747020, 0, 1.0};
Point(88) = {0.002946, -0.746175, 0, 1.0};
Point(89) = {0.009058, -0.745259, 0, 1.0};
Point(90) = {0.014707, -0.744287, 0, 1.0};
Point(91) = {0.019832, -0.743272, 0, 1.0};
Point(92) = {0.024385, -0.742235, 0, 1.0};
Point(93) = {0.028314, -0.741189, 0, 1.0};
Point(94) = {0.031575, -0.740153, 0, 1.0};
Point(95) = {0.034138, -0.739137, 0, 1.0};
Point(96) = {0.035992, -0.738165, 0, 1.0};
Point(97) = {0.036656, -0.737701, 0, 1.0};
Point(98) = {0.037192, -0.737188, 0, 1.0};
Point(99) = {0.037409, -0.736882, 0, 1.0};
Point(100) = {0.037492, -0.736681, 0, 1.0};
Point(101) = {0.037500, -0.736570, 0, 1.0};
Point(102) = {0.037457, -0.736464, 0, 1.0};
Point(103) = {0.037313, -0.736294, 0, 1.0};
Point(104) = {0.037004, -0.736054, 0, 1.0};
Point(105) = {0.036311, -0.735691, 0, 1.0};
Point(106) = {0.035537, -0.735412, 0, 1.0};
Point(107) = {0.033384, -0.734884, 0, 1.0};
Point(108) = {0.030488, -0.734442, 0, 1.0};
Point(109) = {0.026872, -0.734093, 0, 1.0};
Point(110) = {0.022574, -0.733835, 0, 1.0};
Point(111) = {0.017646, -0.733671, 0, 1.0};
Point(112) = {0.012154, -0.733606, 0, 1.0};
Point(113) = {0.006159, -0.733650, 0, 1.0};
Point(114) = {-0.000266, -0.733811, 0, 1.0};
Point(115) = {-0.007044, -0.734112, 0, 1.0};
Point(116) = {-0.014118, -0.734582, 0, 1.0};
Point(117) = {-0.021449, -0.735233, 0, 1.0};
Point(118) = {-0.028998, -0.736063, 0, 1.0};
Point(119) = {-0.036738, -0.737040, 0, 1.0};
Point(120) = {-0.044613, -0.738091, 0, 1.0};
Point(121) = {-0.052526, -0.739156, 0, 1.0};
Point(122) = {-0.060372, -0.740187, 0, 1.0};
Point(123) = {-0.068045, -0.741145, 0, 1.0};
Point(124) = {-0.075429, -0.741998, 0, 1.0};
Point(125) = {-0.082415, -0.742724, 0, 1.0};
Point(126) = {-0.088891, -0.743305, 0, 1.0};
Point(127) = {-0.094752, -0.743740, 0, 1.0};
Point(128) = {-0.099898, -0.744030, 0, 1.0};
Point(129) = {-0.104241, -0.744196, 0, 1.0};
Point(130) = {-0.107708, -0.744260, 0, 1.0};
Point(131) = {-0.110241, -0.744250, 0, 1.0};
Point(132) = {-0.111786, -0.744204, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
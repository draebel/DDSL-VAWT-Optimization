SetFactory("OpenCASCADE");

Point(1) = {0.149743, 0.742235, 0, 1.0};
Point(2) = {0.149074, 0.742353, 0, 1.0};
Point(3) = {0.147178, 0.742738, 0, 1.0};
Point(4) = {0.144253, 0.743357, 0, 1.0};
Point(5) = {0.140390, 0.744065, 0, 1.0};
Point(6) = {0.135571, 0.744794, 0, 1.0};
Point(7) = {0.129829, 0.745565, 0, 1.0};
Point(8) = {0.123261, 0.746382, 0, 1.0};
Point(9) = {0.115973, 0.747225, 0, 1.0};
Point(10) = {0.108081, 0.748057, 0, 1.0};
Point(11) = {0.099701, 0.748819, 0, 1.0};
Point(12) = {0.090924, 0.749425, 0, 1.0};
Point(13) = {0.081792, 0.749827, 0, 1.0};
Point(14) = {0.072357, 0.750000, 0, 1.0};
Point(15) = {0.062679, 0.749949, 0, 1.0};
Point(16) = {0.052833, 0.749701, 0, 1.0};
Point(17) = {0.042927, 0.749274, 0, 1.0};
Point(18) = {0.033065, 0.748680, 0, 1.0};
Point(19) = {0.023346, 0.747932, 0, 1.0};
Point(20) = {0.013877, 0.747043, 0, 1.0};
Point(21) = {0.004754, 0.746026, 0, 1.0};
Point(22) = {-0.003928, 0.744900, 0, 1.0};
Point(23) = {-0.012077, 0.743679, 0, 1.0};
Point(24) = {-0.019609, 0.742382, 0, 1.0};
Point(25) = {-0.026443, 0.741029, 0, 1.0};
Point(26) = {-0.032513, 0.739646, 0, 1.0};
Point(27) = {-0.037751, 0.738252, 0, 1.0};
Point(28) = {-0.042099, 0.736870, 0, 1.0};
Point(29) = {-0.045517, 0.735516, 0, 1.0};
Point(30) = {-0.047989, 0.734219, 0, 1.0};
Point(31) = {-0.048875, 0.733602, 0, 1.0};
Point(32) = {-0.049589, 0.732917, 0, 1.0};
Point(33) = {-0.049879, 0.732510, 0, 1.0};
Point(34) = {-0.049990, 0.732242, 0, 1.0};
Point(35) = {-0.050000, 0.732093, 0, 1.0};
Point(36) = {-0.049943, 0.731952, 0, 1.0};
Point(37) = {-0.049751, 0.731725, 0, 1.0};
Point(38) = {-0.049338, 0.731406, 0, 1.0};
Point(39) = {-0.048415, 0.730922, 0, 1.0};
Point(40) = {-0.047383, 0.730549, 0, 1.0};
Point(41) = {-0.044511, 0.729846, 0, 1.0};
Point(42) = {-0.040651, 0.729256, 0, 1.0};
Point(43) = {-0.035829, 0.728791, 0, 1.0};
Point(44) = {-0.030098, 0.728446, 0, 1.0};
Point(45) = {-0.023529, 0.728228, 0, 1.0};
Point(46) = {-0.016205, 0.728142, 0, 1.0};
Point(47) = {-0.008211, 0.728200, 0, 1.0};
Point(48) = {0.000355, 0.728415, 0, 1.0};
Point(49) = {0.009392, 0.728816, 0, 1.0};
Point(50) = {0.018825, 0.729442, 0, 1.0};
Point(51) = {0.028599, 0.730311, 0, 1.0};
Point(52) = {0.038664, 0.731417, 0, 1.0};
Point(53) = {0.048984, 0.732720, 0, 1.0};
Point(54) = {0.059484, 0.734121, 0, 1.0};
Point(55) = {0.070034, 0.735542, 0, 1.0};
Point(56) = {0.080496, 0.736916, 0, 1.0};
Point(57) = {0.090727, 0.738193, 0, 1.0};
Point(58) = {0.100572, 0.739330, 0, 1.0};
Point(59) = {0.109887, 0.740298, 0, 1.0};
Point(60) = {0.118521, 0.741074, 0, 1.0};
Point(61) = {0.126336, 0.741653, 0, 1.0};
Point(62) = {0.133197, 0.742041, 0, 1.0};
Point(63) = {0.138987, 0.742261, 0, 1.0};
Point(64) = {0.143611, 0.742347, 0, 1.0};
Point(65) = {0.146988, 0.742334, 0, 1.0};
Point(66) = {0.149048, 0.742272, 0, 1.0};
Point(67) = {-0.149743, -0.742235, 0, 1.0};
Point(68) = {-0.149074, -0.742353, 0, 1.0};
Point(69) = {-0.147178, -0.742738, 0, 1.0};
Point(70) = {-0.144253, -0.743357, 0, 1.0};
Point(71) = {-0.140390, -0.744065, 0, 1.0};
Point(72) = {-0.135571, -0.744794, 0, 1.0};
Point(73) = {-0.129829, -0.745565, 0, 1.0};
Point(74) = {-0.123261, -0.746382, 0, 1.0};
Point(75) = {-0.115973, -0.747225, 0, 1.0};
Point(76) = {-0.108081, -0.748057, 0, 1.0};
Point(77) = {-0.099701, -0.748819, 0, 1.0};
Point(78) = {-0.090924, -0.749425, 0, 1.0};
Point(79) = {-0.081792, -0.749827, 0, 1.0};
Point(80) = {-0.072357, -0.750000, 0, 1.0};
Point(81) = {-0.062679, -0.749949, 0, 1.0};
Point(82) = {-0.052833, -0.749701, 0, 1.0};
Point(83) = {-0.042927, -0.749274, 0, 1.0};
Point(84) = {-0.033065, -0.748680, 0, 1.0};
Point(85) = {-0.023346, -0.747932, 0, 1.0};
Point(86) = {-0.013877, -0.747043, 0, 1.0};
Point(87) = {-0.004754, -0.746026, 0, 1.0};
Point(88) = {0.003928, -0.744900, 0, 1.0};
Point(89) = {0.012077, -0.743679, 0, 1.0};
Point(90) = {0.019609, -0.742382, 0, 1.0};
Point(91) = {0.026443, -0.741029, 0, 1.0};
Point(92) = {0.032513, -0.739646, 0, 1.0};
Point(93) = {0.037751, -0.738252, 0, 1.0};
Point(94) = {0.042099, -0.736870, 0, 1.0};
Point(95) = {0.045517, -0.735516, 0, 1.0};
Point(96) = {0.047989, -0.734219, 0, 1.0};
Point(97) = {0.048875, -0.733602, 0, 1.0};
Point(98) = {0.049589, -0.732917, 0, 1.0};
Point(99) = {0.049879, -0.732510, 0, 1.0};
Point(100) = {0.049990, -0.732242, 0, 1.0};
Point(101) = {0.050000, -0.732093, 0, 1.0};
Point(102) = {0.049943, -0.731952, 0, 1.0};
Point(103) = {0.049751, -0.731725, 0, 1.0};
Point(104) = {0.049338, -0.731406, 0, 1.0};
Point(105) = {0.048415, -0.730922, 0, 1.0};
Point(106) = {0.047383, -0.730549, 0, 1.0};
Point(107) = {0.044511, -0.729846, 0, 1.0};
Point(108) = {0.040651, -0.729256, 0, 1.0};
Point(109) = {0.035829, -0.728791, 0, 1.0};
Point(110) = {0.030098, -0.728446, 0, 1.0};
Point(111) = {0.023529, -0.728228, 0, 1.0};
Point(112) = {0.016205, -0.728142, 0, 1.0};
Point(113) = {0.008211, -0.728200, 0, 1.0};
Point(114) = {-0.000355, -0.728415, 0, 1.0};
Point(115) = {-0.009392, -0.728816, 0, 1.0};
Point(116) = {-0.018825, -0.729442, 0, 1.0};
Point(117) = {-0.028599, -0.730311, 0, 1.0};
Point(118) = {-0.038664, -0.731417, 0, 1.0};
Point(119) = {-0.048984, -0.732720, 0, 1.0};
Point(120) = {-0.059484, -0.734121, 0, 1.0};
Point(121) = {-0.070034, -0.735542, 0, 1.0};
Point(122) = {-0.080496, -0.736916, 0, 1.0};
Point(123) = {-0.090727, -0.738193, 0, 1.0};
Point(124) = {-0.100572, -0.739330, 0, 1.0};
Point(125) = {-0.109887, -0.740298, 0, 1.0};
Point(126) = {-0.118521, -0.741074, 0, 1.0};
Point(127) = {-0.126336, -0.741653, 0, 1.0};
Point(128) = {-0.133197, -0.742041, 0, 1.0};
Point(129) = {-0.138987, -0.742261, 0, 1.0};
Point(130) = {-0.143611, -0.742347, 0, 1.0};
Point(131) = {-0.146988, -0.742334, 0, 1.0};
Point(132) = {-0.149048, -0.742272, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
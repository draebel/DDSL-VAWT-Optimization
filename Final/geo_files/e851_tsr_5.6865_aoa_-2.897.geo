SetFactory("OpenCASCADE");

Point(1) = {0.074871, 0.746117, 0, 1.0};
Point(2) = {0.074537, 0.746177, 0, 1.0};
Point(3) = {0.073589, 0.746369, 0, 1.0};
Point(4) = {0.072126, 0.746678, 0, 1.0};
Point(5) = {0.070195, 0.747032, 0, 1.0};
Point(6) = {0.067786, 0.747397, 0, 1.0};
Point(7) = {0.064914, 0.747782, 0, 1.0};
Point(8) = {0.061631, 0.748191, 0, 1.0};
Point(9) = {0.057986, 0.748612, 0, 1.0};
Point(10) = {0.054040, 0.749028, 0, 1.0};
Point(11) = {0.049851, 0.749409, 0, 1.0};
Point(12) = {0.045462, 0.749713, 0, 1.0};
Point(13) = {0.040896, 0.749913, 0, 1.0};
Point(14) = {0.036178, 0.750000, 0, 1.0};
Point(15) = {0.031339, 0.749974, 0, 1.0};
Point(16) = {0.026416, 0.749850, 0, 1.0};
Point(17) = {0.021464, 0.749637, 0, 1.0};
Point(18) = {0.016532, 0.749340, 0, 1.0};
Point(19) = {0.011673, 0.748966, 0, 1.0};
Point(20) = {0.006938, 0.748521, 0, 1.0};
Point(21) = {0.002377, 0.748013, 0, 1.0};
Point(22) = {-0.001964, 0.747450, 0, 1.0};
Point(23) = {-0.006038, 0.746839, 0, 1.0};
Point(24) = {-0.009804, 0.746191, 0, 1.0};
Point(25) = {-0.013222, 0.745514, 0, 1.0};
Point(26) = {-0.016257, 0.744823, 0, 1.0};
Point(27) = {-0.018876, 0.744126, 0, 1.0};
Point(28) = {-0.021050, 0.743435, 0, 1.0};
Point(29) = {-0.022759, 0.742758, 0, 1.0};
Point(30) = {-0.023994, 0.742110, 0, 1.0};
Point(31) = {-0.024437, 0.741801, 0, 1.0};
Point(32) = {-0.024795, 0.741458, 0, 1.0};
Point(33) = {-0.024939, 0.741255, 0, 1.0};
Point(34) = {-0.024995, 0.741121, 0, 1.0};
Point(35) = {-0.025000, 0.741047, 0, 1.0};
Point(36) = {-0.024971, 0.740976, 0, 1.0};
Point(37) = {-0.024876, 0.740863, 0, 1.0};
Point(38) = {-0.024669, 0.740703, 0, 1.0};
Point(39) = {-0.024207, 0.740461, 0, 1.0};
Point(40) = {-0.023691, 0.740275, 0, 1.0};
Point(41) = {-0.022256, 0.739923, 0, 1.0};
Point(42) = {-0.020325, 0.739628, 0, 1.0};
Point(43) = {-0.017914, 0.739395, 0, 1.0};
Point(44) = {-0.015049, 0.739223, 0, 1.0};
Point(45) = {-0.011764, 0.739114, 0, 1.0};
Point(46) = {-0.008102, 0.739071, 0, 1.0};
Point(47) = {-0.004106, 0.739100, 0, 1.0};
Point(48) = {0.000177, 0.739208, 0, 1.0};
Point(49) = {0.004696, 0.739408, 0, 1.0};
Point(50) = {0.009412, 0.739721, 0, 1.0};
Point(51) = {0.014300, 0.740156, 0, 1.0};
Point(52) = {0.019332, 0.740709, 0, 1.0};
Point(53) = {0.024492, 0.741360, 0, 1.0};
Point(54) = {0.029742, 0.742060, 0, 1.0};
Point(55) = {0.035017, 0.742771, 0, 1.0};
Point(56) = {0.040248, 0.743458, 0, 1.0};
Point(57) = {0.045363, 0.744097, 0, 1.0};
Point(58) = {0.050286, 0.744665, 0, 1.0};
Point(59) = {0.054944, 0.745149, 0, 1.0};
Point(60) = {0.059261, 0.745537, 0, 1.0};
Point(61) = {0.063168, 0.745827, 0, 1.0};
Point(62) = {0.066599, 0.746020, 0, 1.0};
Point(63) = {0.069494, 0.746131, 0, 1.0};
Point(64) = {0.071806, 0.746174, 0, 1.0};
Point(65) = {0.073494, 0.746167, 0, 1.0};
Point(66) = {0.074524, 0.746136, 0, 1.0};
Point(67) = {-0.074871, -0.746117, 0, 1.0};
Point(68) = {-0.074537, -0.746177, 0, 1.0};
Point(69) = {-0.073589, -0.746369, 0, 1.0};
Point(70) = {-0.072126, -0.746678, 0, 1.0};
Point(71) = {-0.070195, -0.747032, 0, 1.0};
Point(72) = {-0.067786, -0.747397, 0, 1.0};
Point(73) = {-0.064914, -0.747782, 0, 1.0};
Point(74) = {-0.061631, -0.748191, 0, 1.0};
Point(75) = {-0.057986, -0.748612, 0, 1.0};
Point(76) = {-0.054040, -0.749028, 0, 1.0};
Point(77) = {-0.049851, -0.749409, 0, 1.0};
Point(78) = {-0.045462, -0.749713, 0, 1.0};
Point(79) = {-0.040896, -0.749913, 0, 1.0};
Point(80) = {-0.036178, -0.750000, 0, 1.0};
Point(81) = {-0.031339, -0.749974, 0, 1.0};
Point(82) = {-0.026416, -0.749850, 0, 1.0};
Point(83) = {-0.021464, -0.749637, 0, 1.0};
Point(84) = {-0.016532, -0.749340, 0, 1.0};
Point(85) = {-0.011673, -0.748966, 0, 1.0};
Point(86) = {-0.006938, -0.748521, 0, 1.0};
Point(87) = {-0.002377, -0.748013, 0, 1.0};
Point(88) = {0.001964, -0.747450, 0, 1.0};
Point(89) = {0.006038, -0.746839, 0, 1.0};
Point(90) = {0.009804, -0.746191, 0, 1.0};
Point(91) = {0.013222, -0.745514, 0, 1.0};
Point(92) = {0.016257, -0.744823, 0, 1.0};
Point(93) = {0.018876, -0.744126, 0, 1.0};
Point(94) = {0.021050, -0.743435, 0, 1.0};
Point(95) = {0.022759, -0.742758, 0, 1.0};
Point(96) = {0.023994, -0.742110, 0, 1.0};
Point(97) = {0.024437, -0.741801, 0, 1.0};
Point(98) = {0.024795, -0.741458, 0, 1.0};
Point(99) = {0.024939, -0.741255, 0, 1.0};
Point(100) = {0.024995, -0.741121, 0, 1.0};
Point(101) = {0.025000, -0.741047, 0, 1.0};
Point(102) = {0.024971, -0.740976, 0, 1.0};
Point(103) = {0.024876, -0.740863, 0, 1.0};
Point(104) = {0.024669, -0.740703, 0, 1.0};
Point(105) = {0.024207, -0.740461, 0, 1.0};
Point(106) = {0.023691, -0.740275, 0, 1.0};
Point(107) = {0.022256, -0.739923, 0, 1.0};
Point(108) = {0.020325, -0.739628, 0, 1.0};
Point(109) = {0.017914, -0.739395, 0, 1.0};
Point(110) = {0.015049, -0.739223, 0, 1.0};
Point(111) = {0.011764, -0.739114, 0, 1.0};
Point(112) = {0.008102, -0.739071, 0, 1.0};
Point(113) = {0.004106, -0.739100, 0, 1.0};
Point(114) = {-0.000177, -0.739208, 0, 1.0};
Point(115) = {-0.004696, -0.739408, 0, 1.0};
Point(116) = {-0.009412, -0.739721, 0, 1.0};
Point(117) = {-0.014300, -0.740156, 0, 1.0};
Point(118) = {-0.019332, -0.740709, 0, 1.0};
Point(119) = {-0.024492, -0.741360, 0, 1.0};
Point(120) = {-0.029742, -0.742060, 0, 1.0};
Point(121) = {-0.035017, -0.742771, 0, 1.0};
Point(122) = {-0.040248, -0.743458, 0, 1.0};
Point(123) = {-0.045363, -0.744097, 0, 1.0};
Point(124) = {-0.050286, -0.744665, 0, 1.0};
Point(125) = {-0.054944, -0.745149, 0, 1.0};
Point(126) = {-0.059261, -0.745537, 0, 1.0};
Point(127) = {-0.063168, -0.745827, 0, 1.0};
Point(128) = {-0.066599, -0.746020, 0, 1.0};
Point(129) = {-0.069494, -0.746131, 0, 1.0};
Point(130) = {-0.071806, -0.746174, 0, 1.0};
Point(131) = {-0.073494, -0.746167, 0, 1.0};
Point(132) = {-0.074524, -0.746136, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
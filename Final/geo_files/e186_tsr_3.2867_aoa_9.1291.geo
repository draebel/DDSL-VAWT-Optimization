SetFactory("OpenCASCADE");

Point(1) = {0.111046, 0.721758, 0, 1.0};
Point(2) = {0.110529, 0.721809, 0, 1.0};
Point(3) = {0.108986, 0.721989, 0, 1.0};
Point(4) = {0.106444, 0.722359, 0, 1.0};
Point(5) = {0.102966, 0.722980, 0, 1.0};
Point(6) = {0.098645, 0.723880, 0, 1.0};
Point(7) = {0.093580, 0.725054, 0, 1.0};
Point(8) = {0.087863, 0.726491, 0, 1.0};
Point(9) = {0.081596, 0.728168, 0, 1.0};
Point(10) = {0.074878, 0.730057, 0, 1.0};
Point(11) = {0.067815, 0.732122, 0, 1.0};
Point(12) = {0.060519, 0.734316, 0, 1.0};
Point(13) = {0.053092, 0.736587, 0, 1.0};
Point(14) = {0.045643, 0.738870, 0, 1.0};
Point(15) = {0.038272, 0.741082, 0, 1.0};
Point(16) = {0.031036, 0.743123, 0, 1.0};
Point(17) = {0.023960, 0.744931, 0, 1.0};
Point(18) = {0.017074, 0.746471, 0, 1.0};
Point(19) = {0.010406, 0.747721, 0, 1.0};
Point(20) = {0.003982, 0.748679, 0, 1.0};
Point(21) = {-0.002167, 0.749358, 0, 1.0};
Point(22) = {-0.007992, 0.749791, 0, 1.0};
Point(23) = {-0.013426, 0.750000, 0, 1.0};
Point(24) = {-0.018408, 0.749997, 0, 1.0};
Point(25) = {-0.022885, 0.749796, 0, 1.0};
Point(26) = {-0.026812, 0.749410, 0, 1.0};
Point(27) = {-0.030150, 0.748859, 0, 1.0};
Point(28) = {-0.032868, 0.748164, 0, 1.0};
Point(29) = {-0.034941, 0.747361, 0, 1.0};
Point(30) = {-0.036339, 0.746496, 0, 1.0};
Point(31) = {-0.037025, 0.745659, 0, 1.0};
Point(32) = {-0.036826, 0.744809, 0, 1.0};
Point(33) = {-0.035737, 0.743823, 0, 1.0};
Point(34) = {-0.033902, 0.742726, 0, 1.0};
Point(35) = {-0.031327, 0.741571, 0, 1.0};
Point(36) = {-0.028029, 0.740377, 0, 1.0};
Point(37) = {-0.024032, 0.739160, 0, 1.0};
Point(38) = {-0.019368, 0.737931, 0, 1.0};
Point(39) = {-0.014083, 0.736694, 0, 1.0};
Point(40) = {-0.008226, 0.735460, 0, 1.0};
Point(41) = {-0.001860, 0.734232, 0, 1.0};
Point(42) = {0.004945, 0.733017, 0, 1.0};
Point(43) = {0.012117, 0.731823, 0, 1.0};
Point(44) = {0.019574, 0.730655, 0, 1.0};
Point(45) = {0.027231, 0.729524, 0, 1.0};
Point(46) = {0.035004, 0.728434, 0, 1.0};
Point(47) = {0.042804, 0.727396, 0, 1.0};
Point(48) = {0.050543, 0.726418, 0, 1.0};
Point(49) = {0.058133, 0.725510, 0, 1.0};
Point(50) = {0.065488, 0.724679, 0, 1.0};
Point(51) = {0.072526, 0.723933, 0, 1.0};
Point(52) = {0.079166, 0.723277, 0, 1.0};
Point(53) = {0.085332, 0.722718, 0, 1.0};
Point(54) = {0.090957, 0.722262, 0, 1.0};
Point(55) = {0.095974, 0.721912, 0, 1.0};
Point(56) = {0.100326, 0.721673, 0, 1.0};
Point(57) = {0.103961, 0.721558, 0, 1.0};
Point(58) = {0.106879, 0.721584, 0, 1.0};
Point(59) = {0.109098, 0.721684, 0, 1.0};
Point(60) = {0.110539, 0.721747, 0, 1.0};
Point(61) = {-0.111046, -0.721758, 0, 1.0};
Point(62) = {-0.110529, -0.721809, 0, 1.0};
Point(63) = {-0.108986, -0.721989, 0, 1.0};
Point(64) = {-0.106444, -0.722359, 0, 1.0};
Point(65) = {-0.102966, -0.722980, 0, 1.0};
Point(66) = {-0.098645, -0.723880, 0, 1.0};
Point(67) = {-0.093580, -0.725054, 0, 1.0};
Point(68) = {-0.087863, -0.726491, 0, 1.0};
Point(69) = {-0.081596, -0.728168, 0, 1.0};
Point(70) = {-0.074878, -0.730057, 0, 1.0};
Point(71) = {-0.067815, -0.732122, 0, 1.0};
Point(72) = {-0.060519, -0.734316, 0, 1.0};
Point(73) = {-0.053092, -0.736587, 0, 1.0};
Point(74) = {-0.045643, -0.738870, 0, 1.0};
Point(75) = {-0.038272, -0.741082, 0, 1.0};
Point(76) = {-0.031036, -0.743123, 0, 1.0};
Point(77) = {-0.023960, -0.744931, 0, 1.0};
Point(78) = {-0.017074, -0.746471, 0, 1.0};
Point(79) = {-0.010406, -0.747721, 0, 1.0};
Point(80) = {-0.003982, -0.748679, 0, 1.0};
Point(81) = {0.002167, -0.749358, 0, 1.0};
Point(82) = {0.007992, -0.749791, 0, 1.0};
Point(83) = {0.013426, -0.750000, 0, 1.0};
Point(84) = {0.018408, -0.749997, 0, 1.0};
Point(85) = {0.022885, -0.749796, 0, 1.0};
Point(86) = {0.026812, -0.749410, 0, 1.0};
Point(87) = {0.030150, -0.748859, 0, 1.0};
Point(88) = {0.032868, -0.748164, 0, 1.0};
Point(89) = {0.034941, -0.747361, 0, 1.0};
Point(90) = {0.036339, -0.746496, 0, 1.0};
Point(91) = {0.037025, -0.745659, 0, 1.0};
Point(92) = {0.036826, -0.744809, 0, 1.0};
Point(93) = {0.035737, -0.743823, 0, 1.0};
Point(94) = {0.033902, -0.742726, 0, 1.0};
Point(95) = {0.031327, -0.741571, 0, 1.0};
Point(96) = {0.028029, -0.740377, 0, 1.0};
Point(97) = {0.024032, -0.739160, 0, 1.0};
Point(98) = {0.019368, -0.737931, 0, 1.0};
Point(99) = {0.014083, -0.736694, 0, 1.0};
Point(100) = {0.008226, -0.735460, 0, 1.0};
Point(101) = {0.001860, -0.734232, 0, 1.0};
Point(102) = {-0.004945, -0.733017, 0, 1.0};
Point(103) = {-0.012117, -0.731823, 0, 1.0};
Point(104) = {-0.019574, -0.730655, 0, 1.0};
Point(105) = {-0.027231, -0.729524, 0, 1.0};
Point(106) = {-0.035004, -0.728434, 0, 1.0};
Point(107) = {-0.042804, -0.727396, 0, 1.0};
Point(108) = {-0.050543, -0.726418, 0, 1.0};
Point(109) = {-0.058133, -0.725510, 0, 1.0};
Point(110) = {-0.065488, -0.724679, 0, 1.0};
Point(111) = {-0.072526, -0.723933, 0, 1.0};
Point(112) = {-0.079166, -0.723277, 0, 1.0};
Point(113) = {-0.085332, -0.722718, 0, 1.0};
Point(114) = {-0.090957, -0.722262, 0, 1.0};
Point(115) = {-0.095974, -0.721912, 0, 1.0};
Point(116) = {-0.100326, -0.721673, 0, 1.0};
Point(117) = {-0.103961, -0.721558, 0, 1.0};
Point(118) = {-0.106879, -0.721584, 0, 1.0};
Point(119) = {-0.109098, -0.721684, 0, 1.0};
Point(120) = {-0.110539, -0.721747, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
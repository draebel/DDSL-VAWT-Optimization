SetFactory("OpenCASCADE");

Point(1) = {0.111058, 0.721756, 0, 1.0};
Point(2) = {0.110541, 0.721807, 0, 1.0};
Point(3) = {0.108997, 0.721986, 0, 1.0};
Point(4) = {0.106456, 0.722357, 0, 1.0};
Point(5) = {0.102978, 0.722978, 0, 1.0};
Point(6) = {0.098655, 0.723878, 0, 1.0};
Point(7) = {0.093590, 0.725052, 0, 1.0};
Point(8) = {0.087873, 0.726489, 0, 1.0};
Point(9) = {0.081605, 0.728166, 0, 1.0};
Point(10) = {0.074887, 0.730055, 0, 1.0};
Point(11) = {0.067824, 0.732120, 0, 1.0};
Point(12) = {0.060527, 0.734315, 0, 1.0};
Point(13) = {0.053099, 0.736586, 0, 1.0};
Point(14) = {0.045649, 0.738869, 0, 1.0};
Point(15) = {0.038278, 0.741081, 0, 1.0};
Point(16) = {0.031041, 0.743122, 0, 1.0};
Point(17) = {0.023965, 0.744931, 0, 1.0};
Point(18) = {0.017079, 0.746470, 0, 1.0};
Point(19) = {0.010410, 0.747721, 0, 1.0};
Point(20) = {0.003985, 0.748679, 0, 1.0};
Point(21) = {-0.002164, 0.749357, 0, 1.0};
Point(22) = {-0.007989, 0.749791, 0, 1.0};
Point(23) = {-0.013424, 0.750000, 0, 1.0};
Point(24) = {-0.018406, 0.749997, 0, 1.0};
Point(25) = {-0.022884, 0.749796, 0, 1.0};
Point(26) = {-0.026811, 0.749410, 0, 1.0};
Point(27) = {-0.030149, 0.748859, 0, 1.0};
Point(28) = {-0.032868, 0.748164, 0, 1.0};
Point(29) = {-0.034940, 0.747361, 0, 1.0};
Point(30) = {-0.036339, 0.746496, 0, 1.0};
Point(31) = {-0.037025, 0.745658, 0, 1.0};
Point(32) = {-0.036826, 0.744809, 0, 1.0};
Point(33) = {-0.035737, 0.743823, 0, 1.0};
Point(34) = {-0.033902, 0.742725, 0, 1.0};
Point(35) = {-0.031327, 0.741570, 0, 1.0};
Point(36) = {-0.028029, 0.740376, 0, 1.0};
Point(37) = {-0.024031, 0.739160, 0, 1.0};
Point(38) = {-0.019367, 0.737930, 0, 1.0};
Point(39) = {-0.014081, 0.736693, 0, 1.0};
Point(40) = {-0.008223, 0.735459, 0, 1.0};
Point(41) = {-0.001857, 0.734231, 0, 1.0};
Point(42) = {0.004948, 0.733015, 0, 1.0};
Point(43) = {0.012121, 0.731822, 0, 1.0};
Point(44) = {0.019578, 0.730654, 0, 1.0};
Point(45) = {0.027236, 0.729522, 0, 1.0};
Point(46) = {0.035010, 0.728432, 0, 1.0};
Point(47) = {0.042810, 0.727395, 0, 1.0};
Point(48) = {0.050550, 0.726417, 0, 1.0};
Point(49) = {0.058141, 0.725508, 0, 1.0};
Point(50) = {0.065496, 0.724677, 0, 1.0};
Point(51) = {0.072535, 0.723931, 0, 1.0};
Point(52) = {0.079175, 0.723275, 0, 1.0};
Point(53) = {0.085342, 0.722716, 0, 1.0};
Point(54) = {0.090968, 0.722260, 0, 1.0};
Point(55) = {0.095984, 0.721910, 0, 1.0};
Point(56) = {0.100337, 0.721671, 0, 1.0};
Point(57) = {0.103972, 0.721556, 0, 1.0};
Point(58) = {0.106890, 0.721582, 0, 1.0};
Point(59) = {0.109109, 0.721681, 0, 1.0};
Point(60) = {0.110551, 0.721744, 0, 1.0};
Point(61) = {-0.111058, -0.721756, 0, 1.0};
Point(62) = {-0.110541, -0.721807, 0, 1.0};
Point(63) = {-0.108997, -0.721986, 0, 1.0};
Point(64) = {-0.106456, -0.722357, 0, 1.0};
Point(65) = {-0.102978, -0.722978, 0, 1.0};
Point(66) = {-0.098655, -0.723878, 0, 1.0};
Point(67) = {-0.093590, -0.725052, 0, 1.0};
Point(68) = {-0.087873, -0.726489, 0, 1.0};
Point(69) = {-0.081605, -0.728166, 0, 1.0};
Point(70) = {-0.074887, -0.730055, 0, 1.0};
Point(71) = {-0.067824, -0.732120, 0, 1.0};
Point(72) = {-0.060527, -0.734315, 0, 1.0};
Point(73) = {-0.053099, -0.736586, 0, 1.0};
Point(74) = {-0.045649, -0.738869, 0, 1.0};
Point(75) = {-0.038278, -0.741081, 0, 1.0};
Point(76) = {-0.031041, -0.743122, 0, 1.0};
Point(77) = {-0.023965, -0.744931, 0, 1.0};
Point(78) = {-0.017079, -0.746470, 0, 1.0};
Point(79) = {-0.010410, -0.747721, 0, 1.0};
Point(80) = {-0.003985, -0.748679, 0, 1.0};
Point(81) = {0.002164, -0.749357, 0, 1.0};
Point(82) = {0.007989, -0.749791, 0, 1.0};
Point(83) = {0.013424, -0.750000, 0, 1.0};
Point(84) = {0.018406, -0.749997, 0, 1.0};
Point(85) = {0.022884, -0.749796, 0, 1.0};
Point(86) = {0.026811, -0.749410, 0, 1.0};
Point(87) = {0.030149, -0.748859, 0, 1.0};
Point(88) = {0.032868, -0.748164, 0, 1.0};
Point(89) = {0.034940, -0.747361, 0, 1.0};
Point(90) = {0.036339, -0.746496, 0, 1.0};
Point(91) = {0.037025, -0.745658, 0, 1.0};
Point(92) = {0.036826, -0.744809, 0, 1.0};
Point(93) = {0.035737, -0.743823, 0, 1.0};
Point(94) = {0.033902, -0.742725, 0, 1.0};
Point(95) = {0.031327, -0.741570, 0, 1.0};
Point(96) = {0.028029, -0.740376, 0, 1.0};
Point(97) = {0.024031, -0.739160, 0, 1.0};
Point(98) = {0.019367, -0.737930, 0, 1.0};
Point(99) = {0.014081, -0.736693, 0, 1.0};
Point(100) = {0.008223, -0.735459, 0, 1.0};
Point(101) = {0.001857, -0.734231, 0, 1.0};
Point(102) = {-0.004948, -0.733015, 0, 1.0};
Point(103) = {-0.012121, -0.731822, 0, 1.0};
Point(104) = {-0.019578, -0.730654, 0, 1.0};
Point(105) = {-0.027236, -0.729522, 0, 1.0};
Point(106) = {-0.035010, -0.728432, 0, 1.0};
Point(107) = {-0.042810, -0.727395, 0, 1.0};
Point(108) = {-0.050550, -0.726417, 0, 1.0};
Point(109) = {-0.058141, -0.725508, 0, 1.0};
Point(110) = {-0.065496, -0.724677, 0, 1.0};
Point(111) = {-0.072535, -0.723931, 0, 1.0};
Point(112) = {-0.079175, -0.723275, 0, 1.0};
Point(113) = {-0.085342, -0.722716, 0, 1.0};
Point(114) = {-0.090968, -0.722260, 0, 1.0};
Point(115) = {-0.095984, -0.721910, 0, 1.0};
Point(116) = {-0.100337, -0.721671, 0, 1.0};
Point(117) = {-0.103972, -0.721556, 0, 1.0};
Point(118) = {-0.106890, -0.721582, 0, 1.0};
Point(119) = {-0.109109, -0.721681, 0, 1.0};
Point(120) = {-0.110551, -0.721744, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
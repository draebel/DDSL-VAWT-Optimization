SetFactory("OpenCASCADE");

Point(1) = {0.074813, 0.733794, 0, 1.0};
Point(2) = {0.073129, 0.734048, 0, 1.0};
Point(3) = {0.070407, 0.734462, 0, 1.0};
Point(4) = {0.067407, 0.734926, 0, 1.0};
Point(5) = {0.064138, 0.735444, 0, 1.0};
Point(6) = {0.060617, 0.736014, 0, 1.0};
Point(7) = {0.056859, 0.736635, 0, 1.0};
Point(8) = {0.052881, 0.737308, 0, 1.0};
Point(9) = {0.048699, 0.738026, 0, 1.0};
Point(10) = {0.044329, 0.738790, 0, 1.0};
Point(11) = {0.039792, 0.739593, 0, 1.0};
Point(12) = {0.035108, 0.740431, 0, 1.0};
Point(13) = {0.030296, 0.741298, 0, 1.0};
Point(14) = {0.025375, 0.742184, 0, 1.0};
Point(15) = {0.020367, 0.743081, 0, 1.0};
Point(16) = {0.015290, 0.743974, 0, 1.0};
Point(17) = {0.010168, 0.744847, 0, 1.0};
Point(18) = {0.005021, 0.745680, 0, 1.0};
Point(19) = {-0.000130, 0.746459, 0, 1.0};
Point(20) = {-0.005265, 0.747169, 0, 1.0};
Point(21) = {-0.010363, 0.747800, 0, 1.0};
Point(22) = {-0.015399, 0.748350, 0, 1.0};
Point(23) = {-0.020354, 0.748813, 0, 1.0};
Point(24) = {-0.025206, 0.749192, 0, 1.0};
Point(25) = {-0.029934, 0.749492, 0, 1.0};
Point(26) = {-0.034518, 0.749721, 0, 1.0};
Point(27) = {-0.038937, 0.749880, 0, 1.0};
Point(28) = {-0.043170, 0.749972, 0, 1.0};
Point(29) = {-0.047201, 0.750000, 0, 1.0};
Point(30) = {-0.051012, 0.749967, 0, 1.0};
Point(31) = {-0.054587, 0.749875, 0, 1.0};
Point(32) = {-0.057909, 0.749726, 0, 1.0};
Point(33) = {-0.060964, 0.749521, 0, 1.0};
Point(34) = {-0.063741, 0.749261, 0, 1.0};
Point(35) = {-0.066227, 0.748949, 0, 1.0};
Point(36) = {-0.068409, 0.748583, 0, 1.0};
Point(37) = {-0.070283, 0.748158, 0, 1.0};
Point(38) = {-0.071836, 0.747670, 0, 1.0};
Point(39) = {-0.073065, 0.747121, 0, 1.0};
Point(40) = {-0.073964, 0.746518, 0, 1.0};
Point(41) = {-0.074528, 0.745880, 0, 1.0};
Point(42) = {-0.074753, 0.745211, 0, 1.0};
Point(43) = {-0.074639, 0.744514, 0, 1.0};
Point(44) = {-0.074186, 0.743793, 0, 1.0};
Point(45) = {-0.073396, 0.743053, 0, 1.0};
Point(46) = {-0.072272, 0.742313, 0, 1.0};
Point(47) = {-0.070818, 0.741580, 0, 1.0};
Point(48) = {-0.069038, 0.740858, 0, 1.0};
Point(49) = {-0.066943, 0.740144, 0, 1.0};
Point(50) = {-0.064540, 0.739435, 0, 1.0};
Point(51) = {-0.061842, 0.738729, 0, 1.0};
Point(52) = {-0.058860, 0.738034, 0, 1.0};
Point(53) = {-0.055605, 0.737350, 0, 1.0};
Point(54) = {-0.052092, 0.736681, 0, 1.0};
Point(55) = {-0.048337, 0.736033, 0, 1.0};
Point(56) = {-0.044354, 0.735410, 0, 1.0};
Point(57) = {-0.040162, 0.734817, 0, 1.0};
Point(58) = {-0.035776, 0.734259, 0, 1.0};
Point(59) = {-0.031215, 0.733745, 0, 1.0};
Point(60) = {-0.026501, 0.733277, 0, 1.0};
Point(61) = {-0.021651, 0.732866, 0, 1.0};
Point(62) = {-0.016686, 0.732523, 0, 1.0};
Point(63) = {-0.011627, 0.732252, 0, 1.0};
Point(64) = {-0.006494, 0.732052, 0, 1.0};
Point(65) = {-0.001312, 0.731922, 0, 1.0};
Point(66) = {0.003898, 0.731859, 0, 1.0};
Point(67) = {0.009112, 0.731849, 0, 1.0};
Point(68) = {0.014307, 0.731883, 0, 1.0};
Point(69) = {0.019461, 0.731944, 0, 1.0};
Point(70) = {0.024548, 0.732020, 0, 1.0};
Point(71) = {0.029548, 0.732100, 0, 1.0};
Point(72) = {0.034437, 0.732177, 0, 1.0};
Point(73) = {0.039195, 0.732248, 0, 1.0};
Point(74) = {0.043802, 0.732307, 0, 1.0};
Point(75) = {0.048238, 0.732355, 0, 1.0};
Point(76) = {0.052481, 0.732387, 0, 1.0};
Point(77) = {0.056516, 0.732409, 0, 1.0};
Point(78) = {0.060324, 0.732415, 0, 1.0};
Point(79) = {0.063891, 0.732408, 0, 1.0};
Point(80) = {0.067201, 0.732391, 0, 1.0};
Point(81) = {0.070236, 0.732364, 0, 1.0};
Point(82) = {0.072990, 0.732334, 0, 1.0};
Point(83) = {0.074693, 0.732312, 0, 1.0};
Point(84) = {-0.074813, -0.733794, 0, 1.0};
Point(85) = {-0.073129, -0.734048, 0, 1.0};
Point(86) = {-0.070407, -0.734462, 0, 1.0};
Point(87) = {-0.067407, -0.734926, 0, 1.0};
Point(88) = {-0.064138, -0.735444, 0, 1.0};
Point(89) = {-0.060617, -0.736014, 0, 1.0};
Point(90) = {-0.056859, -0.736635, 0, 1.0};
Point(91) = {-0.052881, -0.737308, 0, 1.0};
Point(92) = {-0.048699, -0.738026, 0, 1.0};
Point(93) = {-0.044329, -0.738790, 0, 1.0};
Point(94) = {-0.039792, -0.739593, 0, 1.0};
Point(95) = {-0.035108, -0.740431, 0, 1.0};
Point(96) = {-0.030296, -0.741298, 0, 1.0};
Point(97) = {-0.025375, -0.742184, 0, 1.0};
Point(98) = {-0.020367, -0.743081, 0, 1.0};
Point(99) = {-0.015290, -0.743974, 0, 1.0};
Point(100) = {-0.010168, -0.744847, 0, 1.0};
Point(101) = {-0.005021, -0.745680, 0, 1.0};
Point(102) = {0.000130, -0.746459, 0, 1.0};
Point(103) = {0.005265, -0.747169, 0, 1.0};
Point(104) = {0.010363, -0.747800, 0, 1.0};
Point(105) = {0.015399, -0.748350, 0, 1.0};
Point(106) = {0.020354, -0.748813, 0, 1.0};
Point(107) = {0.025206, -0.749192, 0, 1.0};
Point(108) = {0.029934, -0.749492, 0, 1.0};
Point(109) = {0.034518, -0.749721, 0, 1.0};
Point(110) = {0.038937, -0.749880, 0, 1.0};
Point(111) = {0.043170, -0.749972, 0, 1.0};
Point(112) = {0.047201, -0.750000, 0, 1.0};
Point(113) = {0.051012, -0.749967, 0, 1.0};
Point(114) = {0.054587, -0.749875, 0, 1.0};
Point(115) = {0.057909, -0.749726, 0, 1.0};
Point(116) = {0.060964, -0.749521, 0, 1.0};
Point(117) = {0.063741, -0.749261, 0, 1.0};
Point(118) = {0.066227, -0.748949, 0, 1.0};
Point(119) = {0.068409, -0.748583, 0, 1.0};
Point(120) = {0.070283, -0.748158, 0, 1.0};
Point(121) = {0.071836, -0.747670, 0, 1.0};
Point(122) = {0.073065, -0.747121, 0, 1.0};
Point(123) = {0.073964, -0.746518, 0, 1.0};
Point(124) = {0.074528, -0.745880, 0, 1.0};
Point(125) = {0.074753, -0.745211, 0, 1.0};
Point(126) = {0.074639, -0.744514, 0, 1.0};
Point(127) = {0.074186, -0.743793, 0, 1.0};
Point(128) = {0.073396, -0.743053, 0, 1.0};
Point(129) = {0.072272, -0.742313, 0, 1.0};
Point(130) = {0.070818, -0.741580, 0, 1.0};
Point(131) = {0.069038, -0.740858, 0, 1.0};
Point(132) = {0.066943, -0.740144, 0, 1.0};
Point(133) = {0.064540, -0.739435, 0, 1.0};
Point(134) = {0.061842, -0.738729, 0, 1.0};
Point(135) = {0.058860, -0.738034, 0, 1.0};
Point(136) = {0.055605, -0.737350, 0, 1.0};
Point(137) = {0.052092, -0.736681, 0, 1.0};
Point(138) = {0.048337, -0.736033, 0, 1.0};
Point(139) = {0.044354, -0.735410, 0, 1.0};
Point(140) = {0.040162, -0.734817, 0, 1.0};
Point(141) = {0.035776, -0.734259, 0, 1.0};
Point(142) = {0.031215, -0.733745, 0, 1.0};
Point(143) = {0.026501, -0.733277, 0, 1.0};
Point(144) = {0.021651, -0.732866, 0, 1.0};
Point(145) = {0.016686, -0.732523, 0, 1.0};
Point(146) = {0.011627, -0.732252, 0, 1.0};
Point(147) = {0.006494, -0.732052, 0, 1.0};
Point(148) = {0.001312, -0.731922, 0, 1.0};
Point(149) = {-0.003898, -0.731859, 0, 1.0};
Point(150) = {-0.009112, -0.731849, 0, 1.0};
Point(151) = {-0.014307, -0.731883, 0, 1.0};
Point(152) = {-0.019461, -0.731944, 0, 1.0};
Point(153) = {-0.024548, -0.732020, 0, 1.0};
Point(154) = {-0.029548, -0.732100, 0, 1.0};
Point(155) = {-0.034437, -0.732177, 0, 1.0};
Point(156) = {-0.039195, -0.732248, 0, 1.0};
Point(157) = {-0.043802, -0.732307, 0, 1.0};
Point(158) = {-0.048238, -0.732355, 0, 1.0};
Point(159) = {-0.052481, -0.732387, 0, 1.0};
Point(160) = {-0.056516, -0.732409, 0, 1.0};
Point(161) = {-0.060324, -0.732415, 0, 1.0};
Point(162) = {-0.063891, -0.732408, 0, 1.0};
Point(163) = {-0.067201, -0.732391, 0, 1.0};
Point(164) = {-0.070236, -0.732364, 0, 1.0};
Point(165) = {-0.072990, -0.732334, 0, 1.0};
Point(166) = {-0.074693, -0.732312, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:142};
Spline(7) = {142:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
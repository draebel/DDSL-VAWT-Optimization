SetFactory("OpenCASCADE");

Point(1) = {0.112336, 0.745252, 0, 1.0};
Point(2) = {0.108564, 0.745638, 0, 1.0};
Point(3) = {0.104794, 0.746012, 0, 1.0};
Point(4) = {0.101024, 0.746370, 0, 1.0};
Point(5) = {0.097254, 0.746714, 0, 1.0};
Point(6) = {0.093485, 0.747041, 0, 1.0};
Point(7) = {0.089717, 0.747355, 0, 1.0};
Point(8) = {0.085950, 0.747652, 0, 1.0};
Point(9) = {0.082183, 0.747933, 0, 1.0};
Point(10) = {0.078418, 0.748197, 0, 1.0};
Point(11) = {0.074652, 0.748445, 0, 1.0};
Point(12) = {0.070888, 0.748676, 0, 1.0};
Point(13) = {0.067125, 0.748889, 0, 1.0};
Point(14) = {0.063362, 0.749087, 0, 1.0};
Point(15) = {0.059600, 0.749264, 0, 1.0};
Point(16) = {0.055839, 0.749423, 0, 1.0};
Point(17) = {0.052079, 0.749564, 0, 1.0};
Point(18) = {0.048319, 0.749687, 0, 1.0};
Point(19) = {0.044561, 0.749790, 0, 1.0};
Point(20) = {0.040803, 0.749873, 0, 1.0};
Point(21) = {0.037046, 0.749935, 0, 1.0};
Point(22) = {0.033291, 0.749977, 0, 1.0};
Point(23) = {0.029536, 0.750000, 0, 1.0};
Point(24) = {0.025782, 0.749999, 0, 1.0};
Point(25) = {0.022029, 0.749979, 0, 1.0};
Point(26) = {0.018277, 0.749937, 0, 1.0};
Point(27) = {0.014526, 0.749872, 0, 1.0};
Point(28) = {0.010026, 0.749765, 0, 1.0};
Point(29) = {0.004375, 0.749581, 0, 1.0};
Point(30) = {-0.000245, 0.749378, 0, 1.0};
Point(31) = {-0.004844, 0.749121, 0, 1.0};
Point(32) = {-0.009423, 0.748795, 0, 1.0};
Point(33) = {-0.013977, 0.748363, 0, 1.0};
Point(34) = {-0.018500, 0.747775, 0, 1.0};
Point(35) = {-0.022988, 0.746951, 0, 1.0};
Point(36) = {-0.025216, 0.746415, 0, 1.0};
Point(37) = {-0.027677, 0.745686, 0, 1.0};
Point(38) = {-0.029982, 0.744825, 0, 1.0};
Point(39) = {-0.031984, 0.743878, 0, 1.0};
Point(40) = {-0.033689, 0.742868, 0, 1.0};
Point(41) = {-0.035079, 0.741868, 0, 1.0};
Point(42) = {-0.036161, 0.740881, 0, 1.0};
Point(43) = {-0.036927, 0.739931, 0, 1.0};
Point(44) = {-0.037377, 0.739031, 0, 1.0};
Point(45) = {-0.037500, 0.738231, 0, 1.0};
Point(46) = {-0.037313, 0.737623, 0, 1.0};
Point(47) = {-0.036802, 0.737168, 0, 1.0};
Point(48) = {-0.035975, 0.736797, 0, 1.0};
Point(49) = {-0.034834, 0.736450, 0, 1.0};
Point(50) = {-0.033383, 0.736128, 0, 1.0};
Point(51) = {-0.031619, 0.735836, 0, 1.0};
Point(52) = {-0.029562, 0.735573, 0, 1.0};
Point(53) = {-0.027208, 0.735338, 0, 1.0};
Point(54) = {-0.024705, 0.735142, 0, 1.0};
Point(55) = {-0.022446, 0.735003, 0, 1.0};
Point(56) = {-0.017911, 0.734794, 0, 1.0};
Point(57) = {-0.013355, 0.734661, 0, 1.0};
Point(58) = {-0.008779, 0.734591, 0, 1.0};
Point(59) = {-0.004184, 0.734569, 0, 1.0};
Point(60) = {0.000426, 0.734592, 0, 1.0};
Point(61) = {0.005052, 0.734655, 0, 1.0};
Point(62) = {0.010706, 0.734782, 0, 1.0};
Point(63) = {0.015204, 0.734920, 0, 1.0};
Point(64) = {0.018952, 0.735060, 0, 1.0};
Point(65) = {0.022698, 0.735221, 0, 1.0};
Point(66) = {0.026444, 0.735406, 0, 1.0};
Point(67) = {0.030188, 0.735609, 0, 1.0};
Point(68) = {0.033932, 0.735836, 0, 1.0};
Point(69) = {0.037675, 0.736080, 0, 1.0};
Point(70) = {0.041416, 0.736348, 0, 1.0};
Point(71) = {0.045157, 0.736633, 0, 1.0};
Point(72) = {0.048897, 0.736939, 0, 1.0};
Point(73) = {0.052636, 0.737265, 0, 1.0};
Point(74) = {0.056375, 0.737609, 0, 1.0};
Point(75) = {0.060112, 0.737970, 0, 1.0};
Point(76) = {0.063849, 0.738352, 0, 1.0};
Point(77) = {0.067584, 0.738751, 0, 1.0};
Point(78) = {0.071319, 0.739166, 0, 1.0};
Point(79) = {0.075054, 0.739599, 0, 1.0};
Point(80) = {0.078787, 0.740049, 0, 1.0};
Point(81) = {0.082520, 0.740515, 0, 1.0};
Point(82) = {0.086252, 0.740998, 0, 1.0};
Point(83) = {0.089983, 0.741496, 0, 1.0};
Point(84) = {0.093713, 0.742011, 0, 1.0};
Point(85) = {0.097443, 0.742540, 0, 1.0};
Point(86) = {0.101173, 0.743083, 0, 1.0};
Point(87) = {0.104901, 0.743643, 0, 1.0};
Point(88) = {0.108629, 0.744216, 0, 1.0};
Point(89) = {0.112356, 0.744802, 0, 1.0};
Point(90) = {-0.112336, -0.745252, 0, 1.0};
Point(91) = {-0.108564, -0.745638, 0, 1.0};
Point(92) = {-0.104794, -0.746012, 0, 1.0};
Point(93) = {-0.101024, -0.746370, 0, 1.0};
Point(94) = {-0.097254, -0.746714, 0, 1.0};
Point(95) = {-0.093485, -0.747041, 0, 1.0};
Point(96) = {-0.089717, -0.747355, 0, 1.0};
Point(97) = {-0.085950, -0.747652, 0, 1.0};
Point(98) = {-0.082183, -0.747933, 0, 1.0};
Point(99) = {-0.078418, -0.748197, 0, 1.0};
Point(100) = {-0.074652, -0.748445, 0, 1.0};
Point(101) = {-0.070888, -0.748676, 0, 1.0};
Point(102) = {-0.067125, -0.748889, 0, 1.0};
Point(103) = {-0.063362, -0.749087, 0, 1.0};
Point(104) = {-0.059600, -0.749264, 0, 1.0};
Point(105) = {-0.055839, -0.749423, 0, 1.0};
Point(106) = {-0.052079, -0.749564, 0, 1.0};
Point(107) = {-0.048319, -0.749687, 0, 1.0};
Point(108) = {-0.044561, -0.749790, 0, 1.0};
Point(109) = {-0.040803, -0.749873, 0, 1.0};
Point(110) = {-0.037046, -0.749935, 0, 1.0};
Point(111) = {-0.033291, -0.749977, 0, 1.0};
Point(112) = {-0.029536, -0.750000, 0, 1.0};
Point(113) = {-0.025782, -0.749999, 0, 1.0};
Point(114) = {-0.022029, -0.749979, 0, 1.0};
Point(115) = {-0.018277, -0.749937, 0, 1.0};
Point(116) = {-0.014526, -0.749872, 0, 1.0};
Point(117) = {-0.010026, -0.749765, 0, 1.0};
Point(118) = {-0.004375, -0.749581, 0, 1.0};
Point(119) = {0.000245, -0.749378, 0, 1.0};
Point(120) = {0.004844, -0.749121, 0, 1.0};
Point(121) = {0.009423, -0.748795, 0, 1.0};
Point(122) = {0.013977, -0.748363, 0, 1.0};
Point(123) = {0.018500, -0.747775, 0, 1.0};
Point(124) = {0.022988, -0.746951, 0, 1.0};
Point(125) = {0.025216, -0.746415, 0, 1.0};
Point(126) = {0.027677, -0.745686, 0, 1.0};
Point(127) = {0.029982, -0.744825, 0, 1.0};
Point(128) = {0.031984, -0.743878, 0, 1.0};
Point(129) = {0.033689, -0.742868, 0, 1.0};
Point(130) = {0.035079, -0.741868, 0, 1.0};
Point(131) = {0.036161, -0.740881, 0, 1.0};
Point(132) = {0.036927, -0.739931, 0, 1.0};
Point(133) = {0.037377, -0.739031, 0, 1.0};
Point(134) = {0.037500, -0.738231, 0, 1.0};
Point(135) = {0.037313, -0.737623, 0, 1.0};
Point(136) = {0.036802, -0.737168, 0, 1.0};
Point(137) = {0.035975, -0.736797, 0, 1.0};
Point(138) = {0.034834, -0.736450, 0, 1.0};
Point(139) = {0.033383, -0.736128, 0, 1.0};
Point(140) = {0.031619, -0.735836, 0, 1.0};
Point(141) = {0.029562, -0.735573, 0, 1.0};
Point(142) = {0.027208, -0.735338, 0, 1.0};
Point(143) = {0.024705, -0.735142, 0, 1.0};
Point(144) = {0.022446, -0.735003, 0, 1.0};
Point(145) = {0.017911, -0.734794, 0, 1.0};
Point(146) = {0.013355, -0.734661, 0, 1.0};
Point(147) = {0.008779, -0.734591, 0, 1.0};
Point(148) = {0.004184, -0.734569, 0, 1.0};
Point(149) = {-0.000426, -0.734592, 0, 1.0};
Point(150) = {-0.005052, -0.734655, 0, 1.0};
Point(151) = {-0.010706, -0.734782, 0, 1.0};
Point(152) = {-0.015204, -0.734920, 0, 1.0};
Point(153) = {-0.018952, -0.735060, 0, 1.0};
Point(154) = {-0.022698, -0.735221, 0, 1.0};
Point(155) = {-0.026444, -0.735406, 0, 1.0};
Point(156) = {-0.030188, -0.735609, 0, 1.0};
Point(157) = {-0.033932, -0.735836, 0, 1.0};
Point(158) = {-0.037675, -0.736080, 0, 1.0};
Point(159) = {-0.041416, -0.736348, 0, 1.0};
Point(160) = {-0.045157, -0.736633, 0, 1.0};
Point(161) = {-0.048897, -0.736939, 0, 1.0};
Point(162) = {-0.052636, -0.737265, 0, 1.0};
Point(163) = {-0.056375, -0.737609, 0, 1.0};
Point(164) = {-0.060112, -0.737970, 0, 1.0};
Point(165) = {-0.063849, -0.738352, 0, 1.0};
Point(166) = {-0.067584, -0.738751, 0, 1.0};
Point(167) = {-0.071319, -0.739166, 0, 1.0};
Point(168) = {-0.075054, -0.739599, 0, 1.0};
Point(169) = {-0.078787, -0.740049, 0, 1.0};
Point(170) = {-0.082520, -0.740515, 0, 1.0};
Point(171) = {-0.086252, -0.740998, 0, 1.0};
Point(172) = {-0.089983, -0.741496, 0, 1.0};
Point(173) = {-0.093713, -0.742011, 0, 1.0};
Point(174) = {-0.097443, -0.742540, 0, 1.0};
Point(175) = {-0.101173, -0.743083, 0, 1.0};
Point(176) = {-0.104901, -0.743643, 0, 1.0};
Point(177) = {-0.108629, -0.744216, 0, 1.0};
Point(178) = {-0.112356, -0.744802, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:118};
Spline(6) = {118:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
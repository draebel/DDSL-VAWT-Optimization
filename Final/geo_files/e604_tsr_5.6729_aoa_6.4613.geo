SetFactory("OpenCASCADE");

Point(1) = {0.148730, 0.709946, 0, 1.0};
Point(2) = {0.148007, 0.710249, 0, 1.0};
Point(3) = {0.145991, 0.711178, 0, 1.0};
Point(4) = {0.142918, 0.712661, 0, 1.0};
Point(5) = {0.138881, 0.714518, 0, 1.0};
Point(6) = {0.133861, 0.716682, 0, 1.0};
Point(7) = {0.127924, 0.719176, 0, 1.0};
Point(8) = {0.121202, 0.721972, 0, 1.0};
Point(9) = {0.113825, 0.725006, 0, 1.0};
Point(10) = {0.105914, 0.728200, 0, 1.0};
Point(11) = {0.097580, 0.731461, 0, 1.0};
Point(12) = {0.088933, 0.734699, 0, 1.0};
Point(13) = {0.080066, 0.737816, 0, 1.0};
Point(14) = {0.071067, 0.740719, 0, 1.0};
Point(15) = {0.062014, 0.743298, 0, 1.0};
Point(16) = {0.052919, 0.745458, 0, 1.0};
Point(17) = {0.043787, 0.747182, 0, 1.0};
Point(18) = {0.034674, 0.748488, 0, 1.0};
Point(19) = {0.025646, 0.749384, 0, 1.0};
Point(20) = {0.016780, 0.749883, 0, 1.0};
Point(21) = {0.008154, 0.750000, 0, 1.0};
Point(22) = {-0.000147, 0.749763, 0, 1.0};
Point(23) = {-0.008040, 0.749189, 0, 1.0};
Point(24) = {-0.015439, 0.748302, 0, 1.0};
Point(25) = {-0.022273, 0.747122, 0, 1.0};
Point(26) = {-0.028473, 0.745678, 0, 1.0};
Point(27) = {-0.033982, 0.744004, 0, 1.0};
Point(28) = {-0.038748, 0.742140, 0, 1.0};
Point(29) = {-0.042726, 0.740129, 0, 1.0};
Point(30) = {-0.045878, 0.738030, 0, 1.0};
Point(31) = {-0.048175, 0.735915, 0, 1.0};
Point(32) = {-0.049570, 0.733885, 0, 1.0};
Point(33) = {-0.049855, 0.733167, 0, 1.0};
Point(34) = {-0.049948, 0.732803, 0, 1.0};
Point(35) = {-0.050009, 0.732287, 0, 1.0};
Point(36) = {-0.050003, 0.732127, 0, 1.0};
Point(37) = {-0.049980, 0.731973, 0, 1.0};
Point(38) = {-0.049939, 0.731822, 0, 1.0};
Point(39) = {-0.049877, 0.731670, 0, 1.0};
Point(40) = {-0.049799, 0.731512, 0, 1.0};
Point(41) = {-0.049603, 0.731194, 0, 1.0};
Point(42) = {-0.049354, 0.730866, 0, 1.0};
Point(43) = {-0.048894, 0.730361, 0, 1.0};
Point(44) = {-0.046846, 0.728752, 0, 1.0};
Point(45) = {-0.043597, 0.726945, 0, 1.0};
Point(46) = {-0.039326, 0.725115, 0, 1.0};
Point(47) = {-0.034081, 0.723281, 0, 1.0};
Point(48) = {-0.027932, 0.721453, 0, 1.0};
Point(49) = {-0.020962, 0.719652, 0, 1.0};
Point(50) = {-0.013266, 0.717901, 0, 1.0};
Point(51) = {-0.004936, 0.716228, 0, 1.0};
Point(52) = {0.003928, 0.714661, 0, 1.0};
Point(53) = {0.013218, 0.713227, 0, 1.0};
Point(54) = {0.022816, 0.711956, 0, 1.0};
Point(55) = {0.032600, 0.710893, 0, 1.0};
Point(56) = {0.042450, 0.710119, 0, 1.0};
Point(57) = {0.052323, 0.709750, 0, 1.0};
Point(58) = {0.062261, 0.709812, 0, 1.0};
Point(59) = {0.072287, 0.710236, 0, 1.0};
Point(60) = {0.082369, 0.710910, 0, 1.0};
Point(61) = {0.092450, 0.711685, 0, 1.0};
Point(62) = {0.102388, 0.712369, 0, 1.0};
Point(63) = {0.111958, 0.712825, 0, 1.0};
Point(64) = {0.120910, 0.712976, 0, 1.0};
Point(65) = {0.128995, 0.712795, 0, 1.0};
Point(66) = {0.135967, 0.712297, 0, 1.0};
Point(67) = {0.141567, 0.711556, 0, 1.0};
Point(68) = {0.145582, 0.710764, 0, 1.0};
Point(69) = {0.147952, 0.710167, 0, 1.0};
Point(70) = {-0.148730, -0.709946, 0, 1.0};
Point(71) = {-0.148007, -0.710249, 0, 1.0};
Point(72) = {-0.145991, -0.711178, 0, 1.0};
Point(73) = {-0.142918, -0.712661, 0, 1.0};
Point(74) = {-0.138881, -0.714518, 0, 1.0};
Point(75) = {-0.133861, -0.716682, 0, 1.0};
Point(76) = {-0.127924, -0.719176, 0, 1.0};
Point(77) = {-0.121202, -0.721972, 0, 1.0};
Point(78) = {-0.113825, -0.725006, 0, 1.0};
Point(79) = {-0.105914, -0.728200, 0, 1.0};
Point(80) = {-0.097580, -0.731461, 0, 1.0};
Point(81) = {-0.088933, -0.734699, 0, 1.0};
Point(82) = {-0.080066, -0.737816, 0, 1.0};
Point(83) = {-0.071067, -0.740719, 0, 1.0};
Point(84) = {-0.062014, -0.743298, 0, 1.0};
Point(85) = {-0.052919, -0.745458, 0, 1.0};
Point(86) = {-0.043787, -0.747182, 0, 1.0};
Point(87) = {-0.034674, -0.748488, 0, 1.0};
Point(88) = {-0.025646, -0.749384, 0, 1.0};
Point(89) = {-0.016780, -0.749883, 0, 1.0};
Point(90) = {-0.008154, -0.750000, 0, 1.0};
Point(91) = {0.000147, -0.749763, 0, 1.0};
Point(92) = {0.008040, -0.749189, 0, 1.0};
Point(93) = {0.015439, -0.748302, 0, 1.0};
Point(94) = {0.022273, -0.747122, 0, 1.0};
Point(95) = {0.028473, -0.745678, 0, 1.0};
Point(96) = {0.033982, -0.744004, 0, 1.0};
Point(97) = {0.038748, -0.742140, 0, 1.0};
Point(98) = {0.042726, -0.740129, 0, 1.0};
Point(99) = {0.045878, -0.738030, 0, 1.0};
Point(100) = {0.048175, -0.735915, 0, 1.0};
Point(101) = {0.049570, -0.733885, 0, 1.0};
Point(102) = {0.049855, -0.733167, 0, 1.0};
Point(103) = {0.049948, -0.732803, 0, 1.0};
Point(104) = {0.050009, -0.732287, 0, 1.0};
Point(105) = {0.050003, -0.732127, 0, 1.0};
Point(106) = {0.049980, -0.731973, 0, 1.0};
Point(107) = {0.049939, -0.731822, 0, 1.0};
Point(108) = {0.049877, -0.731670, 0, 1.0};
Point(109) = {0.049799, -0.731512, 0, 1.0};
Point(110) = {0.049603, -0.731194, 0, 1.0};
Point(111) = {0.049354, -0.730866, 0, 1.0};
Point(112) = {0.048894, -0.730361, 0, 1.0};
Point(113) = {0.046846, -0.728752, 0, 1.0};
Point(114) = {0.043597, -0.726945, 0, 1.0};
Point(115) = {0.039326, -0.725115, 0, 1.0};
Point(116) = {0.034081, -0.723281, 0, 1.0};
Point(117) = {0.027932, -0.721453, 0, 1.0};
Point(118) = {0.020962, -0.719652, 0, 1.0};
Point(119) = {0.013266, -0.717901, 0, 1.0};
Point(120) = {0.004936, -0.716228, 0, 1.0};
Point(121) = {-0.003928, -0.714661, 0, 1.0};
Point(122) = {-0.013218, -0.713227, 0, 1.0};
Point(123) = {-0.022816, -0.711956, 0, 1.0};
Point(124) = {-0.032600, -0.710893, 0, 1.0};
Point(125) = {-0.042450, -0.710119, 0, 1.0};
Point(126) = {-0.052323, -0.709750, 0, 1.0};
Point(127) = {-0.062261, -0.709812, 0, 1.0};
Point(128) = {-0.072287, -0.710236, 0, 1.0};
Point(129) = {-0.082369, -0.710910, 0, 1.0};
Point(130) = {-0.092450, -0.711685, 0, 1.0};
Point(131) = {-0.102388, -0.712369, 0, 1.0};
Point(132) = {-0.111958, -0.712825, 0, 1.0};
Point(133) = {-0.120910, -0.712976, 0, 1.0};
Point(134) = {-0.128995, -0.712795, 0, 1.0};
Point(135) = {-0.135967, -0.712297, 0, 1.0};
Point(136) = {-0.141567, -0.711556, 0, 1.0};
Point(137) = {-0.145582, -0.710764, 0, 1.0};
Point(138) = {-0.147952, -0.710167, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:52};
Spline(3) = {52:69};
Spline(4) = {69,1};

// Lines: second blade (splines 5-8)
Spline(5) = {70:90};
Spline(6) = {90:121};
Spline(7) = {121:138};
Spline(8) = {138,70};

// Outer domain (points 20001-4 and lines)
Point(139) = {-13.50000000, -15.00000000, 0, 1.0};
Point(140) = {-13.50000000, 15.00000000, 0, 1.0};
Point(141) = {13.50000000, 15.00000000, 0, 1.0};
Point(142) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {139, 140};
Line(12) = {140, 141};
Line(13) = {141, 142};
Line(14) = {139, 142};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
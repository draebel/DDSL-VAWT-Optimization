SetFactory("OpenCASCADE");

Point(1) = {0.149280, 0.724467, 0, 1.0};
Point(2) = {0.143032, 0.725854, 0, 1.0};
Point(3) = {0.136740, 0.727308, 0, 1.0};
Point(4) = {0.130409, 0.728887, 0, 1.0};
Point(5) = {0.123873, 0.730523, 0, 1.0};
Point(6) = {0.117075, 0.732214, 0, 1.0};
Point(7) = {0.109957, 0.733949, 0, 1.0};
Point(8) = {0.102448, 0.735722, 0, 1.0};
Point(9) = {0.094665, 0.737479, 0, 1.0};
Point(10) = {0.086868, 0.739142, 0, 1.0};
Point(11) = {0.079176, 0.740680, 0, 1.0};
Point(12) = {0.071608, 0.742087, 0, 1.0};
Point(13) = {0.064089, 0.743375, 0, 1.0};
Point(14) = {0.056569, 0.744553, 0, 1.0};
Point(15) = {0.049031, 0.745622, 0, 1.0};
Point(16) = {0.041462, 0.746585, 0, 1.0};
Point(17) = {0.033884, 0.747443, 0, 1.0};
Point(18) = {0.026338, 0.748189, 0, 1.0};
Point(19) = {0.018888, 0.748815, 0, 1.0};
Point(20) = {0.011601, 0.749318, 0, 1.0};
Point(21) = {0.004534, 0.749687, 0, 1.0};
Point(22) = {-0.002282, 0.749915, 0, 1.0};
Point(23) = {-0.008829, 0.750000, 0, 1.0};
Point(24) = {-0.015086, 0.749936, 0, 1.0};
Point(25) = {-0.021025, 0.749705, 0, 1.0};
Point(26) = {-0.026619, 0.749324, 0, 1.0};
Point(27) = {-0.031849, 0.748757, 0, 1.0};
Point(28) = {-0.036686, 0.748011, 0, 1.0};
Point(29) = {-0.041051, 0.747064, 0, 1.0};
Point(30) = {-0.044786, 0.745921, 0, 1.0};
Point(31) = {-0.047528, 0.744630, 0, 1.0};
Point(32) = {-0.049225, 0.743183, 0, 1.0};
Point(33) = {-0.050000, 0.741432, 0, 1.0};
Point(34) = {-0.049515, 0.739854, 0, 1.0};
Point(35) = {-0.048035, 0.738792, 0, 1.0};
Point(36) = {-0.045493, 0.737790, 0, 1.0};
Point(37) = {-0.041941, 0.736816, 0, 1.0};
Point(38) = {-0.037735, 0.735943, 0, 1.0};
Point(39) = {-0.033033, 0.735139, 0, 1.0};
Point(40) = {-0.027919, 0.734371, 0, 1.0};
Point(41) = {-0.022423, 0.733622, 0, 1.0};
Point(42) = {-0.016570, 0.732870, 0, 1.0};
Point(43) = {-0.010384, 0.732119, 0, 1.0};
Point(44) = {-0.003895, 0.731361, 0, 1.0};
Point(45) = {0.002874, 0.730597, 0, 1.0};
Point(46) = {0.009906, 0.729831, 0, 1.0};
Point(47) = {0.017172, 0.729069, 0, 1.0};
Point(48) = {0.024611, 0.728318, 0, 1.0};
Point(49) = {0.032158, 0.727590, 0, 1.0};
Point(50) = {0.039750, 0.726889, 0, 1.0};
Point(51) = {0.047345, 0.726223, 0, 1.0};
Point(52) = {0.054920, 0.725593, 0, 1.0};
Point(53) = {0.062492, 0.725001, 0, 1.0};
Point(54) = {0.070074, 0.724448, 0, 1.0};
Point(55) = {0.077721, 0.723936, 0, 1.0};
Point(56) = {0.085505, 0.723470, 0, 1.0};
Point(57) = {0.093412, 0.723063, 0, 1.0};
Point(58) = {0.101320, 0.722739, 0, 1.0};
Point(59) = {0.108963, 0.722520, 0, 1.0};
Point(60) = {0.116224, 0.722419, 0, 1.0};
Point(61) = {0.123170, 0.722443, 0, 1.0};
Point(62) = {0.129862, 0.722594, 0, 1.0};
Point(63) = {0.136355, 0.722879, 0, 1.0};
Point(64) = {0.142819, 0.723397, 0, 1.0};
Point(65) = {0.149245, 0.724069, 0, 1.0};
Point(66) = {-0.149280, -0.724467, 0, 1.0};
Point(67) = {-0.143032, -0.725854, 0, 1.0};
Point(68) = {-0.136740, -0.727308, 0, 1.0};
Point(69) = {-0.130409, -0.728887, 0, 1.0};
Point(70) = {-0.123873, -0.730523, 0, 1.0};
Point(71) = {-0.117075, -0.732214, 0, 1.0};
Point(72) = {-0.109957, -0.733949, 0, 1.0};
Point(73) = {-0.102448, -0.735722, 0, 1.0};
Point(74) = {-0.094665, -0.737479, 0, 1.0};
Point(75) = {-0.086868, -0.739142, 0, 1.0};
Point(76) = {-0.079176, -0.740680, 0, 1.0};
Point(77) = {-0.071608, -0.742087, 0, 1.0};
Point(78) = {-0.064089, -0.743375, 0, 1.0};
Point(79) = {-0.056569, -0.744553, 0, 1.0};
Point(80) = {-0.049031, -0.745622, 0, 1.0};
Point(81) = {-0.041462, -0.746585, 0, 1.0};
Point(82) = {-0.033884, -0.747443, 0, 1.0};
Point(83) = {-0.026338, -0.748189, 0, 1.0};
Point(84) = {-0.018888, -0.748815, 0, 1.0};
Point(85) = {-0.011601, -0.749318, 0, 1.0};
Point(86) = {-0.004534, -0.749687, 0, 1.0};
Point(87) = {0.002282, -0.749915, 0, 1.0};
Point(88) = {0.008829, -0.750000, 0, 1.0};
Point(89) = {0.015086, -0.749936, 0, 1.0};
Point(90) = {0.021025, -0.749705, 0, 1.0};
Point(91) = {0.026619, -0.749324, 0, 1.0};
Point(92) = {0.031849, -0.748757, 0, 1.0};
Point(93) = {0.036686, -0.748011, 0, 1.0};
Point(94) = {0.041051, -0.747064, 0, 1.0};
Point(95) = {0.044786, -0.745921, 0, 1.0};
Point(96) = {0.047528, -0.744630, 0, 1.0};
Point(97) = {0.049225, -0.743183, 0, 1.0};
Point(98) = {0.050000, -0.741432, 0, 1.0};
Point(99) = {0.049515, -0.739854, 0, 1.0};
Point(100) = {0.048035, -0.738792, 0, 1.0};
Point(101) = {0.045493, -0.737790, 0, 1.0};
Point(102) = {0.041941, -0.736816, 0, 1.0};
Point(103) = {0.037735, -0.735943, 0, 1.0};
Point(104) = {0.033033, -0.735139, 0, 1.0};
Point(105) = {0.027919, -0.734371, 0, 1.0};
Point(106) = {0.022423, -0.733622, 0, 1.0};
Point(107) = {0.016570, -0.732870, 0, 1.0};
Point(108) = {0.010384, -0.732119, 0, 1.0};
Point(109) = {0.003895, -0.731361, 0, 1.0};
Point(110) = {-0.002874, -0.730597, 0, 1.0};
Point(111) = {-0.009906, -0.729831, 0, 1.0};
Point(112) = {-0.017172, -0.729069, 0, 1.0};
Point(113) = {-0.024611, -0.728318, 0, 1.0};
Point(114) = {-0.032158, -0.727590, 0, 1.0};
Point(115) = {-0.039750, -0.726889, 0, 1.0};
Point(116) = {-0.047345, -0.726223, 0, 1.0};
Point(117) = {-0.054920, -0.725593, 0, 1.0};
Point(118) = {-0.062492, -0.725001, 0, 1.0};
Point(119) = {-0.070074, -0.724448, 0, 1.0};
Point(120) = {-0.077721, -0.723936, 0, 1.0};
Point(121) = {-0.085505, -0.723470, 0, 1.0};
Point(122) = {-0.093412, -0.723063, 0, 1.0};
Point(123) = {-0.101320, -0.722739, 0, 1.0};
Point(124) = {-0.108963, -0.722520, 0, 1.0};
Point(125) = {-0.116224, -0.722419, 0, 1.0};
Point(126) = {-0.123170, -0.722443, 0, 1.0};
Point(127) = {-0.129862, -0.722594, 0, 1.0};
Point(128) = {-0.136355, -0.722879, 0, 1.0};
Point(129) = {-0.142819, -0.723397, 0, 1.0};
Point(130) = {-0.149245, -0.724069, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074640, 0.737234, 0, 1.0};
Point(2) = {0.071516, 0.737927, 0, 1.0};
Point(3) = {0.068370, 0.738654, 0, 1.0};
Point(4) = {0.065205, 0.739443, 0, 1.0};
Point(5) = {0.061936, 0.740261, 0, 1.0};
Point(6) = {0.058538, 0.741107, 0, 1.0};
Point(7) = {0.054979, 0.741975, 0, 1.0};
Point(8) = {0.051224, 0.742861, 0, 1.0};
Point(9) = {0.047333, 0.743739, 0, 1.0};
Point(10) = {0.043434, 0.744571, 0, 1.0};
Point(11) = {0.039588, 0.745340, 0, 1.0};
Point(12) = {0.035804, 0.746044, 0, 1.0};
Point(13) = {0.032045, 0.746688, 0, 1.0};
Point(14) = {0.028284, 0.747277, 0, 1.0};
Point(15) = {0.024516, 0.747811, 0, 1.0};
Point(16) = {0.020731, 0.748293, 0, 1.0};
Point(17) = {0.016942, 0.748721, 0, 1.0};
Point(18) = {0.013169, 0.749095, 0, 1.0};
Point(19) = {0.009444, 0.749407, 0, 1.0};
Point(20) = {0.005800, 0.749659, 0, 1.0};
Point(21) = {0.002267, 0.749844, 0, 1.0};
Point(22) = {-0.001141, 0.749957, 0, 1.0};
Point(23) = {-0.004415, 0.750000, 0, 1.0};
Point(24) = {-0.007543, 0.749968, 0, 1.0};
Point(25) = {-0.010512, 0.749853, 0, 1.0};
Point(26) = {-0.013309, 0.749662, 0, 1.0};
Point(27) = {-0.015925, 0.749379, 0, 1.0};
Point(28) = {-0.018343, 0.749006, 0, 1.0};
Point(29) = {-0.020525, 0.748532, 0, 1.0};
Point(30) = {-0.022393, 0.747961, 0, 1.0};
Point(31) = {-0.023764, 0.747315, 0, 1.0};
Point(32) = {-0.024613, 0.746592, 0, 1.0};
Point(33) = {-0.025000, 0.745716, 0, 1.0};
Point(34) = {-0.024757, 0.744927, 0, 1.0};
Point(35) = {-0.024018, 0.744396, 0, 1.0};
Point(36) = {-0.022746, 0.743895, 0, 1.0};
Point(37) = {-0.020971, 0.743408, 0, 1.0};
Point(38) = {-0.018868, 0.742971, 0, 1.0};
Point(39) = {-0.016517, 0.742569, 0, 1.0};
Point(40) = {-0.013959, 0.742185, 0, 1.0};
Point(41) = {-0.011211, 0.741811, 0, 1.0};
Point(42) = {-0.008285, 0.741435, 0, 1.0};
Point(43) = {-0.005192, 0.741060, 0, 1.0};
Point(44) = {-0.001948, 0.740680, 0, 1.0};
Point(45) = {0.001437, 0.740299, 0, 1.0};
Point(46) = {0.004953, 0.739916, 0, 1.0};
Point(47) = {0.008586, 0.739535, 0, 1.0};
Point(48) = {0.012305, 0.739159, 0, 1.0};
Point(49) = {0.016079, 0.738795, 0, 1.0};
Point(50) = {0.019875, 0.738445, 0, 1.0};
Point(51) = {0.023672, 0.738112, 0, 1.0};
Point(52) = {0.027460, 0.737796, 0, 1.0};
Point(53) = {0.031246, 0.737500, 0, 1.0};
Point(54) = {0.035037, 0.737224, 0, 1.0};
Point(55) = {0.038860, 0.736968, 0, 1.0};
Point(56) = {0.042753, 0.736735, 0, 1.0};
Point(57) = {0.046706, 0.736532, 0, 1.0};
Point(58) = {0.050660, 0.736370, 0, 1.0};
Point(59) = {0.054482, 0.736260, 0, 1.0};
Point(60) = {0.058112, 0.736209, 0, 1.0};
Point(61) = {0.061585, 0.736222, 0, 1.0};
Point(62) = {0.064931, 0.736297, 0, 1.0};
Point(63) = {0.068178, 0.736439, 0, 1.0};
Point(64) = {0.071409, 0.736699, 0, 1.0};
Point(65) = {0.074622, 0.737034, 0, 1.0};
Point(66) = {-0.074640, -0.737234, 0, 1.0};
Point(67) = {-0.071516, -0.737927, 0, 1.0};
Point(68) = {-0.068370, -0.738654, 0, 1.0};
Point(69) = {-0.065205, -0.739443, 0, 1.0};
Point(70) = {-0.061936, -0.740261, 0, 1.0};
Point(71) = {-0.058538, -0.741107, 0, 1.0};
Point(72) = {-0.054979, -0.741975, 0, 1.0};
Point(73) = {-0.051224, -0.742861, 0, 1.0};
Point(74) = {-0.047333, -0.743739, 0, 1.0};
Point(75) = {-0.043434, -0.744571, 0, 1.0};
Point(76) = {-0.039588, -0.745340, 0, 1.0};
Point(77) = {-0.035804, -0.746044, 0, 1.0};
Point(78) = {-0.032045, -0.746688, 0, 1.0};
Point(79) = {-0.028284, -0.747277, 0, 1.0};
Point(80) = {-0.024516, -0.747811, 0, 1.0};
Point(81) = {-0.020731, -0.748293, 0, 1.0};
Point(82) = {-0.016942, -0.748721, 0, 1.0};
Point(83) = {-0.013169, -0.749095, 0, 1.0};
Point(84) = {-0.009444, -0.749407, 0, 1.0};
Point(85) = {-0.005800, -0.749659, 0, 1.0};
Point(86) = {-0.002267, -0.749844, 0, 1.0};
Point(87) = {0.001141, -0.749957, 0, 1.0};
Point(88) = {0.004415, -0.750000, 0, 1.0};
Point(89) = {0.007543, -0.749968, 0, 1.0};
Point(90) = {0.010512, -0.749853, 0, 1.0};
Point(91) = {0.013309, -0.749662, 0, 1.0};
Point(92) = {0.015925, -0.749379, 0, 1.0};
Point(93) = {0.018343, -0.749006, 0, 1.0};
Point(94) = {0.020525, -0.748532, 0, 1.0};
Point(95) = {0.022393, -0.747961, 0, 1.0};
Point(96) = {0.023764, -0.747315, 0, 1.0};
Point(97) = {0.024613, -0.746592, 0, 1.0};
Point(98) = {0.025000, -0.745716, 0, 1.0};
Point(99) = {0.024757, -0.744927, 0, 1.0};
Point(100) = {0.024018, -0.744396, 0, 1.0};
Point(101) = {0.022746, -0.743895, 0, 1.0};
Point(102) = {0.020971, -0.743408, 0, 1.0};
Point(103) = {0.018868, -0.742971, 0, 1.0};
Point(104) = {0.016517, -0.742569, 0, 1.0};
Point(105) = {0.013959, -0.742185, 0, 1.0};
Point(106) = {0.011211, -0.741811, 0, 1.0};
Point(107) = {0.008285, -0.741435, 0, 1.0};
Point(108) = {0.005192, -0.741060, 0, 1.0};
Point(109) = {0.001948, -0.740680, 0, 1.0};
Point(110) = {-0.001437, -0.740299, 0, 1.0};
Point(111) = {-0.004953, -0.739916, 0, 1.0};
Point(112) = {-0.008586, -0.739535, 0, 1.0};
Point(113) = {-0.012305, -0.739159, 0, 1.0};
Point(114) = {-0.016079, -0.738795, 0, 1.0};
Point(115) = {-0.019875, -0.738445, 0, 1.0};
Point(116) = {-0.023672, -0.738112, 0, 1.0};
Point(117) = {-0.027460, -0.737796, 0, 1.0};
Point(118) = {-0.031246, -0.737500, 0, 1.0};
Point(119) = {-0.035037, -0.737224, 0, 1.0};
Point(120) = {-0.038860, -0.736968, 0, 1.0};
Point(121) = {-0.042753, -0.736735, 0, 1.0};
Point(122) = {-0.046706, -0.736532, 0, 1.0};
Point(123) = {-0.050660, -0.736370, 0, 1.0};
Point(124) = {-0.054482, -0.736260, 0, 1.0};
Point(125) = {-0.058112, -0.736209, 0, 1.0};
Point(126) = {-0.061585, -0.736222, 0, 1.0};
Point(127) = {-0.064931, -0.736297, 0, 1.0};
Point(128) = {-0.068178, -0.736439, 0, 1.0};
Point(129) = {-0.071409, -0.736699, 0, 1.0};
Point(130) = {-0.074622, -0.737034, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
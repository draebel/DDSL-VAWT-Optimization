SetFactory("OpenCASCADE");

Point(1) = {0.074742, 0.730851, 0, 1.0};
Point(2) = {0.070056, 0.731890, 0, 1.0};
Point(3) = {0.065337, 0.732981, 0, 1.0};
Point(4) = {0.060589, 0.734165, 0, 1.0};
Point(5) = {0.055686, 0.735392, 0, 1.0};
Point(6) = {0.050588, 0.736660, 0, 1.0};
Point(7) = {0.045250, 0.737962, 0, 1.0};
Point(8) = {0.039618, 0.739292, 0, 1.0};
Point(9) = {0.033781, 0.740609, 0, 1.0};
Point(10) = {0.027933, 0.741857, 0, 1.0};
Point(11) = {0.022164, 0.743010, 0, 1.0};
Point(12) = {0.016488, 0.744065, 0, 1.0};
Point(13) = {0.010849, 0.745031, 0, 1.0};
Point(14) = {0.005208, 0.745915, 0, 1.0};
Point(15) = {-0.000445, 0.746716, 0, 1.0};
Point(16) = {-0.006122, 0.747439, 0, 1.0};
Point(17) = {-0.011805, 0.748082, 0, 1.0};
Point(18) = {-0.017465, 0.748642, 0, 1.0};
Point(19) = {-0.023052, 0.749111, 0, 1.0};
Point(20) = {-0.028518, 0.749488, 0, 1.0};
Point(21) = {-0.033818, 0.749766, 0, 1.0};
Point(22) = {-0.038930, 0.749936, 0, 1.0};
Point(23) = {-0.043840, 0.750000, 0, 1.0};
Point(24) = {-0.048533, 0.749952, 0, 1.0};
Point(25) = {-0.052987, 0.749779, 0, 1.0};
Point(26) = {-0.057182, 0.749493, 0, 1.0};
Point(27) = {-0.061105, 0.749068, 0, 1.0};
Point(28) = {-0.064733, 0.748509, 0, 1.0};
Point(29) = {-0.068006, 0.747798, 0, 1.0};
Point(30) = {-0.070807, 0.746941, 0, 1.0};
Point(31) = {-0.072864, 0.745972, 0, 1.0};
Point(32) = {-0.074137, 0.744887, 0, 1.0};
Point(33) = {-0.074718, 0.743574, 0, 1.0};
Point(34) = {-0.074354, 0.742390, 0, 1.0};
Point(35) = {-0.073245, 0.741594, 0, 1.0};
Point(36) = {-0.071338, 0.740842, 0, 1.0};
Point(37) = {-0.068674, 0.740112, 0, 1.0};
Point(38) = {-0.065520, 0.739457, 0, 1.0};
Point(39) = {-0.061993, 0.738854, 0, 1.0};
Point(40) = {-0.058157, 0.738278, 0, 1.0};
Point(41) = {-0.054035, 0.737716, 0, 1.0};
Point(42) = {-0.049646, 0.737153, 0, 1.0};
Point(43) = {-0.045006, 0.736590, 0, 1.0};
Point(44) = {-0.040139, 0.736020, 0, 1.0};
Point(45) = {-0.035062, 0.735448, 0, 1.0};
Point(46) = {-0.029788, 0.734874, 0, 1.0};
Point(47) = {-0.024339, 0.734302, 0, 1.0};
Point(48) = {-0.018760, 0.733739, 0, 1.0};
Point(49) = {-0.013100, 0.733192, 0, 1.0};
Point(50) = {-0.007406, 0.732667, 0, 1.0};
Point(51) = {-0.001710, 0.732167, 0, 1.0};
Point(52) = {0.003972, 0.731694, 0, 1.0};
Point(53) = {0.009651, 0.731250, 0, 1.0};
Point(54) = {0.015337, 0.730836, 0, 1.0};
Point(55) = {0.021072, 0.730452, 0, 1.0};
Point(56) = {0.026911, 0.730102, 0, 1.0};
Point(57) = {0.032841, 0.729797, 0, 1.0};
Point(58) = {0.038772, 0.729554, 0, 1.0};
Point(59) = {0.044504, 0.729390, 0, 1.0};
Point(60) = {0.049950, 0.729314, 0, 1.0};
Point(61) = {0.055159, 0.729333, 0, 1.0};
Point(62) = {0.060179, 0.729446, 0, 1.0};
Point(63) = {0.065048, 0.729659, 0, 1.0};
Point(64) = {0.069896, 0.730048, 0, 1.0};
Point(65) = {0.074716, 0.730552, 0, 1.0};
Point(66) = {-0.074742, -0.730851, 0, 1.0};
Point(67) = {-0.070056, -0.731890, 0, 1.0};
Point(68) = {-0.065337, -0.732981, 0, 1.0};
Point(69) = {-0.060589, -0.734165, 0, 1.0};
Point(70) = {-0.055686, -0.735392, 0, 1.0};
Point(71) = {-0.050588, -0.736660, 0, 1.0};
Point(72) = {-0.045250, -0.737962, 0, 1.0};
Point(73) = {-0.039618, -0.739292, 0, 1.0};
Point(74) = {-0.033781, -0.740609, 0, 1.0};
Point(75) = {-0.027933, -0.741857, 0, 1.0};
Point(76) = {-0.022164, -0.743010, 0, 1.0};
Point(77) = {-0.016488, -0.744065, 0, 1.0};
Point(78) = {-0.010849, -0.745031, 0, 1.0};
Point(79) = {-0.005208, -0.745915, 0, 1.0};
Point(80) = {0.000445, -0.746716, 0, 1.0};
Point(81) = {0.006122, -0.747439, 0, 1.0};
Point(82) = {0.011805, -0.748082, 0, 1.0};
Point(83) = {0.017465, -0.748642, 0, 1.0};
Point(84) = {0.023052, -0.749111, 0, 1.0};
Point(85) = {0.028518, -0.749488, 0, 1.0};
Point(86) = {0.033818, -0.749766, 0, 1.0};
Point(87) = {0.038930, -0.749936, 0, 1.0};
Point(88) = {0.043840, -0.750000, 0, 1.0};
Point(89) = {0.048533, -0.749952, 0, 1.0};
Point(90) = {0.052987, -0.749779, 0, 1.0};
Point(91) = {0.057182, -0.749493, 0, 1.0};
Point(92) = {0.061105, -0.749068, 0, 1.0};
Point(93) = {0.064733, -0.748509, 0, 1.0};
Point(94) = {0.068006, -0.747798, 0, 1.0};
Point(95) = {0.070807, -0.746941, 0, 1.0};
Point(96) = {0.072864, -0.745972, 0, 1.0};
Point(97) = {0.074137, -0.744887, 0, 1.0};
Point(98) = {0.074718, -0.743574, 0, 1.0};
Point(99) = {0.074354, -0.742390, 0, 1.0};
Point(100) = {0.073245, -0.741594, 0, 1.0};
Point(101) = {0.071338, -0.740842, 0, 1.0};
Point(102) = {0.068674, -0.740112, 0, 1.0};
Point(103) = {0.065520, -0.739457, 0, 1.0};
Point(104) = {0.061993, -0.738854, 0, 1.0};
Point(105) = {0.058157, -0.738278, 0, 1.0};
Point(106) = {0.054035, -0.737716, 0, 1.0};
Point(107) = {0.049646, -0.737153, 0, 1.0};
Point(108) = {0.045006, -0.736590, 0, 1.0};
Point(109) = {0.040139, -0.736020, 0, 1.0};
Point(110) = {0.035062, -0.735448, 0, 1.0};
Point(111) = {0.029788, -0.734874, 0, 1.0};
Point(112) = {0.024339, -0.734302, 0, 1.0};
Point(113) = {0.018760, -0.733739, 0, 1.0};
Point(114) = {0.013100, -0.733192, 0, 1.0};
Point(115) = {0.007406, -0.732667, 0, 1.0};
Point(116) = {0.001710, -0.732167, 0, 1.0};
Point(117) = {-0.003972, -0.731694, 0, 1.0};
Point(118) = {-0.009651, -0.731250, 0, 1.0};
Point(119) = {-0.015337, -0.730836, 0, 1.0};
Point(120) = {-0.021072, -0.730452, 0, 1.0};
Point(121) = {-0.026911, -0.730102, 0, 1.0};
Point(122) = {-0.032841, -0.729797, 0, 1.0};
Point(123) = {-0.038772, -0.729554, 0, 1.0};
Point(124) = {-0.044504, -0.729390, 0, 1.0};
Point(125) = {-0.049950, -0.729314, 0, 1.0};
Point(126) = {-0.055159, -0.729333, 0, 1.0};
Point(127) = {-0.060179, -0.729446, 0, 1.0};
Point(128) = {-0.065048, -0.729659, 0, 1.0};
Point(129) = {-0.069896, -0.730048, 0, 1.0};
Point(130) = {-0.074716, -0.730552, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
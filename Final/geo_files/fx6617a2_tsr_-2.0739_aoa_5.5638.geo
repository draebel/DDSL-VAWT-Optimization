SetFactory("OpenCASCADE");

Point(1) = {0.074782, 0.721901, 0, 1.0};
Point(2) = {0.071680, 0.722976, 0, 1.0};
Point(3) = {0.066752, 0.724611, 0, 1.0};
Point(4) = {0.060752, 0.726575, 0, 1.0};
Point(5) = {0.057381, 0.727689, 0, 1.0};
Point(6) = {0.053784, 0.728890, 0, 1.0};
Point(7) = {0.049976, 0.730169, 0, 1.0};
Point(8) = {0.045972, 0.731524, 0, 1.0};
Point(9) = {0.041789, 0.732945, 0, 1.0};
Point(10) = {0.037445, 0.734426, 0, 1.0};
Point(11) = {0.032959, 0.735953, 0, 1.0};
Point(12) = {0.028349, 0.737517, 0, 1.0};
Point(13) = {0.023634, 0.739101, 0, 1.0};
Point(14) = {0.018834, 0.740690, 0, 1.0};
Point(15) = {0.013966, 0.742267, 0, 1.0};
Point(16) = {0.009053, 0.743815, 0, 1.0};
Point(17) = {0.004111, 0.745291, 0, 1.0};
Point(18) = {-0.000844, 0.746633, 0, 1.0};
Point(19) = {-0.005796, 0.747780, 0, 1.0};
Point(20) = {-0.010728, 0.748699, 0, 1.0};
Point(21) = {-0.015618, 0.749366, 0, 1.0};
Point(22) = {-0.020445, 0.749801, 0, 1.0};
Point(23) = {-0.025188, 0.750000, 0, 1.0};
Point(24) = {-0.029854, 0.749994, 0, 1.0};
Point(25) = {-0.034333, 0.749770, 0, 1.0};
Point(26) = {-0.038693, 0.749379, 0, 1.0};
Point(27) = {-0.042881, 0.748839, 0, 1.0};
Point(28) = {-0.046879, 0.748169, 0, 1.0};
Point(29) = {-0.050670, 0.747383, 0, 1.0};
Point(30) = {-0.054235, 0.746500, 0, 1.0};
Point(31) = {-0.057558, 0.745533, 0, 1.0};
Point(32) = {-0.060621, 0.744500, 0, 1.0};
Point(33) = {-0.063414, 0.743414, 0, 1.0};
Point(34) = {-0.065923, 0.742298, 0, 1.0};
Point(35) = {-0.068133, 0.741166, 0, 1.0};
Point(36) = {-0.070035, 0.740041, 0, 1.0};
Point(37) = {-0.071618, 0.738941, 0, 1.0};
Point(38) = {-0.072886, 0.737789, 0, 1.0};
Point(39) = {-0.073806, 0.736860, 0, 1.0};
Point(40) = {-0.074389, 0.735992, 0, 1.0};
Point(41) = {-0.074647, 0.735059, 0, 1.0};
Point(42) = {-0.074533, 0.734519, 0, 1.0};
Point(43) = {-0.074098, 0.733853, 0, 1.0};
Point(44) = {-0.073340, 0.733131, 0, 1.0};
Point(45) = {-0.072249, 0.732471, 0, 1.0};
Point(46) = {-0.070846, 0.731717, 0, 1.0};
Point(47) = {-0.069128, 0.730947, 0, 1.0};
Point(48) = {-0.067105, 0.730166, 0, 1.0};
Point(49) = {-0.064782, 0.729378, 0, 1.0};
Point(50) = {-0.062171, 0.728589, 0, 1.0};
Point(51) = {-0.059285, 0.727805, 0, 1.0};
Point(52) = {-0.056132, 0.727028, 0, 1.0};
Point(53) = {-0.052727, 0.726267, 0, 1.0};
Point(54) = {-0.049086, 0.725521, 0, 1.0};
Point(55) = {-0.045223, 0.724802, 0, 1.0};
Point(56) = {-0.041162, 0.724030, 0, 1.0};
Point(57) = {-0.036897, 0.723453, 0, 1.0};
Point(58) = {-0.032499, 0.722838, 0, 1.0};
Point(59) = {-0.027889, 0.722274, 0, 1.0};
Point(60) = {-0.023176, 0.721770, 0, 1.0};
Point(61) = {-0.018347, 0.721351, 0, 1.0};
Point(62) = {-0.013425, 0.721011, 0, 1.0};
Point(63) = {-0.008427, 0.720775, 0, 1.0};
Point(64) = {-0.003374, 0.720657, 0, 1.0};
Point(65) = {0.001713, 0.720678, 0, 1.0};
Point(66) = {0.006813, 0.720825, 0, 1.0};
Point(67) = {0.011901, 0.721071, 0, 1.0};
Point(68) = {0.016951, 0.721358, 0, 1.0};
Point(69) = {0.021934, 0.721646, 0, 1.0};
Point(70) = {0.026827, 0.721889, 0, 1.0};
Point(71) = {0.031607, 0.722075, 0, 1.0};
Point(72) = {0.036253, 0.722194, 0, 1.0};
Point(73) = {0.040747, 0.722247, 0, 1.0};
Point(74) = {0.045068, 0.722240, 0, 1.0};
Point(75) = {0.049198, 0.722183, 0, 1.0};
Point(76) = {0.053121, 0.722081, 0, 1.0};
Point(77) = {0.056821, 0.721940, 0, 1.0};
Point(78) = {0.060283, 0.721764, 0, 1.0};
Point(79) = {0.066428, 0.721287, 0, 1.0};
Point(80) = {0.071461, 0.720728, 0, 1.0};
Point(81) = {0.074636, 0.720406, 0, 1.0};
Point(82) = {-0.074782, -0.721901, 0, 1.0};
Point(83) = {-0.071680, -0.722976, 0, 1.0};
Point(84) = {-0.066752, -0.724611, 0, 1.0};
Point(85) = {-0.060752, -0.726575, 0, 1.0};
Point(86) = {-0.057381, -0.727689, 0, 1.0};
Point(87) = {-0.053784, -0.728890, 0, 1.0};
Point(88) = {-0.049976, -0.730169, 0, 1.0};
Point(89) = {-0.045972, -0.731524, 0, 1.0};
Point(90) = {-0.041789, -0.732945, 0, 1.0};
Point(91) = {-0.037445, -0.734426, 0, 1.0};
Point(92) = {-0.032959, -0.735953, 0, 1.0};
Point(93) = {-0.028349, -0.737517, 0, 1.0};
Point(94) = {-0.023634, -0.739101, 0, 1.0};
Point(95) = {-0.018834, -0.740690, 0, 1.0};
Point(96) = {-0.013966, -0.742267, 0, 1.0};
Point(97) = {-0.009053, -0.743815, 0, 1.0};
Point(98) = {-0.004111, -0.745291, 0, 1.0};
Point(99) = {0.000844, -0.746633, 0, 1.0};
Point(100) = {0.005796, -0.747780, 0, 1.0};
Point(101) = {0.010728, -0.748699, 0, 1.0};
Point(102) = {0.015618, -0.749366, 0, 1.0};
Point(103) = {0.020445, -0.749801, 0, 1.0};
Point(104) = {0.025188, -0.750000, 0, 1.0};
Point(105) = {0.029854, -0.749994, 0, 1.0};
Point(106) = {0.034333, -0.749770, 0, 1.0};
Point(107) = {0.038693, -0.749379, 0, 1.0};
Point(108) = {0.042881, -0.748839, 0, 1.0};
Point(109) = {0.046879, -0.748169, 0, 1.0};
Point(110) = {0.050670, -0.747383, 0, 1.0};
Point(111) = {0.054235, -0.746500, 0, 1.0};
Point(112) = {0.057558, -0.745533, 0, 1.0};
Point(113) = {0.060621, -0.744500, 0, 1.0};
Point(114) = {0.063414, -0.743414, 0, 1.0};
Point(115) = {0.065923, -0.742298, 0, 1.0};
Point(116) = {0.068133, -0.741166, 0, 1.0};
Point(117) = {0.070035, -0.740041, 0, 1.0};
Point(118) = {0.071618, -0.738941, 0, 1.0};
Point(119) = {0.072886, -0.737789, 0, 1.0};
Point(120) = {0.073806, -0.736860, 0, 1.0};
Point(121) = {0.074389, -0.735992, 0, 1.0};
Point(122) = {0.074647, -0.735059, 0, 1.0};
Point(123) = {0.074533, -0.734519, 0, 1.0};
Point(124) = {0.074098, -0.733853, 0, 1.0};
Point(125) = {0.073340, -0.733131, 0, 1.0};
Point(126) = {0.072249, -0.732471, 0, 1.0};
Point(127) = {0.070846, -0.731717, 0, 1.0};
Point(128) = {0.069128, -0.730947, 0, 1.0};
Point(129) = {0.067105, -0.730166, 0, 1.0};
Point(130) = {0.064782, -0.729378, 0, 1.0};
Point(131) = {0.062171, -0.728589, 0, 1.0};
Point(132) = {0.059285, -0.727805, 0, 1.0};
Point(133) = {0.056132, -0.727028, 0, 1.0};
Point(134) = {0.052727, -0.726267, 0, 1.0};
Point(135) = {0.049086, -0.725521, 0, 1.0};
Point(136) = {0.045223, -0.724802, 0, 1.0};
Point(137) = {0.041162, -0.724030, 0, 1.0};
Point(138) = {0.036897, -0.723453, 0, 1.0};
Point(139) = {0.032499, -0.722838, 0, 1.0};
Point(140) = {0.027889, -0.722274, 0, 1.0};
Point(141) = {0.023176, -0.721770, 0, 1.0};
Point(142) = {0.018347, -0.721351, 0, 1.0};
Point(143) = {0.013425, -0.721011, 0, 1.0};
Point(144) = {0.008427, -0.720775, 0, 1.0};
Point(145) = {0.003374, -0.720657, 0, 1.0};
Point(146) = {-0.001713, -0.720678, 0, 1.0};
Point(147) = {-0.006813, -0.720825, 0, 1.0};
Point(148) = {-0.011901, -0.721071, 0, 1.0};
Point(149) = {-0.016951, -0.721358, 0, 1.0};
Point(150) = {-0.021934, -0.721646, 0, 1.0};
Point(151) = {-0.026827, -0.721889, 0, 1.0};
Point(152) = {-0.031607, -0.722075, 0, 1.0};
Point(153) = {-0.036253, -0.722194, 0, 1.0};
Point(154) = {-0.040747, -0.722247, 0, 1.0};
Point(155) = {-0.045068, -0.722240, 0, 1.0};
Point(156) = {-0.049198, -0.722183, 0, 1.0};
Point(157) = {-0.053121, -0.722081, 0, 1.0};
Point(158) = {-0.056821, -0.721940, 0, 1.0};
Point(159) = {-0.060283, -0.721764, 0, 1.0};
Point(160) = {-0.066428, -0.721287, 0, 1.0};
Point(161) = {-0.071461, -0.720728, 0, 1.0};
Point(162) = {-0.074636, -0.720406, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:105};
Spline(6) = {105:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {36.00000000, 15.00000000, 0, 1.0};
Point(166) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
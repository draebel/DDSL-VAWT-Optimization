SetFactory("OpenCASCADE");

Point(1) = {0.111993, 0.745708, 0, 1.0};
Point(2) = {0.111510, 0.745733, 0, 1.0};
Point(3) = {0.110078, 0.745821, 0, 1.0};
Point(4) = {0.107750, 0.746000, 0, 1.0};
Point(5) = {0.104588, 0.746279, 0, 1.0};
Point(6) = {0.100670, 0.746655, 0, 1.0};
Point(7) = {0.096074, 0.747111, 0, 1.0};
Point(8) = {0.090882, 0.747625, 0, 1.0};
Point(9) = {0.085171, 0.748162, 0, 1.0};
Point(10) = {0.079019, 0.748689, 0, 1.0};
Point(11) = {0.072500, 0.749165, 0, 1.0};
Point(12) = {0.065677, 0.749554, 0, 1.0};
Point(13) = {0.058607, 0.749829, 0, 1.0};
Point(14) = {0.051350, 0.749981, 0, 1.0};
Point(15) = {0.043976, 0.750000, 0, 1.0};
Point(16) = {0.036560, 0.749882, 0, 1.0};
Point(17) = {0.029174, 0.749619, 0, 1.0};
Point(18) = {0.021887, 0.749207, 0, 1.0};
Point(19) = {0.014770, 0.748648, 0, 1.0};
Point(20) = {0.007888, 0.747946, 0, 1.0};
Point(21) = {0.001308, 0.747108, 0, 1.0};
Point(22) = {-0.004906, 0.746143, 0, 1.0};
Point(23) = {-0.010697, 0.745061, 0, 1.0};
Point(24) = {-0.016006, 0.743873, 0, 1.0};
Point(25) = {-0.020789, 0.742592, 0, 1.0};
Point(26) = {-0.025006, 0.741228, 0, 1.0};
Point(27) = {-0.028628, 0.739800, 0, 1.0};
Point(28) = {-0.031631, 0.738329, 0, 1.0};
Point(29) = {-0.034009, 0.736841, 0, 1.0};
Point(30) = {-0.035754, 0.735371, 0, 1.0};
Point(31) = {-0.036868, 0.733959, 0, 1.0};
Point(32) = {-0.037391, 0.732657, 0, 1.0};
Point(33) = {-0.037344, 0.731633, 0, 1.0};
Point(34) = {-0.036525, 0.730967, 0, 1.0};
Point(35) = {-0.034808, 0.730551, 0, 1.0};
Point(36) = {-0.032294, 0.730326, 0, 1.0};
Point(37) = {-0.029010, 0.730299, 0, 1.0};
Point(38) = {-0.024984, 0.730467, 0, 1.0};
Point(39) = {-0.020251, 0.730818, 0, 1.0};
Point(40) = {-0.014856, 0.731337, 0, 1.0};
Point(41) = {-0.008855, 0.732011, 0, 1.0};
Point(42) = {-0.002306, 0.732819, 0, 1.0};
Point(43) = {0.004723, 0.733745, 0, 1.0};
Point(44) = {0.012156, 0.734764, 0, 1.0};
Point(45) = {0.019914, 0.735855, 0, 1.0};
Point(46) = {0.027912, 0.736990, 0, 1.0};
Point(47) = {0.036057, 0.738143, 0, 1.0};
Point(48) = {0.044259, 0.739291, 0, 1.0};
Point(49) = {0.052417, 0.740405, 0, 1.0};
Point(50) = {0.060434, 0.741462, 0, 1.0};
Point(51) = {0.068213, 0.742439, 0, 1.0};
Point(52) = {0.075652, 0.743312, 0, 1.0};
Point(53) = {0.082651, 0.744062, 0, 1.0};
Point(54) = {0.089113, 0.744675, 0, 1.0};
Point(55) = {0.094941, 0.745135, 0, 1.0};
Point(56) = {0.100032, 0.745437, 0, 1.0};
Point(57) = {0.104288, 0.745606, 0, 1.0};
Point(58) = {0.107640, 0.745684, 0, 1.0};
Point(59) = {0.110053, 0.745710, 0, 1.0};
Point(60) = {0.111508, 0.745711, 0, 1.0};
Point(61) = {0.111995, 0.745708, 0, 1.0};
Point(62) = {-0.111993, -0.745708, 0, 1.0};
Point(63) = {-0.111510, -0.745733, 0, 1.0};
Point(64) = {-0.110078, -0.745821, 0, 1.0};
Point(65) = {-0.107750, -0.746000, 0, 1.0};
Point(66) = {-0.104588, -0.746279, 0, 1.0};
Point(67) = {-0.100670, -0.746655, 0, 1.0};
Point(68) = {-0.096074, -0.747111, 0, 1.0};
Point(69) = {-0.090882, -0.747625, 0, 1.0};
Point(70) = {-0.085171, -0.748162, 0, 1.0};
Point(71) = {-0.079019, -0.748689, 0, 1.0};
Point(72) = {-0.072500, -0.749165, 0, 1.0};
Point(73) = {-0.065677, -0.749554, 0, 1.0};
Point(74) = {-0.058607, -0.749829, 0, 1.0};
Point(75) = {-0.051350, -0.749981, 0, 1.0};
Point(76) = {-0.043976, -0.750000, 0, 1.0};
Point(77) = {-0.036560, -0.749882, 0, 1.0};
Point(78) = {-0.029174, -0.749619, 0, 1.0};
Point(79) = {-0.021887, -0.749207, 0, 1.0};
Point(80) = {-0.014770, -0.748648, 0, 1.0};
Point(81) = {-0.007888, -0.747946, 0, 1.0};
Point(82) = {-0.001308, -0.747108, 0, 1.0};
Point(83) = {0.004906, -0.746143, 0, 1.0};
Point(84) = {0.010697, -0.745061, 0, 1.0};
Point(85) = {0.016006, -0.743873, 0, 1.0};
Point(86) = {0.020789, -0.742592, 0, 1.0};
Point(87) = {0.025006, -0.741228, 0, 1.0};
Point(88) = {0.028628, -0.739800, 0, 1.0};
Point(89) = {0.031631, -0.738329, 0, 1.0};
Point(90) = {0.034009, -0.736841, 0, 1.0};
Point(91) = {0.035754, -0.735371, 0, 1.0};
Point(92) = {0.036868, -0.733959, 0, 1.0};
Point(93) = {0.037391, -0.732657, 0, 1.0};
Point(94) = {0.037344, -0.731633, 0, 1.0};
Point(95) = {0.036525, -0.730967, 0, 1.0};
Point(96) = {0.034808, -0.730551, 0, 1.0};
Point(97) = {0.032294, -0.730326, 0, 1.0};
Point(98) = {0.029010, -0.730299, 0, 1.0};
Point(99) = {0.024984, -0.730467, 0, 1.0};
Point(100) = {0.020251, -0.730818, 0, 1.0};
Point(101) = {0.014856, -0.731337, 0, 1.0};
Point(102) = {0.008855, -0.732011, 0, 1.0};
Point(103) = {0.002306, -0.732819, 0, 1.0};
Point(104) = {-0.004723, -0.733745, 0, 1.0};
Point(105) = {-0.012156, -0.734764, 0, 1.0};
Point(106) = {-0.019914, -0.735855, 0, 1.0};
Point(107) = {-0.027912, -0.736990, 0, 1.0};
Point(108) = {-0.036057, -0.738143, 0, 1.0};
Point(109) = {-0.044259, -0.739291, 0, 1.0};
Point(110) = {-0.052417, -0.740405, 0, 1.0};
Point(111) = {-0.060434, -0.741462, 0, 1.0};
Point(112) = {-0.068213, -0.742439, 0, 1.0};
Point(113) = {-0.075652, -0.743312, 0, 1.0};
Point(114) = {-0.082651, -0.744062, 0, 1.0};
Point(115) = {-0.089113, -0.744675, 0, 1.0};
Point(116) = {-0.094941, -0.745135, 0, 1.0};
Point(117) = {-0.100032, -0.745437, 0, 1.0};
Point(118) = {-0.104288, -0.745606, 0, 1.0};
Point(119) = {-0.107640, -0.745684, 0, 1.0};
Point(120) = {-0.110053, -0.745710, 0, 1.0};
Point(121) = {-0.111508, -0.745711, 0, 1.0};
Point(122) = {-0.111995, -0.745708, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
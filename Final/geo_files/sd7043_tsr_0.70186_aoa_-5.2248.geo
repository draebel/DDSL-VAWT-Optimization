SetFactory("OpenCASCADE");

Point(1) = {0.111841, 0.745713, 0, 1.0};
Point(2) = {0.111358, 0.745738, 0, 1.0};
Point(3) = {0.109928, 0.745825, 0, 1.0};
Point(4) = {0.107602, 0.746004, 0, 1.0};
Point(5) = {0.104443, 0.746283, 0, 1.0};
Point(6) = {0.100529, 0.746658, 0, 1.0};
Point(7) = {0.095938, 0.747114, 0, 1.0};
Point(8) = {0.090751, 0.747628, 0, 1.0};
Point(9) = {0.085046, 0.748164, 0, 1.0};
Point(10) = {0.078901, 0.748691, 0, 1.0};
Point(11) = {0.072388, 0.749166, 0, 1.0};
Point(12) = {0.065572, 0.749554, 0, 1.0};
Point(13) = {0.058509, 0.749830, 0, 1.0};
Point(14) = {0.051259, 0.749981, 0, 1.0};
Point(15) = {0.043893, 0.750000, 0, 1.0};
Point(16) = {0.036485, 0.749883, 0, 1.0};
Point(17) = {0.029106, 0.749619, 0, 1.0};
Point(18) = {0.021827, 0.749208, 0, 1.0};
Point(19) = {0.014717, 0.748649, 0, 1.0};
Point(20) = {0.007842, 0.747948, 0, 1.0};
Point(21) = {0.001269, 0.747111, 0, 1.0};
Point(22) = {-0.004939, 0.746147, 0, 1.0};
Point(23) = {-0.010724, 0.745066, 0, 1.0};
Point(24) = {-0.016027, 0.743879, 0, 1.0};
Point(25) = {-0.020806, 0.742599, 0, 1.0};
Point(26) = {-0.025019, 0.741237, 0, 1.0};
Point(27) = {-0.028637, 0.739810, 0, 1.0};
Point(28) = {-0.031637, 0.738340, 0, 1.0};
Point(29) = {-0.034012, 0.736854, 0, 1.0};
Point(30) = {-0.035756, 0.735386, 0, 1.0};
Point(31) = {-0.036869, 0.733975, 0, 1.0};
Point(32) = {-0.037391, 0.732675, 0, 1.0};
Point(33) = {-0.037344, 0.731652, 0, 1.0};
Point(34) = {-0.036526, 0.730986, 0, 1.0};
Point(35) = {-0.034811, 0.730571, 0, 1.0};
Point(36) = {-0.032299, 0.730346, 0, 1.0};
Point(37) = {-0.029019, 0.730319, 0, 1.0};
Point(38) = {-0.024996, 0.730487, 0, 1.0};
Point(39) = {-0.020268, 0.730838, 0, 1.0};
Point(40) = {-0.014879, 0.731356, 0, 1.0};
Point(41) = {-0.008884, 0.732029, 0, 1.0};
Point(42) = {-0.002342, 0.732837, 0, 1.0};
Point(43) = {0.004680, 0.733762, 0, 1.0};
Point(44) = {0.012105, 0.734780, 0, 1.0};
Point(45) = {0.019855, 0.735869, 0, 1.0};
Point(46) = {0.027845, 0.737003, 0, 1.0};
Point(47) = {0.035982, 0.738156, 0, 1.0};
Point(48) = {0.044176, 0.739302, 0, 1.0};
Point(49) = {0.052325, 0.740415, 0, 1.0};
Point(50) = {0.060334, 0.741471, 0, 1.0};
Point(51) = {0.068105, 0.742446, 0, 1.0};
Point(52) = {0.075537, 0.743319, 0, 1.0};
Point(53) = {0.082529, 0.744068, 0, 1.0};
Point(54) = {0.088984, 0.744681, 0, 1.0};
Point(55) = {0.094806, 0.745139, 0, 1.0};
Point(56) = {0.099892, 0.745442, 0, 1.0};
Point(57) = {0.104143, 0.745611, 0, 1.0};
Point(58) = {0.107492, 0.745688, 0, 1.0};
Point(59) = {0.109903, 0.745715, 0, 1.0};
Point(60) = {0.111356, 0.745715, 0, 1.0};
Point(61) = {0.111842, 0.745713, 0, 1.0};
Point(62) = {-0.111841, -0.745713, 0, 1.0};
Point(63) = {-0.111358, -0.745738, 0, 1.0};
Point(64) = {-0.109928, -0.745825, 0, 1.0};
Point(65) = {-0.107602, -0.746004, 0, 1.0};
Point(66) = {-0.104443, -0.746283, 0, 1.0};
Point(67) = {-0.100529, -0.746658, 0, 1.0};
Point(68) = {-0.095938, -0.747114, 0, 1.0};
Point(69) = {-0.090751, -0.747628, 0, 1.0};
Point(70) = {-0.085046, -0.748164, 0, 1.0};
Point(71) = {-0.078901, -0.748691, 0, 1.0};
Point(72) = {-0.072388, -0.749166, 0, 1.0};
Point(73) = {-0.065572, -0.749554, 0, 1.0};
Point(74) = {-0.058509, -0.749830, 0, 1.0};
Point(75) = {-0.051259, -0.749981, 0, 1.0};
Point(76) = {-0.043893, -0.750000, 0, 1.0};
Point(77) = {-0.036485, -0.749883, 0, 1.0};
Point(78) = {-0.029106, -0.749619, 0, 1.0};
Point(79) = {-0.021827, -0.749208, 0, 1.0};
Point(80) = {-0.014717, -0.748649, 0, 1.0};
Point(81) = {-0.007842, -0.747948, 0, 1.0};
Point(82) = {-0.001269, -0.747111, 0, 1.0};
Point(83) = {0.004939, -0.746147, 0, 1.0};
Point(84) = {0.010724, -0.745066, 0, 1.0};
Point(85) = {0.016027, -0.743879, 0, 1.0};
Point(86) = {0.020806, -0.742599, 0, 1.0};
Point(87) = {0.025019, -0.741237, 0, 1.0};
Point(88) = {0.028637, -0.739810, 0, 1.0};
Point(89) = {0.031637, -0.738340, 0, 1.0};
Point(90) = {0.034012, -0.736854, 0, 1.0};
Point(91) = {0.035756, -0.735386, 0, 1.0};
Point(92) = {0.036869, -0.733975, 0, 1.0};
Point(93) = {0.037391, -0.732675, 0, 1.0};
Point(94) = {0.037344, -0.731652, 0, 1.0};
Point(95) = {0.036526, -0.730986, 0, 1.0};
Point(96) = {0.034811, -0.730571, 0, 1.0};
Point(97) = {0.032299, -0.730346, 0, 1.0};
Point(98) = {0.029019, -0.730319, 0, 1.0};
Point(99) = {0.024996, -0.730487, 0, 1.0};
Point(100) = {0.020268, -0.730838, 0, 1.0};
Point(101) = {0.014879, -0.731356, 0, 1.0};
Point(102) = {0.008884, -0.732029, 0, 1.0};
Point(103) = {0.002342, -0.732837, 0, 1.0};
Point(104) = {-0.004680, -0.733762, 0, 1.0};
Point(105) = {-0.012105, -0.734780, 0, 1.0};
Point(106) = {-0.019855, -0.735869, 0, 1.0};
Point(107) = {-0.027845, -0.737003, 0, 1.0};
Point(108) = {-0.035982, -0.738156, 0, 1.0};
Point(109) = {-0.044176, -0.739302, 0, 1.0};
Point(110) = {-0.052325, -0.740415, 0, 1.0};
Point(111) = {-0.060334, -0.741471, 0, 1.0};
Point(112) = {-0.068105, -0.742446, 0, 1.0};
Point(113) = {-0.075537, -0.743319, 0, 1.0};
Point(114) = {-0.082529, -0.744068, 0, 1.0};
Point(115) = {-0.088984, -0.744681, 0, 1.0};
Point(116) = {-0.094806, -0.745139, 0, 1.0};
Point(117) = {-0.099892, -0.745442, 0, 1.0};
Point(118) = {-0.104143, -0.745611, 0, 1.0};
Point(119) = {-0.107492, -0.745688, 0, 1.0};
Point(120) = {-0.109903, -0.745715, 0, 1.0};
Point(121) = {-0.111356, -0.745715, 0, 1.0};
Point(122) = {-0.111842, -0.745713, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
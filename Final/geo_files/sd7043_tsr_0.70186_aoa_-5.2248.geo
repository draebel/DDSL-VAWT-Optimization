SetFactory("OpenCASCADE");

Point(1) = {0.074585, 0.747140, 0, 1.0};
Point(2) = {0.074263, 0.747157, 0, 1.0};
Point(3) = {0.073308, 0.747215, 0, 1.0};
Point(4) = {0.071757, 0.747335, 0, 1.0};
Point(5) = {0.069650, 0.747521, 0, 1.0};
Point(6) = {0.067040, 0.747771, 0, 1.0};
Point(7) = {0.063977, 0.748075, 0, 1.0};
Point(8) = {0.060518, 0.748418, 0, 1.0};
Point(9) = {0.056712, 0.748776, 0, 1.0};
Point(10) = {0.052613, 0.749127, 0, 1.0};
Point(11) = {0.048269, 0.749444, 0, 1.0};
Point(12) = {0.043723, 0.749703, 0, 1.0};
Point(13) = {0.039012, 0.749886, 0, 1.0};
Point(14) = {0.034176, 0.749987, 0, 1.0};
Point(15) = {0.029263, 0.750000, 0, 1.0};
Point(16) = {0.024321, 0.749922, 0, 1.0};
Point(17) = {0.019400, 0.749746, 0, 1.0};
Point(18) = {0.014545, 0.749472, 0, 1.0};
Point(19) = {0.009802, 0.749099, 0, 1.0};
Point(20) = {0.005216, 0.748632, 0, 1.0};
Point(21) = {0.000832, 0.748073, 0, 1.0};
Point(22) = {-0.003309, 0.747430, 0, 1.0};
Point(23) = {-0.007167, 0.746709, 0, 1.0};
Point(24) = {-0.010705, 0.745917, 0, 1.0};
Point(25) = {-0.013892, 0.745064, 0, 1.0};
Point(26) = {-0.016702, 0.744155, 0, 1.0};
Point(27) = {-0.019115, 0.743203, 0, 1.0};
Point(28) = {-0.021116, 0.742223, 0, 1.0};
Point(29) = {-0.022701, 0.741232, 0, 1.0};
Point(30) = {-0.023863, 0.740253, 0, 1.0};
Point(31) = {-0.024606, 0.739311, 0, 1.0};
Point(32) = {-0.024954, 0.738444, 0, 1.0};
Point(33) = {-0.024923, 0.737762, 0, 1.0};
Point(34) = {-0.024377, 0.737318, 0, 1.0};
Point(35) = {-0.023233, 0.737041, 0, 1.0};
Point(36) = {-0.021558, 0.736891, 0, 1.0};
Point(37) = {-0.019370, 0.736873, 0, 1.0};
Point(38) = {-0.016687, 0.736985, 0, 1.0};
Point(39) = {-0.013533, 0.737219, 0, 1.0};
Point(40) = {-0.009939, 0.737564, 0, 1.0};
Point(41) = {-0.005940, 0.738014, 0, 1.0};
Point(42) = {-0.001576, 0.738552, 0, 1.0};
Point(43) = {0.003107, 0.739169, 0, 1.0};
Point(44) = {0.008060, 0.739848, 0, 1.0};
Point(45) = {0.013229, 0.740575, 0, 1.0};
Point(46) = {0.018559, 0.741331, 0, 1.0};
Point(47) = {0.023986, 0.742100, 0, 1.0};
Point(48) = {0.029451, 0.742865, 0, 1.0};
Point(49) = {0.034887, 0.743607, 0, 1.0};
Point(50) = {0.040229, 0.744311, 0, 1.0};
Point(51) = {0.045413, 0.744962, 0, 1.0};
Point(52) = {0.050369, 0.745544, 0, 1.0};
Point(53) = {0.055033, 0.746043, 0, 1.0};
Point(54) = {0.059339, 0.746452, 0, 1.0};
Point(55) = {0.063222, 0.746758, 0, 1.0};
Point(56) = {0.066615, 0.746960, 0, 1.0};
Point(57) = {0.069450, 0.747072, 0, 1.0};
Point(58) = {0.071684, 0.747124, 0, 1.0};
Point(59) = {0.073292, 0.747142, 0, 1.0};
Point(60) = {0.074261, 0.747142, 0, 1.0};
Point(61) = {0.074586, 0.747140, 0, 1.0};
Point(62) = {-0.074585, -0.747140, 0, 1.0};
Point(63) = {-0.074263, -0.747157, 0, 1.0};
Point(64) = {-0.073308, -0.747215, 0, 1.0};
Point(65) = {-0.071757, -0.747335, 0, 1.0};
Point(66) = {-0.069650, -0.747521, 0, 1.0};
Point(67) = {-0.067040, -0.747771, 0, 1.0};
Point(68) = {-0.063977, -0.748075, 0, 1.0};
Point(69) = {-0.060518, -0.748418, 0, 1.0};
Point(70) = {-0.056712, -0.748776, 0, 1.0};
Point(71) = {-0.052613, -0.749127, 0, 1.0};
Point(72) = {-0.048269, -0.749444, 0, 1.0};
Point(73) = {-0.043723, -0.749703, 0, 1.0};
Point(74) = {-0.039012, -0.749886, 0, 1.0};
Point(75) = {-0.034176, -0.749987, 0, 1.0};
Point(76) = {-0.029263, -0.750000, 0, 1.0};
Point(77) = {-0.024321, -0.749922, 0, 1.0};
Point(78) = {-0.019400, -0.749746, 0, 1.0};
Point(79) = {-0.014545, -0.749472, 0, 1.0};
Point(80) = {-0.009802, -0.749099, 0, 1.0};
Point(81) = {-0.005216, -0.748632, 0, 1.0};
Point(82) = {-0.000832, -0.748073, 0, 1.0};
Point(83) = {0.003309, -0.747430, 0, 1.0};
Point(84) = {0.007167, -0.746709, 0, 1.0};
Point(85) = {0.010705, -0.745917, 0, 1.0};
Point(86) = {0.013892, -0.745064, 0, 1.0};
Point(87) = {0.016702, -0.744155, 0, 1.0};
Point(88) = {0.019115, -0.743203, 0, 1.0};
Point(89) = {0.021116, -0.742223, 0, 1.0};
Point(90) = {0.022701, -0.741232, 0, 1.0};
Point(91) = {0.023863, -0.740253, 0, 1.0};
Point(92) = {0.024606, -0.739311, 0, 1.0};
Point(93) = {0.024954, -0.738444, 0, 1.0};
Point(94) = {0.024923, -0.737762, 0, 1.0};
Point(95) = {0.024377, -0.737318, 0, 1.0};
Point(96) = {0.023233, -0.737041, 0, 1.0};
Point(97) = {0.021558, -0.736891, 0, 1.0};
Point(98) = {0.019370, -0.736873, 0, 1.0};
Point(99) = {0.016687, -0.736985, 0, 1.0};
Point(100) = {0.013533, -0.737219, 0, 1.0};
Point(101) = {0.009939, -0.737564, 0, 1.0};
Point(102) = {0.005940, -0.738014, 0, 1.0};
Point(103) = {0.001576, -0.738552, 0, 1.0};
Point(104) = {-0.003107, -0.739169, 0, 1.0};
Point(105) = {-0.008060, -0.739848, 0, 1.0};
Point(106) = {-0.013229, -0.740575, 0, 1.0};
Point(107) = {-0.018559, -0.741331, 0, 1.0};
Point(108) = {-0.023986, -0.742100, 0, 1.0};
Point(109) = {-0.029451, -0.742865, 0, 1.0};
Point(110) = {-0.034887, -0.743607, 0, 1.0};
Point(111) = {-0.040229, -0.744311, 0, 1.0};
Point(112) = {-0.045413, -0.744962, 0, 1.0};
Point(113) = {-0.050369, -0.745544, 0, 1.0};
Point(114) = {-0.055033, -0.746043, 0, 1.0};
Point(115) = {-0.059339, -0.746452, 0, 1.0};
Point(116) = {-0.063222, -0.746758, 0, 1.0};
Point(117) = {-0.066615, -0.746960, 0, 1.0};
Point(118) = {-0.069450, -0.747072, 0, 1.0};
Point(119) = {-0.071684, -0.747124, 0, 1.0};
Point(120) = {-0.073292, -0.747142, 0, 1.0};
Point(121) = {-0.074261, -0.747142, 0, 1.0};
Point(122) = {-0.074586, -0.747140, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
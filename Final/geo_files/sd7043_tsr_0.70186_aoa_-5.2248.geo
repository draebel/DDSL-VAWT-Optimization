SetFactory("OpenCASCADE");

Point(1) = {0.149169, 0.744281, 0, 1.0};
Point(2) = {0.148525, 0.744314, 0, 1.0};
Point(3) = {0.146617, 0.744431, 0, 1.0};
Point(4) = {0.143514, 0.744669, 0, 1.0};
Point(5) = {0.139301, 0.745041, 0, 1.0};
Point(6) = {0.134079, 0.745542, 0, 1.0};
Point(7) = {0.127955, 0.746150, 0, 1.0};
Point(8) = {0.121035, 0.746835, 0, 1.0};
Point(9) = {0.113425, 0.747551, 0, 1.0};
Point(10) = {0.105227, 0.748254, 0, 1.0};
Point(11) = {0.096539, 0.748887, 0, 1.0};
Point(12) = {0.087446, 0.749405, 0, 1.0};
Point(13) = {0.078023, 0.749773, 0, 1.0};
Point(14) = {0.068353, 0.749975, 0, 1.0};
Point(15) = {0.058526, 0.750000, 0, 1.0};
Point(16) = {0.048643, 0.749843, 0, 1.0};
Point(17) = {0.038800, 0.749492, 0, 1.0};
Point(18) = {0.029090, 0.748943, 0, 1.0};
Point(19) = {0.019604, 0.748198, 0, 1.0};
Point(20) = {0.010433, 0.747263, 0, 1.0};
Point(21) = {0.001664, 0.746146, 0, 1.0};
Point(22) = {-0.006617, 0.744861, 0, 1.0};
Point(23) = {-0.014334, 0.743418, 0, 1.0};
Point(24) = {-0.021409, 0.741835, 0, 1.0};
Point(25) = {-0.027784, 0.740127, 0, 1.0};
Point(26) = {-0.033404, 0.738310, 0, 1.0};
Point(27) = {-0.038231, 0.736407, 0, 1.0};
Point(28) = {-0.042233, 0.734446, 0, 1.0};
Point(29) = {-0.045401, 0.732463, 0, 1.0};
Point(30) = {-0.047727, 0.730505, 0, 1.0};
Point(31) = {-0.049211, 0.728622, 0, 1.0};
Point(32) = {-0.049908, 0.726888, 0, 1.0};
Point(33) = {-0.049846, 0.725524, 0, 1.0};
Point(34) = {-0.048754, 0.724635, 0, 1.0};
Point(35) = {-0.046466, 0.724081, 0, 1.0};
Point(36) = {-0.043115, 0.723781, 0, 1.0};
Point(37) = {-0.038740, 0.723746, 0, 1.0};
Point(38) = {-0.033374, 0.723969, 0, 1.0};
Point(39) = {-0.027066, 0.724437, 0, 1.0};
Point(40) = {-0.019877, 0.725129, 0, 1.0};
Point(41) = {-0.011880, 0.726027, 0, 1.0};
Point(42) = {-0.003152, 0.727104, 0, 1.0};
Point(43) = {0.006215, 0.728338, 0, 1.0};
Point(44) = {0.016120, 0.729696, 0, 1.0};
Point(45) = {0.026459, 0.731150, 0, 1.0};
Point(46) = {0.037117, 0.732662, 0, 1.0};
Point(47) = {0.047973, 0.734199, 0, 1.0};
Point(48) = {0.058903, 0.735729, 0, 1.0};
Point(49) = {0.069775, 0.737213, 0, 1.0};
Point(50) = {0.080459, 0.738622, 0, 1.0};
Point(51) = {0.090825, 0.739923, 0, 1.0};
Point(52) = {0.100739, 0.741087, 0, 1.0};
Point(53) = {0.110066, 0.742087, 0, 1.0};
Point(54) = {0.118678, 0.742904, 0, 1.0};
Point(55) = {0.126444, 0.743516, 0, 1.0};
Point(56) = {0.133230, 0.743920, 0, 1.0};
Point(57) = {0.138901, 0.744145, 0, 1.0};
Point(58) = {0.143368, 0.744248, 0, 1.0};
Point(59) = {0.146584, 0.744283, 0, 1.0};
Point(60) = {0.148522, 0.744284, 0, 1.0};
Point(61) = {0.149171, 0.744281, 0, 1.0};
Point(62) = {-0.149169, -0.744281, 0, 1.0};
Point(63) = {-0.148525, -0.744314, 0, 1.0};
Point(64) = {-0.146617, -0.744431, 0, 1.0};
Point(65) = {-0.143514, -0.744669, 0, 1.0};
Point(66) = {-0.139301, -0.745041, 0, 1.0};
Point(67) = {-0.134079, -0.745542, 0, 1.0};
Point(68) = {-0.127955, -0.746150, 0, 1.0};
Point(69) = {-0.121035, -0.746835, 0, 1.0};
Point(70) = {-0.113425, -0.747551, 0, 1.0};
Point(71) = {-0.105227, -0.748254, 0, 1.0};
Point(72) = {-0.096539, -0.748887, 0, 1.0};
Point(73) = {-0.087446, -0.749405, 0, 1.0};
Point(74) = {-0.078023, -0.749773, 0, 1.0};
Point(75) = {-0.068353, -0.749975, 0, 1.0};
Point(76) = {-0.058526, -0.750000, 0, 1.0};
Point(77) = {-0.048643, -0.749843, 0, 1.0};
Point(78) = {-0.038800, -0.749492, 0, 1.0};
Point(79) = {-0.029090, -0.748943, 0, 1.0};
Point(80) = {-0.019604, -0.748198, 0, 1.0};
Point(81) = {-0.010433, -0.747263, 0, 1.0};
Point(82) = {-0.001664, -0.746146, 0, 1.0};
Point(83) = {0.006617, -0.744861, 0, 1.0};
Point(84) = {0.014334, -0.743418, 0, 1.0};
Point(85) = {0.021409, -0.741835, 0, 1.0};
Point(86) = {0.027784, -0.740127, 0, 1.0};
Point(87) = {0.033404, -0.738310, 0, 1.0};
Point(88) = {0.038231, -0.736407, 0, 1.0};
Point(89) = {0.042233, -0.734446, 0, 1.0};
Point(90) = {0.045401, -0.732463, 0, 1.0};
Point(91) = {0.047727, -0.730505, 0, 1.0};
Point(92) = {0.049211, -0.728622, 0, 1.0};
Point(93) = {0.049908, -0.726888, 0, 1.0};
Point(94) = {0.049846, -0.725524, 0, 1.0};
Point(95) = {0.048754, -0.724635, 0, 1.0};
Point(96) = {0.046466, -0.724081, 0, 1.0};
Point(97) = {0.043115, -0.723781, 0, 1.0};
Point(98) = {0.038740, -0.723746, 0, 1.0};
Point(99) = {0.033374, -0.723969, 0, 1.0};
Point(100) = {0.027066, -0.724437, 0, 1.0};
Point(101) = {0.019877, -0.725129, 0, 1.0};
Point(102) = {0.011880, -0.726027, 0, 1.0};
Point(103) = {0.003152, -0.727104, 0, 1.0};
Point(104) = {-0.006215, -0.728338, 0, 1.0};
Point(105) = {-0.016120, -0.729696, 0, 1.0};
Point(106) = {-0.026459, -0.731150, 0, 1.0};
Point(107) = {-0.037117, -0.732662, 0, 1.0};
Point(108) = {-0.047973, -0.734199, 0, 1.0};
Point(109) = {-0.058903, -0.735729, 0, 1.0};
Point(110) = {-0.069775, -0.737213, 0, 1.0};
Point(111) = {-0.080459, -0.738622, 0, 1.0};
Point(112) = {-0.090825, -0.739923, 0, 1.0};
Point(113) = {-0.100739, -0.741087, 0, 1.0};
Point(114) = {-0.110066, -0.742087, 0, 1.0};
Point(115) = {-0.118678, -0.742904, 0, 1.0};
Point(116) = {-0.126444, -0.743516, 0, 1.0};
Point(117) = {-0.133230, -0.743920, 0, 1.0};
Point(118) = {-0.138901, -0.744145, 0, 1.0};
Point(119) = {-0.143368, -0.744248, 0, 1.0};
Point(120) = {-0.146584, -0.744283, 0, 1.0};
Point(121) = {-0.148522, -0.744284, 0, 1.0};
Point(122) = {-0.149171, -0.744281, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
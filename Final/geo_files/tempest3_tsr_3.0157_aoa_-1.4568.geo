SetFactory("OpenCASCADE");

Point(1) = {0.074955, 0.743690, 0, 1.0};
Point(2) = {0.072658, 0.744002, 0, 1.0};
Point(3) = {0.069545, 0.744418, 0, 1.0};
Point(4) = {0.066337, 0.744834, 0, 1.0};
Point(5) = {0.063098, 0.745239, 0, 1.0};
Point(6) = {0.059846, 0.745631, 0, 1.0};
Point(7) = {0.056584, 0.746008, 0, 1.0};
Point(8) = {0.053316, 0.746372, 0, 1.0};
Point(9) = {0.050042, 0.746722, 0, 1.0};
Point(10) = {0.046767, 0.747059, 0, 1.0};
Point(11) = {0.043491, 0.747381, 0, 1.0};
Point(12) = {0.040218, 0.747688, 0, 1.0};
Point(13) = {0.036947, 0.747979, 0, 1.0};
Point(14) = {0.033680, 0.748253, 0, 1.0};
Point(15) = {0.030414, 0.748508, 0, 1.0};
Point(16) = {0.027148, 0.748743, 0, 1.0};
Point(17) = {0.023880, 0.748959, 0, 1.0};
Point(18) = {0.020608, 0.749155, 0, 1.0};
Point(19) = {0.017334, 0.749332, 0, 1.0};
Point(20) = {0.014055, 0.749490, 0, 1.0};
Point(21) = {0.010777, 0.749628, 0, 1.0};
Point(22) = {0.007500, 0.749747, 0, 1.0};
Point(23) = {0.004230, 0.749846, 0, 1.0};
Point(24) = {0.000969, 0.749922, 0, 1.0};
Point(25) = {-0.002281, 0.749974, 0, 1.0};
Point(26) = {-0.005520, 0.750000, 0, 1.0};
Point(27) = {-0.008752, 0.749998, 0, 1.0};
Point(28) = {-0.011976, 0.749966, 0, 1.0};
Point(29) = {-0.015203, 0.749903, 0, 1.0};
Point(30) = {-0.018428, 0.749812, 0, 1.0};
Point(31) = {-0.021651, 0.749691, 0, 1.0};
Point(32) = {-0.024870, 0.749541, 0, 1.0};
Point(33) = {-0.028084, 0.749361, 0, 1.0};
Point(34) = {-0.031290, 0.749151, 0, 1.0};
Point(35) = {-0.034484, 0.748910, 0, 1.0};
Point(36) = {-0.037663, 0.748636, 0, 1.0};
Point(37) = {-0.040821, 0.748330, 0, 1.0};
Point(38) = {-0.043949, 0.747989, 0, 1.0};
Point(39) = {-0.047041, 0.747610, 0, 1.0};
Point(40) = {-0.050092, 0.747189, 0, 1.0};
Point(41) = {-0.053104, 0.746721, 0, 1.0};
Point(42) = {-0.056057, 0.746210, 0, 1.0};
Point(43) = {-0.058922, 0.745655, 0, 1.0};
Point(44) = {-0.061655, 0.745060, 0, 1.0};
Point(45) = {-0.064196, 0.744433, 0, 1.0};
Point(46) = {-0.066480, 0.743788, 0, 1.0};
Point(47) = {-0.068435, 0.743156, 0, 1.0};
Point(48) = {-0.070026, 0.742567, 0, 1.0};
Point(49) = {-0.071274, 0.742043, 0, 1.0};
Point(50) = {-0.072238, 0.741582, 0, 1.0};
Point(51) = {-0.072986, 0.741177, 0, 1.0};
Point(52) = {-0.073571, 0.740813, 0, 1.0};
Point(53) = {-0.074031, 0.740482, 0, 1.0};
Point(54) = {-0.074390, 0.740173, 0, 1.0};
Point(55) = {-0.074660, 0.739879, 0, 1.0};
Point(56) = {-0.074846, 0.739598, 0, 1.0};
Point(57) = {-0.074951, 0.739329, 0, 1.0};
Point(58) = {-0.074976, 0.739075, 0, 1.0};
Point(59) = {-0.074921, 0.738825, 0, 1.0};
Point(60) = {-0.074780, 0.738568, 0, 1.0};
Point(61) = {-0.074551, 0.738315, 0, 1.0};
Point(62) = {-0.074230, 0.738065, 0, 1.0};
Point(63) = {-0.073816, 0.737814, 0, 1.0};
Point(64) = {-0.073296, 0.737555, 0, 1.0};
Point(65) = {-0.072644, 0.737283, 0, 1.0};
Point(66) = {-0.071821, 0.736989, 0, 1.0};
Point(67) = {-0.070771, 0.736670, 0, 1.0};
Point(68) = {-0.069428, 0.736326, 0, 1.0};
Point(69) = {-0.067733, 0.735968, 0, 1.0};
Point(70) = {-0.065668, 0.735621, 0, 1.0};
Point(71) = {-0.063266, 0.735306, 0, 1.0};
Point(72) = {-0.060592, 0.735037, 0, 1.0};
Point(73) = {-0.057713, 0.734813, 0, 1.0};
Point(74) = {-0.054692, 0.734627, 0, 1.0};
Point(75) = {-0.051588, 0.734475, 0, 1.0};
Point(76) = {-0.048429, 0.734353, 0, 1.0};
Point(77) = {-0.045240, 0.734257, 0, 1.0};
Point(78) = {-0.042027, 0.734187, 0, 1.0};
Point(79) = {-0.038794, 0.734141, 0, 1.0};
Point(80) = {-0.035545, 0.734116, 0, 1.0};
Point(81) = {-0.032283, 0.734111, 0, 1.0};
Point(82) = {-0.029012, 0.734125, 0, 1.0};
Point(83) = {-0.025736, 0.734156, 0, 1.0};
Point(84) = {-0.022456, 0.734205, 0, 1.0};
Point(85) = {-0.019177, 0.734271, 0, 1.0};
Point(86) = {-0.015895, 0.734354, 0, 1.0};
Point(87) = {-0.012614, 0.734453, 0, 1.0};
Point(88) = {-0.009331, 0.734570, 0, 1.0};
Point(89) = {-0.006049, 0.734702, 0, 1.0};
Point(90) = {-0.002763, 0.734852, 0, 1.0};
Point(91) = {0.000526, 0.735017, 0, 1.0};
Point(92) = {0.003821, 0.735198, 0, 1.0};
Point(93) = {0.007121, 0.735393, 0, 1.0};
Point(94) = {0.010424, 0.735602, 0, 1.0};
Point(95) = {0.013734, 0.735823, 0, 1.0};
Point(96) = {0.017044, 0.736056, 0, 1.0};
Point(97) = {0.020354, 0.736300, 0, 1.0};
Point(98) = {0.023661, 0.736554, 0, 1.0};
Point(99) = {0.026964, 0.736820, 0, 1.0};
Point(100) = {0.030261, 0.737097, 0, 1.0};
Point(101) = {0.033552, 0.737387, 0, 1.0};
Point(102) = {0.036839, 0.737690, 0, 1.0};
Point(103) = {0.040123, 0.738007, 0, 1.0};
Point(104) = {0.043407, 0.738338, 0, 1.0};
Point(105) = {0.046691, 0.738683, 0, 1.0};
Point(106) = {0.049975, 0.739041, 0, 1.0};
Point(107) = {0.053257, 0.739412, 0, 1.0};
Point(108) = {0.056536, 0.739795, 0, 1.0};
Point(109) = {0.059808, 0.740191, 0, 1.0};
Point(110) = {0.063069, 0.740598, 0, 1.0};
Point(111) = {0.066314, 0.741019, 0, 1.0};
Point(112) = {0.069527, 0.741450, 0, 1.0};
Point(113) = {0.072644, 0.741881, 0, 1.0};
Point(114) = {0.074993, 0.742208, 0, 1.0};
Point(115) = {-0.074955, -0.743690, 0, 1.0};
Point(116) = {-0.072658, -0.744002, 0, 1.0};
Point(117) = {-0.069545, -0.744418, 0, 1.0};
Point(118) = {-0.066337, -0.744834, 0, 1.0};
Point(119) = {-0.063098, -0.745239, 0, 1.0};
Point(120) = {-0.059846, -0.745631, 0, 1.0};
Point(121) = {-0.056584, -0.746008, 0, 1.0};
Point(122) = {-0.053316, -0.746372, 0, 1.0};
Point(123) = {-0.050042, -0.746722, 0, 1.0};
Point(124) = {-0.046767, -0.747059, 0, 1.0};
Point(125) = {-0.043491, -0.747381, 0, 1.0};
Point(126) = {-0.040218, -0.747688, 0, 1.0};
Point(127) = {-0.036947, -0.747979, 0, 1.0};
Point(128) = {-0.033680, -0.748253, 0, 1.0};
Point(129) = {-0.030414, -0.748508, 0, 1.0};
Point(130) = {-0.027148, -0.748743, 0, 1.0};
Point(131) = {-0.023880, -0.748959, 0, 1.0};
Point(132) = {-0.020608, -0.749155, 0, 1.0};
Point(133) = {-0.017334, -0.749332, 0, 1.0};
Point(134) = {-0.014055, -0.749490, 0, 1.0};
Point(135) = {-0.010777, -0.749628, 0, 1.0};
Point(136) = {-0.007500, -0.749747, 0, 1.0};
Point(137) = {-0.004230, -0.749846, 0, 1.0};
Point(138) = {-0.000969, -0.749922, 0, 1.0};
Point(139) = {0.002281, -0.749974, 0, 1.0};
Point(140) = {0.005520, -0.750000, 0, 1.0};
Point(141) = {0.008752, -0.749998, 0, 1.0};
Point(142) = {0.011976, -0.749966, 0, 1.0};
Point(143) = {0.015203, -0.749903, 0, 1.0};
Point(144) = {0.018428, -0.749812, 0, 1.0};
Point(145) = {0.021651, -0.749691, 0, 1.0};
Point(146) = {0.024870, -0.749541, 0, 1.0};
Point(147) = {0.028084, -0.749361, 0, 1.0};
Point(148) = {0.031290, -0.749151, 0, 1.0};
Point(149) = {0.034484, -0.748910, 0, 1.0};
Point(150) = {0.037663, -0.748636, 0, 1.0};
Point(151) = {0.040821, -0.748330, 0, 1.0};
Point(152) = {0.043949, -0.747989, 0, 1.0};
Point(153) = {0.047041, -0.747610, 0, 1.0};
Point(154) = {0.050092, -0.747189, 0, 1.0};
Point(155) = {0.053104, -0.746721, 0, 1.0};
Point(156) = {0.056057, -0.746210, 0, 1.0};
Point(157) = {0.058922, -0.745655, 0, 1.0};
Point(158) = {0.061655, -0.745060, 0, 1.0};
Point(159) = {0.064196, -0.744433, 0, 1.0};
Point(160) = {0.066480, -0.743788, 0, 1.0};
Point(161) = {0.068435, -0.743156, 0, 1.0};
Point(162) = {0.070026, -0.742567, 0, 1.0};
Point(163) = {0.071274, -0.742043, 0, 1.0};
Point(164) = {0.072238, -0.741582, 0, 1.0};
Point(165) = {0.072986, -0.741177, 0, 1.0};
Point(166) = {0.073571, -0.740813, 0, 1.0};
Point(167) = {0.074031, -0.740482, 0, 1.0};
Point(168) = {0.074390, -0.740173, 0, 1.0};
Point(169) = {0.074660, -0.739879, 0, 1.0};
Point(170) = {0.074846, -0.739598, 0, 1.0};
Point(171) = {0.074951, -0.739329, 0, 1.0};
Point(172) = {0.074976, -0.739075, 0, 1.0};
Point(173) = {0.074921, -0.738825, 0, 1.0};
Point(174) = {0.074780, -0.738568, 0, 1.0};
Point(175) = {0.074551, -0.738315, 0, 1.0};
Point(176) = {0.074230, -0.738065, 0, 1.0};
Point(177) = {0.073816, -0.737814, 0, 1.0};
Point(178) = {0.073296, -0.737555, 0, 1.0};
Point(179) = {0.072644, -0.737283, 0, 1.0};
Point(180) = {0.071821, -0.736989, 0, 1.0};
Point(181) = {0.070771, -0.736670, 0, 1.0};
Point(182) = {0.069428, -0.736326, 0, 1.0};
Point(183) = {0.067733, -0.735968, 0, 1.0};
Point(184) = {0.065668, -0.735621, 0, 1.0};
Point(185) = {0.063266, -0.735306, 0, 1.0};
Point(186) = {0.060592, -0.735037, 0, 1.0};
Point(187) = {0.057713, -0.734813, 0, 1.0};
Point(188) = {0.054692, -0.734627, 0, 1.0};
Point(189) = {0.051588, -0.734475, 0, 1.0};
Point(190) = {0.048429, -0.734353, 0, 1.0};
Point(191) = {0.045240, -0.734257, 0, 1.0};
Point(192) = {0.042027, -0.734187, 0, 1.0};
Point(193) = {0.038794, -0.734141, 0, 1.0};
Point(194) = {0.035545, -0.734116, 0, 1.0};
Point(195) = {0.032283, -0.734111, 0, 1.0};
Point(196) = {0.029012, -0.734125, 0, 1.0};
Point(197) = {0.025736, -0.734156, 0, 1.0};
Point(198) = {0.022456, -0.734205, 0, 1.0};
Point(199) = {0.019177, -0.734271, 0, 1.0};
Point(200) = {0.015895, -0.734354, 0, 1.0};
Point(201) = {0.012614, -0.734453, 0, 1.0};
Point(202) = {0.009331, -0.734570, 0, 1.0};
Point(203) = {0.006049, -0.734702, 0, 1.0};
Point(204) = {0.002763, -0.734852, 0, 1.0};
Point(205) = {-0.000526, -0.735017, 0, 1.0};
Point(206) = {-0.003821, -0.735198, 0, 1.0};
Point(207) = {-0.007121, -0.735393, 0, 1.0};
Point(208) = {-0.010424, -0.735602, 0, 1.0};
Point(209) = {-0.013734, -0.735823, 0, 1.0};
Point(210) = {-0.017044, -0.736056, 0, 1.0};
Point(211) = {-0.020354, -0.736300, 0, 1.0};
Point(212) = {-0.023661, -0.736554, 0, 1.0};
Point(213) = {-0.026964, -0.736820, 0, 1.0};
Point(214) = {-0.030261, -0.737097, 0, 1.0};
Point(215) = {-0.033552, -0.737387, 0, 1.0};
Point(216) = {-0.036839, -0.737690, 0, 1.0};
Point(217) = {-0.040123, -0.738007, 0, 1.0};
Point(218) = {-0.043407, -0.738338, 0, 1.0};
Point(219) = {-0.046691, -0.738683, 0, 1.0};
Point(220) = {-0.049975, -0.739041, 0, 1.0};
Point(221) = {-0.053257, -0.739412, 0, 1.0};
Point(222) = {-0.056536, -0.739795, 0, 1.0};
Point(223) = {-0.059808, -0.740191, 0, 1.0};
Point(224) = {-0.063069, -0.740598, 0, 1.0};
Point(225) = {-0.066314, -0.741019, 0, 1.0};
Point(226) = {-0.069527, -0.741450, 0, 1.0};
Point(227) = {-0.072644, -0.741881, 0, 1.0};
Point(228) = {-0.074993, -0.742208, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:35};
Spline(2) = {35:81};
Spline(3) = {81:114};
Spline(4) = {114,1};

// Lines: second blade (splines 5-8)
Spline(5) = {115:149};
Spline(6) = {149:195};
Spline(7) = {195:228};
Spline(8) = {228,115};

// Outer domain (points 20001-4 and lines)
Point(229) = {-13.50000000, -15.00000000, 0, 1.0};
Point(230) = {-13.50000000, 15.00000000, 0, 1.0};
Point(231) = {13.50000000, 15.00000000, 0, 1.0};
Point(232) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {229, 230};
Line(12) = {230, 231};
Line(13) = {231, 232};
Line(14) = {229, 232};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111538, 0.725303, 0, 1.0};
Point(2) = {0.111144, 0.725539, 0, 1.0};
Point(3) = {0.110052, 0.726218, 0, 1.0};
Point(4) = {0.108389, 0.727217, 0, 1.0};
Point(5) = {0.106154, 0.728374, 0, 1.0};
Point(6) = {0.103279, 0.729625, 0, 1.0};
Point(7) = {0.099754, 0.730979, 0, 1.0};
Point(8) = {0.095623, 0.732427, 0, 1.0};
Point(9) = {0.090924, 0.733938, 0, 1.0};
Point(10) = {0.085703, 0.735493, 0, 1.0};
Point(11) = {0.080011, 0.737061, 0, 1.0};
Point(12) = {0.073901, 0.738627, 0, 1.0};
Point(13) = {0.067434, 0.740158, 0, 1.0};
Point(14) = {0.060675, 0.741640, 0, 1.0};
Point(15) = {0.053688, 0.743047, 0, 1.0};
Point(16) = {0.046543, 0.744364, 0, 1.0};
Point(17) = {0.039308, 0.745571, 0, 1.0};
Point(18) = {0.032057, 0.746658, 0, 1.0};
Point(19) = {0.024857, 0.747604, 0, 1.0};
Point(20) = {0.017783, 0.748406, 0, 1.0};
Point(21) = {0.010901, 0.749051, 0, 1.0};
Point(22) = {0.004281, 0.749535, 0, 1.0};
Point(23) = {-0.002015, 0.749851, 0, 1.0};
Point(24) = {-0.007931, 0.750000, 0, 1.0};
Point(25) = {-0.013409, 0.749982, 0, 1.0};
Point(26) = {-0.018400, 0.749805, 0, 1.0};
Point(27) = {-0.022865, 0.749475, 0, 1.0};
Point(28) = {-0.026767, 0.749005, 0, 1.0};
Point(29) = {-0.030075, 0.748414, 0, 1.0};
Point(30) = {-0.032773, 0.747727, 0, 1.0};
Point(31) = {-0.034839, 0.746975, 0, 1.0};
Point(32) = {-0.036274, 0.746200, 0, 1.0};
Point(33) = {-0.037068, 0.745476, 0, 1.0};
Point(34) = {-0.037170, 0.744947, 0, 1.0};
Point(35) = {-0.036456, 0.744601, 0, 1.0};
Point(36) = {-0.034833, 0.744348, 0, 1.0};
Point(37) = {-0.032336, 0.744171, 0, 1.0};
Point(38) = {-0.028968, 0.744059, 0, 1.0};
Point(39) = {-0.024752, 0.743979, 0, 1.0};
Point(40) = {-0.019721, 0.743902, 0, 1.0};
Point(41) = {-0.013931, 0.743800, 0, 1.0};
Point(42) = {-0.007447, 0.743644, 0, 1.0};
Point(43) = {-0.000348, 0.743412, 0, 1.0};
Point(44) = {0.007277, 0.743080, 0, 1.0};
Point(45) = {0.015329, 0.742635, 0, 1.0};
Point(46) = {0.023703, 0.742057, 0, 1.0};
Point(47) = {0.032290, 0.741344, 0, 1.0};
Point(48) = {0.040971, 0.740484, 0, 1.0};
Point(49) = {0.049625, 0.739486, 0, 1.0};
Point(50) = {0.058129, 0.738351, 0, 1.0};
Point(51) = {0.066364, 0.737098, 0, 1.0};
Point(52) = {0.074216, 0.735744, 0, 1.0};
Point(53) = {0.081572, 0.734317, 0, 1.0};
Point(54) = {0.088324, 0.732840, 0, 1.0};
Point(55) = {0.094376, 0.731353, 0, 1.0};
Point(56) = {0.099636, 0.729889, 0, 1.0};
Point(57) = {0.104023, 0.728486, 0, 1.0};
Point(58) = {0.107423, 0.727196, 0, 1.0};
Point(59) = {0.109766, 0.726161, 0, 1.0};
Point(60) = {0.111105, 0.725516, 0, 1.0};
Point(61) = {-0.111538, -0.725303, 0, 1.0};
Point(62) = {-0.111144, -0.725539, 0, 1.0};
Point(63) = {-0.110052, -0.726218, 0, 1.0};
Point(64) = {-0.108389, -0.727217, 0, 1.0};
Point(65) = {-0.106154, -0.728374, 0, 1.0};
Point(66) = {-0.103279, -0.729625, 0, 1.0};
Point(67) = {-0.099754, -0.730979, 0, 1.0};
Point(68) = {-0.095623, -0.732427, 0, 1.0};
Point(69) = {-0.090924, -0.733938, 0, 1.0};
Point(70) = {-0.085703, -0.735493, 0, 1.0};
Point(71) = {-0.080011, -0.737061, 0, 1.0};
Point(72) = {-0.073901, -0.738627, 0, 1.0};
Point(73) = {-0.067434, -0.740158, 0, 1.0};
Point(74) = {-0.060675, -0.741640, 0, 1.0};
Point(75) = {-0.053688, -0.743047, 0, 1.0};
Point(76) = {-0.046543, -0.744364, 0, 1.0};
Point(77) = {-0.039308, -0.745571, 0, 1.0};
Point(78) = {-0.032057, -0.746658, 0, 1.0};
Point(79) = {-0.024857, -0.747604, 0, 1.0};
Point(80) = {-0.017783, -0.748406, 0, 1.0};
Point(81) = {-0.010901, -0.749051, 0, 1.0};
Point(82) = {-0.004281, -0.749535, 0, 1.0};
Point(83) = {0.002015, -0.749851, 0, 1.0};
Point(84) = {0.007931, -0.750000, 0, 1.0};
Point(85) = {0.013409, -0.749982, 0, 1.0};
Point(86) = {0.018400, -0.749805, 0, 1.0};
Point(87) = {0.022865, -0.749475, 0, 1.0};
Point(88) = {0.026767, -0.749005, 0, 1.0};
Point(89) = {0.030075, -0.748414, 0, 1.0};
Point(90) = {0.032773, -0.747727, 0, 1.0};
Point(91) = {0.034839, -0.746975, 0, 1.0};
Point(92) = {0.036274, -0.746200, 0, 1.0};
Point(93) = {0.037068, -0.745476, 0, 1.0};
Point(94) = {0.037170, -0.744947, 0, 1.0};
Point(95) = {0.036456, -0.744601, 0, 1.0};
Point(96) = {0.034833, -0.744348, 0, 1.0};
Point(97) = {0.032336, -0.744171, 0, 1.0};
Point(98) = {0.028968, -0.744059, 0, 1.0};
Point(99) = {0.024752, -0.743979, 0, 1.0};
Point(100) = {0.019721, -0.743902, 0, 1.0};
Point(101) = {0.013931, -0.743800, 0, 1.0};
Point(102) = {0.007447, -0.743644, 0, 1.0};
Point(103) = {0.000348, -0.743412, 0, 1.0};
Point(104) = {-0.007277, -0.743080, 0, 1.0};
Point(105) = {-0.015329, -0.742635, 0, 1.0};
Point(106) = {-0.023703, -0.742057, 0, 1.0};
Point(107) = {-0.032290, -0.741344, 0, 1.0};
Point(108) = {-0.040971, -0.740484, 0, 1.0};
Point(109) = {-0.049625, -0.739486, 0, 1.0};
Point(110) = {-0.058129, -0.738351, 0, 1.0};
Point(111) = {-0.066364, -0.737098, 0, 1.0};
Point(112) = {-0.074216, -0.735744, 0, 1.0};
Point(113) = {-0.081572, -0.734317, 0, 1.0};
Point(114) = {-0.088324, -0.732840, 0, 1.0};
Point(115) = {-0.094376, -0.731353, 0, 1.0};
Point(116) = {-0.099636, -0.729889, 0, 1.0};
Point(117) = {-0.104023, -0.728486, 0, 1.0};
Point(118) = {-0.107423, -0.727196, 0, 1.0};
Point(119) = {-0.109766, -0.726161, 0, 1.0};
Point(120) = {-0.111105, -0.725516, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:82};
Spline(6) = {82:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074136, 0.733470, 0, 1.0};
Point(2) = {0.073747, 0.733568, 0, 1.0};
Point(3) = {0.072655, 0.733916, 0, 1.0};
Point(4) = {0.070991, 0.734543, 0, 1.0};
Point(5) = {0.068860, 0.735406, 0, 1.0};
Point(6) = {0.066333, 0.736446, 0, 1.0};
Point(7) = {0.063458, 0.737598, 0, 1.0};
Point(8) = {0.060275, 0.738790, 0, 1.0};
Point(9) = {0.056780, 0.739948, 0, 1.0};
Point(10) = {0.052949, 0.741060, 0, 1.0};
Point(11) = {0.048803, 0.742143, 0, 1.0};
Point(12) = {0.044395, 0.743196, 0, 1.0};
Point(13) = {0.039770, 0.744209, 0, 1.0};
Point(14) = {0.034980, 0.745174, 0, 1.0};
Point(15) = {0.030079, 0.746079, 0, 1.0};
Point(16) = {0.025118, 0.746915, 0, 1.0};
Point(17) = {0.020152, 0.747668, 0, 1.0};
Point(18) = {0.015232, 0.748330, 0, 1.0};
Point(19) = {0.010412, 0.748891, 0, 1.0};
Point(20) = {0.005739, 0.749345, 0, 1.0};
Point(21) = {0.001263, 0.749684, 0, 1.0};
Point(22) = {-0.002971, 0.749904, 0, 1.0};
Point(23) = {-0.006923, 0.750000, 0, 1.0};
Point(24) = {-0.010555, 0.749973, 0, 1.0};
Point(25) = {-0.013834, 0.749825, 0, 1.0};
Point(26) = {-0.016732, 0.749561, 0, 1.0};
Point(27) = {-0.019224, 0.749189, 0, 1.0};
Point(28) = {-0.021291, 0.748724, 0, 1.0};
Point(29) = {-0.022918, 0.748183, 0, 1.0};
Point(30) = {-0.024092, 0.747593, 0, 1.0};
Point(31) = {-0.024750, 0.747051, 0, 1.0};
Point(32) = {-0.024879, 0.746875, 0, 1.0};
Point(33) = {-0.024966, 0.746707, 0, 1.0};
Point(34) = {-0.024997, 0.746603, 0, 1.0};
Point(35) = {-0.025001, 0.746509, 0, 1.0};
Point(36) = {-0.024970, 0.746417, 0, 1.0};
Point(37) = {-0.024907, 0.746317, 0, 1.0};
Point(38) = {-0.024766, 0.746156, 0, 1.0};
Point(39) = {-0.024574, 0.745983, 0, 1.0};
Point(40) = {-0.023469, 0.745292, 0, 1.0};
Point(41) = {-0.021916, 0.744599, 0, 1.0};
Point(42) = {-0.019858, 0.743876, 0, 1.0};
Point(43) = {-0.017312, 0.743133, 0, 1.0};
Point(44) = {-0.014299, 0.742375, 0, 1.0};
Point(45) = {-0.010852, 0.741603, 0, 1.0};
Point(46) = {-0.007013, 0.740822, 0, 1.0};
Point(47) = {-0.002827, 0.740040, 0, 1.0};
Point(48) = {0.001657, 0.739267, 0, 1.0};
Point(49) = {0.006393, 0.738515, 0, 1.0};
Point(50) = {0.011332, 0.737788, 0, 1.0};
Point(51) = {0.016419, 0.737092, 0, 1.0};
Point(52) = {0.021595, 0.736428, 0, 1.0};
Point(53) = {0.026801, 0.735806, 0, 1.0};
Point(54) = {0.031976, 0.735231, 0, 1.0};
Point(55) = {0.037062, 0.734712, 0, 1.0};
Point(56) = {0.041999, 0.734255, 0, 1.0};
Point(57) = {0.046732, 0.733870, 0, 1.0};
Point(58) = {0.051208, 0.733564, 0, 1.0};
Point(59) = {0.055376, 0.733358, 0, 1.0};
Point(60) = {0.059222, 0.733272, 0, 1.0};
Point(61) = {0.062743, 0.733271, 0, 1.0};
Point(62) = {0.065883, 0.733316, 0, 1.0};
Point(63) = {0.068602, 0.733402, 0, 1.0};
Point(64) = {0.070874, 0.733489, 0, 1.0};
Point(65) = {0.072626, 0.733523, 0, 1.0};
Point(66) = {0.073748, 0.733497, 0, 1.0};
Point(67) = {-0.074136, -0.733470, 0, 1.0};
Point(68) = {-0.073747, -0.733568, 0, 1.0};
Point(69) = {-0.072655, -0.733916, 0, 1.0};
Point(70) = {-0.070991, -0.734543, 0, 1.0};
Point(71) = {-0.068860, -0.735406, 0, 1.0};
Point(72) = {-0.066333, -0.736446, 0, 1.0};
Point(73) = {-0.063458, -0.737598, 0, 1.0};
Point(74) = {-0.060275, -0.738790, 0, 1.0};
Point(75) = {-0.056780, -0.739948, 0, 1.0};
Point(76) = {-0.052949, -0.741060, 0, 1.0};
Point(77) = {-0.048803, -0.742143, 0, 1.0};
Point(78) = {-0.044395, -0.743196, 0, 1.0};
Point(79) = {-0.039770, -0.744209, 0, 1.0};
Point(80) = {-0.034980, -0.745174, 0, 1.0};
Point(81) = {-0.030079, -0.746079, 0, 1.0};
Point(82) = {-0.025118, -0.746915, 0, 1.0};
Point(83) = {-0.020152, -0.747668, 0, 1.0};
Point(84) = {-0.015232, -0.748330, 0, 1.0};
Point(85) = {-0.010412, -0.748891, 0, 1.0};
Point(86) = {-0.005739, -0.749345, 0, 1.0};
Point(87) = {-0.001263, -0.749684, 0, 1.0};
Point(88) = {0.002971, -0.749904, 0, 1.0};
Point(89) = {0.006923, -0.750000, 0, 1.0};
Point(90) = {0.010555, -0.749973, 0, 1.0};
Point(91) = {0.013834, -0.749825, 0, 1.0};
Point(92) = {0.016732, -0.749561, 0, 1.0};
Point(93) = {0.019224, -0.749189, 0, 1.0};
Point(94) = {0.021291, -0.748724, 0, 1.0};
Point(95) = {0.022918, -0.748183, 0, 1.0};
Point(96) = {0.024092, -0.747593, 0, 1.0};
Point(97) = {0.024750, -0.747051, 0, 1.0};
Point(98) = {0.024879, -0.746875, 0, 1.0};
Point(99) = {0.024966, -0.746707, 0, 1.0};
Point(100) = {0.024997, -0.746603, 0, 1.0};
Point(101) = {0.025001, -0.746509, 0, 1.0};
Point(102) = {0.024970, -0.746417, 0, 1.0};
Point(103) = {0.024907, -0.746317, 0, 1.0};
Point(104) = {0.024766, -0.746156, 0, 1.0};
Point(105) = {0.024574, -0.745983, 0, 1.0};
Point(106) = {0.023469, -0.745292, 0, 1.0};
Point(107) = {0.021916, -0.744599, 0, 1.0};
Point(108) = {0.019858, -0.743876, 0, 1.0};
Point(109) = {0.017312, -0.743133, 0, 1.0};
Point(110) = {0.014299, -0.742375, 0, 1.0};
Point(111) = {0.010852, -0.741603, 0, 1.0};
Point(112) = {0.007013, -0.740822, 0, 1.0};
Point(113) = {0.002827, -0.740040, 0, 1.0};
Point(114) = {-0.001657, -0.739267, 0, 1.0};
Point(115) = {-0.006393, -0.738515, 0, 1.0};
Point(116) = {-0.011332, -0.737788, 0, 1.0};
Point(117) = {-0.016419, -0.737092, 0, 1.0};
Point(118) = {-0.021595, -0.736428, 0, 1.0};
Point(119) = {-0.026801, -0.735806, 0, 1.0};
Point(120) = {-0.031976, -0.735231, 0, 1.0};
Point(121) = {-0.037062, -0.734712, 0, 1.0};
Point(122) = {-0.041999, -0.734255, 0, 1.0};
Point(123) = {-0.046732, -0.733870, 0, 1.0};
Point(124) = {-0.051208, -0.733564, 0, 1.0};
Point(125) = {-0.055376, -0.733358, 0, 1.0};
Point(126) = {-0.059222, -0.733272, 0, 1.0};
Point(127) = {-0.062743, -0.733271, 0, 1.0};
Point(128) = {-0.065883, -0.733316, 0, 1.0};
Point(129) = {-0.068602, -0.733402, 0, 1.0};
Point(130) = {-0.070874, -0.733489, 0, 1.0};
Point(131) = {-0.072626, -0.733523, 0, 1.0};
Point(132) = {-0.073748, -0.733497, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
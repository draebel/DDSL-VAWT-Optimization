SetFactory("OpenCASCADE");

Point(1) = {0.074349, 0.725205, 0, 1.0};
Point(2) = {0.073766, 0.725352, 0, 1.0};
Point(3) = {0.072127, 0.725875, 0, 1.0};
Point(4) = {0.069632, 0.726815, 0, 1.0};
Point(5) = {0.066435, 0.728109, 0, 1.0};
Point(6) = {0.062643, 0.729669, 0, 1.0};
Point(7) = {0.058332, 0.731396, 0, 1.0};
Point(8) = {0.053557, 0.733184, 0, 1.0};
Point(9) = {0.048315, 0.734923, 0, 1.0};
Point(10) = {0.042568, 0.736590, 0, 1.0};
Point(11) = {0.036349, 0.738214, 0, 1.0};
Point(12) = {0.029737, 0.739794, 0, 1.0};
Point(13) = {0.022800, 0.741313, 0, 1.0};
Point(14) = {0.015615, 0.742761, 0, 1.0};
Point(15) = {0.008262, 0.744119, 0, 1.0};
Point(16) = {0.000822, 0.745372, 0, 1.0};
Point(17) = {-0.006628, 0.746501, 0, 1.0};
Point(18) = {-0.014007, 0.747495, 0, 1.0};
Point(19) = {-0.021238, 0.748337, 0, 1.0};
Point(20) = {-0.028247, 0.749018, 0, 1.0};
Point(21) = {-0.034961, 0.749526, 0, 1.0};
Point(22) = {-0.041313, 0.749855, 0, 1.0};
Point(23) = {-0.047240, 0.750000, 0, 1.0};
Point(24) = {-0.052689, 0.749960, 0, 1.0};
Point(25) = {-0.057607, 0.749737, 0, 1.0};
Point(26) = {-0.061954, 0.749342, 0, 1.0};
Point(27) = {-0.065692, 0.748784, 0, 1.0};
Point(28) = {-0.068793, 0.748086, 0, 1.0};
Point(29) = {-0.071233, 0.747274, 0, 1.0};
Point(30) = {-0.072994, 0.746390, 0, 1.0};
Point(31) = {-0.073980, 0.745576, 0, 1.0};
Point(32) = {-0.074175, 0.745312, 0, 1.0};
Point(33) = {-0.074305, 0.745061, 0, 1.0};
Point(34) = {-0.074352, 0.744905, 0, 1.0};
Point(35) = {-0.074358, 0.744764, 0, 1.0};
Point(36) = {-0.074311, 0.744625, 0, 1.0};
Point(37) = {-0.074217, 0.744476, 0, 1.0};
Point(38) = {-0.074005, 0.744234, 0, 1.0};
Point(39) = {-0.073717, 0.743974, 0, 1.0};
Point(40) = {-0.072060, 0.742937, 0, 1.0};
Point(41) = {-0.069730, 0.741899, 0, 1.0};
Point(42) = {-0.066643, 0.740814, 0, 1.0};
Point(43) = {-0.062824, 0.739699, 0, 1.0};
Point(44) = {-0.058305, 0.738562, 0, 1.0};
Point(45) = {-0.053134, 0.737404, 0, 1.0};
Point(46) = {-0.047376, 0.736233, 0, 1.0};
Point(47) = {-0.041097, 0.735060, 0, 1.0};
Point(48) = {-0.034370, 0.733901, 0, 1.0};
Point(49) = {-0.027266, 0.732773, 0, 1.0};
Point(50) = {-0.019859, 0.731683, 0, 1.0};
Point(51) = {-0.012228, 0.730637, 0, 1.0};
Point(52) = {-0.004463, 0.729642, 0, 1.0};
Point(53) = {0.003346, 0.728710, 0, 1.0};
Point(54) = {0.011109, 0.727847, 0, 1.0};
Point(55) = {0.018737, 0.727068, 0, 1.0};
Point(56) = {0.026143, 0.726382, 0, 1.0};
Point(57) = {0.033242, 0.725805, 0, 1.0};
Point(58) = {0.039956, 0.725346, 0, 1.0};
Point(59) = {0.046208, 0.725037, 0, 1.0};
Point(60) = {0.051977, 0.724907, 0, 1.0};
Point(61) = {0.057259, 0.724906, 0, 1.0};
Point(62) = {0.061969, 0.724974, 0, 1.0};
Point(63) = {0.066047, 0.725103, 0, 1.0};
Point(64) = {0.069455, 0.725233, 0, 1.0};
Point(65) = {0.072083, 0.725285, 0, 1.0};
Point(66) = {0.073766, 0.725245, 0, 1.0};
Point(67) = {-0.074349, -0.725205, 0, 1.0};
Point(68) = {-0.073766, -0.725352, 0, 1.0};
Point(69) = {-0.072127, -0.725875, 0, 1.0};
Point(70) = {-0.069632, -0.726815, 0, 1.0};
Point(71) = {-0.066435, -0.728109, 0, 1.0};
Point(72) = {-0.062643, -0.729669, 0, 1.0};
Point(73) = {-0.058332, -0.731396, 0, 1.0};
Point(74) = {-0.053557, -0.733184, 0, 1.0};
Point(75) = {-0.048315, -0.734923, 0, 1.0};
Point(76) = {-0.042568, -0.736590, 0, 1.0};
Point(77) = {-0.036349, -0.738214, 0, 1.0};
Point(78) = {-0.029737, -0.739794, 0, 1.0};
Point(79) = {-0.022800, -0.741313, 0, 1.0};
Point(80) = {-0.015615, -0.742761, 0, 1.0};
Point(81) = {-0.008262, -0.744119, 0, 1.0};
Point(82) = {-0.000822, -0.745372, 0, 1.0};
Point(83) = {0.006628, -0.746501, 0, 1.0};
Point(84) = {0.014007, -0.747495, 0, 1.0};
Point(85) = {0.021238, -0.748337, 0, 1.0};
Point(86) = {0.028247, -0.749018, 0, 1.0};
Point(87) = {0.034961, -0.749526, 0, 1.0};
Point(88) = {0.041313, -0.749855, 0, 1.0};
Point(89) = {0.047240, -0.750000, 0, 1.0};
Point(90) = {0.052689, -0.749960, 0, 1.0};
Point(91) = {0.057607, -0.749737, 0, 1.0};
Point(92) = {0.061954, -0.749342, 0, 1.0};
Point(93) = {0.065692, -0.748784, 0, 1.0};
Point(94) = {0.068793, -0.748086, 0, 1.0};
Point(95) = {0.071233, -0.747274, 0, 1.0};
Point(96) = {0.072994, -0.746390, 0, 1.0};
Point(97) = {0.073980, -0.745576, 0, 1.0};
Point(98) = {0.074175, -0.745312, 0, 1.0};
Point(99) = {0.074305, -0.745061, 0, 1.0};
Point(100) = {0.074352, -0.744905, 0, 1.0};
Point(101) = {0.074358, -0.744764, 0, 1.0};
Point(102) = {0.074311, -0.744625, 0, 1.0};
Point(103) = {0.074217, -0.744476, 0, 1.0};
Point(104) = {0.074005, -0.744234, 0, 1.0};
Point(105) = {0.073717, -0.743974, 0, 1.0};
Point(106) = {0.072060, -0.742937, 0, 1.0};
Point(107) = {0.069730, -0.741899, 0, 1.0};
Point(108) = {0.066643, -0.740814, 0, 1.0};
Point(109) = {0.062824, -0.739699, 0, 1.0};
Point(110) = {0.058305, -0.738562, 0, 1.0};
Point(111) = {0.053134, -0.737404, 0, 1.0};
Point(112) = {0.047376, -0.736233, 0, 1.0};
Point(113) = {0.041097, -0.735060, 0, 1.0};
Point(114) = {0.034370, -0.733901, 0, 1.0};
Point(115) = {0.027266, -0.732773, 0, 1.0};
Point(116) = {0.019859, -0.731683, 0, 1.0};
Point(117) = {0.012228, -0.730637, 0, 1.0};
Point(118) = {0.004463, -0.729642, 0, 1.0};
Point(119) = {-0.003346, -0.728710, 0, 1.0};
Point(120) = {-0.011109, -0.727847, 0, 1.0};
Point(121) = {-0.018737, -0.727068, 0, 1.0};
Point(122) = {-0.026143, -0.726382, 0, 1.0};
Point(123) = {-0.033242, -0.725805, 0, 1.0};
Point(124) = {-0.039956, -0.725346, 0, 1.0};
Point(125) = {-0.046208, -0.725037, 0, 1.0};
Point(126) = {-0.051977, -0.724907, 0, 1.0};
Point(127) = {-0.057259, -0.724906, 0, 1.0};
Point(128) = {-0.061969, -0.724974, 0, 1.0};
Point(129) = {-0.066047, -0.725103, 0, 1.0};
Point(130) = {-0.069455, -0.725233, 0, 1.0};
Point(131) = {-0.072083, -0.725285, 0, 1.0};
Point(132) = {-0.073766, -0.725245, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.148272, 0.716940, 0, 1.0};
Point(2) = {0.147495, 0.717137, 0, 1.0};
Point(3) = {0.145310, 0.717833, 0, 1.0};
Point(4) = {0.141983, 0.719087, 0, 1.0};
Point(5) = {0.137721, 0.720813, 0, 1.0};
Point(6) = {0.132665, 0.722892, 0, 1.0};
Point(7) = {0.126916, 0.725195, 0, 1.0};
Point(8) = {0.120551, 0.727579, 0, 1.0};
Point(9) = {0.113561, 0.729897, 0, 1.0};
Point(10) = {0.105898, 0.732120, 0, 1.0};
Point(11) = {0.097606, 0.734286, 0, 1.0};
Point(12) = {0.088790, 0.736392, 0, 1.0};
Point(13) = {0.079541, 0.738418, 0, 1.0};
Point(14) = {0.069961, 0.740348, 0, 1.0};
Point(15) = {0.060158, 0.742159, 0, 1.0};
Point(16) = {0.050237, 0.743829, 0, 1.0};
Point(17) = {0.040304, 0.745335, 0, 1.0};
Point(18) = {0.030465, 0.746660, 0, 1.0};
Point(19) = {0.020823, 0.747783, 0, 1.0};
Point(20) = {0.011479, 0.748690, 0, 1.0};
Point(21) = {0.002527, 0.749367, 0, 1.0};
Point(22) = {-0.005943, 0.749807, 0, 1.0};
Point(23) = {-0.013846, 0.750000, 0, 1.0};
Point(24) = {-0.021110, 0.749946, 0, 1.0};
Point(25) = {-0.027668, 0.749650, 0, 1.0};
Point(26) = {-0.033464, 0.749122, 0, 1.0};
Point(27) = {-0.038448, 0.748379, 0, 1.0};
Point(28) = {-0.042583, 0.747447, 0, 1.0};
Point(29) = {-0.045835, 0.746365, 0, 1.0};
Point(30) = {-0.048183, 0.745187, 0, 1.0};
Point(31) = {-0.049499, 0.744102, 0, 1.0};
Point(32) = {-0.049758, 0.743749, 0, 1.0};
Point(33) = {-0.049932, 0.743415, 0, 1.0};
Point(34) = {-0.049995, 0.743207, 0, 1.0};
Point(35) = {-0.050002, 0.743019, 0, 1.0};
Point(36) = {-0.049941, 0.742834, 0, 1.0};
Point(37) = {-0.049814, 0.742634, 0, 1.0};
Point(38) = {-0.049532, 0.742313, 0, 1.0};
Point(39) = {-0.049148, 0.741965, 0, 1.0};
Point(40) = {-0.046939, 0.740583, 0, 1.0};
Point(41) = {-0.043831, 0.739198, 0, 1.0};
Point(42) = {-0.039716, 0.737752, 0, 1.0};
Point(43) = {-0.034624, 0.736266, 0, 1.0};
Point(44) = {-0.028598, 0.734750, 0, 1.0};
Point(45) = {-0.021704, 0.733206, 0, 1.0};
Point(46) = {-0.014027, 0.731644, 0, 1.0};
Point(47) = {-0.005655, 0.730080, 0, 1.0};
Point(48) = {0.003314, 0.728535, 0, 1.0};
Point(49) = {0.012786, 0.727030, 0, 1.0};
Point(50) = {0.022663, 0.725577, 0, 1.0};
Point(51) = {0.032837, 0.724183, 0, 1.0};
Point(52) = {0.043190, 0.722857, 0, 1.0};
Point(53) = {0.053602, 0.721613, 0, 1.0};
Point(54) = {0.063953, 0.720463, 0, 1.0};
Point(55) = {0.074124, 0.719424, 0, 1.0};
Point(56) = {0.083998, 0.718509, 0, 1.0};
Point(57) = {0.093464, 0.717740, 0, 1.0};
Point(58) = {0.102416, 0.717129, 0, 1.0};
Point(59) = {0.110751, 0.716716, 0, 1.0};
Point(60) = {0.118444, 0.716543, 0, 1.0};
Point(61) = {0.125486, 0.716541, 0, 1.0};
Point(62) = {0.131766, 0.716631, 0, 1.0};
Point(63) = {0.137204, 0.716804, 0, 1.0};
Point(64) = {0.141748, 0.716977, 0, 1.0};
Point(65) = {0.145252, 0.717046, 0, 1.0};
Point(66) = {0.147496, 0.716994, 0, 1.0};
Point(67) = {-0.148272, -0.716940, 0, 1.0};
Point(68) = {-0.147495, -0.717137, 0, 1.0};
Point(69) = {-0.145310, -0.717833, 0, 1.0};
Point(70) = {-0.141983, -0.719087, 0, 1.0};
Point(71) = {-0.137721, -0.720813, 0, 1.0};
Point(72) = {-0.132665, -0.722892, 0, 1.0};
Point(73) = {-0.126916, -0.725195, 0, 1.0};
Point(74) = {-0.120551, -0.727579, 0, 1.0};
Point(75) = {-0.113561, -0.729897, 0, 1.0};
Point(76) = {-0.105898, -0.732120, 0, 1.0};
Point(77) = {-0.097606, -0.734286, 0, 1.0};
Point(78) = {-0.088790, -0.736392, 0, 1.0};
Point(79) = {-0.079541, -0.738418, 0, 1.0};
Point(80) = {-0.069961, -0.740348, 0, 1.0};
Point(81) = {-0.060158, -0.742159, 0, 1.0};
Point(82) = {-0.050237, -0.743829, 0, 1.0};
Point(83) = {-0.040304, -0.745335, 0, 1.0};
Point(84) = {-0.030465, -0.746660, 0, 1.0};
Point(85) = {-0.020823, -0.747783, 0, 1.0};
Point(86) = {-0.011479, -0.748690, 0, 1.0};
Point(87) = {-0.002527, -0.749367, 0, 1.0};
Point(88) = {0.005943, -0.749807, 0, 1.0};
Point(89) = {0.013846, -0.750000, 0, 1.0};
Point(90) = {0.021110, -0.749946, 0, 1.0};
Point(91) = {0.027668, -0.749650, 0, 1.0};
Point(92) = {0.033464, -0.749122, 0, 1.0};
Point(93) = {0.038448, -0.748379, 0, 1.0};
Point(94) = {0.042583, -0.747447, 0, 1.0};
Point(95) = {0.045835, -0.746365, 0, 1.0};
Point(96) = {0.048183, -0.745187, 0, 1.0};
Point(97) = {0.049499, -0.744102, 0, 1.0};
Point(98) = {0.049758, -0.743749, 0, 1.0};
Point(99) = {0.049932, -0.743415, 0, 1.0};
Point(100) = {0.049995, -0.743207, 0, 1.0};
Point(101) = {0.050002, -0.743019, 0, 1.0};
Point(102) = {0.049941, -0.742834, 0, 1.0};
Point(103) = {0.049814, -0.742634, 0, 1.0};
Point(104) = {0.049532, -0.742313, 0, 1.0};
Point(105) = {0.049148, -0.741965, 0, 1.0};
Point(106) = {0.046939, -0.740583, 0, 1.0};
Point(107) = {0.043831, -0.739198, 0, 1.0};
Point(108) = {0.039716, -0.737752, 0, 1.0};
Point(109) = {0.034624, -0.736266, 0, 1.0};
Point(110) = {0.028598, -0.734750, 0, 1.0};
Point(111) = {0.021704, -0.733206, 0, 1.0};
Point(112) = {0.014027, -0.731644, 0, 1.0};
Point(113) = {0.005655, -0.730080, 0, 1.0};
Point(114) = {-0.003314, -0.728535, 0, 1.0};
Point(115) = {-0.012786, -0.727030, 0, 1.0};
Point(116) = {-0.022663, -0.725577, 0, 1.0};
Point(117) = {-0.032837, -0.724183, 0, 1.0};
Point(118) = {-0.043190, -0.722857, 0, 1.0};
Point(119) = {-0.053602, -0.721613, 0, 1.0};
Point(120) = {-0.063953, -0.720463, 0, 1.0};
Point(121) = {-0.074124, -0.719424, 0, 1.0};
Point(122) = {-0.083998, -0.718509, 0, 1.0};
Point(123) = {-0.093464, -0.717740, 0, 1.0};
Point(124) = {-0.102416, -0.717129, 0, 1.0};
Point(125) = {-0.110751, -0.716716, 0, 1.0};
Point(126) = {-0.118444, -0.716543, 0, 1.0};
Point(127) = {-0.125486, -0.716541, 0, 1.0};
Point(128) = {-0.131766, -0.716631, 0, 1.0};
Point(129) = {-0.137204, -0.716804, 0, 1.0};
Point(130) = {-0.141748, -0.716977, 0, 1.0};
Point(131) = {-0.145252, -0.717046, 0, 1.0};
Point(132) = {-0.147496, -0.716994, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
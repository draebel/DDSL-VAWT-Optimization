SetFactory("OpenCASCADE");

Point(1) = {0.149602, 0.722583, 0, 1.0};
Point(2) = {0.148762, 0.722867, 0, 1.0};
Point(3) = {0.146257, 0.723692, 0, 1.0};
Point(4) = {0.142128, 0.725003, 0, 1.0};
Point(5) = {0.136439, 0.726734, 0, 1.0};
Point(6) = {0.129291, 0.728827, 0, 1.0};
Point(7) = {0.120799, 0.731217, 0, 1.0};
Point(8) = {0.111110, 0.733821, 0, 1.0};
Point(9) = {0.100384, 0.736539, 0, 1.0};
Point(10) = {0.088801, 0.739261, 0, 1.0};
Point(11) = {0.076555, 0.741867, 0, 1.0};
Point(12) = {0.063849, 0.744245, 0, 1.0};
Point(13) = {0.050901, 0.746294, 0, 1.0};
Point(14) = {0.037926, 0.747933, 0, 1.0};
Point(15) = {0.025145, 0.749110, 0, 1.0};
Point(16) = {0.018896, 0.749517, 0, 1.0};
Point(17) = {0.012778, 0.749799, 0, 1.0};
Point(18) = {0.006816, 0.749959, 0, 1.0};
Point(19) = {0.001035, 0.750000, 0, 1.0};
Point(20) = {-0.004540, 0.749907, 0, 1.0};
Point(21) = {-0.009884, 0.749662, 0, 1.0};
Point(22) = {-0.014978, 0.749242, 0, 1.0};
Point(23) = {-0.019802, 0.748640, 0, 1.0};
Point(24) = {-0.024334, 0.747872, 0, 1.0};
Point(25) = {-0.028551, 0.746972, 0, 1.0};
Point(26) = {-0.032430, 0.745989, 0, 1.0};
Point(27) = {-0.035958, 0.744957, 0, 1.0};
Point(28) = {-0.039119, 0.743882, 0, 1.0};
Point(29) = {-0.041895, 0.742755, 0, 1.0};
Point(30) = {-0.044282, 0.741553, 0, 1.0};
Point(31) = {-0.046264, 0.740276, 0, 1.0};
Point(32) = {-0.047837, 0.738954, 0, 1.0};
Point(33) = {-0.048988, 0.737646, 0, 1.0};
Point(34) = {-0.049709, 0.736413, 0, 1.0};
Point(35) = {-0.049994, 0.735291, 0, 1.0};
Point(36) = {-0.049844, 0.734280, 0, 1.0};
Point(37) = {-0.049259, 0.733351, 0, 1.0};
Point(38) = {-0.048245, 0.732489, 0, 1.0};
Point(39) = {-0.046807, 0.731687, 0, 1.0};
Point(40) = {-0.044952, 0.730953, 0, 1.0};
Point(41) = {-0.042682, 0.730298, 0, 1.0};
Point(42) = {-0.040013, 0.729729, 0, 1.0};
Point(43) = {-0.036952, 0.729229, 0, 1.0};
Point(44) = {-0.033518, 0.728785, 0, 1.0};
Point(45) = {-0.029726, 0.728379, 0, 1.0};
Point(46) = {-0.025589, 0.728011, 0, 1.0};
Point(47) = {-0.021126, 0.727683, 0, 1.0};
Point(48) = {-0.016359, 0.727396, 0, 1.0};
Point(49) = {-0.011306, 0.727151, 0, 1.0};
Point(50) = {-0.005991, 0.726937, 0, 1.0};
Point(51) = {-0.000434, 0.726748, 0, 1.0};
Point(52) = {0.005338, 0.726572, 0, 1.0};
Point(53) = {0.011299, 0.726398, 0, 1.0};
Point(54) = {0.017424, 0.726225, 0, 1.0};
Point(55) = {0.023688, 0.726048, 0, 1.0};
Point(56) = {0.036520, 0.725686, 0, 1.0};
Point(57) = {0.049575, 0.725313, 0, 1.0};
Point(58) = {0.062629, 0.724941, 0, 1.0};
Point(59) = {0.075462, 0.724573, 0, 1.0};
Point(60) = {0.087850, 0.724219, 0, 1.0};
Point(61) = {0.099584, 0.723884, 0, 1.0};
Point(62) = {0.110462, 0.723572, 0, 1.0};
Point(63) = {0.120298, 0.723283, 0, 1.0};
Point(64) = {0.128925, 0.723030, 0, 1.0};
Point(65) = {0.136192, 0.722825, 0, 1.0};
Point(66) = {0.141981, 0.722684, 0, 1.0};
Point(67) = {0.146189, 0.722611, 0, 1.0};
Point(68) = {0.148744, 0.722587, 0, 1.0};
Point(69) = {-0.149602, -0.722583, 0, 1.0};
Point(70) = {-0.148762, -0.722867, 0, 1.0};
Point(71) = {-0.146257, -0.723692, 0, 1.0};
Point(72) = {-0.142128, -0.725003, 0, 1.0};
Point(73) = {-0.136439, -0.726734, 0, 1.0};
Point(74) = {-0.129291, -0.728827, 0, 1.0};
Point(75) = {-0.120799, -0.731217, 0, 1.0};
Point(76) = {-0.111110, -0.733821, 0, 1.0};
Point(77) = {-0.100384, -0.736539, 0, 1.0};
Point(78) = {-0.088801, -0.739261, 0, 1.0};
Point(79) = {-0.076555, -0.741867, 0, 1.0};
Point(80) = {-0.063849, -0.744245, 0, 1.0};
Point(81) = {-0.050901, -0.746294, 0, 1.0};
Point(82) = {-0.037926, -0.747933, 0, 1.0};
Point(83) = {-0.025145, -0.749110, 0, 1.0};
Point(84) = {-0.018896, -0.749517, 0, 1.0};
Point(85) = {-0.012778, -0.749799, 0, 1.0};
Point(86) = {-0.006816, -0.749959, 0, 1.0};
Point(87) = {-0.001035, -0.750000, 0, 1.0};
Point(88) = {0.004540, -0.749907, 0, 1.0};
Point(89) = {0.009884, -0.749662, 0, 1.0};
Point(90) = {0.014978, -0.749242, 0, 1.0};
Point(91) = {0.019802, -0.748640, 0, 1.0};
Point(92) = {0.024334, -0.747872, 0, 1.0};
Point(93) = {0.028551, -0.746972, 0, 1.0};
Point(94) = {0.032430, -0.745989, 0, 1.0};
Point(95) = {0.035958, -0.744957, 0, 1.0};
Point(96) = {0.039119, -0.743882, 0, 1.0};
Point(97) = {0.041895, -0.742755, 0, 1.0};
Point(98) = {0.044282, -0.741553, 0, 1.0};
Point(99) = {0.046264, -0.740276, 0, 1.0};
Point(100) = {0.047837, -0.738954, 0, 1.0};
Point(101) = {0.048988, -0.737646, 0, 1.0};
Point(102) = {0.049709, -0.736413, 0, 1.0};
Point(103) = {0.049994, -0.735291, 0, 1.0};
Point(104) = {0.049844, -0.734280, 0, 1.0};
Point(105) = {0.049259, -0.733351, 0, 1.0};
Point(106) = {0.048245, -0.732489, 0, 1.0};
Point(107) = {0.046807, -0.731687, 0, 1.0};
Point(108) = {0.044952, -0.730953, 0, 1.0};
Point(109) = {0.042682, -0.730298, 0, 1.0};
Point(110) = {0.040013, -0.729729, 0, 1.0};
Point(111) = {0.036952, -0.729229, 0, 1.0};
Point(112) = {0.033518, -0.728785, 0, 1.0};
Point(113) = {0.029726, -0.728379, 0, 1.0};
Point(114) = {0.025589, -0.728011, 0, 1.0};
Point(115) = {0.021126, -0.727683, 0, 1.0};
Point(116) = {0.016359, -0.727396, 0, 1.0};
Point(117) = {0.011306, -0.727151, 0, 1.0};
Point(118) = {0.005991, -0.726937, 0, 1.0};
Point(119) = {0.000434, -0.726748, 0, 1.0};
Point(120) = {-0.005338, -0.726572, 0, 1.0};
Point(121) = {-0.011299, -0.726398, 0, 1.0};
Point(122) = {-0.017424, -0.726225, 0, 1.0};
Point(123) = {-0.023688, -0.726048, 0, 1.0};
Point(124) = {-0.036520, -0.725686, 0, 1.0};
Point(125) = {-0.049575, -0.725313, 0, 1.0};
Point(126) = {-0.062629, -0.724941, 0, 1.0};
Point(127) = {-0.075462, -0.724573, 0, 1.0};
Point(128) = {-0.087850, -0.724219, 0, 1.0};
Point(129) = {-0.099584, -0.723884, 0, 1.0};
Point(130) = {-0.110462, -0.723572, 0, 1.0};
Point(131) = {-0.120298, -0.723283, 0, 1.0};
Point(132) = {-0.128925, -0.723030, 0, 1.0};
Point(133) = {-0.136192, -0.722825, 0, 1.0};
Point(134) = {-0.141981, -0.722684, 0, 1.0};
Point(135) = {-0.146189, -0.722611, 0, 1.0};
Point(136) = {-0.148744, -0.722587, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:51};
Spline(3) = {51:68};
Spline(4) = {68,1};

// Lines: second blade (splines 5-8)
Spline(5) = {69:86};
Spline(6) = {86:119};
Spline(7) = {119:136};
Spline(8) = {136,69};

// Outer domain (points 20001-4 and lines)
Point(137) = {-13.50000000, -15.00000000, 0, 1.0};
Point(138) = {-13.50000000, 15.00000000, 0, 1.0};
Point(139) = {13.50000000, 15.00000000, 0, 1.0};
Point(140) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {137, 138};
Line(12) = {138, 139};
Line(13) = {139, 140};
Line(14) = {137, 140};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
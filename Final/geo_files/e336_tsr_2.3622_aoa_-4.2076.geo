SetFactory("OpenCASCADE");

Point(1) = {0.074794, 0.744127, 0, 1.0};
Point(2) = {0.074223, 0.744131, 0, 1.0};
Point(3) = {0.072587, 0.744195, 0, 1.0};
Point(4) = {0.070033, 0.744356, 0, 1.0};
Point(5) = {0.066647, 0.744543, 0, 1.0};
Point(6) = {0.062425, 0.744726, 0, 1.0};
Point(7) = {0.057399, 0.744946, 0, 1.0};
Point(8) = {0.051652, 0.745236, 0, 1.0};
Point(9) = {0.045282, 0.745610, 0, 1.0};
Point(10) = {0.038393, 0.746065, 0, 1.0};
Point(11) = {0.031098, 0.746597, 0, 1.0};
Point(12) = {0.023509, 0.747183, 0, 1.0};
Point(13) = {0.015742, 0.747798, 0, 1.0};
Point(14) = {0.007901, 0.748410, 0, 1.0};
Point(15) = {0.000092, 0.748977, 0, 1.0};
Point(16) = {-0.007591, 0.749458, 0, 1.0};
Point(17) = {-0.015063, 0.749813, 0, 1.0};
Point(18) = {-0.022246, 0.750000, 0, 1.0};
Point(19) = {-0.030571, 0.749872, 0, 1.0};
Point(20) = {-0.035491, 0.749716, 0, 1.0};
Point(21) = {-0.041477, 0.749155, 0, 1.0};
Point(22) = {-0.047036, 0.748303, 0, 1.0};
Point(23) = {-0.052161, 0.747189, 0, 1.0};
Point(24) = {-0.056832, 0.745852, 0, 1.0};
Point(25) = {-0.061023, 0.744344, 0, 1.0};
Point(26) = {-0.064702, 0.742704, 0, 1.0};
Point(27) = {-0.067842, 0.740984, 0, 1.0};
Point(28) = {-0.070416, 0.739228, 0, 1.0};
Point(29) = {-0.072408, 0.737487, 0, 1.0};
Point(30) = {-0.073808, 0.735821, 0, 1.0};
Point(31) = {-0.074608, 0.734302, 0, 1.0};
Point(32) = {-0.074777, 0.733656, 0, 1.0};
Point(33) = {-0.074808, 0.733291, 0, 1.0};
Point(34) = {-0.074798, 0.733065, 0, 1.0};
Point(35) = {-0.074763, 0.732858, 0, 1.0};
Point(36) = {-0.074735, 0.732763, 0, 1.0};
Point(37) = {-0.074700, 0.732675, 0, 1.0};
Point(38) = {-0.074655, 0.732594, 0, 1.0};
Point(39) = {-0.074595, 0.732522, 0, 1.0};
Point(40) = {-0.074521, 0.732452, 0, 1.0};
Point(41) = {-0.074433, 0.732385, 0, 1.0};
Point(42) = {-0.074227, 0.732253, 0, 1.0};
Point(43) = {-0.073980, 0.732128, 0, 1.0};
Point(44) = {-0.073536, 0.731947, 0, 1.0};
Point(45) = {-0.072579, 0.731652, 0, 1.0};
Point(46) = {-0.070090, 0.731184, 0, 1.0};
Point(47) = {-0.066768, 0.730848, 0, 1.0};
Point(48) = {-0.062654, 0.730633, 0, 1.0};
Point(49) = {-0.057786, 0.730519, 0, 1.0};
Point(50) = {-0.052234, 0.730470, 0, 1.0};
Point(51) = {-0.046090, 0.730471, 0, 1.0};
Point(52) = {-0.039449, 0.730525, 0, 1.0};
Point(53) = {-0.032403, 0.730640, 0, 1.0};
Point(54) = {-0.025040, 0.730831, 0, 1.0};
Point(55) = {-0.017440, 0.731106, 0, 1.0};
Point(56) = {-0.009688, 0.731467, 0, 1.0};
Point(57) = {-0.001865, 0.731918, 0, 1.0};
Point(58) = {0.005939, 0.732453, 0, 1.0};
Point(59) = {0.013642, 0.733072, 0, 1.0};
Point(60) = {0.021159, 0.733773, 0, 1.0};
Point(61) = {0.028404, 0.734551, 0, 1.0};
Point(62) = {0.035299, 0.735407, 0, 1.0};
Point(63) = {0.041766, 0.736339, 0, 1.0};
Point(64) = {0.047726, 0.737373, 0, 1.0};
Point(65) = {0.053170, 0.738561, 0, 1.0};
Point(66) = {0.058173, 0.739862, 0, 1.0};
Point(67) = {0.062726, 0.741123, 0, 1.0};
Point(68) = {0.066723, 0.742225, 0, 1.0};
Point(69) = {0.070051, 0.743106, 0, 1.0};
Point(70) = {0.072599, 0.743718, 0, 1.0};
Point(71) = {0.074229, 0.744039, 0, 1.0};
Point(72) = {-0.074794, -0.744127, 0, 1.0};
Point(73) = {-0.074223, -0.744131, 0, 1.0};
Point(74) = {-0.072587, -0.744195, 0, 1.0};
Point(75) = {-0.070033, -0.744356, 0, 1.0};
Point(76) = {-0.066647, -0.744543, 0, 1.0};
Point(77) = {-0.062425, -0.744726, 0, 1.0};
Point(78) = {-0.057399, -0.744946, 0, 1.0};
Point(79) = {-0.051652, -0.745236, 0, 1.0};
Point(80) = {-0.045282, -0.745610, 0, 1.0};
Point(81) = {-0.038393, -0.746065, 0, 1.0};
Point(82) = {-0.031098, -0.746597, 0, 1.0};
Point(83) = {-0.023509, -0.747183, 0, 1.0};
Point(84) = {-0.015742, -0.747798, 0, 1.0};
Point(85) = {-0.007901, -0.748410, 0, 1.0};
Point(86) = {-0.000092, -0.748977, 0, 1.0};
Point(87) = {0.007591, -0.749458, 0, 1.0};
Point(88) = {0.015063, -0.749813, 0, 1.0};
Point(89) = {0.022246, -0.750000, 0, 1.0};
Point(90) = {0.030571, -0.749872, 0, 1.0};
Point(91) = {0.035491, -0.749716, 0, 1.0};
Point(92) = {0.041477, -0.749155, 0, 1.0};
Point(93) = {0.047036, -0.748303, 0, 1.0};
Point(94) = {0.052161, -0.747189, 0, 1.0};
Point(95) = {0.056832, -0.745852, 0, 1.0};
Point(96) = {0.061023, -0.744344, 0, 1.0};
Point(97) = {0.064702, -0.742704, 0, 1.0};
Point(98) = {0.067842, -0.740984, 0, 1.0};
Point(99) = {0.070416, -0.739228, 0, 1.0};
Point(100) = {0.072408, -0.737487, 0, 1.0};
Point(101) = {0.073808, -0.735821, 0, 1.0};
Point(102) = {0.074608, -0.734302, 0, 1.0};
Point(103) = {0.074777, -0.733656, 0, 1.0};
Point(104) = {0.074808, -0.733291, 0, 1.0};
Point(105) = {0.074798, -0.733065, 0, 1.0};
Point(106) = {0.074763, -0.732858, 0, 1.0};
Point(107) = {0.074735, -0.732763, 0, 1.0};
Point(108) = {0.074700, -0.732675, 0, 1.0};
Point(109) = {0.074655, -0.732594, 0, 1.0};
Point(110) = {0.074595, -0.732522, 0, 1.0};
Point(111) = {0.074521, -0.732452, 0, 1.0};
Point(112) = {0.074433, -0.732385, 0, 1.0};
Point(113) = {0.074227, -0.732253, 0, 1.0};
Point(114) = {0.073980, -0.732128, 0, 1.0};
Point(115) = {0.073536, -0.731947, 0, 1.0};
Point(116) = {0.072579, -0.731652, 0, 1.0};
Point(117) = {0.070090, -0.731184, 0, 1.0};
Point(118) = {0.066768, -0.730848, 0, 1.0};
Point(119) = {0.062654, -0.730633, 0, 1.0};
Point(120) = {0.057786, -0.730519, 0, 1.0};
Point(121) = {0.052234, -0.730470, 0, 1.0};
Point(122) = {0.046090, -0.730471, 0, 1.0};
Point(123) = {0.039449, -0.730525, 0, 1.0};
Point(124) = {0.032403, -0.730640, 0, 1.0};
Point(125) = {0.025040, -0.730831, 0, 1.0};
Point(126) = {0.017440, -0.731106, 0, 1.0};
Point(127) = {0.009688, -0.731467, 0, 1.0};
Point(128) = {0.001865, -0.731918, 0, 1.0};
Point(129) = {-0.005939, -0.732453, 0, 1.0};
Point(130) = {-0.013642, -0.733072, 0, 1.0};
Point(131) = {-0.021159, -0.733773, 0, 1.0};
Point(132) = {-0.028404, -0.734551, 0, 1.0};
Point(133) = {-0.035299, -0.735407, 0, 1.0};
Point(134) = {-0.041766, -0.736339, 0, 1.0};
Point(135) = {-0.047726, -0.737373, 0, 1.0};
Point(136) = {-0.053170, -0.738561, 0, 1.0};
Point(137) = {-0.058173, -0.739862, 0, 1.0};
Point(138) = {-0.062726, -0.741123, 0, 1.0};
Point(139) = {-0.066723, -0.742225, 0, 1.0};
Point(140) = {-0.070051, -0.743106, 0, 1.0};
Point(141) = {-0.072599, -0.743718, 0, 1.0};
Point(142) = {-0.074229, -0.744039, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:53};
Spline(3) = {53:71};
Spline(4) = {71,1};

// Lines: second blade (splines 5-8)
Spline(5) = {72:91};
Spline(6) = {91:124};
Spline(7) = {124:142};
Spline(8) = {142,72};

// Outer domain (points 20001-4 and lines)
Point(143) = {-13.50000000, -15.00000000, 0, 1.0};
Point(144) = {-13.50000000, 15.00000000, 0, 1.0};
Point(145) = {13.50000000, 15.00000000, 0, 1.0};
Point(146) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {143, 144};
Line(12) = {144, 145};
Line(13) = {145, 146};
Line(14) = {143, 146};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.075001, 0.736538, 0, 1.0};
Point(2) = {0.072110, 0.736837, 0, 1.0};
Point(3) = {0.067676, 0.737283, 0, 1.0};
Point(4) = {0.062405, 0.737837, 0, 1.0};
Point(5) = {0.056387, 0.738528, 0, 1.0};
Point(6) = {0.049729, 0.739362, 0, 1.0};
Point(7) = {0.042542, 0.740334, 0, 1.0};
Point(8) = {0.034943, 0.741425, 0, 1.0};
Point(9) = {0.027052, 0.742607, 0, 1.0};
Point(10) = {0.018984, 0.743843, 0, 1.0};
Point(11) = {0.010853, 0.745090, 0, 1.0};
Point(12) = {0.002762, 0.746298, 0, 1.0};
Point(13) = {-0.005192, 0.747415, 0, 1.0};
Point(14) = {-0.012924, 0.748392, 0, 1.0};
Point(15) = {-0.020359, 0.749179, 0, 1.0};
Point(16) = {-0.027432, 0.749731, 0, 1.0};
Point(17) = {-0.034085, 0.750000, 0, 1.0};
Point(18) = {-0.040303, 0.749936, 0, 1.0};
Point(19) = {-0.046089, 0.749548, 0, 1.0};
Point(20) = {-0.051427, 0.748857, 0, 1.0};
Point(21) = {-0.056302, 0.747905, 0, 1.0};
Point(22) = {-0.060680, 0.746736, 0, 1.0};
Point(23) = {-0.064525, 0.745397, 0, 1.0};
Point(24) = {-0.067810, 0.743933, 0, 1.0};
Point(25) = {-0.070502, 0.742392, 0, 1.0};
Point(26) = {-0.072581, 0.740823, 0, 1.0};
Point(27) = {-0.074032, 0.739289, 0, 1.0};
Point(28) = {-0.074836, 0.737877, 0, 1.0};
Point(29) = {-0.074898, 0.737685, 0, 1.0};
Point(30) = {-0.074980, 0.737319, 0, 1.0};
Point(31) = {-0.074998, 0.737091, 0, 1.0};
Point(32) = {-0.074992, 0.736876, 0, 1.0};
Point(33) = {-0.074976, 0.736776, 0, 1.0};
Point(34) = {-0.074951, 0.736681, 0, 1.0};
Point(35) = {-0.074916, 0.736595, 0, 1.0};
Point(36) = {-0.074867, 0.736514, 0, 1.0};
Point(37) = {-0.074800, 0.736434, 0, 1.0};
Point(38) = {-0.074722, 0.736354, 0, 1.0};
Point(39) = {-0.074530, 0.736196, 0, 1.0};
Point(40) = {-0.074294, 0.736038, 0, 1.0};
Point(41) = {-0.073868, 0.735802, 0, 1.0};
Point(42) = {-0.072219, 0.735140, 0, 1.0};
Point(43) = {-0.069473, 0.734400, 0, 1.0};
Point(44) = {-0.065889, 0.733715, 0, 1.0};
Point(45) = {-0.061504, 0.733083, 0, 1.0};
Point(46) = {-0.056363, 0.732488, 0, 1.0};
Point(47) = {-0.050538, 0.731909, 0, 1.0};
Point(48) = {-0.044124, 0.731338, 0, 1.0};
Point(49) = {-0.037216, 0.730790, 0, 1.0};
Point(50) = {-0.029906, 0.730279, 0, 1.0};
Point(51) = {-0.022283, 0.729831, 0, 1.0};
Point(52) = {-0.014428, 0.729460, 0, 1.0};
Point(53) = {-0.006423, 0.729177, 0, 1.0};
Point(54) = {0.001644, 0.728989, 0, 1.0};
Point(55) = {0.009688, 0.728901, 0, 1.0};
Point(56) = {0.017621, 0.728921, 0, 1.0};
Point(57) = {0.025357, 0.729047, 0, 1.0};
Point(58) = {0.032813, 0.729288, 0, 1.0};
Point(59) = {0.039908, 0.729643, 0, 1.0};
Point(60) = {0.046561, 0.730120, 0, 1.0};
Point(61) = {0.052699, 0.730750, 0, 1.0};
Point(62) = {0.058315, 0.731583, 0, 1.0};
Point(63) = {0.063481, 0.732575, 0, 1.0};
Point(64) = {0.068182, 0.733567, 0, 1.0};
Point(65) = {0.072299, 0.734452, 0, 1.0};
Point(66) = {0.074991, 0.735020, 0, 1.0};
Point(67) = {-0.075001, -0.736538, 0, 1.0};
Point(68) = {-0.072110, -0.736837, 0, 1.0};
Point(69) = {-0.067676, -0.737283, 0, 1.0};
Point(70) = {-0.062405, -0.737837, 0, 1.0};
Point(71) = {-0.056387, -0.738528, 0, 1.0};
Point(72) = {-0.049729, -0.739362, 0, 1.0};
Point(73) = {-0.042542, -0.740334, 0, 1.0};
Point(74) = {-0.034943, -0.741425, 0, 1.0};
Point(75) = {-0.027052, -0.742607, 0, 1.0};
Point(76) = {-0.018984, -0.743843, 0, 1.0};
Point(77) = {-0.010853, -0.745090, 0, 1.0};
Point(78) = {-0.002762, -0.746298, 0, 1.0};
Point(79) = {0.005192, -0.747415, 0, 1.0};
Point(80) = {0.012924, -0.748392, 0, 1.0};
Point(81) = {0.020359, -0.749179, 0, 1.0};
Point(82) = {0.027432, -0.749731, 0, 1.0};
Point(83) = {0.034085, -0.750000, 0, 1.0};
Point(84) = {0.040303, -0.749936, 0, 1.0};
Point(85) = {0.046089, -0.749548, 0, 1.0};
Point(86) = {0.051427, -0.748857, 0, 1.0};
Point(87) = {0.056302, -0.747905, 0, 1.0};
Point(88) = {0.060680, -0.746736, 0, 1.0};
Point(89) = {0.064525, -0.745397, 0, 1.0};
Point(90) = {0.067810, -0.743933, 0, 1.0};
Point(91) = {0.070502, -0.742392, 0, 1.0};
Point(92) = {0.072581, -0.740823, 0, 1.0};
Point(93) = {0.074032, -0.739289, 0, 1.0};
Point(94) = {0.074836, -0.737877, 0, 1.0};
Point(95) = {0.074898, -0.737685, 0, 1.0};
Point(96) = {0.074980, -0.737319, 0, 1.0};
Point(97) = {0.074998, -0.737091, 0, 1.0};
Point(98) = {0.074992, -0.736876, 0, 1.0};
Point(99) = {0.074976, -0.736776, 0, 1.0};
Point(100) = {0.074951, -0.736681, 0, 1.0};
Point(101) = {0.074916, -0.736595, 0, 1.0};
Point(102) = {0.074867, -0.736514, 0, 1.0};
Point(103) = {0.074800, -0.736434, 0, 1.0};
Point(104) = {0.074722, -0.736354, 0, 1.0};
Point(105) = {0.074530, -0.736196, 0, 1.0};
Point(106) = {0.074294, -0.736038, 0, 1.0};
Point(107) = {0.073868, -0.735802, 0, 1.0};
Point(108) = {0.072219, -0.735140, 0, 1.0};
Point(109) = {0.069473, -0.734400, 0, 1.0};
Point(110) = {0.065889, -0.733715, 0, 1.0};
Point(111) = {0.061504, -0.733083, 0, 1.0};
Point(112) = {0.056363, -0.732488, 0, 1.0};
Point(113) = {0.050538, -0.731909, 0, 1.0};
Point(114) = {0.044124, -0.731338, 0, 1.0};
Point(115) = {0.037216, -0.730790, 0, 1.0};
Point(116) = {0.029906, -0.730279, 0, 1.0};
Point(117) = {0.022283, -0.729831, 0, 1.0};
Point(118) = {0.014428, -0.729460, 0, 1.0};
Point(119) = {0.006423, -0.729177, 0, 1.0};
Point(120) = {-0.001644, -0.728989, 0, 1.0};
Point(121) = {-0.009688, -0.728901, 0, 1.0};
Point(122) = {-0.017621, -0.728921, 0, 1.0};
Point(123) = {-0.025357, -0.729047, 0, 1.0};
Point(124) = {-0.032813, -0.729288, 0, 1.0};
Point(125) = {-0.039908, -0.729643, 0, 1.0};
Point(126) = {-0.046561, -0.730120, 0, 1.0};
Point(127) = {-0.052699, -0.730750, 0, 1.0};
Point(128) = {-0.058315, -0.731583, 0, 1.0};
Point(129) = {-0.063481, -0.732575, 0, 1.0};
Point(130) = {-0.068182, -0.733567, 0, 1.0};
Point(131) = {-0.072299, -0.734452, 0, 1.0};
Point(132) = {-0.074991, -0.735020, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:83};
Spline(6) = {83:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {36.00000000, 15.00000000, 0, 1.0};
Point(136) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073938, 0.718120, 0, 1.0};
Point(2) = {0.071663, 0.718701, 0, 1.0};
Point(3) = {0.069018, 0.719464, 0, 1.0};
Point(4) = {0.066117, 0.720385, 0, 1.0};
Point(5) = {0.062970, 0.721479, 0, 1.0};
Point(6) = {0.059596, 0.722756, 0, 1.0};
Point(7) = {0.056013, 0.724225, 0, 1.0};
Point(8) = {0.052236, 0.725893, 0, 1.0};
Point(9) = {0.048285, 0.727755, 0, 1.0};
Point(10) = {0.044168, 0.729781, 0, 1.0};
Point(11) = {0.039896, 0.731906, 0, 1.0};
Point(12) = {0.035475, 0.734037, 0, 1.0};
Point(13) = {0.030907, 0.736079, 0, 1.0};
Point(14) = {0.026204, 0.737979, 0, 1.0};
Point(15) = {0.021386, 0.739725, 0, 1.0};
Point(16) = {0.016475, 0.741328, 0, 1.0};
Point(17) = {0.011496, 0.742785, 0, 1.0};
Point(18) = {0.006468, 0.744085, 0, 1.0};
Point(19) = {0.001413, 0.745228, 0, 1.0};
Point(20) = {-0.003647, 0.746213, 0, 1.0};
Point(21) = {-0.008681, 0.747089, 0, 1.0};
Point(22) = {-0.013664, 0.747863, 0, 1.0};
Point(23) = {-0.018577, 0.748532, 0, 1.0};
Point(24) = {-0.023401, 0.749072, 0, 1.0};
Point(25) = {-0.028117, 0.749468, 0, 1.0};
Point(26) = {-0.032702, 0.749750, 0, 1.0};
Point(27) = {-0.037133, 0.749928, 0, 1.0};
Point(28) = {-0.041390, 0.750000, 0, 1.0};
Point(29) = {-0.045455, 0.749966, 0, 1.0};
Point(30) = {-0.049313, 0.749823, 0, 1.0};
Point(31) = {-0.052947, 0.749574, 0, 1.0};
Point(32) = {-0.056338, 0.749233, 0, 1.0};
Point(33) = {-0.059468, 0.748810, 0, 1.0};
Point(34) = {-0.062324, 0.748329, 0, 1.0};
Point(35) = {-0.064891, 0.747801, 0, 1.0};
Point(36) = {-0.067153, 0.747244, 0, 1.0};
Point(37) = {-0.069103, 0.746662, 0, 1.0};
Point(38) = {-0.070736, 0.746014, 0, 1.0};
Point(39) = {-0.072052, 0.745292, 0, 1.0};
Point(40) = {-0.073037, 0.744529, 0, 1.0};
Point(41) = {-0.073673, 0.743824, 0, 1.0};
Point(42) = {-0.073938, 0.743275, 0, 1.0};
Point(43) = {-0.073845, 0.742810, 0, 1.0};
Point(44) = {-0.073407, 0.742354, 0, 1.0};
Point(45) = {-0.072639, 0.741841, 0, 1.0};
Point(46) = {-0.071546, 0.741254, 0, 1.0};
Point(47) = {-0.070129, 0.740630, 0, 1.0};
Point(48) = {-0.068392, 0.739961, 0, 1.0};
Point(49) = {-0.066346, 0.739244, 0, 1.0};
Point(50) = {-0.064000, 0.738477, 0, 1.0};
Point(51) = {-0.061364, 0.737662, 0, 1.0};
Point(52) = {-0.058451, 0.736809, 0, 1.0};
Point(53) = {-0.055268, 0.735933, 0, 1.0};
Point(54) = {-0.051828, 0.735040, 0, 1.0};
Point(55) = {-0.048151, 0.734119, 0, 1.0};
Point(56) = {-0.044251, 0.733183, 0, 1.0};
Point(57) = {-0.040144, 0.732233, 0, 1.0};
Point(58) = {-0.035844, 0.731284, 0, 1.0};
Point(59) = {-0.031370, 0.730348, 0, 1.0};
Point(60) = {-0.026743, 0.729427, 0, 1.0};
Point(61) = {-0.021983, 0.728510, 0, 1.0};
Point(62) = {-0.017110, 0.727607, 0, 1.0};
Point(63) = {-0.012146, 0.726726, 0, 1.0};
Point(64) = {-0.007108, 0.725870, 0, 1.0};
Point(65) = {-0.002019, 0.725054, 0, 1.0};
Point(66) = {0.003095, 0.724260, 0, 1.0};
Point(67) = {0.008215, 0.723499, 0, 1.0};
Point(68) = {0.013318, 0.722772, 0, 1.0};
Point(69) = {0.018384, 0.722079, 0, 1.0};
Point(70) = {0.023388, 0.721427, 0, 1.0};
Point(71) = {0.028309, 0.720806, 0, 1.0};
Point(72) = {0.033125, 0.720223, 0, 1.0};
Point(73) = {0.037816, 0.719674, 0, 1.0};
Point(74) = {0.042360, 0.719156, 0, 1.0};
Point(75) = {0.046740, 0.718676, 0, 1.0};
Point(76) = {0.050934, 0.718238, 0, 1.0};
Point(77) = {0.054928, 0.717850, 0, 1.0};
Point(78) = {0.058704, 0.717511, 0, 1.0};
Point(79) = {0.062246, 0.717224, 0, 1.0};
Point(80) = {0.065541, 0.716999, 0, 1.0};
Point(81) = {0.068571, 0.716832, 0, 1.0};
Point(82) = {0.071325, 0.716717, 0, 1.0};
Point(83) = {0.073687, 0.716644, 0, 1.0};
Point(84) = {-0.073938, -0.718120, 0, 1.0};
Point(85) = {-0.071663, -0.718701, 0, 1.0};
Point(86) = {-0.069018, -0.719464, 0, 1.0};
Point(87) = {-0.066117, -0.720385, 0, 1.0};
Point(88) = {-0.062970, -0.721479, 0, 1.0};
Point(89) = {-0.059596, -0.722756, 0, 1.0};
Point(90) = {-0.056013, -0.724225, 0, 1.0};
Point(91) = {-0.052236, -0.725893, 0, 1.0};
Point(92) = {-0.048285, -0.727755, 0, 1.0};
Point(93) = {-0.044168, -0.729781, 0, 1.0};
Point(94) = {-0.039896, -0.731906, 0, 1.0};
Point(95) = {-0.035475, -0.734037, 0, 1.0};
Point(96) = {-0.030907, -0.736079, 0, 1.0};
Point(97) = {-0.026204, -0.737979, 0, 1.0};
Point(98) = {-0.021386, -0.739725, 0, 1.0};
Point(99) = {-0.016475, -0.741328, 0, 1.0};
Point(100) = {-0.011496, -0.742785, 0, 1.0};
Point(101) = {-0.006468, -0.744085, 0, 1.0};
Point(102) = {-0.001413, -0.745228, 0, 1.0};
Point(103) = {0.003647, -0.746213, 0, 1.0};
Point(104) = {0.008681, -0.747089, 0, 1.0};
Point(105) = {0.013664, -0.747863, 0, 1.0};
Point(106) = {0.018577, -0.748532, 0, 1.0};
Point(107) = {0.023401, -0.749072, 0, 1.0};
Point(108) = {0.028117, -0.749468, 0, 1.0};
Point(109) = {0.032702, -0.749750, 0, 1.0};
Point(110) = {0.037133, -0.749928, 0, 1.0};
Point(111) = {0.041390, -0.750000, 0, 1.0};
Point(112) = {0.045455, -0.749966, 0, 1.0};
Point(113) = {0.049313, -0.749823, 0, 1.0};
Point(114) = {0.052947, -0.749574, 0, 1.0};
Point(115) = {0.056338, -0.749233, 0, 1.0};
Point(116) = {0.059468, -0.748810, 0, 1.0};
Point(117) = {0.062324, -0.748329, 0, 1.0};
Point(118) = {0.064891, -0.747801, 0, 1.0};
Point(119) = {0.067153, -0.747244, 0, 1.0};
Point(120) = {0.069103, -0.746662, 0, 1.0};
Point(121) = {0.070736, -0.746014, 0, 1.0};
Point(122) = {0.072052, -0.745292, 0, 1.0};
Point(123) = {0.073037, -0.744529, 0, 1.0};
Point(124) = {0.073673, -0.743824, 0, 1.0};
Point(125) = {0.073938, -0.743275, 0, 1.0};
Point(126) = {0.073845, -0.742810, 0, 1.0};
Point(127) = {0.073407, -0.742354, 0, 1.0};
Point(128) = {0.072639, -0.741841, 0, 1.0};
Point(129) = {0.071546, -0.741254, 0, 1.0};
Point(130) = {0.070129, -0.740630, 0, 1.0};
Point(131) = {0.068392, -0.739961, 0, 1.0};
Point(132) = {0.066346, -0.739244, 0, 1.0};
Point(133) = {0.064000, -0.738477, 0, 1.0};
Point(134) = {0.061364, -0.737662, 0, 1.0};
Point(135) = {0.058451, -0.736809, 0, 1.0};
Point(136) = {0.055268, -0.735933, 0, 1.0};
Point(137) = {0.051828, -0.735040, 0, 1.0};
Point(138) = {0.048151, -0.734119, 0, 1.0};
Point(139) = {0.044251, -0.733183, 0, 1.0};
Point(140) = {0.040144, -0.732233, 0, 1.0};
Point(141) = {0.035844, -0.731284, 0, 1.0};
Point(142) = {0.031370, -0.730348, 0, 1.0};
Point(143) = {0.026743, -0.729427, 0, 1.0};
Point(144) = {0.021983, -0.728510, 0, 1.0};
Point(145) = {0.017110, -0.727607, 0, 1.0};
Point(146) = {0.012146, -0.726726, 0, 1.0};
Point(147) = {0.007108, -0.725870, 0, 1.0};
Point(148) = {0.002019, -0.725054, 0, 1.0};
Point(149) = {-0.003095, -0.724260, 0, 1.0};
Point(150) = {-0.008215, -0.723499, 0, 1.0};
Point(151) = {-0.013318, -0.722772, 0, 1.0};
Point(152) = {-0.018384, -0.722079, 0, 1.0};
Point(153) = {-0.023388, -0.721427, 0, 1.0};
Point(154) = {-0.028309, -0.720806, 0, 1.0};
Point(155) = {-0.033125, -0.720223, 0, 1.0};
Point(156) = {-0.037816, -0.719674, 0, 1.0};
Point(157) = {-0.042360, -0.719156, 0, 1.0};
Point(158) = {-0.046740, -0.718676, 0, 1.0};
Point(159) = {-0.050934, -0.718238, 0, 1.0};
Point(160) = {-0.054928, -0.717850, 0, 1.0};
Point(161) = {-0.058704, -0.717511, 0, 1.0};
Point(162) = {-0.062246, -0.717224, 0, 1.0};
Point(163) = {-0.065541, -0.716999, 0, 1.0};
Point(164) = {-0.068571, -0.716832, 0, 1.0};
Point(165) = {-0.071325, -0.716717, 0, 1.0};
Point(166) = {-0.073687, -0.716644, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:108};
Spline(6) = {108:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111633, 0.742631, 0, 1.0};
Point(2) = {0.111057, 0.742736, 0, 1.0};
Point(3) = {0.109418, 0.743118, 0, 1.0};
Point(4) = {0.106914, 0.743794, 0, 1.0};
Point(5) = {0.103722, 0.744663, 0, 1.0};
Point(6) = {0.099934, 0.745570, 0, 1.0};
Point(7) = {0.095541, 0.746374, 0, 1.0};
Point(8) = {0.090472, 0.747058, 0, 1.0};
Point(9) = {0.084772, 0.747674, 0, 1.0};
Point(10) = {0.078522, 0.748235, 0, 1.0};
Point(11) = {0.071809, 0.748737, 0, 1.0};
Point(12) = {0.064727, 0.749175, 0, 1.0};
Point(13) = {0.057372, 0.749538, 0, 1.0};
Point(14) = {0.049843, 0.749809, 0, 1.0};
Point(15) = {0.042241, 0.749970, 0, 1.0};
Point(16) = {0.034665, 0.750000, 0, 1.0};
Point(17) = {0.027210, 0.749873, 0, 1.0};
Point(18) = {0.019971, 0.749560, 0, 1.0};
Point(19) = {0.013035, 0.749029, 0, 1.0};
Point(20) = {0.006488, 0.748234, 0, 1.0};
Point(21) = {0.000389, 0.747058, 0, 1.0};
Point(22) = {-0.005404, 0.745480, 0, 1.0};
Point(23) = {-0.010879, 0.743632, 0, 1.0};
Point(24) = {-0.015978, 0.741586, 0, 1.0};
Point(25) = {-0.020649, 0.739396, 0, 1.0};
Point(26) = {-0.024836, 0.737117, 0, 1.0};
Point(27) = {-0.028493, 0.734797, 0, 1.0};
Point(28) = {-0.031569, 0.732488, 0, 1.0};
Point(29) = {-0.034016, 0.730231, 0, 1.0};
Point(30) = {-0.035809, 0.728072, 0, 1.0};
Point(31) = {-0.036899, 0.726075, 0, 1.0};
Point(32) = {-0.037217, 0.724878, 0, 1.0};
Point(33) = {-0.037247, 0.724463, 0, 1.0};
Point(34) = {-0.037244, 0.724320, 0, 1.0};
Point(35) = {-0.037215, 0.724078, 0, 1.0};
Point(36) = {-0.037098, 0.723708, 0, 1.0};
Point(37) = {-0.036911, 0.723328, 0, 1.0};
Point(38) = {-0.036563, 0.722800, 0, 1.0};
Point(39) = {-0.034996, 0.721220, 0, 1.0};
Point(40) = {-0.032681, 0.719640, 0, 1.0};
Point(41) = {-0.029689, 0.718108, 0, 1.0};
Point(42) = {-0.026057, 0.716642, 0, 1.0};
Point(43) = {-0.021874, 0.715220, 0, 1.0};
Point(44) = {-0.017288, 0.713904, 0, 1.0};
Point(45) = {-0.012365, 0.712758, 0, 1.0};
Point(46) = {-0.007212, 0.711850, 0, 1.0};
Point(47) = {-0.001937, 0.711213, 0, 1.0};
Point(48) = {0.003232, 0.711149, 0, 1.0};
Point(49) = {0.008592, 0.711896, 0, 1.0};
Point(50) = {0.014286, 0.713399, 0, 1.0};
Point(51) = {0.020444, 0.715571, 0, 1.0};
Point(52) = {0.027084, 0.718239, 0, 1.0};
Point(53) = {0.034177, 0.721268, 0, 1.0};
Point(54) = {0.041669, 0.724518, 0, 1.0};
Point(55) = {0.049485, 0.727844, 0, 1.0};
Point(56) = {0.057519, 0.731101, 0, 1.0};
Point(57) = {0.065637, 0.734149, 0, 1.0};
Point(58) = {0.073674, 0.736863, 0, 1.0};
Point(59) = {0.081445, 0.739142, 0, 1.0};
Point(60) = {0.088745, 0.740918, 0, 1.0};
Point(61) = {0.095365, 0.742160, 0, 1.0};
Point(62) = {0.101100, 0.742881, 0, 1.0};
Point(63) = {0.105761, 0.743129, 0, 1.0};
Point(64) = {0.109131, 0.742976, 0, 1.0};
Point(65) = {0.111038, 0.742725, 0, 1.0};
Point(66) = {-0.111633, -0.742631, 0, 1.0};
Point(67) = {-0.111057, -0.742736, 0, 1.0};
Point(68) = {-0.109418, -0.743118, 0, 1.0};
Point(69) = {-0.106914, -0.743794, 0, 1.0};
Point(70) = {-0.103722, -0.744663, 0, 1.0};
Point(71) = {-0.099934, -0.745570, 0, 1.0};
Point(72) = {-0.095541, -0.746374, 0, 1.0};
Point(73) = {-0.090472, -0.747058, 0, 1.0};
Point(74) = {-0.084772, -0.747674, 0, 1.0};
Point(75) = {-0.078522, -0.748235, 0, 1.0};
Point(76) = {-0.071809, -0.748737, 0, 1.0};
Point(77) = {-0.064727, -0.749175, 0, 1.0};
Point(78) = {-0.057372, -0.749538, 0, 1.0};
Point(79) = {-0.049843, -0.749809, 0, 1.0};
Point(80) = {-0.042241, -0.749970, 0, 1.0};
Point(81) = {-0.034665, -0.750000, 0, 1.0};
Point(82) = {-0.027210, -0.749873, 0, 1.0};
Point(83) = {-0.019971, -0.749560, 0, 1.0};
Point(84) = {-0.013035, -0.749029, 0, 1.0};
Point(85) = {-0.006488, -0.748234, 0, 1.0};
Point(86) = {-0.000389, -0.747058, 0, 1.0};
Point(87) = {0.005404, -0.745480, 0, 1.0};
Point(88) = {0.010879, -0.743632, 0, 1.0};
Point(89) = {0.015978, -0.741586, 0, 1.0};
Point(90) = {0.020649, -0.739396, 0, 1.0};
Point(91) = {0.024836, -0.737117, 0, 1.0};
Point(92) = {0.028493, -0.734797, 0, 1.0};
Point(93) = {0.031569, -0.732488, 0, 1.0};
Point(94) = {0.034016, -0.730231, 0, 1.0};
Point(95) = {0.035809, -0.728072, 0, 1.0};
Point(96) = {0.036899, -0.726075, 0, 1.0};
Point(97) = {0.037217, -0.724878, 0, 1.0};
Point(98) = {0.037247, -0.724463, 0, 1.0};
Point(99) = {0.037244, -0.724320, 0, 1.0};
Point(100) = {0.037215, -0.724078, 0, 1.0};
Point(101) = {0.037098, -0.723708, 0, 1.0};
Point(102) = {0.036911, -0.723328, 0, 1.0};
Point(103) = {0.036563, -0.722800, 0, 1.0};
Point(104) = {0.034996, -0.721220, 0, 1.0};
Point(105) = {0.032681, -0.719640, 0, 1.0};
Point(106) = {0.029689, -0.718108, 0, 1.0};
Point(107) = {0.026057, -0.716642, 0, 1.0};
Point(108) = {0.021874, -0.715220, 0, 1.0};
Point(109) = {0.017288, -0.713904, 0, 1.0};
Point(110) = {0.012365, -0.712758, 0, 1.0};
Point(111) = {0.007212, -0.711850, 0, 1.0};
Point(112) = {0.001937, -0.711213, 0, 1.0};
Point(113) = {-0.003232, -0.711149, 0, 1.0};
Point(114) = {-0.008592, -0.711896, 0, 1.0};
Point(115) = {-0.014286, -0.713399, 0, 1.0};
Point(116) = {-0.020444, -0.715571, 0, 1.0};
Point(117) = {-0.027084, -0.718239, 0, 1.0};
Point(118) = {-0.034177, -0.721268, 0, 1.0};
Point(119) = {-0.041669, -0.724518, 0, 1.0};
Point(120) = {-0.049485, -0.727844, 0, 1.0};
Point(121) = {-0.057519, -0.731101, 0, 1.0};
Point(122) = {-0.065637, -0.734149, 0, 1.0};
Point(123) = {-0.073674, -0.736863, 0, 1.0};
Point(124) = {-0.081445, -0.739142, 0, 1.0};
Point(125) = {-0.088745, -0.740918, 0, 1.0};
Point(126) = {-0.095365, -0.742160, 0, 1.0};
Point(127) = {-0.101100, -0.742881, 0, 1.0};
Point(128) = {-0.105761, -0.743129, 0, 1.0};
Point(129) = {-0.109131, -0.742976, 0, 1.0};
Point(130) = {-0.111038, -0.742725, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
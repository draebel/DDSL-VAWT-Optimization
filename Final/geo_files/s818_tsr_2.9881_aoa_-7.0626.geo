SetFactory("OpenCASCADE");

Point(1) = {0.148482, 0.740174, 0, 1.0};
Point(2) = {0.147715, 0.740316, 0, 1.0};
Point(3) = {0.145530, 0.740825, 0, 1.0};
Point(4) = {0.142191, 0.741726, 0, 1.0};
Point(5) = {0.137935, 0.742885, 0, 1.0};
Point(6) = {0.132885, 0.744094, 0, 1.0};
Point(7) = {0.127027, 0.745166, 0, 1.0};
Point(8) = {0.120269, 0.746077, 0, 1.0};
Point(9) = {0.112669, 0.746899, 0, 1.0};
Point(10) = {0.104335, 0.747646, 0, 1.0};
Point(11) = {0.095386, 0.748316, 0, 1.0};
Point(12) = {0.085943, 0.748900, 0, 1.0};
Point(13) = {0.076136, 0.749383, 0, 1.0};
Point(14) = {0.066098, 0.749745, 0, 1.0};
Point(15) = {0.055962, 0.749960, 0, 1.0};
Point(16) = {0.045861, 0.750000, 0, 1.0};
Point(17) = {0.035922, 0.749831, 0, 1.0};
Point(18) = {0.026270, 0.749414, 0, 1.0};
Point(19) = {0.017022, 0.748705, 0, 1.0};
Point(20) = {0.008292, 0.747645, 0, 1.0};
Point(21) = {0.000161, 0.746078, 0, 1.0};
Point(22) = {-0.007562, 0.743973, 0, 1.0};
Point(23) = {-0.014863, 0.741510, 0, 1.0};
Point(24) = {-0.021661, 0.738781, 0, 1.0};
Point(25) = {-0.027889, 0.735862, 0, 1.0};
Point(26) = {-0.033471, 0.732823, 0, 1.0};
Point(27) = {-0.038348, 0.729729, 0, 1.0};
Point(28) = {-0.042449, 0.726651, 0, 1.0};
Point(29) = {-0.045712, 0.723642, 0, 1.0};
Point(30) = {-0.048101, 0.720763, 0, 1.0};
Point(31) = {-0.049555, 0.718101, 0, 1.0};
Point(32) = {-0.049979, 0.716505, 0, 1.0};
Point(33) = {-0.050019, 0.715951, 0, 1.0};
Point(34) = {-0.050014, 0.715761, 0, 1.0};
Point(35) = {-0.049977, 0.715438, 0, 1.0};
Point(36) = {-0.049820, 0.714945, 0, 1.0};
Point(37) = {-0.049570, 0.714438, 0, 1.0};
Point(38) = {-0.049107, 0.713734, 0, 1.0};
Point(39) = {-0.047017, 0.711628, 0, 1.0};
Point(40) = {-0.043932, 0.709521, 0, 1.0};
Point(41) = {-0.039942, 0.707479, 0, 1.0};
Point(42) = {-0.035100, 0.705524, 0, 1.0};
Point(43) = {-0.029523, 0.703628, 0, 1.0};
Point(44) = {-0.023408, 0.701873, 0, 1.0};
Point(45) = {-0.016844, 0.700346, 0, 1.0};
Point(46) = {-0.009974, 0.699135, 0, 1.0};
Point(47) = {-0.002940, 0.698285, 0, 1.0};
Point(48) = {0.003952, 0.698200, 0, 1.0};
Point(49) = {0.011098, 0.699196, 0, 1.0};
Point(50) = {0.018689, 0.701200, 0, 1.0};
Point(51) = {0.026900, 0.704095, 0, 1.0};
Point(52) = {0.035754, 0.707653, 0, 1.0};
Point(53) = {0.045210, 0.711691, 0, 1.0};
Point(54) = {0.055200, 0.716024, 0, 1.0};
Point(55) = {0.065621, 0.720459, 0, 1.0};
Point(56) = {0.076333, 0.724802, 0, 1.0};
Point(57) = {0.087156, 0.728866, 0, 1.0};
Point(58) = {0.097872, 0.732484, 0, 1.0};
Point(59) = {0.108232, 0.735523, 0, 1.0};
Point(60) = {0.117966, 0.737891, 0, 1.0};
Point(61) = {0.126793, 0.739547, 0, 1.0};
Point(62) = {0.134439, 0.740508, 0, 1.0};
Point(63) = {0.140653, 0.740839, 0, 1.0};
Point(64) = {0.145147, 0.740635, 0, 1.0};
Point(65) = {0.147689, 0.740300, 0, 1.0};
Point(66) = {-0.148482, -0.740174, 0, 1.0};
Point(67) = {-0.147715, -0.740316, 0, 1.0};
Point(68) = {-0.145530, -0.740825, 0, 1.0};
Point(69) = {-0.142191, -0.741726, 0, 1.0};
Point(70) = {-0.137935, -0.742885, 0, 1.0};
Point(71) = {-0.132885, -0.744094, 0, 1.0};
Point(72) = {-0.127027, -0.745166, 0, 1.0};
Point(73) = {-0.120269, -0.746077, 0, 1.0};
Point(74) = {-0.112669, -0.746899, 0, 1.0};
Point(75) = {-0.104335, -0.747646, 0, 1.0};
Point(76) = {-0.095386, -0.748316, 0, 1.0};
Point(77) = {-0.085943, -0.748900, 0, 1.0};
Point(78) = {-0.076136, -0.749383, 0, 1.0};
Point(79) = {-0.066098, -0.749745, 0, 1.0};
Point(80) = {-0.055962, -0.749960, 0, 1.0};
Point(81) = {-0.045861, -0.750000, 0, 1.0};
Point(82) = {-0.035922, -0.749831, 0, 1.0};
Point(83) = {-0.026270, -0.749414, 0, 1.0};
Point(84) = {-0.017022, -0.748705, 0, 1.0};
Point(85) = {-0.008292, -0.747645, 0, 1.0};
Point(86) = {-0.000161, -0.746078, 0, 1.0};
Point(87) = {0.007562, -0.743973, 0, 1.0};
Point(88) = {0.014863, -0.741510, 0, 1.0};
Point(89) = {0.021661, -0.738781, 0, 1.0};
Point(90) = {0.027889, -0.735862, 0, 1.0};
Point(91) = {0.033471, -0.732823, 0, 1.0};
Point(92) = {0.038348, -0.729729, 0, 1.0};
Point(93) = {0.042449, -0.726651, 0, 1.0};
Point(94) = {0.045712, -0.723642, 0, 1.0};
Point(95) = {0.048101, -0.720763, 0, 1.0};
Point(96) = {0.049555, -0.718101, 0, 1.0};
Point(97) = {0.049979, -0.716505, 0, 1.0};
Point(98) = {0.050019, -0.715951, 0, 1.0};
Point(99) = {0.050014, -0.715761, 0, 1.0};
Point(100) = {0.049977, -0.715438, 0, 1.0};
Point(101) = {0.049820, -0.714945, 0, 1.0};
Point(102) = {0.049570, -0.714438, 0, 1.0};
Point(103) = {0.049107, -0.713734, 0, 1.0};
Point(104) = {0.047017, -0.711628, 0, 1.0};
Point(105) = {0.043932, -0.709521, 0, 1.0};
Point(106) = {0.039942, -0.707479, 0, 1.0};
Point(107) = {0.035100, -0.705524, 0, 1.0};
Point(108) = {0.029523, -0.703628, 0, 1.0};
Point(109) = {0.023408, -0.701873, 0, 1.0};
Point(110) = {0.016844, -0.700346, 0, 1.0};
Point(111) = {0.009974, -0.699135, 0, 1.0};
Point(112) = {0.002940, -0.698285, 0, 1.0};
Point(113) = {-0.003952, -0.698200, 0, 1.0};
Point(114) = {-0.011098, -0.699196, 0, 1.0};
Point(115) = {-0.018689, -0.701200, 0, 1.0};
Point(116) = {-0.026900, -0.704095, 0, 1.0};
Point(117) = {-0.035754, -0.707653, 0, 1.0};
Point(118) = {-0.045210, -0.711691, 0, 1.0};
Point(119) = {-0.055200, -0.716024, 0, 1.0};
Point(120) = {-0.065621, -0.720459, 0, 1.0};
Point(121) = {-0.076333, -0.724802, 0, 1.0};
Point(122) = {-0.087156, -0.728866, 0, 1.0};
Point(123) = {-0.097872, -0.732484, 0, 1.0};
Point(124) = {-0.108232, -0.735523, 0, 1.0};
Point(125) = {-0.117966, -0.737891, 0, 1.0};
Point(126) = {-0.126793, -0.739547, 0, 1.0};
Point(127) = {-0.134439, -0.740508, 0, 1.0};
Point(128) = {-0.140653, -0.740839, 0, 1.0};
Point(129) = {-0.145147, -0.740635, 0, 1.0};
Point(130) = {-0.147689, -0.740300, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074241, 0.745087, 0, 1.0};
Point(2) = {0.073858, 0.745158, 0, 1.0};
Point(3) = {0.072765, 0.745412, 0, 1.0};
Point(4) = {0.071095, 0.745863, 0, 1.0};
Point(5) = {0.068968, 0.746442, 0, 1.0};
Point(6) = {0.066442, 0.747047, 0, 1.0};
Point(7) = {0.063513, 0.747583, 0, 1.0};
Point(8) = {0.060134, 0.748039, 0, 1.0};
Point(9) = {0.056334, 0.748450, 0, 1.0};
Point(10) = {0.052168, 0.748823, 0, 1.0};
Point(11) = {0.047693, 0.749158, 0, 1.0};
Point(12) = {0.042971, 0.749450, 0, 1.0};
Point(13) = {0.038068, 0.749692, 0, 1.0};
Point(14) = {0.033049, 0.749873, 0, 1.0};
Point(15) = {0.027981, 0.749980, 0, 1.0};
Point(16) = {0.022930, 0.750000, 0, 1.0};
Point(17) = {0.017961, 0.749915, 0, 1.0};
Point(18) = {0.013135, 0.749707, 0, 1.0};
Point(19) = {0.008511, 0.749353, 0, 1.0};
Point(20) = {0.004146, 0.748822, 0, 1.0};
Point(21) = {0.000081, 0.748039, 0, 1.0};
Point(22) = {-0.003781, 0.746987, 0, 1.0};
Point(23) = {-0.007431, 0.745755, 0, 1.0};
Point(24) = {-0.010831, 0.744391, 0, 1.0};
Point(25) = {-0.013944, 0.742931, 0, 1.0};
Point(26) = {-0.016736, 0.741411, 0, 1.0};
Point(27) = {-0.019174, 0.739865, 0, 1.0};
Point(28) = {-0.021224, 0.738326, 0, 1.0};
Point(29) = {-0.022856, 0.736821, 0, 1.0};
Point(30) = {-0.024051, 0.735382, 0, 1.0};
Point(31) = {-0.024777, 0.734050, 0, 1.0};
Point(32) = {-0.024989, 0.733252, 0, 1.0};
Point(33) = {-0.025009, 0.732976, 0, 1.0};
Point(34) = {-0.025007, 0.732880, 0, 1.0};
Point(35) = {-0.024988, 0.732719, 0, 1.0};
Point(36) = {-0.024910, 0.732472, 0, 1.0};
Point(37) = {-0.024785, 0.732219, 0, 1.0};
Point(38) = {-0.024554, 0.731867, 0, 1.0};
Point(39) = {-0.023509, 0.730814, 0, 1.0};
Point(40) = {-0.021966, 0.729760, 0, 1.0};
Point(41) = {-0.019971, 0.728740, 0, 1.0};
Point(42) = {-0.017550, 0.727762, 0, 1.0};
Point(43) = {-0.014761, 0.726814, 0, 1.0};
Point(44) = {-0.011704, 0.725936, 0, 1.0};
Point(45) = {-0.008422, 0.725173, 0, 1.0};
Point(46) = {-0.004987, 0.724567, 0, 1.0};
Point(47) = {-0.001470, 0.724143, 0, 1.0};
Point(48) = {0.001976, 0.724100, 0, 1.0};
Point(49) = {0.005549, 0.724598, 0, 1.0};
Point(50) = {0.009345, 0.725600, 0, 1.0};
Point(51) = {0.013450, 0.727048, 0, 1.0};
Point(52) = {0.017877, 0.728827, 0, 1.0};
Point(53) = {0.022605, 0.730846, 0, 1.0};
Point(54) = {0.027600, 0.733012, 0, 1.0};
Point(55) = {0.032811, 0.735230, 0, 1.0};
Point(56) = {0.038167, 0.737401, 0, 1.0};
Point(57) = {0.043578, 0.739433, 0, 1.0};
Point(58) = {0.048936, 0.741242, 0, 1.0};
Point(59) = {0.054116, 0.742761, 0, 1.0};
Point(60) = {0.058983, 0.743945, 0, 1.0};
Point(61) = {0.063396, 0.744774, 0, 1.0};
Point(62) = {0.067219, 0.745254, 0, 1.0};
Point(63) = {0.070326, 0.745419, 0, 1.0};
Point(64) = {0.072574, 0.745318, 0, 1.0};
Point(65) = {0.073845, 0.745150, 0, 1.0};
Point(66) = {-0.074241, -0.745087, 0, 1.0};
Point(67) = {-0.073858, -0.745158, 0, 1.0};
Point(68) = {-0.072765, -0.745412, 0, 1.0};
Point(69) = {-0.071095, -0.745863, 0, 1.0};
Point(70) = {-0.068968, -0.746442, 0, 1.0};
Point(71) = {-0.066442, -0.747047, 0, 1.0};
Point(72) = {-0.063513, -0.747583, 0, 1.0};
Point(73) = {-0.060134, -0.748039, 0, 1.0};
Point(74) = {-0.056334, -0.748450, 0, 1.0};
Point(75) = {-0.052168, -0.748823, 0, 1.0};
Point(76) = {-0.047693, -0.749158, 0, 1.0};
Point(77) = {-0.042971, -0.749450, 0, 1.0};
Point(78) = {-0.038068, -0.749692, 0, 1.0};
Point(79) = {-0.033049, -0.749873, 0, 1.0};
Point(80) = {-0.027981, -0.749980, 0, 1.0};
Point(81) = {-0.022930, -0.750000, 0, 1.0};
Point(82) = {-0.017961, -0.749915, 0, 1.0};
Point(83) = {-0.013135, -0.749707, 0, 1.0};
Point(84) = {-0.008511, -0.749353, 0, 1.0};
Point(85) = {-0.004146, -0.748822, 0, 1.0};
Point(86) = {-0.000081, -0.748039, 0, 1.0};
Point(87) = {0.003781, -0.746987, 0, 1.0};
Point(88) = {0.007431, -0.745755, 0, 1.0};
Point(89) = {0.010831, -0.744391, 0, 1.0};
Point(90) = {0.013944, -0.742931, 0, 1.0};
Point(91) = {0.016736, -0.741411, 0, 1.0};
Point(92) = {0.019174, -0.739865, 0, 1.0};
Point(93) = {0.021224, -0.738326, 0, 1.0};
Point(94) = {0.022856, -0.736821, 0, 1.0};
Point(95) = {0.024051, -0.735382, 0, 1.0};
Point(96) = {0.024777, -0.734050, 0, 1.0};
Point(97) = {0.024989, -0.733252, 0, 1.0};
Point(98) = {0.025009, -0.732976, 0, 1.0};
Point(99) = {0.025007, -0.732880, 0, 1.0};
Point(100) = {0.024988, -0.732719, 0, 1.0};
Point(101) = {0.024910, -0.732472, 0, 1.0};
Point(102) = {0.024785, -0.732219, 0, 1.0};
Point(103) = {0.024554, -0.731867, 0, 1.0};
Point(104) = {0.023509, -0.730814, 0, 1.0};
Point(105) = {0.021966, -0.729760, 0, 1.0};
Point(106) = {0.019971, -0.728740, 0, 1.0};
Point(107) = {0.017550, -0.727762, 0, 1.0};
Point(108) = {0.014761, -0.726814, 0, 1.0};
Point(109) = {0.011704, -0.725936, 0, 1.0};
Point(110) = {0.008422, -0.725173, 0, 1.0};
Point(111) = {0.004987, -0.724567, 0, 1.0};
Point(112) = {0.001470, -0.724143, 0, 1.0};
Point(113) = {-0.001976, -0.724100, 0, 1.0};
Point(114) = {-0.005549, -0.724598, 0, 1.0};
Point(115) = {-0.009345, -0.725600, 0, 1.0};
Point(116) = {-0.013450, -0.727048, 0, 1.0};
Point(117) = {-0.017877, -0.728827, 0, 1.0};
Point(118) = {-0.022605, -0.730846, 0, 1.0};
Point(119) = {-0.027600, -0.733012, 0, 1.0};
Point(120) = {-0.032811, -0.735230, 0, 1.0};
Point(121) = {-0.038167, -0.737401, 0, 1.0};
Point(122) = {-0.043578, -0.739433, 0, 1.0};
Point(123) = {-0.048936, -0.741242, 0, 1.0};
Point(124) = {-0.054116, -0.742761, 0, 1.0};
Point(125) = {-0.058983, -0.743945, 0, 1.0};
Point(126) = {-0.063396, -0.744774, 0, 1.0};
Point(127) = {-0.067219, -0.745254, 0, 1.0};
Point(128) = {-0.070326, -0.745419, 0, 1.0};
Point(129) = {-0.072574, -0.745318, 0, 1.0};
Point(130) = {-0.073845, -0.745150, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
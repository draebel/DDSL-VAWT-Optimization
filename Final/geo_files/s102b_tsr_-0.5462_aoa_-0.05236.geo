SetFactory("OpenCASCADE");

Point(1) = {0.074998, 0.737455, 0, 1.0};
Point(2) = {0.074209, 0.737627, 0, 1.0};
Point(3) = {0.069991, 0.738541, 0, 1.0};
Point(4) = {0.064941, 0.739617, 0, 1.0};
Point(5) = {0.059512, 0.740741, 0, 1.0};
Point(6) = {0.053475, 0.741934, 0, 1.0};
Point(7) = {0.046931, 0.743193, 0, 1.0};
Point(8) = {0.039987, 0.744489, 0, 1.0};
Point(9) = {0.032749, 0.745784, 0, 1.0};
Point(10) = {0.025323, 0.747028, 0, 1.0};
Point(11) = {0.017811, 0.748160, 0, 1.0};
Point(12) = {0.010310, 0.749087, 0, 1.0};
Point(13) = {0.002833, 0.749697, 0, 1.0};
Point(14) = {-0.004677, 0.749974, 0, 1.0};
Point(15) = {-0.012194, 0.750000, 0, 1.0};
Point(16) = {-0.019633, 0.749827, 0, 1.0};
Point(17) = {-0.026904, 0.749480, 0, 1.0};
Point(18) = {-0.033919, 0.748981, 0, 1.0};
Point(19) = {-0.040593, 0.748347, 0, 1.0};
Point(20) = {-0.046842, 0.747597, 0, 1.0};
Point(21) = {-0.052579, 0.746743, 0, 1.0};
Point(22) = {-0.057721, 0.745796, 0, 1.0};
Point(23) = {-0.062173, 0.744732, 0, 1.0};
Point(24) = {-0.065904, 0.743480, 0, 1.0};
Point(25) = {-0.068974, 0.742026, 0, 1.0};
Point(26) = {-0.071427, 0.740445, 0, 1.0};
Point(27) = {-0.073252, 0.738824, 0, 1.0};
Point(28) = {-0.074443, 0.737245, 0, 1.0};
Point(29) = {-0.074975, 0.735824, 0, 1.0};
Point(30) = {-0.075000, 0.735545, 0, 1.0};
Point(31) = {-0.074987, 0.735253, 0, 1.0};
Point(32) = {-0.074916, 0.735001, 0, 1.0};
Point(33) = {-0.074764, 0.734772, 0, 1.0};
Point(34) = {-0.074530, 0.734543, 0, 1.0};
Point(35) = {-0.073403, 0.733814, 0, 1.0};
Point(36) = {-0.071152, 0.732883, 0, 1.0};
Point(37) = {-0.068057, 0.731971, 0, 1.0};
Point(38) = {-0.064177, 0.731083, 0, 1.0};
Point(39) = {-0.059573, 0.730230, 0, 1.0};
Point(40) = {-0.054316, 0.729421, 0, 1.0};
Point(41) = {-0.048475, 0.728672, 0, 1.0};
Point(42) = {-0.042134, 0.727996, 0, 1.0};
Point(43) = {-0.035375, 0.727414, 0, 1.0};
Point(44) = {-0.028284, 0.726948, 0, 1.0};
Point(45) = {-0.020953, 0.726624, 0, 1.0};
Point(46) = {-0.013474, 0.726477, 0, 1.0};
Point(47) = {-0.005937, 0.726547, 0, 1.0};
Point(48) = {0.001556, 0.726932, 0, 1.0};
Point(49) = {0.009060, 0.727786, 0, 1.0};
Point(50) = {0.016772, 0.729053, 0, 1.0};
Point(51) = {0.024707, 0.730472, 0, 1.0};
Point(52) = {0.032710, 0.731862, 0, 1.0};
Point(53) = {0.040612, 0.733123, 0, 1.0};
Point(54) = {0.048246, 0.734184, 0, 1.0};
Point(55) = {0.055443, 0.735011, 0, 1.0};
Point(56) = {0.062045, 0.735581, 0, 1.0};
Point(57) = {0.067897, 0.735897, 0, 1.0};
Point(58) = {0.072847, 0.735992, 0, 1.0};
Point(59) = {0.075000, 0.735979, 0, 1.0};
Point(60) = {-0.074998, -0.737455, 0, 1.0};
Point(61) = {-0.074209, -0.737627, 0, 1.0};
Point(62) = {-0.069991, -0.738541, 0, 1.0};
Point(63) = {-0.064941, -0.739617, 0, 1.0};
Point(64) = {-0.059512, -0.740741, 0, 1.0};
Point(65) = {-0.053475, -0.741934, 0, 1.0};
Point(66) = {-0.046931, -0.743193, 0, 1.0};
Point(67) = {-0.039987, -0.744489, 0, 1.0};
Point(68) = {-0.032749, -0.745784, 0, 1.0};
Point(69) = {-0.025323, -0.747028, 0, 1.0};
Point(70) = {-0.017811, -0.748160, 0, 1.0};
Point(71) = {-0.010310, -0.749087, 0, 1.0};
Point(72) = {-0.002833, -0.749697, 0, 1.0};
Point(73) = {0.004677, -0.749974, 0, 1.0};
Point(74) = {0.012194, -0.750000, 0, 1.0};
Point(75) = {0.019633, -0.749827, 0, 1.0};
Point(76) = {0.026904, -0.749480, 0, 1.0};
Point(77) = {0.033919, -0.748981, 0, 1.0};
Point(78) = {0.040593, -0.748347, 0, 1.0};
Point(79) = {0.046842, -0.747597, 0, 1.0};
Point(80) = {0.052579, -0.746743, 0, 1.0};
Point(81) = {0.057721, -0.745796, 0, 1.0};
Point(82) = {0.062173, -0.744732, 0, 1.0};
Point(83) = {0.065904, -0.743480, 0, 1.0};
Point(84) = {0.068974, -0.742026, 0, 1.0};
Point(85) = {0.071427, -0.740445, 0, 1.0};
Point(86) = {0.073252, -0.738824, 0, 1.0};
Point(87) = {0.074443, -0.737245, 0, 1.0};
Point(88) = {0.074975, -0.735824, 0, 1.0};
Point(89) = {0.075000, -0.735545, 0, 1.0};
Point(90) = {0.074987, -0.735253, 0, 1.0};
Point(91) = {0.074916, -0.735001, 0, 1.0};
Point(92) = {0.074764, -0.734772, 0, 1.0};
Point(93) = {0.074530, -0.734543, 0, 1.0};
Point(94) = {0.073403, -0.733814, 0, 1.0};
Point(95) = {0.071152, -0.732883, 0, 1.0};
Point(96) = {0.068057, -0.731971, 0, 1.0};
Point(97) = {0.064177, -0.731083, 0, 1.0};
Point(98) = {0.059573, -0.730230, 0, 1.0};
Point(99) = {0.054316, -0.729421, 0, 1.0};
Point(100) = {0.048475, -0.728672, 0, 1.0};
Point(101) = {0.042134, -0.727996, 0, 1.0};
Point(102) = {0.035375, -0.727414, 0, 1.0};
Point(103) = {0.028284, -0.726948, 0, 1.0};
Point(104) = {0.020953, -0.726624, 0, 1.0};
Point(105) = {0.013474, -0.726477, 0, 1.0};
Point(106) = {0.005937, -0.726547, 0, 1.0};
Point(107) = {-0.001556, -0.726932, 0, 1.0};
Point(108) = {-0.009060, -0.727786, 0, 1.0};
Point(109) = {-0.016772, -0.729053, 0, 1.0};
Point(110) = {-0.024707, -0.730472, 0, 1.0};
Point(111) = {-0.032710, -0.731862, 0, 1.0};
Point(112) = {-0.040612, -0.733123, 0, 1.0};
Point(113) = {-0.048246, -0.734184, 0, 1.0};
Point(114) = {-0.055443, -0.735011, 0, 1.0};
Point(115) = {-0.062045, -0.735581, 0, 1.0};
Point(116) = {-0.067897, -0.735897, 0, 1.0};
Point(117) = {-0.072847, -0.735992, 0, 1.0};
Point(118) = {-0.075000, -0.735979, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:77};
Spline(6) = {77:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
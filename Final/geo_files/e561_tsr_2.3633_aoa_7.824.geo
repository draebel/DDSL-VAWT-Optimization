SetFactory("OpenCASCADE");

Point(1) = {0.111434, 0.716057, 0, 1.0};
Point(2) = {0.110935, 0.716327, 0, 1.0};
Point(3) = {0.109573, 0.717126, 0, 1.0};
Point(4) = {0.107542, 0.718332, 0, 1.0};
Point(5) = {0.104861, 0.719751, 0, 1.0};
Point(6) = {0.101450, 0.721326, 0, 1.0};
Point(7) = {0.097315, 0.723092, 0, 1.0};
Point(8) = {0.092533, 0.725048, 0, 1.0};
Point(9) = {0.087175, 0.727168, 0, 1.0};
Point(10) = {0.081321, 0.729422, 0, 1.0};
Point(11) = {0.075053, 0.731770, 0, 1.0};
Point(12) = {0.068455, 0.734168, 0, 1.0};
Point(13) = {0.061612, 0.736566, 0, 1.0};
Point(14) = {0.054603, 0.738913, 0, 1.0};
Point(15) = {0.047509, 0.741157, 0, 1.0};
Point(16) = {0.040401, 0.743247, 0, 1.0};
Point(17) = {0.033353, 0.745133, 0, 1.0};
Point(18) = {0.026425, 0.746768, 0, 1.0};
Point(19) = {0.019680, 0.748112, 0, 1.0};
Point(20) = {0.013168, 0.749119, 0, 1.0};
Point(21) = {0.006918, 0.749749, 0, 1.0};
Point(22) = {0.000940, 0.750000, 0, 1.0};
Point(23) = {-0.004739, 0.749887, 0, 1.0};
Point(24) = {-0.010086, 0.749436, 0, 1.0};
Point(25) = {-0.015066, 0.748678, 0, 1.0};
Point(26) = {-0.019639, 0.747648, 0, 1.0};
Point(27) = {-0.023769, 0.746389, 0, 1.0};
Point(28) = {-0.027412, 0.744944, 0, 1.0};
Point(29) = {-0.030530, 0.743353, 0, 1.0};
Point(30) = {-0.033093, 0.741664, 0, 1.0};
Point(31) = {-0.035068, 0.739929, 0, 1.0};
Point(32) = {-0.036435, 0.738212, 0, 1.0};
Point(33) = {-0.037151, 0.736613, 0, 1.0};
Point(34) = {-0.037004, 0.735202, 0, 1.0};
Point(35) = {-0.035922, 0.733821, 0, 1.0};
Point(36) = {-0.034065, 0.732360, 0, 1.0};
Point(37) = {-0.031508, 0.730902, 0, 1.0};
Point(38) = {-0.028287, 0.729507, 0, 1.0};
Point(39) = {-0.024424, 0.728230, 0, 1.0};
Point(40) = {-0.019938, 0.727109, 0, 1.0};
Point(41) = {-0.014841, 0.726182, 0, 1.0};
Point(42) = {-0.009143, 0.725459, 0, 1.0};
Point(43) = {-0.002864, 0.724943, 0, 1.0};
Point(44) = {0.003972, 0.724617, 0, 1.0};
Point(45) = {0.011334, 0.724455, 0, 1.0};
Point(46) = {0.019189, 0.724396, 0, 1.0};
Point(47) = {0.027452, 0.724348, 0, 1.0};
Point(48) = {0.035989, 0.724248, 0, 1.0};
Point(49) = {0.044661, 0.724059, 0, 1.0};
Point(50) = {0.053329, 0.723758, 0, 1.0};
Point(51) = {0.061855, 0.723330, 0, 1.0};
Point(52) = {0.070099, 0.722774, 0, 1.0};
Point(53) = {0.077926, 0.722091, 0, 1.0};
Point(54) = {0.085201, 0.721298, 0, 1.0};
Point(55) = {0.091803, 0.720417, 0, 1.0};
Point(56) = {0.097614, 0.719478, 0, 1.0};
Point(57) = {0.102525, 0.718518, 0, 1.0};
Point(58) = {0.106424, 0.717592, 0, 1.0};
Point(59) = {0.109219, 0.716797, 0, 1.0};
Point(60) = {0.110884, 0.716252, 0, 1.0};
Point(61) = {-0.111434, -0.716057, 0, 1.0};
Point(62) = {-0.110935, -0.716327, 0, 1.0};
Point(63) = {-0.109573, -0.717126, 0, 1.0};
Point(64) = {-0.107542, -0.718332, 0, 1.0};
Point(65) = {-0.104861, -0.719751, 0, 1.0};
Point(66) = {-0.101450, -0.721326, 0, 1.0};
Point(67) = {-0.097315, -0.723092, 0, 1.0};
Point(68) = {-0.092533, -0.725048, 0, 1.0};
Point(69) = {-0.087175, -0.727168, 0, 1.0};
Point(70) = {-0.081321, -0.729422, 0, 1.0};
Point(71) = {-0.075053, -0.731770, 0, 1.0};
Point(72) = {-0.068455, -0.734168, 0, 1.0};
Point(73) = {-0.061612, -0.736566, 0, 1.0};
Point(74) = {-0.054603, -0.738913, 0, 1.0};
Point(75) = {-0.047509, -0.741157, 0, 1.0};
Point(76) = {-0.040401, -0.743247, 0, 1.0};
Point(77) = {-0.033353, -0.745133, 0, 1.0};
Point(78) = {-0.026425, -0.746768, 0, 1.0};
Point(79) = {-0.019680, -0.748112, 0, 1.0};
Point(80) = {-0.013168, -0.749119, 0, 1.0};
Point(81) = {-0.006918, -0.749749, 0, 1.0};
Point(82) = {-0.000940, -0.750000, 0, 1.0};
Point(83) = {0.004739, -0.749887, 0, 1.0};
Point(84) = {0.010086, -0.749436, 0, 1.0};
Point(85) = {0.015066, -0.748678, 0, 1.0};
Point(86) = {0.019639, -0.747648, 0, 1.0};
Point(87) = {0.023769, -0.746389, 0, 1.0};
Point(88) = {0.027412, -0.744944, 0, 1.0};
Point(89) = {0.030530, -0.743353, 0, 1.0};
Point(90) = {0.033093, -0.741664, 0, 1.0};
Point(91) = {0.035068, -0.739929, 0, 1.0};
Point(92) = {0.036435, -0.738212, 0, 1.0};
Point(93) = {0.037151, -0.736613, 0, 1.0};
Point(94) = {0.037004, -0.735202, 0, 1.0};
Point(95) = {0.035922, -0.733821, 0, 1.0};
Point(96) = {0.034065, -0.732360, 0, 1.0};
Point(97) = {0.031508, -0.730902, 0, 1.0};
Point(98) = {0.028287, -0.729507, 0, 1.0};
Point(99) = {0.024424, -0.728230, 0, 1.0};
Point(100) = {0.019938, -0.727109, 0, 1.0};
Point(101) = {0.014841, -0.726182, 0, 1.0};
Point(102) = {0.009143, -0.725459, 0, 1.0};
Point(103) = {0.002864, -0.724943, 0, 1.0};
Point(104) = {-0.003972, -0.724617, 0, 1.0};
Point(105) = {-0.011334, -0.724455, 0, 1.0};
Point(106) = {-0.019189, -0.724396, 0, 1.0};
Point(107) = {-0.027452, -0.724348, 0, 1.0};
Point(108) = {-0.035989, -0.724248, 0, 1.0};
Point(109) = {-0.044661, -0.724059, 0, 1.0};
Point(110) = {-0.053329, -0.723758, 0, 1.0};
Point(111) = {-0.061855, -0.723330, 0, 1.0};
Point(112) = {-0.070099, -0.722774, 0, 1.0};
Point(113) = {-0.077926, -0.722091, 0, 1.0};
Point(114) = {-0.085201, -0.721298, 0, 1.0};
Point(115) = {-0.091803, -0.720417, 0, 1.0};
Point(116) = {-0.097614, -0.719478, 0, 1.0};
Point(117) = {-0.102525, -0.718518, 0, 1.0};
Point(118) = {-0.106424, -0.717592, 0, 1.0};
Point(119) = {-0.109219, -0.716797, 0, 1.0};
Point(120) = {-0.110884, -0.716252, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
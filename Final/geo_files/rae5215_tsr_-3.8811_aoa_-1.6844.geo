SetFactory("OpenCASCADE");

Point(1) = {0.074918, 0.744920, 0, 1.0};
Point(2) = {0.072900, 0.745158, 0, 1.0};
Point(3) = {0.068917, 0.745616, 0, 1.0};
Point(4) = {0.064305, 0.746118, 0, 1.0};
Point(5) = {0.059102, 0.746678, 0, 1.0};
Point(6) = {0.053365, 0.747275, 0, 1.0};
Point(7) = {0.047146, 0.747881, 0, 1.0};
Point(8) = {0.040506, 0.748478, 0, 1.0};
Point(9) = {0.033510, 0.749026, 0, 1.0};
Point(10) = {0.026228, 0.749475, 0, 1.0};
Point(11) = {0.018731, 0.749777, 0, 1.0};
Point(12) = {0.011088, 0.749951, 0, 1.0};
Point(13) = {0.003376, 0.750000, 0, 1.0};
Point(14) = {-0.004334, 0.749927, 0, 1.0};
Point(15) = {-0.011967, 0.749772, 0, 1.0};
Point(16) = {-0.019447, 0.749527, 0, 1.0};
Point(17) = {-0.026707, 0.749210, 0, 1.0};
Point(18) = {-0.033676, 0.748822, 0, 1.0};
Point(19) = {-0.040285, 0.748386, 0, 1.0};
Point(20) = {-0.046472, 0.747895, 0, 1.0};
Point(21) = {-0.052175, 0.747356, 0, 1.0};
Point(22) = {-0.057344, 0.746770, 0, 1.0};
Point(23) = {-0.061924, 0.746166, 0, 1.0};
Point(24) = {-0.065872, 0.745440, 0, 1.0};
Point(25) = {-0.069146, 0.744499, 0, 1.0};
Point(26) = {-0.070400, 0.744021, 0, 1.0};
Point(27) = {-0.071714, 0.743393, 0, 1.0};
Point(28) = {-0.072724, 0.742795, 0, 1.0};
Point(29) = {-0.073553, 0.742157, 0, 1.0};
Point(30) = {-0.073800, 0.741914, 0, 1.0};
Point(31) = {-0.074028, 0.741652, 0, 1.0};
Point(32) = {-0.074255, 0.741334, 0, 1.0};
Point(33) = {-0.074479, 0.740954, 0, 1.0};
Point(34) = {-0.074641, 0.740611, 0, 1.0};
Point(35) = {-0.074759, 0.740288, 0, 1.0};
Point(36) = {-0.074844, 0.739982, 0, 1.0};
Point(37) = {-0.074913, 0.739650, 0, 1.0};
Point(38) = {-0.074968, 0.738827, 0, 1.0};
Point(39) = {-0.074870, 0.738184, 0, 1.0};
Point(40) = {-0.074785, 0.737975, 0, 1.0};
Point(41) = {-0.074685, 0.737789, 0, 1.0};
Point(42) = {-0.074552, 0.737604, 0, 1.0};
Point(43) = {-0.074376, 0.737428, 0, 1.0};
Point(44) = {-0.074134, 0.737231, 0, 1.0};
Point(45) = {-0.073893, 0.737066, 0, 1.0};
Point(46) = {-0.073653, 0.736933, 0, 1.0};
Point(47) = {-0.073396, 0.736802, 0, 1.0};
Point(48) = {-0.072539, 0.736486, 0, 1.0};
Point(49) = {-0.071503, 0.736211, 0, 1.0};
Point(50) = {-0.070161, 0.735905, 0, 1.0};
Point(51) = {-0.068886, 0.735673, 0, 1.0};
Point(52) = {-0.065572, 0.735234, 0, 1.0};
Point(53) = {-0.061591, 0.734836, 0, 1.0};
Point(54) = {-0.056984, 0.734519, 0, 1.0};
Point(55) = {-0.051790, 0.734266, 0, 1.0};
Point(56) = {-0.046066, 0.734081, 0, 1.0};
Point(57) = {-0.039862, 0.733989, 0, 1.0};
Point(58) = {-0.033239, 0.733987, 0, 1.0};
Point(59) = {-0.026263, 0.734099, 0, 1.0};
Point(60) = {-0.019001, 0.734353, 0, 1.0};
Point(61) = {-0.011525, 0.734756, 0, 1.0};
Point(62) = {-0.003904, 0.735315, 0, 1.0};
Point(63) = {0.003786, 0.736057, 0, 1.0};
Point(64) = {0.011470, 0.736982, 0, 1.0};
Point(65) = {0.019077, 0.738025, 0, 1.0};
Point(66) = {0.026533, 0.739112, 0, 1.0};
Point(67) = {0.033772, 0.740138, 0, 1.0};
Point(68) = {0.040726, 0.741020, 0, 1.0};
Point(69) = {0.047327, 0.741756, 0, 1.0};
Point(70) = {0.053511, 0.742330, 0, 1.0};
Point(71) = {0.059217, 0.742757, 0, 1.0};
Point(72) = {0.064395, 0.743059, 0, 1.0};
Point(73) = {0.068986, 0.743264, 0, 1.0};
Point(74) = {0.072953, 0.743375, 0, 1.0};
Point(75) = {0.074962, 0.743412, 0, 1.0};
Point(76) = {-0.074918, -0.744920, 0, 1.0};
Point(77) = {-0.072900, -0.745158, 0, 1.0};
Point(78) = {-0.068917, -0.745616, 0, 1.0};
Point(79) = {-0.064305, -0.746118, 0, 1.0};
Point(80) = {-0.059102, -0.746678, 0, 1.0};
Point(81) = {-0.053365, -0.747275, 0, 1.0};
Point(82) = {-0.047146, -0.747881, 0, 1.0};
Point(83) = {-0.040506, -0.748478, 0, 1.0};
Point(84) = {-0.033510, -0.749026, 0, 1.0};
Point(85) = {-0.026228, -0.749475, 0, 1.0};
Point(86) = {-0.018731, -0.749777, 0, 1.0};
Point(87) = {-0.011088, -0.749951, 0, 1.0};
Point(88) = {-0.003376, -0.750000, 0, 1.0};
Point(89) = {0.004334, -0.749927, 0, 1.0};
Point(90) = {0.011967, -0.749772, 0, 1.0};
Point(91) = {0.019447, -0.749527, 0, 1.0};
Point(92) = {0.026707, -0.749210, 0, 1.0};
Point(93) = {0.033676, -0.748822, 0, 1.0};
Point(94) = {0.040285, -0.748386, 0, 1.0};
Point(95) = {0.046472, -0.747895, 0, 1.0};
Point(96) = {0.052175, -0.747356, 0, 1.0};
Point(97) = {0.057344, -0.746770, 0, 1.0};
Point(98) = {0.061924, -0.746166, 0, 1.0};
Point(99) = {0.065872, -0.745440, 0, 1.0};
Point(100) = {0.069146, -0.744499, 0, 1.0};
Point(101) = {0.070400, -0.744021, 0, 1.0};
Point(102) = {0.071714, -0.743393, 0, 1.0};
Point(103) = {0.072724, -0.742795, 0, 1.0};
Point(104) = {0.073553, -0.742157, 0, 1.0};
Point(105) = {0.073800, -0.741914, 0, 1.0};
Point(106) = {0.074028, -0.741652, 0, 1.0};
Point(107) = {0.074255, -0.741334, 0, 1.0};
Point(108) = {0.074479, -0.740954, 0, 1.0};
Point(109) = {0.074641, -0.740611, 0, 1.0};
Point(110) = {0.074759, -0.740288, 0, 1.0};
Point(111) = {0.074844, -0.739982, 0, 1.0};
Point(112) = {0.074913, -0.739650, 0, 1.0};
Point(113) = {0.074968, -0.738827, 0, 1.0};
Point(114) = {0.074870, -0.738184, 0, 1.0};
Point(115) = {0.074785, -0.737975, 0, 1.0};
Point(116) = {0.074685, -0.737789, 0, 1.0};
Point(117) = {0.074552, -0.737604, 0, 1.0};
Point(118) = {0.074376, -0.737428, 0, 1.0};
Point(119) = {0.074134, -0.737231, 0, 1.0};
Point(120) = {0.073893, -0.737066, 0, 1.0};
Point(121) = {0.073653, -0.736933, 0, 1.0};
Point(122) = {0.073396, -0.736802, 0, 1.0};
Point(123) = {0.072539, -0.736486, 0, 1.0};
Point(124) = {0.071503, -0.736211, 0, 1.0};
Point(125) = {0.070161, -0.735905, 0, 1.0};
Point(126) = {0.068886, -0.735673, 0, 1.0};
Point(127) = {0.065572, -0.735234, 0, 1.0};
Point(128) = {0.061591, -0.734836, 0, 1.0};
Point(129) = {0.056984, -0.734519, 0, 1.0};
Point(130) = {0.051790, -0.734266, 0, 1.0};
Point(131) = {0.046066, -0.734081, 0, 1.0};
Point(132) = {0.039862, -0.733989, 0, 1.0};
Point(133) = {0.033239, -0.733987, 0, 1.0};
Point(134) = {0.026263, -0.734099, 0, 1.0};
Point(135) = {0.019001, -0.734353, 0, 1.0};
Point(136) = {0.011525, -0.734756, 0, 1.0};
Point(137) = {0.003904, -0.735315, 0, 1.0};
Point(138) = {-0.003786, -0.736057, 0, 1.0};
Point(139) = {-0.011470, -0.736982, 0, 1.0};
Point(140) = {-0.019077, -0.738025, 0, 1.0};
Point(141) = {-0.026533, -0.739112, 0, 1.0};
Point(142) = {-0.033772, -0.740138, 0, 1.0};
Point(143) = {-0.040726, -0.741020, 0, 1.0};
Point(144) = {-0.047327, -0.741756, 0, 1.0};
Point(145) = {-0.053511, -0.742330, 0, 1.0};
Point(146) = {-0.059217, -0.742757, 0, 1.0};
Point(147) = {-0.064395, -0.743059, 0, 1.0};
Point(148) = {-0.068986, -0.743264, 0, 1.0};
Point(149) = {-0.072953, -0.743375, 0, 1.0};
Point(150) = {-0.074962, -0.743412, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:58};
Spline(3) = {58:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:93};
Spline(6) = {93:133};
Spline(7) = {133:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {36.00000000, 15.00000000, 0, 1.0};
Point(154) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
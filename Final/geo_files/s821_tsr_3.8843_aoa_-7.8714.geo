SetFactory("OpenCASCADE");

Point(1) = {0.074058, 0.746825, 0, 1.0};
Point(2) = {0.073669, 0.746870, 0, 1.0};
Point(3) = {0.072550, 0.747048, 0, 1.0};
Point(4) = {0.070817, 0.747382, 0, 1.0};
Point(5) = {0.068587, 0.747825, 0, 1.0};
Point(6) = {0.065927, 0.748291, 0, 1.0};
Point(7) = {0.062848, 0.748696, 0, 1.0};
Point(8) = {0.059318, 0.749026, 0, 1.0};
Point(9) = {0.055375, 0.749312, 0, 1.0};
Point(10) = {0.051076, 0.749559, 0, 1.0};
Point(11) = {0.046485, 0.749762, 0, 1.0};
Point(12) = {0.041666, 0.749911, 0, 1.0};
Point(13) = {0.036684, 0.749995, 0, 1.0};
Point(14) = {0.031602, 0.750000, 0, 1.0};
Point(15) = {0.026483, 0.749910, 0, 1.0};
Point(16) = {0.021385, 0.749709, 0, 1.0};
Point(17) = {0.016363, 0.749384, 0, 1.0};
Point(18) = {0.011468, 0.748921, 0, 1.0};
Point(19) = {0.006747, 0.748310, 0, 1.0};
Point(20) = {0.002242, 0.747542, 0, 1.0};
Point(21) = {-0.002012, 0.746602, 0, 1.0};
Point(22) = {-0.006022, 0.745499, 0, 1.0};
Point(23) = {-0.009752, 0.744278, 0, 1.0};
Point(24) = {-0.013160, 0.742964, 0, 1.0};
Point(25) = {-0.016210, 0.741581, 0, 1.0};
Point(26) = {-0.018863, 0.740151, 0, 1.0};
Point(27) = {-0.021090, 0.738694, 0, 1.0};
Point(28) = {-0.022854, 0.737232, 0, 1.0};
Point(29) = {-0.024142, 0.735784, 0, 1.0};
Point(30) = {-0.024805, 0.734662, 0, 1.0};
Point(31) = {-0.024906, 0.734406, 0, 1.0};
Point(32) = {-0.024932, 0.734328, 0, 1.0};
Point(33) = {-0.025013, 0.734003, 0, 1.0};
Point(34) = {-0.025038, 0.733672, 0, 1.0};
Point(35) = {-0.025023, 0.733323, 0, 1.0};
Point(36) = {-0.024988, 0.733047, 0, 1.0};
Point(37) = {-0.024524, 0.731510, 0, 1.0};
Point(38) = {-0.023642, 0.729876, 0, 1.0};
Point(39) = {-0.022405, 0.728193, 0, 1.0};
Point(40) = {-0.020872, 0.726546, 0, 1.0};
Point(41) = {-0.019064, 0.724992, 0, 1.0};
Point(42) = {-0.017024, 0.723598, 0, 1.0};
Point(43) = {-0.014777, 0.722431, 0, 1.0};
Point(44) = {-0.012340, 0.721595, 0, 1.0};
Point(45) = {-0.009656, 0.721120, 0, 1.0};
Point(46) = {-0.006761, 0.721062, 0, 1.0};
Point(47) = {-0.003554, 0.721453, 0, 1.0};
Point(48) = {-0.000032, 0.722239, 0, 1.0};
Point(49) = {0.003797, 0.723397, 0, 1.0};
Point(50) = {0.007925, 0.724898, 0, 1.0};
Point(51) = {0.012345, 0.726706, 0, 1.0};
Point(52) = {0.017043, 0.728768, 0, 1.0};
Point(53) = {0.021998, 0.731019, 0, 1.0};
Point(54) = {0.027179, 0.733384, 0, 1.0};
Point(55) = {0.032535, 0.735775, 0, 1.0};
Point(56) = {0.038001, 0.738102, 0, 1.0};
Point(57) = {0.043490, 0.740275, 0, 1.0};
Point(58) = {0.048896, 0.742215, 0, 1.0};
Point(59) = {0.054097, 0.743854, 0, 1.0};
Point(60) = {0.058960, 0.745149, 0, 1.0};
Point(61) = {0.063348, 0.746082, 0, 1.0};
Point(62) = {0.067128, 0.746665, 0, 1.0};
Point(63) = {0.070181, 0.746935, 0, 1.0};
Point(64) = {0.072388, 0.746947, 0, 1.0};
Point(65) = {0.073657, 0.746863, 0, 1.0};
Point(66) = {-0.074058, -0.746825, 0, 1.0};
Point(67) = {-0.073669, -0.746870, 0, 1.0};
Point(68) = {-0.072550, -0.747048, 0, 1.0};
Point(69) = {-0.070817, -0.747382, 0, 1.0};
Point(70) = {-0.068587, -0.747825, 0, 1.0};
Point(71) = {-0.065927, -0.748291, 0, 1.0};
Point(72) = {-0.062848, -0.748696, 0, 1.0};
Point(73) = {-0.059318, -0.749026, 0, 1.0};
Point(74) = {-0.055375, -0.749312, 0, 1.0};
Point(75) = {-0.051076, -0.749559, 0, 1.0};
Point(76) = {-0.046485, -0.749762, 0, 1.0};
Point(77) = {-0.041666, -0.749911, 0, 1.0};
Point(78) = {-0.036684, -0.749995, 0, 1.0};
Point(79) = {-0.031602, -0.750000, 0, 1.0};
Point(80) = {-0.026483, -0.749910, 0, 1.0};
Point(81) = {-0.021385, -0.749709, 0, 1.0};
Point(82) = {-0.016363, -0.749384, 0, 1.0};
Point(83) = {-0.011468, -0.748921, 0, 1.0};
Point(84) = {-0.006747, -0.748310, 0, 1.0};
Point(85) = {-0.002242, -0.747542, 0, 1.0};
Point(86) = {0.002012, -0.746602, 0, 1.0};
Point(87) = {0.006022, -0.745499, 0, 1.0};
Point(88) = {0.009752, -0.744278, 0, 1.0};
Point(89) = {0.013160, -0.742964, 0, 1.0};
Point(90) = {0.016210, -0.741581, 0, 1.0};
Point(91) = {0.018863, -0.740151, 0, 1.0};
Point(92) = {0.021090, -0.738694, 0, 1.0};
Point(93) = {0.022854, -0.737232, 0, 1.0};
Point(94) = {0.024142, -0.735784, 0, 1.0};
Point(95) = {0.024805, -0.734662, 0, 1.0};
Point(96) = {0.024906, -0.734406, 0, 1.0};
Point(97) = {0.024932, -0.734328, 0, 1.0};
Point(98) = {0.025013, -0.734003, 0, 1.0};
Point(99) = {0.025038, -0.733672, 0, 1.0};
Point(100) = {0.025023, -0.733323, 0, 1.0};
Point(101) = {0.024988, -0.733047, 0, 1.0};
Point(102) = {0.024524, -0.731510, 0, 1.0};
Point(103) = {0.023642, -0.729876, 0, 1.0};
Point(104) = {0.022405, -0.728193, 0, 1.0};
Point(105) = {0.020872, -0.726546, 0, 1.0};
Point(106) = {0.019064, -0.724992, 0, 1.0};
Point(107) = {0.017024, -0.723598, 0, 1.0};
Point(108) = {0.014777, -0.722431, 0, 1.0};
Point(109) = {0.012340, -0.721595, 0, 1.0};
Point(110) = {0.009656, -0.721120, 0, 1.0};
Point(111) = {0.006761, -0.721062, 0, 1.0};
Point(112) = {0.003554, -0.721453, 0, 1.0};
Point(113) = {0.000032, -0.722239, 0, 1.0};
Point(114) = {-0.003797, -0.723397, 0, 1.0};
Point(115) = {-0.007925, -0.724898, 0, 1.0};
Point(116) = {-0.012345, -0.726706, 0, 1.0};
Point(117) = {-0.017043, -0.728768, 0, 1.0};
Point(118) = {-0.021998, -0.731019, 0, 1.0};
Point(119) = {-0.027179, -0.733384, 0, 1.0};
Point(120) = {-0.032535, -0.735775, 0, 1.0};
Point(121) = {-0.038001, -0.738102, 0, 1.0};
Point(122) = {-0.043490, -0.740275, 0, 1.0};
Point(123) = {-0.048896, -0.742215, 0, 1.0};
Point(124) = {-0.054097, -0.743854, 0, 1.0};
Point(125) = {-0.058960, -0.745149, 0, 1.0};
Point(126) = {-0.063348, -0.746082, 0, 1.0};
Point(127) = {-0.067128, -0.746665, 0, 1.0};
Point(128) = {-0.070181, -0.746935, 0, 1.0};
Point(129) = {-0.072388, -0.746947, 0, 1.0};
Point(130) = {-0.073657, -0.746863, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:114};
Spline(7) = {114:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
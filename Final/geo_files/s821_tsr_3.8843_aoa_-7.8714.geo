SetFactory("OpenCASCADE");

Point(1) = {0.148116, 0.743650, 0, 1.0};
Point(2) = {0.147338, 0.743740, 0, 1.0};
Point(3) = {0.145100, 0.744096, 0, 1.0};
Point(4) = {0.141635, 0.744764, 0, 1.0};
Point(5) = {0.137174, 0.745650, 0, 1.0};
Point(6) = {0.131855, 0.746581, 0, 1.0};
Point(7) = {0.125696, 0.747391, 0, 1.0};
Point(8) = {0.118637, 0.748052, 0, 1.0};
Point(9) = {0.110749, 0.748625, 0, 1.0};
Point(10) = {0.102152, 0.749118, 0, 1.0};
Point(11) = {0.092970, 0.749523, 0, 1.0};
Point(12) = {0.083332, 0.749822, 0, 1.0};
Point(13) = {0.073367, 0.749991, 0, 1.0};
Point(14) = {0.063204, 0.750000, 0, 1.0};
Point(15) = {0.052965, 0.749819, 0, 1.0};
Point(16) = {0.042769, 0.749418, 0, 1.0};
Point(17) = {0.032725, 0.748767, 0, 1.0};
Point(18) = {0.022936, 0.747842, 0, 1.0};
Point(19) = {0.013493, 0.746620, 0, 1.0};
Point(20) = {0.004484, 0.745085, 0, 1.0};
Point(21) = {-0.004025, 0.743203, 0, 1.0};
Point(22) = {-0.012043, 0.740998, 0, 1.0};
Point(23) = {-0.019503, 0.738555, 0, 1.0};
Point(24) = {-0.026321, 0.735928, 0, 1.0};
Point(25) = {-0.032421, 0.733162, 0, 1.0};
Point(26) = {-0.037726, 0.730302, 0, 1.0};
Point(27) = {-0.042180, 0.727388, 0, 1.0};
Point(28) = {-0.045708, 0.724463, 0, 1.0};
Point(29) = {-0.048285, 0.721568, 0, 1.0};
Point(30) = {-0.049610, 0.719324, 0, 1.0};
Point(31) = {-0.049811, 0.718812, 0, 1.0};
Point(32) = {-0.049863, 0.718657, 0, 1.0};
Point(33) = {-0.050026, 0.718006, 0, 1.0};
Point(34) = {-0.050076, 0.717343, 0, 1.0};
Point(35) = {-0.050045, 0.716646, 0, 1.0};
Point(36) = {-0.049976, 0.716094, 0, 1.0};
Point(37) = {-0.049048, 0.713021, 0, 1.0};
Point(38) = {-0.047284, 0.709752, 0, 1.0};
Point(39) = {-0.044810, 0.706387, 0, 1.0};
Point(40) = {-0.041743, 0.703092, 0, 1.0};
Point(41) = {-0.038129, 0.699984, 0, 1.0};
Point(42) = {-0.034048, 0.697197, 0, 1.0};
Point(43) = {-0.029554, 0.694862, 0, 1.0};
Point(44) = {-0.024681, 0.693190, 0, 1.0};
Point(45) = {-0.019313, 0.692239, 0, 1.0};
Point(46) = {-0.013522, 0.692123, 0, 1.0};
Point(47) = {-0.007109, 0.692906, 0, 1.0};
Point(48) = {-0.000064, 0.694478, 0, 1.0};
Point(49) = {0.007594, 0.696793, 0, 1.0};
Point(50) = {0.015850, 0.699797, 0, 1.0};
Point(51) = {0.024689, 0.703412, 0, 1.0};
Point(52) = {0.034085, 0.707536, 0, 1.0};
Point(53) = {0.043997, 0.712039, 0, 1.0};
Point(54) = {0.054357, 0.716768, 0, 1.0};
Point(55) = {0.065070, 0.721549, 0, 1.0};
Point(56) = {0.076002, 0.726203, 0, 1.0};
Point(57) = {0.086979, 0.730551, 0, 1.0};
Point(58) = {0.097791, 0.734430, 0, 1.0};
Point(59) = {0.108194, 0.737708, 0, 1.0};
Point(60) = {0.117921, 0.740298, 0, 1.0};
Point(61) = {0.126697, 0.742164, 0, 1.0};
Point(62) = {0.134256, 0.743329, 0, 1.0};
Point(63) = {0.140362, 0.743870, 0, 1.0};
Point(64) = {0.144776, 0.743895, 0, 1.0};
Point(65) = {0.147314, 0.743725, 0, 1.0};
Point(66) = {-0.148116, -0.743650, 0, 1.0};
Point(67) = {-0.147338, -0.743740, 0, 1.0};
Point(68) = {-0.145100, -0.744096, 0, 1.0};
Point(69) = {-0.141635, -0.744764, 0, 1.0};
Point(70) = {-0.137174, -0.745650, 0, 1.0};
Point(71) = {-0.131855, -0.746581, 0, 1.0};
Point(72) = {-0.125696, -0.747391, 0, 1.0};
Point(73) = {-0.118637, -0.748052, 0, 1.0};
Point(74) = {-0.110749, -0.748625, 0, 1.0};
Point(75) = {-0.102152, -0.749118, 0, 1.0};
Point(76) = {-0.092970, -0.749523, 0, 1.0};
Point(77) = {-0.083332, -0.749822, 0, 1.0};
Point(78) = {-0.073367, -0.749991, 0, 1.0};
Point(79) = {-0.063204, -0.750000, 0, 1.0};
Point(80) = {-0.052965, -0.749819, 0, 1.0};
Point(81) = {-0.042769, -0.749418, 0, 1.0};
Point(82) = {-0.032725, -0.748767, 0, 1.0};
Point(83) = {-0.022936, -0.747842, 0, 1.0};
Point(84) = {-0.013493, -0.746620, 0, 1.0};
Point(85) = {-0.004484, -0.745085, 0, 1.0};
Point(86) = {0.004025, -0.743203, 0, 1.0};
Point(87) = {0.012043, -0.740998, 0, 1.0};
Point(88) = {0.019503, -0.738555, 0, 1.0};
Point(89) = {0.026321, -0.735928, 0, 1.0};
Point(90) = {0.032421, -0.733162, 0, 1.0};
Point(91) = {0.037726, -0.730302, 0, 1.0};
Point(92) = {0.042180, -0.727388, 0, 1.0};
Point(93) = {0.045708, -0.724463, 0, 1.0};
Point(94) = {0.048285, -0.721568, 0, 1.0};
Point(95) = {0.049610, -0.719324, 0, 1.0};
Point(96) = {0.049811, -0.718812, 0, 1.0};
Point(97) = {0.049863, -0.718657, 0, 1.0};
Point(98) = {0.050026, -0.718006, 0, 1.0};
Point(99) = {0.050076, -0.717343, 0, 1.0};
Point(100) = {0.050045, -0.716646, 0, 1.0};
Point(101) = {0.049976, -0.716094, 0, 1.0};
Point(102) = {0.049048, -0.713021, 0, 1.0};
Point(103) = {0.047284, -0.709752, 0, 1.0};
Point(104) = {0.044810, -0.706387, 0, 1.0};
Point(105) = {0.041743, -0.703092, 0, 1.0};
Point(106) = {0.038129, -0.699984, 0, 1.0};
Point(107) = {0.034048, -0.697197, 0, 1.0};
Point(108) = {0.029554, -0.694862, 0, 1.0};
Point(109) = {0.024681, -0.693190, 0, 1.0};
Point(110) = {0.019313, -0.692239, 0, 1.0};
Point(111) = {0.013522, -0.692123, 0, 1.0};
Point(112) = {0.007109, -0.692906, 0, 1.0};
Point(113) = {0.000064, -0.694478, 0, 1.0};
Point(114) = {-0.007594, -0.696793, 0, 1.0};
Point(115) = {-0.015850, -0.699797, 0, 1.0};
Point(116) = {-0.024689, -0.703412, 0, 1.0};
Point(117) = {-0.034085, -0.707536, 0, 1.0};
Point(118) = {-0.043997, -0.712039, 0, 1.0};
Point(119) = {-0.054357, -0.716768, 0, 1.0};
Point(120) = {-0.065070, -0.721549, 0, 1.0};
Point(121) = {-0.076002, -0.726203, 0, 1.0};
Point(122) = {-0.086979, -0.730551, 0, 1.0};
Point(123) = {-0.097791, -0.734430, 0, 1.0};
Point(124) = {-0.108194, -0.737708, 0, 1.0};
Point(125) = {-0.117921, -0.740298, 0, 1.0};
Point(126) = {-0.126697, -0.742164, 0, 1.0};
Point(127) = {-0.134256, -0.743329, 0, 1.0};
Point(128) = {-0.140362, -0.743870, 0, 1.0};
Point(129) = {-0.144776, -0.743895, 0, 1.0};
Point(130) = {-0.147314, -0.743725, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:114};
Spline(7) = {114:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 47 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
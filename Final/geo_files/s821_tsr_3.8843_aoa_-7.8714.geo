SetFactory("OpenCASCADE");

Point(1) = {0.111423, 0.745237, 0, 1.0};
Point(2) = {0.110840, 0.745305, 0, 1.0};
Point(3) = {0.109161, 0.745572, 0, 1.0};
Point(4) = {0.106562, 0.746073, 0, 1.0};
Point(5) = {0.103216, 0.746737, 0, 1.0};
Point(6) = {0.099227, 0.747436, 0, 1.0};
Point(7) = {0.094608, 0.748044, 0, 1.0};
Point(8) = {0.089314, 0.748539, 0, 1.0};
Point(9) = {0.083398, 0.748968, 0, 1.0};
Point(10) = {0.076950, 0.749338, 0, 1.0};
Point(11) = {0.070063, 0.749642, 0, 1.0};
Point(12) = {0.062834, 0.749867, 0, 1.0};
Point(13) = {0.055361, 0.749993, 0, 1.0};
Point(14) = {0.047739, 0.750000, 0, 1.0};
Point(15) = {0.040060, 0.749865, 0, 1.0};
Point(16) = {0.032412, 0.749563, 0, 1.0};
Point(17) = {0.024879, 0.749075, 0, 1.0};
Point(18) = {0.017537, 0.748381, 0, 1.0};
Point(19) = {0.010455, 0.747465, 0, 1.0};
Point(20) = {0.003698, 0.746313, 0, 1.0};
Point(21) = {-0.002683, 0.744902, 0, 1.0};
Point(22) = {-0.008697, 0.743249, 0, 1.0};
Point(23) = {-0.014292, 0.741416, 0, 1.0};
Point(24) = {-0.019406, 0.739446, 0, 1.0};
Point(25) = {-0.023980, 0.737372, 0, 1.0};
Point(26) = {-0.027959, 0.735226, 0, 1.0};
Point(27) = {-0.031300, 0.733041, 0, 1.0};
Point(28) = {-0.033946, 0.730847, 0, 1.0};
Point(29) = {-0.035879, 0.728676, 0, 1.0};
Point(30) = {-0.036872, 0.726993, 0, 1.0};
Point(31) = {-0.037023, 0.726609, 0, 1.0};
Point(32) = {-0.037062, 0.726492, 0, 1.0};
Point(33) = {-0.037184, 0.726005, 0, 1.0};
Point(34) = {-0.037222, 0.725507, 0, 1.0};
Point(35) = {-0.037199, 0.724984, 0, 1.0};
Point(36) = {-0.037147, 0.724570, 0, 1.0};
Point(37) = {-0.036451, 0.722266, 0, 1.0};
Point(38) = {-0.035128, 0.719813, 0, 1.0};
Point(39) = {-0.033273, 0.717290, 0, 1.0};
Point(40) = {-0.030973, 0.714819, 0, 1.0};
Point(41) = {-0.028261, 0.712488, 0, 1.0};
Point(42) = {-0.025201, 0.710397, 0, 1.0};
Point(43) = {-0.021830, 0.708646, 0, 1.0};
Point(44) = {-0.018175, 0.707392, 0, 1.0};
Point(45) = {-0.014149, 0.706679, 0, 1.0};
Point(46) = {-0.009806, 0.706592, 0, 1.0};
Point(47) = {-0.004996, 0.707179, 0, 1.0};
Point(48) = {0.000287, 0.708358, 0, 1.0};
Point(49) = {0.006031, 0.710095, 0, 1.0};
Point(50) = {0.012223, 0.712347, 0, 1.0};
Point(51) = {0.018852, 0.715059, 0, 1.0};
Point(52) = {0.025899, 0.718151, 0, 1.0};
Point(53) = {0.033333, 0.721529, 0, 1.0};
Point(54) = {0.041104, 0.725075, 0, 1.0};
Point(55) = {0.049138, 0.728662, 0, 1.0};
Point(56) = {0.057337, 0.732152, 0, 1.0};
Point(57) = {0.065570, 0.735413, 0, 1.0};
Point(58) = {0.073679, 0.738322, 0, 1.0};
Point(59) = {0.081482, 0.740781, 0, 1.0};
Point(60) = {0.088777, 0.742723, 0, 1.0};
Point(61) = {0.095358, 0.744123, 0, 1.0};
Point(62) = {0.101028, 0.744997, 0, 1.0};
Point(63) = {0.105608, 0.745403, 0, 1.0};
Point(64) = {0.108918, 0.745421, 0, 1.0};
Point(65) = {0.110821, 0.745294, 0, 1.0};
Point(66) = {-0.111423, -0.745237, 0, 1.0};
Point(67) = {-0.110840, -0.745305, 0, 1.0};
Point(68) = {-0.109161, -0.745572, 0, 1.0};
Point(69) = {-0.106562, -0.746073, 0, 1.0};
Point(70) = {-0.103216, -0.746737, 0, 1.0};
Point(71) = {-0.099227, -0.747436, 0, 1.0};
Point(72) = {-0.094608, -0.748044, 0, 1.0};
Point(73) = {-0.089314, -0.748539, 0, 1.0};
Point(74) = {-0.083398, -0.748968, 0, 1.0};
Point(75) = {-0.076950, -0.749338, 0, 1.0};
Point(76) = {-0.070063, -0.749642, 0, 1.0};
Point(77) = {-0.062834, -0.749867, 0, 1.0};
Point(78) = {-0.055361, -0.749993, 0, 1.0};
Point(79) = {-0.047739, -0.750000, 0, 1.0};
Point(80) = {-0.040060, -0.749865, 0, 1.0};
Point(81) = {-0.032412, -0.749563, 0, 1.0};
Point(82) = {-0.024879, -0.749075, 0, 1.0};
Point(83) = {-0.017537, -0.748381, 0, 1.0};
Point(84) = {-0.010455, -0.747465, 0, 1.0};
Point(85) = {-0.003698, -0.746313, 0, 1.0};
Point(86) = {0.002683, -0.744902, 0, 1.0};
Point(87) = {0.008697, -0.743249, 0, 1.0};
Point(88) = {0.014292, -0.741416, 0, 1.0};
Point(89) = {0.019406, -0.739446, 0, 1.0};
Point(90) = {0.023980, -0.737372, 0, 1.0};
Point(91) = {0.027959, -0.735226, 0, 1.0};
Point(92) = {0.031300, -0.733041, 0, 1.0};
Point(93) = {0.033946, -0.730847, 0, 1.0};
Point(94) = {0.035879, -0.728676, 0, 1.0};
Point(95) = {0.036872, -0.726993, 0, 1.0};
Point(96) = {0.037023, -0.726609, 0, 1.0};
Point(97) = {0.037062, -0.726492, 0, 1.0};
Point(98) = {0.037184, -0.726005, 0, 1.0};
Point(99) = {0.037222, -0.725507, 0, 1.0};
Point(100) = {0.037199, -0.724984, 0, 1.0};
Point(101) = {0.037147, -0.724570, 0, 1.0};
Point(102) = {0.036451, -0.722266, 0, 1.0};
Point(103) = {0.035128, -0.719813, 0, 1.0};
Point(104) = {0.033273, -0.717290, 0, 1.0};
Point(105) = {0.030973, -0.714819, 0, 1.0};
Point(106) = {0.028261, -0.712488, 0, 1.0};
Point(107) = {0.025201, -0.710397, 0, 1.0};
Point(108) = {0.021830, -0.708646, 0, 1.0};
Point(109) = {0.018175, -0.707392, 0, 1.0};
Point(110) = {0.014149, -0.706679, 0, 1.0};
Point(111) = {0.009806, -0.706592, 0, 1.0};
Point(112) = {0.004996, -0.707179, 0, 1.0};
Point(113) = {-0.000287, -0.708358, 0, 1.0};
Point(114) = {-0.006031, -0.710095, 0, 1.0};
Point(115) = {-0.012223, -0.712347, 0, 1.0};
Point(116) = {-0.018852, -0.715059, 0, 1.0};
Point(117) = {-0.025899, -0.718151, 0, 1.0};
Point(118) = {-0.033333, -0.721529, 0, 1.0};
Point(119) = {-0.041104, -0.725075, 0, 1.0};
Point(120) = {-0.049138, -0.728662, 0, 1.0};
Point(121) = {-0.057337, -0.732152, 0, 1.0};
Point(122) = {-0.065570, -0.735413, 0, 1.0};
Point(123) = {-0.073679, -0.738322, 0, 1.0};
Point(124) = {-0.081482, -0.740781, 0, 1.0};
Point(125) = {-0.088777, -0.742723, 0, 1.0};
Point(126) = {-0.095358, -0.744123, 0, 1.0};
Point(127) = {-0.101028, -0.744997, 0, 1.0};
Point(128) = {-0.105608, -0.745403, 0, 1.0};
Point(129) = {-0.108918, -0.745421, 0, 1.0};
Point(130) = {-0.110821, -0.745294, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:114};
Spline(7) = {114:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 35 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
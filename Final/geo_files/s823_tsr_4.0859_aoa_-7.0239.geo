SetFactory("OpenCASCADE");

Point(1) = {0.074250, 0.746165, 0, 1.0};
Point(2) = {0.073858, 0.746220, 0, 1.0};
Point(3) = {0.072770, 0.746435, 0, 1.0};
Point(4) = {0.071134, 0.746782, 0, 1.0};
Point(5) = {0.069011, 0.747150, 0, 1.0};
Point(6) = {0.066359, 0.747496, 0, 1.0};
Point(7) = {0.063204, 0.747852, 0, 1.0};
Point(8) = {0.059603, 0.748220, 0, 1.0};
Point(9) = {0.055616, 0.748594, 0, 1.0};
Point(10) = {0.051308, 0.748962, 0, 1.0};
Point(11) = {0.046740, 0.749304, 0, 1.0};
Point(12) = {0.041976, 0.749601, 0, 1.0};
Point(13) = {0.037076, 0.749830, 0, 1.0};
Point(14) = {0.032097, 0.749970, 0, 1.0};
Point(15) = {0.027093, 0.750000, 0, 1.0};
Point(16) = {0.022116, 0.749901, 0, 1.0};
Point(17) = {0.017213, 0.749656, 0, 1.0};
Point(18) = {0.012428, 0.749252, 0, 1.0};
Point(19) = {0.007800, 0.748670, 0, 1.0};
Point(20) = {0.003338, 0.747914, 0, 1.0};
Point(21) = {-0.000914, 0.747002, 0, 1.0};
Point(22) = {-0.004935, 0.745947, 0, 1.0};
Point(23) = {-0.008688, 0.744779, 0, 1.0};
Point(24) = {-0.012135, 0.743520, 0, 1.0};
Point(25) = {-0.015237, 0.742191, 0, 1.0};
Point(26) = {-0.017964, 0.740813, 0, 1.0};
Point(27) = {-0.020285, 0.739411, 0, 1.0};
Point(28) = {-0.022179, 0.738006, 0, 1.0};
Point(29) = {-0.023618, 0.736632, 0, 1.0};
Point(30) = {-0.024579, 0.735324, 0, 1.0};
Point(31) = {-0.024921, 0.734553, 0, 1.0};
Point(32) = {-0.024988, 0.734273, 0, 1.0};
Point(33) = {-0.025003, 0.734154, 0, 1.0};
Point(34) = {-0.025006, 0.734010, 0, 1.0};
Point(35) = {-0.024959, 0.733747, 0, 1.0};
Point(36) = {-0.024861, 0.733467, 0, 1.0};
Point(37) = {-0.024650, 0.733034, 0, 1.0};
Point(38) = {-0.023695, 0.731682, 0, 1.0};
Point(39) = {-0.022367, 0.730089, 0, 1.0};
Point(40) = {-0.020867, 0.728463, 0, 1.0};
Point(41) = {-0.019187, 0.726926, 0, 1.0};
Point(42) = {-0.017385, 0.725635, 0, 1.0};
Point(43) = {-0.015375, 0.724794, 0, 1.0};
Point(44) = {-0.012933, 0.724363, 0, 1.0};
Point(45) = {-0.010095, 0.724243, 0, 1.0};
Point(46) = {-0.006896, 0.724428, 0, 1.0};
Point(47) = {-0.003356, 0.724912, 0, 1.0};
Point(48) = {0.000505, 0.725688, 0, 1.0};
Point(49) = {0.004667, 0.726741, 0, 1.0};
Point(50) = {0.009110, 0.728050, 0, 1.0};
Point(51) = {0.013811, 0.729582, 0, 1.0};
Point(52) = {0.018741, 0.731295, 0, 1.0};
Point(53) = {0.023864, 0.733139, 0, 1.0};
Point(54) = {0.029135, 0.735056, 0, 1.0};
Point(55) = {0.034500, 0.736984, 0, 1.0};
Point(56) = {0.039891, 0.738857, 0, 1.0};
Point(57) = {0.045230, 0.740610, 0, 1.0};
Point(58) = {0.050426, 0.742184, 0, 1.0};
Point(59) = {0.055377, 0.743530, 0, 1.0};
Point(60) = {0.059976, 0.744613, 0, 1.0};
Point(61) = {0.064112, 0.745412, 0, 1.0};
Point(62) = {0.067674, 0.745928, 0, 1.0};
Point(63) = {0.070550, 0.746172, 0, 1.0};
Point(64) = {0.072621, 0.746220, 0, 1.0};
Point(65) = {0.073847, 0.746189, 0, 1.0};
Point(66) = {-0.074250, -0.746165, 0, 1.0};
Point(67) = {-0.073858, -0.746220, 0, 1.0};
Point(68) = {-0.072770, -0.746435, 0, 1.0};
Point(69) = {-0.071134, -0.746782, 0, 1.0};
Point(70) = {-0.069011, -0.747150, 0, 1.0};
Point(71) = {-0.066359, -0.747496, 0, 1.0};
Point(72) = {-0.063204, -0.747852, 0, 1.0};
Point(73) = {-0.059603, -0.748220, 0, 1.0};
Point(74) = {-0.055616, -0.748594, 0, 1.0};
Point(75) = {-0.051308, -0.748962, 0, 1.0};
Point(76) = {-0.046740, -0.749304, 0, 1.0};
Point(77) = {-0.041976, -0.749601, 0, 1.0};
Point(78) = {-0.037076, -0.749830, 0, 1.0};
Point(79) = {-0.032097, -0.749970, 0, 1.0};
Point(80) = {-0.027093, -0.750000, 0, 1.0};
Point(81) = {-0.022116, -0.749901, 0, 1.0};
Point(82) = {-0.017213, -0.749656, 0, 1.0};
Point(83) = {-0.012428, -0.749252, 0, 1.0};
Point(84) = {-0.007800, -0.748670, 0, 1.0};
Point(85) = {-0.003338, -0.747914, 0, 1.0};
Point(86) = {0.000914, -0.747002, 0, 1.0};
Point(87) = {0.004935, -0.745947, 0, 1.0};
Point(88) = {0.008688, -0.744779, 0, 1.0};
Point(89) = {0.012135, -0.743520, 0, 1.0};
Point(90) = {0.015237, -0.742191, 0, 1.0};
Point(91) = {0.017964, -0.740813, 0, 1.0};
Point(92) = {0.020285, -0.739411, 0, 1.0};
Point(93) = {0.022179, -0.738006, 0, 1.0};
Point(94) = {0.023618, -0.736632, 0, 1.0};
Point(95) = {0.024579, -0.735324, 0, 1.0};
Point(96) = {0.024921, -0.734553, 0, 1.0};
Point(97) = {0.024988, -0.734273, 0, 1.0};
Point(98) = {0.025003, -0.734154, 0, 1.0};
Point(99) = {0.025006, -0.734010, 0, 1.0};
Point(100) = {0.024959, -0.733747, 0, 1.0};
Point(101) = {0.024861, -0.733467, 0, 1.0};
Point(102) = {0.024650, -0.733034, 0, 1.0};
Point(103) = {0.023695, -0.731682, 0, 1.0};
Point(104) = {0.022367, -0.730089, 0, 1.0};
Point(105) = {0.020867, -0.728463, 0, 1.0};
Point(106) = {0.019187, -0.726926, 0, 1.0};
Point(107) = {0.017385, -0.725635, 0, 1.0};
Point(108) = {0.015375, -0.724794, 0, 1.0};
Point(109) = {0.012933, -0.724363, 0, 1.0};
Point(110) = {0.010095, -0.724243, 0, 1.0};
Point(111) = {0.006896, -0.724428, 0, 1.0};
Point(112) = {0.003356, -0.724912, 0, 1.0};
Point(113) = {-0.000505, -0.725688, 0, 1.0};
Point(114) = {-0.004667, -0.726741, 0, 1.0};
Point(115) = {-0.009110, -0.728050, 0, 1.0};
Point(116) = {-0.013811, -0.729582, 0, 1.0};
Point(117) = {-0.018741, -0.731295, 0, 1.0};
Point(118) = {-0.023864, -0.733139, 0, 1.0};
Point(119) = {-0.029135, -0.735056, 0, 1.0};
Point(120) = {-0.034500, -0.736984, 0, 1.0};
Point(121) = {-0.039891, -0.738857, 0, 1.0};
Point(122) = {-0.045230, -0.740610, 0, 1.0};
Point(123) = {-0.050426, -0.742184, 0, 1.0};
Point(124) = {-0.055377, -0.743530, 0, 1.0};
Point(125) = {-0.059976, -0.744613, 0, 1.0};
Point(126) = {-0.064112, -0.745412, 0, 1.0};
Point(127) = {-0.067674, -0.745928, 0, 1.0};
Point(128) = {-0.070550, -0.746172, 0, 1.0};
Point(129) = {-0.072621, -0.746220, 0, 1.0};
Point(130) = {-0.073847, -0.746189, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
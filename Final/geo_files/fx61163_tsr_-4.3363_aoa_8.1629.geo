SetFactory("OpenCASCADE");

Point(1) = {0.074625, 0.720856, 0, 1.0};
Point(2) = {0.073699, 0.721186, 0, 1.0};
Point(3) = {0.071048, 0.722146, 0, 1.0};
Point(4) = {0.068088, 0.723190, 0, 1.0};
Point(5) = {0.064933, 0.724301, 0, 1.0};
Point(6) = {0.061490, 0.725497, 0, 1.0};
Point(7) = {0.057830, 0.726761, 0, 1.0};
Point(8) = {0.053932, 0.728104, 0, 1.0};
Point(9) = {0.049838, 0.729513, 0, 1.0};
Point(10) = {0.045566, 0.730984, 0, 1.0};
Point(11) = {0.041136, 0.732502, 0, 1.0};
Point(12) = {0.036549, 0.734067, 0, 1.0};
Point(13) = {0.031840, 0.735658, 0, 1.0};
Point(14) = {0.027011, 0.737275, 0, 1.0};
Point(15) = {0.022100, 0.738901, 0, 1.0};
Point(16) = {0.017128, 0.740524, 0, 1.0};
Point(17) = {0.012108, 0.742101, 0, 1.0};
Point(18) = {0.007035, 0.743599, 0, 1.0};
Point(19) = {0.001962, 0.744953, 0, 1.0};
Point(20) = {-0.003134, 0.746150, 0, 1.0};
Point(21) = {-0.008194, 0.747169, 0, 1.0};
Point(22) = {-0.013213, 0.748033, 0, 1.0};
Point(23) = {-0.018152, 0.748733, 0, 1.0};
Point(24) = {-0.023030, 0.749291, 0, 1.0};
Point(25) = {-0.027767, 0.749680, 0, 1.0};
Point(26) = {-0.032400, 0.749924, 0, 1.0};
Point(27) = {-0.036871, 0.750000, 0, 1.0};
Point(28) = {-0.041177, 0.749937, 0, 1.0};
Point(29) = {-0.045277, 0.749721, 0, 1.0};
Point(30) = {-0.049188, 0.749390, 0, 1.0};
Point(31) = {-0.052868, 0.748932, 0, 1.0};
Point(32) = {-0.056294, 0.748372, 0, 1.0};
Point(33) = {-0.059469, 0.747703, 0, 1.0};
Point(34) = {-0.062366, 0.746949, 0, 1.0};
Point(35) = {-0.064966, 0.746098, 0, 1.0};
Point(36) = {-0.067281, 0.745214, 0, 1.0};
Point(37) = {-0.069278, 0.744253, 0, 1.0};
Point(38) = {-0.070950, 0.743264, 0, 1.0};
Point(39) = {-0.072286, 0.742300, 0, 1.0};
Point(40) = {-0.073293, 0.741330, 0, 1.0};
Point(41) = {-0.073950, 0.740346, 0, 1.0};
Point(42) = {-0.074240, 0.739474, 0, 1.0};
Point(43) = {-0.074135, 0.739059, 0, 1.0};
Point(44) = {-0.073700, 0.738493, 0, 1.0};
Point(45) = {-0.072928, 0.737822, 0, 1.0};
Point(46) = {-0.071837, 0.737077, 0, 1.0};
Point(47) = {-0.070425, 0.736255, 0, 1.0};
Point(48) = {-0.068688, 0.735407, 0, 1.0};
Point(49) = {-0.066631, 0.734491, 0, 1.0};
Point(50) = {-0.064287, 0.733551, 0, 1.0};
Point(51) = {-0.061640, 0.732567, 0, 1.0};
Point(52) = {-0.058704, 0.731569, 0, 1.0};
Point(53) = {-0.055506, 0.730542, 0, 1.0};
Point(54) = {-0.052039, 0.729514, 0, 1.0};
Point(55) = {-0.048324, 0.728477, 0, 1.0};
Point(56) = {-0.044401, 0.727461, 0, 1.0};
Point(57) = {-0.040248, 0.726459, 0, 1.0};
Point(58) = {-0.035904, 0.725500, 0, 1.0};
Point(59) = {-0.031368, 0.724577, 0, 1.0};
Point(60) = {-0.026698, 0.723719, 0, 1.0};
Point(61) = {-0.021856, 0.722909, 0, 1.0};
Point(62) = {-0.016922, 0.722175, 0, 1.0};
Point(63) = {-0.011873, 0.721516, 0, 1.0};
Point(64) = {-0.006747, 0.720959, 0, 1.0};
Point(65) = {-0.001545, 0.720505, 0, 1.0};
Point(66) = {0.003674, 0.720167, 0, 1.0};
Point(67) = {0.008928, 0.719929, 0, 1.0};
Point(68) = {0.014158, 0.719817, 0, 1.0};
Point(69) = {0.019366, 0.719843, 0, 1.0};
Point(70) = {0.024534, 0.720000, 0, 1.0};
Point(71) = {0.029629, 0.720242, 0, 1.0};
Point(72) = {0.034603, 0.720507, 0, 1.0};
Point(73) = {0.039446, 0.720719, 0, 1.0};
Point(74) = {0.044114, 0.720861, 0, 1.0};
Point(75) = {0.048606, 0.720924, 0, 1.0};
Point(76) = {0.052900, 0.720913, 0, 1.0};
Point(77) = {0.056979, 0.720830, 0, 1.0};
Point(78) = {0.060799, 0.720682, 0, 1.0};
Point(79) = {0.064383, 0.720465, 0, 1.0};
Point(80) = {0.067659, 0.720197, 0, 1.0};
Point(81) = {0.070721, 0.719866, 0, 1.0};
Point(82) = {0.073457, 0.719497, 0, 1.0};
Point(83) = {0.074408, 0.719350, 0, 1.0};
Point(84) = {-0.074625, -0.720856, 0, 1.0};
Point(85) = {-0.073699, -0.721186, 0, 1.0};
Point(86) = {-0.071048, -0.722146, 0, 1.0};
Point(87) = {-0.068088, -0.723190, 0, 1.0};
Point(88) = {-0.064933, -0.724301, 0, 1.0};
Point(89) = {-0.061490, -0.725497, 0, 1.0};
Point(90) = {-0.057830, -0.726761, 0, 1.0};
Point(91) = {-0.053932, -0.728104, 0, 1.0};
Point(92) = {-0.049838, -0.729513, 0, 1.0};
Point(93) = {-0.045566, -0.730984, 0, 1.0};
Point(94) = {-0.041136, -0.732502, 0, 1.0};
Point(95) = {-0.036549, -0.734067, 0, 1.0};
Point(96) = {-0.031840, -0.735658, 0, 1.0};
Point(97) = {-0.027011, -0.737275, 0, 1.0};
Point(98) = {-0.022100, -0.738901, 0, 1.0};
Point(99) = {-0.017128, -0.740524, 0, 1.0};
Point(100) = {-0.012108, -0.742101, 0, 1.0};
Point(101) = {-0.007035, -0.743599, 0, 1.0};
Point(102) = {-0.001962, -0.744953, 0, 1.0};
Point(103) = {0.003134, -0.746150, 0, 1.0};
Point(104) = {0.008194, -0.747169, 0, 1.0};
Point(105) = {0.013213, -0.748033, 0, 1.0};
Point(106) = {0.018152, -0.748733, 0, 1.0};
Point(107) = {0.023030, -0.749291, 0, 1.0};
Point(108) = {0.027767, -0.749680, 0, 1.0};
Point(109) = {0.032400, -0.749924, 0, 1.0};
Point(110) = {0.036871, -0.750000, 0, 1.0};
Point(111) = {0.041177, -0.749937, 0, 1.0};
Point(112) = {0.045277, -0.749721, 0, 1.0};
Point(113) = {0.049188, -0.749390, 0, 1.0};
Point(114) = {0.052868, -0.748932, 0, 1.0};
Point(115) = {0.056294, -0.748372, 0, 1.0};
Point(116) = {0.059469, -0.747703, 0, 1.0};
Point(117) = {0.062366, -0.746949, 0, 1.0};
Point(118) = {0.064966, -0.746098, 0, 1.0};
Point(119) = {0.067281, -0.745214, 0, 1.0};
Point(120) = {0.069278, -0.744253, 0, 1.0};
Point(121) = {0.070950, -0.743264, 0, 1.0};
Point(122) = {0.072286, -0.742300, 0, 1.0};
Point(123) = {0.073293, -0.741330, 0, 1.0};
Point(124) = {0.073950, -0.740346, 0, 1.0};
Point(125) = {0.074240, -0.739474, 0, 1.0};
Point(126) = {0.074135, -0.739059, 0, 1.0};
Point(127) = {0.073700, -0.738493, 0, 1.0};
Point(128) = {0.072928, -0.737822, 0, 1.0};
Point(129) = {0.071837, -0.737077, 0, 1.0};
Point(130) = {0.070425, -0.736255, 0, 1.0};
Point(131) = {0.068688, -0.735407, 0, 1.0};
Point(132) = {0.066631, -0.734491, 0, 1.0};
Point(133) = {0.064287, -0.733551, 0, 1.0};
Point(134) = {0.061640, -0.732567, 0, 1.0};
Point(135) = {0.058704, -0.731569, 0, 1.0};
Point(136) = {0.055506, -0.730542, 0, 1.0};
Point(137) = {0.052039, -0.729514, 0, 1.0};
Point(138) = {0.048324, -0.728477, 0, 1.0};
Point(139) = {0.044401, -0.727461, 0, 1.0};
Point(140) = {0.040248, -0.726459, 0, 1.0};
Point(141) = {0.035904, -0.725500, 0, 1.0};
Point(142) = {0.031368, -0.724577, 0, 1.0};
Point(143) = {0.026698, -0.723719, 0, 1.0};
Point(144) = {0.021856, -0.722909, 0, 1.0};
Point(145) = {0.016922, -0.722175, 0, 1.0};
Point(146) = {0.011873, -0.721516, 0, 1.0};
Point(147) = {0.006747, -0.720959, 0, 1.0};
Point(148) = {0.001545, -0.720505, 0, 1.0};
Point(149) = {-0.003674, -0.720167, 0, 1.0};
Point(150) = {-0.008928, -0.719929, 0, 1.0};
Point(151) = {-0.014158, -0.719817, 0, 1.0};
Point(152) = {-0.019366, -0.719843, 0, 1.0};
Point(153) = {-0.024534, -0.720000, 0, 1.0};
Point(154) = {-0.029629, -0.720242, 0, 1.0};
Point(155) = {-0.034603, -0.720507, 0, 1.0};
Point(156) = {-0.039446, -0.720719, 0, 1.0};
Point(157) = {-0.044114, -0.720861, 0, 1.0};
Point(158) = {-0.048606, -0.720924, 0, 1.0};
Point(159) = {-0.052900, -0.720913, 0, 1.0};
Point(160) = {-0.056979, -0.720830, 0, 1.0};
Point(161) = {-0.060799, -0.720682, 0, 1.0};
Point(162) = {-0.064383, -0.720465, 0, 1.0};
Point(163) = {-0.067659, -0.720197, 0, 1.0};
Point(164) = {-0.070721, -0.719866, 0, 1.0};
Point(165) = {-0.073457, -0.719497, 0, 1.0};
Point(166) = {-0.074408, -0.719350, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
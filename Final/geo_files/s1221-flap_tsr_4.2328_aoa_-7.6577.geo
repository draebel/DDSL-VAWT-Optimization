SetFactory("OpenCASCADE");

Point(1) = {0.073371, 0.749125, 0, 1.0};
Point(2) = {0.068222, 0.749572, 0, 1.0};
Point(3) = {0.065609, 0.749760, 0, 1.0};
Point(4) = {0.062996, 0.749900, 0, 1.0};
Point(5) = {0.060381, 0.749981, 0, 1.0};
Point(6) = {0.057763, 0.750000, 0, 1.0};
Point(7) = {0.048615, 0.749910, 0, 1.0};
Point(8) = {0.035627, 0.749774, 0, 1.0};
Point(9) = {0.034067, 0.749763, 0, 1.0};
Point(10) = {0.027566, 0.749690, 0, 1.0};
Point(11) = {0.020975, 0.749573, 0, 1.0};
Point(12) = {0.014333, 0.749414, 0, 1.0};
Point(13) = {0.007692, 0.749217, 0, 1.0};
Point(14) = {0.001103, 0.748985, 0, 1.0};
Point(15) = {-0.005376, 0.748715, 0, 1.0};
Point(16) = {-0.011687, 0.748389, 0, 1.0};
Point(17) = {-0.017781, 0.747989, 0, 1.0};
Point(18) = {-0.023623, 0.747490, 0, 1.0};
Point(19) = {-0.029184, 0.746870, 0, 1.0};
Point(20) = {-0.034435, 0.746126, 0, 1.0};
Point(21) = {-0.039344, 0.745205, 0, 1.0};
Point(22) = {-0.043933, 0.744087, 0, 1.0};
Point(23) = {-0.048227, 0.742793, 0, 1.0};
Point(24) = {-0.052232, 0.741338, 0, 1.0};
Point(25) = {-0.055950, 0.739761, 0, 1.0};
Point(26) = {-0.059362, 0.738096, 0, 1.0};
Point(27) = {-0.062454, 0.736371, 0, 1.0};
Point(28) = {-0.065212, 0.734602, 0, 1.0};
Point(29) = {-0.067625, 0.732816, 0, 1.0};
Point(30) = {-0.069689, 0.731039, 0, 1.0};
Point(31) = {-0.071390, 0.729298, 0, 1.0};
Point(32) = {-0.072721, 0.727624, 0, 1.0};
Point(33) = {-0.073657, 0.726032, 0, 1.0};
Point(34) = {-0.074217, 0.724528, 0, 1.0};
Point(35) = {-0.074438, 0.723156, 0, 1.0};
Point(36) = {-0.074331, 0.721997, 0, 1.0};
Point(37) = {-0.073817, 0.721215, 0, 1.0};
Point(38) = {-0.072728, 0.720762, 0, 1.0};
Point(39) = {-0.071026, 0.720458, 0, 1.0};
Point(40) = {-0.068803, 0.720293, 0, 1.0};
Point(41) = {-0.066089, 0.720270, 0, 1.0};
Point(42) = {-0.062918, 0.720385, 0, 1.0};
Point(43) = {-0.059315, 0.720644, 0, 1.0};
Point(44) = {-0.055317, 0.721052, 0, 1.0};
Point(45) = {-0.050956, 0.721614, 0, 1.0};
Point(46) = {-0.046269, 0.722342, 0, 1.0};
Point(47) = {-0.041307, 0.723266, 0, 1.0};
Point(48) = {-0.036054, 0.724476, 0, 1.0};
Point(49) = {-0.030429, 0.725967, 0, 1.0};
Point(50) = {-0.024416, 0.727647, 0, 1.0};
Point(51) = {-0.018042, 0.729462, 0, 1.0};
Point(52) = {-0.011345, 0.731364, 0, 1.0};
Point(53) = {-0.004367, 0.733306, 0, 1.0};
Point(54) = {0.002841, 0.735252, 0, 1.0};
Point(55) = {0.010228, 0.737155, 0, 1.0};
Point(56) = {0.017730, 0.738978, 0, 1.0};
Point(57) = {0.025285, 0.740686, 0, 1.0};
Point(58) = {0.032829, 0.742253, 0, 1.0};
Point(59) = {0.036631, 0.742982, 0, 1.0};
Point(60) = {0.049433, 0.745307, 0, 1.0};
Point(61) = {0.057132, 0.746552, 0, 1.0};
Point(62) = {0.059711, 0.746902, 0, 1.0};
Point(63) = {0.062297, 0.747180, 0, 1.0};
Point(64) = {0.064892, 0.747384, 0, 1.0};
Point(65) = {0.067492, 0.747509, 0, 1.0};
Point(66) = {0.073573, 0.747623, 0, 1.0};
Point(67) = {-0.073371, -0.749125, 0, 1.0};
Point(68) = {-0.068222, -0.749572, 0, 1.0};
Point(69) = {-0.065609, -0.749760, 0, 1.0};
Point(70) = {-0.062996, -0.749900, 0, 1.0};
Point(71) = {-0.060381, -0.749981, 0, 1.0};
Point(72) = {-0.057763, -0.750000, 0, 1.0};
Point(73) = {-0.048615, -0.749910, 0, 1.0};
Point(74) = {-0.035627, -0.749774, 0, 1.0};
Point(75) = {-0.034067, -0.749763, 0, 1.0};
Point(76) = {-0.027566, -0.749690, 0, 1.0};
Point(77) = {-0.020975, -0.749573, 0, 1.0};
Point(78) = {-0.014333, -0.749414, 0, 1.0};
Point(79) = {-0.007692, -0.749217, 0, 1.0};
Point(80) = {-0.001103, -0.748985, 0, 1.0};
Point(81) = {0.005376, -0.748715, 0, 1.0};
Point(82) = {0.011687, -0.748389, 0, 1.0};
Point(83) = {0.017781, -0.747989, 0, 1.0};
Point(84) = {0.023623, -0.747490, 0, 1.0};
Point(85) = {0.029184, -0.746870, 0, 1.0};
Point(86) = {0.034435, -0.746126, 0, 1.0};
Point(87) = {0.039344, -0.745205, 0, 1.0};
Point(88) = {0.043933, -0.744087, 0, 1.0};
Point(89) = {0.048227, -0.742793, 0, 1.0};
Point(90) = {0.052232, -0.741338, 0, 1.0};
Point(91) = {0.055950, -0.739761, 0, 1.0};
Point(92) = {0.059362, -0.738096, 0, 1.0};
Point(93) = {0.062454, -0.736371, 0, 1.0};
Point(94) = {0.065212, -0.734602, 0, 1.0};
Point(95) = {0.067625, -0.732816, 0, 1.0};
Point(96) = {0.069689, -0.731039, 0, 1.0};
Point(97) = {0.071390, -0.729298, 0, 1.0};
Point(98) = {0.072721, -0.727624, 0, 1.0};
Point(99) = {0.073657, -0.726032, 0, 1.0};
Point(100) = {0.074217, -0.724528, 0, 1.0};
Point(101) = {0.074438, -0.723156, 0, 1.0};
Point(102) = {0.074331, -0.721997, 0, 1.0};
Point(103) = {0.073817, -0.721215, 0, 1.0};
Point(104) = {0.072728, -0.720762, 0, 1.0};
Point(105) = {0.071026, -0.720458, 0, 1.0};
Point(106) = {0.068803, -0.720293, 0, 1.0};
Point(107) = {0.066089, -0.720270, 0, 1.0};
Point(108) = {0.062918, -0.720385, 0, 1.0};
Point(109) = {0.059315, -0.720644, 0, 1.0};
Point(110) = {0.055317, -0.721052, 0, 1.0};
Point(111) = {0.050956, -0.721614, 0, 1.0};
Point(112) = {0.046269, -0.722342, 0, 1.0};
Point(113) = {0.041307, -0.723266, 0, 1.0};
Point(114) = {0.036054, -0.724476, 0, 1.0};
Point(115) = {0.030429, -0.725967, 0, 1.0};
Point(116) = {0.024416, -0.727647, 0, 1.0};
Point(117) = {0.018042, -0.729462, 0, 1.0};
Point(118) = {0.011345, -0.731364, 0, 1.0};
Point(119) = {0.004367, -0.733306, 0, 1.0};
Point(120) = {-0.002841, -0.735252, 0, 1.0};
Point(121) = {-0.010228, -0.737155, 0, 1.0};
Point(122) = {-0.017730, -0.738978, 0, 1.0};
Point(123) = {-0.025285, -0.740686, 0, 1.0};
Point(124) = {-0.032829, -0.742253, 0, 1.0};
Point(125) = {-0.036631, -0.742982, 0, 1.0};
Point(126) = {-0.049433, -0.745307, 0, 1.0};
Point(127) = {-0.057132, -0.746552, 0, 1.0};
Point(128) = {-0.059711, -0.746902, 0, 1.0};
Point(129) = {-0.062297, -0.747180, 0, 1.0};
Point(130) = {-0.064892, -0.747384, 0, 1.0};
Point(131) = {-0.067492, -0.747509, 0, 1.0};
Point(132) = {-0.073573, -0.747623, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {36.00000000, 15.00000000, 0, 1.0};
Point(136) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
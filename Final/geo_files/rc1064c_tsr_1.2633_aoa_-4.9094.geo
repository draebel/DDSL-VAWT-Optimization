SetFactory("OpenCASCADE");

Point(1) = {0.074625, 0.748349, 0, 1.0};
Point(2) = {0.069584, 0.748768, 0, 1.0};
Point(3) = {0.066774, 0.748623, 0, 1.0};
Point(4) = {0.064549, 0.749132, 0, 1.0};
Point(5) = {0.058899, 0.749468, 0, 1.0};
Point(6) = {0.054487, 0.749675, 0, 1.0};
Point(7) = {0.051114, 0.749799, 0, 1.0};
Point(8) = {0.044442, 0.749960, 0, 1.0};
Point(9) = {0.039567, 0.750000, 0, 1.0};
Point(10) = {0.034411, 0.749978, 0, 1.0};
Point(11) = {0.028291, 0.749840, 0, 1.0};
Point(12) = {0.024385, 0.749702, 0, 1.0};
Point(13) = {0.021001, 0.749524, 0, 1.0};
Point(14) = {0.014365, 0.749081, 0, 1.0};
Point(15) = {0.009360, 0.748629, 0, 1.0};
Point(16) = {0.006919, 0.748364, 0, 1.0};
Point(17) = {0.004360, 0.748077, 0, 1.0};
Point(18) = {-0.000632, 0.747419, 0, 1.0};
Point(19) = {-0.003163, 0.747035, 0, 1.0};
Point(20) = {-0.005616, 0.746647, 0, 1.0};
Point(21) = {-0.009364, 0.745960, 0, 1.0};
Point(22) = {-0.010585, 0.745726, 0, 1.0};
Point(23) = {-0.012214, 0.745376, 0, 1.0};
Point(24) = {-0.015527, 0.744611, 0, 1.0};
Point(25) = {-0.017329, 0.744123, 0, 1.0};
Point(26) = {-0.017981, 0.743940, 0, 1.0};
Point(27) = {-0.019536, 0.743455, 0, 1.0};
Point(28) = {-0.020415, 0.743150, 0, 1.0};
Point(29) = {-0.021414, 0.742764, 0, 1.0};
Point(30) = {-0.022837, 0.742126, 0, 1.0};
Point(31) = {-0.024014, 0.741393, 0, 1.0};
Point(32) = {-0.024724, 0.740629, 0, 1.0};
Point(33) = {-0.025000, 0.739691, 0, 1.0};
Point(34) = {-0.024583, 0.738988, 0, 1.0};
Point(35) = {-0.023513, 0.738423, 0, 1.0};
Point(36) = {-0.022216, 0.738089, 0, 1.0};
Point(37) = {-0.020996, 0.737896, 0, 1.0};
Point(38) = {-0.019679, 0.737757, 0, 1.0};
Point(39) = {-0.019043, 0.737716, 0, 1.0};
Point(40) = {-0.017152, 0.737630, 0, 1.0};
Point(41) = {-0.016770, 0.737619, 0, 1.0};
Point(42) = {-0.014642, 0.737599, 0, 1.0};
Point(43) = {-0.011548, 0.737630, 0, 1.0};
Point(44) = {-0.009651, 0.737681, 0, 1.0};
Point(45) = {-0.008655, 0.737710, 0, 1.0};
Point(46) = {-0.004695, 0.738067, 0, 1.0};
Point(47) = {-0.002385, 0.737973, 0, 1.0};
Point(48) = {0.000288, 0.738113, 0, 1.0};
Point(49) = {0.005251, 0.738404, 0, 1.0};
Point(50) = {0.007761, 0.738566, 0, 1.0};
Point(51) = {0.010212, 0.738737, 0, 1.0};
Point(52) = {0.015173, 0.739113, 0, 1.0};
Point(53) = {0.021845, 0.739697, 0, 1.0};
Point(54) = {0.025096, 0.740015, 0, 1.0};
Point(55) = {0.029098, 0.740440, 0, 1.0};
Point(56) = {0.035023, 0.741139, 0, 1.0};
Point(57) = {0.040268, 0.741835, 0, 1.0};
Point(58) = {0.044949, 0.742516, 0, 1.0};
Point(59) = {0.051648, 0.743589, 0, 1.0};
Point(60) = {0.054862, 0.744146, 0, 1.0};
Point(61) = {0.059287, 0.744954, 0, 1.0};
Point(62) = {0.064759, 0.746024, 0, 1.0};
Point(63) = {0.066959, 0.746474, 0, 1.0};
Point(64) = {0.069703, 0.747056, 0, 1.0};
Point(65) = {0.074642, 0.748150, 0, 1.0};
Point(66) = {-0.074625, -0.748349, 0, 1.0};
Point(67) = {-0.069584, -0.748768, 0, 1.0};
Point(68) = {-0.066774, -0.748623, 0, 1.0};
Point(69) = {-0.064549, -0.749132, 0, 1.0};
Point(70) = {-0.058899, -0.749468, 0, 1.0};
Point(71) = {-0.054487, -0.749675, 0, 1.0};
Point(72) = {-0.051114, -0.749799, 0, 1.0};
Point(73) = {-0.044442, -0.749960, 0, 1.0};
Point(74) = {-0.039567, -0.750000, 0, 1.0};
Point(75) = {-0.034411, -0.749978, 0, 1.0};
Point(76) = {-0.028291, -0.749840, 0, 1.0};
Point(77) = {-0.024385, -0.749702, 0, 1.0};
Point(78) = {-0.021001, -0.749524, 0, 1.0};
Point(79) = {-0.014365, -0.749081, 0, 1.0};
Point(80) = {-0.009360, -0.748629, 0, 1.0};
Point(81) = {-0.006919, -0.748364, 0, 1.0};
Point(82) = {-0.004360, -0.748077, 0, 1.0};
Point(83) = {0.000632, -0.747419, 0, 1.0};
Point(84) = {0.003163, -0.747035, 0, 1.0};
Point(85) = {0.005616, -0.746647, 0, 1.0};
Point(86) = {0.009364, -0.745960, 0, 1.0};
Point(87) = {0.010585, -0.745726, 0, 1.0};
Point(88) = {0.012214, -0.745376, 0, 1.0};
Point(89) = {0.015527, -0.744611, 0, 1.0};
Point(90) = {0.017329, -0.744123, 0, 1.0};
Point(91) = {0.017981, -0.743940, 0, 1.0};
Point(92) = {0.019536, -0.743455, 0, 1.0};
Point(93) = {0.020415, -0.743150, 0, 1.0};
Point(94) = {0.021414, -0.742764, 0, 1.0};
Point(95) = {0.022837, -0.742126, 0, 1.0};
Point(96) = {0.024014, -0.741393, 0, 1.0};
Point(97) = {0.024724, -0.740629, 0, 1.0};
Point(98) = {0.025000, -0.739691, 0, 1.0};
Point(99) = {0.024583, -0.738988, 0, 1.0};
Point(100) = {0.023513, -0.738423, 0, 1.0};
Point(101) = {0.022216, -0.738089, 0, 1.0};
Point(102) = {0.020996, -0.737896, 0, 1.0};
Point(103) = {0.019679, -0.737757, 0, 1.0};
Point(104) = {0.019043, -0.737716, 0, 1.0};
Point(105) = {0.017152, -0.737630, 0, 1.0};
Point(106) = {0.016770, -0.737619, 0, 1.0};
Point(107) = {0.014642, -0.737599, 0, 1.0};
Point(108) = {0.011548, -0.737630, 0, 1.0};
Point(109) = {0.009651, -0.737681, 0, 1.0};
Point(110) = {0.008655, -0.737710, 0, 1.0};
Point(111) = {0.004695, -0.738067, 0, 1.0};
Point(112) = {0.002385, -0.737973, 0, 1.0};
Point(113) = {-0.000288, -0.738113, 0, 1.0};
Point(114) = {-0.005251, -0.738404, 0, 1.0};
Point(115) = {-0.007761, -0.738566, 0, 1.0};
Point(116) = {-0.010212, -0.738737, 0, 1.0};
Point(117) = {-0.015173, -0.739113, 0, 1.0};
Point(118) = {-0.021845, -0.739697, 0, 1.0};
Point(119) = {-0.025096, -0.740015, 0, 1.0};
Point(120) = {-0.029098, -0.740440, 0, 1.0};
Point(121) = {-0.035023, -0.741139, 0, 1.0};
Point(122) = {-0.040268, -0.741835, 0, 1.0};
Point(123) = {-0.044949, -0.742516, 0, 1.0};
Point(124) = {-0.051648, -0.743589, 0, 1.0};
Point(125) = {-0.054862, -0.744146, 0, 1.0};
Point(126) = {-0.059287, -0.744954, 0, 1.0};
Point(127) = {-0.064759, -0.746024, 0, 1.0};
Point(128) = {-0.066959, -0.746474, 0, 1.0};
Point(129) = {-0.069703, -0.747056, 0, 1.0};
Point(130) = {-0.074642, -0.748150, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:82};
Spline(6) = {82:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074981, 0.742841, 0, 1.0};
Point(2) = {0.074622, 0.742832, 0, 1.0};
Point(3) = {0.073549, 0.742831, 0, 1.0};
Point(4) = {0.071778, 0.742901, 0, 1.0};
Point(5) = {0.069365, 0.743103, 0, 1.0};
Point(6) = {0.066402, 0.743463, 0, 1.0};
Point(7) = {0.062978, 0.743969, 0, 1.0};
Point(8) = {0.059169, 0.744597, 0, 1.0};
Point(9) = {0.055045, 0.745316, 0, 1.0};
Point(10) = {0.050672, 0.746091, 0, 1.0};
Point(11) = {0.046109, 0.746885, 0, 1.0};
Point(12) = {0.041412, 0.747664, 0, 1.0};
Point(13) = {0.036635, 0.748392, 0, 1.0};
Point(14) = {0.031836, 0.749033, 0, 1.0};
Point(15) = {0.027053, 0.749527, 0, 1.0};
Point(16) = {0.022282, 0.749839, 0, 1.0};
Point(17) = {0.017527, 0.749988, 0, 1.0};
Point(18) = {0.012832, 0.750000, 0, 1.0};
Point(19) = {0.008249, 0.749883, 0, 1.0};
Point(20) = {0.003828, 0.749640, 0, 1.0};
Point(21) = {-0.000388, 0.749271, 0, 1.0};
Point(22) = {-0.004364, 0.748781, 0, 1.0};
Point(23) = {-0.008064, 0.748176, 0, 1.0};
Point(24) = {-0.011462, 0.747469, 0, 1.0};
Point(25) = {-0.014531, 0.746677, 0, 1.0};
Point(26) = {-0.017243, 0.745820, 0, 1.0};
Point(27) = {-0.019577, 0.744916, 0, 1.0};
Point(28) = {-0.021515, 0.743990, 0, 1.0};
Point(29) = {-0.023042, 0.743072, 0, 1.0};
Point(30) = {-0.024145, 0.742199, 0, 1.0};
Point(31) = {-0.024804, 0.741418, 0, 1.0};
Point(32) = {-0.024914, 0.741206, 0, 1.0};
Point(33) = {-0.024981, 0.741016, 0, 1.0};
Point(34) = {-0.025000, 0.740902, 0, 1.0};
Point(35) = {-0.024991, 0.740803, 0, 1.0};
Point(36) = {-0.024949, 0.740711, 0, 1.0};
Point(37) = {-0.024873, 0.740617, 0, 1.0};
Point(38) = {-0.024714, 0.740471, 0, 1.0};
Point(39) = {-0.024504, 0.740323, 0, 1.0};
Point(40) = {-0.023468, 0.739845, 0, 1.0};
Point(41) = {-0.021919, 0.739418, 0, 1.0};
Point(42) = {-0.019868, 0.739068, 0, 1.0};
Point(43) = {-0.017324, 0.738801, 0, 1.0};
Point(44) = {-0.014306, 0.738617, 0, 1.0};
Point(45) = {-0.010838, 0.738514, 0, 1.0};
Point(46) = {-0.006950, 0.738481, 0, 1.0};
Point(47) = {-0.002683, 0.738507, 0, 1.0};
Point(48) = {0.001914, 0.738582, 0, 1.0};
Point(49) = {0.006786, 0.738695, 0, 1.0};
Point(50) = {0.011872, 0.738840, 0, 1.0};
Point(51) = {0.017110, 0.739015, 0, 1.0};
Point(52) = {0.022441, 0.739215, 0, 1.0};
Point(53) = {0.027802, 0.739437, 0, 1.0};
Point(54) = {0.033132, 0.739678, 0, 1.0};
Point(55) = {0.038368, 0.739933, 0, 1.0};
Point(56) = {0.043450, 0.740198, 0, 1.0};
Point(57) = {0.048320, 0.740471, 0, 1.0};
Point(58) = {0.052920, 0.740747, 0, 1.0};
Point(59) = {0.057196, 0.741024, 0, 1.0};
Point(60) = {0.061099, 0.741299, 0, 1.0};
Point(61) = {0.064582, 0.741571, 0, 1.0};
Point(62) = {0.067603, 0.741837, 0, 1.0};
Point(63) = {0.070125, 0.742104, 0, 1.0};
Point(64) = {0.072139, 0.742382, 0, 1.0};
Point(65) = {0.073657, 0.742635, 0, 1.0};
Point(66) = {0.074637, 0.742793, 0, 1.0};
Point(67) = {-0.074981, -0.742841, 0, 1.0};
Point(68) = {-0.074622, -0.742832, 0, 1.0};
Point(69) = {-0.073549, -0.742831, 0, 1.0};
Point(70) = {-0.071778, -0.742901, 0, 1.0};
Point(71) = {-0.069365, -0.743103, 0, 1.0};
Point(72) = {-0.066402, -0.743463, 0, 1.0};
Point(73) = {-0.062978, -0.743969, 0, 1.0};
Point(74) = {-0.059169, -0.744597, 0, 1.0};
Point(75) = {-0.055045, -0.745316, 0, 1.0};
Point(76) = {-0.050672, -0.746091, 0, 1.0};
Point(77) = {-0.046109, -0.746885, 0, 1.0};
Point(78) = {-0.041412, -0.747664, 0, 1.0};
Point(79) = {-0.036635, -0.748392, 0, 1.0};
Point(80) = {-0.031836, -0.749033, 0, 1.0};
Point(81) = {-0.027053, -0.749527, 0, 1.0};
Point(82) = {-0.022282, -0.749839, 0, 1.0};
Point(83) = {-0.017527, -0.749988, 0, 1.0};
Point(84) = {-0.012832, -0.750000, 0, 1.0};
Point(85) = {-0.008249, -0.749883, 0, 1.0};
Point(86) = {-0.003828, -0.749640, 0, 1.0};
Point(87) = {0.000388, -0.749271, 0, 1.0};
Point(88) = {0.004364, -0.748781, 0, 1.0};
Point(89) = {0.008064, -0.748176, 0, 1.0};
Point(90) = {0.011462, -0.747469, 0, 1.0};
Point(91) = {0.014531, -0.746677, 0, 1.0};
Point(92) = {0.017243, -0.745820, 0, 1.0};
Point(93) = {0.019577, -0.744916, 0, 1.0};
Point(94) = {0.021515, -0.743990, 0, 1.0};
Point(95) = {0.023042, -0.743072, 0, 1.0};
Point(96) = {0.024145, -0.742199, 0, 1.0};
Point(97) = {0.024804, -0.741418, 0, 1.0};
Point(98) = {0.024914, -0.741206, 0, 1.0};
Point(99) = {0.024981, -0.741016, 0, 1.0};
Point(100) = {0.025000, -0.740902, 0, 1.0};
Point(101) = {0.024991, -0.740803, 0, 1.0};
Point(102) = {0.024949, -0.740711, 0, 1.0};
Point(103) = {0.024873, -0.740617, 0, 1.0};
Point(104) = {0.024714, -0.740471, 0, 1.0};
Point(105) = {0.024504, -0.740323, 0, 1.0};
Point(106) = {0.023468, -0.739845, 0, 1.0};
Point(107) = {0.021919, -0.739418, 0, 1.0};
Point(108) = {0.019868, -0.739068, 0, 1.0};
Point(109) = {0.017324, -0.738801, 0, 1.0};
Point(110) = {0.014306, -0.738617, 0, 1.0};
Point(111) = {0.010838, -0.738514, 0, 1.0};
Point(112) = {0.006950, -0.738481, 0, 1.0};
Point(113) = {0.002683, -0.738507, 0, 1.0};
Point(114) = {-0.001914, -0.738582, 0, 1.0};
Point(115) = {-0.006786, -0.738695, 0, 1.0};
Point(116) = {-0.011872, -0.738840, 0, 1.0};
Point(117) = {-0.017110, -0.739015, 0, 1.0};
Point(118) = {-0.022441, -0.739215, 0, 1.0};
Point(119) = {-0.027802, -0.739437, 0, 1.0};
Point(120) = {-0.033132, -0.739678, 0, 1.0};
Point(121) = {-0.038368, -0.739933, 0, 1.0};
Point(122) = {-0.043450, -0.740198, 0, 1.0};
Point(123) = {-0.048320, -0.740471, 0, 1.0};
Point(124) = {-0.052920, -0.740747, 0, 1.0};
Point(125) = {-0.057196, -0.741024, 0, 1.0};
Point(126) = {-0.061099, -0.741299, 0, 1.0};
Point(127) = {-0.064582, -0.741571, 0, 1.0};
Point(128) = {-0.067603, -0.741837, 0, 1.0};
Point(129) = {-0.070125, -0.742104, 0, 1.0};
Point(130) = {-0.072139, -0.742382, 0, 1.0};
Point(131) = {-0.073657, -0.742635, 0, 1.0};
Point(132) = {-0.074637, -0.742793, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074977, 0.739021, 0, 1.0};
Point(2) = {0.074071, 0.739105, 0, 1.0};
Point(3) = {0.069390, 0.739674, 0, 1.0};
Point(4) = {0.063982, 0.740474, 0, 1.0};
Point(5) = {0.057965, 0.741466, 0, 1.0};
Point(6) = {0.051452, 0.742601, 0, 1.0};
Point(7) = {0.044544, 0.743825, 0, 1.0};
Point(8) = {0.037336, 0.745080, 0, 1.0};
Point(9) = {0.029917, 0.746309, 0, 1.0};
Point(10) = {0.022371, 0.747461, 0, 1.0};
Point(11) = {0.014790, 0.748473, 0, 1.0};
Point(12) = {0.007236, 0.749252, 0, 1.0};
Point(13) = {-0.000300, 0.749746, 0, 1.0};
Point(14) = {-0.007811, 0.749981, 0, 1.0};
Point(15) = {-0.015228, 0.750000, 0, 1.0};
Point(16) = {-0.022467, 0.749815, 0, 1.0};
Point(17) = {-0.029450, 0.749431, 0, 1.0};
Point(18) = {-0.036110, 0.748849, 0, 1.0};
Point(19) = {-0.042389, 0.748075, 0, 1.0};
Point(20) = {-0.048235, 0.747119, 0, 1.0};
Point(21) = {-0.053603, 0.746003, 0, 1.0};
Point(22) = {-0.058449, 0.744752, 0, 1.0};
Point(23) = {-0.062734, 0.743397, 0, 1.0};
Point(24) = {-0.066420, 0.741969, 0, 1.0};
Point(25) = {-0.069481, 0.740506, 0, 1.0};
Point(26) = {-0.071894, 0.739057, 0, 1.0};
Point(27) = {-0.073635, 0.737677, 0, 1.0};
Point(28) = {-0.074677, 0.736443, 0, 1.0};
Point(29) = {-0.074851, 0.736109, 0, 1.0};
Point(30) = {-0.074956, 0.735810, 0, 1.0};
Point(31) = {-0.074985, 0.735630, 0, 1.0};
Point(32) = {-0.074972, 0.735473, 0, 1.0};
Point(33) = {-0.074905, 0.735328, 0, 1.0};
Point(34) = {-0.074786, 0.735178, 0, 1.0};
Point(35) = {-0.074534, 0.734949, 0, 1.0};
Point(36) = {-0.074202, 0.734714, 0, 1.0};
Point(37) = {-0.072567, 0.733960, 0, 1.0};
Point(38) = {-0.070120, 0.733285, 0, 1.0};
Point(39) = {-0.066879, 0.732732, 0, 1.0};
Point(40) = {-0.062861, 0.732310, 0, 1.0};
Point(41) = {-0.058094, 0.732020, 0, 1.0};
Point(42) = {-0.052616, 0.731856, 0, 1.0};
Point(43) = {-0.046475, 0.731804, 0, 1.0};
Point(44) = {-0.039735, 0.731846, 0, 1.0};
Point(45) = {-0.032474, 0.731964, 0, 1.0};
Point(46) = {-0.024778, 0.732143, 0, 1.0};
Point(47) = {-0.016744, 0.732372, 0, 1.0};
Point(48) = {-0.008470, 0.732648, 0, 1.0};
Point(49) = {-0.000049, 0.732964, 0, 1.0};
Point(50) = {0.008419, 0.733315, 0, 1.0};
Point(51) = {0.016838, 0.733695, 0, 1.0};
Point(52) = {0.025109, 0.734098, 0, 1.0};
Point(53) = {0.033137, 0.734517, 0, 1.0};
Point(54) = {0.040828, 0.734948, 0, 1.0};
Point(55) = {0.048094, 0.735384, 0, 1.0};
Point(56) = {0.054849, 0.735822, 0, 1.0};
Point(57) = {0.061014, 0.736257, 0, 1.0};
Point(58) = {0.066516, 0.736686, 0, 1.0};
Point(59) = {0.071288, 0.737105, 0, 1.0};
Point(60) = {0.075007, 0.737495, 0, 1.0};
Point(61) = {-0.074977, -0.739021, 0, 1.0};
Point(62) = {-0.074071, -0.739105, 0, 1.0};
Point(63) = {-0.069390, -0.739674, 0, 1.0};
Point(64) = {-0.063982, -0.740474, 0, 1.0};
Point(65) = {-0.057965, -0.741466, 0, 1.0};
Point(66) = {-0.051452, -0.742601, 0, 1.0};
Point(67) = {-0.044544, -0.743825, 0, 1.0};
Point(68) = {-0.037336, -0.745080, 0, 1.0};
Point(69) = {-0.029917, -0.746309, 0, 1.0};
Point(70) = {-0.022371, -0.747461, 0, 1.0};
Point(71) = {-0.014790, -0.748473, 0, 1.0};
Point(72) = {-0.007236, -0.749252, 0, 1.0};
Point(73) = {0.000300, -0.749746, 0, 1.0};
Point(74) = {0.007811, -0.749981, 0, 1.0};
Point(75) = {0.015228, -0.750000, 0, 1.0};
Point(76) = {0.022467, -0.749815, 0, 1.0};
Point(77) = {0.029450, -0.749431, 0, 1.0};
Point(78) = {0.036110, -0.748849, 0, 1.0};
Point(79) = {0.042389, -0.748075, 0, 1.0};
Point(80) = {0.048235, -0.747119, 0, 1.0};
Point(81) = {0.053603, -0.746003, 0, 1.0};
Point(82) = {0.058449, -0.744752, 0, 1.0};
Point(83) = {0.062734, -0.743397, 0, 1.0};
Point(84) = {0.066420, -0.741969, 0, 1.0};
Point(85) = {0.069481, -0.740506, 0, 1.0};
Point(86) = {0.071894, -0.739057, 0, 1.0};
Point(87) = {0.073635, -0.737677, 0, 1.0};
Point(88) = {0.074677, -0.736443, 0, 1.0};
Point(89) = {0.074851, -0.736109, 0, 1.0};
Point(90) = {0.074956, -0.735810, 0, 1.0};
Point(91) = {0.074985, -0.735630, 0, 1.0};
Point(92) = {0.074972, -0.735473, 0, 1.0};
Point(93) = {0.074905, -0.735328, 0, 1.0};
Point(94) = {0.074786, -0.735178, 0, 1.0};
Point(95) = {0.074534, -0.734949, 0, 1.0};
Point(96) = {0.074202, -0.734714, 0, 1.0};
Point(97) = {0.072567, -0.733960, 0, 1.0};
Point(98) = {0.070120, -0.733285, 0, 1.0};
Point(99) = {0.066879, -0.732732, 0, 1.0};
Point(100) = {0.062861, -0.732310, 0, 1.0};
Point(101) = {0.058094, -0.732020, 0, 1.0};
Point(102) = {0.052616, -0.731856, 0, 1.0};
Point(103) = {0.046475, -0.731804, 0, 1.0};
Point(104) = {0.039735, -0.731846, 0, 1.0};
Point(105) = {0.032474, -0.731964, 0, 1.0};
Point(106) = {0.024778, -0.732143, 0, 1.0};
Point(107) = {0.016744, -0.732372, 0, 1.0};
Point(108) = {0.008470, -0.732648, 0, 1.0};
Point(109) = {0.000049, -0.732964, 0, 1.0};
Point(110) = {-0.008419, -0.733315, 0, 1.0};
Point(111) = {-0.016838, -0.733695, 0, 1.0};
Point(112) = {-0.025109, -0.734098, 0, 1.0};
Point(113) = {-0.033137, -0.734517, 0, 1.0};
Point(114) = {-0.040828, -0.734948, 0, 1.0};
Point(115) = {-0.048094, -0.735384, 0, 1.0};
Point(116) = {-0.054849, -0.735822, 0, 1.0};
Point(117) = {-0.061014, -0.736257, 0, 1.0};
Point(118) = {-0.066516, -0.736686, 0, 1.0};
Point(119) = {-0.071288, -0.737105, 0, 1.0};
Point(120) = {-0.075007, -0.737495, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:45};
Spline(3) = {45:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:105};
Spline(7) = {105:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112476, 0.739262, 0, 1.0};
Point(2) = {0.111939, 0.739248, 0, 1.0};
Point(3) = {0.110329, 0.739246, 0, 1.0};
Point(4) = {0.107672, 0.739351, 0, 1.0};
Point(5) = {0.104052, 0.739654, 0, 1.0};
Point(6) = {0.099608, 0.740194, 0, 1.0};
Point(7) = {0.094472, 0.740954, 0, 1.0};
Point(8) = {0.088758, 0.741896, 0, 1.0};
Point(9) = {0.082573, 0.742974, 0, 1.0};
Point(10) = {0.076013, 0.744136, 0, 1.0};
Point(11) = {0.069169, 0.745328, 0, 1.0};
Point(12) = {0.062123, 0.746495, 0, 1.0};
Point(13) = {0.054958, 0.747589, 0, 1.0};
Point(14) = {0.047759, 0.748550, 0, 1.0};
Point(15) = {0.040585, 0.749290, 0, 1.0};
Point(16) = {0.033429, 0.749758, 0, 1.0};
Point(17) = {0.026297, 0.749982, 0, 1.0};
Point(18) = {0.019253, 0.750000, 0, 1.0};
Point(19) = {0.012380, 0.749825, 0, 1.0};
Point(20) = {0.005748, 0.749460, 0, 1.0};
Point(21) = {-0.000576, 0.748907, 0, 1.0};
Point(22) = {-0.006539, 0.748172, 0, 1.0};
Point(23) = {-0.012090, 0.747265, 0, 1.0};
Point(24) = {-0.017187, 0.746204, 0, 1.0};
Point(25) = {-0.021790, 0.745016, 0, 1.0};
Point(26) = {-0.025858, 0.743729, 0, 1.0};
Point(27) = {-0.029358, 0.742374, 0, 1.0};
Point(28) = {-0.032266, 0.740985, 0, 1.0};
Point(29) = {-0.034557, 0.739608, 0, 1.0};
Point(30) = {-0.036210, 0.738298, 0, 1.0};
Point(31) = {-0.037199, 0.737126, 0, 1.0};
Point(32) = {-0.037365, 0.736809, 0, 1.0};
Point(33) = {-0.037465, 0.736525, 0, 1.0};
Point(34) = {-0.037493, 0.736354, 0, 1.0};
Point(35) = {-0.037480, 0.736205, 0, 1.0};
Point(36) = {-0.037416, 0.736067, 0, 1.0};
Point(37) = {-0.037304, 0.735925, 0, 1.0};
Point(38) = {-0.037064, 0.735707, 0, 1.0};
Point(39) = {-0.036749, 0.735484, 0, 1.0};
Point(40) = {-0.035196, 0.734768, 0, 1.0};
Point(41) = {-0.032872, 0.734127, 0, 1.0};
Point(42) = {-0.029795, 0.733602, 0, 1.0};
Point(43) = {-0.025979, 0.733201, 0, 1.0};
Point(44) = {-0.021453, 0.732926, 0, 1.0};
Point(45) = {-0.016250, 0.732770, 0, 1.0};
Point(46) = {-0.010419, 0.732721, 0, 1.0};
Point(47) = {-0.004019, 0.732761, 0, 1.0};
Point(48) = {0.002877, 0.732873, 0, 1.0};
Point(49) = {0.010185, 0.733043, 0, 1.0};
Point(50) = {0.017813, 0.733261, 0, 1.0};
Point(51) = {0.025671, 0.733522, 0, 1.0};
Point(52) = {0.033668, 0.733822, 0, 1.0};
Point(53) = {0.041709, 0.734156, 0, 1.0};
Point(54) = {0.049703, 0.734517, 0, 1.0};
Point(55) = {0.057558, 0.734899, 0, 1.0};
Point(56) = {0.065181, 0.735297, 0, 1.0};
Point(57) = {0.072485, 0.735707, 0, 1.0};
Point(58) = {0.079385, 0.736121, 0, 1.0};
Point(59) = {0.085800, 0.736537, 0, 1.0};
Point(60) = {0.091654, 0.736949, 0, 1.0};
Point(61) = {0.096878, 0.737356, 0, 1.0};
Point(62) = {0.101410, 0.737755, 0, 1.0};
Point(63) = {0.105192, 0.738155, 0, 1.0};
Point(64) = {0.108214, 0.738572, 0, 1.0};
Point(65) = {0.110491, 0.738952, 0, 1.0};
Point(66) = {0.111960, 0.739190, 0, 1.0};
Point(67) = {-0.112476, -0.739262, 0, 1.0};
Point(68) = {-0.111939, -0.739248, 0, 1.0};
Point(69) = {-0.110329, -0.739246, 0, 1.0};
Point(70) = {-0.107672, -0.739351, 0, 1.0};
Point(71) = {-0.104052, -0.739654, 0, 1.0};
Point(72) = {-0.099608, -0.740194, 0, 1.0};
Point(73) = {-0.094472, -0.740954, 0, 1.0};
Point(74) = {-0.088758, -0.741896, 0, 1.0};
Point(75) = {-0.082573, -0.742974, 0, 1.0};
Point(76) = {-0.076013, -0.744136, 0, 1.0};
Point(77) = {-0.069169, -0.745328, 0, 1.0};
Point(78) = {-0.062123, -0.746495, 0, 1.0};
Point(79) = {-0.054958, -0.747589, 0, 1.0};
Point(80) = {-0.047759, -0.748550, 0, 1.0};
Point(81) = {-0.040585, -0.749290, 0, 1.0};
Point(82) = {-0.033429, -0.749758, 0, 1.0};
Point(83) = {-0.026297, -0.749982, 0, 1.0};
Point(84) = {-0.019253, -0.750000, 0, 1.0};
Point(85) = {-0.012380, -0.749825, 0, 1.0};
Point(86) = {-0.005748, -0.749460, 0, 1.0};
Point(87) = {0.000576, -0.748907, 0, 1.0};
Point(88) = {0.006539, -0.748172, 0, 1.0};
Point(89) = {0.012090, -0.747265, 0, 1.0};
Point(90) = {0.017187, -0.746204, 0, 1.0};
Point(91) = {0.021790, -0.745016, 0, 1.0};
Point(92) = {0.025858, -0.743729, 0, 1.0};
Point(93) = {0.029358, -0.742374, 0, 1.0};
Point(94) = {0.032266, -0.740985, 0, 1.0};
Point(95) = {0.034557, -0.739608, 0, 1.0};
Point(96) = {0.036210, -0.738298, 0, 1.0};
Point(97) = {0.037199, -0.737126, 0, 1.0};
Point(98) = {0.037365, -0.736809, 0, 1.0};
Point(99) = {0.037465, -0.736525, 0, 1.0};
Point(100) = {0.037493, -0.736354, 0, 1.0};
Point(101) = {0.037480, -0.736205, 0, 1.0};
Point(102) = {0.037416, -0.736067, 0, 1.0};
Point(103) = {0.037304, -0.735925, 0, 1.0};
Point(104) = {0.037064, -0.735707, 0, 1.0};
Point(105) = {0.036749, -0.735484, 0, 1.0};
Point(106) = {0.035196, -0.734768, 0, 1.0};
Point(107) = {0.032872, -0.734127, 0, 1.0};
Point(108) = {0.029795, -0.733602, 0, 1.0};
Point(109) = {0.025979, -0.733201, 0, 1.0};
Point(110) = {0.021453, -0.732926, 0, 1.0};
Point(111) = {0.016250, -0.732770, 0, 1.0};
Point(112) = {0.010419, -0.732721, 0, 1.0};
Point(113) = {0.004019, -0.732761, 0, 1.0};
Point(114) = {-0.002877, -0.732873, 0, 1.0};
Point(115) = {-0.010185, -0.733043, 0, 1.0};
Point(116) = {-0.017813, -0.733261, 0, 1.0};
Point(117) = {-0.025671, -0.733522, 0, 1.0};
Point(118) = {-0.033668, -0.733822, 0, 1.0};
Point(119) = {-0.041709, -0.734156, 0, 1.0};
Point(120) = {-0.049703, -0.734517, 0, 1.0};
Point(121) = {-0.057558, -0.734899, 0, 1.0};
Point(122) = {-0.065181, -0.735297, 0, 1.0};
Point(123) = {-0.072485, -0.735707, 0, 1.0};
Point(124) = {-0.079385, -0.736121, 0, 1.0};
Point(125) = {-0.085800, -0.736537, 0, 1.0};
Point(126) = {-0.091654, -0.736949, 0, 1.0};
Point(127) = {-0.096878, -0.737356, 0, 1.0};
Point(128) = {-0.101410, -0.737755, 0, 1.0};
Point(129) = {-0.105192, -0.738155, 0, 1.0};
Point(130) = {-0.108214, -0.738572, 0, 1.0};
Point(131) = {-0.110491, -0.738952, 0, 1.0};
Point(132) = {-0.111960, -0.739190, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
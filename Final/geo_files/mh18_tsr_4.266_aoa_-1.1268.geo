SetFactory("OpenCASCADE");

Point(1) = {0.149961, 0.735683, 0, 1.0};
Point(2) = {0.149245, 0.735664, 0, 1.0};
Point(3) = {0.147098, 0.735661, 0, 1.0};
Point(4) = {0.143555, 0.735802, 0, 1.0};
Point(5) = {0.138729, 0.736205, 0, 1.0};
Point(6) = {0.132803, 0.736926, 0, 1.0};
Point(7) = {0.125955, 0.737939, 0, 1.0};
Point(8) = {0.118338, 0.739195, 0, 1.0};
Point(9) = {0.110090, 0.740632, 0, 1.0};
Point(10) = {0.101344, 0.742181, 0, 1.0};
Point(11) = {0.092218, 0.743770, 0, 1.0};
Point(12) = {0.082824, 0.745327, 0, 1.0};
Point(13) = {0.073269, 0.746785, 0, 1.0};
Point(14) = {0.063671, 0.748066, 0, 1.0};
Point(15) = {0.054106, 0.749053, 0, 1.0};
Point(16) = {0.044564, 0.749678, 0, 1.0};
Point(17) = {0.035054, 0.749976, 0, 1.0};
Point(18) = {0.025663, 0.750000, 0, 1.0};
Point(19) = {0.016498, 0.749766, 0, 1.0};
Point(20) = {0.007656, 0.749280, 0, 1.0};
Point(21) = {-0.000777, 0.748543, 0, 1.0};
Point(22) = {-0.008727, 0.747562, 0, 1.0};
Point(23) = {-0.016128, 0.746353, 0, 1.0};
Point(24) = {-0.022925, 0.744939, 0, 1.0};
Point(25) = {-0.029062, 0.743355, 0, 1.0};
Point(26) = {-0.034486, 0.741639, 0, 1.0};
Point(27) = {-0.039153, 0.739831, 0, 1.0};
Point(28) = {-0.043030, 0.737979, 0, 1.0};
Point(29) = {-0.046084, 0.736144, 0, 1.0};
Point(30) = {-0.048289, 0.734397, 0, 1.0};
Point(31) = {-0.049608, 0.732835, 0, 1.0};
Point(32) = {-0.049828, 0.732412, 0, 1.0};
Point(33) = {-0.049962, 0.732033, 0, 1.0};
Point(34) = {-0.049999, 0.731805, 0, 1.0};
Point(35) = {-0.049983, 0.731607, 0, 1.0};
Point(36) = {-0.049897, 0.731423, 0, 1.0};
Point(37) = {-0.049747, 0.731234, 0, 1.0};
Point(38) = {-0.049428, 0.730943, 0, 1.0};
Point(39) = {-0.049008, 0.730646, 0, 1.0};
Point(40) = {-0.046937, 0.729691, 0, 1.0};
Point(41) = {-0.043838, 0.728836, 0, 1.0};
Point(42) = {-0.039735, 0.728136, 0, 1.0};
Point(43) = {-0.034648, 0.727601, 0, 1.0};
Point(44) = {-0.028612, 0.727235, 0, 1.0};
Point(45) = {-0.021675, 0.727027, 0, 1.0};
Point(46) = {-0.013900, 0.726962, 0, 1.0};
Point(47) = {-0.005366, 0.727015, 0, 1.0};
Point(48) = {0.003828, 0.727164, 0, 1.0};
Point(49) = {0.013572, 0.727391, 0, 1.0};
Point(50) = {0.023743, 0.727681, 0, 1.0};
Point(51) = {0.034221, 0.728029, 0, 1.0};
Point(52) = {0.044882, 0.728430, 0, 1.0};
Point(53) = {0.055604, 0.728875, 0, 1.0};
Point(54) = {0.066263, 0.729355, 0, 1.0};
Point(55) = {0.076736, 0.729865, 0, 1.0};
Point(56) = {0.086901, 0.730396, 0, 1.0};
Point(57) = {0.096640, 0.730942, 0, 1.0};
Point(58) = {0.105839, 0.731494, 0, 1.0};
Point(59) = {0.114392, 0.732049, 0, 1.0};
Point(60) = {0.122198, 0.732599, 0, 1.0};
Point(61) = {0.129164, 0.733142, 0, 1.0};
Point(62) = {0.135206, 0.733673, 0, 1.0};
Point(63) = {0.140249, 0.734207, 0, 1.0};
Point(64) = {0.144278, 0.734763, 0, 1.0};
Point(65) = {0.147315, 0.735269, 0, 1.0};
Point(66) = {0.149273, 0.735587, 0, 1.0};
Point(67) = {-0.149961, -0.735683, 0, 1.0};
Point(68) = {-0.149245, -0.735664, 0, 1.0};
Point(69) = {-0.147098, -0.735661, 0, 1.0};
Point(70) = {-0.143555, -0.735802, 0, 1.0};
Point(71) = {-0.138729, -0.736205, 0, 1.0};
Point(72) = {-0.132803, -0.736926, 0, 1.0};
Point(73) = {-0.125955, -0.737939, 0, 1.0};
Point(74) = {-0.118338, -0.739195, 0, 1.0};
Point(75) = {-0.110090, -0.740632, 0, 1.0};
Point(76) = {-0.101344, -0.742181, 0, 1.0};
Point(77) = {-0.092218, -0.743770, 0, 1.0};
Point(78) = {-0.082824, -0.745327, 0, 1.0};
Point(79) = {-0.073269, -0.746785, 0, 1.0};
Point(80) = {-0.063671, -0.748066, 0, 1.0};
Point(81) = {-0.054106, -0.749053, 0, 1.0};
Point(82) = {-0.044564, -0.749678, 0, 1.0};
Point(83) = {-0.035054, -0.749976, 0, 1.0};
Point(84) = {-0.025663, -0.750000, 0, 1.0};
Point(85) = {-0.016498, -0.749766, 0, 1.0};
Point(86) = {-0.007656, -0.749280, 0, 1.0};
Point(87) = {0.000777, -0.748543, 0, 1.0};
Point(88) = {0.008727, -0.747562, 0, 1.0};
Point(89) = {0.016128, -0.746353, 0, 1.0};
Point(90) = {0.022925, -0.744939, 0, 1.0};
Point(91) = {0.029062, -0.743355, 0, 1.0};
Point(92) = {0.034486, -0.741639, 0, 1.0};
Point(93) = {0.039153, -0.739831, 0, 1.0};
Point(94) = {0.043030, -0.737979, 0, 1.0};
Point(95) = {0.046084, -0.736144, 0, 1.0};
Point(96) = {0.048289, -0.734397, 0, 1.0};
Point(97) = {0.049608, -0.732835, 0, 1.0};
Point(98) = {0.049828, -0.732412, 0, 1.0};
Point(99) = {0.049962, -0.732033, 0, 1.0};
Point(100) = {0.049999, -0.731805, 0, 1.0};
Point(101) = {0.049983, -0.731607, 0, 1.0};
Point(102) = {0.049897, -0.731423, 0, 1.0};
Point(103) = {0.049747, -0.731234, 0, 1.0};
Point(104) = {0.049428, -0.730943, 0, 1.0};
Point(105) = {0.049008, -0.730646, 0, 1.0};
Point(106) = {0.046937, -0.729691, 0, 1.0};
Point(107) = {0.043838, -0.728836, 0, 1.0};
Point(108) = {0.039735, -0.728136, 0, 1.0};
Point(109) = {0.034648, -0.727601, 0, 1.0};
Point(110) = {0.028612, -0.727235, 0, 1.0};
Point(111) = {0.021675, -0.727027, 0, 1.0};
Point(112) = {0.013900, -0.726962, 0, 1.0};
Point(113) = {0.005366, -0.727015, 0, 1.0};
Point(114) = {-0.003828, -0.727164, 0, 1.0};
Point(115) = {-0.013572, -0.727391, 0, 1.0};
Point(116) = {-0.023743, -0.727681, 0, 1.0};
Point(117) = {-0.034221, -0.728029, 0, 1.0};
Point(118) = {-0.044882, -0.728430, 0, 1.0};
Point(119) = {-0.055604, -0.728875, 0, 1.0};
Point(120) = {-0.066263, -0.729355, 0, 1.0};
Point(121) = {-0.076736, -0.729865, 0, 1.0};
Point(122) = {-0.086901, -0.730396, 0, 1.0};
Point(123) = {-0.096640, -0.730942, 0, 1.0};
Point(124) = {-0.105839, -0.731494, 0, 1.0};
Point(125) = {-0.114392, -0.732049, 0, 1.0};
Point(126) = {-0.122198, -0.732599, 0, 1.0};
Point(127) = {-0.129164, -0.733142, 0, 1.0};
Point(128) = {-0.135206, -0.733673, 0, 1.0};
Point(129) = {-0.140249, -0.734207, 0, 1.0};
Point(130) = {-0.144278, -0.734763, 0, 1.0};
Point(131) = {-0.147315, -0.735269, 0, 1.0};
Point(132) = {-0.149273, -0.735587, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
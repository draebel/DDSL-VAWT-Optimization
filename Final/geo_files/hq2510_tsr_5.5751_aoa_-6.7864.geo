SetFactory("OpenCASCADE");

Point(1) = {0.111712, 0.747793, 0, 1.0};
Point(2) = {0.107913, 0.747983, 0, 1.0};
Point(3) = {0.104109, 0.748211, 0, 1.0};
Point(4) = {0.100306, 0.748438, 0, 1.0};
Point(5) = {0.096505, 0.748642, 0, 1.0};
Point(6) = {0.092704, 0.748846, 0, 1.0};
Point(7) = {0.088904, 0.749042, 0, 1.0};
Point(8) = {0.085105, 0.749235, 0, 1.0};
Point(9) = {0.081307, 0.749419, 0, 1.0};
Point(10) = {0.073718, 0.749719, 0, 1.0};
Point(11) = {0.066141, 0.749920, 0, 1.0};
Point(12) = {0.058579, 0.750000, 0, 1.0};
Point(13) = {0.051031, 0.749957, 0, 1.0};
Point(14) = {0.043502, 0.749757, 0, 1.0};
Point(15) = {0.035993, 0.749388, 0, 1.0};
Point(16) = {0.028505, 0.748843, 0, 1.0};
Point(17) = {0.021036, 0.748132, 0, 1.0};
Point(18) = {0.017309, 0.747717, 0, 1.0};
Point(19) = {0.013587, 0.747261, 0, 1.0};
Point(20) = {0.009871, 0.746757, 0, 1.0};
Point(21) = {0.006161, 0.746199, 0, 1.0};
Point(22) = {0.002456, 0.745593, 0, 1.0};
Point(23) = {-0.001243, 0.744942, 0, 1.0};
Point(24) = {-0.004936, 0.744244, 0, 1.0};
Point(25) = {-0.008622, 0.743482, 0, 1.0};
Point(26) = {-0.012298, 0.742638, 0, 1.0};
Point(27) = {-0.015963, 0.741700, 0, 1.0};
Point(28) = {-0.019614, 0.740651, 0, 1.0};
Point(29) = {-0.023248, 0.739454, 0, 1.0};
Point(30) = {-0.026860, 0.738068, 0, 1.0};
Point(31) = {-0.030437, 0.736390, 0, 1.0};
Point(32) = {-0.032206, 0.735393, 0, 1.0};
Point(33) = {-0.033954, 0.734213, 0, 1.0};
Point(34) = {-0.034817, 0.733529, 0, 1.0};
Point(35) = {-0.035666, 0.732732, 0, 1.0};
Point(36) = {-0.036167, 0.732181, 0, 1.0};
Point(37) = {-0.036656, 0.731534, 0, 1.0};
Point(38) = {-0.036970, 0.730992, 0, 1.0};
Point(39) = {-0.037237, 0.730067, 0, 1.0};
Point(40) = {-0.036800, 0.729567, 0, 1.0};
Point(41) = {-0.036396, 0.729349, 0, 1.0};
Point(42) = {-0.035802, 0.729111, 0, 1.0};
Point(43) = {-0.035214, 0.728934, 0, 1.0};
Point(44) = {-0.034245, 0.728726, 0, 1.0};
Point(45) = {-0.033287, 0.728606, 0, 1.0};
Point(46) = {-0.031383, 0.728474, 0, 1.0};
Point(47) = {-0.029490, 0.728437, 0, 1.0};
Point(48) = {-0.025721, 0.728498, 0, 1.0};
Point(49) = {-0.021964, 0.728664, 0, 1.0};
Point(50) = {-0.018215, 0.728890, 0, 1.0};
Point(51) = {-0.014471, 0.729165, 0, 1.0};
Point(52) = {-0.010733, 0.729484, 0, 1.0};
Point(53) = {-0.006998, 0.729840, 0, 1.0};
Point(54) = {-0.003267, 0.730222, 0, 1.0};
Point(55) = {0.000461, 0.730626, 0, 1.0};
Point(56) = {0.004188, 0.731044, 0, 1.0};
Point(57) = {0.007912, 0.731480, 0, 1.0};
Point(58) = {0.011635, 0.731935, 0, 1.0};
Point(59) = {0.015353, 0.732418, 0, 1.0};
Point(60) = {0.019068, 0.732936, 0, 1.0};
Point(61) = {0.022780, 0.733483, 0, 1.0};
Point(62) = {0.030194, 0.734651, 0, 1.0};
Point(63) = {0.037596, 0.735912, 0, 1.0};
Point(64) = {0.044989, 0.737260, 0, 1.0};
Point(65) = {0.052373, 0.738677, 0, 1.0};
Point(66) = {0.059754, 0.740128, 0, 1.0};
Point(67) = {0.067135, 0.741565, 0, 1.0};
Point(68) = {0.074523, 0.742955, 0, 1.0};
Point(69) = {0.081922, 0.744246, 0, 1.0};
Point(70) = {0.085628, 0.744838, 0, 1.0};
Point(71) = {0.089339, 0.745387, 0, 1.0};
Point(72) = {0.093057, 0.745878, 0, 1.0};
Point(73) = {0.096780, 0.746333, 0, 1.0};
Point(74) = {0.100509, 0.746731, 0, 1.0};
Point(75) = {0.104238, 0.747131, 0, 1.0};
Point(76) = {0.107972, 0.747484, 0, 1.0};
Point(77) = {-0.111712, -0.747793, 0, 1.0};
Point(78) = {-0.107913, -0.747983, 0, 1.0};
Point(79) = {-0.104109, -0.748211, 0, 1.0};
Point(80) = {-0.100306, -0.748438, 0, 1.0};
Point(81) = {-0.096505, -0.748642, 0, 1.0};
Point(82) = {-0.092704, -0.748846, 0, 1.0};
Point(83) = {-0.088904, -0.749042, 0, 1.0};
Point(84) = {-0.085105, -0.749235, 0, 1.0};
Point(85) = {-0.081307, -0.749419, 0, 1.0};
Point(86) = {-0.073718, -0.749719, 0, 1.0};
Point(87) = {-0.066141, -0.749920, 0, 1.0};
Point(88) = {-0.058579, -0.750000, 0, 1.0};
Point(89) = {-0.051031, -0.749957, 0, 1.0};
Point(90) = {-0.043502, -0.749757, 0, 1.0};
Point(91) = {-0.035993, -0.749388, 0, 1.0};
Point(92) = {-0.028505, -0.748843, 0, 1.0};
Point(93) = {-0.021036, -0.748132, 0, 1.0};
Point(94) = {-0.017309, -0.747717, 0, 1.0};
Point(95) = {-0.013587, -0.747261, 0, 1.0};
Point(96) = {-0.009871, -0.746757, 0, 1.0};
Point(97) = {-0.006161, -0.746199, 0, 1.0};
Point(98) = {-0.002456, -0.745593, 0, 1.0};
Point(99) = {0.001243, -0.744942, 0, 1.0};
Point(100) = {0.004936, -0.744244, 0, 1.0};
Point(101) = {0.008622, -0.743482, 0, 1.0};
Point(102) = {0.012298, -0.742638, 0, 1.0};
Point(103) = {0.015963, -0.741700, 0, 1.0};
Point(104) = {0.019614, -0.740651, 0, 1.0};
Point(105) = {0.023248, -0.739454, 0, 1.0};
Point(106) = {0.026860, -0.738068, 0, 1.0};
Point(107) = {0.030437, -0.736390, 0, 1.0};
Point(108) = {0.032206, -0.735393, 0, 1.0};
Point(109) = {0.033954, -0.734213, 0, 1.0};
Point(110) = {0.034817, -0.733529, 0, 1.0};
Point(111) = {0.035666, -0.732732, 0, 1.0};
Point(112) = {0.036167, -0.732181, 0, 1.0};
Point(113) = {0.036656, -0.731534, 0, 1.0};
Point(114) = {0.036970, -0.730992, 0, 1.0};
Point(115) = {0.037237, -0.730067, 0, 1.0};
Point(116) = {0.036800, -0.729567, 0, 1.0};
Point(117) = {0.036396, -0.729349, 0, 1.0};
Point(118) = {0.035802, -0.729111, 0, 1.0};
Point(119) = {0.035214, -0.728934, 0, 1.0};
Point(120) = {0.034245, -0.728726, 0, 1.0};
Point(121) = {0.033287, -0.728606, 0, 1.0};
Point(122) = {0.031383, -0.728474, 0, 1.0};
Point(123) = {0.029490, -0.728437, 0, 1.0};
Point(124) = {0.025721, -0.728498, 0, 1.0};
Point(125) = {0.021964, -0.728664, 0, 1.0};
Point(126) = {0.018215, -0.728890, 0, 1.0};
Point(127) = {0.014471, -0.729165, 0, 1.0};
Point(128) = {0.010733, -0.729484, 0, 1.0};
Point(129) = {0.006998, -0.729840, 0, 1.0};
Point(130) = {0.003267, -0.730222, 0, 1.0};
Point(131) = {-0.000461, -0.730626, 0, 1.0};
Point(132) = {-0.004188, -0.731044, 0, 1.0};
Point(133) = {-0.007912, -0.731480, 0, 1.0};
Point(134) = {-0.011635, -0.731935, 0, 1.0};
Point(135) = {-0.015353, -0.732418, 0, 1.0};
Point(136) = {-0.019068, -0.732936, 0, 1.0};
Point(137) = {-0.022780, -0.733483, 0, 1.0};
Point(138) = {-0.030194, -0.734651, 0, 1.0};
Point(139) = {-0.037596, -0.735912, 0, 1.0};
Point(140) = {-0.044989, -0.737260, 0, 1.0};
Point(141) = {-0.052373, -0.738677, 0, 1.0};
Point(142) = {-0.059754, -0.740128, 0, 1.0};
Point(143) = {-0.067135, -0.741565, 0, 1.0};
Point(144) = {-0.074523, -0.742955, 0, 1.0};
Point(145) = {-0.081922, -0.744246, 0, 1.0};
Point(146) = {-0.085628, -0.744838, 0, 1.0};
Point(147) = {-0.089339, -0.745387, 0, 1.0};
Point(148) = {-0.093057, -0.745878, 0, 1.0};
Point(149) = {-0.096780, -0.746333, 0, 1.0};
Point(150) = {-0.100509, -0.746731, 0, 1.0};
Point(151) = {-0.104238, -0.747131, 0, 1.0};
Point(152) = {-0.107972, -0.747484, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.148599, 0.747057, 0, 1.0};
Point(2) = {0.143533, 0.747310, 0, 1.0};
Point(3) = {0.138462, 0.747615, 0, 1.0};
Point(4) = {0.133390, 0.747918, 0, 1.0};
Point(5) = {0.128323, 0.748189, 0, 1.0};
Point(6) = {0.123255, 0.748462, 0, 1.0};
Point(7) = {0.118189, 0.748723, 0, 1.0};
Point(8) = {0.113123, 0.748980, 0, 1.0};
Point(9) = {0.108058, 0.749226, 0, 1.0};
Point(10) = {0.097940, 0.749625, 0, 1.0};
Point(11) = {0.087838, 0.749893, 0, 1.0};
Point(12) = {0.077755, 0.750000, 0, 1.0};
Point(13) = {0.067691, 0.749942, 0, 1.0};
Point(14) = {0.057652, 0.749676, 0, 1.0};
Point(15) = {0.047640, 0.749184, 0, 1.0};
Point(16) = {0.037656, 0.748457, 0, 1.0};
Point(17) = {0.027698, 0.747509, 0, 1.0};
Point(18) = {0.022729, 0.746956, 0, 1.0};
Point(19) = {0.017766, 0.746348, 0, 1.0};
Point(20) = {0.012811, 0.745675, 0, 1.0};
Point(21) = {0.007864, 0.744932, 0, 1.0};
Point(22) = {0.002925, 0.744124, 0, 1.0};
Point(23) = {-0.002007, 0.743255, 0, 1.0};
Point(24) = {-0.006932, 0.742325, 0, 1.0};
Point(25) = {-0.011846, 0.741309, 0, 1.0};
Point(26) = {-0.016748, 0.740184, 0, 1.0};
Point(27) = {-0.021634, 0.738934, 0, 1.0};
Point(28) = {-0.026503, 0.737535, 0, 1.0};
Point(29) = {-0.031348, 0.735939, 0, 1.0};
Point(30) = {-0.036164, 0.734091, 0, 1.0};
Point(31) = {-0.040933, 0.731854, 0, 1.0};
Point(32) = {-0.043292, 0.730524, 0, 1.0};
Point(33) = {-0.045623, 0.728951, 0, 1.0};
Point(34) = {-0.046773, 0.728039, 0, 1.0};
Point(35) = {-0.047905, 0.726976, 0, 1.0};
Point(36) = {-0.048573, 0.726242, 0, 1.0};
Point(37) = {-0.049226, 0.725379, 0, 1.0};
Point(38) = {-0.049643, 0.724656, 0, 1.0};
Point(39) = {-0.050000, 0.723423, 0, 1.0};
Point(40) = {-0.049417, 0.722756, 0, 1.0};
Point(41) = {-0.048879, 0.722465, 0, 1.0};
Point(42) = {-0.048086, 0.722149, 0, 1.0};
Point(43) = {-0.047302, 0.721911, 0, 1.0};
Point(44) = {-0.046011, 0.721634, 0, 1.0};
Point(45) = {-0.044733, 0.721474, 0, 1.0};
Point(46) = {-0.042194, 0.721299, 0, 1.0};
Point(47) = {-0.039671, 0.721249, 0, 1.0};
Point(48) = {-0.034645, 0.721331, 0, 1.0};
Point(49) = {-0.029636, 0.721553, 0, 1.0};
Point(50) = {-0.024637, 0.721853, 0, 1.0};
Point(51) = {-0.019645, 0.722220, 0, 1.0};
Point(52) = {-0.014661, 0.722646, 0, 1.0};
Point(53) = {-0.009682, 0.723120, 0, 1.0};
Point(54) = {-0.004707, 0.723629, 0, 1.0};
Point(55) = {0.000264, 0.724168, 0, 1.0};
Point(56) = {0.005233, 0.724725, 0, 1.0};
Point(57) = {0.010199, 0.725306, 0, 1.0};
Point(58) = {0.015162, 0.725913, 0, 1.0};
Point(59) = {0.020121, 0.726557, 0, 1.0};
Point(60) = {0.025074, 0.727247, 0, 1.0};
Point(61) = {0.030023, 0.727977, 0, 1.0};
Point(62) = {0.039908, 0.729534, 0, 1.0};
Point(63) = {0.049778, 0.731216, 0, 1.0};
Point(64) = {0.059635, 0.733014, 0, 1.0};
Point(65) = {0.069481, 0.734903, 0, 1.0};
Point(66) = {0.079321, 0.736837, 0, 1.0};
Point(67) = {0.089164, 0.738753, 0, 1.0};
Point(68) = {0.099014, 0.740606, 0, 1.0};
Point(69) = {0.108879, 0.742328, 0, 1.0};
Point(70) = {0.113821, 0.743118, 0, 1.0};
Point(71) = {0.118769, 0.743849, 0, 1.0};
Point(72) = {0.123726, 0.744504, 0, 1.0};
Point(73) = {0.128689, 0.745111, 0, 1.0};
Point(74) = {0.133661, 0.745642, 0, 1.0};
Point(75) = {0.138633, 0.746175, 0, 1.0};
Point(76) = {0.143612, 0.746645, 0, 1.0};
Point(77) = {-0.148599, -0.747057, 0, 1.0};
Point(78) = {-0.143533, -0.747310, 0, 1.0};
Point(79) = {-0.138462, -0.747615, 0, 1.0};
Point(80) = {-0.133390, -0.747918, 0, 1.0};
Point(81) = {-0.128323, -0.748189, 0, 1.0};
Point(82) = {-0.123255, -0.748462, 0, 1.0};
Point(83) = {-0.118189, -0.748723, 0, 1.0};
Point(84) = {-0.113123, -0.748980, 0, 1.0};
Point(85) = {-0.108058, -0.749226, 0, 1.0};
Point(86) = {-0.097940, -0.749625, 0, 1.0};
Point(87) = {-0.087838, -0.749893, 0, 1.0};
Point(88) = {-0.077755, -0.750000, 0, 1.0};
Point(89) = {-0.067691, -0.749942, 0, 1.0};
Point(90) = {-0.057652, -0.749676, 0, 1.0};
Point(91) = {-0.047640, -0.749184, 0, 1.0};
Point(92) = {-0.037656, -0.748457, 0, 1.0};
Point(93) = {-0.027698, -0.747509, 0, 1.0};
Point(94) = {-0.022729, -0.746956, 0, 1.0};
Point(95) = {-0.017766, -0.746348, 0, 1.0};
Point(96) = {-0.012811, -0.745675, 0, 1.0};
Point(97) = {-0.007864, -0.744932, 0, 1.0};
Point(98) = {-0.002925, -0.744124, 0, 1.0};
Point(99) = {0.002007, -0.743255, 0, 1.0};
Point(100) = {0.006932, -0.742325, 0, 1.0};
Point(101) = {0.011846, -0.741309, 0, 1.0};
Point(102) = {0.016748, -0.740184, 0, 1.0};
Point(103) = {0.021634, -0.738934, 0, 1.0};
Point(104) = {0.026503, -0.737535, 0, 1.0};
Point(105) = {0.031348, -0.735939, 0, 1.0};
Point(106) = {0.036164, -0.734091, 0, 1.0};
Point(107) = {0.040933, -0.731854, 0, 1.0};
Point(108) = {0.043292, -0.730524, 0, 1.0};
Point(109) = {0.045623, -0.728951, 0, 1.0};
Point(110) = {0.046773, -0.728039, 0, 1.0};
Point(111) = {0.047905, -0.726976, 0, 1.0};
Point(112) = {0.048573, -0.726242, 0, 1.0};
Point(113) = {0.049226, -0.725379, 0, 1.0};
Point(114) = {0.049643, -0.724656, 0, 1.0};
Point(115) = {0.050000, -0.723423, 0, 1.0};
Point(116) = {0.049417, -0.722756, 0, 1.0};
Point(117) = {0.048879, -0.722465, 0, 1.0};
Point(118) = {0.048086, -0.722149, 0, 1.0};
Point(119) = {0.047302, -0.721911, 0, 1.0};
Point(120) = {0.046011, -0.721634, 0, 1.0};
Point(121) = {0.044733, -0.721474, 0, 1.0};
Point(122) = {0.042194, -0.721299, 0, 1.0};
Point(123) = {0.039671, -0.721249, 0, 1.0};
Point(124) = {0.034645, -0.721331, 0, 1.0};
Point(125) = {0.029636, -0.721553, 0, 1.0};
Point(126) = {0.024637, -0.721853, 0, 1.0};
Point(127) = {0.019645, -0.722220, 0, 1.0};
Point(128) = {0.014661, -0.722646, 0, 1.0};
Point(129) = {0.009682, -0.723120, 0, 1.0};
Point(130) = {0.004707, -0.723629, 0, 1.0};
Point(131) = {-0.000264, -0.724168, 0, 1.0};
Point(132) = {-0.005233, -0.724725, 0, 1.0};
Point(133) = {-0.010199, -0.725306, 0, 1.0};
Point(134) = {-0.015162, -0.725913, 0, 1.0};
Point(135) = {-0.020121, -0.726557, 0, 1.0};
Point(136) = {-0.025074, -0.727247, 0, 1.0};
Point(137) = {-0.030023, -0.727977, 0, 1.0};
Point(138) = {-0.039908, -0.729534, 0, 1.0};
Point(139) = {-0.049778, -0.731216, 0, 1.0};
Point(140) = {-0.059635, -0.733014, 0, 1.0};
Point(141) = {-0.069481, -0.734903, 0, 1.0};
Point(142) = {-0.079321, -0.736837, 0, 1.0};
Point(143) = {-0.089164, -0.738753, 0, 1.0};
Point(144) = {-0.099014, -0.740606, 0, 1.0};
Point(145) = {-0.108879, -0.742328, 0, 1.0};
Point(146) = {-0.113821, -0.743118, 0, 1.0};
Point(147) = {-0.118769, -0.743849, 0, 1.0};
Point(148) = {-0.123726, -0.744504, 0, 1.0};
Point(149) = {-0.128689, -0.745111, 0, 1.0};
Point(150) = {-0.133661, -0.745642, 0, 1.0};
Point(151) = {-0.138633, -0.746175, 0, 1.0};
Point(152) = {-0.143612, -0.746645, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
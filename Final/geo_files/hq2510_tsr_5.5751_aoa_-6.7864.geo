SetFactory("OpenCASCADE");

Point(1) = {0.074299, 0.748528, 0, 1.0};
Point(2) = {0.071767, 0.748655, 0, 1.0};
Point(3) = {0.069231, 0.748807, 0, 1.0};
Point(4) = {0.066695, 0.748959, 0, 1.0};
Point(5) = {0.064161, 0.749094, 0, 1.0};
Point(6) = {0.061628, 0.749231, 0, 1.0};
Point(7) = {0.059094, 0.749362, 0, 1.0};
Point(8) = {0.056561, 0.749490, 0, 1.0};
Point(9) = {0.054029, 0.749613, 0, 1.0};
Point(10) = {0.048970, 0.749812, 0, 1.0};
Point(11) = {0.043919, 0.749946, 0, 1.0};
Point(12) = {0.038877, 0.750000, 0, 1.0};
Point(13) = {0.033845, 0.749971, 0, 1.0};
Point(14) = {0.028826, 0.749838, 0, 1.0};
Point(15) = {0.023820, 0.749592, 0, 1.0};
Point(16) = {0.018828, 0.749228, 0, 1.0};
Point(17) = {0.013849, 0.748755, 0, 1.0};
Point(18) = {0.011364, 0.748478, 0, 1.0};
Point(19) = {0.008883, 0.748174, 0, 1.0};
Point(20) = {0.006405, 0.747838, 0, 1.0};
Point(21) = {0.003932, 0.747466, 0, 1.0};
Point(22) = {0.001462, 0.747062, 0, 1.0};
Point(23) = {-0.001004, 0.746628, 0, 1.0};
Point(24) = {-0.003466, 0.746163, 0, 1.0};
Point(25) = {-0.005923, 0.745655, 0, 1.0};
Point(26) = {-0.008374, 0.745092, 0, 1.0};
Point(27) = {-0.010817, 0.744467, 0, 1.0};
Point(28) = {-0.013251, 0.743767, 0, 1.0};
Point(29) = {-0.015674, 0.742970, 0, 1.0};
Point(30) = {-0.018082, 0.742046, 0, 1.0};
Point(31) = {-0.020466, 0.740927, 0, 1.0};
Point(32) = {-0.021646, 0.740262, 0, 1.0};
Point(33) = {-0.022811, 0.739476, 0, 1.0};
Point(34) = {-0.023386, 0.739020, 0, 1.0};
Point(35) = {-0.023953, 0.738488, 0, 1.0};
Point(36) = {-0.024287, 0.738121, 0, 1.0};
Point(37) = {-0.024613, 0.737689, 0, 1.0};
Point(38) = {-0.024822, 0.737328, 0, 1.0};
Point(39) = {-0.025000, 0.736712, 0, 1.0};
Point(40) = {-0.024709, 0.736378, 0, 1.0};
Point(41) = {-0.024439, 0.736233, 0, 1.0};
Point(42) = {-0.024043, 0.736074, 0, 1.0};
Point(43) = {-0.023651, 0.735956, 0, 1.0};
Point(44) = {-0.023005, 0.735817, 0, 1.0};
Point(45) = {-0.022366, 0.735737, 0, 1.0};
Point(46) = {-0.021097, 0.735649, 0, 1.0};
Point(47) = {-0.019835, 0.735624, 0, 1.0};
Point(48) = {-0.017323, 0.735666, 0, 1.0};
Point(49) = {-0.014818, 0.735776, 0, 1.0};
Point(50) = {-0.012318, 0.735927, 0, 1.0};
Point(51) = {-0.009823, 0.736110, 0, 1.0};
Point(52) = {-0.007330, 0.736323, 0, 1.0};
Point(53) = {-0.004841, 0.736560, 0, 1.0};
Point(54) = {-0.002353, 0.736814, 0, 1.0};
Point(55) = {0.000132, 0.737084, 0, 1.0};
Point(56) = {0.002617, 0.737363, 0, 1.0};
Point(57) = {0.005100, 0.737653, 0, 1.0};
Point(58) = {0.007581, 0.737956, 0, 1.0};
Point(59) = {0.010060, 0.738279, 0, 1.0};
Point(60) = {0.012537, 0.738624, 0, 1.0};
Point(61) = {0.015011, 0.738989, 0, 1.0};
Point(62) = {0.019954, 0.739767, 0, 1.0};
Point(63) = {0.024889, 0.740608, 0, 1.0};
Point(64) = {0.029817, 0.741507, 0, 1.0};
Point(65) = {0.034740, 0.742451, 0, 1.0};
Point(66) = {0.039661, 0.743418, 0, 1.0};
Point(67) = {0.044582, 0.744377, 0, 1.0};
Point(68) = {0.049507, 0.745303, 0, 1.0};
Point(69) = {0.054440, 0.746164, 0, 1.0};
Point(70) = {0.056910, 0.746559, 0, 1.0};
Point(71) = {0.059384, 0.746925, 0, 1.0};
Point(72) = {0.061863, 0.747252, 0, 1.0};
Point(73) = {0.064345, 0.747555, 0, 1.0};
Point(74) = {0.066831, 0.747821, 0, 1.0};
Point(75) = {0.069317, 0.748088, 0, 1.0};
Point(76) = {0.071806, 0.748322, 0, 1.0};
Point(77) = {-0.074299, -0.748528, 0, 1.0};
Point(78) = {-0.071767, -0.748655, 0, 1.0};
Point(79) = {-0.069231, -0.748807, 0, 1.0};
Point(80) = {-0.066695, -0.748959, 0, 1.0};
Point(81) = {-0.064161, -0.749094, 0, 1.0};
Point(82) = {-0.061628, -0.749231, 0, 1.0};
Point(83) = {-0.059094, -0.749362, 0, 1.0};
Point(84) = {-0.056561, -0.749490, 0, 1.0};
Point(85) = {-0.054029, -0.749613, 0, 1.0};
Point(86) = {-0.048970, -0.749812, 0, 1.0};
Point(87) = {-0.043919, -0.749946, 0, 1.0};
Point(88) = {-0.038877, -0.750000, 0, 1.0};
Point(89) = {-0.033845, -0.749971, 0, 1.0};
Point(90) = {-0.028826, -0.749838, 0, 1.0};
Point(91) = {-0.023820, -0.749592, 0, 1.0};
Point(92) = {-0.018828, -0.749228, 0, 1.0};
Point(93) = {-0.013849, -0.748755, 0, 1.0};
Point(94) = {-0.011364, -0.748478, 0, 1.0};
Point(95) = {-0.008883, -0.748174, 0, 1.0};
Point(96) = {-0.006405, -0.747838, 0, 1.0};
Point(97) = {-0.003932, -0.747466, 0, 1.0};
Point(98) = {-0.001462, -0.747062, 0, 1.0};
Point(99) = {0.001004, -0.746628, 0, 1.0};
Point(100) = {0.003466, -0.746163, 0, 1.0};
Point(101) = {0.005923, -0.745655, 0, 1.0};
Point(102) = {0.008374, -0.745092, 0, 1.0};
Point(103) = {0.010817, -0.744467, 0, 1.0};
Point(104) = {0.013251, -0.743767, 0, 1.0};
Point(105) = {0.015674, -0.742970, 0, 1.0};
Point(106) = {0.018082, -0.742046, 0, 1.0};
Point(107) = {0.020466, -0.740927, 0, 1.0};
Point(108) = {0.021646, -0.740262, 0, 1.0};
Point(109) = {0.022811, -0.739476, 0, 1.0};
Point(110) = {0.023386, -0.739020, 0, 1.0};
Point(111) = {0.023953, -0.738488, 0, 1.0};
Point(112) = {0.024287, -0.738121, 0, 1.0};
Point(113) = {0.024613, -0.737689, 0, 1.0};
Point(114) = {0.024822, -0.737328, 0, 1.0};
Point(115) = {0.025000, -0.736712, 0, 1.0};
Point(116) = {0.024709, -0.736378, 0, 1.0};
Point(117) = {0.024439, -0.736233, 0, 1.0};
Point(118) = {0.024043, -0.736074, 0, 1.0};
Point(119) = {0.023651, -0.735956, 0, 1.0};
Point(120) = {0.023005, -0.735817, 0, 1.0};
Point(121) = {0.022366, -0.735737, 0, 1.0};
Point(122) = {0.021097, -0.735649, 0, 1.0};
Point(123) = {0.019835, -0.735624, 0, 1.0};
Point(124) = {0.017323, -0.735666, 0, 1.0};
Point(125) = {0.014818, -0.735776, 0, 1.0};
Point(126) = {0.012318, -0.735927, 0, 1.0};
Point(127) = {0.009823, -0.736110, 0, 1.0};
Point(128) = {0.007330, -0.736323, 0, 1.0};
Point(129) = {0.004841, -0.736560, 0, 1.0};
Point(130) = {0.002353, -0.736814, 0, 1.0};
Point(131) = {-0.000132, -0.737084, 0, 1.0};
Point(132) = {-0.002617, -0.737363, 0, 1.0};
Point(133) = {-0.005100, -0.737653, 0, 1.0};
Point(134) = {-0.007581, -0.737956, 0, 1.0};
Point(135) = {-0.010060, -0.738279, 0, 1.0};
Point(136) = {-0.012537, -0.738624, 0, 1.0};
Point(137) = {-0.015011, -0.738989, 0, 1.0};
Point(138) = {-0.019954, -0.739767, 0, 1.0};
Point(139) = {-0.024889, -0.740608, 0, 1.0};
Point(140) = {-0.029817, -0.741507, 0, 1.0};
Point(141) = {-0.034740, -0.742451, 0, 1.0};
Point(142) = {-0.039661, -0.743418, 0, 1.0};
Point(143) = {-0.044582, -0.744377, 0, 1.0};
Point(144) = {-0.049507, -0.745303, 0, 1.0};
Point(145) = {-0.054440, -0.746164, 0, 1.0};
Point(146) = {-0.056910, -0.746559, 0, 1.0};
Point(147) = {-0.059384, -0.746925, 0, 1.0};
Point(148) = {-0.061863, -0.747252, 0, 1.0};
Point(149) = {-0.064345, -0.747555, 0, 1.0};
Point(150) = {-0.066831, -0.747821, 0, 1.0};
Point(151) = {-0.069317, -0.748088, 0, 1.0};
Point(152) = {-0.071806, -0.748322, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
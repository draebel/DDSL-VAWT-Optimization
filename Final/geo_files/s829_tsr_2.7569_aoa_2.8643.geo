SetFactory("OpenCASCADE");

Point(1) = {0.074947, 0.732915, 0, 1.0};
Point(2) = {0.071361, 0.733854, 0, 1.0};
Point(3) = {0.066809, 0.735170, 0, 1.0};
Point(4) = {0.061639, 0.736736, 0, 1.0};
Point(5) = {0.055943, 0.738495, 0, 1.0};
Point(6) = {0.049841, 0.740392, 0, 1.0};
Point(7) = {0.043448, 0.742332, 0, 1.0};
Point(8) = {0.036852, 0.744198, 0, 1.0};
Point(9) = {0.030094, 0.745869, 0, 1.0};
Point(10) = {0.023176, 0.747252, 0, 1.0};
Point(11) = {0.016064, 0.748289, 0, 1.0};
Point(12) = {0.008725, 0.749036, 0, 1.0};
Point(13) = {0.001236, 0.749556, 0, 1.0};
Point(14) = {-0.006316, 0.749873, 0, 1.0};
Point(15) = {-0.013843, 0.750000, 0, 1.0};
Point(16) = {-0.021259, 0.749951, 0, 1.0};
Point(17) = {-0.028481, 0.749736, 0, 1.0};
Point(18) = {-0.035424, 0.749366, 0, 1.0};
Point(19) = {-0.042009, 0.748852, 0, 1.0};
Point(20) = {-0.048161, 0.748204, 0, 1.0};
Point(21) = {-0.053810, 0.747433, 0, 1.0};
Point(22) = {-0.058891, 0.746553, 0, 1.0};
Point(23) = {-0.063347, 0.745577, 0, 1.0};
Point(24) = {-0.067130, 0.744519, 0, 1.0};
Point(25) = {-0.070190, 0.743392, 0, 1.0};
Point(26) = {-0.072518, 0.742218, 0, 1.0};
Point(27) = {-0.074071, 0.741041, 0, 1.0};
Point(28) = {-0.074778, 0.740089, 0, 1.0};
Point(29) = {-0.074847, 0.739920, 0, 1.0};
Point(30) = {-0.074875, 0.739830, 0, 1.0};
Point(31) = {-0.074906, 0.739593, 0, 1.0};
Point(32) = {-0.074849, 0.739357, 0, 1.0};
Point(33) = {-0.074722, 0.739101, 0, 1.0};
Point(34) = {-0.074610, 0.738928, 0, 1.0};
Point(35) = {-0.073429, 0.737762, 0, 1.0};
Point(36) = {-0.071456, 0.736532, 0, 1.0};
Point(37) = {-0.068691, 0.735278, 0, 1.0};
Point(38) = {-0.065177, 0.734027, 0, 1.0};
Point(39) = {-0.060936, 0.732797, 0, 1.0};
Point(40) = {-0.056021, 0.731598, 0, 1.0};
Point(41) = {-0.050484, 0.730445, 0, 1.0};
Point(42) = {-0.044389, 0.729350, 0, 1.0};
Point(43) = {-0.037806, 0.728325, 0, 1.0};
Point(44) = {-0.030810, 0.727381, 0, 1.0};
Point(45) = {-0.023482, 0.726533, 0, 1.0};
Point(46) = {-0.015905, 0.725792, 0, 1.0};
Point(47) = {-0.008170, 0.725173, 0, 1.0};
Point(48) = {-0.000363, 0.724689, 0, 1.0};
Point(49) = {0.007427, 0.724357, 0, 1.0};
Point(50) = {0.015111, 0.724193, 0, 1.0};
Point(51) = {0.022601, 0.724221, 0, 1.0};
Point(52) = {0.029828, 0.724490, 0, 1.0};
Point(53) = {0.036780, 0.725029, 0, 1.0};
Point(54) = {0.043452, 0.725816, 0, 1.0};
Point(55) = {0.049833, 0.726794, 0, 1.0};
Point(56) = {0.055886, 0.727878, 0, 1.0};
Point(57) = {0.061550, 0.728970, 0, 1.0};
Point(58) = {0.066725, 0.729978, 0, 1.0};
Point(59) = {0.071303, 0.730822, 0, 1.0};
Point(60) = {0.074871, 0.731391, 0, 1.0};
Point(61) = {-0.074947, -0.732915, 0, 1.0};
Point(62) = {-0.071361, -0.733854, 0, 1.0};
Point(63) = {-0.066809, -0.735170, 0, 1.0};
Point(64) = {-0.061639, -0.736736, 0, 1.0};
Point(65) = {-0.055943, -0.738495, 0, 1.0};
Point(66) = {-0.049841, -0.740392, 0, 1.0};
Point(67) = {-0.043448, -0.742332, 0, 1.0};
Point(68) = {-0.036852, -0.744198, 0, 1.0};
Point(69) = {-0.030094, -0.745869, 0, 1.0};
Point(70) = {-0.023176, -0.747252, 0, 1.0};
Point(71) = {-0.016064, -0.748289, 0, 1.0};
Point(72) = {-0.008725, -0.749036, 0, 1.0};
Point(73) = {-0.001236, -0.749556, 0, 1.0};
Point(74) = {0.006316, -0.749873, 0, 1.0};
Point(75) = {0.013843, -0.750000, 0, 1.0};
Point(76) = {0.021259, -0.749951, 0, 1.0};
Point(77) = {0.028481, -0.749736, 0, 1.0};
Point(78) = {0.035424, -0.749366, 0, 1.0};
Point(79) = {0.042009, -0.748852, 0, 1.0};
Point(80) = {0.048161, -0.748204, 0, 1.0};
Point(81) = {0.053810, -0.747433, 0, 1.0};
Point(82) = {0.058891, -0.746553, 0, 1.0};
Point(83) = {0.063347, -0.745577, 0, 1.0};
Point(84) = {0.067130, -0.744519, 0, 1.0};
Point(85) = {0.070190, -0.743392, 0, 1.0};
Point(86) = {0.072518, -0.742218, 0, 1.0};
Point(87) = {0.074071, -0.741041, 0, 1.0};
Point(88) = {0.074778, -0.740089, 0, 1.0};
Point(89) = {0.074847, -0.739920, 0, 1.0};
Point(90) = {0.074875, -0.739830, 0, 1.0};
Point(91) = {0.074906, -0.739593, 0, 1.0};
Point(92) = {0.074849, -0.739357, 0, 1.0};
Point(93) = {0.074722, -0.739101, 0, 1.0};
Point(94) = {0.074610, -0.738928, 0, 1.0};
Point(95) = {0.073429, -0.737762, 0, 1.0};
Point(96) = {0.071456, -0.736532, 0, 1.0};
Point(97) = {0.068691, -0.735278, 0, 1.0};
Point(98) = {0.065177, -0.734027, 0, 1.0};
Point(99) = {0.060936, -0.732797, 0, 1.0};
Point(100) = {0.056021, -0.731598, 0, 1.0};
Point(101) = {0.050484, -0.730445, 0, 1.0};
Point(102) = {0.044389, -0.729350, 0, 1.0};
Point(103) = {0.037806, -0.728325, 0, 1.0};
Point(104) = {0.030810, -0.727381, 0, 1.0};
Point(105) = {0.023482, -0.726533, 0, 1.0};
Point(106) = {0.015905, -0.725792, 0, 1.0};
Point(107) = {0.008170, -0.725173, 0, 1.0};
Point(108) = {0.000363, -0.724689, 0, 1.0};
Point(109) = {-0.007427, -0.724357, 0, 1.0};
Point(110) = {-0.015111, -0.724193, 0, 1.0};
Point(111) = {-0.022601, -0.724221, 0, 1.0};
Point(112) = {-0.029828, -0.724490, 0, 1.0};
Point(113) = {-0.036780, -0.725029, 0, 1.0};
Point(114) = {-0.043452, -0.725816, 0, 1.0};
Point(115) = {-0.049833, -0.726794, 0, 1.0};
Point(116) = {-0.055886, -0.727878, 0, 1.0};
Point(117) = {-0.061550, -0.728970, 0, 1.0};
Point(118) = {-0.066725, -0.729978, 0, 1.0};
Point(119) = {-0.071303, -0.730822, 0, 1.0};
Point(120) = {-0.074871, -0.731391, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {36.00000000, 15.00000000, 0, 1.0};
Point(124) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074791, 0.737357, 0, 1.0};
Point(2) = {0.074460, 0.737391, 0, 1.0};
Point(3) = {0.073512, 0.737537, 0, 1.0};
Point(4) = {0.072017, 0.737821, 0, 1.0};
Point(5) = {0.069996, 0.738202, 0, 1.0};
Point(6) = {0.067456, 0.738677, 0, 1.0};
Point(7) = {0.064434, 0.739252, 0, 1.0};
Point(8) = {0.060972, 0.739919, 0, 1.0};
Point(9) = {0.057117, 0.740671, 0, 1.0};
Point(10) = {0.052922, 0.741494, 0, 1.0};
Point(11) = {0.048440, 0.742374, 0, 1.0};
Point(12) = {0.043730, 0.743296, 0, 1.0};
Point(13) = {0.038850, 0.744241, 0, 1.0};
Point(14) = {0.033861, 0.745188, 0, 1.0};
Point(15) = {0.028824, 0.746114, 0, 1.0};
Point(16) = {0.023799, 0.746992, 0, 1.0};
Point(17) = {0.018834, 0.747786, 0, 1.0};
Point(18) = {0.013967, 0.748475, 0, 1.0};
Point(19) = {0.009239, 0.749050, 0, 1.0};
Point(20) = {0.004693, 0.749499, 0, 1.0};
Point(21) = {0.000370, 0.749811, 0, 1.0};
Point(22) = {-0.003695, 0.749979, 0, 1.0};
Point(23) = {-0.007470, 0.750000, 0, 1.0};
Point(24) = {-0.010926, 0.749873, 0, 1.0};
Point(25) = {-0.014039, 0.749602, 0, 1.0};
Point(26) = {-0.016789, 0.749195, 0, 1.0};
Point(27) = {-0.019158, 0.748664, 0, 1.0};
Point(28) = {-0.021137, 0.748026, 0, 1.0};
Point(29) = {-0.022715, 0.747305, 0, 1.0};
Point(30) = {-0.023889, 0.746531, 0, 1.0};
Point(31) = {-0.024653, 0.745747, 0, 1.0};
Point(32) = {-0.025004, 0.745023, 0, 1.0};
Point(33) = {-0.024813, 0.744412, 0, 1.0};
Point(34) = {-0.024023, 0.743844, 0, 1.0};
Point(35) = {-0.022707, 0.743287, 0, 1.0};
Point(36) = {-0.020868, 0.742763, 0, 1.0};
Point(37) = {-0.018515, 0.742273, 0, 1.0};
Point(38) = {-0.015661, 0.741814, 0, 1.0};
Point(39) = {-0.012333, 0.741379, 0, 1.0};
Point(40) = {-0.008563, 0.740962, 0, 1.0};
Point(41) = {-0.004391, 0.740555, 0, 1.0};
Point(42) = {0.000134, 0.740151, 0, 1.0};
Point(43) = {0.004961, 0.739745, 0, 1.0};
Point(44) = {0.010032, 0.739332, 0, 1.0};
Point(45) = {0.015284, 0.738908, 0, 1.0};
Point(46) = {0.020651, 0.738474, 0, 1.0};
Point(47) = {0.026068, 0.738032, 0, 1.0};
Point(48) = {0.031468, 0.737585, 0, 1.0};
Point(49) = {0.036788, 0.737138, 0, 1.0};
Point(50) = {0.041965, 0.736696, 0, 1.0};
Point(51) = {0.046936, 0.736261, 0, 1.0};
Point(52) = {0.051643, 0.735840, 0, 1.0};
Point(53) = {0.056029, 0.735436, 0, 1.0};
Point(54) = {0.060042, 0.735056, 0, 1.0};
Point(55) = {0.063634, 0.734704, 0, 1.0};
Point(56) = {0.066759, 0.734386, 0, 1.0};
Point(57) = {0.069377, 0.734110, 0, 1.0};
Point(58) = {0.071459, 0.733886, 0, 1.0};
Point(59) = {0.072993, 0.733717, 0, 1.0};
Point(60) = {0.073950, 0.733575, 0, 1.0};
Point(61) = {0.074278, 0.733510, 0, 1.0};
Point(62) = {-0.074791, -0.737357, 0, 1.0};
Point(63) = {-0.074460, -0.737391, 0, 1.0};
Point(64) = {-0.073512, -0.737537, 0, 1.0};
Point(65) = {-0.072017, -0.737821, 0, 1.0};
Point(66) = {-0.069996, -0.738202, 0, 1.0};
Point(67) = {-0.067456, -0.738677, 0, 1.0};
Point(68) = {-0.064434, -0.739252, 0, 1.0};
Point(69) = {-0.060972, -0.739919, 0, 1.0};
Point(70) = {-0.057117, -0.740671, 0, 1.0};
Point(71) = {-0.052922, -0.741494, 0, 1.0};
Point(72) = {-0.048440, -0.742374, 0, 1.0};
Point(73) = {-0.043730, -0.743296, 0, 1.0};
Point(74) = {-0.038850, -0.744241, 0, 1.0};
Point(75) = {-0.033861, -0.745188, 0, 1.0};
Point(76) = {-0.028824, -0.746114, 0, 1.0};
Point(77) = {-0.023799, -0.746992, 0, 1.0};
Point(78) = {-0.018834, -0.747786, 0, 1.0};
Point(79) = {-0.013967, -0.748475, 0, 1.0};
Point(80) = {-0.009239, -0.749050, 0, 1.0};
Point(81) = {-0.004693, -0.749499, 0, 1.0};
Point(82) = {-0.000370, -0.749811, 0, 1.0};
Point(83) = {0.003695, -0.749979, 0, 1.0};
Point(84) = {0.007470, -0.750000, 0, 1.0};
Point(85) = {0.010926, -0.749873, 0, 1.0};
Point(86) = {0.014039, -0.749602, 0, 1.0};
Point(87) = {0.016789, -0.749195, 0, 1.0};
Point(88) = {0.019158, -0.748664, 0, 1.0};
Point(89) = {0.021137, -0.748026, 0, 1.0};
Point(90) = {0.022715, -0.747305, 0, 1.0};
Point(91) = {0.023889, -0.746531, 0, 1.0};
Point(92) = {0.024653, -0.745747, 0, 1.0};
Point(93) = {0.025004, -0.745023, 0, 1.0};
Point(94) = {0.024813, -0.744412, 0, 1.0};
Point(95) = {0.024023, -0.743844, 0, 1.0};
Point(96) = {0.022707, -0.743287, 0, 1.0};
Point(97) = {0.020868, -0.742763, 0, 1.0};
Point(98) = {0.018515, -0.742273, 0, 1.0};
Point(99) = {0.015661, -0.741814, 0, 1.0};
Point(100) = {0.012333, -0.741379, 0, 1.0};
Point(101) = {0.008563, -0.740962, 0, 1.0};
Point(102) = {0.004391, -0.740555, 0, 1.0};
Point(103) = {-0.000134, -0.740151, 0, 1.0};
Point(104) = {-0.004961, -0.739745, 0, 1.0};
Point(105) = {-0.010032, -0.739332, 0, 1.0};
Point(106) = {-0.015284, -0.738908, 0, 1.0};
Point(107) = {-0.020651, -0.738474, 0, 1.0};
Point(108) = {-0.026068, -0.738032, 0, 1.0};
Point(109) = {-0.031468, -0.737585, 0, 1.0};
Point(110) = {-0.036788, -0.737138, 0, 1.0};
Point(111) = {-0.041965, -0.736696, 0, 1.0};
Point(112) = {-0.046936, -0.736261, 0, 1.0};
Point(113) = {-0.051643, -0.735840, 0, 1.0};
Point(114) = {-0.056029, -0.735436, 0, 1.0};
Point(115) = {-0.060042, -0.735056, 0, 1.0};
Point(116) = {-0.063634, -0.734704, 0, 1.0};
Point(117) = {-0.066759, -0.734386, 0, 1.0};
Point(118) = {-0.069377, -0.734110, 0, 1.0};
Point(119) = {-0.071459, -0.733886, 0, 1.0};
Point(120) = {-0.072993, -0.733717, 0, 1.0};
Point(121) = {-0.073950, -0.733575, 0, 1.0};
Point(122) = {-0.074278, -0.733510, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
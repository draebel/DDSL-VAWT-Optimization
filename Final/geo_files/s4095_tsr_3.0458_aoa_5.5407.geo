SetFactory("OpenCASCADE");

Point(1) = {0.149582, 0.724714, 0, 1.0};
Point(2) = {0.148920, 0.724782, 0, 1.0};
Point(3) = {0.147024, 0.725074, 0, 1.0};
Point(4) = {0.144035, 0.725641, 0, 1.0};
Point(5) = {0.139992, 0.726403, 0, 1.0};
Point(6) = {0.134913, 0.727355, 0, 1.0};
Point(7) = {0.128868, 0.728504, 0, 1.0};
Point(8) = {0.121943, 0.729839, 0, 1.0};
Point(9) = {0.114234, 0.731341, 0, 1.0};
Point(10) = {0.105844, 0.732987, 0, 1.0};
Point(11) = {0.096881, 0.734749, 0, 1.0};
Point(12) = {0.087460, 0.736593, 0, 1.0};
Point(13) = {0.077700, 0.738482, 0, 1.0};
Point(14) = {0.067722, 0.740376, 0, 1.0};
Point(15) = {0.057647, 0.742228, 0, 1.0};
Point(16) = {0.047597, 0.743984, 0, 1.0};
Point(17) = {0.037668, 0.745571, 0, 1.0};
Point(18) = {0.027933, 0.746951, 0, 1.0};
Point(19) = {0.018477, 0.748101, 0, 1.0};
Point(20) = {0.009386, 0.748998, 0, 1.0};
Point(21) = {0.000740, 0.749622, 0, 1.0};
Point(22) = {-0.007391, 0.749959, 0, 1.0};
Point(23) = {-0.014940, 0.750000, 0, 1.0};
Point(24) = {-0.021853, 0.749747, 0, 1.0};
Point(25) = {-0.028078, 0.749204, 0, 1.0};
Point(26) = {-0.033577, 0.748390, 0, 1.0};
Point(27) = {-0.038317, 0.747327, 0, 1.0};
Point(28) = {-0.042274, 0.746052, 0, 1.0};
Point(29) = {-0.045430, 0.744609, 0, 1.0};
Point(30) = {-0.047778, 0.743062, 0, 1.0};
Point(31) = {-0.049305, 0.741494, 0, 1.0};
Point(32) = {-0.050007, 0.740047, 0, 1.0};
Point(33) = {-0.049627, 0.738824, 0, 1.0};
Point(34) = {-0.048046, 0.737688, 0, 1.0};
Point(35) = {-0.045415, 0.736573, 0, 1.0};
Point(36) = {-0.041737, 0.735525, 0, 1.0};
Point(37) = {-0.037029, 0.734545, 0, 1.0};
Point(38) = {-0.031322, 0.733628, 0, 1.0};
Point(39) = {-0.024667, 0.732758, 0, 1.0};
Point(40) = {-0.017127, 0.731925, 0, 1.0};
Point(41) = {-0.008783, 0.731110, 0, 1.0};
Point(42) = {0.000268, 0.730302, 0, 1.0};
Point(43) = {0.009922, 0.729489, 0, 1.0};
Point(44) = {0.020064, 0.728663, 0, 1.0};
Point(45) = {0.030568, 0.727815, 0, 1.0};
Point(46) = {0.041302, 0.726947, 0, 1.0};
Point(47) = {0.052135, 0.726063, 0, 1.0};
Point(48) = {0.062937, 0.725171, 0, 1.0};
Point(49) = {0.073577, 0.724277, 0, 1.0};
Point(50) = {0.083930, 0.723391, 0, 1.0};
Point(51) = {0.093872, 0.722522, 0, 1.0};
Point(52) = {0.103285, 0.721679, 0, 1.0};
Point(53) = {0.112058, 0.720872, 0, 1.0};
Point(54) = {0.120085, 0.720112, 0, 1.0};
Point(55) = {0.127268, 0.719408, 0, 1.0};
Point(56) = {0.133517, 0.718773, 0, 1.0};
Point(57) = {0.138755, 0.718219, 0, 1.0};
Point(58) = {0.142918, 0.717772, 0, 1.0};
Point(59) = {0.145986, 0.717433, 0, 1.0};
Point(60) = {0.147901, 0.717150, 0, 1.0};
Point(61) = {0.148556, 0.717020, 0, 1.0};
Point(62) = {-0.149582, -0.724714, 0, 1.0};
Point(63) = {-0.148920, -0.724782, 0, 1.0};
Point(64) = {-0.147024, -0.725074, 0, 1.0};
Point(65) = {-0.144035, -0.725641, 0, 1.0};
Point(66) = {-0.139992, -0.726403, 0, 1.0};
Point(67) = {-0.134913, -0.727355, 0, 1.0};
Point(68) = {-0.128868, -0.728504, 0, 1.0};
Point(69) = {-0.121943, -0.729839, 0, 1.0};
Point(70) = {-0.114234, -0.731341, 0, 1.0};
Point(71) = {-0.105844, -0.732987, 0, 1.0};
Point(72) = {-0.096881, -0.734749, 0, 1.0};
Point(73) = {-0.087460, -0.736593, 0, 1.0};
Point(74) = {-0.077700, -0.738482, 0, 1.0};
Point(75) = {-0.067722, -0.740376, 0, 1.0};
Point(76) = {-0.057647, -0.742228, 0, 1.0};
Point(77) = {-0.047597, -0.743984, 0, 1.0};
Point(78) = {-0.037668, -0.745571, 0, 1.0};
Point(79) = {-0.027933, -0.746951, 0, 1.0};
Point(80) = {-0.018477, -0.748101, 0, 1.0};
Point(81) = {-0.009386, -0.748998, 0, 1.0};
Point(82) = {-0.000740, -0.749622, 0, 1.0};
Point(83) = {0.007391, -0.749959, 0, 1.0};
Point(84) = {0.014940, -0.750000, 0, 1.0};
Point(85) = {0.021853, -0.749747, 0, 1.0};
Point(86) = {0.028078, -0.749204, 0, 1.0};
Point(87) = {0.033577, -0.748390, 0, 1.0};
Point(88) = {0.038317, -0.747327, 0, 1.0};
Point(89) = {0.042274, -0.746052, 0, 1.0};
Point(90) = {0.045430, -0.744609, 0, 1.0};
Point(91) = {0.047778, -0.743062, 0, 1.0};
Point(92) = {0.049305, -0.741494, 0, 1.0};
Point(93) = {0.050007, -0.740047, 0, 1.0};
Point(94) = {0.049627, -0.738824, 0, 1.0};
Point(95) = {0.048046, -0.737688, 0, 1.0};
Point(96) = {0.045415, -0.736573, 0, 1.0};
Point(97) = {0.041737, -0.735525, 0, 1.0};
Point(98) = {0.037029, -0.734545, 0, 1.0};
Point(99) = {0.031322, -0.733628, 0, 1.0};
Point(100) = {0.024667, -0.732758, 0, 1.0};
Point(101) = {0.017127, -0.731925, 0, 1.0};
Point(102) = {0.008783, -0.731110, 0, 1.0};
Point(103) = {-0.000268, -0.730302, 0, 1.0};
Point(104) = {-0.009922, -0.729489, 0, 1.0};
Point(105) = {-0.020064, -0.728663, 0, 1.0};
Point(106) = {-0.030568, -0.727815, 0, 1.0};
Point(107) = {-0.041302, -0.726947, 0, 1.0};
Point(108) = {-0.052135, -0.726063, 0, 1.0};
Point(109) = {-0.062937, -0.725171, 0, 1.0};
Point(110) = {-0.073577, -0.724277, 0, 1.0};
Point(111) = {-0.083930, -0.723391, 0, 1.0};
Point(112) = {-0.093872, -0.722522, 0, 1.0};
Point(113) = {-0.103285, -0.721679, 0, 1.0};
Point(114) = {-0.112058, -0.720872, 0, 1.0};
Point(115) = {-0.120085, -0.720112, 0, 1.0};
Point(116) = {-0.127268, -0.719408, 0, 1.0};
Point(117) = {-0.133517, -0.718773, 0, 1.0};
Point(118) = {-0.138755, -0.718219, 0, 1.0};
Point(119) = {-0.142918, -0.717772, 0, 1.0};
Point(120) = {-0.145986, -0.717433, 0, 1.0};
Point(121) = {-0.147901, -0.717150, 0, 1.0};
Point(122) = {-0.148556, -0.717020, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
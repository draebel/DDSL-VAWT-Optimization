SetFactory("OpenCASCADE");

Point(1) = {0.112187, 0.731036, 0, 1.0};
Point(2) = {0.111690, 0.731087, 0, 1.0};
Point(3) = {0.110268, 0.731306, 0, 1.0};
Point(4) = {0.108026, 0.731731, 0, 1.0};
Point(5) = {0.104994, 0.732302, 0, 1.0};
Point(6) = {0.101185, 0.733016, 0, 1.0};
Point(7) = {0.096651, 0.733878, 0, 1.0};
Point(8) = {0.091457, 0.734879, 0, 1.0};
Point(9) = {0.085676, 0.736006, 0, 1.0};
Point(10) = {0.079383, 0.737240, 0, 1.0};
Point(11) = {0.072660, 0.738562, 0, 1.0};
Point(12) = {0.065595, 0.739944, 0, 1.0};
Point(13) = {0.058275, 0.741362, 0, 1.0};
Point(14) = {0.050792, 0.742782, 0, 1.0};
Point(15) = {0.043236, 0.744171, 0, 1.0};
Point(16) = {0.035698, 0.745488, 0, 1.0};
Point(17) = {0.028251, 0.746679, 0, 1.0};
Point(18) = {0.020950, 0.747713, 0, 1.0};
Point(19) = {0.013858, 0.748576, 0, 1.0};
Point(20) = {0.007040, 0.749249, 0, 1.0};
Point(21) = {0.000555, 0.749716, 0, 1.0};
Point(22) = {-0.005543, 0.749969, 0, 1.0};
Point(23) = {-0.011205, 0.750000, 0, 1.0};
Point(24) = {-0.016390, 0.749810, 0, 1.0};
Point(25) = {-0.021059, 0.749403, 0, 1.0};
Point(26) = {-0.025183, 0.748793, 0, 1.0};
Point(27) = {-0.028737, 0.747995, 0, 1.0};
Point(28) = {-0.031705, 0.747039, 0, 1.0};
Point(29) = {-0.034073, 0.745957, 0, 1.0};
Point(30) = {-0.035834, 0.744796, 0, 1.0};
Point(31) = {-0.036979, 0.743620, 0, 1.0};
Point(32) = {-0.037505, 0.742535, 0, 1.0};
Point(33) = {-0.037220, 0.741618, 0, 1.0};
Point(34) = {-0.036034, 0.740766, 0, 1.0};
Point(35) = {-0.034061, 0.739930, 0, 1.0};
Point(36) = {-0.031302, 0.739144, 0, 1.0};
Point(37) = {-0.027772, 0.738409, 0, 1.0};
Point(38) = {-0.023492, 0.737721, 0, 1.0};
Point(39) = {-0.018500, 0.737068, 0, 1.0};
Point(40) = {-0.012845, 0.736443, 0, 1.0};
Point(41) = {-0.006587, 0.735833, 0, 1.0};
Point(42) = {0.000201, 0.735226, 0, 1.0};
Point(43) = {0.007441, 0.734617, 0, 1.0};
Point(44) = {0.015048, 0.733997, 0, 1.0};
Point(45) = {0.022926, 0.733362, 0, 1.0};
Point(46) = {0.030977, 0.732711, 0, 1.0};
Point(47) = {0.039101, 0.732048, 0, 1.0};
Point(48) = {0.047203, 0.731378, 0, 1.0};
Point(49) = {0.055183, 0.730708, 0, 1.0};
Point(50) = {0.062947, 0.730043, 0, 1.0};
Point(51) = {0.070404, 0.729391, 0, 1.0};
Point(52) = {0.077464, 0.728759, 0, 1.0};
Point(53) = {0.084044, 0.728154, 0, 1.0};
Point(54) = {0.090064, 0.727584, 0, 1.0};
Point(55) = {0.095451, 0.727056, 0, 1.0};
Point(56) = {0.100138, 0.726579, 0, 1.0};
Point(57) = {0.104066, 0.726164, 0, 1.0};
Point(58) = {0.107189, 0.725829, 0, 1.0};
Point(59) = {0.109489, 0.725575, 0, 1.0};
Point(60) = {0.110925, 0.725363, 0, 1.0};
Point(61) = {0.111417, 0.725265, 0, 1.0};
Point(62) = {-0.112187, -0.731036, 0, 1.0};
Point(63) = {-0.111690, -0.731087, 0, 1.0};
Point(64) = {-0.110268, -0.731306, 0, 1.0};
Point(65) = {-0.108026, -0.731731, 0, 1.0};
Point(66) = {-0.104994, -0.732302, 0, 1.0};
Point(67) = {-0.101185, -0.733016, 0, 1.0};
Point(68) = {-0.096651, -0.733878, 0, 1.0};
Point(69) = {-0.091457, -0.734879, 0, 1.0};
Point(70) = {-0.085676, -0.736006, 0, 1.0};
Point(71) = {-0.079383, -0.737240, 0, 1.0};
Point(72) = {-0.072660, -0.738562, 0, 1.0};
Point(73) = {-0.065595, -0.739944, 0, 1.0};
Point(74) = {-0.058275, -0.741362, 0, 1.0};
Point(75) = {-0.050792, -0.742782, 0, 1.0};
Point(76) = {-0.043236, -0.744171, 0, 1.0};
Point(77) = {-0.035698, -0.745488, 0, 1.0};
Point(78) = {-0.028251, -0.746679, 0, 1.0};
Point(79) = {-0.020950, -0.747713, 0, 1.0};
Point(80) = {-0.013858, -0.748576, 0, 1.0};
Point(81) = {-0.007040, -0.749249, 0, 1.0};
Point(82) = {-0.000555, -0.749716, 0, 1.0};
Point(83) = {0.005543, -0.749969, 0, 1.0};
Point(84) = {0.011205, -0.750000, 0, 1.0};
Point(85) = {0.016390, -0.749810, 0, 1.0};
Point(86) = {0.021059, -0.749403, 0, 1.0};
Point(87) = {0.025183, -0.748793, 0, 1.0};
Point(88) = {0.028737, -0.747995, 0, 1.0};
Point(89) = {0.031705, -0.747039, 0, 1.0};
Point(90) = {0.034073, -0.745957, 0, 1.0};
Point(91) = {0.035834, -0.744796, 0, 1.0};
Point(92) = {0.036979, -0.743620, 0, 1.0};
Point(93) = {0.037505, -0.742535, 0, 1.0};
Point(94) = {0.037220, -0.741618, 0, 1.0};
Point(95) = {0.036034, -0.740766, 0, 1.0};
Point(96) = {0.034061, -0.739930, 0, 1.0};
Point(97) = {0.031302, -0.739144, 0, 1.0};
Point(98) = {0.027772, -0.738409, 0, 1.0};
Point(99) = {0.023492, -0.737721, 0, 1.0};
Point(100) = {0.018500, -0.737068, 0, 1.0};
Point(101) = {0.012845, -0.736443, 0, 1.0};
Point(102) = {0.006587, -0.735833, 0, 1.0};
Point(103) = {-0.000201, -0.735226, 0, 1.0};
Point(104) = {-0.007441, -0.734617, 0, 1.0};
Point(105) = {-0.015048, -0.733997, 0, 1.0};
Point(106) = {-0.022926, -0.733362, 0, 1.0};
Point(107) = {-0.030977, -0.732711, 0, 1.0};
Point(108) = {-0.039101, -0.732048, 0, 1.0};
Point(109) = {-0.047203, -0.731378, 0, 1.0};
Point(110) = {-0.055183, -0.730708, 0, 1.0};
Point(111) = {-0.062947, -0.730043, 0, 1.0};
Point(112) = {-0.070404, -0.729391, 0, 1.0};
Point(113) = {-0.077464, -0.728759, 0, 1.0};
Point(114) = {-0.084044, -0.728154, 0, 1.0};
Point(115) = {-0.090064, -0.727584, 0, 1.0};
Point(116) = {-0.095451, -0.727056, 0, 1.0};
Point(117) = {-0.100138, -0.726579, 0, 1.0};
Point(118) = {-0.104066, -0.726164, 0, 1.0};
Point(119) = {-0.107189, -0.725829, 0, 1.0};
Point(120) = {-0.109489, -0.725575, 0, 1.0};
Point(121) = {-0.110925, -0.725363, 0, 1.0};
Point(122) = {-0.111417, -0.725265, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
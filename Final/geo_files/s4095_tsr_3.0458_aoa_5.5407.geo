SetFactory("OpenCASCADE");

Point(1) = {0.112470, 0.731023, 0, 1.0};
Point(2) = {0.111973, 0.731074, 0, 1.0};
Point(3) = {0.110550, 0.731293, 0, 1.0};
Point(4) = {0.108307, 0.731718, 0, 1.0};
Point(5) = {0.105272, 0.732290, 0, 1.0};
Point(6) = {0.101461, 0.733005, 0, 1.0};
Point(7) = {0.096924, 0.733867, 0, 1.0};
Point(8) = {0.091727, 0.734869, 0, 1.0};
Point(9) = {0.085941, 0.735996, 0, 1.0};
Point(10) = {0.079644, 0.737232, 0, 1.0};
Point(11) = {0.072917, 0.738554, 0, 1.0};
Point(12) = {0.065847, 0.739938, 0, 1.0};
Point(13) = {0.058522, 0.741356, 0, 1.0};
Point(14) = {0.051033, 0.742777, 0, 1.0};
Point(15) = {0.043472, 0.744167, 0, 1.0};
Point(16) = {0.035929, 0.745485, 0, 1.0};
Point(17) = {0.028477, 0.746676, 0, 1.0};
Point(18) = {0.021171, 0.747711, 0, 1.0};
Point(19) = {0.014074, 0.748575, 0, 1.0};
Point(20) = {0.007251, 0.749248, 0, 1.0};
Point(21) = {0.000762, 0.749716, 0, 1.0};
Point(22) = {-0.005340, 0.749969, 0, 1.0};
Point(23) = {-0.011007, 0.750000, 0, 1.0};
Point(24) = {-0.016194, 0.749810, 0, 1.0};
Point(25) = {-0.020867, 0.749403, 0, 1.0};
Point(26) = {-0.024994, 0.748792, 0, 1.0};
Point(27) = {-0.028551, 0.747994, 0, 1.0};
Point(28) = {-0.031521, 0.747037, 0, 1.0};
Point(29) = {-0.033889, 0.745954, 0, 1.0};
Point(30) = {-0.035652, 0.744793, 0, 1.0};
Point(31) = {-0.036798, 0.743616, 0, 1.0};
Point(32) = {-0.037325, 0.742530, 0, 1.0};
Point(33) = {-0.037039, 0.741612, 0, 1.0};
Point(34) = {-0.035853, 0.740760, 0, 1.0};
Point(35) = {-0.033878, 0.739923, 0, 1.0};
Point(36) = {-0.031118, 0.739136, 0, 1.0};
Point(37) = {-0.027585, 0.738401, 0, 1.0};
Point(38) = {-0.023301, 0.737712, 0, 1.0};
Point(39) = {-0.018306, 0.737059, 0, 1.0};
Point(40) = {-0.012647, 0.736434, 0, 1.0};
Point(41) = {-0.006385, 0.735823, 0, 1.0};
Point(42) = {0.000408, 0.735216, 0, 1.0};
Point(43) = {0.007653, 0.734607, 0, 1.0};
Point(44) = {0.015265, 0.733986, 0, 1.0};
Point(45) = {0.023148, 0.733350, 0, 1.0};
Point(46) = {0.031204, 0.732699, 0, 1.0};
Point(47) = {0.039335, 0.732035, 0, 1.0};
Point(48) = {0.047441, 0.731365, 0, 1.0};
Point(49) = {0.055427, 0.730694, 0, 1.0};
Point(50) = {0.063197, 0.730030, 0, 1.0};
Point(51) = {0.070659, 0.729377, 0, 1.0};
Point(52) = {0.077724, 0.728745, 0, 1.0};
Point(53) = {0.084308, 0.728139, 0, 1.0};
Point(54) = {0.090332, 0.727569, 0, 1.0};
Point(55) = {0.095723, 0.727040, 0, 1.0};
Point(56) = {0.100413, 0.726563, 0, 1.0};
Point(57) = {0.104344, 0.726148, 0, 1.0};
Point(58) = {0.107469, 0.725813, 0, 1.0};
Point(59) = {0.109771, 0.725558, 0, 1.0};
Point(60) = {0.111208, 0.725346, 0, 1.0};
Point(61) = {0.111700, 0.725248, 0, 1.0};
Point(62) = {-0.112470, -0.731023, 0, 1.0};
Point(63) = {-0.111973, -0.731074, 0, 1.0};
Point(64) = {-0.110550, -0.731293, 0, 1.0};
Point(65) = {-0.108307, -0.731718, 0, 1.0};
Point(66) = {-0.105272, -0.732290, 0, 1.0};
Point(67) = {-0.101461, -0.733005, 0, 1.0};
Point(68) = {-0.096924, -0.733867, 0, 1.0};
Point(69) = {-0.091727, -0.734869, 0, 1.0};
Point(70) = {-0.085941, -0.735996, 0, 1.0};
Point(71) = {-0.079644, -0.737232, 0, 1.0};
Point(72) = {-0.072917, -0.738554, 0, 1.0};
Point(73) = {-0.065847, -0.739938, 0, 1.0};
Point(74) = {-0.058522, -0.741356, 0, 1.0};
Point(75) = {-0.051033, -0.742777, 0, 1.0};
Point(76) = {-0.043472, -0.744167, 0, 1.0};
Point(77) = {-0.035929, -0.745485, 0, 1.0};
Point(78) = {-0.028477, -0.746676, 0, 1.0};
Point(79) = {-0.021171, -0.747711, 0, 1.0};
Point(80) = {-0.014074, -0.748575, 0, 1.0};
Point(81) = {-0.007251, -0.749248, 0, 1.0};
Point(82) = {-0.000762, -0.749716, 0, 1.0};
Point(83) = {0.005340, -0.749969, 0, 1.0};
Point(84) = {0.011007, -0.750000, 0, 1.0};
Point(85) = {0.016194, -0.749810, 0, 1.0};
Point(86) = {0.020867, -0.749403, 0, 1.0};
Point(87) = {0.024994, -0.748792, 0, 1.0};
Point(88) = {0.028551, -0.747994, 0, 1.0};
Point(89) = {0.031521, -0.747037, 0, 1.0};
Point(90) = {0.033889, -0.745954, 0, 1.0};
Point(91) = {0.035652, -0.744793, 0, 1.0};
Point(92) = {0.036798, -0.743616, 0, 1.0};
Point(93) = {0.037325, -0.742530, 0, 1.0};
Point(94) = {0.037039, -0.741612, 0, 1.0};
Point(95) = {0.035853, -0.740760, 0, 1.0};
Point(96) = {0.033878, -0.739923, 0, 1.0};
Point(97) = {0.031118, -0.739136, 0, 1.0};
Point(98) = {0.027585, -0.738401, 0, 1.0};
Point(99) = {0.023301, -0.737712, 0, 1.0};
Point(100) = {0.018306, -0.737059, 0, 1.0};
Point(101) = {0.012647, -0.736434, 0, 1.0};
Point(102) = {0.006385, -0.735823, 0, 1.0};
Point(103) = {-0.000408, -0.735216, 0, 1.0};
Point(104) = {-0.007653, -0.734607, 0, 1.0};
Point(105) = {-0.015265, -0.733986, 0, 1.0};
Point(106) = {-0.023148, -0.733350, 0, 1.0};
Point(107) = {-0.031204, -0.732699, 0, 1.0};
Point(108) = {-0.039335, -0.732035, 0, 1.0};
Point(109) = {-0.047441, -0.731365, 0, 1.0};
Point(110) = {-0.055427, -0.730694, 0, 1.0};
Point(111) = {-0.063197, -0.730030, 0, 1.0};
Point(112) = {-0.070659, -0.729377, 0, 1.0};
Point(113) = {-0.077724, -0.728745, 0, 1.0};
Point(114) = {-0.084308, -0.728139, 0, 1.0};
Point(115) = {-0.090332, -0.727569, 0, 1.0};
Point(116) = {-0.095723, -0.727040, 0, 1.0};
Point(117) = {-0.100413, -0.726563, 0, 1.0};
Point(118) = {-0.104344, -0.726148, 0, 1.0};
Point(119) = {-0.107469, -0.725813, 0, 1.0};
Point(120) = {-0.109771, -0.725558, 0, 1.0};
Point(121) = {-0.111208, -0.725346, 0, 1.0};
Point(122) = {-0.111700, -0.725248, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112265, 0.731049, 0, 1.0};
Point(2) = {0.111768, 0.731100, 0, 1.0};
Point(3) = {0.110347, 0.731318, 0, 1.0};
Point(4) = {0.108107, 0.731743, 0, 1.0};
Point(5) = {0.105077, 0.732315, 0, 1.0};
Point(6) = {0.101270, 0.733028, 0, 1.0};
Point(7) = {0.096739, 0.733889, 0, 1.0};
Point(8) = {0.091550, 0.734890, 0, 1.0};
Point(9) = {0.085772, 0.736016, 0, 1.0};
Point(10) = {0.079483, 0.737249, 0, 1.0};
Point(11) = {0.072766, 0.738570, 0, 1.0};
Point(12) = {0.065705, 0.739951, 0, 1.0};
Point(13) = {0.058390, 0.741368, 0, 1.0};
Point(14) = {0.050912, 0.742787, 0, 1.0};
Point(15) = {0.043361, 0.744175, 0, 1.0};
Point(16) = {0.035829, 0.745491, 0, 1.0};
Point(17) = {0.028386, 0.746681, 0, 1.0};
Point(18) = {0.021090, 0.747715, 0, 1.0};
Point(19) = {0.014003, 0.748577, 0, 1.0};
Point(20) = {0.007190, 0.749249, 0, 1.0};
Point(21) = {0.000709, 0.749717, 0, 1.0};
Point(22) = {-0.005384, 0.749969, 0, 1.0};
Point(23) = {-0.011043, 0.750000, 0, 1.0};
Point(24) = {-0.016223, 0.749810, 0, 1.0};
Point(25) = {-0.020889, 0.749404, 0, 1.0};
Point(26) = {-0.025011, 0.748793, 0, 1.0};
Point(27) = {-0.028563, 0.747997, 0, 1.0};
Point(28) = {-0.031529, 0.747041, 0, 1.0};
Point(29) = {-0.033894, 0.745960, 0, 1.0};
Point(30) = {-0.035654, 0.744800, 0, 1.0};
Point(31) = {-0.036799, 0.743625, 0, 1.0};
Point(32) = {-0.037325, 0.742540, 0, 1.0};
Point(33) = {-0.037040, 0.741624, 0, 1.0};
Point(34) = {-0.035855, 0.740772, 0, 1.0};
Point(35) = {-0.033883, 0.739937, 0, 1.0};
Point(36) = {-0.031126, 0.739151, 0, 1.0};
Point(37) = {-0.027598, 0.738417, 0, 1.0};
Point(38) = {-0.023321, 0.737729, 0, 1.0};
Point(39) = {-0.018332, 0.737077, 0, 1.0};
Point(40) = {-0.012681, 0.736453, 0, 1.0};
Point(41) = {-0.006428, 0.735842, 0, 1.0};
Point(42) = {0.000356, 0.735237, 0, 1.0};
Point(43) = {0.007591, 0.734628, 0, 1.0};
Point(44) = {0.015193, 0.734008, 0, 1.0};
Point(45) = {0.023065, 0.733373, 0, 1.0};
Point(46) = {0.031110, 0.732722, 0, 1.0};
Point(47) = {0.039229, 0.732060, 0, 1.0};
Point(48) = {0.047325, 0.731391, 0, 1.0};
Point(49) = {0.055300, 0.730721, 0, 1.0};
Point(50) = {0.063059, 0.730057, 0, 1.0};
Point(51) = {0.070510, 0.729405, 0, 1.0};
Point(52) = {0.077566, 0.728774, 0, 1.0};
Point(53) = {0.084141, 0.728169, 0, 1.0};
Point(54) = {0.090157, 0.727599, 0, 1.0};
Point(55) = {0.095540, 0.727072, 0, 1.0};
Point(56) = {0.100224, 0.726596, 0, 1.0};
Point(57) = {0.104150, 0.726181, 0, 1.0};
Point(58) = {0.107270, 0.725846, 0, 1.0};
Point(59) = {0.109569, 0.725592, 0, 1.0};
Point(60) = {0.111004, 0.725380, 0, 1.0};
Point(61) = {0.111496, 0.725282, 0, 1.0};
Point(62) = {-0.112265, -0.731049, 0, 1.0};
Point(63) = {-0.111768, -0.731100, 0, 1.0};
Point(64) = {-0.110347, -0.731318, 0, 1.0};
Point(65) = {-0.108107, -0.731743, 0, 1.0};
Point(66) = {-0.105077, -0.732315, 0, 1.0};
Point(67) = {-0.101270, -0.733028, 0, 1.0};
Point(68) = {-0.096739, -0.733889, 0, 1.0};
Point(69) = {-0.091550, -0.734890, 0, 1.0};
Point(70) = {-0.085772, -0.736016, 0, 1.0};
Point(71) = {-0.079483, -0.737249, 0, 1.0};
Point(72) = {-0.072766, -0.738570, 0, 1.0};
Point(73) = {-0.065705, -0.739951, 0, 1.0};
Point(74) = {-0.058390, -0.741368, 0, 1.0};
Point(75) = {-0.050912, -0.742787, 0, 1.0};
Point(76) = {-0.043361, -0.744175, 0, 1.0};
Point(77) = {-0.035829, -0.745491, 0, 1.0};
Point(78) = {-0.028386, -0.746681, 0, 1.0};
Point(79) = {-0.021090, -0.747715, 0, 1.0};
Point(80) = {-0.014003, -0.748577, 0, 1.0};
Point(81) = {-0.007190, -0.749249, 0, 1.0};
Point(82) = {-0.000709, -0.749717, 0, 1.0};
Point(83) = {0.005384, -0.749969, 0, 1.0};
Point(84) = {0.011043, -0.750000, 0, 1.0};
Point(85) = {0.016223, -0.749810, 0, 1.0};
Point(86) = {0.020889, -0.749404, 0, 1.0};
Point(87) = {0.025011, -0.748793, 0, 1.0};
Point(88) = {0.028563, -0.747997, 0, 1.0};
Point(89) = {0.031529, -0.747041, 0, 1.0};
Point(90) = {0.033894, -0.745960, 0, 1.0};
Point(91) = {0.035654, -0.744800, 0, 1.0};
Point(92) = {0.036799, -0.743625, 0, 1.0};
Point(93) = {0.037325, -0.742540, 0, 1.0};
Point(94) = {0.037040, -0.741624, 0, 1.0};
Point(95) = {0.035855, -0.740772, 0, 1.0};
Point(96) = {0.033883, -0.739937, 0, 1.0};
Point(97) = {0.031126, -0.739151, 0, 1.0};
Point(98) = {0.027598, -0.738417, 0, 1.0};
Point(99) = {0.023321, -0.737729, 0, 1.0};
Point(100) = {0.018332, -0.737077, 0, 1.0};
Point(101) = {0.012681, -0.736453, 0, 1.0};
Point(102) = {0.006428, -0.735842, 0, 1.0};
Point(103) = {-0.000356, -0.735237, 0, 1.0};
Point(104) = {-0.007591, -0.734628, 0, 1.0};
Point(105) = {-0.015193, -0.734008, 0, 1.0};
Point(106) = {-0.023065, -0.733373, 0, 1.0};
Point(107) = {-0.031110, -0.732722, 0, 1.0};
Point(108) = {-0.039229, -0.732060, 0, 1.0};
Point(109) = {-0.047325, -0.731391, 0, 1.0};
Point(110) = {-0.055300, -0.730721, 0, 1.0};
Point(111) = {-0.063059, -0.730057, 0, 1.0};
Point(112) = {-0.070510, -0.729405, 0, 1.0};
Point(113) = {-0.077566, -0.728774, 0, 1.0};
Point(114) = {-0.084141, -0.728169, 0, 1.0};
Point(115) = {-0.090157, -0.727599, 0, 1.0};
Point(116) = {-0.095540, -0.727072, 0, 1.0};
Point(117) = {-0.100224, -0.726596, 0, 1.0};
Point(118) = {-0.104150, -0.726181, 0, 1.0};
Point(119) = {-0.107270, -0.725846, 0, 1.0};
Point(120) = {-0.109569, -0.725592, 0, 1.0};
Point(121) = {-0.111004, -0.725380, 0, 1.0};
Point(122) = {-0.111496, -0.725282, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
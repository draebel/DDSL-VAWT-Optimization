SetFactory("OpenCASCADE");

Point(1) = {0.074271, 0.749454, 0, 1.0};
Point(2) = {0.071473, 0.749350, 0, 1.0};
Point(3) = {0.067586, 0.749240, 0, 1.0};
Point(4) = {0.063692, 0.749166, 0, 1.0};
Point(5) = {0.059800, 0.749126, 0, 1.0};
Point(6) = {0.055920, 0.749114, 0, 1.0};
Point(7) = {0.052046, 0.749132, 0, 1.0};
Point(8) = {0.048182, 0.749177, 0, 1.0};
Point(9) = {0.044328, 0.749254, 0, 1.0};
Point(10) = {0.040438, 0.749360, 0, 1.0};
Point(11) = {0.036522, 0.749489, 0, 1.0};
Point(12) = {0.032622, 0.749625, 0, 1.0};
Point(13) = {0.028704, 0.749759, 0, 1.0};
Point(14) = {0.024770, 0.749871, 0, 1.0};
Point(15) = {0.020844, 0.749953, 0, 1.0};
Point(16) = {0.016918, 0.749998, 0, 1.0};
Point(17) = {0.013001, 0.750000, 0, 1.0};
Point(18) = {0.009093, 0.749955, 0, 1.0};
Point(19) = {0.005188, 0.749863, 0, 1.0};
Point(20) = {0.001289, 0.749718, 0, 1.0};
Point(21) = {-0.002604, 0.749515, 0, 1.0};
Point(22) = {-0.006496, 0.749250, 0, 1.0};
Point(23) = {-0.010387, 0.748919, 0, 1.0};
Point(24) = {-0.014266, 0.748525, 0, 1.0};
Point(25) = {-0.018138, 0.748068, 0, 1.0};
Point(26) = {-0.022007, 0.747553, 0, 1.0};
Point(27) = {-0.029725, 0.746346, 0, 1.0};
Point(28) = {-0.037418, 0.744895, 0, 1.0};
Point(29) = {-0.041253, 0.744065, 0, 1.0};
Point(30) = {-0.045099, 0.743152, 0, 1.0};
Point(31) = {-0.048943, 0.742149, 0, 1.0};
Point(32) = {-0.052756, 0.741050, 0, 1.0};
Point(33) = {-0.056545, 0.739846, 0, 1.0};
Point(34) = {-0.060306, 0.738520, 0, 1.0};
Point(35) = {-0.064035, 0.737040, 0, 1.0};
Point(36) = {-0.067820, 0.735279, 0, 1.0};
Point(37) = {-0.071390, 0.733158, 0, 1.0};
Point(38) = {-0.073354, 0.731458, 0, 1.0};
Point(39) = {-0.074113, 0.730360, 0, 1.0};
Point(40) = {-0.074350, 0.729152, 0, 1.0};
Point(41) = {-0.074334, 0.729062, 0, 1.0};
Point(42) = {-0.073385, 0.727888, 0, 1.0};
Point(43) = {-0.072980, 0.727691, 0, 1.0};
Point(44) = {-0.071489, 0.727276, 0, 1.0};
Point(45) = {-0.069744, 0.727040, 0, 1.0};
Point(46) = {-0.065756, 0.726823, 0, 1.0};
Point(47) = {-0.061958, 0.726773, 0, 1.0};
Point(48) = {-0.058072, 0.726792, 0, 1.0};
Point(49) = {-0.054204, 0.726863, 0, 1.0};
Point(50) = {-0.050355, 0.726976, 0, 1.0};
Point(51) = {-0.046520, 0.727130, 0, 1.0};
Point(52) = {-0.042706, 0.727320, 0, 1.0};
Point(53) = {-0.038888, 0.727544, 0, 1.0};
Point(54) = {-0.035051, 0.727801, 0, 1.0};
Point(55) = {-0.027384, 0.728409, 0, 1.0};
Point(56) = {-0.019728, 0.729150, 0, 1.0};
Point(57) = {-0.015905, 0.729574, 0, 1.0};
Point(58) = {-0.012081, 0.730038, 0, 1.0};
Point(59) = {-0.008263, 0.730541, 0, 1.0};
Point(60) = {-0.004453, 0.731091, 0, 1.0};
Point(61) = {-0.000642, 0.731687, 0, 1.0};
Point(62) = {0.003170, 0.732329, 0, 1.0};
Point(63) = {0.006978, 0.733015, 0, 1.0};
Point(64) = {0.010783, 0.733735, 0, 1.0};
Point(65) = {0.014587, 0.734487, 0, 1.0};
Point(66) = {0.018385, 0.735267, 0, 1.0};
Point(67) = {0.022178, 0.736066, 0, 1.0};
Point(68) = {0.025972, 0.736876, 0, 1.0};
Point(69) = {0.029766, 0.737686, 0, 1.0};
Point(70) = {0.033576, 0.738492, 0, 1.0};
Point(71) = {0.037409, 0.739287, 0, 1.0};
Point(72) = {0.041225, 0.740069, 0, 1.0};
Point(73) = {0.045061, 0.740858, 0, 1.0};
Point(74) = {0.048928, 0.741674, 0, 1.0};
Point(75) = {0.052774, 0.742527, 0, 1.0};
Point(76) = {0.056604, 0.743422, 0, 1.0};
Point(77) = {0.060413, 0.744356, 0, 1.0};
Point(78) = {0.064206, 0.745311, 0, 1.0};
Point(79) = {0.067991, 0.746273, 0, 1.0};
Point(80) = {0.071776, 0.747239, 0, 1.0};
Point(81) = {0.074472, 0.747940, 0, 1.0};
Point(82) = {-0.074271, -0.749454, 0, 1.0};
Point(83) = {-0.071473, -0.749350, 0, 1.0};
Point(84) = {-0.067586, -0.749240, 0, 1.0};
Point(85) = {-0.063692, -0.749166, 0, 1.0};
Point(86) = {-0.059800, -0.749126, 0, 1.0};
Point(87) = {-0.055920, -0.749114, 0, 1.0};
Point(88) = {-0.052046, -0.749132, 0, 1.0};
Point(89) = {-0.048182, -0.749177, 0, 1.0};
Point(90) = {-0.044328, -0.749254, 0, 1.0};
Point(91) = {-0.040438, -0.749360, 0, 1.0};
Point(92) = {-0.036522, -0.749489, 0, 1.0};
Point(93) = {-0.032622, -0.749625, 0, 1.0};
Point(94) = {-0.028704, -0.749759, 0, 1.0};
Point(95) = {-0.024770, -0.749871, 0, 1.0};
Point(96) = {-0.020844, -0.749953, 0, 1.0};
Point(97) = {-0.016918, -0.749998, 0, 1.0};
Point(98) = {-0.013001, -0.750000, 0, 1.0};
Point(99) = {-0.009093, -0.749955, 0, 1.0};
Point(100) = {-0.005188, -0.749863, 0, 1.0};
Point(101) = {-0.001289, -0.749718, 0, 1.0};
Point(102) = {0.002604, -0.749515, 0, 1.0};
Point(103) = {0.006496, -0.749250, 0, 1.0};
Point(104) = {0.010387, -0.748919, 0, 1.0};
Point(105) = {0.014266, -0.748525, 0, 1.0};
Point(106) = {0.018138, -0.748068, 0, 1.0};
Point(107) = {0.022007, -0.747553, 0, 1.0};
Point(108) = {0.029725, -0.746346, 0, 1.0};
Point(109) = {0.037418, -0.744895, 0, 1.0};
Point(110) = {0.041253, -0.744065, 0, 1.0};
Point(111) = {0.045099, -0.743152, 0, 1.0};
Point(112) = {0.048943, -0.742149, 0, 1.0};
Point(113) = {0.052756, -0.741050, 0, 1.0};
Point(114) = {0.056545, -0.739846, 0, 1.0};
Point(115) = {0.060306, -0.738520, 0, 1.0};
Point(116) = {0.064035, -0.737040, 0, 1.0};
Point(117) = {0.067820, -0.735279, 0, 1.0};
Point(118) = {0.071390, -0.733158, 0, 1.0};
Point(119) = {0.073354, -0.731458, 0, 1.0};
Point(120) = {0.074113, -0.730360, 0, 1.0};
Point(121) = {0.074350, -0.729152, 0, 1.0};
Point(122) = {0.074334, -0.729062, 0, 1.0};
Point(123) = {0.073385, -0.727888, 0, 1.0};
Point(124) = {0.072980, -0.727691, 0, 1.0};
Point(125) = {0.071489, -0.727276, 0, 1.0};
Point(126) = {0.069744, -0.727040, 0, 1.0};
Point(127) = {0.065756, -0.726823, 0, 1.0};
Point(128) = {0.061958, -0.726773, 0, 1.0};
Point(129) = {0.058072, -0.726792, 0, 1.0};
Point(130) = {0.054204, -0.726863, 0, 1.0};
Point(131) = {0.050355, -0.726976, 0, 1.0};
Point(132) = {0.046520, -0.727130, 0, 1.0};
Point(133) = {0.042706, -0.727320, 0, 1.0};
Point(134) = {0.038888, -0.727544, 0, 1.0};
Point(135) = {0.035051, -0.727801, 0, 1.0};
Point(136) = {0.027384, -0.728409, 0, 1.0};
Point(137) = {0.019728, -0.729150, 0, 1.0};
Point(138) = {0.015905, -0.729574, 0, 1.0};
Point(139) = {0.012081, -0.730038, 0, 1.0};
Point(140) = {0.008263, -0.730541, 0, 1.0};
Point(141) = {0.004453, -0.731091, 0, 1.0};
Point(142) = {0.000642, -0.731687, 0, 1.0};
Point(143) = {-0.003170, -0.732329, 0, 1.0};
Point(144) = {-0.006978, -0.733015, 0, 1.0};
Point(145) = {-0.010783, -0.733735, 0, 1.0};
Point(146) = {-0.014587, -0.734487, 0, 1.0};
Point(147) = {-0.018385, -0.735267, 0, 1.0};
Point(148) = {-0.022178, -0.736066, 0, 1.0};
Point(149) = {-0.025972, -0.736876, 0, 1.0};
Point(150) = {-0.029766, -0.737686, 0, 1.0};
Point(151) = {-0.033576, -0.738492, 0, 1.0};
Point(152) = {-0.037409, -0.739287, 0, 1.0};
Point(153) = {-0.041225, -0.740069, 0, 1.0};
Point(154) = {-0.045061, -0.740858, 0, 1.0};
Point(155) = {-0.048928, -0.741674, 0, 1.0};
Point(156) = {-0.052774, -0.742527, 0, 1.0};
Point(157) = {-0.056604, -0.743422, 0, 1.0};
Point(158) = {-0.060413, -0.744356, 0, 1.0};
Point(159) = {-0.064206, -0.745311, 0, 1.0};
Point(160) = {-0.067991, -0.746273, 0, 1.0};
Point(161) = {-0.071776, -0.747239, 0, 1.0};
Point(162) = {-0.074472, -0.747940, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:55};
Spline(3) = {55:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:109};
Spline(6) = {109:136};
Spline(7) = {136:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
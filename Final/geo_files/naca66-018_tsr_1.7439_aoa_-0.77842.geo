SetFactory("OpenCASCADE");

Point(1) = {0.074991, 0.741738, 0, 1.0};
Point(2) = {0.074425, 0.741792, 0, 1.0};
Point(3) = {0.072740, 0.741962, 0, 1.0};
Point(4) = {0.069982, 0.742316, 0, 1.0};
Point(5) = {0.067666, 0.742735, 0, 1.0};
Point(6) = {0.064968, 0.743315, 0, 1.0};
Point(7) = {0.059952, 0.744468, 0, 1.0};
Point(8) = {0.054935, 0.745672, 0, 1.0};
Point(9) = {0.049919, 0.746849, 0, 1.0};
Point(10) = {0.044904, 0.747927, 0, 1.0};
Point(11) = {0.039890, 0.748842, 0, 1.0};
Point(12) = {0.034881, 0.749517, 0, 1.0};
Point(13) = {0.029876, 0.749859, 0, 1.0};
Point(14) = {0.024874, 0.750000, 0, 1.0};
Point(15) = {0.019874, 0.749988, 0, 1.0};
Point(16) = {0.014875, 0.749840, 0, 1.0};
Point(17) = {0.009879, 0.749555, 0, 1.0};
Point(18) = {0.004884, 0.749132, 0, 1.0};
Point(19) = {-0.000109, 0.748566, 0, 1.0};
Point(20) = {-0.005099, 0.747839, 0, 1.0};
Point(21) = {-0.010087, 0.746916, 0, 1.0};
Point(22) = {-0.015072, 0.745725, 0, 1.0};
Point(23) = {-0.017562, 0.744994, 0, 1.0};
Point(24) = {-0.020051, 0.744137, 0, 1.0};
Point(25) = {-0.022536, 0.743059, 0, 1.0};
Point(26) = {-0.023777, 0.742348, 0, 1.0};
Point(27) = {-0.024271, 0.741961, 0, 1.0};
Point(28) = {-0.024518, 0.741709, 0, 1.0};
Point(29) = {-0.024883, 0.741089, 0, 1.0};
Point(30) = {-0.025000, 0.740380, 0, 1.0};
Point(31) = {-0.024863, 0.739673, 0, 1.0};
Point(32) = {-0.024482, 0.739063, 0, 1.0};
Point(33) = {-0.024229, 0.738819, 0, 1.0};
Point(34) = {-0.023724, 0.738445, 0, 1.0};
Point(35) = {-0.022464, 0.737768, 0, 1.0};
Point(36) = {-0.019950, 0.736758, 0, 1.0};
Point(37) = {-0.017439, 0.735969, 0, 1.0};
Point(38) = {-0.014930, 0.735306, 0, 1.0};
Point(39) = {-0.009915, 0.734251, 0, 1.0};
Point(40) = {-0.004904, 0.733464, 0, 1.0};
Point(41) = {0.000104, 0.732872, 0, 1.0};
Point(42) = {0.005111, 0.732442, 0, 1.0};
Point(43) = {0.010115, 0.732155, 0, 1.0};
Point(44) = {0.015117, 0.732006, 0, 1.0};
Point(45) = {0.020118, 0.731994, 0, 1.0};
Point(46) = {0.025117, 0.732118, 0, 1.0};
Point(47) = {0.030114, 0.732395, 0, 1.0};
Point(48) = {0.035108, 0.732872, 0, 1.0};
Point(49) = {0.040096, 0.733683, 0, 1.0};
Point(50) = {0.045083, 0.734734, 0, 1.0};
Point(51) = {0.050067, 0.735948, 0, 1.0};
Point(52) = {0.055050, 0.737261, 0, 1.0};
Point(53) = {0.060032, 0.738601, 0, 1.0};
Point(54) = {0.062630, 0.739280, 0, 1.0};
Point(55) = {0.065015, 0.739889, 0, 1.0};
Point(56) = {0.070000, 0.741024, 0, 1.0};
Point(57) = {0.072746, 0.741454, 0, 1.0};
Point(58) = {0.074427, 0.741668, 0, 1.0};
Point(59) = {-0.074991, -0.741738, 0, 1.0};
Point(60) = {-0.074425, -0.741792, 0, 1.0};
Point(61) = {-0.072740, -0.741962, 0, 1.0};
Point(62) = {-0.069982, -0.742316, 0, 1.0};
Point(63) = {-0.067666, -0.742735, 0, 1.0};
Point(64) = {-0.064968, -0.743315, 0, 1.0};
Point(65) = {-0.059952, -0.744468, 0, 1.0};
Point(66) = {-0.054935, -0.745672, 0, 1.0};
Point(67) = {-0.049919, -0.746849, 0, 1.0};
Point(68) = {-0.044904, -0.747927, 0, 1.0};
Point(69) = {-0.039890, -0.748842, 0, 1.0};
Point(70) = {-0.034881, -0.749517, 0, 1.0};
Point(71) = {-0.029876, -0.749859, 0, 1.0};
Point(72) = {-0.024874, -0.750000, 0, 1.0};
Point(73) = {-0.019874, -0.749988, 0, 1.0};
Point(74) = {-0.014875, -0.749840, 0, 1.0};
Point(75) = {-0.009879, -0.749555, 0, 1.0};
Point(76) = {-0.004884, -0.749132, 0, 1.0};
Point(77) = {0.000109, -0.748566, 0, 1.0};
Point(78) = {0.005099, -0.747839, 0, 1.0};
Point(79) = {0.010087, -0.746916, 0, 1.0};
Point(80) = {0.015072, -0.745725, 0, 1.0};
Point(81) = {0.017562, -0.744994, 0, 1.0};
Point(82) = {0.020051, -0.744137, 0, 1.0};
Point(83) = {0.022536, -0.743059, 0, 1.0};
Point(84) = {0.023777, -0.742348, 0, 1.0};
Point(85) = {0.024271, -0.741961, 0, 1.0};
Point(86) = {0.024518, -0.741709, 0, 1.0};
Point(87) = {0.024883, -0.741089, 0, 1.0};
Point(88) = {0.025000, -0.740380, 0, 1.0};
Point(89) = {0.024863, -0.739673, 0, 1.0};
Point(90) = {0.024482, -0.739063, 0, 1.0};
Point(91) = {0.024229, -0.738819, 0, 1.0};
Point(92) = {0.023724, -0.738445, 0, 1.0};
Point(93) = {0.022464, -0.737768, 0, 1.0};
Point(94) = {0.019950, -0.736758, 0, 1.0};
Point(95) = {0.017439, -0.735969, 0, 1.0};
Point(96) = {0.014930, -0.735306, 0, 1.0};
Point(97) = {0.009915, -0.734251, 0, 1.0};
Point(98) = {0.004904, -0.733464, 0, 1.0};
Point(99) = {-0.000104, -0.732872, 0, 1.0};
Point(100) = {-0.005111, -0.732442, 0, 1.0};
Point(101) = {-0.010115, -0.732155, 0, 1.0};
Point(102) = {-0.015117, -0.732006, 0, 1.0};
Point(103) = {-0.020118, -0.731994, 0, 1.0};
Point(104) = {-0.025117, -0.732118, 0, 1.0};
Point(105) = {-0.030114, -0.732395, 0, 1.0};
Point(106) = {-0.035108, -0.732872, 0, 1.0};
Point(107) = {-0.040096, -0.733683, 0, 1.0};
Point(108) = {-0.045083, -0.734734, 0, 1.0};
Point(109) = {-0.050067, -0.735948, 0, 1.0};
Point(110) = {-0.055050, -0.737261, 0, 1.0};
Point(111) = {-0.060032, -0.738601, 0, 1.0};
Point(112) = {-0.062630, -0.739280, 0, 1.0};
Point(113) = {-0.065015, -0.739889, 0, 1.0};
Point(114) = {-0.070000, -0.741024, 0, 1.0};
Point(115) = {-0.072746, -0.741454, 0, 1.0};
Point(116) = {-0.074427, -0.741668, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:42};
Spline(3) = {42:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:77};
Spline(6) = {77:100};
Spline(7) = {100:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
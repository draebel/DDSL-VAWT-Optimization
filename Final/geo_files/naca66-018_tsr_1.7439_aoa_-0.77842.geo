SetFactory("OpenCASCADE");

Point(1) = {0.112490, 0.737607, 0, 1.0};
Point(2) = {0.111641, 0.737689, 0, 1.0};
Point(3) = {0.109113, 0.737942, 0, 1.0};
Point(4) = {0.104977, 0.738474, 0, 1.0};
Point(5) = {0.101502, 0.739102, 0, 1.0};
Point(6) = {0.097456, 0.739973, 0, 1.0};
Point(7) = {0.089932, 0.741702, 0, 1.0};
Point(8) = {0.082407, 0.743508, 0, 1.0};
Point(9) = {0.074882, 0.745273, 0, 1.0};
Point(10) = {0.067359, 0.746890, 0, 1.0};
Point(11) = {0.059838, 0.748263, 0, 1.0};
Point(12) = {0.052326, 0.749275, 0, 1.0};
Point(13) = {0.044818, 0.749788, 0, 1.0};
Point(14) = {0.037314, 0.750000, 0, 1.0};
Point(15) = {0.029814, 0.749982, 0, 1.0};
Point(16) = {0.022316, 0.749760, 0, 1.0};
Point(17) = {0.014821, 0.749333, 0, 1.0};
Point(18) = {0.007329, 0.748699, 0, 1.0};
Point(19) = {-0.000160, 0.747850, 0, 1.0};
Point(20) = {-0.007646, 0.746758, 0, 1.0};
Point(21) = {-0.015128, 0.745374, 0, 1.0};
Point(22) = {-0.022604, 0.743587, 0, 1.0};
Point(23) = {-0.026340, 0.742491, 0, 1.0};
Point(24) = {-0.030072, 0.741206, 0, 1.0};
Point(25) = {-0.033801, 0.739589, 0, 1.0};
Point(26) = {-0.035661, 0.738523, 0, 1.0};
Point(27) = {-0.036404, 0.737941, 0, 1.0};
Point(28) = {-0.036774, 0.737564, 0, 1.0};
Point(29) = {-0.037320, 0.736634, 0, 1.0};
Point(30) = {-0.037497, 0.735569, 0, 1.0};
Point(31) = {-0.037292, 0.734510, 0, 1.0};
Point(32) = {-0.036720, 0.733595, 0, 1.0};
Point(33) = {-0.036340, 0.733228, 0, 1.0};
Point(34) = {-0.035582, 0.732667, 0, 1.0};
Point(35) = {-0.033693, 0.731652, 0, 1.0};
Point(36) = {-0.029922, 0.730137, 0, 1.0};
Point(37) = {-0.026156, 0.728953, 0, 1.0};
Point(38) = {-0.022392, 0.727959, 0, 1.0};
Point(39) = {-0.014870, 0.726376, 0, 1.0};
Point(40) = {-0.007353, 0.725196, 0, 1.0};
Point(41) = {0.000160, 0.724308, 0, 1.0};
Point(42) = {0.007669, 0.723663, 0, 1.0};
Point(43) = {0.015176, 0.723232, 0, 1.0};
Point(44) = {0.022680, 0.723009, 0, 1.0};
Point(45) = {0.030181, 0.722991, 0, 1.0};
Point(46) = {0.037679, 0.723176, 0, 1.0};
Point(47) = {0.045174, 0.723592, 0, 1.0};
Point(48) = {0.052665, 0.724309, 0, 1.0};
Point(49) = {0.060147, 0.725525, 0, 1.0};
Point(50) = {0.067628, 0.727101, 0, 1.0};
Point(51) = {0.075104, 0.728922, 0, 1.0};
Point(52) = {0.082578, 0.730891, 0, 1.0};
Point(53) = {0.090051, 0.732901, 0, 1.0};
Point(54) = {0.093948, 0.733920, 0, 1.0};
Point(55) = {0.097526, 0.734834, 0, 1.0};
Point(56) = {0.105003, 0.736536, 0, 1.0};
Point(57) = {0.109123, 0.737180, 0, 1.0};
Point(58) = {0.111643, 0.737503, 0, 1.0};
Point(59) = {-0.112490, -0.737607, 0, 1.0};
Point(60) = {-0.111641, -0.737689, 0, 1.0};
Point(61) = {-0.109113, -0.737942, 0, 1.0};
Point(62) = {-0.104977, -0.738474, 0, 1.0};
Point(63) = {-0.101502, -0.739102, 0, 1.0};
Point(64) = {-0.097456, -0.739973, 0, 1.0};
Point(65) = {-0.089932, -0.741702, 0, 1.0};
Point(66) = {-0.082407, -0.743508, 0, 1.0};
Point(67) = {-0.074882, -0.745273, 0, 1.0};
Point(68) = {-0.067359, -0.746890, 0, 1.0};
Point(69) = {-0.059838, -0.748263, 0, 1.0};
Point(70) = {-0.052326, -0.749275, 0, 1.0};
Point(71) = {-0.044818, -0.749788, 0, 1.0};
Point(72) = {-0.037314, -0.750000, 0, 1.0};
Point(73) = {-0.029814, -0.749982, 0, 1.0};
Point(74) = {-0.022316, -0.749760, 0, 1.0};
Point(75) = {-0.014821, -0.749333, 0, 1.0};
Point(76) = {-0.007329, -0.748699, 0, 1.0};
Point(77) = {0.000160, -0.747850, 0, 1.0};
Point(78) = {0.007646, -0.746758, 0, 1.0};
Point(79) = {0.015128, -0.745374, 0, 1.0};
Point(80) = {0.022604, -0.743587, 0, 1.0};
Point(81) = {0.026340, -0.742491, 0, 1.0};
Point(82) = {0.030072, -0.741206, 0, 1.0};
Point(83) = {0.033801, -0.739589, 0, 1.0};
Point(84) = {0.035661, -0.738523, 0, 1.0};
Point(85) = {0.036404, -0.737941, 0, 1.0};
Point(86) = {0.036774, -0.737564, 0, 1.0};
Point(87) = {0.037320, -0.736634, 0, 1.0};
Point(88) = {0.037497, -0.735569, 0, 1.0};
Point(89) = {0.037292, -0.734510, 0, 1.0};
Point(90) = {0.036720, -0.733595, 0, 1.0};
Point(91) = {0.036340, -0.733228, 0, 1.0};
Point(92) = {0.035582, -0.732667, 0, 1.0};
Point(93) = {0.033693, -0.731652, 0, 1.0};
Point(94) = {0.029922, -0.730137, 0, 1.0};
Point(95) = {0.026156, -0.728953, 0, 1.0};
Point(96) = {0.022392, -0.727959, 0, 1.0};
Point(97) = {0.014870, -0.726376, 0, 1.0};
Point(98) = {0.007353, -0.725196, 0, 1.0};
Point(99) = {-0.000160, -0.724308, 0, 1.0};
Point(100) = {-0.007669, -0.723663, 0, 1.0};
Point(101) = {-0.015176, -0.723232, 0, 1.0};
Point(102) = {-0.022680, -0.723009, 0, 1.0};
Point(103) = {-0.030181, -0.722991, 0, 1.0};
Point(104) = {-0.037679, -0.723176, 0, 1.0};
Point(105) = {-0.045174, -0.723592, 0, 1.0};
Point(106) = {-0.052665, -0.724309, 0, 1.0};
Point(107) = {-0.060147, -0.725525, 0, 1.0};
Point(108) = {-0.067628, -0.727101, 0, 1.0};
Point(109) = {-0.075104, -0.728922, 0, 1.0};
Point(110) = {-0.082578, -0.730891, 0, 1.0};
Point(111) = {-0.090051, -0.732901, 0, 1.0};
Point(112) = {-0.093948, -0.733920, 0, 1.0};
Point(113) = {-0.097526, -0.734834, 0, 1.0};
Point(114) = {-0.105003, -0.736536, 0, 1.0};
Point(115) = {-0.109123, -0.737180, 0, 1.0};
Point(116) = {-0.111643, -0.737503, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:42};
Spline(3) = {42:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:77};
Spline(6) = {77:100};
Spline(7) = {100:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
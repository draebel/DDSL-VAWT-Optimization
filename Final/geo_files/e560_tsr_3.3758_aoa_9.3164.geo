SetFactory("OpenCASCADE");

Point(1) = {0.073681, 0.726195, 0, 1.0};
Point(2) = {0.073359, 0.726384, 0, 1.0};
Point(3) = {0.072484, 0.726941, 0, 1.0};
Point(4) = {0.071182, 0.727774, 0, 1.0};
Point(5) = {0.069458, 0.728753, 0, 1.0};
Point(6) = {0.067257, 0.729838, 0, 1.0};
Point(7) = {0.064581, 0.731052, 0, 1.0};
Point(8) = {0.061476, 0.732392, 0, 1.0};
Point(9) = {0.057989, 0.733842, 0, 1.0};
Point(10) = {0.054167, 0.735379, 0, 1.0};
Point(11) = {0.050063, 0.736977, 0, 1.0};
Point(12) = {0.045729, 0.738609, 0, 1.0};
Point(13) = {0.041218, 0.740242, 0, 1.0};
Point(14) = {0.036583, 0.741846, 0, 1.0};
Point(15) = {0.031875, 0.743385, 0, 1.0};
Point(16) = {0.027143, 0.744830, 0, 1.0};
Point(17) = {0.022432, 0.746147, 0, 1.0};
Point(18) = {0.017787, 0.747310, 0, 1.0};
Point(19) = {0.013247, 0.748292, 0, 1.0};
Point(20) = {0.008851, 0.749070, 0, 1.0};
Point(21) = {0.004626, 0.749620, 0, 1.0};
Point(22) = {0.000593, 0.749930, 0, 1.0};
Point(23) = {-0.003232, 0.750000, 0, 1.0};
Point(24) = {-0.006834, 0.749842, 0, 1.0};
Point(25) = {-0.010192, 0.749479, 0, 1.0};
Point(26) = {-0.013276, 0.748936, 0, 1.0};
Point(27) = {-0.016058, 0.748237, 0, 1.0};
Point(28) = {-0.018510, 0.747408, 0, 1.0};
Point(29) = {-0.020606, 0.746473, 0, 1.0};
Point(30) = {-0.022325, 0.745464, 0, 1.0};
Point(31) = {-0.023645, 0.744412, 0, 1.0};
Point(32) = {-0.024549, 0.743360, 0, 1.0};
Point(33) = {-0.024999, 0.742380, 0, 1.0};
Point(34) = {-0.024858, 0.741458, 0, 1.0};
Point(35) = {-0.024113, 0.740490, 0, 1.0};
Point(36) = {-0.022890, 0.739467, 0, 1.0};
Point(37) = {-0.021217, 0.738449, 0, 1.0};
Point(38) = {-0.019104, 0.737473, 0, 1.0};
Point(39) = {-0.016562, 0.736569, 0, 1.0};
Point(40) = {-0.013604, 0.735761, 0, 1.0};
Point(41) = {-0.010238, 0.735073, 0, 1.0};
Point(42) = {-0.006471, 0.734517, 0, 1.0};
Point(43) = {-0.002311, 0.734095, 0, 1.0};
Point(44) = {0.002231, 0.733793, 0, 1.0};
Point(45) = {0.007136, 0.733586, 0, 1.0};
Point(46) = {0.012373, 0.733432, 0, 1.0};
Point(47) = {0.017881, 0.733273, 0, 1.0};
Point(48) = {0.023570, 0.733071, 0, 1.0};
Point(49) = {0.029349, 0.732803, 0, 1.0};
Point(50) = {0.035124, 0.732455, 0, 1.0};
Point(51) = {0.040801, 0.732023, 0, 1.0};
Point(52) = {0.046286, 0.731505, 0, 1.0};
Point(53) = {0.051491, 0.730907, 0, 1.0};
Point(54) = {0.056327, 0.730243, 0, 1.0};
Point(55) = {0.060711, 0.729526, 0, 1.0};
Point(56) = {0.064565, 0.728784, 0, 1.0};
Point(57) = {0.067819, 0.728041, 0, 1.0};
Point(58) = {0.070395, 0.727335, 0, 1.0};
Point(59) = {0.072233, 0.726739, 0, 1.0};
Point(60) = {0.073321, 0.726337, 0, 1.0};
Point(61) = {-0.073681, -0.726195, 0, 1.0};
Point(62) = {-0.073359, -0.726384, 0, 1.0};
Point(63) = {-0.072484, -0.726941, 0, 1.0};
Point(64) = {-0.071182, -0.727774, 0, 1.0};
Point(65) = {-0.069458, -0.728753, 0, 1.0};
Point(66) = {-0.067257, -0.729838, 0, 1.0};
Point(67) = {-0.064581, -0.731052, 0, 1.0};
Point(68) = {-0.061476, -0.732392, 0, 1.0};
Point(69) = {-0.057989, -0.733842, 0, 1.0};
Point(70) = {-0.054167, -0.735379, 0, 1.0};
Point(71) = {-0.050063, -0.736977, 0, 1.0};
Point(72) = {-0.045729, -0.738609, 0, 1.0};
Point(73) = {-0.041218, -0.740242, 0, 1.0};
Point(74) = {-0.036583, -0.741846, 0, 1.0};
Point(75) = {-0.031875, -0.743385, 0, 1.0};
Point(76) = {-0.027143, -0.744830, 0, 1.0};
Point(77) = {-0.022432, -0.746147, 0, 1.0};
Point(78) = {-0.017787, -0.747310, 0, 1.0};
Point(79) = {-0.013247, -0.748292, 0, 1.0};
Point(80) = {-0.008851, -0.749070, 0, 1.0};
Point(81) = {-0.004626, -0.749620, 0, 1.0};
Point(82) = {-0.000593, -0.749930, 0, 1.0};
Point(83) = {0.003232, -0.750000, 0, 1.0};
Point(84) = {0.006834, -0.749842, 0, 1.0};
Point(85) = {0.010192, -0.749479, 0, 1.0};
Point(86) = {0.013276, -0.748936, 0, 1.0};
Point(87) = {0.016058, -0.748237, 0, 1.0};
Point(88) = {0.018510, -0.747408, 0, 1.0};
Point(89) = {0.020606, -0.746473, 0, 1.0};
Point(90) = {0.022325, -0.745464, 0, 1.0};
Point(91) = {0.023645, -0.744412, 0, 1.0};
Point(92) = {0.024549, -0.743360, 0, 1.0};
Point(93) = {0.024999, -0.742380, 0, 1.0};
Point(94) = {0.024858, -0.741458, 0, 1.0};
Point(95) = {0.024113, -0.740490, 0, 1.0};
Point(96) = {0.022890, -0.739467, 0, 1.0};
Point(97) = {0.021217, -0.738449, 0, 1.0};
Point(98) = {0.019104, -0.737473, 0, 1.0};
Point(99) = {0.016562, -0.736569, 0, 1.0};
Point(100) = {0.013604, -0.735761, 0, 1.0};
Point(101) = {0.010238, -0.735073, 0, 1.0};
Point(102) = {0.006471, -0.734517, 0, 1.0};
Point(103) = {0.002311, -0.734095, 0, 1.0};
Point(104) = {-0.002231, -0.733793, 0, 1.0};
Point(105) = {-0.007136, -0.733586, 0, 1.0};
Point(106) = {-0.012373, -0.733432, 0, 1.0};
Point(107) = {-0.017881, -0.733273, 0, 1.0};
Point(108) = {-0.023570, -0.733071, 0, 1.0};
Point(109) = {-0.029349, -0.732803, 0, 1.0};
Point(110) = {-0.035124, -0.732455, 0, 1.0};
Point(111) = {-0.040801, -0.732023, 0, 1.0};
Point(112) = {-0.046286, -0.731505, 0, 1.0};
Point(113) = {-0.051491, -0.730907, 0, 1.0};
Point(114) = {-0.056327, -0.730243, 0, 1.0};
Point(115) = {-0.060711, -0.729526, 0, 1.0};
Point(116) = {-0.064565, -0.728784, 0, 1.0};
Point(117) = {-0.067819, -0.728041, 0, 1.0};
Point(118) = {-0.070395, -0.727335, 0, 1.0};
Point(119) = {-0.072233, -0.726739, 0, 1.0};
Point(120) = {-0.073321, -0.726337, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
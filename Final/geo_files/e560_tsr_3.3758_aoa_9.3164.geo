SetFactory("OpenCASCADE");

Point(1) = {0.147362, 0.702390, 0, 1.0};
Point(2) = {0.146719, 0.702769, 0, 1.0};
Point(3) = {0.144968, 0.703883, 0, 1.0};
Point(4) = {0.142363, 0.705548, 0, 1.0};
Point(5) = {0.138917, 0.707506, 0, 1.0};
Point(6) = {0.134514, 0.709676, 0, 1.0};
Point(7) = {0.129162, 0.712104, 0, 1.0};
Point(8) = {0.122952, 0.714785, 0, 1.0};
Point(9) = {0.115978, 0.717684, 0, 1.0};
Point(10) = {0.108335, 0.720758, 0, 1.0};
Point(11) = {0.100126, 0.723955, 0, 1.0};
Point(12) = {0.091458, 0.727217, 0, 1.0};
Point(13) = {0.082436, 0.730485, 0, 1.0};
Point(14) = {0.073167, 0.733692, 0, 1.0};
Point(15) = {0.063751, 0.736771, 0, 1.0};
Point(16) = {0.054286, 0.739659, 0, 1.0};
Point(17) = {0.044864, 0.742293, 0, 1.0};
Point(18) = {0.035574, 0.744620, 0, 1.0};
Point(19) = {0.026494, 0.746584, 0, 1.0};
Point(20) = {0.017702, 0.748139, 0, 1.0};
Point(21) = {0.009253, 0.749240, 0, 1.0};
Point(22) = {0.001186, 0.749860, 0, 1.0};
Point(23) = {-0.006464, 0.750000, 0, 1.0};
Point(24) = {-0.013668, 0.749684, 0, 1.0};
Point(25) = {-0.020384, 0.748958, 0, 1.0};
Point(26) = {-0.026551, 0.747872, 0, 1.0};
Point(27) = {-0.032117, 0.746474, 0, 1.0};
Point(28) = {-0.037020, 0.744816, 0, 1.0};
Point(29) = {-0.041212, 0.742946, 0, 1.0};
Point(30) = {-0.044650, 0.740928, 0, 1.0};
Point(31) = {-0.047290, 0.738824, 0, 1.0};
Point(32) = {-0.049098, 0.736721, 0, 1.0};
Point(33) = {-0.049999, 0.734761, 0, 1.0};
Point(34) = {-0.049716, 0.732917, 0, 1.0};
Point(35) = {-0.048226, 0.730980, 0, 1.0};
Point(36) = {-0.045781, 0.728933, 0, 1.0};
Point(37) = {-0.042434, 0.726898, 0, 1.0};
Point(38) = {-0.038208, 0.724947, 0, 1.0};
Point(39) = {-0.033124, 0.723138, 0, 1.0};
Point(40) = {-0.027207, 0.721523, 0, 1.0};
Point(41) = {-0.020475, 0.720147, 0, 1.0};
Point(42) = {-0.012942, 0.719034, 0, 1.0};
Point(43) = {-0.004621, 0.718190, 0, 1.0};
Point(44) = {0.004463, 0.717586, 0, 1.0};
Point(45) = {0.014271, 0.717172, 0, 1.0};
Point(46) = {0.024746, 0.716865, 0, 1.0};
Point(47) = {0.035762, 0.716547, 0, 1.0};
Point(48) = {0.047140, 0.716142, 0, 1.0};
Point(49) = {0.058698, 0.715606, 0, 1.0};
Point(50) = {0.070248, 0.714911, 0, 1.0};
Point(51) = {0.081601, 0.714045, 0, 1.0};
Point(52) = {0.092572, 0.713009, 0, 1.0};
Point(53) = {0.102982, 0.711814, 0, 1.0};
Point(54) = {0.112655, 0.710485, 0, 1.0};
Point(55) = {0.121422, 0.709053, 0, 1.0};
Point(56) = {0.129130, 0.707567, 0, 1.0};
Point(57) = {0.135637, 0.706082, 0, 1.0};
Point(58) = {0.140790, 0.704670, 0, 1.0};
Point(59) = {0.144466, 0.703479, 0, 1.0};
Point(60) = {0.146642, 0.702674, 0, 1.0};
Point(61) = {-0.147362, -0.702390, 0, 1.0};
Point(62) = {-0.146719, -0.702769, 0, 1.0};
Point(63) = {-0.144968, -0.703883, 0, 1.0};
Point(64) = {-0.142363, -0.705548, 0, 1.0};
Point(65) = {-0.138917, -0.707506, 0, 1.0};
Point(66) = {-0.134514, -0.709676, 0, 1.0};
Point(67) = {-0.129162, -0.712104, 0, 1.0};
Point(68) = {-0.122952, -0.714785, 0, 1.0};
Point(69) = {-0.115978, -0.717684, 0, 1.0};
Point(70) = {-0.108335, -0.720758, 0, 1.0};
Point(71) = {-0.100126, -0.723955, 0, 1.0};
Point(72) = {-0.091458, -0.727217, 0, 1.0};
Point(73) = {-0.082436, -0.730485, 0, 1.0};
Point(74) = {-0.073167, -0.733692, 0, 1.0};
Point(75) = {-0.063751, -0.736771, 0, 1.0};
Point(76) = {-0.054286, -0.739659, 0, 1.0};
Point(77) = {-0.044864, -0.742293, 0, 1.0};
Point(78) = {-0.035574, -0.744620, 0, 1.0};
Point(79) = {-0.026494, -0.746584, 0, 1.0};
Point(80) = {-0.017702, -0.748139, 0, 1.0};
Point(81) = {-0.009253, -0.749240, 0, 1.0};
Point(82) = {-0.001186, -0.749860, 0, 1.0};
Point(83) = {0.006464, -0.750000, 0, 1.0};
Point(84) = {0.013668, -0.749684, 0, 1.0};
Point(85) = {0.020384, -0.748958, 0, 1.0};
Point(86) = {0.026551, -0.747872, 0, 1.0};
Point(87) = {0.032117, -0.746474, 0, 1.0};
Point(88) = {0.037020, -0.744816, 0, 1.0};
Point(89) = {0.041212, -0.742946, 0, 1.0};
Point(90) = {0.044650, -0.740928, 0, 1.0};
Point(91) = {0.047290, -0.738824, 0, 1.0};
Point(92) = {0.049098, -0.736721, 0, 1.0};
Point(93) = {0.049999, -0.734761, 0, 1.0};
Point(94) = {0.049716, -0.732917, 0, 1.0};
Point(95) = {0.048226, -0.730980, 0, 1.0};
Point(96) = {0.045781, -0.728933, 0, 1.0};
Point(97) = {0.042434, -0.726898, 0, 1.0};
Point(98) = {0.038208, -0.724947, 0, 1.0};
Point(99) = {0.033124, -0.723138, 0, 1.0};
Point(100) = {0.027207, -0.721523, 0, 1.0};
Point(101) = {0.020475, -0.720147, 0, 1.0};
Point(102) = {0.012942, -0.719034, 0, 1.0};
Point(103) = {0.004621, -0.718190, 0, 1.0};
Point(104) = {-0.004463, -0.717586, 0, 1.0};
Point(105) = {-0.014271, -0.717172, 0, 1.0};
Point(106) = {-0.024746, -0.716865, 0, 1.0};
Point(107) = {-0.035762, -0.716547, 0, 1.0};
Point(108) = {-0.047140, -0.716142, 0, 1.0};
Point(109) = {-0.058698, -0.715606, 0, 1.0};
Point(110) = {-0.070248, -0.714911, 0, 1.0};
Point(111) = {-0.081601, -0.714045, 0, 1.0};
Point(112) = {-0.092572, -0.713009, 0, 1.0};
Point(113) = {-0.102982, -0.711814, 0, 1.0};
Point(114) = {-0.112655, -0.710485, 0, 1.0};
Point(115) = {-0.121422, -0.709053, 0, 1.0};
Point(116) = {-0.129130, -0.707567, 0, 1.0};
Point(117) = {-0.135637, -0.706082, 0, 1.0};
Point(118) = {-0.140790, -0.704670, 0, 1.0};
Point(119) = {-0.144466, -0.703479, 0, 1.0};
Point(120) = {-0.146642, -0.702674, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
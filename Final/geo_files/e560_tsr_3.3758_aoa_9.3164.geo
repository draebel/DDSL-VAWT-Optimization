SetFactory("OpenCASCADE");

Point(1) = {0.074011, 0.714292, 0, 1.0};
Point(2) = {0.073529, 0.714576, 0, 1.0};
Point(3) = {0.072216, 0.715412, 0, 1.0};
Point(4) = {0.070262, 0.716661, 0, 1.0};
Point(5) = {0.067678, 0.718129, 0, 1.0};
Point(6) = {0.064375, 0.719756, 0, 1.0};
Point(7) = {0.060362, 0.721578, 0, 1.0};
Point(8) = {0.055704, 0.723588, 0, 1.0};
Point(9) = {0.050473, 0.725763, 0, 1.0};
Point(10) = {0.044741, 0.728068, 0, 1.0};
Point(11) = {0.038584, 0.730466, 0, 1.0};
Point(12) = {0.032083, 0.732913, 0, 1.0};
Point(13) = {0.025316, 0.735364, 0, 1.0};
Point(14) = {0.018364, 0.737769, 0, 1.0};
Point(15) = {0.011303, 0.740078, 0, 1.0};
Point(16) = {0.004204, 0.742244, 0, 1.0};
Point(17) = {-0.002863, 0.744220, 0, 1.0};
Point(18) = {-0.009830, 0.745965, 0, 1.0};
Point(19) = {-0.016640, 0.747438, 0, 1.0};
Point(20) = {-0.023235, 0.748605, 0, 1.0};
Point(21) = {-0.029572, 0.749430, 0, 1.0};
Point(22) = {-0.035621, 0.749895, 0, 1.0};
Point(23) = {-0.041359, 0.750000, 0, 1.0};
Point(24) = {-0.046762, 0.749763, 0, 1.0};
Point(25) = {-0.051799, 0.749218, 0, 1.0};
Point(26) = {-0.056425, 0.748404, 0, 1.0};
Point(27) = {-0.060599, 0.747356, 0, 1.0};
Point(28) = {-0.064276, 0.746112, 0, 1.0};
Point(29) = {-0.067420, 0.744710, 0, 1.0};
Point(30) = {-0.069999, 0.743196, 0, 1.0};
Point(31) = {-0.071979, 0.741618, 0, 1.0};
Point(32) = {-0.073335, 0.740040, 0, 1.0};
Point(33) = {-0.074011, 0.738570, 0, 1.0};
Point(34) = {-0.073798, 0.737187, 0, 1.0};
Point(35) = {-0.072681, 0.735735, 0, 1.0};
Point(36) = {-0.070847, 0.734200, 0, 1.0};
Point(37) = {-0.068337, 0.732674, 0, 1.0};
Point(38) = {-0.065168, 0.731210, 0, 1.0};
Point(39) = {-0.061354, 0.729853, 0, 1.0};
Point(40) = {-0.056917, 0.728642, 0, 1.0};
Point(41) = {-0.051868, 0.727610, 0, 1.0};
Point(42) = {-0.046218, 0.726776, 0, 1.0};
Point(43) = {-0.039977, 0.726142, 0, 1.0};
Point(44) = {-0.033164, 0.725689, 0, 1.0};
Point(45) = {-0.025807, 0.725379, 0, 1.0};
Point(46) = {-0.017952, 0.725148, 0, 1.0};
Point(47) = {-0.009690, 0.724910, 0, 1.0};
Point(48) = {-0.001156, 0.724606, 0, 1.0};
Point(49) = {0.007513, 0.724204, 0, 1.0};
Point(50) = {0.016175, 0.723683, 0, 1.0};
Point(51) = {0.024691, 0.723034, 0, 1.0};
Point(52) = {0.032919, 0.722257, 0, 1.0};
Point(53) = {0.040726, 0.721361, 0, 1.0};
Point(54) = {0.047981, 0.720363, 0, 1.0};
Point(55) = {0.054557, 0.719289, 0, 1.0};
Point(56) = {0.060337, 0.718175, 0, 1.0};
Point(57) = {0.065218, 0.717061, 0, 1.0};
Point(58) = {0.069083, 0.716002, 0, 1.0};
Point(59) = {0.071839, 0.715109, 0, 1.0};
Point(60) = {0.073472, 0.714505, 0, 1.0};
Point(61) = {-0.074011, -0.714292, 0, 1.0};
Point(62) = {-0.073529, -0.714576, 0, 1.0};
Point(63) = {-0.072216, -0.715412, 0, 1.0};
Point(64) = {-0.070262, -0.716661, 0, 1.0};
Point(65) = {-0.067678, -0.718129, 0, 1.0};
Point(66) = {-0.064375, -0.719756, 0, 1.0};
Point(67) = {-0.060362, -0.721578, 0, 1.0};
Point(68) = {-0.055704, -0.723588, 0, 1.0};
Point(69) = {-0.050473, -0.725763, 0, 1.0};
Point(70) = {-0.044741, -0.728068, 0, 1.0};
Point(71) = {-0.038584, -0.730466, 0, 1.0};
Point(72) = {-0.032083, -0.732913, 0, 1.0};
Point(73) = {-0.025316, -0.735364, 0, 1.0};
Point(74) = {-0.018364, -0.737769, 0, 1.0};
Point(75) = {-0.011303, -0.740078, 0, 1.0};
Point(76) = {-0.004204, -0.742244, 0, 1.0};
Point(77) = {0.002863, -0.744220, 0, 1.0};
Point(78) = {0.009830, -0.745965, 0, 1.0};
Point(79) = {0.016640, -0.747438, 0, 1.0};
Point(80) = {0.023235, -0.748605, 0, 1.0};
Point(81) = {0.029572, -0.749430, 0, 1.0};
Point(82) = {0.035621, -0.749895, 0, 1.0};
Point(83) = {0.041359, -0.750000, 0, 1.0};
Point(84) = {0.046762, -0.749763, 0, 1.0};
Point(85) = {0.051799, -0.749218, 0, 1.0};
Point(86) = {0.056425, -0.748404, 0, 1.0};
Point(87) = {0.060599, -0.747356, 0, 1.0};
Point(88) = {0.064276, -0.746112, 0, 1.0};
Point(89) = {0.067420, -0.744710, 0, 1.0};
Point(90) = {0.069999, -0.743196, 0, 1.0};
Point(91) = {0.071979, -0.741618, 0, 1.0};
Point(92) = {0.073335, -0.740040, 0, 1.0};
Point(93) = {0.074011, -0.738570, 0, 1.0};
Point(94) = {0.073798, -0.737187, 0, 1.0};
Point(95) = {0.072681, -0.735735, 0, 1.0};
Point(96) = {0.070847, -0.734200, 0, 1.0};
Point(97) = {0.068337, -0.732674, 0, 1.0};
Point(98) = {0.065168, -0.731210, 0, 1.0};
Point(99) = {0.061354, -0.729853, 0, 1.0};
Point(100) = {0.056917, -0.728642, 0, 1.0};
Point(101) = {0.051868, -0.727610, 0, 1.0};
Point(102) = {0.046218, -0.726776, 0, 1.0};
Point(103) = {0.039977, -0.726142, 0, 1.0};
Point(104) = {0.033164, -0.725689, 0, 1.0};
Point(105) = {0.025807, -0.725379, 0, 1.0};
Point(106) = {0.017952, -0.725148, 0, 1.0};
Point(107) = {0.009690, -0.724910, 0, 1.0};
Point(108) = {0.001156, -0.724606, 0, 1.0};
Point(109) = {-0.007513, -0.724204, 0, 1.0};
Point(110) = {-0.016175, -0.723683, 0, 1.0};
Point(111) = {-0.024691, -0.723034, 0, 1.0};
Point(112) = {-0.032919, -0.722257, 0, 1.0};
Point(113) = {-0.040726, -0.721361, 0, 1.0};
Point(114) = {-0.047981, -0.720363, 0, 1.0};
Point(115) = {-0.054557, -0.719289, 0, 1.0};
Point(116) = {-0.060337, -0.718175, 0, 1.0};
Point(117) = {-0.065218, -0.717061, 0, 1.0};
Point(118) = {-0.069083, -0.716002, 0, 1.0};
Point(119) = {-0.071839, -0.715109, 0, 1.0};
Point(120) = {-0.073472, -0.714505, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
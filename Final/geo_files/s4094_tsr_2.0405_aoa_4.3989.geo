SetFactory("OpenCASCADE");

Point(1) = {0.112319, 0.732272, 0, 1.0};
Point(2) = {0.111818, 0.732330, 0, 1.0};
Point(3) = {0.110381, 0.732559, 0, 1.0};
Point(4) = {0.108111, 0.732982, 0, 1.0};
Point(5) = {0.105040, 0.733543, 0, 1.0};
Point(6) = {0.101184, 0.734239, 0, 1.0};
Point(7) = {0.096600, 0.735078, 0, 1.0};
Point(8) = {0.091353, 0.736051, 0, 1.0};
Point(9) = {0.085521, 0.737148, 0, 1.0};
Point(10) = {0.079181, 0.738349, 0, 1.0};
Point(11) = {0.072420, 0.739632, 0, 1.0};
Point(12) = {0.065326, 0.740973, 0, 1.0};
Point(13) = {0.057990, 0.742342, 0, 1.0};
Point(14) = {0.050504, 0.743706, 0, 1.0};
Point(15) = {0.042960, 0.745028, 0, 1.0};
Point(16) = {0.035449, 0.746264, 0, 1.0};
Point(17) = {0.028037, 0.747352, 0, 1.0};
Point(18) = {0.020770, 0.748267, 0, 1.0};
Point(19) = {0.013707, 0.749001, 0, 1.0};
Point(20) = {0.006915, 0.749542, 0, 1.0};
Point(21) = {0.000453, 0.749877, 0, 1.0};
Point(22) = {-0.005625, 0.750000, 0, 1.0};
Point(23) = {-0.011268, 0.749906, 0, 1.0};
Point(24) = {-0.016435, 0.749598, 0, 1.0};
Point(25) = {-0.021087, 0.749083, 0, 1.0};
Point(26) = {-0.025194, 0.748374, 0, 1.0};
Point(27) = {-0.028731, 0.747491, 0, 1.0};
Point(28) = {-0.031681, 0.746462, 0, 1.0};
Point(29) = {-0.034028, 0.745322, 0, 1.0};
Point(30) = {-0.035768, 0.744118, 0, 1.0};
Point(31) = {-0.036890, 0.742915, 0, 1.0};
Point(32) = {-0.037390, 0.741819, 0, 1.0};
Point(33) = {-0.037072, 0.740902, 0, 1.0};
Point(34) = {-0.035851, 0.740058, 0, 1.0};
Point(35) = {-0.033847, 0.739236, 0, 1.0};
Point(36) = {-0.031066, 0.738475, 0, 1.0};
Point(37) = {-0.027524, 0.737776, 0, 1.0};
Point(38) = {-0.023245, 0.737140, 0, 1.0};
Point(39) = {-0.018267, 0.736558, 0, 1.0};
Point(40) = {-0.012638, 0.736025, 0, 1.0};
Point(41) = {-0.006419, 0.735529, 0, 1.0};
Point(42) = {0.000319, 0.735065, 0, 1.0};
Point(43) = {0.007504, 0.734634, 0, 1.0};
Point(44) = {0.015066, 0.734227, 0, 1.0};
Point(45) = {0.022914, 0.733825, 0, 1.0};
Point(46) = {0.030951, 0.733420, 0, 1.0};
Point(47) = {0.039077, 0.733011, 0, 1.0};
Point(48) = {0.047192, 0.732597, 0, 1.0};
Point(49) = {0.055198, 0.732179, 0, 1.0};
Point(50) = {0.062999, 0.731761, 0, 1.0};
Point(51) = {0.070499, 0.731345, 0, 1.0};
Point(52) = {0.077608, 0.730935, 0, 1.0};
Point(53) = {0.084240, 0.730536, 0, 1.0};
Point(54) = {0.090313, 0.730154, 0, 1.0};
Point(55) = {0.095751, 0.729795, 0, 1.0};
Point(56) = {0.100486, 0.729468, 0, 1.0};
Point(57) = {0.104457, 0.729181, 0, 1.0};
Point(58) = {0.107615, 0.728954, 0, 1.0};
Point(59) = {0.109944, 0.728789, 0, 1.0};
Point(60) = {0.111402, 0.728646, 0, 1.0};
Point(61) = {0.111902, 0.728575, 0, 1.0};
Point(62) = {-0.112319, -0.732272, 0, 1.0};
Point(63) = {-0.111818, -0.732330, 0, 1.0};
Point(64) = {-0.110381, -0.732559, 0, 1.0};
Point(65) = {-0.108111, -0.732982, 0, 1.0};
Point(66) = {-0.105040, -0.733543, 0, 1.0};
Point(67) = {-0.101184, -0.734239, 0, 1.0};
Point(68) = {-0.096600, -0.735078, 0, 1.0};
Point(69) = {-0.091353, -0.736051, 0, 1.0};
Point(70) = {-0.085521, -0.737148, 0, 1.0};
Point(71) = {-0.079181, -0.738349, 0, 1.0};
Point(72) = {-0.072420, -0.739632, 0, 1.0};
Point(73) = {-0.065326, -0.740973, 0, 1.0};
Point(74) = {-0.057990, -0.742342, 0, 1.0};
Point(75) = {-0.050504, -0.743706, 0, 1.0};
Point(76) = {-0.042960, -0.745028, 0, 1.0};
Point(77) = {-0.035449, -0.746264, 0, 1.0};
Point(78) = {-0.028037, -0.747352, 0, 1.0};
Point(79) = {-0.020770, -0.748267, 0, 1.0};
Point(80) = {-0.013707, -0.749001, 0, 1.0};
Point(81) = {-0.006915, -0.749542, 0, 1.0};
Point(82) = {-0.000453, -0.749877, 0, 1.0};
Point(83) = {0.005625, -0.750000, 0, 1.0};
Point(84) = {0.011268, -0.749906, 0, 1.0};
Point(85) = {0.016435, -0.749598, 0, 1.0};
Point(86) = {0.021087, -0.749083, 0, 1.0};
Point(87) = {0.025194, -0.748374, 0, 1.0};
Point(88) = {0.028731, -0.747491, 0, 1.0};
Point(89) = {0.031681, -0.746462, 0, 1.0};
Point(90) = {0.034028, -0.745322, 0, 1.0};
Point(91) = {0.035768, -0.744118, 0, 1.0};
Point(92) = {0.036890, -0.742915, 0, 1.0};
Point(93) = {0.037390, -0.741819, 0, 1.0};
Point(94) = {0.037072, -0.740902, 0, 1.0};
Point(95) = {0.035851, -0.740058, 0, 1.0};
Point(96) = {0.033847, -0.739236, 0, 1.0};
Point(97) = {0.031066, -0.738475, 0, 1.0};
Point(98) = {0.027524, -0.737776, 0, 1.0};
Point(99) = {0.023245, -0.737140, 0, 1.0};
Point(100) = {0.018267, -0.736558, 0, 1.0};
Point(101) = {0.012638, -0.736025, 0, 1.0};
Point(102) = {0.006419, -0.735529, 0, 1.0};
Point(103) = {-0.000319, -0.735065, 0, 1.0};
Point(104) = {-0.007504, -0.734634, 0, 1.0};
Point(105) = {-0.015066, -0.734227, 0, 1.0};
Point(106) = {-0.022914, -0.733825, 0, 1.0};
Point(107) = {-0.030951, -0.733420, 0, 1.0};
Point(108) = {-0.039077, -0.733011, 0, 1.0};
Point(109) = {-0.047192, -0.732597, 0, 1.0};
Point(110) = {-0.055198, -0.732179, 0, 1.0};
Point(111) = {-0.062999, -0.731761, 0, 1.0};
Point(112) = {-0.070499, -0.731345, 0, 1.0};
Point(113) = {-0.077608, -0.730935, 0, 1.0};
Point(114) = {-0.084240, -0.730536, 0, 1.0};
Point(115) = {-0.090313, -0.730154, 0, 1.0};
Point(116) = {-0.095751, -0.729795, 0, 1.0};
Point(117) = {-0.100486, -0.729468, 0, 1.0};
Point(118) = {-0.104457, -0.729181, 0, 1.0};
Point(119) = {-0.107615, -0.728954, 0, 1.0};
Point(120) = {-0.109944, -0.728789, 0, 1.0};
Point(121) = {-0.111402, -0.728646, 0, 1.0};
Point(122) = {-0.111902, -0.728575, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112268, 0.732264, 0, 1.0};
Point(2) = {0.111767, 0.732322, 0, 1.0};
Point(3) = {0.110329, 0.732552, 0, 1.0};
Point(4) = {0.108058, 0.732975, 0, 1.0};
Point(5) = {0.104986, 0.733536, 0, 1.0};
Point(6) = {0.101129, 0.734232, 0, 1.0};
Point(7) = {0.096542, 0.735071, 0, 1.0};
Point(8) = {0.091294, 0.736045, 0, 1.0};
Point(9) = {0.085458, 0.737142, 0, 1.0};
Point(10) = {0.079116, 0.738344, 0, 1.0};
Point(11) = {0.072352, 0.739628, 0, 1.0};
Point(12) = {0.065255, 0.740970, 0, 1.0};
Point(13) = {0.057916, 0.742339, 0, 1.0};
Point(14) = {0.050427, 0.743703, 0, 1.0};
Point(15) = {0.042879, 0.745026, 0, 1.0};
Point(16) = {0.035365, 0.746262, 0, 1.0};
Point(17) = {0.027950, 0.747351, 0, 1.0};
Point(18) = {0.020680, 0.748266, 0, 1.0};
Point(19) = {0.013615, 0.749001, 0, 1.0};
Point(20) = {0.006819, 0.749542, 0, 1.0};
Point(21) = {0.000354, 0.749877, 0, 1.0};
Point(22) = {-0.005726, 0.750000, 0, 1.0};
Point(23) = {-0.011371, 0.749906, 0, 1.0};
Point(24) = {-0.016540, 0.749598, 0, 1.0};
Point(25) = {-0.021194, 0.749082, 0, 1.0};
Point(26) = {-0.025303, 0.748374, 0, 1.0};
Point(27) = {-0.028842, 0.747490, 0, 1.0};
Point(28) = {-0.031792, 0.746461, 0, 1.0};
Point(29) = {-0.034141, 0.745320, 0, 1.0};
Point(30) = {-0.035881, 0.744116, 0, 1.0};
Point(31) = {-0.037004, 0.742912, 0, 1.0};
Point(32) = {-0.037504, 0.741816, 0, 1.0};
Point(33) = {-0.037186, 0.740899, 0, 1.0};
Point(34) = {-0.035964, 0.740054, 0, 1.0};
Point(35) = {-0.033959, 0.739232, 0, 1.0};
Point(36) = {-0.031178, 0.738470, 0, 1.0};
Point(37) = {-0.027634, 0.737771, 0, 1.0};
Point(38) = {-0.023353, 0.737135, 0, 1.0};
Point(39) = {-0.018373, 0.736553, 0, 1.0};
Point(40) = {-0.012742, 0.736019, 0, 1.0};
Point(41) = {-0.006520, 0.735523, 0, 1.0};
Point(42) = {0.000221, 0.735058, 0, 1.0};
Point(43) = {0.007409, 0.734628, 0, 1.0};
Point(44) = {0.014974, 0.734221, 0, 1.0};
Point(45) = {0.022826, 0.733818, 0, 1.0};
Point(46) = {0.030866, 0.733413, 0, 1.0};
Point(47) = {0.038995, 0.733004, 0, 1.0};
Point(48) = {0.047113, 0.732590, 0, 1.0};
Point(49) = {0.055123, 0.732172, 0, 1.0};
Point(50) = {0.062927, 0.731753, 0, 1.0};
Point(51) = {0.070430, 0.731337, 0, 1.0};
Point(52) = {0.077543, 0.730927, 0, 1.0};
Point(53) = {0.084177, 0.730528, 0, 1.0};
Point(54) = {0.090252, 0.730146, 0, 1.0};
Point(55) = {0.095693, 0.729787, 0, 1.0};
Point(56) = {0.100430, 0.729459, 0, 1.0};
Point(57) = {0.104403, 0.729172, 0, 1.0};
Point(58) = {0.107562, 0.728945, 0, 1.0};
Point(59) = {0.109892, 0.728780, 0, 1.0};
Point(60) = {0.111350, 0.728637, 0, 1.0};
Point(61) = {0.111851, 0.728566, 0, 1.0};
Point(62) = {-0.112268, -0.732264, 0, 1.0};
Point(63) = {-0.111767, -0.732322, 0, 1.0};
Point(64) = {-0.110329, -0.732552, 0, 1.0};
Point(65) = {-0.108058, -0.732975, 0, 1.0};
Point(66) = {-0.104986, -0.733536, 0, 1.0};
Point(67) = {-0.101129, -0.734232, 0, 1.0};
Point(68) = {-0.096542, -0.735071, 0, 1.0};
Point(69) = {-0.091294, -0.736045, 0, 1.0};
Point(70) = {-0.085458, -0.737142, 0, 1.0};
Point(71) = {-0.079116, -0.738344, 0, 1.0};
Point(72) = {-0.072352, -0.739628, 0, 1.0};
Point(73) = {-0.065255, -0.740970, 0, 1.0};
Point(74) = {-0.057916, -0.742339, 0, 1.0};
Point(75) = {-0.050427, -0.743703, 0, 1.0};
Point(76) = {-0.042879, -0.745026, 0, 1.0};
Point(77) = {-0.035365, -0.746262, 0, 1.0};
Point(78) = {-0.027950, -0.747351, 0, 1.0};
Point(79) = {-0.020680, -0.748266, 0, 1.0};
Point(80) = {-0.013615, -0.749001, 0, 1.0};
Point(81) = {-0.006819, -0.749542, 0, 1.0};
Point(82) = {-0.000354, -0.749877, 0, 1.0};
Point(83) = {0.005726, -0.750000, 0, 1.0};
Point(84) = {0.011371, -0.749906, 0, 1.0};
Point(85) = {0.016540, -0.749598, 0, 1.0};
Point(86) = {0.021194, -0.749082, 0, 1.0};
Point(87) = {0.025303, -0.748374, 0, 1.0};
Point(88) = {0.028842, -0.747490, 0, 1.0};
Point(89) = {0.031792, -0.746461, 0, 1.0};
Point(90) = {0.034141, -0.745320, 0, 1.0};
Point(91) = {0.035881, -0.744116, 0, 1.0};
Point(92) = {0.037004, -0.742912, 0, 1.0};
Point(93) = {0.037504, -0.741816, 0, 1.0};
Point(94) = {0.037186, -0.740899, 0, 1.0};
Point(95) = {0.035964, -0.740054, 0, 1.0};
Point(96) = {0.033959, -0.739232, 0, 1.0};
Point(97) = {0.031178, -0.738470, 0, 1.0};
Point(98) = {0.027634, -0.737771, 0, 1.0};
Point(99) = {0.023353, -0.737135, 0, 1.0};
Point(100) = {0.018373, -0.736553, 0, 1.0};
Point(101) = {0.012742, -0.736019, 0, 1.0};
Point(102) = {0.006520, -0.735523, 0, 1.0};
Point(103) = {-0.000221, -0.735058, 0, 1.0};
Point(104) = {-0.007409, -0.734628, 0, 1.0};
Point(105) = {-0.014974, -0.734221, 0, 1.0};
Point(106) = {-0.022826, -0.733818, 0, 1.0};
Point(107) = {-0.030866, -0.733413, 0, 1.0};
Point(108) = {-0.038995, -0.733004, 0, 1.0};
Point(109) = {-0.047113, -0.732590, 0, 1.0};
Point(110) = {-0.055123, -0.732172, 0, 1.0};
Point(111) = {-0.062927, -0.731753, 0, 1.0};
Point(112) = {-0.070430, -0.731337, 0, 1.0};
Point(113) = {-0.077543, -0.730927, 0, 1.0};
Point(114) = {-0.084177, -0.730528, 0, 1.0};
Point(115) = {-0.090252, -0.730146, 0, 1.0};
Point(116) = {-0.095693, -0.729787, 0, 1.0};
Point(117) = {-0.100430, -0.729459, 0, 1.0};
Point(118) = {-0.104403, -0.729172, 0, 1.0};
Point(119) = {-0.107562, -0.728945, 0, 1.0};
Point(120) = {-0.109892, -0.728780, 0, 1.0};
Point(121) = {-0.111350, -0.728637, 0, 1.0};
Point(122) = {-0.111851, -0.728566, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
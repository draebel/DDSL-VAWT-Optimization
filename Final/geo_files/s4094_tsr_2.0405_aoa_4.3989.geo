SetFactory("OpenCASCADE");

Point(1) = {0.112446, 0.732257, 0, 1.0};
Point(2) = {0.111944, 0.732315, 0, 1.0};
Point(3) = {0.110506, 0.732544, 0, 1.0};
Point(4) = {0.108234, 0.732968, 0, 1.0};
Point(5) = {0.105160, 0.733529, 0, 1.0};
Point(6) = {0.101301, 0.734225, 0, 1.0};
Point(7) = {0.096713, 0.735065, 0, 1.0};
Point(8) = {0.091462, 0.736040, 0, 1.0};
Point(9) = {0.085624, 0.737137, 0, 1.0};
Point(10) = {0.079279, 0.738339, 0, 1.0};
Point(11) = {0.072513, 0.739624, 0, 1.0};
Point(12) = {0.065413, 0.740966, 0, 1.0};
Point(13) = {0.058071, 0.742336, 0, 1.0};
Point(14) = {0.050578, 0.743701, 0, 1.0};
Point(15) = {0.043027, 0.745023, 0, 1.0};
Point(16) = {0.035510, 0.746261, 0, 1.0};
Point(17) = {0.028092, 0.747350, 0, 1.0};
Point(18) = {0.020819, 0.748265, 0, 1.0};
Point(19) = {0.013750, 0.749000, 0, 1.0};
Point(20) = {0.006952, 0.749542, 0, 1.0};
Point(21) = {0.000485, 0.749877, 0, 1.0};
Point(22) = {-0.005598, 0.750000, 0, 1.0};
Point(23) = {-0.011246, 0.749906, 0, 1.0};
Point(24) = {-0.016417, 0.749598, 0, 1.0};
Point(25) = {-0.021073, 0.749082, 0, 1.0};
Point(26) = {-0.025184, 0.748373, 0, 1.0};
Point(27) = {-0.028724, 0.747489, 0, 1.0};
Point(28) = {-0.031676, 0.746459, 0, 1.0};
Point(29) = {-0.034025, 0.745318, 0, 1.0};
Point(30) = {-0.035767, 0.744113, 0, 1.0};
Point(31) = {-0.036889, 0.742909, 0, 1.0};
Point(32) = {-0.037390, 0.741812, 0, 1.0};
Point(33) = {-0.037072, 0.740895, 0, 1.0};
Point(34) = {-0.035850, 0.740049, 0, 1.0};
Point(35) = {-0.033844, 0.739227, 0, 1.0};
Point(36) = {-0.031061, 0.738465, 0, 1.0};
Point(37) = {-0.027516, 0.737766, 0, 1.0};
Point(38) = {-0.023233, 0.737129, 0, 1.0};
Point(39) = {-0.018251, 0.736547, 0, 1.0};
Point(40) = {-0.012617, 0.736013, 0, 1.0};
Point(41) = {-0.006393, 0.735517, 0, 1.0};
Point(42) = {0.000351, 0.735052, 0, 1.0};
Point(43) = {0.007542, 0.734621, 0, 1.0};
Point(44) = {0.015110, 0.734214, 0, 1.0};
Point(45) = {0.022965, 0.733811, 0, 1.0};
Point(46) = {0.031009, 0.733406, 0, 1.0};
Point(47) = {0.039141, 0.732997, 0, 1.0};
Point(48) = {0.047263, 0.732582, 0, 1.0};
Point(49) = {0.055276, 0.732164, 0, 1.0};
Point(50) = {0.063083, 0.731746, 0, 1.0};
Point(51) = {0.070590, 0.731329, 0, 1.0};
Point(52) = {0.077705, 0.730919, 0, 1.0};
Point(53) = {0.084343, 0.730519, 0, 1.0};
Point(54) = {0.090421, 0.730137, 0, 1.0};
Point(55) = {0.095864, 0.729778, 0, 1.0};
Point(56) = {0.100603, 0.729451, 0, 1.0};
Point(57) = {0.104577, 0.729164, 0, 1.0};
Point(58) = {0.107737, 0.728936, 0, 1.0};
Point(59) = {0.110068, 0.728771, 0, 1.0};
Point(60) = {0.111527, 0.728628, 0, 1.0};
Point(61) = {0.112028, 0.728557, 0, 1.0};
Point(62) = {-0.112446, -0.732257, 0, 1.0};
Point(63) = {-0.111944, -0.732315, 0, 1.0};
Point(64) = {-0.110506, -0.732544, 0, 1.0};
Point(65) = {-0.108234, -0.732968, 0, 1.0};
Point(66) = {-0.105160, -0.733529, 0, 1.0};
Point(67) = {-0.101301, -0.734225, 0, 1.0};
Point(68) = {-0.096713, -0.735065, 0, 1.0};
Point(69) = {-0.091462, -0.736040, 0, 1.0};
Point(70) = {-0.085624, -0.737137, 0, 1.0};
Point(71) = {-0.079279, -0.738339, 0, 1.0};
Point(72) = {-0.072513, -0.739624, 0, 1.0};
Point(73) = {-0.065413, -0.740966, 0, 1.0};
Point(74) = {-0.058071, -0.742336, 0, 1.0};
Point(75) = {-0.050578, -0.743701, 0, 1.0};
Point(76) = {-0.043027, -0.745023, 0, 1.0};
Point(77) = {-0.035510, -0.746261, 0, 1.0};
Point(78) = {-0.028092, -0.747350, 0, 1.0};
Point(79) = {-0.020819, -0.748265, 0, 1.0};
Point(80) = {-0.013750, -0.749000, 0, 1.0};
Point(81) = {-0.006952, -0.749542, 0, 1.0};
Point(82) = {-0.000485, -0.749877, 0, 1.0};
Point(83) = {0.005598, -0.750000, 0, 1.0};
Point(84) = {0.011246, -0.749906, 0, 1.0};
Point(85) = {0.016417, -0.749598, 0, 1.0};
Point(86) = {0.021073, -0.749082, 0, 1.0};
Point(87) = {0.025184, -0.748373, 0, 1.0};
Point(88) = {0.028724, -0.747489, 0, 1.0};
Point(89) = {0.031676, -0.746459, 0, 1.0};
Point(90) = {0.034025, -0.745318, 0, 1.0};
Point(91) = {0.035767, -0.744113, 0, 1.0};
Point(92) = {0.036889, -0.742909, 0, 1.0};
Point(93) = {0.037390, -0.741812, 0, 1.0};
Point(94) = {0.037072, -0.740895, 0, 1.0};
Point(95) = {0.035850, -0.740049, 0, 1.0};
Point(96) = {0.033844, -0.739227, 0, 1.0};
Point(97) = {0.031061, -0.738465, 0, 1.0};
Point(98) = {0.027516, -0.737766, 0, 1.0};
Point(99) = {0.023233, -0.737129, 0, 1.0};
Point(100) = {0.018251, -0.736547, 0, 1.0};
Point(101) = {0.012617, -0.736013, 0, 1.0};
Point(102) = {0.006393, -0.735517, 0, 1.0};
Point(103) = {-0.000351, -0.735052, 0, 1.0};
Point(104) = {-0.007542, -0.734621, 0, 1.0};
Point(105) = {-0.015110, -0.734214, 0, 1.0};
Point(106) = {-0.022965, -0.733811, 0, 1.0};
Point(107) = {-0.031009, -0.733406, 0, 1.0};
Point(108) = {-0.039141, -0.732997, 0, 1.0};
Point(109) = {-0.047263, -0.732582, 0, 1.0};
Point(110) = {-0.055276, -0.732164, 0, 1.0};
Point(111) = {-0.063083, -0.731746, 0, 1.0};
Point(112) = {-0.070590, -0.731329, 0, 1.0};
Point(113) = {-0.077705, -0.730919, 0, 1.0};
Point(114) = {-0.084343, -0.730519, 0, 1.0};
Point(115) = {-0.090421, -0.730137, 0, 1.0};
Point(116) = {-0.095864, -0.729778, 0, 1.0};
Point(117) = {-0.100603, -0.729451, 0, 1.0};
Point(118) = {-0.104577, -0.729164, 0, 1.0};
Point(119) = {-0.107737, -0.728936, 0, 1.0};
Point(120) = {-0.110068, -0.728771, 0, 1.0};
Point(121) = {-0.111527, -0.728628, 0, 1.0};
Point(122) = {-0.112028, -0.728557, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
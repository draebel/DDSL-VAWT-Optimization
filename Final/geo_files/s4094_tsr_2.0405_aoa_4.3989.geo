SetFactory("OpenCASCADE");

Point(1) = {0.149691, 0.726353, 0, 1.0};
Point(2) = {0.149023, 0.726429, 0, 1.0};
Point(3) = {0.147106, 0.726736, 0, 1.0};
Point(4) = {0.144078, 0.727300, 0, 1.0};
Point(5) = {0.139981, 0.728048, 0, 1.0};
Point(6) = {0.134838, 0.728976, 0, 1.0};
Point(7) = {0.128723, 0.730095, 0, 1.0};
Point(8) = {0.121725, 0.731394, 0, 1.0};
Point(9) = {0.113944, 0.732856, 0, 1.0};
Point(10) = {0.105488, 0.734458, 0, 1.0};
Point(11) = {0.096469, 0.736171, 0, 1.0};
Point(12) = {0.087007, 0.737959, 0, 1.0};
Point(13) = {0.077222, 0.739785, 0, 1.0};
Point(14) = {0.067236, 0.741604, 0, 1.0};
Point(15) = {0.057172, 0.743367, 0, 1.0};
Point(16) = {0.047154, 0.745016, 0, 1.0};
Point(17) = {0.037267, 0.746468, 0, 1.0};
Point(18) = {0.027574, 0.747688, 0, 1.0};
Point(19) = {0.018153, 0.748668, 0, 1.0};
Point(20) = {0.009093, 0.749389, 0, 1.0};
Point(21) = {0.000473, 0.749837, 0, 1.0};
Point(22) = {-0.007634, 0.750000, 0, 1.0};
Point(23) = {-0.015162, 0.749875, 0, 1.0};
Point(24) = {-0.022053, 0.749464, 0, 1.0};
Point(25) = {-0.028259, 0.748777, 0, 1.0};
Point(26) = {-0.033738, 0.747831, 0, 1.0};
Point(27) = {-0.038455, 0.746654, 0, 1.0};
Point(28) = {-0.042390, 0.745281, 0, 1.0};
Point(29) = {-0.045521, 0.743760, 0, 1.0};
Point(30) = {-0.047842, 0.742155, 0, 1.0};
Point(31) = {-0.049338, 0.740549, 0, 1.0};
Point(32) = {-0.050005, 0.739087, 0, 1.0};
Point(33) = {-0.049581, 0.737865, 0, 1.0};
Point(34) = {-0.047952, 0.736738, 0, 1.0};
Point(35) = {-0.045279, 0.735642, 0, 1.0};
Point(36) = {-0.041570, 0.734626, 0, 1.0};
Point(37) = {-0.036846, 0.733695, 0, 1.0};
Point(38) = {-0.031137, 0.732847, 0, 1.0};
Point(39) = {-0.024497, 0.732070, 0, 1.0};
Point(40) = {-0.016989, 0.731358, 0, 1.0};
Point(41) = {-0.008694, 0.730697, 0, 1.0};
Point(42) = {0.000294, 0.730078, 0, 1.0};
Point(43) = {0.009879, 0.729504, 0, 1.0};
Point(44) = {0.019965, 0.728961, 0, 1.0};
Point(45) = {0.030434, 0.728424, 0, 1.0};
Point(46) = {0.041154, 0.727884, 0, 1.0};
Point(47) = {0.051993, 0.727338, 0, 1.0};
Point(48) = {0.062818, 0.726786, 0, 1.0};
Point(49) = {0.073497, 0.726229, 0, 1.0};
Point(50) = {0.083903, 0.725671, 0, 1.0};
Point(51) = {0.093907, 0.725116, 0, 1.0};
Point(52) = {0.103390, 0.724569, 0, 1.0};
Point(53) = {0.112236, 0.724037, 0, 1.0};
Point(54) = {0.120337, 0.723528, 0, 1.0};
Point(55) = {0.127591, 0.723049, 0, 1.0};
Point(56) = {0.133907, 0.722612, 0, 1.0};
Point(57) = {0.139204, 0.722230, 0, 1.0};
Point(58) = {0.143416, 0.721927, 0, 1.0};
Point(59) = {0.146523, 0.721706, 0, 1.0};
Point(60) = {0.148467, 0.721516, 0, 1.0};
Point(61) = {0.149135, 0.721421, 0, 1.0};
Point(62) = {-0.149691, -0.726353, 0, 1.0};
Point(63) = {-0.149023, -0.726429, 0, 1.0};
Point(64) = {-0.147106, -0.726736, 0, 1.0};
Point(65) = {-0.144078, -0.727300, 0, 1.0};
Point(66) = {-0.139981, -0.728048, 0, 1.0};
Point(67) = {-0.134838, -0.728976, 0, 1.0};
Point(68) = {-0.128723, -0.730095, 0, 1.0};
Point(69) = {-0.121725, -0.731394, 0, 1.0};
Point(70) = {-0.113944, -0.732856, 0, 1.0};
Point(71) = {-0.105488, -0.734458, 0, 1.0};
Point(72) = {-0.096469, -0.736171, 0, 1.0};
Point(73) = {-0.087007, -0.737959, 0, 1.0};
Point(74) = {-0.077222, -0.739785, 0, 1.0};
Point(75) = {-0.067236, -0.741604, 0, 1.0};
Point(76) = {-0.057172, -0.743367, 0, 1.0};
Point(77) = {-0.047154, -0.745016, 0, 1.0};
Point(78) = {-0.037267, -0.746468, 0, 1.0};
Point(79) = {-0.027574, -0.747688, 0, 1.0};
Point(80) = {-0.018153, -0.748668, 0, 1.0};
Point(81) = {-0.009093, -0.749389, 0, 1.0};
Point(82) = {-0.000473, -0.749837, 0, 1.0};
Point(83) = {0.007634, -0.750000, 0, 1.0};
Point(84) = {0.015162, -0.749875, 0, 1.0};
Point(85) = {0.022053, -0.749464, 0, 1.0};
Point(86) = {0.028259, -0.748777, 0, 1.0};
Point(87) = {0.033738, -0.747831, 0, 1.0};
Point(88) = {0.038455, -0.746654, 0, 1.0};
Point(89) = {0.042390, -0.745281, 0, 1.0};
Point(90) = {0.045521, -0.743760, 0, 1.0};
Point(91) = {0.047842, -0.742155, 0, 1.0};
Point(92) = {0.049338, -0.740549, 0, 1.0};
Point(93) = {0.050005, -0.739087, 0, 1.0};
Point(94) = {0.049581, -0.737865, 0, 1.0};
Point(95) = {0.047952, -0.736738, 0, 1.0};
Point(96) = {0.045279, -0.735642, 0, 1.0};
Point(97) = {0.041570, -0.734626, 0, 1.0};
Point(98) = {0.036846, -0.733695, 0, 1.0};
Point(99) = {0.031137, -0.732847, 0, 1.0};
Point(100) = {0.024497, -0.732070, 0, 1.0};
Point(101) = {0.016989, -0.731358, 0, 1.0};
Point(102) = {0.008694, -0.730697, 0, 1.0};
Point(103) = {-0.000294, -0.730078, 0, 1.0};
Point(104) = {-0.009879, -0.729504, 0, 1.0};
Point(105) = {-0.019965, -0.728961, 0, 1.0};
Point(106) = {-0.030434, -0.728424, 0, 1.0};
Point(107) = {-0.041154, -0.727884, 0, 1.0};
Point(108) = {-0.051993, -0.727338, 0, 1.0};
Point(109) = {-0.062818, -0.726786, 0, 1.0};
Point(110) = {-0.073497, -0.726229, 0, 1.0};
Point(111) = {-0.083903, -0.725671, 0, 1.0};
Point(112) = {-0.093907, -0.725116, 0, 1.0};
Point(113) = {-0.103390, -0.724569, 0, 1.0};
Point(114) = {-0.112236, -0.724037, 0, 1.0};
Point(115) = {-0.120337, -0.723528, 0, 1.0};
Point(116) = {-0.127591, -0.723049, 0, 1.0};
Point(117) = {-0.133907, -0.722612, 0, 1.0};
Point(118) = {-0.139204, -0.722230, 0, 1.0};
Point(119) = {-0.143416, -0.721927, 0, 1.0};
Point(120) = {-0.146523, -0.721706, 0, 1.0};
Point(121) = {-0.148467, -0.721516, 0, 1.0};
Point(122) = {-0.149135, -0.721421, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
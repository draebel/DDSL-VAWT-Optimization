SetFactory("OpenCASCADE");

Point(1) = {0.147704, 0.708818, 0, 1.0};
Point(2) = {0.147070, 0.709114, 0, 1.0};
Point(3) = {0.145274, 0.710052, 0, 1.0};
Point(4) = {0.142528, 0.711598, 0, 1.0};
Point(5) = {0.138993, 0.713596, 0, 1.0};
Point(6) = {0.134724, 0.715849, 0, 1.0};
Point(7) = {0.129674, 0.718203, 0, 1.0};
Point(8) = {0.123765, 0.720651, 0, 1.0};
Point(9) = {0.117060, 0.723233, 0, 1.0};
Point(10) = {0.109655, 0.725931, 0, 1.0};
Point(11) = {0.101648, 0.728713, 0, 1.0};
Point(12) = {0.093143, 0.731538, 0, 1.0};
Point(13) = {0.084248, 0.734360, 0, 1.0};
Point(14) = {0.075072, 0.737127, 0, 1.0};
Point(15) = {0.065727, 0.739781, 0, 1.0};
Point(16) = {0.056319, 0.742263, 0, 1.0};
Point(17) = {0.046952, 0.744504, 0, 1.0};
Point(18) = {0.037725, 0.746427, 0, 1.0};
Point(19) = {0.028691, 0.747898, 0, 1.0};
Point(20) = {0.019760, 0.748923, 0, 1.0};
Point(21) = {0.011010, 0.749597, 0, 1.0};
Point(22) = {0.002543, 0.749949, 0, 1.0};
Point(23) = {-0.005548, 0.750000, 0, 1.0};
Point(24) = {-0.013174, 0.749769, 0, 1.0};
Point(25) = {-0.020252, 0.749272, 0, 1.0};
Point(26) = {-0.026706, 0.748529, 0, 1.0};
Point(27) = {-0.032467, 0.747559, 0, 1.0};
Point(28) = {-0.037483, 0.746388, 0, 1.0};
Point(29) = {-0.041698, 0.745045, 0, 1.0};
Point(30) = {-0.045090, 0.743570, 0, 1.0};
Point(31) = {-0.047612, 0.742017, 0, 1.0};
Point(32) = {-0.049267, 0.740455, 0, 1.0};
Point(33) = {-0.049917, 0.739355, 0, 1.0};
Point(34) = {-0.049997, 0.739053, 0, 1.0};
Point(35) = {-0.050000, 0.739034, 0, 1.0};
Point(36) = {-0.050004, 0.738747, 0, 1.0};
Point(37) = {-0.049894, 0.738472, 0, 1.0};
Point(38) = {-0.049693, 0.738178, 0, 1.0};
Point(39) = {-0.049433, 0.737889, 0, 1.0};
Point(40) = {-0.047616, 0.736576, 0, 1.0};
Point(41) = {-0.044689, 0.735152, 0, 1.0};
Point(42) = {-0.040719, 0.733653, 0, 1.0};
Point(43) = {-0.035732, 0.732084, 0, 1.0};
Point(44) = {-0.029802, 0.730439, 0, 1.0};
Point(45) = {-0.022995, 0.728690, 0, 1.0};
Point(46) = {-0.015485, 0.726731, 0, 1.0};
Point(47) = {-0.007658, 0.724741, 0, 1.0};
Point(48) = {0.000473, 0.723070, 0, 1.0};
Point(49) = {0.009067, 0.721786, 0, 1.0};
Point(50) = {0.018065, 0.720926, 0, 1.0};
Point(51) = {0.027623, 0.720529, 0, 1.0};
Point(52) = {0.037725, 0.720437, 0, 1.0};
Point(53) = {0.048352, 0.720539, 0, 1.0};
Point(54) = {0.059402, 0.720640, 0, 1.0};
Point(55) = {0.070673, 0.720600, 0, 1.0};
Point(56) = {0.081946, 0.720328, 0, 1.0};
Point(57) = {0.092992, 0.719768, 0, 1.0};
Point(58) = {0.103576, 0.718895, 0, 1.0};
Point(59) = {0.113468, 0.717715, 0, 1.0};
Point(60) = {0.122449, 0.716256, 0, 1.0};
Point(61) = {0.130283, 0.714559, 0, 1.0};
Point(62) = {0.136717, 0.712779, 0, 1.0};
Point(63) = {0.141636, 0.711154, 0, 1.0};
Point(64) = {0.145056, 0.709885, 0, 1.0};
Point(65) = {0.147052, 0.709089, 0, 1.0};
Point(66) = {-0.147704, -0.708818, 0, 1.0};
Point(67) = {-0.147070, -0.709114, 0, 1.0};
Point(68) = {-0.145274, -0.710052, 0, 1.0};
Point(69) = {-0.142528, -0.711598, 0, 1.0};
Point(70) = {-0.138993, -0.713596, 0, 1.0};
Point(71) = {-0.134724, -0.715849, 0, 1.0};
Point(72) = {-0.129674, -0.718203, 0, 1.0};
Point(73) = {-0.123765, -0.720651, 0, 1.0};
Point(74) = {-0.117060, -0.723233, 0, 1.0};
Point(75) = {-0.109655, -0.725931, 0, 1.0};
Point(76) = {-0.101648, -0.728713, 0, 1.0};
Point(77) = {-0.093143, -0.731538, 0, 1.0};
Point(78) = {-0.084248, -0.734360, 0, 1.0};
Point(79) = {-0.075072, -0.737127, 0, 1.0};
Point(80) = {-0.065727, -0.739781, 0, 1.0};
Point(81) = {-0.056319, -0.742263, 0, 1.0};
Point(82) = {-0.046952, -0.744504, 0, 1.0};
Point(83) = {-0.037725, -0.746427, 0, 1.0};
Point(84) = {-0.028691, -0.747898, 0, 1.0};
Point(85) = {-0.019760, -0.748923, 0, 1.0};
Point(86) = {-0.011010, -0.749597, 0, 1.0};
Point(87) = {-0.002543, -0.749949, 0, 1.0};
Point(88) = {0.005548, -0.750000, 0, 1.0};
Point(89) = {0.013174, -0.749769, 0, 1.0};
Point(90) = {0.020252, -0.749272, 0, 1.0};
Point(91) = {0.026706, -0.748529, 0, 1.0};
Point(92) = {0.032467, -0.747559, 0, 1.0};
Point(93) = {0.037483, -0.746388, 0, 1.0};
Point(94) = {0.041698, -0.745045, 0, 1.0};
Point(95) = {0.045090, -0.743570, 0, 1.0};
Point(96) = {0.047612, -0.742017, 0, 1.0};
Point(97) = {0.049267, -0.740455, 0, 1.0};
Point(98) = {0.049917, -0.739355, 0, 1.0};
Point(99) = {0.049997, -0.739053, 0, 1.0};
Point(100) = {0.050000, -0.739034, 0, 1.0};
Point(101) = {0.050004, -0.738747, 0, 1.0};
Point(102) = {0.049894, -0.738472, 0, 1.0};
Point(103) = {0.049693, -0.738178, 0, 1.0};
Point(104) = {0.049433, -0.737889, 0, 1.0};
Point(105) = {0.047616, -0.736576, 0, 1.0};
Point(106) = {0.044689, -0.735152, 0, 1.0};
Point(107) = {0.040719, -0.733653, 0, 1.0};
Point(108) = {0.035732, -0.732084, 0, 1.0};
Point(109) = {0.029802, -0.730439, 0, 1.0};
Point(110) = {0.022995, -0.728690, 0, 1.0};
Point(111) = {0.015485, -0.726731, 0, 1.0};
Point(112) = {0.007658, -0.724741, 0, 1.0};
Point(113) = {-0.000473, -0.723070, 0, 1.0};
Point(114) = {-0.009067, -0.721786, 0, 1.0};
Point(115) = {-0.018065, -0.720926, 0, 1.0};
Point(116) = {-0.027623, -0.720529, 0, 1.0};
Point(117) = {-0.037725, -0.720437, 0, 1.0};
Point(118) = {-0.048352, -0.720539, 0, 1.0};
Point(119) = {-0.059402, -0.720640, 0, 1.0};
Point(120) = {-0.070673, -0.720600, 0, 1.0};
Point(121) = {-0.081946, -0.720328, 0, 1.0};
Point(122) = {-0.092992, -0.719768, 0, 1.0};
Point(123) = {-0.103576, -0.718895, 0, 1.0};
Point(124) = {-0.113468, -0.717715, 0, 1.0};
Point(125) = {-0.122449, -0.716256, 0, 1.0};
Point(126) = {-0.130283, -0.714559, 0, 1.0};
Point(127) = {-0.136717, -0.712779, 0, 1.0};
Point(128) = {-0.141636, -0.711154, 0, 1.0};
Point(129) = {-0.145056, -0.709885, 0, 1.0};
Point(130) = {-0.147052, -0.709089, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:48};
Spline(3) = {48:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:113};
Spline(7) = {113:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074280, 0.750000, 0, 1.0};
Point(2) = {0.072111, 0.749859, 0, 1.0};
Point(3) = {0.069036, 0.749655, 0, 1.0};
Point(4) = {0.065686, 0.749431, 0, 1.0};
Point(5) = {0.062076, 0.749190, 0, 1.0};
Point(6) = {0.058221, 0.748937, 0, 1.0};
Point(7) = {0.054137, 0.748683, 0, 1.0};
Point(8) = {0.049841, 0.748434, 0, 1.0};
Point(9) = {0.045347, 0.748200, 0, 1.0};
Point(10) = {0.040677, 0.747986, 0, 1.0};
Point(11) = {0.035851, 0.747793, 0, 1.0};
Point(12) = {0.030888, 0.747626, 0, 1.0};
Point(13) = {0.025810, 0.747480, 0, 1.0};
Point(14) = {0.020641, 0.747347, 0, 1.0};
Point(15) = {0.015402, 0.747211, 0, 1.0};
Point(16) = {0.010123, 0.747045, 0, 1.0};
Point(17) = {0.004828, 0.746833, 0, 1.0};
Point(18) = {-0.000460, 0.746564, 0, 1.0};
Point(19) = {-0.005718, 0.746230, 0, 1.0};
Point(20) = {-0.010923, 0.745840, 0, 1.0};
Point(21) = {-0.016052, 0.745395, 0, 1.0};
Point(22) = {-0.021085, 0.744902, 0, 1.0};
Point(23) = {-0.025999, 0.744356, 0, 1.0};
Point(24) = {-0.030771, 0.743749, 0, 1.0};
Point(25) = {-0.035384, 0.743092, 0, 1.0};
Point(26) = {-0.039817, 0.742395, 0, 1.0};
Point(27) = {-0.044051, 0.741668, 0, 1.0};
Point(28) = {-0.048070, 0.740908, 0, 1.0};
Point(29) = {-0.051855, 0.740119, 0, 1.0};
Point(30) = {-0.055390, 0.739299, 0, 1.0};
Point(31) = {-0.058660, 0.738456, 0, 1.0};
Point(32) = {-0.061649, 0.737591, 0, 1.0};
Point(33) = {-0.064347, 0.736709, 0, 1.0};
Point(34) = {-0.066743, 0.735815, 0, 1.0};
Point(35) = {-0.068825, 0.734920, 0, 1.0};
Point(36) = {-0.070586, 0.734032, 0, 1.0};
Point(37) = {-0.072019, 0.733164, 0, 1.0};
Point(38) = {-0.073117, 0.732304, 0, 1.0};
Point(39) = {-0.073875, 0.731460, 0, 1.0};
Point(40) = {-0.074295, 0.730674, 0, 1.0};
Point(41) = {-0.074377, 0.729957, 0, 1.0};
Point(42) = {-0.074115, 0.729285, 0, 1.0};
Point(43) = {-0.073508, 0.728633, 0, 1.0};
Point(44) = {-0.072560, 0.728010, 0, 1.0};
Point(45) = {-0.071278, 0.727458, 0, 1.0};
Point(46) = {-0.069672, 0.726985, 0, 1.0};
Point(47) = {-0.067742, 0.726576, 0, 1.0};
Point(48) = {-0.065501, 0.726241, 0, 1.0};
Point(49) = {-0.062957, 0.725989, 0, 1.0};
Point(50) = {-0.060122, 0.725824, 0, 1.0};
Point(51) = {-0.057012, 0.725751, 0, 1.0};
Point(52) = {-0.053635, 0.725771, 0, 1.0};
Point(53) = {-0.050007, 0.725880, 0, 1.0};
Point(54) = {-0.046146, 0.726083, 0, 1.0};
Point(55) = {-0.042067, 0.726373, 0, 1.0};
Point(56) = {-0.037787, 0.726751, 0, 1.0};
Point(57) = {-0.033323, 0.727208, 0, 1.0};
Point(58) = {-0.028695, 0.727750, 0, 1.0};
Point(59) = {-0.023926, 0.728382, 0, 1.0};
Point(60) = {-0.019036, 0.729107, 0, 1.0};
Point(61) = {-0.014043, 0.729914, 0, 1.0};
Point(62) = {-0.008971, 0.730794, 0, 1.0};
Point(63) = {-0.003838, 0.731745, 0, 1.0};
Point(64) = {0.001330, 0.732764, 0, 1.0};
Point(65) = {0.006512, 0.733853, 0, 1.0};
Point(66) = {0.011686, 0.735000, 0, 1.0};
Point(67) = {0.016833, 0.736187, 0, 1.0};
Point(68) = {0.021933, 0.737392, 0, 1.0};
Point(69) = {0.026965, 0.738582, 0, 1.0};
Point(70) = {0.031912, 0.739737, 0, 1.0};
Point(71) = {0.036753, 0.740842, 0, 1.0};
Point(72) = {0.041468, 0.741887, 0, 1.0};
Point(73) = {0.046039, 0.742872, 0, 1.0};
Point(74) = {0.050443, 0.743792, 0, 1.0};
Point(75) = {0.054661, 0.744648, 0, 1.0};
Point(76) = {0.058674, 0.745444, 0, 1.0};
Point(77) = {0.062466, 0.746183, 0, 1.0};
Point(78) = {0.066018, 0.746872, 0, 1.0};
Point(79) = {0.069315, 0.747510, 0, 1.0};
Point(80) = {0.072339, 0.748098, 0, 1.0};
Point(81) = {0.074473, 0.748515, 0, 1.0};
Point(82) = {-0.074280, -0.750000, 0, 1.0};
Point(83) = {-0.072111, -0.749859, 0, 1.0};
Point(84) = {-0.069036, -0.749655, 0, 1.0};
Point(85) = {-0.065686, -0.749431, 0, 1.0};
Point(86) = {-0.062076, -0.749190, 0, 1.0};
Point(87) = {-0.058221, -0.748937, 0, 1.0};
Point(88) = {-0.054137, -0.748683, 0, 1.0};
Point(89) = {-0.049841, -0.748434, 0, 1.0};
Point(90) = {-0.045347, -0.748200, 0, 1.0};
Point(91) = {-0.040677, -0.747986, 0, 1.0};
Point(92) = {-0.035851, -0.747793, 0, 1.0};
Point(93) = {-0.030888, -0.747626, 0, 1.0};
Point(94) = {-0.025810, -0.747480, 0, 1.0};
Point(95) = {-0.020641, -0.747347, 0, 1.0};
Point(96) = {-0.015402, -0.747211, 0, 1.0};
Point(97) = {-0.010123, -0.747045, 0, 1.0};
Point(98) = {-0.004828, -0.746833, 0, 1.0};
Point(99) = {0.000460, -0.746564, 0, 1.0};
Point(100) = {0.005718, -0.746230, 0, 1.0};
Point(101) = {0.010923, -0.745840, 0, 1.0};
Point(102) = {0.016052, -0.745395, 0, 1.0};
Point(103) = {0.021085, -0.744902, 0, 1.0};
Point(104) = {0.025999, -0.744356, 0, 1.0};
Point(105) = {0.030771, -0.743749, 0, 1.0};
Point(106) = {0.035384, -0.743092, 0, 1.0};
Point(107) = {0.039817, -0.742395, 0, 1.0};
Point(108) = {0.044051, -0.741668, 0, 1.0};
Point(109) = {0.048070, -0.740908, 0, 1.0};
Point(110) = {0.051855, -0.740119, 0, 1.0};
Point(111) = {0.055390, -0.739299, 0, 1.0};
Point(112) = {0.058660, -0.738456, 0, 1.0};
Point(113) = {0.061649, -0.737591, 0, 1.0};
Point(114) = {0.064347, -0.736709, 0, 1.0};
Point(115) = {0.066743, -0.735815, 0, 1.0};
Point(116) = {0.068825, -0.734920, 0, 1.0};
Point(117) = {0.070586, -0.734032, 0, 1.0};
Point(118) = {0.072019, -0.733164, 0, 1.0};
Point(119) = {0.073117, -0.732304, 0, 1.0};
Point(120) = {0.073875, -0.731460, 0, 1.0};
Point(121) = {0.074295, -0.730674, 0, 1.0};
Point(122) = {0.074377, -0.729957, 0, 1.0};
Point(123) = {0.074115, -0.729285, 0, 1.0};
Point(124) = {0.073508, -0.728633, 0, 1.0};
Point(125) = {0.072560, -0.728010, 0, 1.0};
Point(126) = {0.071278, -0.727458, 0, 1.0};
Point(127) = {0.069672, -0.726985, 0, 1.0};
Point(128) = {0.067742, -0.726576, 0, 1.0};
Point(129) = {0.065501, -0.726241, 0, 1.0};
Point(130) = {0.062957, -0.725989, 0, 1.0};
Point(131) = {0.060122, -0.725824, 0, 1.0};
Point(132) = {0.057012, -0.725751, 0, 1.0};
Point(133) = {0.053635, -0.725771, 0, 1.0};
Point(134) = {0.050007, -0.725880, 0, 1.0};
Point(135) = {0.046146, -0.726083, 0, 1.0};
Point(136) = {0.042067, -0.726373, 0, 1.0};
Point(137) = {0.037787, -0.726751, 0, 1.0};
Point(138) = {0.033323, -0.727208, 0, 1.0};
Point(139) = {0.028695, -0.727750, 0, 1.0};
Point(140) = {0.023926, -0.728382, 0, 1.0};
Point(141) = {0.019036, -0.729107, 0, 1.0};
Point(142) = {0.014043, -0.729914, 0, 1.0};
Point(143) = {0.008971, -0.730794, 0, 1.0};
Point(144) = {0.003838, -0.731745, 0, 1.0};
Point(145) = {-0.001330, -0.732764, 0, 1.0};
Point(146) = {-0.006512, -0.733853, 0, 1.0};
Point(147) = {-0.011686, -0.735000, 0, 1.0};
Point(148) = {-0.016833, -0.736187, 0, 1.0};
Point(149) = {-0.021933, -0.737392, 0, 1.0};
Point(150) = {-0.026965, -0.738582, 0, 1.0};
Point(151) = {-0.031912, -0.739737, 0, 1.0};
Point(152) = {-0.036753, -0.740842, 0, 1.0};
Point(153) = {-0.041468, -0.741887, 0, 1.0};
Point(154) = {-0.046039, -0.742872, 0, 1.0};
Point(155) = {-0.050443, -0.743792, 0, 1.0};
Point(156) = {-0.054661, -0.744648, 0, 1.0};
Point(157) = {-0.058674, -0.745444, 0, 1.0};
Point(158) = {-0.062466, -0.746183, 0, 1.0};
Point(159) = {-0.066018, -0.746872, 0, 1.0};
Point(160) = {-0.069315, -0.747510, 0, 1.0};
Point(161) = {-0.072339, -0.748098, 0, 1.0};
Point(162) = {-0.074473, -0.748515, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074958, 0.744327, 0, 1.0};
Point(2) = {0.072446, 0.744715, 0, 1.0};
Point(3) = {0.069933, 0.745124, 0, 1.0};
Point(4) = {0.067420, 0.745527, 0, 1.0};
Point(5) = {0.064908, 0.745914, 0, 1.0};
Point(6) = {0.062396, 0.746295, 0, 1.0};
Point(7) = {0.059884, 0.746668, 0, 1.0};
Point(8) = {0.057372, 0.747033, 0, 1.0};
Point(9) = {0.054861, 0.747389, 0, 1.0};
Point(10) = {0.049840, 0.748040, 0, 1.0};
Point(11) = {0.044821, 0.748612, 0, 1.0};
Point(12) = {0.039805, 0.749091, 0, 1.0};
Point(13) = {0.034792, 0.749481, 0, 1.0};
Point(14) = {0.029782, 0.749766, 0, 1.0};
Point(15) = {0.024774, 0.749939, 0, 1.0};
Point(16) = {0.019771, 0.750000, 0, 1.0};
Point(17) = {0.014770, 0.749953, 0, 1.0};
Point(18) = {0.012271, 0.749892, 0, 1.0};
Point(19) = {0.009772, 0.749803, 0, 1.0};
Point(20) = {0.007274, 0.749686, 0, 1.0};
Point(21) = {0.004778, 0.749533, 0, 1.0};
Point(22) = {0.002282, 0.749345, 0, 1.0};
Point(23) = {-0.000213, 0.749127, 0, 1.0};
Point(24) = {-0.002706, 0.748873, 0, 1.0};
Point(25) = {-0.005199, 0.748577, 0, 1.0};
Point(26) = {-0.007690, 0.748227, 0, 1.0};
Point(27) = {-0.010179, 0.747818, 0, 1.0};
Point(28) = {-0.012666, 0.747337, 0, 1.0};
Point(29) = {-0.015150, 0.746759, 0, 1.0};
Point(30) = {-0.017631, 0.746051, 0, 1.0};
Point(31) = {-0.020106, 0.745157, 0, 1.0};
Point(32) = {-0.021341, 0.744611, 0, 1.0};
Point(33) = {-0.022572, 0.743966, 0, 1.0};
Point(34) = {-0.023187, 0.743589, 0, 1.0};
Point(35) = {-0.023799, 0.743150, 0, 1.0};
Point(36) = {-0.024165, 0.742840, 0, 1.0};
Point(37) = {-0.024529, 0.742446, 0, 1.0};
Point(38) = {-0.024769, 0.742083, 0, 1.0};
Point(39) = {-0.025000, 0.741431, 0, 1.0};
Point(40) = {-0.024742, 0.741145, 0, 1.0};
Point(41) = {-0.024488, 0.741022, 0, 1.0};
Point(42) = {-0.024109, 0.740875, 0, 1.0};
Point(43) = {-0.023730, 0.740761, 0, 1.0};
Point(44) = {-0.023101, 0.740620, 0, 1.0};
Point(45) = {-0.022473, 0.740533, 0, 1.0};
Point(46) = {-0.021219, 0.740417, 0, 1.0};
Point(47) = {-0.019967, 0.740350, 0, 1.0};
Point(48) = {-0.017463, 0.740279, 0, 1.0};
Point(49) = {-0.014962, 0.740255, 0, 1.0};
Point(50) = {-0.012461, 0.740253, 0, 1.0};
Point(51) = {-0.009960, 0.740270, 0, 1.0};
Point(52) = {-0.007460, 0.740302, 0, 1.0};
Point(53) = {-0.004960, 0.740350, 0, 1.0};
Point(54) = {-0.002461, 0.740408, 0, 1.0};
Point(55) = {0.000038, 0.740476, 0, 1.0};
Point(56) = {0.002537, 0.740555, 0, 1.0};
Point(57) = {0.005036, 0.740639, 0, 1.0};
Point(58) = {0.007534, 0.740729, 0, 1.0};
Point(59) = {0.010032, 0.740828, 0, 1.0};
Point(60) = {0.012530, 0.740949, 0, 1.0};
Point(61) = {0.015027, 0.741092, 0, 1.0};
Point(62) = {0.020019, 0.741421, 0, 1.0};
Point(63) = {0.025010, 0.741801, 0, 1.0};
Point(64) = {0.030000, 0.742222, 0, 1.0};
Point(65) = {0.034989, 0.742672, 0, 1.0};
Point(66) = {0.039978, 0.743129, 0, 1.0};
Point(67) = {0.044968, 0.743564, 0, 1.0};
Point(68) = {0.049958, 0.743956, 0, 1.0};
Point(69) = {0.054951, 0.744271, 0, 1.0};
Point(70) = {0.057449, 0.744386, 0, 1.0};
Point(71) = {0.059948, 0.744470, 0, 1.0};
Point(72) = {0.062447, 0.744513, 0, 1.0};
Point(73) = {0.064948, 0.744527, 0, 1.0};
Point(74) = {0.067450, 0.744501, 0, 1.0};
Point(75) = {0.069952, 0.744474, 0, 1.0};
Point(76) = {0.072454, 0.744415, 0, 1.0};
Point(77) = {-0.074958, -0.744327, 0, 1.0};
Point(78) = {-0.072446, -0.744715, 0, 1.0};
Point(79) = {-0.069933, -0.745124, 0, 1.0};
Point(80) = {-0.067420, -0.745527, 0, 1.0};
Point(81) = {-0.064908, -0.745914, 0, 1.0};
Point(82) = {-0.062396, -0.746295, 0, 1.0};
Point(83) = {-0.059884, -0.746668, 0, 1.0};
Point(84) = {-0.057372, -0.747033, 0, 1.0};
Point(85) = {-0.054861, -0.747389, 0, 1.0};
Point(86) = {-0.049840, -0.748040, 0, 1.0};
Point(87) = {-0.044821, -0.748612, 0, 1.0};
Point(88) = {-0.039805, -0.749091, 0, 1.0};
Point(89) = {-0.034792, -0.749481, 0, 1.0};
Point(90) = {-0.029782, -0.749766, 0, 1.0};
Point(91) = {-0.024774, -0.749939, 0, 1.0};
Point(92) = {-0.019771, -0.750000, 0, 1.0};
Point(93) = {-0.014770, -0.749953, 0, 1.0};
Point(94) = {-0.012271, -0.749892, 0, 1.0};
Point(95) = {-0.009772, -0.749803, 0, 1.0};
Point(96) = {-0.007274, -0.749686, 0, 1.0};
Point(97) = {-0.004778, -0.749533, 0, 1.0};
Point(98) = {-0.002282, -0.749345, 0, 1.0};
Point(99) = {0.000213, -0.749127, 0, 1.0};
Point(100) = {0.002706, -0.748873, 0, 1.0};
Point(101) = {0.005199, -0.748577, 0, 1.0};
Point(102) = {0.007690, -0.748227, 0, 1.0};
Point(103) = {0.010179, -0.747818, 0, 1.0};
Point(104) = {0.012666, -0.747337, 0, 1.0};
Point(105) = {0.015150, -0.746759, 0, 1.0};
Point(106) = {0.017631, -0.746051, 0, 1.0};
Point(107) = {0.020106, -0.745157, 0, 1.0};
Point(108) = {0.021341, -0.744611, 0, 1.0};
Point(109) = {0.022572, -0.743966, 0, 1.0};
Point(110) = {0.023187, -0.743589, 0, 1.0};
Point(111) = {0.023799, -0.743150, 0, 1.0};
Point(112) = {0.024165, -0.742840, 0, 1.0};
Point(113) = {0.024529, -0.742446, 0, 1.0};
Point(114) = {0.024769, -0.742083, 0, 1.0};
Point(115) = {0.025000, -0.741431, 0, 1.0};
Point(116) = {0.024742, -0.741145, 0, 1.0};
Point(117) = {0.024488, -0.741022, 0, 1.0};
Point(118) = {0.024109, -0.740875, 0, 1.0};
Point(119) = {0.023730, -0.740761, 0, 1.0};
Point(120) = {0.023101, -0.740620, 0, 1.0};
Point(121) = {0.022473, -0.740533, 0, 1.0};
Point(122) = {0.021219, -0.740417, 0, 1.0};
Point(123) = {0.019967, -0.740350, 0, 1.0};
Point(124) = {0.017463, -0.740279, 0, 1.0};
Point(125) = {0.014962, -0.740255, 0, 1.0};
Point(126) = {0.012461, -0.740253, 0, 1.0};
Point(127) = {0.009960, -0.740270, 0, 1.0};
Point(128) = {0.007460, -0.740302, 0, 1.0};
Point(129) = {0.004960, -0.740350, 0, 1.0};
Point(130) = {0.002461, -0.740408, 0, 1.0};
Point(131) = {-0.000038, -0.740476, 0, 1.0};
Point(132) = {-0.002537, -0.740555, 0, 1.0};
Point(133) = {-0.005036, -0.740639, 0, 1.0};
Point(134) = {-0.007534, -0.740729, 0, 1.0};
Point(135) = {-0.010032, -0.740828, 0, 1.0};
Point(136) = {-0.012530, -0.740949, 0, 1.0};
Point(137) = {-0.015027, -0.741092, 0, 1.0};
Point(138) = {-0.020019, -0.741421, 0, 1.0};
Point(139) = {-0.025010, -0.741801, 0, 1.0};
Point(140) = {-0.030000, -0.742222, 0, 1.0};
Point(141) = {-0.034989, -0.742672, 0, 1.0};
Point(142) = {-0.039978, -0.743129, 0, 1.0};
Point(143) = {-0.044968, -0.743564, 0, 1.0};
Point(144) = {-0.049958, -0.743956, 0, 1.0};
Point(145) = {-0.054951, -0.744271, 0, 1.0};
Point(146) = {-0.057449, -0.744386, 0, 1.0};
Point(147) = {-0.059948, -0.744470, 0, 1.0};
Point(148) = {-0.062447, -0.744513, 0, 1.0};
Point(149) = {-0.064948, -0.744527, 0, 1.0};
Point(150) = {-0.067450, -0.744501, 0, 1.0};
Point(151) = {-0.069952, -0.744474, 0, 1.0};
Point(152) = {-0.072454, -0.744415, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
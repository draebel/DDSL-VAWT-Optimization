SetFactory("OpenCASCADE");

Point(1) = {0.149916, 0.738654, 0, 1.0};
Point(2) = {0.144892, 0.739429, 0, 1.0};
Point(3) = {0.139866, 0.740248, 0, 1.0};
Point(4) = {0.134840, 0.741055, 0, 1.0};
Point(5) = {0.129816, 0.741828, 0, 1.0};
Point(6) = {0.124792, 0.742590, 0, 1.0};
Point(7) = {0.119768, 0.743335, 0, 1.0};
Point(8) = {0.114745, 0.744066, 0, 1.0};
Point(9) = {0.109722, 0.744779, 0, 1.0};
Point(10) = {0.099680, 0.746080, 0, 1.0};
Point(11) = {0.089643, 0.747224, 0, 1.0};
Point(12) = {0.079611, 0.748182, 0, 1.0};
Point(13) = {0.069584, 0.748962, 0, 1.0};
Point(14) = {0.059563, 0.749532, 0, 1.0};
Point(15) = {0.049549, 0.749878, 0, 1.0};
Point(16) = {0.039541, 0.750000, 0, 1.0};
Point(17) = {0.029540, 0.749906, 0, 1.0};
Point(18) = {0.024541, 0.749783, 0, 1.0};
Point(19) = {0.019544, 0.749607, 0, 1.0};
Point(20) = {0.014549, 0.749372, 0, 1.0};
Point(21) = {0.009556, 0.749065, 0, 1.0};
Point(22) = {0.004564, 0.748690, 0, 1.0};
Point(23) = {-0.000425, 0.748254, 0, 1.0};
Point(24) = {-0.005412, 0.747747, 0, 1.0};
Point(25) = {-0.010397, 0.747154, 0, 1.0};
Point(26) = {-0.015379, 0.746454, 0, 1.0};
Point(27) = {-0.020358, 0.745635, 0, 1.0};
Point(28) = {-0.025332, 0.744675, 0, 1.0};
Point(29) = {-0.030300, 0.743518, 0, 1.0};
Point(30) = {-0.035261, 0.742102, 0, 1.0};
Point(31) = {-0.040212, 0.740314, 0, 1.0};
Point(32) = {-0.042681, 0.739222, 0, 1.0};
Point(33) = {-0.045145, 0.737932, 0, 1.0};
Point(34) = {-0.046374, 0.737178, 0, 1.0};
Point(35) = {-0.047599, 0.736300, 0, 1.0};
Point(36) = {-0.048331, 0.735681, 0, 1.0};
Point(37) = {-0.049058, 0.734891, 0, 1.0};
Point(38) = {-0.049538, 0.734165, 0, 1.0};
Point(39) = {-0.050000, 0.732861, 0, 1.0};
Point(40) = {-0.049483, 0.732290, 0, 1.0};
Point(41) = {-0.048976, 0.732044, 0, 1.0};
Point(42) = {-0.048217, 0.731750, 0, 1.0};
Point(43) = {-0.047460, 0.731522, 0, 1.0};
Point(44) = {-0.046201, 0.731240, 0, 1.0};
Point(45) = {-0.044946, 0.731067, 0, 1.0};
Point(46) = {-0.042438, 0.730833, 0, 1.0};
Point(47) = {-0.039933, 0.730700, 0, 1.0};
Point(48) = {-0.034927, 0.730559, 0, 1.0};
Point(49) = {-0.029923, 0.730510, 0, 1.0};
Point(50) = {-0.024921, 0.730507, 0, 1.0};
Point(51) = {-0.019920, 0.730539, 0, 1.0};
Point(52) = {-0.014920, 0.730604, 0, 1.0};
Point(53) = {-0.009921, 0.730699, 0, 1.0};
Point(54) = {-0.004922, 0.730816, 0, 1.0};
Point(55) = {0.000076, 0.730953, 0, 1.0};
Point(56) = {0.005074, 0.731110, 0, 1.0};
Point(57) = {0.010071, 0.731278, 0, 1.0};
Point(58) = {0.015068, 0.731457, 0, 1.0};
Point(59) = {0.020064, 0.731656, 0, 1.0};
Point(60) = {0.025059, 0.731899, 0, 1.0};
Point(61) = {0.030053, 0.732184, 0, 1.0};
Point(62) = {0.040038, 0.732841, 0, 1.0};
Point(63) = {0.050020, 0.733603, 0, 1.0};
Point(64) = {0.060000, 0.734444, 0, 1.0};
Point(65) = {0.069978, 0.735344, 0, 1.0};
Point(66) = {0.079956, 0.736259, 0, 1.0};
Point(67) = {0.089935, 0.737128, 0, 1.0};
Point(68) = {0.099917, 0.737912, 0, 1.0};
Point(69) = {0.109903, 0.738541, 0, 1.0};
Point(70) = {0.114898, 0.738772, 0, 1.0};
Point(71) = {0.119895, 0.738941, 0, 1.0};
Point(72) = {0.124895, 0.739026, 0, 1.0};
Point(73) = {0.129896, 0.739055, 0, 1.0};
Point(74) = {0.134900, 0.739002, 0, 1.0};
Point(75) = {0.139903, 0.738949, 0, 1.0};
Point(76) = {0.144909, 0.738830, 0, 1.0};
Point(77) = {-0.149916, -0.738654, 0, 1.0};
Point(78) = {-0.144892, -0.739429, 0, 1.0};
Point(79) = {-0.139866, -0.740248, 0, 1.0};
Point(80) = {-0.134840, -0.741055, 0, 1.0};
Point(81) = {-0.129816, -0.741828, 0, 1.0};
Point(82) = {-0.124792, -0.742590, 0, 1.0};
Point(83) = {-0.119768, -0.743335, 0, 1.0};
Point(84) = {-0.114745, -0.744066, 0, 1.0};
Point(85) = {-0.109722, -0.744779, 0, 1.0};
Point(86) = {-0.099680, -0.746080, 0, 1.0};
Point(87) = {-0.089643, -0.747224, 0, 1.0};
Point(88) = {-0.079611, -0.748182, 0, 1.0};
Point(89) = {-0.069584, -0.748962, 0, 1.0};
Point(90) = {-0.059563, -0.749532, 0, 1.0};
Point(91) = {-0.049549, -0.749878, 0, 1.0};
Point(92) = {-0.039541, -0.750000, 0, 1.0};
Point(93) = {-0.029540, -0.749906, 0, 1.0};
Point(94) = {-0.024541, -0.749783, 0, 1.0};
Point(95) = {-0.019544, -0.749607, 0, 1.0};
Point(96) = {-0.014549, -0.749372, 0, 1.0};
Point(97) = {-0.009556, -0.749065, 0, 1.0};
Point(98) = {-0.004564, -0.748690, 0, 1.0};
Point(99) = {0.000425, -0.748254, 0, 1.0};
Point(100) = {0.005412, -0.747747, 0, 1.0};
Point(101) = {0.010397, -0.747154, 0, 1.0};
Point(102) = {0.015379, -0.746454, 0, 1.0};
Point(103) = {0.020358, -0.745635, 0, 1.0};
Point(104) = {0.025332, -0.744675, 0, 1.0};
Point(105) = {0.030300, -0.743518, 0, 1.0};
Point(106) = {0.035261, -0.742102, 0, 1.0};
Point(107) = {0.040212, -0.740314, 0, 1.0};
Point(108) = {0.042681, -0.739222, 0, 1.0};
Point(109) = {0.045145, -0.737932, 0, 1.0};
Point(110) = {0.046374, -0.737178, 0, 1.0};
Point(111) = {0.047599, -0.736300, 0, 1.0};
Point(112) = {0.048331, -0.735681, 0, 1.0};
Point(113) = {0.049058, -0.734891, 0, 1.0};
Point(114) = {0.049538, -0.734165, 0, 1.0};
Point(115) = {0.050000, -0.732861, 0, 1.0};
Point(116) = {0.049483, -0.732290, 0, 1.0};
Point(117) = {0.048976, -0.732044, 0, 1.0};
Point(118) = {0.048217, -0.731750, 0, 1.0};
Point(119) = {0.047460, -0.731522, 0, 1.0};
Point(120) = {0.046201, -0.731240, 0, 1.0};
Point(121) = {0.044946, -0.731067, 0, 1.0};
Point(122) = {0.042438, -0.730833, 0, 1.0};
Point(123) = {0.039933, -0.730700, 0, 1.0};
Point(124) = {0.034927, -0.730559, 0, 1.0};
Point(125) = {0.029923, -0.730510, 0, 1.0};
Point(126) = {0.024921, -0.730507, 0, 1.0};
Point(127) = {0.019920, -0.730539, 0, 1.0};
Point(128) = {0.014920, -0.730604, 0, 1.0};
Point(129) = {0.009921, -0.730699, 0, 1.0};
Point(130) = {0.004922, -0.730816, 0, 1.0};
Point(131) = {-0.000076, -0.730953, 0, 1.0};
Point(132) = {-0.005074, -0.731110, 0, 1.0};
Point(133) = {-0.010071, -0.731278, 0, 1.0};
Point(134) = {-0.015068, -0.731457, 0, 1.0};
Point(135) = {-0.020064, -0.731656, 0, 1.0};
Point(136) = {-0.025059, -0.731899, 0, 1.0};
Point(137) = {-0.030053, -0.732184, 0, 1.0};
Point(138) = {-0.040038, -0.732841, 0, 1.0};
Point(139) = {-0.050020, -0.733603, 0, 1.0};
Point(140) = {-0.060000, -0.734444, 0, 1.0};
Point(141) = {-0.069978, -0.735344, 0, 1.0};
Point(142) = {-0.079956, -0.736259, 0, 1.0};
Point(143) = {-0.089935, -0.737128, 0, 1.0};
Point(144) = {-0.099917, -0.737912, 0, 1.0};
Point(145) = {-0.109903, -0.738541, 0, 1.0};
Point(146) = {-0.114898, -0.738772, 0, 1.0};
Point(147) = {-0.119895, -0.738941, 0, 1.0};
Point(148) = {-0.124895, -0.739026, 0, 1.0};
Point(149) = {-0.129896, -0.739055, 0, 1.0};
Point(150) = {-0.134900, -0.739002, 0, 1.0};
Point(151) = {-0.139903, -0.738949, 0, 1.0};
Point(152) = {-0.144909, -0.738830, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
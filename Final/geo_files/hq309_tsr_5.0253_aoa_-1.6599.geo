SetFactory("OpenCASCADE");

Point(1) = {0.112437, 0.741491, 0, 1.0};
Point(2) = {0.108669, 0.742072, 0, 1.0};
Point(3) = {0.104899, 0.742686, 0, 1.0};
Point(4) = {0.101130, 0.743291, 0, 1.0};
Point(5) = {0.097362, 0.743871, 0, 1.0};
Point(6) = {0.093594, 0.744443, 0, 1.0};
Point(7) = {0.089826, 0.745001, 0, 1.0};
Point(8) = {0.086058, 0.745549, 0, 1.0};
Point(9) = {0.082291, 0.746084, 0, 1.0};
Point(10) = {0.074760, 0.747060, 0, 1.0};
Point(11) = {0.067232, 0.747918, 0, 1.0};
Point(12) = {0.059708, 0.748636, 0, 1.0};
Point(13) = {0.052188, 0.749221, 0, 1.0};
Point(14) = {0.044672, 0.749649, 0, 1.0};
Point(15) = {0.037162, 0.749908, 0, 1.0};
Point(16) = {0.029656, 0.750000, 0, 1.0};
Point(17) = {0.022155, 0.749930, 0, 1.0};
Point(18) = {0.018406, 0.749838, 0, 1.0};
Point(19) = {0.014658, 0.749705, 0, 1.0};
Point(20) = {0.010912, 0.749529, 0, 1.0};
Point(21) = {0.007167, 0.749299, 0, 1.0};
Point(22) = {0.003423, 0.749018, 0, 1.0};
Point(23) = {-0.000319, 0.748690, 0, 1.0};
Point(24) = {-0.004059, 0.748310, 0, 1.0};
Point(25) = {-0.007798, 0.747866, 0, 1.0};
Point(26) = {-0.011534, 0.747340, 0, 1.0};
Point(27) = {-0.015268, 0.746726, 0, 1.0};
Point(28) = {-0.018999, 0.746006, 0, 1.0};
Point(29) = {-0.022725, 0.745139, 0, 1.0};
Point(30) = {-0.026446, 0.744076, 0, 1.0};
Point(31) = {-0.030159, 0.742735, 0, 1.0};
Point(32) = {-0.032011, 0.741916, 0, 1.0};
Point(33) = {-0.033859, 0.740949, 0, 1.0};
Point(34) = {-0.034780, 0.740383, 0, 1.0};
Point(35) = {-0.035699, 0.739725, 0, 1.0};
Point(36) = {-0.036248, 0.739260, 0, 1.0};
Point(37) = {-0.036794, 0.738668, 0, 1.0};
Point(38) = {-0.037153, 0.738124, 0, 1.0};
Point(39) = {-0.037500, 0.737146, 0, 1.0};
Point(40) = {-0.037112, 0.736717, 0, 1.0};
Point(41) = {-0.036732, 0.736533, 0, 1.0};
Point(42) = {-0.036163, 0.736313, 0, 1.0};
Point(43) = {-0.035595, 0.736142, 0, 1.0};
Point(44) = {-0.034651, 0.735930, 0, 1.0};
Point(45) = {-0.033709, 0.735800, 0, 1.0};
Point(46) = {-0.031829, 0.735625, 0, 1.0};
Point(47) = {-0.029950, 0.735525, 0, 1.0};
Point(48) = {-0.026195, 0.735419, 0, 1.0};
Point(49) = {-0.022443, 0.735382, 0, 1.0};
Point(50) = {-0.018691, 0.735380, 0, 1.0};
Point(51) = {-0.014940, 0.735405, 0, 1.0};
Point(52) = {-0.011190, 0.735453, 0, 1.0};
Point(53) = {-0.007440, 0.735524, 0, 1.0};
Point(54) = {-0.003691, 0.735612, 0, 1.0};
Point(55) = {0.000057, 0.735715, 0, 1.0};
Point(56) = {0.003805, 0.735832, 0, 1.0};
Point(57) = {0.007553, 0.735959, 0, 1.0};
Point(58) = {0.011301, 0.736093, 0, 1.0};
Point(59) = {0.015048, 0.736242, 0, 1.0};
Point(60) = {0.018795, 0.736424, 0, 1.0};
Point(61) = {0.022540, 0.736638, 0, 1.0};
Point(62) = {0.030029, 0.737131, 0, 1.0};
Point(63) = {0.037515, 0.737702, 0, 1.0};
Point(64) = {0.045000, 0.738333, 0, 1.0};
Point(65) = {0.052484, 0.739008, 0, 1.0};
Point(66) = {0.059967, 0.739694, 0, 1.0};
Point(67) = {0.067451, 0.740346, 0, 1.0};
Point(68) = {0.074937, 0.740934, 0, 1.0};
Point(69) = {0.082427, 0.741406, 0, 1.0};
Point(70) = {0.086173, 0.741579, 0, 1.0};
Point(71) = {0.089921, 0.741706, 0, 1.0};
Point(72) = {0.093671, 0.741769, 0, 1.0};
Point(73) = {0.097422, 0.741791, 0, 1.0};
Point(74) = {0.101175, 0.741751, 0, 1.0};
Point(75) = {0.104928, 0.741711, 0, 1.0};
Point(76) = {0.108682, 0.741622, 0, 1.0};
Point(77) = {-0.112437, -0.741491, 0, 1.0};
Point(78) = {-0.108669, -0.742072, 0, 1.0};
Point(79) = {-0.104899, -0.742686, 0, 1.0};
Point(80) = {-0.101130, -0.743291, 0, 1.0};
Point(81) = {-0.097362, -0.743871, 0, 1.0};
Point(82) = {-0.093594, -0.744443, 0, 1.0};
Point(83) = {-0.089826, -0.745001, 0, 1.0};
Point(84) = {-0.086058, -0.745549, 0, 1.0};
Point(85) = {-0.082291, -0.746084, 0, 1.0};
Point(86) = {-0.074760, -0.747060, 0, 1.0};
Point(87) = {-0.067232, -0.747918, 0, 1.0};
Point(88) = {-0.059708, -0.748636, 0, 1.0};
Point(89) = {-0.052188, -0.749221, 0, 1.0};
Point(90) = {-0.044672, -0.749649, 0, 1.0};
Point(91) = {-0.037162, -0.749908, 0, 1.0};
Point(92) = {-0.029656, -0.750000, 0, 1.0};
Point(93) = {-0.022155, -0.749930, 0, 1.0};
Point(94) = {-0.018406, -0.749838, 0, 1.0};
Point(95) = {-0.014658, -0.749705, 0, 1.0};
Point(96) = {-0.010912, -0.749529, 0, 1.0};
Point(97) = {-0.007167, -0.749299, 0, 1.0};
Point(98) = {-0.003423, -0.749018, 0, 1.0};
Point(99) = {0.000319, -0.748690, 0, 1.0};
Point(100) = {0.004059, -0.748310, 0, 1.0};
Point(101) = {0.007798, -0.747866, 0, 1.0};
Point(102) = {0.011534, -0.747340, 0, 1.0};
Point(103) = {0.015268, -0.746726, 0, 1.0};
Point(104) = {0.018999, -0.746006, 0, 1.0};
Point(105) = {0.022725, -0.745139, 0, 1.0};
Point(106) = {0.026446, -0.744076, 0, 1.0};
Point(107) = {0.030159, -0.742735, 0, 1.0};
Point(108) = {0.032011, -0.741916, 0, 1.0};
Point(109) = {0.033859, -0.740949, 0, 1.0};
Point(110) = {0.034780, -0.740383, 0, 1.0};
Point(111) = {0.035699, -0.739725, 0, 1.0};
Point(112) = {0.036248, -0.739260, 0, 1.0};
Point(113) = {0.036794, -0.738668, 0, 1.0};
Point(114) = {0.037153, -0.738124, 0, 1.0};
Point(115) = {0.037500, -0.737146, 0, 1.0};
Point(116) = {0.037112, -0.736717, 0, 1.0};
Point(117) = {0.036732, -0.736533, 0, 1.0};
Point(118) = {0.036163, -0.736313, 0, 1.0};
Point(119) = {0.035595, -0.736142, 0, 1.0};
Point(120) = {0.034651, -0.735930, 0, 1.0};
Point(121) = {0.033709, -0.735800, 0, 1.0};
Point(122) = {0.031829, -0.735625, 0, 1.0};
Point(123) = {0.029950, -0.735525, 0, 1.0};
Point(124) = {0.026195, -0.735419, 0, 1.0};
Point(125) = {0.022443, -0.735382, 0, 1.0};
Point(126) = {0.018691, -0.735380, 0, 1.0};
Point(127) = {0.014940, -0.735405, 0, 1.0};
Point(128) = {0.011190, -0.735453, 0, 1.0};
Point(129) = {0.007440, -0.735524, 0, 1.0};
Point(130) = {0.003691, -0.735612, 0, 1.0};
Point(131) = {-0.000057, -0.735715, 0, 1.0};
Point(132) = {-0.003805, -0.735832, 0, 1.0};
Point(133) = {-0.007553, -0.735959, 0, 1.0};
Point(134) = {-0.011301, -0.736093, 0, 1.0};
Point(135) = {-0.015048, -0.736242, 0, 1.0};
Point(136) = {-0.018795, -0.736424, 0, 1.0};
Point(137) = {-0.022540, -0.736638, 0, 1.0};
Point(138) = {-0.030029, -0.737131, 0, 1.0};
Point(139) = {-0.037515, -0.737702, 0, 1.0};
Point(140) = {-0.045000, -0.738333, 0, 1.0};
Point(141) = {-0.052484, -0.739008, 0, 1.0};
Point(142) = {-0.059967, -0.739694, 0, 1.0};
Point(143) = {-0.067451, -0.740346, 0, 1.0};
Point(144) = {-0.074937, -0.740934, 0, 1.0};
Point(145) = {-0.082427, -0.741406, 0, 1.0};
Point(146) = {-0.086173, -0.741579, 0, 1.0};
Point(147) = {-0.089921, -0.741706, 0, 1.0};
Point(148) = {-0.093671, -0.741769, 0, 1.0};
Point(149) = {-0.097422, -0.741791, 0, 1.0};
Point(150) = {-0.101175, -0.741751, 0, 1.0};
Point(151) = {-0.104928, -0.741711, 0, 1.0};
Point(152) = {-0.108682, -0.741622, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074955, 0.729498, 0, 1.0};
Point(2) = {0.074412, 0.729675, 0, 1.0};
Point(3) = {0.072910, 0.730194, 0, 1.0};
Point(4) = {0.070600, 0.730950, 0, 1.0};
Point(5) = {0.067465, 0.731855, 0, 1.0};
Point(6) = {0.063520, 0.732941, 0, 1.0};
Point(7) = {0.058853, 0.734215, 0, 1.0};
Point(8) = {0.053553, 0.735658, 0, 1.0};
Point(9) = {0.047715, 0.737241, 0, 1.0};
Point(10) = {0.041436, 0.738920, 0, 1.0};
Point(11) = {0.034808, 0.740646, 0, 1.0};
Point(12) = {0.027916, 0.742368, 0, 1.0};
Point(13) = {0.020845, 0.744028, 0, 1.0};
Point(14) = {0.013668, 0.745575, 0, 1.0};
Point(15) = {0.006458, 0.746959, 0, 1.0};
Point(16) = {-0.000720, 0.748135, 0, 1.0};
Point(17) = {-0.007806, 0.749060, 0, 1.0};
Point(18) = {-0.014743, 0.749695, 0, 1.0};
Point(19) = {-0.021500, 0.750000, 0, 1.0};
Point(20) = {-0.028065, 0.749973, 0, 1.0};
Point(21) = {-0.034409, 0.749644, 0, 1.0};
Point(22) = {-0.040480, 0.749051, 0, 1.0};
Point(23) = {-0.046216, 0.748223, 0, 1.0};
Point(24) = {-0.051557, 0.747185, 0, 1.0};
Point(25) = {-0.056452, 0.745959, 0, 1.0};
Point(26) = {-0.060853, 0.744576, 0, 1.0};
Point(27) = {-0.064717, 0.743064, 0, 1.0};
Point(28) = {-0.068009, 0.741457, 0, 1.0};
Point(29) = {-0.070697, 0.739795, 0, 1.0};
Point(30) = {-0.072756, 0.738127, 0, 1.0};
Point(31) = {-0.074163, 0.736511, 0, 1.0};
Point(32) = {-0.074694, 0.735569, 0, 1.0};
Point(33) = {-0.074853, 0.735139, 0, 1.0};
Point(34) = {-0.074921, 0.734866, 0, 1.0};
Point(35) = {-0.074958, 0.734608, 0, 1.0};
Point(36) = {-0.074962, 0.734484, 0, 1.0};
Point(37) = {-0.074958, 0.734366, 0, 1.0};
Point(38) = {-0.074941, 0.734253, 0, 1.0};
Point(39) = {-0.074909, 0.734144, 0, 1.0};
Point(40) = {-0.074862, 0.734032, 0, 1.0};
Point(41) = {-0.074802, 0.733918, 0, 1.0};
Point(42) = {-0.074654, 0.733685, 0, 1.0};
Point(43) = {-0.074465, 0.733448, 0, 1.0};
Point(44) = {-0.074119, 0.733081, 0, 1.0};
Point(45) = {-0.073572, 0.732604, 0, 1.0};
Point(46) = {-0.071595, 0.731321, 0, 1.0};
Point(47) = {-0.068869, 0.730027, 0, 1.0};
Point(48) = {-0.065445, 0.728758, 0, 1.0};
Point(49) = {-0.061365, 0.727538, 0, 1.0};
Point(50) = {-0.056683, 0.726385, 0, 1.0};
Point(51) = {-0.051463, 0.725325, 0, 1.0};
Point(52) = {-0.045779, 0.724380, 0, 1.0};
Point(53) = {-0.039702, 0.723590, 0, 1.0};
Point(54) = {-0.033309, 0.722988, 0, 1.0};
Point(55) = {-0.026682, 0.722650, 0, 1.0};
Point(56) = {-0.019828, 0.722667, 0, 1.0};
Point(57) = {-0.012696, 0.723066, 0, 1.0};
Point(58) = {-0.005248, 0.723782, 0, 1.0};
Point(59) = {0.002493, 0.724695, 0, 1.0};
Point(60) = {0.010432, 0.725698, 0, 1.0};
Point(61) = {0.018456, 0.726715, 0, 1.0};
Point(62) = {0.026443, 0.727673, 0, 1.0};
Point(63) = {0.034261, 0.728517, 0, 1.0};
Point(64) = {0.041767, 0.729203, 0, 1.0};
Point(65) = {0.048819, 0.729703, 0, 1.0};
Point(66) = {0.055269, 0.730007, 0, 1.0};
Point(67) = {0.060985, 0.730129, 0, 1.0};
Point(68) = {0.065843, 0.730096, 0, 1.0};
Point(69) = {0.069742, 0.729961, 0, 1.0};
Point(70) = {0.072606, 0.729769, 0, 1.0};
Point(71) = {0.074364, 0.729582, 0, 1.0};
Point(72) = {-0.074955, -0.729498, 0, 1.0};
Point(73) = {-0.074412, -0.729675, 0, 1.0};
Point(74) = {-0.072910, -0.730194, 0, 1.0};
Point(75) = {-0.070600, -0.730950, 0, 1.0};
Point(76) = {-0.067465, -0.731855, 0, 1.0};
Point(77) = {-0.063520, -0.732941, 0, 1.0};
Point(78) = {-0.058853, -0.734215, 0, 1.0};
Point(79) = {-0.053553, -0.735658, 0, 1.0};
Point(80) = {-0.047715, -0.737241, 0, 1.0};
Point(81) = {-0.041436, -0.738920, 0, 1.0};
Point(82) = {-0.034808, -0.740646, 0, 1.0};
Point(83) = {-0.027916, -0.742368, 0, 1.0};
Point(84) = {-0.020845, -0.744028, 0, 1.0};
Point(85) = {-0.013668, -0.745575, 0, 1.0};
Point(86) = {-0.006458, -0.746959, 0, 1.0};
Point(87) = {0.000720, -0.748135, 0, 1.0};
Point(88) = {0.007806, -0.749060, 0, 1.0};
Point(89) = {0.014743, -0.749695, 0, 1.0};
Point(90) = {0.021500, -0.750000, 0, 1.0};
Point(91) = {0.028065, -0.749973, 0, 1.0};
Point(92) = {0.034409, -0.749644, 0, 1.0};
Point(93) = {0.040480, -0.749051, 0, 1.0};
Point(94) = {0.046216, -0.748223, 0, 1.0};
Point(95) = {0.051557, -0.747185, 0, 1.0};
Point(96) = {0.056452, -0.745959, 0, 1.0};
Point(97) = {0.060853, -0.744576, 0, 1.0};
Point(98) = {0.064717, -0.743064, 0, 1.0};
Point(99) = {0.068009, -0.741457, 0, 1.0};
Point(100) = {0.070697, -0.739795, 0, 1.0};
Point(101) = {0.072756, -0.738127, 0, 1.0};
Point(102) = {0.074163, -0.736511, 0, 1.0};
Point(103) = {0.074694, -0.735569, 0, 1.0};
Point(104) = {0.074853, -0.735139, 0, 1.0};
Point(105) = {0.074921, -0.734866, 0, 1.0};
Point(106) = {0.074958, -0.734608, 0, 1.0};
Point(107) = {0.074962, -0.734484, 0, 1.0};
Point(108) = {0.074958, -0.734366, 0, 1.0};
Point(109) = {0.074941, -0.734253, 0, 1.0};
Point(110) = {0.074909, -0.734144, 0, 1.0};
Point(111) = {0.074862, -0.734032, 0, 1.0};
Point(112) = {0.074802, -0.733918, 0, 1.0};
Point(113) = {0.074654, -0.733685, 0, 1.0};
Point(114) = {0.074465, -0.733448, 0, 1.0};
Point(115) = {0.074119, -0.733081, 0, 1.0};
Point(116) = {0.073572, -0.732604, 0, 1.0};
Point(117) = {0.071595, -0.731321, 0, 1.0};
Point(118) = {0.068869, -0.730027, 0, 1.0};
Point(119) = {0.065445, -0.728758, 0, 1.0};
Point(120) = {0.061365, -0.727538, 0, 1.0};
Point(121) = {0.056683, -0.726385, 0, 1.0};
Point(122) = {0.051463, -0.725325, 0, 1.0};
Point(123) = {0.045779, -0.724380, 0, 1.0};
Point(124) = {0.039702, -0.723590, 0, 1.0};
Point(125) = {0.033309, -0.722988, 0, 1.0};
Point(126) = {0.026682, -0.722650, 0, 1.0};
Point(127) = {0.019828, -0.722667, 0, 1.0};
Point(128) = {0.012696, -0.723066, 0, 1.0};
Point(129) = {0.005248, -0.723782, 0, 1.0};
Point(130) = {-0.002493, -0.724695, 0, 1.0};
Point(131) = {-0.010432, -0.725698, 0, 1.0};
Point(132) = {-0.018456, -0.726715, 0, 1.0};
Point(133) = {-0.026443, -0.727673, 0, 1.0};
Point(134) = {-0.034261, -0.728517, 0, 1.0};
Point(135) = {-0.041767, -0.729203, 0, 1.0};
Point(136) = {-0.048819, -0.729703, 0, 1.0};
Point(137) = {-0.055269, -0.730007, 0, 1.0};
Point(138) = {-0.060985, -0.730129, 0, 1.0};
Point(139) = {-0.065843, -0.730096, 0, 1.0};
Point(140) = {-0.069742, -0.729961, 0, 1.0};
Point(141) = {-0.072606, -0.729769, 0, 1.0};
Point(142) = {-0.074364, -0.729582, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:71};
Spline(4) = {71,1};

// Lines: second blade (splines 5-8)
Spline(5) = {72:92};
Spline(6) = {92:125};
Spline(7) = {125:142};
Spline(8) = {142,72};

// Outer domain (points 20001-4 and lines)
Point(143) = {-13.50000000, -15.00000000, 0, 1.0};
Point(144) = {-13.50000000, 15.00000000, 0, 1.0};
Point(145) = {13.50000000, 15.00000000, 0, 1.0};
Point(146) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {143, 144};
Line(12) = {144, 145};
Line(13) = {145, 146};
Line(14) = {143, 146};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
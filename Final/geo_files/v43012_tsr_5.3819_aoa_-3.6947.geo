SetFactory("OpenCASCADE");

Point(1) = {0.112266, 0.743014, 0, 1.0};
Point(2) = {0.109236, 0.743389, 0, 1.0};
Point(3) = {0.105449, 0.743836, 0, 1.0};
Point(4) = {0.103176, 0.744125, 0, 1.0};
Point(5) = {0.100904, 0.744384, 0, 1.0};
Point(6) = {0.098633, 0.744644, 0, 1.0};
Point(7) = {0.095604, 0.744989, 0, 1.0};
Point(8) = {0.091065, 0.745448, 0, 1.0};
Point(9) = {0.086528, 0.745876, 0, 1.0};
Point(10) = {0.081990, 0.746320, 0, 1.0};
Point(11) = {0.075945, 0.746831, 0, 1.0};
Point(12) = {0.069900, 0.747328, 0, 1.0};
Point(13) = {0.063857, 0.747809, 0, 1.0};
Point(14) = {0.057816, 0.748246, 0, 1.0};
Point(15) = {0.051777, 0.748652, 0, 1.0};
Point(16) = {0.045741, 0.749014, 0, 1.0};
Point(17) = {0.039707, 0.749346, 0, 1.0};
Point(18) = {0.033674, 0.749663, 0, 1.0};
Point(19) = {0.027648, 0.749875, 0, 1.0};
Point(20) = {0.021632, 0.749938, 0, 1.0};
Point(21) = {0.015615, 0.750000, 0, 1.0};
Point(22) = {0.009603, 0.749988, 0, 1.0};
Point(23) = {0.003601, 0.749825, 0, 1.0};
Point(24) = {-0.001644, 0.749577, 0, 1.0};
Point(25) = {-0.006886, 0.749284, 0, 1.0};
Point(26) = {-0.011367, 0.748859, 0, 1.0};
Point(27) = {-0.015840, 0.748284, 0, 1.0};
Point(28) = {-0.019551, 0.747564, 0, 1.0};
Point(29) = {-0.021768, 0.746985, 0, 1.0};
Point(30) = {-0.024715, 0.746058, 0, 1.0};
Point(31) = {-0.026916, 0.745224, 0, 1.0};
Point(32) = {-0.030548, 0.743276, 0, 1.0};
Point(33) = {-0.031986, 0.742281, 0, 1.0};
Point(34) = {-0.033418, 0.741167, 0, 1.0};
Point(35) = {-0.034837, 0.739873, 0, 1.0};
Point(36) = {-0.036235, 0.738249, 0, 1.0};
Point(37) = {-0.037422, 0.733348, 0, 1.0};
Point(38) = {-0.035851, 0.732292, 0, 1.0};
Point(39) = {-0.034341, 0.732194, 0, 1.0};
Point(40) = {-0.032835, 0.732141, 0, 1.0};
Point(41) = {-0.031330, 0.732118, 0, 1.0};
Point(42) = {-0.029833, 0.732214, 0, 1.0};
Point(43) = {-0.026089, 0.732426, 0, 1.0};
Point(44) = {-0.023839, 0.732496, 0, 1.0};
Point(45) = {-0.020831, 0.732465, 0, 1.0};
Point(46) = {-0.018574, 0.732430, 0, 1.0};
Point(47) = {-0.014807, 0.732298, 0, 1.0};
Point(48) = {-0.010285, 0.732094, 0, 1.0};
Point(49) = {-0.005764, 0.731920, 0, 1.0};
Point(50) = {-0.000497, 0.731824, 0, 1.0};
Point(51) = {0.004762, 0.731848, 0, 1.0};
Point(52) = {0.010767, 0.731965, 0, 1.0};
Point(53) = {0.016765, 0.732187, 0, 1.0};
Point(54) = {0.022758, 0.732499, 0, 1.0};
Point(55) = {0.028744, 0.732901, 0, 1.0};
Point(56) = {0.034728, 0.733347, 0, 1.0};
Point(57) = {0.040710, 0.733823, 0, 1.0};
Point(58) = {0.046687, 0.734375, 0, 1.0};
Point(59) = {0.052661, 0.734971, 0, 1.0};
Point(60) = {0.058633, 0.735597, 0, 1.0};
Point(61) = {0.064602, 0.736268, 0, 1.0};
Point(62) = {0.070568, 0.736984, 0, 1.0};
Point(63) = {0.076532, 0.737730, 0, 1.0};
Point(64) = {0.082495, 0.738506, 0, 1.0};
Point(65) = {0.086963, 0.739140, 0, 1.0};
Point(66) = {0.091431, 0.739789, 0, 1.0};
Point(67) = {0.095897, 0.740454, 0, 1.0};
Point(68) = {0.098875, 0.740886, 0, 1.0};
Point(69) = {0.101107, 0.741241, 0, 1.0};
Point(70) = {0.103340, 0.741581, 0, 1.0};
Point(71) = {0.105572, 0.741935, 0, 1.0};
Point(72) = {0.109292, 0.742521, 0, 1.0};
Point(73) = {-0.112266, -0.743014, 0, 1.0};
Point(74) = {-0.109236, -0.743389, 0, 1.0};
Point(75) = {-0.105449, -0.743836, 0, 1.0};
Point(76) = {-0.103176, -0.744125, 0, 1.0};
Point(77) = {-0.100904, -0.744384, 0, 1.0};
Point(78) = {-0.098633, -0.744644, 0, 1.0};
Point(79) = {-0.095604, -0.744989, 0, 1.0};
Point(80) = {-0.091065, -0.745448, 0, 1.0};
Point(81) = {-0.086528, -0.745876, 0, 1.0};
Point(82) = {-0.081990, -0.746320, 0, 1.0};
Point(83) = {-0.075945, -0.746831, 0, 1.0};
Point(84) = {-0.069900, -0.747328, 0, 1.0};
Point(85) = {-0.063857, -0.747809, 0, 1.0};
Point(86) = {-0.057816, -0.748246, 0, 1.0};
Point(87) = {-0.051777, -0.748652, 0, 1.0};
Point(88) = {-0.045741, -0.749014, 0, 1.0};
Point(89) = {-0.039707, -0.749346, 0, 1.0};
Point(90) = {-0.033674, -0.749663, 0, 1.0};
Point(91) = {-0.027648, -0.749875, 0, 1.0};
Point(92) = {-0.021632, -0.749938, 0, 1.0};
Point(93) = {-0.015615, -0.750000, 0, 1.0};
Point(94) = {-0.009603, -0.749988, 0, 1.0};
Point(95) = {-0.003601, -0.749825, 0, 1.0};
Point(96) = {0.001644, -0.749577, 0, 1.0};
Point(97) = {0.006886, -0.749284, 0, 1.0};
Point(98) = {0.011367, -0.748859, 0, 1.0};
Point(99) = {0.015840, -0.748284, 0, 1.0};
Point(100) = {0.019551, -0.747564, 0, 1.0};
Point(101) = {0.021768, -0.746985, 0, 1.0};
Point(102) = {0.024715, -0.746058, 0, 1.0};
Point(103) = {0.026916, -0.745224, 0, 1.0};
Point(104) = {0.030548, -0.743276, 0, 1.0};
Point(105) = {0.031986, -0.742281, 0, 1.0};
Point(106) = {0.033418, -0.741167, 0, 1.0};
Point(107) = {0.034837, -0.739873, 0, 1.0};
Point(108) = {0.036235, -0.738249, 0, 1.0};
Point(109) = {0.037422, -0.733348, 0, 1.0};
Point(110) = {0.035851, -0.732292, 0, 1.0};
Point(111) = {0.034341, -0.732194, 0, 1.0};
Point(112) = {0.032835, -0.732141, 0, 1.0};
Point(113) = {0.031330, -0.732118, 0, 1.0};
Point(114) = {0.029833, -0.732214, 0, 1.0};
Point(115) = {0.026089, -0.732426, 0, 1.0};
Point(116) = {0.023839, -0.732496, 0, 1.0};
Point(117) = {0.020831, -0.732465, 0, 1.0};
Point(118) = {0.018574, -0.732430, 0, 1.0};
Point(119) = {0.014807, -0.732298, 0, 1.0};
Point(120) = {0.010285, -0.732094, 0, 1.0};
Point(121) = {0.005764, -0.731920, 0, 1.0};
Point(122) = {0.000497, -0.731824, 0, 1.0};
Point(123) = {-0.004762, -0.731848, 0, 1.0};
Point(124) = {-0.010767, -0.731965, 0, 1.0};
Point(125) = {-0.016765, -0.732187, 0, 1.0};
Point(126) = {-0.022758, -0.732499, 0, 1.0};
Point(127) = {-0.028744, -0.732901, 0, 1.0};
Point(128) = {-0.034728, -0.733347, 0, 1.0};
Point(129) = {-0.040710, -0.733823, 0, 1.0};
Point(130) = {-0.046687, -0.734375, 0, 1.0};
Point(131) = {-0.052661, -0.734971, 0, 1.0};
Point(132) = {-0.058633, -0.735597, 0, 1.0};
Point(133) = {-0.064602, -0.736268, 0, 1.0};
Point(134) = {-0.070568, -0.736984, 0, 1.0};
Point(135) = {-0.076532, -0.737730, 0, 1.0};
Point(136) = {-0.082495, -0.738506, 0, 1.0};
Point(137) = {-0.086963, -0.739140, 0, 1.0};
Point(138) = {-0.091431, -0.739789, 0, 1.0};
Point(139) = {-0.095897, -0.740454, 0, 1.0};
Point(140) = {-0.098875, -0.740886, 0, 1.0};
Point(141) = {-0.101107, -0.741241, 0, 1.0};
Point(142) = {-0.103340, -0.741581, 0, 1.0};
Point(143) = {-0.105572, -0.741935, 0, 1.0};
Point(144) = {-0.109292, -0.742521, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:23};
Spline(2) = {23:50};
Spline(3) = {50:72};
Spline(4) = {72,1};

// Lines: second blade (splines 5-8)
Spline(5) = {73:95};
Spline(6) = {95:122};
Spline(7) = {122:144};
Spline(8) = {144,73};

// Outer domain (points 20001-4 and lines)
Point(145) = {-13.50000000, -15.00000000, 0, 1.0};
Point(146) = {-13.50000000, 15.00000000, 0, 1.0};
Point(147) = {13.50000000, 15.00000000, 0, 1.0};
Point(148) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {145, 146};
Line(12) = {146, 147};
Line(13) = {147, 148};
Line(14) = {145, 148};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
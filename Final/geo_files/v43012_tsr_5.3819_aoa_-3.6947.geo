SetFactory("OpenCASCADE");

Point(1) = {0.074780, 0.743414, 0, 1.0};
Point(2) = {0.073095, 0.743617, 0, 1.0};
Point(3) = {0.070741, 0.743917, 0, 1.0};
Point(4) = {0.068389, 0.744185, 0, 1.0};
Point(5) = {0.066037, 0.744454, 0, 1.0};
Point(6) = {0.062901, 0.744811, 0, 1.0};
Point(7) = {0.058201, 0.745286, 0, 1.0};
Point(8) = {0.053503, 0.745730, 0, 1.0};
Point(9) = {0.048804, 0.746189, 0, 1.0};
Point(10) = {0.042544, 0.746719, 0, 1.0};
Point(11) = {0.036285, 0.747233, 0, 1.0};
Point(12) = {0.030027, 0.747731, 0, 1.0};
Point(13) = {0.023772, 0.748184, 0, 1.0};
Point(14) = {0.017519, 0.748605, 0, 1.0};
Point(15) = {0.011269, 0.748979, 0, 1.0};
Point(16) = {0.005021, 0.749323, 0, 1.0};
Point(17) = {-0.001226, 0.749651, 0, 1.0};
Point(18) = {-0.007466, 0.749871, 0, 1.0};
Point(19) = {-0.013696, 0.749935, 0, 1.0};
Point(20) = {-0.019926, 0.750000, 0, 1.0};
Point(21) = {-0.026151, 0.749987, 0, 1.0};
Point(22) = {-0.032365, 0.749819, 0, 1.0};
Point(23) = {-0.037796, 0.749562, 0, 1.0};
Point(24) = {-0.043224, 0.749258, 0, 1.0};
Point(25) = {-0.047865, 0.748818, 0, 1.0};
Point(26) = {-0.052496, 0.748224, 0, 1.0};
Point(27) = {-0.056339, 0.747477, 0, 1.0};
Point(28) = {-0.058635, 0.746878, 0, 1.0};
Point(29) = {-0.061686, 0.745918, 0, 1.0};
Point(30) = {-0.063965, 0.745055, 0, 1.0};
Point(31) = {-0.067726, 0.743038, 0, 1.0};
Point(32) = {-0.069216, 0.742008, 0, 1.0};
Point(33) = {-0.070698, 0.740854, 0, 1.0};
Point(34) = {-0.072168, 0.739514, 0, 1.0};
Point(35) = {-0.073615, 0.737832, 0, 1.0};
Point(36) = {-0.074844, 0.732757, 0, 1.0};
Point(37) = {-0.073217, 0.731664, 0, 1.0};
Point(38) = {-0.071654, 0.731562, 0, 1.0};
Point(39) = {-0.070094, 0.731507, 0, 1.0};
Point(40) = {-0.068536, 0.731483, 0, 1.0};
Point(41) = {-0.066986, 0.731583, 0, 1.0};
Point(42) = {-0.063109, 0.731803, 0, 1.0};
Point(43) = {-0.060779, 0.731875, 0, 1.0};
Point(44) = {-0.057664, 0.731843, 0, 1.0};
Point(45) = {-0.055327, 0.731807, 0, 1.0};
Point(46) = {-0.051427, 0.731670, 0, 1.0};
Point(47) = {-0.046744, 0.731459, 0, 1.0};
Point(48) = {-0.042063, 0.731278, 0, 1.0};
Point(49) = {-0.036609, 0.731179, 0, 1.0};
Point(50) = {-0.031163, 0.731204, 0, 1.0};
Point(51) = {-0.024945, 0.731325, 0, 1.0};
Point(52) = {-0.018734, 0.731555, 0, 1.0};
Point(53) = {-0.012530, 0.731878, 0, 1.0};
Point(54) = {-0.006331, 0.732294, 0, 1.0};
Point(55) = {-0.000135, 0.732756, 0, 1.0};
Point(56) = {0.006059, 0.733250, 0, 1.0};
Point(57) = {0.012248, 0.733821, 0, 1.0};
Point(58) = {0.018434, 0.734438, 0, 1.0};
Point(59) = {0.024618, 0.735086, 0, 1.0};
Point(60) = {0.030799, 0.735781, 0, 1.0};
Point(61) = {0.036977, 0.736522, 0, 1.0};
Point(62) = {0.043153, 0.737295, 0, 1.0};
Point(63) = {0.049327, 0.738098, 0, 1.0};
Point(64) = {0.053953, 0.738755, 0, 1.0};
Point(65) = {0.058579, 0.739427, 0, 1.0};
Point(66) = {0.063204, 0.740115, 0, 1.0};
Point(67) = {0.066288, 0.740563, 0, 1.0};
Point(68) = {0.068599, 0.740930, 0, 1.0};
Point(69) = {0.070911, 0.741282, 0, 1.0};
Point(70) = {0.073222, 0.741649, 0, 1.0};
Point(71) = {0.074878, 0.741904, 0, 1.0};
Point(72) = {-0.074780, -0.743414, 0, 1.0};
Point(73) = {-0.073095, -0.743617, 0, 1.0};
Point(74) = {-0.070741, -0.743917, 0, 1.0};
Point(75) = {-0.068389, -0.744185, 0, 1.0};
Point(76) = {-0.066037, -0.744454, 0, 1.0};
Point(77) = {-0.062901, -0.744811, 0, 1.0};
Point(78) = {-0.058201, -0.745286, 0, 1.0};
Point(79) = {-0.053503, -0.745730, 0, 1.0};
Point(80) = {-0.048804, -0.746189, 0, 1.0};
Point(81) = {-0.042544, -0.746719, 0, 1.0};
Point(82) = {-0.036285, -0.747233, 0, 1.0};
Point(83) = {-0.030027, -0.747731, 0, 1.0};
Point(84) = {-0.023772, -0.748184, 0, 1.0};
Point(85) = {-0.017519, -0.748605, 0, 1.0};
Point(86) = {-0.011269, -0.748979, 0, 1.0};
Point(87) = {-0.005021, -0.749323, 0, 1.0};
Point(88) = {0.001226, -0.749651, 0, 1.0};
Point(89) = {0.007466, -0.749871, 0, 1.0};
Point(90) = {0.013696, -0.749935, 0, 1.0};
Point(91) = {0.019926, -0.750000, 0, 1.0};
Point(92) = {0.026151, -0.749987, 0, 1.0};
Point(93) = {0.032365, -0.749819, 0, 1.0};
Point(94) = {0.037796, -0.749562, 0, 1.0};
Point(95) = {0.043224, -0.749258, 0, 1.0};
Point(96) = {0.047865, -0.748818, 0, 1.0};
Point(97) = {0.052496, -0.748224, 0, 1.0};
Point(98) = {0.056339, -0.747477, 0, 1.0};
Point(99) = {0.058635, -0.746878, 0, 1.0};
Point(100) = {0.061686, -0.745918, 0, 1.0};
Point(101) = {0.063965, -0.745055, 0, 1.0};
Point(102) = {0.067726, -0.743038, 0, 1.0};
Point(103) = {0.069216, -0.742008, 0, 1.0};
Point(104) = {0.070698, -0.740854, 0, 1.0};
Point(105) = {0.072168, -0.739514, 0, 1.0};
Point(106) = {0.073615, -0.737832, 0, 1.0};
Point(107) = {0.074844, -0.732757, 0, 1.0};
Point(108) = {0.073217, -0.731664, 0, 1.0};
Point(109) = {0.071654, -0.731562, 0, 1.0};
Point(110) = {0.070094, -0.731507, 0, 1.0};
Point(111) = {0.068536, -0.731483, 0, 1.0};
Point(112) = {0.066986, -0.731583, 0, 1.0};
Point(113) = {0.063109, -0.731803, 0, 1.0};
Point(114) = {0.060779, -0.731875, 0, 1.0};
Point(115) = {0.057664, -0.731843, 0, 1.0};
Point(116) = {0.055327, -0.731807, 0, 1.0};
Point(117) = {0.051427, -0.731670, 0, 1.0};
Point(118) = {0.046744, -0.731459, 0, 1.0};
Point(119) = {0.042063, -0.731278, 0, 1.0};
Point(120) = {0.036609, -0.731179, 0, 1.0};
Point(121) = {0.031163, -0.731204, 0, 1.0};
Point(122) = {0.024945, -0.731325, 0, 1.0};
Point(123) = {0.018734, -0.731555, 0, 1.0};
Point(124) = {0.012530, -0.731878, 0, 1.0};
Point(125) = {0.006331, -0.732294, 0, 1.0};
Point(126) = {0.000135, -0.732756, 0, 1.0};
Point(127) = {-0.006059, -0.733250, 0, 1.0};
Point(128) = {-0.012248, -0.733821, 0, 1.0};
Point(129) = {-0.018434, -0.734438, 0, 1.0};
Point(130) = {-0.024618, -0.735086, 0, 1.0};
Point(131) = {-0.030799, -0.735781, 0, 1.0};
Point(132) = {-0.036977, -0.736522, 0, 1.0};
Point(133) = {-0.043153, -0.737295, 0, 1.0};
Point(134) = {-0.049327, -0.738098, 0, 1.0};
Point(135) = {-0.053953, -0.738755, 0, 1.0};
Point(136) = {-0.058579, -0.739427, 0, 1.0};
Point(137) = {-0.063204, -0.740115, 0, 1.0};
Point(138) = {-0.066288, -0.740563, 0, 1.0};
Point(139) = {-0.068599, -0.740930, 0, 1.0};
Point(140) = {-0.070911, -0.741282, 0, 1.0};
Point(141) = {-0.073222, -0.741649, 0, 1.0};
Point(142) = {-0.074878, -0.741904, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:23};
Spline(2) = {23:50};
Spline(3) = {50:71};
Spline(4) = {71,1};

// Lines: second blade (splines 5-8)
Spline(5) = {72:94};
Spline(6) = {94:121};
Spline(7) = {121:142};
Spline(8) = {142,72};

// Outer domain (points 20001-4 and lines)
Point(143) = {-13.50000000, -15.00000000, 0, 1.0};
Point(144) = {-13.50000000, 15.00000000, 0, 1.0};
Point(145) = {13.50000000, 15.00000000, 0, 1.0};
Point(146) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {143, 144};
Line(12) = {144, 145};
Line(13) = {145, 146};
Line(14) = {143, 146};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074286, 0.743505, 0, 1.0};
Point(2) = {0.072596, 0.743712, 0, 1.0};
Point(3) = {0.068689, 0.744180, 0, 1.0};
Point(4) = {0.064785, 0.744633, 0, 1.0};
Point(5) = {0.060883, 0.745071, 0, 1.0};
Point(6) = {0.056981, 0.745509, 0, 1.0};
Point(7) = {0.053079, 0.745947, 0, 1.0};
Point(8) = {0.049177, 0.746385, 0, 1.0};
Point(9) = {0.045274, 0.746823, 0, 1.0};
Point(10) = {0.041374, 0.747246, 0, 1.0};
Point(11) = {0.037477, 0.747654, 0, 1.0};
Point(12) = {0.033581, 0.748047, 0, 1.0};
Point(13) = {0.029689, 0.748410, 0, 1.0};
Point(14) = {0.025802, 0.748742, 0, 1.0};
Point(15) = {0.021919, 0.749045, 0, 1.0};
Point(16) = {0.018040, 0.749317, 0, 1.0};
Point(17) = {0.014167, 0.749544, 0, 1.0};
Point(18) = {0.010301, 0.749726, 0, 1.0};
Point(19) = {0.006441, 0.749862, 0, 1.0};
Point(20) = {0.002587, 0.749954, 0, 1.0};
Point(21) = {-0.001260, 0.750000, 0, 1.0};
Point(22) = {-0.005099, 0.749986, 0, 1.0};
Point(23) = {-0.008930, 0.749912, 0, 1.0};
Point(24) = {-0.012752, 0.749777, 0, 1.0};
Point(25) = {-0.016563, 0.749567, 0, 1.0};
Point(26) = {-0.020364, 0.749282, 0, 1.0};
Point(27) = {-0.024155, 0.748921, 0, 1.0};
Point(28) = {-0.027935, 0.748485, 0, 1.0};
Point(29) = {-0.031702, 0.747959, 0, 1.0};
Point(30) = {-0.035455, 0.747327, 0, 1.0};
Point(31) = {-0.039193, 0.746589, 0, 1.0};
Point(32) = {-0.042916, 0.745746, 0, 1.0};
Point(33) = {-0.046622, 0.744783, 0, 1.0};
Point(34) = {-0.050310, 0.743684, 0, 1.0};
Point(35) = {-0.053976, 0.742434, 0, 1.0};
Point(36) = {-0.057619, 0.741019, 0, 1.0};
Point(37) = {-0.061230, 0.739377, 0, 1.0};
Point(38) = {-0.064798, 0.737419, 0, 1.0};
Point(39) = {-0.068293, 0.734949, 0, 1.0};
Point(40) = {-0.069998, 0.733405, 0, 1.0};
Point(41) = {-0.071648, 0.731469, 0, 1.0};
Point(42) = {-0.073201, 0.728840, 0, 1.0};
Point(43) = {-0.074037, 0.726572, 0, 1.0};
Point(44) = {-0.074305, 0.725198, 0, 1.0};
Point(45) = {-0.074278, 0.722805, 0, 1.0};
Point(46) = {-0.073752, 0.721234, 0, 1.0};
Point(47) = {-0.073152, 0.720243, 0, 1.0};
Point(48) = {-0.071837, 0.719075, 0, 1.0};
Point(49) = {-0.069770, 0.718027, 0, 1.0};
Point(50) = {-0.067751, 0.717326, 0, 1.0};
Point(51) = {-0.065758, 0.716805, 0, 1.0};
Point(52) = {-0.061818, 0.716096, 0, 1.0};
Point(53) = {-0.057916, 0.715658, 0, 1.0};
Point(54) = {-0.054041, 0.715416, 0, 1.0};
Point(55) = {-0.050186, 0.715309, 0, 1.0};
Point(56) = {-0.046347, 0.715323, 0, 1.0};
Point(57) = {-0.042518, 0.715413, 0, 1.0};
Point(58) = {-0.038700, 0.715577, 0, 1.0};
Point(59) = {-0.034893, 0.715818, 0, 1.0};
Point(60) = {-0.031094, 0.716118, 0, 1.0};
Point(61) = {-0.027303, 0.716479, 0, 1.0};
Point(62) = {-0.023521, 0.716900, 0, 1.0};
Point(63) = {-0.019748, 0.717381, 0, 1.0};
Point(64) = {-0.015980, 0.717907, 0, 1.0};
Point(65) = {-0.012219, 0.718479, 0, 1.0};
Point(66) = {-0.008467, 0.719111, 0, 1.0};
Point(67) = {-0.004723, 0.719803, 0, 1.0};
Point(68) = {-0.000987, 0.720555, 0, 1.0};
Point(69) = {0.002741, 0.721368, 0, 1.0};
Point(70) = {0.006457, 0.722256, 0, 1.0};
Point(71) = {0.010162, 0.723235, 0, 1.0};
Point(72) = {0.013855, 0.724289, 0, 1.0};
Point(73) = {0.017540, 0.725403, 0, 1.0};
Point(74) = {0.021217, 0.726577, 0, 1.0};
Point(75) = {0.024886, 0.727812, 0, 1.0};
Point(76) = {0.028546, 0.729107, 0, 1.0};
Point(77) = {0.032201, 0.730432, 0, 1.0};
Point(78) = {0.035855, 0.731772, 0, 1.0};
Point(79) = {0.039509, 0.733112, 0, 1.0};
Point(80) = {0.043162, 0.734452, 0, 1.0};
Point(81) = {0.046816, 0.735793, 0, 1.0};
Point(82) = {0.050478, 0.737072, 0, 1.0};
Point(83) = {0.054146, 0.738307, 0, 1.0};
Point(84) = {0.057827, 0.739451, 0, 1.0};
Point(85) = {0.061527, 0.740460, 0, 1.0};
Point(86) = {0.065261, 0.741228, 0, 1.0};
Point(87) = {0.069026, 0.741769, 0, 1.0};
Point(88) = {0.072834, 0.742009, 0, 1.0};
Point(89) = {0.074496, 0.742006, 0, 1.0};
Point(90) = {-0.074286, -0.743505, 0, 1.0};
Point(91) = {-0.072596, -0.743712, 0, 1.0};
Point(92) = {-0.068689, -0.744180, 0, 1.0};
Point(93) = {-0.064785, -0.744633, 0, 1.0};
Point(94) = {-0.060883, -0.745071, 0, 1.0};
Point(95) = {-0.056981, -0.745509, 0, 1.0};
Point(96) = {-0.053079, -0.745947, 0, 1.0};
Point(97) = {-0.049177, -0.746385, 0, 1.0};
Point(98) = {-0.045274, -0.746823, 0, 1.0};
Point(99) = {-0.041374, -0.747246, 0, 1.0};
Point(100) = {-0.037477, -0.747654, 0, 1.0};
Point(101) = {-0.033581, -0.748047, 0, 1.0};
Point(102) = {-0.029689, -0.748410, 0, 1.0};
Point(103) = {-0.025802, -0.748742, 0, 1.0};
Point(104) = {-0.021919, -0.749045, 0, 1.0};
Point(105) = {-0.018040, -0.749317, 0, 1.0};
Point(106) = {-0.014167, -0.749544, 0, 1.0};
Point(107) = {-0.010301, -0.749726, 0, 1.0};
Point(108) = {-0.006441, -0.749862, 0, 1.0};
Point(109) = {-0.002587, -0.749954, 0, 1.0};
Point(110) = {0.001260, -0.750000, 0, 1.0};
Point(111) = {0.005099, -0.749986, 0, 1.0};
Point(112) = {0.008930, -0.749912, 0, 1.0};
Point(113) = {0.012752, -0.749777, 0, 1.0};
Point(114) = {0.016563, -0.749567, 0, 1.0};
Point(115) = {0.020364, -0.749282, 0, 1.0};
Point(116) = {0.024155, -0.748921, 0, 1.0};
Point(117) = {0.027935, -0.748485, 0, 1.0};
Point(118) = {0.031702, -0.747959, 0, 1.0};
Point(119) = {0.035455, -0.747327, 0, 1.0};
Point(120) = {0.039193, -0.746589, 0, 1.0};
Point(121) = {0.042916, -0.745746, 0, 1.0};
Point(122) = {0.046622, -0.744783, 0, 1.0};
Point(123) = {0.050310, -0.743684, 0, 1.0};
Point(124) = {0.053976, -0.742434, 0, 1.0};
Point(125) = {0.057619, -0.741019, 0, 1.0};
Point(126) = {0.061230, -0.739377, 0, 1.0};
Point(127) = {0.064798, -0.737419, 0, 1.0};
Point(128) = {0.068293, -0.734949, 0, 1.0};
Point(129) = {0.069998, -0.733405, 0, 1.0};
Point(130) = {0.071648, -0.731469, 0, 1.0};
Point(131) = {0.073201, -0.728840, 0, 1.0};
Point(132) = {0.074037, -0.726572, 0, 1.0};
Point(133) = {0.074305, -0.725198, 0, 1.0};
Point(134) = {0.074278, -0.722805, 0, 1.0};
Point(135) = {0.073752, -0.721234, 0, 1.0};
Point(136) = {0.073152, -0.720243, 0, 1.0};
Point(137) = {0.071837, -0.719075, 0, 1.0};
Point(138) = {0.069770, -0.718027, 0, 1.0};
Point(139) = {0.067751, -0.717326, 0, 1.0};
Point(140) = {0.065758, -0.716805, 0, 1.0};
Point(141) = {0.061818, -0.716096, 0, 1.0};
Point(142) = {0.057916, -0.715658, 0, 1.0};
Point(143) = {0.054041, -0.715416, 0, 1.0};
Point(144) = {0.050186, -0.715309, 0, 1.0};
Point(145) = {0.046347, -0.715323, 0, 1.0};
Point(146) = {0.042518, -0.715413, 0, 1.0};
Point(147) = {0.038700, -0.715577, 0, 1.0};
Point(148) = {0.034893, -0.715818, 0, 1.0};
Point(149) = {0.031094, -0.716118, 0, 1.0};
Point(150) = {0.027303, -0.716479, 0, 1.0};
Point(151) = {0.023521, -0.716900, 0, 1.0};
Point(152) = {0.019748, -0.717381, 0, 1.0};
Point(153) = {0.015980, -0.717907, 0, 1.0};
Point(154) = {0.012219, -0.718479, 0, 1.0};
Point(155) = {0.008467, -0.719111, 0, 1.0};
Point(156) = {0.004723, -0.719803, 0, 1.0};
Point(157) = {0.000987, -0.720555, 0, 1.0};
Point(158) = {-0.002741, -0.721368, 0, 1.0};
Point(159) = {-0.006457, -0.722256, 0, 1.0};
Point(160) = {-0.010162, -0.723235, 0, 1.0};
Point(161) = {-0.013855, -0.724289, 0, 1.0};
Point(162) = {-0.017540, -0.725403, 0, 1.0};
Point(163) = {-0.021217, -0.726577, 0, 1.0};
Point(164) = {-0.024886, -0.727812, 0, 1.0};
Point(165) = {-0.028546, -0.729107, 0, 1.0};
Point(166) = {-0.032201, -0.730432, 0, 1.0};
Point(167) = {-0.035855, -0.731772, 0, 1.0};
Point(168) = {-0.039509, -0.733112, 0, 1.0};
Point(169) = {-0.043162, -0.734452, 0, 1.0};
Point(170) = {-0.046816, -0.735793, 0, 1.0};
Point(171) = {-0.050478, -0.737072, 0, 1.0};
Point(172) = {-0.054146, -0.738307, 0, 1.0};
Point(173) = {-0.057827, -0.739451, 0, 1.0};
Point(174) = {-0.061527, -0.740460, 0, 1.0};
Point(175) = {-0.065261, -0.741228, 0, 1.0};
Point(176) = {-0.069026, -0.741769, 0, 1.0};
Point(177) = {-0.072834, -0.742009, 0, 1.0};
Point(178) = {-0.074496, -0.742006, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:31};
Spline(2) = {31:59};
Spline(3) = {59:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:120};
Spline(6) = {120:148};
Spline(7) = {148:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
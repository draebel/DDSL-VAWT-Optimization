SetFactory("OpenCASCADE");

Point(1) = {0.149771, 0.739954, 0, 1.0};
Point(2) = {0.148908, 0.740087, 0, 1.0};
Point(3) = {0.146334, 0.740478, 0, 1.0};
Point(4) = {0.142095, 0.741118, 0, 1.0};
Point(5) = {0.136260, 0.741994, 0, 1.0};
Point(6) = {0.128934, 0.743073, 0, 1.0};
Point(7) = {0.120240, 0.744296, 0, 1.0};
Point(8) = {0.110333, 0.745582, 0, 1.0};
Point(9) = {0.099384, 0.746838, 0, 1.0};
Point(10) = {0.087585, 0.747971, 0, 1.0};
Point(11) = {0.075140, 0.748905, 0, 1.0};
Point(12) = {0.062263, 0.749584, 0, 1.0};
Point(13) = {0.049178, 0.749959, 0, 1.0};
Point(14) = {0.036109, 0.750000, 0, 1.0};
Point(15) = {0.023280, 0.749676, 0, 1.0};
Point(16) = {0.017025, 0.749369, 0, 1.0};
Point(17) = {0.010914, 0.748962, 0, 1.0};
Point(18) = {0.004971, 0.748455, 0, 1.0};
Point(19) = {-0.000779, 0.747850, 0, 1.0};
Point(20) = {-0.006309, 0.747150, 0, 1.0};
Point(21) = {-0.011596, 0.746363, 0, 1.0};
Point(22) = {-0.016618, 0.745490, 0, 1.0};
Point(23) = {-0.021354, 0.744542, 0, 1.0};
Point(24) = {-0.025784, 0.743527, 0, 1.0};
Point(25) = {-0.029890, 0.742455, 0, 1.0};
Point(26) = {-0.033651, 0.741340, 0, 1.0};
Point(27) = {-0.037056, 0.740188, 0, 1.0};
Point(28) = {-0.040088, 0.739002, 0, 1.0};
Point(29) = {-0.042733, 0.737780, 0, 1.0};
Point(30) = {-0.044981, 0.736511, 0, 1.0};
Point(31) = {-0.046819, 0.735210, 0, 1.0};
Point(32) = {-0.048244, 0.733908, 0, 1.0};
Point(33) = {-0.049252, 0.732674, 0, 1.0};
Point(34) = {-0.049843, 0.731577, 0, 1.0};
Point(35) = {-0.050014, 0.730674, 0, 1.0};
Point(36) = {-0.049766, 0.729969, 0, 1.0};
Point(37) = {-0.049097, 0.729426, 0, 1.0};
Point(38) = {-0.048008, 0.728982, 0, 1.0};
Point(39) = {-0.046501, 0.728573, 0, 1.0};
Point(40) = {-0.044582, 0.728177, 0, 1.0};
Point(41) = {-0.042255, 0.727793, 0, 1.0};
Point(42) = {-0.039535, 0.727449, 0, 1.0};
Point(43) = {-0.036432, 0.727169, 0, 1.0};
Point(44) = {-0.032963, 0.726971, 0, 1.0};
Point(45) = {-0.029143, 0.726853, 0, 1.0};
Point(46) = {-0.024985, 0.726820, 0, 1.0};
Point(47) = {-0.020508, 0.726868, 0, 1.0};
Point(48) = {-0.015733, 0.727005, 0, 1.0};
Point(49) = {-0.010680, 0.727231, 0, 1.0};
Point(50) = {-0.005371, 0.727555, 0, 1.0};
Point(51) = {0.000173, 0.727982, 0, 1.0};
Point(52) = {0.005926, 0.728516, 0, 1.0};
Point(53) = {0.011862, 0.729155, 0, 1.0};
Point(54) = {0.017958, 0.729891, 0, 1.0};
Point(55) = {0.024188, 0.730704, 0, 1.0};
Point(56) = {0.036947, 0.732492, 0, 1.0};
Point(57) = {0.049924, 0.734365, 0, 1.0};
Point(58) = {0.062904, 0.736180, 0, 1.0};
Point(59) = {0.075671, 0.737812, 0, 1.0};
Point(60) = {0.088006, 0.739161, 0, 1.0};
Point(61) = {0.099704, 0.740170, 0, 1.0};
Point(62) = {0.110561, 0.740814, 0, 1.0};
Point(63) = {0.120392, 0.741112, 0, 1.0};
Point(64) = {0.129028, 0.741123, 0, 1.0};
Point(65) = {0.136311, 0.740927, 0, 1.0};
Point(66) = {0.142119, 0.740616, 0, 1.0};
Point(67) = {0.146343, 0.740290, 0, 1.0};
Point(68) = {0.148910, 0.740045, 0, 1.0};
Point(69) = {-0.149771, -0.739954, 0, 1.0};
Point(70) = {-0.148908, -0.740087, 0, 1.0};
Point(71) = {-0.146334, -0.740478, 0, 1.0};
Point(72) = {-0.142095, -0.741118, 0, 1.0};
Point(73) = {-0.136260, -0.741994, 0, 1.0};
Point(74) = {-0.128934, -0.743073, 0, 1.0};
Point(75) = {-0.120240, -0.744296, 0, 1.0};
Point(76) = {-0.110333, -0.745582, 0, 1.0};
Point(77) = {-0.099384, -0.746838, 0, 1.0};
Point(78) = {-0.087585, -0.747971, 0, 1.0};
Point(79) = {-0.075140, -0.748905, 0, 1.0};
Point(80) = {-0.062263, -0.749584, 0, 1.0};
Point(81) = {-0.049178, -0.749959, 0, 1.0};
Point(82) = {-0.036109, -0.750000, 0, 1.0};
Point(83) = {-0.023280, -0.749676, 0, 1.0};
Point(84) = {-0.017025, -0.749369, 0, 1.0};
Point(85) = {-0.010914, -0.748962, 0, 1.0};
Point(86) = {-0.004971, -0.748455, 0, 1.0};
Point(87) = {0.000779, -0.747850, 0, 1.0};
Point(88) = {0.006309, -0.747150, 0, 1.0};
Point(89) = {0.011596, -0.746363, 0, 1.0};
Point(90) = {0.016618, -0.745490, 0, 1.0};
Point(91) = {0.021354, -0.744542, 0, 1.0};
Point(92) = {0.025784, -0.743527, 0, 1.0};
Point(93) = {0.029890, -0.742455, 0, 1.0};
Point(94) = {0.033651, -0.741340, 0, 1.0};
Point(95) = {0.037056, -0.740188, 0, 1.0};
Point(96) = {0.040088, -0.739002, 0, 1.0};
Point(97) = {0.042733, -0.737780, 0, 1.0};
Point(98) = {0.044981, -0.736511, 0, 1.0};
Point(99) = {0.046819, -0.735210, 0, 1.0};
Point(100) = {0.048244, -0.733908, 0, 1.0};
Point(101) = {0.049252, -0.732674, 0, 1.0};
Point(102) = {0.049843, -0.731577, 0, 1.0};
Point(103) = {0.050014, -0.730674, 0, 1.0};
Point(104) = {0.049766, -0.729969, 0, 1.0};
Point(105) = {0.049097, -0.729426, 0, 1.0};
Point(106) = {0.048008, -0.728982, 0, 1.0};
Point(107) = {0.046501, -0.728573, 0, 1.0};
Point(108) = {0.044582, -0.728177, 0, 1.0};
Point(109) = {0.042255, -0.727793, 0, 1.0};
Point(110) = {0.039535, -0.727449, 0, 1.0};
Point(111) = {0.036432, -0.727169, 0, 1.0};
Point(112) = {0.032963, -0.726971, 0, 1.0};
Point(113) = {0.029143, -0.726853, 0, 1.0};
Point(114) = {0.024985, -0.726820, 0, 1.0};
Point(115) = {0.020508, -0.726868, 0, 1.0};
Point(116) = {0.015733, -0.727005, 0, 1.0};
Point(117) = {0.010680, -0.727231, 0, 1.0};
Point(118) = {0.005371, -0.727555, 0, 1.0};
Point(119) = {-0.000173, -0.727982, 0, 1.0};
Point(120) = {-0.005926, -0.728516, 0, 1.0};
Point(121) = {-0.011862, -0.729155, 0, 1.0};
Point(122) = {-0.017958, -0.729891, 0, 1.0};
Point(123) = {-0.024188, -0.730704, 0, 1.0};
Point(124) = {-0.036947, -0.732492, 0, 1.0};
Point(125) = {-0.049924, -0.734365, 0, 1.0};
Point(126) = {-0.062904, -0.736180, 0, 1.0};
Point(127) = {-0.075671, -0.737812, 0, 1.0};
Point(128) = {-0.088006, -0.739161, 0, 1.0};
Point(129) = {-0.099704, -0.740170, 0, 1.0};
Point(130) = {-0.110561, -0.740814, 0, 1.0};
Point(131) = {-0.120392, -0.741112, 0, 1.0};
Point(132) = {-0.129028, -0.741123, 0, 1.0};
Point(133) = {-0.136311, -0.740927, 0, 1.0};
Point(134) = {-0.142119, -0.740616, 0, 1.0};
Point(135) = {-0.146343, -0.740290, 0, 1.0};
Point(136) = {-0.148910, -0.740045, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:52};
Spline(3) = {52:68};
Spline(4) = {68,1};

// Lines: second blade (splines 5-8)
Spline(5) = {69:86};
Spline(6) = {86:120};
Spline(7) = {120:136};
Spline(8) = {136,69};

// Outer domain (points 20001-4 and lines)
Point(137) = {-13.50000000, -15.00000000, 0, 1.0};
Point(138) = {-13.50000000, 15.00000000, 0, 1.0};
Point(139) = {13.50000000, 15.00000000, 0, 1.0};
Point(140) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {137, 138};
Line(12) = {138, 139};
Line(13) = {139, 140};
Line(14) = {137, 140};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
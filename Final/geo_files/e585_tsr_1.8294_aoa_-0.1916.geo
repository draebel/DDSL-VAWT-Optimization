SetFactory("OpenCASCADE");

Point(1) = {0.074993, 0.734325, 0, 1.0};
Point(2) = {0.074265, 0.734536, 0, 1.0};
Point(3) = {0.070272, 0.735668, 0, 1.0};
Point(4) = {0.065557, 0.736951, 0, 1.0};
Point(5) = {0.060205, 0.738371, 0, 1.0};
Point(6) = {0.054302, 0.739899, 0, 1.0};
Point(7) = {0.047950, 0.741495, 0, 1.0};
Point(8) = {0.041233, 0.743119, 0, 1.0};
Point(9) = {0.034263, 0.744713, 0, 1.0};
Point(10) = {0.027132, 0.746203, 0, 1.0};
Point(11) = {0.019903, 0.747500, 0, 1.0};
Point(12) = {0.012601, 0.748543, 0, 1.0};
Point(13) = {0.005256, 0.749314, 0, 1.0};
Point(14) = {-0.002086, 0.749799, 0, 1.0};
Point(15) = {-0.009758, 0.750000, 0, 1.0};
Point(16) = {-0.016568, 0.749930, 0, 1.0};
Point(17) = {-0.023590, 0.749600, 0, 1.0};
Point(18) = {-0.030381, 0.749030, 0, 1.0};
Point(19) = {-0.036873, 0.748229, 0, 1.0};
Point(20) = {-0.043007, 0.747217, 0, 1.0};
Point(21) = {-0.048724, 0.746012, 0, 1.0};
Point(22) = {-0.053975, 0.744635, 0, 1.0};
Point(23) = {-0.058715, 0.743111, 0, 1.0};
Point(24) = {-0.062901, 0.741472, 0, 1.0};
Point(25) = {-0.066503, 0.739748, 0, 1.0};
Point(26) = {-0.069495, 0.737980, 0, 1.0};
Point(27) = {-0.071856, 0.736218, 0, 1.0};
Point(28) = {-0.073572, 0.734521, 0, 1.0};
Point(29) = {-0.074627, 0.732962, 0, 1.0};
Point(30) = {-0.074870, 0.732374, 0, 1.0};
Point(31) = {-0.074969, 0.731984, 0, 1.0};
Point(32) = {-0.075000, 0.731744, 0, 1.0};
Point(33) = {-0.074999, 0.731521, 0, 1.0};
Point(34) = {-0.074987, 0.731419, 0, 1.0};
Point(35) = {-0.074967, 0.731323, 0, 1.0};
Point(36) = {-0.074935, 0.731235, 0, 1.0};
Point(37) = {-0.074888, 0.731154, 0, 1.0};
Point(38) = {-0.074823, 0.731074, 0, 1.0};
Point(39) = {-0.074746, 0.730994, 0, 1.0};
Point(40) = {-0.074558, 0.730834, 0, 1.0};
Point(41) = {-0.074327, 0.730676, 0, 1.0};
Point(42) = {-0.073907, 0.730442, 0, 1.0};
Point(43) = {-0.072859, 0.729998, 0, 1.0};
Point(44) = {-0.070363, 0.729308, 0, 1.0};
Point(45) = {-0.067009, 0.728720, 0, 1.0};
Point(46) = {-0.062836, 0.728233, 0, 1.0};
Point(47) = {-0.057888, 0.727842, 0, 1.0};
Point(48) = {-0.052222, 0.727531, 0, 1.0};
Point(49) = {-0.045915, 0.727290, 0, 1.0};
Point(50) = {-0.039046, 0.727118, 0, 1.0};
Point(51) = {-0.031703, 0.727009, 0, 1.0};
Point(52) = {-0.023978, 0.726962, 0, 1.0};
Point(53) = {-0.015968, 0.726980, 0, 1.0};
Point(54) = {-0.007774, 0.727067, 0, 1.0};
Point(55) = {0.000500, 0.727231, 0, 1.0};
Point(56) = {0.008753, 0.727488, 0, 1.0};
Point(57) = {0.016879, 0.727875, 0, 1.0};
Point(58) = {0.024832, 0.728453, 0, 1.0};
Point(59) = {0.032617, 0.729225, 0, 1.0};
Point(60) = {0.040229, 0.730133, 0, 1.0};
Point(61) = {0.047652, 0.731067, 0, 1.0};
Point(62) = {0.054775, 0.731870, 0, 1.0};
Point(63) = {0.061413, 0.732450, 0, 1.0};
Point(64) = {0.067387, 0.732776, 0, 1.0};
Point(65) = {0.072528, 0.732850, 0, 1.0};
Point(66) = {0.074998, 0.732790, 0, 1.0};
Point(67) = {-0.074993, -0.734325, 0, 1.0};
Point(68) = {-0.074265, -0.734536, 0, 1.0};
Point(69) = {-0.070272, -0.735668, 0, 1.0};
Point(70) = {-0.065557, -0.736951, 0, 1.0};
Point(71) = {-0.060205, -0.738371, 0, 1.0};
Point(72) = {-0.054302, -0.739899, 0, 1.0};
Point(73) = {-0.047950, -0.741495, 0, 1.0};
Point(74) = {-0.041233, -0.743119, 0, 1.0};
Point(75) = {-0.034263, -0.744713, 0, 1.0};
Point(76) = {-0.027132, -0.746203, 0, 1.0};
Point(77) = {-0.019903, -0.747500, 0, 1.0};
Point(78) = {-0.012601, -0.748543, 0, 1.0};
Point(79) = {-0.005256, -0.749314, 0, 1.0};
Point(80) = {0.002086, -0.749799, 0, 1.0};
Point(81) = {0.009758, -0.750000, 0, 1.0};
Point(82) = {0.016568, -0.749930, 0, 1.0};
Point(83) = {0.023590, -0.749600, 0, 1.0};
Point(84) = {0.030381, -0.749030, 0, 1.0};
Point(85) = {0.036873, -0.748229, 0, 1.0};
Point(86) = {0.043007, -0.747217, 0, 1.0};
Point(87) = {0.048724, -0.746012, 0, 1.0};
Point(88) = {0.053975, -0.744635, 0, 1.0};
Point(89) = {0.058715, -0.743111, 0, 1.0};
Point(90) = {0.062901, -0.741472, 0, 1.0};
Point(91) = {0.066503, -0.739748, 0, 1.0};
Point(92) = {0.069495, -0.737980, 0, 1.0};
Point(93) = {0.071856, -0.736218, 0, 1.0};
Point(94) = {0.073572, -0.734521, 0, 1.0};
Point(95) = {0.074627, -0.732962, 0, 1.0};
Point(96) = {0.074870, -0.732374, 0, 1.0};
Point(97) = {0.074969, -0.731984, 0, 1.0};
Point(98) = {0.075000, -0.731744, 0, 1.0};
Point(99) = {0.074999, -0.731521, 0, 1.0};
Point(100) = {0.074987, -0.731419, 0, 1.0};
Point(101) = {0.074967, -0.731323, 0, 1.0};
Point(102) = {0.074935, -0.731235, 0, 1.0};
Point(103) = {0.074888, -0.731154, 0, 1.0};
Point(104) = {0.074823, -0.731074, 0, 1.0};
Point(105) = {0.074746, -0.730994, 0, 1.0};
Point(106) = {0.074558, -0.730834, 0, 1.0};
Point(107) = {0.074327, -0.730676, 0, 1.0};
Point(108) = {0.073907, -0.730442, 0, 1.0};
Point(109) = {0.072859, -0.729998, 0, 1.0};
Point(110) = {0.070363, -0.729308, 0, 1.0};
Point(111) = {0.067009, -0.728720, 0, 1.0};
Point(112) = {0.062836, -0.728233, 0, 1.0};
Point(113) = {0.057888, -0.727842, 0, 1.0};
Point(114) = {0.052222, -0.727531, 0, 1.0};
Point(115) = {0.045915, -0.727290, 0, 1.0};
Point(116) = {0.039046, -0.727118, 0, 1.0};
Point(117) = {0.031703, -0.727009, 0, 1.0};
Point(118) = {0.023978, -0.726962, 0, 1.0};
Point(119) = {0.015968, -0.726980, 0, 1.0};
Point(120) = {0.007774, -0.727067, 0, 1.0};
Point(121) = {-0.000500, -0.727231, 0, 1.0};
Point(122) = {-0.008753, -0.727488, 0, 1.0};
Point(123) = {-0.016879, -0.727875, 0, 1.0};
Point(124) = {-0.024832, -0.728453, 0, 1.0};
Point(125) = {-0.032617, -0.729225, 0, 1.0};
Point(126) = {-0.040229, -0.730133, 0, 1.0};
Point(127) = {-0.047652, -0.731067, 0, 1.0};
Point(128) = {-0.054775, -0.731870, 0, 1.0};
Point(129) = {-0.061413, -0.732450, 0, 1.0};
Point(130) = {-0.067387, -0.732776, 0, 1.0};
Point(131) = {-0.072528, -0.732850, 0, 1.0};
Point(132) = {-0.074998, -0.732790, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
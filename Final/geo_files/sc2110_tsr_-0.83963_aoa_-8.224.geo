SetFactory("OpenCASCADE");

Point(1) = {0.074094, 0.749329, 0, 1.0};
Point(2) = {0.072812, 0.749329, 0, 1.0};
Point(3) = {0.066394, 0.749462, 0, 1.0};
Point(4) = {0.063180, 0.749561, 0, 1.0};
Point(5) = {0.059966, 0.749661, 0, 1.0};
Point(6) = {0.056753, 0.749755, 0, 1.0};
Point(7) = {0.050332, 0.749908, 0, 1.0};
Point(8) = {0.047124, 0.749960, 0, 1.0};
Point(9) = {0.043920, 0.749992, 0, 1.0};
Point(10) = {0.040718, 0.750000, 0, 1.0};
Point(11) = {0.034327, 0.749935, 0, 1.0};
Point(12) = {0.031137, 0.749860, 0, 1.0};
Point(13) = {0.027951, 0.749755, 0, 1.0};
Point(14) = {0.024768, 0.749622, 0, 1.0};
Point(15) = {0.018415, 0.749277, 0, 1.0};
Point(16) = {0.015243, 0.749068, 0, 1.0};
Point(17) = {0.012074, 0.748837, 0, 1.0};
Point(18) = {0.008908, 0.748586, 0, 1.0};
Point(19) = {0.002584, 0.748026, 0, 1.0};
Point(20) = {-0.000574, 0.747718, 0, 1.0};
Point(21) = {-0.003729, 0.747389, 0, 1.0};
Point(22) = {-0.006882, 0.747040, 0, 1.0};
Point(23) = {-0.010032, 0.746673, 0, 1.0};
Point(24) = {-0.016327, 0.745895, 0, 1.0};
Point(25) = {-0.022616, 0.745074, 0, 1.0};
Point(26) = {-0.028654, 0.744251, 0, 1.0};
Point(27) = {-0.036552, 0.743104, 0, 1.0};
Point(28) = {-0.044428, 0.741823, 0, 1.0};
Point(29) = {-0.052262, 0.740289, 0, 1.0};
Point(30) = {-0.060015, 0.738262, 0, 1.0};
Point(31) = {-0.063837, 0.736903, 0, 1.0};
Point(32) = {-0.067589, 0.735119, 0, 1.0};
Point(33) = {-0.071210, 0.732536, 0, 1.0};
Point(34) = {-0.072917, 0.730614, 0, 1.0};
Point(35) = {-0.073552, 0.729584, 0, 1.0};
Point(36) = {-0.073849, 0.728959, 0, 1.0};
Point(37) = {-0.074229, 0.726941, 0, 1.0};
Point(38) = {-0.073736, 0.726029, 0, 1.0};
Point(39) = {-0.073280, 0.725769, 0, 1.0};
Point(40) = {-0.072344, 0.725536, 0, 1.0};
Point(41) = {-0.070372, 0.725397, 0, 1.0};
Point(42) = {-0.068426, 0.725379, 0, 1.0};
Point(43) = {-0.067456, 0.725388, 0, 1.0};
Point(44) = {-0.065524, 0.725436, 0, 1.0};
Point(45) = {-0.061359, 0.725643, 0, 1.0};
Point(46) = {-0.058169, 0.725866, 0, 1.0};
Point(47) = {-0.053397, 0.726258, 0, 1.0};
Point(48) = {-0.048907, 0.726659, 0, 1.0};
Point(49) = {-0.046536, 0.726876, 0, 1.0};
Point(50) = {-0.041795, 0.727311, 0, 1.0};
Point(51) = {-0.037055, 0.727752, 0, 1.0};
Point(52) = {-0.034686, 0.727979, 0, 1.0};
Point(53) = {-0.029950, 0.728450, 0, 1.0};
Point(54) = {-0.025218, 0.728951, 0, 1.0};
Point(55) = {-0.020491, 0.729486, 0, 1.0};
Point(56) = {-0.014195, 0.730257, 0, 1.0};
Point(57) = {-0.007909, 0.731095, 0, 1.0};
Point(58) = {-0.004769, 0.731541, 0, 1.0};
Point(59) = {-0.001632, 0.732004, 0, 1.0};
Point(60) = {0.001503, 0.732485, 0, 1.0};
Point(61) = {0.004634, 0.732985, 0, 1.0};
Point(62) = {0.010891, 0.734043, 0, 1.0};
Point(63) = {0.014015, 0.734600, 0, 1.0};
Point(64) = {0.017137, 0.735175, 0, 1.0};
Point(65) = {0.020257, 0.735768, 0, 1.0};
Point(66) = {0.026489, 0.737000, 0, 1.0};
Point(67) = {0.029602, 0.737639, 0, 1.0};
Point(68) = {0.032714, 0.738292, 0, 1.0};
Point(69) = {0.035823, 0.738958, 0, 1.0};
Point(70) = {0.042036, 0.740330, 0, 1.0};
Point(71) = {0.045141, 0.741032, 0, 1.0};
Point(72) = {0.048244, 0.741741, 0, 1.0};
Point(73) = {0.051347, 0.742458, 0, 1.0};
Point(74) = {0.057550, 0.743905, 0, 1.0};
Point(75) = {0.060651, 0.744635, 0, 1.0};
Point(76) = {0.063751, 0.745369, 0, 1.0};
Point(77) = {0.066851, 0.746108, 0, 1.0};
Point(78) = {0.073051, 0.747576, 0, 1.0};
Point(79) = {0.074306, 0.747864, 0, 1.0};
Point(80) = {-0.074094, -0.749329, 0, 1.0};
Point(81) = {-0.072812, -0.749329, 0, 1.0};
Point(82) = {-0.066394, -0.749462, 0, 1.0};
Point(83) = {-0.063180, -0.749561, 0, 1.0};
Point(84) = {-0.059966, -0.749661, 0, 1.0};
Point(85) = {-0.056753, -0.749755, 0, 1.0};
Point(86) = {-0.050332, -0.749908, 0, 1.0};
Point(87) = {-0.047124, -0.749960, 0, 1.0};
Point(88) = {-0.043920, -0.749992, 0, 1.0};
Point(89) = {-0.040718, -0.750000, 0, 1.0};
Point(90) = {-0.034327, -0.749935, 0, 1.0};
Point(91) = {-0.031137, -0.749860, 0, 1.0};
Point(92) = {-0.027951, -0.749755, 0, 1.0};
Point(93) = {-0.024768, -0.749622, 0, 1.0};
Point(94) = {-0.018415, -0.749277, 0, 1.0};
Point(95) = {-0.015243, -0.749068, 0, 1.0};
Point(96) = {-0.012074, -0.748837, 0, 1.0};
Point(97) = {-0.008908, -0.748586, 0, 1.0};
Point(98) = {-0.002584, -0.748026, 0, 1.0};
Point(99) = {0.000574, -0.747718, 0, 1.0};
Point(100) = {0.003729, -0.747389, 0, 1.0};
Point(101) = {0.006882, -0.747040, 0, 1.0};
Point(102) = {0.010032, -0.746673, 0, 1.0};
Point(103) = {0.016327, -0.745895, 0, 1.0};
Point(104) = {0.022616, -0.745074, 0, 1.0};
Point(105) = {0.028654, -0.744251, 0, 1.0};
Point(106) = {0.036552, -0.743104, 0, 1.0};
Point(107) = {0.044428, -0.741823, 0, 1.0};
Point(108) = {0.052262, -0.740289, 0, 1.0};
Point(109) = {0.060015, -0.738262, 0, 1.0};
Point(110) = {0.063837, -0.736903, 0, 1.0};
Point(111) = {0.067589, -0.735119, 0, 1.0};
Point(112) = {0.071210, -0.732536, 0, 1.0};
Point(113) = {0.072917, -0.730614, 0, 1.0};
Point(114) = {0.073552, -0.729584, 0, 1.0};
Point(115) = {0.073849, -0.728959, 0, 1.0};
Point(116) = {0.074229, -0.726941, 0, 1.0};
Point(117) = {0.073736, -0.726029, 0, 1.0};
Point(118) = {0.073280, -0.725769, 0, 1.0};
Point(119) = {0.072344, -0.725536, 0, 1.0};
Point(120) = {0.070372, -0.725397, 0, 1.0};
Point(121) = {0.068426, -0.725379, 0, 1.0};
Point(122) = {0.067456, -0.725388, 0, 1.0};
Point(123) = {0.065524, -0.725436, 0, 1.0};
Point(124) = {0.061359, -0.725643, 0, 1.0};
Point(125) = {0.058169, -0.725866, 0, 1.0};
Point(126) = {0.053397, -0.726258, 0, 1.0};
Point(127) = {0.048907, -0.726659, 0, 1.0};
Point(128) = {0.046536, -0.726876, 0, 1.0};
Point(129) = {0.041795, -0.727311, 0, 1.0};
Point(130) = {0.037055, -0.727752, 0, 1.0};
Point(131) = {0.034686, -0.727979, 0, 1.0};
Point(132) = {0.029950, -0.728450, 0, 1.0};
Point(133) = {0.025218, -0.728951, 0, 1.0};
Point(134) = {0.020491, -0.729486, 0, 1.0};
Point(135) = {0.014195, -0.730257, 0, 1.0};
Point(136) = {0.007909, -0.731095, 0, 1.0};
Point(137) = {0.004769, -0.731541, 0, 1.0};
Point(138) = {0.001632, -0.732004, 0, 1.0};
Point(139) = {-0.001503, -0.732485, 0, 1.0};
Point(140) = {-0.004634, -0.732985, 0, 1.0};
Point(141) = {-0.010891, -0.734043, 0, 1.0};
Point(142) = {-0.014015, -0.734600, 0, 1.0};
Point(143) = {-0.017137, -0.735175, 0, 1.0};
Point(144) = {-0.020257, -0.735768, 0, 1.0};
Point(145) = {-0.026489, -0.737000, 0, 1.0};
Point(146) = {-0.029602, -0.737639, 0, 1.0};
Point(147) = {-0.032714, -0.738292, 0, 1.0};
Point(148) = {-0.035823, -0.738958, 0, 1.0};
Point(149) = {-0.042036, -0.740330, 0, 1.0};
Point(150) = {-0.045141, -0.741032, 0, 1.0};
Point(151) = {-0.048244, -0.741741, 0, 1.0};
Point(152) = {-0.051347, -0.742458, 0, 1.0};
Point(153) = {-0.057550, -0.743905, 0, 1.0};
Point(154) = {-0.060651, -0.744635, 0, 1.0};
Point(155) = {-0.063751, -0.745369, 0, 1.0};
Point(156) = {-0.066851, -0.746108, 0, 1.0};
Point(157) = {-0.073051, -0.747576, 0, 1.0};
Point(158) = {-0.074306, -0.747864, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:53};
Spline(3) = {53:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:106};
Spline(6) = {106:132};
Spline(7) = {132:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {36.00000000, 15.00000000, 0, 1.0};
Point(162) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
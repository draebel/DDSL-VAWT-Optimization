SetFactory("OpenCASCADE");

Point(1) = {0.147772, 0.714567, 0, 1.0};
Point(2) = {0.147138, 0.714827, 0, 1.0};
Point(3) = {0.145353, 0.715612, 0, 1.0};
Point(4) = {0.142610, 0.716843, 0, 1.0};
Point(5) = {0.138961, 0.718350, 0, 1.0};
Point(6) = {0.134371, 0.720070, 0, 1.0};
Point(7) = {0.128866, 0.722023, 0, 1.0};
Point(8) = {0.122540, 0.724199, 0, 1.0};
Point(9) = {0.115490, 0.726563, 0, 1.0};
Point(10) = {0.107821, 0.729069, 0, 1.0};
Point(11) = {0.099640, 0.731662, 0, 1.0};
Point(12) = {0.091057, 0.734271, 0, 1.0};
Point(13) = {0.082177, 0.736812, 0, 1.0};
Point(14) = {0.073062, 0.739184, 0, 1.0};
Point(15) = {0.063752, 0.741329, 0, 1.0};
Point(16) = {0.054289, 0.743224, 0, 1.0};
Point(17) = {0.044725, 0.744860, 0, 1.0};
Point(18) = {0.035140, 0.746268, 0, 1.0};
Point(19) = {0.025642, 0.747448, 0, 1.0};
Point(20) = {0.016328, 0.748404, 0, 1.0};
Point(21) = {0.007298, 0.749135, 0, 1.0};
Point(22) = {-0.001350, 0.749642, 0, 1.0};
Point(23) = {-0.009526, 0.749929, 0, 1.0};
Point(24) = {-0.017145, 0.750000, 0, 1.0};
Point(25) = {-0.024126, 0.749864, 0, 1.0};
Point(26) = {-0.030393, 0.749535, 0, 1.0};
Point(27) = {-0.035879, 0.749023, 0, 1.0};
Point(28) = {-0.040521, 0.748348, 0, 1.0};
Point(29) = {-0.044277, 0.747519, 0, 1.0};
Point(30) = {-0.047119, 0.746566, 0, 1.0};
Point(31) = {-0.048637, 0.745796, 0, 1.0};
Point(32) = {-0.049457, 0.745175, 0, 1.0};
Point(33) = {-0.049812, 0.744780, 0, 1.0};
Point(34) = {-0.049965, 0.744503, 0, 1.0};
Point(35) = {-0.050000, 0.744337, 0, 1.0};
Point(36) = {-0.049965, 0.744168, 0, 1.0};
Point(37) = {-0.049808, 0.743879, 0, 1.0};
Point(38) = {-0.049443, 0.743454, 0, 1.0};
Point(39) = {-0.048592, 0.742759, 0, 1.0};
Point(40) = {-0.048133, 0.742459, 0, 1.0};
Point(41) = {-0.045633, 0.741176, 0, 1.0};
Point(42) = {-0.042124, 0.739814, 0, 1.0};
Point(43) = {-0.037635, 0.738398, 0, 1.0};
Point(44) = {-0.032209, 0.736930, 0, 1.0};
Point(45) = {-0.025916, 0.735423, 0, 1.0};
Point(46) = {-0.018836, 0.733898, 0, 1.0};
Point(47) = {-0.011052, 0.732384, 0, 1.0};
Point(48) = {-0.002658, 0.730913, 0, 1.0};
Point(49) = {0.006252, 0.729531, 0, 1.0};
Point(50) = {0.015610, 0.728293, 0, 1.0};
Point(51) = {0.025369, 0.727230, 0, 1.0};
Point(52) = {0.035481, 0.726346, 0, 1.0};
Point(53) = {0.045901, 0.725603, 0, 1.0};
Point(54) = {0.056540, 0.724921, 0, 1.0};
Point(55) = {0.067252, 0.724237, 0, 1.0};
Point(56) = {0.077884, 0.723520, 0, 1.0};
Point(57) = {0.088280, 0.722740, 0, 1.0};
Point(58) = {0.098282, 0.721889, 0, 1.0};
Point(59) = {0.107731, 0.720963, 0, 1.0};
Point(60) = {0.116475, 0.719972, 0, 1.0};
Point(61) = {0.124368, 0.718941, 0, 1.0};
Point(62) = {0.131281, 0.717905, 0, 1.0};
Point(63) = {0.137095, 0.716906, 0, 1.0};
Point(64) = {0.141717, 0.716007, 0, 1.0};
Point(65) = {0.145066, 0.715265, 0, 1.0};
Point(66) = {0.147094, 0.714755, 0, 1.0};
Point(67) = {-0.147772, -0.714567, 0, 1.0};
Point(68) = {-0.147138, -0.714827, 0, 1.0};
Point(69) = {-0.145353, -0.715612, 0, 1.0};
Point(70) = {-0.142610, -0.716843, 0, 1.0};
Point(71) = {-0.138961, -0.718350, 0, 1.0};
Point(72) = {-0.134371, -0.720070, 0, 1.0};
Point(73) = {-0.128866, -0.722023, 0, 1.0};
Point(74) = {-0.122540, -0.724199, 0, 1.0};
Point(75) = {-0.115490, -0.726563, 0, 1.0};
Point(76) = {-0.107821, -0.729069, 0, 1.0};
Point(77) = {-0.099640, -0.731662, 0, 1.0};
Point(78) = {-0.091057, -0.734271, 0, 1.0};
Point(79) = {-0.082177, -0.736812, 0, 1.0};
Point(80) = {-0.073062, -0.739184, 0, 1.0};
Point(81) = {-0.063752, -0.741329, 0, 1.0};
Point(82) = {-0.054289, -0.743224, 0, 1.0};
Point(83) = {-0.044725, -0.744860, 0, 1.0};
Point(84) = {-0.035140, -0.746268, 0, 1.0};
Point(85) = {-0.025642, -0.747448, 0, 1.0};
Point(86) = {-0.016328, -0.748404, 0, 1.0};
Point(87) = {-0.007298, -0.749135, 0, 1.0};
Point(88) = {0.001350, -0.749642, 0, 1.0};
Point(89) = {0.009526, -0.749929, 0, 1.0};
Point(90) = {0.017145, -0.750000, 0, 1.0};
Point(91) = {0.024126, -0.749864, 0, 1.0};
Point(92) = {0.030393, -0.749535, 0, 1.0};
Point(93) = {0.035879, -0.749023, 0, 1.0};
Point(94) = {0.040521, -0.748348, 0, 1.0};
Point(95) = {0.044277, -0.747519, 0, 1.0};
Point(96) = {0.047119, -0.746566, 0, 1.0};
Point(97) = {0.048637, -0.745796, 0, 1.0};
Point(98) = {0.049457, -0.745175, 0, 1.0};
Point(99) = {0.049812, -0.744780, 0, 1.0};
Point(100) = {0.049965, -0.744503, 0, 1.0};
Point(101) = {0.050000, -0.744337, 0, 1.0};
Point(102) = {0.049965, -0.744168, 0, 1.0};
Point(103) = {0.049808, -0.743879, 0, 1.0};
Point(104) = {0.049443, -0.743454, 0, 1.0};
Point(105) = {0.048592, -0.742759, 0, 1.0};
Point(106) = {0.048133, -0.742459, 0, 1.0};
Point(107) = {0.045633, -0.741176, 0, 1.0};
Point(108) = {0.042124, -0.739814, 0, 1.0};
Point(109) = {0.037635, -0.738398, 0, 1.0};
Point(110) = {0.032209, -0.736930, 0, 1.0};
Point(111) = {0.025916, -0.735423, 0, 1.0};
Point(112) = {0.018836, -0.733898, 0, 1.0};
Point(113) = {0.011052, -0.732384, 0, 1.0};
Point(114) = {0.002658, -0.730913, 0, 1.0};
Point(115) = {-0.006252, -0.729531, 0, 1.0};
Point(116) = {-0.015610, -0.728293, 0, 1.0};
Point(117) = {-0.025369, -0.727230, 0, 1.0};
Point(118) = {-0.035481, -0.726346, 0, 1.0};
Point(119) = {-0.045901, -0.725603, 0, 1.0};
Point(120) = {-0.056540, -0.724921, 0, 1.0};
Point(121) = {-0.067252, -0.724237, 0, 1.0};
Point(122) = {-0.077884, -0.723520, 0, 1.0};
Point(123) = {-0.088280, -0.722740, 0, 1.0};
Point(124) = {-0.098282, -0.721889, 0, 1.0};
Point(125) = {-0.107731, -0.720963, 0, 1.0};
Point(126) = {-0.116475, -0.719972, 0, 1.0};
Point(127) = {-0.124368, -0.718941, 0, 1.0};
Point(128) = {-0.131281, -0.717905, 0, 1.0};
Point(129) = {-0.137095, -0.716906, 0, 1.0};
Point(130) = {-0.141717, -0.716007, 0, 1.0};
Point(131) = {-0.145066, -0.715265, 0, 1.0};
Point(132) = {-0.147094, -0.714755, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
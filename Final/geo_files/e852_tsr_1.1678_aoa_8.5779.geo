SetFactory("OpenCASCADE");

Point(1) = {0.074168, 0.723426, 0, 1.0};
Point(2) = {0.073692, 0.723620, 0, 1.0};
Point(3) = {0.072354, 0.724209, 0, 1.0};
Point(4) = {0.070296, 0.725132, 0, 1.0};
Point(5) = {0.067560, 0.726262, 0, 1.0};
Point(6) = {0.064117, 0.727552, 0, 1.0};
Point(7) = {0.059989, 0.729017, 0, 1.0};
Point(8) = {0.055244, 0.730649, 0, 1.0};
Point(9) = {0.049956, 0.732422, 0, 1.0};
Point(10) = {0.044205, 0.734302, 0, 1.0};
Point(11) = {0.038069, 0.736246, 0, 1.0};
Point(12) = {0.031632, 0.738203, 0, 1.0};
Point(13) = {0.024972, 0.740109, 0, 1.0};
Point(14) = {0.018136, 0.741888, 0, 1.0};
Point(15) = {0.011153, 0.743497, 0, 1.0};
Point(16) = {0.004055, 0.744918, 0, 1.0};
Point(17) = {-0.003117, 0.746145, 0, 1.0};
Point(18) = {-0.010306, 0.747201, 0, 1.0};
Point(19) = {-0.017430, 0.748086, 0, 1.0};
Point(20) = {-0.024415, 0.748803, 0, 1.0};
Point(21) = {-0.031188, 0.749351, 0, 1.0};
Point(22) = {-0.037673, 0.749732, 0, 1.0};
Point(23) = {-0.043806, 0.749947, 0, 1.0};
Point(24) = {-0.049520, 0.750000, 0, 1.0};
Point(25) = {-0.054755, 0.749898, 0, 1.0};
Point(26) = {-0.059456, 0.749651, 0, 1.0};
Point(27) = {-0.063570, 0.749267, 0, 1.0};
Point(28) = {-0.067052, 0.748761, 0, 1.0};
Point(29) = {-0.069869, 0.748139, 0, 1.0};
Point(30) = {-0.072001, 0.747425, 0, 1.0};
Point(31) = {-0.073139, 0.746847, 0, 1.0};
Point(32) = {-0.073754, 0.746381, 0, 1.0};
Point(33) = {-0.074020, 0.746085, 0, 1.0};
Point(34) = {-0.074135, 0.745878, 0, 1.0};
Point(35) = {-0.074161, 0.745753, 0, 1.0};
Point(36) = {-0.074135, 0.745626, 0, 1.0};
Point(37) = {-0.074017, 0.745409, 0, 1.0};
Point(38) = {-0.073744, 0.745090, 0, 1.0};
Point(39) = {-0.073105, 0.744569, 0, 1.0};
Point(40) = {-0.072761, 0.744345, 0, 1.0};
Point(41) = {-0.070885, 0.743382, 0, 1.0};
Point(42) = {-0.068254, 0.742360, 0, 1.0};
Point(43) = {-0.064888, 0.741299, 0, 1.0};
Point(44) = {-0.060818, 0.740198, 0, 1.0};
Point(45) = {-0.056098, 0.739067, 0, 1.0};
Point(46) = {-0.050788, 0.737923, 0, 1.0};
Point(47) = {-0.044950, 0.736788, 0, 1.0};
Point(48) = {-0.038654, 0.735685, 0, 1.0};
Point(49) = {-0.031972, 0.734648, 0, 1.0};
Point(50) = {-0.024953, 0.733720, 0, 1.0};
Point(51) = {-0.017634, 0.732922, 0, 1.0};
Point(52) = {-0.010051, 0.732259, 0, 1.0};
Point(53) = {-0.002236, 0.731703, 0, 1.0};
Point(54) = {0.005744, 0.731191, 0, 1.0};
Point(55) = {0.013778, 0.730678, 0, 1.0};
Point(56) = {0.021752, 0.730140, 0, 1.0};
Point(57) = {0.029549, 0.729555, 0, 1.0};
Point(58) = {0.037050, 0.728917, 0, 1.0};
Point(59) = {0.044137, 0.728222, 0, 1.0};
Point(60) = {0.050696, 0.727479, 0, 1.0};
Point(61) = {0.056615, 0.726706, 0, 1.0};
Point(62) = {0.061800, 0.725928, 0, 1.0};
Point(63) = {0.066160, 0.725180, 0, 1.0};
Point(64) = {0.069627, 0.724505, 0, 1.0};
Point(65) = {0.072138, 0.723949, 0, 1.0};
Point(66) = {0.073660, 0.723566, 0, 1.0};
Point(67) = {-0.074168, -0.723426, 0, 1.0};
Point(68) = {-0.073692, -0.723620, 0, 1.0};
Point(69) = {-0.072354, -0.724209, 0, 1.0};
Point(70) = {-0.070296, -0.725132, 0, 1.0};
Point(71) = {-0.067560, -0.726262, 0, 1.0};
Point(72) = {-0.064117, -0.727552, 0, 1.0};
Point(73) = {-0.059989, -0.729017, 0, 1.0};
Point(74) = {-0.055244, -0.730649, 0, 1.0};
Point(75) = {-0.049956, -0.732422, 0, 1.0};
Point(76) = {-0.044205, -0.734302, 0, 1.0};
Point(77) = {-0.038069, -0.736246, 0, 1.0};
Point(78) = {-0.031632, -0.738203, 0, 1.0};
Point(79) = {-0.024972, -0.740109, 0, 1.0};
Point(80) = {-0.018136, -0.741888, 0, 1.0};
Point(81) = {-0.011153, -0.743497, 0, 1.0};
Point(82) = {-0.004055, -0.744918, 0, 1.0};
Point(83) = {0.003117, -0.746145, 0, 1.0};
Point(84) = {0.010306, -0.747201, 0, 1.0};
Point(85) = {0.017430, -0.748086, 0, 1.0};
Point(86) = {0.024415, -0.748803, 0, 1.0};
Point(87) = {0.031188, -0.749351, 0, 1.0};
Point(88) = {0.037673, -0.749732, 0, 1.0};
Point(89) = {0.043806, -0.749947, 0, 1.0};
Point(90) = {0.049520, -0.750000, 0, 1.0};
Point(91) = {0.054755, -0.749898, 0, 1.0};
Point(92) = {0.059456, -0.749651, 0, 1.0};
Point(93) = {0.063570, -0.749267, 0, 1.0};
Point(94) = {0.067052, -0.748761, 0, 1.0};
Point(95) = {0.069869, -0.748139, 0, 1.0};
Point(96) = {0.072001, -0.747425, 0, 1.0};
Point(97) = {0.073139, -0.746847, 0, 1.0};
Point(98) = {0.073754, -0.746381, 0, 1.0};
Point(99) = {0.074020, -0.746085, 0, 1.0};
Point(100) = {0.074135, -0.745878, 0, 1.0};
Point(101) = {0.074161, -0.745753, 0, 1.0};
Point(102) = {0.074135, -0.745626, 0, 1.0};
Point(103) = {0.074017, -0.745409, 0, 1.0};
Point(104) = {0.073744, -0.745090, 0, 1.0};
Point(105) = {0.073105, -0.744569, 0, 1.0};
Point(106) = {0.072761, -0.744345, 0, 1.0};
Point(107) = {0.070885, -0.743382, 0, 1.0};
Point(108) = {0.068254, -0.742360, 0, 1.0};
Point(109) = {0.064888, -0.741299, 0, 1.0};
Point(110) = {0.060818, -0.740198, 0, 1.0};
Point(111) = {0.056098, -0.739067, 0, 1.0};
Point(112) = {0.050788, -0.737923, 0, 1.0};
Point(113) = {0.044950, -0.736788, 0, 1.0};
Point(114) = {0.038654, -0.735685, 0, 1.0};
Point(115) = {0.031972, -0.734648, 0, 1.0};
Point(116) = {0.024953, -0.733720, 0, 1.0};
Point(117) = {0.017634, -0.732922, 0, 1.0};
Point(118) = {0.010051, -0.732259, 0, 1.0};
Point(119) = {0.002236, -0.731703, 0, 1.0};
Point(120) = {-0.005744, -0.731191, 0, 1.0};
Point(121) = {-0.013778, -0.730678, 0, 1.0};
Point(122) = {-0.021752, -0.730140, 0, 1.0};
Point(123) = {-0.029549, -0.729555, 0, 1.0};
Point(124) = {-0.037050, -0.728917, 0, 1.0};
Point(125) = {-0.044137, -0.728222, 0, 1.0};
Point(126) = {-0.050696, -0.727479, 0, 1.0};
Point(127) = {-0.056615, -0.726706, 0, 1.0};
Point(128) = {-0.061800, -0.725928, 0, 1.0};
Point(129) = {-0.066160, -0.725180, 0, 1.0};
Point(130) = {-0.069627, -0.724505, 0, 1.0};
Point(131) = {-0.072138, -0.723949, 0, 1.0};
Point(132) = {-0.073660, -0.723566, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
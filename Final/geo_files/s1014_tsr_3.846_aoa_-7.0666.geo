SetFactory("OpenCASCADE");

Point(1) = {0.148481, 0.744743, 0, 1.0};
Point(2) = {0.147701, 0.744690, 0, 1.0};
Point(3) = {0.145405, 0.744601, 0, 1.0};
Point(4) = {0.141692, 0.744588, 0, 1.0};
Point(5) = {0.136697, 0.744713, 0, 1.0};
Point(6) = {0.130549, 0.745015, 0, 1.0};
Point(7) = {0.123401, 0.745535, 0, 1.0};
Point(8) = {0.115449, 0.746295, 0, 1.0};
Point(9) = {0.106919, 0.747261, 0, 1.0};
Point(10) = {0.098057, 0.748357, 0, 1.0};
Point(11) = {0.089118, 0.749377, 0, 1.0};
Point(12) = {0.080145, 0.749969, 0, 1.0};
Point(13) = {0.070915, 0.750000, 0, 1.0};
Point(14) = {0.061348, 0.749628, 0, 1.0};
Point(15) = {0.051559, 0.748963, 0, 1.0};
Point(16) = {0.041661, 0.748046, 0, 1.0};
Point(17) = {0.031772, 0.746909, 0, 1.0};
Point(18) = {0.022003, 0.745579, 0, 1.0};
Point(19) = {0.012472, 0.744085, 0, 1.0};
Point(20) = {0.003285, 0.742444, 0, 1.0};
Point(21) = {-0.005449, 0.740685, 0, 1.0};
Point(22) = {-0.013629, 0.738828, 0, 1.0};
Point(23) = {-0.021150, 0.736894, 0, 1.0};
Point(24) = {-0.027924, 0.734898, 0, 1.0};
Point(25) = {-0.033865, 0.732849, 0, 1.0};
Point(26) = {-0.038915, 0.730744, 0, 1.0};
Point(27) = {-0.043031, 0.728589, 0, 1.0};
Point(28) = {-0.046199, 0.726399, 0, 1.0};
Point(29) = {-0.048425, 0.724207, 0, 1.0};
Point(30) = {-0.049706, 0.722077, 0, 1.0};
Point(31) = {-0.050000, 0.720138, 0, 1.0};
Point(32) = {-0.049242, 0.718329, 0, 1.0};
Point(33) = {-0.047479, 0.716577, 0, 1.0};
Point(34) = {-0.044786, 0.714994, 0, 1.0};
Point(35) = {-0.041178, 0.713644, 0, 1.0};
Point(36) = {-0.036660, 0.712559, 0, 1.0};
Point(37) = {-0.031250, 0.711751, 0, 1.0};
Point(38) = {-0.024988, 0.711215, 0, 1.0};
Point(39) = {-0.017932, 0.710933, 0, 1.0};
Point(40) = {-0.010166, 0.710894, 0, 1.0};
Point(41) = {-0.001781, 0.711091, 0, 1.0};
Point(42) = {0.007118, 0.711517, 0, 1.0};
Point(43) = {0.016429, 0.712170, 0, 1.0};
Point(44) = {0.026036, 0.713048, 0, 1.0};
Point(45) = {0.035833, 0.714144, 0, 1.0};
Point(46) = {0.045701, 0.715456, 0, 1.0};
Point(47) = {0.055524, 0.716984, 0, 1.0};
Point(48) = {0.065178, 0.718729, 0, 1.0};
Point(49) = {0.074546, 0.720704, 0, 1.0};
Point(50) = {0.083489, 0.722988, 0, 1.0};
Point(51) = {0.092046, 0.725753, 0, 1.0};
Point(52) = {0.100466, 0.728925, 0, 1.0};
Point(53) = {0.108792, 0.732152, 0, 1.0};
Point(54) = {0.116828, 0.735172, 0, 1.0};
Point(55) = {0.124353, 0.737850, 0, 1.0};
Point(56) = {0.131158, 0.740100, 0, 1.0};
Point(57) = {0.137046, 0.741894, 0, 1.0};
Point(58) = {0.141860, 0.743235, 0, 1.0};
Point(59) = {0.145463, 0.744129, 0, 1.0};
Point(60) = {0.147712, 0.744603, 0, 1.0};
Point(61) = {-0.148481, -0.744743, 0, 1.0};
Point(62) = {-0.147701, -0.744690, 0, 1.0};
Point(63) = {-0.145405, -0.744601, 0, 1.0};
Point(64) = {-0.141692, -0.744588, 0, 1.0};
Point(65) = {-0.136697, -0.744713, 0, 1.0};
Point(66) = {-0.130549, -0.745015, 0, 1.0};
Point(67) = {-0.123401, -0.745535, 0, 1.0};
Point(68) = {-0.115449, -0.746295, 0, 1.0};
Point(69) = {-0.106919, -0.747261, 0, 1.0};
Point(70) = {-0.098057, -0.748357, 0, 1.0};
Point(71) = {-0.089118, -0.749377, 0, 1.0};
Point(72) = {-0.080145, -0.749969, 0, 1.0};
Point(73) = {-0.070915, -0.750000, 0, 1.0};
Point(74) = {-0.061348, -0.749628, 0, 1.0};
Point(75) = {-0.051559, -0.748963, 0, 1.0};
Point(76) = {-0.041661, -0.748046, 0, 1.0};
Point(77) = {-0.031772, -0.746909, 0, 1.0};
Point(78) = {-0.022003, -0.745579, 0, 1.0};
Point(79) = {-0.012472, -0.744085, 0, 1.0};
Point(80) = {-0.003285, -0.742444, 0, 1.0};
Point(81) = {0.005449, -0.740685, 0, 1.0};
Point(82) = {0.013629, -0.738828, 0, 1.0};
Point(83) = {0.021150, -0.736894, 0, 1.0};
Point(84) = {0.027924, -0.734898, 0, 1.0};
Point(85) = {0.033865, -0.732849, 0, 1.0};
Point(86) = {0.038915, -0.730744, 0, 1.0};
Point(87) = {0.043031, -0.728589, 0, 1.0};
Point(88) = {0.046199, -0.726399, 0, 1.0};
Point(89) = {0.048425, -0.724207, 0, 1.0};
Point(90) = {0.049706, -0.722077, 0, 1.0};
Point(91) = {0.050000, -0.720138, 0, 1.0};
Point(92) = {0.049242, -0.718329, 0, 1.0};
Point(93) = {0.047479, -0.716577, 0, 1.0};
Point(94) = {0.044786, -0.714994, 0, 1.0};
Point(95) = {0.041178, -0.713644, 0, 1.0};
Point(96) = {0.036660, -0.712559, 0, 1.0};
Point(97) = {0.031250, -0.711751, 0, 1.0};
Point(98) = {0.024988, -0.711215, 0, 1.0};
Point(99) = {0.017932, -0.710933, 0, 1.0};
Point(100) = {0.010166, -0.710894, 0, 1.0};
Point(101) = {0.001781, -0.711091, 0, 1.0};
Point(102) = {-0.007118, -0.711517, 0, 1.0};
Point(103) = {-0.016429, -0.712170, 0, 1.0};
Point(104) = {-0.026036, -0.713048, 0, 1.0};
Point(105) = {-0.035833, -0.714144, 0, 1.0};
Point(106) = {-0.045701, -0.715456, 0, 1.0};
Point(107) = {-0.055524, -0.716984, 0, 1.0};
Point(108) = {-0.065178, -0.718729, 0, 1.0};
Point(109) = {-0.074546, -0.720704, 0, 1.0};
Point(110) = {-0.083489, -0.722988, 0, 1.0};
Point(111) = {-0.092046, -0.725753, 0, 1.0};
Point(112) = {-0.100466, -0.728925, 0, 1.0};
Point(113) = {-0.108792, -0.732152, 0, 1.0};
Point(114) = {-0.116828, -0.735172, 0, 1.0};
Point(115) = {-0.124353, -0.737850, 0, 1.0};
Point(116) = {-0.131158, -0.740100, 0, 1.0};
Point(117) = {-0.137046, -0.741894, 0, 1.0};
Point(118) = {-0.141860, -0.743235, 0, 1.0};
Point(119) = {-0.145463, -0.744129, 0, 1.0};
Point(120) = {-0.147712, -0.744603, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
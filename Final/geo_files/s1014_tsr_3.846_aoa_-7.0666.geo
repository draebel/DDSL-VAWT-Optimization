SetFactory("OpenCASCADE");

Point(1) = {0.074240, 0.747371, 0, 1.0};
Point(2) = {0.073851, 0.747345, 0, 1.0};
Point(3) = {0.072702, 0.747301, 0, 1.0};
Point(4) = {0.070846, 0.747294, 0, 1.0};
Point(5) = {0.068348, 0.747356, 0, 1.0};
Point(6) = {0.065275, 0.747507, 0, 1.0};
Point(7) = {0.061700, 0.747768, 0, 1.0};
Point(8) = {0.057724, 0.748147, 0, 1.0};
Point(9) = {0.053460, 0.748630, 0, 1.0};
Point(10) = {0.049029, 0.749178, 0, 1.0};
Point(11) = {0.044559, 0.749688, 0, 1.0};
Point(12) = {0.040072, 0.749985, 0, 1.0};
Point(13) = {0.035457, 0.750000, 0, 1.0};
Point(14) = {0.030674, 0.749814, 0, 1.0};
Point(15) = {0.025780, 0.749481, 0, 1.0};
Point(16) = {0.020830, 0.749023, 0, 1.0};
Point(17) = {0.015886, 0.748455, 0, 1.0};
Point(18) = {0.011002, 0.747790, 0, 1.0};
Point(19) = {0.006236, 0.747043, 0, 1.0};
Point(20) = {0.001642, 0.746222, 0, 1.0};
Point(21) = {-0.002725, 0.745342, 0, 1.0};
Point(22) = {-0.006815, 0.744414, 0, 1.0};
Point(23) = {-0.010575, 0.743447, 0, 1.0};
Point(24) = {-0.013962, 0.742449, 0, 1.0};
Point(25) = {-0.016933, 0.741425, 0, 1.0};
Point(26) = {-0.019457, 0.740372, 0, 1.0};
Point(27) = {-0.021515, 0.739295, 0, 1.0};
Point(28) = {-0.023100, 0.738199, 0, 1.0};
Point(29) = {-0.024212, 0.737103, 0, 1.0};
Point(30) = {-0.024853, 0.736038, 0, 1.0};
Point(31) = {-0.025000, 0.735069, 0, 1.0};
Point(32) = {-0.024621, 0.734165, 0, 1.0};
Point(33) = {-0.023739, 0.733288, 0, 1.0};
Point(34) = {-0.022393, 0.732497, 0, 1.0};
Point(35) = {-0.020589, 0.731822, 0, 1.0};
Point(36) = {-0.018330, 0.731280, 0, 1.0};
Point(37) = {-0.015625, 0.730875, 0, 1.0};
Point(38) = {-0.012494, 0.730608, 0, 1.0};
Point(39) = {-0.008966, 0.730466, 0, 1.0};
Point(40) = {-0.005083, 0.730447, 0, 1.0};
Point(41) = {-0.000890, 0.730546, 0, 1.0};
Point(42) = {0.003559, 0.730759, 0, 1.0};
Point(43) = {0.008214, 0.731085, 0, 1.0};
Point(44) = {0.013018, 0.731524, 0, 1.0};
Point(45) = {0.017917, 0.732072, 0, 1.0};
Point(46) = {0.022850, 0.732728, 0, 1.0};
Point(47) = {0.027762, 0.733492, 0, 1.0};
Point(48) = {0.032589, 0.734364, 0, 1.0};
Point(49) = {0.037273, 0.735352, 0, 1.0};
Point(50) = {0.041745, 0.736494, 0, 1.0};
Point(51) = {0.046023, 0.737877, 0, 1.0};
Point(52) = {0.050233, 0.739463, 0, 1.0};
Point(53) = {0.054396, 0.741076, 0, 1.0};
Point(54) = {0.058414, 0.742586, 0, 1.0};
Point(55) = {0.062177, 0.743925, 0, 1.0};
Point(56) = {0.065579, 0.745050, 0, 1.0};
Point(57) = {0.068523, 0.745947, 0, 1.0};
Point(58) = {0.070930, 0.746617, 0, 1.0};
Point(59) = {0.072732, 0.747064, 0, 1.0};
Point(60) = {0.073856, 0.747301, 0, 1.0};
Point(61) = {-0.074240, -0.747371, 0, 1.0};
Point(62) = {-0.073851, -0.747345, 0, 1.0};
Point(63) = {-0.072702, -0.747301, 0, 1.0};
Point(64) = {-0.070846, -0.747294, 0, 1.0};
Point(65) = {-0.068348, -0.747356, 0, 1.0};
Point(66) = {-0.065275, -0.747507, 0, 1.0};
Point(67) = {-0.061700, -0.747768, 0, 1.0};
Point(68) = {-0.057724, -0.748147, 0, 1.0};
Point(69) = {-0.053460, -0.748630, 0, 1.0};
Point(70) = {-0.049029, -0.749178, 0, 1.0};
Point(71) = {-0.044559, -0.749688, 0, 1.0};
Point(72) = {-0.040072, -0.749985, 0, 1.0};
Point(73) = {-0.035457, -0.750000, 0, 1.0};
Point(74) = {-0.030674, -0.749814, 0, 1.0};
Point(75) = {-0.025780, -0.749481, 0, 1.0};
Point(76) = {-0.020830, -0.749023, 0, 1.0};
Point(77) = {-0.015886, -0.748455, 0, 1.0};
Point(78) = {-0.011002, -0.747790, 0, 1.0};
Point(79) = {-0.006236, -0.747043, 0, 1.0};
Point(80) = {-0.001642, -0.746222, 0, 1.0};
Point(81) = {0.002725, -0.745342, 0, 1.0};
Point(82) = {0.006815, -0.744414, 0, 1.0};
Point(83) = {0.010575, -0.743447, 0, 1.0};
Point(84) = {0.013962, -0.742449, 0, 1.0};
Point(85) = {0.016933, -0.741425, 0, 1.0};
Point(86) = {0.019457, -0.740372, 0, 1.0};
Point(87) = {0.021515, -0.739295, 0, 1.0};
Point(88) = {0.023100, -0.738199, 0, 1.0};
Point(89) = {0.024212, -0.737103, 0, 1.0};
Point(90) = {0.024853, -0.736038, 0, 1.0};
Point(91) = {0.025000, -0.735069, 0, 1.0};
Point(92) = {0.024621, -0.734165, 0, 1.0};
Point(93) = {0.023739, -0.733288, 0, 1.0};
Point(94) = {0.022393, -0.732497, 0, 1.0};
Point(95) = {0.020589, -0.731822, 0, 1.0};
Point(96) = {0.018330, -0.731280, 0, 1.0};
Point(97) = {0.015625, -0.730875, 0, 1.0};
Point(98) = {0.012494, -0.730608, 0, 1.0};
Point(99) = {0.008966, -0.730466, 0, 1.0};
Point(100) = {0.005083, -0.730447, 0, 1.0};
Point(101) = {0.000890, -0.730546, 0, 1.0};
Point(102) = {-0.003559, -0.730759, 0, 1.0};
Point(103) = {-0.008214, -0.731085, 0, 1.0};
Point(104) = {-0.013018, -0.731524, 0, 1.0};
Point(105) = {-0.017917, -0.732072, 0, 1.0};
Point(106) = {-0.022850, -0.732728, 0, 1.0};
Point(107) = {-0.027762, -0.733492, 0, 1.0};
Point(108) = {-0.032589, -0.734364, 0, 1.0};
Point(109) = {-0.037273, -0.735352, 0, 1.0};
Point(110) = {-0.041745, -0.736494, 0, 1.0};
Point(111) = {-0.046023, -0.737877, 0, 1.0};
Point(112) = {-0.050233, -0.739463, 0, 1.0};
Point(113) = {-0.054396, -0.741076, 0, 1.0};
Point(114) = {-0.058414, -0.742586, 0, 1.0};
Point(115) = {-0.062177, -0.743925, 0, 1.0};
Point(116) = {-0.065579, -0.745050, 0, 1.0};
Point(117) = {-0.068523, -0.745947, 0, 1.0};
Point(118) = {-0.070930, -0.746617, 0, 1.0};
Point(119) = {-0.072732, -0.747064, 0, 1.0};
Point(120) = {-0.073856, -0.747301, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112405, 0.734846, 0, 1.0};
Point(2) = {0.111901, 0.734899, 0, 1.0};
Point(3) = {0.110413, 0.735077, 0, 1.0};
Point(4) = {0.107991, 0.735423, 0, 1.0};
Point(5) = {0.104704, 0.735960, 0, 1.0};
Point(6) = {0.100633, 0.736696, 0, 1.0};
Point(7) = {0.095863, 0.737616, 0, 1.0};
Point(8) = {0.090490, 0.738700, 0, 1.0};
Point(9) = {0.084602, 0.739913, 0, 1.0};
Point(10) = {0.078293, 0.741211, 0, 1.0};
Point(11) = {0.071648, 0.742537, 0, 1.0};
Point(12) = {0.064734, 0.743830, 0, 1.0};
Point(13) = {0.057597, 0.745047, 0, 1.0};
Point(14) = {0.050298, 0.746170, 0, 1.0};
Point(15) = {0.042903, 0.747181, 0, 1.0};
Point(16) = {0.035489, 0.748058, 0, 1.0};
Point(17) = {0.028120, 0.748785, 0, 1.0};
Point(18) = {0.020865, 0.749349, 0, 1.0};
Point(19) = {0.013794, 0.749742, 0, 1.0};
Point(20) = {0.006966, 0.749957, 0, 1.0};
Point(21) = {0.000448, 0.750000, 0, 1.0};
Point(22) = {-0.005693, 0.749871, 0, 1.0};
Point(23) = {-0.011392, 0.749570, 0, 1.0};
Point(24) = {-0.016597, 0.749088, 0, 1.0};
Point(25) = {-0.021273, 0.748427, 0, 1.0};
Point(26) = {-0.025392, 0.747601, 0, 1.0};
Point(27) = {-0.028928, 0.746629, 0, 1.0};
Point(28) = {-0.031867, 0.745538, 0, 1.0};
Point(29) = {-0.034195, 0.744363, 0, 1.0};
Point(30) = {-0.035911, 0.743154, 0, 1.0};
Point(31) = {-0.037010, 0.741983, 0, 1.0};
Point(32) = {-0.037469, 0.740973, 0, 1.0};
Point(33) = {-0.037075, 0.740172, 0, 1.0};
Point(34) = {-0.035755, 0.739449, 0, 1.0};
Point(35) = {-0.033642, 0.738745, 0, 1.0};
Point(36) = {-0.030763, 0.738105, 0, 1.0};
Point(37) = {-0.027141, 0.737544, 0, 1.0};
Point(38) = {-0.022798, 0.737069, 0, 1.0};
Point(39) = {-0.017770, 0.736676, 0, 1.0};
Point(40) = {-0.012100, 0.736358, 0, 1.0};
Point(41) = {-0.005846, 0.736104, 0, 1.0};
Point(42) = {0.000925, 0.735902, 0, 1.0};
Point(43) = {0.008135, 0.735743, 0, 1.0};
Point(44) = {0.015702, 0.735620, 0, 1.0};
Point(45) = {0.023539, 0.735525, 0, 1.0};
Point(46) = {0.031556, 0.735450, 0, 1.0};
Point(47) = {0.039657, 0.735391, 0, 1.0};
Point(48) = {0.047751, 0.735340, 0, 1.0};
Point(49) = {0.055739, 0.735294, 0, 1.0};
Point(50) = {0.063527, 0.735249, 0, 1.0};
Point(51) = {0.071019, 0.735199, 0, 1.0};
Point(52) = {0.078126, 0.735144, 0, 1.0};
Point(53) = {0.084757, 0.735084, 0, 1.0};
Point(54) = {0.090831, 0.735020, 0, 1.0};
Point(55) = {0.096271, 0.734956, 0, 1.0};
Point(56) = {0.101005, 0.734897, 0, 1.0};
Point(57) = {0.104972, 0.734852, 0, 1.0};
Point(58) = {0.108127, 0.734835, 0, 1.0};
Point(59) = {0.110452, 0.734848, 0, 1.0};
Point(60) = {0.111906, 0.734852, 0, 1.0};
Point(61) = {0.112406, 0.734846, 0, 1.0};
Point(62) = {-0.112405, -0.734846, 0, 1.0};
Point(63) = {-0.111901, -0.734899, 0, 1.0};
Point(64) = {-0.110413, -0.735077, 0, 1.0};
Point(65) = {-0.107991, -0.735423, 0, 1.0};
Point(66) = {-0.104704, -0.735960, 0, 1.0};
Point(67) = {-0.100633, -0.736696, 0, 1.0};
Point(68) = {-0.095863, -0.737616, 0, 1.0};
Point(69) = {-0.090490, -0.738700, 0, 1.0};
Point(70) = {-0.084602, -0.739913, 0, 1.0};
Point(71) = {-0.078293, -0.741211, 0, 1.0};
Point(72) = {-0.071648, -0.742537, 0, 1.0};
Point(73) = {-0.064734, -0.743830, 0, 1.0};
Point(74) = {-0.057597, -0.745047, 0, 1.0};
Point(75) = {-0.050298, -0.746170, 0, 1.0};
Point(76) = {-0.042903, -0.747181, 0, 1.0};
Point(77) = {-0.035489, -0.748058, 0, 1.0};
Point(78) = {-0.028120, -0.748785, 0, 1.0};
Point(79) = {-0.020865, -0.749349, 0, 1.0};
Point(80) = {-0.013794, -0.749742, 0, 1.0};
Point(81) = {-0.006966, -0.749957, 0, 1.0};
Point(82) = {-0.000448, -0.750000, 0, 1.0};
Point(83) = {0.005693, -0.749871, 0, 1.0};
Point(84) = {0.011392, -0.749570, 0, 1.0};
Point(85) = {0.016597, -0.749088, 0, 1.0};
Point(86) = {0.021273, -0.748427, 0, 1.0};
Point(87) = {0.025392, -0.747601, 0, 1.0};
Point(88) = {0.028928, -0.746629, 0, 1.0};
Point(89) = {0.031867, -0.745538, 0, 1.0};
Point(90) = {0.034195, -0.744363, 0, 1.0};
Point(91) = {0.035911, -0.743154, 0, 1.0};
Point(92) = {0.037010, -0.741983, 0, 1.0};
Point(93) = {0.037469, -0.740973, 0, 1.0};
Point(94) = {0.037075, -0.740172, 0, 1.0};
Point(95) = {0.035755, -0.739449, 0, 1.0};
Point(96) = {0.033642, -0.738745, 0, 1.0};
Point(97) = {0.030763, -0.738105, 0, 1.0};
Point(98) = {0.027141, -0.737544, 0, 1.0};
Point(99) = {0.022798, -0.737069, 0, 1.0};
Point(100) = {0.017770, -0.736676, 0, 1.0};
Point(101) = {0.012100, -0.736358, 0, 1.0};
Point(102) = {0.005846, -0.736104, 0, 1.0};
Point(103) = {-0.000925, -0.735902, 0, 1.0};
Point(104) = {-0.008135, -0.735743, 0, 1.0};
Point(105) = {-0.015702, -0.735620, 0, 1.0};
Point(106) = {-0.023539, -0.735525, 0, 1.0};
Point(107) = {-0.031556, -0.735450, 0, 1.0};
Point(108) = {-0.039657, -0.735391, 0, 1.0};
Point(109) = {-0.047751, -0.735340, 0, 1.0};
Point(110) = {-0.055739, -0.735294, 0, 1.0};
Point(111) = {-0.063527, -0.735249, 0, 1.0};
Point(112) = {-0.071019, -0.735199, 0, 1.0};
Point(113) = {-0.078126, -0.735144, 0, 1.0};
Point(114) = {-0.084757, -0.735084, 0, 1.0};
Point(115) = {-0.090831, -0.735020, 0, 1.0};
Point(116) = {-0.096271, -0.734956, 0, 1.0};
Point(117) = {-0.101005, -0.734897, 0, 1.0};
Point(118) = {-0.104972, -0.734852, 0, 1.0};
Point(119) = {-0.108127, -0.734835, 0, 1.0};
Point(120) = {-0.110452, -0.734848, 0, 1.0};
Point(121) = {-0.111906, -0.734852, 0, 1.0};
Point(122) = {-0.112406, -0.734846, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
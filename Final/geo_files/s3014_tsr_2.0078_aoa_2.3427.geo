SetFactory("OpenCASCADE");

Point(1) = {0.074916, 0.739898, 0, 1.0};
Point(2) = {0.074581, 0.739932, 0, 1.0};
Point(3) = {0.073589, 0.740051, 0, 1.0};
Point(4) = {0.071974, 0.740282, 0, 1.0};
Point(5) = {0.069782, 0.740640, 0, 1.0};
Point(6) = {0.067068, 0.741130, 0, 1.0};
Point(7) = {0.063889, 0.741744, 0, 1.0};
Point(8) = {0.060306, 0.742467, 0, 1.0};
Point(9) = {0.056381, 0.743275, 0, 1.0};
Point(10) = {0.052175, 0.744141, 0, 1.0};
Point(11) = {0.047745, 0.745025, 0, 1.0};
Point(12) = {0.043136, 0.745887, 0, 1.0};
Point(13) = {0.038378, 0.746698, 0, 1.0};
Point(14) = {0.033511, 0.747446, 0, 1.0};
Point(15) = {0.028582, 0.748120, 0, 1.0};
Point(16) = {0.023639, 0.748705, 0, 1.0};
Point(17) = {0.018726, 0.749190, 0, 1.0};
Point(18) = {0.013890, 0.749566, 0, 1.0};
Point(19) = {0.009175, 0.749828, 0, 1.0};
Point(20) = {0.004623, 0.749971, 0, 1.0};
Point(21) = {0.000278, 0.750000, 0, 1.0};
Point(22) = {-0.003816, 0.749914, 0, 1.0};
Point(23) = {-0.007615, 0.749713, 0, 1.0};
Point(24) = {-0.011085, 0.749392, 0, 1.0};
Point(25) = {-0.014203, 0.748951, 0, 1.0};
Point(26) = {-0.016949, 0.748401, 0, 1.0};
Point(27) = {-0.019306, 0.747753, 0, 1.0};
Point(28) = {-0.021266, 0.747025, 0, 1.0};
Point(29) = {-0.022818, 0.746242, 0, 1.0};
Point(30) = {-0.023962, 0.745436, 0, 1.0};
Point(31) = {-0.024694, 0.744655, 0, 1.0};
Point(32) = {-0.025000, 0.743982, 0, 1.0};
Point(33) = {-0.024738, 0.743448, 0, 1.0};
Point(34) = {-0.023858, 0.742966, 0, 1.0};
Point(35) = {-0.022449, 0.742497, 0, 1.0};
Point(36) = {-0.020530, 0.742070, 0, 1.0};
Point(37) = {-0.018115, 0.741696, 0, 1.0};
Point(38) = {-0.015219, 0.741379, 0, 1.0};
Point(39) = {-0.011867, 0.741117, 0, 1.0};
Point(40) = {-0.008088, 0.740905, 0, 1.0};
Point(41) = {-0.003918, 0.740736, 0, 1.0};
Point(42) = {0.000596, 0.740601, 0, 1.0};
Point(43) = {0.005403, 0.740496, 0, 1.0};
Point(44) = {0.010448, 0.740413, 0, 1.0};
Point(45) = {0.015672, 0.740350, 0, 1.0};
Point(46) = {0.021017, 0.740300, 0, 1.0};
Point(47) = {0.026418, 0.740260, 0, 1.0};
Point(48) = {0.031814, 0.740227, 0, 1.0};
Point(49) = {0.037139, 0.740196, 0, 1.0};
Point(50) = {0.042331, 0.740166, 0, 1.0};
Point(51) = {0.047326, 0.740133, 0, 1.0};
Point(52) = {0.052063, 0.740096, 0, 1.0};
Point(53) = {0.056484, 0.740056, 0, 1.0};
Point(54) = {0.060534, 0.740014, 0, 1.0};
Point(55) = {0.064160, 0.739970, 0, 1.0};
Point(56) = {0.067316, 0.739931, 0, 1.0};
Point(57) = {0.069961, 0.739901, 0, 1.0};
Point(58) = {0.072065, 0.739890, 0, 1.0};
Point(59) = {0.073614, 0.739899, 0, 1.0};
Point(60) = {0.074584, 0.739901, 0, 1.0};
Point(61) = {0.074917, 0.739898, 0, 1.0};
Point(62) = {-0.074916, -0.739898, 0, 1.0};
Point(63) = {-0.074581, -0.739932, 0, 1.0};
Point(64) = {-0.073589, -0.740051, 0, 1.0};
Point(65) = {-0.071974, -0.740282, 0, 1.0};
Point(66) = {-0.069782, -0.740640, 0, 1.0};
Point(67) = {-0.067068, -0.741130, 0, 1.0};
Point(68) = {-0.063889, -0.741744, 0, 1.0};
Point(69) = {-0.060306, -0.742467, 0, 1.0};
Point(70) = {-0.056381, -0.743275, 0, 1.0};
Point(71) = {-0.052175, -0.744141, 0, 1.0};
Point(72) = {-0.047745, -0.745025, 0, 1.0};
Point(73) = {-0.043136, -0.745887, 0, 1.0};
Point(74) = {-0.038378, -0.746698, 0, 1.0};
Point(75) = {-0.033511, -0.747446, 0, 1.0};
Point(76) = {-0.028582, -0.748120, 0, 1.0};
Point(77) = {-0.023639, -0.748705, 0, 1.0};
Point(78) = {-0.018726, -0.749190, 0, 1.0};
Point(79) = {-0.013890, -0.749566, 0, 1.0};
Point(80) = {-0.009175, -0.749828, 0, 1.0};
Point(81) = {-0.004623, -0.749971, 0, 1.0};
Point(82) = {-0.000278, -0.750000, 0, 1.0};
Point(83) = {0.003816, -0.749914, 0, 1.0};
Point(84) = {0.007615, -0.749713, 0, 1.0};
Point(85) = {0.011085, -0.749392, 0, 1.0};
Point(86) = {0.014203, -0.748951, 0, 1.0};
Point(87) = {0.016949, -0.748401, 0, 1.0};
Point(88) = {0.019306, -0.747753, 0, 1.0};
Point(89) = {0.021266, -0.747025, 0, 1.0};
Point(90) = {0.022818, -0.746242, 0, 1.0};
Point(91) = {0.023962, -0.745436, 0, 1.0};
Point(92) = {0.024694, -0.744655, 0, 1.0};
Point(93) = {0.025000, -0.743982, 0, 1.0};
Point(94) = {0.024738, -0.743448, 0, 1.0};
Point(95) = {0.023858, -0.742966, 0, 1.0};
Point(96) = {0.022449, -0.742497, 0, 1.0};
Point(97) = {0.020530, -0.742070, 0, 1.0};
Point(98) = {0.018115, -0.741696, 0, 1.0};
Point(99) = {0.015219, -0.741379, 0, 1.0};
Point(100) = {0.011867, -0.741117, 0, 1.0};
Point(101) = {0.008088, -0.740905, 0, 1.0};
Point(102) = {0.003918, -0.740736, 0, 1.0};
Point(103) = {-0.000596, -0.740601, 0, 1.0};
Point(104) = {-0.005403, -0.740496, 0, 1.0};
Point(105) = {-0.010448, -0.740413, 0, 1.0};
Point(106) = {-0.015672, -0.740350, 0, 1.0};
Point(107) = {-0.021017, -0.740300, 0, 1.0};
Point(108) = {-0.026418, -0.740260, 0, 1.0};
Point(109) = {-0.031814, -0.740227, 0, 1.0};
Point(110) = {-0.037139, -0.740196, 0, 1.0};
Point(111) = {-0.042331, -0.740166, 0, 1.0};
Point(112) = {-0.047326, -0.740133, 0, 1.0};
Point(113) = {-0.052063, -0.740096, 0, 1.0};
Point(114) = {-0.056484, -0.740056, 0, 1.0};
Point(115) = {-0.060534, -0.740014, 0, 1.0};
Point(116) = {-0.064160, -0.739970, 0, 1.0};
Point(117) = {-0.067316, -0.739931, 0, 1.0};
Point(118) = {-0.069961, -0.739901, 0, 1.0};
Point(119) = {-0.072065, -0.739890, 0, 1.0};
Point(120) = {-0.073614, -0.739899, 0, 1.0};
Point(121) = {-0.074584, -0.739901, 0, 1.0};
Point(122) = {-0.074917, -0.739898, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
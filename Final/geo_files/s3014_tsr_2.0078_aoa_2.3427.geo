SetFactory("OpenCASCADE");

Point(1) = {0.149833, 0.729795, 0, 1.0};
Point(2) = {0.149161, 0.729865, 0, 1.0};
Point(3) = {0.147177, 0.730102, 0, 1.0};
Point(4) = {0.143947, 0.730564, 0, 1.0};
Point(5) = {0.139565, 0.731280, 0, 1.0};
Point(6) = {0.134137, 0.732261, 0, 1.0};
Point(7) = {0.127777, 0.733488, 0, 1.0};
Point(8) = {0.120612, 0.734934, 0, 1.0};
Point(9) = {0.112762, 0.736550, 0, 1.0};
Point(10) = {0.104350, 0.738281, 0, 1.0};
Point(11) = {0.095491, 0.740049, 0, 1.0};
Point(12) = {0.086271, 0.741773, 0, 1.0};
Point(13) = {0.076756, 0.743396, 0, 1.0};
Point(14) = {0.067023, 0.744893, 0, 1.0};
Point(15) = {0.057164, 0.746241, 0, 1.0};
Point(16) = {0.047277, 0.747410, 0, 1.0};
Point(17) = {0.037453, 0.748380, 0, 1.0};
Point(18) = {0.027779, 0.749132, 0, 1.0};
Point(19) = {0.018351, 0.749656, 0, 1.0};
Point(20) = {0.009247, 0.749943, 0, 1.0};
Point(21) = {0.000556, 0.750000, 0, 1.0};
Point(22) = {-0.007632, 0.749829, 0, 1.0};
Point(23) = {-0.015231, 0.749427, 0, 1.0};
Point(24) = {-0.022171, 0.748784, 0, 1.0};
Point(25) = {-0.028406, 0.747902, 0, 1.0};
Point(26) = {-0.033898, 0.746802, 0, 1.0};
Point(27) = {-0.038612, 0.745505, 0, 1.0};
Point(28) = {-0.042531, 0.744050, 0, 1.0};
Point(29) = {-0.045636, 0.742484, 0, 1.0};
Point(30) = {-0.047924, 0.740872, 0, 1.0};
Point(31) = {-0.049389, 0.739311, 0, 1.0};
Point(32) = {-0.050000, 0.737965, 0, 1.0};
Point(33) = {-0.049475, 0.736896, 0, 1.0};
Point(34) = {-0.047715, 0.735931, 0, 1.0};
Point(35) = {-0.044897, 0.734993, 0, 1.0};
Point(36) = {-0.041059, 0.734140, 0, 1.0};
Point(37) = {-0.036230, 0.733392, 0, 1.0};
Point(38) = {-0.030439, 0.732759, 0, 1.0};
Point(39) = {-0.023735, 0.732234, 0, 1.0};
Point(40) = {-0.016176, 0.731811, 0, 1.0};
Point(41) = {-0.007836, 0.731472, 0, 1.0};
Point(42) = {0.001192, 0.731202, 0, 1.0};
Point(43) = {0.010806, 0.730991, 0, 1.0};
Point(44) = {0.020895, 0.730827, 0, 1.0};
Point(45) = {0.031345, 0.730699, 0, 1.0};
Point(46) = {0.042034, 0.730600, 0, 1.0};
Point(47) = {0.052835, 0.730521, 0, 1.0};
Point(48) = {0.063628, 0.730453, 0, 1.0};
Point(49) = {0.074278, 0.730392, 0, 1.0};
Point(50) = {0.084662, 0.730332, 0, 1.0};
Point(51) = {0.094652, 0.730265, 0, 1.0};
Point(52) = {0.104127, 0.730192, 0, 1.0};
Point(53) = {0.112969, 0.730112, 0, 1.0};
Point(54) = {0.121068, 0.730027, 0, 1.0};
Point(55) = {0.128321, 0.729941, 0, 1.0};
Point(56) = {0.134633, 0.729862, 0, 1.0};
Point(57) = {0.139923, 0.729802, 0, 1.0};
Point(58) = {0.144129, 0.729780, 0, 1.0};
Point(59) = {0.147229, 0.729798, 0, 1.0};
Point(60) = {0.149169, 0.729802, 0, 1.0};
Point(61) = {0.149835, 0.729795, 0, 1.0};
Point(62) = {-0.149833, -0.729795, 0, 1.0};
Point(63) = {-0.149161, -0.729865, 0, 1.0};
Point(64) = {-0.147177, -0.730102, 0, 1.0};
Point(65) = {-0.143947, -0.730564, 0, 1.0};
Point(66) = {-0.139565, -0.731280, 0, 1.0};
Point(67) = {-0.134137, -0.732261, 0, 1.0};
Point(68) = {-0.127777, -0.733488, 0, 1.0};
Point(69) = {-0.120612, -0.734934, 0, 1.0};
Point(70) = {-0.112762, -0.736550, 0, 1.0};
Point(71) = {-0.104350, -0.738281, 0, 1.0};
Point(72) = {-0.095491, -0.740049, 0, 1.0};
Point(73) = {-0.086271, -0.741773, 0, 1.0};
Point(74) = {-0.076756, -0.743396, 0, 1.0};
Point(75) = {-0.067023, -0.744893, 0, 1.0};
Point(76) = {-0.057164, -0.746241, 0, 1.0};
Point(77) = {-0.047277, -0.747410, 0, 1.0};
Point(78) = {-0.037453, -0.748380, 0, 1.0};
Point(79) = {-0.027779, -0.749132, 0, 1.0};
Point(80) = {-0.018351, -0.749656, 0, 1.0};
Point(81) = {-0.009247, -0.749943, 0, 1.0};
Point(82) = {-0.000556, -0.750000, 0, 1.0};
Point(83) = {0.007632, -0.749829, 0, 1.0};
Point(84) = {0.015231, -0.749427, 0, 1.0};
Point(85) = {0.022171, -0.748784, 0, 1.0};
Point(86) = {0.028406, -0.747902, 0, 1.0};
Point(87) = {0.033898, -0.746802, 0, 1.0};
Point(88) = {0.038612, -0.745505, 0, 1.0};
Point(89) = {0.042531, -0.744050, 0, 1.0};
Point(90) = {0.045636, -0.742484, 0, 1.0};
Point(91) = {0.047924, -0.740872, 0, 1.0};
Point(92) = {0.049389, -0.739311, 0, 1.0};
Point(93) = {0.050000, -0.737965, 0, 1.0};
Point(94) = {0.049475, -0.736896, 0, 1.0};
Point(95) = {0.047715, -0.735931, 0, 1.0};
Point(96) = {0.044897, -0.734993, 0, 1.0};
Point(97) = {0.041059, -0.734140, 0, 1.0};
Point(98) = {0.036230, -0.733392, 0, 1.0};
Point(99) = {0.030439, -0.732759, 0, 1.0};
Point(100) = {0.023735, -0.732234, 0, 1.0};
Point(101) = {0.016176, -0.731811, 0, 1.0};
Point(102) = {0.007836, -0.731472, 0, 1.0};
Point(103) = {-0.001192, -0.731202, 0, 1.0};
Point(104) = {-0.010806, -0.730991, 0, 1.0};
Point(105) = {-0.020895, -0.730827, 0, 1.0};
Point(106) = {-0.031345, -0.730699, 0, 1.0};
Point(107) = {-0.042034, -0.730600, 0, 1.0};
Point(108) = {-0.052835, -0.730521, 0, 1.0};
Point(109) = {-0.063628, -0.730453, 0, 1.0};
Point(110) = {-0.074278, -0.730392, 0, 1.0};
Point(111) = {-0.084662, -0.730332, 0, 1.0};
Point(112) = {-0.094652, -0.730265, 0, 1.0};
Point(113) = {-0.104127, -0.730192, 0, 1.0};
Point(114) = {-0.112969, -0.730112, 0, 1.0};
Point(115) = {-0.121068, -0.730027, 0, 1.0};
Point(116) = {-0.128321, -0.729941, 0, 1.0};
Point(117) = {-0.134633, -0.729862, 0, 1.0};
Point(118) = {-0.139923, -0.729802, 0, 1.0};
Point(119) = {-0.144129, -0.729780, 0, 1.0};
Point(120) = {-0.147229, -0.729798, 0, 1.0};
Point(121) = {-0.149169, -0.729802, 0, 1.0};
Point(122) = {-0.149835, -0.729795, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149238, 0.747839, 0, 1.0};
Point(2) = {0.148606, 0.747782, 0, 1.0};
Point(3) = {0.146719, 0.747618, 0, 1.0};
Point(4) = {0.143577, 0.747373, 0, 1.0};
Point(5) = {0.139192, 0.747092, 0, 1.0};
Point(6) = {0.133607, 0.746844, 0, 1.0};
Point(7) = {0.126917, 0.746713, 0, 1.0};
Point(8) = {0.119270, 0.746753, 0, 1.0};
Point(9) = {0.110848, 0.746955, 0, 1.0};
Point(10) = {0.101783, 0.747287, 0, 1.0};
Point(11) = {0.092218, 0.747724, 0, 1.0};
Point(12) = {0.082292, 0.748232, 0, 1.0};
Point(13) = {0.072150, 0.748772, 0, 1.0};
Point(14) = {0.061931, 0.749276, 0, 1.0};
Point(15) = {0.051743, 0.749681, 0, 1.0};
Point(16) = {0.041677, 0.749936, 0, 1.0};
Point(17) = {0.031817, 0.750000, 0, 1.0};
Point(18) = {0.022238, 0.749846, 0, 1.0};
Point(19) = {0.013013, 0.749458, 0, 1.0};
Point(20) = {0.004204, 0.748833, 0, 1.0};
Point(21) = {-0.004119, 0.747979, 0, 1.0};
Point(22) = {-0.011892, 0.746909, 0, 1.0};
Point(23) = {-0.019050, 0.745638, 0, 1.0};
Point(24) = {-0.025540, 0.744182, 0, 1.0};
Point(25) = {-0.031317, 0.742566, 0, 1.0};
Point(26) = {-0.036343, 0.740815, 0, 1.0};
Point(27) = {-0.040594, 0.738969, 0, 1.0};
Point(28) = {-0.044056, 0.737066, 0, 1.0};
Point(29) = {-0.046718, 0.735164, 0, 1.0};
Point(30) = {-0.048585, 0.733329, 0, 1.0};
Point(31) = {-0.049671, 0.731651, 0, 1.0};
Point(32) = {-0.049987, 0.730295, 0, 1.0};
Point(33) = {-0.049298, 0.729436, 0, 1.0};
Point(34) = {-0.047415, 0.728982, 0, 1.0};
Point(35) = {-0.044386, 0.728802, 0, 1.0};
Point(36) = {-0.040215, 0.728856, 0, 1.0};
Point(37) = {-0.034960, 0.729079, 0, 1.0};
Point(38) = {-0.028710, 0.729438, 0, 1.0};
Point(39) = {-0.021554, 0.729916, 0, 1.0};
Point(40) = {-0.013589, 0.730501, 0, 1.0};
Point(41) = {-0.004916, 0.731190, 0, 1.0};
Point(42) = {0.004369, 0.731975, 0, 1.0};
Point(43) = {0.014158, 0.732846, 0, 1.0};
Point(44) = {0.024345, 0.733790, 0, 1.0};
Point(45) = {0.034811, 0.734793, 0, 1.0};
Point(46) = {0.045441, 0.735840, 0, 1.0};
Point(47) = {0.056113, 0.736916, 0, 1.0};
Point(48) = {0.066705, 0.738008, 0, 1.0};
Point(49) = {0.077099, 0.739101, 0, 1.0};
Point(50) = {0.087173, 0.740180, 0, 1.0};
Point(51) = {0.096816, 0.741233, 0, 1.0};
Point(52) = {0.105916, 0.742246, 0, 1.0};
Point(53) = {0.114368, 0.743209, 0, 1.0};
Point(54) = {0.122075, 0.744111, 0, 1.0};
Point(55) = {0.128947, 0.744944, 0, 1.0};
Point(56) = {0.134903, 0.745700, 0, 1.0};
Point(57) = {0.139881, 0.746383, 0, 1.0};
Point(58) = {0.143849, 0.746990, 0, 1.0};
Point(59) = {0.146787, 0.747466, 0, 1.0};
Point(60) = {0.148615, 0.747752, 0, 1.0};
Point(61) = {-0.149238, -0.747839, 0, 1.0};
Point(62) = {-0.148606, -0.747782, 0, 1.0};
Point(63) = {-0.146719, -0.747618, 0, 1.0};
Point(64) = {-0.143577, -0.747373, 0, 1.0};
Point(65) = {-0.139192, -0.747092, 0, 1.0};
Point(66) = {-0.133607, -0.746844, 0, 1.0};
Point(67) = {-0.126917, -0.746713, 0, 1.0};
Point(68) = {-0.119270, -0.746753, 0, 1.0};
Point(69) = {-0.110848, -0.746955, 0, 1.0};
Point(70) = {-0.101783, -0.747287, 0, 1.0};
Point(71) = {-0.092218, -0.747724, 0, 1.0};
Point(72) = {-0.082292, -0.748232, 0, 1.0};
Point(73) = {-0.072150, -0.748772, 0, 1.0};
Point(74) = {-0.061931, -0.749276, 0, 1.0};
Point(75) = {-0.051743, -0.749681, 0, 1.0};
Point(76) = {-0.041677, -0.749936, 0, 1.0};
Point(77) = {-0.031817, -0.750000, 0, 1.0};
Point(78) = {-0.022238, -0.749846, 0, 1.0};
Point(79) = {-0.013013, -0.749458, 0, 1.0};
Point(80) = {-0.004204, -0.748833, 0, 1.0};
Point(81) = {0.004119, -0.747979, 0, 1.0};
Point(82) = {0.011892, -0.746909, 0, 1.0};
Point(83) = {0.019050, -0.745638, 0, 1.0};
Point(84) = {0.025540, -0.744182, 0, 1.0};
Point(85) = {0.031317, -0.742566, 0, 1.0};
Point(86) = {0.036343, -0.740815, 0, 1.0};
Point(87) = {0.040594, -0.738969, 0, 1.0};
Point(88) = {0.044056, -0.737066, 0, 1.0};
Point(89) = {0.046718, -0.735164, 0, 1.0};
Point(90) = {0.048585, -0.733329, 0, 1.0};
Point(91) = {0.049671, -0.731651, 0, 1.0};
Point(92) = {0.049987, -0.730295, 0, 1.0};
Point(93) = {0.049298, -0.729436, 0, 1.0};
Point(94) = {0.047415, -0.728982, 0, 1.0};
Point(95) = {0.044386, -0.728802, 0, 1.0};
Point(96) = {0.040215, -0.728856, 0, 1.0};
Point(97) = {0.034960, -0.729079, 0, 1.0};
Point(98) = {0.028710, -0.729438, 0, 1.0};
Point(99) = {0.021554, -0.729916, 0, 1.0};
Point(100) = {0.013589, -0.730501, 0, 1.0};
Point(101) = {0.004916, -0.731190, 0, 1.0};
Point(102) = {-0.004369, -0.731975, 0, 1.0};
Point(103) = {-0.014158, -0.732846, 0, 1.0};
Point(104) = {-0.024345, -0.733790, 0, 1.0};
Point(105) = {-0.034811, -0.734793, 0, 1.0};
Point(106) = {-0.045441, -0.735840, 0, 1.0};
Point(107) = {-0.056113, -0.736916, 0, 1.0};
Point(108) = {-0.066705, -0.738008, 0, 1.0};
Point(109) = {-0.077099, -0.739101, 0, 1.0};
Point(110) = {-0.087173, -0.740180, 0, 1.0};
Point(111) = {-0.096816, -0.741233, 0, 1.0};
Point(112) = {-0.105916, -0.742246, 0, 1.0};
Point(113) = {-0.114368, -0.743209, 0, 1.0};
Point(114) = {-0.122075, -0.744111, 0, 1.0};
Point(115) = {-0.128947, -0.744944, 0, 1.0};
Point(116) = {-0.134903, -0.745700, 0, 1.0};
Point(117) = {-0.139881, -0.746383, 0, 1.0};
Point(118) = {-0.143849, -0.746990, 0, 1.0};
Point(119) = {-0.146787, -0.747466, 0, 1.0};
Point(120) = {-0.148615, -0.747752, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:80};
Spline(6) = {80:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074294, 0.745921, 0, 1.0};
Point(2) = {0.072909, 0.746052, 0, 1.0};
Point(3) = {0.070108, 0.746330, 0, 1.0};
Point(4) = {0.067022, 0.746634, 0, 1.0};
Point(5) = {0.063658, 0.746959, 0, 1.0};
Point(6) = {0.060034, 0.747312, 0, 1.0};
Point(7) = {0.056163, 0.747700, 0, 1.0};
Point(8) = {0.052063, 0.748127, 0, 1.0};
Point(9) = {0.047751, 0.748584, 0, 1.0};
Point(10) = {0.043245, 0.749046, 0, 1.0};
Point(11) = {0.038573, 0.749466, 0, 1.0};
Point(12) = {0.033762, 0.749780, 0, 1.0};
Point(13) = {0.028835, 0.749959, 0, 1.0};
Point(14) = {0.023812, 0.750000, 0, 1.0};
Point(15) = {0.018713, 0.749930, 0, 1.0};
Point(16) = {0.013556, 0.749760, 0, 1.0};
Point(17) = {0.008367, 0.749491, 0, 1.0};
Point(18) = {0.003168, 0.749112, 0, 1.0};
Point(19) = {-0.002018, 0.748614, 0, 1.0};
Point(20) = {-0.007169, 0.747999, 0, 1.0};
Point(21) = {-0.012265, 0.747277, 0, 1.0};
Point(22) = {-0.017281, 0.746465, 0, 1.0};
Point(23) = {-0.022202, 0.745578, 0, 1.0};
Point(24) = {-0.027004, 0.744621, 0, 1.0};
Point(25) = {-0.031668, 0.743607, 0, 1.0};
Point(26) = {-0.036176, 0.742543, 0, 1.0};
Point(27) = {-0.040508, 0.741438, 0, 1.0};
Point(28) = {-0.044644, 0.740301, 0, 1.0};
Point(29) = {-0.048570, 0.739143, 0, 1.0};
Point(30) = {-0.052268, 0.737970, 0, 1.0};
Point(31) = {-0.055723, 0.736793, 0, 1.0};
Point(32) = {-0.058922, 0.735626, 0, 1.0};
Point(33) = {-0.061848, 0.734478, 0, 1.0};
Point(34) = {-0.064494, 0.733361, 0, 1.0};
Point(35) = {-0.066849, 0.732285, 0, 1.0};
Point(36) = {-0.068900, 0.731266, 0, 1.0};
Point(37) = {-0.070643, 0.730319, 0, 1.0};
Point(38) = {-0.072070, 0.729462, 0, 1.0};
Point(39) = {-0.073179, 0.728723, 0, 1.0};
Point(40) = {-0.073964, 0.728094, 0, 1.0};
Point(41) = {-0.074420, 0.727571, 0, 1.0};
Point(42) = {-0.074546, 0.727159, 0, 1.0};
Point(43) = {-0.074341, 0.726855, 0, 1.0};
Point(44) = {-0.073806, 0.726666, 0, 1.0};
Point(45) = {-0.072942, 0.726580, 0, 1.0};
Point(46) = {-0.071752, 0.726585, 0, 1.0};
Point(47) = {-0.070242, 0.726685, 0, 1.0};
Point(48) = {-0.068413, 0.726861, 0, 1.0};
Point(49) = {-0.066276, 0.727104, 0, 1.0};
Point(50) = {-0.063837, 0.727407, 0, 1.0};
Point(51) = {-0.061106, 0.727764, 0, 1.0};
Point(52) = {-0.058098, 0.728167, 0, 1.0};
Point(53) = {-0.054820, 0.728615, 0, 1.0};
Point(54) = {-0.051288, 0.729099, 0, 1.0};
Point(55) = {-0.047518, 0.729619, 0, 1.0};
Point(56) = {-0.043525, 0.730166, 0, 1.0};
Point(57) = {-0.039326, 0.730737, 0, 1.0};
Point(58) = {-0.034937, 0.731329, 0, 1.0};
Point(59) = {-0.030379, 0.731937, 0, 1.0};
Point(60) = {-0.025671, 0.732558, 0, 1.0};
Point(61) = {-0.020833, 0.733187, 0, 1.0};
Point(62) = {-0.015884, 0.733822, 0, 1.0};
Point(63) = {-0.010848, 0.734457, 0, 1.0};
Point(64) = {-0.005743, 0.735092, 0, 1.0};
Point(65) = {-0.000593, 0.735720, 0, 1.0};
Point(66) = {0.004579, 0.736343, 0, 1.0};
Point(67) = {0.009752, 0.736962, 0, 1.0};
Point(68) = {0.014902, 0.737580, 0, 1.0};
Point(69) = {0.020010, 0.738190, 0, 1.0};
Point(70) = {0.025051, 0.738786, 0, 1.0};
Point(71) = {0.030006, 0.739357, 0, 1.0};
Point(72) = {0.034854, 0.739899, 0, 1.0};
Point(73) = {0.039572, 0.740429, 0, 1.0};
Point(74) = {0.044137, 0.740972, 0, 1.0};
Point(75) = {0.048529, 0.741542, 0, 1.0};
Point(76) = {0.052727, 0.742119, 0, 1.0};
Point(77) = {0.056720, 0.742665, 0, 1.0};
Point(78) = {0.060495, 0.743141, 0, 1.0};
Point(79) = {0.064036, 0.743541, 0, 1.0};
Point(80) = {0.067327, 0.743867, 0, 1.0};
Point(81) = {0.070352, 0.744131, 0, 1.0};
Point(82) = {0.073098, 0.744337, 0, 1.0};
Point(83) = {0.074459, 0.744422, 0, 1.0};
Point(84) = {-0.074294, -0.745921, 0, 1.0};
Point(85) = {-0.072909, -0.746052, 0, 1.0};
Point(86) = {-0.070108, -0.746330, 0, 1.0};
Point(87) = {-0.067022, -0.746634, 0, 1.0};
Point(88) = {-0.063658, -0.746959, 0, 1.0};
Point(89) = {-0.060034, -0.747312, 0, 1.0};
Point(90) = {-0.056163, -0.747700, 0, 1.0};
Point(91) = {-0.052063, -0.748127, 0, 1.0};
Point(92) = {-0.047751, -0.748584, 0, 1.0};
Point(93) = {-0.043245, -0.749046, 0, 1.0};
Point(94) = {-0.038573, -0.749466, 0, 1.0};
Point(95) = {-0.033762, -0.749780, 0, 1.0};
Point(96) = {-0.028835, -0.749959, 0, 1.0};
Point(97) = {-0.023812, -0.750000, 0, 1.0};
Point(98) = {-0.018713, -0.749930, 0, 1.0};
Point(99) = {-0.013556, -0.749760, 0, 1.0};
Point(100) = {-0.008367, -0.749491, 0, 1.0};
Point(101) = {-0.003168, -0.749112, 0, 1.0};
Point(102) = {0.002018, -0.748614, 0, 1.0};
Point(103) = {0.007169, -0.747999, 0, 1.0};
Point(104) = {0.012265, -0.747277, 0, 1.0};
Point(105) = {0.017281, -0.746465, 0, 1.0};
Point(106) = {0.022202, -0.745578, 0, 1.0};
Point(107) = {0.027004, -0.744621, 0, 1.0};
Point(108) = {0.031668, -0.743607, 0, 1.0};
Point(109) = {0.036176, -0.742543, 0, 1.0};
Point(110) = {0.040508, -0.741438, 0, 1.0};
Point(111) = {0.044644, -0.740301, 0, 1.0};
Point(112) = {0.048570, -0.739143, 0, 1.0};
Point(113) = {0.052268, -0.737970, 0, 1.0};
Point(114) = {0.055723, -0.736793, 0, 1.0};
Point(115) = {0.058922, -0.735626, 0, 1.0};
Point(116) = {0.061848, -0.734478, 0, 1.0};
Point(117) = {0.064494, -0.733361, 0, 1.0};
Point(118) = {0.066849, -0.732285, 0, 1.0};
Point(119) = {0.068900, -0.731266, 0, 1.0};
Point(120) = {0.070643, -0.730319, 0, 1.0};
Point(121) = {0.072070, -0.729462, 0, 1.0};
Point(122) = {0.073179, -0.728723, 0, 1.0};
Point(123) = {0.073964, -0.728094, 0, 1.0};
Point(124) = {0.074420, -0.727571, 0, 1.0};
Point(125) = {0.074546, -0.727159, 0, 1.0};
Point(126) = {0.074341, -0.726855, 0, 1.0};
Point(127) = {0.073806, -0.726666, 0, 1.0};
Point(128) = {0.072942, -0.726580, 0, 1.0};
Point(129) = {0.071752, -0.726585, 0, 1.0};
Point(130) = {0.070242, -0.726685, 0, 1.0};
Point(131) = {0.068413, -0.726861, 0, 1.0};
Point(132) = {0.066276, -0.727104, 0, 1.0};
Point(133) = {0.063837, -0.727407, 0, 1.0};
Point(134) = {0.061106, -0.727764, 0, 1.0};
Point(135) = {0.058098, -0.728167, 0, 1.0};
Point(136) = {0.054820, -0.728615, 0, 1.0};
Point(137) = {0.051288, -0.729099, 0, 1.0};
Point(138) = {0.047518, -0.729619, 0, 1.0};
Point(139) = {0.043525, -0.730166, 0, 1.0};
Point(140) = {0.039326, -0.730737, 0, 1.0};
Point(141) = {0.034937, -0.731329, 0, 1.0};
Point(142) = {0.030379, -0.731937, 0, 1.0};
Point(143) = {0.025671, -0.732558, 0, 1.0};
Point(144) = {0.020833, -0.733187, 0, 1.0};
Point(145) = {0.015884, -0.733822, 0, 1.0};
Point(146) = {0.010848, -0.734457, 0, 1.0};
Point(147) = {0.005743, -0.735092, 0, 1.0};
Point(148) = {0.000593, -0.735720, 0, 1.0};
Point(149) = {-0.004579, -0.736343, 0, 1.0};
Point(150) = {-0.009752, -0.736962, 0, 1.0};
Point(151) = {-0.014902, -0.737580, 0, 1.0};
Point(152) = {-0.020010, -0.738190, 0, 1.0};
Point(153) = {-0.025051, -0.738786, 0, 1.0};
Point(154) = {-0.030006, -0.739357, 0, 1.0};
Point(155) = {-0.034854, -0.739899, 0, 1.0};
Point(156) = {-0.039572, -0.740429, 0, 1.0};
Point(157) = {-0.044137, -0.740972, 0, 1.0};
Point(158) = {-0.048529, -0.741542, 0, 1.0};
Point(159) = {-0.052727, -0.742119, 0, 1.0};
Point(160) = {-0.056720, -0.742665, 0, 1.0};
Point(161) = {-0.060495, -0.743141, 0, 1.0};
Point(162) = {-0.064036, -0.743541, 0, 1.0};
Point(163) = {-0.067327, -0.743867, 0, 1.0};
Point(164) = {-0.070352, -0.744131, 0, 1.0};
Point(165) = {-0.073098, -0.744337, 0, 1.0};
Point(166) = {-0.074459, -0.744422, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:108};
Spline(6) = {108:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
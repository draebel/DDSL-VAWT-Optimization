SetFactory("OpenCASCADE");

Point(1) = {0.074987, 0.725071, 0, 1.0};
Point(2) = {0.073712, 0.725442, 0, 1.0};
Point(3) = {0.071321, 0.726176, 0, 1.0};
Point(4) = {0.068646, 0.727045, 0, 1.0};
Point(5) = {0.065699, 0.728046, 0, 1.0};
Point(6) = {0.062490, 0.729176, 0, 1.0};
Point(7) = {0.059032, 0.730425, 0, 1.0};
Point(8) = {0.055342, 0.731778, 0, 1.0};
Point(9) = {0.051434, 0.733218, 0, 1.0};
Point(10) = {0.047326, 0.734726, 0, 1.0};
Point(11) = {0.043030, 0.736277, 0, 1.0};
Point(12) = {0.038568, 0.737848, 0, 1.0};
Point(13) = {0.033958, 0.739412, 0, 1.0};
Point(14) = {0.029218, 0.740945, 0, 1.0};
Point(15) = {0.024367, 0.742420, 0, 1.0};
Point(16) = {0.019426, 0.743815, 0, 1.0};
Point(17) = {0.014414, 0.745106, 0, 1.0};
Point(18) = {0.009354, 0.746276, 0, 1.0};
Point(19) = {0.004266, 0.747307, 0, 1.0};
Point(20) = {-0.000829, 0.748184, 0, 1.0};
Point(21) = {-0.005908, 0.748896, 0, 1.0};
Point(22) = {-0.010953, 0.749439, 0, 1.0};
Point(23) = {-0.015937, 0.749803, 0, 1.0};
Point(24) = {-0.020843, 0.749990, 0, 1.0};
Point(25) = {-0.025648, 0.750000, 0, 1.0};
Point(26) = {-0.030332, 0.749832, 0, 1.0};
Point(27) = {-0.034875, 0.749492, 0, 1.0};
Point(28) = {-0.039258, 0.748989, 0, 1.0};
Point(29) = {-0.043459, 0.748335, 0, 1.0};
Point(30) = {-0.047461, 0.747542, 0, 1.0};
Point(31) = {-0.051248, 0.746617, 0, 1.0};
Point(32) = {-0.054803, 0.745569, 0, 1.0};
Point(33) = {-0.058111, 0.744410, 0, 1.0};
Point(34) = {-0.061154, 0.743154, 0, 1.0};
Point(35) = {-0.063922, 0.741820, 0, 1.0};
Point(36) = {-0.066403, 0.740426, 0, 1.0};
Point(37) = {-0.068583, 0.738984, 0, 1.0};
Point(38) = {-0.070456, 0.737507, 0, 1.0};
Point(39) = {-0.072009, 0.736011, 0, 1.0};
Point(40) = {-0.073238, 0.734516, 0, 1.0};
Point(41) = {-0.074138, 0.733037, 0, 1.0};
Point(42) = {-0.074703, 0.731581, 0, 1.0};
Point(43) = {-0.074932, 0.730153, 0, 1.0};
Point(44) = {-0.074824, 0.728756, 0, 1.0};
Point(45) = {-0.074378, 0.727404, 0, 1.0};
Point(46) = {-0.073596, 0.726107, 0, 1.0};
Point(47) = {-0.072482, 0.724881, 0, 1.0};
Point(48) = {-0.071042, 0.723726, 0, 1.0};
Point(49) = {-0.069279, 0.722646, 0, 1.0};
Point(50) = {-0.067203, 0.721642, 0, 1.0};
Point(51) = {-0.064821, 0.720713, 0, 1.0};
Point(52) = {-0.062145, 0.719863, 0, 1.0};
Point(53) = {-0.059188, 0.719091, 0, 1.0};
Point(54) = {-0.055960, 0.718396, 0, 1.0};
Point(55) = {-0.052475, 0.717780, 0, 1.0};
Point(56) = {-0.048751, 0.717244, 0, 1.0};
Point(57) = {-0.044801, 0.716785, 0, 1.0};
Point(58) = {-0.040645, 0.716401, 0, 1.0};
Point(59) = {-0.036297, 0.716091, 0, 1.0};
Point(60) = {-0.031778, 0.715848, 0, 1.0};
Point(61) = {-0.027108, 0.715679, 0, 1.0};
Point(62) = {-0.022307, 0.715581, 0, 1.0};
Point(63) = {-0.017395, 0.715556, 0, 1.0};
Point(64) = {-0.012393, 0.715604, 0, 1.0};
Point(65) = {-0.007320, 0.715724, 0, 1.0};
Point(66) = {-0.002202, 0.715914, 0, 1.0};
Point(67) = {0.002941, 0.716174, 0, 1.0};
Point(68) = {0.008086, 0.716498, 0, 1.0};
Point(69) = {0.013213, 0.716884, 0, 1.0};
Point(70) = {0.018299, 0.717326, 0, 1.0};
Point(71) = {0.023320, 0.717819, 0, 1.0};
Point(72) = {0.028256, 0.718350, 0, 1.0};
Point(73) = {0.033085, 0.718908, 0, 1.0};
Point(74) = {0.037787, 0.719485, 0, 1.0};
Point(75) = {0.042340, 0.720063, 0, 1.0};
Point(76) = {0.046726, 0.720633, 0, 1.0};
Point(77) = {0.050922, 0.721178, 0, 1.0};
Point(78) = {0.054913, 0.721686, 0, 1.0};
Point(79) = {0.058680, 0.722147, 0, 1.0};
Point(80) = {0.062208, 0.722551, 0, 1.0};
Point(81) = {0.065480, 0.722894, 0, 1.0};
Point(82) = {0.068481, 0.723168, 0, 1.0};
Point(83) = {0.071202, 0.723374, 0, 1.0};
Point(84) = {0.073630, 0.723514, 0, 1.0};
Point(85) = {0.074923, 0.723559, 0, 1.0};
Point(86) = {-0.074987, -0.725071, 0, 1.0};
Point(87) = {-0.073712, -0.725442, 0, 1.0};
Point(88) = {-0.071321, -0.726176, 0, 1.0};
Point(89) = {-0.068646, -0.727045, 0, 1.0};
Point(90) = {-0.065699, -0.728046, 0, 1.0};
Point(91) = {-0.062490, -0.729176, 0, 1.0};
Point(92) = {-0.059032, -0.730425, 0, 1.0};
Point(93) = {-0.055342, -0.731778, 0, 1.0};
Point(94) = {-0.051434, -0.733218, 0, 1.0};
Point(95) = {-0.047326, -0.734726, 0, 1.0};
Point(96) = {-0.043030, -0.736277, 0, 1.0};
Point(97) = {-0.038568, -0.737848, 0, 1.0};
Point(98) = {-0.033958, -0.739412, 0, 1.0};
Point(99) = {-0.029218, -0.740945, 0, 1.0};
Point(100) = {-0.024367, -0.742420, 0, 1.0};
Point(101) = {-0.019426, -0.743815, 0, 1.0};
Point(102) = {-0.014414, -0.745106, 0, 1.0};
Point(103) = {-0.009354, -0.746276, 0, 1.0};
Point(104) = {-0.004266, -0.747307, 0, 1.0};
Point(105) = {0.000829, -0.748184, 0, 1.0};
Point(106) = {0.005908, -0.748896, 0, 1.0};
Point(107) = {0.010953, -0.749439, 0, 1.0};
Point(108) = {0.015937, -0.749803, 0, 1.0};
Point(109) = {0.020843, -0.749990, 0, 1.0};
Point(110) = {0.025648, -0.750000, 0, 1.0};
Point(111) = {0.030332, -0.749832, 0, 1.0};
Point(112) = {0.034875, -0.749492, 0, 1.0};
Point(113) = {0.039258, -0.748989, 0, 1.0};
Point(114) = {0.043459, -0.748335, 0, 1.0};
Point(115) = {0.047461, -0.747542, 0, 1.0};
Point(116) = {0.051248, -0.746617, 0, 1.0};
Point(117) = {0.054803, -0.745569, 0, 1.0};
Point(118) = {0.058111, -0.744410, 0, 1.0};
Point(119) = {0.061154, -0.743154, 0, 1.0};
Point(120) = {0.063922, -0.741820, 0, 1.0};
Point(121) = {0.066403, -0.740426, 0, 1.0};
Point(122) = {0.068583, -0.738984, 0, 1.0};
Point(123) = {0.070456, -0.737507, 0, 1.0};
Point(124) = {0.072009, -0.736011, 0, 1.0};
Point(125) = {0.073238, -0.734516, 0, 1.0};
Point(126) = {0.074138, -0.733037, 0, 1.0};
Point(127) = {0.074703, -0.731581, 0, 1.0};
Point(128) = {0.074932, -0.730153, 0, 1.0};
Point(129) = {0.074824, -0.728756, 0, 1.0};
Point(130) = {0.074378, -0.727404, 0, 1.0};
Point(131) = {0.073596, -0.726107, 0, 1.0};
Point(132) = {0.072482, -0.724881, 0, 1.0};
Point(133) = {0.071042, -0.723726, 0, 1.0};
Point(134) = {0.069279, -0.722646, 0, 1.0};
Point(135) = {0.067203, -0.721642, 0, 1.0};
Point(136) = {0.064821, -0.720713, 0, 1.0};
Point(137) = {0.062145, -0.719863, 0, 1.0};
Point(138) = {0.059188, -0.719091, 0, 1.0};
Point(139) = {0.055960, -0.718396, 0, 1.0};
Point(140) = {0.052475, -0.717780, 0, 1.0};
Point(141) = {0.048751, -0.717244, 0, 1.0};
Point(142) = {0.044801, -0.716785, 0, 1.0};
Point(143) = {0.040645, -0.716401, 0, 1.0};
Point(144) = {0.036297, -0.716091, 0, 1.0};
Point(145) = {0.031778, -0.715848, 0, 1.0};
Point(146) = {0.027108, -0.715679, 0, 1.0};
Point(147) = {0.022307, -0.715581, 0, 1.0};
Point(148) = {0.017395, -0.715556, 0, 1.0};
Point(149) = {0.012393, -0.715604, 0, 1.0};
Point(150) = {0.007320, -0.715724, 0, 1.0};
Point(151) = {0.002202, -0.715914, 0, 1.0};
Point(152) = {-0.002941, -0.716174, 0, 1.0};
Point(153) = {-0.008086, -0.716498, 0, 1.0};
Point(154) = {-0.013213, -0.716884, 0, 1.0};
Point(155) = {-0.018299, -0.717326, 0, 1.0};
Point(156) = {-0.023320, -0.717819, 0, 1.0};
Point(157) = {-0.028256, -0.718350, 0, 1.0};
Point(158) = {-0.033085, -0.718908, 0, 1.0};
Point(159) = {-0.037787, -0.719485, 0, 1.0};
Point(160) = {-0.042340, -0.720063, 0, 1.0};
Point(161) = {-0.046726, -0.720633, 0, 1.0};
Point(162) = {-0.050922, -0.721178, 0, 1.0};
Point(163) = {-0.054913, -0.721686, 0, 1.0};
Point(164) = {-0.058680, -0.722147, 0, 1.0};
Point(165) = {-0.062208, -0.722551, 0, 1.0};
Point(166) = {-0.065480, -0.722894, 0, 1.0};
Point(167) = {-0.068481, -0.723168, 0, 1.0};
Point(168) = {-0.071202, -0.723374, 0, 1.0};
Point(169) = {-0.073630, -0.723514, 0, 1.0};
Point(170) = {-0.074923, -0.723559, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {36.00000000, 15.00000000, 0, 1.0};
Point(174) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 35 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074998, 0.741003, 0, 1.0};
Point(2) = {0.074618, 0.741021, 0, 1.0};
Point(3) = {0.073524, 0.741112, 0, 1.0};
Point(4) = {0.071810, 0.741299, 0, 1.0};
Point(5) = {0.069526, 0.741542, 0, 1.0};
Point(6) = {0.066677, 0.741828, 0, 1.0};
Point(7) = {0.063290, 0.742184, 0, 1.0};
Point(8) = {0.059423, 0.742629, 0, 1.0};
Point(9) = {0.055145, 0.743165, 0, 1.0};
Point(10) = {0.050527, 0.743789, 0, 1.0};
Point(11) = {0.045645, 0.744490, 0, 1.0};
Point(12) = {0.040574, 0.745250, 0, 1.0};
Point(13) = {0.035390, 0.746044, 0, 1.0};
Point(14) = {0.030165, 0.746845, 0, 1.0};
Point(15) = {0.024966, 0.747621, 0, 1.0};
Point(16) = {0.019855, 0.748339, 0, 1.0};
Point(17) = {0.014887, 0.748967, 0, 1.0};
Point(18) = {0.010110, 0.749472, 0, 1.0};
Point(19) = {0.005565, 0.749827, 0, 1.0};
Point(20) = {0.001290, 0.750000, 0, 1.0};
Point(21) = {-0.002705, 0.749959, 0, 1.0};
Point(22) = {-0.006423, 0.749709, 0, 1.0};
Point(23) = {-0.009853, 0.749266, 0, 1.0};
Point(24) = {-0.012985, 0.748654, 0, 1.0};
Point(25) = {-0.015799, 0.747903, 0, 1.0};
Point(26) = {-0.018269, 0.747043, 0, 1.0};
Point(27) = {-0.020380, 0.746102, 0, 1.0};
Point(28) = {-0.022110, 0.745112, 0, 1.0};
Point(29) = {-0.023446, 0.744104, 0, 1.0};
Point(30) = {-0.024378, 0.743118, 0, 1.0};
Point(31) = {-0.024894, 0.742210, 0, 1.0};
Point(32) = {-0.024934, 0.742087, 0, 1.0};
Point(33) = {-0.024987, 0.741852, 0, 1.0};
Point(34) = {-0.024999, 0.741705, 0, 1.0};
Point(35) = {-0.024995, 0.741567, 0, 1.0};
Point(36) = {-0.024984, 0.741503, 0, 1.0};
Point(37) = {-0.024969, 0.741442, 0, 1.0};
Point(38) = {-0.024946, 0.741387, 0, 1.0};
Point(39) = {-0.024914, 0.741334, 0, 1.0};
Point(40) = {-0.024872, 0.741283, 0, 1.0};
Point(41) = {-0.024821, 0.741232, 0, 1.0};
Point(42) = {-0.024698, 0.741130, 0, 1.0};
Point(43) = {-0.024546, 0.741029, 0, 1.0};
Point(44) = {-0.024272, 0.740877, 0, 1.0};
Point(45) = {-0.023213, 0.740452, 0, 1.0};
Point(46) = {-0.021448, 0.739976, 0, 1.0};
Point(47) = {-0.019145, 0.739536, 0, 1.0};
Point(48) = {-0.016328, 0.739130, 0, 1.0};
Point(49) = {-0.013025, 0.738748, 0, 1.0};
Point(50) = {-0.009282, 0.738375, 0, 1.0};
Point(51) = {-0.005160, 0.738008, 0, 1.0};
Point(52) = {-0.000722, 0.737656, 0, 1.0};
Point(53) = {0.003975, 0.737329, 0, 1.0};
Point(54) = {0.008873, 0.737040, 0, 1.0};
Point(55) = {0.013921, 0.736802, 0, 1.0};
Point(56) = {0.019065, 0.736620, 0, 1.0};
Point(57) = {0.024248, 0.736499, 0, 1.0};
Point(58) = {0.029417, 0.736443, 0, 1.0};
Point(59) = {0.034514, 0.736455, 0, 1.0};
Point(60) = {0.039485, 0.736537, 0, 1.0};
Point(61) = {0.044276, 0.736691, 0, 1.0};
Point(62) = {0.048834, 0.736919, 0, 1.0};
Point(63) = {0.053110, 0.737226, 0, 1.0};
Point(64) = {0.057053, 0.737631, 0, 1.0};
Point(65) = {0.060662, 0.738166, 0, 1.0};
Point(66) = {0.063982, 0.738804, 0, 1.0};
Point(67) = {0.067002, 0.739441, 0, 1.0};
Point(68) = {0.069648, 0.740009, 0, 1.0};
Point(69) = {0.071848, 0.740471, 0, 1.0};
Point(70) = {0.073536, 0.740796, 0, 1.0};
Point(71) = {0.074620, 0.740961, 0, 1.0};
Point(72) = {-0.074998, -0.741003, 0, 1.0};
Point(73) = {-0.074618, -0.741021, 0, 1.0};
Point(74) = {-0.073524, -0.741112, 0, 1.0};
Point(75) = {-0.071810, -0.741299, 0, 1.0};
Point(76) = {-0.069526, -0.741542, 0, 1.0};
Point(77) = {-0.066677, -0.741828, 0, 1.0};
Point(78) = {-0.063290, -0.742184, 0, 1.0};
Point(79) = {-0.059423, -0.742629, 0, 1.0};
Point(80) = {-0.055145, -0.743165, 0, 1.0};
Point(81) = {-0.050527, -0.743789, 0, 1.0};
Point(82) = {-0.045645, -0.744490, 0, 1.0};
Point(83) = {-0.040574, -0.745250, 0, 1.0};
Point(84) = {-0.035390, -0.746044, 0, 1.0};
Point(85) = {-0.030165, -0.746845, 0, 1.0};
Point(86) = {-0.024966, -0.747621, 0, 1.0};
Point(87) = {-0.019855, -0.748339, 0, 1.0};
Point(88) = {-0.014887, -0.748967, 0, 1.0};
Point(89) = {-0.010110, -0.749472, 0, 1.0};
Point(90) = {-0.005565, -0.749827, 0, 1.0};
Point(91) = {-0.001290, -0.750000, 0, 1.0};
Point(92) = {0.002705, -0.749959, 0, 1.0};
Point(93) = {0.006423, -0.749709, 0, 1.0};
Point(94) = {0.009853, -0.749266, 0, 1.0};
Point(95) = {0.012985, -0.748654, 0, 1.0};
Point(96) = {0.015799, -0.747903, 0, 1.0};
Point(97) = {0.018269, -0.747043, 0, 1.0};
Point(98) = {0.020380, -0.746102, 0, 1.0};
Point(99) = {0.022110, -0.745112, 0, 1.0};
Point(100) = {0.023446, -0.744104, 0, 1.0};
Point(101) = {0.024378, -0.743118, 0, 1.0};
Point(102) = {0.024894, -0.742210, 0, 1.0};
Point(103) = {0.024934, -0.742087, 0, 1.0};
Point(104) = {0.024987, -0.741852, 0, 1.0};
Point(105) = {0.024999, -0.741705, 0, 1.0};
Point(106) = {0.024995, -0.741567, 0, 1.0};
Point(107) = {0.024984, -0.741503, 0, 1.0};
Point(108) = {0.024969, -0.741442, 0, 1.0};
Point(109) = {0.024946, -0.741387, 0, 1.0};
Point(110) = {0.024914, -0.741334, 0, 1.0};
Point(111) = {0.024872, -0.741283, 0, 1.0};
Point(112) = {0.024821, -0.741232, 0, 1.0};
Point(113) = {0.024698, -0.741130, 0, 1.0};
Point(114) = {0.024546, -0.741029, 0, 1.0};
Point(115) = {0.024272, -0.740877, 0, 1.0};
Point(116) = {0.023213, -0.740452, 0, 1.0};
Point(117) = {0.021448, -0.739976, 0, 1.0};
Point(118) = {0.019145, -0.739536, 0, 1.0};
Point(119) = {0.016328, -0.739130, 0, 1.0};
Point(120) = {0.013025, -0.738748, 0, 1.0};
Point(121) = {0.009282, -0.738375, 0, 1.0};
Point(122) = {0.005160, -0.738008, 0, 1.0};
Point(123) = {0.000722, -0.737656, 0, 1.0};
Point(124) = {-0.003975, -0.737329, 0, 1.0};
Point(125) = {-0.008873, -0.737040, 0, 1.0};
Point(126) = {-0.013921, -0.736802, 0, 1.0};
Point(127) = {-0.019065, -0.736620, 0, 1.0};
Point(128) = {-0.024248, -0.736499, 0, 1.0};
Point(129) = {-0.029417, -0.736443, 0, 1.0};
Point(130) = {-0.034514, -0.736455, 0, 1.0};
Point(131) = {-0.039485, -0.736537, 0, 1.0};
Point(132) = {-0.044276, -0.736691, 0, 1.0};
Point(133) = {-0.048834, -0.736919, 0, 1.0};
Point(134) = {-0.053110, -0.737226, 0, 1.0};
Point(135) = {-0.057053, -0.737631, 0, 1.0};
Point(136) = {-0.060662, -0.738166, 0, 1.0};
Point(137) = {-0.063982, -0.738804, 0, 1.0};
Point(138) = {-0.067002, -0.739441, 0, 1.0};
Point(139) = {-0.069648, -0.740009, 0, 1.0};
Point(140) = {-0.071848, -0.740471, 0, 1.0};
Point(141) = {-0.073536, -0.740796, 0, 1.0};
Point(142) = {-0.074620, -0.740961, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:53};
Spline(3) = {53:71};
Spline(4) = {71,1};

// Lines: second blade (splines 5-8)
Spline(5) = {72:91};
Spline(6) = {91:124};
Spline(7) = {124:142};
Spline(8) = {142,72};

// Outer domain (points 20001-4 and lines)
Point(143) = {-13.50000000, -15.00000000, 0, 1.0};
Point(144) = {-13.50000000, 15.00000000, 0, 1.0};
Point(145) = {13.50000000, 15.00000000, 0, 1.0};
Point(146) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {143, 144};
Line(12) = {144, 145};
Line(13) = {145, 146};
Line(14) = {143, 146};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
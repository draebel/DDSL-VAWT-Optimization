SetFactory("OpenCASCADE");

Point(1) = {0.074600, 0.725814, 0, 1.0};
Point(2) = {0.074076, 0.725961, 0, 1.0};
Point(3) = {0.072558, 0.726443, 0, 1.0};
Point(4) = {0.070175, 0.727282, 0, 1.0};
Point(5) = {0.067055, 0.728430, 0, 1.0};
Point(6) = {0.063279, 0.729791, 0, 1.0};
Point(7) = {0.058864, 0.731282, 0, 1.0};
Point(8) = {0.053813, 0.732886, 0, 1.0};
Point(9) = {0.048190, 0.734617, 0, 1.0};
Point(10) = {0.042091, 0.736460, 0, 1.0};
Point(11) = {0.035616, 0.738377, 0, 1.0};
Point(12) = {0.028862, 0.740324, 0, 1.0};
Point(13) = {0.021923, 0.742239, 0, 1.0};
Point(14) = {0.014892, 0.744058, 0, 1.0};
Point(15) = {0.007851, 0.745679, 0, 1.0};
Point(16) = {0.000801, 0.746997, 0, 1.0};
Point(17) = {-0.006313, 0.748002, 0, 1.0};
Point(18) = {-0.013458, 0.748769, 0, 1.0};
Point(19) = {-0.020549, 0.749338, 0, 1.0};
Point(20) = {-0.027497, 0.749726, 0, 1.0};
Point(21) = {-0.034216, 0.749944, 0, 1.0};
Point(22) = {-0.040625, 0.750000, 0, 1.0};
Point(23) = {-0.046641, 0.749904, 0, 1.0};
Point(24) = {-0.052181, 0.749658, 0, 1.0};
Point(25) = {-0.057164, 0.749265, 0, 1.0};
Point(26) = {-0.061503, 0.748693, 0, 1.0};
Point(27) = {-0.065173, 0.747871, 0, 1.0};
Point(28) = {-0.068237, 0.746791, 0, 1.0};
Point(29) = {-0.070725, 0.745530, 0, 1.0};
Point(30) = {-0.072620, 0.744169, 0, 1.0};
Point(31) = {-0.073909, 0.742784, 0, 1.0};
Point(32) = {-0.074555, 0.741486, 0, 1.0};
Point(33) = {-0.074606, 0.741223, 0, 1.0};
Point(34) = {-0.074623, 0.740944, 0, 1.0};
Point(35) = {-0.074580, 0.740697, 0, 1.0};
Point(36) = {-0.074458, 0.740464, 0, 1.0};
Point(37) = {-0.074258, 0.740224, 0, 1.0};
Point(38) = {-0.073258, 0.739419, 0, 1.0};
Point(39) = {-0.071210, 0.738312, 0, 1.0};
Point(40) = {-0.068357, 0.737139, 0, 1.0};
Point(41) = {-0.064755, 0.735912, 0, 1.0};
Point(42) = {-0.060461, 0.734647, 0, 1.0};
Point(43) = {-0.055542, 0.733358, 0, 1.0};
Point(44) = {-0.050062, 0.732069, 0, 1.0};
Point(45) = {-0.044099, 0.730801, 0, 1.0};
Point(46) = {-0.037730, 0.729580, 0, 1.0};
Point(47) = {-0.031033, 0.728437, 0, 1.0};
Point(48) = {-0.024095, 0.727405, 0, 1.0};
Point(49) = {-0.016997, 0.726527, 0, 1.0};
Point(50) = {-0.009824, 0.725850, 0, 1.0};
Point(51) = {-0.002660, 0.725476, 0, 1.0};
Point(52) = {0.004560, 0.725548, 0, 1.0};
Point(53) = {0.012018, 0.725991, 0, 1.0};
Point(54) = {0.019704, 0.726558, 0, 1.0};
Point(55) = {0.027450, 0.727089, 0, 1.0};
Point(56) = {0.035089, 0.727508, 0, 1.0};
Point(57) = {0.042453, 0.727764, 0, 1.0};
Point(58) = {0.049377, 0.727840, 0, 1.0};
Point(59) = {0.055711, 0.727730, 0, 1.0};
Point(60) = {0.061308, 0.727453, 0, 1.0};
Point(61) = {0.066024, 0.727055, 0, 1.0};
Point(62) = {0.069757, 0.726612, 0, 1.0};
Point(63) = {0.072445, 0.726209, 0, 1.0};
Point(64) = {0.074062, 0.725920, 0, 1.0};
Point(65) = {-0.074600, -0.725814, 0, 1.0};
Point(66) = {-0.074076, -0.725961, 0, 1.0};
Point(67) = {-0.072558, -0.726443, 0, 1.0};
Point(68) = {-0.070175, -0.727282, 0, 1.0};
Point(69) = {-0.067055, -0.728430, 0, 1.0};
Point(70) = {-0.063279, -0.729791, 0, 1.0};
Point(71) = {-0.058864, -0.731282, 0, 1.0};
Point(72) = {-0.053813, -0.732886, 0, 1.0};
Point(73) = {-0.048190, -0.734617, 0, 1.0};
Point(74) = {-0.042091, -0.736460, 0, 1.0};
Point(75) = {-0.035616, -0.738377, 0, 1.0};
Point(76) = {-0.028862, -0.740324, 0, 1.0};
Point(77) = {-0.021923, -0.742239, 0, 1.0};
Point(78) = {-0.014892, -0.744058, 0, 1.0};
Point(79) = {-0.007851, -0.745679, 0, 1.0};
Point(80) = {-0.000801, -0.746997, 0, 1.0};
Point(81) = {0.006313, -0.748002, 0, 1.0};
Point(82) = {0.013458, -0.748769, 0, 1.0};
Point(83) = {0.020549, -0.749338, 0, 1.0};
Point(84) = {0.027497, -0.749726, 0, 1.0};
Point(85) = {0.034216, -0.749944, 0, 1.0};
Point(86) = {0.040625, -0.750000, 0, 1.0};
Point(87) = {0.046641, -0.749904, 0, 1.0};
Point(88) = {0.052181, -0.749658, 0, 1.0};
Point(89) = {0.057164, -0.749265, 0, 1.0};
Point(90) = {0.061503, -0.748693, 0, 1.0};
Point(91) = {0.065173, -0.747871, 0, 1.0};
Point(92) = {0.068237, -0.746791, 0, 1.0};
Point(93) = {0.070725, -0.745530, 0, 1.0};
Point(94) = {0.072620, -0.744169, 0, 1.0};
Point(95) = {0.073909, -0.742784, 0, 1.0};
Point(96) = {0.074555, -0.741486, 0, 1.0};
Point(97) = {0.074606, -0.741223, 0, 1.0};
Point(98) = {0.074623, -0.740944, 0, 1.0};
Point(99) = {0.074580, -0.740697, 0, 1.0};
Point(100) = {0.074458, -0.740464, 0, 1.0};
Point(101) = {0.074258, -0.740224, 0, 1.0};
Point(102) = {0.073258, -0.739419, 0, 1.0};
Point(103) = {0.071210, -0.738312, 0, 1.0};
Point(104) = {0.068357, -0.737139, 0, 1.0};
Point(105) = {0.064755, -0.735912, 0, 1.0};
Point(106) = {0.060461, -0.734647, 0, 1.0};
Point(107) = {0.055542, -0.733358, 0, 1.0};
Point(108) = {0.050062, -0.732069, 0, 1.0};
Point(109) = {0.044099, -0.730801, 0, 1.0};
Point(110) = {0.037730, -0.729580, 0, 1.0};
Point(111) = {0.031033, -0.728437, 0, 1.0};
Point(112) = {0.024095, -0.727405, 0, 1.0};
Point(113) = {0.016997, -0.726527, 0, 1.0};
Point(114) = {0.009824, -0.725850, 0, 1.0};
Point(115) = {0.002660, -0.725476, 0, 1.0};
Point(116) = {-0.004560, -0.725548, 0, 1.0};
Point(117) = {-0.012018, -0.725991, 0, 1.0};
Point(118) = {-0.019704, -0.726558, 0, 1.0};
Point(119) = {-0.027450, -0.727089, 0, 1.0};
Point(120) = {-0.035089, -0.727508, 0, 1.0};
Point(121) = {-0.042453, -0.727764, 0, 1.0};
Point(122) = {-0.049377, -0.727840, 0, 1.0};
Point(123) = {-0.055711, -0.727730, 0, 1.0};
Point(124) = {-0.061308, -0.727453, 0, 1.0};
Point(125) = {-0.066024, -0.727055, 0, 1.0};
Point(126) = {-0.069757, -0.726612, 0, 1.0};
Point(127) = {-0.072445, -0.726209, 0, 1.0};
Point(128) = {-0.074062, -0.725920, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:47};
Spline(3) = {47:64};
Spline(4) = {64,1};

// Lines: second blade (splines 5-8)
Spline(5) = {65:85};
Spline(6) = {85:111};
Spline(7) = {111:128};
Spline(8) = {128,65};

// Outer domain (points 20001-4 and lines)
Point(129) = {-13.50000000, -15.00000000, 0, 1.0};
Point(130) = {-13.50000000, 15.00000000, 0, 1.0};
Point(131) = {13.50000000, 15.00000000, 0, 1.0};
Point(132) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {129, 130};
Line(12) = {130, 131};
Line(13) = {131, 132};
Line(14) = {129, 132};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
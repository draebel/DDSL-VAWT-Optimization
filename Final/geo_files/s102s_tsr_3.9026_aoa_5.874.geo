SetFactory("OpenCASCADE");

Point(1) = {0.074475, 0.733876, 0, 1.0};
Point(2) = {0.074125, 0.733974, 0, 1.0};
Point(3) = {0.073114, 0.734295, 0, 1.0};
Point(4) = {0.071525, 0.734855, 0, 1.0};
Point(5) = {0.069445, 0.735620, 0, 1.0};
Point(6) = {0.066928, 0.736527, 0, 1.0};
Point(7) = {0.063984, 0.737522, 0, 1.0};
Point(8) = {0.060617, 0.738591, 0, 1.0};
Point(9) = {0.056868, 0.739745, 0, 1.0};
Point(10) = {0.052802, 0.740973, 0, 1.0};
Point(11) = {0.048486, 0.742252, 0, 1.0};
Point(12) = {0.043983, 0.743549, 0, 1.0};
Point(13) = {0.039357, 0.744826, 0, 1.0};
Point(14) = {0.034670, 0.746038, 0, 1.0};
Point(15) = {0.029976, 0.747120, 0, 1.0};
Point(16) = {0.025276, 0.747998, 0, 1.0};
Point(17) = {0.020534, 0.748668, 0, 1.0};
Point(18) = {0.015770, 0.749179, 0, 1.0};
Point(19) = {0.011043, 0.749559, 0, 1.0};
Point(20) = {0.006411, 0.749817, 0, 1.0};
Point(21) = {0.001931, 0.749963, 0, 1.0};
Point(22) = {-0.002341, 0.750000, 0, 1.0};
Point(23) = {-0.006352, 0.749936, 0, 1.0};
Point(24) = {-0.010045, 0.749772, 0, 1.0};
Point(25) = {-0.013367, 0.749510, 0, 1.0};
Point(26) = {-0.016259, 0.749129, 0, 1.0};
Point(27) = {-0.018706, 0.748580, 0, 1.0};
Point(28) = {-0.020749, 0.747861, 0, 1.0};
Point(29) = {-0.022408, 0.747020, 0, 1.0};
Point(30) = {-0.023671, 0.746113, 0, 1.0};
Point(31) = {-0.024530, 0.745190, 0, 1.0};
Point(32) = {-0.024961, 0.744324, 0, 1.0};
Point(33) = {-0.024995, 0.744149, 0, 1.0};
Point(34) = {-0.025006, 0.743963, 0, 1.0};
Point(35) = {-0.024978, 0.743798, 0, 1.0};
Point(36) = {-0.024896, 0.743643, 0, 1.0};
Point(37) = {-0.024763, 0.743482, 0, 1.0};
Point(38) = {-0.024096, 0.742946, 0, 1.0};
Point(39) = {-0.022731, 0.742208, 0, 1.0};
Point(40) = {-0.020829, 0.741426, 0, 1.0};
Point(41) = {-0.018428, 0.740608, 0, 1.0};
Point(42) = {-0.015565, 0.739765, 0, 1.0};
Point(43) = {-0.012286, 0.738905, 0, 1.0};
Point(44) = {-0.008633, 0.738046, 0, 1.0};
Point(45) = {-0.004657, 0.737201, 0, 1.0};
Point(46) = {-0.000411, 0.736387, 0, 1.0};
Point(47) = {0.004053, 0.735625, 0, 1.0};
Point(48) = {0.008679, 0.734937, 0, 1.0};
Point(49) = {0.013411, 0.734352, 0, 1.0};
Point(50) = {0.018193, 0.733900, 0, 1.0};
Point(51) = {0.022968, 0.733651, 0, 1.0};
Point(52) = {0.027782, 0.733699, 0, 1.0};
Point(53) = {0.032754, 0.733994, 0, 1.0};
Point(54) = {0.037878, 0.734372, 0, 1.0};
Point(55) = {0.043042, 0.734726, 0, 1.0};
Point(56) = {0.048134, 0.735006, 0, 1.0};
Point(57) = {0.053043, 0.735176, 0, 1.0};
Point(58) = {0.057660, 0.735227, 0, 1.0};
Point(59) = {0.061883, 0.735153, 0, 1.0};
Point(60) = {0.065613, 0.734969, 0, 1.0};
Point(61) = {0.068758, 0.734703, 0, 1.0};
Point(62) = {0.071246, 0.734408, 0, 1.0};
Point(63) = {0.073038, 0.734139, 0, 1.0};
Point(64) = {0.074116, 0.733947, 0, 1.0};
Point(65) = {-0.074475, -0.733876, 0, 1.0};
Point(66) = {-0.074125, -0.733974, 0, 1.0};
Point(67) = {-0.073114, -0.734295, 0, 1.0};
Point(68) = {-0.071525, -0.734855, 0, 1.0};
Point(69) = {-0.069445, -0.735620, 0, 1.0};
Point(70) = {-0.066928, -0.736527, 0, 1.0};
Point(71) = {-0.063984, -0.737522, 0, 1.0};
Point(72) = {-0.060617, -0.738591, 0, 1.0};
Point(73) = {-0.056868, -0.739745, 0, 1.0};
Point(74) = {-0.052802, -0.740973, 0, 1.0};
Point(75) = {-0.048486, -0.742252, 0, 1.0};
Point(76) = {-0.043983, -0.743549, 0, 1.0};
Point(77) = {-0.039357, -0.744826, 0, 1.0};
Point(78) = {-0.034670, -0.746038, 0, 1.0};
Point(79) = {-0.029976, -0.747120, 0, 1.0};
Point(80) = {-0.025276, -0.747998, 0, 1.0};
Point(81) = {-0.020534, -0.748668, 0, 1.0};
Point(82) = {-0.015770, -0.749179, 0, 1.0};
Point(83) = {-0.011043, -0.749559, 0, 1.0};
Point(84) = {-0.006411, -0.749817, 0, 1.0};
Point(85) = {-0.001931, -0.749963, 0, 1.0};
Point(86) = {0.002341, -0.750000, 0, 1.0};
Point(87) = {0.006352, -0.749936, 0, 1.0};
Point(88) = {0.010045, -0.749772, 0, 1.0};
Point(89) = {0.013367, -0.749510, 0, 1.0};
Point(90) = {0.016259, -0.749129, 0, 1.0};
Point(91) = {0.018706, -0.748580, 0, 1.0};
Point(92) = {0.020749, -0.747861, 0, 1.0};
Point(93) = {0.022408, -0.747020, 0, 1.0};
Point(94) = {0.023671, -0.746113, 0, 1.0};
Point(95) = {0.024530, -0.745190, 0, 1.0};
Point(96) = {0.024961, -0.744324, 0, 1.0};
Point(97) = {0.024995, -0.744149, 0, 1.0};
Point(98) = {0.025006, -0.743963, 0, 1.0};
Point(99) = {0.024978, -0.743798, 0, 1.0};
Point(100) = {0.024896, -0.743643, 0, 1.0};
Point(101) = {0.024763, -0.743482, 0, 1.0};
Point(102) = {0.024096, -0.742946, 0, 1.0};
Point(103) = {0.022731, -0.742208, 0, 1.0};
Point(104) = {0.020829, -0.741426, 0, 1.0};
Point(105) = {0.018428, -0.740608, 0, 1.0};
Point(106) = {0.015565, -0.739765, 0, 1.0};
Point(107) = {0.012286, -0.738905, 0, 1.0};
Point(108) = {0.008633, -0.738046, 0, 1.0};
Point(109) = {0.004657, -0.737201, 0, 1.0};
Point(110) = {0.000411, -0.736387, 0, 1.0};
Point(111) = {-0.004053, -0.735625, 0, 1.0};
Point(112) = {-0.008679, -0.734937, 0, 1.0};
Point(113) = {-0.013411, -0.734352, 0, 1.0};
Point(114) = {-0.018193, -0.733900, 0, 1.0};
Point(115) = {-0.022968, -0.733651, 0, 1.0};
Point(116) = {-0.027782, -0.733699, 0, 1.0};
Point(117) = {-0.032754, -0.733994, 0, 1.0};
Point(118) = {-0.037878, -0.734372, 0, 1.0};
Point(119) = {-0.043042, -0.734726, 0, 1.0};
Point(120) = {-0.048134, -0.735006, 0, 1.0};
Point(121) = {-0.053043, -0.735176, 0, 1.0};
Point(122) = {-0.057660, -0.735227, 0, 1.0};
Point(123) = {-0.061883, -0.735153, 0, 1.0};
Point(124) = {-0.065613, -0.734969, 0, 1.0};
Point(125) = {-0.068758, -0.734703, 0, 1.0};
Point(126) = {-0.071246, -0.734408, 0, 1.0};
Point(127) = {-0.073038, -0.734139, 0, 1.0};
Point(128) = {-0.074116, -0.733947, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:47};
Spline(3) = {47:64};
Spline(4) = {64,1};

// Lines: second blade (splines 5-8)
Spline(5) = {65:85};
Spline(6) = {85:111};
Spline(7) = {111:128};
Spline(8) = {128,65};

// Outer domain (points 20001-4 and lines)
Point(129) = {-13.50000000, -15.00000000, 0, 1.0};
Point(130) = {-13.50000000, 15.00000000, 0, 1.0};
Point(131) = {13.50000000, 15.00000000, 0, 1.0};
Point(132) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {129, 130};
Line(12) = {130, 131};
Line(13) = {131, 132};
Line(14) = {129, 132};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.147248, 0.749690, 0, 1.0};
Point(2) = {0.146592, 0.749692, 0, 1.0};
Point(3) = {0.144683, 0.749723, 0, 1.0};
Point(4) = {0.141635, 0.749806, 0, 1.0};
Point(5) = {0.137552, 0.749906, 0, 1.0};
Point(6) = {0.132490, 0.749972, 0, 1.0};
Point(7) = {0.126499, 0.750000, 0, 1.0};
Point(8) = {0.119666, 0.749994, 0, 1.0};
Point(9) = {0.112091, 0.749947, 0, 1.0};
Point(10) = {0.103887, 0.749837, 0, 1.0};
Point(11) = {0.095159, 0.749642, 0, 1.0};
Point(12) = {0.086007, 0.749326, 0, 1.0};
Point(13) = {0.076535, 0.748866, 0, 1.0};
Point(14) = {0.066830, 0.748243, 0, 1.0};
Point(15) = {0.056989, 0.747441, 0, 1.0};
Point(16) = {0.047102, 0.746454, 0, 1.0};
Point(17) = {0.037264, 0.745290, 0, 1.0};
Point(18) = {0.027564, 0.743948, 0, 1.0};
Point(19) = {0.018097, 0.742442, 0, 1.0};
Point(20) = {0.008948, 0.740786, 0, 1.0};
Point(21) = {0.000215, 0.739004, 0, 1.0};
Point(22) = {-0.008021, 0.737108, 0, 1.0};
Point(23) = {-0.015680, 0.735123, 0, 1.0};
Point(24) = {-0.022682, 0.733065, 0, 1.0};
Point(25) = {-0.028970, 0.730954, 0, 1.0};
Point(26) = {-0.034484, 0.728815, 0, 1.0};
Point(27) = {-0.039178, 0.726671, 0, 1.0};
Point(28) = {-0.043025, 0.724532, 0, 1.0};
Point(29) = {-0.046032, 0.722432, 0, 1.0};
Point(30) = {-0.048197, 0.720434, 0, 1.0};
Point(31) = {-0.049520, 0.718600, 0, 1.0};
Point(32) = {-0.050022, 0.717007, 0, 1.0};
Point(33) = {-0.050000, 0.716624, 0, 1.0};
Point(34) = {-0.049630, 0.715858, 0, 1.0};
Point(35) = {-0.048216, 0.715114, 0, 1.0};
Point(36) = {-0.045807, 0.714656, 0, 1.0};
Point(37) = {-0.042451, 0.714584, 0, 1.0};
Point(38) = {-0.038110, 0.714926, 0, 1.0};
Point(39) = {-0.032774, 0.715636, 0, 1.0};
Point(40) = {-0.026486, 0.716672, 0, 1.0};
Point(41) = {-0.019309, 0.717987, 0, 1.0};
Point(42) = {-0.011325, 0.719544, 0, 1.0};
Point(43) = {-0.002621, 0.721312, 0, 1.0};
Point(44) = {0.006702, 0.723256, 0, 1.0};
Point(45) = {0.016548, 0.725342, 0, 1.0};
Point(46) = {0.026802, 0.727532, 0, 1.0};
Point(47) = {0.037349, 0.729791, 0, 1.0};
Point(48) = {0.048075, 0.732077, 0, 1.0};
Point(49) = {0.058857, 0.734349, 0, 1.0};
Point(50) = {0.069561, 0.736559, 0, 1.0};
Point(51) = {0.080059, 0.738672, 0, 1.0};
Point(52) = {0.090210, 0.740656, 0, 1.0};
Point(53) = {0.099890, 0.742481, 0, 1.0};
Point(54) = {0.108972, 0.744121, 0, 1.0};
Point(55) = {0.117331, 0.745559, 0, 1.0};
Point(56) = {0.124855, 0.746780, 0, 1.0};
Point(57) = {0.131438, 0.747776, 0, 1.0};
Point(58) = {0.136981, 0.748547, 0, 1.0};
Point(59) = {0.141400, 0.749101, 0, 1.0};
Point(60) = {0.144622, 0.749457, 0, 1.0};
Point(61) = {0.146587, 0.749638, 0, 1.0};
Point(62) = {-0.147248, -0.749690, 0, 1.0};
Point(63) = {-0.146592, -0.749692, 0, 1.0};
Point(64) = {-0.144683, -0.749723, 0, 1.0};
Point(65) = {-0.141635, -0.749806, 0, 1.0};
Point(66) = {-0.137552, -0.749906, 0, 1.0};
Point(67) = {-0.132490, -0.749972, 0, 1.0};
Point(68) = {-0.126499, -0.750000, 0, 1.0};
Point(69) = {-0.119666, -0.749994, 0, 1.0};
Point(70) = {-0.112091, -0.749947, 0, 1.0};
Point(71) = {-0.103887, -0.749837, 0, 1.0};
Point(72) = {-0.095159, -0.749642, 0, 1.0};
Point(73) = {-0.086007, -0.749326, 0, 1.0};
Point(74) = {-0.076535, -0.748866, 0, 1.0};
Point(75) = {-0.066830, -0.748243, 0, 1.0};
Point(76) = {-0.056989, -0.747441, 0, 1.0};
Point(77) = {-0.047102, -0.746454, 0, 1.0};
Point(78) = {-0.037264, -0.745290, 0, 1.0};
Point(79) = {-0.027564, -0.743948, 0, 1.0};
Point(80) = {-0.018097, -0.742442, 0, 1.0};
Point(81) = {-0.008948, -0.740786, 0, 1.0};
Point(82) = {-0.000215, -0.739004, 0, 1.0};
Point(83) = {0.008021, -0.737108, 0, 1.0};
Point(84) = {0.015680, -0.735123, 0, 1.0};
Point(85) = {0.022682, -0.733065, 0, 1.0};
Point(86) = {0.028970, -0.730954, 0, 1.0};
Point(87) = {0.034484, -0.728815, 0, 1.0};
Point(88) = {0.039178, -0.726671, 0, 1.0};
Point(89) = {0.043025, -0.724532, 0, 1.0};
Point(90) = {0.046032, -0.722432, 0, 1.0};
Point(91) = {0.048197, -0.720434, 0, 1.0};
Point(92) = {0.049520, -0.718600, 0, 1.0};
Point(93) = {0.050022, -0.717007, 0, 1.0};
Point(94) = {0.050000, -0.716624, 0, 1.0};
Point(95) = {0.049630, -0.715858, 0, 1.0};
Point(96) = {0.048216, -0.715114, 0, 1.0};
Point(97) = {0.045807, -0.714656, 0, 1.0};
Point(98) = {0.042451, -0.714584, 0, 1.0};
Point(99) = {0.038110, -0.714926, 0, 1.0};
Point(100) = {0.032774, -0.715636, 0, 1.0};
Point(101) = {0.026486, -0.716672, 0, 1.0};
Point(102) = {0.019309, -0.717987, 0, 1.0};
Point(103) = {0.011325, -0.719544, 0, 1.0};
Point(104) = {0.002621, -0.721312, 0, 1.0};
Point(105) = {-0.006702, -0.723256, 0, 1.0};
Point(106) = {-0.016548, -0.725342, 0, 1.0};
Point(107) = {-0.026802, -0.727532, 0, 1.0};
Point(108) = {-0.037349, -0.729791, 0, 1.0};
Point(109) = {-0.048075, -0.732077, 0, 1.0};
Point(110) = {-0.058857, -0.734349, 0, 1.0};
Point(111) = {-0.069561, -0.736559, 0, 1.0};
Point(112) = {-0.080059, -0.738672, 0, 1.0};
Point(113) = {-0.090210, -0.740656, 0, 1.0};
Point(114) = {-0.099890, -0.742481, 0, 1.0};
Point(115) = {-0.108972, -0.744121, 0, 1.0};
Point(116) = {-0.117331, -0.745559, 0, 1.0};
Point(117) = {-0.124855, -0.746780, 0, 1.0};
Point(118) = {-0.131438, -0.747776, 0, 1.0};
Point(119) = {-0.136981, -0.748547, 0, 1.0};
Point(120) = {-0.141400, -0.749101, 0, 1.0};
Point(121) = {-0.144622, -0.749457, 0, 1.0};
Point(122) = {-0.146587, -0.749638, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073624, 0.749845, 0, 1.0};
Point(2) = {0.073296, 0.749846, 0, 1.0};
Point(3) = {0.072341, 0.749861, 0, 1.0};
Point(4) = {0.070818, 0.749903, 0, 1.0};
Point(5) = {0.068776, 0.749953, 0, 1.0};
Point(6) = {0.066245, 0.749986, 0, 1.0};
Point(7) = {0.063249, 0.750000, 0, 1.0};
Point(8) = {0.059833, 0.749997, 0, 1.0};
Point(9) = {0.056046, 0.749974, 0, 1.0};
Point(10) = {0.051943, 0.749919, 0, 1.0};
Point(11) = {0.047579, 0.749821, 0, 1.0};
Point(12) = {0.043003, 0.749663, 0, 1.0};
Point(13) = {0.038267, 0.749433, 0, 1.0};
Point(14) = {0.033415, 0.749121, 0, 1.0};
Point(15) = {0.028495, 0.748720, 0, 1.0};
Point(16) = {0.023551, 0.748227, 0, 1.0};
Point(17) = {0.018632, 0.747645, 0, 1.0};
Point(18) = {0.013782, 0.746974, 0, 1.0};
Point(19) = {0.009048, 0.746221, 0, 1.0};
Point(20) = {0.004474, 0.745393, 0, 1.0};
Point(21) = {0.000107, 0.744502, 0, 1.0};
Point(22) = {-0.004011, 0.743554, 0, 1.0};
Point(23) = {-0.007840, 0.742561, 0, 1.0};
Point(24) = {-0.011341, 0.741532, 0, 1.0};
Point(25) = {-0.014485, 0.740477, 0, 1.0};
Point(26) = {-0.017242, 0.739407, 0, 1.0};
Point(27) = {-0.019589, 0.738336, 0, 1.0};
Point(28) = {-0.021513, 0.737266, 0, 1.0};
Point(29) = {-0.023016, 0.736216, 0, 1.0};
Point(30) = {-0.024099, 0.735217, 0, 1.0};
Point(31) = {-0.024760, 0.734300, 0, 1.0};
Point(32) = {-0.025011, 0.733504, 0, 1.0};
Point(33) = {-0.025000, 0.733312, 0, 1.0};
Point(34) = {-0.024815, 0.732929, 0, 1.0};
Point(35) = {-0.024108, 0.732557, 0, 1.0};
Point(36) = {-0.022903, 0.732328, 0, 1.0};
Point(37) = {-0.021225, 0.732292, 0, 1.0};
Point(38) = {-0.019055, 0.732463, 0, 1.0};
Point(39) = {-0.016387, 0.732818, 0, 1.0};
Point(40) = {-0.013243, 0.733336, 0, 1.0};
Point(41) = {-0.009654, 0.733993, 0, 1.0};
Point(42) = {-0.005662, 0.734772, 0, 1.0};
Point(43) = {-0.001311, 0.735656, 0, 1.0};
Point(44) = {0.003351, 0.736628, 0, 1.0};
Point(45) = {0.008274, 0.737671, 0, 1.0};
Point(46) = {0.013401, 0.738766, 0, 1.0};
Point(47) = {0.018675, 0.739895, 0, 1.0};
Point(48) = {0.024037, 0.741039, 0, 1.0};
Point(49) = {0.029429, 0.742175, 0, 1.0};
Point(50) = {0.034781, 0.743280, 0, 1.0};
Point(51) = {0.040029, 0.744336, 0, 1.0};
Point(52) = {0.045105, 0.745328, 0, 1.0};
Point(53) = {0.049945, 0.746241, 0, 1.0};
Point(54) = {0.054486, 0.747061, 0, 1.0};
Point(55) = {0.058665, 0.747780, 0, 1.0};
Point(56) = {0.062427, 0.748390, 0, 1.0};
Point(57) = {0.065719, 0.748888, 0, 1.0};
Point(58) = {0.068491, 0.749274, 0, 1.0};
Point(59) = {0.070700, 0.749551, 0, 1.0};
Point(60) = {0.072311, 0.749728, 0, 1.0};
Point(61) = {0.073294, 0.749819, 0, 1.0};
Point(62) = {-0.073624, -0.749845, 0, 1.0};
Point(63) = {-0.073296, -0.749846, 0, 1.0};
Point(64) = {-0.072341, -0.749861, 0, 1.0};
Point(65) = {-0.070818, -0.749903, 0, 1.0};
Point(66) = {-0.068776, -0.749953, 0, 1.0};
Point(67) = {-0.066245, -0.749986, 0, 1.0};
Point(68) = {-0.063249, -0.750000, 0, 1.0};
Point(69) = {-0.059833, -0.749997, 0, 1.0};
Point(70) = {-0.056046, -0.749974, 0, 1.0};
Point(71) = {-0.051943, -0.749919, 0, 1.0};
Point(72) = {-0.047579, -0.749821, 0, 1.0};
Point(73) = {-0.043003, -0.749663, 0, 1.0};
Point(74) = {-0.038267, -0.749433, 0, 1.0};
Point(75) = {-0.033415, -0.749121, 0, 1.0};
Point(76) = {-0.028495, -0.748720, 0, 1.0};
Point(77) = {-0.023551, -0.748227, 0, 1.0};
Point(78) = {-0.018632, -0.747645, 0, 1.0};
Point(79) = {-0.013782, -0.746974, 0, 1.0};
Point(80) = {-0.009048, -0.746221, 0, 1.0};
Point(81) = {-0.004474, -0.745393, 0, 1.0};
Point(82) = {-0.000107, -0.744502, 0, 1.0};
Point(83) = {0.004011, -0.743554, 0, 1.0};
Point(84) = {0.007840, -0.742561, 0, 1.0};
Point(85) = {0.011341, -0.741532, 0, 1.0};
Point(86) = {0.014485, -0.740477, 0, 1.0};
Point(87) = {0.017242, -0.739407, 0, 1.0};
Point(88) = {0.019589, -0.738336, 0, 1.0};
Point(89) = {0.021513, -0.737266, 0, 1.0};
Point(90) = {0.023016, -0.736216, 0, 1.0};
Point(91) = {0.024099, -0.735217, 0, 1.0};
Point(92) = {0.024760, -0.734300, 0, 1.0};
Point(93) = {0.025011, -0.733504, 0, 1.0};
Point(94) = {0.025000, -0.733312, 0, 1.0};
Point(95) = {0.024815, -0.732929, 0, 1.0};
Point(96) = {0.024108, -0.732557, 0, 1.0};
Point(97) = {0.022903, -0.732328, 0, 1.0};
Point(98) = {0.021225, -0.732292, 0, 1.0};
Point(99) = {0.019055, -0.732463, 0, 1.0};
Point(100) = {0.016387, -0.732818, 0, 1.0};
Point(101) = {0.013243, -0.733336, 0, 1.0};
Point(102) = {0.009654, -0.733993, 0, 1.0};
Point(103) = {0.005662, -0.734772, 0, 1.0};
Point(104) = {0.001311, -0.735656, 0, 1.0};
Point(105) = {-0.003351, -0.736628, 0, 1.0};
Point(106) = {-0.008274, -0.737671, 0, 1.0};
Point(107) = {-0.013401, -0.738766, 0, 1.0};
Point(108) = {-0.018675, -0.739895, 0, 1.0};
Point(109) = {-0.024037, -0.741039, 0, 1.0};
Point(110) = {-0.029429, -0.742175, 0, 1.0};
Point(111) = {-0.034781, -0.743280, 0, 1.0};
Point(112) = {-0.040029, -0.744336, 0, 1.0};
Point(113) = {-0.045105, -0.745328, 0, 1.0};
Point(114) = {-0.049945, -0.746241, 0, 1.0};
Point(115) = {-0.054486, -0.747061, 0, 1.0};
Point(116) = {-0.058665, -0.747780, 0, 1.0};
Point(117) = {-0.062427, -0.748390, 0, 1.0};
Point(118) = {-0.065719, -0.748888, 0, 1.0};
Point(119) = {-0.068491, -0.749274, 0, 1.0};
Point(120) = {-0.070700, -0.749551, 0, 1.0};
Point(121) = {-0.072311, -0.749728, 0, 1.0};
Point(122) = {-0.073294, -0.749819, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.110436, 0.749768, 0, 1.0};
Point(2) = {0.109944, 0.749769, 0, 1.0};
Point(3) = {0.108512, 0.749792, 0, 1.0};
Point(4) = {0.106226, 0.749854, 0, 1.0};
Point(5) = {0.103164, 0.749930, 0, 1.0};
Point(6) = {0.099367, 0.749979, 0, 1.0};
Point(7) = {0.094874, 0.750000, 0, 1.0};
Point(8) = {0.089749, 0.749996, 0, 1.0};
Point(9) = {0.084068, 0.749960, 0, 1.0};
Point(10) = {0.077915, 0.749878, 0, 1.0};
Point(11) = {0.071369, 0.749731, 0, 1.0};
Point(12) = {0.064505, 0.749495, 0, 1.0};
Point(13) = {0.057401, 0.749149, 0, 1.0};
Point(14) = {0.050123, 0.748682, 0, 1.0};
Point(15) = {0.042742, 0.748080, 0, 1.0};
Point(16) = {0.035327, 0.747341, 0, 1.0};
Point(17) = {0.027948, 0.746467, 0, 1.0};
Point(18) = {0.020673, 0.745461, 0, 1.0};
Point(19) = {0.013572, 0.744331, 0, 1.0};
Point(20) = {0.006711, 0.743090, 0, 1.0};
Point(21) = {0.000161, 0.741753, 0, 1.0};
Point(22) = {-0.006016, 0.740331, 0, 1.0};
Point(23) = {-0.011760, 0.738842, 0, 1.0};
Point(24) = {-0.017012, 0.737298, 0, 1.0};
Point(25) = {-0.021727, 0.735715, 0, 1.0};
Point(26) = {-0.025863, 0.734111, 0, 1.0};
Point(27) = {-0.029384, 0.732503, 0, 1.0};
Point(28) = {-0.032269, 0.730899, 0, 1.0};
Point(29) = {-0.034524, 0.729324, 0, 1.0};
Point(30) = {-0.036148, 0.727826, 0, 1.0};
Point(31) = {-0.037140, 0.726450, 0, 1.0};
Point(32) = {-0.037516, 0.725256, 0, 1.0};
Point(33) = {-0.037500, 0.724968, 0, 1.0};
Point(34) = {-0.037223, 0.724394, 0, 1.0};
Point(35) = {-0.036162, 0.723835, 0, 1.0};
Point(36) = {-0.034355, 0.723492, 0, 1.0};
Point(37) = {-0.031838, 0.723438, 0, 1.0};
Point(38) = {-0.028582, 0.723695, 0, 1.0};
Point(39) = {-0.024580, 0.724227, 0, 1.0};
Point(40) = {-0.019865, 0.725004, 0, 1.0};
Point(41) = {-0.014482, 0.725990, 0, 1.0};
Point(42) = {-0.008493, 0.727158, 0, 1.0};
Point(43) = {-0.001966, 0.728484, 0, 1.0};
Point(44) = {0.005026, 0.729942, 0, 1.0};
Point(45) = {0.012411, 0.731507, 0, 1.0};
Point(46) = {0.020101, 0.733149, 0, 1.0};
Point(47) = {0.028012, 0.734843, 0, 1.0};
Point(48) = {0.036056, 0.736558, 0, 1.0};
Point(49) = {0.044143, 0.738262, 0, 1.0};
Point(50) = {0.052171, 0.739920, 0, 1.0};
Point(51) = {0.060044, 0.741504, 0, 1.0};
Point(52) = {0.067658, 0.742992, 0, 1.0};
Point(53) = {0.074917, 0.744361, 0, 1.0};
Point(54) = {0.081729, 0.745591, 0, 1.0};
Point(55) = {0.087998, 0.746669, 0, 1.0};
Point(56) = {0.093641, 0.747585, 0, 1.0};
Point(57) = {0.098579, 0.748332, 0, 1.0};
Point(58) = {0.102736, 0.748910, 0, 1.0};
Point(59) = {0.106050, 0.749326, 0, 1.0};
Point(60) = {0.108467, 0.749593, 0, 1.0};
Point(61) = {0.109940, 0.749729, 0, 1.0};
Point(62) = {-0.110436, -0.749768, 0, 1.0};
Point(63) = {-0.109944, -0.749769, 0, 1.0};
Point(64) = {-0.108512, -0.749792, 0, 1.0};
Point(65) = {-0.106226, -0.749854, 0, 1.0};
Point(66) = {-0.103164, -0.749930, 0, 1.0};
Point(67) = {-0.099367, -0.749979, 0, 1.0};
Point(68) = {-0.094874, -0.750000, 0, 1.0};
Point(69) = {-0.089749, -0.749996, 0, 1.0};
Point(70) = {-0.084068, -0.749960, 0, 1.0};
Point(71) = {-0.077915, -0.749878, 0, 1.0};
Point(72) = {-0.071369, -0.749731, 0, 1.0};
Point(73) = {-0.064505, -0.749495, 0, 1.0};
Point(74) = {-0.057401, -0.749149, 0, 1.0};
Point(75) = {-0.050123, -0.748682, 0, 1.0};
Point(76) = {-0.042742, -0.748080, 0, 1.0};
Point(77) = {-0.035327, -0.747341, 0, 1.0};
Point(78) = {-0.027948, -0.746467, 0, 1.0};
Point(79) = {-0.020673, -0.745461, 0, 1.0};
Point(80) = {-0.013572, -0.744331, 0, 1.0};
Point(81) = {-0.006711, -0.743090, 0, 1.0};
Point(82) = {-0.000161, -0.741753, 0, 1.0};
Point(83) = {0.006016, -0.740331, 0, 1.0};
Point(84) = {0.011760, -0.738842, 0, 1.0};
Point(85) = {0.017012, -0.737298, 0, 1.0};
Point(86) = {0.021727, -0.735715, 0, 1.0};
Point(87) = {0.025863, -0.734111, 0, 1.0};
Point(88) = {0.029384, -0.732503, 0, 1.0};
Point(89) = {0.032269, -0.730899, 0, 1.0};
Point(90) = {0.034524, -0.729324, 0, 1.0};
Point(91) = {0.036148, -0.727826, 0, 1.0};
Point(92) = {0.037140, -0.726450, 0, 1.0};
Point(93) = {0.037516, -0.725256, 0, 1.0};
Point(94) = {0.037500, -0.724968, 0, 1.0};
Point(95) = {0.037223, -0.724394, 0, 1.0};
Point(96) = {0.036162, -0.723835, 0, 1.0};
Point(97) = {0.034355, -0.723492, 0, 1.0};
Point(98) = {0.031838, -0.723438, 0, 1.0};
Point(99) = {0.028582, -0.723695, 0, 1.0};
Point(100) = {0.024580, -0.724227, 0, 1.0};
Point(101) = {0.019865, -0.725004, 0, 1.0};
Point(102) = {0.014482, -0.725990, 0, 1.0};
Point(103) = {0.008493, -0.727158, 0, 1.0};
Point(104) = {0.001966, -0.728484, 0, 1.0};
Point(105) = {-0.005026, -0.729942, 0, 1.0};
Point(106) = {-0.012411, -0.731507, 0, 1.0};
Point(107) = {-0.020101, -0.733149, 0, 1.0};
Point(108) = {-0.028012, -0.734843, 0, 1.0};
Point(109) = {-0.036056, -0.736558, 0, 1.0};
Point(110) = {-0.044143, -0.738262, 0, 1.0};
Point(111) = {-0.052171, -0.739920, 0, 1.0};
Point(112) = {-0.060044, -0.741504, 0, 1.0};
Point(113) = {-0.067658, -0.742992, 0, 1.0};
Point(114) = {-0.074917, -0.744361, 0, 1.0};
Point(115) = {-0.081729, -0.745591, 0, 1.0};
Point(116) = {-0.087998, -0.746669, 0, 1.0};
Point(117) = {-0.093641, -0.747585, 0, 1.0};
Point(118) = {-0.098579, -0.748332, 0, 1.0};
Point(119) = {-0.102736, -0.748910, 0, 1.0};
Point(120) = {-0.106050, -0.749326, 0, 1.0};
Point(121) = {-0.108467, -0.749593, 0, 1.0};
Point(122) = {-0.109940, -0.749729, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
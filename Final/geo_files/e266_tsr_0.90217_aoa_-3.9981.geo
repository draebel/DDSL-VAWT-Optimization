SetFactory("OpenCASCADE");

Point(1) = {0.149513, 0.734317, 0, 1.0};
Point(2) = {0.148739, 0.734413, 0, 1.0};
Point(3) = {0.146520, 0.734773, 0, 1.0};
Point(4) = {0.143083, 0.735449, 0, 1.0};
Point(5) = {0.138612, 0.736339, 0, 1.0};
Point(6) = {0.133167, 0.737312, 0, 1.0};
Point(7) = {0.126736, 0.738336, 0, 1.0};
Point(8) = {0.119381, 0.739468, 0, 1.0};
Point(9) = {0.111239, 0.740734, 0, 1.0};
Point(10) = {0.102464, 0.742123, 0, 1.0};
Point(11) = {0.093220, 0.743614, 0, 1.0};
Point(12) = {0.083671, 0.745160, 0, 1.0};
Point(13) = {0.073997, 0.746693, 0, 1.0};
Point(14) = {0.064366, 0.748121, 0, 1.0};
Point(15) = {0.054950, 0.749278, 0, 1.0};
Point(16) = {0.045774, 0.749930, 0, 1.0};
Point(17) = {0.036713, 0.750000, 0, 1.0};
Point(18) = {0.027731, 0.749575, 0, 1.0};
Point(19) = {0.018881, 0.748722, 0, 1.0};
Point(20) = {0.010233, 0.747508, 0, 1.0};
Point(21) = {0.001882, 0.745986, 0, 1.0};
Point(22) = {-0.006082, 0.744192, 0, 1.0};
Point(23) = {-0.013579, 0.742166, 0, 1.0};
Point(24) = {-0.020533, 0.739942, 0, 1.0};
Point(25) = {-0.026877, 0.737566, 0, 1.0};
Point(26) = {-0.032545, 0.735079, 0, 1.0};
Point(27) = {-0.037487, 0.732524, 0, 1.0};
Point(28) = {-0.041656, 0.729955, 0, 1.0};
Point(29) = {-0.045016, 0.727425, 0, 1.0};
Point(30) = {-0.047539, 0.724999, 0, 1.0};
Point(31) = {-0.049205, 0.722761, 0, 1.0};
Point(32) = {-0.049984, 0.720834, 0, 1.0};
Point(33) = {-0.049637, 0.719393, 0, 1.0};
Point(34) = {-0.047994, 0.718265, 0, 1.0};
Point(35) = {-0.045165, 0.717221, 0, 1.0};
Point(36) = {-0.041255, 0.716308, 0, 1.0};
Point(37) = {-0.036332, 0.715539, 0, 1.0};
Point(38) = {-0.030453, 0.714926, 0, 1.0};
Point(39) = {-0.023690, 0.714464, 0, 1.0};
Point(40) = {-0.016128, 0.714159, 0, 1.0};
Point(41) = {-0.007866, 0.714010, 0, 1.0};
Point(42) = {0.001003, 0.714021, 0, 1.0};
Point(43) = {0.010372, 0.714190, 0, 1.0};
Point(44) = {0.020130, 0.714523, 0, 1.0};
Point(45) = {0.030162, 0.715020, 0, 1.0};
Point(46) = {0.040353, 0.715680, 0, 1.0};
Point(47) = {0.050578, 0.716507, 0, 1.0};
Point(48) = {0.060721, 0.717507, 0, 1.0};
Point(49) = {0.070657, 0.718688, 0, 1.0};
Point(50) = {0.080258, 0.720097, 0, 1.0};
Point(51) = {0.089488, 0.721821, 0, 1.0};
Point(52) = {0.098396, 0.723859, 0, 1.0};
Point(53) = {0.107018, 0.726112, 0, 1.0};
Point(54) = {0.115373, 0.728400, 0, 1.0};
Point(55) = {0.123342, 0.730462, 0, 1.0};
Point(56) = {0.130682, 0.732122, 0, 1.0};
Point(57) = {0.137138, 0.733299, 0, 1.0};
Point(58) = {0.142466, 0.733662, 0, 1.0};
Point(59) = {0.146375, 0.733925, 0, 1.0};
Point(60) = {0.148732, 0.734200, 0, 1.0};
Point(61) = {-0.149513, -0.734317, 0, 1.0};
Point(62) = {-0.148739, -0.734413, 0, 1.0};
Point(63) = {-0.146520, -0.734773, 0, 1.0};
Point(64) = {-0.143083, -0.735449, 0, 1.0};
Point(65) = {-0.138612, -0.736339, 0, 1.0};
Point(66) = {-0.133167, -0.737312, 0, 1.0};
Point(67) = {-0.126736, -0.738336, 0, 1.0};
Point(68) = {-0.119381, -0.739468, 0, 1.0};
Point(69) = {-0.111239, -0.740734, 0, 1.0};
Point(70) = {-0.102464, -0.742123, 0, 1.0};
Point(71) = {-0.093220, -0.743614, 0, 1.0};
Point(72) = {-0.083671, -0.745160, 0, 1.0};
Point(73) = {-0.073997, -0.746693, 0, 1.0};
Point(74) = {-0.064366, -0.748121, 0, 1.0};
Point(75) = {-0.054950, -0.749278, 0, 1.0};
Point(76) = {-0.045774, -0.749930, 0, 1.0};
Point(77) = {-0.036713, -0.750000, 0, 1.0};
Point(78) = {-0.027731, -0.749575, 0, 1.0};
Point(79) = {-0.018881, -0.748722, 0, 1.0};
Point(80) = {-0.010233, -0.747508, 0, 1.0};
Point(81) = {-0.001882, -0.745986, 0, 1.0};
Point(82) = {0.006082, -0.744192, 0, 1.0};
Point(83) = {0.013579, -0.742166, 0, 1.0};
Point(84) = {0.020533, -0.739942, 0, 1.0};
Point(85) = {0.026877, -0.737566, 0, 1.0};
Point(86) = {0.032545, -0.735079, 0, 1.0};
Point(87) = {0.037487, -0.732524, 0, 1.0};
Point(88) = {0.041656, -0.729955, 0, 1.0};
Point(89) = {0.045016, -0.727425, 0, 1.0};
Point(90) = {0.047539, -0.724999, 0, 1.0};
Point(91) = {0.049205, -0.722761, 0, 1.0};
Point(92) = {0.049984, -0.720834, 0, 1.0};
Point(93) = {0.049637, -0.719393, 0, 1.0};
Point(94) = {0.047994, -0.718265, 0, 1.0};
Point(95) = {0.045165, -0.717221, 0, 1.0};
Point(96) = {0.041255, -0.716308, 0, 1.0};
Point(97) = {0.036332, -0.715539, 0, 1.0};
Point(98) = {0.030453, -0.714926, 0, 1.0};
Point(99) = {0.023690, -0.714464, 0, 1.0};
Point(100) = {0.016128, -0.714159, 0, 1.0};
Point(101) = {0.007866, -0.714010, 0, 1.0};
Point(102) = {-0.001003, -0.714021, 0, 1.0};
Point(103) = {-0.010372, -0.714190, 0, 1.0};
Point(104) = {-0.020130, -0.714523, 0, 1.0};
Point(105) = {-0.030162, -0.715020, 0, 1.0};
Point(106) = {-0.040353, -0.715680, 0, 1.0};
Point(107) = {-0.050578, -0.716507, 0, 1.0};
Point(108) = {-0.060721, -0.717507, 0, 1.0};
Point(109) = {-0.070657, -0.718688, 0, 1.0};
Point(110) = {-0.080258, -0.720097, 0, 1.0};
Point(111) = {-0.089488, -0.721821, 0, 1.0};
Point(112) = {-0.098396, -0.723859, 0, 1.0};
Point(113) = {-0.107018, -0.726112, 0, 1.0};
Point(114) = {-0.115373, -0.728400, 0, 1.0};
Point(115) = {-0.123342, -0.730462, 0, 1.0};
Point(116) = {-0.130682, -0.732122, 0, 1.0};
Point(117) = {-0.137138, -0.733299, 0, 1.0};
Point(118) = {-0.142466, -0.733662, 0, 1.0};
Point(119) = {-0.146375, -0.733925, 0, 1.0};
Point(120) = {-0.148732, -0.734200, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
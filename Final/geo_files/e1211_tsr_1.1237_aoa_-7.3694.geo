SetFactory("OpenCASCADE");

Point(1) = {0.074174, 0.745650, 0, 1.0};
Point(2) = {0.073795, 0.745689, 0, 1.0};
Point(3) = {0.072723, 0.745839, 0, 1.0};
Point(4) = {0.071078, 0.746090, 0, 1.0};
Point(5) = {0.068912, 0.746363, 0, 1.0};
Point(6) = {0.066208, 0.746621, 0, 1.0};
Point(7) = {0.062975, 0.746890, 0, 1.0};
Point(8) = {0.059268, 0.747191, 0, 1.0};
Point(9) = {0.055147, 0.747525, 0, 1.0};
Point(10) = {0.050679, 0.747892, 0, 1.0};
Point(11) = {0.045936, 0.748280, 0, 1.0};
Point(12) = {0.040989, 0.748676, 0, 1.0};
Point(13) = {0.035910, 0.749061, 0, 1.0};
Point(14) = {0.030767, 0.749410, 0, 1.0};
Point(15) = {0.025627, 0.749701, 0, 1.0};
Point(16) = {0.020549, 0.749905, 0, 1.0};
Point(17) = {0.015589, 0.750000, 0, 1.0};
Point(18) = {0.010793, 0.749961, 0, 1.0};
Point(19) = {0.006208, 0.749768, 0, 1.0};
Point(20) = {0.001868, 0.749408, 0, 1.0};
Point(21) = {-0.002193, 0.748867, 0, 1.0};
Point(22) = {-0.005945, 0.748138, 0, 1.0};
Point(23) = {-0.009375, 0.747212, 0, 1.0};
Point(24) = {-0.012474, 0.746098, 0, 1.0};
Point(25) = {-0.015231, 0.744804, 0, 1.0};
Point(26) = {-0.017658, 0.743347, 0, 1.0};
Point(27) = {-0.019762, 0.741777, 0, 1.0};
Point(28) = {-0.021528, 0.740143, 0, 1.0};
Point(29) = {-0.022942, 0.738484, 0, 1.0};
Point(30) = {-0.023994, 0.736841, 0, 1.0};
Point(31) = {-0.024678, 0.735258, 0, 1.0};
Point(32) = {-0.025000, 0.732823, 0, 1.0};
Point(33) = {-0.024385, 0.731454, 0, 1.0};
Point(34) = {-0.023285, 0.730589, 0, 1.0};
Point(35) = {-0.021729, 0.729839, 0, 1.0};
Point(36) = {-0.019767, 0.729251, 0, 1.0};
Point(37) = {-0.017426, 0.728871, 0, 1.0};
Point(38) = {-0.014717, 0.728737, 0, 1.0};
Point(39) = {-0.011644, 0.728888, 0, 1.0};
Point(40) = {-0.008185, 0.729353, 0, 1.0};
Point(41) = {-0.004289, 0.730115, 0, 1.0};
Point(42) = {0.000048, 0.731092, 0, 1.0};
Point(43) = {0.004771, 0.732210, 0, 1.0};
Point(44) = {0.009814, 0.733429, 0, 1.0};
Point(45) = {0.015111, 0.734707, 0, 1.0};
Point(46) = {0.020587, 0.736008, 0, 1.0};
Point(47) = {0.026167, 0.737302, 0, 1.0};
Point(48) = {0.031776, 0.738562, 0, 1.0};
Point(49) = {0.037332, 0.739761, 0, 1.0};
Point(50) = {0.042757, 0.740878, 0, 1.0};
Point(51) = {0.047973, 0.741896, 0, 1.0};
Point(52) = {0.052905, 0.742798, 0, 1.0};
Point(53) = {0.057476, 0.743577, 0, 1.0};
Point(54) = {0.061619, 0.744226, 0, 1.0};
Point(55) = {0.065265, 0.744742, 0, 1.0};
Point(56) = {0.068354, 0.745129, 0, 1.0};
Point(57) = {0.070834, 0.745401, 0, 1.0};
Point(58) = {0.072661, 0.745564, 0, 1.0};
Point(59) = {0.073791, 0.745634, 0, 1.0};
Point(60) = {-0.074174, -0.745650, 0, 1.0};
Point(61) = {-0.073795, -0.745689, 0, 1.0};
Point(62) = {-0.072723, -0.745839, 0, 1.0};
Point(63) = {-0.071078, -0.746090, 0, 1.0};
Point(64) = {-0.068912, -0.746363, 0, 1.0};
Point(65) = {-0.066208, -0.746621, 0, 1.0};
Point(66) = {-0.062975, -0.746890, 0, 1.0};
Point(67) = {-0.059268, -0.747191, 0, 1.0};
Point(68) = {-0.055147, -0.747525, 0, 1.0};
Point(69) = {-0.050679, -0.747892, 0, 1.0};
Point(70) = {-0.045936, -0.748280, 0, 1.0};
Point(71) = {-0.040989, -0.748676, 0, 1.0};
Point(72) = {-0.035910, -0.749061, 0, 1.0};
Point(73) = {-0.030767, -0.749410, 0, 1.0};
Point(74) = {-0.025627, -0.749701, 0, 1.0};
Point(75) = {-0.020549, -0.749905, 0, 1.0};
Point(76) = {-0.015589, -0.750000, 0, 1.0};
Point(77) = {-0.010793, -0.749961, 0, 1.0};
Point(78) = {-0.006208, -0.749768, 0, 1.0};
Point(79) = {-0.001868, -0.749408, 0, 1.0};
Point(80) = {0.002193, -0.748867, 0, 1.0};
Point(81) = {0.005945, -0.748138, 0, 1.0};
Point(82) = {0.009375, -0.747212, 0, 1.0};
Point(83) = {0.012474, -0.746098, 0, 1.0};
Point(84) = {0.015231, -0.744804, 0, 1.0};
Point(85) = {0.017658, -0.743347, 0, 1.0};
Point(86) = {0.019762, -0.741777, 0, 1.0};
Point(87) = {0.021528, -0.740143, 0, 1.0};
Point(88) = {0.022942, -0.738484, 0, 1.0};
Point(89) = {0.023994, -0.736841, 0, 1.0};
Point(90) = {0.024678, -0.735258, 0, 1.0};
Point(91) = {0.025000, -0.732823, 0, 1.0};
Point(92) = {0.024385, -0.731454, 0, 1.0};
Point(93) = {0.023285, -0.730589, 0, 1.0};
Point(94) = {0.021729, -0.729839, 0, 1.0};
Point(95) = {0.019767, -0.729251, 0, 1.0};
Point(96) = {0.017426, -0.728871, 0, 1.0};
Point(97) = {0.014717, -0.728737, 0, 1.0};
Point(98) = {0.011644, -0.728888, 0, 1.0};
Point(99) = {0.008185, -0.729353, 0, 1.0};
Point(100) = {0.004289, -0.730115, 0, 1.0};
Point(101) = {-0.000048, -0.731092, 0, 1.0};
Point(102) = {-0.004771, -0.732210, 0, 1.0};
Point(103) = {-0.009814, -0.733429, 0, 1.0};
Point(104) = {-0.015111, -0.734707, 0, 1.0};
Point(105) = {-0.020587, -0.736008, 0, 1.0};
Point(106) = {-0.026167, -0.737302, 0, 1.0};
Point(107) = {-0.031776, -0.738562, 0, 1.0};
Point(108) = {-0.037332, -0.739761, 0, 1.0};
Point(109) = {-0.042757, -0.740878, 0, 1.0};
Point(110) = {-0.047973, -0.741896, 0, 1.0};
Point(111) = {-0.052905, -0.742798, 0, 1.0};
Point(112) = {-0.057476, -0.743577, 0, 1.0};
Point(113) = {-0.061619, -0.744226, 0, 1.0};
Point(114) = {-0.065265, -0.744742, 0, 1.0};
Point(115) = {-0.068354, -0.745129, 0, 1.0};
Point(116) = {-0.070834, -0.745401, 0, 1.0};
Point(117) = {-0.072661, -0.745564, 0, 1.0};
Point(118) = {-0.073791, -0.745634, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:80};
Spline(6) = {80:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074380, 0.743474, 0, 1.0};
Point(2) = {0.073812, 0.743534, 0, 1.0};
Point(3) = {0.072204, 0.743759, 0, 1.0};
Point(4) = {0.069737, 0.744135, 0, 1.0};
Point(5) = {0.066488, 0.744544, 0, 1.0};
Point(6) = {0.062431, 0.744931, 0, 1.0};
Point(7) = {0.057582, 0.745335, 0, 1.0};
Point(8) = {0.052021, 0.745787, 0, 1.0};
Point(9) = {0.045840, 0.746288, 0, 1.0};
Point(10) = {0.039138, 0.746837, 0, 1.0};
Point(11) = {0.032024, 0.747419, 0, 1.0};
Point(12) = {0.024603, 0.748013, 0, 1.0};
Point(13) = {0.016984, 0.748591, 0, 1.0};
Point(14) = {0.009271, 0.749115, 0, 1.0};
Point(15) = {0.001560, 0.749551, 0, 1.0};
Point(16) = {-0.006057, 0.749858, 0, 1.0};
Point(17) = {-0.013497, 0.750000, 0, 1.0};
Point(18) = {-0.020691, 0.749941, 0, 1.0};
Point(19) = {-0.027568, 0.749652, 0, 1.0};
Point(20) = {-0.034078, 0.749112, 0, 1.0};
Point(21) = {-0.040170, 0.748301, 0, 1.0};
Point(22) = {-0.045799, 0.747207, 0, 1.0};
Point(23) = {-0.050944, 0.745819, 0, 1.0};
Point(24) = {-0.055592, 0.744146, 0, 1.0};
Point(25) = {-0.059727, 0.742206, 0, 1.0};
Point(26) = {-0.063367, 0.740021, 0, 1.0};
Point(27) = {-0.066524, 0.737665, 0, 1.0};
Point(28) = {-0.069172, 0.735215, 0, 1.0};
Point(29) = {-0.071293, 0.732726, 0, 1.0};
Point(30) = {-0.072872, 0.730262, 0, 1.0};
Point(31) = {-0.073898, 0.727887, 0, 1.0};
Point(32) = {-0.074380, 0.724235, 0, 1.0};
Point(33) = {-0.073458, 0.722181, 0, 1.0};
Point(34) = {-0.071808, 0.720883, 0, 1.0};
Point(35) = {-0.069474, 0.719758, 0, 1.0};
Point(36) = {-0.066531, 0.718877, 0, 1.0};
Point(37) = {-0.063019, 0.718306, 0, 1.0};
Point(38) = {-0.058957, 0.718106, 0, 1.0};
Point(39) = {-0.054347, 0.718332, 0, 1.0};
Point(40) = {-0.049159, 0.719030, 0, 1.0};
Point(41) = {-0.043314, 0.720173, 0, 1.0};
Point(42) = {-0.036809, 0.721638, 0, 1.0};
Point(43) = {-0.029724, 0.723316, 0, 1.0};
Point(44) = {-0.022159, 0.725144, 0, 1.0};
Point(45) = {-0.014215, 0.727060, 0, 1.0};
Point(46) = {-0.006000, 0.729013, 0, 1.0};
Point(47) = {0.002371, 0.730954, 0, 1.0};
Point(48) = {0.010783, 0.732843, 0, 1.0};
Point(49) = {0.019117, 0.734641, 0, 1.0};
Point(50) = {0.027255, 0.736316, 0, 1.0};
Point(51) = {0.035080, 0.737844, 0, 1.0};
Point(52) = {0.042476, 0.739198, 0, 1.0};
Point(53) = {0.049334, 0.740366, 0, 1.0};
Point(54) = {0.055548, 0.741338, 0, 1.0};
Point(55) = {0.061017, 0.742113, 0, 1.0};
Point(56) = {0.065650, 0.742694, 0, 1.0};
Point(57) = {0.069371, 0.743102, 0, 1.0};
Point(58) = {0.072112, 0.743346, 0, 1.0};
Point(59) = {0.073806, 0.743452, 0, 1.0};
Point(60) = {-0.074380, -0.743474, 0, 1.0};
Point(61) = {-0.073812, -0.743534, 0, 1.0};
Point(62) = {-0.072204, -0.743759, 0, 1.0};
Point(63) = {-0.069737, -0.744135, 0, 1.0};
Point(64) = {-0.066488, -0.744544, 0, 1.0};
Point(65) = {-0.062431, -0.744931, 0, 1.0};
Point(66) = {-0.057582, -0.745335, 0, 1.0};
Point(67) = {-0.052021, -0.745787, 0, 1.0};
Point(68) = {-0.045840, -0.746288, 0, 1.0};
Point(69) = {-0.039138, -0.746837, 0, 1.0};
Point(70) = {-0.032024, -0.747419, 0, 1.0};
Point(71) = {-0.024603, -0.748013, 0, 1.0};
Point(72) = {-0.016984, -0.748591, 0, 1.0};
Point(73) = {-0.009271, -0.749115, 0, 1.0};
Point(74) = {-0.001560, -0.749551, 0, 1.0};
Point(75) = {0.006057, -0.749858, 0, 1.0};
Point(76) = {0.013497, -0.750000, 0, 1.0};
Point(77) = {0.020691, -0.749941, 0, 1.0};
Point(78) = {0.027568, -0.749652, 0, 1.0};
Point(79) = {0.034078, -0.749112, 0, 1.0};
Point(80) = {0.040170, -0.748301, 0, 1.0};
Point(81) = {0.045799, -0.747207, 0, 1.0};
Point(82) = {0.050944, -0.745819, 0, 1.0};
Point(83) = {0.055592, -0.744146, 0, 1.0};
Point(84) = {0.059727, -0.742206, 0, 1.0};
Point(85) = {0.063367, -0.740021, 0, 1.0};
Point(86) = {0.066524, -0.737665, 0, 1.0};
Point(87) = {0.069172, -0.735215, 0, 1.0};
Point(88) = {0.071293, -0.732726, 0, 1.0};
Point(89) = {0.072872, -0.730262, 0, 1.0};
Point(90) = {0.073898, -0.727887, 0, 1.0};
Point(91) = {0.074380, -0.724235, 0, 1.0};
Point(92) = {0.073458, -0.722181, 0, 1.0};
Point(93) = {0.071808, -0.720883, 0, 1.0};
Point(94) = {0.069474, -0.719758, 0, 1.0};
Point(95) = {0.066531, -0.718877, 0, 1.0};
Point(96) = {0.063019, -0.718306, 0, 1.0};
Point(97) = {0.058957, -0.718106, 0, 1.0};
Point(98) = {0.054347, -0.718332, 0, 1.0};
Point(99) = {0.049159, -0.719030, 0, 1.0};
Point(100) = {0.043314, -0.720173, 0, 1.0};
Point(101) = {0.036809, -0.721638, 0, 1.0};
Point(102) = {0.029724, -0.723316, 0, 1.0};
Point(103) = {0.022159, -0.725144, 0, 1.0};
Point(104) = {0.014215, -0.727060, 0, 1.0};
Point(105) = {0.006000, -0.729013, 0, 1.0};
Point(106) = {-0.002371, -0.730954, 0, 1.0};
Point(107) = {-0.010783, -0.732843, 0, 1.0};
Point(108) = {-0.019117, -0.734641, 0, 1.0};
Point(109) = {-0.027255, -0.736316, 0, 1.0};
Point(110) = {-0.035080, -0.737844, 0, 1.0};
Point(111) = {-0.042476, -0.739198, 0, 1.0};
Point(112) = {-0.049334, -0.740366, 0, 1.0};
Point(113) = {-0.055548, -0.741338, 0, 1.0};
Point(114) = {-0.061017, -0.742113, 0, 1.0};
Point(115) = {-0.065650, -0.742694, 0, 1.0};
Point(116) = {-0.069371, -0.743102, 0, 1.0};
Point(117) = {-0.072112, -0.743346, 0, 1.0};
Point(118) = {-0.073806, -0.743452, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:80};
Spline(6) = {80:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
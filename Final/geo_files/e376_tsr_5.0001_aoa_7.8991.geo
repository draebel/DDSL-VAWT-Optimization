SetFactory("OpenCASCADE");

Point(1) = {0.074295, 0.721157, 0, 1.0};
Point(2) = {0.073874, 0.721270, 0, 1.0};
Point(3) = {0.072615, 0.721610, 0, 1.0};
Point(4) = {0.070532, 0.722184, 0, 1.0};
Point(5) = {0.067660, 0.723008, 0, 1.0};
Point(6) = {0.064059, 0.724078, 0, 1.0};
Point(7) = {0.059785, 0.725378, 0, 1.0};
Point(8) = {0.054900, 0.726886, 0, 1.0};
Point(9) = {0.049474, 0.728579, 0, 1.0};
Point(10) = {0.043575, 0.730429, 0, 1.0};
Point(11) = {0.037281, 0.732405, 0, 1.0};
Point(12) = {0.030675, 0.734472, 0, 1.0};
Point(13) = {0.023835, 0.736587, 0, 1.0};
Point(14) = {0.016851, 0.738713, 0, 1.0};
Point(15) = {0.009807, 0.740807, 0, 1.0};
Point(16) = {0.002785, 0.742809, 0, 1.0};
Point(17) = {-0.004130, 0.744661, 0, 1.0};
Point(18) = {-0.010889, 0.746283, 0, 1.0};
Point(19) = {-0.017473, 0.747630, 0, 1.0};
Point(20) = {-0.023855, 0.748677, 0, 1.0};
Point(21) = {-0.030009, 0.749419, 0, 1.0};
Point(22) = {-0.035913, 0.749852, 0, 1.0};
Point(23) = {-0.041542, 0.750000, 0, 1.0};
Point(24) = {-0.046863, 0.749899, 0, 1.0};
Point(25) = {-0.051818, 0.749584, 0, 1.0};
Point(26) = {-0.056358, 0.749072, 0, 1.0};
Point(27) = {-0.060444, 0.748393, 0, 1.0};
Point(28) = {-0.064037, 0.747569, 0, 1.0};
Point(29) = {-0.067114, 0.746630, 0, 1.0};
Point(30) = {-0.069650, 0.745612, 0, 1.0};
Point(31) = {-0.071637, 0.744552, 0, 1.0};
Point(32) = {-0.073065, 0.743503, 0, 1.0};
Point(33) = {-0.073946, 0.742525, 0, 1.0};
Point(34) = {-0.074288, 0.741724, 0, 1.0};
Point(35) = {-0.074035, 0.741292, 0, 1.0};
Point(36) = {-0.073059, 0.741285, 0, 1.0};
Point(37) = {-0.071230, 0.741743, 0, 1.0};
Point(38) = {-0.068383, 0.742690, 0, 1.0};
Point(39) = {-0.064355, 0.744074, 0, 1.0};
Point(40) = {-0.058975, 0.745743, 0, 1.0};
Point(41) = {-0.052098, 0.747465, 0, 1.0};
Point(42) = {-0.043628, 0.748763, 0, 1.0};
Point(43) = {-0.033967, 0.748955, 0, 1.0};
Point(44) = {-0.024033, 0.747960, 0, 1.0};
Point(45) = {-0.014291, 0.746248, 0, 1.0};
Point(46) = {-0.004816, 0.744150, 0, 1.0};
Point(47) = {0.004335, 0.741817, 0, 1.0};
Point(48) = {0.013107, 0.739389, 0, 1.0};
Point(49) = {0.021458, 0.736948, 0, 1.0};
Point(50) = {0.029351, 0.734570, 0, 1.0};
Point(51) = {0.036738, 0.732289, 0, 1.0};
Point(52) = {0.043567, 0.730155, 0, 1.0};
Point(53) = {0.049791, 0.728198, 0, 1.0};
Point(54) = {0.055367, 0.726453, 0, 1.0};
Point(55) = {0.060261, 0.724941, 0, 1.0};
Point(56) = {0.064445, 0.723685, 0, 1.0};
Point(57) = {0.067894, 0.722701, 0, 1.0};
Point(58) = {0.070620, 0.721999, 0, 1.0};
Point(59) = {0.072627, 0.721533, 0, 1.0};
Point(60) = {0.073872, 0.721255, 0, 1.0};
Point(61) = {-0.074295, -0.721157, 0, 1.0};
Point(62) = {-0.073874, -0.721270, 0, 1.0};
Point(63) = {-0.072615, -0.721610, 0, 1.0};
Point(64) = {-0.070532, -0.722184, 0, 1.0};
Point(65) = {-0.067660, -0.723008, 0, 1.0};
Point(66) = {-0.064059, -0.724078, 0, 1.0};
Point(67) = {-0.059785, -0.725378, 0, 1.0};
Point(68) = {-0.054900, -0.726886, 0, 1.0};
Point(69) = {-0.049474, -0.728579, 0, 1.0};
Point(70) = {-0.043575, -0.730429, 0, 1.0};
Point(71) = {-0.037281, -0.732405, 0, 1.0};
Point(72) = {-0.030675, -0.734472, 0, 1.0};
Point(73) = {-0.023835, -0.736587, 0, 1.0};
Point(74) = {-0.016851, -0.738713, 0, 1.0};
Point(75) = {-0.009807, -0.740807, 0, 1.0};
Point(76) = {-0.002785, -0.742809, 0, 1.0};
Point(77) = {0.004130, -0.744661, 0, 1.0};
Point(78) = {0.010889, -0.746283, 0, 1.0};
Point(79) = {0.017473, -0.747630, 0, 1.0};
Point(80) = {0.023855, -0.748677, 0, 1.0};
Point(81) = {0.030009, -0.749419, 0, 1.0};
Point(82) = {0.035913, -0.749852, 0, 1.0};
Point(83) = {0.041542, -0.750000, 0, 1.0};
Point(84) = {0.046863, -0.749899, 0, 1.0};
Point(85) = {0.051818, -0.749584, 0, 1.0};
Point(86) = {0.056358, -0.749072, 0, 1.0};
Point(87) = {0.060444, -0.748393, 0, 1.0};
Point(88) = {0.064037, -0.747569, 0, 1.0};
Point(89) = {0.067114, -0.746630, 0, 1.0};
Point(90) = {0.069650, -0.745612, 0, 1.0};
Point(91) = {0.071637, -0.744552, 0, 1.0};
Point(92) = {0.073065, -0.743503, 0, 1.0};
Point(93) = {0.073946, -0.742525, 0, 1.0};
Point(94) = {0.074288, -0.741724, 0, 1.0};
Point(95) = {0.074035, -0.741292, 0, 1.0};
Point(96) = {0.073059, -0.741285, 0, 1.0};
Point(97) = {0.071230, -0.741743, 0, 1.0};
Point(98) = {0.068383, -0.742690, 0, 1.0};
Point(99) = {0.064355, -0.744074, 0, 1.0};
Point(100) = {0.058975, -0.745743, 0, 1.0};
Point(101) = {0.052098, -0.747465, 0, 1.0};
Point(102) = {0.043628, -0.748763, 0, 1.0};
Point(103) = {0.033967, -0.748955, 0, 1.0};
Point(104) = {0.024033, -0.747960, 0, 1.0};
Point(105) = {0.014291, -0.746248, 0, 1.0};
Point(106) = {0.004816, -0.744150, 0, 1.0};
Point(107) = {-0.004335, -0.741817, 0, 1.0};
Point(108) = {-0.013107, -0.739389, 0, 1.0};
Point(109) = {-0.021458, -0.736948, 0, 1.0};
Point(110) = {-0.029351, -0.734570, 0, 1.0};
Point(111) = {-0.036738, -0.732289, 0, 1.0};
Point(112) = {-0.043567, -0.730155, 0, 1.0};
Point(113) = {-0.049791, -0.728198, 0, 1.0};
Point(114) = {-0.055367, -0.726453, 0, 1.0};
Point(115) = {-0.060261, -0.724941, 0, 1.0};
Point(116) = {-0.064445, -0.723685, 0, 1.0};
Point(117) = {-0.067894, -0.722701, 0, 1.0};
Point(118) = {-0.070620, -0.721999, 0, 1.0};
Point(119) = {-0.072627, -0.721533, 0, 1.0};
Point(120) = {-0.073872, -0.721255, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
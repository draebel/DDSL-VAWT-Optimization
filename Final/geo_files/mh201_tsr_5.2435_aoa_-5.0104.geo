SetFactory("OpenCASCADE");

Point(1) = {0.112071, 0.743387, 0, 1.0};
Point(2) = {0.111546, 0.743485, 0, 1.0};
Point(3) = {0.110059, 0.743797, 0, 1.0};
Point(4) = {0.107771, 0.744292, 0, 1.0};
Point(5) = {0.104755, 0.744858, 0, 1.0};
Point(6) = {0.101001, 0.745438, 0, 1.0};
Point(7) = {0.096536, 0.746046, 0, 1.0};
Point(8) = {0.091433, 0.746685, 0, 1.0};
Point(9) = {0.085769, 0.747340, 0, 1.0};
Point(10) = {0.079629, 0.747992, 0, 1.0};
Point(11) = {0.073101, 0.748615, 0, 1.0};
Point(12) = {0.066275, 0.749178, 0, 1.0};
Point(13) = {0.059244, 0.749633, 0, 1.0};
Point(14) = {0.052067, 0.749914, 0, 1.0};
Point(15) = {0.044768, 0.750000, 0, 1.0};
Point(16) = {0.037400, 0.749907, 0, 1.0};
Point(17) = {0.030042, 0.749641, 0, 1.0};
Point(18) = {0.022764, 0.749199, 0, 1.0};
Point(19) = {0.015635, 0.748589, 0, 1.0};
Point(20) = {0.008729, 0.747819, 0, 1.0};
Point(21) = {0.002113, 0.746895, 0, 1.0};
Point(22) = {-0.004147, 0.745826, 0, 1.0};
Point(23) = {-0.009991, 0.744624, 0, 1.0};
Point(24) = {-0.015363, 0.743301, 0, 1.0};
Point(25) = {-0.020216, 0.741871, 0, 1.0};
Point(26) = {-0.024510, 0.740351, 0, 1.0};
Point(27) = {-0.028213, 0.738763, 0, 1.0};
Point(28) = {-0.031297, 0.737132, 0, 1.0};
Point(29) = {-0.033749, 0.735484, 0, 1.0};
Point(30) = {-0.035565, 0.733857, 0, 1.0};
Point(31) = {-0.036752, 0.732308, 0, 1.0};
Point(32) = {-0.037292, 0.731019, 0, 1.0};
Point(33) = {-0.037352, 0.730643, 0, 1.0};
Point(34) = {-0.037357, 0.730301, 0, 1.0};
Point(35) = {-0.037327, 0.730097, 0, 1.0};
Point(36) = {-0.037262, 0.729920, 0, 1.0};
Point(37) = {-0.037148, 0.729762, 0, 1.0};
Point(38) = {-0.036982, 0.729608, 0, 1.0};
Point(39) = {-0.036659, 0.729381, 0, 1.0};
Point(40) = {-0.036254, 0.729158, 0, 1.0};
Point(41) = {-0.034187, 0.728413, 0, 1.0};
Point(42) = {-0.031466, 0.727826, 0, 1.0};
Point(43) = {-0.028023, 0.727373, 0, 1.0};
Point(44) = {-0.023892, 0.727074, 0, 1.0};
Point(45) = {-0.019114, 0.726935, 0, 1.0};
Point(46) = {-0.013733, 0.726960, 0, 1.0};
Point(47) = {-0.007804, 0.727146, 0, 1.0};
Point(48) = {-0.001384, 0.727487, 0, 1.0};
Point(49) = {0.005454, 0.727967, 0, 1.0};
Point(50) = {0.012625, 0.728581, 0, 1.0};
Point(51) = {0.020051, 0.729330, 0, 1.0};
Point(52) = {0.027657, 0.730208, 0, 1.0};
Point(53) = {0.035358, 0.731197, 0, 1.0};
Point(54) = {0.043054, 0.732299, 0, 1.0};
Point(55) = {0.050670, 0.733531, 0, 1.0};
Point(56) = {0.058149, 0.734904, 0, 1.0};
Point(57) = {0.065472, 0.736428, 0, 1.0};
Point(58) = {0.072663, 0.738038, 0, 1.0};
Point(59) = {0.079674, 0.739581, 0, 1.0};
Point(60) = {0.086370, 0.740943, 0, 1.0};
Point(61) = {0.092602, 0.742052, 0, 1.0};
Point(62) = {0.098221, 0.742865, 0, 1.0};
Point(63) = {0.103079, 0.743362, 0, 1.0};
Point(64) = {0.107005, 0.743548, 0, 1.0};
Point(65) = {0.109837, 0.743519, 0, 1.0};
Point(66) = {0.111518, 0.743429, 0, 1.0};
Point(67) = {-0.112071, -0.743387, 0, 1.0};
Point(68) = {-0.111546, -0.743485, 0, 1.0};
Point(69) = {-0.110059, -0.743797, 0, 1.0};
Point(70) = {-0.107771, -0.744292, 0, 1.0};
Point(71) = {-0.104755, -0.744858, 0, 1.0};
Point(72) = {-0.101001, -0.745438, 0, 1.0};
Point(73) = {-0.096536, -0.746046, 0, 1.0};
Point(74) = {-0.091433, -0.746685, 0, 1.0};
Point(75) = {-0.085769, -0.747340, 0, 1.0};
Point(76) = {-0.079629, -0.747992, 0, 1.0};
Point(77) = {-0.073101, -0.748615, 0, 1.0};
Point(78) = {-0.066275, -0.749178, 0, 1.0};
Point(79) = {-0.059244, -0.749633, 0, 1.0};
Point(80) = {-0.052067, -0.749914, 0, 1.0};
Point(81) = {-0.044768, -0.750000, 0, 1.0};
Point(82) = {-0.037400, -0.749907, 0, 1.0};
Point(83) = {-0.030042, -0.749641, 0, 1.0};
Point(84) = {-0.022764, -0.749199, 0, 1.0};
Point(85) = {-0.015635, -0.748589, 0, 1.0};
Point(86) = {-0.008729, -0.747819, 0, 1.0};
Point(87) = {-0.002113, -0.746895, 0, 1.0};
Point(88) = {0.004147, -0.745826, 0, 1.0};
Point(89) = {0.009991, -0.744624, 0, 1.0};
Point(90) = {0.015363, -0.743301, 0, 1.0};
Point(91) = {0.020216, -0.741871, 0, 1.0};
Point(92) = {0.024510, -0.740351, 0, 1.0};
Point(93) = {0.028213, -0.738763, 0, 1.0};
Point(94) = {0.031297, -0.737132, 0, 1.0};
Point(95) = {0.033749, -0.735484, 0, 1.0};
Point(96) = {0.035565, -0.733857, 0, 1.0};
Point(97) = {0.036752, -0.732308, 0, 1.0};
Point(98) = {0.037292, -0.731019, 0, 1.0};
Point(99) = {0.037352, -0.730643, 0, 1.0};
Point(100) = {0.037357, -0.730301, 0, 1.0};
Point(101) = {0.037327, -0.730097, 0, 1.0};
Point(102) = {0.037262, -0.729920, 0, 1.0};
Point(103) = {0.037148, -0.729762, 0, 1.0};
Point(104) = {0.036982, -0.729608, 0, 1.0};
Point(105) = {0.036659, -0.729381, 0, 1.0};
Point(106) = {0.036254, -0.729158, 0, 1.0};
Point(107) = {0.034187, -0.728413, 0, 1.0};
Point(108) = {0.031466, -0.727826, 0, 1.0};
Point(109) = {0.028023, -0.727373, 0, 1.0};
Point(110) = {0.023892, -0.727074, 0, 1.0};
Point(111) = {0.019114, -0.726935, 0, 1.0};
Point(112) = {0.013733, -0.726960, 0, 1.0};
Point(113) = {0.007804, -0.727146, 0, 1.0};
Point(114) = {0.001384, -0.727487, 0, 1.0};
Point(115) = {-0.005454, -0.727967, 0, 1.0};
Point(116) = {-0.012625, -0.728581, 0, 1.0};
Point(117) = {-0.020051, -0.729330, 0, 1.0};
Point(118) = {-0.027657, -0.730208, 0, 1.0};
Point(119) = {-0.035358, -0.731197, 0, 1.0};
Point(120) = {-0.043054, -0.732299, 0, 1.0};
Point(121) = {-0.050670, -0.733531, 0, 1.0};
Point(122) = {-0.058149, -0.734904, 0, 1.0};
Point(123) = {-0.065472, -0.736428, 0, 1.0};
Point(124) = {-0.072663, -0.738038, 0, 1.0};
Point(125) = {-0.079674, -0.739581, 0, 1.0};
Point(126) = {-0.086370, -0.740943, 0, 1.0};
Point(127) = {-0.092602, -0.742052, 0, 1.0};
Point(128) = {-0.098221, -0.742865, 0, 1.0};
Point(129) = {-0.103079, -0.743362, 0, 1.0};
Point(130) = {-0.107005, -0.743548, 0, 1.0};
Point(131) = {-0.109837, -0.743519, 0, 1.0};
Point(132) = {-0.111518, -0.743429, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
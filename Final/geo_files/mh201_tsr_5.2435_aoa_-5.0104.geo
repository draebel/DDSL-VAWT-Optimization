SetFactory("OpenCASCADE");

Point(1) = {0.074618, 0.745591, 0, 1.0};
Point(2) = {0.074268, 0.745657, 0, 1.0};
Point(3) = {0.073276, 0.745865, 0, 1.0};
Point(4) = {0.071751, 0.746195, 0, 1.0};
Point(5) = {0.069740, 0.746572, 0, 1.0};
Point(6) = {0.067238, 0.746959, 0, 1.0};
Point(7) = {0.064261, 0.747364, 0, 1.0};
Point(8) = {0.060859, 0.747790, 0, 1.0};
Point(9) = {0.057083, 0.748227, 0, 1.0};
Point(10) = {0.052990, 0.748661, 0, 1.0};
Point(11) = {0.048638, 0.749077, 0, 1.0};
Point(12) = {0.044087, 0.749452, 0, 1.0};
Point(13) = {0.039400, 0.749755, 0, 1.0};
Point(14) = {0.034615, 0.749943, 0, 1.0};
Point(15) = {0.029749, 0.750000, 0, 1.0};
Point(16) = {0.024837, 0.749938, 0, 1.0};
Point(17) = {0.019932, 0.749760, 0, 1.0};
Point(18) = {0.015080, 0.749466, 0, 1.0};
Point(19) = {0.010327, 0.749059, 0, 1.0};
Point(20) = {0.005723, 0.748546, 0, 1.0};
Point(21) = {0.001312, 0.747930, 0, 1.0};
Point(22) = {-0.002861, 0.747217, 0, 1.0};
Point(23) = {-0.006757, 0.746416, 0, 1.0};
Point(24) = {-0.010339, 0.745534, 0, 1.0};
Point(25) = {-0.013574, 0.744581, 0, 1.0};
Point(26) = {-0.016436, 0.743567, 0, 1.0};
Point(27) = {-0.018905, 0.742508, 0, 1.0};
Point(28) = {-0.020961, 0.741421, 0, 1.0};
Point(29) = {-0.022595, 0.740322, 0, 1.0};
Point(30) = {-0.023806, 0.739238, 0, 1.0};
Point(31) = {-0.024598, 0.738205, 0, 1.0};
Point(32) = {-0.024957, 0.737346, 0, 1.0};
Point(33) = {-0.024998, 0.737095, 0, 1.0};
Point(34) = {-0.025001, 0.736867, 0, 1.0};
Point(35) = {-0.024981, 0.736731, 0, 1.0};
Point(36) = {-0.024938, 0.736613, 0, 1.0};
Point(37) = {-0.024862, 0.736508, 0, 1.0};
Point(38) = {-0.024751, 0.736405, 0, 1.0};
Point(39) = {-0.024536, 0.736254, 0, 1.0};
Point(40) = {-0.024266, 0.736105, 0, 1.0};
Point(41) = {-0.022888, 0.735609, 0, 1.0};
Point(42) = {-0.021074, 0.735217, 0, 1.0};
Point(43) = {-0.018779, 0.734915, 0, 1.0};
Point(44) = {-0.016025, 0.734716, 0, 1.0};
Point(45) = {-0.012839, 0.734623, 0, 1.0};
Point(46) = {-0.009252, 0.734640, 0, 1.0};
Point(47) = {-0.005299, 0.734764, 0, 1.0};
Point(48) = {-0.001019, 0.734991, 0, 1.0};
Point(49) = {0.003540, 0.735311, 0, 1.0};
Point(50) = {0.008321, 0.735720, 0, 1.0};
Point(51) = {0.013271, 0.736220, 0, 1.0};
Point(52) = {0.018342, 0.736805, 0, 1.0};
Point(53) = {0.023475, 0.737465, 0, 1.0};
Point(54) = {0.028606, 0.738200, 0, 1.0};
Point(55) = {0.033684, 0.739021, 0, 1.0};
Point(56) = {0.038670, 0.739936, 0, 1.0};
Point(57) = {0.043551, 0.740952, 0, 1.0};
Point(58) = {0.048346, 0.742025, 0, 1.0};
Point(59) = {0.053020, 0.743054, 0, 1.0};
Point(60) = {0.057483, 0.743962, 0, 1.0};
Point(61) = {0.061638, 0.744701, 0, 1.0};
Point(62) = {0.065384, 0.745244, 0, 1.0};
Point(63) = {0.068623, 0.745575, 0, 1.0};
Point(64) = {0.071240, 0.745698, 0, 1.0};
Point(65) = {0.073128, 0.745679, 0, 1.0};
Point(66) = {0.074249, 0.745619, 0, 1.0};
Point(67) = {-0.074618, -0.745591, 0, 1.0};
Point(68) = {-0.074268, -0.745657, 0, 1.0};
Point(69) = {-0.073276, -0.745865, 0, 1.0};
Point(70) = {-0.071751, -0.746195, 0, 1.0};
Point(71) = {-0.069740, -0.746572, 0, 1.0};
Point(72) = {-0.067238, -0.746959, 0, 1.0};
Point(73) = {-0.064261, -0.747364, 0, 1.0};
Point(74) = {-0.060859, -0.747790, 0, 1.0};
Point(75) = {-0.057083, -0.748227, 0, 1.0};
Point(76) = {-0.052990, -0.748661, 0, 1.0};
Point(77) = {-0.048638, -0.749077, 0, 1.0};
Point(78) = {-0.044087, -0.749452, 0, 1.0};
Point(79) = {-0.039400, -0.749755, 0, 1.0};
Point(80) = {-0.034615, -0.749943, 0, 1.0};
Point(81) = {-0.029749, -0.750000, 0, 1.0};
Point(82) = {-0.024837, -0.749938, 0, 1.0};
Point(83) = {-0.019932, -0.749760, 0, 1.0};
Point(84) = {-0.015080, -0.749466, 0, 1.0};
Point(85) = {-0.010327, -0.749059, 0, 1.0};
Point(86) = {-0.005723, -0.748546, 0, 1.0};
Point(87) = {-0.001312, -0.747930, 0, 1.0};
Point(88) = {0.002861, -0.747217, 0, 1.0};
Point(89) = {0.006757, -0.746416, 0, 1.0};
Point(90) = {0.010339, -0.745534, 0, 1.0};
Point(91) = {0.013574, -0.744581, 0, 1.0};
Point(92) = {0.016436, -0.743567, 0, 1.0};
Point(93) = {0.018905, -0.742508, 0, 1.0};
Point(94) = {0.020961, -0.741421, 0, 1.0};
Point(95) = {0.022595, -0.740322, 0, 1.0};
Point(96) = {0.023806, -0.739238, 0, 1.0};
Point(97) = {0.024598, -0.738205, 0, 1.0};
Point(98) = {0.024957, -0.737346, 0, 1.0};
Point(99) = {0.024998, -0.737095, 0, 1.0};
Point(100) = {0.025001, -0.736867, 0, 1.0};
Point(101) = {0.024981, -0.736731, 0, 1.0};
Point(102) = {0.024938, -0.736613, 0, 1.0};
Point(103) = {0.024862, -0.736508, 0, 1.0};
Point(104) = {0.024751, -0.736405, 0, 1.0};
Point(105) = {0.024536, -0.736254, 0, 1.0};
Point(106) = {0.024266, -0.736105, 0, 1.0};
Point(107) = {0.022888, -0.735609, 0, 1.0};
Point(108) = {0.021074, -0.735217, 0, 1.0};
Point(109) = {0.018779, -0.734915, 0, 1.0};
Point(110) = {0.016025, -0.734716, 0, 1.0};
Point(111) = {0.012839, -0.734623, 0, 1.0};
Point(112) = {0.009252, -0.734640, 0, 1.0};
Point(113) = {0.005299, -0.734764, 0, 1.0};
Point(114) = {0.001019, -0.734991, 0, 1.0};
Point(115) = {-0.003540, -0.735311, 0, 1.0};
Point(116) = {-0.008321, -0.735720, 0, 1.0};
Point(117) = {-0.013271, -0.736220, 0, 1.0};
Point(118) = {-0.018342, -0.736805, 0, 1.0};
Point(119) = {-0.023475, -0.737465, 0, 1.0};
Point(120) = {-0.028606, -0.738200, 0, 1.0};
Point(121) = {-0.033684, -0.739021, 0, 1.0};
Point(122) = {-0.038670, -0.739936, 0, 1.0};
Point(123) = {-0.043551, -0.740952, 0, 1.0};
Point(124) = {-0.048346, -0.742025, 0, 1.0};
Point(125) = {-0.053020, -0.743054, 0, 1.0};
Point(126) = {-0.057483, -0.743962, 0, 1.0};
Point(127) = {-0.061638, -0.744701, 0, 1.0};
Point(128) = {-0.065384, -0.745244, 0, 1.0};
Point(129) = {-0.068623, -0.745575, 0, 1.0};
Point(130) = {-0.071240, -0.745698, 0, 1.0};
Point(131) = {-0.073128, -0.745679, 0, 1.0};
Point(132) = {-0.074249, -0.745619, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112187, 0.742961, 0, 1.0};
Point(2) = {0.111691, 0.742979, 0, 1.0};
Point(3) = {0.110219, 0.743051, 0, 1.0};
Point(4) = {0.107806, 0.743216, 0, 1.0};
Point(5) = {0.104519, 0.743499, 0, 1.0};
Point(6) = {0.100434, 0.743910, 0, 1.0};
Point(7) = {0.095639, 0.744447, 0, 1.0};
Point(8) = {0.090228, 0.745091, 0, 1.0};
Point(9) = {0.084290, 0.745812, 0, 1.0};
Point(10) = {0.077918, 0.746576, 0, 1.0};
Point(11) = {0.071193, 0.747342, 0, 1.0};
Point(12) = {0.064198, 0.748071, 0, 1.0};
Point(13) = {0.057005, 0.748725, 0, 1.0};
Point(14) = {0.049689, 0.749270, 0, 1.0};
Point(15) = {0.042316, 0.749678, 0, 1.0};
Point(16) = {0.034953, 0.749927, 0, 1.0};
Point(17) = {0.027664, 0.750000, 0, 1.0};
Point(18) = {0.020512, 0.749885, 0, 1.0};
Point(19) = {0.013559, 0.749580, 0, 1.0};
Point(20) = {0.006866, 0.749077, 0, 1.0};
Point(21) = {0.000487, 0.748383, 0, 1.0};
Point(22) = {-0.005524, 0.747506, 0, 1.0};
Point(23) = {-0.011113, 0.746452, 0, 1.0};
Point(24) = {-0.016240, 0.745235, 0, 1.0};
Point(25) = {-0.020868, 0.743869, 0, 1.0};
Point(26) = {-0.024971, 0.742378, 0, 1.0};
Point(27) = {-0.028528, 0.740795, 0, 1.0};
Point(28) = {-0.031517, 0.739158, 0, 1.0};
Point(29) = {-0.033922, 0.737516, 0, 1.0};
Point(30) = {-0.035720, 0.735913, 0, 1.0};
Point(31) = {-0.036901, 0.734399, 0, 1.0};
Point(32) = {-0.037464, 0.733034, 0, 1.0};
Point(33) = {-0.037408, 0.731949, 0, 1.0};
Point(34) = {-0.036559, 0.731158, 0, 1.0};
Point(35) = {-0.034864, 0.730575, 0, 1.0};
Point(36) = {-0.032414, 0.730221, 0, 1.0};
Point(37) = {-0.029181, 0.730116, 0, 1.0};
Point(38) = {-0.025165, 0.730224, 0, 1.0};
Point(39) = {-0.020403, 0.730516, 0, 1.0};
Point(40) = {-0.014944, 0.730964, 0, 1.0};
Point(41) = {-0.008853, 0.731541, 0, 1.0};
Point(42) = {-0.002203, 0.732231, 0, 1.0};
Point(43) = {0.004934, 0.733016, 0, 1.0};
Point(44) = {0.012478, 0.733874, 0, 1.0};
Point(45) = {0.020343, 0.734782, 0, 1.0};
Point(46) = {0.028437, 0.735718, 0, 1.0};
Point(47) = {0.036665, 0.736666, 0, 1.0};
Point(48) = {0.044935, 0.737598, 0, 1.0};
Point(49) = {0.053144, 0.738492, 0, 1.0};
Point(50) = {0.061185, 0.739324, 0, 1.0};
Point(51) = {0.068954, 0.740082, 0, 1.0};
Point(52) = {0.076349, 0.740754, 0, 1.0};
Point(53) = {0.083270, 0.741335, 0, 1.0};
Point(54) = {0.089626, 0.741818, 0, 1.0};
Point(55) = {0.095331, 0.742207, 0, 1.0};
Point(56) = {0.100307, 0.742505, 0, 1.0};
Point(57) = {0.104485, 0.742717, 0, 1.0};
Point(58) = {0.107809, 0.742853, 0, 1.0};
Point(59) = {0.110224, 0.742927, 0, 1.0};
Point(60) = {0.111694, 0.742955, 0, 1.0};
Point(61) = {0.112188, 0.742961, 0, 1.0};
Point(62) = {-0.112187, -0.742961, 0, 1.0};
Point(63) = {-0.111691, -0.742979, 0, 1.0};
Point(64) = {-0.110219, -0.743051, 0, 1.0};
Point(65) = {-0.107806, -0.743216, 0, 1.0};
Point(66) = {-0.104519, -0.743499, 0, 1.0};
Point(67) = {-0.100434, -0.743910, 0, 1.0};
Point(68) = {-0.095639, -0.744447, 0, 1.0};
Point(69) = {-0.090228, -0.745091, 0, 1.0};
Point(70) = {-0.084290, -0.745812, 0, 1.0};
Point(71) = {-0.077918, -0.746576, 0, 1.0};
Point(72) = {-0.071193, -0.747342, 0, 1.0};
Point(73) = {-0.064198, -0.748071, 0, 1.0};
Point(74) = {-0.057005, -0.748725, 0, 1.0};
Point(75) = {-0.049689, -0.749270, 0, 1.0};
Point(76) = {-0.042316, -0.749678, 0, 1.0};
Point(77) = {-0.034953, -0.749927, 0, 1.0};
Point(78) = {-0.027664, -0.750000, 0, 1.0};
Point(79) = {-0.020512, -0.749885, 0, 1.0};
Point(80) = {-0.013559, -0.749580, 0, 1.0};
Point(81) = {-0.006866, -0.749077, 0, 1.0};
Point(82) = {-0.000487, -0.748383, 0, 1.0};
Point(83) = {0.005524, -0.747506, 0, 1.0};
Point(84) = {0.011113, -0.746452, 0, 1.0};
Point(85) = {0.016240, -0.745235, 0, 1.0};
Point(86) = {0.020868, -0.743869, 0, 1.0};
Point(87) = {0.024971, -0.742378, 0, 1.0};
Point(88) = {0.028528, -0.740795, 0, 1.0};
Point(89) = {0.031517, -0.739158, 0, 1.0};
Point(90) = {0.033922, -0.737516, 0, 1.0};
Point(91) = {0.035720, -0.735913, 0, 1.0};
Point(92) = {0.036901, -0.734399, 0, 1.0};
Point(93) = {0.037464, -0.733034, 0, 1.0};
Point(94) = {0.037408, -0.731949, 0, 1.0};
Point(95) = {0.036559, -0.731158, 0, 1.0};
Point(96) = {0.034864, -0.730575, 0, 1.0};
Point(97) = {0.032414, -0.730221, 0, 1.0};
Point(98) = {0.029181, -0.730116, 0, 1.0};
Point(99) = {0.025165, -0.730224, 0, 1.0};
Point(100) = {0.020403, -0.730516, 0, 1.0};
Point(101) = {0.014944, -0.730964, 0, 1.0};
Point(102) = {0.008853, -0.731541, 0, 1.0};
Point(103) = {0.002203, -0.732231, 0, 1.0};
Point(104) = {-0.004934, -0.733016, 0, 1.0};
Point(105) = {-0.012478, -0.733874, 0, 1.0};
Point(106) = {-0.020343, -0.734782, 0, 1.0};
Point(107) = {-0.028437, -0.735718, 0, 1.0};
Point(108) = {-0.036665, -0.736666, 0, 1.0};
Point(109) = {-0.044935, -0.737598, 0, 1.0};
Point(110) = {-0.053144, -0.738492, 0, 1.0};
Point(111) = {-0.061185, -0.739324, 0, 1.0};
Point(112) = {-0.068954, -0.740082, 0, 1.0};
Point(113) = {-0.076349, -0.740754, 0, 1.0};
Point(114) = {-0.083270, -0.741335, 0, 1.0};
Point(115) = {-0.089626, -0.741818, 0, 1.0};
Point(116) = {-0.095331, -0.742207, 0, 1.0};
Point(117) = {-0.100307, -0.742505, 0, 1.0};
Point(118) = {-0.104485, -0.742717, 0, 1.0};
Point(119) = {-0.107809, -0.742853, 0, 1.0};
Point(120) = {-0.110224, -0.742927, 0, 1.0};
Point(121) = {-0.111694, -0.742955, 0, 1.0};
Point(122) = {-0.112188, -0.742961, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
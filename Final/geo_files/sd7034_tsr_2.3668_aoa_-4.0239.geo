SetFactory("OpenCASCADE");

Point(1) = {0.112007, 0.742970, 0, 1.0};
Point(2) = {0.111512, 0.742987, 0, 1.0};
Point(3) = {0.110041, 0.743060, 0, 1.0};
Point(4) = {0.107631, 0.743224, 0, 1.0};
Point(5) = {0.104349, 0.743507, 0, 1.0};
Point(6) = {0.100269, 0.743917, 0, 1.0};
Point(7) = {0.095479, 0.744453, 0, 1.0};
Point(8) = {0.090075, 0.745096, 0, 1.0};
Point(9) = {0.084144, 0.745817, 0, 1.0};
Point(10) = {0.077780, 0.746580, 0, 1.0};
Point(11) = {0.071062, 0.747345, 0, 1.0};
Point(12) = {0.064076, 0.748074, 0, 1.0};
Point(13) = {0.056891, 0.748727, 0, 1.0};
Point(14) = {0.049584, 0.749271, 0, 1.0};
Point(15) = {0.042220, 0.749678, 0, 1.0};
Point(16) = {0.034866, 0.749928, 0, 1.0};
Point(17) = {0.027586, 0.750000, 0, 1.0};
Point(18) = {0.020442, 0.749885, 0, 1.0};
Point(19) = {0.013498, 0.749580, 0, 1.0};
Point(20) = {0.006813, 0.749078, 0, 1.0};
Point(21) = {0.000442, 0.748385, 0, 1.0};
Point(22) = {-0.005562, 0.747509, 0, 1.0};
Point(23) = {-0.011145, 0.746456, 0, 1.0};
Point(24) = {-0.016265, 0.745241, 0, 1.0};
Point(25) = {-0.020888, 0.743876, 0, 1.0};
Point(26) = {-0.024986, 0.742387, 0, 1.0};
Point(27) = {-0.028539, 0.740806, 0, 1.0};
Point(28) = {-0.031524, 0.739171, 0, 1.0};
Point(29) = {-0.033926, 0.737531, 0, 1.0};
Point(30) = {-0.035722, 0.735930, 0, 1.0};
Point(31) = {-0.036902, 0.734418, 0, 1.0};
Point(32) = {-0.037464, 0.733054, 0, 1.0};
Point(33) = {-0.037408, 0.731970, 0, 1.0};
Point(34) = {-0.036560, 0.731181, 0, 1.0};
Point(35) = {-0.034867, 0.730598, 0, 1.0};
Point(36) = {-0.032420, 0.730244, 0, 1.0};
Point(37) = {-0.029191, 0.730139, 0, 1.0};
Point(38) = {-0.025180, 0.730247, 0, 1.0};
Point(39) = {-0.020423, 0.730540, 0, 1.0};
Point(40) = {-0.014971, 0.730986, 0, 1.0};
Point(41) = {-0.008887, 0.731563, 0, 1.0};
Point(42) = {-0.002245, 0.732253, 0, 1.0};
Point(43) = {0.004883, 0.733037, 0, 1.0};
Point(44) = {0.012418, 0.733893, 0, 1.0};
Point(45) = {0.020274, 0.734800, 0, 1.0};
Point(46) = {0.028358, 0.735736, 0, 1.0};
Point(47) = {0.036576, 0.736682, 0, 1.0};
Point(48) = {0.044836, 0.737613, 0, 1.0};
Point(49) = {0.053036, 0.738506, 0, 1.0};
Point(50) = {0.061067, 0.739336, 0, 1.0};
Point(51) = {0.068827, 0.740094, 0, 1.0};
Point(52) = {0.076212, 0.740766, 0, 1.0};
Point(53) = {0.083125, 0.741345, 0, 1.0};
Point(54) = {0.089474, 0.741828, 0, 1.0};
Point(55) = {0.095172, 0.742217, 0, 1.0};
Point(56) = {0.100142, 0.742514, 0, 1.0};
Point(57) = {0.104315, 0.742726, 0, 1.0};
Point(58) = {0.107634, 0.742862, 0, 1.0};
Point(59) = {0.110047, 0.742935, 0, 1.0};
Point(60) = {0.111515, 0.742963, 0, 1.0};
Point(61) = {0.112009, 0.742970, 0, 1.0};
Point(62) = {-0.112007, -0.742970, 0, 1.0};
Point(63) = {-0.111512, -0.742987, 0, 1.0};
Point(64) = {-0.110041, -0.743060, 0, 1.0};
Point(65) = {-0.107631, -0.743224, 0, 1.0};
Point(66) = {-0.104349, -0.743507, 0, 1.0};
Point(67) = {-0.100269, -0.743917, 0, 1.0};
Point(68) = {-0.095479, -0.744453, 0, 1.0};
Point(69) = {-0.090075, -0.745096, 0, 1.0};
Point(70) = {-0.084144, -0.745817, 0, 1.0};
Point(71) = {-0.077780, -0.746580, 0, 1.0};
Point(72) = {-0.071062, -0.747345, 0, 1.0};
Point(73) = {-0.064076, -0.748074, 0, 1.0};
Point(74) = {-0.056891, -0.748727, 0, 1.0};
Point(75) = {-0.049584, -0.749271, 0, 1.0};
Point(76) = {-0.042220, -0.749678, 0, 1.0};
Point(77) = {-0.034866, -0.749928, 0, 1.0};
Point(78) = {-0.027586, -0.750000, 0, 1.0};
Point(79) = {-0.020442, -0.749885, 0, 1.0};
Point(80) = {-0.013498, -0.749580, 0, 1.0};
Point(81) = {-0.006813, -0.749078, 0, 1.0};
Point(82) = {-0.000442, -0.748385, 0, 1.0};
Point(83) = {0.005562, -0.747509, 0, 1.0};
Point(84) = {0.011145, -0.746456, 0, 1.0};
Point(85) = {0.016265, -0.745241, 0, 1.0};
Point(86) = {0.020888, -0.743876, 0, 1.0};
Point(87) = {0.024986, -0.742387, 0, 1.0};
Point(88) = {0.028539, -0.740806, 0, 1.0};
Point(89) = {0.031524, -0.739171, 0, 1.0};
Point(90) = {0.033926, -0.737531, 0, 1.0};
Point(91) = {0.035722, -0.735930, 0, 1.0};
Point(92) = {0.036902, -0.734418, 0, 1.0};
Point(93) = {0.037464, -0.733054, 0, 1.0};
Point(94) = {0.037408, -0.731970, 0, 1.0};
Point(95) = {0.036560, -0.731181, 0, 1.0};
Point(96) = {0.034867, -0.730598, 0, 1.0};
Point(97) = {0.032420, -0.730244, 0, 1.0};
Point(98) = {0.029191, -0.730139, 0, 1.0};
Point(99) = {0.025180, -0.730247, 0, 1.0};
Point(100) = {0.020423, -0.730540, 0, 1.0};
Point(101) = {0.014971, -0.730986, 0, 1.0};
Point(102) = {0.008887, -0.731563, 0, 1.0};
Point(103) = {0.002245, -0.732253, 0, 1.0};
Point(104) = {-0.004883, -0.733037, 0, 1.0};
Point(105) = {-0.012418, -0.733893, 0, 1.0};
Point(106) = {-0.020274, -0.734800, 0, 1.0};
Point(107) = {-0.028358, -0.735736, 0, 1.0};
Point(108) = {-0.036576, -0.736682, 0, 1.0};
Point(109) = {-0.044836, -0.737613, 0, 1.0};
Point(110) = {-0.053036, -0.738506, 0, 1.0};
Point(111) = {-0.061067, -0.739336, 0, 1.0};
Point(112) = {-0.068827, -0.740094, 0, 1.0};
Point(113) = {-0.076212, -0.740766, 0, 1.0};
Point(114) = {-0.083125, -0.741345, 0, 1.0};
Point(115) = {-0.089474, -0.741828, 0, 1.0};
Point(116) = {-0.095172, -0.742217, 0, 1.0};
Point(117) = {-0.100142, -0.742514, 0, 1.0};
Point(118) = {-0.104315, -0.742726, 0, 1.0};
Point(119) = {-0.107634, -0.742862, 0, 1.0};
Point(120) = {-0.110047, -0.742935, 0, 1.0};
Point(121) = {-0.111515, -0.742963, 0, 1.0};
Point(122) = {-0.112009, -0.742970, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
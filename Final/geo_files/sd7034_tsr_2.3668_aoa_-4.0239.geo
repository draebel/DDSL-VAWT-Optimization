SetFactory("OpenCASCADE");

Point(1) = {0.074753, 0.745310, 0, 1.0};
Point(2) = {0.074423, 0.745322, 0, 1.0};
Point(3) = {0.073442, 0.745370, 0, 1.0};
Point(4) = {0.071834, 0.745480, 0, 1.0};
Point(5) = {0.069645, 0.745669, 0, 1.0};
Point(6) = {0.066923, 0.745942, 0, 1.0};
Point(7) = {0.063728, 0.746300, 0, 1.0};
Point(8) = {0.060123, 0.746729, 0, 1.0};
Point(9) = {0.056166, 0.747210, 0, 1.0};
Point(10) = {0.051921, 0.747719, 0, 1.0};
Point(11) = {0.047440, 0.748229, 0, 1.0};
Point(12) = {0.042780, 0.748715, 0, 1.0};
Point(13) = {0.037987, 0.749151, 0, 1.0};
Point(14) = {0.033113, 0.749514, 0, 1.0};
Point(15) = {0.028201, 0.749786, 0, 1.0};
Point(16) = {0.023295, 0.749952, 0, 1.0};
Point(17) = {0.018439, 0.750000, 0, 1.0};
Point(18) = {0.013673, 0.749923, 0, 1.0};
Point(19) = {0.009041, 0.749720, 0, 1.0};
Point(20) = {0.004582, 0.749385, 0, 1.0};
Point(21) = {0.000332, 0.748923, 0, 1.0};
Point(22) = {-0.003673, 0.748338, 0, 1.0};
Point(23) = {-0.007397, 0.747636, 0, 1.0};
Point(24) = {-0.010813, 0.746826, 0, 1.0};
Point(25) = {-0.013896, 0.745915, 0, 1.0};
Point(26) = {-0.016631, 0.744922, 0, 1.0};
Point(27) = {-0.019000, 0.743867, 0, 1.0};
Point(28) = {-0.020992, 0.742776, 0, 1.0};
Point(29) = {-0.022594, 0.741682, 0, 1.0};
Point(30) = {-0.023792, 0.740614, 0, 1.0};
Point(31) = {-0.024579, 0.739606, 0, 1.0};
Point(32) = {-0.024954, 0.738696, 0, 1.0};
Point(33) = {-0.024916, 0.737973, 0, 1.0};
Point(34) = {-0.024351, 0.737446, 0, 1.0};
Point(35) = {-0.023222, 0.737058, 0, 1.0};
Point(36) = {-0.021589, 0.736822, 0, 1.0};
Point(37) = {-0.019435, 0.736752, 0, 1.0};
Point(38) = {-0.016760, 0.736824, 0, 1.0};
Point(39) = {-0.013586, 0.737019, 0, 1.0};
Point(40) = {-0.009949, 0.737317, 0, 1.0};
Point(41) = {-0.005891, 0.737701, 0, 1.0};
Point(42) = {-0.001461, 0.738161, 0, 1.0};
Point(43) = {0.003294, 0.738684, 0, 1.0};
Point(44) = {0.008321, 0.739256, 0, 1.0};
Point(45) = {0.013561, 0.739861, 0, 1.0};
Point(46) = {0.018954, 0.740485, 0, 1.0};
Point(47) = {0.024436, 0.741116, 0, 1.0};
Point(48) = {0.029946, 0.741737, 0, 1.0};
Point(49) = {0.035415, 0.742332, 0, 1.0};
Point(50) = {0.040773, 0.742887, 0, 1.0};
Point(51) = {0.045949, 0.743392, 0, 1.0};
Point(52) = {0.050876, 0.743840, 0, 1.0};
Point(53) = {0.055487, 0.744227, 0, 1.0};
Point(54) = {0.059722, 0.744549, 0, 1.0};
Point(55) = {0.063523, 0.744808, 0, 1.0};
Point(56) = {0.066838, 0.745006, 0, 1.0};
Point(57) = {0.069622, 0.745148, 0, 1.0};
Point(58) = {0.071836, 0.745238, 0, 1.0};
Point(59) = {0.073446, 0.745287, 0, 1.0};
Point(60) = {0.074425, 0.745306, 0, 1.0};
Point(61) = {0.074754, 0.745310, 0, 1.0};
Point(62) = {-0.074753, -0.745310, 0, 1.0};
Point(63) = {-0.074423, -0.745322, 0, 1.0};
Point(64) = {-0.073442, -0.745370, 0, 1.0};
Point(65) = {-0.071834, -0.745480, 0, 1.0};
Point(66) = {-0.069645, -0.745669, 0, 1.0};
Point(67) = {-0.066923, -0.745942, 0, 1.0};
Point(68) = {-0.063728, -0.746300, 0, 1.0};
Point(69) = {-0.060123, -0.746729, 0, 1.0};
Point(70) = {-0.056166, -0.747210, 0, 1.0};
Point(71) = {-0.051921, -0.747719, 0, 1.0};
Point(72) = {-0.047440, -0.748229, 0, 1.0};
Point(73) = {-0.042780, -0.748715, 0, 1.0};
Point(74) = {-0.037987, -0.749151, 0, 1.0};
Point(75) = {-0.033113, -0.749514, 0, 1.0};
Point(76) = {-0.028201, -0.749786, 0, 1.0};
Point(77) = {-0.023295, -0.749952, 0, 1.0};
Point(78) = {-0.018439, -0.750000, 0, 1.0};
Point(79) = {-0.013673, -0.749923, 0, 1.0};
Point(80) = {-0.009041, -0.749720, 0, 1.0};
Point(81) = {-0.004582, -0.749385, 0, 1.0};
Point(82) = {-0.000332, -0.748923, 0, 1.0};
Point(83) = {0.003673, -0.748338, 0, 1.0};
Point(84) = {0.007397, -0.747636, 0, 1.0};
Point(85) = {0.010813, -0.746826, 0, 1.0};
Point(86) = {0.013896, -0.745915, 0, 1.0};
Point(87) = {0.016631, -0.744922, 0, 1.0};
Point(88) = {0.019000, -0.743867, 0, 1.0};
Point(89) = {0.020992, -0.742776, 0, 1.0};
Point(90) = {0.022594, -0.741682, 0, 1.0};
Point(91) = {0.023792, -0.740614, 0, 1.0};
Point(92) = {0.024579, -0.739606, 0, 1.0};
Point(93) = {0.024954, -0.738696, 0, 1.0};
Point(94) = {0.024916, -0.737973, 0, 1.0};
Point(95) = {0.024351, -0.737446, 0, 1.0};
Point(96) = {0.023222, -0.737058, 0, 1.0};
Point(97) = {0.021589, -0.736822, 0, 1.0};
Point(98) = {0.019435, -0.736752, 0, 1.0};
Point(99) = {0.016760, -0.736824, 0, 1.0};
Point(100) = {0.013586, -0.737019, 0, 1.0};
Point(101) = {0.009949, -0.737317, 0, 1.0};
Point(102) = {0.005891, -0.737701, 0, 1.0};
Point(103) = {0.001461, -0.738161, 0, 1.0};
Point(104) = {-0.003294, -0.738684, 0, 1.0};
Point(105) = {-0.008321, -0.739256, 0, 1.0};
Point(106) = {-0.013561, -0.739861, 0, 1.0};
Point(107) = {-0.018954, -0.740485, 0, 1.0};
Point(108) = {-0.024436, -0.741116, 0, 1.0};
Point(109) = {-0.029946, -0.741737, 0, 1.0};
Point(110) = {-0.035415, -0.742332, 0, 1.0};
Point(111) = {-0.040773, -0.742887, 0, 1.0};
Point(112) = {-0.045949, -0.743392, 0, 1.0};
Point(113) = {-0.050876, -0.743840, 0, 1.0};
Point(114) = {-0.055487, -0.744227, 0, 1.0};
Point(115) = {-0.059722, -0.744549, 0, 1.0};
Point(116) = {-0.063523, -0.744808, 0, 1.0};
Point(117) = {-0.066838, -0.745006, 0, 1.0};
Point(118) = {-0.069622, -0.745148, 0, 1.0};
Point(119) = {-0.071836, -0.745238, 0, 1.0};
Point(120) = {-0.073446, -0.745287, 0, 1.0};
Point(121) = {-0.074425, -0.745306, 0, 1.0};
Point(122) = {-0.074754, -0.745310, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
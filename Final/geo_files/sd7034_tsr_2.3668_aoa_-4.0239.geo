SetFactory("OpenCASCADE");

Point(1) = {0.112130, 0.742965, 0, 1.0};
Point(2) = {0.111634, 0.742983, 0, 1.0};
Point(3) = {0.110163, 0.743055, 0, 1.0};
Point(4) = {0.107752, 0.743220, 0, 1.0};
Point(5) = {0.104467, 0.743503, 0, 1.0};
Point(6) = {0.100384, 0.743913, 0, 1.0};
Point(7) = {0.095592, 0.744450, 0, 1.0};
Point(8) = {0.090184, 0.745094, 0, 1.0};
Point(9) = {0.084250, 0.745814, 0, 1.0};
Point(10) = {0.077882, 0.746578, 0, 1.0};
Point(11) = {0.071161, 0.747343, 0, 1.0};
Point(12) = {0.064170, 0.748072, 0, 1.0};
Point(13) = {0.056981, 0.748726, 0, 1.0};
Point(14) = {0.049669, 0.749270, 0, 1.0};
Point(15) = {0.042301, 0.749678, 0, 1.0};
Point(16) = {0.034942, 0.749927, 0, 1.0};
Point(17) = {0.027658, 0.750000, 0, 1.0};
Point(18) = {0.020510, 0.749885, 0, 1.0};
Point(19) = {0.013562, 0.749580, 0, 1.0};
Point(20) = {0.006872, 0.749078, 0, 1.0};
Point(21) = {0.000497, 0.748384, 0, 1.0};
Point(22) = {-0.005510, 0.747507, 0, 1.0};
Point(23) = {-0.011096, 0.746454, 0, 1.0};
Point(24) = {-0.016219, 0.745238, 0, 1.0};
Point(25) = {-0.020845, 0.743872, 0, 1.0};
Point(26) = {-0.024946, 0.742382, 0, 1.0};
Point(27) = {-0.028501, 0.740800, 0, 1.0};
Point(28) = {-0.031488, 0.739164, 0, 1.0};
Point(29) = {-0.033891, 0.737523, 0, 1.0};
Point(30) = {-0.035688, 0.735922, 0, 1.0};
Point(31) = {-0.036869, 0.734409, 0, 1.0};
Point(32) = {-0.037431, 0.733044, 0, 1.0};
Point(33) = {-0.037375, 0.731960, 0, 1.0};
Point(34) = {-0.036526, 0.731170, 0, 1.0};
Point(35) = {-0.034833, 0.730587, 0, 1.0};
Point(36) = {-0.032384, 0.730232, 0, 1.0};
Point(37) = {-0.029153, 0.730127, 0, 1.0};
Point(38) = {-0.025139, 0.730235, 0, 1.0};
Point(39) = {-0.020380, 0.730528, 0, 1.0};
Point(40) = {-0.014924, 0.730975, 0, 1.0};
Point(41) = {-0.008837, 0.731552, 0, 1.0};
Point(42) = {-0.002191, 0.732242, 0, 1.0};
Point(43) = {0.004941, 0.733027, 0, 1.0};
Point(44) = {0.012481, 0.733883, 0, 1.0};
Point(45) = {0.020342, 0.734791, 0, 1.0};
Point(46) = {0.028430, 0.735727, 0, 1.0};
Point(47) = {0.036654, 0.736674, 0, 1.0};
Point(48) = {0.044919, 0.737606, 0, 1.0};
Point(49) = {0.053123, 0.738499, 0, 1.0};
Point(50) = {0.061159, 0.739330, 0, 1.0};
Point(51) = {0.068924, 0.740088, 0, 1.0};
Point(52) = {0.076314, 0.740760, 0, 1.0};
Point(53) = {0.083231, 0.741340, 0, 1.0};
Point(54) = {0.089583, 0.741823, 0, 1.0};
Point(55) = {0.095285, 0.742212, 0, 1.0};
Point(56) = {0.100257, 0.742509, 0, 1.0};
Point(57) = {0.104433, 0.742722, 0, 1.0};
Point(58) = {0.107755, 0.742857, 0, 1.0};
Point(59) = {0.110169, 0.742931, 0, 1.0};
Point(60) = {0.111637, 0.742959, 0, 1.0};
Point(61) = {0.112132, 0.742965, 0, 1.0};
Point(62) = {-0.112130, -0.742965, 0, 1.0};
Point(63) = {-0.111634, -0.742983, 0, 1.0};
Point(64) = {-0.110163, -0.743055, 0, 1.0};
Point(65) = {-0.107752, -0.743220, 0, 1.0};
Point(66) = {-0.104467, -0.743503, 0, 1.0};
Point(67) = {-0.100384, -0.743913, 0, 1.0};
Point(68) = {-0.095592, -0.744450, 0, 1.0};
Point(69) = {-0.090184, -0.745094, 0, 1.0};
Point(70) = {-0.084250, -0.745814, 0, 1.0};
Point(71) = {-0.077882, -0.746578, 0, 1.0};
Point(72) = {-0.071161, -0.747343, 0, 1.0};
Point(73) = {-0.064170, -0.748072, 0, 1.0};
Point(74) = {-0.056981, -0.748726, 0, 1.0};
Point(75) = {-0.049669, -0.749270, 0, 1.0};
Point(76) = {-0.042301, -0.749678, 0, 1.0};
Point(77) = {-0.034942, -0.749927, 0, 1.0};
Point(78) = {-0.027658, -0.750000, 0, 1.0};
Point(79) = {-0.020510, -0.749885, 0, 1.0};
Point(80) = {-0.013562, -0.749580, 0, 1.0};
Point(81) = {-0.006872, -0.749078, 0, 1.0};
Point(82) = {-0.000497, -0.748384, 0, 1.0};
Point(83) = {0.005510, -0.747507, 0, 1.0};
Point(84) = {0.011096, -0.746454, 0, 1.0};
Point(85) = {0.016219, -0.745238, 0, 1.0};
Point(86) = {0.020845, -0.743872, 0, 1.0};
Point(87) = {0.024946, -0.742382, 0, 1.0};
Point(88) = {0.028501, -0.740800, 0, 1.0};
Point(89) = {0.031488, -0.739164, 0, 1.0};
Point(90) = {0.033891, -0.737523, 0, 1.0};
Point(91) = {0.035688, -0.735922, 0, 1.0};
Point(92) = {0.036869, -0.734409, 0, 1.0};
Point(93) = {0.037431, -0.733044, 0, 1.0};
Point(94) = {0.037375, -0.731960, 0, 1.0};
Point(95) = {0.036526, -0.731170, 0, 1.0};
Point(96) = {0.034833, -0.730587, 0, 1.0};
Point(97) = {0.032384, -0.730232, 0, 1.0};
Point(98) = {0.029153, -0.730127, 0, 1.0};
Point(99) = {0.025139, -0.730235, 0, 1.0};
Point(100) = {0.020380, -0.730528, 0, 1.0};
Point(101) = {0.014924, -0.730975, 0, 1.0};
Point(102) = {0.008837, -0.731552, 0, 1.0};
Point(103) = {0.002191, -0.732242, 0, 1.0};
Point(104) = {-0.004941, -0.733027, 0, 1.0};
Point(105) = {-0.012481, -0.733883, 0, 1.0};
Point(106) = {-0.020342, -0.734791, 0, 1.0};
Point(107) = {-0.028430, -0.735727, 0, 1.0};
Point(108) = {-0.036654, -0.736674, 0, 1.0};
Point(109) = {-0.044919, -0.737606, 0, 1.0};
Point(110) = {-0.053123, -0.738499, 0, 1.0};
Point(111) = {-0.061159, -0.739330, 0, 1.0};
Point(112) = {-0.068924, -0.740088, 0, 1.0};
Point(113) = {-0.076314, -0.740760, 0, 1.0};
Point(114) = {-0.083231, -0.741340, 0, 1.0};
Point(115) = {-0.089583, -0.741823, 0, 1.0};
Point(116) = {-0.095285, -0.742212, 0, 1.0};
Point(117) = {-0.100257, -0.742509, 0, 1.0};
Point(118) = {-0.104433, -0.742722, 0, 1.0};
Point(119) = {-0.107755, -0.742857, 0, 1.0};
Point(120) = {-0.110169, -0.742931, 0, 1.0};
Point(121) = {-0.111637, -0.742959, 0, 1.0};
Point(122) = {-0.112132, -0.742965, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074535, 0.722482, 0, 1.0};
Point(2) = {0.070991, 0.723910, 0, 1.0};
Point(3) = {0.066571, 0.725615, 0, 1.0};
Point(4) = {0.061506, 0.727507, 0, 1.0};
Point(5) = {0.055872, 0.729550, 0, 1.0};
Point(6) = {0.049749, 0.731706, 0, 1.0};
Point(7) = {0.043222, 0.733927, 0, 1.0};
Point(8) = {0.036376, 0.736158, 0, 1.0};
Point(9) = {0.029294, 0.738329, 0, 1.0};
Point(10) = {0.022022, 0.740358, 0, 1.0};
Point(11) = {0.014576, 0.742216, 0, 1.0};
Point(12) = {0.007017, 0.743909, 0, 1.0};
Point(13) = {-0.000574, 0.745420, 0, 1.0};
Point(14) = {-0.008127, 0.746734, 0, 1.0};
Point(15) = {-0.015566, 0.747840, 0, 1.0};
Point(16) = {-0.022818, 0.748727, 0, 1.0};
Point(17) = {-0.029810, 0.749386, 0, 1.0};
Point(18) = {-0.036472, 0.749812, 0, 1.0};
Point(19) = {-0.042742, 0.750000, 0, 1.0};
Point(20) = {-0.048558, 0.749950, 0, 1.0};
Point(21) = {-0.053869, 0.749664, 0, 1.0};
Point(22) = {-0.058630, 0.749151, 0, 1.0};
Point(23) = {-0.062803, 0.748424, 0, 1.0};
Point(24) = {-0.066353, 0.747504, 0, 1.0};
Point(25) = {-0.069261, 0.746412, 0, 1.0};
Point(26) = {-0.071513, 0.745189, 0, 1.0};
Point(27) = {-0.073103, 0.743892, 0, 1.0};
Point(28) = {-0.073968, 0.742705, 0, 1.0};
Point(29) = {-0.074121, 0.742335, 0, 1.0};
Point(30) = {-0.074209, 0.741986, 0, 1.0};
Point(31) = {-0.074228, 0.741770, 0, 1.0};
Point(32) = {-0.074204, 0.741573, 0, 1.0};
Point(33) = {-0.074126, 0.741384, 0, 1.0};
Point(34) = {-0.073994, 0.741187, 0, 1.0};
Point(35) = {-0.073718, 0.740876, 0, 1.0};
Point(36) = {-0.073358, 0.740549, 0, 1.0};
Point(37) = {-0.071424, 0.739287, 0, 1.0};
Point(38) = {-0.068784, 0.738026, 0, 1.0};
Point(39) = {-0.065372, 0.736727, 0, 1.0};
Point(40) = {-0.061219, 0.735419, 0, 1.0};
Point(41) = {-0.056364, 0.734118, 0, 1.0};
Point(42) = {-0.050854, 0.732838, 0, 1.0};
Point(43) = {-0.044744, 0.731591, 0, 1.0};
Point(44) = {-0.038095, 0.730382, 0, 1.0};
Point(45) = {-0.030984, 0.729214, 0, 1.0};
Point(46) = {-0.023499, 0.728103, 0, 1.0};
Point(47) = {-0.015721, 0.727068, 0, 1.0};
Point(48) = {-0.007728, 0.726121, 0, 1.0};
Point(49) = {0.000389, 0.725265, 0, 1.0};
Point(50) = {0.008529, 0.724526, 0, 1.0};
Point(51) = {0.016618, 0.723938, 0, 1.0};
Point(52) = {0.024602, 0.723529, 0, 1.0};
Point(53) = {0.032462, 0.723311, 0, 1.0};
Point(54) = {0.040208, 0.723213, 0, 1.0};
Point(55) = {0.047755, 0.723092, 0, 1.0};
Point(56) = {0.054934, 0.722861, 0, 1.0};
Point(57) = {0.061578, 0.722483, 0, 1.0};
Point(58) = {0.067523, 0.721952, 0, 1.0};
Point(59) = {0.072613, 0.721282, 0, 1.0};
Point(60) = {0.074317, 0.720992, 0, 1.0};
Point(61) = {-0.074535, -0.722482, 0, 1.0};
Point(62) = {-0.070991, -0.723910, 0, 1.0};
Point(63) = {-0.066571, -0.725615, 0, 1.0};
Point(64) = {-0.061506, -0.727507, 0, 1.0};
Point(65) = {-0.055872, -0.729550, 0, 1.0};
Point(66) = {-0.049749, -0.731706, 0, 1.0};
Point(67) = {-0.043222, -0.733927, 0, 1.0};
Point(68) = {-0.036376, -0.736158, 0, 1.0};
Point(69) = {-0.029294, -0.738329, 0, 1.0};
Point(70) = {-0.022022, -0.740358, 0, 1.0};
Point(71) = {-0.014576, -0.742216, 0, 1.0};
Point(72) = {-0.007017, -0.743909, 0, 1.0};
Point(73) = {0.000574, -0.745420, 0, 1.0};
Point(74) = {0.008127, -0.746734, 0, 1.0};
Point(75) = {0.015566, -0.747840, 0, 1.0};
Point(76) = {0.022818, -0.748727, 0, 1.0};
Point(77) = {0.029810, -0.749386, 0, 1.0};
Point(78) = {0.036472, -0.749812, 0, 1.0};
Point(79) = {0.042742, -0.750000, 0, 1.0};
Point(80) = {0.048558, -0.749950, 0, 1.0};
Point(81) = {0.053869, -0.749664, 0, 1.0};
Point(82) = {0.058630, -0.749151, 0, 1.0};
Point(83) = {0.062803, -0.748424, 0, 1.0};
Point(84) = {0.066353, -0.747504, 0, 1.0};
Point(85) = {0.069261, -0.746412, 0, 1.0};
Point(86) = {0.071513, -0.745189, 0, 1.0};
Point(87) = {0.073103, -0.743892, 0, 1.0};
Point(88) = {0.073968, -0.742705, 0, 1.0};
Point(89) = {0.074121, -0.742335, 0, 1.0};
Point(90) = {0.074209, -0.741986, 0, 1.0};
Point(91) = {0.074228, -0.741770, 0, 1.0};
Point(92) = {0.074204, -0.741573, 0, 1.0};
Point(93) = {0.074126, -0.741384, 0, 1.0};
Point(94) = {0.073994, -0.741187, 0, 1.0};
Point(95) = {0.073718, -0.740876, 0, 1.0};
Point(96) = {0.073358, -0.740549, 0, 1.0};
Point(97) = {0.071424, -0.739287, 0, 1.0};
Point(98) = {0.068784, -0.738026, 0, 1.0};
Point(99) = {0.065372, -0.736727, 0, 1.0};
Point(100) = {0.061219, -0.735419, 0, 1.0};
Point(101) = {0.056364, -0.734118, 0, 1.0};
Point(102) = {0.050854, -0.732838, 0, 1.0};
Point(103) = {0.044744, -0.731591, 0, 1.0};
Point(104) = {0.038095, -0.730382, 0, 1.0};
Point(105) = {0.030984, -0.729214, 0, 1.0};
Point(106) = {0.023499, -0.728103, 0, 1.0};
Point(107) = {0.015721, -0.727068, 0, 1.0};
Point(108) = {0.007728, -0.726121, 0, 1.0};
Point(109) = {-0.000389, -0.725265, 0, 1.0};
Point(110) = {-0.008529, -0.724526, 0, 1.0};
Point(111) = {-0.016618, -0.723938, 0, 1.0};
Point(112) = {-0.024602, -0.723529, 0, 1.0};
Point(113) = {-0.032462, -0.723311, 0, 1.0};
Point(114) = {-0.040208, -0.723213, 0, 1.0};
Point(115) = {-0.047755, -0.723092, 0, 1.0};
Point(116) = {-0.054934, -0.722861, 0, 1.0};
Point(117) = {-0.061578, -0.722483, 0, 1.0};
Point(118) = {-0.067523, -0.721952, 0, 1.0};
Point(119) = {-0.072613, -0.721282, 0, 1.0};
Point(120) = {-0.074317, -0.720992, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {36.00000000, 15.00000000, 0, 1.0};
Point(124) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
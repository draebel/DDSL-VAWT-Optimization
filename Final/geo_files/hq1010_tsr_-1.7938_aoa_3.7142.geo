SetFactory("OpenCASCADE");

Point(1) = {0.074917, 0.734866, 0, 1.0};
Point(2) = {0.072915, 0.735242, 0, 1.0};
Point(3) = {0.068954, 0.735971, 0, 1.0};
Point(4) = {0.064995, 0.736718, 0, 1.0};
Point(5) = {0.061036, 0.737472, 0, 1.0};
Point(6) = {0.057078, 0.738242, 0, 1.0};
Point(7) = {0.053121, 0.739023, 0, 1.0};
Point(8) = {0.045206, 0.740568, 0, 1.0};
Point(9) = {0.037288, 0.742068, 0, 1.0};
Point(10) = {0.029364, 0.743486, 0, 1.0};
Point(11) = {0.021435, 0.744815, 0, 1.0};
Point(12) = {0.013497, 0.746015, 0, 1.0};
Point(13) = {0.005550, 0.747068, 0, 1.0};
Point(14) = {-0.002408, 0.747963, 0, 1.0};
Point(15) = {-0.010375, 0.748703, 0, 1.0};
Point(16) = {-0.014363, 0.749018, 0, 1.0};
Point(17) = {-0.018353, 0.749290, 0, 1.0};
Point(18) = {-0.022346, 0.749516, 0, 1.0};
Point(19) = {-0.026342, 0.749692, 0, 1.0};
Point(20) = {-0.030342, 0.749823, 0, 1.0};
Point(21) = {-0.034343, 0.749919, 0, 1.0};
Point(22) = {-0.038347, 0.749982, 0, 1.0};
Point(23) = {-0.042354, 0.750000, 0, 1.0};
Point(24) = {-0.046365, 0.749951, 0, 1.0};
Point(25) = {-0.050382, 0.749808, 0, 1.0};
Point(26) = {-0.054407, 0.749548, 0, 1.0};
Point(27) = {-0.058440, 0.749154, 0, 1.0};
Point(28) = {-0.062484, 0.748594, 0, 1.0};
Point(29) = {-0.066544, 0.747793, 0, 1.0};
Point(30) = {-0.068582, 0.747260, 0, 1.0};
Point(31) = {-0.070631, 0.746573, 0, 1.0};
Point(32) = {-0.071661, 0.746142, 0, 1.0};
Point(33) = {-0.072697, 0.745612, 0, 1.0};
Point(34) = {-0.073323, 0.745228, 0, 1.0};
Point(35) = {-0.073955, 0.744751, 0, 1.0};
Point(36) = {-0.074384, 0.744319, 0, 1.0};
Point(37) = {-0.074842, 0.743435, 0, 1.0};
Point(38) = {-0.074491, 0.742674, 0, 1.0};
Point(39) = {-0.074115, 0.742296, 0, 1.0};
Point(40) = {-0.073543, 0.741848, 0, 1.0};
Point(41) = {-0.072965, 0.741480, 0, 1.0};
Point(42) = {-0.071997, 0.740965, 0, 1.0};
Point(43) = {-0.071022, 0.740549, 0, 1.0};
Point(44) = {-0.069063, 0.739858, 0, 1.0};
Point(45) = {-0.067096, 0.739289, 0, 1.0};
Point(46) = {-0.063149, 0.738344, 0, 1.0};
Point(47) = {-0.059192, 0.737564, 0, 1.0};
Point(48) = {-0.055228, 0.736893, 0, 1.0};
Point(49) = {-0.051258, 0.736310, 0, 1.0};
Point(50) = {-0.047283, 0.735802, 0, 1.0};
Point(51) = {-0.043304, 0.735356, 0, 1.0};
Point(52) = {-0.039323, 0.734955, 0, 1.0};
Point(53) = {-0.035339, 0.734587, 0, 1.0};
Point(54) = {-0.031353, 0.734242, 0, 1.0};
Point(55) = {-0.027366, 0.733922, 0, 1.0};
Point(56) = {-0.023377, 0.733636, 0, 1.0};
Point(57) = {-0.019385, 0.733390, 0, 1.0};
Point(58) = {-0.015391, 0.733183, 0, 1.0};
Point(59) = {-0.011394, 0.733011, 0, 1.0};
Point(60) = {-0.003395, 0.732759, 0, 1.0};
Point(61) = {0.004612, 0.732629, 0, 1.0};
Point(62) = {0.012627, 0.732620, 0, 1.0};
Point(63) = {0.020649, 0.732718, 0, 1.0};
Point(64) = {0.028676, 0.732893, 0, 1.0};
Point(65) = {0.036705, 0.733099, 0, 1.0};
Point(66) = {0.044735, 0.733312, 0, 1.0};
Point(67) = {0.052762, 0.733484, 0, 1.0};
Point(68) = {0.056773, 0.733539, 0, 1.0};
Point(69) = {0.060782, 0.733563, 0, 1.0};
Point(70) = {0.064789, 0.733545, 0, 1.0};
Point(71) = {0.068794, 0.733501, 0, 1.0};
Point(72) = {0.072796, 0.733414, 0, 1.0};
Point(73) = {0.074820, 0.733373, 0, 1.0};
Point(74) = {-0.074917, -0.734866, 0, 1.0};
Point(75) = {-0.072915, -0.735242, 0, 1.0};
Point(76) = {-0.068954, -0.735971, 0, 1.0};
Point(77) = {-0.064995, -0.736718, 0, 1.0};
Point(78) = {-0.061036, -0.737472, 0, 1.0};
Point(79) = {-0.057078, -0.738242, 0, 1.0};
Point(80) = {-0.053121, -0.739023, 0, 1.0};
Point(81) = {-0.045206, -0.740568, 0, 1.0};
Point(82) = {-0.037288, -0.742068, 0, 1.0};
Point(83) = {-0.029364, -0.743486, 0, 1.0};
Point(84) = {-0.021435, -0.744815, 0, 1.0};
Point(85) = {-0.013497, -0.746015, 0, 1.0};
Point(86) = {-0.005550, -0.747068, 0, 1.0};
Point(87) = {0.002408, -0.747963, 0, 1.0};
Point(88) = {0.010375, -0.748703, 0, 1.0};
Point(89) = {0.014363, -0.749018, 0, 1.0};
Point(90) = {0.018353, -0.749290, 0, 1.0};
Point(91) = {0.022346, -0.749516, 0, 1.0};
Point(92) = {0.026342, -0.749692, 0, 1.0};
Point(93) = {0.030342, -0.749823, 0, 1.0};
Point(94) = {0.034343, -0.749919, 0, 1.0};
Point(95) = {0.038347, -0.749982, 0, 1.0};
Point(96) = {0.042354, -0.750000, 0, 1.0};
Point(97) = {0.046365, -0.749951, 0, 1.0};
Point(98) = {0.050382, -0.749808, 0, 1.0};
Point(99) = {0.054407, -0.749548, 0, 1.0};
Point(100) = {0.058440, -0.749154, 0, 1.0};
Point(101) = {0.062484, -0.748594, 0, 1.0};
Point(102) = {0.066544, -0.747793, 0, 1.0};
Point(103) = {0.068582, -0.747260, 0, 1.0};
Point(104) = {0.070631, -0.746573, 0, 1.0};
Point(105) = {0.071661, -0.746142, 0, 1.0};
Point(106) = {0.072697, -0.745612, 0, 1.0};
Point(107) = {0.073323, -0.745228, 0, 1.0};
Point(108) = {0.073955, -0.744751, 0, 1.0};
Point(109) = {0.074384, -0.744319, 0, 1.0};
Point(110) = {0.074842, -0.743435, 0, 1.0};
Point(111) = {0.074491, -0.742674, 0, 1.0};
Point(112) = {0.074115, -0.742296, 0, 1.0};
Point(113) = {0.073543, -0.741848, 0, 1.0};
Point(114) = {0.072965, -0.741480, 0, 1.0};
Point(115) = {0.071997, -0.740965, 0, 1.0};
Point(116) = {0.071022, -0.740549, 0, 1.0};
Point(117) = {0.069063, -0.739858, 0, 1.0};
Point(118) = {0.067096, -0.739289, 0, 1.0};
Point(119) = {0.063149, -0.738344, 0, 1.0};
Point(120) = {0.059192, -0.737564, 0, 1.0};
Point(121) = {0.055228, -0.736893, 0, 1.0};
Point(122) = {0.051258, -0.736310, 0, 1.0};
Point(123) = {0.047283, -0.735802, 0, 1.0};
Point(124) = {0.043304, -0.735356, 0, 1.0};
Point(125) = {0.039323, -0.734955, 0, 1.0};
Point(126) = {0.035339, -0.734587, 0, 1.0};
Point(127) = {0.031353, -0.734242, 0, 1.0};
Point(128) = {0.027366, -0.733922, 0, 1.0};
Point(129) = {0.023377, -0.733636, 0, 1.0};
Point(130) = {0.019385, -0.733390, 0, 1.0};
Point(131) = {0.015391, -0.733183, 0, 1.0};
Point(132) = {0.011394, -0.733011, 0, 1.0};
Point(133) = {0.003395, -0.732759, 0, 1.0};
Point(134) = {-0.004612, -0.732629, 0, 1.0};
Point(135) = {-0.012627, -0.732620, 0, 1.0};
Point(136) = {-0.020649, -0.732718, 0, 1.0};
Point(137) = {-0.028676, -0.732893, 0, 1.0};
Point(138) = {-0.036705, -0.733099, 0, 1.0};
Point(139) = {-0.044735, -0.733312, 0, 1.0};
Point(140) = {-0.052762, -0.733484, 0, 1.0};
Point(141) = {-0.056773, -0.733539, 0, 1.0};
Point(142) = {-0.060782, -0.733563, 0, 1.0};
Point(143) = {-0.064789, -0.733545, 0, 1.0};
Point(144) = {-0.068794, -0.733501, 0, 1.0};
Point(145) = {-0.072796, -0.733414, 0, 1.0};
Point(146) = {-0.074820, -0.733373, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {36.00000000, 15.00000000, 0, 1.0};
Point(150) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
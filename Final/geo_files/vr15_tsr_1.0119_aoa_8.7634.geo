SetFactory("OpenCASCADE");

Point(1) = {0.073848, 0.732061, 0, 1.0};
Point(2) = {0.073357, 0.732153, 0, 1.0};
Point(3) = {0.072867, 0.732259, 0, 1.0};
Point(4) = {0.071889, 0.732477, 0, 1.0};
Point(5) = {0.070912, 0.732705, 0, 1.0};
Point(6) = {0.069450, 0.733066, 0, 1.0};
Point(7) = {0.067507, 0.733587, 0, 1.0};
Point(8) = {0.065081, 0.734261, 0, 1.0};
Point(9) = {0.062171, 0.735070, 0, 1.0};
Point(10) = {0.058775, 0.736018, 0, 1.0};
Point(11) = {0.055379, 0.736958, 0, 1.0};
Point(12) = {0.051493, 0.738002, 0, 1.0};
Point(13) = {0.047605, 0.739037, 0, 1.0};
Point(14) = {0.043715, 0.740057, 0, 1.0};
Point(15) = {0.039819, 0.741037, 0, 1.0};
Point(16) = {0.034940, 0.742204, 0, 1.0};
Point(17) = {0.030047, 0.743286, 0, 1.0};
Point(18) = {0.025145, 0.744305, 0, 1.0};
Point(19) = {0.020232, 0.745248, 0, 1.0};
Point(20) = {0.015312, 0.746150, 0, 1.0};
Point(21) = {0.010381, 0.746984, 0, 1.0};
Point(22) = {0.005442, 0.747762, 0, 1.0};
Point(23) = {0.000495, 0.748490, 0, 1.0};
Point(24) = {-0.004461, 0.749156, 0, 1.0};
Point(25) = {-0.009437, 0.749699, 0, 1.0};
Point(26) = {-0.013041, 0.749946, 0, 1.0};
Point(27) = {-0.015663, 0.750000, 0, 1.0};
Point(28) = {-0.017647, 0.749934, 0, 1.0};
Point(29) = {-0.019188, 0.749780, 0, 1.0};
Point(30) = {-0.020422, 0.749588, 0, 1.0};
Point(31) = {-0.021419, 0.749389, 0, 1.0};
Point(32) = {-0.022216, 0.749170, 0, 1.0};
Point(33) = {-0.022846, 0.748958, 0, 1.0};
Point(34) = {-0.023326, 0.748764, 0, 1.0};
Point(35) = {-0.023665, 0.748603, 0, 1.0};
Point(36) = {-0.023891, 0.748481, 0, 1.0};
Point(37) = {-0.024115, 0.748343, 0, 1.0};
Point(38) = {-0.024319, 0.748197, 0, 1.0};
Point(39) = {-0.024529, 0.748017, 0, 1.0};
Point(40) = {-0.024705, 0.747827, 0, 1.0};
Point(41) = {-0.024855, 0.747606, 0, 1.0};
Point(42) = {-0.024963, 0.747356, 0, 1.0};
Point(43) = {-0.025000, 0.747194, 0, 1.0};
Point(44) = {-0.024980, 0.746963, 0, 1.0};
Point(45) = {-0.024867, 0.746745, 0, 1.0};
Point(46) = {-0.024697, 0.746532, 0, 1.0};
Point(47) = {-0.024502, 0.746352, 0, 1.0};
Point(48) = {-0.024285, 0.746188, 0, 1.0};
Point(49) = {-0.024063, 0.746052, 0, 1.0};
Point(50) = {-0.023721, 0.745876, 0, 1.0};
Point(51) = {-0.023253, 0.745695, 0, 1.0};
Point(52) = {-0.022619, 0.745478, 0, 1.0};
Point(53) = {-0.021830, 0.745243, 0, 1.0};
Point(54) = {-0.020842, 0.744968, 0, 1.0};
Point(55) = {-0.019636, 0.744645, 0, 1.0};
Point(56) = {-0.018121, 0.744266, 0, 1.0};
Point(57) = {-0.016171, 0.743819, 0, 1.0};
Point(58) = {-0.013615, 0.743266, 0, 1.0};
Point(59) = {-0.010526, 0.742635, 0, 1.0};
Point(60) = {-0.005612, 0.741691, 0, 1.0};
Point(61) = {-0.000691, 0.740796, 0, 1.0};
Point(62) = {0.004237, 0.739945, 0, 1.0};
Point(63) = {0.009169, 0.739121, 0, 1.0};
Point(64) = {0.014106, 0.738332, 0, 1.0};
Point(65) = {0.019049, 0.737579, 0, 1.0};
Point(66) = {0.023996, 0.736849, 0, 1.0};
Point(67) = {0.028946, 0.736145, 0, 1.0};
Point(68) = {0.033901, 0.735466, 0, 1.0};
Point(69) = {0.038861, 0.734821, 0, 1.0};
Point(70) = {0.042832, 0.734330, 0, 1.0};
Point(71) = {0.046807, 0.733863, 0, 1.0};
Point(72) = {0.050787, 0.733424, 0, 1.0};
Point(73) = {0.054770, 0.733010, 0, 1.0};
Point(74) = {0.058259, 0.732672, 0, 1.0};
Point(75) = {0.061753, 0.732358, 0, 1.0};
Point(76) = {0.064755, 0.732145, 0, 1.0};
Point(77) = {0.067260, 0.731984, 0, 1.0};
Point(78) = {0.069265, 0.731863, 0, 1.0};
Point(79) = {0.070775, 0.731812, 0, 1.0};
Point(80) = {0.071784, 0.731798, 0, 1.0};
Point(81) = {0.072795, 0.731794, 0, 1.0};
Point(82) = {0.073304, 0.731809, 0, 1.0};
Point(83) = {0.073812, 0.731825, 0, 1.0};
Point(84) = {-0.073848, -0.732061, 0, 1.0};
Point(85) = {-0.073357, -0.732153, 0, 1.0};
Point(86) = {-0.072867, -0.732259, 0, 1.0};
Point(87) = {-0.071889, -0.732477, 0, 1.0};
Point(88) = {-0.070912, -0.732705, 0, 1.0};
Point(89) = {-0.069450, -0.733066, 0, 1.0};
Point(90) = {-0.067507, -0.733587, 0, 1.0};
Point(91) = {-0.065081, -0.734261, 0, 1.0};
Point(92) = {-0.062171, -0.735070, 0, 1.0};
Point(93) = {-0.058775, -0.736018, 0, 1.0};
Point(94) = {-0.055379, -0.736958, 0, 1.0};
Point(95) = {-0.051493, -0.738002, 0, 1.0};
Point(96) = {-0.047605, -0.739037, 0, 1.0};
Point(97) = {-0.043715, -0.740057, 0, 1.0};
Point(98) = {-0.039819, -0.741037, 0, 1.0};
Point(99) = {-0.034940, -0.742204, 0, 1.0};
Point(100) = {-0.030047, -0.743286, 0, 1.0};
Point(101) = {-0.025145, -0.744305, 0, 1.0};
Point(102) = {-0.020232, -0.745248, 0, 1.0};
Point(103) = {-0.015312, -0.746150, 0, 1.0};
Point(104) = {-0.010381, -0.746984, 0, 1.0};
Point(105) = {-0.005442, -0.747762, 0, 1.0};
Point(106) = {-0.000495, -0.748490, 0, 1.0};
Point(107) = {0.004461, -0.749156, 0, 1.0};
Point(108) = {0.009437, -0.749699, 0, 1.0};
Point(109) = {0.013041, -0.749946, 0, 1.0};
Point(110) = {0.015663, -0.750000, 0, 1.0};
Point(111) = {0.017647, -0.749934, 0, 1.0};
Point(112) = {0.019188, -0.749780, 0, 1.0};
Point(113) = {0.020422, -0.749588, 0, 1.0};
Point(114) = {0.021419, -0.749389, 0, 1.0};
Point(115) = {0.022216, -0.749170, 0, 1.0};
Point(116) = {0.022846, -0.748958, 0, 1.0};
Point(117) = {0.023326, -0.748764, 0, 1.0};
Point(118) = {0.023665, -0.748603, 0, 1.0};
Point(119) = {0.023891, -0.748481, 0, 1.0};
Point(120) = {0.024115, -0.748343, 0, 1.0};
Point(121) = {0.024319, -0.748197, 0, 1.0};
Point(122) = {0.024529, -0.748017, 0, 1.0};
Point(123) = {0.024705, -0.747827, 0, 1.0};
Point(124) = {0.024855, -0.747606, 0, 1.0};
Point(125) = {0.024963, -0.747356, 0, 1.0};
Point(126) = {0.025000, -0.747194, 0, 1.0};
Point(127) = {0.024980, -0.746963, 0, 1.0};
Point(128) = {0.024867, -0.746745, 0, 1.0};
Point(129) = {0.024697, -0.746532, 0, 1.0};
Point(130) = {0.024502, -0.746352, 0, 1.0};
Point(131) = {0.024285, -0.746188, 0, 1.0};
Point(132) = {0.024063, -0.746052, 0, 1.0};
Point(133) = {0.023721, -0.745876, 0, 1.0};
Point(134) = {0.023253, -0.745695, 0, 1.0};
Point(135) = {0.022619, -0.745478, 0, 1.0};
Point(136) = {0.021830, -0.745243, 0, 1.0};
Point(137) = {0.020842, -0.744968, 0, 1.0};
Point(138) = {0.019636, -0.744645, 0, 1.0};
Point(139) = {0.018121, -0.744266, 0, 1.0};
Point(140) = {0.016171, -0.743819, 0, 1.0};
Point(141) = {0.013615, -0.743266, 0, 1.0};
Point(142) = {0.010526, -0.742635, 0, 1.0};
Point(143) = {0.005612, -0.741691, 0, 1.0};
Point(144) = {0.000691, -0.740796, 0, 1.0};
Point(145) = {-0.004237, -0.739945, 0, 1.0};
Point(146) = {-0.009169, -0.739121, 0, 1.0};
Point(147) = {-0.014106, -0.738332, 0, 1.0};
Point(148) = {-0.019049, -0.737579, 0, 1.0};
Point(149) = {-0.023996, -0.736849, 0, 1.0};
Point(150) = {-0.028946, -0.736145, 0, 1.0};
Point(151) = {-0.033901, -0.735466, 0, 1.0};
Point(152) = {-0.038861, -0.734821, 0, 1.0};
Point(153) = {-0.042832, -0.734330, 0, 1.0};
Point(154) = {-0.046807, -0.733863, 0, 1.0};
Point(155) = {-0.050787, -0.733424, 0, 1.0};
Point(156) = {-0.054770, -0.733010, 0, 1.0};
Point(157) = {-0.058259, -0.732672, 0, 1.0};
Point(158) = {-0.061753, -0.732358, 0, 1.0};
Point(159) = {-0.064755, -0.732145, 0, 1.0};
Point(160) = {-0.067260, -0.731984, 0, 1.0};
Point(161) = {-0.069265, -0.731863, 0, 1.0};
Point(162) = {-0.070775, -0.731812, 0, 1.0};
Point(163) = {-0.071784, -0.731798, 0, 1.0};
Point(164) = {-0.072795, -0.731794, 0, 1.0};
Point(165) = {-0.073304, -0.731809, 0, 1.0};
Point(166) = {-0.073812, -0.731825, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:61};
Spline(3) = {61:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:144};
Spline(7) = {144:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
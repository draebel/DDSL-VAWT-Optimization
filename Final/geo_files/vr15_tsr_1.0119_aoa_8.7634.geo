SetFactory("OpenCASCADE");

Point(1) = {0.147697, 0.714122, 0, 1.0};
Point(2) = {0.146713, 0.714306, 0, 1.0};
Point(3) = {0.145734, 0.714517, 0, 1.0};
Point(4) = {0.143778, 0.714954, 0, 1.0};
Point(5) = {0.141825, 0.715410, 0, 1.0};
Point(6) = {0.138900, 0.716132, 0, 1.0};
Point(7) = {0.135014, 0.717175, 0, 1.0};
Point(8) = {0.130163, 0.718523, 0, 1.0};
Point(9) = {0.124341, 0.720140, 0, 1.0};
Point(10) = {0.117551, 0.722037, 0, 1.0};
Point(11) = {0.110758, 0.723916, 0, 1.0};
Point(12) = {0.102985, 0.726003, 0, 1.0};
Point(13) = {0.095210, 0.728073, 0, 1.0};
Point(14) = {0.087430, 0.730113, 0, 1.0};
Point(15) = {0.079637, 0.732075, 0, 1.0};
Point(16) = {0.069879, 0.734408, 0, 1.0};
Point(17) = {0.060095, 0.736573, 0, 1.0};
Point(18) = {0.050291, 0.738609, 0, 1.0};
Point(19) = {0.040463, 0.740496, 0, 1.0};
Point(20) = {0.030623, 0.742300, 0, 1.0};
Point(21) = {0.020762, 0.743967, 0, 1.0};
Point(22) = {0.010884, 0.745525, 0, 1.0};
Point(23) = {0.000990, 0.746980, 0, 1.0};
Point(24) = {-0.008923, 0.748312, 0, 1.0};
Point(25) = {-0.018873, 0.749397, 0, 1.0};
Point(26) = {-0.026082, 0.749892, 0, 1.0};
Point(27) = {-0.031327, 0.750000, 0, 1.0};
Point(28) = {-0.035293, 0.749869, 0, 1.0};
Point(29) = {-0.038376, 0.749559, 0, 1.0};
Point(30) = {-0.040844, 0.749176, 0, 1.0};
Point(31) = {-0.042838, 0.748777, 0, 1.0};
Point(32) = {-0.044433, 0.748341, 0, 1.0};
Point(33) = {-0.045692, 0.747916, 0, 1.0};
Point(34) = {-0.046652, 0.747528, 0, 1.0};
Point(35) = {-0.047329, 0.747207, 0, 1.0};
Point(36) = {-0.047782, 0.746962, 0, 1.0};
Point(37) = {-0.048229, 0.746686, 0, 1.0};
Point(38) = {-0.048638, 0.746394, 0, 1.0};
Point(39) = {-0.049058, 0.746035, 0, 1.0};
Point(40) = {-0.049410, 0.745654, 0, 1.0};
Point(41) = {-0.049711, 0.745212, 0, 1.0};
Point(42) = {-0.049926, 0.744713, 0, 1.0};
Point(43) = {-0.050000, 0.744387, 0, 1.0};
Point(44) = {-0.049960, 0.743926, 0, 1.0};
Point(45) = {-0.049734, 0.743490, 0, 1.0};
Point(46) = {-0.049395, 0.743064, 0, 1.0};
Point(47) = {-0.049005, 0.742704, 0, 1.0};
Point(48) = {-0.048570, 0.742376, 0, 1.0};
Point(49) = {-0.048126, 0.742103, 0, 1.0};
Point(50) = {-0.047442, 0.741752, 0, 1.0};
Point(51) = {-0.046506, 0.741389, 0, 1.0};
Point(52) = {-0.045237, 0.740957, 0, 1.0};
Point(53) = {-0.043660, 0.740486, 0, 1.0};
Point(54) = {-0.041683, 0.739935, 0, 1.0};
Point(55) = {-0.039271, 0.739290, 0, 1.0};
Point(56) = {-0.036242, 0.738531, 0, 1.0};
Point(57) = {-0.032342, 0.737639, 0, 1.0};
Point(58) = {-0.027231, 0.736532, 0, 1.0};
Point(59) = {-0.021051, 0.735270, 0, 1.0};
Point(60) = {-0.011224, 0.733381, 0, 1.0};
Point(61) = {-0.001382, 0.731591, 0, 1.0};
Point(62) = {0.008474, 0.729889, 0, 1.0};
Point(63) = {0.018338, 0.728241, 0, 1.0};
Point(64) = {0.028213, 0.726664, 0, 1.0};
Point(65) = {0.038099, 0.725159, 0, 1.0};
Point(66) = {0.047992, 0.723697, 0, 1.0};
Point(67) = {0.057893, 0.722290, 0, 1.0};
Point(68) = {0.067802, 0.720932, 0, 1.0};
Point(69) = {0.077721, 0.719643, 0, 1.0};
Point(70) = {0.085664, 0.718660, 0, 1.0};
Point(71) = {0.093615, 0.717726, 0, 1.0};
Point(72) = {0.101574, 0.716849, 0, 1.0};
Point(73) = {0.109541, 0.716020, 0, 1.0};
Point(74) = {0.116519, 0.715343, 0, 1.0};
Point(75) = {0.123505, 0.714716, 0, 1.0};
Point(76) = {0.129510, 0.714289, 0, 1.0};
Point(77) = {0.134520, 0.713969, 0, 1.0};
Point(78) = {0.138530, 0.713727, 0, 1.0};
Point(79) = {0.141549, 0.713623, 0, 1.0};
Point(80) = {0.143569, 0.713596, 0, 1.0};
Point(81) = {0.145591, 0.713587, 0, 1.0};
Point(82) = {0.146607, 0.713618, 0, 1.0};
Point(83) = {0.147624, 0.713650, 0, 1.0};
Point(84) = {-0.147697, -0.714122, 0, 1.0};
Point(85) = {-0.146713, -0.714306, 0, 1.0};
Point(86) = {-0.145734, -0.714517, 0, 1.0};
Point(87) = {-0.143778, -0.714954, 0, 1.0};
Point(88) = {-0.141825, -0.715410, 0, 1.0};
Point(89) = {-0.138900, -0.716132, 0, 1.0};
Point(90) = {-0.135014, -0.717175, 0, 1.0};
Point(91) = {-0.130163, -0.718523, 0, 1.0};
Point(92) = {-0.124341, -0.720140, 0, 1.0};
Point(93) = {-0.117551, -0.722037, 0, 1.0};
Point(94) = {-0.110758, -0.723916, 0, 1.0};
Point(95) = {-0.102985, -0.726003, 0, 1.0};
Point(96) = {-0.095210, -0.728073, 0, 1.0};
Point(97) = {-0.087430, -0.730113, 0, 1.0};
Point(98) = {-0.079637, -0.732075, 0, 1.0};
Point(99) = {-0.069879, -0.734408, 0, 1.0};
Point(100) = {-0.060095, -0.736573, 0, 1.0};
Point(101) = {-0.050291, -0.738609, 0, 1.0};
Point(102) = {-0.040463, -0.740496, 0, 1.0};
Point(103) = {-0.030623, -0.742300, 0, 1.0};
Point(104) = {-0.020762, -0.743967, 0, 1.0};
Point(105) = {-0.010884, -0.745525, 0, 1.0};
Point(106) = {-0.000990, -0.746980, 0, 1.0};
Point(107) = {0.008923, -0.748312, 0, 1.0};
Point(108) = {0.018873, -0.749397, 0, 1.0};
Point(109) = {0.026082, -0.749892, 0, 1.0};
Point(110) = {0.031327, -0.750000, 0, 1.0};
Point(111) = {0.035293, -0.749869, 0, 1.0};
Point(112) = {0.038376, -0.749559, 0, 1.0};
Point(113) = {0.040844, -0.749176, 0, 1.0};
Point(114) = {0.042838, -0.748777, 0, 1.0};
Point(115) = {0.044433, -0.748341, 0, 1.0};
Point(116) = {0.045692, -0.747916, 0, 1.0};
Point(117) = {0.046652, -0.747528, 0, 1.0};
Point(118) = {0.047329, -0.747207, 0, 1.0};
Point(119) = {0.047782, -0.746962, 0, 1.0};
Point(120) = {0.048229, -0.746686, 0, 1.0};
Point(121) = {0.048638, -0.746394, 0, 1.0};
Point(122) = {0.049058, -0.746035, 0, 1.0};
Point(123) = {0.049410, -0.745654, 0, 1.0};
Point(124) = {0.049711, -0.745212, 0, 1.0};
Point(125) = {0.049926, -0.744713, 0, 1.0};
Point(126) = {0.050000, -0.744387, 0, 1.0};
Point(127) = {0.049960, -0.743926, 0, 1.0};
Point(128) = {0.049734, -0.743490, 0, 1.0};
Point(129) = {0.049395, -0.743064, 0, 1.0};
Point(130) = {0.049005, -0.742704, 0, 1.0};
Point(131) = {0.048570, -0.742376, 0, 1.0};
Point(132) = {0.048126, -0.742103, 0, 1.0};
Point(133) = {0.047442, -0.741752, 0, 1.0};
Point(134) = {0.046506, -0.741389, 0, 1.0};
Point(135) = {0.045237, -0.740957, 0, 1.0};
Point(136) = {0.043660, -0.740486, 0, 1.0};
Point(137) = {0.041683, -0.739935, 0, 1.0};
Point(138) = {0.039271, -0.739290, 0, 1.0};
Point(139) = {0.036242, -0.738531, 0, 1.0};
Point(140) = {0.032342, -0.737639, 0, 1.0};
Point(141) = {0.027231, -0.736532, 0, 1.0};
Point(142) = {0.021051, -0.735270, 0, 1.0};
Point(143) = {0.011224, -0.733381, 0, 1.0};
Point(144) = {0.001382, -0.731591, 0, 1.0};
Point(145) = {-0.008474, -0.729889, 0, 1.0};
Point(146) = {-0.018338, -0.728241, 0, 1.0};
Point(147) = {-0.028213, -0.726664, 0, 1.0};
Point(148) = {-0.038099, -0.725159, 0, 1.0};
Point(149) = {-0.047992, -0.723697, 0, 1.0};
Point(150) = {-0.057893, -0.722290, 0, 1.0};
Point(151) = {-0.067802, -0.720932, 0, 1.0};
Point(152) = {-0.077721, -0.719643, 0, 1.0};
Point(153) = {-0.085664, -0.718660, 0, 1.0};
Point(154) = {-0.093615, -0.717726, 0, 1.0};
Point(155) = {-0.101574, -0.716849, 0, 1.0};
Point(156) = {-0.109541, -0.716020, 0, 1.0};
Point(157) = {-0.116519, -0.715343, 0, 1.0};
Point(158) = {-0.123505, -0.714716, 0, 1.0};
Point(159) = {-0.129510, -0.714289, 0, 1.0};
Point(160) = {-0.134520, -0.713969, 0, 1.0};
Point(161) = {-0.138530, -0.713727, 0, 1.0};
Point(162) = {-0.141549, -0.713623, 0, 1.0};
Point(163) = {-0.143569, -0.713596, 0, 1.0};
Point(164) = {-0.145591, -0.713587, 0, 1.0};
Point(165) = {-0.146607, -0.713618, 0, 1.0};
Point(166) = {-0.147624, -0.713650, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:61};
Spline(3) = {61:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:144};
Spline(7) = {144:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
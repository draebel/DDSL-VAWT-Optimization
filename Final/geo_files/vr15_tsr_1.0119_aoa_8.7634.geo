SetFactory("OpenCASCADE");

Point(1) = {0.111210, 0.723091, 0, 1.0};
Point(2) = {0.110473, 0.723229, 0, 1.0};
Point(3) = {0.109738, 0.723388, 0, 1.0};
Point(4) = {0.108271, 0.723715, 0, 1.0};
Point(5) = {0.106806, 0.724058, 0, 1.0};
Point(6) = {0.104613, 0.724599, 0, 1.0};
Point(7) = {0.101698, 0.725381, 0, 1.0};
Point(8) = {0.098060, 0.726392, 0, 1.0};
Point(9) = {0.093694, 0.727605, 0, 1.0};
Point(10) = {0.088601, 0.729028, 0, 1.0};
Point(11) = {0.083506, 0.730437, 0, 1.0};
Point(12) = {0.077677, 0.732002, 0, 1.0};
Point(13) = {0.071845, 0.733555, 0, 1.0};
Point(14) = {0.066010, 0.735085, 0, 1.0};
Point(15) = {0.060166, 0.736556, 0, 1.0};
Point(16) = {0.052847, 0.738306, 0, 1.0};
Point(17) = {0.045509, 0.739929, 0, 1.0};
Point(18) = {0.038156, 0.741457, 0, 1.0};
Point(19) = {0.030785, 0.742872, 0, 1.0};
Point(20) = {0.023405, 0.744225, 0, 1.0};
Point(21) = {0.016009, 0.745475, 0, 1.0};
Point(22) = {0.008601, 0.746644, 0, 1.0};
Point(23) = {0.001180, 0.747735, 0, 1.0};
Point(24) = {-0.006254, 0.748734, 0, 1.0};
Point(25) = {-0.013717, 0.749548, 0, 1.0};
Point(26) = {-0.019124, 0.749919, 0, 1.0};
Point(27) = {-0.023057, 0.750000, 0, 1.0};
Point(28) = {-0.026032, 0.749902, 0, 1.0};
Point(29) = {-0.028344, 0.749670, 0, 1.0};
Point(30) = {-0.030195, 0.749382, 0, 1.0};
Point(31) = {-0.031690, 0.749083, 0, 1.0};
Point(32) = {-0.032887, 0.748756, 0, 1.0};
Point(33) = {-0.033831, 0.748437, 0, 1.0};
Point(34) = {-0.034552, 0.748146, 0, 1.0};
Point(35) = {-0.035059, 0.747905, 0, 1.0};
Point(36) = {-0.035399, 0.747721, 0, 1.0};
Point(37) = {-0.035734, 0.747515, 0, 1.0};
Point(38) = {-0.036041, 0.747296, 0, 1.0};
Point(39) = {-0.036356, 0.747026, 0, 1.0};
Point(40) = {-0.036620, 0.746740, 0, 1.0};
Point(41) = {-0.036845, 0.746409, 0, 1.0};
Point(42) = {-0.037006, 0.746034, 0, 1.0};
Point(43) = {-0.037062, 0.745791, 0, 1.0};
Point(44) = {-0.037032, 0.745444, 0, 1.0};
Point(45) = {-0.036862, 0.745117, 0, 1.0};
Point(46) = {-0.036608, 0.744798, 0, 1.0};
Point(47) = {-0.036316, 0.744528, 0, 1.0};
Point(48) = {-0.035990, 0.744282, 0, 1.0};
Point(49) = {-0.035657, 0.744078, 0, 1.0};
Point(50) = {-0.035143, 0.743814, 0, 1.0};
Point(51) = {-0.034442, 0.743542, 0, 1.0};
Point(52) = {-0.033490, 0.743218, 0, 1.0};
Point(53) = {-0.032308, 0.742864, 0, 1.0};
Point(54) = {-0.030825, 0.742451, 0, 1.0};
Point(55) = {-0.029016, 0.741968, 0, 1.0};
Point(56) = {-0.026743, 0.741399, 0, 1.0};
Point(57) = {-0.023819, 0.740729, 0, 1.0};
Point(58) = {-0.019985, 0.739899, 0, 1.0};
Point(59) = {-0.015351, 0.738952, 0, 1.0};
Point(60) = {-0.007980, 0.737536, 0, 1.0};
Point(61) = {-0.000599, 0.736193, 0, 1.0};
Point(62) = {0.006793, 0.734917, 0, 1.0};
Point(63) = {0.014191, 0.733681, 0, 1.0};
Point(64) = {0.021597, 0.732498, 0, 1.0};
Point(65) = {0.029012, 0.731369, 0, 1.0};
Point(66) = {0.036432, 0.730273, 0, 1.0};
Point(67) = {0.043857, 0.729217, 0, 1.0};
Point(68) = {0.051289, 0.728199, 0, 1.0};
Point(69) = {0.058729, 0.727232, 0, 1.0};
Point(70) = {0.064686, 0.726495, 0, 1.0};
Point(71) = {0.070649, 0.725794, 0, 1.0};
Point(72) = {0.076618, 0.725137, 0, 1.0};
Point(73) = {0.082593, 0.724515, 0, 1.0};
Point(74) = {0.087827, 0.724008, 0, 1.0};
Point(75) = {0.093067, 0.723537, 0, 1.0};
Point(76) = {0.097570, 0.723217, 0, 1.0};
Point(77) = {0.101328, 0.722977, 0, 1.0};
Point(78) = {0.104335, 0.722795, 0, 1.0};
Point(79) = {0.106600, 0.722718, 0, 1.0};
Point(80) = {0.108114, 0.722697, 0, 1.0};
Point(81) = {0.109631, 0.722690, 0, 1.0};
Point(82) = {0.110393, 0.722714, 0, 1.0};
Point(83) = {0.111156, 0.722737, 0, 1.0};
Point(84) = {-0.111210, -0.723091, 0, 1.0};
Point(85) = {-0.110473, -0.723229, 0, 1.0};
Point(86) = {-0.109738, -0.723388, 0, 1.0};
Point(87) = {-0.108271, -0.723715, 0, 1.0};
Point(88) = {-0.106806, -0.724058, 0, 1.0};
Point(89) = {-0.104613, -0.724599, 0, 1.0};
Point(90) = {-0.101698, -0.725381, 0, 1.0};
Point(91) = {-0.098060, -0.726392, 0, 1.0};
Point(92) = {-0.093694, -0.727605, 0, 1.0};
Point(93) = {-0.088601, -0.729028, 0, 1.0};
Point(94) = {-0.083506, -0.730437, 0, 1.0};
Point(95) = {-0.077677, -0.732002, 0, 1.0};
Point(96) = {-0.071845, -0.733555, 0, 1.0};
Point(97) = {-0.066010, -0.735085, 0, 1.0};
Point(98) = {-0.060166, -0.736556, 0, 1.0};
Point(99) = {-0.052847, -0.738306, 0, 1.0};
Point(100) = {-0.045509, -0.739929, 0, 1.0};
Point(101) = {-0.038156, -0.741457, 0, 1.0};
Point(102) = {-0.030785, -0.742872, 0, 1.0};
Point(103) = {-0.023405, -0.744225, 0, 1.0};
Point(104) = {-0.016009, -0.745475, 0, 1.0};
Point(105) = {-0.008601, -0.746644, 0, 1.0};
Point(106) = {-0.001180, -0.747735, 0, 1.0};
Point(107) = {0.006254, -0.748734, 0, 1.0};
Point(108) = {0.013717, -0.749548, 0, 1.0};
Point(109) = {0.019124, -0.749919, 0, 1.0};
Point(110) = {0.023057, -0.750000, 0, 1.0};
Point(111) = {0.026032, -0.749902, 0, 1.0};
Point(112) = {0.028344, -0.749670, 0, 1.0};
Point(113) = {0.030195, -0.749382, 0, 1.0};
Point(114) = {0.031690, -0.749083, 0, 1.0};
Point(115) = {0.032887, -0.748756, 0, 1.0};
Point(116) = {0.033831, -0.748437, 0, 1.0};
Point(117) = {0.034552, -0.748146, 0, 1.0};
Point(118) = {0.035059, -0.747905, 0, 1.0};
Point(119) = {0.035399, -0.747721, 0, 1.0};
Point(120) = {0.035734, -0.747515, 0, 1.0};
Point(121) = {0.036041, -0.747296, 0, 1.0};
Point(122) = {0.036356, -0.747026, 0, 1.0};
Point(123) = {0.036620, -0.746740, 0, 1.0};
Point(124) = {0.036845, -0.746409, 0, 1.0};
Point(125) = {0.037006, -0.746034, 0, 1.0};
Point(126) = {0.037062, -0.745791, 0, 1.0};
Point(127) = {0.037032, -0.745444, 0, 1.0};
Point(128) = {0.036862, -0.745117, 0, 1.0};
Point(129) = {0.036608, -0.744798, 0, 1.0};
Point(130) = {0.036316, -0.744528, 0, 1.0};
Point(131) = {0.035990, -0.744282, 0, 1.0};
Point(132) = {0.035657, -0.744078, 0, 1.0};
Point(133) = {0.035143, -0.743814, 0, 1.0};
Point(134) = {0.034442, -0.743542, 0, 1.0};
Point(135) = {0.033490, -0.743218, 0, 1.0};
Point(136) = {0.032308, -0.742864, 0, 1.0};
Point(137) = {0.030825, -0.742451, 0, 1.0};
Point(138) = {0.029016, -0.741968, 0, 1.0};
Point(139) = {0.026743, -0.741399, 0, 1.0};
Point(140) = {0.023819, -0.740729, 0, 1.0};
Point(141) = {0.019985, -0.739899, 0, 1.0};
Point(142) = {0.015351, -0.738952, 0, 1.0};
Point(143) = {0.007980, -0.737536, 0, 1.0};
Point(144) = {0.000599, -0.736193, 0, 1.0};
Point(145) = {-0.006793, -0.734917, 0, 1.0};
Point(146) = {-0.014191, -0.733681, 0, 1.0};
Point(147) = {-0.021597, -0.732498, 0, 1.0};
Point(148) = {-0.029012, -0.731369, 0, 1.0};
Point(149) = {-0.036432, -0.730273, 0, 1.0};
Point(150) = {-0.043857, -0.729217, 0, 1.0};
Point(151) = {-0.051289, -0.728199, 0, 1.0};
Point(152) = {-0.058729, -0.727232, 0, 1.0};
Point(153) = {-0.064686, -0.726495, 0, 1.0};
Point(154) = {-0.070649, -0.725794, 0, 1.0};
Point(155) = {-0.076618, -0.725137, 0, 1.0};
Point(156) = {-0.082593, -0.724515, 0, 1.0};
Point(157) = {-0.087827, -0.724008, 0, 1.0};
Point(158) = {-0.093067, -0.723537, 0, 1.0};
Point(159) = {-0.097570, -0.723217, 0, 1.0};
Point(160) = {-0.101328, -0.722977, 0, 1.0};
Point(161) = {-0.104335, -0.722795, 0, 1.0};
Point(162) = {-0.106600, -0.722718, 0, 1.0};
Point(163) = {-0.108114, -0.722697, 0, 1.0};
Point(164) = {-0.109631, -0.722690, 0, 1.0};
Point(165) = {-0.110393, -0.722714, 0, 1.0};
Point(166) = {-0.111156, -0.722737, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:61};
Spline(3) = {61:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:105};
Spline(6) = {105:144};
Spline(7) = {144:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.148647, 0.748291, 0, 1.0};
Point(2) = {0.148267, 0.748357, 0, 1.0};
Point(3) = {0.147221, 0.748567, 0, 1.0};
Point(4) = {0.145620, 0.748833, 0, 1.0};
Point(5) = {0.143459, 0.749072, 0, 1.0};
Point(6) = {0.140709, 0.749272, 0, 1.0};
Point(7) = {0.137382, 0.749450, 0, 1.0};
Point(8) = {0.133502, 0.749607, 0, 1.0};
Point(9) = {0.129094, 0.749740, 0, 1.0};
Point(10) = {0.124189, 0.749847, 0, 1.0};
Point(11) = {0.118819, 0.749926, 0, 1.0};
Point(12) = {0.113018, 0.749979, 0, 1.0};
Point(13) = {0.106826, 0.750000, 0, 1.0};
Point(14) = {0.100282, 0.749992, 0, 1.0};
Point(15) = {0.093431, 0.749952, 0, 1.0};
Point(16) = {0.086314, 0.749883, 0, 1.0};
Point(17) = {0.078984, 0.749786, 0, 1.0};
Point(18) = {0.071491, 0.749655, 0, 1.0};
Point(19) = {0.063884, 0.749494, 0, 1.0};
Point(20) = {0.056221, 0.749299, 0, 1.0};
Point(21) = {0.048556, 0.749065, 0, 1.0};
Point(22) = {0.040943, 0.748784, 0, 1.0};
Point(23) = {0.033437, 0.748450, 0, 1.0};
Point(24) = {0.026088, 0.748048, 0, 1.0};
Point(25) = {0.018942, 0.747563, 0, 1.0};
Point(26) = {0.012039, 0.746983, 0, 1.0};
Point(27) = {0.005426, 0.746291, 0, 1.0};
Point(28) = {-0.000886, 0.745462, 0, 1.0};
Point(29) = {-0.006889, 0.744504, 0, 1.0};
Point(30) = {-0.012547, 0.743416, 0, 1.0};
Point(31) = {-0.017861, 0.742195, 0, 1.0};
Point(32) = {-0.022819, 0.740872, 0, 1.0};
Point(33) = {-0.027398, 0.739459, 0, 1.0};
Point(34) = {-0.031588, 0.737970, 0, 1.0};
Point(35) = {-0.035367, 0.736433, 0, 1.0};
Point(36) = {-0.038725, 0.734858, 0, 1.0};
Point(37) = {-0.041660, 0.733273, 0, 1.0};
Point(38) = {-0.044152, 0.731697, 0, 1.0};
Point(39) = {-0.046205, 0.730154, 0, 1.0};
Point(40) = {-0.047819, 0.728683, 0, 1.0};
Point(41) = {-0.048990, 0.727313, 0, 1.0};
Point(42) = {-0.049715, 0.726093, 0, 1.0};
Point(43) = {-0.050004, 0.725099, 0, 1.0};
Point(44) = {-0.049723, 0.724403, 0, 1.0};
Point(45) = {-0.048782, 0.723965, 0, 1.0};
Point(46) = {-0.047212, 0.723697, 0, 1.0};
Point(47) = {-0.045030, 0.723596, 0, 1.0};
Point(48) = {-0.042255, 0.723665, 0, 1.0};
Point(49) = {-0.038895, 0.723894, 0, 1.0};
Point(50) = {-0.034969, 0.724277, 0, 1.0};
Point(51) = {-0.030494, 0.724808, 0, 1.0};
Point(52) = {-0.025498, 0.725477, 0, 1.0};
Point(53) = {-0.020001, 0.726272, 0, 1.0};
Point(54) = {-0.014036, 0.727183, 0, 1.0};
Point(55) = {-0.007634, 0.728193, 0, 1.0};
Point(56) = {-0.000840, 0.729290, 0, 1.0};
Point(57) = {0.006313, 0.730456, 0, 1.0};
Point(58) = {0.013774, 0.731677, 0, 1.0};
Point(59) = {0.021498, 0.732936, 0, 1.0};
Point(60) = {0.029433, 0.734218, 0, 1.0};
Point(61) = {0.037530, 0.735509, 0, 1.0};
Point(62) = {0.045728, 0.736790, 0, 1.0};
Point(63) = {0.053976, 0.738052, 0, 1.0};
Point(64) = {0.062212, 0.739285, 0, 1.0};
Point(65) = {0.070392, 0.740485, 0, 1.0};
Point(66) = {0.078481, 0.741634, 0, 1.0};
Point(67) = {0.086430, 0.742676, 0, 1.0};
Point(68) = {0.094139, 0.743581, 0, 1.0};
Point(69) = {0.101500, 0.744363, 0, 1.0};
Point(70) = {0.108472, 0.745050, 0, 1.0};
Point(71) = {0.115002, 0.745652, 0, 1.0};
Point(72) = {0.121052, 0.746174, 0, 1.0};
Point(73) = {0.126583, 0.746625, 0, 1.0};
Point(74) = {0.131554, 0.747007, 0, 1.0};
Point(75) = {0.135936, 0.747332, 0, 1.0};
Point(76) = {0.139696, 0.747605, 0, 1.0};
Point(77) = {0.142824, 0.747841, 0, 1.0};
Point(78) = {0.145310, 0.748035, 0, 1.0};
Point(79) = {0.147128, 0.748176, 0, 1.0};
Point(80) = {0.148257, 0.748265, 0, 1.0};
Point(81) = {-0.148647, -0.748291, 0, 1.0};
Point(82) = {-0.148267, -0.748357, 0, 1.0};
Point(83) = {-0.147221, -0.748567, 0, 1.0};
Point(84) = {-0.145620, -0.748833, 0, 1.0};
Point(85) = {-0.143459, -0.749072, 0, 1.0};
Point(86) = {-0.140709, -0.749272, 0, 1.0};
Point(87) = {-0.137382, -0.749450, 0, 1.0};
Point(88) = {-0.133502, -0.749607, 0, 1.0};
Point(89) = {-0.129094, -0.749740, 0, 1.0};
Point(90) = {-0.124189, -0.749847, 0, 1.0};
Point(91) = {-0.118819, -0.749926, 0, 1.0};
Point(92) = {-0.113018, -0.749979, 0, 1.0};
Point(93) = {-0.106826, -0.750000, 0, 1.0};
Point(94) = {-0.100282, -0.749992, 0, 1.0};
Point(95) = {-0.093431, -0.749952, 0, 1.0};
Point(96) = {-0.086314, -0.749883, 0, 1.0};
Point(97) = {-0.078984, -0.749786, 0, 1.0};
Point(98) = {-0.071491, -0.749655, 0, 1.0};
Point(99) = {-0.063884, -0.749494, 0, 1.0};
Point(100) = {-0.056221, -0.749299, 0, 1.0};
Point(101) = {-0.048556, -0.749065, 0, 1.0};
Point(102) = {-0.040943, -0.748784, 0, 1.0};
Point(103) = {-0.033437, -0.748450, 0, 1.0};
Point(104) = {-0.026088, -0.748048, 0, 1.0};
Point(105) = {-0.018942, -0.747563, 0, 1.0};
Point(106) = {-0.012039, -0.746983, 0, 1.0};
Point(107) = {-0.005426, -0.746291, 0, 1.0};
Point(108) = {0.000886, -0.745462, 0, 1.0};
Point(109) = {0.006889, -0.744504, 0, 1.0};
Point(110) = {0.012547, -0.743416, 0, 1.0};
Point(111) = {0.017861, -0.742195, 0, 1.0};
Point(112) = {0.022819, -0.740872, 0, 1.0};
Point(113) = {0.027398, -0.739459, 0, 1.0};
Point(114) = {0.031588, -0.737970, 0, 1.0};
Point(115) = {0.035367, -0.736433, 0, 1.0};
Point(116) = {0.038725, -0.734858, 0, 1.0};
Point(117) = {0.041660, -0.733273, 0, 1.0};
Point(118) = {0.044152, -0.731697, 0, 1.0};
Point(119) = {0.046205, -0.730154, 0, 1.0};
Point(120) = {0.047819, -0.728683, 0, 1.0};
Point(121) = {0.048990, -0.727313, 0, 1.0};
Point(122) = {0.049715, -0.726093, 0, 1.0};
Point(123) = {0.050004, -0.725099, 0, 1.0};
Point(124) = {0.049723, -0.724403, 0, 1.0};
Point(125) = {0.048782, -0.723965, 0, 1.0};
Point(126) = {0.047212, -0.723697, 0, 1.0};
Point(127) = {0.045030, -0.723596, 0, 1.0};
Point(128) = {0.042255, -0.723665, 0, 1.0};
Point(129) = {0.038895, -0.723894, 0, 1.0};
Point(130) = {0.034969, -0.724277, 0, 1.0};
Point(131) = {0.030494, -0.724808, 0, 1.0};
Point(132) = {0.025498, -0.725477, 0, 1.0};
Point(133) = {0.020001, -0.726272, 0, 1.0};
Point(134) = {0.014036, -0.727183, 0, 1.0};
Point(135) = {0.007634, -0.728193, 0, 1.0};
Point(136) = {0.000840, -0.729290, 0, 1.0};
Point(137) = {-0.006313, -0.730456, 0, 1.0};
Point(138) = {-0.013774, -0.731677, 0, 1.0};
Point(139) = {-0.021498, -0.732936, 0, 1.0};
Point(140) = {-0.029433, -0.734218, 0, 1.0};
Point(141) = {-0.037530, -0.735509, 0, 1.0};
Point(142) = {-0.045728, -0.736790, 0, 1.0};
Point(143) = {-0.053976, -0.738052, 0, 1.0};
Point(144) = {-0.062212, -0.739285, 0, 1.0};
Point(145) = {-0.070392, -0.740485, 0, 1.0};
Point(146) = {-0.078481, -0.741634, 0, 1.0};
Point(147) = {-0.086430, -0.742676, 0, 1.0};
Point(148) = {-0.094139, -0.743581, 0, 1.0};
Point(149) = {-0.101500, -0.744363, 0, 1.0};
Point(150) = {-0.108472, -0.745050, 0, 1.0};
Point(151) = {-0.115002, -0.745652, 0, 1.0};
Point(152) = {-0.121052, -0.746174, 0, 1.0};
Point(153) = {-0.126583, -0.746625, 0, 1.0};
Point(154) = {-0.131554, -0.747007, 0, 1.0};
Point(155) = {-0.135936, -0.747332, 0, 1.0};
Point(156) = {-0.139696, -0.747605, 0, 1.0};
Point(157) = {-0.142824, -0.747841, 0, 1.0};
Point(158) = {-0.145310, -0.748035, 0, 1.0};
Point(159) = {-0.147128, -0.748176, 0, 1.0};
Point(160) = {-0.148257, -0.748265, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:136};
Spline(7) = {136:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
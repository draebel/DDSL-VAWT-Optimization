SetFactory("OpenCASCADE");

Point(1) = {0.074949, 0.740220, 0, 1.0};
Point(2) = {0.071910, 0.741124, 0, 1.0};
Point(3) = {0.068893, 0.741407, 0, 1.0};
Point(4) = {0.065879, 0.741695, 0, 1.0};
Point(5) = {0.062866, 0.742001, 0, 1.0};
Point(6) = {0.059860, 0.742357, 0, 1.0};
Point(7) = {0.052310, 0.743573, 0, 1.0};
Point(8) = {0.044758, 0.744828, 0, 1.0};
Point(9) = {0.037206, 0.746110, 0, 1.0};
Point(10) = {0.029657, 0.747363, 0, 1.0};
Point(11) = {0.022113, 0.748467, 0, 1.0};
Point(12) = {0.014576, 0.749295, 0, 1.0};
Point(13) = {0.007050, 0.749806, 0, 1.0};
Point(14) = {-0.000464, 0.750000, 0, 1.0};
Point(15) = {-0.007965, 0.749909, 0, 1.0};
Point(16) = {-0.015459, 0.749584, 0, 1.0};
Point(17) = {-0.022944, 0.749051, 0, 1.0};
Point(18) = {-0.030423, 0.748312, 0, 1.0};
Point(19) = {-0.037893, 0.747361, 0, 1.0};
Point(20) = {-0.045356, 0.746168, 0, 1.0};
Point(21) = {-0.052805, 0.744686, 0, 1.0};
Point(22) = {-0.057270, 0.743620, 0, 1.0};
Point(23) = {-0.060245, 0.742812, 0, 1.0};
Point(24) = {-0.063212, 0.741906, 0, 1.0};
Point(25) = {-0.066171, 0.740867, 0, 1.0};
Point(26) = {-0.067662, 0.740276, 0, 1.0};
Point(27) = {-0.069129, 0.739631, 0, 1.0};
Point(28) = {-0.070616, 0.738887, 0, 1.0};
Point(29) = {-0.072086, 0.738031, 0, 1.0};
Point(30) = {-0.073534, 0.736940, 0, 1.0};
Point(31) = {-0.074581, 0.735732, 0, 1.0};
Point(32) = {-0.074949, 0.734681, 0, 1.0};
Point(33) = {-0.074948, 0.734650, 0, 1.0};
Point(34) = {-0.074473, 0.733873, 0, 1.0};
Point(35) = {-0.073398, 0.733404, 0, 1.0};
Point(36) = {-0.071891, 0.733055, 0, 1.0};
Point(37) = {-0.070379, 0.732783, 0, 1.0};
Point(38) = {-0.068871, 0.732605, 0, 1.0};
Point(39) = {-0.067362, 0.732472, 0, 1.0};
Point(40) = {-0.065858, 0.732357, 0, 1.0};
Point(41) = {-0.062850, 0.732179, 0, 1.0};
Point(42) = {-0.059842, 0.732057, 0, 1.0};
Point(43) = {-0.056836, 0.731970, 0, 1.0};
Point(44) = {-0.052330, 0.731886, 0, 1.0};
Point(45) = {-0.044823, 0.731841, 0, 1.0};
Point(46) = {-0.037320, 0.731881, 0, 1.0};
Point(47) = {-0.029819, 0.731991, 0, 1.0};
Point(48) = {-0.022320, 0.732166, 0, 1.0};
Point(49) = {-0.014824, 0.732400, 0, 1.0};
Point(50) = {-0.007329, 0.732687, 0, 1.0};
Point(51) = {0.000163, 0.733030, 0, 1.0};
Point(52) = {0.007654, 0.733430, 0, 1.0};
Point(53) = {0.015142, 0.733890, 0, 1.0};
Point(54) = {0.022627, 0.734421, 0, 1.0};
Point(55) = {0.030111, 0.735051, 0, 1.0};
Point(56) = {0.037588, 0.735806, 0, 1.0};
Point(57) = {0.045059, 0.736682, 0, 1.0};
Point(58) = {0.052529, 0.737641, 0, 1.0};
Point(59) = {0.059997, 0.738638, 0, 1.0};
Point(60) = {0.062987, 0.738889, 0, 1.0};
Point(61) = {0.065982, 0.739078, 0, 1.0};
Point(62) = {0.068979, 0.739249, 0, 1.0};
Point(63) = {0.071976, 0.739416, 0, 1.0};
Point(64) = {-0.074949, -0.740220, 0, 1.0};
Point(65) = {-0.071910, -0.741124, 0, 1.0};
Point(66) = {-0.068893, -0.741407, 0, 1.0};
Point(67) = {-0.065879, -0.741695, 0, 1.0};
Point(68) = {-0.062866, -0.742001, 0, 1.0};
Point(69) = {-0.059860, -0.742357, 0, 1.0};
Point(70) = {-0.052310, -0.743573, 0, 1.0};
Point(71) = {-0.044758, -0.744828, 0, 1.0};
Point(72) = {-0.037206, -0.746110, 0, 1.0};
Point(73) = {-0.029657, -0.747363, 0, 1.0};
Point(74) = {-0.022113, -0.748467, 0, 1.0};
Point(75) = {-0.014576, -0.749295, 0, 1.0};
Point(76) = {-0.007050, -0.749806, 0, 1.0};
Point(77) = {0.000464, -0.750000, 0, 1.0};
Point(78) = {0.007965, -0.749909, 0, 1.0};
Point(79) = {0.015459, -0.749584, 0, 1.0};
Point(80) = {0.022944, -0.749051, 0, 1.0};
Point(81) = {0.030423, -0.748312, 0, 1.0};
Point(82) = {0.037893, -0.747361, 0, 1.0};
Point(83) = {0.045356, -0.746168, 0, 1.0};
Point(84) = {0.052805, -0.744686, 0, 1.0};
Point(85) = {0.057270, -0.743620, 0, 1.0};
Point(86) = {0.060245, -0.742812, 0, 1.0};
Point(87) = {0.063212, -0.741906, 0, 1.0};
Point(88) = {0.066171, -0.740867, 0, 1.0};
Point(89) = {0.067662, -0.740276, 0, 1.0};
Point(90) = {0.069129, -0.739631, 0, 1.0};
Point(91) = {0.070616, -0.738887, 0, 1.0};
Point(92) = {0.072086, -0.738031, 0, 1.0};
Point(93) = {0.073534, -0.736940, 0, 1.0};
Point(94) = {0.074581, -0.735732, 0, 1.0};
Point(95) = {0.074949, -0.734681, 0, 1.0};
Point(96) = {0.074948, -0.734650, 0, 1.0};
Point(97) = {0.074473, -0.733873, 0, 1.0};
Point(98) = {0.073398, -0.733404, 0, 1.0};
Point(99) = {0.071891, -0.733055, 0, 1.0};
Point(100) = {0.070379, -0.732783, 0, 1.0};
Point(101) = {0.068871, -0.732605, 0, 1.0};
Point(102) = {0.067362, -0.732472, 0, 1.0};
Point(103) = {0.065858, -0.732357, 0, 1.0};
Point(104) = {0.062850, -0.732179, 0, 1.0};
Point(105) = {0.059842, -0.732057, 0, 1.0};
Point(106) = {0.056836, -0.731970, 0, 1.0};
Point(107) = {0.052330, -0.731886, 0, 1.0};
Point(108) = {0.044823, -0.731841, 0, 1.0};
Point(109) = {0.037320, -0.731881, 0, 1.0};
Point(110) = {0.029819, -0.731991, 0, 1.0};
Point(111) = {0.022320, -0.732166, 0, 1.0};
Point(112) = {0.014824, -0.732400, 0, 1.0};
Point(113) = {0.007329, -0.732687, 0, 1.0};
Point(114) = {-0.000163, -0.733030, 0, 1.0};
Point(115) = {-0.007654, -0.733430, 0, 1.0};
Point(116) = {-0.015142, -0.733890, 0, 1.0};
Point(117) = {-0.022627, -0.734421, 0, 1.0};
Point(118) = {-0.030111, -0.735051, 0, 1.0};
Point(119) = {-0.037588, -0.735806, 0, 1.0};
Point(120) = {-0.045059, -0.736682, 0, 1.0};
Point(121) = {-0.052529, -0.737641, 0, 1.0};
Point(122) = {-0.059997, -0.738638, 0, 1.0};
Point(123) = {-0.062987, -0.738889, 0, 1.0};
Point(124) = {-0.065982, -0.739078, 0, 1.0};
Point(125) = {-0.068979, -0.739249, 0, 1.0};
Point(126) = {-0.071976, -0.739416, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:46};
Spline(3) = {46:63};
Spline(4) = {63,1};

// Lines: second blade (splines 5-8)
Spline(5) = {64:81};
Spline(6) = {81:109};
Spline(7) = {109:126};
Spline(8) = {126,64};

// Outer domain (points 20001-4 and lines)
Point(127) = {-13.50000000, -15.00000000, 0, 1.0};
Point(128) = {-13.50000000, 15.00000000, 0, 1.0};
Point(129) = {13.50000000, 15.00000000, 0, 1.0};
Point(130) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {127, 128};
Line(12) = {128, 129};
Line(13) = {129, 130};
Line(14) = {127, 130};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
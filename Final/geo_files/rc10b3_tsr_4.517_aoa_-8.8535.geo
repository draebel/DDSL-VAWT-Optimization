SetFactory("OpenCASCADE");

Point(1) = {0.074065, 0.750000, 0, 1.0};
Point(2) = {0.069267, 0.749890, 0, 1.0};
Point(3) = {0.064424, 0.749822, 0, 1.0};
Point(4) = {0.059530, 0.749837, 0, 1.0};
Point(5) = {0.054476, 0.749857, 0, 1.0};
Point(6) = {0.049223, 0.749871, 0, 1.0};
Point(7) = {0.043728, 0.749859, 0, 1.0};
Point(8) = {0.037942, 0.749805, 0, 1.0};
Point(9) = {0.031959, 0.749690, 0, 1.0};
Point(10) = {0.025982, 0.749504, 0, 1.0};
Point(11) = {0.020105, 0.749246, 0, 1.0};
Point(12) = {0.014341, 0.748915, 0, 1.0};
Point(13) = {0.008634, 0.748505, 0, 1.0};
Point(14) = {0.002946, 0.748016, 0, 1.0};
Point(15) = {-0.002735, 0.747443, 0, 1.0};
Point(16) = {-0.008420, 0.746789, 0, 1.0};
Point(17) = {-0.014092, 0.746055, 0, 1.0};
Point(18) = {-0.019722, 0.745247, 0, 1.0};
Point(19) = {-0.025259, 0.744368, 0, 1.0};
Point(20) = {-0.030657, 0.743428, 0, 1.0};
Point(21) = {-0.035870, 0.742431, 0, 1.0};
Point(22) = {-0.040874, 0.741375, 0, 1.0};
Point(23) = {-0.045658, 0.740264, 0, 1.0};
Point(24) = {-0.050203, 0.739096, 0, 1.0};
Point(25) = {-0.054487, 0.737864, 0, 1.0};
Point(26) = {-0.058492, 0.736585, 0, 1.0};
Point(27) = {-0.062200, 0.735234, 0, 1.0};
Point(28) = {-0.065589, 0.733824, 0, 1.0};
Point(29) = {-0.068598, 0.732352, 0, 1.0};
Point(30) = {-0.071113, 0.730851, 0, 1.0};
Point(31) = {-0.072879, 0.729419, 0, 1.0};
Point(32) = {-0.073856, 0.728061, 0, 1.0};
Point(33) = {-0.074106, 0.726647, 0, 1.0};
Point(34) = {-0.073470, 0.725585, 0, 1.0};
Point(35) = {-0.072202, 0.725076, 0, 1.0};
Point(36) = {-0.070171, 0.724802, 0, 1.0};
Point(37) = {-0.067411, 0.724730, 0, 1.0};
Point(38) = {-0.064191, 0.724847, 0, 1.0};
Point(39) = {-0.060622, 0.725104, 0, 1.0};
Point(40) = {-0.056760, 0.725461, 0, 1.0};
Point(41) = {-0.052623, 0.725901, 0, 1.0};
Point(42) = {-0.048226, 0.726402, 0, 1.0};
Point(43) = {-0.043586, 0.726964, 0, 1.0};
Point(44) = {-0.038724, 0.727574, 0, 1.0};
Point(45) = {-0.033658, 0.728231, 0, 1.0};
Point(46) = {-0.028399, 0.728933, 0, 1.0};
Point(47) = {-0.022971, 0.729680, 0, 1.0};
Point(48) = {-0.017419, 0.730466, 0, 1.0};
Point(49) = {-0.011792, 0.731287, 0, 1.0};
Point(50) = {-0.006138, 0.732138, 0, 1.0};
Point(51) = {-0.000487, 0.733013, 0, 1.0};
Point(52) = {0.005143, 0.733912, 0, 1.0};
Point(53) = {0.010763, 0.734837, 0, 1.0};
Point(54) = {0.016385, 0.735793, 0, 1.0};
Point(55) = {0.022045, 0.736790, 0, 1.0};
Point(56) = {0.027798, 0.737846, 0, 1.0};
Point(57) = {0.033629, 0.738967, 0, 1.0};
Point(58) = {0.039446, 0.740148, 0, 1.0};
Point(59) = {0.045052, 0.741358, 0, 1.0};
Point(60) = {0.050358, 0.742585, 0, 1.0};
Point(61) = {0.055413, 0.743847, 0, 1.0};
Point(62) = {0.060259, 0.745157, 0, 1.0};
Point(63) = {0.064937, 0.746527, 0, 1.0};
Point(64) = {0.069551, 0.748063, 0, 1.0};
Point(65) = {0.074111, 0.749704, 0, 1.0};
Point(66) = {-0.074065, -0.750000, 0, 1.0};
Point(67) = {-0.069267, -0.749890, 0, 1.0};
Point(68) = {-0.064424, -0.749822, 0, 1.0};
Point(69) = {-0.059530, -0.749837, 0, 1.0};
Point(70) = {-0.054476, -0.749857, 0, 1.0};
Point(71) = {-0.049223, -0.749871, 0, 1.0};
Point(72) = {-0.043728, -0.749859, 0, 1.0};
Point(73) = {-0.037942, -0.749805, 0, 1.0};
Point(74) = {-0.031959, -0.749690, 0, 1.0};
Point(75) = {-0.025982, -0.749504, 0, 1.0};
Point(76) = {-0.020105, -0.749246, 0, 1.0};
Point(77) = {-0.014341, -0.748915, 0, 1.0};
Point(78) = {-0.008634, -0.748505, 0, 1.0};
Point(79) = {-0.002946, -0.748016, 0, 1.0};
Point(80) = {0.002735, -0.747443, 0, 1.0};
Point(81) = {0.008420, -0.746789, 0, 1.0};
Point(82) = {0.014092, -0.746055, 0, 1.0};
Point(83) = {0.019722, -0.745247, 0, 1.0};
Point(84) = {0.025259, -0.744368, 0, 1.0};
Point(85) = {0.030657, -0.743428, 0, 1.0};
Point(86) = {0.035870, -0.742431, 0, 1.0};
Point(87) = {0.040874, -0.741375, 0, 1.0};
Point(88) = {0.045658, -0.740264, 0, 1.0};
Point(89) = {0.050203, -0.739096, 0, 1.0};
Point(90) = {0.054487, -0.737864, 0, 1.0};
Point(91) = {0.058492, -0.736585, 0, 1.0};
Point(92) = {0.062200, -0.735234, 0, 1.0};
Point(93) = {0.065589, -0.733824, 0, 1.0};
Point(94) = {0.068598, -0.732352, 0, 1.0};
Point(95) = {0.071113, -0.730851, 0, 1.0};
Point(96) = {0.072879, -0.729419, 0, 1.0};
Point(97) = {0.073856, -0.728061, 0, 1.0};
Point(98) = {0.074106, -0.726647, 0, 1.0};
Point(99) = {0.073470, -0.725585, 0, 1.0};
Point(100) = {0.072202, -0.725076, 0, 1.0};
Point(101) = {0.070171, -0.724802, 0, 1.0};
Point(102) = {0.067411, -0.724730, 0, 1.0};
Point(103) = {0.064191, -0.724847, 0, 1.0};
Point(104) = {0.060622, -0.725104, 0, 1.0};
Point(105) = {0.056760, -0.725461, 0, 1.0};
Point(106) = {0.052623, -0.725901, 0, 1.0};
Point(107) = {0.048226, -0.726402, 0, 1.0};
Point(108) = {0.043586, -0.726964, 0, 1.0};
Point(109) = {0.038724, -0.727574, 0, 1.0};
Point(110) = {0.033658, -0.728231, 0, 1.0};
Point(111) = {0.028399, -0.728933, 0, 1.0};
Point(112) = {0.022971, -0.729680, 0, 1.0};
Point(113) = {0.017419, -0.730466, 0, 1.0};
Point(114) = {0.011792, -0.731287, 0, 1.0};
Point(115) = {0.006138, -0.732138, 0, 1.0};
Point(116) = {0.000487, -0.733013, 0, 1.0};
Point(117) = {-0.005143, -0.733912, 0, 1.0};
Point(118) = {-0.010763, -0.734837, 0, 1.0};
Point(119) = {-0.016385, -0.735793, 0, 1.0};
Point(120) = {-0.022045, -0.736790, 0, 1.0};
Point(121) = {-0.027798, -0.737846, 0, 1.0};
Point(122) = {-0.033629, -0.738967, 0, 1.0};
Point(123) = {-0.039446, -0.740148, 0, 1.0};
Point(124) = {-0.045052, -0.741358, 0, 1.0};
Point(125) = {-0.050358, -0.742585, 0, 1.0};
Point(126) = {-0.055413, -0.743847, 0, 1.0};
Point(127) = {-0.060259, -0.745157, 0, 1.0};
Point(128) = {-0.064937, -0.746527, 0, 1.0};
Point(129) = {-0.069551, -0.748063, 0, 1.0};
Point(130) = {-0.074111, -0.749704, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
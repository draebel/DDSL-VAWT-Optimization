SetFactory("OpenCASCADE");

Point(1) = {0.147562, 0.750000, 0, 1.0};
Point(2) = {0.141164, 0.749854, 0, 1.0};
Point(3) = {0.134707, 0.749763, 0, 1.0};
Point(4) = {0.128182, 0.749783, 0, 1.0};
Point(5) = {0.121444, 0.749810, 0, 1.0};
Point(6) = {0.114439, 0.749828, 0, 1.0};
Point(7) = {0.107113, 0.749812, 0, 1.0};
Point(8) = {0.099398, 0.749740, 0, 1.0};
Point(9) = {0.091420, 0.749586, 0, 1.0};
Point(10) = {0.083451, 0.749339, 0, 1.0};
Point(11) = {0.075615, 0.748995, 0, 1.0};
Point(12) = {0.067930, 0.748553, 0, 1.0};
Point(13) = {0.060321, 0.748007, 0, 1.0};
Point(14) = {0.052737, 0.747354, 0, 1.0};
Point(15) = {0.045162, 0.746591, 0, 1.0};
Point(16) = {0.037582, 0.745718, 0, 1.0};
Point(17) = {0.030019, 0.744740, 0, 1.0};
Point(18) = {0.022513, 0.743662, 0, 1.0};
Point(19) = {0.015130, 0.742490, 0, 1.0};
Point(20) = {0.007933, 0.741238, 0, 1.0};
Point(21) = {0.000982, 0.739908, 0, 1.0};
Point(22) = {-0.005690, 0.738500, 0, 1.0};
Point(23) = {-0.012068, 0.737019, 0, 1.0};
Point(24) = {-0.018129, 0.735462, 0, 1.0};
Point(25) = {-0.023840, 0.733819, 0, 1.0};
Point(26) = {-0.029181, 0.732113, 0, 1.0};
Point(27) = {-0.034125, 0.730312, 0, 1.0};
Point(28) = {-0.038644, 0.728432, 0, 1.0};
Point(29) = {-0.042655, 0.726470, 0, 1.0};
Point(30) = {-0.046009, 0.724468, 0, 1.0};
Point(31) = {-0.048363, 0.722559, 0, 1.0};
Point(32) = {-0.049666, 0.720748, 0, 1.0};
Point(33) = {-0.050000, 0.718863, 0, 1.0};
Point(34) = {-0.049152, 0.717446, 0, 1.0};
Point(35) = {-0.047461, 0.716768, 0, 1.0};
Point(36) = {-0.044753, 0.716403, 0, 1.0};
Point(37) = {-0.041072, 0.716306, 0, 1.0};
Point(38) = {-0.036779, 0.716463, 0, 1.0};
Point(39) = {-0.032021, 0.716805, 0, 1.0};
Point(40) = {-0.026871, 0.717282, 0, 1.0};
Point(41) = {-0.021356, 0.717867, 0, 1.0};
Point(42) = {-0.015493, 0.718536, 0, 1.0};
Point(43) = {-0.009306, 0.719285, 0, 1.0};
Point(44) = {-0.002824, 0.720098, 0, 1.0};
Point(45) = {0.003932, 0.720974, 0, 1.0};
Point(46) = {0.010943, 0.721911, 0, 1.0};
Point(47) = {0.018180, 0.722906, 0, 1.0};
Point(48) = {0.025583, 0.723954, 0, 1.0};
Point(49) = {0.033086, 0.725050, 0, 1.0};
Point(50) = {0.040625, 0.726184, 0, 1.0};
Point(51) = {0.048159, 0.727351, 0, 1.0};
Point(52) = {0.055666, 0.728549, 0, 1.0};
Point(53) = {0.063160, 0.729783, 0, 1.0};
Point(54) = {0.070655, 0.731058, 0, 1.0};
Point(55) = {0.078202, 0.732387, 0, 1.0};
Point(56) = {0.085873, 0.733794, 0, 1.0};
Point(57) = {0.093647, 0.735289, 0, 1.0};
Point(58) = {0.101403, 0.736863, 0, 1.0};
Point(59) = {0.108878, 0.738477, 0, 1.0};
Point(60) = {0.115953, 0.740113, 0, 1.0};
Point(61) = {0.122692, 0.741797, 0, 1.0};
Point(62) = {0.129154, 0.743542, 0, 1.0};
Point(63) = {0.135391, 0.745370, 0, 1.0};
Point(64) = {0.141543, 0.747417, 0, 1.0};
Point(65) = {0.147623, 0.749605, 0, 1.0};
Point(66) = {-0.147562, -0.750000, 0, 1.0};
Point(67) = {-0.141164, -0.749854, 0, 1.0};
Point(68) = {-0.134707, -0.749763, 0, 1.0};
Point(69) = {-0.128182, -0.749783, 0, 1.0};
Point(70) = {-0.121444, -0.749810, 0, 1.0};
Point(71) = {-0.114439, -0.749828, 0, 1.0};
Point(72) = {-0.107113, -0.749812, 0, 1.0};
Point(73) = {-0.099398, -0.749740, 0, 1.0};
Point(74) = {-0.091420, -0.749586, 0, 1.0};
Point(75) = {-0.083451, -0.749339, 0, 1.0};
Point(76) = {-0.075615, -0.748995, 0, 1.0};
Point(77) = {-0.067930, -0.748553, 0, 1.0};
Point(78) = {-0.060321, -0.748007, 0, 1.0};
Point(79) = {-0.052737, -0.747354, 0, 1.0};
Point(80) = {-0.045162, -0.746591, 0, 1.0};
Point(81) = {-0.037582, -0.745718, 0, 1.0};
Point(82) = {-0.030019, -0.744740, 0, 1.0};
Point(83) = {-0.022513, -0.743662, 0, 1.0};
Point(84) = {-0.015130, -0.742490, 0, 1.0};
Point(85) = {-0.007933, -0.741238, 0, 1.0};
Point(86) = {-0.000982, -0.739908, 0, 1.0};
Point(87) = {0.005690, -0.738500, 0, 1.0};
Point(88) = {0.012068, -0.737019, 0, 1.0};
Point(89) = {0.018129, -0.735462, 0, 1.0};
Point(90) = {0.023840, -0.733819, 0, 1.0};
Point(91) = {0.029181, -0.732113, 0, 1.0};
Point(92) = {0.034125, -0.730312, 0, 1.0};
Point(93) = {0.038644, -0.728432, 0, 1.0};
Point(94) = {0.042655, -0.726470, 0, 1.0};
Point(95) = {0.046009, -0.724468, 0, 1.0};
Point(96) = {0.048363, -0.722559, 0, 1.0};
Point(97) = {0.049666, -0.720748, 0, 1.0};
Point(98) = {0.050000, -0.718863, 0, 1.0};
Point(99) = {0.049152, -0.717446, 0, 1.0};
Point(100) = {0.047461, -0.716768, 0, 1.0};
Point(101) = {0.044753, -0.716403, 0, 1.0};
Point(102) = {0.041072, -0.716306, 0, 1.0};
Point(103) = {0.036779, -0.716463, 0, 1.0};
Point(104) = {0.032021, -0.716805, 0, 1.0};
Point(105) = {0.026871, -0.717282, 0, 1.0};
Point(106) = {0.021356, -0.717867, 0, 1.0};
Point(107) = {0.015493, -0.718536, 0, 1.0};
Point(108) = {0.009306, -0.719285, 0, 1.0};
Point(109) = {0.002824, -0.720098, 0, 1.0};
Point(110) = {-0.003932, -0.720974, 0, 1.0};
Point(111) = {-0.010943, -0.721911, 0, 1.0};
Point(112) = {-0.018180, -0.722906, 0, 1.0};
Point(113) = {-0.025583, -0.723954, 0, 1.0};
Point(114) = {-0.033086, -0.725050, 0, 1.0};
Point(115) = {-0.040625, -0.726184, 0, 1.0};
Point(116) = {-0.048159, -0.727351, 0, 1.0};
Point(117) = {-0.055666, -0.728549, 0, 1.0};
Point(118) = {-0.063160, -0.729783, 0, 1.0};
Point(119) = {-0.070655, -0.731058, 0, 1.0};
Point(120) = {-0.078202, -0.732387, 0, 1.0};
Point(121) = {-0.085873, -0.733794, 0, 1.0};
Point(122) = {-0.093647, -0.735289, 0, 1.0};
Point(123) = {-0.101403, -0.736863, 0, 1.0};
Point(124) = {-0.108878, -0.738477, 0, 1.0};
Point(125) = {-0.115953, -0.740113, 0, 1.0};
Point(126) = {-0.122692, -0.741797, 0, 1.0};
Point(127) = {-0.129154, -0.743542, 0, 1.0};
Point(128) = {-0.135391, -0.745370, 0, 1.0};
Point(129) = {-0.141543, -0.747417, 0, 1.0};
Point(130) = {-0.147623, -0.749605, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073781, 0.750000, 0, 1.0};
Point(2) = {0.070582, 0.749927, 0, 1.0};
Point(3) = {0.067353, 0.749881, 0, 1.0};
Point(4) = {0.064091, 0.749891, 0, 1.0};
Point(5) = {0.060722, 0.749905, 0, 1.0};
Point(6) = {0.057220, 0.749914, 0, 1.0};
Point(7) = {0.053556, 0.749906, 0, 1.0};
Point(8) = {0.049699, 0.749870, 0, 1.0};
Point(9) = {0.045710, 0.749793, 0, 1.0};
Point(10) = {0.041726, 0.749670, 0, 1.0};
Point(11) = {0.037808, 0.749497, 0, 1.0};
Point(12) = {0.033965, 0.749276, 0, 1.0};
Point(13) = {0.030160, 0.749004, 0, 1.0};
Point(14) = {0.026369, 0.748677, 0, 1.0};
Point(15) = {0.022581, 0.748296, 0, 1.0};
Point(16) = {0.018791, 0.747859, 0, 1.0};
Point(17) = {0.015009, 0.747370, 0, 1.0};
Point(18) = {0.011257, 0.746831, 0, 1.0};
Point(19) = {0.007565, 0.746245, 0, 1.0};
Point(20) = {0.003966, 0.745619, 0, 1.0};
Point(21) = {0.000491, 0.744954, 0, 1.0};
Point(22) = {-0.002845, 0.744250, 0, 1.0};
Point(23) = {-0.006034, 0.743509, 0, 1.0};
Point(24) = {-0.009064, 0.742731, 0, 1.0};
Point(25) = {-0.011920, 0.741910, 0, 1.0};
Point(26) = {-0.014591, 0.741056, 0, 1.0};
Point(27) = {-0.017063, 0.740156, 0, 1.0};
Point(28) = {-0.019322, 0.739216, 0, 1.0};
Point(29) = {-0.021328, 0.738235, 0, 1.0};
Point(30) = {-0.023005, 0.737234, 0, 1.0};
Point(31) = {-0.024182, 0.736279, 0, 1.0};
Point(32) = {-0.024833, 0.735374, 0, 1.0};
Point(33) = {-0.025000, 0.734431, 0, 1.0};
Point(34) = {-0.024576, 0.733723, 0, 1.0};
Point(35) = {-0.023731, 0.733384, 0, 1.0};
Point(36) = {-0.022376, 0.733201, 0, 1.0};
Point(37) = {-0.020536, 0.733153, 0, 1.0};
Point(38) = {-0.018390, 0.733231, 0, 1.0};
Point(39) = {-0.016011, 0.733403, 0, 1.0};
Point(40) = {-0.013436, 0.733641, 0, 1.0};
Point(41) = {-0.010678, 0.733934, 0, 1.0};
Point(42) = {-0.007746, 0.734268, 0, 1.0};
Point(43) = {-0.004653, 0.734642, 0, 1.0};
Point(44) = {-0.001412, 0.735049, 0, 1.0};
Point(45) = {0.001966, 0.735487, 0, 1.0};
Point(46) = {0.005472, 0.735955, 0, 1.0};
Point(47) = {0.009090, 0.736453, 0, 1.0};
Point(48) = {0.012791, 0.736977, 0, 1.0};
Point(49) = {0.016543, 0.737525, 0, 1.0};
Point(50) = {0.020312, 0.738092, 0, 1.0};
Point(51) = {0.024080, 0.738676, 0, 1.0};
Point(52) = {0.027833, 0.739274, 0, 1.0};
Point(53) = {0.031580, 0.739891, 0, 1.0};
Point(54) = {0.035327, 0.740529, 0, 1.0};
Point(55) = {0.039101, 0.741194, 0, 1.0};
Point(56) = {0.042936, 0.741897, 0, 1.0};
Point(57) = {0.046824, 0.742644, 0, 1.0};
Point(58) = {0.050702, 0.743432, 0, 1.0};
Point(59) = {0.054439, 0.744239, 0, 1.0};
Point(60) = {0.057976, 0.745057, 0, 1.0};
Point(61) = {0.061346, 0.745898, 0, 1.0};
Point(62) = {0.064577, 0.746771, 0, 1.0};
Point(63) = {0.067696, 0.747685, 0, 1.0};
Point(64) = {0.070772, 0.748708, 0, 1.0};
Point(65) = {0.073812, 0.749802, 0, 1.0};
Point(66) = {-0.073781, -0.750000, 0, 1.0};
Point(67) = {-0.070582, -0.749927, 0, 1.0};
Point(68) = {-0.067353, -0.749881, 0, 1.0};
Point(69) = {-0.064091, -0.749891, 0, 1.0};
Point(70) = {-0.060722, -0.749905, 0, 1.0};
Point(71) = {-0.057220, -0.749914, 0, 1.0};
Point(72) = {-0.053556, -0.749906, 0, 1.0};
Point(73) = {-0.049699, -0.749870, 0, 1.0};
Point(74) = {-0.045710, -0.749793, 0, 1.0};
Point(75) = {-0.041726, -0.749670, 0, 1.0};
Point(76) = {-0.037808, -0.749497, 0, 1.0};
Point(77) = {-0.033965, -0.749276, 0, 1.0};
Point(78) = {-0.030160, -0.749004, 0, 1.0};
Point(79) = {-0.026369, -0.748677, 0, 1.0};
Point(80) = {-0.022581, -0.748296, 0, 1.0};
Point(81) = {-0.018791, -0.747859, 0, 1.0};
Point(82) = {-0.015009, -0.747370, 0, 1.0};
Point(83) = {-0.011257, -0.746831, 0, 1.0};
Point(84) = {-0.007565, -0.746245, 0, 1.0};
Point(85) = {-0.003966, -0.745619, 0, 1.0};
Point(86) = {-0.000491, -0.744954, 0, 1.0};
Point(87) = {0.002845, -0.744250, 0, 1.0};
Point(88) = {0.006034, -0.743509, 0, 1.0};
Point(89) = {0.009064, -0.742731, 0, 1.0};
Point(90) = {0.011920, -0.741910, 0, 1.0};
Point(91) = {0.014591, -0.741056, 0, 1.0};
Point(92) = {0.017063, -0.740156, 0, 1.0};
Point(93) = {0.019322, -0.739216, 0, 1.0};
Point(94) = {0.021328, -0.738235, 0, 1.0};
Point(95) = {0.023005, -0.737234, 0, 1.0};
Point(96) = {0.024182, -0.736279, 0, 1.0};
Point(97) = {0.024833, -0.735374, 0, 1.0};
Point(98) = {0.025000, -0.734431, 0, 1.0};
Point(99) = {0.024576, -0.733723, 0, 1.0};
Point(100) = {0.023731, -0.733384, 0, 1.0};
Point(101) = {0.022376, -0.733201, 0, 1.0};
Point(102) = {0.020536, -0.733153, 0, 1.0};
Point(103) = {0.018390, -0.733231, 0, 1.0};
Point(104) = {0.016011, -0.733403, 0, 1.0};
Point(105) = {0.013436, -0.733641, 0, 1.0};
Point(106) = {0.010678, -0.733934, 0, 1.0};
Point(107) = {0.007746, -0.734268, 0, 1.0};
Point(108) = {0.004653, -0.734642, 0, 1.0};
Point(109) = {0.001412, -0.735049, 0, 1.0};
Point(110) = {-0.001966, -0.735487, 0, 1.0};
Point(111) = {-0.005472, -0.735955, 0, 1.0};
Point(112) = {-0.009090, -0.736453, 0, 1.0};
Point(113) = {-0.012791, -0.736977, 0, 1.0};
Point(114) = {-0.016543, -0.737525, 0, 1.0};
Point(115) = {-0.020312, -0.738092, 0, 1.0};
Point(116) = {-0.024080, -0.738676, 0, 1.0};
Point(117) = {-0.027833, -0.739274, 0, 1.0};
Point(118) = {-0.031580, -0.739891, 0, 1.0};
Point(119) = {-0.035327, -0.740529, 0, 1.0};
Point(120) = {-0.039101, -0.741194, 0, 1.0};
Point(121) = {-0.042936, -0.741897, 0, 1.0};
Point(122) = {-0.046824, -0.742644, 0, 1.0};
Point(123) = {-0.050702, -0.743432, 0, 1.0};
Point(124) = {-0.054439, -0.744239, 0, 1.0};
Point(125) = {-0.057976, -0.745057, 0, 1.0};
Point(126) = {-0.061346, -0.745898, 0, 1.0};
Point(127) = {-0.064577, -0.746771, 0, 1.0};
Point(128) = {-0.067696, -0.747685, 0, 1.0};
Point(129) = {-0.070772, -0.748708, 0, 1.0};
Point(130) = {-0.073812, -0.749802, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
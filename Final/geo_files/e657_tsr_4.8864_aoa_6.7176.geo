SetFactory("OpenCASCADE");

Point(1) = {0.074731, 0.721631, 0, 1.0};
Point(2) = {0.073824, 0.722006, 0, 1.0};
Point(3) = {0.069853, 0.723666, 0, 1.0};
Point(4) = {0.065165, 0.725618, 0, 1.0};
Point(5) = {0.059870, 0.727847, 0, 1.0};
Point(6) = {0.054080, 0.730310, 0, 1.0};
Point(7) = {0.047913, 0.732943, 0, 1.0};
Point(8) = {0.041484, 0.735660, 0, 1.0};
Point(9) = {0.034896, 0.738359, 0, 1.0};
Point(10) = {0.028239, 0.740888, 0, 1.0};
Point(11) = {0.021489, 0.743093, 0, 1.0};
Point(12) = {0.014575, 0.744947, 0, 1.0};
Point(13) = {0.007510, 0.746481, 0, 1.0};
Point(14) = {0.000344, 0.747724, 0, 1.0};
Point(15) = {-0.006854, 0.748694, 0, 1.0};
Point(16) = {-0.014002, 0.749395, 0, 1.0};
Point(17) = {-0.021025, 0.749830, 0, 1.0};
Point(18) = {-0.027856, 0.750000, 0, 1.0};
Point(19) = {-0.034422, 0.749911, 0, 1.0};
Point(20) = {-0.040661, 0.749569, 0, 1.0};
Point(21) = {-0.046511, 0.748988, 0, 1.0};
Point(22) = {-0.051919, 0.748179, 0, 1.0};
Point(23) = {-0.056835, 0.747162, 0, 1.0};
Point(24) = {-0.061214, 0.745962, 0, 1.0};
Point(25) = {-0.065019, 0.744605, 0, 1.0};
Point(26) = {-0.068219, 0.743130, 0, 1.0};
Point(27) = {-0.070787, 0.741576, 0, 1.0};
Point(28) = {-0.072703, 0.739998, 0, 1.0};
Point(29) = {-0.073947, 0.738466, 0, 1.0};
Point(30) = {-0.074302, 0.737760, 0, 1.0};
Point(31) = {-0.074436, 0.737350, 0, 1.0};
Point(32) = {-0.074485, 0.737091, 0, 1.0};
Point(33) = {-0.074506, 0.736846, 0, 1.0};
Point(34) = {-0.074502, 0.736730, 0, 1.0};
Point(35) = {-0.074490, 0.736620, 0, 1.0};
Point(36) = {-0.074466, 0.736517, 0, 1.0};
Point(37) = {-0.074424, 0.736417, 0, 1.0};
Point(38) = {-0.074367, 0.736317, 0, 1.0};
Point(39) = {-0.074299, 0.736214, 0, 1.0};
Point(40) = {-0.074127, 0.736006, 0, 1.0};
Point(41) = {-0.073913, 0.735796, 0, 1.0};
Point(42) = {-0.073523, 0.735473, 0, 1.0};
Point(43) = {-0.072672, 0.734908, 0, 1.0};
Point(44) = {-0.070354, 0.733800, 0, 1.0};
Point(45) = {-0.067193, 0.732703, 0, 1.0};
Point(46) = {-0.063226, 0.731631, 0, 1.0};
Point(47) = {-0.058490, 0.730594, 0, 1.0};
Point(48) = {-0.053036, 0.729593, 0, 1.0};
Point(49) = {-0.046924, 0.728629, 0, 1.0};
Point(50) = {-0.040220, 0.727704, 0, 1.0};
Point(51) = {-0.033005, 0.726814, 0, 1.0};
Point(52) = {-0.025363, 0.725962, 0, 1.0};
Point(53) = {-0.017387, 0.725152, 0, 1.0};
Point(54) = {-0.009173, 0.724389, 0, 1.0};
Point(55) = {-0.000825, 0.723682, 0, 1.0};
Point(56) = {0.007561, 0.723053, 0, 1.0};
Point(57) = {0.015899, 0.722511, 0, 1.0};
Point(58) = {0.024101, 0.722069, 0, 1.0};
Point(59) = {0.032077, 0.721733, 0, 1.0};
Point(60) = {0.039759, 0.721539, 0, 1.0};
Point(61) = {0.048369, 0.721342, 0, 1.0};
Point(62) = {0.054236, 0.721445, 0, 1.0};
Point(63) = {0.060861, 0.721302, 0, 1.0};
Point(64) = {0.066853, 0.720995, 0, 1.0};
Point(65) = {0.072025, 0.720514, 0, 1.0};
Point(66) = {0.074559, 0.720170, 0, 1.0};
Point(67) = {-0.074731, -0.721631, 0, 1.0};
Point(68) = {-0.073824, -0.722006, 0, 1.0};
Point(69) = {-0.069853, -0.723666, 0, 1.0};
Point(70) = {-0.065165, -0.725618, 0, 1.0};
Point(71) = {-0.059870, -0.727847, 0, 1.0};
Point(72) = {-0.054080, -0.730310, 0, 1.0};
Point(73) = {-0.047913, -0.732943, 0, 1.0};
Point(74) = {-0.041484, -0.735660, 0, 1.0};
Point(75) = {-0.034896, -0.738359, 0, 1.0};
Point(76) = {-0.028239, -0.740888, 0, 1.0};
Point(77) = {-0.021489, -0.743093, 0, 1.0};
Point(78) = {-0.014575, -0.744947, 0, 1.0};
Point(79) = {-0.007510, -0.746481, 0, 1.0};
Point(80) = {-0.000344, -0.747724, 0, 1.0};
Point(81) = {0.006854, -0.748694, 0, 1.0};
Point(82) = {0.014002, -0.749395, 0, 1.0};
Point(83) = {0.021025, -0.749830, 0, 1.0};
Point(84) = {0.027856, -0.750000, 0, 1.0};
Point(85) = {0.034422, -0.749911, 0, 1.0};
Point(86) = {0.040661, -0.749569, 0, 1.0};
Point(87) = {0.046511, -0.748988, 0, 1.0};
Point(88) = {0.051919, -0.748179, 0, 1.0};
Point(89) = {0.056835, -0.747162, 0, 1.0};
Point(90) = {0.061214, -0.745962, 0, 1.0};
Point(91) = {0.065019, -0.744605, 0, 1.0};
Point(92) = {0.068219, -0.743130, 0, 1.0};
Point(93) = {0.070787, -0.741576, 0, 1.0};
Point(94) = {0.072703, -0.739998, 0, 1.0};
Point(95) = {0.073947, -0.738466, 0, 1.0};
Point(96) = {0.074302, -0.737760, 0, 1.0};
Point(97) = {0.074436, -0.737350, 0, 1.0};
Point(98) = {0.074485, -0.737091, 0, 1.0};
Point(99) = {0.074506, -0.736846, 0, 1.0};
Point(100) = {0.074502, -0.736730, 0, 1.0};
Point(101) = {0.074490, -0.736620, 0, 1.0};
Point(102) = {0.074466, -0.736517, 0, 1.0};
Point(103) = {0.074424, -0.736417, 0, 1.0};
Point(104) = {0.074367, -0.736317, 0, 1.0};
Point(105) = {0.074299, -0.736214, 0, 1.0};
Point(106) = {0.074127, -0.736006, 0, 1.0};
Point(107) = {0.073913, -0.735796, 0, 1.0};
Point(108) = {0.073523, -0.735473, 0, 1.0};
Point(109) = {0.072672, -0.734908, 0, 1.0};
Point(110) = {0.070354, -0.733800, 0, 1.0};
Point(111) = {0.067193, -0.732703, 0, 1.0};
Point(112) = {0.063226, -0.731631, 0, 1.0};
Point(113) = {0.058490, -0.730594, 0, 1.0};
Point(114) = {0.053036, -0.729593, 0, 1.0};
Point(115) = {0.046924, -0.728629, 0, 1.0};
Point(116) = {0.040220, -0.727704, 0, 1.0};
Point(117) = {0.033005, -0.726814, 0, 1.0};
Point(118) = {0.025363, -0.725962, 0, 1.0};
Point(119) = {0.017387, -0.725152, 0, 1.0};
Point(120) = {0.009173, -0.724389, 0, 1.0};
Point(121) = {0.000825, -0.723682, 0, 1.0};
Point(122) = {-0.007561, -0.723053, 0, 1.0};
Point(123) = {-0.015899, -0.722511, 0, 1.0};
Point(124) = {-0.024101, -0.722069, 0, 1.0};
Point(125) = {-0.032077, -0.721733, 0, 1.0};
Point(126) = {-0.039759, -0.721539, 0, 1.0};
Point(127) = {-0.048369, -0.721342, 0, 1.0};
Point(128) = {-0.054236, -0.721445, 0, 1.0};
Point(129) = {-0.060861, -0.721302, 0, 1.0};
Point(130) = {-0.066853, -0.720995, 0, 1.0};
Point(131) = {-0.072025, -0.720514, 0, 1.0};
Point(132) = {-0.074559, -0.720170, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:51};
Spline(3) = {51:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:85};
Spline(6) = {85:117};
Spline(7) = {117:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {36.00000000, 15.00000000, 0, 1.0};
Point(136) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
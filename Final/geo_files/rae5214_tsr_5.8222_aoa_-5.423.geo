SetFactory("OpenCASCADE");

Point(1) = {0.149105, 0.747700, 0, 1.0};
Point(2) = {0.148619, 0.747722, 0, 1.0};
Point(3) = {0.147166, 0.747783, 0, 1.0};
Point(4) = {0.144761, 0.747894, 0, 1.0};
Point(5) = {0.141421, 0.748099, 0, 1.0};
Point(6) = {0.137185, 0.748316, 0, 1.0};
Point(7) = {0.132093, 0.748568, 0, 1.0};
Point(8) = {0.126198, 0.748822, 0, 1.0};
Point(9) = {0.119550, 0.749101, 0, 1.0};
Point(10) = {0.112221, 0.749384, 0, 1.0};
Point(11) = {0.104279, 0.749636, 0, 1.0};
Point(12) = {0.095804, 0.749844, 0, 1.0};
Point(13) = {0.086880, 0.749971, 0, 1.0};
Point(14) = {0.077595, 0.750000, 0, 1.0};
Point(15) = {0.068046, 0.749883, 0, 1.0};
Point(16) = {0.058321, 0.749597, 0, 1.0};
Point(17) = {0.048517, 0.749156, 0, 1.0};
Point(18) = {0.038728, 0.748556, 0, 1.0};
Point(19) = {0.029044, 0.747838, 0, 1.0};
Point(20) = {0.019562, 0.747010, 0, 1.0};
Point(21) = {0.010370, 0.746069, 0, 1.0};
Point(22) = {0.001557, 0.745024, 0, 1.0};
Point(23) = {-0.006793, 0.743909, 0, 1.0};
Point(24) = {-0.014601, 0.742758, 0, 1.0};
Point(25) = {-0.021795, 0.741611, 0, 1.0};
Point(26) = {-0.028306, 0.740453, 0, 1.0};
Point(27) = {-0.034060, 0.739220, 0, 1.0};
Point(28) = {-0.039006, 0.737936, 0, 1.0};
Point(29) = {-0.043083, 0.736478, 0, 1.0};
Point(30) = {-0.044635, 0.735769, 0, 1.0};
Point(31) = {-0.046250, 0.734862, 0, 1.0};
Point(32) = {-0.047482, 0.734020, 0, 1.0};
Point(33) = {-0.048482, 0.733141, 0, 1.0};
Point(34) = {-0.048774, 0.732812, 0, 1.0};
Point(35) = {-0.049042, 0.732461, 0, 1.0};
Point(36) = {-0.049303, 0.732039, 0, 1.0};
Point(37) = {-0.049557, 0.731539, 0, 1.0};
Point(38) = {-0.049733, 0.731090, 0, 1.0};
Point(39) = {-0.049856, 0.730670, 0, 1.0};
Point(40) = {-0.049939, 0.730275, 0, 1.0};
Point(41) = {-0.049999, 0.729847, 0, 1.0};
Point(42) = {-0.050000, 0.728798, 0, 1.0};
Point(43) = {-0.049823, 0.727992, 0, 1.0};
Point(44) = {-0.049698, 0.727732, 0, 1.0};
Point(45) = {-0.049556, 0.727505, 0, 1.0};
Point(46) = {-0.049372, 0.727281, 0, 1.0};
Point(47) = {-0.049133, 0.727073, 0, 1.0};
Point(48) = {-0.048810, 0.726842, 0, 1.0};
Point(49) = {-0.048491, 0.726653, 0, 1.0};
Point(50) = {-0.048175, 0.726505, 0, 1.0};
Point(51) = {-0.047838, 0.726360, 0, 1.0};
Point(52) = {-0.046724, 0.726030, 0, 1.0};
Point(53) = {-0.045387, 0.725767, 0, 1.0};
Point(54) = {-0.043659, 0.725489, 0, 1.0};
Point(55) = {-0.042022, 0.725301, 0, 1.0};
Point(56) = {-0.037780, 0.725018, 0, 1.0};
Point(57) = {-0.032695, 0.724844, 0, 1.0};
Point(58) = {-0.026823, 0.724823, 0, 1.0};
Point(59) = {-0.020211, 0.724932, 0, 1.0};
Point(60) = {-0.012932, 0.725173, 0, 1.0};
Point(61) = {-0.005052, 0.725570, 0, 1.0};
Point(62) = {0.003352, 0.726117, 0, 1.0};
Point(63) = {0.012196, 0.726838, 0, 1.0};
Point(64) = {0.021389, 0.727763, 0, 1.0};
Point(65) = {0.030843, 0.728893, 0, 1.0};
Point(66) = {0.040467, 0.730235, 0, 1.0};
Point(67) = {0.050163, 0.731814, 0, 1.0};
Point(68) = {0.059838, 0.733624, 0, 1.0};
Point(69) = {0.069404, 0.735579, 0, 1.0};
Point(70) = {0.078775, 0.737576, 0, 1.0};
Point(71) = {0.087876, 0.739478, 0, 1.0};
Point(72) = {0.096627, 0.741175, 0, 1.0};
Point(73) = {0.104942, 0.742656, 0, 1.0};
Point(74) = {0.112742, 0.743896, 0, 1.0};
Point(75) = {0.119948, 0.744912, 0, 1.0};
Point(76) = {0.126492, 0.745724, 0, 1.0};
Point(77) = {0.132302, 0.746366, 0, 1.0};
Point(78) = {0.137326, 0.746835, 0, 1.0};
Point(79) = {0.141508, 0.747176, 0, 1.0};
Point(80) = {0.144806, 0.747416, 0, 1.0};
Point(81) = {0.147186, 0.747576, 0, 1.0};
Point(82) = {0.148624, 0.747666, 0, 1.0};
Point(83) = {-0.149105, -0.747700, 0, 1.0};
Point(84) = {-0.148619, -0.747722, 0, 1.0};
Point(85) = {-0.147166, -0.747783, 0, 1.0};
Point(86) = {-0.144761, -0.747894, 0, 1.0};
Point(87) = {-0.141421, -0.748099, 0, 1.0};
Point(88) = {-0.137185, -0.748316, 0, 1.0};
Point(89) = {-0.132093, -0.748568, 0, 1.0};
Point(90) = {-0.126198, -0.748822, 0, 1.0};
Point(91) = {-0.119550, -0.749101, 0, 1.0};
Point(92) = {-0.112221, -0.749384, 0, 1.0};
Point(93) = {-0.104279, -0.749636, 0, 1.0};
Point(94) = {-0.095804, -0.749844, 0, 1.0};
Point(95) = {-0.086880, -0.749971, 0, 1.0};
Point(96) = {-0.077595, -0.750000, 0, 1.0};
Point(97) = {-0.068046, -0.749883, 0, 1.0};
Point(98) = {-0.058321, -0.749597, 0, 1.0};
Point(99) = {-0.048517, -0.749156, 0, 1.0};
Point(100) = {-0.038728, -0.748556, 0, 1.0};
Point(101) = {-0.029044, -0.747838, 0, 1.0};
Point(102) = {-0.019562, -0.747010, 0, 1.0};
Point(103) = {-0.010370, -0.746069, 0, 1.0};
Point(104) = {-0.001557, -0.745024, 0, 1.0};
Point(105) = {0.006793, -0.743909, 0, 1.0};
Point(106) = {0.014601, -0.742758, 0, 1.0};
Point(107) = {0.021795, -0.741611, 0, 1.0};
Point(108) = {0.028306, -0.740453, 0, 1.0};
Point(109) = {0.034060, -0.739220, 0, 1.0};
Point(110) = {0.039006, -0.737936, 0, 1.0};
Point(111) = {0.043083, -0.736478, 0, 1.0};
Point(112) = {0.044635, -0.735769, 0, 1.0};
Point(113) = {0.046250, -0.734862, 0, 1.0};
Point(114) = {0.047482, -0.734020, 0, 1.0};
Point(115) = {0.048482, -0.733141, 0, 1.0};
Point(116) = {0.048774, -0.732812, 0, 1.0};
Point(117) = {0.049042, -0.732461, 0, 1.0};
Point(118) = {0.049303, -0.732039, 0, 1.0};
Point(119) = {0.049557, -0.731539, 0, 1.0};
Point(120) = {0.049733, -0.731090, 0, 1.0};
Point(121) = {0.049856, -0.730670, 0, 1.0};
Point(122) = {0.049939, -0.730275, 0, 1.0};
Point(123) = {0.049999, -0.729847, 0, 1.0};
Point(124) = {0.050000, -0.728798, 0, 1.0};
Point(125) = {0.049823, -0.727992, 0, 1.0};
Point(126) = {0.049698, -0.727732, 0, 1.0};
Point(127) = {0.049556, -0.727505, 0, 1.0};
Point(128) = {0.049372, -0.727281, 0, 1.0};
Point(129) = {0.049133, -0.727073, 0, 1.0};
Point(130) = {0.048810, -0.726842, 0, 1.0};
Point(131) = {0.048491, -0.726653, 0, 1.0};
Point(132) = {0.048175, -0.726505, 0, 1.0};
Point(133) = {0.047838, -0.726360, 0, 1.0};
Point(134) = {0.046724, -0.726030, 0, 1.0};
Point(135) = {0.045387, -0.725767, 0, 1.0};
Point(136) = {0.043659, -0.725489, 0, 1.0};
Point(137) = {0.042022, -0.725301, 0, 1.0};
Point(138) = {0.037780, -0.725018, 0, 1.0};
Point(139) = {0.032695, -0.724844, 0, 1.0};
Point(140) = {0.026823, -0.724823, 0, 1.0};
Point(141) = {0.020211, -0.724932, 0, 1.0};
Point(142) = {0.012932, -0.725173, 0, 1.0};
Point(143) = {0.005052, -0.725570, 0, 1.0};
Point(144) = {-0.003352, -0.726117, 0, 1.0};
Point(145) = {-0.012196, -0.726838, 0, 1.0};
Point(146) = {-0.021389, -0.727763, 0, 1.0};
Point(147) = {-0.030843, -0.728893, 0, 1.0};
Point(148) = {-0.040467, -0.730235, 0, 1.0};
Point(149) = {-0.050163, -0.731814, 0, 1.0};
Point(150) = {-0.059838, -0.733624, 0, 1.0};
Point(151) = {-0.069404, -0.735579, 0, 1.0};
Point(152) = {-0.078775, -0.737576, 0, 1.0};
Point(153) = {-0.087876, -0.739478, 0, 1.0};
Point(154) = {-0.096627, -0.741175, 0, 1.0};
Point(155) = {-0.104942, -0.742656, 0, 1.0};
Point(156) = {-0.112742, -0.743896, 0, 1.0};
Point(157) = {-0.119948, -0.744912, 0, 1.0};
Point(158) = {-0.126492, -0.745724, 0, 1.0};
Point(159) = {-0.132302, -0.746366, 0, 1.0};
Point(160) = {-0.137326, -0.746835, 0, 1.0};
Point(161) = {-0.141508, -0.747176, 0, 1.0};
Point(162) = {-0.144806, -0.747416, 0, 1.0};
Point(163) = {-0.147186, -0.747576, 0, 1.0};
Point(164) = {-0.148624, -0.747666, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:82};
Spline(4) = {82,1};

// Lines: second blade (splines 5-8)
Spline(5) = {83:104};
Spline(6) = {104:144};
Spline(7) = {144:164};
Spline(8) = {164,83};

// Outer domain (points 20001-4 and lines)
Point(165) = {-13.50000000, -15.00000000, 0, 1.0};
Point(166) = {-13.50000000, 15.00000000, 0, 1.0};
Point(167) = {13.50000000, 15.00000000, 0, 1.0};
Point(168) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {165, 166};
Line(12) = {166, 167};
Line(13) = {167, 168};
Line(14) = {165, 168};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
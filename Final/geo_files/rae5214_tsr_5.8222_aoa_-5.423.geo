SetFactory("OpenCASCADE");

Point(1) = {0.111996, 0.748275, 0, 1.0};
Point(2) = {0.111632, 0.748292, 0, 1.0};
Point(3) = {0.110543, 0.748337, 0, 1.0};
Point(4) = {0.108739, 0.748421, 0, 1.0};
Point(5) = {0.106233, 0.748575, 0, 1.0};
Point(6) = {0.103057, 0.748737, 0, 1.0};
Point(7) = {0.099237, 0.748926, 0, 1.0};
Point(8) = {0.094817, 0.749117, 0, 1.0};
Point(9) = {0.089830, 0.749326, 0, 1.0};
Point(10) = {0.084333, 0.749538, 0, 1.0};
Point(11) = {0.078377, 0.749727, 0, 1.0};
Point(12) = {0.072021, 0.749883, 0, 1.0};
Point(13) = {0.065328, 0.749978, 0, 1.0};
Point(14) = {0.058364, 0.750000, 0, 1.0};
Point(15) = {0.051202, 0.749912, 0, 1.0};
Point(16) = {0.043909, 0.749697, 0, 1.0};
Point(17) = {0.036556, 0.749367, 0, 1.0};
Point(18) = {0.029214, 0.748917, 0, 1.0};
Point(19) = {0.021951, 0.748378, 0, 1.0};
Point(20) = {0.014840, 0.747758, 0, 1.0};
Point(21) = {0.007945, 0.747052, 0, 1.0};
Point(22) = {0.001336, 0.746268, 0, 1.0};
Point(23) = {-0.004927, 0.745432, 0, 1.0};
Point(24) = {-0.010783, 0.744569, 0, 1.0};
Point(25) = {-0.016178, 0.743709, 0, 1.0};
Point(26) = {-0.021062, 0.742840, 0, 1.0};
Point(27) = {-0.025377, 0.741915, 0, 1.0};
Point(28) = {-0.029087, 0.740952, 0, 1.0};
Point(29) = {-0.032144, 0.739859, 0, 1.0};
Point(30) = {-0.033308, 0.739326, 0, 1.0};
Point(31) = {-0.034520, 0.738646, 0, 1.0};
Point(32) = {-0.035444, 0.738015, 0, 1.0};
Point(33) = {-0.036193, 0.737356, 0, 1.0};
Point(34) = {-0.036413, 0.737109, 0, 1.0};
Point(35) = {-0.036614, 0.736846, 0, 1.0};
Point(36) = {-0.036809, 0.736529, 0, 1.0};
Point(37) = {-0.037000, 0.736154, 0, 1.0};
Point(38) = {-0.037132, 0.735817, 0, 1.0};
Point(39) = {-0.037224, 0.735503, 0, 1.0};
Point(40) = {-0.037287, 0.735206, 0, 1.0};
Point(41) = {-0.037331, 0.734885, 0, 1.0};
Point(42) = {-0.037332, 0.734099, 0, 1.0};
Point(43) = {-0.037199, 0.733494, 0, 1.0};
Point(44) = {-0.037106, 0.733299, 0, 1.0};
Point(45) = {-0.036999, 0.733128, 0, 1.0};
Point(46) = {-0.036861, 0.732961, 0, 1.0};
Point(47) = {-0.036682, 0.732804, 0, 1.0};
Point(48) = {-0.036439, 0.732632, 0, 1.0};
Point(49) = {-0.036200, 0.732490, 0, 1.0};
Point(50) = {-0.035963, 0.732378, 0, 1.0};
Point(51) = {-0.035711, 0.732270, 0, 1.0};
Point(52) = {-0.034875, 0.732022, 0, 1.0};
Point(53) = {-0.033872, 0.731825, 0, 1.0};
Point(54) = {-0.032576, 0.731617, 0, 1.0};
Point(55) = {-0.031348, 0.731476, 0, 1.0};
Point(56) = {-0.028167, 0.731264, 0, 1.0};
Point(57) = {-0.024353, 0.731133, 0, 1.0};
Point(58) = {-0.019949, 0.731117, 0, 1.0};
Point(59) = {-0.014991, 0.731199, 0, 1.0};
Point(60) = {-0.009531, 0.731380, 0, 1.0};
Point(61) = {-0.003621, 0.731677, 0, 1.0};
Point(62) = {0.002682, 0.732087, 0, 1.0};
Point(63) = {0.009315, 0.732628, 0, 1.0};
Point(64) = {0.016210, 0.733322, 0, 1.0};
Point(65) = {0.023300, 0.734170, 0, 1.0};
Point(66) = {0.030518, 0.735176, 0, 1.0};
Point(67) = {0.037790, 0.736361, 0, 1.0};
Point(68) = {0.045046, 0.737718, 0, 1.0};
Point(69) = {0.052221, 0.739184, 0, 1.0};
Point(70) = {0.059249, 0.740682, 0, 1.0};
Point(71) = {0.066075, 0.742109, 0, 1.0};
Point(72) = {0.072638, 0.743381, 0, 1.0};
Point(73) = {0.078874, 0.744492, 0, 1.0};
Point(74) = {0.084724, 0.745422, 0, 1.0};
Point(75) = {0.090129, 0.746184, 0, 1.0};
Point(76) = {0.095037, 0.746793, 0, 1.0};
Point(77) = {0.099394, 0.747274, 0, 1.0};
Point(78) = {0.103162, 0.747626, 0, 1.0};
Point(79) = {0.106299, 0.747882, 0, 1.0};
Point(80) = {0.108773, 0.748062, 0, 1.0};
Point(81) = {0.110557, 0.748182, 0, 1.0};
Point(82) = {0.111636, 0.748250, 0, 1.0};
Point(83) = {-0.111996, -0.748275, 0, 1.0};
Point(84) = {-0.111632, -0.748292, 0, 1.0};
Point(85) = {-0.110543, -0.748337, 0, 1.0};
Point(86) = {-0.108739, -0.748421, 0, 1.0};
Point(87) = {-0.106233, -0.748575, 0, 1.0};
Point(88) = {-0.103057, -0.748737, 0, 1.0};
Point(89) = {-0.099237, -0.748926, 0, 1.0};
Point(90) = {-0.094817, -0.749117, 0, 1.0};
Point(91) = {-0.089830, -0.749326, 0, 1.0};
Point(92) = {-0.084333, -0.749538, 0, 1.0};
Point(93) = {-0.078377, -0.749727, 0, 1.0};
Point(94) = {-0.072021, -0.749883, 0, 1.0};
Point(95) = {-0.065328, -0.749978, 0, 1.0};
Point(96) = {-0.058364, -0.750000, 0, 1.0};
Point(97) = {-0.051202, -0.749912, 0, 1.0};
Point(98) = {-0.043909, -0.749697, 0, 1.0};
Point(99) = {-0.036556, -0.749367, 0, 1.0};
Point(100) = {-0.029214, -0.748917, 0, 1.0};
Point(101) = {-0.021951, -0.748378, 0, 1.0};
Point(102) = {-0.014840, -0.747758, 0, 1.0};
Point(103) = {-0.007945, -0.747052, 0, 1.0};
Point(104) = {-0.001336, -0.746268, 0, 1.0};
Point(105) = {0.004927, -0.745432, 0, 1.0};
Point(106) = {0.010783, -0.744569, 0, 1.0};
Point(107) = {0.016178, -0.743709, 0, 1.0};
Point(108) = {0.021062, -0.742840, 0, 1.0};
Point(109) = {0.025377, -0.741915, 0, 1.0};
Point(110) = {0.029087, -0.740952, 0, 1.0};
Point(111) = {0.032144, -0.739859, 0, 1.0};
Point(112) = {0.033308, -0.739326, 0, 1.0};
Point(113) = {0.034520, -0.738646, 0, 1.0};
Point(114) = {0.035444, -0.738015, 0, 1.0};
Point(115) = {0.036193, -0.737356, 0, 1.0};
Point(116) = {0.036413, -0.737109, 0, 1.0};
Point(117) = {0.036614, -0.736846, 0, 1.0};
Point(118) = {0.036809, -0.736529, 0, 1.0};
Point(119) = {0.037000, -0.736154, 0, 1.0};
Point(120) = {0.037132, -0.735817, 0, 1.0};
Point(121) = {0.037224, -0.735503, 0, 1.0};
Point(122) = {0.037287, -0.735206, 0, 1.0};
Point(123) = {0.037331, -0.734885, 0, 1.0};
Point(124) = {0.037332, -0.734099, 0, 1.0};
Point(125) = {0.037199, -0.733494, 0, 1.0};
Point(126) = {0.037106, -0.733299, 0, 1.0};
Point(127) = {0.036999, -0.733128, 0, 1.0};
Point(128) = {0.036861, -0.732961, 0, 1.0};
Point(129) = {0.036682, -0.732804, 0, 1.0};
Point(130) = {0.036439, -0.732632, 0, 1.0};
Point(131) = {0.036200, -0.732490, 0, 1.0};
Point(132) = {0.035963, -0.732378, 0, 1.0};
Point(133) = {0.035711, -0.732270, 0, 1.0};
Point(134) = {0.034875, -0.732022, 0, 1.0};
Point(135) = {0.033872, -0.731825, 0, 1.0};
Point(136) = {0.032576, -0.731617, 0, 1.0};
Point(137) = {0.031348, -0.731476, 0, 1.0};
Point(138) = {0.028167, -0.731264, 0, 1.0};
Point(139) = {0.024353, -0.731133, 0, 1.0};
Point(140) = {0.019949, -0.731117, 0, 1.0};
Point(141) = {0.014991, -0.731199, 0, 1.0};
Point(142) = {0.009531, -0.731380, 0, 1.0};
Point(143) = {0.003621, -0.731677, 0, 1.0};
Point(144) = {-0.002682, -0.732087, 0, 1.0};
Point(145) = {-0.009315, -0.732628, 0, 1.0};
Point(146) = {-0.016210, -0.733322, 0, 1.0};
Point(147) = {-0.023300, -0.734170, 0, 1.0};
Point(148) = {-0.030518, -0.735176, 0, 1.0};
Point(149) = {-0.037790, -0.736361, 0, 1.0};
Point(150) = {-0.045046, -0.737718, 0, 1.0};
Point(151) = {-0.052221, -0.739184, 0, 1.0};
Point(152) = {-0.059249, -0.740682, 0, 1.0};
Point(153) = {-0.066075, -0.742109, 0, 1.0};
Point(154) = {-0.072638, -0.743381, 0, 1.0};
Point(155) = {-0.078874, -0.744492, 0, 1.0};
Point(156) = {-0.084724, -0.745422, 0, 1.0};
Point(157) = {-0.090129, -0.746184, 0, 1.0};
Point(158) = {-0.095037, -0.746793, 0, 1.0};
Point(159) = {-0.099394, -0.747274, 0, 1.0};
Point(160) = {-0.103162, -0.747626, 0, 1.0};
Point(161) = {-0.106299, -0.747882, 0, 1.0};
Point(162) = {-0.108773, -0.748062, 0, 1.0};
Point(163) = {-0.110557, -0.748182, 0, 1.0};
Point(164) = {-0.111636, -0.748250, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:62};
Spline(3) = {62:82};
Spline(4) = {82,1};

// Lines: second blade (splines 5-8)
Spline(5) = {83:104};
Spline(6) = {104:144};
Spline(7) = {144:164};
Spline(8) = {164,83};

// Outer domain (points 20001-4 and lines)
Point(165) = {-13.50000000, -15.00000000, 0, 1.0};
Point(166) = {-13.50000000, 15.00000000, 0, 1.0};
Point(167) = {13.50000000, 15.00000000, 0, 1.0};
Point(168) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {165, 166};
Line(12) = {166, 167};
Line(13) = {167, 168};
Line(14) = {165, 168};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074907, 0.731218, 0, 1.0};
Point(2) = {0.073575, 0.731621, 0, 1.0};
Point(3) = {0.070886, 0.732448, 0, 1.0};
Point(4) = {0.067920, 0.733357, 0, 1.0};
Point(5) = {0.064687, 0.734342, 0, 1.0};
Point(6) = {0.061205, 0.735405, 0, 1.0};
Point(7) = {0.057488, 0.736552, 0, 1.0};
Point(8) = {0.053553, 0.737782, 0, 1.0};
Point(9) = {0.049416, 0.739083, 0, 1.0};
Point(10) = {0.045092, 0.740429, 0, 1.0};
Point(11) = {0.040595, 0.741765, 0, 1.0};
Point(12) = {0.035942, 0.743026, 0, 1.0};
Point(13) = {0.031147, 0.744177, 0, 1.0};
Point(14) = {0.026232, 0.745212, 0, 1.0};
Point(15) = {0.021220, 0.746153, 0, 1.0};
Point(16) = {0.016132, 0.747006, 0, 1.0};
Point(17) = {0.010992, 0.747770, 0, 1.0};
Point(18) = {0.005821, 0.748428, 0, 1.0};
Point(19) = {0.000639, 0.748967, 0, 1.0};
Point(20) = {-0.004532, 0.749384, 0, 1.0};
Point(21) = {-0.009669, 0.749685, 0, 1.0};
Point(22) = {-0.014748, 0.749882, 0, 1.0};
Point(23) = {-0.019746, 0.749987, 0, 1.0};
Point(24) = {-0.024643, 0.750000, 0, 1.0};
Point(25) = {-0.029415, 0.749930, 0, 1.0};
Point(26) = {-0.034045, 0.749779, 0, 1.0};
Point(27) = {-0.038510, 0.749554, 0, 1.0};
Point(28) = {-0.042789, 0.749259, 0, 1.0};
Point(29) = {-0.046867, 0.748900, 0, 1.0};
Point(30) = {-0.050724, 0.748483, 0, 1.0};
Point(31) = {-0.054344, 0.748013, 0, 1.0};
Point(32) = {-0.057710, 0.747502, 0, 1.0};
Point(33) = {-0.060806, 0.746957, 0, 1.0};
Point(34) = {-0.063621, 0.746385, 0, 1.0};
Point(35) = {-0.066141, 0.745797, 0, 1.0};
Point(36) = {-0.068354, 0.745205, 0, 1.0};
Point(37) = {-0.070250, 0.744621, 0, 1.0};
Point(38) = {-0.071818, 0.744064, 0, 1.0};
Point(39) = {-0.073051, 0.743559, 0, 1.0};
Point(40) = {-0.073945, 0.743098, 0, 1.0};
Point(41) = {-0.074496, 0.742675, 0, 1.0};
Point(42) = {-0.074701, 0.742297, 0, 1.0};
Point(43) = {-0.074561, 0.741958, 0, 1.0};
Point(44) = {-0.074073, 0.741667, 0, 1.0};
Point(45) = {-0.073244, 0.741412, 0, 1.0};
Point(46) = {-0.072076, 0.741181, 0, 1.0};
Point(47) = {-0.070576, 0.740979, 0, 1.0};
Point(48) = {-0.068749, 0.740790, 0, 1.0};
Point(49) = {-0.066606, 0.740605, 0, 1.0};
Point(50) = {-0.064155, 0.740419, 0, 1.0};
Point(51) = {-0.061408, 0.740229, 0, 1.0};
Point(52) = {-0.058379, 0.740029, 0, 1.0};
Point(53) = {-0.055077, 0.739818, 0, 1.0};
Point(54) = {-0.051519, 0.739594, 0, 1.0};
Point(55) = {-0.047721, 0.739356, 0, 1.0};
Point(56) = {-0.043699, 0.739102, 0, 1.0};
Point(57) = {-0.039470, 0.738830, 0, 1.0};
Point(58) = {-0.035051, 0.738542, 0, 1.0};
Point(59) = {-0.030462, 0.738235, 0, 1.0};
Point(60) = {-0.025725, 0.737912, 0, 1.0};
Point(61) = {-0.020858, 0.737571, 0, 1.0};
Point(62) = {-0.015882, 0.737213, 0, 1.0};
Point(63) = {-0.010819, 0.736839, 0, 1.0};
Point(64) = {-0.005689, 0.736450, 0, 1.0};
Point(65) = {-0.000518, 0.736046, 0, 1.0};
Point(66) = {0.004676, 0.735633, 0, 1.0};
Point(67) = {0.009869, 0.735216, 0, 1.0};
Point(68) = {0.015039, 0.734801, 0, 1.0};
Point(69) = {0.020167, 0.734388, 0, 1.0};
Point(70) = {0.025226, 0.733974, 0, 1.0};
Point(71) = {0.030196, 0.733553, 0, 1.0};
Point(72) = {0.035056, 0.733125, 0, 1.0};
Point(73) = {0.039785, 0.732709, 0, 1.0};
Point(74) = {0.044368, 0.732338, 0, 1.0};
Point(75) = {0.048785, 0.732027, 0, 1.0};
Point(76) = {0.053014, 0.731762, 0, 1.0};
Point(77) = {0.057036, 0.731506, 0, 1.0};
Point(78) = {0.060831, 0.731226, 0, 1.0};
Point(79) = {0.064381, 0.730916, 0, 1.0};
Point(80) = {0.067672, 0.730585, 0, 1.0};
Point(81) = {0.070688, 0.730244, 0, 1.0};
Point(82) = {0.073421, 0.729902, 0, 1.0};
Point(83) = {0.074772, 0.729716, 0, 1.0};
Point(84) = {-0.074907, -0.731218, 0, 1.0};
Point(85) = {-0.073575, -0.731621, 0, 1.0};
Point(86) = {-0.070886, -0.732448, 0, 1.0};
Point(87) = {-0.067920, -0.733357, 0, 1.0};
Point(88) = {-0.064687, -0.734342, 0, 1.0};
Point(89) = {-0.061205, -0.735405, 0, 1.0};
Point(90) = {-0.057488, -0.736552, 0, 1.0};
Point(91) = {-0.053553, -0.737782, 0, 1.0};
Point(92) = {-0.049416, -0.739083, 0, 1.0};
Point(93) = {-0.045092, -0.740429, 0, 1.0};
Point(94) = {-0.040595, -0.741765, 0, 1.0};
Point(95) = {-0.035942, -0.743026, 0, 1.0};
Point(96) = {-0.031147, -0.744177, 0, 1.0};
Point(97) = {-0.026232, -0.745212, 0, 1.0};
Point(98) = {-0.021220, -0.746153, 0, 1.0};
Point(99) = {-0.016132, -0.747006, 0, 1.0};
Point(100) = {-0.010992, -0.747770, 0, 1.0};
Point(101) = {-0.005821, -0.748428, 0, 1.0};
Point(102) = {-0.000639, -0.748967, 0, 1.0};
Point(103) = {0.004532, -0.749384, 0, 1.0};
Point(104) = {0.009669, -0.749685, 0, 1.0};
Point(105) = {0.014748, -0.749882, 0, 1.0};
Point(106) = {0.019746, -0.749987, 0, 1.0};
Point(107) = {0.024643, -0.750000, 0, 1.0};
Point(108) = {0.029415, -0.749930, 0, 1.0};
Point(109) = {0.034045, -0.749779, 0, 1.0};
Point(110) = {0.038510, -0.749554, 0, 1.0};
Point(111) = {0.042789, -0.749259, 0, 1.0};
Point(112) = {0.046867, -0.748900, 0, 1.0};
Point(113) = {0.050724, -0.748483, 0, 1.0};
Point(114) = {0.054344, -0.748013, 0, 1.0};
Point(115) = {0.057710, -0.747502, 0, 1.0};
Point(116) = {0.060806, -0.746957, 0, 1.0};
Point(117) = {0.063621, -0.746385, 0, 1.0};
Point(118) = {0.066141, -0.745797, 0, 1.0};
Point(119) = {0.068354, -0.745205, 0, 1.0};
Point(120) = {0.070250, -0.744621, 0, 1.0};
Point(121) = {0.071818, -0.744064, 0, 1.0};
Point(122) = {0.073051, -0.743559, 0, 1.0};
Point(123) = {0.073945, -0.743098, 0, 1.0};
Point(124) = {0.074496, -0.742675, 0, 1.0};
Point(125) = {0.074701, -0.742297, 0, 1.0};
Point(126) = {0.074561, -0.741958, 0, 1.0};
Point(127) = {0.074073, -0.741667, 0, 1.0};
Point(128) = {0.073244, -0.741412, 0, 1.0};
Point(129) = {0.072076, -0.741181, 0, 1.0};
Point(130) = {0.070576, -0.740979, 0, 1.0};
Point(131) = {0.068749, -0.740790, 0, 1.0};
Point(132) = {0.066606, -0.740605, 0, 1.0};
Point(133) = {0.064155, -0.740419, 0, 1.0};
Point(134) = {0.061408, -0.740229, 0, 1.0};
Point(135) = {0.058379, -0.740029, 0, 1.0};
Point(136) = {0.055077, -0.739818, 0, 1.0};
Point(137) = {0.051519, -0.739594, 0, 1.0};
Point(138) = {0.047721, -0.739356, 0, 1.0};
Point(139) = {0.043699, -0.739102, 0, 1.0};
Point(140) = {0.039470, -0.738830, 0, 1.0};
Point(141) = {0.035051, -0.738542, 0, 1.0};
Point(142) = {0.030462, -0.738235, 0, 1.0};
Point(143) = {0.025725, -0.737912, 0, 1.0};
Point(144) = {0.020858, -0.737571, 0, 1.0};
Point(145) = {0.015882, -0.737213, 0, 1.0};
Point(146) = {0.010819, -0.736839, 0, 1.0};
Point(147) = {0.005689, -0.736450, 0, 1.0};
Point(148) = {0.000518, -0.736046, 0, 1.0};
Point(149) = {-0.004676, -0.735633, 0, 1.0};
Point(150) = {-0.009869, -0.735216, 0, 1.0};
Point(151) = {-0.015039, -0.734801, 0, 1.0};
Point(152) = {-0.020167, -0.734388, 0, 1.0};
Point(153) = {-0.025226, -0.733974, 0, 1.0};
Point(154) = {-0.030196, -0.733553, 0, 1.0};
Point(155) = {-0.035056, -0.733125, 0, 1.0};
Point(156) = {-0.039785, -0.732709, 0, 1.0};
Point(157) = {-0.044368, -0.732338, 0, 1.0};
Point(158) = {-0.048785, -0.732027, 0, 1.0};
Point(159) = {-0.053014, -0.731762, 0, 1.0};
Point(160) = {-0.057036, -0.731506, 0, 1.0};
Point(161) = {-0.060831, -0.731226, 0, 1.0};
Point(162) = {-0.064381, -0.730916, 0, 1.0};
Point(163) = {-0.067672, -0.730585, 0, 1.0};
Point(164) = {-0.070688, -0.730244, 0, 1.0};
Point(165) = {-0.073421, -0.729902, 0, 1.0};
Point(166) = {-0.074772, -0.729716, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:108};
Spline(6) = {108:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074714, 0.728235, 0, 1.0};
Point(2) = {0.073488, 0.728541, 0, 1.0};
Point(3) = {0.069295, 0.729565, 0, 1.0};
Point(4) = {0.064333, 0.730782, 0, 1.0};
Point(5) = {0.058693, 0.732188, 0, 1.0};
Point(6) = {0.052475, 0.733759, 0, 1.0};
Point(7) = {0.045781, 0.735462, 0, 1.0};
Point(8) = {0.038713, 0.737241, 0, 1.0};
Point(9) = {0.031358, 0.739036, 0, 1.0};
Point(10) = {0.023784, 0.740793, 0, 1.0};
Point(11) = {0.016060, 0.742470, 0, 1.0};
Point(12) = {0.008259, 0.744032, 0, 1.0};
Point(13) = {0.000448, 0.745454, 0, 1.0};
Point(14) = {-0.007299, 0.746711, 0, 1.0};
Point(15) = {-0.014912, 0.747785, 0, 1.0};
Point(16) = {-0.022315, 0.748662, 0, 1.0};
Point(17) = {-0.029440, 0.749331, 0, 1.0};
Point(18) = {-0.036217, 0.749779, 0, 1.0};
Point(19) = {-0.042583, 0.750000, 0, 1.0};
Point(20) = {-0.048479, 0.749988, 0, 1.0};
Point(21) = {-0.053856, 0.749740, 0, 1.0};
Point(22) = {-0.058677, 0.749262, 0, 1.0};
Point(23) = {-0.062907, 0.748567, 0, 1.0};
Point(24) = {-0.066518, 0.747677, 0, 1.0};
Point(25) = {-0.069493, 0.746624, 0, 1.0};
Point(26) = {-0.071811, 0.745446, 0, 1.0};
Point(27) = {-0.073457, 0.744203, 0, 1.0};
Point(28) = {-0.074216, 0.743310, 0, 1.0};
Point(29) = {-0.074426, 0.742948, 0, 1.0};
Point(30) = {-0.074529, 0.742715, 0, 1.0};
Point(31) = {-0.074599, 0.742490, 0, 1.0};
Point(32) = {-0.074621, 0.742382, 0, 1.0};
Point(33) = {-0.074631, 0.742277, 0, 1.0};
Point(34) = {-0.074632, 0.742178, 0, 1.0};
Point(35) = {-0.074617, 0.742079, 0, 1.0};
Point(36) = {-0.074589, 0.741977, 0, 1.0};
Point(37) = {-0.074549, 0.741872, 0, 1.0};
Point(38) = {-0.074445, 0.741656, 0, 1.0};
Point(39) = {-0.074303, 0.741435, 0, 1.0};
Point(40) = {-0.074033, 0.741095, 0, 1.0};
Point(41) = {-0.073708, 0.740766, 0, 1.0};
Point(42) = {-0.072036, 0.739540, 0, 1.0};
Point(43) = {-0.069584, 0.738284, 0, 1.0};
Point(44) = {-0.066366, 0.737030, 0, 1.0};
Point(45) = {-0.062406, 0.735790, 0, 1.0};
Point(46) = {-0.057745, 0.734577, 0, 1.0};
Point(47) = {-0.052430, 0.733403, 0, 1.0};
Point(48) = {-0.046516, 0.732278, 0, 1.0};
Point(49) = {-0.040065, 0.731210, 0, 1.0};
Point(50) = {-0.033148, 0.730207, 0, 1.0};
Point(51) = {-0.025840, 0.729282, 0, 1.0};
Point(52) = {-0.018223, 0.728443, 0, 1.0};
Point(53) = {-0.010377, 0.727700, 0, 1.0};
Point(54) = {-0.002386, 0.727060, 0, 1.0};
Point(55) = {0.005661, 0.726535, 0, 1.0};
Point(56) = {0.013684, 0.726134, 0, 1.0};
Point(57) = {0.021602, 0.725864, 0, 1.0};
Point(58) = {0.029342, 0.725731, 0, 1.0};
Point(59) = {0.036845, 0.725728, 0, 1.0};
Point(60) = {0.044045, 0.725834, 0, 1.0};
Point(61) = {0.050875, 0.726020, 0, 1.0};
Point(62) = {0.057264, 0.726251, 0, 1.0};
Point(63) = {0.063137, 0.726476, 0, 1.0};
Point(64) = {0.068391, 0.726640, 0, 1.0};
Point(65) = {0.072900, 0.726723, 0, 1.0};
Point(66) = {0.074562, 0.726730, 0, 1.0};
Point(67) = {-0.074714, -0.728235, 0, 1.0};
Point(68) = {-0.073488, -0.728541, 0, 1.0};
Point(69) = {-0.069295, -0.729565, 0, 1.0};
Point(70) = {-0.064333, -0.730782, 0, 1.0};
Point(71) = {-0.058693, -0.732188, 0, 1.0};
Point(72) = {-0.052475, -0.733759, 0, 1.0};
Point(73) = {-0.045781, -0.735462, 0, 1.0};
Point(74) = {-0.038713, -0.737241, 0, 1.0};
Point(75) = {-0.031358, -0.739036, 0, 1.0};
Point(76) = {-0.023784, -0.740793, 0, 1.0};
Point(77) = {-0.016060, -0.742470, 0, 1.0};
Point(78) = {-0.008259, -0.744032, 0, 1.0};
Point(79) = {-0.000448, -0.745454, 0, 1.0};
Point(80) = {0.007299, -0.746711, 0, 1.0};
Point(81) = {0.014912, -0.747785, 0, 1.0};
Point(82) = {0.022315, -0.748662, 0, 1.0};
Point(83) = {0.029440, -0.749331, 0, 1.0};
Point(84) = {0.036217, -0.749779, 0, 1.0};
Point(85) = {0.042583, -0.750000, 0, 1.0};
Point(86) = {0.048479, -0.749988, 0, 1.0};
Point(87) = {0.053856, -0.749740, 0, 1.0};
Point(88) = {0.058677, -0.749262, 0, 1.0};
Point(89) = {0.062907, -0.748567, 0, 1.0};
Point(90) = {0.066518, -0.747677, 0, 1.0};
Point(91) = {0.069493, -0.746624, 0, 1.0};
Point(92) = {0.071811, -0.745446, 0, 1.0};
Point(93) = {0.073457, -0.744203, 0, 1.0};
Point(94) = {0.074216, -0.743310, 0, 1.0};
Point(95) = {0.074426, -0.742948, 0, 1.0};
Point(96) = {0.074529, -0.742715, 0, 1.0};
Point(97) = {0.074599, -0.742490, 0, 1.0};
Point(98) = {0.074621, -0.742382, 0, 1.0};
Point(99) = {0.074631, -0.742277, 0, 1.0};
Point(100) = {0.074632, -0.742178, 0, 1.0};
Point(101) = {0.074617, -0.742079, 0, 1.0};
Point(102) = {0.074589, -0.741977, 0, 1.0};
Point(103) = {0.074549, -0.741872, 0, 1.0};
Point(104) = {0.074445, -0.741656, 0, 1.0};
Point(105) = {0.074303, -0.741435, 0, 1.0};
Point(106) = {0.074033, -0.741095, 0, 1.0};
Point(107) = {0.073708, -0.740766, 0, 1.0};
Point(108) = {0.072036, -0.739540, 0, 1.0};
Point(109) = {0.069584, -0.738284, 0, 1.0};
Point(110) = {0.066366, -0.737030, 0, 1.0};
Point(111) = {0.062406, -0.735790, 0, 1.0};
Point(112) = {0.057745, -0.734577, 0, 1.0};
Point(113) = {0.052430, -0.733403, 0, 1.0};
Point(114) = {0.046516, -0.732278, 0, 1.0};
Point(115) = {0.040065, -0.731210, 0, 1.0};
Point(116) = {0.033148, -0.730207, 0, 1.0};
Point(117) = {0.025840, -0.729282, 0, 1.0};
Point(118) = {0.018223, -0.728443, 0, 1.0};
Point(119) = {0.010377, -0.727700, 0, 1.0};
Point(120) = {0.002386, -0.727060, 0, 1.0};
Point(121) = {-0.005661, -0.726535, 0, 1.0};
Point(122) = {-0.013684, -0.726134, 0, 1.0};
Point(123) = {-0.021602, -0.725864, 0, 1.0};
Point(124) = {-0.029342, -0.725731, 0, 1.0};
Point(125) = {-0.036845, -0.725728, 0, 1.0};
Point(126) = {-0.044045, -0.725834, 0, 1.0};
Point(127) = {-0.050875, -0.726020, 0, 1.0};
Point(128) = {-0.057264, -0.726251, 0, 1.0};
Point(129) = {-0.063137, -0.726476, 0, 1.0};
Point(130) = {-0.068391, -0.726640, 0, 1.0};
Point(131) = {-0.072900, -0.726723, 0, 1.0};
Point(132) = {-0.074562, -0.726730, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:83};
Spline(6) = {83:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149920, 0.738648, 0, 1.0};
Point(2) = {0.149242, 0.738735, 0, 1.0};
Point(3) = {0.147280, 0.739035, 0, 1.0};
Point(4) = {0.144198, 0.739563, 0, 1.0};
Point(5) = {0.140109, 0.740242, 0, 1.0};
Point(6) = {0.135050, 0.740991, 0, 1.0};
Point(7) = {0.129045, 0.741814, 0, 1.0};
Point(8) = {0.122179, 0.742710, 0, 1.0};
Point(9) = {0.114550, 0.743674, 0, 1.0};
Point(10) = {0.106265, 0.744682, 0, 1.0};
Point(11) = {0.097438, 0.745711, 0, 1.0};
Point(12) = {0.088188, 0.746731, 0, 1.0};
Point(13) = {0.078636, 0.747701, 0, 1.0};
Point(14) = {0.068902, 0.748569, 0, 1.0};
Point(15) = {0.059090, 0.749272, 0, 1.0};
Point(16) = {0.049273, 0.749757, 0, 1.0};
Point(17) = {0.039510, 0.750000, 0, 1.0};
Point(18) = {0.029872, 0.750000, 0, 1.0};
Point(19) = {0.020443, 0.749764, 0, 1.0};
Point(20) = {0.011300, 0.749300, 0, 1.0};
Point(21) = {0.002532, 0.748624, 0, 1.0};
Point(22) = {-0.005779, 0.747755, 0, 1.0};
Point(23) = {-0.013554, 0.746703, 0, 1.0};
Point(24) = {-0.020715, 0.745490, 0, 1.0};
Point(25) = {-0.027203, 0.744137, 0, 1.0};
Point(26) = {-0.032956, 0.742664, 0, 1.0};
Point(27) = {-0.037930, 0.741105, 0, 1.0};
Point(28) = {-0.042074, 0.739491, 0, 1.0};
Point(29) = {-0.045359, 0.737856, 0, 1.0};
Point(30) = {-0.047764, 0.736235, 0, 1.0};
Point(31) = {-0.049293, 0.734669, 0, 1.0};
Point(32) = {-0.049981, 0.733265, 0, 1.0};
Point(33) = {-0.050000, 0.733003, 0, 1.0};
Point(34) = {-0.049674, 0.732226, 0, 1.0};
Point(35) = {-0.048205, 0.731491, 0, 1.0};
Point(36) = {-0.045409, 0.730900, 0, 1.0};
Point(37) = {-0.041945, 0.730453, 0, 1.0};
Point(38) = {-0.037247, 0.730178, 0, 1.0};
Point(39) = {-0.031556, 0.730064, 0, 1.0};
Point(40) = {-0.024920, 0.730094, 0, 1.0};
Point(41) = {-0.017411, 0.730242, 0, 1.0};
Point(42) = {-0.009131, 0.730497, 0, 1.0};
Point(43) = {-0.000170, 0.730866, 0, 1.0};
Point(44) = {0.009393, 0.731336, 0, 1.0};
Point(45) = {0.019455, 0.731881, 0, 1.0};
Point(46) = {0.029901, 0.732474, 0, 1.0};
Point(47) = {0.040605, 0.733098, 0, 1.0};
Point(48) = {0.051442, 0.733738, 0, 1.0};
Point(49) = {0.062282, 0.734381, 0, 1.0};
Point(50) = {0.073006, 0.735013, 0, 1.0};
Point(51) = {0.083483, 0.735613, 0, 1.0};
Point(52) = {0.093586, 0.736171, 0, 1.0};
Point(53) = {0.103185, 0.736672, 0, 1.0};
Point(54) = {0.112159, 0.737109, 0, 1.0};
Point(55) = {0.120393, 0.737484, 0, 1.0};
Point(56) = {0.127782, 0.737797, 0, 1.0};
Point(57) = {0.134221, 0.738054, 0, 1.0};
Point(58) = {0.139635, 0.738275, 0, 1.0};
Point(59) = {0.143979, 0.738474, 0, 1.0};
Point(60) = {0.147212, 0.738607, 0, 1.0};
Point(61) = {0.149230, 0.738648, 0, 1.0};
Point(62) = {-0.149920, -0.738648, 0, 1.0};
Point(63) = {-0.149242, -0.738735, 0, 1.0};
Point(64) = {-0.147280, -0.739035, 0, 1.0};
Point(65) = {-0.144198, -0.739563, 0, 1.0};
Point(66) = {-0.140109, -0.740242, 0, 1.0};
Point(67) = {-0.135050, -0.740991, 0, 1.0};
Point(68) = {-0.129045, -0.741814, 0, 1.0};
Point(69) = {-0.122179, -0.742710, 0, 1.0};
Point(70) = {-0.114550, -0.743674, 0, 1.0};
Point(71) = {-0.106265, -0.744682, 0, 1.0};
Point(72) = {-0.097438, -0.745711, 0, 1.0};
Point(73) = {-0.088188, -0.746731, 0, 1.0};
Point(74) = {-0.078636, -0.747701, 0, 1.0};
Point(75) = {-0.068902, -0.748569, 0, 1.0};
Point(76) = {-0.059090, -0.749272, 0, 1.0};
Point(77) = {-0.049273, -0.749757, 0, 1.0};
Point(78) = {-0.039510, -0.750000, 0, 1.0};
Point(79) = {-0.029872, -0.750000, 0, 1.0};
Point(80) = {-0.020443, -0.749764, 0, 1.0};
Point(81) = {-0.011300, -0.749300, 0, 1.0};
Point(82) = {-0.002532, -0.748624, 0, 1.0};
Point(83) = {0.005779, -0.747755, 0, 1.0};
Point(84) = {0.013554, -0.746703, 0, 1.0};
Point(85) = {0.020715, -0.745490, 0, 1.0};
Point(86) = {0.027203, -0.744137, 0, 1.0};
Point(87) = {0.032956, -0.742664, 0, 1.0};
Point(88) = {0.037930, -0.741105, 0, 1.0};
Point(89) = {0.042074, -0.739491, 0, 1.0};
Point(90) = {0.045359, -0.737856, 0, 1.0};
Point(91) = {0.047764, -0.736235, 0, 1.0};
Point(92) = {0.049293, -0.734669, 0, 1.0};
Point(93) = {0.049981, -0.733265, 0, 1.0};
Point(94) = {0.050000, -0.733003, 0, 1.0};
Point(95) = {0.049674, -0.732226, 0, 1.0};
Point(96) = {0.048205, -0.731491, 0, 1.0};
Point(97) = {0.045409, -0.730900, 0, 1.0};
Point(98) = {0.041945, -0.730453, 0, 1.0};
Point(99) = {0.037247, -0.730178, 0, 1.0};
Point(100) = {0.031556, -0.730064, 0, 1.0};
Point(101) = {0.024920, -0.730094, 0, 1.0};
Point(102) = {0.017411, -0.730242, 0, 1.0};
Point(103) = {0.009131, -0.730497, 0, 1.0};
Point(104) = {0.000170, -0.730866, 0, 1.0};
Point(105) = {-0.009393, -0.731336, 0, 1.0};
Point(106) = {-0.019455, -0.731881, 0, 1.0};
Point(107) = {-0.029901, -0.732474, 0, 1.0};
Point(108) = {-0.040605, -0.733098, 0, 1.0};
Point(109) = {-0.051442, -0.733738, 0, 1.0};
Point(110) = {-0.062282, -0.734381, 0, 1.0};
Point(111) = {-0.073006, -0.735013, 0, 1.0};
Point(112) = {-0.083483, -0.735613, 0, 1.0};
Point(113) = {-0.093586, -0.736171, 0, 1.0};
Point(114) = {-0.103185, -0.736672, 0, 1.0};
Point(115) = {-0.112159, -0.737109, 0, 1.0};
Point(116) = {-0.120393, -0.737484, 0, 1.0};
Point(117) = {-0.127782, -0.737797, 0, 1.0};
Point(118) = {-0.134221, -0.738054, 0, 1.0};
Point(119) = {-0.139635, -0.738275, 0, 1.0};
Point(120) = {-0.143979, -0.738474, 0, 1.0};
Point(121) = {-0.147212, -0.738607, 0, 1.0};
Point(122) = {-0.149230, -0.738648, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
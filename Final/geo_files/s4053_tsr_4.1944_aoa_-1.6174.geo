SetFactory("OpenCASCADE");

Point(1) = {0.074970, 0.741486, 0, 1.0};
Point(2) = {0.074461, 0.741551, 0, 1.0};
Point(3) = {0.072990, 0.741777, 0, 1.0};
Point(4) = {0.070679, 0.742172, 0, 1.0};
Point(5) = {0.067612, 0.742681, 0, 1.0};
Point(6) = {0.063818, 0.743243, 0, 1.0};
Point(7) = {0.059313, 0.743860, 0, 1.0};
Point(8) = {0.054164, 0.744533, 0, 1.0};
Point(9) = {0.048443, 0.745255, 0, 1.0};
Point(10) = {0.042228, 0.746012, 0, 1.0};
Point(11) = {0.035608, 0.746783, 0, 1.0};
Point(12) = {0.028671, 0.747548, 0, 1.0};
Point(13) = {0.021507, 0.748276, 0, 1.0};
Point(14) = {0.014206, 0.748927, 0, 1.0};
Point(15) = {0.006848, 0.749454, 0, 1.0};
Point(16) = {-0.000516, 0.749818, 0, 1.0};
Point(17) = {-0.007838, 0.750000, 0, 1.0};
Point(18) = {-0.015066, 0.750000, 0, 1.0};
Point(19) = {-0.022138, 0.749823, 0, 1.0};
Point(20) = {-0.028995, 0.749475, 0, 1.0};
Point(21) = {-0.035571, 0.748968, 0, 1.0};
Point(22) = {-0.041804, 0.748316, 0, 1.0};
Point(23) = {-0.047636, 0.747527, 0, 1.0};
Point(24) = {-0.053006, 0.746618, 0, 1.0};
Point(25) = {-0.057872, 0.745603, 0, 1.0};
Point(26) = {-0.062187, 0.744498, 0, 1.0};
Point(27) = {-0.065918, 0.743329, 0, 1.0};
Point(28) = {-0.069026, 0.742118, 0, 1.0};
Point(29) = {-0.071489, 0.740892, 0, 1.0};
Point(30) = {-0.073293, 0.739676, 0, 1.0};
Point(31) = {-0.074440, 0.738502, 0, 1.0};
Point(32) = {-0.074956, 0.737449, 0, 1.0};
Point(33) = {-0.074970, 0.737252, 0, 1.0};
Point(34) = {-0.074726, 0.736669, 0, 1.0};
Point(35) = {-0.073624, 0.736118, 0, 1.0};
Point(36) = {-0.071527, 0.735675, 0, 1.0};
Point(37) = {-0.068929, 0.735340, 0, 1.0};
Point(38) = {-0.065406, 0.735133, 0, 1.0};
Point(39) = {-0.061137, 0.735048, 0, 1.0};
Point(40) = {-0.056160, 0.735070, 0, 1.0};
Point(41) = {-0.050528, 0.735181, 0, 1.0};
Point(42) = {-0.044318, 0.735373, 0, 1.0};
Point(43) = {-0.037598, 0.735650, 0, 1.0};
Point(44) = {-0.030426, 0.736002, 0, 1.0};
Point(45) = {-0.022879, 0.736411, 0, 1.0};
Point(46) = {-0.015045, 0.736855, 0, 1.0};
Point(47) = {-0.007016, 0.737324, 0, 1.0};
Point(48) = {0.001111, 0.737804, 0, 1.0};
Point(49) = {0.009241, 0.738285, 0, 1.0};
Point(50) = {0.017285, 0.738760, 0, 1.0};
Point(51) = {0.025143, 0.739210, 0, 1.0};
Point(52) = {0.032719, 0.739628, 0, 1.0};
Point(53) = {0.039919, 0.740004, 0, 1.0};
Point(54) = {0.046649, 0.740332, 0, 1.0};
Point(55) = {0.052825, 0.740613, 0, 1.0};
Point(56) = {0.058366, 0.740847, 0, 1.0};
Point(57) = {0.063195, 0.741041, 0, 1.0};
Point(58) = {0.067256, 0.741207, 0, 1.0};
Point(59) = {0.070514, 0.741356, 0, 1.0};
Point(60) = {0.072939, 0.741456, 0, 1.0};
Point(61) = {0.074452, 0.741486, 0, 1.0};
Point(62) = {-0.074970, -0.741486, 0, 1.0};
Point(63) = {-0.074461, -0.741551, 0, 1.0};
Point(64) = {-0.072990, -0.741777, 0, 1.0};
Point(65) = {-0.070679, -0.742172, 0, 1.0};
Point(66) = {-0.067612, -0.742681, 0, 1.0};
Point(67) = {-0.063818, -0.743243, 0, 1.0};
Point(68) = {-0.059313, -0.743860, 0, 1.0};
Point(69) = {-0.054164, -0.744533, 0, 1.0};
Point(70) = {-0.048443, -0.745255, 0, 1.0};
Point(71) = {-0.042228, -0.746012, 0, 1.0};
Point(72) = {-0.035608, -0.746783, 0, 1.0};
Point(73) = {-0.028671, -0.747548, 0, 1.0};
Point(74) = {-0.021507, -0.748276, 0, 1.0};
Point(75) = {-0.014206, -0.748927, 0, 1.0};
Point(76) = {-0.006848, -0.749454, 0, 1.0};
Point(77) = {0.000516, -0.749818, 0, 1.0};
Point(78) = {0.007838, -0.750000, 0, 1.0};
Point(79) = {0.015066, -0.750000, 0, 1.0};
Point(80) = {0.022138, -0.749823, 0, 1.0};
Point(81) = {0.028995, -0.749475, 0, 1.0};
Point(82) = {0.035571, -0.748968, 0, 1.0};
Point(83) = {0.041804, -0.748316, 0, 1.0};
Point(84) = {0.047636, -0.747527, 0, 1.0};
Point(85) = {0.053006, -0.746618, 0, 1.0};
Point(86) = {0.057872, -0.745603, 0, 1.0};
Point(87) = {0.062187, -0.744498, 0, 1.0};
Point(88) = {0.065918, -0.743329, 0, 1.0};
Point(89) = {0.069026, -0.742118, 0, 1.0};
Point(90) = {0.071489, -0.740892, 0, 1.0};
Point(91) = {0.073293, -0.739676, 0, 1.0};
Point(92) = {0.074440, -0.738502, 0, 1.0};
Point(93) = {0.074956, -0.737449, 0, 1.0};
Point(94) = {0.074970, -0.737252, 0, 1.0};
Point(95) = {0.074726, -0.736669, 0, 1.0};
Point(96) = {0.073624, -0.736118, 0, 1.0};
Point(97) = {0.071527, -0.735675, 0, 1.0};
Point(98) = {0.068929, -0.735340, 0, 1.0};
Point(99) = {0.065406, -0.735133, 0, 1.0};
Point(100) = {0.061137, -0.735048, 0, 1.0};
Point(101) = {0.056160, -0.735070, 0, 1.0};
Point(102) = {0.050528, -0.735181, 0, 1.0};
Point(103) = {0.044318, -0.735373, 0, 1.0};
Point(104) = {0.037598, -0.735650, 0, 1.0};
Point(105) = {0.030426, -0.736002, 0, 1.0};
Point(106) = {0.022879, -0.736411, 0, 1.0};
Point(107) = {0.015045, -0.736855, 0, 1.0};
Point(108) = {0.007016, -0.737324, 0, 1.0};
Point(109) = {-0.001111, -0.737804, 0, 1.0};
Point(110) = {-0.009241, -0.738285, 0, 1.0};
Point(111) = {-0.017285, -0.738760, 0, 1.0};
Point(112) = {-0.025143, -0.739210, 0, 1.0};
Point(113) = {-0.032719, -0.739628, 0, 1.0};
Point(114) = {-0.039919, -0.740004, 0, 1.0};
Point(115) = {-0.046649, -0.740332, 0, 1.0};
Point(116) = {-0.052825, -0.740613, 0, 1.0};
Point(117) = {-0.058366, -0.740847, 0, 1.0};
Point(118) = {-0.063195, -0.741041, 0, 1.0};
Point(119) = {-0.067256, -0.741207, 0, 1.0};
Point(120) = {-0.070514, -0.741356, 0, 1.0};
Point(121) = {-0.072939, -0.741456, 0, 1.0};
Point(122) = {-0.074452, -0.741486, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074960, 0.744324, 0, 1.0};
Point(2) = {0.074621, 0.744367, 0, 1.0};
Point(3) = {0.073640, 0.744518, 0, 1.0};
Point(4) = {0.072099, 0.744781, 0, 1.0};
Point(5) = {0.070055, 0.745121, 0, 1.0};
Point(6) = {0.067525, 0.745496, 0, 1.0};
Point(7) = {0.064522, 0.745907, 0, 1.0};
Point(8) = {0.061089, 0.746355, 0, 1.0};
Point(9) = {0.057275, 0.746837, 0, 1.0};
Point(10) = {0.053132, 0.747341, 0, 1.0};
Point(11) = {0.048719, 0.747856, 0, 1.0};
Point(12) = {0.044094, 0.748365, 0, 1.0};
Point(13) = {0.039318, 0.748851, 0, 1.0};
Point(14) = {0.034451, 0.749285, 0, 1.0};
Point(15) = {0.029545, 0.749636, 0, 1.0};
Point(16) = {0.024636, 0.749879, 0, 1.0};
Point(17) = {0.019755, 0.750000, 0, 1.0};
Point(18) = {0.014936, 0.750000, 0, 1.0};
Point(19) = {0.010221, 0.749882, 0, 1.0};
Point(20) = {0.005650, 0.749650, 0, 1.0};
Point(21) = {0.001266, 0.749312, 0, 1.0};
Point(22) = {-0.002889, 0.748877, 0, 1.0};
Point(23) = {-0.006777, 0.748351, 0, 1.0};
Point(24) = {-0.010357, 0.747745, 0, 1.0};
Point(25) = {-0.013602, 0.747068, 0, 1.0};
Point(26) = {-0.016478, 0.746332, 0, 1.0};
Point(27) = {-0.018965, 0.745552, 0, 1.0};
Point(28) = {-0.021037, 0.744746, 0, 1.0};
Point(29) = {-0.022680, 0.743928, 0, 1.0};
Point(30) = {-0.023882, 0.743118, 0, 1.0};
Point(31) = {-0.024646, 0.742335, 0, 1.0};
Point(32) = {-0.024991, 0.741633, 0, 1.0};
Point(33) = {-0.025000, 0.741501, 0, 1.0};
Point(34) = {-0.024837, 0.741113, 0, 1.0};
Point(35) = {-0.024102, 0.740745, 0, 1.0};
Point(36) = {-0.022704, 0.740450, 0, 1.0};
Point(37) = {-0.020972, 0.740227, 0, 1.0};
Point(38) = {-0.018624, 0.740089, 0, 1.0};
Point(39) = {-0.015778, 0.740032, 0, 1.0};
Point(40) = {-0.012460, 0.740047, 0, 1.0};
Point(41) = {-0.008706, 0.740121, 0, 1.0};
Point(42) = {-0.004566, 0.740249, 0, 1.0};
Point(43) = {-0.000085, 0.740433, 0, 1.0};
Point(44) = {0.004696, 0.740668, 0, 1.0};
Point(45) = {0.009728, 0.740940, 0, 1.0};
Point(46) = {0.014950, 0.741237, 0, 1.0};
Point(47) = {0.020303, 0.741549, 0, 1.0};
Point(48) = {0.025721, 0.741869, 0, 1.0};
Point(49) = {0.031141, 0.742190, 0, 1.0};
Point(50) = {0.036503, 0.742507, 0, 1.0};
Point(51) = {0.041742, 0.742807, 0, 1.0};
Point(52) = {0.046793, 0.743085, 0, 1.0};
Point(53) = {0.051593, 0.743336, 0, 1.0};
Point(54) = {0.056079, 0.743555, 0, 1.0};
Point(55) = {0.060197, 0.743742, 0, 1.0};
Point(56) = {0.063891, 0.743898, 0, 1.0};
Point(57) = {0.067110, 0.744027, 0, 1.0};
Point(58) = {0.069817, 0.744138, 0, 1.0};
Point(59) = {0.071989, 0.744237, 0, 1.0};
Point(60) = {0.073606, 0.744304, 0, 1.0};
Point(61) = {0.074615, 0.744324, 0, 1.0};
Point(62) = {-0.074960, -0.744324, 0, 1.0};
Point(63) = {-0.074621, -0.744367, 0, 1.0};
Point(64) = {-0.073640, -0.744518, 0, 1.0};
Point(65) = {-0.072099, -0.744781, 0, 1.0};
Point(66) = {-0.070055, -0.745121, 0, 1.0};
Point(67) = {-0.067525, -0.745496, 0, 1.0};
Point(68) = {-0.064522, -0.745907, 0, 1.0};
Point(69) = {-0.061089, -0.746355, 0, 1.0};
Point(70) = {-0.057275, -0.746837, 0, 1.0};
Point(71) = {-0.053132, -0.747341, 0, 1.0};
Point(72) = {-0.048719, -0.747856, 0, 1.0};
Point(73) = {-0.044094, -0.748365, 0, 1.0};
Point(74) = {-0.039318, -0.748851, 0, 1.0};
Point(75) = {-0.034451, -0.749285, 0, 1.0};
Point(76) = {-0.029545, -0.749636, 0, 1.0};
Point(77) = {-0.024636, -0.749879, 0, 1.0};
Point(78) = {-0.019755, -0.750000, 0, 1.0};
Point(79) = {-0.014936, -0.750000, 0, 1.0};
Point(80) = {-0.010221, -0.749882, 0, 1.0};
Point(81) = {-0.005650, -0.749650, 0, 1.0};
Point(82) = {-0.001266, -0.749312, 0, 1.0};
Point(83) = {0.002889, -0.748877, 0, 1.0};
Point(84) = {0.006777, -0.748351, 0, 1.0};
Point(85) = {0.010357, -0.747745, 0, 1.0};
Point(86) = {0.013602, -0.747068, 0, 1.0};
Point(87) = {0.016478, -0.746332, 0, 1.0};
Point(88) = {0.018965, -0.745552, 0, 1.0};
Point(89) = {0.021037, -0.744746, 0, 1.0};
Point(90) = {0.022680, -0.743928, 0, 1.0};
Point(91) = {0.023882, -0.743118, 0, 1.0};
Point(92) = {0.024646, -0.742335, 0, 1.0};
Point(93) = {0.024991, -0.741633, 0, 1.0};
Point(94) = {0.025000, -0.741501, 0, 1.0};
Point(95) = {0.024837, -0.741113, 0, 1.0};
Point(96) = {0.024102, -0.740745, 0, 1.0};
Point(97) = {0.022704, -0.740450, 0, 1.0};
Point(98) = {0.020972, -0.740227, 0, 1.0};
Point(99) = {0.018624, -0.740089, 0, 1.0};
Point(100) = {0.015778, -0.740032, 0, 1.0};
Point(101) = {0.012460, -0.740047, 0, 1.0};
Point(102) = {0.008706, -0.740121, 0, 1.0};
Point(103) = {0.004566, -0.740249, 0, 1.0};
Point(104) = {0.000085, -0.740433, 0, 1.0};
Point(105) = {-0.004696, -0.740668, 0, 1.0};
Point(106) = {-0.009728, -0.740940, 0, 1.0};
Point(107) = {-0.014950, -0.741237, 0, 1.0};
Point(108) = {-0.020303, -0.741549, 0, 1.0};
Point(109) = {-0.025721, -0.741869, 0, 1.0};
Point(110) = {-0.031141, -0.742190, 0, 1.0};
Point(111) = {-0.036503, -0.742507, 0, 1.0};
Point(112) = {-0.041742, -0.742807, 0, 1.0};
Point(113) = {-0.046793, -0.743085, 0, 1.0};
Point(114) = {-0.051593, -0.743336, 0, 1.0};
Point(115) = {-0.056079, -0.743555, 0, 1.0};
Point(116) = {-0.060197, -0.743742, 0, 1.0};
Point(117) = {-0.063891, -0.743898, 0, 1.0};
Point(118) = {-0.067110, -0.744027, 0, 1.0};
Point(119) = {-0.069817, -0.744138, 0, 1.0};
Point(120) = {-0.071989, -0.744237, 0, 1.0};
Point(121) = {-0.073606, -0.744304, 0, 1.0};
Point(122) = {-0.074615, -0.744324, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
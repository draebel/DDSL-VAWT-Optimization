SetFactory("OpenCASCADE");

Point(1) = {0.112455, 0.741486, 0, 1.0};
Point(2) = {0.111946, 0.741551, 0, 1.0};
Point(3) = {0.110475, 0.741777, 0, 1.0};
Point(4) = {0.108164, 0.742172, 0, 1.0};
Point(5) = {0.105097, 0.742681, 0, 1.0};
Point(6) = {0.101303, 0.743243, 0, 1.0};
Point(7) = {0.096798, 0.743860, 0, 1.0};
Point(8) = {0.091649, 0.744533, 0, 1.0};
Point(9) = {0.085928, 0.745255, 0, 1.0};
Point(10) = {0.079713, 0.746012, 0, 1.0};
Point(11) = {0.073093, 0.746783, 0, 1.0};
Point(12) = {0.066156, 0.747548, 0, 1.0};
Point(13) = {0.058992, 0.748276, 0, 1.0};
Point(14) = {0.051691, 0.748927, 0, 1.0};
Point(15) = {0.044333, 0.749454, 0, 1.0};
Point(16) = {0.036969, 0.749818, 0, 1.0};
Point(17) = {0.029647, 0.750000, 0, 1.0};
Point(18) = {0.022419, 0.750000, 0, 1.0};
Point(19) = {0.015347, 0.749823, 0, 1.0};
Point(20) = {0.008490, 0.749475, 0, 1.0};
Point(21) = {0.001914, 0.748968, 0, 1.0};
Point(22) = {-0.004319, 0.748316, 0, 1.0};
Point(23) = {-0.010151, 0.747527, 0, 1.0};
Point(24) = {-0.015521, 0.746618, 0, 1.0};
Point(25) = {-0.020387, 0.745603, 0, 1.0};
Point(26) = {-0.024702, 0.744498, 0, 1.0};
Point(27) = {-0.028432, 0.743329, 0, 1.0};
Point(28) = {-0.031541, 0.742118, 0, 1.0};
Point(29) = {-0.034004, 0.740892, 0, 1.0};
Point(30) = {-0.035808, 0.739676, 0, 1.0};
Point(31) = {-0.036955, 0.738502, 0, 1.0};
Point(32) = {-0.037471, 0.737449, 0, 1.0};
Point(33) = {-0.037485, 0.737252, 0, 1.0};
Point(34) = {-0.037241, 0.736669, 0, 1.0};
Point(35) = {-0.036139, 0.736118, 0, 1.0};
Point(36) = {-0.034042, 0.735675, 0, 1.0};
Point(37) = {-0.031444, 0.735340, 0, 1.0};
Point(38) = {-0.027920, 0.735133, 0, 1.0};
Point(39) = {-0.023652, 0.735048, 0, 1.0};
Point(40) = {-0.018675, 0.735070, 0, 1.0};
Point(41) = {-0.013043, 0.735181, 0, 1.0};
Point(42) = {-0.006833, 0.735373, 0, 1.0};
Point(43) = {-0.000112, 0.735650, 0, 1.0};
Point(44) = {0.007059, 0.736002, 0, 1.0};
Point(45) = {0.014606, 0.736411, 0, 1.0};
Point(46) = {0.022441, 0.736855, 0, 1.0};
Point(47) = {0.030469, 0.737324, 0, 1.0};
Point(48) = {0.038596, 0.737804, 0, 1.0};
Point(49) = {0.046726, 0.738285, 0, 1.0};
Point(50) = {0.054770, 0.738760, 0, 1.0};
Point(51) = {0.062628, 0.739210, 0, 1.0};
Point(52) = {0.070204, 0.739628, 0, 1.0};
Point(53) = {0.077404, 0.740004, 0, 1.0};
Point(54) = {0.084134, 0.740332, 0, 1.0};
Point(55) = {0.090310, 0.740613, 0, 1.0};
Point(56) = {0.095851, 0.740847, 0, 1.0};
Point(57) = {0.100681, 0.741041, 0, 1.0};
Point(58) = {0.104741, 0.741207, 0, 1.0};
Point(59) = {0.107999, 0.741356, 0, 1.0};
Point(60) = {0.110424, 0.741456, 0, 1.0};
Point(61) = {0.111937, 0.741486, 0, 1.0};
Point(62) = {-0.112455, -0.741486, 0, 1.0};
Point(63) = {-0.111946, -0.741551, 0, 1.0};
Point(64) = {-0.110475, -0.741777, 0, 1.0};
Point(65) = {-0.108164, -0.742172, 0, 1.0};
Point(66) = {-0.105097, -0.742681, 0, 1.0};
Point(67) = {-0.101303, -0.743243, 0, 1.0};
Point(68) = {-0.096798, -0.743860, 0, 1.0};
Point(69) = {-0.091649, -0.744533, 0, 1.0};
Point(70) = {-0.085928, -0.745255, 0, 1.0};
Point(71) = {-0.079713, -0.746012, 0, 1.0};
Point(72) = {-0.073093, -0.746783, 0, 1.0};
Point(73) = {-0.066156, -0.747548, 0, 1.0};
Point(74) = {-0.058992, -0.748276, 0, 1.0};
Point(75) = {-0.051691, -0.748927, 0, 1.0};
Point(76) = {-0.044333, -0.749454, 0, 1.0};
Point(77) = {-0.036969, -0.749818, 0, 1.0};
Point(78) = {-0.029647, -0.750000, 0, 1.0};
Point(79) = {-0.022419, -0.750000, 0, 1.0};
Point(80) = {-0.015347, -0.749823, 0, 1.0};
Point(81) = {-0.008490, -0.749475, 0, 1.0};
Point(82) = {-0.001914, -0.748968, 0, 1.0};
Point(83) = {0.004319, -0.748316, 0, 1.0};
Point(84) = {0.010151, -0.747527, 0, 1.0};
Point(85) = {0.015521, -0.746618, 0, 1.0};
Point(86) = {0.020387, -0.745603, 0, 1.0};
Point(87) = {0.024702, -0.744498, 0, 1.0};
Point(88) = {0.028432, -0.743329, 0, 1.0};
Point(89) = {0.031541, -0.742118, 0, 1.0};
Point(90) = {0.034004, -0.740892, 0, 1.0};
Point(91) = {0.035808, -0.739676, 0, 1.0};
Point(92) = {0.036955, -0.738502, 0, 1.0};
Point(93) = {0.037471, -0.737449, 0, 1.0};
Point(94) = {0.037485, -0.737252, 0, 1.0};
Point(95) = {0.037241, -0.736669, 0, 1.0};
Point(96) = {0.036139, -0.736118, 0, 1.0};
Point(97) = {0.034042, -0.735675, 0, 1.0};
Point(98) = {0.031444, -0.735340, 0, 1.0};
Point(99) = {0.027920, -0.735133, 0, 1.0};
Point(100) = {0.023652, -0.735048, 0, 1.0};
Point(101) = {0.018675, -0.735070, 0, 1.0};
Point(102) = {0.013043, -0.735181, 0, 1.0};
Point(103) = {0.006833, -0.735373, 0, 1.0};
Point(104) = {0.000112, -0.735650, 0, 1.0};
Point(105) = {-0.007059, -0.736002, 0, 1.0};
Point(106) = {-0.014606, -0.736411, 0, 1.0};
Point(107) = {-0.022441, -0.736855, 0, 1.0};
Point(108) = {-0.030469, -0.737324, 0, 1.0};
Point(109) = {-0.038596, -0.737804, 0, 1.0};
Point(110) = {-0.046726, -0.738285, 0, 1.0};
Point(111) = {-0.054770, -0.738760, 0, 1.0};
Point(112) = {-0.062628, -0.739210, 0, 1.0};
Point(113) = {-0.070204, -0.739628, 0, 1.0};
Point(114) = {-0.077404, -0.740004, 0, 1.0};
Point(115) = {-0.084134, -0.740332, 0, 1.0};
Point(116) = {-0.090310, -0.740613, 0, 1.0};
Point(117) = {-0.095851, -0.740847, 0, 1.0};
Point(118) = {-0.100681, -0.741041, 0, 1.0};
Point(119) = {-0.104741, -0.741207, 0, 1.0};
Point(120) = {-0.107999, -0.741356, 0, 1.0};
Point(121) = {-0.110424, -0.741456, 0, 1.0};
Point(122) = {-0.111937, -0.741486, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149085, 0.719538, 0, 1.0};
Point(2) = {0.148673, 0.719634, 0, 1.0};
Point(3) = {0.147494, 0.719962, 0, 1.0};
Point(4) = {0.145637, 0.720542, 0, 1.0};
Point(5) = {0.143174, 0.721336, 0, 1.0};
Point(6) = {0.140124, 0.722304, 0, 1.0};
Point(7) = {0.136501, 0.723444, 0, 1.0};
Point(8) = {0.132346, 0.724761, 0, 1.0};
Point(9) = {0.127713, 0.726240, 0, 1.0};
Point(10) = {0.122649, 0.727864, 0, 1.0};
Point(11) = {0.117209, 0.729609, 0, 1.0};
Point(12) = {0.111441, 0.731446, 0, 1.0};
Point(13) = {0.105401, 0.733340, 0, 1.0};
Point(14) = {0.099127, 0.735235, 0, 1.0};
Point(15) = {0.092642, 0.737097, 0, 1.0};
Point(16) = {0.085981, 0.738910, 0, 1.0};
Point(17) = {0.079173, 0.740634, 0, 1.0};
Point(18) = {0.072239, 0.742248, 0, 1.0};
Point(19) = {0.065223, 0.743739, 0, 1.0};
Point(20) = {0.058144, 0.745081, 0, 1.0};
Point(21) = {0.051020, 0.746274, 0, 1.0};
Point(22) = {0.043895, 0.747302, 0, 1.0};
Point(23) = {0.036796, 0.748158, 0, 1.0};
Point(24) = {0.029750, 0.748855, 0, 1.0};
Point(25) = {0.022798, 0.749381, 0, 1.0};
Point(26) = {0.015967, 0.749742, 0, 1.0};
Point(27) = {0.009298, 0.749949, 0, 1.0};
Point(28) = {0.002826, 0.750000, 0, 1.0};
Point(29) = {-0.003411, 0.749905, 0, 1.0};
Point(30) = {-0.009377, 0.749668, 0, 1.0};
Point(31) = {-0.015039, 0.749294, 0, 1.0};
Point(32) = {-0.020365, 0.748792, 0, 1.0};
Point(33) = {-0.025325, 0.748167, 0, 1.0};
Point(34) = {-0.029896, 0.747430, 0, 1.0};
Point(35) = {-0.034048, 0.746593, 0, 1.0};
Point(36) = {-0.037760, 0.745666, 0, 1.0};
Point(37) = {-0.041017, 0.744667, 0, 1.0};
Point(38) = {-0.043795, 0.743609, 0, 1.0};
Point(39) = {-0.046081, 0.742511, 0, 1.0};
Point(40) = {-0.047852, 0.741404, 0, 1.0};
Point(41) = {-0.049095, 0.740281, 0, 1.0};
Point(42) = {-0.049832, 0.739180, 0, 1.0};
Point(43) = {-0.049961, 0.738222, 0, 1.0};
Point(44) = {-0.049405, 0.737293, 0, 1.0};
Point(45) = {-0.048261, 0.736287, 0, 1.0};
Point(46) = {-0.046571, 0.735328, 0, 1.0};
Point(47) = {-0.044268, 0.734446, 0, 1.0};
Point(48) = {-0.041332, 0.733602, 0, 1.0};
Point(49) = {-0.037800, 0.732765, 0, 1.0};
Point(50) = {-0.033701, 0.731932, 0, 1.0};
Point(51) = {-0.029067, 0.731107, 0, 1.0};
Point(52) = {-0.023927, 0.730288, 0, 1.0};
Point(53) = {-0.018320, 0.729476, 0, 1.0};
Point(54) = {-0.012288, 0.728673, 0, 1.0};
Point(55) = {-0.005875, 0.727885, 0, 1.0};
Point(56) = {0.000863, 0.727126, 0, 1.0};
Point(57) = {0.007875, 0.726418, 0, 1.0};
Point(58) = {0.015140, 0.725824, 0, 1.0};
Point(59) = {0.022690, 0.725342, 0, 1.0};
Point(60) = {0.030530, 0.724905, 0, 1.0};
Point(61) = {0.038571, 0.724431, 0, 1.0};
Point(62) = {0.046698, 0.723917, 0, 1.0};
Point(63) = {0.054844, 0.723401, 0, 1.0};
Point(64) = {0.062962, 0.722891, 0, 1.0};
Point(65) = {0.070999, 0.722394, 0, 1.0};
Point(66) = {0.078901, 0.721904, 0, 1.0};
Point(67) = {0.086616, 0.721425, 0, 1.0};
Point(68) = {0.094087, 0.720959, 0, 1.0};
Point(69) = {0.101262, 0.720509, 0, 1.0};
Point(70) = {0.108090, 0.720080, 0, 1.0};
Point(71) = {0.114517, 0.719687, 0, 1.0};
Point(72) = {0.120520, 0.719333, 0, 1.0};
Point(73) = {0.126067, 0.719007, 0, 1.0};
Point(74) = {0.131103, 0.718695, 0, 1.0};
Point(75) = {0.135577, 0.718403, 0, 1.0};
Point(76) = {0.139442, 0.718145, 0, 1.0};
Point(77) = {0.142671, 0.717949, 0, 1.0};
Point(78) = {0.145273, 0.717821, 0, 1.0};
Point(79) = {0.147230, 0.717713, 0, 1.0};
Point(80) = {0.148462, 0.717605, 0, 1.0};
Point(81) = {0.148884, 0.717548, 0, 1.0};
Point(82) = {-0.149085, -0.719538, 0, 1.0};
Point(83) = {-0.148673, -0.719634, 0, 1.0};
Point(84) = {-0.147494, -0.719962, 0, 1.0};
Point(85) = {-0.145637, -0.720542, 0, 1.0};
Point(86) = {-0.143174, -0.721336, 0, 1.0};
Point(87) = {-0.140124, -0.722304, 0, 1.0};
Point(88) = {-0.136501, -0.723444, 0, 1.0};
Point(89) = {-0.132346, -0.724761, 0, 1.0};
Point(90) = {-0.127713, -0.726240, 0, 1.0};
Point(91) = {-0.122649, -0.727864, 0, 1.0};
Point(92) = {-0.117209, -0.729609, 0, 1.0};
Point(93) = {-0.111441, -0.731446, 0, 1.0};
Point(94) = {-0.105401, -0.733340, 0, 1.0};
Point(95) = {-0.099127, -0.735235, 0, 1.0};
Point(96) = {-0.092642, -0.737097, 0, 1.0};
Point(97) = {-0.085981, -0.738910, 0, 1.0};
Point(98) = {-0.079173, -0.740634, 0, 1.0};
Point(99) = {-0.072239, -0.742248, 0, 1.0};
Point(100) = {-0.065223, -0.743739, 0, 1.0};
Point(101) = {-0.058144, -0.745081, 0, 1.0};
Point(102) = {-0.051020, -0.746274, 0, 1.0};
Point(103) = {-0.043895, -0.747302, 0, 1.0};
Point(104) = {-0.036796, -0.748158, 0, 1.0};
Point(105) = {-0.029750, -0.748855, 0, 1.0};
Point(106) = {-0.022798, -0.749381, 0, 1.0};
Point(107) = {-0.015967, -0.749742, 0, 1.0};
Point(108) = {-0.009298, -0.749949, 0, 1.0};
Point(109) = {-0.002826, -0.750000, 0, 1.0};
Point(110) = {0.003411, -0.749905, 0, 1.0};
Point(111) = {0.009377, -0.749668, 0, 1.0};
Point(112) = {0.015039, -0.749294, 0, 1.0};
Point(113) = {0.020365, -0.748792, 0, 1.0};
Point(114) = {0.025325, -0.748167, 0, 1.0};
Point(115) = {0.029896, -0.747430, 0, 1.0};
Point(116) = {0.034048, -0.746593, 0, 1.0};
Point(117) = {0.037760, -0.745666, 0, 1.0};
Point(118) = {0.041017, -0.744667, 0, 1.0};
Point(119) = {0.043795, -0.743609, 0, 1.0};
Point(120) = {0.046081, -0.742511, 0, 1.0};
Point(121) = {0.047852, -0.741404, 0, 1.0};
Point(122) = {0.049095, -0.740281, 0, 1.0};
Point(123) = {0.049832, -0.739180, 0, 1.0};
Point(124) = {0.049961, -0.738222, 0, 1.0};
Point(125) = {0.049405, -0.737293, 0, 1.0};
Point(126) = {0.048261, -0.736287, 0, 1.0};
Point(127) = {0.046571, -0.735328, 0, 1.0};
Point(128) = {0.044268, -0.734446, 0, 1.0};
Point(129) = {0.041332, -0.733602, 0, 1.0};
Point(130) = {0.037800, -0.732765, 0, 1.0};
Point(131) = {0.033701, -0.731932, 0, 1.0};
Point(132) = {0.029067, -0.731107, 0, 1.0};
Point(133) = {0.023927, -0.730288, 0, 1.0};
Point(134) = {0.018320, -0.729476, 0, 1.0};
Point(135) = {0.012288, -0.728673, 0, 1.0};
Point(136) = {0.005875, -0.727885, 0, 1.0};
Point(137) = {-0.000863, -0.727126, 0, 1.0};
Point(138) = {-0.007875, -0.726418, 0, 1.0};
Point(139) = {-0.015140, -0.725824, 0, 1.0};
Point(140) = {-0.022690, -0.725342, 0, 1.0};
Point(141) = {-0.030530, -0.724905, 0, 1.0};
Point(142) = {-0.038571, -0.724431, 0, 1.0};
Point(143) = {-0.046698, -0.723917, 0, 1.0};
Point(144) = {-0.054844, -0.723401, 0, 1.0};
Point(145) = {-0.062962, -0.722891, 0, 1.0};
Point(146) = {-0.070999, -0.722394, 0, 1.0};
Point(147) = {-0.078901, -0.721904, 0, 1.0};
Point(148) = {-0.086616, -0.721425, 0, 1.0};
Point(149) = {-0.094087, -0.720959, 0, 1.0};
Point(150) = {-0.101262, -0.720509, 0, 1.0};
Point(151) = {-0.108090, -0.720080, 0, 1.0};
Point(152) = {-0.114517, -0.719687, 0, 1.0};
Point(153) = {-0.120520, -0.719333, 0, 1.0};
Point(154) = {-0.126067, -0.719007, 0, 1.0};
Point(155) = {-0.131103, -0.718695, 0, 1.0};
Point(156) = {-0.135577, -0.718403, 0, 1.0};
Point(157) = {-0.139442, -0.718145, 0, 1.0};
Point(158) = {-0.142671, -0.717949, 0, 1.0};
Point(159) = {-0.145273, -0.717821, 0, 1.0};
Point(160) = {-0.147230, -0.717713, 0, 1.0};
Point(161) = {-0.148462, -0.717605, 0, 1.0};
Point(162) = {-0.148884, -0.717548, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
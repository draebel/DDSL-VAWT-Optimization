SetFactory("OpenCASCADE");

Point(1) = {0.111814, 0.727153, 0, 1.0};
Point(2) = {0.111505, 0.727225, 0, 1.0};
Point(3) = {0.110621, 0.727472, 0, 1.0};
Point(4) = {0.109228, 0.727906, 0, 1.0};
Point(5) = {0.107381, 0.728502, 0, 1.0};
Point(6) = {0.105093, 0.729228, 0, 1.0};
Point(7) = {0.102375, 0.730083, 0, 1.0};
Point(8) = {0.099260, 0.731071, 0, 1.0};
Point(9) = {0.095785, 0.732180, 0, 1.0};
Point(10) = {0.091987, 0.733398, 0, 1.0};
Point(11) = {0.087907, 0.734706, 0, 1.0};
Point(12) = {0.083581, 0.736085, 0, 1.0};
Point(13) = {0.079050, 0.737505, 0, 1.0};
Point(14) = {0.074346, 0.738926, 0, 1.0};
Point(15) = {0.069481, 0.740322, 0, 1.0};
Point(16) = {0.064485, 0.741683, 0, 1.0};
Point(17) = {0.059380, 0.742975, 0, 1.0};
Point(18) = {0.054179, 0.744186, 0, 1.0};
Point(19) = {0.048917, 0.745305, 0, 1.0};
Point(20) = {0.043608, 0.746310, 0, 1.0};
Point(21) = {0.038265, 0.747205, 0, 1.0};
Point(22) = {0.032922, 0.747976, 0, 1.0};
Point(23) = {0.027597, 0.748619, 0, 1.0};
Point(24) = {0.022312, 0.749141, 0, 1.0};
Point(25) = {0.017098, 0.749536, 0, 1.0};
Point(26) = {0.011975, 0.749807, 0, 1.0};
Point(27) = {0.006974, 0.749961, 0, 1.0};
Point(28) = {0.002120, 0.750000, 0, 1.0};
Point(29) = {-0.002558, 0.749929, 0, 1.0};
Point(30) = {-0.007033, 0.749751, 0, 1.0};
Point(31) = {-0.011279, 0.749471, 0, 1.0};
Point(32) = {-0.015274, 0.749094, 0, 1.0};
Point(33) = {-0.018994, 0.748626, 0, 1.0};
Point(34) = {-0.022422, 0.748072, 0, 1.0};
Point(35) = {-0.025536, 0.747445, 0, 1.0};
Point(36) = {-0.028320, 0.746750, 0, 1.0};
Point(37) = {-0.030763, 0.746000, 0, 1.0};
Point(38) = {-0.032847, 0.745207, 0, 1.0};
Point(39) = {-0.034561, 0.744384, 0, 1.0};
Point(40) = {-0.035889, 0.743553, 0, 1.0};
Point(41) = {-0.036821, 0.742711, 0, 1.0};
Point(42) = {-0.037374, 0.741885, 0, 1.0};
Point(43) = {-0.037471, 0.741167, 0, 1.0};
Point(44) = {-0.037054, 0.740470, 0, 1.0};
Point(45) = {-0.036196, 0.739715, 0, 1.0};
Point(46) = {-0.034928, 0.738996, 0, 1.0};
Point(47) = {-0.033201, 0.738334, 0, 1.0};
Point(48) = {-0.030999, 0.737702, 0, 1.0};
Point(49) = {-0.028350, 0.737073, 0, 1.0};
Point(50) = {-0.025276, 0.736449, 0, 1.0};
Point(51) = {-0.021800, 0.735831, 0, 1.0};
Point(52) = {-0.017945, 0.735216, 0, 1.0};
Point(53) = {-0.013740, 0.734607, 0, 1.0};
Point(54) = {-0.009216, 0.734005, 0, 1.0};
Point(55) = {-0.004406, 0.733414, 0, 1.0};
Point(56) = {0.000647, 0.732844, 0, 1.0};
Point(57) = {0.005906, 0.732314, 0, 1.0};
Point(58) = {0.011355, 0.731868, 0, 1.0};
Point(59) = {0.017017, 0.731507, 0, 1.0};
Point(60) = {0.022897, 0.731179, 0, 1.0};
Point(61) = {0.028928, 0.730824, 0, 1.0};
Point(62) = {0.035024, 0.730438, 0, 1.0};
Point(63) = {0.041133, 0.730050, 0, 1.0};
Point(64) = {0.047221, 0.729668, 0, 1.0};
Point(65) = {0.053249, 0.729295, 0, 1.0};
Point(66) = {0.059176, 0.728928, 0, 1.0};
Point(67) = {0.064962, 0.728569, 0, 1.0};
Point(68) = {0.070566, 0.728219, 0, 1.0};
Point(69) = {0.075947, 0.727882, 0, 1.0};
Point(70) = {0.081067, 0.727560, 0, 1.0};
Point(71) = {0.085888, 0.727265, 0, 1.0};
Point(72) = {0.090390, 0.727000, 0, 1.0};
Point(73) = {0.094550, 0.726756, 0, 1.0};
Point(74) = {0.098328, 0.726521, 0, 1.0};
Point(75) = {0.101683, 0.726303, 0, 1.0};
Point(76) = {0.104582, 0.726109, 0, 1.0};
Point(77) = {0.107003, 0.725962, 0, 1.0};
Point(78) = {0.108955, 0.725866, 0, 1.0};
Point(79) = {0.110423, 0.725785, 0, 1.0};
Point(80) = {0.111346, 0.725704, 0, 1.0};
Point(81) = {0.111663, 0.725661, 0, 1.0};
Point(82) = {-0.111814, -0.727153, 0, 1.0};
Point(83) = {-0.111505, -0.727225, 0, 1.0};
Point(84) = {-0.110621, -0.727472, 0, 1.0};
Point(85) = {-0.109228, -0.727906, 0, 1.0};
Point(86) = {-0.107381, -0.728502, 0, 1.0};
Point(87) = {-0.105093, -0.729228, 0, 1.0};
Point(88) = {-0.102375, -0.730083, 0, 1.0};
Point(89) = {-0.099260, -0.731071, 0, 1.0};
Point(90) = {-0.095785, -0.732180, 0, 1.0};
Point(91) = {-0.091987, -0.733398, 0, 1.0};
Point(92) = {-0.087907, -0.734706, 0, 1.0};
Point(93) = {-0.083581, -0.736085, 0, 1.0};
Point(94) = {-0.079050, -0.737505, 0, 1.0};
Point(95) = {-0.074346, -0.738926, 0, 1.0};
Point(96) = {-0.069481, -0.740322, 0, 1.0};
Point(97) = {-0.064485, -0.741683, 0, 1.0};
Point(98) = {-0.059380, -0.742975, 0, 1.0};
Point(99) = {-0.054179, -0.744186, 0, 1.0};
Point(100) = {-0.048917, -0.745305, 0, 1.0};
Point(101) = {-0.043608, -0.746310, 0, 1.0};
Point(102) = {-0.038265, -0.747205, 0, 1.0};
Point(103) = {-0.032922, -0.747976, 0, 1.0};
Point(104) = {-0.027597, -0.748619, 0, 1.0};
Point(105) = {-0.022312, -0.749141, 0, 1.0};
Point(106) = {-0.017098, -0.749536, 0, 1.0};
Point(107) = {-0.011975, -0.749807, 0, 1.0};
Point(108) = {-0.006974, -0.749961, 0, 1.0};
Point(109) = {-0.002120, -0.750000, 0, 1.0};
Point(110) = {0.002558, -0.749929, 0, 1.0};
Point(111) = {0.007033, -0.749751, 0, 1.0};
Point(112) = {0.011279, -0.749471, 0, 1.0};
Point(113) = {0.015274, -0.749094, 0, 1.0};
Point(114) = {0.018994, -0.748626, 0, 1.0};
Point(115) = {0.022422, -0.748072, 0, 1.0};
Point(116) = {0.025536, -0.747445, 0, 1.0};
Point(117) = {0.028320, -0.746750, 0, 1.0};
Point(118) = {0.030763, -0.746000, 0, 1.0};
Point(119) = {0.032847, -0.745207, 0, 1.0};
Point(120) = {0.034561, -0.744384, 0, 1.0};
Point(121) = {0.035889, -0.743553, 0, 1.0};
Point(122) = {0.036821, -0.742711, 0, 1.0};
Point(123) = {0.037374, -0.741885, 0, 1.0};
Point(124) = {0.037471, -0.741167, 0, 1.0};
Point(125) = {0.037054, -0.740470, 0, 1.0};
Point(126) = {0.036196, -0.739715, 0, 1.0};
Point(127) = {0.034928, -0.738996, 0, 1.0};
Point(128) = {0.033201, -0.738334, 0, 1.0};
Point(129) = {0.030999, -0.737702, 0, 1.0};
Point(130) = {0.028350, -0.737073, 0, 1.0};
Point(131) = {0.025276, -0.736449, 0, 1.0};
Point(132) = {0.021800, -0.735831, 0, 1.0};
Point(133) = {0.017945, -0.735216, 0, 1.0};
Point(134) = {0.013740, -0.734607, 0, 1.0};
Point(135) = {0.009216, -0.734005, 0, 1.0};
Point(136) = {0.004406, -0.733414, 0, 1.0};
Point(137) = {-0.000647, -0.732844, 0, 1.0};
Point(138) = {-0.005906, -0.732314, 0, 1.0};
Point(139) = {-0.011355, -0.731868, 0, 1.0};
Point(140) = {-0.017017, -0.731507, 0, 1.0};
Point(141) = {-0.022897, -0.731179, 0, 1.0};
Point(142) = {-0.028928, -0.730824, 0, 1.0};
Point(143) = {-0.035024, -0.730438, 0, 1.0};
Point(144) = {-0.041133, -0.730050, 0, 1.0};
Point(145) = {-0.047221, -0.729668, 0, 1.0};
Point(146) = {-0.053249, -0.729295, 0, 1.0};
Point(147) = {-0.059176, -0.728928, 0, 1.0};
Point(148) = {-0.064962, -0.728569, 0, 1.0};
Point(149) = {-0.070566, -0.728219, 0, 1.0};
Point(150) = {-0.075947, -0.727882, 0, 1.0};
Point(151) = {-0.081067, -0.727560, 0, 1.0};
Point(152) = {-0.085888, -0.727265, 0, 1.0};
Point(153) = {-0.090390, -0.727000, 0, 1.0};
Point(154) = {-0.094550, -0.726756, 0, 1.0};
Point(155) = {-0.098328, -0.726521, 0, 1.0};
Point(156) = {-0.101683, -0.726303, 0, 1.0};
Point(157) = {-0.104582, -0.726109, 0, 1.0};
Point(158) = {-0.107003, -0.725962, 0, 1.0};
Point(159) = {-0.108955, -0.725866, 0, 1.0};
Point(160) = {-0.110423, -0.725785, 0, 1.0};
Point(161) = {-0.111346, -0.725704, 0, 1.0};
Point(162) = {-0.111663, -0.725661, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
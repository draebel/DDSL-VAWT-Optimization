SetFactory("OpenCASCADE");

Point(1) = {0.111912, 0.727163, 0, 1.0};
Point(2) = {0.111603, 0.727235, 0, 1.0};
Point(3) = {0.110719, 0.727481, 0, 1.0};
Point(4) = {0.109327, 0.727916, 0, 1.0};
Point(5) = {0.107481, 0.728511, 0, 1.0};
Point(6) = {0.105194, 0.729236, 0, 1.0};
Point(7) = {0.102478, 0.730091, 0, 1.0};
Point(8) = {0.099363, 0.731078, 0, 1.0};
Point(9) = {0.095890, 0.732188, 0, 1.0};
Point(10) = {0.092093, 0.733405, 0, 1.0};
Point(11) = {0.088015, 0.734713, 0, 1.0};
Point(12) = {0.083691, 0.736091, 0, 1.0};
Point(13) = {0.079162, 0.737510, 0, 1.0};
Point(14) = {0.074459, 0.738931, 0, 1.0};
Point(15) = {0.069597, 0.740327, 0, 1.0};
Point(16) = {0.064603, 0.741686, 0, 1.0};
Point(17) = {0.059500, 0.742978, 0, 1.0};
Point(18) = {0.054301, 0.744188, 0, 1.0};
Point(19) = {0.049042, 0.745307, 0, 1.0};
Point(20) = {0.043735, 0.746312, 0, 1.0};
Point(21) = {0.038394, 0.747206, 0, 1.0};
Point(22) = {0.033053, 0.747977, 0, 1.0};
Point(23) = {0.027730, 0.748619, 0, 1.0};
Point(24) = {0.022448, 0.749142, 0, 1.0};
Point(25) = {0.017236, 0.749536, 0, 1.0};
Point(26) = {0.012115, 0.749807, 0, 1.0};
Point(27) = {0.007116, 0.749961, 0, 1.0};
Point(28) = {0.002264, 0.750000, 0, 1.0};
Point(29) = {-0.002412, 0.749929, 0, 1.0};
Point(30) = {-0.006885, 0.749751, 0, 1.0};
Point(31) = {-0.011130, 0.749471, 0, 1.0};
Point(32) = {-0.015122, 0.749094, 0, 1.0};
Point(33) = {-0.018841, 0.748626, 0, 1.0};
Point(34) = {-0.022268, 0.748073, 0, 1.0};
Point(35) = {-0.025380, 0.747446, 0, 1.0};
Point(36) = {-0.028163, 0.746751, 0, 1.0};
Point(37) = {-0.030605, 0.746002, 0, 1.0};
Point(38) = {-0.032688, 0.745209, 0, 1.0};
Point(39) = {-0.034401, 0.744386, 0, 1.0};
Point(40) = {-0.035729, 0.743556, 0, 1.0};
Point(41) = {-0.036661, 0.742714, 0, 1.0};
Point(42) = {-0.037213, 0.741888, 0, 1.0};
Point(43) = {-0.037310, 0.741170, 0, 1.0};
Point(44) = {-0.036893, 0.740474, 0, 1.0};
Point(45) = {-0.036035, 0.739720, 0, 1.0};
Point(46) = {-0.034768, 0.739001, 0, 1.0};
Point(47) = {-0.033042, 0.738339, 0, 1.0};
Point(48) = {-0.030841, 0.737707, 0, 1.0};
Point(49) = {-0.028193, 0.737079, 0, 1.0};
Point(50) = {-0.025120, 0.736455, 0, 1.0};
Point(51) = {-0.021646, 0.735836, 0, 1.0};
Point(52) = {-0.017793, 0.735222, 0, 1.0};
Point(53) = {-0.013589, 0.734613, 0, 1.0};
Point(54) = {-0.009067, 0.734011, 0, 1.0};
Point(55) = {-0.004259, 0.733421, 0, 1.0};
Point(56) = {0.000792, 0.732851, 0, 1.0};
Point(57) = {0.006049, 0.732321, 0, 1.0};
Point(58) = {0.011495, 0.731876, 0, 1.0};
Point(59) = {0.017155, 0.731514, 0, 1.0};
Point(60) = {0.023033, 0.731187, 0, 1.0};
Point(61) = {0.029061, 0.730832, 0, 1.0};
Point(62) = {0.035154, 0.730446, 0, 1.0};
Point(63) = {0.041261, 0.730059, 0, 1.0};
Point(64) = {0.047347, 0.729677, 0, 1.0};
Point(65) = {0.053372, 0.729304, 0, 1.0};
Point(66) = {0.059296, 0.728937, 0, 1.0};
Point(67) = {0.065080, 0.728578, 0, 1.0};
Point(68) = {0.070681, 0.728229, 0, 1.0};
Point(69) = {0.076060, 0.727891, 0, 1.0};
Point(70) = {0.081179, 0.727569, 0, 1.0};
Point(71) = {0.085997, 0.727275, 0, 1.0};
Point(72) = {0.090497, 0.727010, 0, 1.0};
Point(73) = {0.094656, 0.726765, 0, 1.0};
Point(74) = {0.098431, 0.726531, 0, 1.0};
Point(75) = {0.101785, 0.726312, 0, 1.0};
Point(76) = {0.104683, 0.726119, 0, 1.0};
Point(77) = {0.107103, 0.725972, 0, 1.0};
Point(78) = {0.109054, 0.725876, 0, 1.0};
Point(79) = {0.110522, 0.725795, 0, 1.0};
Point(80) = {0.111445, 0.725714, 0, 1.0};
Point(81) = {0.111761, 0.725671, 0, 1.0};
Point(82) = {-0.111912, -0.727163, 0, 1.0};
Point(83) = {-0.111603, -0.727235, 0, 1.0};
Point(84) = {-0.110719, -0.727481, 0, 1.0};
Point(85) = {-0.109327, -0.727916, 0, 1.0};
Point(86) = {-0.107481, -0.728511, 0, 1.0};
Point(87) = {-0.105194, -0.729236, 0, 1.0};
Point(88) = {-0.102478, -0.730091, 0, 1.0};
Point(89) = {-0.099363, -0.731078, 0, 1.0};
Point(90) = {-0.095890, -0.732188, 0, 1.0};
Point(91) = {-0.092093, -0.733405, 0, 1.0};
Point(92) = {-0.088015, -0.734713, 0, 1.0};
Point(93) = {-0.083691, -0.736091, 0, 1.0};
Point(94) = {-0.079162, -0.737510, 0, 1.0};
Point(95) = {-0.074459, -0.738931, 0, 1.0};
Point(96) = {-0.069597, -0.740327, 0, 1.0};
Point(97) = {-0.064603, -0.741686, 0, 1.0};
Point(98) = {-0.059500, -0.742978, 0, 1.0};
Point(99) = {-0.054301, -0.744188, 0, 1.0};
Point(100) = {-0.049042, -0.745307, 0, 1.0};
Point(101) = {-0.043735, -0.746312, 0, 1.0};
Point(102) = {-0.038394, -0.747206, 0, 1.0};
Point(103) = {-0.033053, -0.747977, 0, 1.0};
Point(104) = {-0.027730, -0.748619, 0, 1.0};
Point(105) = {-0.022448, -0.749142, 0, 1.0};
Point(106) = {-0.017236, -0.749536, 0, 1.0};
Point(107) = {-0.012115, -0.749807, 0, 1.0};
Point(108) = {-0.007116, -0.749961, 0, 1.0};
Point(109) = {-0.002264, -0.750000, 0, 1.0};
Point(110) = {0.002412, -0.749929, 0, 1.0};
Point(111) = {0.006885, -0.749751, 0, 1.0};
Point(112) = {0.011130, -0.749471, 0, 1.0};
Point(113) = {0.015122, -0.749094, 0, 1.0};
Point(114) = {0.018841, -0.748626, 0, 1.0};
Point(115) = {0.022268, -0.748073, 0, 1.0};
Point(116) = {0.025380, -0.747446, 0, 1.0};
Point(117) = {0.028163, -0.746751, 0, 1.0};
Point(118) = {0.030605, -0.746002, 0, 1.0};
Point(119) = {0.032688, -0.745209, 0, 1.0};
Point(120) = {0.034401, -0.744386, 0, 1.0};
Point(121) = {0.035729, -0.743556, 0, 1.0};
Point(122) = {0.036661, -0.742714, 0, 1.0};
Point(123) = {0.037213, -0.741888, 0, 1.0};
Point(124) = {0.037310, -0.741170, 0, 1.0};
Point(125) = {0.036893, -0.740474, 0, 1.0};
Point(126) = {0.036035, -0.739720, 0, 1.0};
Point(127) = {0.034768, -0.739001, 0, 1.0};
Point(128) = {0.033042, -0.738339, 0, 1.0};
Point(129) = {0.030841, -0.737707, 0, 1.0};
Point(130) = {0.028193, -0.737079, 0, 1.0};
Point(131) = {0.025120, -0.736455, 0, 1.0};
Point(132) = {0.021646, -0.735836, 0, 1.0};
Point(133) = {0.017793, -0.735222, 0, 1.0};
Point(134) = {0.013589, -0.734613, 0, 1.0};
Point(135) = {0.009067, -0.734011, 0, 1.0};
Point(136) = {0.004259, -0.733421, 0, 1.0};
Point(137) = {-0.000792, -0.732851, 0, 1.0};
Point(138) = {-0.006049, -0.732321, 0, 1.0};
Point(139) = {-0.011495, -0.731876, 0, 1.0};
Point(140) = {-0.017155, -0.731514, 0, 1.0};
Point(141) = {-0.023033, -0.731187, 0, 1.0};
Point(142) = {-0.029061, -0.730832, 0, 1.0};
Point(143) = {-0.035154, -0.730446, 0, 1.0};
Point(144) = {-0.041261, -0.730059, 0, 1.0};
Point(145) = {-0.047347, -0.729677, 0, 1.0};
Point(146) = {-0.053372, -0.729304, 0, 1.0};
Point(147) = {-0.059296, -0.728937, 0, 1.0};
Point(148) = {-0.065080, -0.728578, 0, 1.0};
Point(149) = {-0.070681, -0.728229, 0, 1.0};
Point(150) = {-0.076060, -0.727891, 0, 1.0};
Point(151) = {-0.081179, -0.727569, 0, 1.0};
Point(152) = {-0.085997, -0.727275, 0, 1.0};
Point(153) = {-0.090497, -0.727010, 0, 1.0};
Point(154) = {-0.094656, -0.726765, 0, 1.0};
Point(155) = {-0.098431, -0.726531, 0, 1.0};
Point(156) = {-0.101785, -0.726312, 0, 1.0};
Point(157) = {-0.104683, -0.726119, 0, 1.0};
Point(158) = {-0.107103, -0.725972, 0, 1.0};
Point(159) = {-0.109054, -0.725876, 0, 1.0};
Point(160) = {-0.110522, -0.725795, 0, 1.0};
Point(161) = {-0.111445, -0.725714, 0, 1.0};
Point(162) = {-0.111761, -0.725671, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
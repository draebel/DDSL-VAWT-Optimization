SetFactory("OpenCASCADE");

Point(1) = {0.112038, 0.727144, 0, 1.0};
Point(2) = {0.111728, 0.727216, 0, 1.0};
Point(3) = {0.110844, 0.727462, 0, 1.0};
Point(4) = {0.109450, 0.727897, 0, 1.0};
Point(5) = {0.107603, 0.728493, 0, 1.0};
Point(6) = {0.105314, 0.729219, 0, 1.0};
Point(7) = {0.102595, 0.730075, 0, 1.0};
Point(8) = {0.099478, 0.731063, 0, 1.0};
Point(9) = {0.096002, 0.732173, 0, 1.0};
Point(10) = {0.092202, 0.733391, 0, 1.0};
Point(11) = {0.088120, 0.734700, 0, 1.0};
Point(12) = {0.083792, 0.736079, 0, 1.0};
Point(13) = {0.079260, 0.737500, 0, 1.0};
Point(14) = {0.074553, 0.738921, 0, 1.0};
Point(15) = {0.069687, 0.740318, 0, 1.0};
Point(16) = {0.064689, 0.741679, 0, 1.0};
Point(17) = {0.059582, 0.742972, 0, 1.0};
Point(18) = {0.054378, 0.744183, 0, 1.0};
Point(19) = {0.049115, 0.745303, 0, 1.0};
Point(20) = {0.043803, 0.746309, 0, 1.0};
Point(21) = {0.038458, 0.747204, 0, 1.0};
Point(22) = {0.033112, 0.747975, 0, 1.0};
Point(23) = {0.027785, 0.748618, 0, 1.0};
Point(24) = {0.022498, 0.749141, 0, 1.0};
Point(25) = {0.017282, 0.749536, 0, 1.0};
Point(26) = {0.012157, 0.749807, 0, 1.0};
Point(27) = {0.007153, 0.749961, 0, 1.0};
Point(28) = {0.002297, 0.750000, 0, 1.0};
Point(29) = {-0.002383, 0.749929, 0, 1.0};
Point(30) = {-0.006859, 0.749751, 0, 1.0};
Point(31) = {-0.011108, 0.749470, 0, 1.0};
Point(32) = {-0.015103, 0.749093, 0, 1.0};
Point(33) = {-0.018825, 0.748625, 0, 1.0};
Point(34) = {-0.022255, 0.748071, 0, 1.0};
Point(35) = {-0.025370, 0.747444, 0, 1.0};
Point(36) = {-0.028155, 0.746748, 0, 1.0};
Point(37) = {-0.030599, 0.745998, 0, 1.0};
Point(38) = {-0.032684, 0.745205, 0, 1.0};
Point(39) = {-0.034399, 0.744381, 0, 1.0};
Point(40) = {-0.035727, 0.743550, 0, 1.0};
Point(41) = {-0.036660, 0.742708, 0, 1.0};
Point(42) = {-0.037213, 0.741882, 0, 1.0};
Point(43) = {-0.037310, 0.741163, 0, 1.0};
Point(44) = {-0.036893, 0.740466, 0, 1.0};
Point(45) = {-0.036034, 0.739711, 0, 1.0};
Point(46) = {-0.034766, 0.738992, 0, 1.0};
Point(47) = {-0.033038, 0.738330, 0, 1.0};
Point(48) = {-0.030835, 0.737697, 0, 1.0};
Point(49) = {-0.028185, 0.737068, 0, 1.0};
Point(50) = {-0.025110, 0.736443, 0, 1.0};
Point(51) = {-0.021632, 0.735825, 0, 1.0};
Point(52) = {-0.017776, 0.735210, 0, 1.0};
Point(53) = {-0.013569, 0.734600, 0, 1.0};
Point(54) = {-0.009044, 0.733998, 0, 1.0};
Point(55) = {-0.004232, 0.733407, 0, 1.0};
Point(56) = {0.000824, 0.732837, 0, 1.0};
Point(57) = {0.006085, 0.732306, 0, 1.0};
Point(58) = {0.011537, 0.731861, 0, 1.0};
Point(59) = {0.017201, 0.731499, 0, 1.0};
Point(60) = {0.023084, 0.731171, 0, 1.0};
Point(61) = {0.029117, 0.730815, 0, 1.0};
Point(62) = {0.035215, 0.730429, 0, 1.0};
Point(63) = {0.041327, 0.730042, 0, 1.0};
Point(64) = {0.047418, 0.729660, 0, 1.0};
Point(65) = {0.053448, 0.729287, 0, 1.0};
Point(66) = {0.059377, 0.728919, 0, 1.0};
Point(67) = {0.065166, 0.728560, 0, 1.0};
Point(68) = {0.070772, 0.728210, 0, 1.0};
Point(69) = {0.076155, 0.727872, 0, 1.0};
Point(70) = {0.081278, 0.727550, 0, 1.0};
Point(71) = {0.086100, 0.727256, 0, 1.0};
Point(72) = {0.090605, 0.726990, 0, 1.0};
Point(73) = {0.094767, 0.726746, 0, 1.0};
Point(74) = {0.098545, 0.726511, 0, 1.0};
Point(75) = {0.101902, 0.726293, 0, 1.0};
Point(76) = {0.104802, 0.726099, 0, 1.0};
Point(77) = {0.107225, 0.725952, 0, 1.0};
Point(78) = {0.109177, 0.725855, 0, 1.0};
Point(79) = {0.110646, 0.725775, 0, 1.0};
Point(80) = {0.111570, 0.725693, 0, 1.0};
Point(81) = {0.111887, 0.725651, 0, 1.0};
Point(82) = {-0.112038, -0.727144, 0, 1.0};
Point(83) = {-0.111728, -0.727216, 0, 1.0};
Point(84) = {-0.110844, -0.727462, 0, 1.0};
Point(85) = {-0.109450, -0.727897, 0, 1.0};
Point(86) = {-0.107603, -0.728493, 0, 1.0};
Point(87) = {-0.105314, -0.729219, 0, 1.0};
Point(88) = {-0.102595, -0.730075, 0, 1.0};
Point(89) = {-0.099478, -0.731063, 0, 1.0};
Point(90) = {-0.096002, -0.732173, 0, 1.0};
Point(91) = {-0.092202, -0.733391, 0, 1.0};
Point(92) = {-0.088120, -0.734700, 0, 1.0};
Point(93) = {-0.083792, -0.736079, 0, 1.0};
Point(94) = {-0.079260, -0.737500, 0, 1.0};
Point(95) = {-0.074553, -0.738921, 0, 1.0};
Point(96) = {-0.069687, -0.740318, 0, 1.0};
Point(97) = {-0.064689, -0.741679, 0, 1.0};
Point(98) = {-0.059582, -0.742972, 0, 1.0};
Point(99) = {-0.054378, -0.744183, 0, 1.0};
Point(100) = {-0.049115, -0.745303, 0, 1.0};
Point(101) = {-0.043803, -0.746309, 0, 1.0};
Point(102) = {-0.038458, -0.747204, 0, 1.0};
Point(103) = {-0.033112, -0.747975, 0, 1.0};
Point(104) = {-0.027785, -0.748618, 0, 1.0};
Point(105) = {-0.022498, -0.749141, 0, 1.0};
Point(106) = {-0.017282, -0.749536, 0, 1.0};
Point(107) = {-0.012157, -0.749807, 0, 1.0};
Point(108) = {-0.007153, -0.749961, 0, 1.0};
Point(109) = {-0.002297, -0.750000, 0, 1.0};
Point(110) = {0.002383, -0.749929, 0, 1.0};
Point(111) = {0.006859, -0.749751, 0, 1.0};
Point(112) = {0.011108, -0.749470, 0, 1.0};
Point(113) = {0.015103, -0.749093, 0, 1.0};
Point(114) = {0.018825, -0.748625, 0, 1.0};
Point(115) = {0.022255, -0.748071, 0, 1.0};
Point(116) = {0.025370, -0.747444, 0, 1.0};
Point(117) = {0.028155, -0.746748, 0, 1.0};
Point(118) = {0.030599, -0.745998, 0, 1.0};
Point(119) = {0.032684, -0.745205, 0, 1.0};
Point(120) = {0.034399, -0.744381, 0, 1.0};
Point(121) = {0.035727, -0.743550, 0, 1.0};
Point(122) = {0.036660, -0.742708, 0, 1.0};
Point(123) = {0.037213, -0.741882, 0, 1.0};
Point(124) = {0.037310, -0.741163, 0, 1.0};
Point(125) = {0.036893, -0.740466, 0, 1.0};
Point(126) = {0.036034, -0.739711, 0, 1.0};
Point(127) = {0.034766, -0.738992, 0, 1.0};
Point(128) = {0.033038, -0.738330, 0, 1.0};
Point(129) = {0.030835, -0.737697, 0, 1.0};
Point(130) = {0.028185, -0.737068, 0, 1.0};
Point(131) = {0.025110, -0.736443, 0, 1.0};
Point(132) = {0.021632, -0.735825, 0, 1.0};
Point(133) = {0.017776, -0.735210, 0, 1.0};
Point(134) = {0.013569, -0.734600, 0, 1.0};
Point(135) = {0.009044, -0.733998, 0, 1.0};
Point(136) = {0.004232, -0.733407, 0, 1.0};
Point(137) = {-0.000824, -0.732837, 0, 1.0};
Point(138) = {-0.006085, -0.732306, 0, 1.0};
Point(139) = {-0.011537, -0.731861, 0, 1.0};
Point(140) = {-0.017201, -0.731499, 0, 1.0};
Point(141) = {-0.023084, -0.731171, 0, 1.0};
Point(142) = {-0.029117, -0.730815, 0, 1.0};
Point(143) = {-0.035215, -0.730429, 0, 1.0};
Point(144) = {-0.041327, -0.730042, 0, 1.0};
Point(145) = {-0.047418, -0.729660, 0, 1.0};
Point(146) = {-0.053448, -0.729287, 0, 1.0};
Point(147) = {-0.059377, -0.728919, 0, 1.0};
Point(148) = {-0.065166, -0.728560, 0, 1.0};
Point(149) = {-0.070772, -0.728210, 0, 1.0};
Point(150) = {-0.076155, -0.727872, 0, 1.0};
Point(151) = {-0.081278, -0.727550, 0, 1.0};
Point(152) = {-0.086100, -0.727256, 0, 1.0};
Point(153) = {-0.090605, -0.726990, 0, 1.0};
Point(154) = {-0.094767, -0.726746, 0, 1.0};
Point(155) = {-0.098545, -0.726511, 0, 1.0};
Point(156) = {-0.101902, -0.726293, 0, 1.0};
Point(157) = {-0.104802, -0.726099, 0, 1.0};
Point(158) = {-0.107225, -0.725952, 0, 1.0};
Point(159) = {-0.109177, -0.725855, 0, 1.0};
Point(160) = {-0.110646, -0.725775, 0, 1.0};
Point(161) = {-0.111570, -0.725693, 0, 1.0};
Point(162) = {-0.111887, -0.725651, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
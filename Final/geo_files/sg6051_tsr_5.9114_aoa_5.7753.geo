SetFactory("OpenCASCADE");

Point(1) = {0.074543, 0.734769, 0, 1.0};
Point(2) = {0.074337, 0.734817, 0, 1.0};
Point(3) = {0.073747, 0.734981, 0, 1.0};
Point(4) = {0.072819, 0.735271, 0, 1.0};
Point(5) = {0.071587, 0.735668, 0, 1.0};
Point(6) = {0.070062, 0.736152, 0, 1.0};
Point(7) = {0.068250, 0.736722, 0, 1.0};
Point(8) = {0.066173, 0.737380, 0, 1.0};
Point(9) = {0.063857, 0.738120, 0, 1.0};
Point(10) = {0.061325, 0.738932, 0, 1.0};
Point(11) = {0.058605, 0.739804, 0, 1.0};
Point(12) = {0.055720, 0.740723, 0, 1.0};
Point(13) = {0.052700, 0.741670, 0, 1.0};
Point(14) = {0.049564, 0.742617, 0, 1.0};
Point(15) = {0.046321, 0.743548, 0, 1.0};
Point(16) = {0.042990, 0.744455, 0, 1.0};
Point(17) = {0.039587, 0.745317, 0, 1.0};
Point(18) = {0.036119, 0.746124, 0, 1.0};
Point(19) = {0.032612, 0.746870, 0, 1.0};
Point(20) = {0.029072, 0.747540, 0, 1.0};
Point(21) = {0.025510, 0.748137, 0, 1.0};
Point(22) = {0.021948, 0.748651, 0, 1.0};
Point(23) = {0.018398, 0.749079, 0, 1.0};
Point(24) = {0.014875, 0.749427, 0, 1.0};
Point(25) = {0.011399, 0.749691, 0, 1.0};
Point(26) = {0.007984, 0.749871, 0, 1.0};
Point(27) = {0.004649, 0.749974, 0, 1.0};
Point(28) = {0.001413, 0.750000, 0, 1.0};
Point(29) = {-0.001705, 0.749953, 0, 1.0};
Point(30) = {-0.004688, 0.749834, 0, 1.0};
Point(31) = {-0.007520, 0.749647, 0, 1.0};
Point(32) = {-0.010182, 0.749396, 0, 1.0};
Point(33) = {-0.012662, 0.749084, 0, 1.0};
Point(34) = {-0.014948, 0.748715, 0, 1.0};
Point(35) = {-0.017024, 0.748297, 0, 1.0};
Point(36) = {-0.018880, 0.747833, 0, 1.0};
Point(37) = {-0.020508, 0.747333, 0, 1.0};
Point(38) = {-0.021898, 0.746804, 0, 1.0};
Point(39) = {-0.023041, 0.746256, 0, 1.0};
Point(40) = {-0.023926, 0.745702, 0, 1.0};
Point(41) = {-0.024548, 0.745141, 0, 1.0};
Point(42) = {-0.024916, 0.744590, 0, 1.0};
Point(43) = {-0.024980, 0.744111, 0, 1.0};
Point(44) = {-0.024703, 0.743647, 0, 1.0};
Point(45) = {-0.024130, 0.743144, 0, 1.0};
Point(46) = {-0.023285, 0.742664, 0, 1.0};
Point(47) = {-0.022134, 0.742223, 0, 1.0};
Point(48) = {-0.020666, 0.741801, 0, 1.0};
Point(49) = {-0.018900, 0.741382, 0, 1.0};
Point(50) = {-0.016851, 0.740966, 0, 1.0};
Point(51) = {-0.014533, 0.740554, 0, 1.0};
Point(52) = {-0.011963, 0.740144, 0, 1.0};
Point(53) = {-0.009160, 0.739738, 0, 1.0};
Point(54) = {-0.006144, 0.739336, 0, 1.0};
Point(55) = {-0.002938, 0.738943, 0, 1.0};
Point(56) = {0.000431, 0.738563, 0, 1.0};
Point(57) = {0.003938, 0.738209, 0, 1.0};
Point(58) = {0.007570, 0.737912, 0, 1.0};
Point(59) = {0.011345, 0.737671, 0, 1.0};
Point(60) = {0.015265, 0.737452, 0, 1.0};
Point(61) = {0.019285, 0.737216, 0, 1.0};
Point(62) = {0.023349, 0.736958, 0, 1.0};
Point(63) = {0.027422, 0.736700, 0, 1.0};
Point(64) = {0.031481, 0.736446, 0, 1.0};
Point(65) = {0.035499, 0.736197, 0, 1.0};
Point(66) = {0.039451, 0.735952, 0, 1.0};
Point(67) = {0.043308, 0.735713, 0, 1.0};
Point(68) = {0.047044, 0.735480, 0, 1.0};
Point(69) = {0.050631, 0.735254, 0, 1.0};
Point(70) = {0.054045, 0.735040, 0, 1.0};
Point(71) = {0.057259, 0.734844, 0, 1.0};
Point(72) = {0.060260, 0.734667, 0, 1.0};
Point(73) = {0.063034, 0.734504, 0, 1.0};
Point(74) = {0.065552, 0.734347, 0, 1.0};
Point(75) = {0.067788, 0.734202, 0, 1.0};
Point(76) = {0.069721, 0.734073, 0, 1.0};
Point(77) = {0.071336, 0.733975, 0, 1.0};
Point(78) = {0.072637, 0.733910, 0, 1.0};
Point(79) = {0.073615, 0.733857, 0, 1.0};
Point(80) = {0.074231, 0.733802, 0, 1.0};
Point(81) = {0.074442, 0.733774, 0, 1.0};
Point(82) = {-0.074543, -0.734769, 0, 1.0};
Point(83) = {-0.074337, -0.734817, 0, 1.0};
Point(84) = {-0.073747, -0.734981, 0, 1.0};
Point(85) = {-0.072819, -0.735271, 0, 1.0};
Point(86) = {-0.071587, -0.735668, 0, 1.0};
Point(87) = {-0.070062, -0.736152, 0, 1.0};
Point(88) = {-0.068250, -0.736722, 0, 1.0};
Point(89) = {-0.066173, -0.737380, 0, 1.0};
Point(90) = {-0.063857, -0.738120, 0, 1.0};
Point(91) = {-0.061325, -0.738932, 0, 1.0};
Point(92) = {-0.058605, -0.739804, 0, 1.0};
Point(93) = {-0.055720, -0.740723, 0, 1.0};
Point(94) = {-0.052700, -0.741670, 0, 1.0};
Point(95) = {-0.049564, -0.742617, 0, 1.0};
Point(96) = {-0.046321, -0.743548, 0, 1.0};
Point(97) = {-0.042990, -0.744455, 0, 1.0};
Point(98) = {-0.039587, -0.745317, 0, 1.0};
Point(99) = {-0.036119, -0.746124, 0, 1.0};
Point(100) = {-0.032612, -0.746870, 0, 1.0};
Point(101) = {-0.029072, -0.747540, 0, 1.0};
Point(102) = {-0.025510, -0.748137, 0, 1.0};
Point(103) = {-0.021948, -0.748651, 0, 1.0};
Point(104) = {-0.018398, -0.749079, 0, 1.0};
Point(105) = {-0.014875, -0.749427, 0, 1.0};
Point(106) = {-0.011399, -0.749691, 0, 1.0};
Point(107) = {-0.007984, -0.749871, 0, 1.0};
Point(108) = {-0.004649, -0.749974, 0, 1.0};
Point(109) = {-0.001413, -0.750000, 0, 1.0};
Point(110) = {0.001705, -0.749953, 0, 1.0};
Point(111) = {0.004688, -0.749834, 0, 1.0};
Point(112) = {0.007520, -0.749647, 0, 1.0};
Point(113) = {0.010182, -0.749396, 0, 1.0};
Point(114) = {0.012662, -0.749084, 0, 1.0};
Point(115) = {0.014948, -0.748715, 0, 1.0};
Point(116) = {0.017024, -0.748297, 0, 1.0};
Point(117) = {0.018880, -0.747833, 0, 1.0};
Point(118) = {0.020508, -0.747333, 0, 1.0};
Point(119) = {0.021898, -0.746804, 0, 1.0};
Point(120) = {0.023041, -0.746256, 0, 1.0};
Point(121) = {0.023926, -0.745702, 0, 1.0};
Point(122) = {0.024548, -0.745141, 0, 1.0};
Point(123) = {0.024916, -0.744590, 0, 1.0};
Point(124) = {0.024980, -0.744111, 0, 1.0};
Point(125) = {0.024703, -0.743647, 0, 1.0};
Point(126) = {0.024130, -0.743144, 0, 1.0};
Point(127) = {0.023285, -0.742664, 0, 1.0};
Point(128) = {0.022134, -0.742223, 0, 1.0};
Point(129) = {0.020666, -0.741801, 0, 1.0};
Point(130) = {0.018900, -0.741382, 0, 1.0};
Point(131) = {0.016851, -0.740966, 0, 1.0};
Point(132) = {0.014533, -0.740554, 0, 1.0};
Point(133) = {0.011963, -0.740144, 0, 1.0};
Point(134) = {0.009160, -0.739738, 0, 1.0};
Point(135) = {0.006144, -0.739336, 0, 1.0};
Point(136) = {0.002938, -0.738943, 0, 1.0};
Point(137) = {-0.000431, -0.738563, 0, 1.0};
Point(138) = {-0.003938, -0.738209, 0, 1.0};
Point(139) = {-0.007570, -0.737912, 0, 1.0};
Point(140) = {-0.011345, -0.737671, 0, 1.0};
Point(141) = {-0.015265, -0.737452, 0, 1.0};
Point(142) = {-0.019285, -0.737216, 0, 1.0};
Point(143) = {-0.023349, -0.736958, 0, 1.0};
Point(144) = {-0.027422, -0.736700, 0, 1.0};
Point(145) = {-0.031481, -0.736446, 0, 1.0};
Point(146) = {-0.035499, -0.736197, 0, 1.0};
Point(147) = {-0.039451, -0.735952, 0, 1.0};
Point(148) = {-0.043308, -0.735713, 0, 1.0};
Point(149) = {-0.047044, -0.735480, 0, 1.0};
Point(150) = {-0.050631, -0.735254, 0, 1.0};
Point(151) = {-0.054045, -0.735040, 0, 1.0};
Point(152) = {-0.057259, -0.734844, 0, 1.0};
Point(153) = {-0.060260, -0.734667, 0, 1.0};
Point(154) = {-0.063034, -0.734504, 0, 1.0};
Point(155) = {-0.065552, -0.734347, 0, 1.0};
Point(156) = {-0.067788, -0.734202, 0, 1.0};
Point(157) = {-0.069721, -0.734073, 0, 1.0};
Point(158) = {-0.071336, -0.733975, 0, 1.0};
Point(159) = {-0.072637, -0.733910, 0, 1.0};
Point(160) = {-0.073615, -0.733857, 0, 1.0};
Point(161) = {-0.074231, -0.733802, 0, 1.0};
Point(162) = {-0.074442, -0.733774, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
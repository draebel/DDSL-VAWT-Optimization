SetFactory("OpenCASCADE");

Point(1) = {0.074709, 0.743054, 0, 1.0};
Point(2) = {0.074392, 0.743071, 0, 1.0};
Point(3) = {0.073478, 0.743159, 0, 1.0};
Point(4) = {0.072030, 0.743344, 0, 1.0};
Point(5) = {0.070106, 0.743607, 0, 1.0};
Point(6) = {0.067726, 0.743922, 0, 1.0};
Point(7) = {0.064900, 0.744290, 0, 1.0};
Point(8) = {0.061658, 0.744718, 0, 1.0};
Point(9) = {0.058041, 0.745203, 0, 1.0};
Point(10) = {0.054087, 0.745739, 0, 1.0};
Point(11) = {0.049839, 0.746314, 0, 1.0};
Point(12) = {0.045337, 0.746916, 0, 1.0};
Point(13) = {0.040626, 0.747522, 0, 1.0};
Point(14) = {0.035744, 0.748100, 0, 1.0};
Point(15) = {0.030708, 0.748625, 0, 1.0};
Point(16) = {0.025549, 0.749091, 0, 1.0};
Point(17) = {0.020294, 0.749472, 0, 1.0};
Point(18) = {0.014959, 0.749755, 0, 1.0};
Point(19) = {0.009581, 0.749937, 0, 1.0};
Point(20) = {0.004175, 0.750000, 0, 1.0};
Point(21) = {-0.001244, 0.749947, 0, 1.0};
Point(22) = {-0.006642, 0.749773, 0, 1.0};
Point(23) = {-0.012000, 0.749475, 0, 1.0};
Point(24) = {-0.017296, 0.749065, 0, 1.0};
Point(25) = {-0.022502, 0.748543, 0, 1.0};
Point(26) = {-0.027595, 0.747914, 0, 1.0};
Point(27) = {-0.032549, 0.747192, 0, 1.0};
Point(28) = {-0.037337, 0.746381, 0, 1.0};
Point(29) = {-0.041932, 0.745493, 0, 1.0};
Point(30) = {-0.046309, 0.744536, 0, 1.0};
Point(31) = {-0.050443, 0.743517, 0, 1.0};
Point(32) = {-0.054311, 0.742447, 0, 1.0};
Point(33) = {-0.057894, 0.741336, 0, 1.0};
Point(34) = {-0.061174, 0.740192, 0, 1.0};
Point(35) = {-0.064131, 0.739029, 0, 1.0};
Point(36) = {-0.066752, 0.737858, 0, 1.0};
Point(37) = {-0.069028, 0.736692, 0, 1.0};
Point(38) = {-0.070942, 0.735547, 0, 1.0};
Point(39) = {-0.072486, 0.734436, 0, 1.0};
Point(40) = {-0.073649, 0.733386, 0, 1.0};
Point(41) = {-0.074420, 0.732393, 0, 1.0};
Point(42) = {-0.074820, 0.731483, 0, 1.0};
Point(43) = {-0.074790, 0.730758, 0, 1.0};
Point(44) = {-0.074258, 0.730145, 0, 1.0};
Point(45) = {-0.073280, 0.729552, 0, 1.0};
Point(46) = {-0.071906, 0.729065, 0, 1.0};
Point(47) = {-0.070089, 0.728715, 0, 1.0};
Point(48) = {-0.067809, 0.728477, 0, 1.0};
Point(49) = {-0.065091, 0.728321, 0, 1.0};
Point(50) = {-0.061953, 0.728243, 0, 1.0};
Point(51) = {-0.058421, 0.728242, 0, 1.0};
Point(52) = {-0.054517, 0.728311, 0, 1.0};
Point(53) = {-0.050268, 0.728446, 0, 1.0};
Point(54) = {-0.045707, 0.728643, 0, 1.0};
Point(55) = {-0.040866, 0.728903, 0, 1.0};
Point(56) = {-0.035788, 0.729225, 0, 1.0};
Point(57) = {-0.030515, 0.729622, 0, 1.0};
Point(58) = {-0.025070, 0.730135, 0, 1.0};
Point(59) = {-0.019429, 0.730769, 0, 1.0};
Point(60) = {-0.013580, 0.731474, 0, 1.0};
Point(61) = {-0.007577, 0.732179, 0, 1.0};
Point(62) = {-0.001505, 0.732864, 0, 1.0};
Point(63) = {0.004580, 0.733551, 0, 1.0};
Point(64) = {0.010644, 0.734239, 0, 1.0};
Point(65) = {0.016646, 0.734925, 0, 1.0};
Point(66) = {0.022549, 0.735600, 0, 1.0};
Point(67) = {0.028311, 0.736258, 0, 1.0};
Point(68) = {0.033892, 0.736893, 0, 1.0};
Point(69) = {0.039252, 0.737501, 0, 1.0};
Point(70) = {0.044352, 0.738079, 0, 1.0};
Point(71) = {0.049151, 0.738632, 0, 1.0};
Point(72) = {0.053633, 0.739157, 0, 1.0};
Point(73) = {0.057774, 0.739644, 0, 1.0};
Point(74) = {0.061535, 0.740074, 0, 1.0};
Point(75) = {0.064878, 0.740445, 0, 1.0};
Point(76) = {0.067768, 0.740761, 0, 1.0};
Point(77) = {0.070179, 0.741039, 0, 1.0};
Point(78) = {0.072118, 0.741286, 0, 1.0};
Point(79) = {0.073578, 0.741463, 0, 1.0};
Point(80) = {0.074502, 0.741544, 0, 1.0};
Point(81) = {0.074821, 0.741558, 0, 1.0};
Point(82) = {-0.074709, -0.743054, 0, 1.0};
Point(83) = {-0.074392, -0.743071, 0, 1.0};
Point(84) = {-0.073478, -0.743159, 0, 1.0};
Point(85) = {-0.072030, -0.743344, 0, 1.0};
Point(86) = {-0.070106, -0.743607, 0, 1.0};
Point(87) = {-0.067726, -0.743922, 0, 1.0};
Point(88) = {-0.064900, -0.744290, 0, 1.0};
Point(89) = {-0.061658, -0.744718, 0, 1.0};
Point(90) = {-0.058041, -0.745203, 0, 1.0};
Point(91) = {-0.054087, -0.745739, 0, 1.0};
Point(92) = {-0.049839, -0.746314, 0, 1.0};
Point(93) = {-0.045337, -0.746916, 0, 1.0};
Point(94) = {-0.040626, -0.747522, 0, 1.0};
Point(95) = {-0.035744, -0.748100, 0, 1.0};
Point(96) = {-0.030708, -0.748625, 0, 1.0};
Point(97) = {-0.025549, -0.749091, 0, 1.0};
Point(98) = {-0.020294, -0.749472, 0, 1.0};
Point(99) = {-0.014959, -0.749755, 0, 1.0};
Point(100) = {-0.009581, -0.749937, 0, 1.0};
Point(101) = {-0.004175, -0.750000, 0, 1.0};
Point(102) = {0.001244, -0.749947, 0, 1.0};
Point(103) = {0.006642, -0.749773, 0, 1.0};
Point(104) = {0.012000, -0.749475, 0, 1.0};
Point(105) = {0.017296, -0.749065, 0, 1.0};
Point(106) = {0.022502, -0.748543, 0, 1.0};
Point(107) = {0.027595, -0.747914, 0, 1.0};
Point(108) = {0.032549, -0.747192, 0, 1.0};
Point(109) = {0.037337, -0.746381, 0, 1.0};
Point(110) = {0.041932, -0.745493, 0, 1.0};
Point(111) = {0.046309, -0.744536, 0, 1.0};
Point(112) = {0.050443, -0.743517, 0, 1.0};
Point(113) = {0.054311, -0.742447, 0, 1.0};
Point(114) = {0.057894, -0.741336, 0, 1.0};
Point(115) = {0.061174, -0.740192, 0, 1.0};
Point(116) = {0.064131, -0.739029, 0, 1.0};
Point(117) = {0.066752, -0.737858, 0, 1.0};
Point(118) = {0.069028, -0.736692, 0, 1.0};
Point(119) = {0.070942, -0.735547, 0, 1.0};
Point(120) = {0.072486, -0.734436, 0, 1.0};
Point(121) = {0.073649, -0.733386, 0, 1.0};
Point(122) = {0.074420, -0.732393, 0, 1.0};
Point(123) = {0.074820, -0.731483, 0, 1.0};
Point(124) = {0.074790, -0.730758, 0, 1.0};
Point(125) = {0.074258, -0.730145, 0, 1.0};
Point(126) = {0.073280, -0.729552, 0, 1.0};
Point(127) = {0.071906, -0.729065, 0, 1.0};
Point(128) = {0.070089, -0.728715, 0, 1.0};
Point(129) = {0.067809, -0.728477, 0, 1.0};
Point(130) = {0.065091, -0.728321, 0, 1.0};
Point(131) = {0.061953, -0.728243, 0, 1.0};
Point(132) = {0.058421, -0.728242, 0, 1.0};
Point(133) = {0.054517, -0.728311, 0, 1.0};
Point(134) = {0.050268, -0.728446, 0, 1.0};
Point(135) = {0.045707, -0.728643, 0, 1.0};
Point(136) = {0.040866, -0.728903, 0, 1.0};
Point(137) = {0.035788, -0.729225, 0, 1.0};
Point(138) = {0.030515, -0.729622, 0, 1.0};
Point(139) = {0.025070, -0.730135, 0, 1.0};
Point(140) = {0.019429, -0.730769, 0, 1.0};
Point(141) = {0.013580, -0.731474, 0, 1.0};
Point(142) = {0.007577, -0.732179, 0, 1.0};
Point(143) = {0.001505, -0.732864, 0, 1.0};
Point(144) = {-0.004580, -0.733551, 0, 1.0};
Point(145) = {-0.010644, -0.734239, 0, 1.0};
Point(146) = {-0.016646, -0.734925, 0, 1.0};
Point(147) = {-0.022549, -0.735600, 0, 1.0};
Point(148) = {-0.028311, -0.736258, 0, 1.0};
Point(149) = {-0.033892, -0.736893, 0, 1.0};
Point(150) = {-0.039252, -0.737501, 0, 1.0};
Point(151) = {-0.044352, -0.738079, 0, 1.0};
Point(152) = {-0.049151, -0.738632, 0, 1.0};
Point(153) = {-0.053633, -0.739157, 0, 1.0};
Point(154) = {-0.057774, -0.739644, 0, 1.0};
Point(155) = {-0.061535, -0.740074, 0, 1.0};
Point(156) = {-0.064878, -0.740445, 0, 1.0};
Point(157) = {-0.067768, -0.740761, 0, 1.0};
Point(158) = {-0.070179, -0.741039, 0, 1.0};
Point(159) = {-0.072118, -0.741286, 0, 1.0};
Point(160) = {-0.073578, -0.741463, 0, 1.0};
Point(161) = {-0.074502, -0.741544, 0, 1.0};
Point(162) = {-0.074821, -0.741558, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
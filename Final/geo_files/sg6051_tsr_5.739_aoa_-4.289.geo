SetFactory("OpenCASCADE");

Point(1) = {0.149365, 0.740742, 0, 1.0};
Point(2) = {0.148942, 0.740765, 0, 1.0};
Point(3) = {0.147724, 0.740882, 0, 1.0};
Point(4) = {0.145794, 0.741129, 0, 1.0};
Point(5) = {0.143231, 0.741480, 0, 1.0};
Point(6) = {0.140059, 0.741900, 0, 1.0};
Point(7) = {0.136291, 0.742389, 0, 1.0};
Point(8) = {0.131971, 0.742960, 0, 1.0};
Point(9) = {0.127151, 0.743607, 0, 1.0};
Point(10) = {0.121881, 0.744321, 0, 1.0};
Point(11) = {0.116219, 0.745088, 0, 1.0};
Point(12) = {0.110219, 0.745889, 0, 1.0};
Point(13) = {0.103941, 0.746698, 0, 1.0};
Point(14) = {0.097433, 0.747467, 0, 1.0};
Point(15) = {0.090722, 0.748168, 0, 1.0};
Point(16) = {0.083846, 0.748789, 0, 1.0};
Point(17) = {0.076842, 0.749297, 0, 1.0};
Point(18) = {0.069732, 0.749674, 0, 1.0};
Point(19) = {0.062564, 0.749917, 0, 1.0};
Point(20) = {0.055360, 0.750000, 0, 1.0};
Point(21) = {0.048137, 0.749930, 0, 1.0};
Point(22) = {0.040942, 0.749697, 0, 1.0};
Point(23) = {0.033802, 0.749300, 0, 1.0};
Point(24) = {0.026743, 0.748754, 0, 1.0};
Point(25) = {0.019805, 0.748058, 0, 1.0};
Point(26) = {0.013017, 0.747220, 0, 1.0};
Point(27) = {0.006414, 0.746257, 0, 1.0};
Point(28) = {0.000033, 0.745177, 0, 1.0};
Point(29) = {-0.006091, 0.743993, 0, 1.0};
Point(30) = {-0.011924, 0.742718, 0, 1.0};
Point(31) = {-0.017434, 0.741360, 0, 1.0};
Point(32) = {-0.022590, 0.739934, 0, 1.0};
Point(33) = {-0.027365, 0.738453, 0, 1.0};
Point(34) = {-0.031737, 0.736928, 0, 1.0};
Point(35) = {-0.035678, 0.735379, 0, 1.0};
Point(36) = {-0.039171, 0.733817, 0, 1.0};
Point(37) = {-0.042203, 0.732264, 0, 1.0};
Point(38) = {-0.044754, 0.730737, 0, 1.0};
Point(39) = {-0.046813, 0.729257, 0, 1.0};
Point(40) = {-0.048363, 0.727857, 0, 1.0};
Point(41) = {-0.049391, 0.726534, 0, 1.0};
Point(42) = {-0.049924, 0.725321, 0, 1.0};
Point(43) = {-0.049883, 0.724355, 0, 1.0};
Point(44) = {-0.049174, 0.723538, 0, 1.0};
Point(45) = {-0.047871, 0.722747, 0, 1.0};
Point(46) = {-0.046040, 0.722098, 0, 1.0};
Point(47) = {-0.043618, 0.721632, 0, 1.0};
Point(48) = {-0.040580, 0.721315, 0, 1.0};
Point(49) = {-0.036956, 0.721107, 0, 1.0};
Point(50) = {-0.032775, 0.721003, 0, 1.0};
Point(51) = {-0.028067, 0.721002, 0, 1.0};
Point(52) = {-0.022864, 0.721093, 0, 1.0};
Point(53) = {-0.017201, 0.721273, 0, 1.0};
Point(54) = {-0.011122, 0.721536, 0, 1.0};
Point(55) = {-0.004670, 0.721882, 0, 1.0};
Point(56) = {0.002097, 0.722311, 0, 1.0};
Point(57) = {0.009125, 0.722840, 0, 1.0};
Point(58) = {0.016382, 0.723525, 0, 1.0};
Point(59) = {0.023900, 0.724369, 0, 1.0};
Point(60) = {0.031696, 0.725309, 0, 1.0};
Point(61) = {0.039696, 0.726248, 0, 1.0};
Point(62) = {0.047788, 0.727162, 0, 1.0};
Point(63) = {0.055899, 0.728077, 0, 1.0};
Point(64) = {0.063981, 0.728994, 0, 1.0};
Point(65) = {0.071981, 0.729909, 0, 1.0};
Point(66) = {0.079847, 0.730808, 0, 1.0};
Point(67) = {0.087527, 0.731684, 0, 1.0};
Point(68) = {0.094965, 0.732531, 0, 1.0};
Point(69) = {0.102108, 0.733342, 0, 1.0};
Point(70) = {0.108906, 0.734112, 0, 1.0};
Point(71) = {0.115303, 0.734849, 0, 1.0};
Point(72) = {0.121275, 0.735549, 0, 1.0};
Point(73) = {0.126794, 0.736198, 0, 1.0};
Point(74) = {0.131807, 0.736770, 0, 1.0};
Point(75) = {0.136263, 0.737265, 0, 1.0};
Point(76) = {0.140114, 0.737686, 0, 1.0};
Point(77) = {0.143327, 0.738057, 0, 1.0};
Point(78) = {0.145912, 0.738386, 0, 1.0};
Point(79) = {0.147857, 0.738622, 0, 1.0};
Point(80) = {0.149089, 0.738730, 0, 1.0};
Point(81) = {0.149515, 0.738748, 0, 1.0};
Point(82) = {-0.149365, -0.740742, 0, 1.0};
Point(83) = {-0.148942, -0.740765, 0, 1.0};
Point(84) = {-0.147724, -0.740882, 0, 1.0};
Point(85) = {-0.145794, -0.741129, 0, 1.0};
Point(86) = {-0.143231, -0.741480, 0, 1.0};
Point(87) = {-0.140059, -0.741900, 0, 1.0};
Point(88) = {-0.136291, -0.742389, 0, 1.0};
Point(89) = {-0.131971, -0.742960, 0, 1.0};
Point(90) = {-0.127151, -0.743607, 0, 1.0};
Point(91) = {-0.121881, -0.744321, 0, 1.0};
Point(92) = {-0.116219, -0.745088, 0, 1.0};
Point(93) = {-0.110219, -0.745889, 0, 1.0};
Point(94) = {-0.103941, -0.746698, 0, 1.0};
Point(95) = {-0.097433, -0.747467, 0, 1.0};
Point(96) = {-0.090722, -0.748168, 0, 1.0};
Point(97) = {-0.083846, -0.748789, 0, 1.0};
Point(98) = {-0.076842, -0.749297, 0, 1.0};
Point(99) = {-0.069732, -0.749674, 0, 1.0};
Point(100) = {-0.062564, -0.749917, 0, 1.0};
Point(101) = {-0.055360, -0.750000, 0, 1.0};
Point(102) = {-0.048137, -0.749930, 0, 1.0};
Point(103) = {-0.040942, -0.749697, 0, 1.0};
Point(104) = {-0.033802, -0.749300, 0, 1.0};
Point(105) = {-0.026743, -0.748754, 0, 1.0};
Point(106) = {-0.019805, -0.748058, 0, 1.0};
Point(107) = {-0.013017, -0.747220, 0, 1.0};
Point(108) = {-0.006414, -0.746257, 0, 1.0};
Point(109) = {-0.000033, -0.745177, 0, 1.0};
Point(110) = {0.006091, -0.743993, 0, 1.0};
Point(111) = {0.011924, -0.742718, 0, 1.0};
Point(112) = {0.017434, -0.741360, 0, 1.0};
Point(113) = {0.022590, -0.739934, 0, 1.0};
Point(114) = {0.027365, -0.738453, 0, 1.0};
Point(115) = {0.031737, -0.736928, 0, 1.0};
Point(116) = {0.035678, -0.735379, 0, 1.0};
Point(117) = {0.039171, -0.733817, 0, 1.0};
Point(118) = {0.042203, -0.732264, 0, 1.0};
Point(119) = {0.044754, -0.730737, 0, 1.0};
Point(120) = {0.046813, -0.729257, 0, 1.0};
Point(121) = {0.048363, -0.727857, 0, 1.0};
Point(122) = {0.049391, -0.726534, 0, 1.0};
Point(123) = {0.049924, -0.725321, 0, 1.0};
Point(124) = {0.049883, -0.724355, 0, 1.0};
Point(125) = {0.049174, -0.723538, 0, 1.0};
Point(126) = {0.047871, -0.722747, 0, 1.0};
Point(127) = {0.046040, -0.722098, 0, 1.0};
Point(128) = {0.043618, -0.721632, 0, 1.0};
Point(129) = {0.040580, -0.721315, 0, 1.0};
Point(130) = {0.036956, -0.721107, 0, 1.0};
Point(131) = {0.032775, -0.721003, 0, 1.0};
Point(132) = {0.028067, -0.721002, 0, 1.0};
Point(133) = {0.022864, -0.721093, 0, 1.0};
Point(134) = {0.017201, -0.721273, 0, 1.0};
Point(135) = {0.011122, -0.721536, 0, 1.0};
Point(136) = {0.004670, -0.721882, 0, 1.0};
Point(137) = {-0.002097, -0.722311, 0, 1.0};
Point(138) = {-0.009125, -0.722840, 0, 1.0};
Point(139) = {-0.016382, -0.723525, 0, 1.0};
Point(140) = {-0.023900, -0.724369, 0, 1.0};
Point(141) = {-0.031696, -0.725309, 0, 1.0};
Point(142) = {-0.039696, -0.726248, 0, 1.0};
Point(143) = {-0.047788, -0.727162, 0, 1.0};
Point(144) = {-0.055899, -0.728077, 0, 1.0};
Point(145) = {-0.063981, -0.728994, 0, 1.0};
Point(146) = {-0.071981, -0.729909, 0, 1.0};
Point(147) = {-0.079847, -0.730808, 0, 1.0};
Point(148) = {-0.087527, -0.731684, 0, 1.0};
Point(149) = {-0.094965, -0.732531, 0, 1.0};
Point(150) = {-0.102108, -0.733342, 0, 1.0};
Point(151) = {-0.108906, -0.734112, 0, 1.0};
Point(152) = {-0.115303, -0.734849, 0, 1.0};
Point(153) = {-0.121275, -0.735549, 0, 1.0};
Point(154) = {-0.126794, -0.736198, 0, 1.0};
Point(155) = {-0.131807, -0.736770, 0, 1.0};
Point(156) = {-0.136263, -0.737265, 0, 1.0};
Point(157) = {-0.140114, -0.737686, 0, 1.0};
Point(158) = {-0.143327, -0.738057, 0, 1.0};
Point(159) = {-0.145912, -0.738386, 0, 1.0};
Point(160) = {-0.147857, -0.738622, 0, 1.0};
Point(161) = {-0.149089, -0.738730, 0, 1.0};
Point(162) = {-0.149515, -0.738748, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
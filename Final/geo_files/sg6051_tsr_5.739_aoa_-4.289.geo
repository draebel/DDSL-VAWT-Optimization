SetFactory("OpenCASCADE");

Point(1) = {0.112024, 0.743057, 0, 1.0};
Point(2) = {0.111707, 0.743074, 0, 1.0};
Point(3) = {0.110793, 0.743162, 0, 1.0};
Point(4) = {0.109346, 0.743346, 0, 1.0};
Point(5) = {0.107423, 0.743610, 0, 1.0};
Point(6) = {0.105044, 0.743925, 0, 1.0};
Point(7) = {0.102219, 0.744292, 0, 1.0};
Point(8) = {0.098978, 0.744720, 0, 1.0};
Point(9) = {0.095363, 0.745205, 0, 1.0};
Point(10) = {0.091410, 0.745741, 0, 1.0};
Point(11) = {0.087164, 0.746316, 0, 1.0};
Point(12) = {0.082664, 0.746917, 0, 1.0};
Point(13) = {0.077955, 0.747523, 0, 1.0};
Point(14) = {0.073075, 0.748101, 0, 1.0};
Point(15) = {0.068041, 0.748626, 0, 1.0};
Point(16) = {0.062884, 0.749092, 0, 1.0};
Point(17) = {0.057632, 0.749473, 0, 1.0};
Point(18) = {0.052299, 0.749755, 0, 1.0};
Point(19) = {0.046923, 0.749937, 0, 1.0};
Point(20) = {0.041520, 0.750000, 0, 1.0};
Point(21) = {0.036102, 0.749947, 0, 1.0};
Point(22) = {0.030706, 0.749773, 0, 1.0};
Point(23) = {0.025351, 0.749475, 0, 1.0};
Point(24) = {0.020057, 0.749066, 0, 1.0};
Point(25) = {0.014854, 0.748543, 0, 1.0};
Point(26) = {0.009763, 0.747915, 0, 1.0};
Point(27) = {0.004811, 0.747193, 0, 1.0};
Point(28) = {0.000025, 0.746383, 0, 1.0};
Point(29) = {-0.004569, 0.745495, 0, 1.0};
Point(30) = {-0.008943, 0.744538, 0, 1.0};
Point(31) = {-0.013076, 0.743520, 0, 1.0};
Point(32) = {-0.016942, 0.742451, 0, 1.0};
Point(33) = {-0.020523, 0.741340, 0, 1.0};
Point(34) = {-0.023803, 0.740196, 0, 1.0};
Point(35) = {-0.026758, 0.739034, 0, 1.0};
Point(36) = {-0.029378, 0.737863, 0, 1.0};
Point(37) = {-0.031652, 0.736698, 0, 1.0};
Point(38) = {-0.033566, 0.735553, 0, 1.0};
Point(39) = {-0.035110, 0.734443, 0, 1.0};
Point(40) = {-0.036272, 0.733393, 0, 1.0};
Point(41) = {-0.037043, 0.732401, 0, 1.0};
Point(42) = {-0.037443, 0.731491, 0, 1.0};
Point(43) = {-0.037412, 0.730767, 0, 1.0};
Point(44) = {-0.036881, 0.730154, 0, 1.0};
Point(45) = {-0.035904, 0.729560, 0, 1.0};
Point(46) = {-0.034530, 0.729074, 0, 1.0};
Point(47) = {-0.032714, 0.728724, 0, 1.0};
Point(48) = {-0.030435, 0.728486, 0, 1.0};
Point(49) = {-0.027717, 0.728330, 0, 1.0};
Point(50) = {-0.024581, 0.728253, 0, 1.0};
Point(51) = {-0.021051, 0.728251, 0, 1.0};
Point(52) = {-0.017148, 0.728320, 0, 1.0};
Point(53) = {-0.012901, 0.728455, 0, 1.0};
Point(54) = {-0.008341, 0.728652, 0, 1.0};
Point(55) = {-0.003502, 0.728911, 0, 1.0};
Point(56) = {0.001573, 0.729233, 0, 1.0};
Point(57) = {0.006844, 0.729630, 0, 1.0};
Point(58) = {0.012287, 0.730144, 0, 1.0};
Point(59) = {0.017925, 0.730777, 0, 1.0};
Point(60) = {0.023772, 0.731482, 0, 1.0};
Point(61) = {0.029772, 0.732186, 0, 1.0};
Point(62) = {0.035841, 0.732871, 0, 1.0};
Point(63) = {0.041924, 0.733558, 0, 1.0};
Point(64) = {0.047985, 0.734245, 0, 1.0};
Point(65) = {0.053985, 0.734932, 0, 1.0};
Point(66) = {0.059886, 0.735606, 0, 1.0};
Point(67) = {0.065646, 0.736263, 0, 1.0};
Point(68) = {0.071224, 0.736898, 0, 1.0};
Point(69) = {0.076581, 0.737506, 0, 1.0};
Point(70) = {0.081679, 0.738084, 0, 1.0};
Point(71) = {0.086477, 0.738636, 0, 1.0};
Point(72) = {0.090956, 0.739162, 0, 1.0};
Point(73) = {0.095095, 0.739648, 0, 1.0};
Point(74) = {0.098855, 0.740078, 0, 1.0};
Point(75) = {0.102197, 0.740449, 0, 1.0};
Point(76) = {0.105085, 0.740765, 0, 1.0};
Point(77) = {0.107495, 0.741043, 0, 1.0};
Point(78) = {0.109434, 0.741289, 0, 1.0};
Point(79) = {0.110893, 0.741466, 0, 1.0};
Point(80) = {0.111817, 0.741548, 0, 1.0};
Point(81) = {0.112136, 0.741561, 0, 1.0};
Point(82) = {-0.112024, -0.743057, 0, 1.0};
Point(83) = {-0.111707, -0.743074, 0, 1.0};
Point(84) = {-0.110793, -0.743162, 0, 1.0};
Point(85) = {-0.109346, -0.743346, 0, 1.0};
Point(86) = {-0.107423, -0.743610, 0, 1.0};
Point(87) = {-0.105044, -0.743925, 0, 1.0};
Point(88) = {-0.102219, -0.744292, 0, 1.0};
Point(89) = {-0.098978, -0.744720, 0, 1.0};
Point(90) = {-0.095363, -0.745205, 0, 1.0};
Point(91) = {-0.091410, -0.745741, 0, 1.0};
Point(92) = {-0.087164, -0.746316, 0, 1.0};
Point(93) = {-0.082664, -0.746917, 0, 1.0};
Point(94) = {-0.077955, -0.747523, 0, 1.0};
Point(95) = {-0.073075, -0.748101, 0, 1.0};
Point(96) = {-0.068041, -0.748626, 0, 1.0};
Point(97) = {-0.062884, -0.749092, 0, 1.0};
Point(98) = {-0.057632, -0.749473, 0, 1.0};
Point(99) = {-0.052299, -0.749755, 0, 1.0};
Point(100) = {-0.046923, -0.749937, 0, 1.0};
Point(101) = {-0.041520, -0.750000, 0, 1.0};
Point(102) = {-0.036102, -0.749947, 0, 1.0};
Point(103) = {-0.030706, -0.749773, 0, 1.0};
Point(104) = {-0.025351, -0.749475, 0, 1.0};
Point(105) = {-0.020057, -0.749066, 0, 1.0};
Point(106) = {-0.014854, -0.748543, 0, 1.0};
Point(107) = {-0.009763, -0.747915, 0, 1.0};
Point(108) = {-0.004811, -0.747193, 0, 1.0};
Point(109) = {-0.000025, -0.746383, 0, 1.0};
Point(110) = {0.004569, -0.745495, 0, 1.0};
Point(111) = {0.008943, -0.744538, 0, 1.0};
Point(112) = {0.013076, -0.743520, 0, 1.0};
Point(113) = {0.016942, -0.742451, 0, 1.0};
Point(114) = {0.020523, -0.741340, 0, 1.0};
Point(115) = {0.023803, -0.740196, 0, 1.0};
Point(116) = {0.026758, -0.739034, 0, 1.0};
Point(117) = {0.029378, -0.737863, 0, 1.0};
Point(118) = {0.031652, -0.736698, 0, 1.0};
Point(119) = {0.033566, -0.735553, 0, 1.0};
Point(120) = {0.035110, -0.734443, 0, 1.0};
Point(121) = {0.036272, -0.733393, 0, 1.0};
Point(122) = {0.037043, -0.732401, 0, 1.0};
Point(123) = {0.037443, -0.731491, 0, 1.0};
Point(124) = {0.037412, -0.730767, 0, 1.0};
Point(125) = {0.036881, -0.730154, 0, 1.0};
Point(126) = {0.035904, -0.729560, 0, 1.0};
Point(127) = {0.034530, -0.729074, 0, 1.0};
Point(128) = {0.032714, -0.728724, 0, 1.0};
Point(129) = {0.030435, -0.728486, 0, 1.0};
Point(130) = {0.027717, -0.728330, 0, 1.0};
Point(131) = {0.024581, -0.728253, 0, 1.0};
Point(132) = {0.021051, -0.728251, 0, 1.0};
Point(133) = {0.017148, -0.728320, 0, 1.0};
Point(134) = {0.012901, -0.728455, 0, 1.0};
Point(135) = {0.008341, -0.728652, 0, 1.0};
Point(136) = {0.003502, -0.728911, 0, 1.0};
Point(137) = {-0.001573, -0.729233, 0, 1.0};
Point(138) = {-0.006844, -0.729630, 0, 1.0};
Point(139) = {-0.012287, -0.730144, 0, 1.0};
Point(140) = {-0.017925, -0.730777, 0, 1.0};
Point(141) = {-0.023772, -0.731482, 0, 1.0};
Point(142) = {-0.029772, -0.732186, 0, 1.0};
Point(143) = {-0.035841, -0.732871, 0, 1.0};
Point(144) = {-0.041924, -0.733558, 0, 1.0};
Point(145) = {-0.047985, -0.734245, 0, 1.0};
Point(146) = {-0.053985, -0.734932, 0, 1.0};
Point(147) = {-0.059886, -0.735606, 0, 1.0};
Point(148) = {-0.065646, -0.736263, 0, 1.0};
Point(149) = {-0.071224, -0.736898, 0, 1.0};
Point(150) = {-0.076581, -0.737506, 0, 1.0};
Point(151) = {-0.081679, -0.738084, 0, 1.0};
Point(152) = {-0.086477, -0.738636, 0, 1.0};
Point(153) = {-0.090956, -0.739162, 0, 1.0};
Point(154) = {-0.095095, -0.739648, 0, 1.0};
Point(155) = {-0.098855, -0.740078, 0, 1.0};
Point(156) = {-0.102197, -0.740449, 0, 1.0};
Point(157) = {-0.105085, -0.740765, 0, 1.0};
Point(158) = {-0.107495, -0.741043, 0, 1.0};
Point(159) = {-0.109434, -0.741289, 0, 1.0};
Point(160) = {-0.110893, -0.741466, 0, 1.0};
Point(161) = {-0.111817, -0.741548, 0, 1.0};
Point(162) = {-0.112136, -0.741561, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074683, 0.745371, 0, 1.0};
Point(2) = {0.074471, 0.745382, 0, 1.0};
Point(3) = {0.073862, 0.745441, 0, 1.0};
Point(4) = {0.072897, 0.745564, 0, 1.0};
Point(5) = {0.071615, 0.745740, 0, 1.0};
Point(6) = {0.070029, 0.745950, 0, 1.0};
Point(7) = {0.068146, 0.746195, 0, 1.0};
Point(8) = {0.065985, 0.746480, 0, 1.0};
Point(9) = {0.063575, 0.746804, 0, 1.0};
Point(10) = {0.060940, 0.747161, 0, 1.0};
Point(11) = {0.058110, 0.747544, 0, 1.0};
Point(12) = {0.055109, 0.747945, 0, 1.0};
Point(13) = {0.051970, 0.748349, 0, 1.0};
Point(14) = {0.048716, 0.748734, 0, 1.0};
Point(15) = {0.045361, 0.749084, 0, 1.0};
Point(16) = {0.041923, 0.749395, 0, 1.0};
Point(17) = {0.038421, 0.749648, 0, 1.0};
Point(18) = {0.034866, 0.749837, 0, 1.0};
Point(19) = {0.031282, 0.749958, 0, 1.0};
Point(20) = {0.027680, 0.750000, 0, 1.0};
Point(21) = {0.024068, 0.749965, 0, 1.0};
Point(22) = {0.020471, 0.749848, 0, 1.0};
Point(23) = {0.016901, 0.749650, 0, 1.0};
Point(24) = {0.013371, 0.749377, 0, 1.0};
Point(25) = {0.009903, 0.749029, 0, 1.0};
Point(26) = {0.006508, 0.748610, 0, 1.0};
Point(27) = {0.003207, 0.748129, 0, 1.0};
Point(28) = {0.000017, 0.747588, 0, 1.0};
Point(29) = {-0.003046, 0.746997, 0, 1.0};
Point(30) = {-0.005962, 0.746359, 0, 1.0};
Point(31) = {-0.008717, 0.745680, 0, 1.0};
Point(32) = {-0.011295, 0.744967, 0, 1.0};
Point(33) = {-0.013682, 0.744226, 0, 1.0};
Point(34) = {-0.015868, 0.743464, 0, 1.0};
Point(35) = {-0.017839, 0.742689, 0, 1.0};
Point(36) = {-0.019585, 0.741909, 0, 1.0};
Point(37) = {-0.021102, 0.741132, 0, 1.0};
Point(38) = {-0.022377, 0.740368, 0, 1.0};
Point(39) = {-0.023407, 0.739628, 0, 1.0};
Point(40) = {-0.024181, 0.738928, 0, 1.0};
Point(41) = {-0.024695, 0.738267, 0, 1.0};
Point(42) = {-0.024962, 0.737661, 0, 1.0};
Point(43) = {-0.024942, 0.737178, 0, 1.0};
Point(44) = {-0.024587, 0.736769, 0, 1.0};
Point(45) = {-0.023936, 0.736374, 0, 1.0};
Point(46) = {-0.023020, 0.736049, 0, 1.0};
Point(47) = {-0.021809, 0.735816, 0, 1.0};
Point(48) = {-0.020290, 0.735657, 0, 1.0};
Point(49) = {-0.018478, 0.735554, 0, 1.0};
Point(50) = {-0.016387, 0.735502, 0, 1.0};
Point(51) = {-0.014034, 0.735501, 0, 1.0};
Point(52) = {-0.011432, 0.735546, 0, 1.0};
Point(53) = {-0.008601, 0.735636, 0, 1.0};
Point(54) = {-0.005561, 0.735768, 0, 1.0};
Point(55) = {-0.002335, 0.735941, 0, 1.0};
Point(56) = {0.001049, 0.736156, 0, 1.0};
Point(57) = {0.004563, 0.736420, 0, 1.0};
Point(58) = {0.008191, 0.736762, 0, 1.0};
Point(59) = {0.011950, 0.737185, 0, 1.0};
Point(60) = {0.015848, 0.737655, 0, 1.0};
Point(61) = {0.019848, 0.738124, 0, 1.0};
Point(62) = {0.023894, 0.738581, 0, 1.0};
Point(63) = {0.027949, 0.739038, 0, 1.0};
Point(64) = {0.031990, 0.739497, 0, 1.0};
Point(65) = {0.035990, 0.739954, 0, 1.0};
Point(66) = {0.039924, 0.740404, 0, 1.0};
Point(67) = {0.043764, 0.740842, 0, 1.0};
Point(68) = {0.047482, 0.741266, 0, 1.0};
Point(69) = {0.051054, 0.741671, 0, 1.0};
Point(70) = {0.054453, 0.742056, 0, 1.0};
Point(71) = {0.057651, 0.742424, 0, 1.0};
Point(72) = {0.060637, 0.742775, 0, 1.0};
Point(73) = {0.063397, 0.743099, 0, 1.0};
Point(74) = {0.065904, 0.743385, 0, 1.0};
Point(75) = {0.068131, 0.743632, 0, 1.0};
Point(76) = {0.070057, 0.743843, 0, 1.0};
Point(77) = {0.071664, 0.744029, 0, 1.0};
Point(78) = {0.072956, 0.744193, 0, 1.0};
Point(79) = {0.073929, 0.744311, 0, 1.0};
Point(80) = {0.074544, 0.744365, 0, 1.0};
Point(81) = {0.074757, 0.744374, 0, 1.0};
Point(82) = {-0.074683, -0.745371, 0, 1.0};
Point(83) = {-0.074471, -0.745382, 0, 1.0};
Point(84) = {-0.073862, -0.745441, 0, 1.0};
Point(85) = {-0.072897, -0.745564, 0, 1.0};
Point(86) = {-0.071615, -0.745740, 0, 1.0};
Point(87) = {-0.070029, -0.745950, 0, 1.0};
Point(88) = {-0.068146, -0.746195, 0, 1.0};
Point(89) = {-0.065985, -0.746480, 0, 1.0};
Point(90) = {-0.063575, -0.746804, 0, 1.0};
Point(91) = {-0.060940, -0.747161, 0, 1.0};
Point(92) = {-0.058110, -0.747544, 0, 1.0};
Point(93) = {-0.055109, -0.747945, 0, 1.0};
Point(94) = {-0.051970, -0.748349, 0, 1.0};
Point(95) = {-0.048716, -0.748734, 0, 1.0};
Point(96) = {-0.045361, -0.749084, 0, 1.0};
Point(97) = {-0.041923, -0.749395, 0, 1.0};
Point(98) = {-0.038421, -0.749648, 0, 1.0};
Point(99) = {-0.034866, -0.749837, 0, 1.0};
Point(100) = {-0.031282, -0.749958, 0, 1.0};
Point(101) = {-0.027680, -0.750000, 0, 1.0};
Point(102) = {-0.024068, -0.749965, 0, 1.0};
Point(103) = {-0.020471, -0.749848, 0, 1.0};
Point(104) = {-0.016901, -0.749650, 0, 1.0};
Point(105) = {-0.013371, -0.749377, 0, 1.0};
Point(106) = {-0.009903, -0.749029, 0, 1.0};
Point(107) = {-0.006508, -0.748610, 0, 1.0};
Point(108) = {-0.003207, -0.748129, 0, 1.0};
Point(109) = {-0.000017, -0.747588, 0, 1.0};
Point(110) = {0.003046, -0.746997, 0, 1.0};
Point(111) = {0.005962, -0.746359, 0, 1.0};
Point(112) = {0.008717, -0.745680, 0, 1.0};
Point(113) = {0.011295, -0.744967, 0, 1.0};
Point(114) = {0.013682, -0.744226, 0, 1.0};
Point(115) = {0.015868, -0.743464, 0, 1.0};
Point(116) = {0.017839, -0.742689, 0, 1.0};
Point(117) = {0.019585, -0.741909, 0, 1.0};
Point(118) = {0.021102, -0.741132, 0, 1.0};
Point(119) = {0.022377, -0.740368, 0, 1.0};
Point(120) = {0.023407, -0.739628, 0, 1.0};
Point(121) = {0.024181, -0.738928, 0, 1.0};
Point(122) = {0.024695, -0.738267, 0, 1.0};
Point(123) = {0.024962, -0.737661, 0, 1.0};
Point(124) = {0.024942, -0.737178, 0, 1.0};
Point(125) = {0.024587, -0.736769, 0, 1.0};
Point(126) = {0.023936, -0.736374, 0, 1.0};
Point(127) = {0.023020, -0.736049, 0, 1.0};
Point(128) = {0.021809, -0.735816, 0, 1.0};
Point(129) = {0.020290, -0.735657, 0, 1.0};
Point(130) = {0.018478, -0.735554, 0, 1.0};
Point(131) = {0.016387, -0.735502, 0, 1.0};
Point(132) = {0.014034, -0.735501, 0, 1.0};
Point(133) = {0.011432, -0.735546, 0, 1.0};
Point(134) = {0.008601, -0.735636, 0, 1.0};
Point(135) = {0.005561, -0.735768, 0, 1.0};
Point(136) = {0.002335, -0.735941, 0, 1.0};
Point(137) = {-0.001049, -0.736156, 0, 1.0};
Point(138) = {-0.004563, -0.736420, 0, 1.0};
Point(139) = {-0.008191, -0.736762, 0, 1.0};
Point(140) = {-0.011950, -0.737185, 0, 1.0};
Point(141) = {-0.015848, -0.737655, 0, 1.0};
Point(142) = {-0.019848, -0.738124, 0, 1.0};
Point(143) = {-0.023894, -0.738581, 0, 1.0};
Point(144) = {-0.027949, -0.739038, 0, 1.0};
Point(145) = {-0.031990, -0.739497, 0, 1.0};
Point(146) = {-0.035990, -0.739954, 0, 1.0};
Point(147) = {-0.039924, -0.740404, 0, 1.0};
Point(148) = {-0.043764, -0.740842, 0, 1.0};
Point(149) = {-0.047482, -0.741266, 0, 1.0};
Point(150) = {-0.051054, -0.741671, 0, 1.0};
Point(151) = {-0.054453, -0.742056, 0, 1.0};
Point(152) = {-0.057651, -0.742424, 0, 1.0};
Point(153) = {-0.060637, -0.742775, 0, 1.0};
Point(154) = {-0.063397, -0.743099, 0, 1.0};
Point(155) = {-0.065904, -0.743385, 0, 1.0};
Point(156) = {-0.068131, -0.743632, 0, 1.0};
Point(157) = {-0.070057, -0.743843, 0, 1.0};
Point(158) = {-0.071664, -0.744029, 0, 1.0};
Point(159) = {-0.072956, -0.744193, 0, 1.0};
Point(160) = {-0.073929, -0.744311, 0, 1.0};
Point(161) = {-0.074544, -0.744365, 0, 1.0};
Point(162) = {-0.074757, -0.744374, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111979, 0.743060, 0, 1.0};
Point(2) = {0.111662, 0.743077, 0, 1.0};
Point(3) = {0.110748, 0.743164, 0, 1.0};
Point(4) = {0.109302, 0.743349, 0, 1.0};
Point(5) = {0.107380, 0.743613, 0, 1.0};
Point(6) = {0.105002, 0.743927, 0, 1.0};
Point(7) = {0.102177, 0.744294, 0, 1.0};
Point(8) = {0.098938, 0.744722, 0, 1.0};
Point(9) = {0.095325, 0.745207, 0, 1.0};
Point(10) = {0.091374, 0.745743, 0, 1.0};
Point(11) = {0.087130, 0.746317, 0, 1.0};
Point(12) = {0.082631, 0.746918, 0, 1.0};
Point(13) = {0.077924, 0.747525, 0, 1.0};
Point(14) = {0.073046, 0.748101, 0, 1.0};
Point(15) = {0.068014, 0.748626, 0, 1.0};
Point(16) = {0.062860, 0.749092, 0, 1.0};
Point(17) = {0.057609, 0.749473, 0, 1.0};
Point(18) = {0.052279, 0.749756, 0, 1.0};
Point(19) = {0.046905, 0.749937, 0, 1.0};
Point(20) = {0.041504, 0.750000, 0, 1.0};
Point(21) = {0.036089, 0.749947, 0, 1.0};
Point(22) = {0.030695, 0.749773, 0, 1.0};
Point(23) = {0.025342, 0.749475, 0, 1.0};
Point(24) = {0.020050, 0.749066, 0, 1.0};
Point(25) = {0.014849, 0.748544, 0, 1.0};
Point(26) = {0.009760, 0.747916, 0, 1.0};
Point(27) = {0.004811, 0.747194, 0, 1.0};
Point(28) = {0.000027, 0.746384, 0, 1.0};
Point(29) = {-0.004565, 0.745497, 0, 1.0};
Point(30) = {-0.008938, 0.744541, 0, 1.0};
Point(31) = {-0.013068, 0.743523, 0, 1.0};
Point(32) = {-0.016934, 0.742454, 0, 1.0};
Point(33) = {-0.020513, 0.741343, 0, 1.0};
Point(34) = {-0.023791, 0.740200, 0, 1.0};
Point(35) = {-0.026745, 0.739039, 0, 1.0};
Point(36) = {-0.029364, 0.737868, 0, 1.0};
Point(37) = {-0.031637, 0.736703, 0, 1.0};
Point(38) = {-0.033550, 0.735559, 0, 1.0};
Point(39) = {-0.035093, 0.734449, 0, 1.0};
Point(40) = {-0.036255, 0.733400, 0, 1.0};
Point(41) = {-0.037026, 0.732408, 0, 1.0};
Point(42) = {-0.037425, 0.731499, 0, 1.0};
Point(43) = {-0.037395, 0.730775, 0, 1.0};
Point(44) = {-0.036863, 0.730162, 0, 1.0};
Point(45) = {-0.035887, 0.729569, 0, 1.0};
Point(46) = {-0.034514, 0.729083, 0, 1.0};
Point(47) = {-0.032698, 0.728733, 0, 1.0};
Point(48) = {-0.030420, 0.728495, 0, 1.0};
Point(49) = {-0.027704, 0.728339, 0, 1.0};
Point(50) = {-0.024569, 0.728262, 0, 1.0};
Point(51) = {-0.021040, 0.728260, 0, 1.0};
Point(52) = {-0.017139, 0.728329, 0, 1.0};
Point(53) = {-0.012894, 0.728464, 0, 1.0};
Point(54) = {-0.008336, 0.728661, 0, 1.0};
Point(55) = {-0.003499, 0.728920, 0, 1.0};
Point(56) = {0.001574, 0.729242, 0, 1.0};
Point(57) = {0.006843, 0.729639, 0, 1.0};
Point(58) = {0.012283, 0.730152, 0, 1.0};
Point(59) = {0.017919, 0.730785, 0, 1.0};
Point(60) = {0.023764, 0.731490, 0, 1.0};
Point(61) = {0.029761, 0.732194, 0, 1.0};
Point(62) = {0.035828, 0.732879, 0, 1.0};
Point(63) = {0.041908, 0.733565, 0, 1.0};
Point(64) = {0.047967, 0.734252, 0, 1.0};
Point(65) = {0.053965, 0.734938, 0, 1.0};
Point(66) = {0.059862, 0.735612, 0, 1.0};
Point(67) = {0.065620, 0.736269, 0, 1.0};
Point(68) = {0.071196, 0.736904, 0, 1.0};
Point(69) = {0.076551, 0.737511, 0, 1.0};
Point(70) = {0.081647, 0.738089, 0, 1.0};
Point(71) = {0.086442, 0.738641, 0, 1.0};
Point(72) = {0.090920, 0.739166, 0, 1.0};
Point(73) = {0.095057, 0.739653, 0, 1.0};
Point(74) = {0.098816, 0.740082, 0, 1.0};
Point(75) = {0.102156, 0.740453, 0, 1.0};
Point(76) = {0.105043, 0.740768, 0, 1.0};
Point(77) = {0.107452, 0.741047, 0, 1.0};
Point(78) = {0.109390, 0.741293, 0, 1.0};
Point(79) = {0.110848, 0.741470, 0, 1.0};
Point(80) = {0.111771, 0.741551, 0, 1.0};
Point(81) = {0.112091, 0.741565, 0, 1.0};
Point(82) = {-0.111979, -0.743060, 0, 1.0};
Point(83) = {-0.111662, -0.743077, 0, 1.0};
Point(84) = {-0.110748, -0.743164, 0, 1.0};
Point(85) = {-0.109302, -0.743349, 0, 1.0};
Point(86) = {-0.107380, -0.743613, 0, 1.0};
Point(87) = {-0.105002, -0.743927, 0, 1.0};
Point(88) = {-0.102177, -0.744294, 0, 1.0};
Point(89) = {-0.098938, -0.744722, 0, 1.0};
Point(90) = {-0.095325, -0.745207, 0, 1.0};
Point(91) = {-0.091374, -0.745743, 0, 1.0};
Point(92) = {-0.087130, -0.746317, 0, 1.0};
Point(93) = {-0.082631, -0.746918, 0, 1.0};
Point(94) = {-0.077924, -0.747525, 0, 1.0};
Point(95) = {-0.073046, -0.748101, 0, 1.0};
Point(96) = {-0.068014, -0.748626, 0, 1.0};
Point(97) = {-0.062860, -0.749092, 0, 1.0};
Point(98) = {-0.057609, -0.749473, 0, 1.0};
Point(99) = {-0.052279, -0.749756, 0, 1.0};
Point(100) = {-0.046905, -0.749937, 0, 1.0};
Point(101) = {-0.041504, -0.750000, 0, 1.0};
Point(102) = {-0.036089, -0.749947, 0, 1.0};
Point(103) = {-0.030695, -0.749773, 0, 1.0};
Point(104) = {-0.025342, -0.749475, 0, 1.0};
Point(105) = {-0.020050, -0.749066, 0, 1.0};
Point(106) = {-0.014849, -0.748544, 0, 1.0};
Point(107) = {-0.009760, -0.747916, 0, 1.0};
Point(108) = {-0.004811, -0.747194, 0, 1.0};
Point(109) = {-0.000027, -0.746384, 0, 1.0};
Point(110) = {0.004565, -0.745497, 0, 1.0};
Point(111) = {0.008938, -0.744541, 0, 1.0};
Point(112) = {0.013068, -0.743523, 0, 1.0};
Point(113) = {0.016934, -0.742454, 0, 1.0};
Point(114) = {0.020513, -0.741343, 0, 1.0};
Point(115) = {0.023791, -0.740200, 0, 1.0};
Point(116) = {0.026745, -0.739039, 0, 1.0};
Point(117) = {0.029364, -0.737868, 0, 1.0};
Point(118) = {0.031637, -0.736703, 0, 1.0};
Point(119) = {0.033550, -0.735559, 0, 1.0};
Point(120) = {0.035093, -0.734449, 0, 1.0};
Point(121) = {0.036255, -0.733400, 0, 1.0};
Point(122) = {0.037026, -0.732408, 0, 1.0};
Point(123) = {0.037425, -0.731499, 0, 1.0};
Point(124) = {0.037395, -0.730775, 0, 1.0};
Point(125) = {0.036863, -0.730162, 0, 1.0};
Point(126) = {0.035887, -0.729569, 0, 1.0};
Point(127) = {0.034514, -0.729083, 0, 1.0};
Point(128) = {0.032698, -0.728733, 0, 1.0};
Point(129) = {0.030420, -0.728495, 0, 1.0};
Point(130) = {0.027704, -0.728339, 0, 1.0};
Point(131) = {0.024569, -0.728262, 0, 1.0};
Point(132) = {0.021040, -0.728260, 0, 1.0};
Point(133) = {0.017139, -0.728329, 0, 1.0};
Point(134) = {0.012894, -0.728464, 0, 1.0};
Point(135) = {0.008336, -0.728661, 0, 1.0};
Point(136) = {0.003499, -0.728920, 0, 1.0};
Point(137) = {-0.001574, -0.729242, 0, 1.0};
Point(138) = {-0.006843, -0.729639, 0, 1.0};
Point(139) = {-0.012283, -0.730152, 0, 1.0};
Point(140) = {-0.017919, -0.730785, 0, 1.0};
Point(141) = {-0.023764, -0.731490, 0, 1.0};
Point(142) = {-0.029761, -0.732194, 0, 1.0};
Point(143) = {-0.035828, -0.732879, 0, 1.0};
Point(144) = {-0.041908, -0.733565, 0, 1.0};
Point(145) = {-0.047967, -0.734252, 0, 1.0};
Point(146) = {-0.053965, -0.734938, 0, 1.0};
Point(147) = {-0.059862, -0.735612, 0, 1.0};
Point(148) = {-0.065620, -0.736269, 0, 1.0};
Point(149) = {-0.071196, -0.736904, 0, 1.0};
Point(150) = {-0.076551, -0.737511, 0, 1.0};
Point(151) = {-0.081647, -0.738089, 0, 1.0};
Point(152) = {-0.086442, -0.738641, 0, 1.0};
Point(153) = {-0.090920, -0.739166, 0, 1.0};
Point(154) = {-0.095057, -0.739653, 0, 1.0};
Point(155) = {-0.098816, -0.740082, 0, 1.0};
Point(156) = {-0.102156, -0.740453, 0, 1.0};
Point(157) = {-0.105043, -0.740768, 0, 1.0};
Point(158) = {-0.107452, -0.741047, 0, 1.0};
Point(159) = {-0.109390, -0.741293, 0, 1.0};
Point(160) = {-0.110848, -0.741470, 0, 1.0};
Point(161) = {-0.111771, -0.741551, 0, 1.0};
Point(162) = {-0.112091, -0.741565, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074924, 0.745051, 0, 1.0};
Point(2) = {0.074524, 0.745082, 0, 1.0};
Point(3) = {0.073389, 0.745240, 0, 1.0};
Point(4) = {0.071643, 0.745576, 0, 1.0};
Point(5) = {0.069396, 0.746064, 0, 1.0};
Point(6) = {0.066728, 0.746660, 0, 1.0};
Point(7) = {0.063700, 0.747307, 0, 1.0};
Point(8) = {0.060361, 0.747941, 0, 1.0};
Point(9) = {0.056720, 0.748490, 0, 1.0};
Point(10) = {0.052756, 0.748935, 0, 1.0};
Point(11) = {0.048487, 0.749299, 0, 1.0};
Point(12) = {0.043964, 0.749588, 0, 1.0};
Point(13) = {0.039234, 0.749801, 0, 1.0};
Point(14) = {0.034350, 0.749940, 0, 1.0};
Point(15) = {0.029366, 0.750000, 0, 1.0};
Point(16) = {0.024335, 0.749981, 0, 1.0};
Point(17) = {0.019313, 0.749880, 0, 1.0};
Point(18) = {0.014353, 0.749698, 0, 1.0};
Point(19) = {0.009507, 0.749433, 0, 1.0};
Point(20) = {0.004825, 0.749087, 0, 1.0};
Point(21) = {0.000356, 0.748661, 0, 1.0};
Point(22) = {-0.003854, 0.748159, 0, 1.0};
Point(23) = {-0.007765, 0.747583, 0, 1.0};
Point(24) = {-0.011340, 0.746940, 0, 1.0};
Point(25) = {-0.014546, 0.746238, 0, 1.0};
Point(26) = {-0.017357, 0.745486, 0, 1.0};
Point(27) = {-0.019750, 0.744696, 0, 1.0};
Point(28) = {-0.021708, 0.743887, 0, 1.0};
Point(29) = {-0.023219, 0.743077, 0, 1.0};
Point(30) = {-0.024276, 0.742298, 0, 1.0};
Point(31) = {-0.024832, 0.741651, 0, 1.0};
Point(32) = {-0.024930, 0.741455, 0, 1.0};
Point(33) = {-0.024987, 0.741276, 0, 1.0};
Point(34) = {-0.025000, 0.741168, 0, 1.0};
Point(35) = {-0.024988, 0.741075, 0, 1.0};
Point(36) = {-0.024942, 0.740989, 0, 1.0};
Point(37) = {-0.024863, 0.740901, 0, 1.0};
Point(38) = {-0.024696, 0.740767, 0, 1.0};
Point(39) = {-0.024478, 0.740628, 0, 1.0};
Point(40) = {-0.023272, 0.740135, 0, 1.0};
Point(41) = {-0.021623, 0.739716, 0, 1.0};
Point(42) = {-0.019473, 0.739353, 0, 1.0};
Point(43) = {-0.016837, 0.739052, 0, 1.0};
Point(44) = {-0.013740, 0.738817, 0, 1.0};
Point(45) = {-0.010212, 0.738641, 0, 1.0};
Point(46) = {-0.006296, 0.738523, 0, 1.0};
Point(47) = {-0.002038, 0.738463, 0, 1.0};
Point(48) = {0.002513, 0.738463, 0, 1.0};
Point(49) = {0.007307, 0.738525, 0, 1.0};
Point(50) = {0.012298, 0.738647, 0, 1.0};
Point(51) = {0.017429, 0.738824, 0, 1.0};
Point(52) = {0.022643, 0.739049, 0, 1.0};
Point(53) = {0.027879, 0.739320, 0, 1.0};
Point(54) = {0.033077, 0.739631, 0, 1.0};
Point(55) = {0.038177, 0.739983, 0, 1.0};
Point(56) = {0.043120, 0.740370, 0, 1.0};
Point(57) = {0.047849, 0.740794, 0, 1.0};
Point(58) = {0.052312, 0.741253, 0, 1.0};
Point(59) = {0.056455, 0.741757, 0, 1.0};
Point(60) = {0.060260, 0.742324, 0, 1.0};
Point(61) = {0.063730, 0.742921, 0, 1.0};
Point(62) = {0.066817, 0.743499, 0, 1.0};
Point(63) = {0.069481, 0.744045, 0, 1.0};
Point(64) = {0.071706, 0.744516, 0, 1.0};
Point(65) = {0.073427, 0.744848, 0, 1.0};
Point(66) = {0.074537, 0.745012, 0, 1.0};
Point(67) = {-0.074924, -0.745051, 0, 1.0};
Point(68) = {-0.074524, -0.745082, 0, 1.0};
Point(69) = {-0.073389, -0.745240, 0, 1.0};
Point(70) = {-0.071643, -0.745576, 0, 1.0};
Point(71) = {-0.069396, -0.746064, 0, 1.0};
Point(72) = {-0.066728, -0.746660, 0, 1.0};
Point(73) = {-0.063700, -0.747307, 0, 1.0};
Point(74) = {-0.060361, -0.747941, 0, 1.0};
Point(75) = {-0.056720, -0.748490, 0, 1.0};
Point(76) = {-0.052756, -0.748935, 0, 1.0};
Point(77) = {-0.048487, -0.749299, 0, 1.0};
Point(78) = {-0.043964, -0.749588, 0, 1.0};
Point(79) = {-0.039234, -0.749801, 0, 1.0};
Point(80) = {-0.034350, -0.749940, 0, 1.0};
Point(81) = {-0.029366, -0.750000, 0, 1.0};
Point(82) = {-0.024335, -0.749981, 0, 1.0};
Point(83) = {-0.019313, -0.749880, 0, 1.0};
Point(84) = {-0.014353, -0.749698, 0, 1.0};
Point(85) = {-0.009507, -0.749433, 0, 1.0};
Point(86) = {-0.004825, -0.749087, 0, 1.0};
Point(87) = {-0.000356, -0.748661, 0, 1.0};
Point(88) = {0.003854, -0.748159, 0, 1.0};
Point(89) = {0.007765, -0.747583, 0, 1.0};
Point(90) = {0.011340, -0.746940, 0, 1.0};
Point(91) = {0.014546, -0.746238, 0, 1.0};
Point(92) = {0.017357, -0.745486, 0, 1.0};
Point(93) = {0.019750, -0.744696, 0, 1.0};
Point(94) = {0.021708, -0.743887, 0, 1.0};
Point(95) = {0.023219, -0.743077, 0, 1.0};
Point(96) = {0.024276, -0.742298, 0, 1.0};
Point(97) = {0.024832, -0.741651, 0, 1.0};
Point(98) = {0.024930, -0.741455, 0, 1.0};
Point(99) = {0.024987, -0.741276, 0, 1.0};
Point(100) = {0.025000, -0.741168, 0, 1.0};
Point(101) = {0.024988, -0.741075, 0, 1.0};
Point(102) = {0.024942, -0.740989, 0, 1.0};
Point(103) = {0.024863, -0.740901, 0, 1.0};
Point(104) = {0.024696, -0.740767, 0, 1.0};
Point(105) = {0.024478, -0.740628, 0, 1.0};
Point(106) = {0.023272, -0.740135, 0, 1.0};
Point(107) = {0.021623, -0.739716, 0, 1.0};
Point(108) = {0.019473, -0.739353, 0, 1.0};
Point(109) = {0.016837, -0.739052, 0, 1.0};
Point(110) = {0.013740, -0.738817, 0, 1.0};
Point(111) = {0.010212, -0.738641, 0, 1.0};
Point(112) = {0.006296, -0.738523, 0, 1.0};
Point(113) = {0.002038, -0.738463, 0, 1.0};
Point(114) = {-0.002513, -0.738463, 0, 1.0};
Point(115) = {-0.007307, -0.738525, 0, 1.0};
Point(116) = {-0.012298, -0.738647, 0, 1.0};
Point(117) = {-0.017429, -0.738824, 0, 1.0};
Point(118) = {-0.022643, -0.739049, 0, 1.0};
Point(119) = {-0.027879, -0.739320, 0, 1.0};
Point(120) = {-0.033077, -0.739631, 0, 1.0};
Point(121) = {-0.038177, -0.739983, 0, 1.0};
Point(122) = {-0.043120, -0.740370, 0, 1.0};
Point(123) = {-0.047849, -0.740794, 0, 1.0};
Point(124) = {-0.052312, -0.741253, 0, 1.0};
Point(125) = {-0.056455, -0.741757, 0, 1.0};
Point(126) = {-0.060260, -0.742324, 0, 1.0};
Point(127) = {-0.063730, -0.742921, 0, 1.0};
Point(128) = {-0.066817, -0.743499, 0, 1.0};
Point(129) = {-0.069481, -0.744045, 0, 1.0};
Point(130) = {-0.071706, -0.744516, 0, 1.0};
Point(131) = {-0.073427, -0.744848, 0, 1.0};
Point(132) = {-0.074537, -0.745012, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
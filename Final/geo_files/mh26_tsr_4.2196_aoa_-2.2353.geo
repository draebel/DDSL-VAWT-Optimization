SetFactory("OpenCASCADE");

Point(1) = {0.112414, 0.742577, 0, 1.0};
Point(2) = {0.111815, 0.742624, 0, 1.0};
Point(3) = {0.110111, 0.742860, 0, 1.0};
Point(4) = {0.107492, 0.743363, 0, 1.0};
Point(5) = {0.104122, 0.744096, 0, 1.0};
Point(6) = {0.100121, 0.744990, 0, 1.0};
Point(7) = {0.095579, 0.745960, 0, 1.0};
Point(8) = {0.090570, 0.746912, 0, 1.0};
Point(9) = {0.085109, 0.747735, 0, 1.0};
Point(10) = {0.079162, 0.748403, 0, 1.0};
Point(11) = {0.072758, 0.748948, 0, 1.0};
Point(12) = {0.065974, 0.749383, 0, 1.0};
Point(13) = {0.058880, 0.749702, 0, 1.0};
Point(14) = {0.051553, 0.749910, 0, 1.0};
Point(15) = {0.044077, 0.750000, 0, 1.0};
Point(16) = {0.036532, 0.749971, 0, 1.0};
Point(17) = {0.028998, 0.749820, 0, 1.0};
Point(18) = {0.021558, 0.749547, 0, 1.0};
Point(19) = {0.014289, 0.749149, 0, 1.0};
Point(20) = {0.007266, 0.748631, 0, 1.0};
Point(21) = {0.000563, 0.747992, 0, 1.0};
Point(22) = {-0.005752, 0.747238, 0, 1.0};
Point(23) = {-0.011618, 0.746375, 0, 1.0};
Point(24) = {-0.016981, 0.745410, 0, 1.0};
Point(25) = {-0.021790, 0.744356, 0, 1.0};
Point(26) = {-0.026007, 0.743229, 0, 1.0};
Point(27) = {-0.029595, 0.742045, 0, 1.0};
Point(28) = {-0.032533, 0.740830, 0, 1.0};
Point(29) = {-0.034799, 0.739616, 0, 1.0};
Point(30) = {-0.036385, 0.738446, 0, 1.0};
Point(31) = {-0.037219, 0.737477, 0, 1.0};
Point(32) = {-0.037366, 0.737183, 0, 1.0};
Point(33) = {-0.037451, 0.736914, 0, 1.0};
Point(34) = {-0.037471, 0.736752, 0, 1.0};
Point(35) = {-0.037453, 0.736612, 0, 1.0};
Point(36) = {-0.037384, 0.736483, 0, 1.0};
Point(37) = {-0.037265, 0.736352, 0, 1.0};
Point(38) = {-0.037015, 0.736150, 0, 1.0};
Point(39) = {-0.036688, 0.735942, 0, 1.0};
Point(40) = {-0.034879, 0.735202, 0, 1.0};
Point(41) = {-0.032406, 0.734574, 0, 1.0};
Point(42) = {-0.029180, 0.734029, 0, 1.0};
Point(43) = {-0.025227, 0.733579, 0, 1.0};
Point(44) = {-0.020581, 0.733225, 0, 1.0};
Point(45) = {-0.015288, 0.732962, 0, 1.0};
Point(46) = {-0.009415, 0.732784, 0, 1.0};
Point(47) = {-0.003028, 0.732695, 0, 1.0};
Point(48) = {0.003798, 0.732694, 0, 1.0};
Point(49) = {0.010990, 0.732788, 0, 1.0};
Point(50) = {0.018475, 0.732971, 0, 1.0};
Point(51) = {0.026173, 0.733236, 0, 1.0};
Point(52) = {0.033993, 0.733574, 0, 1.0};
Point(53) = {0.041847, 0.733980, 0, 1.0};
Point(54) = {0.049644, 0.734447, 0, 1.0};
Point(55) = {0.057294, 0.734974, 0, 1.0};
Point(56) = {0.064708, 0.735555, 0, 1.0};
Point(57) = {0.071803, 0.736191, 0, 1.0};
Point(58) = {0.078497, 0.736879, 0, 1.0};
Point(59) = {0.084710, 0.737636, 0, 1.0};
Point(60) = {0.090418, 0.738487, 0, 1.0};
Point(61) = {0.095623, 0.739382, 0, 1.0};
Point(62) = {0.100253, 0.740248, 0, 1.0};
Point(63) = {0.104250, 0.741068, 0, 1.0};
Point(64) = {0.107587, 0.741774, 0, 1.0};
Point(65) = {0.110168, 0.742271, 0, 1.0};
Point(66) = {0.111834, 0.742518, 0, 1.0};
Point(67) = {-0.112414, -0.742577, 0, 1.0};
Point(68) = {-0.111815, -0.742624, 0, 1.0};
Point(69) = {-0.110111, -0.742860, 0, 1.0};
Point(70) = {-0.107492, -0.743363, 0, 1.0};
Point(71) = {-0.104122, -0.744096, 0, 1.0};
Point(72) = {-0.100121, -0.744990, 0, 1.0};
Point(73) = {-0.095579, -0.745960, 0, 1.0};
Point(74) = {-0.090570, -0.746912, 0, 1.0};
Point(75) = {-0.085109, -0.747735, 0, 1.0};
Point(76) = {-0.079162, -0.748403, 0, 1.0};
Point(77) = {-0.072758, -0.748948, 0, 1.0};
Point(78) = {-0.065974, -0.749383, 0, 1.0};
Point(79) = {-0.058880, -0.749702, 0, 1.0};
Point(80) = {-0.051553, -0.749910, 0, 1.0};
Point(81) = {-0.044077, -0.750000, 0, 1.0};
Point(82) = {-0.036532, -0.749971, 0, 1.0};
Point(83) = {-0.028998, -0.749820, 0, 1.0};
Point(84) = {-0.021558, -0.749547, 0, 1.0};
Point(85) = {-0.014289, -0.749149, 0, 1.0};
Point(86) = {-0.007266, -0.748631, 0, 1.0};
Point(87) = {-0.000563, -0.747992, 0, 1.0};
Point(88) = {0.005752, -0.747238, 0, 1.0};
Point(89) = {0.011618, -0.746375, 0, 1.0};
Point(90) = {0.016981, -0.745410, 0, 1.0};
Point(91) = {0.021790, -0.744356, 0, 1.0};
Point(92) = {0.026007, -0.743229, 0, 1.0};
Point(93) = {0.029595, -0.742045, 0, 1.0};
Point(94) = {0.032533, -0.740830, 0, 1.0};
Point(95) = {0.034799, -0.739616, 0, 1.0};
Point(96) = {0.036385, -0.738446, 0, 1.0};
Point(97) = {0.037219, -0.737477, 0, 1.0};
Point(98) = {0.037366, -0.737183, 0, 1.0};
Point(99) = {0.037451, -0.736914, 0, 1.0};
Point(100) = {0.037471, -0.736752, 0, 1.0};
Point(101) = {0.037453, -0.736612, 0, 1.0};
Point(102) = {0.037384, -0.736483, 0, 1.0};
Point(103) = {0.037265, -0.736352, 0, 1.0};
Point(104) = {0.037015, -0.736150, 0, 1.0};
Point(105) = {0.036688, -0.735942, 0, 1.0};
Point(106) = {0.034879, -0.735202, 0, 1.0};
Point(107) = {0.032406, -0.734574, 0, 1.0};
Point(108) = {0.029180, -0.734029, 0, 1.0};
Point(109) = {0.025227, -0.733579, 0, 1.0};
Point(110) = {0.020581, -0.733225, 0, 1.0};
Point(111) = {0.015288, -0.732962, 0, 1.0};
Point(112) = {0.009415, -0.732784, 0, 1.0};
Point(113) = {0.003028, -0.732695, 0, 1.0};
Point(114) = {-0.003798, -0.732694, 0, 1.0};
Point(115) = {-0.010990, -0.732788, 0, 1.0};
Point(116) = {-0.018475, -0.732971, 0, 1.0};
Point(117) = {-0.026173, -0.733236, 0, 1.0};
Point(118) = {-0.033993, -0.733574, 0, 1.0};
Point(119) = {-0.041847, -0.733980, 0, 1.0};
Point(120) = {-0.049644, -0.734447, 0, 1.0};
Point(121) = {-0.057294, -0.734974, 0, 1.0};
Point(122) = {-0.064708, -0.735555, 0, 1.0};
Point(123) = {-0.071803, -0.736191, 0, 1.0};
Point(124) = {-0.078497, -0.736879, 0, 1.0};
Point(125) = {-0.084710, -0.737636, 0, 1.0};
Point(126) = {-0.090418, -0.738487, 0, 1.0};
Point(127) = {-0.095623, -0.739382, 0, 1.0};
Point(128) = {-0.100253, -0.740248, 0, 1.0};
Point(129) = {-0.104250, -0.741068, 0, 1.0};
Point(130) = {-0.107587, -0.741774, 0, 1.0};
Point(131) = {-0.110168, -0.742271, 0, 1.0};
Point(132) = {-0.111834, -0.742518, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074614, 0.739362, 0, 1.0};
Point(2) = {0.071756, 0.740142, 0, 1.0};
Point(3) = {0.068081, 0.741043, 0, 1.0};
Point(4) = {0.064042, 0.741931, 0, 1.0};
Point(5) = {0.059661, 0.742800, 0, 1.0};
Point(6) = {0.054965, 0.743642, 0, 1.0};
Point(7) = {0.049980, 0.744454, 0, 1.0};
Point(8) = {0.044737, 0.745229, 0, 1.0};
Point(9) = {0.039268, 0.745959, 0, 1.0};
Point(10) = {0.033607, 0.746642, 0, 1.0};
Point(11) = {0.027787, 0.747270, 0, 1.0};
Point(12) = {0.021843, 0.747843, 0, 1.0};
Point(13) = {0.015816, 0.748359, 0, 1.0};
Point(14) = {0.009746, 0.748817, 0, 1.0};
Point(15) = {0.003681, 0.749221, 0, 1.0};
Point(16) = {-0.002325, 0.749559, 0, 1.0};
Point(17) = {-0.008220, 0.749817, 0, 1.0};
Point(18) = {-0.013963, 0.749973, 0, 1.0};
Point(19) = {-0.019517, 0.750000, 0, 1.0};
Point(20) = {-0.024858, 0.749880, 0, 1.0};
Point(21) = {-0.029952, 0.749608, 0, 1.0};
Point(22) = {-0.034769, 0.749125, 0, 1.0};
Point(23) = {-0.039334, 0.748410, 0, 1.0};
Point(24) = {-0.043673, 0.747488, 0, 1.0};
Point(25) = {-0.047782, 0.746373, 0, 1.0};
Point(26) = {-0.051662, 0.745102, 0, 1.0};
Point(27) = {-0.055290, 0.743702, 0, 1.0};
Point(28) = {-0.058649, 0.742200, 0, 1.0};
Point(29) = {-0.061723, 0.740608, 0, 1.0};
Point(30) = {-0.064501, 0.738952, 0, 1.0};
Point(31) = {-0.066967, 0.737253, 0, 1.0};
Point(32) = {-0.069111, 0.735532, 0, 1.0};
Point(33) = {-0.070919, 0.733819, 0, 1.0};
Point(34) = {-0.072366, 0.732118, 0, 1.0};
Point(35) = {-0.073469, 0.730429, 0, 1.0};
Point(36) = {-0.074259, 0.728791, 0, 1.0};
Point(37) = {-0.074740, 0.727247, 0, 1.0};
Point(38) = {-0.074919, 0.725849, 0, 1.0};
Point(39) = {-0.074800, 0.724653, 0, 1.0};
Point(40) = {-0.074401, 0.723763, 0, 1.0};
Point(41) = {-0.073526, 0.723305, 0, 1.0};
Point(42) = {-0.072010, 0.723175, 0, 1.0};
Point(43) = {-0.069918, 0.723218, 0, 1.0};
Point(44) = {-0.067292, 0.723424, 0, 1.0};
Point(45) = {-0.064165, 0.723778, 0, 1.0};
Point(46) = {-0.060569, 0.724274, 0, 1.0};
Point(47) = {-0.056543, 0.724912, 0, 1.0};
Point(48) = {-0.052129, 0.725706, 0, 1.0};
Point(49) = {-0.047322, 0.726723, 0, 1.0};
Point(50) = {-0.042061, 0.727960, 0, 1.0};
Point(51) = {-0.036334, 0.729329, 0, 1.0};
Point(52) = {-0.030170, 0.730778, 0, 1.0};
Point(53) = {-0.023612, 0.732261, 0, 1.0};
Point(54) = {-0.016700, 0.733730, 0, 1.0};
Point(55) = {-0.009491, 0.735144, 0, 1.0};
Point(56) = {-0.002042, 0.736461, 0, 1.0};
Point(57) = {0.005578, 0.737647, 0, 1.0};
Point(58) = {0.013299, 0.738665, 0, 1.0};
Point(59) = {0.021046, 0.739491, 0, 1.0};
Point(60) = {0.028736, 0.740102, 0, 1.0};
Point(61) = {0.036287, 0.740483, 0, 1.0};
Point(62) = {0.043615, 0.740626, 0, 1.0};
Point(63) = {0.050636, 0.740531, 0, 1.0};
Point(64) = {0.057266, 0.740201, 0, 1.0};
Point(65) = {0.063422, 0.739653, 0, 1.0};
Point(66) = {0.069029, 0.738910, 0, 1.0};
Point(67) = {0.074010, 0.738002, 0, 1.0};
Point(68) = {0.074684, 0.737875, 0, 1.0};
Point(69) = {-0.074614, -0.739362, 0, 1.0};
Point(70) = {-0.071756, -0.740142, 0, 1.0};
Point(71) = {-0.068081, -0.741043, 0, 1.0};
Point(72) = {-0.064042, -0.741931, 0, 1.0};
Point(73) = {-0.059661, -0.742800, 0, 1.0};
Point(74) = {-0.054965, -0.743642, 0, 1.0};
Point(75) = {-0.049980, -0.744454, 0, 1.0};
Point(76) = {-0.044737, -0.745229, 0, 1.0};
Point(77) = {-0.039268, -0.745959, 0, 1.0};
Point(78) = {-0.033607, -0.746642, 0, 1.0};
Point(79) = {-0.027787, -0.747270, 0, 1.0};
Point(80) = {-0.021843, -0.747843, 0, 1.0};
Point(81) = {-0.015816, -0.748359, 0, 1.0};
Point(82) = {-0.009746, -0.748817, 0, 1.0};
Point(83) = {-0.003681, -0.749221, 0, 1.0};
Point(84) = {0.002325, -0.749559, 0, 1.0};
Point(85) = {0.008220, -0.749817, 0, 1.0};
Point(86) = {0.013963, -0.749973, 0, 1.0};
Point(87) = {0.019517, -0.750000, 0, 1.0};
Point(88) = {0.024858, -0.749880, 0, 1.0};
Point(89) = {0.029952, -0.749608, 0, 1.0};
Point(90) = {0.034769, -0.749125, 0, 1.0};
Point(91) = {0.039334, -0.748410, 0, 1.0};
Point(92) = {0.043673, -0.747488, 0, 1.0};
Point(93) = {0.047782, -0.746373, 0, 1.0};
Point(94) = {0.051662, -0.745102, 0, 1.0};
Point(95) = {0.055290, -0.743702, 0, 1.0};
Point(96) = {0.058649, -0.742200, 0, 1.0};
Point(97) = {0.061723, -0.740608, 0, 1.0};
Point(98) = {0.064501, -0.738952, 0, 1.0};
Point(99) = {0.066967, -0.737253, 0, 1.0};
Point(100) = {0.069111, -0.735532, 0, 1.0};
Point(101) = {0.070919, -0.733819, 0, 1.0};
Point(102) = {0.072366, -0.732118, 0, 1.0};
Point(103) = {0.073469, -0.730429, 0, 1.0};
Point(104) = {0.074259, -0.728791, 0, 1.0};
Point(105) = {0.074740, -0.727247, 0, 1.0};
Point(106) = {0.074919, -0.725849, 0, 1.0};
Point(107) = {0.074800, -0.724653, 0, 1.0};
Point(108) = {0.074401, -0.723763, 0, 1.0};
Point(109) = {0.073526, -0.723305, 0, 1.0};
Point(110) = {0.072010, -0.723175, 0, 1.0};
Point(111) = {0.069918, -0.723218, 0, 1.0};
Point(112) = {0.067292, -0.723424, 0, 1.0};
Point(113) = {0.064165, -0.723778, 0, 1.0};
Point(114) = {0.060569, -0.724274, 0, 1.0};
Point(115) = {0.056543, -0.724912, 0, 1.0};
Point(116) = {0.052129, -0.725706, 0, 1.0};
Point(117) = {0.047322, -0.726723, 0, 1.0};
Point(118) = {0.042061, -0.727960, 0, 1.0};
Point(119) = {0.036334, -0.729329, 0, 1.0};
Point(120) = {0.030170, -0.730778, 0, 1.0};
Point(121) = {0.023612, -0.732261, 0, 1.0};
Point(122) = {0.016700, -0.733730, 0, 1.0};
Point(123) = {0.009491, -0.735144, 0, 1.0};
Point(124) = {0.002042, -0.736461, 0, 1.0};
Point(125) = {-0.005578, -0.737647, 0, 1.0};
Point(126) = {-0.013299, -0.738665, 0, 1.0};
Point(127) = {-0.021046, -0.739491, 0, 1.0};
Point(128) = {-0.028736, -0.740102, 0, 1.0};
Point(129) = {-0.036287, -0.740483, 0, 1.0};
Point(130) = {-0.043615, -0.740626, 0, 1.0};
Point(131) = {-0.050636, -0.740531, 0, 1.0};
Point(132) = {-0.057266, -0.740201, 0, 1.0};
Point(133) = {-0.063422, -0.739653, 0, 1.0};
Point(134) = {-0.069029, -0.738910, 0, 1.0};
Point(135) = {-0.074010, -0.738002, 0, 1.0};
Point(136) = {-0.074684, -0.737875, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:51};
Spline(3) = {51:68};
Spline(4) = {68,1};

// Lines: second blade (splines 5-8)
Spline(5) = {69:90};
Spline(6) = {90:119};
Spline(7) = {119:136};
Spline(8) = {136,69};

// Outer domain (points 20001-4 and lines)
Point(137) = {-13.50000000, -15.00000000, 0, 1.0};
Point(138) = {-13.50000000, 15.00000000, 0, 1.0};
Point(139) = {36.00000000, 15.00000000, 0, 1.0};
Point(140) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {137, 138};
Line(12) = {138, 139};
Line(13) = {139, 140};
Line(14) = {137, 140};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
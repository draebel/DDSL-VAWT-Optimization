SetFactory("OpenCASCADE");

Point(1) = {0.074993, 0.740122, 0, 1.0};
Point(2) = {0.074498, 0.740184, 0, 1.0};
Point(3) = {0.073049, 0.740396, 0, 1.0};
Point(4) = {0.070726, 0.740784, 0, 1.0};
Point(5) = {0.067621, 0.741337, 0, 1.0};
Point(6) = {0.063811, 0.742013, 0, 1.0};
Point(7) = {0.059350, 0.742763, 0, 1.0};
Point(8) = {0.054272, 0.743548, 0, 1.0};
Point(9) = {0.048624, 0.744367, 0, 1.0};
Point(10) = {0.042479, 0.745212, 0, 1.0};
Point(11) = {0.035918, 0.746063, 0, 1.0};
Point(12) = {0.029028, 0.746890, 0, 1.0};
Point(13) = {0.021882, 0.747660, 0, 1.0};
Point(14) = {0.014551, 0.748338, 0, 1.0};
Point(15) = {0.007088, 0.748902, 0, 1.0};
Point(16) = {-0.000445, 0.749345, 0, 1.0};
Point(17) = {-0.007982, 0.749671, 0, 1.0};
Point(18) = {-0.015446, 0.749888, 0, 1.0};
Point(19) = {-0.022751, 0.749997, 0, 1.0};
Point(20) = {-0.029819, 0.750000, 0, 1.0};
Point(21) = {-0.036569, 0.749894, 0, 1.0};
Point(22) = {-0.042928, 0.749680, 0, 1.0};
Point(23) = {-0.048821, 0.749352, 0, 1.0};
Point(24) = {-0.054180, 0.748900, 0, 1.0};
Point(25) = {-0.058967, 0.748295, 0, 1.0};
Point(26) = {-0.063183, 0.747545, 0, 1.0};
Point(27) = {-0.066810, 0.746696, 0, 1.0};
Point(28) = {-0.069806, 0.745785, 0, 1.0};
Point(29) = {-0.072135, 0.744841, 0, 1.0};
Point(30) = {-0.073780, 0.743886, 0, 1.0};
Point(31) = {-0.074737, 0.742958, 0, 1.0};
Point(32) = {-0.074992, 0.742175, 0, 1.0};
Point(33) = {-0.074415, 0.741513, 0, 1.0};
Point(34) = {-0.072968, 0.740869, 0, 1.0};
Point(35) = {-0.070754, 0.740283, 0, 1.0};
Point(36) = {-0.067774, 0.739790, 0, 1.0};
Point(37) = {-0.064025, 0.739383, 0, 1.0};
Point(38) = {-0.059546, 0.739035, 0, 1.0};
Point(39) = {-0.054392, 0.738743, 0, 1.0};
Point(40) = {-0.048625, 0.738500, 0, 1.0};
Point(41) = {-0.042307, 0.738309, 0, 1.0};
Point(42) = {-0.035513, 0.738161, 0, 1.0};
Point(43) = {-0.028319, 0.738059, 0, 1.0};
Point(44) = {-0.020806, 0.737998, 0, 1.0};
Point(45) = {-0.013060, 0.737976, 0, 1.0};
Point(46) = {-0.005170, 0.737992, 0, 1.0};
Point(47) = {0.002774, 0.738045, 0, 1.0};
Point(48) = {0.010680, 0.738134, 0, 1.0};
Point(49) = {0.018458, 0.738261, 0, 1.0};
Point(50) = {0.026021, 0.738435, 0, 1.0};
Point(51) = {0.033300, 0.738664, 0, 1.0};
Point(52) = {0.040232, 0.738937, 0, 1.0};
Point(53) = {0.046754, 0.739232, 0, 1.0};
Point(54) = {0.052794, 0.739522, 0, 1.0};
Point(55) = {0.058276, 0.739784, 0, 1.0};
Point(56) = {0.063119, 0.739989, 0, 1.0};
Point(57) = {0.067242, 0.740123, 0, 1.0};
Point(58) = {0.070562, 0.740182, 0, 1.0};
Point(59) = {0.073000, 0.740179, 0, 1.0};
Point(60) = {0.074492, 0.740142, 0, 1.0};
Point(61) = {0.074994, 0.740122, 0, 1.0};
Point(62) = {-0.074993, -0.740122, 0, 1.0};
Point(63) = {-0.074498, -0.740184, 0, 1.0};
Point(64) = {-0.073049, -0.740396, 0, 1.0};
Point(65) = {-0.070726, -0.740784, 0, 1.0};
Point(66) = {-0.067621, -0.741337, 0, 1.0};
Point(67) = {-0.063811, -0.742013, 0, 1.0};
Point(68) = {-0.059350, -0.742763, 0, 1.0};
Point(69) = {-0.054272, -0.743548, 0, 1.0};
Point(70) = {-0.048624, -0.744367, 0, 1.0};
Point(71) = {-0.042479, -0.745212, 0, 1.0};
Point(72) = {-0.035918, -0.746063, 0, 1.0};
Point(73) = {-0.029028, -0.746890, 0, 1.0};
Point(74) = {-0.021882, -0.747660, 0, 1.0};
Point(75) = {-0.014551, -0.748338, 0, 1.0};
Point(76) = {-0.007088, -0.748902, 0, 1.0};
Point(77) = {0.000445, -0.749345, 0, 1.0};
Point(78) = {0.007982, -0.749671, 0, 1.0};
Point(79) = {0.015446, -0.749888, 0, 1.0};
Point(80) = {0.022751, -0.749997, 0, 1.0};
Point(81) = {0.029819, -0.750000, 0, 1.0};
Point(82) = {0.036569, -0.749894, 0, 1.0};
Point(83) = {0.042928, -0.749680, 0, 1.0};
Point(84) = {0.048821, -0.749352, 0, 1.0};
Point(85) = {0.054180, -0.748900, 0, 1.0};
Point(86) = {0.058967, -0.748295, 0, 1.0};
Point(87) = {0.063183, -0.747545, 0, 1.0};
Point(88) = {0.066810, -0.746696, 0, 1.0};
Point(89) = {0.069806, -0.745785, 0, 1.0};
Point(90) = {0.072135, -0.744841, 0, 1.0};
Point(91) = {0.073780, -0.743886, 0, 1.0};
Point(92) = {0.074737, -0.742958, 0, 1.0};
Point(93) = {0.074992, -0.742175, 0, 1.0};
Point(94) = {0.074415, -0.741513, 0, 1.0};
Point(95) = {0.072968, -0.740869, 0, 1.0};
Point(96) = {0.070754, -0.740283, 0, 1.0};
Point(97) = {0.067774, -0.739790, 0, 1.0};
Point(98) = {0.064025, -0.739383, 0, 1.0};
Point(99) = {0.059546, -0.739035, 0, 1.0};
Point(100) = {0.054392, -0.738743, 0, 1.0};
Point(101) = {0.048625, -0.738500, 0, 1.0};
Point(102) = {0.042307, -0.738309, 0, 1.0};
Point(103) = {0.035513, -0.738161, 0, 1.0};
Point(104) = {0.028319, -0.738059, 0, 1.0};
Point(105) = {0.020806, -0.737998, 0, 1.0};
Point(106) = {0.013060, -0.737976, 0, 1.0};
Point(107) = {0.005170, -0.737992, 0, 1.0};
Point(108) = {-0.002774, -0.738045, 0, 1.0};
Point(109) = {-0.010680, -0.738134, 0, 1.0};
Point(110) = {-0.018458, -0.738261, 0, 1.0};
Point(111) = {-0.026021, -0.738435, 0, 1.0};
Point(112) = {-0.033300, -0.738664, 0, 1.0};
Point(113) = {-0.040232, -0.738937, 0, 1.0};
Point(114) = {-0.046754, -0.739232, 0, 1.0};
Point(115) = {-0.052794, -0.739522, 0, 1.0};
Point(116) = {-0.058276, -0.739784, 0, 1.0};
Point(117) = {-0.063119, -0.739989, 0, 1.0};
Point(118) = {-0.067242, -0.740123, 0, 1.0};
Point(119) = {-0.070562, -0.740182, 0, 1.0};
Point(120) = {-0.073000, -0.740179, 0, 1.0};
Point(121) = {-0.074492, -0.740142, 0, 1.0};
Point(122) = {-0.074994, -0.740122, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112484, 0.740123, 0, 1.0};
Point(2) = {0.111990, 0.740185, 0, 1.0};
Point(3) = {0.110541, 0.740397, 0, 1.0};
Point(4) = {0.108218, 0.740785, 0, 1.0};
Point(5) = {0.105113, 0.741338, 0, 1.0};
Point(6) = {0.101304, 0.742014, 0, 1.0};
Point(7) = {0.096843, 0.742763, 0, 1.0};
Point(8) = {0.091766, 0.743549, 0, 1.0};
Point(9) = {0.086118, 0.744367, 0, 1.0};
Point(10) = {0.079974, 0.745212, 0, 1.0};
Point(11) = {0.073414, 0.746063, 0, 1.0};
Point(12) = {0.066524, 0.746891, 0, 1.0};
Point(13) = {0.059379, 0.747660, 0, 1.0};
Point(14) = {0.052049, 0.748338, 0, 1.0};
Point(15) = {0.044587, 0.748902, 0, 1.0};
Point(16) = {0.037055, 0.749345, 0, 1.0};
Point(17) = {0.029518, 0.749671, 0, 1.0};
Point(18) = {0.022055, 0.749888, 0, 1.0};
Point(19) = {0.014751, 0.749997, 0, 1.0};
Point(20) = {0.007684, 0.750000, 0, 1.0};
Point(21) = {0.000934, 0.749894, 0, 1.0};
Point(22) = {-0.005423, 0.749680, 0, 1.0};
Point(23) = {-0.011316, 0.749352, 0, 1.0};
Point(24) = {-0.016674, 0.748900, 0, 1.0};
Point(25) = {-0.021461, 0.748295, 0, 1.0};
Point(26) = {-0.025677, 0.747546, 0, 1.0};
Point(27) = {-0.029303, 0.746696, 0, 1.0};
Point(28) = {-0.032299, 0.745786, 0, 1.0};
Point(29) = {-0.034628, 0.744842, 0, 1.0};
Point(30) = {-0.036272, 0.743887, 0, 1.0};
Point(31) = {-0.037230, 0.742959, 0, 1.0};
Point(32) = {-0.037484, 0.742176, 0, 1.0};
Point(33) = {-0.036907, 0.741514, 0, 1.0};
Point(34) = {-0.035460, 0.740870, 0, 1.0};
Point(35) = {-0.033247, 0.740284, 0, 1.0};
Point(36) = {-0.030268, 0.739791, 0, 1.0};
Point(37) = {-0.026519, 0.739384, 0, 1.0};
Point(38) = {-0.022040, 0.739036, 0, 1.0};
Point(39) = {-0.016886, 0.738744, 0, 1.0};
Point(40) = {-0.011120, 0.738502, 0, 1.0};
Point(41) = {-0.004803, 0.738310, 0, 1.0};
Point(42) = {0.001991, 0.738162, 0, 1.0};
Point(43) = {0.009184, 0.738061, 0, 1.0};
Point(44) = {0.016696, 0.738000, 0, 1.0};
Point(45) = {0.024441, 0.737977, 0, 1.0};
Point(46) = {0.032330, 0.737993, 0, 1.0};
Point(47) = {0.040273, 0.738046, 0, 1.0};
Point(48) = {0.048179, 0.738135, 0, 1.0};
Point(49) = {0.055956, 0.738263, 0, 1.0};
Point(50) = {0.063518, 0.738436, 0, 1.0};
Point(51) = {0.070795, 0.738665, 0, 1.0};
Point(52) = {0.077727, 0.738939, 0, 1.0};
Point(53) = {0.084248, 0.739233, 0, 1.0};
Point(54) = {0.090288, 0.739523, 0, 1.0};
Point(55) = {0.095769, 0.739785, 0, 1.0};
Point(56) = {0.100611, 0.739990, 0, 1.0};
Point(57) = {0.104734, 0.740124, 0, 1.0};
Point(58) = {0.108053, 0.740183, 0, 1.0};
Point(59) = {0.110491, 0.740180, 0, 1.0};
Point(60) = {0.111983, 0.740144, 0, 1.0};
Point(61) = {0.112485, 0.740123, 0, 1.0};
Point(62) = {-0.112484, -0.740123, 0, 1.0};
Point(63) = {-0.111990, -0.740185, 0, 1.0};
Point(64) = {-0.110541, -0.740397, 0, 1.0};
Point(65) = {-0.108218, -0.740785, 0, 1.0};
Point(66) = {-0.105113, -0.741338, 0, 1.0};
Point(67) = {-0.101304, -0.742014, 0, 1.0};
Point(68) = {-0.096843, -0.742763, 0, 1.0};
Point(69) = {-0.091766, -0.743549, 0, 1.0};
Point(70) = {-0.086118, -0.744367, 0, 1.0};
Point(71) = {-0.079974, -0.745212, 0, 1.0};
Point(72) = {-0.073414, -0.746063, 0, 1.0};
Point(73) = {-0.066524, -0.746891, 0, 1.0};
Point(74) = {-0.059379, -0.747660, 0, 1.0};
Point(75) = {-0.052049, -0.748338, 0, 1.0};
Point(76) = {-0.044587, -0.748902, 0, 1.0};
Point(77) = {-0.037055, -0.749345, 0, 1.0};
Point(78) = {-0.029518, -0.749671, 0, 1.0};
Point(79) = {-0.022055, -0.749888, 0, 1.0};
Point(80) = {-0.014751, -0.749997, 0, 1.0};
Point(81) = {-0.007684, -0.750000, 0, 1.0};
Point(82) = {-0.000934, -0.749894, 0, 1.0};
Point(83) = {0.005423, -0.749680, 0, 1.0};
Point(84) = {0.011316, -0.749352, 0, 1.0};
Point(85) = {0.016674, -0.748900, 0, 1.0};
Point(86) = {0.021461, -0.748295, 0, 1.0};
Point(87) = {0.025677, -0.747546, 0, 1.0};
Point(88) = {0.029303, -0.746696, 0, 1.0};
Point(89) = {0.032299, -0.745786, 0, 1.0};
Point(90) = {0.034628, -0.744842, 0, 1.0};
Point(91) = {0.036272, -0.743887, 0, 1.0};
Point(92) = {0.037230, -0.742959, 0, 1.0};
Point(93) = {0.037484, -0.742176, 0, 1.0};
Point(94) = {0.036907, -0.741514, 0, 1.0};
Point(95) = {0.035460, -0.740870, 0, 1.0};
Point(96) = {0.033247, -0.740284, 0, 1.0};
Point(97) = {0.030268, -0.739791, 0, 1.0};
Point(98) = {0.026519, -0.739384, 0, 1.0};
Point(99) = {0.022040, -0.739036, 0, 1.0};
Point(100) = {0.016886, -0.738744, 0, 1.0};
Point(101) = {0.011120, -0.738502, 0, 1.0};
Point(102) = {0.004803, -0.738310, 0, 1.0};
Point(103) = {-0.001991, -0.738162, 0, 1.0};
Point(104) = {-0.009184, -0.738061, 0, 1.0};
Point(105) = {-0.016696, -0.738000, 0, 1.0};
Point(106) = {-0.024441, -0.737977, 0, 1.0};
Point(107) = {-0.032330, -0.737993, 0, 1.0};
Point(108) = {-0.040273, -0.738046, 0, 1.0};
Point(109) = {-0.048179, -0.738135, 0, 1.0};
Point(110) = {-0.055956, -0.738263, 0, 1.0};
Point(111) = {-0.063518, -0.738436, 0, 1.0};
Point(112) = {-0.070795, -0.738665, 0, 1.0};
Point(113) = {-0.077727, -0.738939, 0, 1.0};
Point(114) = {-0.084248, -0.739233, 0, 1.0};
Point(115) = {-0.090288, -0.739523, 0, 1.0};
Point(116) = {-0.095769, -0.739785, 0, 1.0};
Point(117) = {-0.100611, -0.739990, 0, 1.0};
Point(118) = {-0.104734, -0.740124, 0, 1.0};
Point(119) = {-0.108053, -0.740183, 0, 1.0};
Point(120) = {-0.110491, -0.740180, 0, 1.0};
Point(121) = {-0.111983, -0.740144, 0, 1.0};
Point(122) = {-0.112485, -0.740123, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
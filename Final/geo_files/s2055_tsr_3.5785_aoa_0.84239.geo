SetFactory("OpenCASCADE");

Point(1) = {0.149978, 0.736830, 0, 1.0};
Point(2) = {0.149320, 0.736914, 0, 1.0};
Point(3) = {0.147387, 0.737196, 0, 1.0};
Point(4) = {0.144291, 0.737714, 0, 1.0};
Point(5) = {0.140151, 0.738451, 0, 1.0};
Point(6) = {0.135072, 0.739352, 0, 1.0};
Point(7) = {0.129124, 0.740351, 0, 1.0};
Point(8) = {0.122355, 0.741399, 0, 1.0};
Point(9) = {0.114824, 0.742490, 0, 1.0};
Point(10) = {0.106631, 0.743616, 0, 1.0};
Point(11) = {0.097885, 0.744751, 0, 1.0};
Point(12) = {0.088698, 0.745854, 0, 1.0};
Point(13) = {0.079172, 0.746880, 0, 1.0};
Point(14) = {0.069399, 0.747784, 0, 1.0};
Point(15) = {0.059449, 0.748536, 0, 1.0};
Point(16) = {0.049406, 0.749126, 0, 1.0};
Point(17) = {0.039358, 0.749562, 0, 1.0};
Point(18) = {0.029407, 0.749850, 0, 1.0};
Point(19) = {0.019668, 0.749995, 0, 1.0};
Point(20) = {0.010245, 0.750000, 0, 1.0};
Point(21) = {0.001246, 0.749858, 0, 1.0};
Point(22) = {-0.007231, 0.749573, 0, 1.0};
Point(23) = {-0.015089, 0.749136, 0, 1.0};
Point(24) = {-0.022232, 0.748533, 0, 1.0};
Point(25) = {-0.028615, 0.747727, 0, 1.0};
Point(26) = {-0.034236, 0.746728, 0, 1.0};
Point(27) = {-0.039071, 0.745595, 0, 1.0};
Point(28) = {-0.043065, 0.744381, 0, 1.0};
Point(29) = {-0.046170, 0.743123, 0, 1.0};
Point(30) = {-0.048363, 0.741849, 0, 1.0};
Point(31) = {-0.049640, 0.740611, 0, 1.0};
Point(32) = {-0.049979, 0.739568, 0, 1.0};
Point(33) = {-0.049210, 0.738685, 0, 1.0};
Point(34) = {-0.047280, 0.737826, 0, 1.0};
Point(35) = {-0.044329, 0.737045, 0, 1.0};
Point(36) = {-0.040357, 0.736388, 0, 1.0};
Point(37) = {-0.035358, 0.735845, 0, 1.0};
Point(38) = {-0.029386, 0.735381, 0, 1.0};
Point(39) = {-0.022515, 0.734992, 0, 1.0};
Point(40) = {-0.014827, 0.734669, 0, 1.0};
Point(41) = {-0.006404, 0.734413, 0, 1.0};
Point(42) = {0.002654, 0.734216, 0, 1.0};
Point(43) = {0.012245, 0.734081, 0, 1.0};
Point(44) = {0.022261, 0.734000, 0, 1.0};
Point(45) = {0.032588, 0.733970, 0, 1.0};
Point(46) = {0.043107, 0.733991, 0, 1.0};
Point(47) = {0.053697, 0.734061, 0, 1.0};
Point(48) = {0.064238, 0.734180, 0, 1.0};
Point(49) = {0.074608, 0.734350, 0, 1.0};
Point(50) = {0.084690, 0.734582, 0, 1.0};
Point(51) = {0.094394, 0.734887, 0, 1.0};
Point(52) = {0.103636, 0.735251, 0, 1.0};
Point(53) = {0.112331, 0.735644, 0, 1.0};
Point(54) = {0.120383, 0.736031, 0, 1.0};
Point(55) = {0.127691, 0.736380, 0, 1.0};
Point(56) = {0.134148, 0.736653, 0, 1.0};
Point(57) = {0.139645, 0.736832, 0, 1.0};
Point(58) = {0.144071, 0.736911, 0, 1.0};
Point(59) = {0.147321, 0.736907, 0, 1.0};
Point(60) = {0.149311, 0.736858, 0, 1.0};
Point(61) = {0.149980, 0.736830, 0, 1.0};
Point(62) = {-0.149978, -0.736830, 0, 1.0};
Point(63) = {-0.149320, -0.736914, 0, 1.0};
Point(64) = {-0.147387, -0.737196, 0, 1.0};
Point(65) = {-0.144291, -0.737714, 0, 1.0};
Point(66) = {-0.140151, -0.738451, 0, 1.0};
Point(67) = {-0.135072, -0.739352, 0, 1.0};
Point(68) = {-0.129124, -0.740351, 0, 1.0};
Point(69) = {-0.122355, -0.741399, 0, 1.0};
Point(70) = {-0.114824, -0.742490, 0, 1.0};
Point(71) = {-0.106631, -0.743616, 0, 1.0};
Point(72) = {-0.097885, -0.744751, 0, 1.0};
Point(73) = {-0.088698, -0.745854, 0, 1.0};
Point(74) = {-0.079172, -0.746880, 0, 1.0};
Point(75) = {-0.069399, -0.747784, 0, 1.0};
Point(76) = {-0.059449, -0.748536, 0, 1.0};
Point(77) = {-0.049406, -0.749126, 0, 1.0};
Point(78) = {-0.039358, -0.749562, 0, 1.0};
Point(79) = {-0.029407, -0.749850, 0, 1.0};
Point(80) = {-0.019668, -0.749995, 0, 1.0};
Point(81) = {-0.010245, -0.750000, 0, 1.0};
Point(82) = {-0.001246, -0.749858, 0, 1.0};
Point(83) = {0.007231, -0.749573, 0, 1.0};
Point(84) = {0.015089, -0.749136, 0, 1.0};
Point(85) = {0.022232, -0.748533, 0, 1.0};
Point(86) = {0.028615, -0.747727, 0, 1.0};
Point(87) = {0.034236, -0.746728, 0, 1.0};
Point(88) = {0.039071, -0.745595, 0, 1.0};
Point(89) = {0.043065, -0.744381, 0, 1.0};
Point(90) = {0.046170, -0.743123, 0, 1.0};
Point(91) = {0.048363, -0.741849, 0, 1.0};
Point(92) = {0.049640, -0.740611, 0, 1.0};
Point(93) = {0.049979, -0.739568, 0, 1.0};
Point(94) = {0.049210, -0.738685, 0, 1.0};
Point(95) = {0.047280, -0.737826, 0, 1.0};
Point(96) = {0.044329, -0.737045, 0, 1.0};
Point(97) = {0.040357, -0.736388, 0, 1.0};
Point(98) = {0.035358, -0.735845, 0, 1.0};
Point(99) = {0.029386, -0.735381, 0, 1.0};
Point(100) = {0.022515, -0.734992, 0, 1.0};
Point(101) = {0.014827, -0.734669, 0, 1.0};
Point(102) = {0.006404, -0.734413, 0, 1.0};
Point(103) = {-0.002654, -0.734216, 0, 1.0};
Point(104) = {-0.012245, -0.734081, 0, 1.0};
Point(105) = {-0.022261, -0.734000, 0, 1.0};
Point(106) = {-0.032588, -0.733970, 0, 1.0};
Point(107) = {-0.043107, -0.733991, 0, 1.0};
Point(108) = {-0.053697, -0.734061, 0, 1.0};
Point(109) = {-0.064238, -0.734180, 0, 1.0};
Point(110) = {-0.074608, -0.734350, 0, 1.0};
Point(111) = {-0.084690, -0.734582, 0, 1.0};
Point(112) = {-0.094394, -0.734887, 0, 1.0};
Point(113) = {-0.103636, -0.735251, 0, 1.0};
Point(114) = {-0.112331, -0.735644, 0, 1.0};
Point(115) = {-0.120383, -0.736031, 0, 1.0};
Point(116) = {-0.127691, -0.736380, 0, 1.0};
Point(117) = {-0.134148, -0.736653, 0, 1.0};
Point(118) = {-0.139645, -0.736832, 0, 1.0};
Point(119) = {-0.144071, -0.736911, 0, 1.0};
Point(120) = {-0.147321, -0.736907, 0, 1.0};
Point(121) = {-0.149311, -0.736858, 0, 1.0};
Point(122) = {-0.149980, -0.736830, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
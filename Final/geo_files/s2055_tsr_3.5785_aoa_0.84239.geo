SetFactory("OpenCASCADE");

Point(1) = {0.074989, 0.743415, 0, 1.0};
Point(2) = {0.074660, 0.743457, 0, 1.0};
Point(3) = {0.073694, 0.743598, 0, 1.0};
Point(4) = {0.072145, 0.743857, 0, 1.0};
Point(5) = {0.070076, 0.744225, 0, 1.0};
Point(6) = {0.067536, 0.744676, 0, 1.0};
Point(7) = {0.064562, 0.745176, 0, 1.0};
Point(8) = {0.061177, 0.745699, 0, 1.0};
Point(9) = {0.057412, 0.746245, 0, 1.0};
Point(10) = {0.053316, 0.746808, 0, 1.0};
Point(11) = {0.048943, 0.747375, 0, 1.0};
Point(12) = {0.044349, 0.747927, 0, 1.0};
Point(13) = {0.039586, 0.748440, 0, 1.0};
Point(14) = {0.034699, 0.748892, 0, 1.0};
Point(15) = {0.029724, 0.749268, 0, 1.0};
Point(16) = {0.024703, 0.749563, 0, 1.0};
Point(17) = {0.019679, 0.749781, 0, 1.0};
Point(18) = {0.014703, 0.749925, 0, 1.0};
Point(19) = {0.009834, 0.749998, 0, 1.0};
Point(20) = {0.005122, 0.750000, 0, 1.0};
Point(21) = {0.000623, 0.749929, 0, 1.0};
Point(22) = {-0.003616, 0.749786, 0, 1.0};
Point(23) = {-0.007544, 0.749568, 0, 1.0};
Point(24) = {-0.011116, 0.749267, 0, 1.0};
Point(25) = {-0.014307, 0.748864, 0, 1.0};
Point(26) = {-0.017118, 0.748364, 0, 1.0};
Point(27) = {-0.019536, 0.747797, 0, 1.0};
Point(28) = {-0.021533, 0.747191, 0, 1.0};
Point(29) = {-0.023085, 0.746561, 0, 1.0};
Point(30) = {-0.024182, 0.745924, 0, 1.0};
Point(31) = {-0.024820, 0.745306, 0, 1.0};
Point(32) = {-0.024989, 0.744784, 0, 1.0};
Point(33) = {-0.024605, 0.744342, 0, 1.0};
Point(34) = {-0.023640, 0.743913, 0, 1.0};
Point(35) = {-0.022165, 0.743522, 0, 1.0};
Point(36) = {-0.020178, 0.743194, 0, 1.0};
Point(37) = {-0.017679, 0.742922, 0, 1.0};
Point(38) = {-0.014693, 0.742691, 0, 1.0};
Point(39) = {-0.011258, 0.742496, 0, 1.0};
Point(40) = {-0.007414, 0.742334, 0, 1.0};
Point(41) = {-0.003202, 0.742207, 0, 1.0};
Point(42) = {0.001327, 0.742108, 0, 1.0};
Point(43) = {0.006123, 0.742040, 0, 1.0};
Point(44) = {0.011130, 0.742000, 0, 1.0};
Point(45) = {0.016294, 0.741985, 0, 1.0};
Point(46) = {0.021554, 0.741996, 0, 1.0};
Point(47) = {0.026849, 0.742031, 0, 1.0};
Point(48) = {0.032119, 0.742090, 0, 1.0};
Point(49) = {0.037304, 0.742175, 0, 1.0};
Point(50) = {0.042345, 0.742291, 0, 1.0};
Point(51) = {0.047197, 0.742444, 0, 1.0};
Point(52) = {0.051818, 0.742626, 0, 1.0};
Point(53) = {0.056165, 0.742822, 0, 1.0};
Point(54) = {0.060192, 0.743016, 0, 1.0};
Point(55) = {0.063846, 0.743190, 0, 1.0};
Point(56) = {0.067074, 0.743326, 0, 1.0};
Point(57) = {0.069823, 0.743416, 0, 1.0};
Point(58) = {0.072035, 0.743456, 0, 1.0};
Point(59) = {0.073661, 0.743454, 0, 1.0};
Point(60) = {0.074655, 0.743429, 0, 1.0};
Point(61) = {0.074990, 0.743415, 0, 1.0};
Point(62) = {-0.074989, -0.743415, 0, 1.0};
Point(63) = {-0.074660, -0.743457, 0, 1.0};
Point(64) = {-0.073694, -0.743598, 0, 1.0};
Point(65) = {-0.072145, -0.743857, 0, 1.0};
Point(66) = {-0.070076, -0.744225, 0, 1.0};
Point(67) = {-0.067536, -0.744676, 0, 1.0};
Point(68) = {-0.064562, -0.745176, 0, 1.0};
Point(69) = {-0.061177, -0.745699, 0, 1.0};
Point(70) = {-0.057412, -0.746245, 0, 1.0};
Point(71) = {-0.053316, -0.746808, 0, 1.0};
Point(72) = {-0.048943, -0.747375, 0, 1.0};
Point(73) = {-0.044349, -0.747927, 0, 1.0};
Point(74) = {-0.039586, -0.748440, 0, 1.0};
Point(75) = {-0.034699, -0.748892, 0, 1.0};
Point(76) = {-0.029724, -0.749268, 0, 1.0};
Point(77) = {-0.024703, -0.749563, 0, 1.0};
Point(78) = {-0.019679, -0.749781, 0, 1.0};
Point(79) = {-0.014703, -0.749925, 0, 1.0};
Point(80) = {-0.009834, -0.749998, 0, 1.0};
Point(81) = {-0.005122, -0.750000, 0, 1.0};
Point(82) = {-0.000623, -0.749929, 0, 1.0};
Point(83) = {0.003616, -0.749786, 0, 1.0};
Point(84) = {0.007544, -0.749568, 0, 1.0};
Point(85) = {0.011116, -0.749267, 0, 1.0};
Point(86) = {0.014307, -0.748864, 0, 1.0};
Point(87) = {0.017118, -0.748364, 0, 1.0};
Point(88) = {0.019536, -0.747797, 0, 1.0};
Point(89) = {0.021533, -0.747191, 0, 1.0};
Point(90) = {0.023085, -0.746561, 0, 1.0};
Point(91) = {0.024182, -0.745924, 0, 1.0};
Point(92) = {0.024820, -0.745306, 0, 1.0};
Point(93) = {0.024989, -0.744784, 0, 1.0};
Point(94) = {0.024605, -0.744342, 0, 1.0};
Point(95) = {0.023640, -0.743913, 0, 1.0};
Point(96) = {0.022165, -0.743522, 0, 1.0};
Point(97) = {0.020178, -0.743194, 0, 1.0};
Point(98) = {0.017679, -0.742922, 0, 1.0};
Point(99) = {0.014693, -0.742691, 0, 1.0};
Point(100) = {0.011258, -0.742496, 0, 1.0};
Point(101) = {0.007414, -0.742334, 0, 1.0};
Point(102) = {0.003202, -0.742207, 0, 1.0};
Point(103) = {-0.001327, -0.742108, 0, 1.0};
Point(104) = {-0.006123, -0.742040, 0, 1.0};
Point(105) = {-0.011130, -0.742000, 0, 1.0};
Point(106) = {-0.016294, -0.741985, 0, 1.0};
Point(107) = {-0.021554, -0.741996, 0, 1.0};
Point(108) = {-0.026849, -0.742031, 0, 1.0};
Point(109) = {-0.032119, -0.742090, 0, 1.0};
Point(110) = {-0.037304, -0.742175, 0, 1.0};
Point(111) = {-0.042345, -0.742291, 0, 1.0};
Point(112) = {-0.047197, -0.742444, 0, 1.0};
Point(113) = {-0.051818, -0.742626, 0, 1.0};
Point(114) = {-0.056165, -0.742822, 0, 1.0};
Point(115) = {-0.060192, -0.743016, 0, 1.0};
Point(116) = {-0.063846, -0.743190, 0, 1.0};
Point(117) = {-0.067074, -0.743326, 0, 1.0};
Point(118) = {-0.069823, -0.743416, 0, 1.0};
Point(119) = {-0.072035, -0.743456, 0, 1.0};
Point(120) = {-0.073661, -0.743454, 0, 1.0};
Point(121) = {-0.074655, -0.743429, 0, 1.0};
Point(122) = {-0.074990, -0.743415, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
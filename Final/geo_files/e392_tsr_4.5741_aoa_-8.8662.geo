SetFactory("OpenCASCADE");

Point(1) = {0.110904, 0.748931, 0, 1.0};
Point(2) = {0.110412, 0.748939, 0, 1.0};
Point(3) = {0.108965, 0.748982, 0, 1.0};
Point(4) = {0.106645, 0.749081, 0, 1.0};
Point(5) = {0.103530, 0.749220, 0, 1.0};
Point(6) = {0.099672, 0.749363, 0, 1.0};
Point(7) = {0.095112, 0.749496, 0, 1.0};
Point(8) = {0.089905, 0.749622, 0, 1.0};
Point(9) = {0.084124, 0.749743, 0, 1.0};
Point(10) = {0.077855, 0.749853, 0, 1.0};
Point(11) = {0.071182, 0.749942, 0, 1.0};
Point(12) = {0.064199, 0.749997, 0, 1.0};
Point(13) = {0.057002, 0.750000, 0, 1.0};
Point(14) = {0.049684, 0.749931, 0, 1.0};
Point(15) = {0.042352, 0.749755, 0, 1.0};
Point(16) = {0.035081, 0.749421, 0, 1.0};
Point(17) = {0.027924, 0.748891, 0, 1.0};
Point(18) = {0.020927, 0.748149, 0, 1.0};
Point(19) = {0.014135, 0.747186, 0, 1.0};
Point(20) = {0.007585, 0.746004, 0, 1.0};
Point(21) = {0.001304, 0.744622, 0, 1.0};
Point(22) = {-0.004667, 0.743081, 0, 1.0};
Point(23) = {-0.010269, 0.741421, 0, 1.0};
Point(24) = {-0.015449, 0.739672, 0, 1.0};
Point(25) = {-0.020157, 0.737864, 0, 1.0};
Point(26) = {-0.024347, 0.736027, 0, 1.0};
Point(27) = {-0.027986, 0.734191, 0, 1.0};
Point(28) = {-0.031042, 0.732387, 0, 1.0};
Point(29) = {-0.033496, 0.730652, 0, 1.0};
Point(30) = {-0.035332, 0.729021, 0, 1.0};
Point(31) = {-0.036555, 0.727549, 0, 1.0};
Point(32) = {-0.037161, 0.726312, 0, 1.0};
Point(33) = {-0.037052, 0.725465, 0, 1.0};
Point(34) = {-0.036111, 0.724942, 0, 1.0};
Point(35) = {-0.034354, 0.724618, 0, 1.0};
Point(36) = {-0.031827, 0.724531, 0, 1.0};
Point(37) = {-0.028551, 0.724687, 0, 1.0};
Point(38) = {-0.024547, 0.725081, 0, 1.0};
Point(39) = {-0.019849, 0.725697, 0, 1.0};
Point(40) = {-0.014498, 0.726518, 0, 1.0};
Point(41) = {-0.008554, 0.727521, 0, 1.0};
Point(42) = {-0.002077, 0.728685, 0, 1.0};
Point(43) = {0.004860, 0.729987, 0, 1.0};
Point(44) = {0.012174, 0.731409, 0, 1.0};
Point(45) = {0.019787, 0.732934, 0, 1.0};
Point(46) = {0.027630, 0.734545, 0, 1.0};
Point(47) = {0.035622, 0.736207, 0, 1.0};
Point(48) = {0.043687, 0.737884, 0, 1.0};
Point(49) = {0.051729, 0.739530, 0, 1.0};
Point(50) = {0.059644, 0.741106, 0, 1.0};
Point(51) = {0.067328, 0.742582, 0, 1.0};
Point(52) = {0.074677, 0.743935, 0, 1.0};
Point(53) = {0.081591, 0.745141, 0, 1.0};
Point(54) = {0.087973, 0.746187, 0, 1.0};
Point(55) = {0.093732, 0.747061, 0, 1.0};
Point(56) = {0.098782, 0.747759, 0, 1.0};
Point(57) = {0.103046, 0.748277, 0, 1.0};
Point(58) = {0.106448, 0.748621, 0, 1.0};
Point(59) = {0.108915, 0.748816, 0, 1.0};
Point(60) = {0.110406, 0.748906, 0, 1.0};
Point(61) = {-0.110904, -0.748931, 0, 1.0};
Point(62) = {-0.110412, -0.748939, 0, 1.0};
Point(63) = {-0.108965, -0.748982, 0, 1.0};
Point(64) = {-0.106645, -0.749081, 0, 1.0};
Point(65) = {-0.103530, -0.749220, 0, 1.0};
Point(66) = {-0.099672, -0.749363, 0, 1.0};
Point(67) = {-0.095112, -0.749496, 0, 1.0};
Point(68) = {-0.089905, -0.749622, 0, 1.0};
Point(69) = {-0.084124, -0.749743, 0, 1.0};
Point(70) = {-0.077855, -0.749853, 0, 1.0};
Point(71) = {-0.071182, -0.749942, 0, 1.0};
Point(72) = {-0.064199, -0.749997, 0, 1.0};
Point(73) = {-0.057002, -0.750000, 0, 1.0};
Point(74) = {-0.049684, -0.749931, 0, 1.0};
Point(75) = {-0.042352, -0.749755, 0, 1.0};
Point(76) = {-0.035081, -0.749421, 0, 1.0};
Point(77) = {-0.027924, -0.748891, 0, 1.0};
Point(78) = {-0.020927, -0.748149, 0, 1.0};
Point(79) = {-0.014135, -0.747186, 0, 1.0};
Point(80) = {-0.007585, -0.746004, 0, 1.0};
Point(81) = {-0.001304, -0.744622, 0, 1.0};
Point(82) = {0.004667, -0.743081, 0, 1.0};
Point(83) = {0.010269, -0.741421, 0, 1.0};
Point(84) = {0.015449, -0.739672, 0, 1.0};
Point(85) = {0.020157, -0.737864, 0, 1.0};
Point(86) = {0.024347, -0.736027, 0, 1.0};
Point(87) = {0.027986, -0.734191, 0, 1.0};
Point(88) = {0.031042, -0.732387, 0, 1.0};
Point(89) = {0.033496, -0.730652, 0, 1.0};
Point(90) = {0.035332, -0.729021, 0, 1.0};
Point(91) = {0.036555, -0.727549, 0, 1.0};
Point(92) = {0.037161, -0.726312, 0, 1.0};
Point(93) = {0.037052, -0.725465, 0, 1.0};
Point(94) = {0.036111, -0.724942, 0, 1.0};
Point(95) = {0.034354, -0.724618, 0, 1.0};
Point(96) = {0.031827, -0.724531, 0, 1.0};
Point(97) = {0.028551, -0.724687, 0, 1.0};
Point(98) = {0.024547, -0.725081, 0, 1.0};
Point(99) = {0.019849, -0.725697, 0, 1.0};
Point(100) = {0.014498, -0.726518, 0, 1.0};
Point(101) = {0.008554, -0.727521, 0, 1.0};
Point(102) = {0.002077, -0.728685, 0, 1.0};
Point(103) = {-0.004860, -0.729987, 0, 1.0};
Point(104) = {-0.012174, -0.731409, 0, 1.0};
Point(105) = {-0.019787, -0.732934, 0, 1.0};
Point(106) = {-0.027630, -0.734545, 0, 1.0};
Point(107) = {-0.035622, -0.736207, 0, 1.0};
Point(108) = {-0.043687, -0.737884, 0, 1.0};
Point(109) = {-0.051729, -0.739530, 0, 1.0};
Point(110) = {-0.059644, -0.741106, 0, 1.0};
Point(111) = {-0.067328, -0.742582, 0, 1.0};
Point(112) = {-0.074677, -0.743935, 0, 1.0};
Point(113) = {-0.081591, -0.745141, 0, 1.0};
Point(114) = {-0.087973, -0.746187, 0, 1.0};
Point(115) = {-0.093732, -0.747061, 0, 1.0};
Point(116) = {-0.098782, -0.747759, 0, 1.0};
Point(117) = {-0.103046, -0.748277, 0, 1.0};
Point(118) = {-0.106448, -0.748621, 0, 1.0};
Point(119) = {-0.108915, -0.748816, 0, 1.0};
Point(120) = {-0.110406, -0.748906, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
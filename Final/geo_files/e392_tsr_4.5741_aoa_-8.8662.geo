SetFactory("OpenCASCADE");

Point(1) = {0.111097, 0.748929, 0, 1.0};
Point(2) = {0.110604, 0.748937, 0, 1.0};
Point(3) = {0.109155, 0.748980, 0, 1.0};
Point(4) = {0.106832, 0.749080, 0, 1.0};
Point(5) = {0.103713, 0.749219, 0, 1.0};
Point(6) = {0.099850, 0.749362, 0, 1.0};
Point(7) = {0.095284, 0.749495, 0, 1.0};
Point(8) = {0.090071, 0.749622, 0, 1.0};
Point(9) = {0.084282, 0.749743, 0, 1.0};
Point(10) = {0.078005, 0.749853, 0, 1.0};
Point(11) = {0.071323, 0.749942, 0, 1.0};
Point(12) = {0.064331, 0.749997, 0, 1.0};
Point(13) = {0.057124, 0.750000, 0, 1.0};
Point(14) = {0.049797, 0.749931, 0, 1.0};
Point(15) = {0.042456, 0.749755, 0, 1.0};
Point(16) = {0.035175, 0.749420, 0, 1.0};
Point(17) = {0.028008, 0.748890, 0, 1.0};
Point(18) = {0.021003, 0.748146, 0, 1.0};
Point(19) = {0.014201, 0.747183, 0, 1.0};
Point(20) = {0.007643, 0.745999, 0, 1.0};
Point(21) = {0.001354, 0.744615, 0, 1.0};
Point(22) = {-0.004625, 0.743072, 0, 1.0};
Point(23) = {-0.010234, 0.741410, 0, 1.0};
Point(24) = {-0.015421, 0.739659, 0, 1.0};
Point(25) = {-0.020135, 0.737848, 0, 1.0};
Point(26) = {-0.024331, 0.736009, 0, 1.0};
Point(27) = {-0.027974, 0.734170, 0, 1.0};
Point(28) = {-0.031034, 0.732364, 0, 1.0};
Point(29) = {-0.033491, 0.730627, 0, 1.0};
Point(30) = {-0.035330, 0.728994, 0, 1.0};
Point(31) = {-0.036554, 0.727519, 0, 1.0};
Point(32) = {-0.037161, 0.726281, 0, 1.0};
Point(33) = {-0.037052, 0.725433, 0, 1.0};
Point(34) = {-0.036110, 0.724909, 0, 1.0};
Point(35) = {-0.034351, 0.724585, 0, 1.0};
Point(36) = {-0.031820, 0.724498, 0, 1.0};
Point(37) = {-0.028540, 0.724654, 0, 1.0};
Point(38) = {-0.024530, 0.725049, 0, 1.0};
Point(39) = {-0.019826, 0.725666, 0, 1.0};
Point(40) = {-0.014469, 0.726488, 0, 1.0};
Point(41) = {-0.008517, 0.727492, 0, 1.0};
Point(42) = {-0.002031, 0.728657, 0, 1.0};
Point(43) = {0.004914, 0.729961, 0, 1.0};
Point(44) = {0.012238, 0.731384, 0, 1.0};
Point(45) = {0.019861, 0.732912, 0, 1.0};
Point(46) = {0.027714, 0.734525, 0, 1.0};
Point(47) = {0.035717, 0.736189, 0, 1.0};
Point(48) = {0.043792, 0.737868, 0, 1.0};
Point(49) = {0.051844, 0.739516, 0, 1.0};
Point(50) = {0.059769, 0.741094, 0, 1.0};
Point(51) = {0.067464, 0.742573, 0, 1.0};
Point(52) = {0.074823, 0.743927, 0, 1.0};
Point(53) = {0.081745, 0.745135, 0, 1.0};
Point(54) = {0.088136, 0.746182, 0, 1.0};
Point(55) = {0.093902, 0.747057, 0, 1.0};
Point(56) = {0.098958, 0.747756, 0, 1.0};
Point(57) = {0.103228, 0.748275, 0, 1.0};
Point(58) = {0.106635, 0.748619, 0, 1.0};
Point(59) = {0.109105, 0.748815, 0, 1.0};
Point(60) = {0.110598, 0.748905, 0, 1.0};
Point(61) = {-0.111097, -0.748929, 0, 1.0};
Point(62) = {-0.110604, -0.748937, 0, 1.0};
Point(63) = {-0.109155, -0.748980, 0, 1.0};
Point(64) = {-0.106832, -0.749080, 0, 1.0};
Point(65) = {-0.103713, -0.749219, 0, 1.0};
Point(66) = {-0.099850, -0.749362, 0, 1.0};
Point(67) = {-0.095284, -0.749495, 0, 1.0};
Point(68) = {-0.090071, -0.749622, 0, 1.0};
Point(69) = {-0.084282, -0.749743, 0, 1.0};
Point(70) = {-0.078005, -0.749853, 0, 1.0};
Point(71) = {-0.071323, -0.749942, 0, 1.0};
Point(72) = {-0.064331, -0.749997, 0, 1.0};
Point(73) = {-0.057124, -0.750000, 0, 1.0};
Point(74) = {-0.049797, -0.749931, 0, 1.0};
Point(75) = {-0.042456, -0.749755, 0, 1.0};
Point(76) = {-0.035175, -0.749420, 0, 1.0};
Point(77) = {-0.028008, -0.748890, 0, 1.0};
Point(78) = {-0.021003, -0.748146, 0, 1.0};
Point(79) = {-0.014201, -0.747183, 0, 1.0};
Point(80) = {-0.007643, -0.745999, 0, 1.0};
Point(81) = {-0.001354, -0.744615, 0, 1.0};
Point(82) = {0.004625, -0.743072, 0, 1.0};
Point(83) = {0.010234, -0.741410, 0, 1.0};
Point(84) = {0.015421, -0.739659, 0, 1.0};
Point(85) = {0.020135, -0.737848, 0, 1.0};
Point(86) = {0.024331, -0.736009, 0, 1.0};
Point(87) = {0.027974, -0.734170, 0, 1.0};
Point(88) = {0.031034, -0.732364, 0, 1.0};
Point(89) = {0.033491, -0.730627, 0, 1.0};
Point(90) = {0.035330, -0.728994, 0, 1.0};
Point(91) = {0.036554, -0.727519, 0, 1.0};
Point(92) = {0.037161, -0.726281, 0, 1.0};
Point(93) = {0.037052, -0.725433, 0, 1.0};
Point(94) = {0.036110, -0.724909, 0, 1.0};
Point(95) = {0.034351, -0.724585, 0, 1.0};
Point(96) = {0.031820, -0.724498, 0, 1.0};
Point(97) = {0.028540, -0.724654, 0, 1.0};
Point(98) = {0.024530, -0.725049, 0, 1.0};
Point(99) = {0.019826, -0.725666, 0, 1.0};
Point(100) = {0.014469, -0.726488, 0, 1.0};
Point(101) = {0.008517, -0.727492, 0, 1.0};
Point(102) = {0.002031, -0.728657, 0, 1.0};
Point(103) = {-0.004914, -0.729961, 0, 1.0};
Point(104) = {-0.012238, -0.731384, 0, 1.0};
Point(105) = {-0.019861, -0.732912, 0, 1.0};
Point(106) = {-0.027714, -0.734525, 0, 1.0};
Point(107) = {-0.035717, -0.736189, 0, 1.0};
Point(108) = {-0.043792, -0.737868, 0, 1.0};
Point(109) = {-0.051844, -0.739516, 0, 1.0};
Point(110) = {-0.059769, -0.741094, 0, 1.0};
Point(111) = {-0.067464, -0.742573, 0, 1.0};
Point(112) = {-0.074823, -0.743927, 0, 1.0};
Point(113) = {-0.081745, -0.745135, 0, 1.0};
Point(114) = {-0.088136, -0.746182, 0, 1.0};
Point(115) = {-0.093902, -0.747057, 0, 1.0};
Point(116) = {-0.098958, -0.747756, 0, 1.0};
Point(117) = {-0.103228, -0.748275, 0, 1.0};
Point(118) = {-0.106635, -0.748619, 0, 1.0};
Point(119) = {-0.109105, -0.748815, 0, 1.0};
Point(120) = {-0.110598, -0.748905, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074980, 0.740995, 0, 1.0};
Point(2) = {0.074661, 0.741044, 0, 1.0};
Point(3) = {0.073711, 0.741207, 0, 1.0};
Point(4) = {0.072153, 0.741487, 0, 1.0};
Point(5) = {0.070027, 0.741888, 0, 1.0};
Point(6) = {0.067383, 0.742406, 0, 1.0};
Point(7) = {0.064265, 0.743029, 0, 1.0};
Point(8) = {0.060730, 0.743732, 0, 1.0};
Point(9) = {0.056831, 0.744484, 0, 1.0};
Point(10) = {0.052622, 0.745255, 0, 1.0};
Point(11) = {0.048149, 0.746020, 0, 1.0};
Point(12) = {0.043467, 0.746759, 0, 1.0};
Point(13) = {0.038632, 0.747459, 0, 1.0};
Point(14) = {0.033686, 0.748107, 0, 1.0};
Point(15) = {0.028681, 0.748685, 0, 1.0};
Point(16) = {0.023659, 0.749179, 0, 1.0};
Point(17) = {0.018660, 0.749566, 0, 1.0};
Point(18) = {0.013729, 0.749835, 0, 1.0};
Point(19) = {0.008919, 0.749979, 0, 1.0};
Point(20) = {0.004279, 0.750000, 0, 1.0};
Point(21) = {-0.000140, 0.749906, 0, 1.0};
Point(22) = {-0.004295, 0.749737, 0, 1.0};
Point(23) = {-0.008143, 0.749500, 0, 1.0};
Point(24) = {-0.011656, 0.749172, 0, 1.0};
Point(25) = {-0.014811, 0.748724, 0, 1.0};
Point(26) = {-0.017577, 0.748130, 0, 1.0};
Point(27) = {-0.019926, 0.747377, 0, 1.0};
Point(28) = {-0.021839, 0.746451, 0, 1.0};
Point(29) = {-0.023304, 0.745423, 0, 1.0};
Point(30) = {-0.024314, 0.744421, 0, 1.0};
Point(31) = {-0.024872, 0.743560, 0, 1.0};
Point(32) = {-0.025002, 0.742919, 0, 1.0};
Point(33) = {-0.024528, 0.742231, 0, 1.0};
Point(34) = {-0.023505, 0.741628, 0, 1.0};
Point(35) = {-0.022043, 0.741055, 0, 1.0};
Point(36) = {-0.020163, 0.740512, 0, 1.0};
Point(37) = {-0.017858, 0.740015, 0, 1.0};
Point(38) = {-0.015118, 0.739592, 0, 1.0};
Point(39) = {-0.011936, 0.739269, 0, 1.0};
Point(40) = {-0.008313, 0.739060, 0, 1.0};
Point(41) = {-0.004287, 0.738961, 0, 1.0};
Point(42) = {0.000089, 0.738955, 0, 1.0};
Point(43) = {0.004766, 0.739011, 0, 1.0};
Point(44) = {0.009693, 0.739104, 0, 1.0};
Point(45) = {0.014821, 0.739218, 0, 1.0};
Point(46) = {0.020102, 0.739348, 0, 1.0};
Point(47) = {0.025478, 0.739495, 0, 1.0};
Point(48) = {0.030882, 0.739656, 0, 1.0};
Point(49) = {0.036247, 0.739821, 0, 1.0};
Point(50) = {0.041500, 0.739980, 0, 1.0};
Point(51) = {0.046577, 0.740122, 0, 1.0};
Point(52) = {0.051416, 0.740251, 0, 1.0};
Point(53) = {0.055955, 0.740374, 0, 1.0};
Point(54) = {0.060133, 0.740501, 0, 1.0};
Point(55) = {0.063889, 0.740633, 0, 1.0};
Point(56) = {0.067169, 0.740761, 0, 1.0};
Point(57) = {0.069920, 0.740868, 0, 1.0};
Point(58) = {0.072107, 0.740939, 0, 1.0};
Point(59) = {0.073694, 0.740975, 0, 1.0};
Point(60) = {0.074656, 0.740986, 0, 1.0};
Point(61) = {0.074980, 0.740988, 0, 1.0};
Point(62) = {-0.074980, -0.740995, 0, 1.0};
Point(63) = {-0.074661, -0.741044, 0, 1.0};
Point(64) = {-0.073711, -0.741207, 0, 1.0};
Point(65) = {-0.072153, -0.741487, 0, 1.0};
Point(66) = {-0.070027, -0.741888, 0, 1.0};
Point(67) = {-0.067383, -0.742406, 0, 1.0};
Point(68) = {-0.064265, -0.743029, 0, 1.0};
Point(69) = {-0.060730, -0.743732, 0, 1.0};
Point(70) = {-0.056831, -0.744484, 0, 1.0};
Point(71) = {-0.052622, -0.745255, 0, 1.0};
Point(72) = {-0.048149, -0.746020, 0, 1.0};
Point(73) = {-0.043467, -0.746759, 0, 1.0};
Point(74) = {-0.038632, -0.747459, 0, 1.0};
Point(75) = {-0.033686, -0.748107, 0, 1.0};
Point(76) = {-0.028681, -0.748685, 0, 1.0};
Point(77) = {-0.023659, -0.749179, 0, 1.0};
Point(78) = {-0.018660, -0.749566, 0, 1.0};
Point(79) = {-0.013729, -0.749835, 0, 1.0};
Point(80) = {-0.008919, -0.749979, 0, 1.0};
Point(81) = {-0.004279, -0.750000, 0, 1.0};
Point(82) = {0.000140, -0.749906, 0, 1.0};
Point(83) = {0.004295, -0.749737, 0, 1.0};
Point(84) = {0.008143, -0.749500, 0, 1.0};
Point(85) = {0.011656, -0.749172, 0, 1.0};
Point(86) = {0.014811, -0.748724, 0, 1.0};
Point(87) = {0.017577, -0.748130, 0, 1.0};
Point(88) = {0.019926, -0.747377, 0, 1.0};
Point(89) = {0.021839, -0.746451, 0, 1.0};
Point(90) = {0.023304, -0.745423, 0, 1.0};
Point(91) = {0.024314, -0.744421, 0, 1.0};
Point(92) = {0.024872, -0.743560, 0, 1.0};
Point(93) = {0.025002, -0.742919, 0, 1.0};
Point(94) = {0.024528, -0.742231, 0, 1.0};
Point(95) = {0.023505, -0.741628, 0, 1.0};
Point(96) = {0.022043, -0.741055, 0, 1.0};
Point(97) = {0.020163, -0.740512, 0, 1.0};
Point(98) = {0.017858, -0.740015, 0, 1.0};
Point(99) = {0.015118, -0.739592, 0, 1.0};
Point(100) = {0.011936, -0.739269, 0, 1.0};
Point(101) = {0.008313, -0.739060, 0, 1.0};
Point(102) = {0.004287, -0.738961, 0, 1.0};
Point(103) = {-0.000089, -0.738955, 0, 1.0};
Point(104) = {-0.004766, -0.739011, 0, 1.0};
Point(105) = {-0.009693, -0.739104, 0, 1.0};
Point(106) = {-0.014821, -0.739218, 0, 1.0};
Point(107) = {-0.020102, -0.739348, 0, 1.0};
Point(108) = {-0.025478, -0.739495, 0, 1.0};
Point(109) = {-0.030882, -0.739656, 0, 1.0};
Point(110) = {-0.036247, -0.739821, 0, 1.0};
Point(111) = {-0.041500, -0.739980, 0, 1.0};
Point(112) = {-0.046577, -0.740122, 0, 1.0};
Point(113) = {-0.051416, -0.740251, 0, 1.0};
Point(114) = {-0.055955, -0.740374, 0, 1.0};
Point(115) = {-0.060133, -0.740501, 0, 1.0};
Point(116) = {-0.063889, -0.740633, 0, 1.0};
Point(117) = {-0.067169, -0.740761, 0, 1.0};
Point(118) = {-0.069920, -0.740868, 0, 1.0};
Point(119) = {-0.072107, -0.740939, 0, 1.0};
Point(120) = {-0.073694, -0.740975, 0, 1.0};
Point(121) = {-0.074656, -0.740986, 0, 1.0};
Point(122) = {-0.074980, -0.740988, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
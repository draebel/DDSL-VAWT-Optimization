SetFactory("OpenCASCADE");

Point(1) = {0.112470, 0.736492, 0, 1.0};
Point(2) = {0.111991, 0.736566, 0, 1.0};
Point(3) = {0.110566, 0.736811, 0, 1.0};
Point(4) = {0.108230, 0.737230, 0, 1.0};
Point(5) = {0.105040, 0.737832, 0, 1.0};
Point(6) = {0.101074, 0.738609, 0, 1.0};
Point(7) = {0.096397, 0.739543, 0, 1.0};
Point(8) = {0.091095, 0.740598, 0, 1.0};
Point(9) = {0.085247, 0.741726, 0, 1.0};
Point(10) = {0.078933, 0.742882, 0, 1.0};
Point(11) = {0.072224, 0.744030, 0, 1.0};
Point(12) = {0.065201, 0.745139, 0, 1.0};
Point(13) = {0.057947, 0.746188, 0, 1.0};
Point(14) = {0.050528, 0.747160, 0, 1.0};
Point(15) = {0.043022, 0.748028, 0, 1.0};
Point(16) = {0.035489, 0.748768, 0, 1.0};
Point(17) = {0.027990, 0.749350, 0, 1.0};
Point(18) = {0.020594, 0.749752, 0, 1.0};
Point(19) = {0.013379, 0.749968, 0, 1.0};
Point(20) = {0.006418, 0.750000, 0, 1.0};
Point(21) = {-0.000210, 0.749859, 0, 1.0};
Point(22) = {-0.006443, 0.749605, 0, 1.0};
Point(23) = {-0.012214, 0.749250, 0, 1.0};
Point(24) = {-0.017484, 0.748757, 0, 1.0};
Point(25) = {-0.022216, 0.748086, 0, 1.0};
Point(26) = {-0.026366, 0.747194, 0, 1.0};
Point(27) = {-0.029889, 0.746065, 0, 1.0};
Point(28) = {-0.032759, 0.744677, 0, 1.0};
Point(29) = {-0.034956, 0.743135, 0, 1.0};
Point(30) = {-0.036472, 0.741631, 0, 1.0};
Point(31) = {-0.037308, 0.740339, 0, 1.0};
Point(32) = {-0.037503, 0.739379, 0, 1.0};
Point(33) = {-0.036791, 0.738347, 0, 1.0};
Point(34) = {-0.035258, 0.737442, 0, 1.0};
Point(35) = {-0.033064, 0.736583, 0, 1.0};
Point(36) = {-0.030245, 0.735768, 0, 1.0};
Point(37) = {-0.026787, 0.735022, 0, 1.0};
Point(38) = {-0.022677, 0.734389, 0, 1.0};
Point(39) = {-0.017903, 0.733904, 0, 1.0};
Point(40) = {-0.012470, 0.733590, 0, 1.0};
Point(41) = {-0.006431, 0.733442, 0, 1.0};
Point(42) = {0.000134, 0.733433, 0, 1.0};
Point(43) = {0.007148, 0.733516, 0, 1.0};
Point(44) = {0.014540, 0.733656, 0, 1.0};
Point(45) = {0.022231, 0.733826, 0, 1.0};
Point(46) = {0.030154, 0.734022, 0, 1.0};
Point(47) = {0.038216, 0.734243, 0, 1.0};
Point(48) = {0.046323, 0.734484, 0, 1.0};
Point(49) = {0.054371, 0.734732, 0, 1.0};
Point(50) = {0.062249, 0.734969, 0, 1.0};
Point(51) = {0.069866, 0.735184, 0, 1.0};
Point(52) = {0.077124, 0.735377, 0, 1.0};
Point(53) = {0.083933, 0.735560, 0, 1.0};
Point(54) = {0.090199, 0.735751, 0, 1.0};
Point(55) = {0.095834, 0.735949, 0, 1.0};
Point(56) = {0.100754, 0.736141, 0, 1.0};
Point(57) = {0.104880, 0.736301, 0, 1.0};
Point(58) = {0.108161, 0.736408, 0, 1.0};
Point(59) = {0.110541, 0.736462, 0, 1.0};
Point(60) = {0.111985, 0.736479, 0, 1.0};
Point(61) = {0.112469, 0.736482, 0, 1.0};
Point(62) = {-0.112470, -0.736492, 0, 1.0};
Point(63) = {-0.111991, -0.736566, 0, 1.0};
Point(64) = {-0.110566, -0.736811, 0, 1.0};
Point(65) = {-0.108230, -0.737230, 0, 1.0};
Point(66) = {-0.105040, -0.737832, 0, 1.0};
Point(67) = {-0.101074, -0.738609, 0, 1.0};
Point(68) = {-0.096397, -0.739543, 0, 1.0};
Point(69) = {-0.091095, -0.740598, 0, 1.0};
Point(70) = {-0.085247, -0.741726, 0, 1.0};
Point(71) = {-0.078933, -0.742882, 0, 1.0};
Point(72) = {-0.072224, -0.744030, 0, 1.0};
Point(73) = {-0.065201, -0.745139, 0, 1.0};
Point(74) = {-0.057947, -0.746188, 0, 1.0};
Point(75) = {-0.050528, -0.747160, 0, 1.0};
Point(76) = {-0.043022, -0.748028, 0, 1.0};
Point(77) = {-0.035489, -0.748768, 0, 1.0};
Point(78) = {-0.027990, -0.749350, 0, 1.0};
Point(79) = {-0.020594, -0.749752, 0, 1.0};
Point(80) = {-0.013379, -0.749968, 0, 1.0};
Point(81) = {-0.006418, -0.750000, 0, 1.0};
Point(82) = {0.000210, -0.749859, 0, 1.0};
Point(83) = {0.006443, -0.749605, 0, 1.0};
Point(84) = {0.012214, -0.749250, 0, 1.0};
Point(85) = {0.017484, -0.748757, 0, 1.0};
Point(86) = {0.022216, -0.748086, 0, 1.0};
Point(87) = {0.026366, -0.747194, 0, 1.0};
Point(88) = {0.029889, -0.746065, 0, 1.0};
Point(89) = {0.032759, -0.744677, 0, 1.0};
Point(90) = {0.034956, -0.743135, 0, 1.0};
Point(91) = {0.036472, -0.741631, 0, 1.0};
Point(92) = {0.037308, -0.740339, 0, 1.0};
Point(93) = {0.037503, -0.739379, 0, 1.0};
Point(94) = {0.036791, -0.738347, 0, 1.0};
Point(95) = {0.035258, -0.737442, 0, 1.0};
Point(96) = {0.033064, -0.736583, 0, 1.0};
Point(97) = {0.030245, -0.735768, 0, 1.0};
Point(98) = {0.026787, -0.735022, 0, 1.0};
Point(99) = {0.022677, -0.734389, 0, 1.0};
Point(100) = {0.017903, -0.733904, 0, 1.0};
Point(101) = {0.012470, -0.733590, 0, 1.0};
Point(102) = {0.006431, -0.733442, 0, 1.0};
Point(103) = {-0.000134, -0.733433, 0, 1.0};
Point(104) = {-0.007148, -0.733516, 0, 1.0};
Point(105) = {-0.014540, -0.733656, 0, 1.0};
Point(106) = {-0.022231, -0.733826, 0, 1.0};
Point(107) = {-0.030154, -0.734022, 0, 1.0};
Point(108) = {-0.038216, -0.734243, 0, 1.0};
Point(109) = {-0.046323, -0.734484, 0, 1.0};
Point(110) = {-0.054371, -0.734732, 0, 1.0};
Point(111) = {-0.062249, -0.734969, 0, 1.0};
Point(112) = {-0.069866, -0.735184, 0, 1.0};
Point(113) = {-0.077124, -0.735377, 0, 1.0};
Point(114) = {-0.083933, -0.735560, 0, 1.0};
Point(115) = {-0.090199, -0.735751, 0, 1.0};
Point(116) = {-0.095834, -0.735949, 0, 1.0};
Point(117) = {-0.100754, -0.736141, 0, 1.0};
Point(118) = {-0.104880, -0.736301, 0, 1.0};
Point(119) = {-0.108161, -0.736408, 0, 1.0};
Point(120) = {-0.110541, -0.736462, 0, 1.0};
Point(121) = {-0.111985, -0.736479, 0, 1.0};
Point(122) = {-0.112469, -0.736482, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
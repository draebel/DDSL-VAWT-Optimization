SetFactory("OpenCASCADE");

Point(1) = {0.149959, 0.731990, 0, 1.0};
Point(2) = {0.149321, 0.732088, 0, 1.0};
Point(3) = {0.147422, 0.732415, 0, 1.0};
Point(4) = {0.144306, 0.732974, 0, 1.0};
Point(5) = {0.140053, 0.733775, 0, 1.0};
Point(6) = {0.134765, 0.734812, 0, 1.0};
Point(7) = {0.128529, 0.736058, 0, 1.0};
Point(8) = {0.121460, 0.737464, 0, 1.0};
Point(9) = {0.113663, 0.738968, 0, 1.0};
Point(10) = {0.105244, 0.740510, 0, 1.0};
Point(11) = {0.096299, 0.742040, 0, 1.0};
Point(12) = {0.086935, 0.743519, 0, 1.0};
Point(13) = {0.077263, 0.744918, 0, 1.0};
Point(14) = {0.067371, 0.746213, 0, 1.0};
Point(15) = {0.057362, 0.747371, 0, 1.0};
Point(16) = {0.047318, 0.748357, 0, 1.0};
Point(17) = {0.037320, 0.749133, 0, 1.0};
Point(18) = {0.027459, 0.749669, 0, 1.0};
Point(19) = {0.017838, 0.749957, 0, 1.0};
Point(20) = {0.008557, 0.750000, 0, 1.0};
Point(21) = {-0.000280, 0.749812, 0, 1.0};
Point(22) = {-0.008591, 0.749473, 0, 1.0};
Point(23) = {-0.016286, 0.749000, 0, 1.0};
Point(24) = {-0.023312, 0.748343, 0, 1.0};
Point(25) = {-0.029622, 0.747448, 0, 1.0};
Point(26) = {-0.035155, 0.746259, 0, 1.0};
Point(27) = {-0.039852, 0.744754, 0, 1.0};
Point(28) = {-0.043678, 0.742902, 0, 1.0};
Point(29) = {-0.046608, 0.740847, 0, 1.0};
Point(30) = {-0.048629, 0.738841, 0, 1.0};
Point(31) = {-0.049744, 0.737119, 0, 1.0};
Point(32) = {-0.050004, 0.735838, 0, 1.0};
Point(33) = {-0.049055, 0.734463, 0, 1.0};
Point(34) = {-0.047011, 0.733255, 0, 1.0};
Point(35) = {-0.044085, 0.732110, 0, 1.0};
Point(36) = {-0.040327, 0.731024, 0, 1.0};
Point(37) = {-0.035716, 0.730029, 0, 1.0};
Point(38) = {-0.030236, 0.729185, 0, 1.0};
Point(39) = {-0.023871, 0.728539, 0, 1.0};
Point(40) = {-0.016626, 0.728121, 0, 1.0};
Point(41) = {-0.008575, 0.727922, 0, 1.0};
Point(42) = {0.000179, 0.727910, 0, 1.0};
Point(43) = {0.009531, 0.728022, 0, 1.0};
Point(44) = {0.019387, 0.728208, 0, 1.0};
Point(45) = {0.029642, 0.728435, 0, 1.0};
Point(46) = {0.040205, 0.728697, 0, 1.0};
Point(47) = {0.050955, 0.728990, 0, 1.0};
Point(48) = {0.061764, 0.729313, 0, 1.0};
Point(49) = {0.072495, 0.729643, 0, 1.0};
Point(50) = {0.082999, 0.729959, 0, 1.0};
Point(51) = {0.093155, 0.730245, 0, 1.0};
Point(52) = {0.102832, 0.730502, 0, 1.0};
Point(53) = {0.111911, 0.730747, 0, 1.0};
Point(54) = {0.120266, 0.731001, 0, 1.0};
Point(55) = {0.127778, 0.731266, 0, 1.0};
Point(56) = {0.134339, 0.731522, 0, 1.0};
Point(57) = {0.139840, 0.731735, 0, 1.0};
Point(58) = {0.144214, 0.731877, 0, 1.0};
Point(59) = {0.147388, 0.731949, 0, 1.0};
Point(60) = {0.149313, 0.731973, 0, 1.0};
Point(61) = {0.149959, 0.731976, 0, 1.0};
Point(62) = {-0.149959, -0.731990, 0, 1.0};
Point(63) = {-0.149321, -0.732088, 0, 1.0};
Point(64) = {-0.147422, -0.732415, 0, 1.0};
Point(65) = {-0.144306, -0.732974, 0, 1.0};
Point(66) = {-0.140053, -0.733775, 0, 1.0};
Point(67) = {-0.134765, -0.734812, 0, 1.0};
Point(68) = {-0.128529, -0.736058, 0, 1.0};
Point(69) = {-0.121460, -0.737464, 0, 1.0};
Point(70) = {-0.113663, -0.738968, 0, 1.0};
Point(71) = {-0.105244, -0.740510, 0, 1.0};
Point(72) = {-0.096299, -0.742040, 0, 1.0};
Point(73) = {-0.086935, -0.743519, 0, 1.0};
Point(74) = {-0.077263, -0.744918, 0, 1.0};
Point(75) = {-0.067371, -0.746213, 0, 1.0};
Point(76) = {-0.057362, -0.747371, 0, 1.0};
Point(77) = {-0.047318, -0.748357, 0, 1.0};
Point(78) = {-0.037320, -0.749133, 0, 1.0};
Point(79) = {-0.027459, -0.749669, 0, 1.0};
Point(80) = {-0.017838, -0.749957, 0, 1.0};
Point(81) = {-0.008557, -0.750000, 0, 1.0};
Point(82) = {0.000280, -0.749812, 0, 1.0};
Point(83) = {0.008591, -0.749473, 0, 1.0};
Point(84) = {0.016286, -0.749000, 0, 1.0};
Point(85) = {0.023312, -0.748343, 0, 1.0};
Point(86) = {0.029622, -0.747448, 0, 1.0};
Point(87) = {0.035155, -0.746259, 0, 1.0};
Point(88) = {0.039852, -0.744754, 0, 1.0};
Point(89) = {0.043678, -0.742902, 0, 1.0};
Point(90) = {0.046608, -0.740847, 0, 1.0};
Point(91) = {0.048629, -0.738841, 0, 1.0};
Point(92) = {0.049744, -0.737119, 0, 1.0};
Point(93) = {0.050004, -0.735838, 0, 1.0};
Point(94) = {0.049055, -0.734463, 0, 1.0};
Point(95) = {0.047011, -0.733255, 0, 1.0};
Point(96) = {0.044085, -0.732110, 0, 1.0};
Point(97) = {0.040327, -0.731024, 0, 1.0};
Point(98) = {0.035716, -0.730029, 0, 1.0};
Point(99) = {0.030236, -0.729185, 0, 1.0};
Point(100) = {0.023871, -0.728539, 0, 1.0};
Point(101) = {0.016626, -0.728121, 0, 1.0};
Point(102) = {0.008575, -0.727922, 0, 1.0};
Point(103) = {-0.000179, -0.727910, 0, 1.0};
Point(104) = {-0.009531, -0.728022, 0, 1.0};
Point(105) = {-0.019387, -0.728208, 0, 1.0};
Point(106) = {-0.029642, -0.728435, 0, 1.0};
Point(107) = {-0.040205, -0.728697, 0, 1.0};
Point(108) = {-0.050955, -0.728990, 0, 1.0};
Point(109) = {-0.061764, -0.729313, 0, 1.0};
Point(110) = {-0.072495, -0.729643, 0, 1.0};
Point(111) = {-0.082999, -0.729959, 0, 1.0};
Point(112) = {-0.093155, -0.730245, 0, 1.0};
Point(113) = {-0.102832, -0.730502, 0, 1.0};
Point(114) = {-0.111911, -0.730747, 0, 1.0};
Point(115) = {-0.120266, -0.731001, 0, 1.0};
Point(116) = {-0.127778, -0.731266, 0, 1.0};
Point(117) = {-0.134339, -0.731522, 0, 1.0};
Point(118) = {-0.139840, -0.731735, 0, 1.0};
Point(119) = {-0.144214, -0.731877, 0, 1.0};
Point(120) = {-0.147388, -0.731949, 0, 1.0};
Point(121) = {-0.149313, -0.731973, 0, 1.0};
Point(122) = {-0.149959, -0.731976, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:103};
Spline(7) = {103:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
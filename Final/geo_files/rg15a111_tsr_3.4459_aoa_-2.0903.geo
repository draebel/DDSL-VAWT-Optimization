SetFactory("OpenCASCADE");

Point(1) = {0.149867, 0.740060, 0, 1.0};
Point(2) = {0.149207, 0.740154, 0, 1.0};
Point(3) = {0.147306, 0.740465, 0, 1.0};
Point(4) = {0.144313, 0.740988, 0, 1.0};
Point(5) = {0.140313, 0.741625, 0, 1.0};
Point(6) = {0.135323, 0.742321, 0, 1.0};
Point(7) = {0.129385, 0.743087, 0, 1.0};
Point(8) = {0.122588, 0.743916, 0, 1.0};
Point(9) = {0.115019, 0.744784, 0, 1.0};
Point(10) = {0.106774, 0.745672, 0, 1.0};
Point(11) = {0.097952, 0.746549, 0, 1.0};
Point(12) = {0.088655, 0.747391, 0, 1.0};
Point(13) = {0.078990, 0.748163, 0, 1.0};
Point(14) = {0.069067, 0.748835, 0, 1.0};
Point(15) = {0.058993, 0.749378, 0, 1.0};
Point(16) = {0.048870, 0.749763, 0, 1.0};
Point(17) = {0.038797, 0.749974, 0, 1.0};
Point(18) = {0.028880, 0.750000, 0, 1.0};
Point(19) = {0.019218, 0.749825, 0, 1.0};
Point(20) = {0.009904, 0.749443, 0, 1.0};
Point(21) = {0.001025, 0.748847, 0, 1.0};
Point(22) = {-0.007339, 0.748040, 0, 1.0};
Point(23) = {-0.015109, 0.747024, 0, 1.0};
Point(24) = {-0.022223, 0.745811, 0, 1.0};
Point(25) = {-0.028621, 0.744423, 0, 1.0};
Point(26) = {-0.034248, 0.742881, 0, 1.0};
Point(27) = {-0.039063, 0.741216, 0, 1.0};
Point(28) = {-0.043032, 0.739468, 0, 1.0};
Point(29) = {-0.046120, 0.737668, 0, 1.0};
Point(30) = {-0.048337, 0.735894, 0, 1.0};
Point(31) = {-0.049624, 0.734208, 0, 1.0};
Point(32) = {-0.050000, 0.732765, 0, 1.0};
Point(33) = {-0.049162, 0.731517, 0, 1.0};
Point(34) = {-0.047273, 0.730427, 0, 1.0};
Point(35) = {-0.044877, 0.729532, 0, 1.0};
Point(36) = {-0.041534, 0.728706, 0, 1.0};
Point(37) = {-0.037461, 0.728042, 0, 1.0};
Point(38) = {-0.032581, 0.727517, 0, 1.0};
Point(39) = {-0.026958, 0.727148, 0, 1.0};
Point(40) = {-0.020614, 0.726929, 0, 1.0};
Point(41) = {-0.013598, 0.726859, 0, 1.0};
Point(42) = {-0.005954, 0.726932, 0, 1.0};
Point(43) = {0.002260, 0.727142, 0, 1.0};
Point(44) = {0.010983, 0.727478, 0, 1.0};
Point(45) = {0.020141, 0.727937, 0, 1.0};
Point(46) = {0.029656, 0.728508, 0, 1.0};
Point(47) = {0.039442, 0.729191, 0, 1.0};
Point(48) = {0.049406, 0.729979, 0, 1.0};
Point(49) = {0.059473, 0.730893, 0, 1.0};
Point(50) = {0.069519, 0.731968, 0, 1.0};
Point(51) = {0.079364, 0.733158, 0, 1.0};
Point(52) = {0.088918, 0.734363, 0, 1.0};
Point(53) = {0.098108, 0.735519, 0, 1.0};
Point(54) = {0.106839, 0.736581, 0, 1.0};
Point(55) = {0.115014, 0.737517, 0, 1.0};
Point(56) = {0.122533, 0.738306, 0, 1.0};
Point(57) = {0.129306, 0.738940, 0, 1.0};
Point(58) = {0.135237, 0.739414, 0, 1.0};
Point(59) = {0.140230, 0.739745, 0, 1.0};
Point(60) = {0.144249, 0.739951, 0, 1.0};
Point(61) = {0.147275, 0.740054, 0, 1.0};
Point(62) = {0.149200, 0.740070, 0, 1.0};
Point(63) = {-0.149867, -0.740060, 0, 1.0};
Point(64) = {-0.149207, -0.740154, 0, 1.0};
Point(65) = {-0.147306, -0.740465, 0, 1.0};
Point(66) = {-0.144313, -0.740988, 0, 1.0};
Point(67) = {-0.140313, -0.741625, 0, 1.0};
Point(68) = {-0.135323, -0.742321, 0, 1.0};
Point(69) = {-0.129385, -0.743087, 0, 1.0};
Point(70) = {-0.122588, -0.743916, 0, 1.0};
Point(71) = {-0.115019, -0.744784, 0, 1.0};
Point(72) = {-0.106774, -0.745672, 0, 1.0};
Point(73) = {-0.097952, -0.746549, 0, 1.0};
Point(74) = {-0.088655, -0.747391, 0, 1.0};
Point(75) = {-0.078990, -0.748163, 0, 1.0};
Point(76) = {-0.069067, -0.748835, 0, 1.0};
Point(77) = {-0.058993, -0.749378, 0, 1.0};
Point(78) = {-0.048870, -0.749763, 0, 1.0};
Point(79) = {-0.038797, -0.749974, 0, 1.0};
Point(80) = {-0.028880, -0.750000, 0, 1.0};
Point(81) = {-0.019218, -0.749825, 0, 1.0};
Point(82) = {-0.009904, -0.749443, 0, 1.0};
Point(83) = {-0.001025, -0.748847, 0, 1.0};
Point(84) = {0.007339, -0.748040, 0, 1.0};
Point(85) = {0.015109, -0.747024, 0, 1.0};
Point(86) = {0.022223, -0.745811, 0, 1.0};
Point(87) = {0.028621, -0.744423, 0, 1.0};
Point(88) = {0.034248, -0.742881, 0, 1.0};
Point(89) = {0.039063, -0.741216, 0, 1.0};
Point(90) = {0.043032, -0.739468, 0, 1.0};
Point(91) = {0.046120, -0.737668, 0, 1.0};
Point(92) = {0.048337, -0.735894, 0, 1.0};
Point(93) = {0.049624, -0.734208, 0, 1.0};
Point(94) = {0.050000, -0.732765, 0, 1.0};
Point(95) = {0.049162, -0.731517, 0, 1.0};
Point(96) = {0.047273, -0.730427, 0, 1.0};
Point(97) = {0.044877, -0.729532, 0, 1.0};
Point(98) = {0.041534, -0.728706, 0, 1.0};
Point(99) = {0.037461, -0.728042, 0, 1.0};
Point(100) = {0.032581, -0.727517, 0, 1.0};
Point(101) = {0.026958, -0.727148, 0, 1.0};
Point(102) = {0.020614, -0.726929, 0, 1.0};
Point(103) = {0.013598, -0.726859, 0, 1.0};
Point(104) = {0.005954, -0.726932, 0, 1.0};
Point(105) = {-0.002260, -0.727142, 0, 1.0};
Point(106) = {-0.010983, -0.727478, 0, 1.0};
Point(107) = {-0.020141, -0.727937, 0, 1.0};
Point(108) = {-0.029656, -0.728508, 0, 1.0};
Point(109) = {-0.039442, -0.729191, 0, 1.0};
Point(110) = {-0.049406, -0.729979, 0, 1.0};
Point(111) = {-0.059473, -0.730893, 0, 1.0};
Point(112) = {-0.069519, -0.731968, 0, 1.0};
Point(113) = {-0.079364, -0.733158, 0, 1.0};
Point(114) = {-0.088918, -0.734363, 0, 1.0};
Point(115) = {-0.098108, -0.735519, 0, 1.0};
Point(116) = {-0.106839, -0.736581, 0, 1.0};
Point(117) = {-0.115014, -0.737517, 0, 1.0};
Point(118) = {-0.122533, -0.738306, 0, 1.0};
Point(119) = {-0.129306, -0.738940, 0, 1.0};
Point(120) = {-0.135237, -0.739414, 0, 1.0};
Point(121) = {-0.140230, -0.739745, 0, 1.0};
Point(122) = {-0.144249, -0.739951, 0, 1.0};
Point(123) = {-0.147275, -0.740054, 0, 1.0};
Point(124) = {-0.149200, -0.740070, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:83};
Spline(6) = {83:106};
Spline(7) = {106:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
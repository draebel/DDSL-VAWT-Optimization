SetFactory("OpenCASCADE");

Point(1) = {0.074950, 0.742545, 0, 1.0};
Point(2) = {0.074455, 0.742616, 0, 1.0};
Point(3) = {0.073030, 0.742849, 0, 1.0};
Point(4) = {0.070785, 0.743241, 0, 1.0};
Point(5) = {0.067785, 0.743719, 0, 1.0};
Point(6) = {0.064042, 0.744241, 0, 1.0};
Point(7) = {0.059589, 0.744815, 0, 1.0};
Point(8) = {0.054491, 0.745437, 0, 1.0};
Point(9) = {0.048814, 0.746088, 0, 1.0};
Point(10) = {0.042630, 0.746754, 0, 1.0};
Point(11) = {0.036014, 0.747412, 0, 1.0};
Point(12) = {0.029041, 0.748043, 0, 1.0};
Point(13) = {0.021793, 0.748622, 0, 1.0};
Point(14) = {0.014350, 0.749126, 0, 1.0};
Point(15) = {0.006794, 0.749533, 0, 1.0};
Point(16) = {-0.000798, 0.749822, 0, 1.0};
Point(17) = {-0.008352, 0.749980, 0, 1.0};
Point(18) = {-0.015790, 0.750000, 0, 1.0};
Point(19) = {-0.023037, 0.749869, 0, 1.0};
Point(20) = {-0.030022, 0.749583, 0, 1.0};
Point(21) = {-0.036681, 0.749135, 0, 1.0};
Point(22) = {-0.042954, 0.748530, 0, 1.0};
Point(23) = {-0.048782, 0.747768, 0, 1.0};
Point(24) = {-0.054118, 0.746858, 0, 1.0};
Point(25) = {-0.058916, 0.745817, 0, 1.0};
Point(26) = {-0.063136, 0.744661, 0, 1.0};
Point(27) = {-0.066747, 0.743412, 0, 1.0};
Point(28) = {-0.069724, 0.742101, 0, 1.0};
Point(29) = {-0.072040, 0.740751, 0, 1.0};
Point(30) = {-0.073703, 0.739421, 0, 1.0};
Point(31) = {-0.074668, 0.738156, 0, 1.0};
Point(32) = {-0.074950, 0.737074, 0, 1.0};
Point(33) = {-0.074322, 0.736138, 0, 1.0};
Point(34) = {-0.072905, 0.735321, 0, 1.0};
Point(35) = {-0.071108, 0.734649, 0, 1.0};
Point(36) = {-0.068601, 0.734029, 0, 1.0};
Point(37) = {-0.065546, 0.733531, 0, 1.0};
Point(38) = {-0.061886, 0.733138, 0, 1.0};
Point(39) = {-0.057668, 0.732861, 0, 1.0};
Point(40) = {-0.052910, 0.732697, 0, 1.0};
Point(41) = {-0.047649, 0.732644, 0, 1.0};
Point(42) = {-0.041916, 0.732699, 0, 1.0};
Point(43) = {-0.035755, 0.732856, 0, 1.0};
Point(44) = {-0.029213, 0.733109, 0, 1.0};
Point(45) = {-0.022344, 0.733452, 0, 1.0};
Point(46) = {-0.015208, 0.733881, 0, 1.0};
Point(47) = {-0.007869, 0.734394, 0, 1.0};
Point(48) = {-0.000396, 0.734985, 0, 1.0};
Point(49) = {0.007155, 0.735670, 0, 1.0};
Point(50) = {0.014689, 0.736476, 0, 1.0};
Point(51) = {0.022073, 0.737369, 0, 1.0};
Point(52) = {0.029239, 0.738273, 0, 1.0};
Point(53) = {0.036131, 0.739140, 0, 1.0};
Point(54) = {0.042679, 0.739935, 0, 1.0};
Point(55) = {0.048811, 0.740638, 0, 1.0};
Point(56) = {0.054449, 0.741230, 0, 1.0};
Point(57) = {0.059529, 0.741705, 0, 1.0};
Point(58) = {0.063977, 0.742061, 0, 1.0};
Point(59) = {0.067722, 0.742308, 0, 1.0};
Point(60) = {0.070737, 0.742464, 0, 1.0};
Point(61) = {0.073006, 0.742540, 0, 1.0};
Point(62) = {0.074450, 0.742553, 0, 1.0};
Point(63) = {-0.074950, -0.742545, 0, 1.0};
Point(64) = {-0.074455, -0.742616, 0, 1.0};
Point(65) = {-0.073030, -0.742849, 0, 1.0};
Point(66) = {-0.070785, -0.743241, 0, 1.0};
Point(67) = {-0.067785, -0.743719, 0, 1.0};
Point(68) = {-0.064042, -0.744241, 0, 1.0};
Point(69) = {-0.059589, -0.744815, 0, 1.0};
Point(70) = {-0.054491, -0.745437, 0, 1.0};
Point(71) = {-0.048814, -0.746088, 0, 1.0};
Point(72) = {-0.042630, -0.746754, 0, 1.0};
Point(73) = {-0.036014, -0.747412, 0, 1.0};
Point(74) = {-0.029041, -0.748043, 0, 1.0};
Point(75) = {-0.021793, -0.748622, 0, 1.0};
Point(76) = {-0.014350, -0.749126, 0, 1.0};
Point(77) = {-0.006794, -0.749533, 0, 1.0};
Point(78) = {0.000798, -0.749822, 0, 1.0};
Point(79) = {0.008352, -0.749980, 0, 1.0};
Point(80) = {0.015790, -0.750000, 0, 1.0};
Point(81) = {0.023037, -0.749869, 0, 1.0};
Point(82) = {0.030022, -0.749583, 0, 1.0};
Point(83) = {0.036681, -0.749135, 0, 1.0};
Point(84) = {0.042954, -0.748530, 0, 1.0};
Point(85) = {0.048782, -0.747768, 0, 1.0};
Point(86) = {0.054118, -0.746858, 0, 1.0};
Point(87) = {0.058916, -0.745817, 0, 1.0};
Point(88) = {0.063136, -0.744661, 0, 1.0};
Point(89) = {0.066747, -0.743412, 0, 1.0};
Point(90) = {0.069724, -0.742101, 0, 1.0};
Point(91) = {0.072040, -0.740751, 0, 1.0};
Point(92) = {0.073703, -0.739421, 0, 1.0};
Point(93) = {0.074668, -0.738156, 0, 1.0};
Point(94) = {0.074950, -0.737074, 0, 1.0};
Point(95) = {0.074322, -0.736138, 0, 1.0};
Point(96) = {0.072905, -0.735321, 0, 1.0};
Point(97) = {0.071108, -0.734649, 0, 1.0};
Point(98) = {0.068601, -0.734029, 0, 1.0};
Point(99) = {0.065546, -0.733531, 0, 1.0};
Point(100) = {0.061886, -0.733138, 0, 1.0};
Point(101) = {0.057668, -0.732861, 0, 1.0};
Point(102) = {0.052910, -0.732697, 0, 1.0};
Point(103) = {0.047649, -0.732644, 0, 1.0};
Point(104) = {0.041916, -0.732699, 0, 1.0};
Point(105) = {0.035755, -0.732856, 0, 1.0};
Point(106) = {0.029213, -0.733109, 0, 1.0};
Point(107) = {0.022344, -0.733452, 0, 1.0};
Point(108) = {0.015208, -0.733881, 0, 1.0};
Point(109) = {0.007869, -0.734394, 0, 1.0};
Point(110) = {0.000396, -0.734985, 0, 1.0};
Point(111) = {-0.007155, -0.735670, 0, 1.0};
Point(112) = {-0.014689, -0.736476, 0, 1.0};
Point(113) = {-0.022073, -0.737369, 0, 1.0};
Point(114) = {-0.029239, -0.738273, 0, 1.0};
Point(115) = {-0.036131, -0.739140, 0, 1.0};
Point(116) = {-0.042679, -0.739935, 0, 1.0};
Point(117) = {-0.048811, -0.740638, 0, 1.0};
Point(118) = {-0.054449, -0.741230, 0, 1.0};
Point(119) = {-0.059529, -0.741705, 0, 1.0};
Point(120) = {-0.063977, -0.742061, 0, 1.0};
Point(121) = {-0.067722, -0.742308, 0, 1.0};
Point(122) = {-0.070737, -0.742464, 0, 1.0};
Point(123) = {-0.073006, -0.742540, 0, 1.0};
Point(124) = {-0.074450, -0.742553, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:83};
Spline(6) = {83:106};
Spline(7) = {106:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
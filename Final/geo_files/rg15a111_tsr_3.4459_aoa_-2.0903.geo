SetFactory("OpenCASCADE");

Point(1) = {0.112400, 0.742545, 0, 1.0};
Point(2) = {0.111905, 0.742616, 0, 1.0};
Point(3) = {0.110480, 0.742849, 0, 1.0};
Point(4) = {0.108235, 0.743241, 0, 1.0};
Point(5) = {0.105235, 0.743719, 0, 1.0};
Point(6) = {0.101492, 0.744241, 0, 1.0};
Point(7) = {0.097039, 0.744815, 0, 1.0};
Point(8) = {0.091941, 0.745437, 0, 1.0};
Point(9) = {0.086265, 0.746088, 0, 1.0};
Point(10) = {0.080080, 0.746754, 0, 1.0};
Point(11) = {0.073464, 0.747412, 0, 1.0};
Point(12) = {0.066491, 0.748043, 0, 1.0};
Point(13) = {0.059243, 0.748622, 0, 1.0};
Point(14) = {0.051800, 0.749126, 0, 1.0};
Point(15) = {0.044244, 0.749533, 0, 1.0};
Point(16) = {0.036652, 0.749822, 0, 1.0};
Point(17) = {0.029098, 0.749980, 0, 1.0};
Point(18) = {0.021660, 0.750000, 0, 1.0};
Point(19) = {0.014413, 0.749869, 0, 1.0};
Point(20) = {0.007428, 0.749583, 0, 1.0};
Point(21) = {0.000769, 0.749135, 0, 1.0};
Point(22) = {-0.005504, 0.748530, 0, 1.0};
Point(23) = {-0.011332, 0.747768, 0, 1.0};
Point(24) = {-0.016668, 0.746858, 0, 1.0};
Point(25) = {-0.021466, 0.745817, 0, 1.0};
Point(26) = {-0.025686, 0.744661, 0, 1.0};
Point(27) = {-0.029297, 0.743412, 0, 1.0};
Point(28) = {-0.032274, 0.742101, 0, 1.0};
Point(29) = {-0.034590, 0.740751, 0, 1.0};
Point(30) = {-0.036253, 0.739421, 0, 1.0};
Point(31) = {-0.037218, 0.738156, 0, 1.0};
Point(32) = {-0.037500, 0.737074, 0, 1.0};
Point(33) = {-0.036871, 0.736138, 0, 1.0};
Point(34) = {-0.035455, 0.735321, 0, 1.0};
Point(35) = {-0.033657, 0.734649, 0, 1.0};
Point(36) = {-0.031151, 0.734029, 0, 1.0};
Point(37) = {-0.028096, 0.733531, 0, 1.0};
Point(38) = {-0.024436, 0.733138, 0, 1.0};
Point(39) = {-0.020218, 0.732861, 0, 1.0};
Point(40) = {-0.015460, 0.732697, 0, 1.0};
Point(41) = {-0.010199, 0.732644, 0, 1.0};
Point(42) = {-0.004465, 0.732699, 0, 1.0};
Point(43) = {0.001695, 0.732856, 0, 1.0};
Point(44) = {0.008238, 0.733109, 0, 1.0};
Point(45) = {0.015106, 0.733452, 0, 1.0};
Point(46) = {0.022242, 0.733881, 0, 1.0};
Point(47) = {0.029581, 0.734394, 0, 1.0};
Point(48) = {0.037054, 0.734985, 0, 1.0};
Point(49) = {0.044605, 0.735670, 0, 1.0};
Point(50) = {0.052139, 0.736476, 0, 1.0};
Point(51) = {0.059523, 0.737369, 0, 1.0};
Point(52) = {0.066689, 0.738273, 0, 1.0};
Point(53) = {0.073581, 0.739140, 0, 1.0};
Point(54) = {0.080129, 0.739935, 0, 1.0};
Point(55) = {0.086261, 0.740638, 0, 1.0};
Point(56) = {0.091900, 0.741230, 0, 1.0};
Point(57) = {0.096980, 0.741705, 0, 1.0};
Point(58) = {0.101428, 0.742061, 0, 1.0};
Point(59) = {0.105173, 0.742308, 0, 1.0};
Point(60) = {0.108187, 0.742464, 0, 1.0};
Point(61) = {0.110457, 0.742540, 0, 1.0};
Point(62) = {0.111900, 0.742553, 0, 1.0};
Point(63) = {-0.112400, -0.742545, 0, 1.0};
Point(64) = {-0.111905, -0.742616, 0, 1.0};
Point(65) = {-0.110480, -0.742849, 0, 1.0};
Point(66) = {-0.108235, -0.743241, 0, 1.0};
Point(67) = {-0.105235, -0.743719, 0, 1.0};
Point(68) = {-0.101492, -0.744241, 0, 1.0};
Point(69) = {-0.097039, -0.744815, 0, 1.0};
Point(70) = {-0.091941, -0.745437, 0, 1.0};
Point(71) = {-0.086265, -0.746088, 0, 1.0};
Point(72) = {-0.080080, -0.746754, 0, 1.0};
Point(73) = {-0.073464, -0.747412, 0, 1.0};
Point(74) = {-0.066491, -0.748043, 0, 1.0};
Point(75) = {-0.059243, -0.748622, 0, 1.0};
Point(76) = {-0.051800, -0.749126, 0, 1.0};
Point(77) = {-0.044244, -0.749533, 0, 1.0};
Point(78) = {-0.036652, -0.749822, 0, 1.0};
Point(79) = {-0.029098, -0.749980, 0, 1.0};
Point(80) = {-0.021660, -0.750000, 0, 1.0};
Point(81) = {-0.014413, -0.749869, 0, 1.0};
Point(82) = {-0.007428, -0.749583, 0, 1.0};
Point(83) = {-0.000769, -0.749135, 0, 1.0};
Point(84) = {0.005504, -0.748530, 0, 1.0};
Point(85) = {0.011332, -0.747768, 0, 1.0};
Point(86) = {0.016668, -0.746858, 0, 1.0};
Point(87) = {0.021466, -0.745817, 0, 1.0};
Point(88) = {0.025686, -0.744661, 0, 1.0};
Point(89) = {0.029297, -0.743412, 0, 1.0};
Point(90) = {0.032274, -0.742101, 0, 1.0};
Point(91) = {0.034590, -0.740751, 0, 1.0};
Point(92) = {0.036253, -0.739421, 0, 1.0};
Point(93) = {0.037218, -0.738156, 0, 1.0};
Point(94) = {0.037500, -0.737074, 0, 1.0};
Point(95) = {0.036871, -0.736138, 0, 1.0};
Point(96) = {0.035455, -0.735321, 0, 1.0};
Point(97) = {0.033657, -0.734649, 0, 1.0};
Point(98) = {0.031151, -0.734029, 0, 1.0};
Point(99) = {0.028096, -0.733531, 0, 1.0};
Point(100) = {0.024436, -0.733138, 0, 1.0};
Point(101) = {0.020218, -0.732861, 0, 1.0};
Point(102) = {0.015460, -0.732697, 0, 1.0};
Point(103) = {0.010199, -0.732644, 0, 1.0};
Point(104) = {0.004465, -0.732699, 0, 1.0};
Point(105) = {-0.001695, -0.732856, 0, 1.0};
Point(106) = {-0.008238, -0.733109, 0, 1.0};
Point(107) = {-0.015106, -0.733452, 0, 1.0};
Point(108) = {-0.022242, -0.733881, 0, 1.0};
Point(109) = {-0.029581, -0.734394, 0, 1.0};
Point(110) = {-0.037054, -0.734985, 0, 1.0};
Point(111) = {-0.044605, -0.735670, 0, 1.0};
Point(112) = {-0.052139, -0.736476, 0, 1.0};
Point(113) = {-0.059523, -0.737369, 0, 1.0};
Point(114) = {-0.066689, -0.738273, 0, 1.0};
Point(115) = {-0.073581, -0.739140, 0, 1.0};
Point(116) = {-0.080129, -0.739935, 0, 1.0};
Point(117) = {-0.086261, -0.740638, 0, 1.0};
Point(118) = {-0.091900, -0.741230, 0, 1.0};
Point(119) = {-0.096980, -0.741705, 0, 1.0};
Point(120) = {-0.101428, -0.742061, 0, 1.0};
Point(121) = {-0.105173, -0.742308, 0, 1.0};
Point(122) = {-0.108187, -0.742464, 0, 1.0};
Point(123) = {-0.110457, -0.742540, 0, 1.0};
Point(124) = {-0.111900, -0.742553, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:83};
Spline(6) = {83:106};
Spline(7) = {106:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
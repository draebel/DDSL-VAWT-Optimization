SetFactory("OpenCASCADE");

Point(1) = {0.074933, 0.745030, 0, 1.0};
Point(2) = {0.074604, 0.745077, 0, 1.0};
Point(3) = {0.073653, 0.745233, 0, 1.0};
Point(4) = {0.072157, 0.745494, 0, 1.0};
Point(5) = {0.070157, 0.745812, 0, 1.0};
Point(6) = {0.067661, 0.746161, 0, 1.0};
Point(7) = {0.064692, 0.746544, 0, 1.0};
Point(8) = {0.061294, 0.746958, 0, 1.0};
Point(9) = {0.057510, 0.747392, 0, 1.0};
Point(10) = {0.053387, 0.747836, 0, 1.0};
Point(11) = {0.048976, 0.748275, 0, 1.0};
Point(12) = {0.044327, 0.748695, 0, 1.0};
Point(13) = {0.039495, 0.749081, 0, 1.0};
Point(14) = {0.034534, 0.749418, 0, 1.0};
Point(15) = {0.029496, 0.749689, 0, 1.0};
Point(16) = {0.024435, 0.749881, 0, 1.0};
Point(17) = {0.019399, 0.749987, 0, 1.0};
Point(18) = {0.014440, 0.750000, 0, 1.0};
Point(19) = {0.009609, 0.749913, 0, 1.0};
Point(20) = {0.004952, 0.749722, 0, 1.0};
Point(21) = {0.000513, 0.749424, 0, 1.0};
Point(22) = {-0.003669, 0.749020, 0, 1.0};
Point(23) = {-0.007554, 0.748512, 0, 1.0};
Point(24) = {-0.011112, 0.747906, 0, 1.0};
Point(25) = {-0.014310, 0.747211, 0, 1.0};
Point(26) = {-0.017124, 0.746440, 0, 1.0};
Point(27) = {-0.019531, 0.745608, 0, 1.0};
Point(28) = {-0.021516, 0.744734, 0, 1.0};
Point(29) = {-0.023060, 0.743834, 0, 1.0};
Point(30) = {-0.024169, 0.742947, 0, 1.0};
Point(31) = {-0.024812, 0.742104, 0, 1.0};
Point(32) = {-0.025000, 0.741383, 0, 1.0};
Point(33) = {-0.024581, 0.740759, 0, 1.0};
Point(34) = {-0.023636, 0.740214, 0, 1.0};
Point(35) = {-0.022438, 0.739766, 0, 1.0};
Point(36) = {-0.020767, 0.739353, 0, 1.0};
Point(37) = {-0.018731, 0.739021, 0, 1.0};
Point(38) = {-0.016290, 0.738759, 0, 1.0};
Point(39) = {-0.013479, 0.738574, 0, 1.0};
Point(40) = {-0.010307, 0.738465, 0, 1.0};
Point(41) = {-0.006799, 0.738430, 0, 1.0};
Point(42) = {-0.002977, 0.738466, 0, 1.0};
Point(43) = {0.001130, 0.738571, 0, 1.0};
Point(44) = {0.005492, 0.738739, 0, 1.0};
Point(45) = {0.010070, 0.738968, 0, 1.0};
Point(46) = {0.014828, 0.739254, 0, 1.0};
Point(47) = {0.019721, 0.739596, 0, 1.0};
Point(48) = {0.024703, 0.739990, 0, 1.0};
Point(49) = {0.029737, 0.740447, 0, 1.0};
Point(50) = {0.034759, 0.740984, 0, 1.0};
Point(51) = {0.039682, 0.741579, 0, 1.0};
Point(52) = {0.044459, 0.742182, 0, 1.0};
Point(53) = {0.049054, 0.742760, 0, 1.0};
Point(54) = {0.053420, 0.743290, 0, 1.0};
Point(55) = {0.057507, 0.743759, 0, 1.0};
Point(56) = {0.061266, 0.744153, 0, 1.0};
Point(57) = {0.064653, 0.744470, 0, 1.0};
Point(58) = {0.067618, 0.744707, 0, 1.0};
Point(59) = {0.070115, 0.744872, 0, 1.0};
Point(60) = {0.072125, 0.744976, 0, 1.0};
Point(61) = {0.073638, 0.745027, 0, 1.0};
Point(62) = {0.074600, 0.745035, 0, 1.0};
Point(63) = {-0.074933, -0.745030, 0, 1.0};
Point(64) = {-0.074604, -0.745077, 0, 1.0};
Point(65) = {-0.073653, -0.745233, 0, 1.0};
Point(66) = {-0.072157, -0.745494, 0, 1.0};
Point(67) = {-0.070157, -0.745812, 0, 1.0};
Point(68) = {-0.067661, -0.746161, 0, 1.0};
Point(69) = {-0.064692, -0.746544, 0, 1.0};
Point(70) = {-0.061294, -0.746958, 0, 1.0};
Point(71) = {-0.057510, -0.747392, 0, 1.0};
Point(72) = {-0.053387, -0.747836, 0, 1.0};
Point(73) = {-0.048976, -0.748275, 0, 1.0};
Point(74) = {-0.044327, -0.748695, 0, 1.0};
Point(75) = {-0.039495, -0.749081, 0, 1.0};
Point(76) = {-0.034534, -0.749418, 0, 1.0};
Point(77) = {-0.029496, -0.749689, 0, 1.0};
Point(78) = {-0.024435, -0.749881, 0, 1.0};
Point(79) = {-0.019399, -0.749987, 0, 1.0};
Point(80) = {-0.014440, -0.750000, 0, 1.0};
Point(81) = {-0.009609, -0.749913, 0, 1.0};
Point(82) = {-0.004952, -0.749722, 0, 1.0};
Point(83) = {-0.000513, -0.749424, 0, 1.0};
Point(84) = {0.003669, -0.749020, 0, 1.0};
Point(85) = {0.007554, -0.748512, 0, 1.0};
Point(86) = {0.011112, -0.747906, 0, 1.0};
Point(87) = {0.014310, -0.747211, 0, 1.0};
Point(88) = {0.017124, -0.746440, 0, 1.0};
Point(89) = {0.019531, -0.745608, 0, 1.0};
Point(90) = {0.021516, -0.744734, 0, 1.0};
Point(91) = {0.023060, -0.743834, 0, 1.0};
Point(92) = {0.024169, -0.742947, 0, 1.0};
Point(93) = {0.024812, -0.742104, 0, 1.0};
Point(94) = {0.025000, -0.741383, 0, 1.0};
Point(95) = {0.024581, -0.740759, 0, 1.0};
Point(96) = {0.023636, -0.740214, 0, 1.0};
Point(97) = {0.022438, -0.739766, 0, 1.0};
Point(98) = {0.020767, -0.739353, 0, 1.0};
Point(99) = {0.018731, -0.739021, 0, 1.0};
Point(100) = {0.016290, -0.738759, 0, 1.0};
Point(101) = {0.013479, -0.738574, 0, 1.0};
Point(102) = {0.010307, -0.738465, 0, 1.0};
Point(103) = {0.006799, -0.738430, 0, 1.0};
Point(104) = {0.002977, -0.738466, 0, 1.0};
Point(105) = {-0.001130, -0.738571, 0, 1.0};
Point(106) = {-0.005492, -0.738739, 0, 1.0};
Point(107) = {-0.010070, -0.738968, 0, 1.0};
Point(108) = {-0.014828, -0.739254, 0, 1.0};
Point(109) = {-0.019721, -0.739596, 0, 1.0};
Point(110) = {-0.024703, -0.739990, 0, 1.0};
Point(111) = {-0.029737, -0.740447, 0, 1.0};
Point(112) = {-0.034759, -0.740984, 0, 1.0};
Point(113) = {-0.039682, -0.741579, 0, 1.0};
Point(114) = {-0.044459, -0.742182, 0, 1.0};
Point(115) = {-0.049054, -0.742760, 0, 1.0};
Point(116) = {-0.053420, -0.743290, 0, 1.0};
Point(117) = {-0.057507, -0.743759, 0, 1.0};
Point(118) = {-0.061266, -0.744153, 0, 1.0};
Point(119) = {-0.064653, -0.744470, 0, 1.0};
Point(120) = {-0.067618, -0.744707, 0, 1.0};
Point(121) = {-0.070115, -0.744872, 0, 1.0};
Point(122) = {-0.072125, -0.744976, 0, 1.0};
Point(123) = {-0.073638, -0.745027, 0, 1.0};
Point(124) = {-0.074600, -0.745035, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:83};
Spline(6) = {83:106};
Spline(7) = {106:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
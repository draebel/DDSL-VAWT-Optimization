SetFactory("OpenCASCADE");

Point(1) = {0.073888, 0.746202, 0, 1.0};
Point(2) = {0.072104, 0.746491, 0, 1.0};
Point(3) = {0.068899, 0.747065, 0, 1.0};
Point(4) = {0.062535, 0.747904, 0, 1.0};
Point(5) = {0.056182, 0.748671, 0, 1.0};
Point(6) = {0.049880, 0.749098, 0, 1.0};
Point(7) = {0.043586, 0.749483, 0, 1.0};
Point(8) = {0.037296, 0.749836, 0, 1.0};
Point(9) = {0.031038, 0.749976, 0, 1.0};
Point(10) = {0.027916, 0.750000, 0, 1.0};
Point(11) = {0.025427, 0.749964, 0, 1.0};
Point(12) = {0.021700, 0.749866, 0, 1.0};
Point(13) = {0.018597, 0.749767, 0, 1.0};
Point(14) = {0.015498, 0.749640, 0, 1.0};
Point(15) = {0.012409, 0.749451, 0, 1.0};
Point(16) = {0.009324, 0.749230, 0, 1.0};
Point(17) = {0.006244, 0.748981, 0, 1.0};
Point(18) = {0.003164, 0.748731, 0, 1.0};
Point(19) = {0.000093, 0.748420, 0, 1.0};
Point(20) = {-0.002973, 0.748078, 0, 1.0};
Point(21) = {-0.006035, 0.747706, 0, 1.0};
Point(22) = {-0.009087, 0.747273, 0, 1.0};
Point(23) = {-0.012139, 0.746840, 0, 1.0};
Point(24) = {-0.015178, 0.746315, 0, 1.0};
Point(25) = {-0.018216, 0.745791, 0, 1.0};
Point(26) = {-0.021255, 0.745266, 0, 1.0};
Point(27) = {-0.024289, 0.744713, 0, 1.0};
Point(28) = {-0.027318, 0.744127, 0, 1.0};
Point(29) = {-0.030347, 0.743542, 0, 1.0};
Point(30) = {-0.033371, 0.742926, 0, 1.0};
Point(31) = {-0.036391, 0.742279, 0, 1.0};
Point(32) = {-0.042403, 0.740804, 0, 1.0};
Point(33) = {-0.045386, 0.739915, 0, 1.0};
Point(34) = {-0.048364, 0.738993, 0, 1.0};
Point(35) = {-0.051333, 0.738012, 0, 1.0};
Point(36) = {-0.054293, 0.736970, 0, 1.0};
Point(37) = {-0.060193, 0.734759, 0, 1.0};
Point(38) = {-0.061648, 0.734074, 0, 1.0};
Point(39) = {-0.064556, 0.732696, 0, 1.0};
Point(40) = {-0.067423, 0.731044, 0, 1.0};
Point(41) = {-0.068841, 0.730112, 0, 1.0};
Point(42) = {-0.070235, 0.729027, 0, 1.0};
Point(43) = {-0.071601, 0.727758, 0, 1.0};
Point(44) = {-0.072920, 0.726178, 0, 1.0};
Point(45) = {-0.074148, 0.721945, 0, 1.0};
Point(46) = {-0.071915, 0.719571, 0, 1.0};
Point(47) = {-0.070271, 0.719010, 0, 1.0};
Point(48) = {-0.068664, 0.718694, 0, 1.0};
Point(49) = {-0.067073, 0.718487, 0, 1.0};
Point(50) = {-0.065491, 0.718334, 0, 1.0};
Point(51) = {-0.062357, 0.718231, 0, 1.0};
Point(52) = {-0.059227, 0.718153, 0, 1.0};
Point(53) = {-0.057668, 0.718152, 0, 1.0};
Point(54) = {-0.054555, 0.718190, 0, 1.0};
Point(55) = {-0.051447, 0.718256, 0, 1.0};
Point(56) = {-0.048353, 0.718414, 0, 1.0};
Point(57) = {-0.045255, 0.718543, 0, 1.0};
Point(58) = {-0.042156, 0.718672, 0, 1.0};
Point(59) = {-0.039062, 0.718830, 0, 1.0};
Point(60) = {-0.035972, 0.719019, 0, 1.0};
Point(61) = {-0.032883, 0.719209, 0, 1.0};
Point(62) = {-0.026723, 0.719708, 0, 1.0};
Point(63) = {-0.023647, 0.719989, 0, 1.0};
Point(64) = {-0.020581, 0.720331, 0, 1.0};
Point(65) = {-0.017515, 0.720673, 0, 1.0};
Point(66) = {-0.014463, 0.721106, 0, 1.0};
Point(67) = {-0.011415, 0.721569, 0, 1.0};
Point(68) = {-0.005347, 0.722679, 0, 1.0};
Point(69) = {-0.002327, 0.723324, 0, 1.0};
Point(70) = {0.000693, 0.723971, 0, 1.0};
Point(71) = {0.003703, 0.724679, 0, 1.0};
Point(72) = {0.006705, 0.725446, 0, 1.0};
Point(73) = {0.009706, 0.726215, 0, 1.0};
Point(74) = {0.012698, 0.727043, 0, 1.0};
Point(75) = {0.015685, 0.727903, 0, 1.0};
Point(76) = {0.018668, 0.728793, 0, 1.0};
Point(77) = {0.021642, 0.729745, 0, 1.0};
Point(78) = {0.024615, 0.730695, 0, 1.0};
Point(79) = {0.028175, 0.731891, 0, 1.0};
Point(80) = {0.030539, 0.732751, 0, 1.0};
Point(81) = {0.033494, 0.733823, 0, 1.0};
Point(82) = {0.036446, 0.734958, 0, 1.0};
Point(83) = {0.039381, 0.736121, 0, 1.0};
Point(84) = {0.042318, 0.737316, 0, 1.0};
Point(85) = {0.045268, 0.738419, 0, 1.0};
Point(86) = {0.048237, 0.739402, 0, 1.0};
Point(87) = {0.051215, 0.740322, 0, 1.0};
Point(88) = {0.054212, 0.741120, 0, 1.0};
Point(89) = {0.057208, 0.741919, 0, 1.0};
Point(90) = {0.060210, 0.742688, 0, 1.0};
Point(91) = {0.063234, 0.743304, 0, 1.0};
Point(92) = {0.066283, 0.743752, 0, 1.0};
Point(93) = {0.069339, 0.744170, 0, 1.0};
Point(94) = {0.072473, 0.744599, 0, 1.0};
Point(95) = {0.074109, 0.744750, 0, 1.0};
Point(96) = {-0.073888, -0.746202, 0, 1.0};
Point(97) = {-0.072104, -0.746491, 0, 1.0};
Point(98) = {-0.068899, -0.747065, 0, 1.0};
Point(99) = {-0.062535, -0.747904, 0, 1.0};
Point(100) = {-0.056182, -0.748671, 0, 1.0};
Point(101) = {-0.049880, -0.749098, 0, 1.0};
Point(102) = {-0.043586, -0.749483, 0, 1.0};
Point(103) = {-0.037296, -0.749836, 0, 1.0};
Point(104) = {-0.031038, -0.749976, 0, 1.0};
Point(105) = {-0.027916, -0.750000, 0, 1.0};
Point(106) = {-0.025427, -0.749964, 0, 1.0};
Point(107) = {-0.021700, -0.749866, 0, 1.0};
Point(108) = {-0.018597, -0.749767, 0, 1.0};
Point(109) = {-0.015498, -0.749640, 0, 1.0};
Point(110) = {-0.012409, -0.749451, 0, 1.0};
Point(111) = {-0.009324, -0.749230, 0, 1.0};
Point(112) = {-0.006244, -0.748981, 0, 1.0};
Point(113) = {-0.003164, -0.748731, 0, 1.0};
Point(114) = {-0.000093, -0.748420, 0, 1.0};
Point(115) = {0.002973, -0.748078, 0, 1.0};
Point(116) = {0.006035, -0.747706, 0, 1.0};
Point(117) = {0.009087, -0.747273, 0, 1.0};
Point(118) = {0.012139, -0.746840, 0, 1.0};
Point(119) = {0.015178, -0.746315, 0, 1.0};
Point(120) = {0.018216, -0.745791, 0, 1.0};
Point(121) = {0.021255, -0.745266, 0, 1.0};
Point(122) = {0.024289, -0.744713, 0, 1.0};
Point(123) = {0.027318, -0.744127, 0, 1.0};
Point(124) = {0.030347, -0.743542, 0, 1.0};
Point(125) = {0.033371, -0.742926, 0, 1.0};
Point(126) = {0.036391, -0.742279, 0, 1.0};
Point(127) = {0.042403, -0.740804, 0, 1.0};
Point(128) = {0.045386, -0.739915, 0, 1.0};
Point(129) = {0.048364, -0.738993, 0, 1.0};
Point(130) = {0.051333, -0.738012, 0, 1.0};
Point(131) = {0.054293, -0.736970, 0, 1.0};
Point(132) = {0.060193, -0.734759, 0, 1.0};
Point(133) = {0.061648, -0.734074, 0, 1.0};
Point(134) = {0.064556, -0.732696, 0, 1.0};
Point(135) = {0.067423, -0.731044, 0, 1.0};
Point(136) = {0.068841, -0.730112, 0, 1.0};
Point(137) = {0.070235, -0.729027, 0, 1.0};
Point(138) = {0.071601, -0.727758, 0, 1.0};
Point(139) = {0.072920, -0.726178, 0, 1.0};
Point(140) = {0.074148, -0.721945, 0, 1.0};
Point(141) = {0.071915, -0.719571, 0, 1.0};
Point(142) = {0.070271, -0.719010, 0, 1.0};
Point(143) = {0.068664, -0.718694, 0, 1.0};
Point(144) = {0.067073, -0.718487, 0, 1.0};
Point(145) = {0.065491, -0.718334, 0, 1.0};
Point(146) = {0.062357, -0.718231, 0, 1.0};
Point(147) = {0.059227, -0.718153, 0, 1.0};
Point(148) = {0.057668, -0.718152, 0, 1.0};
Point(149) = {0.054555, -0.718190, 0, 1.0};
Point(150) = {0.051447, -0.718256, 0, 1.0};
Point(151) = {0.048353, -0.718414, 0, 1.0};
Point(152) = {0.045255, -0.718543, 0, 1.0};
Point(153) = {0.042156, -0.718672, 0, 1.0};
Point(154) = {0.039062, -0.718830, 0, 1.0};
Point(155) = {0.035972, -0.719019, 0, 1.0};
Point(156) = {0.032883, -0.719209, 0, 1.0};
Point(157) = {0.026723, -0.719708, 0, 1.0};
Point(158) = {0.023647, -0.719989, 0, 1.0};
Point(159) = {0.020581, -0.720331, 0, 1.0};
Point(160) = {0.017515, -0.720673, 0, 1.0};
Point(161) = {0.014463, -0.721106, 0, 1.0};
Point(162) = {0.011415, -0.721569, 0, 1.0};
Point(163) = {0.005347, -0.722679, 0, 1.0};
Point(164) = {0.002327, -0.723324, 0, 1.0};
Point(165) = {-0.000693, -0.723971, 0, 1.0};
Point(166) = {-0.003703, -0.724679, 0, 1.0};
Point(167) = {-0.006705, -0.725446, 0, 1.0};
Point(168) = {-0.009706, -0.726215, 0, 1.0};
Point(169) = {-0.012698, -0.727043, 0, 1.0};
Point(170) = {-0.015685, -0.727903, 0, 1.0};
Point(171) = {-0.018668, -0.728793, 0, 1.0};
Point(172) = {-0.021642, -0.729745, 0, 1.0};
Point(173) = {-0.024615, -0.730695, 0, 1.0};
Point(174) = {-0.028175, -0.731891, 0, 1.0};
Point(175) = {-0.030539, -0.732751, 0, 1.0};
Point(176) = {-0.033494, -0.733823, 0, 1.0};
Point(177) = {-0.036446, -0.734958, 0, 1.0};
Point(178) = {-0.039381, -0.736121, 0, 1.0};
Point(179) = {-0.042318, -0.737316, 0, 1.0};
Point(180) = {-0.045268, -0.738419, 0, 1.0};
Point(181) = {-0.048237, -0.739402, 0, 1.0};
Point(182) = {-0.051215, -0.740322, 0, 1.0};
Point(183) = {-0.054212, -0.741120, 0, 1.0};
Point(184) = {-0.057208, -0.741919, 0, 1.0};
Point(185) = {-0.060210, -0.742688, 0, 1.0};
Point(186) = {-0.063234, -0.743304, 0, 1.0};
Point(187) = {-0.066283, -0.743752, 0, 1.0};
Point(188) = {-0.069339, -0.744170, 0, 1.0};
Point(189) = {-0.072473, -0.744599, 0, 1.0};
Point(190) = {-0.074109, -0.744750, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:31};
Spline(2) = {31:61};
Spline(3) = {61:95};
Spline(4) = {95,1};

// Lines: second blade (splines 5-8)
Spline(5) = {96:126};
Spline(6) = {126:156};
Spline(7) = {156:190};
Spline(8) = {190,96};

// Outer domain (points 20001-4 and lines)
Point(191) = {-13.50000000, -15.00000000, 0, 1.0};
Point(192) = {-13.50000000, 15.00000000, 0, 1.0};
Point(193) = {36.00000000, 15.00000000, 0, 1.0};
Point(194) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {191, 192};
Line(12) = {192, 193};
Line(13) = {193, 194};
Line(14) = {191, 194};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
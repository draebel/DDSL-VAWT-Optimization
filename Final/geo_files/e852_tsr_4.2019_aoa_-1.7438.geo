SetFactory("OpenCASCADE");

Point(1) = {0.149905, 0.738557, 0, 1.0};
Point(2) = {0.149235, 0.738699, 0, 1.0};
Point(3) = {0.147338, 0.739152, 0, 1.0};
Point(4) = {0.144419, 0.739871, 0, 1.0};
Point(5) = {0.140560, 0.740700, 0, 1.0};
Point(6) = {0.135735, 0.741570, 0, 1.0};
Point(7) = {0.129970, 0.742505, 0, 1.0};
Point(8) = {0.123356, 0.743512, 0, 1.0};
Point(9) = {0.115996, 0.744575, 0, 1.0};
Point(10) = {0.108003, 0.745666, 0, 1.0};
Point(11) = {0.099490, 0.746751, 0, 1.0};
Point(12) = {0.090578, 0.747781, 0, 1.0};
Point(13) = {0.081386, 0.748689, 0, 1.0};
Point(14) = {0.071994, 0.749390, 0, 1.0};
Point(15) = {0.062450, 0.749832, 0, 1.0};
Point(16) = {0.052800, 0.750000, 0, 1.0};
Point(17) = {0.043099, 0.749897, 0, 1.0};
Point(18) = {0.033416, 0.749564, 0, 1.0};
Point(19) = {0.023860, 0.749023, 0, 1.0};
Point(20) = {0.014526, 0.748294, 0, 1.0};
Point(21) = {0.005511, 0.747396, 0, 1.0};
Point(22) = {-0.003087, 0.746346, 0, 1.0};
Point(23) = {-0.011183, 0.745163, 0, 1.0};
Point(24) = {-0.018692, 0.743868, 0, 1.0};
Point(25) = {-0.025535, 0.742483, 0, 1.0};
Point(26) = {-0.031642, 0.741036, 0, 1.0};
Point(27) = {-0.036947, 0.739550, 0, 1.0};
Point(28) = {-0.041394, 0.738054, 0, 1.0};
Point(29) = {-0.044940, 0.736565, 0, 1.0};
Point(30) = {-0.047565, 0.735119, 0, 1.0};
Point(31) = {-0.048921, 0.734089, 0, 1.0};
Point(32) = {-0.049616, 0.733332, 0, 1.0};
Point(33) = {-0.049894, 0.732879, 0, 1.0};
Point(34) = {-0.049995, 0.732580, 0, 1.0};
Point(35) = {-0.050000, 0.732409, 0, 1.0};
Point(36) = {-0.049935, 0.732249, 0, 1.0};
Point(37) = {-0.049729, 0.731993, 0, 1.0};
Point(38) = {-0.049294, 0.731641, 0, 1.0};
Point(39) = {-0.048332, 0.731110, 0, 1.0};
Point(40) = {-0.047827, 0.730897, 0, 1.0};
Point(41) = {-0.045137, 0.730082, 0, 1.0};
Point(42) = {-0.041441, 0.729370, 0, 1.0};
Point(43) = {-0.036771, 0.728782, 0, 1.0};
Point(44) = {-0.031170, 0.728310, 0, 1.0};
Point(45) = {-0.024708, 0.727955, 0, 1.0};
Point(46) = {-0.017470, 0.727723, 0, 1.0};
Point(47) = {-0.009541, 0.727628, 0, 1.0};
Point(48) = {-0.001019, 0.727686, 0, 1.0};
Point(49) = {0.007995, 0.727922, 0, 1.0};
Point(50) = {0.017423, 0.728381, 0, 1.0};
Point(51) = {0.027215, 0.729083, 0, 1.0};
Point(52) = {0.037321, 0.730025, 0, 1.0};
Point(53) = {0.047705, 0.731162, 0, 1.0};
Point(54) = {0.058295, 0.732397, 0, 1.0};
Point(55) = {0.068956, 0.733644, 0, 1.0};
Point(56) = {0.079545, 0.734843, 0, 1.0};
Point(57) = {0.089912, 0.735939, 0, 1.0};
Point(58) = {0.099904, 0.736893, 0, 1.0};
Point(59) = {0.109367, 0.737675, 0, 1.0};
Point(60) = {0.118147, 0.738267, 0, 1.0};
Point(61) = {0.126097, 0.738667, 0, 1.0};
Point(62) = {0.133083, 0.738886, 0, 1.0};
Point(63) = {0.138982, 0.738945, 0, 1.0};
Point(64) = {0.143690, 0.738888, 0, 1.0};
Point(65) = {0.147118, 0.738759, 0, 1.0};
Point(66) = {0.149205, 0.738620, 0, 1.0};
Point(67) = {-0.149905, -0.738557, 0, 1.0};
Point(68) = {-0.149235, -0.738699, 0, 1.0};
Point(69) = {-0.147338, -0.739152, 0, 1.0};
Point(70) = {-0.144419, -0.739871, 0, 1.0};
Point(71) = {-0.140560, -0.740700, 0, 1.0};
Point(72) = {-0.135735, -0.741570, 0, 1.0};
Point(73) = {-0.129970, -0.742505, 0, 1.0};
Point(74) = {-0.123356, -0.743512, 0, 1.0};
Point(75) = {-0.115996, -0.744575, 0, 1.0};
Point(76) = {-0.108003, -0.745666, 0, 1.0};
Point(77) = {-0.099490, -0.746751, 0, 1.0};
Point(78) = {-0.090578, -0.747781, 0, 1.0};
Point(79) = {-0.081386, -0.748689, 0, 1.0};
Point(80) = {-0.071994, -0.749390, 0, 1.0};
Point(81) = {-0.062450, -0.749832, 0, 1.0};
Point(82) = {-0.052800, -0.750000, 0, 1.0};
Point(83) = {-0.043099, -0.749897, 0, 1.0};
Point(84) = {-0.033416, -0.749564, 0, 1.0};
Point(85) = {-0.023860, -0.749023, 0, 1.0};
Point(86) = {-0.014526, -0.748294, 0, 1.0};
Point(87) = {-0.005511, -0.747396, 0, 1.0};
Point(88) = {0.003087, -0.746346, 0, 1.0};
Point(89) = {0.011183, -0.745163, 0, 1.0};
Point(90) = {0.018692, -0.743868, 0, 1.0};
Point(91) = {0.025535, -0.742483, 0, 1.0};
Point(92) = {0.031642, -0.741036, 0, 1.0};
Point(93) = {0.036947, -0.739550, 0, 1.0};
Point(94) = {0.041394, -0.738054, 0, 1.0};
Point(95) = {0.044940, -0.736565, 0, 1.0};
Point(96) = {0.047565, -0.735119, 0, 1.0};
Point(97) = {0.048921, -0.734089, 0, 1.0};
Point(98) = {0.049616, -0.733332, 0, 1.0};
Point(99) = {0.049894, -0.732879, 0, 1.0};
Point(100) = {0.049995, -0.732580, 0, 1.0};
Point(101) = {0.050000, -0.732409, 0, 1.0};
Point(102) = {0.049935, -0.732249, 0, 1.0};
Point(103) = {0.049729, -0.731993, 0, 1.0};
Point(104) = {0.049294, -0.731641, 0, 1.0};
Point(105) = {0.048332, -0.731110, 0, 1.0};
Point(106) = {0.047827, -0.730897, 0, 1.0};
Point(107) = {0.045137, -0.730082, 0, 1.0};
Point(108) = {0.041441, -0.729370, 0, 1.0};
Point(109) = {0.036771, -0.728782, 0, 1.0};
Point(110) = {0.031170, -0.728310, 0, 1.0};
Point(111) = {0.024708, -0.727955, 0, 1.0};
Point(112) = {0.017470, -0.727723, 0, 1.0};
Point(113) = {0.009541, -0.727628, 0, 1.0};
Point(114) = {0.001019, -0.727686, 0, 1.0};
Point(115) = {-0.007995, -0.727922, 0, 1.0};
Point(116) = {-0.017423, -0.728381, 0, 1.0};
Point(117) = {-0.027215, -0.729083, 0, 1.0};
Point(118) = {-0.037321, -0.730025, 0, 1.0};
Point(119) = {-0.047705, -0.731162, 0, 1.0};
Point(120) = {-0.058295, -0.732397, 0, 1.0};
Point(121) = {-0.068956, -0.733644, 0, 1.0};
Point(122) = {-0.079545, -0.734843, 0, 1.0};
Point(123) = {-0.089912, -0.735939, 0, 1.0};
Point(124) = {-0.099904, -0.736893, 0, 1.0};
Point(125) = {-0.109367, -0.737675, 0, 1.0};
Point(126) = {-0.118147, -0.738267, 0, 1.0};
Point(127) = {-0.126097, -0.738667, 0, 1.0};
Point(128) = {-0.133083, -0.738886, 0, 1.0};
Point(129) = {-0.138982, -0.738945, 0, 1.0};
Point(130) = {-0.143690, -0.738888, 0, 1.0};
Point(131) = {-0.147118, -0.738759, 0, 1.0};
Point(132) = {-0.149205, -0.738620, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:87};
Spline(6) = {87:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074706, 0.741397, 0, 1.0};
Point(2) = {0.072265, 0.741367, 0, 1.0};
Point(3) = {0.069183, 0.741384, 0, 1.0};
Point(4) = {0.065819, 0.741478, 0, 1.0};
Point(5) = {0.062186, 0.741661, 0, 1.0};
Point(6) = {0.058301, 0.741937, 0, 1.0};
Point(7) = {0.054181, 0.742303, 0, 1.0};
Point(8) = {0.049843, 0.742759, 0, 1.0};
Point(9) = {0.045304, 0.743308, 0, 1.0};
Point(10) = {0.040583, 0.743948, 0, 1.0};
Point(11) = {0.035704, 0.744676, 0, 1.0};
Point(12) = {0.030686, 0.745473, 0, 1.0};
Point(13) = {0.025553, 0.746307, 0, 1.0};
Point(14) = {0.020331, 0.747153, 0, 1.0};
Point(15) = {0.015040, 0.747975, 0, 1.0};
Point(16) = {0.009712, 0.748732, 0, 1.0};
Point(17) = {0.004372, 0.749355, 0, 1.0};
Point(18) = {-0.000952, 0.749786, 0, 1.0};
Point(19) = {-0.006235, 0.750000, 0, 1.0};
Point(20) = {-0.011456, 0.749997, 0, 1.0};
Point(21) = {-0.016591, 0.749793, 0, 1.0};
Point(22) = {-0.021621, 0.749407, 0, 1.0};
Point(23) = {-0.026527, 0.748861, 0, 1.0};
Point(24) = {-0.031289, 0.748180, 0, 1.0};
Point(25) = {-0.035889, 0.747377, 0, 1.0};
Point(26) = {-0.040306, 0.746454, 0, 1.0};
Point(27) = {-0.044519, 0.745413, 0, 1.0};
Point(28) = {-0.048512, 0.744268, 0, 1.0};
Point(29) = {-0.052272, 0.743042, 0, 1.0};
Point(30) = {-0.055781, 0.741746, 0, 1.0};
Point(31) = {-0.059025, 0.740395, 0, 1.0};
Point(32) = {-0.061989, 0.739004, 0, 1.0};
Point(33) = {-0.064666, 0.737597, 0, 1.0};
Point(34) = {-0.067045, 0.736208, 0, 1.0};
Point(35) = {-0.069115, 0.734861, 0, 1.0};
Point(36) = {-0.070872, 0.733572, 0, 1.0};
Point(37) = {-0.072304, 0.732343, 0, 1.0};
Point(38) = {-0.073409, 0.731184, 0, 1.0};
Point(39) = {-0.074183, 0.730131, 0, 1.0};
Point(40) = {-0.074627, 0.729235, 0, 1.0};
Point(41) = {-0.074740, 0.728513, 0, 1.0};
Point(42) = {-0.074518, 0.727928, 0, 1.0};
Point(43) = {-0.073958, 0.727435, 0, 1.0};
Point(44) = {-0.073061, 0.727023, 0, 1.0};
Point(45) = {-0.071833, 0.726702, 0, 1.0};
Point(46) = {-0.070279, 0.726468, 0, 1.0};
Point(47) = {-0.068399, 0.726289, 0, 1.0};
Point(48) = {-0.066203, 0.726133, 0, 1.0};
Point(49) = {-0.063697, 0.726001, 0, 1.0};
Point(50) = {-0.060895, 0.725908, 0, 1.0};
Point(51) = {-0.057811, 0.725868, 0, 1.0};
Point(52) = {-0.054456, 0.725885, 0, 1.0};
Point(53) = {-0.050844, 0.725954, 0, 1.0};
Point(54) = {-0.046992, 0.726068, 0, 1.0};
Point(55) = {-0.042916, 0.726226, 0, 1.0};
Point(56) = {-0.038633, 0.726427, 0, 1.0};
Point(57) = {-0.034160, 0.726675, 0, 1.0};
Point(58) = {-0.029517, 0.726962, 0, 1.0};
Point(59) = {-0.024725, 0.727287, 0, 1.0};
Point(60) = {-0.019804, 0.727649, 0, 1.0};
Point(61) = {-0.014775, 0.728053, 0, 1.0};
Point(62) = {-0.009661, 0.728508, 0, 1.0};
Point(63) = {-0.004482, 0.729016, 0, 1.0};
Point(64) = {0.000737, 0.729577, 0, 1.0};
Point(65) = {0.005974, 0.730184, 0, 1.0};
Point(66) = {0.011208, 0.730820, 0, 1.0};
Point(67) = {0.016420, 0.731462, 0, 1.0};
Point(68) = {0.021588, 0.732103, 0, 1.0};
Point(69) = {0.026686, 0.732740, 0, 1.0};
Point(70) = {0.031696, 0.733376, 0, 1.0};
Point(71) = {0.036595, 0.734008, 0, 1.0};
Point(72) = {0.041361, 0.734645, 0, 1.0};
Point(73) = {0.045973, 0.735293, 0, 1.0};
Point(74) = {0.050412, 0.735951, 0, 1.0};
Point(75) = {0.054657, 0.736602, 0, 1.0};
Point(76) = {0.058695, 0.737227, 0, 1.0};
Point(77) = {0.062507, 0.737820, 0, 1.0};
Point(78) = {0.066077, 0.738387, 0, 1.0};
Point(79) = {0.069388, 0.738937, 0, 1.0};
Point(80) = {0.072424, 0.739467, 0, 1.0};
Point(81) = {0.074832, 0.739897, 0, 1.0};
Point(82) = {-0.074706, -0.741397, 0, 1.0};
Point(83) = {-0.072265, -0.741367, 0, 1.0};
Point(84) = {-0.069183, -0.741384, 0, 1.0};
Point(85) = {-0.065819, -0.741478, 0, 1.0};
Point(86) = {-0.062186, -0.741661, 0, 1.0};
Point(87) = {-0.058301, -0.741937, 0, 1.0};
Point(88) = {-0.054181, -0.742303, 0, 1.0};
Point(89) = {-0.049843, -0.742759, 0, 1.0};
Point(90) = {-0.045304, -0.743308, 0, 1.0};
Point(91) = {-0.040583, -0.743948, 0, 1.0};
Point(92) = {-0.035704, -0.744676, 0, 1.0};
Point(93) = {-0.030686, -0.745473, 0, 1.0};
Point(94) = {-0.025553, -0.746307, 0, 1.0};
Point(95) = {-0.020331, -0.747153, 0, 1.0};
Point(96) = {-0.015040, -0.747975, 0, 1.0};
Point(97) = {-0.009712, -0.748732, 0, 1.0};
Point(98) = {-0.004372, -0.749355, 0, 1.0};
Point(99) = {0.000952, -0.749786, 0, 1.0};
Point(100) = {0.006235, -0.750000, 0, 1.0};
Point(101) = {0.011456, -0.749997, 0, 1.0};
Point(102) = {0.016591, -0.749793, 0, 1.0};
Point(103) = {0.021621, -0.749407, 0, 1.0};
Point(104) = {0.026527, -0.748861, 0, 1.0};
Point(105) = {0.031289, -0.748180, 0, 1.0};
Point(106) = {0.035889, -0.747377, 0, 1.0};
Point(107) = {0.040306, -0.746454, 0, 1.0};
Point(108) = {0.044519, -0.745413, 0, 1.0};
Point(109) = {0.048512, -0.744268, 0, 1.0};
Point(110) = {0.052272, -0.743042, 0, 1.0};
Point(111) = {0.055781, -0.741746, 0, 1.0};
Point(112) = {0.059025, -0.740395, 0, 1.0};
Point(113) = {0.061989, -0.739004, 0, 1.0};
Point(114) = {0.064666, -0.737597, 0, 1.0};
Point(115) = {0.067045, -0.736208, 0, 1.0};
Point(116) = {0.069115, -0.734861, 0, 1.0};
Point(117) = {0.070872, -0.733572, 0, 1.0};
Point(118) = {0.072304, -0.732343, 0, 1.0};
Point(119) = {0.073409, -0.731184, 0, 1.0};
Point(120) = {0.074183, -0.730131, 0, 1.0};
Point(121) = {0.074627, -0.729235, 0, 1.0};
Point(122) = {0.074740, -0.728513, 0, 1.0};
Point(123) = {0.074518, -0.727928, 0, 1.0};
Point(124) = {0.073958, -0.727435, 0, 1.0};
Point(125) = {0.073061, -0.727023, 0, 1.0};
Point(126) = {0.071833, -0.726702, 0, 1.0};
Point(127) = {0.070279, -0.726468, 0, 1.0};
Point(128) = {0.068399, -0.726289, 0, 1.0};
Point(129) = {0.066203, -0.726133, 0, 1.0};
Point(130) = {0.063697, -0.726001, 0, 1.0};
Point(131) = {0.060895, -0.725908, 0, 1.0};
Point(132) = {0.057811, -0.725868, 0, 1.0};
Point(133) = {0.054456, -0.725885, 0, 1.0};
Point(134) = {0.050844, -0.725954, 0, 1.0};
Point(135) = {0.046992, -0.726068, 0, 1.0};
Point(136) = {0.042916, -0.726226, 0, 1.0};
Point(137) = {0.038633, -0.726427, 0, 1.0};
Point(138) = {0.034160, -0.726675, 0, 1.0};
Point(139) = {0.029517, -0.726962, 0, 1.0};
Point(140) = {0.024725, -0.727287, 0, 1.0};
Point(141) = {0.019804, -0.727649, 0, 1.0};
Point(142) = {0.014775, -0.728053, 0, 1.0};
Point(143) = {0.009661, -0.728508, 0, 1.0};
Point(144) = {0.004482, -0.729016, 0, 1.0};
Point(145) = {-0.000737, -0.729577, 0, 1.0};
Point(146) = {-0.005974, -0.730184, 0, 1.0};
Point(147) = {-0.011208, -0.730820, 0, 1.0};
Point(148) = {-0.016420, -0.731462, 0, 1.0};
Point(149) = {-0.021588, -0.732103, 0, 1.0};
Point(150) = {-0.026686, -0.732740, 0, 1.0};
Point(151) = {-0.031696, -0.733376, 0, 1.0};
Point(152) = {-0.036595, -0.734008, 0, 1.0};
Point(153) = {-0.041361, -0.734645, 0, 1.0};
Point(154) = {-0.045973, -0.735293, 0, 1.0};
Point(155) = {-0.050412, -0.735951, 0, 1.0};
Point(156) = {-0.054657, -0.736602, 0, 1.0};
Point(157) = {-0.058695, -0.737227, 0, 1.0};
Point(158) = {-0.062507, -0.737820, 0, 1.0};
Point(159) = {-0.066077, -0.738387, 0, 1.0};
Point(160) = {-0.069388, -0.738937, 0, 1.0};
Point(161) = {-0.072424, -0.739467, 0, 1.0};
Point(162) = {-0.074832, -0.739897, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074949, 0.728350, 0, 1.0};
Point(2) = {0.074419, 0.728571, 0, 1.0};
Point(3) = {0.072936, 0.729265, 0, 1.0};
Point(4) = {0.070706, 0.730403, 0, 1.0};
Point(5) = {0.067865, 0.731837, 0, 1.0};
Point(6) = {0.064422, 0.733429, 0, 1.0};
Point(7) = {0.060364, 0.735145, 0, 1.0};
Point(8) = {0.055755, 0.736993, 0, 1.0};
Point(9) = {0.050723, 0.738925, 0, 1.0};
Point(10) = {0.045386, 0.740798, 0, 1.0};
Point(11) = {0.039697, 0.742406, 0, 1.0};
Point(12) = {0.033456, 0.743779, 0, 1.0};
Point(13) = {0.026736, 0.745169, 0, 1.0};
Point(14) = {0.019848, 0.746598, 0, 1.0};
Point(15) = {0.012941, 0.747877, 0, 1.0};
Point(16) = {0.006036, 0.748895, 0, 1.0};
Point(17) = {-0.000866, 0.749579, 0, 1.0};
Point(18) = {-0.007791, 0.749928, 0, 1.0};
Point(19) = {-0.014709, 0.750000, 0, 1.0};
Point(20) = {-0.021533, 0.749831, 0, 1.0};
Point(21) = {-0.028190, 0.749431, 0, 1.0};
Point(22) = {-0.034612, 0.748810, 0, 1.0};
Point(23) = {-0.040732, 0.747983, 0, 1.0};
Point(24) = {-0.046493, 0.746965, 0, 1.0};
Point(25) = {-0.051839, 0.745772, 0, 1.0};
Point(26) = {-0.056722, 0.744430, 0, 1.0};
Point(27) = {-0.061094, 0.742960, 0, 1.0};
Point(28) = {-0.064920, 0.741391, 0, 1.0};
Point(29) = {-0.068168, 0.739756, 0, 1.0};
Point(30) = {-0.070818, 0.738098, 0, 1.0};
Point(31) = {-0.072846, 0.736465, 0, 1.0};
Point(32) = {-0.074233, 0.734916, 0, 1.0};
Point(33) = {-0.074962, 0.733542, 0, 1.0};
Point(34) = {-0.074868, 0.732479, 0, 1.0};
Point(35) = {-0.073830, 0.731614, 0, 1.0};
Point(36) = {-0.071910, 0.730802, 0, 1.0};
Point(37) = {-0.069156, 0.730079, 0, 1.0};
Point(38) = {-0.065606, 0.729440, 0, 1.0};
Point(39) = {-0.061303, 0.728891, 0, 1.0};
Point(40) = {-0.056296, 0.728433, 0, 1.0};
Point(41) = {-0.050637, 0.728060, 0, 1.0};
Point(42) = {-0.044393, 0.727764, 0, 1.0};
Point(43) = {-0.037645, 0.727546, 0, 1.0};
Point(44) = {-0.030472, 0.727410, 0, 1.0};
Point(45) = {-0.022949, 0.727357, 0, 1.0};
Point(46) = {-0.015169, 0.727385, 0, 1.0};
Point(47) = {-0.007216, 0.727505, 0, 1.0};
Point(48) = {0.000841, 0.727714, 0, 1.0};
Point(49) = {0.008904, 0.727991, 0, 1.0};
Point(50) = {0.016860, 0.728359, 0, 1.0};
Point(51) = {0.024672, 0.728870, 0, 1.0};
Point(52) = {0.032366, 0.729489, 0, 1.0};
Point(53) = {0.039904, 0.730085, 0, 1.0};
Point(54) = {0.047164, 0.730527, 0, 1.0};
Point(55) = {0.053975, 0.730715, 0, 1.0};
Point(56) = {0.060126, 0.730613, 0, 1.0};
Point(57) = {0.065419, 0.730231, 0, 1.0};
Point(58) = {0.069647, 0.729632, 0, 1.0};
Point(59) = {0.072641, 0.728990, 0, 1.0};
Point(60) = {0.074382, 0.728520, 0, 1.0};
Point(61) = {-0.074949, -0.728350, 0, 1.0};
Point(62) = {-0.074419, -0.728571, 0, 1.0};
Point(63) = {-0.072936, -0.729265, 0, 1.0};
Point(64) = {-0.070706, -0.730403, 0, 1.0};
Point(65) = {-0.067865, -0.731837, 0, 1.0};
Point(66) = {-0.064422, -0.733429, 0, 1.0};
Point(67) = {-0.060364, -0.735145, 0, 1.0};
Point(68) = {-0.055755, -0.736993, 0, 1.0};
Point(69) = {-0.050723, -0.738925, 0, 1.0};
Point(70) = {-0.045386, -0.740798, 0, 1.0};
Point(71) = {-0.039697, -0.742406, 0, 1.0};
Point(72) = {-0.033456, -0.743779, 0, 1.0};
Point(73) = {-0.026736, -0.745169, 0, 1.0};
Point(74) = {-0.019848, -0.746598, 0, 1.0};
Point(75) = {-0.012941, -0.747877, 0, 1.0};
Point(76) = {-0.006036, -0.748895, 0, 1.0};
Point(77) = {0.000866, -0.749579, 0, 1.0};
Point(78) = {0.007791, -0.749928, 0, 1.0};
Point(79) = {0.014709, -0.750000, 0, 1.0};
Point(80) = {0.021533, -0.749831, 0, 1.0};
Point(81) = {0.028190, -0.749431, 0, 1.0};
Point(82) = {0.034612, -0.748810, 0, 1.0};
Point(83) = {0.040732, -0.747983, 0, 1.0};
Point(84) = {0.046493, -0.746965, 0, 1.0};
Point(85) = {0.051839, -0.745772, 0, 1.0};
Point(86) = {0.056722, -0.744430, 0, 1.0};
Point(87) = {0.061094, -0.742960, 0, 1.0};
Point(88) = {0.064920, -0.741391, 0, 1.0};
Point(89) = {0.068168, -0.739756, 0, 1.0};
Point(90) = {0.070818, -0.738098, 0, 1.0};
Point(91) = {0.072846, -0.736465, 0, 1.0};
Point(92) = {0.074233, -0.734916, 0, 1.0};
Point(93) = {0.074962, -0.733542, 0, 1.0};
Point(94) = {0.074868, -0.732479, 0, 1.0};
Point(95) = {0.073830, -0.731614, 0, 1.0};
Point(96) = {0.071910, -0.730802, 0, 1.0};
Point(97) = {0.069156, -0.730079, 0, 1.0};
Point(98) = {0.065606, -0.729440, 0, 1.0};
Point(99) = {0.061303, -0.728891, 0, 1.0};
Point(100) = {0.056296, -0.728433, 0, 1.0};
Point(101) = {0.050637, -0.728060, 0, 1.0};
Point(102) = {0.044393, -0.727764, 0, 1.0};
Point(103) = {0.037645, -0.727546, 0, 1.0};
Point(104) = {0.030472, -0.727410, 0, 1.0};
Point(105) = {0.022949, -0.727357, 0, 1.0};
Point(106) = {0.015169, -0.727385, 0, 1.0};
Point(107) = {0.007216, -0.727505, 0, 1.0};
Point(108) = {-0.000841, -0.727714, 0, 1.0};
Point(109) = {-0.008904, -0.727991, 0, 1.0};
Point(110) = {-0.016860, -0.728359, 0, 1.0};
Point(111) = {-0.024672, -0.728870, 0, 1.0};
Point(112) = {-0.032366, -0.729489, 0, 1.0};
Point(113) = {-0.039904, -0.730085, 0, 1.0};
Point(114) = {-0.047164, -0.730527, 0, 1.0};
Point(115) = {-0.053975, -0.730715, 0, 1.0};
Point(116) = {-0.060126, -0.730613, 0, 1.0};
Point(117) = {-0.065419, -0.730231, 0, 1.0};
Point(118) = {-0.069647, -0.729632, 0, 1.0};
Point(119) = {-0.072641, -0.728990, 0, 1.0};
Point(120) = {-0.074382, -0.728520, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:82};
Spline(6) = {82:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
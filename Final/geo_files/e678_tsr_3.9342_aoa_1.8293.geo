SetFactory("OpenCASCADE");

Point(1) = {0.149898, 0.721142, 0, 1.0};
Point(2) = {0.149191, 0.721437, 0, 1.0};
Point(3) = {0.147216, 0.722363, 0, 1.0};
Point(4) = {0.144243, 0.723878, 0, 1.0};
Point(5) = {0.140456, 0.725790, 0, 1.0};
Point(6) = {0.135867, 0.727912, 0, 1.0};
Point(7) = {0.130457, 0.730200, 0, 1.0};
Point(8) = {0.124315, 0.732663, 0, 1.0};
Point(9) = {0.117608, 0.735238, 0, 1.0};
Point(10) = {0.110494, 0.737735, 0, 1.0};
Point(11) = {0.102910, 0.739878, 0, 1.0};
Point(12) = {0.094592, 0.741708, 0, 1.0};
Point(13) = {0.085635, 0.743561, 0, 1.0};
Point(14) = {0.076453, 0.745465, 0, 1.0};
Point(15) = {0.067247, 0.747170, 0, 1.0};
Point(16) = {0.058043, 0.748527, 0, 1.0};
Point(17) = {0.048844, 0.749439, 0, 1.0};
Point(18) = {0.039614, 0.749904, 0, 1.0};
Point(19) = {0.030392, 0.750000, 0, 1.0};
Point(20) = {0.021297, 0.749774, 0, 1.0};
Point(21) = {0.012423, 0.749241, 0, 1.0};
Point(22) = {0.003864, 0.748414, 0, 1.0};
Point(23) = {-0.004293, 0.747312, 0, 1.0};
Point(24) = {-0.011972, 0.745954, 0, 1.0};
Point(25) = {-0.019099, 0.744365, 0, 1.0};
Point(26) = {-0.025607, 0.742576, 0, 1.0};
Point(27) = {-0.031435, 0.740617, 0, 1.0};
Point(28) = {-0.036534, 0.738525, 0, 1.0};
Point(29) = {-0.040864, 0.736346, 0, 1.0};
Point(30) = {-0.044396, 0.734135, 0, 1.0};
Point(31) = {-0.047099, 0.731958, 0, 1.0};
Point(32) = {-0.048948, 0.729894, 0, 1.0};
Point(33) = {-0.049919, 0.728062, 0, 1.0};
Point(34) = {-0.049794, 0.726646, 0, 1.0};
Point(35) = {-0.048410, 0.725493, 0, 1.0};
Point(36) = {-0.045851, 0.724411, 0, 1.0};
Point(37) = {-0.042180, 0.723447, 0, 1.0};
Point(38) = {-0.037449, 0.722596, 0, 1.0};
Point(39) = {-0.031713, 0.721864, 0, 1.0};
Point(40) = {-0.025040, 0.721253, 0, 1.0};
Point(41) = {-0.017496, 0.720756, 0, 1.0};
Point(42) = {-0.009174, 0.720362, 0, 1.0};
Point(43) = {-0.000179, 0.720071, 0, 1.0};
Point(44) = {0.009382, 0.719889, 0, 1.0};
Point(45) = {0.019409, 0.719819, 0, 1.0};
Point(46) = {0.029780, 0.719856, 0, 1.0};
Point(47) = {0.040380, 0.720016, 0, 1.0};
Point(48) = {0.051119, 0.720295, 0, 1.0};
Point(49) = {0.061866, 0.720664, 0, 1.0};
Point(50) = {0.072471, 0.721154, 0, 1.0};
Point(51) = {0.082884, 0.721836, 0, 1.0};
Point(52) = {0.093140, 0.722661, 0, 1.0};
Point(53) = {0.103186, 0.723455, 0, 1.0};
Point(54) = {0.112864, 0.724044, 0, 1.0};
Point(55) = {0.121942, 0.724294, 0, 1.0};
Point(56) = {0.130140, 0.724159, 0, 1.0};
Point(57) = {0.137196, 0.723649, 0, 1.0};
Point(58) = {0.142831, 0.722851, 0, 1.0};
Point(59) = {0.146822, 0.721995, 0, 1.0};
Point(60) = {0.149143, 0.721369, 0, 1.0};
Point(61) = {-0.149898, -0.721142, 0, 1.0};
Point(62) = {-0.149191, -0.721437, 0, 1.0};
Point(63) = {-0.147216, -0.722363, 0, 1.0};
Point(64) = {-0.144243, -0.723878, 0, 1.0};
Point(65) = {-0.140456, -0.725790, 0, 1.0};
Point(66) = {-0.135867, -0.727912, 0, 1.0};
Point(67) = {-0.130457, -0.730200, 0, 1.0};
Point(68) = {-0.124315, -0.732663, 0, 1.0};
Point(69) = {-0.117608, -0.735238, 0, 1.0};
Point(70) = {-0.110494, -0.737735, 0, 1.0};
Point(71) = {-0.102910, -0.739878, 0, 1.0};
Point(72) = {-0.094592, -0.741708, 0, 1.0};
Point(73) = {-0.085635, -0.743561, 0, 1.0};
Point(74) = {-0.076453, -0.745465, 0, 1.0};
Point(75) = {-0.067247, -0.747170, 0, 1.0};
Point(76) = {-0.058043, -0.748527, 0, 1.0};
Point(77) = {-0.048844, -0.749439, 0, 1.0};
Point(78) = {-0.039614, -0.749904, 0, 1.0};
Point(79) = {-0.030392, -0.750000, 0, 1.0};
Point(80) = {-0.021297, -0.749774, 0, 1.0};
Point(81) = {-0.012423, -0.749241, 0, 1.0};
Point(82) = {-0.003864, -0.748414, 0, 1.0};
Point(83) = {0.004293, -0.747312, 0, 1.0};
Point(84) = {0.011972, -0.745954, 0, 1.0};
Point(85) = {0.019099, -0.744365, 0, 1.0};
Point(86) = {0.025607, -0.742576, 0, 1.0};
Point(87) = {0.031435, -0.740617, 0, 1.0};
Point(88) = {0.036534, -0.738525, 0, 1.0};
Point(89) = {0.040864, -0.736346, 0, 1.0};
Point(90) = {0.044396, -0.734135, 0, 1.0};
Point(91) = {0.047099, -0.731958, 0, 1.0};
Point(92) = {0.048948, -0.729894, 0, 1.0};
Point(93) = {0.049919, -0.728062, 0, 1.0};
Point(94) = {0.049794, -0.726646, 0, 1.0};
Point(95) = {0.048410, -0.725493, 0, 1.0};
Point(96) = {0.045851, -0.724411, 0, 1.0};
Point(97) = {0.042180, -0.723447, 0, 1.0};
Point(98) = {0.037449, -0.722596, 0, 1.0};
Point(99) = {0.031713, -0.721864, 0, 1.0};
Point(100) = {0.025040, -0.721253, 0, 1.0};
Point(101) = {0.017496, -0.720756, 0, 1.0};
Point(102) = {0.009174, -0.720362, 0, 1.0};
Point(103) = {0.000179, -0.720071, 0, 1.0};
Point(104) = {-0.009382, -0.719889, 0, 1.0};
Point(105) = {-0.019409, -0.719819, 0, 1.0};
Point(106) = {-0.029780, -0.719856, 0, 1.0};
Point(107) = {-0.040380, -0.720016, 0, 1.0};
Point(108) = {-0.051119, -0.720295, 0, 1.0};
Point(109) = {-0.061866, -0.720664, 0, 1.0};
Point(110) = {-0.072471, -0.721154, 0, 1.0};
Point(111) = {-0.082884, -0.721836, 0, 1.0};
Point(112) = {-0.093140, -0.722661, 0, 1.0};
Point(113) = {-0.103186, -0.723455, 0, 1.0};
Point(114) = {-0.112864, -0.724044, 0, 1.0};
Point(115) = {-0.121942, -0.724294, 0, 1.0};
Point(116) = {-0.130140, -0.724159, 0, 1.0};
Point(117) = {-0.137196, -0.723649, 0, 1.0};
Point(118) = {-0.142831, -0.722851, 0, 1.0};
Point(119) = {-0.146822, -0.721995, 0, 1.0};
Point(120) = {-0.149143, -0.721369, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:82};
Spline(6) = {82:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
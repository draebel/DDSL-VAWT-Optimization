SetFactory("OpenCASCADE");

Point(1) = {0.074823, 0.749262, 0, 1.0};
Point(2) = {0.071767, 0.749436, 0, 1.0};
Point(3) = {0.068625, 0.749597, 0, 1.0};
Point(4) = {0.065484, 0.749733, 0, 1.0};
Point(5) = {0.062346, 0.749840, 0, 1.0};
Point(6) = {0.059209, 0.749919, 0, 1.0};
Point(7) = {0.056073, 0.749970, 0, 1.0};
Point(8) = {0.052940, 0.749997, 0, 1.0};
Point(9) = {0.049807, 0.750000, 0, 1.0};
Point(10) = {0.046676, 0.749983, 0, 1.0};
Point(11) = {0.043545, 0.749952, 0, 1.0};
Point(12) = {0.040415, 0.749913, 0, 1.0};
Point(13) = {0.037285, 0.749874, 0, 1.0};
Point(14) = {0.034155, 0.749843, 0, 1.0};
Point(15) = {0.031024, 0.749824, 0, 1.0};
Point(16) = {0.027892, 0.749814, 0, 1.0};
Point(17) = {0.024760, 0.749809, 0, 1.0};
Point(18) = {0.021628, 0.749804, 0, 1.0};
Point(19) = {0.018497, 0.749794, 0, 1.0};
Point(20) = {0.015365, 0.749775, 0, 1.0};
Point(21) = {0.012234, 0.749753, 0, 1.0};
Point(22) = {0.009103, 0.749735, 0, 1.0};
Point(23) = {0.005971, 0.749729, 0, 1.0};
Point(24) = {0.002838, 0.749743, 0, 1.0};
Point(25) = {-0.000296, 0.749779, 0, 1.0};
Point(26) = {-0.003431, 0.749824, 0, 1.0};
Point(27) = {-0.006565, 0.749857, 0, 1.0};
Point(28) = {-0.009698, 0.749859, 0, 1.0};
Point(29) = {-0.012827, 0.749810, 0, 1.0};
Point(30) = {-0.015953, 0.749697, 0, 1.0};
Point(31) = {-0.019076, 0.749547, 0, 1.0};
Point(32) = {-0.022200, 0.749399, 0, 1.0};
Point(33) = {-0.025325, 0.749288, 0, 1.0};
Point(34) = {-0.028456, 0.749255, 0, 1.0};
Point(35) = {-0.031593, 0.749336, 0, 1.0};
Point(36) = {-0.034738, 0.749551, 0, 1.0};
Point(37) = {-0.037877, 0.749673, 0, 1.0};
Point(38) = {-0.041003, 0.749561, 0, 1.0};
Point(39) = {-0.044123, 0.749349, 0, 1.0};
Point(40) = {-0.047244, 0.749158, 0, 1.0};
Point(41) = {-0.050365, 0.748971, 0, 1.0};
Point(42) = {-0.053483, 0.748728, 0, 1.0};
Point(43) = {-0.056595, 0.748395, 0, 1.0};
Point(44) = {-0.059703, 0.747978, 0, 1.0};
Point(45) = {-0.062804, 0.747447, 0, 1.0};
Point(46) = {-0.065887, 0.746624, 0, 1.0};
Point(47) = {-0.067424, 0.746130, 0, 1.0};
Point(48) = {-0.068960, 0.745620, 0, 1.0};
Point(49) = {-0.070489, 0.744993, 0, 1.0};
Point(50) = {-0.071999, 0.744050, 0, 1.0};
Point(51) = {-0.073190, 0.742997, 0, 1.0};
Point(52) = {-0.073782, 0.742425, 0, 1.0};
Point(53) = {-0.074374, 0.741843, 0, 1.0};
Point(54) = {-0.074658, 0.741353, 0, 1.0};
Point(55) = {-0.074791, 0.740944, 0, 1.0};
Point(56) = {-0.074850, 0.740629, 0, 1.0};
Point(57) = {-0.074869, 0.739616, 0, 1.0};
Point(58) = {-0.074747, 0.738888, 0, 1.0};
Point(59) = {-0.074649, 0.738562, 0, 1.0};
Point(60) = {-0.074468, 0.738144, 0, 1.0};
Point(61) = {-0.074126, 0.737650, 0, 1.0};
Point(62) = {-0.073469, 0.737150, 0, 1.0};
Point(63) = {-0.072820, 0.736764, 0, 1.0};
Point(64) = {-0.071524, 0.736038, 0, 1.0};
Point(65) = {-0.069918, 0.735363, 0, 1.0};
Point(66) = {-0.068328, 0.734961, 0, 1.0};
Point(67) = {-0.066745, 0.734682, 0, 1.0};
Point(68) = {-0.065164, 0.734420, 0, 1.0};
Point(69) = {-0.061999, 0.733874, 0, 1.0};
Point(70) = {-0.058835, 0.733333, 0, 1.0};
Point(71) = {-0.055676, 0.732882, 0, 1.0};
Point(72) = {-0.052522, 0.732527, 0, 1.0};
Point(73) = {-0.049374, 0.732251, 0, 1.0};
Point(74) = {-0.046229, 0.732047, 0, 1.0};
Point(75) = {-0.043090, 0.731923, 0, 1.0};
Point(76) = {-0.039954, 0.731874, 0, 1.0};
Point(77) = {-0.036820, 0.731836, 0, 1.0};
Point(78) = {-0.033681, 0.731729, 0, 1.0};
Point(79) = {-0.030542, 0.731607, 0, 1.0};
Point(80) = {-0.027411, 0.731631, 0, 1.0};
Point(81) = {-0.024289, 0.731802, 0, 1.0};
Point(82) = {-0.021174, 0.732090, 0, 1.0};
Point(83) = {-0.018064, 0.732470, 0, 1.0};
Point(84) = {-0.014958, 0.732915, 0, 1.0};
Point(85) = {-0.011854, 0.733399, 0, 1.0};
Point(86) = {-0.008752, 0.733897, 0, 1.0};
Point(87) = {-0.005649, 0.734402, 0, 1.0};
Point(88) = {-0.002547, 0.734912, 0, 1.0};
Point(89) = {0.000555, 0.735421, 0, 1.0};
Point(90) = {0.003657, 0.735929, 0, 1.0};
Point(91) = {0.006760, 0.736432, 0, 1.0};
Point(92) = {0.009862, 0.736932, 0, 1.0};
Point(93) = {0.012965, 0.737432, 0, 1.0};
Point(94) = {0.016067, 0.737935, 0, 1.0};
Point(95) = {0.019169, 0.738444, 0, 1.0};
Point(96) = {0.022271, 0.738962, 0, 1.0};
Point(97) = {0.025372, 0.739487, 0, 1.0};
Point(98) = {0.028473, 0.740017, 0, 1.0};
Point(99) = {0.031574, 0.740550, 0, 1.0};
Point(100) = {0.034674, 0.741084, 0, 1.0};
Point(101) = {0.037775, 0.741618, 0, 1.0};
Point(102) = {0.040876, 0.742149, 0, 1.0};
Point(103) = {0.043977, 0.742675, 0, 1.0};
Point(104) = {0.047078, 0.743197, 0, 1.0};
Point(105) = {0.050180, 0.743711, 0, 1.0};
Point(106) = {0.053282, 0.744217, 0, 1.0};
Point(107) = {0.056385, 0.744718, 0, 1.0};
Point(108) = {0.059487, 0.745218, 0, 1.0};
Point(109) = {0.062590, 0.745720, 0, 1.0};
Point(110) = {0.065692, 0.746228, 0, 1.0};
Point(111) = {0.068794, 0.746744, 0, 1.0};
Point(112) = {0.071895, 0.747268, 0, 1.0};
Point(113) = {0.074911, 0.747783, 0, 1.0};
Point(114) = {-0.074823, -0.749262, 0, 1.0};
Point(115) = {-0.071767, -0.749436, 0, 1.0};
Point(116) = {-0.068625, -0.749597, 0, 1.0};
Point(117) = {-0.065484, -0.749733, 0, 1.0};
Point(118) = {-0.062346, -0.749840, 0, 1.0};
Point(119) = {-0.059209, -0.749919, 0, 1.0};
Point(120) = {-0.056073, -0.749970, 0, 1.0};
Point(121) = {-0.052940, -0.749997, 0, 1.0};
Point(122) = {-0.049807, -0.750000, 0, 1.0};
Point(123) = {-0.046676, -0.749983, 0, 1.0};
Point(124) = {-0.043545, -0.749952, 0, 1.0};
Point(125) = {-0.040415, -0.749913, 0, 1.0};
Point(126) = {-0.037285, -0.749874, 0, 1.0};
Point(127) = {-0.034155, -0.749843, 0, 1.0};
Point(128) = {-0.031024, -0.749824, 0, 1.0};
Point(129) = {-0.027892, -0.749814, 0, 1.0};
Point(130) = {-0.024760, -0.749809, 0, 1.0};
Point(131) = {-0.021628, -0.749804, 0, 1.0};
Point(132) = {-0.018497, -0.749794, 0, 1.0};
Point(133) = {-0.015365, -0.749775, 0, 1.0};
Point(134) = {-0.012234, -0.749753, 0, 1.0};
Point(135) = {-0.009103, -0.749735, 0, 1.0};
Point(136) = {-0.005971, -0.749729, 0, 1.0};
Point(137) = {-0.002838, -0.749743, 0, 1.0};
Point(138) = {0.000296, -0.749779, 0, 1.0};
Point(139) = {0.003431, -0.749824, 0, 1.0};
Point(140) = {0.006565, -0.749857, 0, 1.0};
Point(141) = {0.009698, -0.749859, 0, 1.0};
Point(142) = {0.012827, -0.749810, 0, 1.0};
Point(143) = {0.015953, -0.749697, 0, 1.0};
Point(144) = {0.019076, -0.749547, 0, 1.0};
Point(145) = {0.022200, -0.749399, 0, 1.0};
Point(146) = {0.025325, -0.749288, 0, 1.0};
Point(147) = {0.028456, -0.749255, 0, 1.0};
Point(148) = {0.031593, -0.749336, 0, 1.0};
Point(149) = {0.034738, -0.749551, 0, 1.0};
Point(150) = {0.037877, -0.749673, 0, 1.0};
Point(151) = {0.041003, -0.749561, 0, 1.0};
Point(152) = {0.044123, -0.749349, 0, 1.0};
Point(153) = {0.047244, -0.749158, 0, 1.0};
Point(154) = {0.050365, -0.748971, 0, 1.0};
Point(155) = {0.053483, -0.748728, 0, 1.0};
Point(156) = {0.056595, -0.748395, 0, 1.0};
Point(157) = {0.059703, -0.747978, 0, 1.0};
Point(158) = {0.062804, -0.747447, 0, 1.0};
Point(159) = {0.065887, -0.746624, 0, 1.0};
Point(160) = {0.067424, -0.746130, 0, 1.0};
Point(161) = {0.068960, -0.745620, 0, 1.0};
Point(162) = {0.070489, -0.744993, 0, 1.0};
Point(163) = {0.071999, -0.744050, 0, 1.0};
Point(164) = {0.073190, -0.742997, 0, 1.0};
Point(165) = {0.073782, -0.742425, 0, 1.0};
Point(166) = {0.074374, -0.741843, 0, 1.0};
Point(167) = {0.074658, -0.741353, 0, 1.0};
Point(168) = {0.074791, -0.740944, 0, 1.0};
Point(169) = {0.074850, -0.740629, 0, 1.0};
Point(170) = {0.074869, -0.739616, 0, 1.0};
Point(171) = {0.074747, -0.738888, 0, 1.0};
Point(172) = {0.074649, -0.738562, 0, 1.0};
Point(173) = {0.074468, -0.738144, 0, 1.0};
Point(174) = {0.074126, -0.737650, 0, 1.0};
Point(175) = {0.073469, -0.737150, 0, 1.0};
Point(176) = {0.072820, -0.736764, 0, 1.0};
Point(177) = {0.071524, -0.736038, 0, 1.0};
Point(178) = {0.069918, -0.735363, 0, 1.0};
Point(179) = {0.068328, -0.734961, 0, 1.0};
Point(180) = {0.066745, -0.734682, 0, 1.0};
Point(181) = {0.065164, -0.734420, 0, 1.0};
Point(182) = {0.061999, -0.733874, 0, 1.0};
Point(183) = {0.058835, -0.733333, 0, 1.0};
Point(184) = {0.055676, -0.732882, 0, 1.0};
Point(185) = {0.052522, -0.732527, 0, 1.0};
Point(186) = {0.049374, -0.732251, 0, 1.0};
Point(187) = {0.046229, -0.732047, 0, 1.0};
Point(188) = {0.043090, -0.731923, 0, 1.0};
Point(189) = {0.039954, -0.731874, 0, 1.0};
Point(190) = {0.036820, -0.731836, 0, 1.0};
Point(191) = {0.033681, -0.731729, 0, 1.0};
Point(192) = {0.030542, -0.731607, 0, 1.0};
Point(193) = {0.027411, -0.731631, 0, 1.0};
Point(194) = {0.024289, -0.731802, 0, 1.0};
Point(195) = {0.021174, -0.732090, 0, 1.0};
Point(196) = {0.018064, -0.732470, 0, 1.0};
Point(197) = {0.014958, -0.732915, 0, 1.0};
Point(198) = {0.011854, -0.733399, 0, 1.0};
Point(199) = {0.008752, -0.733897, 0, 1.0};
Point(200) = {0.005649, -0.734402, 0, 1.0};
Point(201) = {0.002547, -0.734912, 0, 1.0};
Point(202) = {-0.000555, -0.735421, 0, 1.0};
Point(203) = {-0.003657, -0.735929, 0, 1.0};
Point(204) = {-0.006760, -0.736432, 0, 1.0};
Point(205) = {-0.009862, -0.736932, 0, 1.0};
Point(206) = {-0.012965, -0.737432, 0, 1.0};
Point(207) = {-0.016067, -0.737935, 0, 1.0};
Point(208) = {-0.019169, -0.738444, 0, 1.0};
Point(209) = {-0.022271, -0.738962, 0, 1.0};
Point(210) = {-0.025372, -0.739487, 0, 1.0};
Point(211) = {-0.028473, -0.740017, 0, 1.0};
Point(212) = {-0.031574, -0.740550, 0, 1.0};
Point(213) = {-0.034674, -0.741084, 0, 1.0};
Point(214) = {-0.037775, -0.741618, 0, 1.0};
Point(215) = {-0.040876, -0.742149, 0, 1.0};
Point(216) = {-0.043977, -0.742675, 0, 1.0};
Point(217) = {-0.047078, -0.743197, 0, 1.0};
Point(218) = {-0.050180, -0.743711, 0, 1.0};
Point(219) = {-0.053282, -0.744217, 0, 1.0};
Point(220) = {-0.056385, -0.744718, 0, 1.0};
Point(221) = {-0.059487, -0.745218, 0, 1.0};
Point(222) = {-0.062590, -0.745720, 0, 1.0};
Point(223) = {-0.065692, -0.746228, 0, 1.0};
Point(224) = {-0.068794, -0.746744, 0, 1.0};
Point(225) = {-0.071895, -0.747268, 0, 1.0};
Point(226) = {-0.074911, -0.747783, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:36};
Spline(2) = {36:78};
Spline(3) = {78:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:149};
Spline(6) = {149:191};
Spline(7) = {191:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {36.00000000, 15.00000000, 0, 1.0};
Point(230) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
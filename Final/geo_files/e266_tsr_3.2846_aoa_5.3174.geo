SetFactory("OpenCASCADE");

Point(1) = {0.074645, 0.723322, 0, 1.0};
Point(2) = {0.074084, 0.723487, 0, 1.0};
Point(3) = {0.072485, 0.724023, 0, 1.0};
Point(4) = {0.070022, 0.724941, 0, 1.0};
Point(5) = {0.066821, 0.726143, 0, 1.0};
Point(6) = {0.062908, 0.727524, 0, 1.0};
Point(7) = {0.058271, 0.729063, 0, 1.0};
Point(8) = {0.052964, 0.730794, 0, 1.0};
Point(9) = {0.047090, 0.732720, 0, 1.0};
Point(10) = {0.040764, 0.734814, 0, 1.0};
Point(11) = {0.034101, 0.737041, 0, 1.0};
Point(12) = {0.027220, 0.739345, 0, 1.0};
Point(13) = {0.020244, 0.741654, 0, 1.0};
Point(14) = {0.013288, 0.743881, 0, 1.0};
Point(15) = {0.006458, 0.745880, 0, 1.0};
Point(16) = {-0.000255, 0.747477, 0, 1.0};
Point(17) = {-0.006955, 0.748629, 0, 1.0};
Point(18) = {-0.013656, 0.749405, 0, 1.0};
Point(19) = {-0.020311, 0.749848, 0, 1.0};
Point(20) = {-0.026861, 0.750000, 0, 1.0};
Point(21) = {-0.033227, 0.749887, 0, 1.0};
Point(22) = {-0.039341, 0.749527, 0, 1.0};
Point(23) = {-0.045137, 0.748937, 0, 1.0};
Point(24) = {-0.050554, 0.748135, 0, 1.0};
Point(25) = {-0.055539, 0.747147, 0, 1.0};
Point(26) = {-0.060037, 0.745994, 0, 1.0};
Point(27) = {-0.064006, 0.744702, 0, 1.0};
Point(28) = {-0.067404, 0.743307, 0, 1.0};
Point(29) = {-0.070199, 0.741842, 0, 1.0};
Point(30) = {-0.072361, 0.740352, 0, 1.0};
Point(31) = {-0.073866, 0.738898, 0, 1.0};
Point(32) = {-0.074677, 0.737566, 0, 1.0};
Point(33) = {-0.074595, 0.736457, 0, 1.0};
Point(34) = {-0.073516, 0.735422, 0, 1.0};
Point(35) = {-0.071548, 0.734307, 0, 1.0};
Point(36) = {-0.068765, 0.733155, 0, 1.0};
Point(37) = {-0.065214, 0.731989, 0, 1.0};
Point(38) = {-0.060936, 0.730820, 0, 1.0};
Point(39) = {-0.055986, 0.729658, 0, 1.0};
Point(40) = {-0.050425, 0.728513, 0, 1.0};
Point(41) = {-0.044326, 0.727400, 0, 1.0};
Point(42) = {-0.037760, 0.726331, 0, 1.0};
Point(43) = {-0.030803, 0.725319, 0, 1.0};
Point(44) = {-0.023539, 0.724380, 0, 1.0};
Point(45) = {-0.016052, 0.723530, 0, 1.0};
Point(46) = {-0.008428, 0.722781, 0, 1.0};
Point(47) = {-0.000758, 0.722152, 0, 1.0};
Point(48) = {0.006872, 0.721660, 0, 1.0};
Point(49) = {0.014371, 0.721328, 0, 1.0};
Point(50) = {0.021650, 0.721205, 0, 1.0};
Point(51) = {0.028692, 0.721360, 0, 1.0};
Point(52) = {0.035534, 0.721787, 0, 1.0};
Point(53) = {0.042190, 0.722408, 0, 1.0};
Point(54) = {0.048653, 0.723087, 0, 1.0};
Point(55) = {0.054803, 0.723647, 0, 1.0};
Point(56) = {0.060439, 0.723984, 0, 1.0};
Point(57) = {0.065361, 0.724071, 0, 1.0};
Point(58) = {0.069349, 0.723693, 0, 1.0};
Point(59) = {0.072274, 0.723413, 0, 1.0};
Point(60) = {0.074052, 0.723330, 0, 1.0};
Point(61) = {-0.074645, -0.723322, 0, 1.0};
Point(62) = {-0.074084, -0.723487, 0, 1.0};
Point(63) = {-0.072485, -0.724023, 0, 1.0};
Point(64) = {-0.070022, -0.724941, 0, 1.0};
Point(65) = {-0.066821, -0.726143, 0, 1.0};
Point(66) = {-0.062908, -0.727524, 0, 1.0};
Point(67) = {-0.058271, -0.729063, 0, 1.0};
Point(68) = {-0.052964, -0.730794, 0, 1.0};
Point(69) = {-0.047090, -0.732720, 0, 1.0};
Point(70) = {-0.040764, -0.734814, 0, 1.0};
Point(71) = {-0.034101, -0.737041, 0, 1.0};
Point(72) = {-0.027220, -0.739345, 0, 1.0};
Point(73) = {-0.020244, -0.741654, 0, 1.0};
Point(74) = {-0.013288, -0.743881, 0, 1.0};
Point(75) = {-0.006458, -0.745880, 0, 1.0};
Point(76) = {0.000255, -0.747477, 0, 1.0};
Point(77) = {0.006955, -0.748629, 0, 1.0};
Point(78) = {0.013656, -0.749405, 0, 1.0};
Point(79) = {0.020311, -0.749848, 0, 1.0};
Point(80) = {0.026861, -0.750000, 0, 1.0};
Point(81) = {0.033227, -0.749887, 0, 1.0};
Point(82) = {0.039341, -0.749527, 0, 1.0};
Point(83) = {0.045137, -0.748937, 0, 1.0};
Point(84) = {0.050554, -0.748135, 0, 1.0};
Point(85) = {0.055539, -0.747147, 0, 1.0};
Point(86) = {0.060037, -0.745994, 0, 1.0};
Point(87) = {0.064006, -0.744702, 0, 1.0};
Point(88) = {0.067404, -0.743307, 0, 1.0};
Point(89) = {0.070199, -0.741842, 0, 1.0};
Point(90) = {0.072361, -0.740352, 0, 1.0};
Point(91) = {0.073866, -0.738898, 0, 1.0};
Point(92) = {0.074677, -0.737566, 0, 1.0};
Point(93) = {0.074595, -0.736457, 0, 1.0};
Point(94) = {0.073516, -0.735422, 0, 1.0};
Point(95) = {0.071548, -0.734307, 0, 1.0};
Point(96) = {0.068765, -0.733155, 0, 1.0};
Point(97) = {0.065214, -0.731989, 0, 1.0};
Point(98) = {0.060936, -0.730820, 0, 1.0};
Point(99) = {0.055986, -0.729658, 0, 1.0};
Point(100) = {0.050425, -0.728513, 0, 1.0};
Point(101) = {0.044326, -0.727400, 0, 1.0};
Point(102) = {0.037760, -0.726331, 0, 1.0};
Point(103) = {0.030803, -0.725319, 0, 1.0};
Point(104) = {0.023539, -0.724380, 0, 1.0};
Point(105) = {0.016052, -0.723530, 0, 1.0};
Point(106) = {0.008428, -0.722781, 0, 1.0};
Point(107) = {0.000758, -0.722152, 0, 1.0};
Point(108) = {-0.006872, -0.721660, 0, 1.0};
Point(109) = {-0.014371, -0.721328, 0, 1.0};
Point(110) = {-0.021650, -0.721205, 0, 1.0};
Point(111) = {-0.028692, -0.721360, 0, 1.0};
Point(112) = {-0.035534, -0.721787, 0, 1.0};
Point(113) = {-0.042190, -0.722408, 0, 1.0};
Point(114) = {-0.048653, -0.723087, 0, 1.0};
Point(115) = {-0.054803, -0.723647, 0, 1.0};
Point(116) = {-0.060439, -0.723984, 0, 1.0};
Point(117) = {-0.065361, -0.724071, 0, 1.0};
Point(118) = {-0.069349, -0.723693, 0, 1.0};
Point(119) = {-0.072274, -0.723413, 0, 1.0};
Point(120) = {-0.074052, -0.723330, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
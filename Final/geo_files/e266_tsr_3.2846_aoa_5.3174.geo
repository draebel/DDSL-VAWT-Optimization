SetFactory("OpenCASCADE");

Point(1) = {0.111912, 0.723335, 0, 1.0};
Point(2) = {0.111351, 0.723500, 0, 1.0};
Point(3) = {0.109753, 0.724036, 0, 1.0};
Point(4) = {0.107291, 0.724953, 0, 1.0};
Point(5) = {0.104091, 0.726154, 0, 1.0};
Point(6) = {0.100180, 0.727535, 0, 1.0};
Point(7) = {0.095546, 0.729073, 0, 1.0};
Point(8) = {0.090241, 0.730804, 0, 1.0};
Point(9) = {0.084371, 0.732728, 0, 1.0};
Point(10) = {0.078047, 0.734821, 0, 1.0};
Point(11) = {0.071388, 0.737047, 0, 1.0};
Point(12) = {0.064510, 0.739350, 0, 1.0};
Point(13) = {0.057537, 0.741658, 0, 1.0};
Point(14) = {0.050584, 0.743884, 0, 1.0};
Point(15) = {0.043758, 0.745882, 0, 1.0};
Point(16) = {0.037047, 0.747478, 0, 1.0};
Point(17) = {0.030352, 0.748630, 0, 1.0};
Point(18) = {0.023654, 0.749406, 0, 1.0};
Point(19) = {0.017002, 0.749849, 0, 1.0};
Point(20) = {0.010455, 0.750000, 0, 1.0};
Point(21) = {0.004092, 0.749887, 0, 1.0};
Point(22) = {-0.002019, 0.749527, 0, 1.0};
Point(23) = {-0.007812, 0.748938, 0, 1.0};
Point(24) = {-0.013227, 0.748136, 0, 1.0};
Point(25) = {-0.018210, 0.747148, 0, 1.0};
Point(26) = {-0.022706, 0.745996, 0, 1.0};
Point(27) = {-0.026673, 0.744705, 0, 1.0};
Point(28) = {-0.030069, 0.743310, 0, 1.0};
Point(29) = {-0.032862, 0.741846, 0, 1.0};
Point(30) = {-0.035024, 0.740357, 0, 1.0};
Point(31) = {-0.036528, 0.738903, 0, 1.0};
Point(32) = {-0.037339, 0.737572, 0, 1.0};
Point(33) = {-0.037257, 0.736464, 0, 1.0};
Point(34) = {-0.036178, 0.735429, 0, 1.0};
Point(35) = {-0.034211, 0.734314, 0, 1.0};
Point(36) = {-0.031429, 0.733164, 0, 1.0};
Point(37) = {-0.027879, 0.731997, 0, 1.0};
Point(38) = {-0.023604, 0.730830, 0, 1.0};
Point(39) = {-0.018656, 0.729667, 0, 1.0};
Point(40) = {-0.013098, 0.728523, 0, 1.0};
Point(41) = {-0.007002, 0.727411, 0, 1.0};
Point(42) = {-0.000439, 0.726342, 0, 1.0};
Point(43) = {0.006514, 0.725331, 0, 1.0};
Point(44) = {0.013775, 0.724393, 0, 1.0};
Point(45) = {0.021259, 0.723543, 0, 1.0};
Point(46) = {0.028879, 0.722794, 0, 1.0};
Point(47) = {0.036545, 0.722165, 0, 1.0};
Point(48) = {0.044172, 0.721673, 0, 1.0};
Point(49) = {0.051667, 0.721342, 0, 1.0};
Point(50) = {0.058942, 0.721219, 0, 1.0};
Point(51) = {0.065981, 0.721374, 0, 1.0};
Point(52) = {0.072820, 0.721801, 0, 1.0};
Point(53) = {0.079473, 0.722421, 0, 1.0};
Point(54) = {0.085932, 0.723100, 0, 1.0};
Point(55) = {0.092080, 0.723659, 0, 1.0};
Point(56) = {0.097712, 0.723997, 0, 1.0};
Point(57) = {0.102632, 0.724084, 0, 1.0};
Point(58) = {0.106618, 0.723705, 0, 1.0};
Point(59) = {0.109543, 0.723426, 0, 1.0};
Point(60) = {0.111320, 0.723343, 0, 1.0};
Point(61) = {-0.111912, -0.723335, 0, 1.0};
Point(62) = {-0.111351, -0.723500, 0, 1.0};
Point(63) = {-0.109753, -0.724036, 0, 1.0};
Point(64) = {-0.107291, -0.724953, 0, 1.0};
Point(65) = {-0.104091, -0.726154, 0, 1.0};
Point(66) = {-0.100180, -0.727535, 0, 1.0};
Point(67) = {-0.095546, -0.729073, 0, 1.0};
Point(68) = {-0.090241, -0.730804, 0, 1.0};
Point(69) = {-0.084371, -0.732728, 0, 1.0};
Point(70) = {-0.078047, -0.734821, 0, 1.0};
Point(71) = {-0.071388, -0.737047, 0, 1.0};
Point(72) = {-0.064510, -0.739350, 0, 1.0};
Point(73) = {-0.057537, -0.741658, 0, 1.0};
Point(74) = {-0.050584, -0.743884, 0, 1.0};
Point(75) = {-0.043758, -0.745882, 0, 1.0};
Point(76) = {-0.037047, -0.747478, 0, 1.0};
Point(77) = {-0.030352, -0.748630, 0, 1.0};
Point(78) = {-0.023654, -0.749406, 0, 1.0};
Point(79) = {-0.017002, -0.749849, 0, 1.0};
Point(80) = {-0.010455, -0.750000, 0, 1.0};
Point(81) = {-0.004092, -0.749887, 0, 1.0};
Point(82) = {0.002019, -0.749527, 0, 1.0};
Point(83) = {0.007812, -0.748938, 0, 1.0};
Point(84) = {0.013227, -0.748136, 0, 1.0};
Point(85) = {0.018210, -0.747148, 0, 1.0};
Point(86) = {0.022706, -0.745996, 0, 1.0};
Point(87) = {0.026673, -0.744705, 0, 1.0};
Point(88) = {0.030069, -0.743310, 0, 1.0};
Point(89) = {0.032862, -0.741846, 0, 1.0};
Point(90) = {0.035024, -0.740357, 0, 1.0};
Point(91) = {0.036528, -0.738903, 0, 1.0};
Point(92) = {0.037339, -0.737572, 0, 1.0};
Point(93) = {0.037257, -0.736464, 0, 1.0};
Point(94) = {0.036178, -0.735429, 0, 1.0};
Point(95) = {0.034211, -0.734314, 0, 1.0};
Point(96) = {0.031429, -0.733164, 0, 1.0};
Point(97) = {0.027879, -0.731997, 0, 1.0};
Point(98) = {0.023604, -0.730830, 0, 1.0};
Point(99) = {0.018656, -0.729667, 0, 1.0};
Point(100) = {0.013098, -0.728523, 0, 1.0};
Point(101) = {0.007002, -0.727411, 0, 1.0};
Point(102) = {0.000439, -0.726342, 0, 1.0};
Point(103) = {-0.006514, -0.725331, 0, 1.0};
Point(104) = {-0.013775, -0.724393, 0, 1.0};
Point(105) = {-0.021259, -0.723543, 0, 1.0};
Point(106) = {-0.028879, -0.722794, 0, 1.0};
Point(107) = {-0.036545, -0.722165, 0, 1.0};
Point(108) = {-0.044172, -0.721673, 0, 1.0};
Point(109) = {-0.051667, -0.721342, 0, 1.0};
Point(110) = {-0.058942, -0.721219, 0, 1.0};
Point(111) = {-0.065981, -0.721374, 0, 1.0};
Point(112) = {-0.072820, -0.721801, 0, 1.0};
Point(113) = {-0.079473, -0.722421, 0, 1.0};
Point(114) = {-0.085932, -0.723100, 0, 1.0};
Point(115) = {-0.092080, -0.723659, 0, 1.0};
Point(116) = {-0.097712, -0.723997, 0, 1.0};
Point(117) = {-0.102632, -0.724084, 0, 1.0};
Point(118) = {-0.106618, -0.723705, 0, 1.0};
Point(119) = {-0.109543, -0.723426, 0, 1.0};
Point(120) = {-0.111320, -0.723343, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
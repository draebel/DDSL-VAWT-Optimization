SetFactory("OpenCASCADE");

Point(1) = {0.111854, 0.723328, 0, 1.0};
Point(2) = {0.111293, 0.723493, 0, 1.0};
Point(3) = {0.109695, 0.724029, 0, 1.0};
Point(4) = {0.107233, 0.724947, 0, 1.0};
Point(5) = {0.104032, 0.726149, 0, 1.0};
Point(6) = {0.100120, 0.727530, 0, 1.0};
Point(7) = {0.095485, 0.729068, 0, 1.0};
Point(8) = {0.090179, 0.730799, 0, 1.0};
Point(9) = {0.084306, 0.732724, 0, 1.0};
Point(10) = {0.077981, 0.734818, 0, 1.0};
Point(11) = {0.071320, 0.737044, 0, 1.0};
Point(12) = {0.064440, 0.739347, 0, 1.0};
Point(13) = {0.057466, 0.741656, 0, 1.0};
Point(14) = {0.050512, 0.743882, 0, 1.0};
Point(15) = {0.043684, 0.745881, 0, 1.0};
Point(16) = {0.036972, 0.747478, 0, 1.0};
Point(17) = {0.030274, 0.748630, 0, 1.0};
Point(18) = {0.023575, 0.749406, 0, 1.0};
Point(19) = {0.016921, 0.749849, 0, 1.0};
Point(20) = {0.010373, 0.750000, 0, 1.0};
Point(21) = {0.004008, 0.749887, 0, 1.0};
Point(22) = {-0.002104, 0.749527, 0, 1.0};
Point(23) = {-0.007899, 0.748938, 0, 1.0};
Point(24) = {-0.013315, 0.748136, 0, 1.0};
Point(25) = {-0.018299, 0.747147, 0, 1.0};
Point(26) = {-0.022796, 0.745995, 0, 1.0};
Point(27) = {-0.026764, 0.744704, 0, 1.0};
Point(28) = {-0.030161, 0.743309, 0, 1.0};
Point(29) = {-0.032955, 0.741844, 0, 1.0};
Point(30) = {-0.035117, 0.740355, 0, 1.0};
Point(31) = {-0.036621, 0.738901, 0, 1.0};
Point(32) = {-0.037432, 0.737569, 0, 1.0};
Point(33) = {-0.037350, 0.736460, 0, 1.0};
Point(34) = {-0.036271, 0.735426, 0, 1.0};
Point(35) = {-0.034304, 0.734310, 0, 1.0};
Point(36) = {-0.031521, 0.733159, 0, 1.0};
Point(37) = {-0.027971, 0.731993, 0, 1.0};
Point(38) = {-0.023694, 0.730825, 0, 1.0};
Point(39) = {-0.018745, 0.729662, 0, 1.0};
Point(40) = {-0.013186, 0.728518, 0, 1.0};
Point(41) = {-0.007089, 0.727405, 0, 1.0};
Point(42) = {-0.000523, 0.726336, 0, 1.0};
Point(43) = {0.006431, 0.725325, 0, 1.0};
Point(44) = {0.013694, 0.724386, 0, 1.0};
Point(45) = {0.021179, 0.723536, 0, 1.0};
Point(46) = {0.028801, 0.722788, 0, 1.0};
Point(47) = {0.036470, 0.722158, 0, 1.0};
Point(48) = {0.044098, 0.721667, 0, 1.0};
Point(49) = {0.051595, 0.721335, 0, 1.0};
Point(50) = {0.058872, 0.721212, 0, 1.0};
Point(51) = {0.065913, 0.721367, 0, 1.0};
Point(52) = {0.072753, 0.721794, 0, 1.0};
Point(53) = {0.079407, 0.722415, 0, 1.0};
Point(54) = {0.085868, 0.723094, 0, 1.0};
Point(55) = {0.092017, 0.723653, 0, 1.0};
Point(56) = {0.097651, 0.723990, 0, 1.0};
Point(57) = {0.102572, 0.724078, 0, 1.0};
Point(58) = {0.106559, 0.723699, 0, 1.0};
Point(59) = {0.109484, 0.723419, 0, 1.0};
Point(60) = {0.111262, 0.723337, 0, 1.0};
Point(61) = {-0.111854, -0.723328, 0, 1.0};
Point(62) = {-0.111293, -0.723493, 0, 1.0};
Point(63) = {-0.109695, -0.724029, 0, 1.0};
Point(64) = {-0.107233, -0.724947, 0, 1.0};
Point(65) = {-0.104032, -0.726149, 0, 1.0};
Point(66) = {-0.100120, -0.727530, 0, 1.0};
Point(67) = {-0.095485, -0.729068, 0, 1.0};
Point(68) = {-0.090179, -0.730799, 0, 1.0};
Point(69) = {-0.084306, -0.732724, 0, 1.0};
Point(70) = {-0.077981, -0.734818, 0, 1.0};
Point(71) = {-0.071320, -0.737044, 0, 1.0};
Point(72) = {-0.064440, -0.739347, 0, 1.0};
Point(73) = {-0.057466, -0.741656, 0, 1.0};
Point(74) = {-0.050512, -0.743882, 0, 1.0};
Point(75) = {-0.043684, -0.745881, 0, 1.0};
Point(76) = {-0.036972, -0.747478, 0, 1.0};
Point(77) = {-0.030274, -0.748630, 0, 1.0};
Point(78) = {-0.023575, -0.749406, 0, 1.0};
Point(79) = {-0.016921, -0.749849, 0, 1.0};
Point(80) = {-0.010373, -0.750000, 0, 1.0};
Point(81) = {-0.004008, -0.749887, 0, 1.0};
Point(82) = {0.002104, -0.749527, 0, 1.0};
Point(83) = {0.007899, -0.748938, 0, 1.0};
Point(84) = {0.013315, -0.748136, 0, 1.0};
Point(85) = {0.018299, -0.747147, 0, 1.0};
Point(86) = {0.022796, -0.745995, 0, 1.0};
Point(87) = {0.026764, -0.744704, 0, 1.0};
Point(88) = {0.030161, -0.743309, 0, 1.0};
Point(89) = {0.032955, -0.741844, 0, 1.0};
Point(90) = {0.035117, -0.740355, 0, 1.0};
Point(91) = {0.036621, -0.738901, 0, 1.0};
Point(92) = {0.037432, -0.737569, 0, 1.0};
Point(93) = {0.037350, -0.736460, 0, 1.0};
Point(94) = {0.036271, -0.735426, 0, 1.0};
Point(95) = {0.034304, -0.734310, 0, 1.0};
Point(96) = {0.031521, -0.733159, 0, 1.0};
Point(97) = {0.027971, -0.731993, 0, 1.0};
Point(98) = {0.023694, -0.730825, 0, 1.0};
Point(99) = {0.018745, -0.729662, 0, 1.0};
Point(100) = {0.013186, -0.728518, 0, 1.0};
Point(101) = {0.007089, -0.727405, 0, 1.0};
Point(102) = {0.000523, -0.726336, 0, 1.0};
Point(103) = {-0.006431, -0.725325, 0, 1.0};
Point(104) = {-0.013694, -0.724386, 0, 1.0};
Point(105) = {-0.021179, -0.723536, 0, 1.0};
Point(106) = {-0.028801, -0.722788, 0, 1.0};
Point(107) = {-0.036470, -0.722158, 0, 1.0};
Point(108) = {-0.044098, -0.721667, 0, 1.0};
Point(109) = {-0.051595, -0.721335, 0, 1.0};
Point(110) = {-0.058872, -0.721212, 0, 1.0};
Point(111) = {-0.065913, -0.721367, 0, 1.0};
Point(112) = {-0.072753, -0.721794, 0, 1.0};
Point(113) = {-0.079407, -0.722415, 0, 1.0};
Point(114) = {-0.085868, -0.723094, 0, 1.0};
Point(115) = {-0.092017, -0.723653, 0, 1.0};
Point(116) = {-0.097651, -0.723990, 0, 1.0};
Point(117) = {-0.102572, -0.724078, 0, 1.0};
Point(118) = {-0.106559, -0.723699, 0, 1.0};
Point(119) = {-0.109484, -0.723419, 0, 1.0};
Point(120) = {-0.111262, -0.723337, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
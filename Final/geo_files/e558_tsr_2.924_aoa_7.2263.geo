SetFactory("OpenCASCADE");

Point(1) = {0.111465, 0.719652, 0, 1.0};
Point(2) = {0.110951, 0.719873, 0, 1.0};
Point(3) = {0.109525, 0.720541, 0, 1.0};
Point(4) = {0.107372, 0.721572, 0, 1.0};
Point(5) = {0.104531, 0.722802, 0, 1.0};
Point(6) = {0.100945, 0.724177, 0, 1.0};
Point(7) = {0.096627, 0.725728, 0, 1.0};
Point(8) = {0.091650, 0.727453, 0, 1.0};
Point(9) = {0.086092, 0.729335, 0, 1.0};
Point(10) = {0.080035, 0.731343, 0, 1.0};
Point(11) = {0.073563, 0.733443, 0, 1.0};
Point(12) = {0.066763, 0.735596, 0, 1.0};
Point(13) = {0.059723, 0.737756, 0, 1.0};
Point(14) = {0.052528, 0.739874, 0, 1.0};
Point(15) = {0.045256, 0.741905, 0, 1.0};
Point(16) = {0.037989, 0.743798, 0, 1.0};
Point(17) = {0.030795, 0.745509, 0, 1.0};
Point(18) = {0.023744, 0.746997, 0, 1.0};
Point(19) = {0.016895, 0.748222, 0, 1.0};
Point(20) = {0.010306, 0.749151, 0, 1.0};
Point(21) = {0.004018, 0.749749, 0, 1.0};
Point(22) = {-0.001940, 0.750000, 0, 1.0};
Point(23) = {-0.007544, 0.749902, 0, 1.0};
Point(24) = {-0.012777, 0.749475, 0, 1.0};
Point(25) = {-0.017614, 0.748760, 0, 1.0};
Point(26) = {-0.022007, 0.747796, 0, 1.0};
Point(27) = {-0.025923, 0.746623, 0, 1.0};
Point(28) = {-0.029319, 0.745280, 0, 1.0};
Point(29) = {-0.032158, 0.743811, 0, 1.0};
Point(30) = {-0.034412, 0.742266, 0, 1.0};
Point(31) = {-0.036046, 0.740698, 0, 1.0};
Point(32) = {-0.037029, 0.739183, 0, 1.0};
Point(33) = {-0.037202, 0.737845, 0, 1.0};
Point(34) = {-0.036453, 0.736533, 0, 1.0};
Point(35) = {-0.034893, 0.735075, 0, 1.0};
Point(36) = {-0.032636, 0.733569, 0, 1.0};
Point(37) = {-0.029719, 0.732085, 0, 1.0};
Point(38) = {-0.026164, 0.730673, 0, 1.0};
Point(39) = {-0.021995, 0.729372, 0, 1.0};
Point(40) = {-0.017243, 0.728221, 0, 1.0};
Point(41) = {-0.011926, 0.727257, 0, 1.0};
Point(42) = {-0.006059, 0.726498, 0, 1.0};
Point(43) = {0.000336, 0.725948, 0, 1.0};
Point(44) = {0.007238, 0.725591, 0, 1.0};
Point(45) = {0.014611, 0.725397, 0, 1.0};
Point(46) = {0.022409, 0.725310, 0, 1.0};
Point(47) = {0.030543, 0.725253, 0, 1.0};
Point(48) = {0.038888, 0.725177, 0, 1.0};
Point(49) = {0.047319, 0.725050, 0, 1.0};
Point(50) = {0.055705, 0.724852, 0, 1.0};
Point(51) = {0.063919, 0.724570, 0, 1.0};
Point(52) = {0.071834, 0.724200, 0, 1.0};
Point(53) = {0.079327, 0.723744, 0, 1.0};
Point(54) = {0.086278, 0.723210, 0, 1.0};
Point(55) = {0.092575, 0.722613, 0, 1.0};
Point(56) = {0.098115, 0.721977, 0, 1.0};
Point(57) = {0.102799, 0.721330, 0, 1.0};
Point(58) = {0.106540, 0.720712, 0, 1.0};
Point(59) = {0.107774, 0.720365, 0, 1.0};
Point(60) = {0.110912, 0.719795, 0, 1.0};
Point(61) = {-0.111465, -0.719652, 0, 1.0};
Point(62) = {-0.110951, -0.719873, 0, 1.0};
Point(63) = {-0.109525, -0.720541, 0, 1.0};
Point(64) = {-0.107372, -0.721572, 0, 1.0};
Point(65) = {-0.104531, -0.722802, 0, 1.0};
Point(66) = {-0.100945, -0.724177, 0, 1.0};
Point(67) = {-0.096627, -0.725728, 0, 1.0};
Point(68) = {-0.091650, -0.727453, 0, 1.0};
Point(69) = {-0.086092, -0.729335, 0, 1.0};
Point(70) = {-0.080035, -0.731343, 0, 1.0};
Point(71) = {-0.073563, -0.733443, 0, 1.0};
Point(72) = {-0.066763, -0.735596, 0, 1.0};
Point(73) = {-0.059723, -0.737756, 0, 1.0};
Point(74) = {-0.052528, -0.739874, 0, 1.0};
Point(75) = {-0.045256, -0.741905, 0, 1.0};
Point(76) = {-0.037989, -0.743798, 0, 1.0};
Point(77) = {-0.030795, -0.745509, 0, 1.0};
Point(78) = {-0.023744, -0.746997, 0, 1.0};
Point(79) = {-0.016895, -0.748222, 0, 1.0};
Point(80) = {-0.010306, -0.749151, 0, 1.0};
Point(81) = {-0.004018, -0.749749, 0, 1.0};
Point(82) = {0.001940, -0.750000, 0, 1.0};
Point(83) = {0.007544, -0.749902, 0, 1.0};
Point(84) = {0.012777, -0.749475, 0, 1.0};
Point(85) = {0.017614, -0.748760, 0, 1.0};
Point(86) = {0.022007, -0.747796, 0, 1.0};
Point(87) = {0.025923, -0.746623, 0, 1.0};
Point(88) = {0.029319, -0.745280, 0, 1.0};
Point(89) = {0.032158, -0.743811, 0, 1.0};
Point(90) = {0.034412, -0.742266, 0, 1.0};
Point(91) = {0.036046, -0.740698, 0, 1.0};
Point(92) = {0.037029, -0.739183, 0, 1.0};
Point(93) = {0.037202, -0.737845, 0, 1.0};
Point(94) = {0.036453, -0.736533, 0, 1.0};
Point(95) = {0.034893, -0.735075, 0, 1.0};
Point(96) = {0.032636, -0.733569, 0, 1.0};
Point(97) = {0.029719, -0.732085, 0, 1.0};
Point(98) = {0.026164, -0.730673, 0, 1.0};
Point(99) = {0.021995, -0.729372, 0, 1.0};
Point(100) = {0.017243, -0.728221, 0, 1.0};
Point(101) = {0.011926, -0.727257, 0, 1.0};
Point(102) = {0.006059, -0.726498, 0, 1.0};
Point(103) = {-0.000336, -0.725948, 0, 1.0};
Point(104) = {-0.007238, -0.725591, 0, 1.0};
Point(105) = {-0.014611, -0.725397, 0, 1.0};
Point(106) = {-0.022409, -0.725310, 0, 1.0};
Point(107) = {-0.030543, -0.725253, 0, 1.0};
Point(108) = {-0.038888, -0.725177, 0, 1.0};
Point(109) = {-0.047319, -0.725050, 0, 1.0};
Point(110) = {-0.055705, -0.724852, 0, 1.0};
Point(111) = {-0.063919, -0.724570, 0, 1.0};
Point(112) = {-0.071834, -0.724200, 0, 1.0};
Point(113) = {-0.079327, -0.723744, 0, 1.0};
Point(114) = {-0.086278, -0.723210, 0, 1.0};
Point(115) = {-0.092575, -0.722613, 0, 1.0};
Point(116) = {-0.098115, -0.721977, 0, 1.0};
Point(117) = {-0.102799, -0.721330, 0, 1.0};
Point(118) = {-0.106540, -0.720712, 0, 1.0};
Point(119) = {-0.107774, -0.720365, 0, 1.0};
Point(120) = {-0.110912, -0.719795, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
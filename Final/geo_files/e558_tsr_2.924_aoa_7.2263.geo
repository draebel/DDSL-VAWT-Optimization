SetFactory("OpenCASCADE");

Point(1) = {0.111689, 0.719607, 0, 1.0};
Point(2) = {0.111173, 0.719828, 0, 1.0};
Point(3) = {0.109745, 0.720496, 0, 1.0};
Point(4) = {0.107590, 0.721529, 0, 1.0};
Point(5) = {0.104744, 0.722762, 0, 1.0};
Point(6) = {0.101152, 0.724138, 0, 1.0};
Point(7) = {0.096828, 0.725692, 0, 1.0};
Point(8) = {0.091843, 0.727419, 0, 1.0};
Point(9) = {0.086278, 0.729303, 0, 1.0};
Point(10) = {0.080211, 0.731315, 0, 1.0};
Point(11) = {0.073729, 0.733419, 0, 1.0};
Point(12) = {0.066919, 0.735574, 0, 1.0};
Point(13) = {0.059868, 0.737738, 0, 1.0};
Point(14) = {0.052662, 0.739859, 0, 1.0};
Point(15) = {0.045380, 0.741893, 0, 1.0};
Point(16) = {0.038102, 0.743789, 0, 1.0};
Point(17) = {0.030897, 0.745503, 0, 1.0};
Point(18) = {0.023835, 0.746993, 0, 1.0};
Point(19) = {0.016976, 0.748220, 0, 1.0};
Point(20) = {0.010377, 0.749150, 0, 1.0};
Point(21) = {0.004079, 0.749749, 0, 1.0};
Point(22) = {-0.001887, 0.750000, 0, 1.0};
Point(23) = {-0.007499, 0.749902, 0, 1.0};
Point(24) = {-0.012741, 0.749474, 0, 1.0};
Point(25) = {-0.017584, 0.748758, 0, 1.0};
Point(26) = {-0.021984, 0.747792, 0, 1.0};
Point(27) = {-0.025906, 0.746618, 0, 1.0};
Point(28) = {-0.029307, 0.745272, 0, 1.0};
Point(29) = {-0.032150, 0.743802, 0, 1.0};
Point(30) = {-0.034407, 0.742254, 0, 1.0};
Point(31) = {-0.036044, 0.740684, 0, 1.0};
Point(32) = {-0.037029, 0.739167, 0, 1.0};
Point(33) = {-0.037202, 0.737827, 0, 1.0};
Point(34) = {-0.036452, 0.736512, 0, 1.0};
Point(35) = {-0.034889, 0.735052, 0, 1.0};
Point(36) = {-0.032629, 0.733545, 0, 1.0};
Point(37) = {-0.029708, 0.732058, 0, 1.0};
Point(38) = {-0.026147, 0.730644, 0, 1.0};
Point(39) = {-0.021972, 0.729341, 0, 1.0};
Point(40) = {-0.017213, 0.728188, 0, 1.0};
Point(41) = {-0.011888, 0.727223, 0, 1.0};
Point(42) = {-0.006012, 0.726463, 0, 1.0};
Point(43) = {0.000393, 0.725912, 0, 1.0};
Point(44) = {0.007305, 0.725555, 0, 1.0};
Point(45) = {0.014689, 0.725360, 0, 1.0};
Point(46) = {0.022499, 0.725273, 0, 1.0};
Point(47) = {0.030645, 0.725216, 0, 1.0};
Point(48) = {0.039003, 0.725140, 0, 1.0};
Point(49) = {0.047446, 0.725012, 0, 1.0};
Point(50) = {0.055845, 0.724814, 0, 1.0};
Point(51) = {0.064071, 0.724532, 0, 1.0};
Point(52) = {0.071998, 0.724161, 0, 1.0};
Point(53) = {0.079502, 0.723705, 0, 1.0};
Point(54) = {0.086464, 0.723170, 0, 1.0};
Point(55) = {0.092770, 0.722571, 0, 1.0};
Point(56) = {0.098319, 0.721934, 0, 1.0};
Point(57) = {0.103009, 0.721287, 0, 1.0};
Point(58) = {0.106756, 0.720668, 0, 1.0};
Point(59) = {0.107992, 0.720321, 0, 1.0};
Point(60) = {0.111135, 0.719750, 0, 1.0};
Point(61) = {-0.111689, -0.719607, 0, 1.0};
Point(62) = {-0.111173, -0.719828, 0, 1.0};
Point(63) = {-0.109745, -0.720496, 0, 1.0};
Point(64) = {-0.107590, -0.721529, 0, 1.0};
Point(65) = {-0.104744, -0.722762, 0, 1.0};
Point(66) = {-0.101152, -0.724138, 0, 1.0};
Point(67) = {-0.096828, -0.725692, 0, 1.0};
Point(68) = {-0.091843, -0.727419, 0, 1.0};
Point(69) = {-0.086278, -0.729303, 0, 1.0};
Point(70) = {-0.080211, -0.731315, 0, 1.0};
Point(71) = {-0.073729, -0.733419, 0, 1.0};
Point(72) = {-0.066919, -0.735574, 0, 1.0};
Point(73) = {-0.059868, -0.737738, 0, 1.0};
Point(74) = {-0.052662, -0.739859, 0, 1.0};
Point(75) = {-0.045380, -0.741893, 0, 1.0};
Point(76) = {-0.038102, -0.743789, 0, 1.0};
Point(77) = {-0.030897, -0.745503, 0, 1.0};
Point(78) = {-0.023835, -0.746993, 0, 1.0};
Point(79) = {-0.016976, -0.748220, 0, 1.0};
Point(80) = {-0.010377, -0.749150, 0, 1.0};
Point(81) = {-0.004079, -0.749749, 0, 1.0};
Point(82) = {0.001887, -0.750000, 0, 1.0};
Point(83) = {0.007499, -0.749902, 0, 1.0};
Point(84) = {0.012741, -0.749474, 0, 1.0};
Point(85) = {0.017584, -0.748758, 0, 1.0};
Point(86) = {0.021984, -0.747792, 0, 1.0};
Point(87) = {0.025906, -0.746618, 0, 1.0};
Point(88) = {0.029307, -0.745272, 0, 1.0};
Point(89) = {0.032150, -0.743802, 0, 1.0};
Point(90) = {0.034407, -0.742254, 0, 1.0};
Point(91) = {0.036044, -0.740684, 0, 1.0};
Point(92) = {0.037029, -0.739167, 0, 1.0};
Point(93) = {0.037202, -0.737827, 0, 1.0};
Point(94) = {0.036452, -0.736512, 0, 1.0};
Point(95) = {0.034889, -0.735052, 0, 1.0};
Point(96) = {0.032629, -0.733545, 0, 1.0};
Point(97) = {0.029708, -0.732058, 0, 1.0};
Point(98) = {0.026147, -0.730644, 0, 1.0};
Point(99) = {0.021972, -0.729341, 0, 1.0};
Point(100) = {0.017213, -0.728188, 0, 1.0};
Point(101) = {0.011888, -0.727223, 0, 1.0};
Point(102) = {0.006012, -0.726463, 0, 1.0};
Point(103) = {-0.000393, -0.725912, 0, 1.0};
Point(104) = {-0.007305, -0.725555, 0, 1.0};
Point(105) = {-0.014689, -0.725360, 0, 1.0};
Point(106) = {-0.022499, -0.725273, 0, 1.0};
Point(107) = {-0.030645, -0.725216, 0, 1.0};
Point(108) = {-0.039003, -0.725140, 0, 1.0};
Point(109) = {-0.047446, -0.725012, 0, 1.0};
Point(110) = {-0.055845, -0.724814, 0, 1.0};
Point(111) = {-0.064071, -0.724532, 0, 1.0};
Point(112) = {-0.071998, -0.724161, 0, 1.0};
Point(113) = {-0.079502, -0.723705, 0, 1.0};
Point(114) = {-0.086464, -0.723170, 0, 1.0};
Point(115) = {-0.092770, -0.722571, 0, 1.0};
Point(116) = {-0.098319, -0.721934, 0, 1.0};
Point(117) = {-0.103009, -0.721287, 0, 1.0};
Point(118) = {-0.106756, -0.720668, 0, 1.0};
Point(119) = {-0.107992, -0.720321, 0, 1.0};
Point(120) = {-0.111135, -0.719750, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074206, 0.729753, 0, 1.0};
Point(2) = {0.073863, 0.729900, 0, 1.0};
Point(3) = {0.072911, 0.730346, 0, 1.0};
Point(4) = {0.071475, 0.731034, 0, 1.0};
Point(5) = {0.069579, 0.731855, 0, 1.0};
Point(6) = {0.067187, 0.732772, 0, 1.0};
Point(7) = {0.064306, 0.733806, 0, 1.0};
Point(8) = {0.060985, 0.734957, 0, 1.0};
Point(9) = {0.057278, 0.736213, 0, 1.0};
Point(10) = {0.053236, 0.737553, 0, 1.0};
Point(11) = {0.048918, 0.738954, 0, 1.0};
Point(12) = {0.044382, 0.740390, 0, 1.0};
Point(13) = {0.039685, 0.741831, 0, 1.0};
Point(14) = {0.034884, 0.743244, 0, 1.0};
Point(15) = {0.030033, 0.744599, 0, 1.0};
Point(16) = {0.025185, 0.745862, 0, 1.0};
Point(17) = {0.020385, 0.747004, 0, 1.0};
Point(18) = {0.015681, 0.747997, 0, 1.0};
Point(19) = {0.011111, 0.748814, 0, 1.0};
Point(20) = {0.006715, 0.749434, 0, 1.0};
Point(21) = {0.002520, 0.749833, 0, 1.0};
Point(22) = {-0.001454, 0.750000, 0, 1.0};
Point(23) = {-0.005193, 0.749935, 0, 1.0};
Point(24) = {-0.008685, 0.749650, 0, 1.0};
Point(25) = {-0.011912, 0.749173, 0, 1.0};
Point(26) = {-0.014843, 0.748529, 0, 1.0};
Point(27) = {-0.017455, 0.747747, 0, 1.0};
Point(28) = {-0.019721, 0.746851, 0, 1.0};
Point(29) = {-0.021615, 0.745871, 0, 1.0};
Point(30) = {-0.023119, 0.744840, 0, 1.0};
Point(31) = {-0.024209, 0.743794, 0, 1.0};
Point(32) = {-0.024865, 0.742783, 0, 1.0};
Point(33) = {-0.024980, 0.741891, 0, 1.0};
Point(34) = {-0.024481, 0.741015, 0, 1.0};
Point(35) = {-0.023440, 0.740042, 0, 1.0};
Point(36) = {-0.021934, 0.739038, 0, 1.0};
Point(37) = {-0.019988, 0.738047, 0, 1.0};
Point(38) = {-0.017616, 0.737105, 0, 1.0};
Point(39) = {-0.014835, 0.736238, 0, 1.0};
Point(40) = {-0.011664, 0.735470, 0, 1.0};
Point(41) = {-0.008117, 0.734827, 0, 1.0};
Point(42) = {-0.004203, 0.734320, 0, 1.0};
Point(43) = {0.000064, 0.733954, 0, 1.0};
Point(44) = {0.004669, 0.733715, 0, 1.0};
Point(45) = {0.009588, 0.733586, 0, 1.0};
Point(46) = {0.014791, 0.733528, 0, 1.0};
Point(47) = {0.020217, 0.733490, 0, 1.0};
Point(48) = {0.025785, 0.733439, 0, 1.0};
Point(49) = {0.031410, 0.733354, 0, 1.0};
Point(50) = {0.037005, 0.733222, 0, 1.0};
Point(51) = {0.042484, 0.733034, 0, 1.0};
Point(52) = {0.047765, 0.732787, 0, 1.0};
Point(53) = {0.052764, 0.732483, 0, 1.0};
Point(54) = {0.057402, 0.732127, 0, 1.0};
Point(55) = {0.061603, 0.731728, 0, 1.0};
Point(56) = {0.065299, 0.731304, 0, 1.0};
Point(57) = {0.068424, 0.730872, 0, 1.0};
Point(58) = {0.070920, 0.730460, 0, 1.0};
Point(59) = {0.071743, 0.730229, 0, 1.0};
Point(60) = {0.073837, 0.729848, 0, 1.0};
Point(61) = {-0.074206, -0.729753, 0, 1.0};
Point(62) = {-0.073863, -0.729900, 0, 1.0};
Point(63) = {-0.072911, -0.730346, 0, 1.0};
Point(64) = {-0.071475, -0.731034, 0, 1.0};
Point(65) = {-0.069579, -0.731855, 0, 1.0};
Point(66) = {-0.067187, -0.732772, 0, 1.0};
Point(67) = {-0.064306, -0.733806, 0, 1.0};
Point(68) = {-0.060985, -0.734957, 0, 1.0};
Point(69) = {-0.057278, -0.736213, 0, 1.0};
Point(70) = {-0.053236, -0.737553, 0, 1.0};
Point(71) = {-0.048918, -0.738954, 0, 1.0};
Point(72) = {-0.044382, -0.740390, 0, 1.0};
Point(73) = {-0.039685, -0.741831, 0, 1.0};
Point(74) = {-0.034884, -0.743244, 0, 1.0};
Point(75) = {-0.030033, -0.744599, 0, 1.0};
Point(76) = {-0.025185, -0.745862, 0, 1.0};
Point(77) = {-0.020385, -0.747004, 0, 1.0};
Point(78) = {-0.015681, -0.747997, 0, 1.0};
Point(79) = {-0.011111, -0.748814, 0, 1.0};
Point(80) = {-0.006715, -0.749434, 0, 1.0};
Point(81) = {-0.002520, -0.749833, 0, 1.0};
Point(82) = {0.001454, -0.750000, 0, 1.0};
Point(83) = {0.005193, -0.749935, 0, 1.0};
Point(84) = {0.008685, -0.749650, 0, 1.0};
Point(85) = {0.011912, -0.749173, 0, 1.0};
Point(86) = {0.014843, -0.748529, 0, 1.0};
Point(87) = {0.017455, -0.747747, 0, 1.0};
Point(88) = {0.019721, -0.746851, 0, 1.0};
Point(89) = {0.021615, -0.745871, 0, 1.0};
Point(90) = {0.023119, -0.744840, 0, 1.0};
Point(91) = {0.024209, -0.743794, 0, 1.0};
Point(92) = {0.024865, -0.742783, 0, 1.0};
Point(93) = {0.024980, -0.741891, 0, 1.0};
Point(94) = {0.024481, -0.741015, 0, 1.0};
Point(95) = {0.023440, -0.740042, 0, 1.0};
Point(96) = {0.021934, -0.739038, 0, 1.0};
Point(97) = {0.019988, -0.738047, 0, 1.0};
Point(98) = {0.017616, -0.737105, 0, 1.0};
Point(99) = {0.014835, -0.736238, 0, 1.0};
Point(100) = {0.011664, -0.735470, 0, 1.0};
Point(101) = {0.008117, -0.734827, 0, 1.0};
Point(102) = {0.004203, -0.734320, 0, 1.0};
Point(103) = {-0.000064, -0.733954, 0, 1.0};
Point(104) = {-0.004669, -0.733715, 0, 1.0};
Point(105) = {-0.009588, -0.733586, 0, 1.0};
Point(106) = {-0.014791, -0.733528, 0, 1.0};
Point(107) = {-0.020217, -0.733490, 0, 1.0};
Point(108) = {-0.025785, -0.733439, 0, 1.0};
Point(109) = {-0.031410, -0.733354, 0, 1.0};
Point(110) = {-0.037005, -0.733222, 0, 1.0};
Point(111) = {-0.042484, -0.733034, 0, 1.0};
Point(112) = {-0.047765, -0.732787, 0, 1.0};
Point(113) = {-0.052764, -0.732483, 0, 1.0};
Point(114) = {-0.057402, -0.732127, 0, 1.0};
Point(115) = {-0.061603, -0.731728, 0, 1.0};
Point(116) = {-0.065299, -0.731304, 0, 1.0};
Point(117) = {-0.068424, -0.730872, 0, 1.0};
Point(118) = {-0.070920, -0.730460, 0, 1.0};
Point(119) = {-0.071743, -0.730229, 0, 1.0};
Point(120) = {-0.073837, -0.729848, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.148411, 0.709506, 0, 1.0};
Point(2) = {0.147725, 0.709801, 0, 1.0};
Point(3) = {0.145822, 0.710691, 0, 1.0};
Point(4) = {0.142950, 0.712067, 0, 1.0};
Point(5) = {0.139159, 0.713709, 0, 1.0};
Point(6) = {0.134373, 0.715544, 0, 1.0};
Point(7) = {0.128612, 0.717613, 0, 1.0};
Point(8) = {0.121971, 0.719915, 0, 1.0};
Point(9) = {0.114556, 0.722425, 0, 1.0};
Point(10) = {0.106473, 0.725105, 0, 1.0};
Point(11) = {0.097836, 0.727908, 0, 1.0};
Point(12) = {0.088764, 0.730780, 0, 1.0};
Point(13) = {0.079370, 0.733663, 0, 1.0};
Point(14) = {0.069769, 0.736489, 0, 1.0};
Point(15) = {0.060067, 0.739199, 0, 1.0};
Point(16) = {0.050369, 0.741724, 0, 1.0};
Point(17) = {0.040770, 0.744008, 0, 1.0};
Point(18) = {0.031361, 0.745993, 0, 1.0};
Point(19) = {0.022222, 0.747628, 0, 1.0};
Point(20) = {0.013431, 0.748868, 0, 1.0};
Point(21) = {0.005040, 0.749665, 0, 1.0};
Point(22) = {-0.002909, 0.750000, 0, 1.0};
Point(23) = {-0.010387, 0.749870, 0, 1.0};
Point(24) = {-0.017370, 0.749299, 0, 1.0};
Point(25) = {-0.023823, 0.748346, 0, 1.0};
Point(26) = {-0.029685, 0.747059, 0, 1.0};
Point(27) = {-0.034910, 0.745494, 0, 1.0};
Point(28) = {-0.039441, 0.743701, 0, 1.0};
Point(29) = {-0.043230, 0.741742, 0, 1.0};
Point(30) = {-0.046237, 0.739680, 0, 1.0};
Point(31) = {-0.048418, 0.737588, 0, 1.0};
Point(32) = {-0.049730, 0.735567, 0, 1.0};
Point(33) = {-0.049961, 0.733782, 0, 1.0};
Point(34) = {-0.048961, 0.732030, 0, 1.0};
Point(35) = {-0.046879, 0.730085, 0, 1.0};
Point(36) = {-0.043868, 0.728076, 0, 1.0};
Point(37) = {-0.039976, 0.726095, 0, 1.0};
Point(38) = {-0.035232, 0.724211, 0, 1.0};
Point(39) = {-0.029670, 0.722476, 0, 1.0};
Point(40) = {-0.023328, 0.720940, 0, 1.0};
Point(41) = {-0.016234, 0.719653, 0, 1.0};
Point(42) = {-0.008405, 0.718640, 0, 1.0};
Point(43) = {0.000128, 0.717907, 0, 1.0};
Point(44) = {0.009338, 0.717431, 0, 1.0};
Point(45) = {0.019175, 0.717171, 0, 1.0};
Point(46) = {0.029581, 0.717055, 0, 1.0};
Point(47) = {0.040434, 0.716980, 0, 1.0};
Point(48) = {0.051570, 0.716878, 0, 1.0};
Point(49) = {0.062819, 0.716708, 0, 1.0};
Point(50) = {0.074009, 0.716444, 0, 1.0};
Point(51) = {0.084969, 0.716068, 0, 1.0};
Point(52) = {0.095531, 0.715574, 0, 1.0};
Point(53) = {0.105528, 0.714966, 0, 1.0};
Point(54) = {0.114804, 0.714253, 0, 1.0};
Point(55) = {0.123206, 0.713456, 0, 1.0};
Point(56) = {0.130598, 0.712607, 0, 1.0};
Point(57) = {0.136847, 0.711744, 0, 1.0};
Point(58) = {0.141839, 0.710920, 0, 1.0};
Point(59) = {0.143486, 0.710457, 0, 1.0};
Point(60) = {0.147674, 0.709696, 0, 1.0};
Point(61) = {-0.148411, -0.709506, 0, 1.0};
Point(62) = {-0.147725, -0.709801, 0, 1.0};
Point(63) = {-0.145822, -0.710691, 0, 1.0};
Point(64) = {-0.142950, -0.712067, 0, 1.0};
Point(65) = {-0.139159, -0.713709, 0, 1.0};
Point(66) = {-0.134373, -0.715544, 0, 1.0};
Point(67) = {-0.128612, -0.717613, 0, 1.0};
Point(68) = {-0.121971, -0.719915, 0, 1.0};
Point(69) = {-0.114556, -0.722425, 0, 1.0};
Point(70) = {-0.106473, -0.725105, 0, 1.0};
Point(71) = {-0.097836, -0.727908, 0, 1.0};
Point(72) = {-0.088764, -0.730780, 0, 1.0};
Point(73) = {-0.079370, -0.733663, 0, 1.0};
Point(74) = {-0.069769, -0.736489, 0, 1.0};
Point(75) = {-0.060067, -0.739199, 0, 1.0};
Point(76) = {-0.050369, -0.741724, 0, 1.0};
Point(77) = {-0.040770, -0.744008, 0, 1.0};
Point(78) = {-0.031361, -0.745993, 0, 1.0};
Point(79) = {-0.022222, -0.747628, 0, 1.0};
Point(80) = {-0.013431, -0.748868, 0, 1.0};
Point(81) = {-0.005040, -0.749665, 0, 1.0};
Point(82) = {0.002909, -0.750000, 0, 1.0};
Point(83) = {0.010387, -0.749870, 0, 1.0};
Point(84) = {0.017370, -0.749299, 0, 1.0};
Point(85) = {0.023823, -0.748346, 0, 1.0};
Point(86) = {0.029685, -0.747059, 0, 1.0};
Point(87) = {0.034910, -0.745494, 0, 1.0};
Point(88) = {0.039441, -0.743701, 0, 1.0};
Point(89) = {0.043230, -0.741742, 0, 1.0};
Point(90) = {0.046237, -0.739680, 0, 1.0};
Point(91) = {0.048418, -0.737588, 0, 1.0};
Point(92) = {0.049730, -0.735567, 0, 1.0};
Point(93) = {0.049961, -0.733782, 0, 1.0};
Point(94) = {0.048961, -0.732030, 0, 1.0};
Point(95) = {0.046879, -0.730085, 0, 1.0};
Point(96) = {0.043868, -0.728076, 0, 1.0};
Point(97) = {0.039976, -0.726095, 0, 1.0};
Point(98) = {0.035232, -0.724211, 0, 1.0};
Point(99) = {0.029670, -0.722476, 0, 1.0};
Point(100) = {0.023328, -0.720940, 0, 1.0};
Point(101) = {0.016234, -0.719653, 0, 1.0};
Point(102) = {0.008405, -0.718640, 0, 1.0};
Point(103) = {-0.000128, -0.717907, 0, 1.0};
Point(104) = {-0.009338, -0.717431, 0, 1.0};
Point(105) = {-0.019175, -0.717171, 0, 1.0};
Point(106) = {-0.029581, -0.717055, 0, 1.0};
Point(107) = {-0.040434, -0.716980, 0, 1.0};
Point(108) = {-0.051570, -0.716878, 0, 1.0};
Point(109) = {-0.062819, -0.716708, 0, 1.0};
Point(110) = {-0.074009, -0.716444, 0, 1.0};
Point(111) = {-0.084969, -0.716068, 0, 1.0};
Point(112) = {-0.095531, -0.715574, 0, 1.0};
Point(113) = {-0.105528, -0.714966, 0, 1.0};
Point(114) = {-0.114804, -0.714253, 0, 1.0};
Point(115) = {-0.123206, -0.713456, 0, 1.0};
Point(116) = {-0.130598, -0.712607, 0, 1.0};
Point(117) = {-0.136847, -0.711744, 0, 1.0};
Point(118) = {-0.141839, -0.710920, 0, 1.0};
Point(119) = {-0.143486, -0.710457, 0, 1.0};
Point(120) = {-0.147674, -0.709696, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112080, 0.745745, 0, 1.0};
Point(2) = {0.104429, 0.747057, 0, 1.0};
Point(3) = {0.096805, 0.748077, 0, 1.0};
Point(4) = {0.089200, 0.748897, 0, 1.0};
Point(5) = {0.081618, 0.749460, 0, 1.0};
Point(6) = {0.074054, 0.749824, 0, 1.0};
Point(7) = {0.066508, 0.749994, 0, 1.0};
Point(8) = {0.058976, 0.750000, 0, 1.0};
Point(9) = {0.051458, 0.749857, 0, 1.0};
Point(10) = {0.043951, 0.749595, 0, 1.0};
Point(11) = {0.036457, 0.749199, 0, 1.0};
Point(12) = {0.028975, 0.748654, 0, 1.0};
Point(13) = {0.021506, 0.747974, 0, 1.0};
Point(14) = {0.014050, 0.747160, 0, 1.0};
Point(15) = {0.006606, 0.746197, 0, 1.0};
Point(16) = {-0.000823, 0.745084, 0, 1.0};
Point(17) = {-0.008238, 0.743808, 0, 1.0};
Point(18) = {-0.011196, 0.743215, 0, 1.0};
Point(19) = {-0.014155, 0.742621, 0, 1.0};
Point(20) = {-0.017108, 0.741973, 0, 1.0};
Point(21) = {-0.020056, 0.741266, 0, 1.0};
Point(22) = {-0.023000, 0.740517, 0, 1.0};
Point(23) = {-0.025939, 0.739708, 0, 1.0};
Point(24) = {-0.028864, 0.738749, 0, 1.0};
Point(25) = {-0.031770, 0.737584, 0, 1.0};
Point(26) = {-0.034652, 0.736151, 0, 1.0};
Point(27) = {-0.036059, 0.735056, 0, 1.0};
Point(28) = {-0.036404, 0.734714, 0, 1.0};
Point(29) = {-0.036742, 0.734285, 0, 1.0};
Point(30) = {-0.037071, 0.733765, 0, 1.0};
Point(31) = {-0.037365, 0.732855, 0, 1.0};
Point(32) = {-0.036859, 0.731435, 0, 1.0};
Point(33) = {-0.036443, 0.731000, 0, 1.0};
Point(34) = {-0.036043, 0.730743, 0, 1.0};
Point(35) = {-0.035648, 0.730539, 0, 1.0};
Point(36) = {-0.034092, 0.729996, 0, 1.0};
Point(37) = {-0.031023, 0.729374, 0, 1.0};
Point(38) = {-0.027973, 0.728959, 0, 1.0};
Point(39) = {-0.024938, 0.728704, 0, 1.0};
Point(40) = {-0.021912, 0.728559, 0, 1.0};
Point(41) = {-0.018897, 0.728529, 0, 1.0};
Point(42) = {-0.015883, 0.728508, 0, 1.0};
Point(43) = {-0.012872, 0.728525, 0, 1.0};
Point(44) = {-0.009866, 0.728594, 0, 1.0};
Point(45) = {-0.006860, 0.728662, 0, 1.0};
Point(46) = {0.000642, 0.728986, 0, 1.0};
Point(47) = {0.008130, 0.729455, 0, 1.0};
Point(48) = {0.015608, 0.730028, 0, 1.0};
Point(49) = {0.023076, 0.730721, 0, 1.0};
Point(50) = {0.030534, 0.731520, 0, 1.0};
Point(51) = {0.037982, 0.732439, 0, 1.0};
Point(52) = {0.045420, 0.733462, 0, 1.0};
Point(53) = {0.052848, 0.734589, 0, 1.0};
Point(54) = {0.060266, 0.735821, 0, 1.0};
Point(55) = {0.067675, 0.737171, 0, 1.0};
Point(56) = {0.075080, 0.738553, 0, 1.0};
Point(57) = {0.082482, 0.739963, 0, 1.0};
Point(58) = {0.089886, 0.741360, 0, 1.0};
Point(59) = {0.097290, 0.742756, 0, 1.0};
Point(60) = {0.104698, 0.744107, 0, 1.0};
Point(61) = {0.112108, 0.745416, 0, 1.0};
Point(62) = {-0.112080, -0.745745, 0, 1.0};
Point(63) = {-0.104429, -0.747057, 0, 1.0};
Point(64) = {-0.096805, -0.748077, 0, 1.0};
Point(65) = {-0.089200, -0.748897, 0, 1.0};
Point(66) = {-0.081618, -0.749460, 0, 1.0};
Point(67) = {-0.074054, -0.749824, 0, 1.0};
Point(68) = {-0.066508, -0.749994, 0, 1.0};
Point(69) = {-0.058976, -0.750000, 0, 1.0};
Point(70) = {-0.051458, -0.749857, 0, 1.0};
Point(71) = {-0.043951, -0.749595, 0, 1.0};
Point(72) = {-0.036457, -0.749199, 0, 1.0};
Point(73) = {-0.028975, -0.748654, 0, 1.0};
Point(74) = {-0.021506, -0.747974, 0, 1.0};
Point(75) = {-0.014050, -0.747160, 0, 1.0};
Point(76) = {-0.006606, -0.746197, 0, 1.0};
Point(77) = {0.000823, -0.745084, 0, 1.0};
Point(78) = {0.008238, -0.743808, 0, 1.0};
Point(79) = {0.011196, -0.743215, 0, 1.0};
Point(80) = {0.014155, -0.742621, 0, 1.0};
Point(81) = {0.017108, -0.741973, 0, 1.0};
Point(82) = {0.020056, -0.741266, 0, 1.0};
Point(83) = {0.023000, -0.740517, 0, 1.0};
Point(84) = {0.025939, -0.739708, 0, 1.0};
Point(85) = {0.028864, -0.738749, 0, 1.0};
Point(86) = {0.031770, -0.737584, 0, 1.0};
Point(87) = {0.034652, -0.736151, 0, 1.0};
Point(88) = {0.036059, -0.735056, 0, 1.0};
Point(89) = {0.036404, -0.734714, 0, 1.0};
Point(90) = {0.036742, -0.734285, 0, 1.0};
Point(91) = {0.037071, -0.733765, 0, 1.0};
Point(92) = {0.037365, -0.732855, 0, 1.0};
Point(93) = {0.036859, -0.731435, 0, 1.0};
Point(94) = {0.036443, -0.731000, 0, 1.0};
Point(95) = {0.036043, -0.730743, 0, 1.0};
Point(96) = {0.035648, -0.730539, 0, 1.0};
Point(97) = {0.034092, -0.729996, 0, 1.0};
Point(98) = {0.031023, -0.729374, 0, 1.0};
Point(99) = {0.027973, -0.728959, 0, 1.0};
Point(100) = {0.024938, -0.728704, 0, 1.0};
Point(101) = {0.021912, -0.728559, 0, 1.0};
Point(102) = {0.018897, -0.728529, 0, 1.0};
Point(103) = {0.015883, -0.728508, 0, 1.0};
Point(104) = {0.012872, -0.728525, 0, 1.0};
Point(105) = {0.009866, -0.728594, 0, 1.0};
Point(106) = {0.006860, -0.728662, 0, 1.0};
Point(107) = {-0.000642, -0.728986, 0, 1.0};
Point(108) = {-0.008130, -0.729455, 0, 1.0};
Point(109) = {-0.015608, -0.730028, 0, 1.0};
Point(110) = {-0.023076, -0.730721, 0, 1.0};
Point(111) = {-0.030534, -0.731520, 0, 1.0};
Point(112) = {-0.037982, -0.732439, 0, 1.0};
Point(113) = {-0.045420, -0.733462, 0, 1.0};
Point(114) = {-0.052848, -0.734589, 0, 1.0};
Point(115) = {-0.060266, -0.735821, 0, 1.0};
Point(116) = {-0.067675, -0.737171, 0, 1.0};
Point(117) = {-0.075080, -0.738553, 0, 1.0};
Point(118) = {-0.082482, -0.739963, 0, 1.0};
Point(119) = {-0.089886, -0.741360, 0, 1.0};
Point(120) = {-0.097290, -0.742756, 0, 1.0};
Point(121) = {-0.104698, -0.744107, 0, 1.0};
Point(122) = {-0.112108, -0.745416, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
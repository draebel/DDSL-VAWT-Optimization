SetFactory("OpenCASCADE");

Point(1) = {0.074630, 0.747164, 0, 1.0};
Point(2) = {0.069529, 0.748038, 0, 1.0};
Point(3) = {0.064447, 0.748718, 0, 1.0};
Point(4) = {0.059377, 0.749265, 0, 1.0};
Point(5) = {0.054322, 0.749640, 0, 1.0};
Point(6) = {0.049279, 0.749882, 0, 1.0};
Point(7) = {0.044248, 0.749996, 0, 1.0};
Point(8) = {0.039227, 0.750000, 0, 1.0};
Point(9) = {0.034215, 0.749905, 0, 1.0};
Point(10) = {0.029211, 0.749730, 0, 1.0};
Point(11) = {0.024214, 0.749466, 0, 1.0};
Point(12) = {0.019227, 0.749102, 0, 1.0};
Point(13) = {0.014247, 0.748649, 0, 1.0};
Point(14) = {0.009276, 0.748107, 0, 1.0};
Point(15) = {0.004314, 0.747464, 0, 1.0};
Point(16) = {-0.000639, 0.746723, 0, 1.0};
Point(17) = {-0.005582, 0.745872, 0, 1.0};
Point(18) = {-0.007554, 0.745477, 0, 1.0};
Point(19) = {-0.009527, 0.745080, 0, 1.0};
Point(20) = {-0.011495, 0.744648, 0, 1.0};
Point(21) = {-0.013461, 0.744178, 0, 1.0};
Point(22) = {-0.015424, 0.743678, 0, 1.0};
Point(23) = {-0.017383, 0.743139, 0, 1.0};
Point(24) = {-0.019333, 0.742499, 0, 1.0};
Point(25) = {-0.021270, 0.741722, 0, 1.0};
Point(26) = {-0.023192, 0.740767, 0, 1.0};
Point(27) = {-0.024129, 0.740037, 0, 1.0};
Point(28) = {-0.024360, 0.739809, 0, 1.0};
Point(29) = {-0.024585, 0.739523, 0, 1.0};
Point(30) = {-0.024804, 0.739177, 0, 1.0};
Point(31) = {-0.025000, 0.738570, 0, 1.0};
Point(32) = {-0.024663, 0.737623, 0, 1.0};
Point(33) = {-0.024385, 0.737333, 0, 1.0};
Point(34) = {-0.024119, 0.737162, 0, 1.0};
Point(35) = {-0.023855, 0.737026, 0, 1.0};
Point(36) = {-0.022818, 0.736664, 0, 1.0};
Point(37) = {-0.020772, 0.736249, 0, 1.0};
Point(38) = {-0.018739, 0.735973, 0, 1.0};
Point(39) = {-0.016715, 0.735803, 0, 1.0};
Point(40) = {-0.014698, 0.735706, 0, 1.0};
Point(41) = {-0.012688, 0.735686, 0, 1.0};
Point(42) = {-0.010679, 0.735672, 0, 1.0};
Point(43) = {-0.008671, 0.735683, 0, 1.0};
Point(44) = {-0.006667, 0.735729, 0, 1.0};
Point(45) = {-0.004663, 0.735775, 0, 1.0};
Point(46) = {0.000338, 0.735991, 0, 1.0};
Point(47) = {0.005330, 0.736303, 0, 1.0};
Point(48) = {0.010316, 0.736686, 0, 1.0};
Point(49) = {0.015294, 0.737147, 0, 1.0};
Point(50) = {0.020266, 0.737680, 0, 1.0};
Point(51) = {0.025231, 0.738293, 0, 1.0};
Point(52) = {0.030190, 0.738975, 0, 1.0};
Point(53) = {0.035142, 0.739726, 0, 1.0};
Point(54) = {0.040088, 0.740547, 0, 1.0};
Point(55) = {0.045026, 0.741447, 0, 1.0};
Point(56) = {0.049963, 0.742368, 0, 1.0};
Point(57) = {0.054898, 0.743309, 0, 1.0};
Point(58) = {0.059834, 0.744240, 0, 1.0};
Point(59) = {0.064770, 0.745171, 0, 1.0};
Point(60) = {0.069708, 0.746071, 0, 1.0};
Point(61) = {0.074649, 0.746944, 0, 1.0};
Point(62) = {-0.074630, -0.747164, 0, 1.0};
Point(63) = {-0.069529, -0.748038, 0, 1.0};
Point(64) = {-0.064447, -0.748718, 0, 1.0};
Point(65) = {-0.059377, -0.749265, 0, 1.0};
Point(66) = {-0.054322, -0.749640, 0, 1.0};
Point(67) = {-0.049279, -0.749882, 0, 1.0};
Point(68) = {-0.044248, -0.749996, 0, 1.0};
Point(69) = {-0.039227, -0.750000, 0, 1.0};
Point(70) = {-0.034215, -0.749905, 0, 1.0};
Point(71) = {-0.029211, -0.749730, 0, 1.0};
Point(72) = {-0.024214, -0.749466, 0, 1.0};
Point(73) = {-0.019227, -0.749102, 0, 1.0};
Point(74) = {-0.014247, -0.748649, 0, 1.0};
Point(75) = {-0.009276, -0.748107, 0, 1.0};
Point(76) = {-0.004314, -0.747464, 0, 1.0};
Point(77) = {0.000639, -0.746723, 0, 1.0};
Point(78) = {0.005582, -0.745872, 0, 1.0};
Point(79) = {0.007554, -0.745477, 0, 1.0};
Point(80) = {0.009527, -0.745080, 0, 1.0};
Point(81) = {0.011495, -0.744648, 0, 1.0};
Point(82) = {0.013461, -0.744178, 0, 1.0};
Point(83) = {0.015424, -0.743678, 0, 1.0};
Point(84) = {0.017383, -0.743139, 0, 1.0};
Point(85) = {0.019333, -0.742499, 0, 1.0};
Point(86) = {0.021270, -0.741722, 0, 1.0};
Point(87) = {0.023192, -0.740767, 0, 1.0};
Point(88) = {0.024129, -0.740037, 0, 1.0};
Point(89) = {0.024360, -0.739809, 0, 1.0};
Point(90) = {0.024585, -0.739523, 0, 1.0};
Point(91) = {0.024804, -0.739177, 0, 1.0};
Point(92) = {0.025000, -0.738570, 0, 1.0};
Point(93) = {0.024663, -0.737623, 0, 1.0};
Point(94) = {0.024385, -0.737333, 0, 1.0};
Point(95) = {0.024119, -0.737162, 0, 1.0};
Point(96) = {0.023855, -0.737026, 0, 1.0};
Point(97) = {0.022818, -0.736664, 0, 1.0};
Point(98) = {0.020772, -0.736249, 0, 1.0};
Point(99) = {0.018739, -0.735973, 0, 1.0};
Point(100) = {0.016715, -0.735803, 0, 1.0};
Point(101) = {0.014698, -0.735706, 0, 1.0};
Point(102) = {0.012688, -0.735686, 0, 1.0};
Point(103) = {0.010679, -0.735672, 0, 1.0};
Point(104) = {0.008671, -0.735683, 0, 1.0};
Point(105) = {0.006667, -0.735729, 0, 1.0};
Point(106) = {0.004663, -0.735775, 0, 1.0};
Point(107) = {-0.000338, -0.735991, 0, 1.0};
Point(108) = {-0.005330, -0.736303, 0, 1.0};
Point(109) = {-0.010316, -0.736686, 0, 1.0};
Point(110) = {-0.015294, -0.737147, 0, 1.0};
Point(111) = {-0.020266, -0.737680, 0, 1.0};
Point(112) = {-0.025231, -0.738293, 0, 1.0};
Point(113) = {-0.030190, -0.738975, 0, 1.0};
Point(114) = {-0.035142, -0.739726, 0, 1.0};
Point(115) = {-0.040088, -0.740547, 0, 1.0};
Point(116) = {-0.045026, -0.741447, 0, 1.0};
Point(117) = {-0.049963, -0.742368, 0, 1.0};
Point(118) = {-0.054898, -0.743309, 0, 1.0};
Point(119) = {-0.059834, -0.744240, 0, 1.0};
Point(120) = {-0.064770, -0.745171, 0, 1.0};
Point(121) = {-0.069708, -0.746071, 0, 1.0};
Point(122) = {-0.074649, -0.746944, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
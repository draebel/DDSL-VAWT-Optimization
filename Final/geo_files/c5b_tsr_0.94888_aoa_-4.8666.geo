SetFactory("OpenCASCADE");

Point(1) = {0.149260, 0.744327, 0, 1.0};
Point(2) = {0.139059, 0.746076, 0, 1.0};
Point(3) = {0.128894, 0.747436, 0, 1.0};
Point(4) = {0.118753, 0.748530, 0, 1.0};
Point(5) = {0.108644, 0.749280, 0, 1.0};
Point(6) = {0.098558, 0.749765, 0, 1.0};
Point(7) = {0.088497, 0.749992, 0, 1.0};
Point(8) = {0.078455, 0.750000, 0, 1.0};
Point(9) = {0.068431, 0.749810, 0, 1.0};
Point(10) = {0.058422, 0.749461, 0, 1.0};
Point(11) = {0.048429, 0.748932, 0, 1.0};
Point(12) = {0.038453, 0.748205, 0, 1.0};
Point(13) = {0.028495, 0.747299, 0, 1.0};
Point(14) = {0.018552, 0.746213, 0, 1.0};
Point(15) = {0.008628, 0.744929, 0, 1.0};
Point(16) = {-0.001278, 0.743446, 0, 1.0};
Point(17) = {-0.011164, 0.741744, 0, 1.0};
Point(18) = {-0.015109, 0.740954, 0, 1.0};
Point(19) = {-0.019053, 0.740161, 0, 1.0};
Point(20) = {-0.022991, 0.739297, 0, 1.0};
Point(21) = {-0.026922, 0.738355, 0, 1.0};
Point(22) = {-0.030847, 0.737356, 0, 1.0};
Point(23) = {-0.034766, 0.736278, 0, 1.0};
Point(24) = {-0.038666, 0.734998, 0, 1.0};
Point(25) = {-0.042541, 0.733445, 0, 1.0};
Point(26) = {-0.046383, 0.731535, 0, 1.0};
Point(27) = {-0.048259, 0.730075, 0, 1.0};
Point(28) = {-0.048719, 0.729619, 0, 1.0};
Point(29) = {-0.049169, 0.729047, 0, 1.0};
Point(30) = {-0.049608, 0.728353, 0, 1.0};
Point(31) = {-0.050000, 0.727140, 0, 1.0};
Point(32) = {-0.049325, 0.725246, 0, 1.0};
Point(33) = {-0.048771, 0.724666, 0, 1.0};
Point(34) = {-0.048238, 0.724324, 0, 1.0};
Point(35) = {-0.047711, 0.724052, 0, 1.0};
Point(36) = {-0.045637, 0.723328, 0, 1.0};
Point(37) = {-0.041545, 0.722498, 0, 1.0};
Point(38) = {-0.037478, 0.721946, 0, 1.0};
Point(39) = {-0.033430, 0.721605, 0, 1.0};
Point(40) = {-0.029396, 0.721412, 0, 1.0};
Point(41) = {-0.025376, 0.721372, 0, 1.0};
Point(42) = {-0.021357, 0.721344, 0, 1.0};
Point(43) = {-0.017343, 0.721367, 0, 1.0};
Point(44) = {-0.013335, 0.721458, 0, 1.0};
Point(45) = {-0.009327, 0.721550, 0, 1.0};
Point(46) = {0.000675, 0.721982, 0, 1.0};
Point(47) = {0.010660, 0.722607, 0, 1.0};
Point(48) = {0.020631, 0.723371, 0, 1.0};
Point(49) = {0.030588, 0.724294, 0, 1.0};
Point(50) = {0.040532, 0.725360, 0, 1.0};
Point(51) = {0.050462, 0.726585, 0, 1.0};
Point(52) = {0.060379, 0.727949, 0, 1.0};
Point(53) = {0.070283, 0.729452, 0, 1.0};
Point(54) = {0.080175, 0.731094, 0, 1.0};
Point(55) = {0.090053, 0.732894, 0, 1.0};
Point(56) = {0.099926, 0.734737, 0, 1.0};
Point(57) = {0.109796, 0.736618, 0, 1.0};
Point(58) = {0.119668, 0.738480, 0, 1.0};
Point(59) = {0.129539, 0.740341, 0, 1.0};
Point(60) = {0.139417, 0.742142, 0, 1.0};
Point(61) = {0.149298, 0.743888, 0, 1.0};
Point(62) = {-0.149260, -0.744327, 0, 1.0};
Point(63) = {-0.139059, -0.746076, 0, 1.0};
Point(64) = {-0.128894, -0.747436, 0, 1.0};
Point(65) = {-0.118753, -0.748530, 0, 1.0};
Point(66) = {-0.108644, -0.749280, 0, 1.0};
Point(67) = {-0.098558, -0.749765, 0, 1.0};
Point(68) = {-0.088497, -0.749992, 0, 1.0};
Point(69) = {-0.078455, -0.750000, 0, 1.0};
Point(70) = {-0.068431, -0.749810, 0, 1.0};
Point(71) = {-0.058422, -0.749461, 0, 1.0};
Point(72) = {-0.048429, -0.748932, 0, 1.0};
Point(73) = {-0.038453, -0.748205, 0, 1.0};
Point(74) = {-0.028495, -0.747299, 0, 1.0};
Point(75) = {-0.018552, -0.746213, 0, 1.0};
Point(76) = {-0.008628, -0.744929, 0, 1.0};
Point(77) = {0.001278, -0.743446, 0, 1.0};
Point(78) = {0.011164, -0.741744, 0, 1.0};
Point(79) = {0.015109, -0.740954, 0, 1.0};
Point(80) = {0.019053, -0.740161, 0, 1.0};
Point(81) = {0.022991, -0.739297, 0, 1.0};
Point(82) = {0.026922, -0.738355, 0, 1.0};
Point(83) = {0.030847, -0.737356, 0, 1.0};
Point(84) = {0.034766, -0.736278, 0, 1.0};
Point(85) = {0.038666, -0.734998, 0, 1.0};
Point(86) = {0.042541, -0.733445, 0, 1.0};
Point(87) = {0.046383, -0.731535, 0, 1.0};
Point(88) = {0.048259, -0.730075, 0, 1.0};
Point(89) = {0.048719, -0.729619, 0, 1.0};
Point(90) = {0.049169, -0.729047, 0, 1.0};
Point(91) = {0.049608, -0.728353, 0, 1.0};
Point(92) = {0.050000, -0.727140, 0, 1.0};
Point(93) = {0.049325, -0.725246, 0, 1.0};
Point(94) = {0.048771, -0.724666, 0, 1.0};
Point(95) = {0.048238, -0.724324, 0, 1.0};
Point(96) = {0.047711, -0.724052, 0, 1.0};
Point(97) = {0.045637, -0.723328, 0, 1.0};
Point(98) = {0.041545, -0.722498, 0, 1.0};
Point(99) = {0.037478, -0.721946, 0, 1.0};
Point(100) = {0.033430, -0.721605, 0, 1.0};
Point(101) = {0.029396, -0.721412, 0, 1.0};
Point(102) = {0.025376, -0.721372, 0, 1.0};
Point(103) = {0.021357, -0.721344, 0, 1.0};
Point(104) = {0.017343, -0.721367, 0, 1.0};
Point(105) = {0.013335, -0.721458, 0, 1.0};
Point(106) = {0.009327, -0.721550, 0, 1.0};
Point(107) = {-0.000675, -0.721982, 0, 1.0};
Point(108) = {-0.010660, -0.722607, 0, 1.0};
Point(109) = {-0.020631, -0.723371, 0, 1.0};
Point(110) = {-0.030588, -0.724294, 0, 1.0};
Point(111) = {-0.040532, -0.725360, 0, 1.0};
Point(112) = {-0.050462, -0.726585, 0, 1.0};
Point(113) = {-0.060379, -0.727949, 0, 1.0};
Point(114) = {-0.070283, -0.729452, 0, 1.0};
Point(115) = {-0.080175, -0.731094, 0, 1.0};
Point(116) = {-0.090053, -0.732894, 0, 1.0};
Point(117) = {-0.099926, -0.734737, 0, 1.0};
Point(118) = {-0.109796, -0.736618, 0, 1.0};
Point(119) = {-0.119668, -0.738480, 0, 1.0};
Point(120) = {-0.129539, -0.740341, 0, 1.0};
Point(121) = {-0.139417, -0.742142, 0, 1.0};
Point(122) = {-0.149298, -0.743888, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074638, 0.746276, 0, 1.0};
Point(2) = {0.070193, 0.746992, 0, 1.0};
Point(3) = {0.062401, 0.748035, 0, 1.0};
Point(4) = {0.054628, 0.748873, 0, 1.0};
Point(5) = {0.046879, 0.749448, 0, 1.0};
Point(6) = {0.039148, 0.749820, 0, 1.0};
Point(7) = {0.031435, 0.749994, 0, 1.0};
Point(8) = {0.023737, 0.750000, 0, 1.0};
Point(9) = {0.016054, 0.749854, 0, 1.0};
Point(10) = {0.008381, 0.749586, 0, 1.0};
Point(11) = {0.000721, 0.749181, 0, 1.0};
Point(12) = {-0.006926, 0.748624, 0, 1.0};
Point(13) = {-0.014559, 0.747929, 0, 1.0};
Point(14) = {-0.022181, 0.747097, 0, 1.0};
Point(15) = {-0.029788, 0.746113, 0, 1.0};
Point(16) = {-0.037382, 0.744976, 0, 1.0};
Point(17) = {-0.044960, 0.743672, 0, 1.0};
Point(18) = {-0.047984, 0.743065, 0, 1.0};
Point(19) = {-0.051007, 0.742458, 0, 1.0};
Point(20) = {-0.054026, 0.741796, 0, 1.0};
Point(21) = {-0.057039, 0.741074, 0, 1.0};
Point(22) = {-0.060048, 0.740308, 0, 1.0};
Point(23) = {-0.063052, 0.739481, 0, 1.0};
Point(24) = {-0.066041, 0.738500, 0, 1.0};
Point(25) = {-0.069012, 0.737310, 0, 1.0};
Point(26) = {-0.071957, 0.735846, 0, 1.0};
Point(27) = {-0.073395, 0.734726, 0, 1.0};
Point(28) = {-0.073748, 0.734377, 0, 1.0};
Point(29) = {-0.074093, 0.733938, 0, 1.0};
Point(30) = {-0.074429, 0.733407, 0, 1.0};
Point(31) = {-0.074730, 0.732477, 0, 1.0};
Point(32) = {-0.074213, 0.731025, 0, 1.0};
Point(33) = {-0.073787, 0.730580, 0, 1.0};
Point(34) = {-0.073379, 0.730318, 0, 1.0};
Point(35) = {-0.072975, 0.730109, 0, 1.0};
Point(36) = {-0.071385, 0.729554, 0, 1.0};
Point(37) = {-0.068248, 0.728919, 0, 1.0};
Point(38) = {-0.065131, 0.728495, 0, 1.0};
Point(39) = {-0.062028, 0.728234, 0, 1.0};
Point(40) = {-0.058936, 0.728086, 0, 1.0};
Point(41) = {-0.055854, 0.728055, 0, 1.0};
Point(42) = {-0.052774, 0.728034, 0, 1.0};
Point(43) = {-0.049696, 0.728051, 0, 1.0};
Point(44) = {-0.046624, 0.728121, 0, 1.0};
Point(45) = {-0.043551, 0.728192, 0, 1.0};
Point(46) = {-0.035885, 0.728523, 0, 1.0};
Point(47) = {-0.028231, 0.729002, 0, 1.0};
Point(48) = {-0.020587, 0.729588, 0, 1.0};
Point(49) = {-0.012955, 0.730295, 0, 1.0};
Point(50) = {-0.005332, 0.731112, 0, 1.0};
Point(51) = {0.002280, 0.732051, 0, 1.0};
Point(52) = {0.009882, 0.733097, 0, 1.0};
Point(53) = {0.017474, 0.734249, 0, 1.0};
Point(54) = {0.025056, 0.735508, 0, 1.0};
Point(55) = {0.032628, 0.736887, 0, 1.0};
Point(56) = {0.040196, 0.738300, 0, 1.0};
Point(57) = {0.047762, 0.739742, 0, 1.0};
Point(58) = {0.055329, 0.741170, 0, 1.0};
Point(59) = {0.062896, 0.742596, 0, 1.0};
Point(60) = {0.070468, 0.743977, 0, 1.0};
Point(61) = {0.074770, 0.744731, 0, 1.0};
Point(62) = {-0.074638, -0.746276, 0, 1.0};
Point(63) = {-0.070193, -0.746992, 0, 1.0};
Point(64) = {-0.062401, -0.748035, 0, 1.0};
Point(65) = {-0.054628, -0.748873, 0, 1.0};
Point(66) = {-0.046879, -0.749448, 0, 1.0};
Point(67) = {-0.039148, -0.749820, 0, 1.0};
Point(68) = {-0.031435, -0.749994, 0, 1.0};
Point(69) = {-0.023737, -0.750000, 0, 1.0};
Point(70) = {-0.016054, -0.749854, 0, 1.0};
Point(71) = {-0.008381, -0.749586, 0, 1.0};
Point(72) = {-0.000721, -0.749181, 0, 1.0};
Point(73) = {0.006926, -0.748624, 0, 1.0};
Point(74) = {0.014559, -0.747929, 0, 1.0};
Point(75) = {0.022181, -0.747097, 0, 1.0};
Point(76) = {0.029788, -0.746113, 0, 1.0};
Point(77) = {0.037382, -0.744976, 0, 1.0};
Point(78) = {0.044960, -0.743672, 0, 1.0};
Point(79) = {0.047984, -0.743065, 0, 1.0};
Point(80) = {0.051007, -0.742458, 0, 1.0};
Point(81) = {0.054026, -0.741796, 0, 1.0};
Point(82) = {0.057039, -0.741074, 0, 1.0};
Point(83) = {0.060048, -0.740308, 0, 1.0};
Point(84) = {0.063052, -0.739481, 0, 1.0};
Point(85) = {0.066041, -0.738500, 0, 1.0};
Point(86) = {0.069012, -0.737310, 0, 1.0};
Point(87) = {0.071957, -0.735846, 0, 1.0};
Point(88) = {0.073395, -0.734726, 0, 1.0};
Point(89) = {0.073748, -0.734377, 0, 1.0};
Point(90) = {0.074093, -0.733938, 0, 1.0};
Point(91) = {0.074429, -0.733407, 0, 1.0};
Point(92) = {0.074730, -0.732477, 0, 1.0};
Point(93) = {0.074213, -0.731025, 0, 1.0};
Point(94) = {0.073787, -0.730580, 0, 1.0};
Point(95) = {0.073379, -0.730318, 0, 1.0};
Point(96) = {0.072975, -0.730109, 0, 1.0};
Point(97) = {0.071385, -0.729554, 0, 1.0};
Point(98) = {0.068248, -0.728919, 0, 1.0};
Point(99) = {0.065131, -0.728495, 0, 1.0};
Point(100) = {0.062028, -0.728234, 0, 1.0};
Point(101) = {0.058936, -0.728086, 0, 1.0};
Point(102) = {0.055854, -0.728055, 0, 1.0};
Point(103) = {0.052774, -0.728034, 0, 1.0};
Point(104) = {0.049696, -0.728051, 0, 1.0};
Point(105) = {0.046624, -0.728121, 0, 1.0};
Point(106) = {0.043551, -0.728192, 0, 1.0};
Point(107) = {0.035885, -0.728523, 0, 1.0};
Point(108) = {0.028231, -0.729002, 0, 1.0};
Point(109) = {0.020587, -0.729588, 0, 1.0};
Point(110) = {0.012955, -0.730295, 0, 1.0};
Point(111) = {0.005332, -0.731112, 0, 1.0};
Point(112) = {-0.002280, -0.732051, 0, 1.0};
Point(113) = {-0.009882, -0.733097, 0, 1.0};
Point(114) = {-0.017474, -0.734249, 0, 1.0};
Point(115) = {-0.025056, -0.735508, 0, 1.0};
Point(116) = {-0.032628, -0.736887, 0, 1.0};
Point(117) = {-0.040196, -0.738300, 0, 1.0};
Point(118) = {-0.047762, -0.739742, 0, 1.0};
Point(119) = {-0.055329, -0.741170, 0, 1.0};
Point(120) = {-0.062896, -0.742596, 0, 1.0};
Point(121) = {-0.070468, -0.743977, 0, 1.0};
Point(122) = {-0.074770, -0.744731, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:47};
Spline(3) = {47:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:77};
Spline(6) = {77:108};
Spline(7) = {108:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
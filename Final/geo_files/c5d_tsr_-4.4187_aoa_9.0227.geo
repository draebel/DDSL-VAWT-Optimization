SetFactory("OpenCASCADE");

Point(1) = {0.074240, 0.723322, 0, 1.0};
Point(2) = {0.070388, 0.724913, 0, 1.0};
Point(3) = {0.063054, 0.727773, 0, 1.0};
Point(4) = {0.055682, 0.730392, 0, 1.0};
Point(5) = {0.048284, 0.732834, 0, 1.0};
Point(6) = {0.040856, 0.735081, 0, 1.0};
Point(7) = {0.033398, 0.737126, 0, 1.0};
Point(8) = {0.025914, 0.739006, 0, 1.0};
Point(9) = {0.018412, 0.740769, 0, 1.0};
Point(10) = {0.010889, 0.742390, 0, 1.0};
Point(11) = {0.003346, 0.743881, 0, 1.0};
Point(12) = {-0.004220, 0.745226, 0, 1.0};
Point(13) = {-0.011811, 0.746403, 0, 1.0};
Point(14) = {-0.019422, 0.747451, 0, 1.0};
Point(15) = {-0.027058, 0.748332, 0, 1.0};
Point(16) = {-0.034717, 0.749066, 0, 1.0};
Point(17) = {-0.042404, 0.749618, 0, 1.0};
Point(18) = {-0.045491, 0.749753, 0, 1.0};
Point(19) = {-0.048580, 0.749883, 0, 1.0};
Point(20) = {-0.051672, 0.749993, 0, 1.0};
Point(21) = {-0.054779, 0.750000, 0, 1.0};
Point(22) = {-0.057890, 0.749977, 0, 1.0};
Point(23) = {-0.061016, 0.749864, 0, 1.0};
Point(24) = {-0.064156, 0.749657, 0, 1.0};
Point(25) = {-0.067332, 0.749216, 0, 1.0};
Point(26) = {-0.070549, 0.748502, 0, 1.0};
Point(27) = {-0.072219, 0.747742, 0, 1.0};
Point(28) = {-0.072649, 0.747472, 0, 1.0};
Point(29) = {-0.073088, 0.747141, 0, 1.0};
Point(30) = {-0.073543, 0.746707, 0, 1.0};
Point(31) = {-0.074072, 0.745785, 0, 1.0};
Point(32) = {-0.073921, 0.744231, 0, 1.0};
Point(33) = {-0.073619, 0.743658, 0, 1.0};
Point(34) = {-0.073285, 0.743306, 0, 1.0};
Point(35) = {-0.072942, 0.743006, 0, 1.0};
Point(36) = {-0.071527, 0.742094, 0, 1.0};
Point(37) = {-0.068615, 0.740809, 0, 1.0};
Point(38) = {-0.065669, 0.739747, 0, 1.0};
Point(39) = {-0.062697, 0.738851, 0, 1.0};
Point(40) = {-0.059710, 0.738058, 0, 1.0};
Point(41) = {-0.056707, 0.737366, 0, 1.0};
Point(42) = {-0.053703, 0.736685, 0, 1.0};
Point(43) = {-0.050694, 0.736032, 0, 1.0};
Point(44) = {-0.047679, 0.735420, 0, 1.0};
Point(45) = {-0.044664, 0.734809, 0, 1.0};
Point(46) = {-0.037108, 0.733397, 0, 1.0};
Point(47) = {-0.029544, 0.732047, 0, 1.0};
Point(48) = {-0.021967, 0.730776, 0, 1.0};
Point(49) = {-0.014374, 0.729614, 0, 1.0};
Point(50) = {-0.006765, 0.728547, 0, 1.0};
Point(51) = {0.000860, 0.727595, 0, 1.0};
Point(52) = {0.008502, 0.726750, 0, 1.0};
Point(53) = {0.016159, 0.726008, 0, 1.0};
Point(54) = {0.023827, 0.725330, 0, 1.0};
Point(55) = {0.031513, 0.724778, 0, 1.0};
Point(56) = {0.039203, 0.724249, 0, 1.0};
Point(57) = {0.046896, 0.723735, 0, 1.0};
Point(58) = {0.054588, 0.723221, 0, 1.0};
Point(59) = {0.062278, 0.722692, 0, 1.0};
Point(60) = {0.069962, 0.722125, 0, 1.0};
Point(61) = {0.073999, 0.721804, 0, 1.0};
Point(62) = {-0.074240, -0.723322, 0, 1.0};
Point(63) = {-0.070388, -0.724913, 0, 1.0};
Point(64) = {-0.063054, -0.727773, 0, 1.0};
Point(65) = {-0.055682, -0.730392, 0, 1.0};
Point(66) = {-0.048284, -0.732834, 0, 1.0};
Point(67) = {-0.040856, -0.735081, 0, 1.0};
Point(68) = {-0.033398, -0.737126, 0, 1.0};
Point(69) = {-0.025914, -0.739006, 0, 1.0};
Point(70) = {-0.018412, -0.740769, 0, 1.0};
Point(71) = {-0.010889, -0.742390, 0, 1.0};
Point(72) = {-0.003346, -0.743881, 0, 1.0};
Point(73) = {0.004220, -0.745226, 0, 1.0};
Point(74) = {0.011811, -0.746403, 0, 1.0};
Point(75) = {0.019422, -0.747451, 0, 1.0};
Point(76) = {0.027058, -0.748332, 0, 1.0};
Point(77) = {0.034717, -0.749066, 0, 1.0};
Point(78) = {0.042404, -0.749618, 0, 1.0};
Point(79) = {0.045491, -0.749753, 0, 1.0};
Point(80) = {0.048580, -0.749883, 0, 1.0};
Point(81) = {0.051672, -0.749993, 0, 1.0};
Point(82) = {0.054779, -0.750000, 0, 1.0};
Point(83) = {0.057890, -0.749977, 0, 1.0};
Point(84) = {0.061016, -0.749864, 0, 1.0};
Point(85) = {0.064156, -0.749657, 0, 1.0};
Point(86) = {0.067332, -0.749216, 0, 1.0};
Point(87) = {0.070549, -0.748502, 0, 1.0};
Point(88) = {0.072219, -0.747742, 0, 1.0};
Point(89) = {0.072649, -0.747472, 0, 1.0};
Point(90) = {0.073088, -0.747141, 0, 1.0};
Point(91) = {0.073543, -0.746707, 0, 1.0};
Point(92) = {0.074072, -0.745785, 0, 1.0};
Point(93) = {0.073921, -0.744231, 0, 1.0};
Point(94) = {0.073619, -0.743658, 0, 1.0};
Point(95) = {0.073285, -0.743306, 0, 1.0};
Point(96) = {0.072942, -0.743006, 0, 1.0};
Point(97) = {0.071527, -0.742094, 0, 1.0};
Point(98) = {0.068615, -0.740809, 0, 1.0};
Point(99) = {0.065669, -0.739747, 0, 1.0};
Point(100) = {0.062697, -0.738851, 0, 1.0};
Point(101) = {0.059710, -0.738058, 0, 1.0};
Point(102) = {0.056707, -0.737366, 0, 1.0};
Point(103) = {0.053703, -0.736685, 0, 1.0};
Point(104) = {0.050694, -0.736032, 0, 1.0};
Point(105) = {0.047679, -0.735420, 0, 1.0};
Point(106) = {0.044664, -0.734809, 0, 1.0};
Point(107) = {0.037108, -0.733397, 0, 1.0};
Point(108) = {0.029544, -0.732047, 0, 1.0};
Point(109) = {0.021967, -0.730776, 0, 1.0};
Point(110) = {0.014374, -0.729614, 0, 1.0};
Point(111) = {0.006765, -0.728547, 0, 1.0};
Point(112) = {-0.000860, -0.727595, 0, 1.0};
Point(113) = {-0.008502, -0.726750, 0, 1.0};
Point(114) = {-0.016159, -0.726008, 0, 1.0};
Point(115) = {-0.023827, -0.725330, 0, 1.0};
Point(116) = {-0.031513, -0.724778, 0, 1.0};
Point(117) = {-0.039203, -0.724249, 0, 1.0};
Point(118) = {-0.046896, -0.723735, 0, 1.0};
Point(119) = {-0.054588, -0.723221, 0, 1.0};
Point(120) = {-0.062278, -0.722692, 0, 1.0};
Point(121) = {-0.069962, -0.722125, 0, 1.0};
Point(122) = {-0.073999, -0.721804, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:47};
Spline(3) = {47:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:77};
Spline(6) = {77:108};
Spline(7) = {108:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {36.00000000, 15.00000000, 0, 1.0};
Point(126) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
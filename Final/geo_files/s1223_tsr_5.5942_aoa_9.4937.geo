SetFactory("OpenCASCADE");

Point(1) = {0.073630, 0.724358, 0, 1.0};
Point(2) = {0.073491, 0.724509, 0, 1.0};
Point(3) = {0.073137, 0.724941, 0, 1.0};
Point(4) = {0.072643, 0.725575, 0, 1.0};
Point(5) = {0.072003, 0.726299, 0, 1.0};
Point(6) = {0.071152, 0.727054, 0, 1.0};
Point(7) = {0.070041, 0.727851, 0, 1.0};
Point(8) = {0.068670, 0.728712, 0, 1.0};
Point(9) = {0.067049, 0.729632, 0, 1.0};
Point(10) = {0.065186, 0.730604, 0, 1.0};
Point(11) = {0.063090, 0.731623, 0, 1.0};
Point(12) = {0.060774, 0.732681, 0, 1.0};
Point(13) = {0.058250, 0.733773, 0, 1.0};
Point(14) = {0.055532, 0.734889, 0, 1.0};
Point(15) = {0.052636, 0.736025, 0, 1.0};
Point(16) = {0.049580, 0.737171, 0, 1.0};
Point(17) = {0.046383, 0.738320, 0, 1.0};
Point(18) = {0.043064, 0.739466, 0, 1.0};
Point(19) = {0.039642, 0.740598, 0, 1.0};
Point(20) = {0.036138, 0.741715, 0, 1.0};
Point(21) = {0.032576, 0.742807, 0, 1.0};
Point(22) = {0.028981, 0.743871, 0, 1.0};
Point(23) = {0.025383, 0.744900, 0, 1.0};
Point(24) = {0.021811, 0.745883, 0, 1.0};
Point(25) = {0.018296, 0.746803, 0, 1.0};
Point(26) = {0.014859, 0.747642, 0, 1.0};
Point(27) = {0.011519, 0.748379, 0, 1.0};
Point(28) = {0.008288, 0.748999, 0, 1.0};
Point(29) = {0.005186, 0.749496, 0, 1.0};
Point(30) = {0.002224, 0.749831, 0, 1.0};
Point(31) = {-0.000617, 0.749992, 0, 1.0};
Point(32) = {-0.003349, 0.750000, 0, 1.0};
Point(33) = {-0.005967, 0.749862, 0, 1.0};
Point(34) = {-0.008468, 0.749600, 0, 1.0};
Point(35) = {-0.010833, 0.749228, 0, 1.0};
Point(36) = {-0.013050, 0.748759, 0, 1.0};
Point(37) = {-0.015108, 0.748200, 0, 1.0};
Point(38) = {-0.016994, 0.747563, 0, 1.0};
Point(39) = {-0.018700, 0.746860, 0, 1.0};
Point(40) = {-0.020213, 0.746102, 0, 1.0};
Point(41) = {-0.021524, 0.745306, 0, 1.0};
Point(42) = {-0.022616, 0.744469, 0, 1.0};
Point(43) = {-0.023499, 0.743596, 0, 1.0};
Point(44) = {-0.024187, 0.742712, 0, 1.0};
Point(45) = {-0.024677, 0.741845, 0, 1.0};
Point(46) = {-0.024966, 0.741027, 0, 1.0};
Point(47) = {-0.025049, 0.740291, 0, 1.0};
Point(48) = {-0.024924, 0.739704, 0, 1.0};
Point(49) = {-0.024457, 0.739314, 0, 1.0};
Point(50) = {-0.023561, 0.739040, 0, 1.0};
Point(51) = {-0.022296, 0.738794, 0, 1.0};
Point(52) = {-0.020689, 0.738578, 0, 1.0};
Point(53) = {-0.018760, 0.738385, 0, 1.0};
Point(54) = {-0.016532, 0.738217, 0, 1.0};
Point(55) = {-0.014025, 0.738079, 0, 1.0};
Point(56) = {-0.011265, 0.737984, 0, 1.0};
Point(57) = {-0.008239, 0.737973, 0, 1.0};
Point(58) = {-0.004911, 0.738035, 0, 1.0};
Point(59) = {-0.001286, 0.738116, 0, 1.0};
Point(60) = {0.002612, 0.738189, 0, 1.0};
Point(61) = {0.006753, 0.738231, 0, 1.0};
Point(62) = {0.011104, 0.738219, 0, 1.0};
Point(63) = {0.015627, 0.738135, 0, 1.0};
Point(64) = {0.020282, 0.737961, 0, 1.0};
Point(65) = {0.025023, 0.737687, 0, 1.0};
Point(66) = {0.029803, 0.737298, 0, 1.0};
Point(67) = {0.034574, 0.736790, 0, 1.0};
Point(68) = {0.039283, 0.736161, 0, 1.0};
Point(69) = {0.043878, 0.735411, 0, 1.0};
Point(70) = {0.048308, 0.734546, 0, 1.0};
Point(71) = {0.052522, 0.733578, 0, 1.0};
Point(72) = {0.056470, 0.732519, 0, 1.0};
Point(73) = {0.060105, 0.731391, 0, 1.0};
Point(74) = {0.063384, 0.730216, 0, 1.0};
Point(75) = {0.066265, 0.729024, 0, 1.0};
Point(76) = {0.068711, 0.727841, 0, 1.0};
Point(77) = {0.070669, 0.726700, 0, 1.0};
Point(78) = {0.072084, 0.725691, 0, 1.0};
Point(79) = {0.072986, 0.724940, 0, 1.0};
Point(80) = {0.073477, 0.724500, 0, 1.0};
Point(81) = {-0.073630, -0.724358, 0, 1.0};
Point(82) = {-0.073491, -0.724509, 0, 1.0};
Point(83) = {-0.073137, -0.724941, 0, 1.0};
Point(84) = {-0.072643, -0.725575, 0, 1.0};
Point(85) = {-0.072003, -0.726299, 0, 1.0};
Point(86) = {-0.071152, -0.727054, 0, 1.0};
Point(87) = {-0.070041, -0.727851, 0, 1.0};
Point(88) = {-0.068670, -0.728712, 0, 1.0};
Point(89) = {-0.067049, -0.729632, 0, 1.0};
Point(90) = {-0.065186, -0.730604, 0, 1.0};
Point(91) = {-0.063090, -0.731623, 0, 1.0};
Point(92) = {-0.060774, -0.732681, 0, 1.0};
Point(93) = {-0.058250, -0.733773, 0, 1.0};
Point(94) = {-0.055532, -0.734889, 0, 1.0};
Point(95) = {-0.052636, -0.736025, 0, 1.0};
Point(96) = {-0.049580, -0.737171, 0, 1.0};
Point(97) = {-0.046383, -0.738320, 0, 1.0};
Point(98) = {-0.043064, -0.739466, 0, 1.0};
Point(99) = {-0.039642, -0.740598, 0, 1.0};
Point(100) = {-0.036138, -0.741715, 0, 1.0};
Point(101) = {-0.032576, -0.742807, 0, 1.0};
Point(102) = {-0.028981, -0.743871, 0, 1.0};
Point(103) = {-0.025383, -0.744900, 0, 1.0};
Point(104) = {-0.021811, -0.745883, 0, 1.0};
Point(105) = {-0.018296, -0.746803, 0, 1.0};
Point(106) = {-0.014859, -0.747642, 0, 1.0};
Point(107) = {-0.011519, -0.748379, 0, 1.0};
Point(108) = {-0.008288, -0.748999, 0, 1.0};
Point(109) = {-0.005186, -0.749496, 0, 1.0};
Point(110) = {-0.002224, -0.749831, 0, 1.0};
Point(111) = {0.000617, -0.749992, 0, 1.0};
Point(112) = {0.003349, -0.750000, 0, 1.0};
Point(113) = {0.005967, -0.749862, 0, 1.0};
Point(114) = {0.008468, -0.749600, 0, 1.0};
Point(115) = {0.010833, -0.749228, 0, 1.0};
Point(116) = {0.013050, -0.748759, 0, 1.0};
Point(117) = {0.015108, -0.748200, 0, 1.0};
Point(118) = {0.016994, -0.747563, 0, 1.0};
Point(119) = {0.018700, -0.746860, 0, 1.0};
Point(120) = {0.020213, -0.746102, 0, 1.0};
Point(121) = {0.021524, -0.745306, 0, 1.0};
Point(122) = {0.022616, -0.744469, 0, 1.0};
Point(123) = {0.023499, -0.743596, 0, 1.0};
Point(124) = {0.024187, -0.742712, 0, 1.0};
Point(125) = {0.024677, -0.741845, 0, 1.0};
Point(126) = {0.024966, -0.741027, 0, 1.0};
Point(127) = {0.025049, -0.740291, 0, 1.0};
Point(128) = {0.024924, -0.739704, 0, 1.0};
Point(129) = {0.024457, -0.739314, 0, 1.0};
Point(130) = {0.023561, -0.739040, 0, 1.0};
Point(131) = {0.022296, -0.738794, 0, 1.0};
Point(132) = {0.020689, -0.738578, 0, 1.0};
Point(133) = {0.018760, -0.738385, 0, 1.0};
Point(134) = {0.016532, -0.738217, 0, 1.0};
Point(135) = {0.014025, -0.738079, 0, 1.0};
Point(136) = {0.011265, -0.737984, 0, 1.0};
Point(137) = {0.008239, -0.737973, 0, 1.0};
Point(138) = {0.004911, -0.738035, 0, 1.0};
Point(139) = {0.001286, -0.738116, 0, 1.0};
Point(140) = {-0.002612, -0.738189, 0, 1.0};
Point(141) = {-0.006753, -0.738231, 0, 1.0};
Point(142) = {-0.011104, -0.738219, 0, 1.0};
Point(143) = {-0.015627, -0.738135, 0, 1.0};
Point(144) = {-0.020282, -0.737961, 0, 1.0};
Point(145) = {-0.025023, -0.737687, 0, 1.0};
Point(146) = {-0.029803, -0.737298, 0, 1.0};
Point(147) = {-0.034574, -0.736790, 0, 1.0};
Point(148) = {-0.039283, -0.736161, 0, 1.0};
Point(149) = {-0.043878, -0.735411, 0, 1.0};
Point(150) = {-0.048308, -0.734546, 0, 1.0};
Point(151) = {-0.052522, -0.733578, 0, 1.0};
Point(152) = {-0.056470, -0.732519, 0, 1.0};
Point(153) = {-0.060105, -0.731391, 0, 1.0};
Point(154) = {-0.063384, -0.730216, 0, 1.0};
Point(155) = {-0.066265, -0.729024, 0, 1.0};
Point(156) = {-0.068711, -0.727841, 0, 1.0};
Point(157) = {-0.070669, -0.726700, 0, 1.0};
Point(158) = {-0.072084, -0.725691, 0, 1.0};
Point(159) = {-0.072986, -0.724940, 0, 1.0};
Point(160) = {-0.073477, -0.724500, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:59};
Spline(3) = {59:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:109};
Spline(6) = {109:139};
Spline(7) = {139:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
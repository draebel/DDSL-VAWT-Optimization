SetFactory("OpenCASCADE");

Point(1) = {0.074682, 0.721078, 0, 1.0};
Point(2) = {0.074006, 0.721232, 0, 1.0};
Point(3) = {0.068559, 0.722532, 0, 1.0};
Point(4) = {0.062383, 0.724117, 0, 1.0};
Point(5) = {0.055591, 0.725964, 0, 1.0};
Point(6) = {0.048301, 0.728041, 0, 1.0};
Point(7) = {0.040629, 0.730300, 0, 1.0};
Point(8) = {0.032688, 0.732687, 0, 1.0};
Point(9) = {0.024587, 0.735139, 0, 1.0};
Point(10) = {0.016428, 0.737591, 0, 1.0};
Point(11) = {0.008304, 0.739977, 0, 1.0};
Point(12) = {0.000300, 0.742231, 0, 1.0};
Point(13) = {-0.007508, 0.744292, 0, 1.0};
Point(14) = {-0.015052, 0.746104, 0, 1.0};
Point(15) = {-0.022273, 0.747620, 0, 1.0};
Point(16) = {-0.029119, 0.748797, 0, 1.0};
Point(17) = {-0.035543, 0.749603, 0, 1.0};
Point(18) = {-0.041504, 0.750000, 0, 1.0};
Point(19) = {-0.047001, 0.749955, 0, 1.0};
Point(20) = {-0.052051, 0.749487, 0, 1.0};
Point(21) = {-0.056645, 0.748640, 0, 1.0};
Point(22) = {-0.060774, 0.747464, 0, 1.0};
Point(23) = {-0.064417, 0.746024, 0, 1.0};
Point(24) = {-0.067541, 0.744386, 0, 1.0};
Point(25) = {-0.070119, 0.742609, 0, 1.0};
Point(26) = {-0.072131, 0.740760, 0, 1.0};
Point(27) = {-0.073559, 0.738924, 0, 1.0};
Point(28) = {-0.074373, 0.737205, 0, 1.0};
Point(29) = {-0.074496, 0.736712, 0, 1.0};
Point(30) = {-0.074552, 0.736265, 0, 1.0};
Point(31) = {-0.074545, 0.735853, 0, 1.0};
Point(32) = {-0.074501, 0.735603, 0, 1.0};
Point(33) = {-0.074418, 0.735383, 0, 1.0};
Point(34) = {-0.074279, 0.735183, 0, 1.0};
Point(35) = {-0.074080, 0.734985, 0, 1.0};
Point(36) = {-0.073694, 0.734689, 0, 1.0};
Point(37) = {-0.073213, 0.734392, 0, 1.0};
Point(38) = {-0.071781, 0.733703, 0, 1.0};
Point(39) = {-0.068938, 0.732710, 0, 1.0};
Point(40) = {-0.065242, 0.731759, 0, 1.0};
Point(41) = {-0.060725, 0.730884, 0, 1.0};
Point(42) = {-0.055395, 0.730079, 0, 1.0};
Point(43) = {-0.049304, 0.729309, 0, 1.0};
Point(44) = {-0.042535, 0.728557, 0, 1.0};
Point(45) = {-0.035173, 0.727814, 0, 1.0};
Point(46) = {-0.027312, 0.727079, 0, 1.0};
Point(47) = {-0.019047, 0.726350, 0, 1.0};
Point(48) = {-0.010480, 0.725627, 0, 1.0};
Point(49) = {-0.001714, 0.724914, 0, 1.0};
Point(50) = {0.007144, 0.724214, 0, 1.0};
Point(51) = {0.015987, 0.723532, 0, 1.0};
Point(52) = {0.024709, 0.722874, 0, 1.0};
Point(53) = {0.033205, 0.722247, 0, 1.0};
Point(54) = {0.041373, 0.721660, 0, 1.0};
Point(55) = {0.049115, 0.721128, 0, 1.0};
Point(56) = {0.056352, 0.720665, 0, 1.0};
Point(57) = {0.063013, 0.720268, 0, 1.0};
Point(58) = {0.069026, 0.719925, 0, 1.0};
Point(59) = {0.074312, 0.719621, 0, 1.0};
Point(60) = {0.074520, 0.719607, 0, 1.0};
Point(61) = {-0.074682, -0.721078, 0, 1.0};
Point(62) = {-0.074006, -0.721232, 0, 1.0};
Point(63) = {-0.068559, -0.722532, 0, 1.0};
Point(64) = {-0.062383, -0.724117, 0, 1.0};
Point(65) = {-0.055591, -0.725964, 0, 1.0};
Point(66) = {-0.048301, -0.728041, 0, 1.0};
Point(67) = {-0.040629, -0.730300, 0, 1.0};
Point(68) = {-0.032688, -0.732687, 0, 1.0};
Point(69) = {-0.024587, -0.735139, 0, 1.0};
Point(70) = {-0.016428, -0.737591, 0, 1.0};
Point(71) = {-0.008304, -0.739977, 0, 1.0};
Point(72) = {-0.000300, -0.742231, 0, 1.0};
Point(73) = {0.007508, -0.744292, 0, 1.0};
Point(74) = {0.015052, -0.746104, 0, 1.0};
Point(75) = {0.022273, -0.747620, 0, 1.0};
Point(76) = {0.029119, -0.748797, 0, 1.0};
Point(77) = {0.035543, -0.749603, 0, 1.0};
Point(78) = {0.041504, -0.750000, 0, 1.0};
Point(79) = {0.047001, -0.749955, 0, 1.0};
Point(80) = {0.052051, -0.749487, 0, 1.0};
Point(81) = {0.056645, -0.748640, 0, 1.0};
Point(82) = {0.060774, -0.747464, 0, 1.0};
Point(83) = {0.064417, -0.746024, 0, 1.0};
Point(84) = {0.067541, -0.744386, 0, 1.0};
Point(85) = {0.070119, -0.742609, 0, 1.0};
Point(86) = {0.072131, -0.740760, 0, 1.0};
Point(87) = {0.073559, -0.738924, 0, 1.0};
Point(88) = {0.074373, -0.737205, 0, 1.0};
Point(89) = {0.074496, -0.736712, 0, 1.0};
Point(90) = {0.074552, -0.736265, 0, 1.0};
Point(91) = {0.074545, -0.735853, 0, 1.0};
Point(92) = {0.074501, -0.735603, 0, 1.0};
Point(93) = {0.074418, -0.735383, 0, 1.0};
Point(94) = {0.074279, -0.735183, 0, 1.0};
Point(95) = {0.074080, -0.734985, 0, 1.0};
Point(96) = {0.073694, -0.734689, 0, 1.0};
Point(97) = {0.073213, -0.734392, 0, 1.0};
Point(98) = {0.071781, -0.733703, 0, 1.0};
Point(99) = {0.068938, -0.732710, 0, 1.0};
Point(100) = {0.065242, -0.731759, 0, 1.0};
Point(101) = {0.060725, -0.730884, 0, 1.0};
Point(102) = {0.055395, -0.730079, 0, 1.0};
Point(103) = {0.049304, -0.729309, 0, 1.0};
Point(104) = {0.042535, -0.728557, 0, 1.0};
Point(105) = {0.035173, -0.727814, 0, 1.0};
Point(106) = {0.027312, -0.727079, 0, 1.0};
Point(107) = {0.019047, -0.726350, 0, 1.0};
Point(108) = {0.010480, -0.725627, 0, 1.0};
Point(109) = {0.001714, -0.724914, 0, 1.0};
Point(110) = {-0.007144, -0.724214, 0, 1.0};
Point(111) = {-0.015987, -0.723532, 0, 1.0};
Point(112) = {-0.024709, -0.722874, 0, 1.0};
Point(113) = {-0.033205, -0.722247, 0, 1.0};
Point(114) = {-0.041373, -0.721660, 0, 1.0};
Point(115) = {-0.049115, -0.721128, 0, 1.0};
Point(116) = {-0.056352, -0.720665, 0, 1.0};
Point(117) = {-0.063013, -0.720268, 0, 1.0};
Point(118) = {-0.069026, -0.719925, 0, 1.0};
Point(119) = {-0.074312, -0.719621, 0, 1.0};
Point(120) = {-0.074520, -0.719607, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:45};
Spline(3) = {45:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:105};
Spline(7) = {105:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111959, 0.726990, 0, 1.0};
Point(2) = {0.108294, 0.728035, 0, 1.0};
Point(3) = {0.104634, 0.729132, 0, 1.0};
Point(4) = {0.100974, 0.730235, 0, 1.0};
Point(5) = {0.097312, 0.731310, 0, 1.0};
Point(6) = {0.093650, 0.732394, 0, 1.0};
Point(7) = {0.089988, 0.733470, 0, 1.0};
Point(8) = {0.086326, 0.734548, 0, 1.0};
Point(9) = {0.082663, 0.735618, 0, 1.0};
Point(10) = {0.075332, 0.737698, 0, 1.0};
Point(11) = {0.067991, 0.739683, 0, 1.0};
Point(12) = {0.060638, 0.741542, 0, 1.0};
Point(13) = {0.053271, 0.743266, 0, 1.0};
Point(14) = {0.045887, 0.744817, 0, 1.0};
Point(15) = {0.038484, 0.746171, 0, 1.0};
Point(16) = {0.031062, 0.747322, 0, 1.0};
Point(17) = {0.023619, 0.748277, 0, 1.0};
Point(18) = {0.019891, 0.748685, 0, 1.0};
Point(19) = {0.016159, 0.749045, 0, 1.0};
Point(20) = {0.012420, 0.749346, 0, 1.0};
Point(21) = {0.008676, 0.749588, 0, 1.0};
Point(22) = {0.004926, 0.749772, 0, 1.0};
Point(23) = {0.001171, 0.749904, 0, 1.0};
Point(24) = {-0.002589, 0.749987, 0, 1.0};
Point(25) = {-0.006356, 0.750000, 0, 1.0};
Point(26) = {-0.010132, 0.749925, 0, 1.0};
Point(27) = {-0.013918, 0.749739, 0, 1.0};
Point(28) = {-0.017718, 0.749419, 0, 1.0};
Point(29) = {-0.021534, 0.748928, 0, 1.0};
Point(30) = {-0.025372, 0.748219, 0, 1.0};
Point(31) = {-0.029242, 0.747183, 0, 1.0};
Point(32) = {-0.031194, 0.746488, 0, 1.0};
Point(33) = {-0.033167, 0.745587, 0, 1.0};
Point(34) = {-0.034164, 0.745028, 0, 1.0};
Point(35) = {-0.035174, 0.744338, 0, 1.0};
Point(36) = {-0.035788, 0.743839, 0, 1.0};
Point(37) = {-0.036414, 0.743225, 0, 1.0};
Point(38) = {-0.036844, 0.742687, 0, 1.0};
Point(39) = {-0.037320, 0.741679, 0, 1.0};
Point(40) = {-0.037016, 0.740933, 0, 1.0};
Point(41) = {-0.036676, 0.740558, 0, 1.0};
Point(42) = {-0.036155, 0.740112, 0, 1.0};
Point(43) = {-0.035626, 0.739743, 0, 1.0};
Point(44) = {-0.034734, 0.739238, 0, 1.0};
Point(45) = {-0.033831, 0.738837, 0, 1.0};
Point(46) = {-0.032012, 0.738176, 0, 1.0};
Point(47) = {-0.030182, 0.737631, 0, 1.0};
Point(48) = {-0.026504, 0.736719, 0, 1.0};
Point(49) = {-0.022811, 0.735947, 0, 1.0};
Point(50) = {-0.019111, 0.735262, 0, 1.0};
Point(51) = {-0.015403, 0.734647, 0, 1.0};
Point(52) = {-0.011689, 0.734096, 0, 1.0};
Point(53) = {-0.007970, 0.733596, 0, 1.0};
Point(54) = {-0.004248, 0.733131, 0, 1.0};
Point(55) = {-0.000523, 0.732693, 0, 1.0};
Point(56) = {0.003204, 0.732275, 0, 1.0};
Point(57) = {0.006933, 0.731879, 0, 1.0};
Point(58) = {0.010665, 0.731515, 0, 1.0};
Point(59) = {0.014402, 0.731189, 0, 1.0};
Point(60) = {0.018142, 0.730904, 0, 1.0};
Point(61) = {0.021885, 0.730653, 0, 1.0};
Point(62) = {0.029381, 0.730241, 0, 1.0};
Point(63) = {0.036889, 0.729953, 0, 1.0};
Point(64) = {0.044408, 0.729780, 0, 1.0};
Point(65) = {0.051937, 0.729704, 0, 1.0};
Point(66) = {0.059471, 0.729686, 0, 1.0};
Point(67) = {0.067005, 0.729662, 0, 1.0};
Point(68) = {0.074534, 0.729590, 0, 1.0};
Point(69) = {0.082053, 0.729416, 0, 1.0};
Point(70) = {0.085807, 0.729271, 0, 1.0};
Point(71) = {0.089557, 0.729083, 0, 1.0};
Point(72) = {0.093300, 0.728835, 0, 1.0};
Point(73) = {0.097040, 0.728548, 0, 1.0};
Point(74) = {0.100774, 0.728196, 0, 1.0};
Point(75) = {0.104507, 0.727848, 0, 1.0};
Point(76) = {0.108236, 0.727447, 0, 1.0};
Point(77) = {-0.111959, -0.726990, 0, 1.0};
Point(78) = {-0.108294, -0.728035, 0, 1.0};
Point(79) = {-0.104634, -0.729132, 0, 1.0};
Point(80) = {-0.100974, -0.730235, 0, 1.0};
Point(81) = {-0.097312, -0.731310, 0, 1.0};
Point(82) = {-0.093650, -0.732394, 0, 1.0};
Point(83) = {-0.089988, -0.733470, 0, 1.0};
Point(84) = {-0.086326, -0.734548, 0, 1.0};
Point(85) = {-0.082663, -0.735618, 0, 1.0};
Point(86) = {-0.075332, -0.737698, 0, 1.0};
Point(87) = {-0.067991, -0.739683, 0, 1.0};
Point(88) = {-0.060638, -0.741542, 0, 1.0};
Point(89) = {-0.053271, -0.743266, 0, 1.0};
Point(90) = {-0.045887, -0.744817, 0, 1.0};
Point(91) = {-0.038484, -0.746171, 0, 1.0};
Point(92) = {-0.031062, -0.747322, 0, 1.0};
Point(93) = {-0.023619, -0.748277, 0, 1.0};
Point(94) = {-0.019891, -0.748685, 0, 1.0};
Point(95) = {-0.016159, -0.749045, 0, 1.0};
Point(96) = {-0.012420, -0.749346, 0, 1.0};
Point(97) = {-0.008676, -0.749588, 0, 1.0};
Point(98) = {-0.004926, -0.749772, 0, 1.0};
Point(99) = {-0.001171, -0.749904, 0, 1.0};
Point(100) = {0.002589, -0.749987, 0, 1.0};
Point(101) = {0.006356, -0.750000, 0, 1.0};
Point(102) = {0.010132, -0.749925, 0, 1.0};
Point(103) = {0.013918, -0.749739, 0, 1.0};
Point(104) = {0.017718, -0.749419, 0, 1.0};
Point(105) = {0.021534, -0.748928, 0, 1.0};
Point(106) = {0.025372, -0.748219, 0, 1.0};
Point(107) = {0.029242, -0.747183, 0, 1.0};
Point(108) = {0.031194, -0.746488, 0, 1.0};
Point(109) = {0.033167, -0.745587, 0, 1.0};
Point(110) = {0.034164, -0.745028, 0, 1.0};
Point(111) = {0.035174, -0.744338, 0, 1.0};
Point(112) = {0.035788, -0.743839, 0, 1.0};
Point(113) = {0.036414, -0.743225, 0, 1.0};
Point(114) = {0.036844, -0.742687, 0, 1.0};
Point(115) = {0.037320, -0.741679, 0, 1.0};
Point(116) = {0.037016, -0.740933, 0, 1.0};
Point(117) = {0.036676, -0.740558, 0, 1.0};
Point(118) = {0.036155, -0.740112, 0, 1.0};
Point(119) = {0.035626, -0.739743, 0, 1.0};
Point(120) = {0.034734, -0.739238, 0, 1.0};
Point(121) = {0.033831, -0.738837, 0, 1.0};
Point(122) = {0.032012, -0.738176, 0, 1.0};
Point(123) = {0.030182, -0.737631, 0, 1.0};
Point(124) = {0.026504, -0.736719, 0, 1.0};
Point(125) = {0.022811, -0.735947, 0, 1.0};
Point(126) = {0.019111, -0.735262, 0, 1.0};
Point(127) = {0.015403, -0.734647, 0, 1.0};
Point(128) = {0.011689, -0.734096, 0, 1.0};
Point(129) = {0.007970, -0.733596, 0, 1.0};
Point(130) = {0.004248, -0.733131, 0, 1.0};
Point(131) = {0.000523, -0.732693, 0, 1.0};
Point(132) = {-0.003204, -0.732275, 0, 1.0};
Point(133) = {-0.006933, -0.731879, 0, 1.0};
Point(134) = {-0.010665, -0.731515, 0, 1.0};
Point(135) = {-0.014402, -0.731189, 0, 1.0};
Point(136) = {-0.018142, -0.730904, 0, 1.0};
Point(137) = {-0.021885, -0.730653, 0, 1.0};
Point(138) = {-0.029381, -0.730241, 0, 1.0};
Point(139) = {-0.036889, -0.729953, 0, 1.0};
Point(140) = {-0.044408, -0.729780, 0, 1.0};
Point(141) = {-0.051937, -0.729704, 0, 1.0};
Point(142) = {-0.059471, -0.729686, 0, 1.0};
Point(143) = {-0.067005, -0.729662, 0, 1.0};
Point(144) = {-0.074534, -0.729590, 0, 1.0};
Point(145) = {-0.082053, -0.729416, 0, 1.0};
Point(146) = {-0.085807, -0.729271, 0, 1.0};
Point(147) = {-0.089557, -0.729083, 0, 1.0};
Point(148) = {-0.093300, -0.728835, 0, 1.0};
Point(149) = {-0.097040, -0.728548, 0, 1.0};
Point(150) = {-0.100774, -0.728196, 0, 1.0};
Point(151) = {-0.104507, -0.727848, 0, 1.0};
Point(152) = {-0.108236, -0.727447, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149039, 0.719320, 0, 1.0};
Point(2) = {0.144152, 0.720713, 0, 1.0};
Point(3) = {0.139271, 0.722176, 0, 1.0};
Point(4) = {0.134392, 0.723647, 0, 1.0};
Point(5) = {0.129509, 0.725080, 0, 1.0};
Point(6) = {0.124627, 0.726525, 0, 1.0};
Point(7) = {0.119744, 0.727960, 0, 1.0};
Point(8) = {0.114861, 0.729397, 0, 1.0};
Point(9) = {0.109978, 0.730824, 0, 1.0};
Point(10) = {0.100202, 0.733597, 0, 1.0};
Point(11) = {0.090414, 0.736244, 0, 1.0};
Point(12) = {0.080610, 0.738722, 0, 1.0};
Point(13) = {0.070788, 0.741021, 0, 1.0};
Point(14) = {0.060943, 0.743089, 0, 1.0};
Point(15) = {0.051072, 0.744895, 0, 1.0};
Point(16) = {0.041175, 0.746429, 0, 1.0};
Point(17) = {0.031252, 0.747703, 0, 1.0};
Point(18) = {0.026281, 0.748246, 0, 1.0};
Point(19) = {0.021304, 0.748726, 0, 1.0};
Point(20) = {0.016320, 0.749128, 0, 1.0};
Point(21) = {0.011327, 0.749451, 0, 1.0};
Point(22) = {0.006327, 0.749695, 0, 1.0};
Point(23) = {0.001321, 0.749873, 0, 1.0};
Point(24) = {-0.003693, 0.749982, 0, 1.0};
Point(25) = {-0.008715, 0.750000, 0, 1.0};
Point(26) = {-0.013749, 0.749900, 0, 1.0};
Point(27) = {-0.018798, 0.749652, 0, 1.0};
Point(28) = {-0.023864, 0.749226, 0, 1.0};
Point(29) = {-0.028952, 0.748571, 0, 1.0};
Point(30) = {-0.034069, 0.747626, 0, 1.0};
Point(31) = {-0.039230, 0.746244, 0, 1.0};
Point(32) = {-0.041833, 0.745317, 0, 1.0};
Point(33) = {-0.044463, 0.744117, 0, 1.0};
Point(34) = {-0.045792, 0.743371, 0, 1.0};
Point(35) = {-0.047139, 0.742451, 0, 1.0};
Point(36) = {-0.047958, 0.741786, 0, 1.0};
Point(37) = {-0.048792, 0.740967, 0, 1.0};
Point(38) = {-0.049365, 0.740250, 0, 1.0};
Point(39) = {-0.050000, 0.738906, 0, 1.0};
Point(40) = {-0.049595, 0.737911, 0, 1.0};
Point(41) = {-0.049142, 0.737410, 0, 1.0};
Point(42) = {-0.048447, 0.736816, 0, 1.0};
Point(43) = {-0.047742, 0.736324, 0, 1.0};
Point(44) = {-0.046552, 0.735650, 0, 1.0};
Point(45) = {-0.045349, 0.735116, 0, 1.0};
Point(46) = {-0.042923, 0.734234, 0, 1.0};
Point(47) = {-0.040483, 0.733508, 0, 1.0};
Point(48) = {-0.035578, 0.732292, 0, 1.0};
Point(49) = {-0.030656, 0.731263, 0, 1.0};
Point(50) = {-0.025721, 0.730349, 0, 1.0};
Point(51) = {-0.020778, 0.729529, 0, 1.0};
Point(52) = {-0.015826, 0.728794, 0, 1.0};
Point(53) = {-0.010867, 0.728128, 0, 1.0};
Point(54) = {-0.005904, 0.727509, 0, 1.0};
Point(55) = {-0.000938, 0.726923, 0, 1.0};
Point(56) = {0.004032, 0.726366, 0, 1.0};
Point(57) = {0.009004, 0.725839, 0, 1.0};
Point(58) = {0.013980, 0.725353, 0, 1.0};
Point(59) = {0.018962, 0.724919, 0, 1.0};
Point(60) = {0.023949, 0.724539, 0, 1.0};
Point(61) = {0.028940, 0.724204, 0, 1.0};
Point(62) = {0.038934, 0.723655, 0, 1.0};
Point(63) = {0.048944, 0.723271, 0, 1.0};
Point(64) = {0.058970, 0.723040, 0, 1.0};
Point(65) = {0.069008, 0.722939, 0, 1.0};
Point(66) = {0.079054, 0.722915, 0, 1.0};
Point(67) = {0.089099, 0.722883, 0, 1.0};
Point(68) = {0.099138, 0.722787, 0, 1.0};
Point(69) = {0.109164, 0.722554, 0, 1.0};
Point(70) = {0.114169, 0.722361, 0, 1.0};
Point(71) = {0.119168, 0.722110, 0, 1.0};
Point(72) = {0.124160, 0.721780, 0, 1.0};
Point(73) = {0.129147, 0.721398, 0, 1.0};
Point(74) = {0.134124, 0.720928, 0, 1.0};
Point(75) = {0.139103, 0.720464, 0, 1.0};
Point(76) = {0.144074, 0.719929, 0, 1.0};
Point(77) = {-0.149039, -0.719320, 0, 1.0};
Point(78) = {-0.144152, -0.720713, 0, 1.0};
Point(79) = {-0.139271, -0.722176, 0, 1.0};
Point(80) = {-0.134392, -0.723647, 0, 1.0};
Point(81) = {-0.129509, -0.725080, 0, 1.0};
Point(82) = {-0.124627, -0.726525, 0, 1.0};
Point(83) = {-0.119744, -0.727960, 0, 1.0};
Point(84) = {-0.114861, -0.729397, 0, 1.0};
Point(85) = {-0.109978, -0.730824, 0, 1.0};
Point(86) = {-0.100202, -0.733597, 0, 1.0};
Point(87) = {-0.090414, -0.736244, 0, 1.0};
Point(88) = {-0.080610, -0.738722, 0, 1.0};
Point(89) = {-0.070788, -0.741021, 0, 1.0};
Point(90) = {-0.060943, -0.743089, 0, 1.0};
Point(91) = {-0.051072, -0.744895, 0, 1.0};
Point(92) = {-0.041175, -0.746429, 0, 1.0};
Point(93) = {-0.031252, -0.747703, 0, 1.0};
Point(94) = {-0.026281, -0.748246, 0, 1.0};
Point(95) = {-0.021304, -0.748726, 0, 1.0};
Point(96) = {-0.016320, -0.749128, 0, 1.0};
Point(97) = {-0.011327, -0.749451, 0, 1.0};
Point(98) = {-0.006327, -0.749695, 0, 1.0};
Point(99) = {-0.001321, -0.749873, 0, 1.0};
Point(100) = {0.003693, -0.749982, 0, 1.0};
Point(101) = {0.008715, -0.750000, 0, 1.0};
Point(102) = {0.013749, -0.749900, 0, 1.0};
Point(103) = {0.018798, -0.749652, 0, 1.0};
Point(104) = {0.023864, -0.749226, 0, 1.0};
Point(105) = {0.028952, -0.748571, 0, 1.0};
Point(106) = {0.034069, -0.747626, 0, 1.0};
Point(107) = {0.039230, -0.746244, 0, 1.0};
Point(108) = {0.041833, -0.745317, 0, 1.0};
Point(109) = {0.044463, -0.744117, 0, 1.0};
Point(110) = {0.045792, -0.743371, 0, 1.0};
Point(111) = {0.047139, -0.742451, 0, 1.0};
Point(112) = {0.047958, -0.741786, 0, 1.0};
Point(113) = {0.048792, -0.740967, 0, 1.0};
Point(114) = {0.049365, -0.740250, 0, 1.0};
Point(115) = {0.050000, -0.738906, 0, 1.0};
Point(116) = {0.049595, -0.737911, 0, 1.0};
Point(117) = {0.049142, -0.737410, 0, 1.0};
Point(118) = {0.048447, -0.736816, 0, 1.0};
Point(119) = {0.047742, -0.736324, 0, 1.0};
Point(120) = {0.046552, -0.735650, 0, 1.0};
Point(121) = {0.045349, -0.735116, 0, 1.0};
Point(122) = {0.042923, -0.734234, 0, 1.0};
Point(123) = {0.040483, -0.733508, 0, 1.0};
Point(124) = {0.035578, -0.732292, 0, 1.0};
Point(125) = {0.030656, -0.731263, 0, 1.0};
Point(126) = {0.025721, -0.730349, 0, 1.0};
Point(127) = {0.020778, -0.729529, 0, 1.0};
Point(128) = {0.015826, -0.728794, 0, 1.0};
Point(129) = {0.010867, -0.728128, 0, 1.0};
Point(130) = {0.005904, -0.727509, 0, 1.0};
Point(131) = {0.000938, -0.726923, 0, 1.0};
Point(132) = {-0.004032, -0.726366, 0, 1.0};
Point(133) = {-0.009004, -0.725839, 0, 1.0};
Point(134) = {-0.013980, -0.725353, 0, 1.0};
Point(135) = {-0.018962, -0.724919, 0, 1.0};
Point(136) = {-0.023949, -0.724539, 0, 1.0};
Point(137) = {-0.028940, -0.724204, 0, 1.0};
Point(138) = {-0.038934, -0.723655, 0, 1.0};
Point(139) = {-0.048944, -0.723271, 0, 1.0};
Point(140) = {-0.058970, -0.723040, 0, 1.0};
Point(141) = {-0.069008, -0.722939, 0, 1.0};
Point(142) = {-0.079054, -0.722915, 0, 1.0};
Point(143) = {-0.089099, -0.722883, 0, 1.0};
Point(144) = {-0.099138, -0.722787, 0, 1.0};
Point(145) = {-0.109164, -0.722554, 0, 1.0};
Point(146) = {-0.114169, -0.722361, 0, 1.0};
Point(147) = {-0.119168, -0.722110, 0, 1.0};
Point(148) = {-0.124160, -0.721780, 0, 1.0};
Point(149) = {-0.129147, -0.721398, 0, 1.0};
Point(150) = {-0.134124, -0.720928, 0, 1.0};
Point(151) = {-0.139103, -0.720464, 0, 1.0};
Point(152) = {-0.144074, -0.719929, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
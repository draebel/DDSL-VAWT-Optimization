SetFactory("OpenCASCADE");

Point(1) = {0.074798, 0.728129, 0, 1.0};
Point(2) = {0.071555, 0.729106, 0, 1.0};
Point(3) = {0.067683, 0.730242, 0, 1.0};
Point(4) = {0.063813, 0.731388, 0, 1.0};
Point(5) = {0.059941, 0.732526, 0, 1.0};
Point(6) = {0.056070, 0.733665, 0, 1.0};
Point(7) = {0.052198, 0.734797, 0, 1.0};
Point(8) = {0.044447, 0.736995, 0, 1.0};
Point(9) = {0.036687, 0.739094, 0, 1.0};
Point(10) = {0.028914, 0.741058, 0, 1.0};
Point(11) = {0.021126, 0.742881, 0, 1.0};
Point(12) = {0.013321, 0.744521, 0, 1.0};
Point(13) = {0.005495, 0.745952, 0, 1.0};
Point(14) = {-0.002352, 0.747169, 0, 1.0};
Point(15) = {-0.010219, 0.748179, 0, 1.0};
Point(16) = {-0.014160, 0.748610, 0, 1.0};
Point(17) = {-0.018106, 0.748990, 0, 1.0};
Point(18) = {-0.022058, 0.749309, 0, 1.0};
Point(19) = {-0.026016, 0.749564, 0, 1.0};
Point(20) = {-0.029981, 0.749759, 0, 1.0};
Point(21) = {-0.033950, 0.749899, 0, 1.0};
Point(22) = {-0.037925, 0.749986, 0, 1.0};
Point(23) = {-0.041907, 0.750000, 0, 1.0};
Point(24) = {-0.045898, 0.749921, 0, 1.0};
Point(25) = {-0.049901, 0.749724, 0, 1.0};
Point(26) = {-0.053917, 0.749386, 0, 1.0};
Point(27) = {-0.057952, 0.748867, 0, 1.0};
Point(28) = {-0.062009, 0.748117, 0, 1.0};
Point(29) = {-0.066100, 0.747022, 0, 1.0};
Point(30) = {-0.068164, 0.746287, 0, 1.0};
Point(31) = {-0.070250, 0.745335, 0, 1.0};
Point(32) = {-0.071304, 0.744744, 0, 1.0};
Point(33) = {-0.072371, 0.744014, 0, 1.0};
Point(34) = {-0.073021, 0.743487, 0, 1.0};
Point(35) = {-0.073682, 0.742838, 0, 1.0};
Point(36) = {-0.074136, 0.742270, 0, 1.0};
Point(37) = {-0.074640, 0.741204, 0, 1.0};
Point(38) = {-0.074319, 0.740416, 0, 1.0};
Point(39) = {-0.073959, 0.740018, 0, 1.0};
Point(40) = {-0.073408, 0.739547, 0, 1.0};
Point(41) = {-0.072849, 0.739157, 0, 1.0};
Point(42) = {-0.071906, 0.738623, 0, 1.0};
Point(43) = {-0.070952, 0.738199, 0, 1.0};
Point(44) = {-0.069029, 0.737500, 0, 1.0};
Point(45) = {-0.067094, 0.736924, 0, 1.0};
Point(46) = {-0.063205, 0.735960, 0, 1.0};
Point(47) = {-0.059302, 0.735144, 0, 1.0};
Point(48) = {-0.055390, 0.734420, 0, 1.0};
Point(49) = {-0.051471, 0.733770, 0, 1.0};
Point(50) = {-0.047545, 0.733187, 0, 1.0};
Point(51) = {-0.043613, 0.732659, 0, 1.0};
Point(52) = {-0.039678, 0.732168, 0, 1.0};
Point(53) = {-0.035741, 0.731704, 0, 1.0};
Point(54) = {-0.031801, 0.731262, 0, 1.0};
Point(55) = {-0.027859, 0.730844, 0, 1.0};
Point(56) = {-0.023913, 0.730459, 0, 1.0};
Point(57) = {-0.019964, 0.730115, 0, 1.0};
Point(58) = {-0.016010, 0.729813, 0, 1.0};
Point(59) = {-0.012053, 0.729548, 0, 1.0};
Point(60) = {-0.004129, 0.729113, 0, 1.0};
Point(61) = {0.003808, 0.728808, 0, 1.0};
Point(62) = {0.011757, 0.728625, 0, 1.0};
Point(63) = {0.019716, 0.728544, 0, 1.0};
Point(64) = {0.027681, 0.728525, 0, 1.0};
Point(65) = {0.035645, 0.728500, 0, 1.0};
Point(66) = {0.043604, 0.728424, 0, 1.0};
Point(67) = {0.051553, 0.728240, 0, 1.0};
Point(68) = {0.055521, 0.728087, 0, 1.0};
Point(69) = {0.059485, 0.727888, 0, 1.0};
Point(70) = {0.063442, 0.727626, 0, 1.0};
Point(71) = {0.067396, 0.727323, 0, 1.0};
Point(72) = {0.071343, 0.726950, 0, 1.0};
Point(73) = {0.074652, 0.726644, 0, 1.0};
Point(74) = {-0.074798, -0.728129, 0, 1.0};
Point(75) = {-0.071555, -0.729106, 0, 1.0};
Point(76) = {-0.067683, -0.730242, 0, 1.0};
Point(77) = {-0.063813, -0.731388, 0, 1.0};
Point(78) = {-0.059941, -0.732526, 0, 1.0};
Point(79) = {-0.056070, -0.733665, 0, 1.0};
Point(80) = {-0.052198, -0.734797, 0, 1.0};
Point(81) = {-0.044447, -0.736995, 0, 1.0};
Point(82) = {-0.036687, -0.739094, 0, 1.0};
Point(83) = {-0.028914, -0.741058, 0, 1.0};
Point(84) = {-0.021126, -0.742881, 0, 1.0};
Point(85) = {-0.013321, -0.744521, 0, 1.0};
Point(86) = {-0.005495, -0.745952, 0, 1.0};
Point(87) = {0.002352, -0.747169, 0, 1.0};
Point(88) = {0.010219, -0.748179, 0, 1.0};
Point(89) = {0.014160, -0.748610, 0, 1.0};
Point(90) = {0.018106, -0.748990, 0, 1.0};
Point(91) = {0.022058, -0.749309, 0, 1.0};
Point(92) = {0.026016, -0.749564, 0, 1.0};
Point(93) = {0.029981, -0.749759, 0, 1.0};
Point(94) = {0.033950, -0.749899, 0, 1.0};
Point(95) = {0.037925, -0.749986, 0, 1.0};
Point(96) = {0.041907, -0.750000, 0, 1.0};
Point(97) = {0.045898, -0.749921, 0, 1.0};
Point(98) = {0.049901, -0.749724, 0, 1.0};
Point(99) = {0.053917, -0.749386, 0, 1.0};
Point(100) = {0.057952, -0.748867, 0, 1.0};
Point(101) = {0.062009, -0.748117, 0, 1.0};
Point(102) = {0.066100, -0.747022, 0, 1.0};
Point(103) = {0.068164, -0.746287, 0, 1.0};
Point(104) = {0.070250, -0.745335, 0, 1.0};
Point(105) = {0.071304, -0.744744, 0, 1.0};
Point(106) = {0.072371, -0.744014, 0, 1.0};
Point(107) = {0.073021, -0.743487, 0, 1.0};
Point(108) = {0.073682, -0.742838, 0, 1.0};
Point(109) = {0.074136, -0.742270, 0, 1.0};
Point(110) = {0.074640, -0.741204, 0, 1.0};
Point(111) = {0.074319, -0.740416, 0, 1.0};
Point(112) = {0.073959, -0.740018, 0, 1.0};
Point(113) = {0.073408, -0.739547, 0, 1.0};
Point(114) = {0.072849, -0.739157, 0, 1.0};
Point(115) = {0.071906, -0.738623, 0, 1.0};
Point(116) = {0.070952, -0.738199, 0, 1.0};
Point(117) = {0.069029, -0.737500, 0, 1.0};
Point(118) = {0.067094, -0.736924, 0, 1.0};
Point(119) = {0.063205, -0.735960, 0, 1.0};
Point(120) = {0.059302, -0.735144, 0, 1.0};
Point(121) = {0.055390, -0.734420, 0, 1.0};
Point(122) = {0.051471, -0.733770, 0, 1.0};
Point(123) = {0.047545, -0.733187, 0, 1.0};
Point(124) = {0.043613, -0.732659, 0, 1.0};
Point(125) = {0.039678, -0.732168, 0, 1.0};
Point(126) = {0.035741, -0.731704, 0, 1.0};
Point(127) = {0.031801, -0.731262, 0, 1.0};
Point(128) = {0.027859, -0.730844, 0, 1.0};
Point(129) = {0.023913, -0.730459, 0, 1.0};
Point(130) = {0.019964, -0.730115, 0, 1.0};
Point(131) = {0.016010, -0.729813, 0, 1.0};
Point(132) = {0.012053, -0.729548, 0, 1.0};
Point(133) = {0.004129, -0.729113, 0, 1.0};
Point(134) = {-0.003808, -0.728808, 0, 1.0};
Point(135) = {-0.011757, -0.728625, 0, 1.0};
Point(136) = {-0.019716, -0.728544, 0, 1.0};
Point(137) = {-0.027681, -0.728525, 0, 1.0};
Point(138) = {-0.035645, -0.728500, 0, 1.0};
Point(139) = {-0.043604, -0.728424, 0, 1.0};
Point(140) = {-0.051553, -0.728240, 0, 1.0};
Point(141) = {-0.055521, -0.728087, 0, 1.0};
Point(142) = {-0.059485, -0.727888, 0, 1.0};
Point(143) = {-0.063442, -0.727626, 0, 1.0};
Point(144) = {-0.067396, -0.727323, 0, 1.0};
Point(145) = {-0.071343, -0.726950, 0, 1.0};
Point(146) = {-0.074652, -0.726644, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074640, 0.726990, 0, 1.0};
Point(2) = {0.070974, 0.728035, 0, 1.0};
Point(3) = {0.067314, 0.729132, 0, 1.0};
Point(4) = {0.063655, 0.730235, 0, 1.0};
Point(5) = {0.059992, 0.731310, 0, 1.0};
Point(6) = {0.056331, 0.732394, 0, 1.0};
Point(7) = {0.052669, 0.733470, 0, 1.0};
Point(8) = {0.049006, 0.734548, 0, 1.0};
Point(9) = {0.045344, 0.735618, 0, 1.0};
Point(10) = {0.038012, 0.737698, 0, 1.0};
Point(11) = {0.030671, 0.739683, 0, 1.0};
Point(12) = {0.023318, 0.741542, 0, 1.0};
Point(13) = {0.015951, 0.743266, 0, 1.0};
Point(14) = {0.008568, 0.744817, 0, 1.0};
Point(15) = {0.001165, 0.746171, 0, 1.0};
Point(16) = {-0.006258, 0.747322, 0, 1.0};
Point(17) = {-0.013700, 0.748277, 0, 1.0};
Point(18) = {-0.017428, 0.748685, 0, 1.0};
Point(19) = {-0.021161, 0.749045, 0, 1.0};
Point(20) = {-0.024900, 0.749346, 0, 1.0};
Point(21) = {-0.028644, 0.749588, 0, 1.0};
Point(22) = {-0.032394, 0.749772, 0, 1.0};
Point(23) = {-0.036149, 0.749904, 0, 1.0};
Point(24) = {-0.039909, 0.749987, 0, 1.0};
Point(25) = {-0.043676, 0.750000, 0, 1.0};
Point(26) = {-0.047451, 0.749925, 0, 1.0};
Point(27) = {-0.051238, 0.749739, 0, 1.0};
Point(28) = {-0.055037, 0.749419, 0, 1.0};
Point(29) = {-0.058854, 0.748928, 0, 1.0};
Point(30) = {-0.062692, 0.748219, 0, 1.0};
Point(31) = {-0.066562, 0.747183, 0, 1.0};
Point(32) = {-0.068514, 0.746488, 0, 1.0};
Point(33) = {-0.070487, 0.745587, 0, 1.0};
Point(34) = {-0.071484, 0.745028, 0, 1.0};
Point(35) = {-0.072494, 0.744338, 0, 1.0};
Point(36) = {-0.073108, 0.743839, 0, 1.0};
Point(37) = {-0.073734, 0.743225, 0, 1.0};
Point(38) = {-0.074163, 0.742687, 0, 1.0};
Point(39) = {-0.074640, 0.741679, 0, 1.0};
Point(40) = {-0.074336, 0.740933, 0, 1.0};
Point(41) = {-0.073996, 0.740558, 0, 1.0};
Point(42) = {-0.073475, 0.740112, 0, 1.0};
Point(43) = {-0.072946, 0.739743, 0, 1.0};
Point(44) = {-0.072054, 0.739238, 0, 1.0};
Point(45) = {-0.071151, 0.738837, 0, 1.0};
Point(46) = {-0.069332, 0.738176, 0, 1.0};
Point(47) = {-0.067502, 0.737631, 0, 1.0};
Point(48) = {-0.063823, 0.736719, 0, 1.0};
Point(49) = {-0.060131, 0.735947, 0, 1.0};
Point(50) = {-0.056430, 0.735262, 0, 1.0};
Point(51) = {-0.052723, 0.734647, 0, 1.0};
Point(52) = {-0.049009, 0.734096, 0, 1.0};
Point(53) = {-0.045290, 0.733596, 0, 1.0};
Point(54) = {-0.041568, 0.733131, 0, 1.0};
Point(55) = {-0.037843, 0.732693, 0, 1.0};
Point(56) = {-0.034116, 0.732275, 0, 1.0};
Point(57) = {-0.030387, 0.731879, 0, 1.0};
Point(58) = {-0.026654, 0.731515, 0, 1.0};
Point(59) = {-0.022918, 0.731189, 0, 1.0};
Point(60) = {-0.019178, 0.730904, 0, 1.0};
Point(61) = {-0.015435, 0.730653, 0, 1.0};
Point(62) = {-0.007939, 0.730241, 0, 1.0};
Point(63) = {-0.000431, 0.729953, 0, 1.0};
Point(64) = {0.007088, 0.729780, 0, 1.0};
Point(65) = {0.014617, 0.729704, 0, 1.0};
Point(66) = {0.022151, 0.729686, 0, 1.0};
Point(67) = {0.029685, 0.729662, 0, 1.0};
Point(68) = {0.037214, 0.729590, 0, 1.0};
Point(69) = {0.044733, 0.729416, 0, 1.0};
Point(70) = {0.048487, 0.729271, 0, 1.0};
Point(71) = {0.052237, 0.729083, 0, 1.0};
Point(72) = {0.055981, 0.728835, 0, 1.0};
Point(73) = {0.059720, 0.728548, 0, 1.0};
Point(74) = {0.063454, 0.728196, 0, 1.0};
Point(75) = {0.067188, 0.727848, 0, 1.0};
Point(76) = {0.070916, 0.727447, 0, 1.0};
Point(77) = {-0.074640, -0.726990, 0, 1.0};
Point(78) = {-0.070974, -0.728035, 0, 1.0};
Point(79) = {-0.067314, -0.729132, 0, 1.0};
Point(80) = {-0.063655, -0.730235, 0, 1.0};
Point(81) = {-0.059992, -0.731310, 0, 1.0};
Point(82) = {-0.056331, -0.732394, 0, 1.0};
Point(83) = {-0.052669, -0.733470, 0, 1.0};
Point(84) = {-0.049006, -0.734548, 0, 1.0};
Point(85) = {-0.045344, -0.735618, 0, 1.0};
Point(86) = {-0.038012, -0.737698, 0, 1.0};
Point(87) = {-0.030671, -0.739683, 0, 1.0};
Point(88) = {-0.023318, -0.741542, 0, 1.0};
Point(89) = {-0.015951, -0.743266, 0, 1.0};
Point(90) = {-0.008568, -0.744817, 0, 1.0};
Point(91) = {-0.001165, -0.746171, 0, 1.0};
Point(92) = {0.006258, -0.747322, 0, 1.0};
Point(93) = {0.013700, -0.748277, 0, 1.0};
Point(94) = {0.017428, -0.748685, 0, 1.0};
Point(95) = {0.021161, -0.749045, 0, 1.0};
Point(96) = {0.024900, -0.749346, 0, 1.0};
Point(97) = {0.028644, -0.749588, 0, 1.0};
Point(98) = {0.032394, -0.749772, 0, 1.0};
Point(99) = {0.036149, -0.749904, 0, 1.0};
Point(100) = {0.039909, -0.749987, 0, 1.0};
Point(101) = {0.043676, -0.750000, 0, 1.0};
Point(102) = {0.047451, -0.749925, 0, 1.0};
Point(103) = {0.051238, -0.749739, 0, 1.0};
Point(104) = {0.055037, -0.749419, 0, 1.0};
Point(105) = {0.058854, -0.748928, 0, 1.0};
Point(106) = {0.062692, -0.748219, 0, 1.0};
Point(107) = {0.066562, -0.747183, 0, 1.0};
Point(108) = {0.068514, -0.746488, 0, 1.0};
Point(109) = {0.070487, -0.745587, 0, 1.0};
Point(110) = {0.071484, -0.745028, 0, 1.0};
Point(111) = {0.072494, -0.744338, 0, 1.0};
Point(112) = {0.073108, -0.743839, 0, 1.0};
Point(113) = {0.073734, -0.743225, 0, 1.0};
Point(114) = {0.074163, -0.742687, 0, 1.0};
Point(115) = {0.074640, -0.741679, 0, 1.0};
Point(116) = {0.074336, -0.740933, 0, 1.0};
Point(117) = {0.073996, -0.740558, 0, 1.0};
Point(118) = {0.073475, -0.740112, 0, 1.0};
Point(119) = {0.072946, -0.739743, 0, 1.0};
Point(120) = {0.072054, -0.739238, 0, 1.0};
Point(121) = {0.071151, -0.738837, 0, 1.0};
Point(122) = {0.069332, -0.738176, 0, 1.0};
Point(123) = {0.067502, -0.737631, 0, 1.0};
Point(124) = {0.063823, -0.736719, 0, 1.0};
Point(125) = {0.060131, -0.735947, 0, 1.0};
Point(126) = {0.056430, -0.735262, 0, 1.0};
Point(127) = {0.052723, -0.734647, 0, 1.0};
Point(128) = {0.049009, -0.734096, 0, 1.0};
Point(129) = {0.045290, -0.733596, 0, 1.0};
Point(130) = {0.041568, -0.733131, 0, 1.0};
Point(131) = {0.037843, -0.732693, 0, 1.0};
Point(132) = {0.034116, -0.732275, 0, 1.0};
Point(133) = {0.030387, -0.731879, 0, 1.0};
Point(134) = {0.026654, -0.731515, 0, 1.0};
Point(135) = {0.022918, -0.731189, 0, 1.0};
Point(136) = {0.019178, -0.730904, 0, 1.0};
Point(137) = {0.015435, -0.730653, 0, 1.0};
Point(138) = {0.007939, -0.730241, 0, 1.0};
Point(139) = {0.000431, -0.729953, 0, 1.0};
Point(140) = {-0.007088, -0.729780, 0, 1.0};
Point(141) = {-0.014617, -0.729704, 0, 1.0};
Point(142) = {-0.022151, -0.729686, 0, 1.0};
Point(143) = {-0.029685, -0.729662, 0, 1.0};
Point(144) = {-0.037214, -0.729590, 0, 1.0};
Point(145) = {-0.044733, -0.729416, 0, 1.0};
Point(146) = {-0.048487, -0.729271, 0, 1.0};
Point(147) = {-0.052237, -0.729083, 0, 1.0};
Point(148) = {-0.055981, -0.728835, 0, 1.0};
Point(149) = {-0.059720, -0.728548, 0, 1.0};
Point(150) = {-0.063454, -0.728196, 0, 1.0};
Point(151) = {-0.067188, -0.727848, 0, 1.0};
Point(152) = {-0.070916, -0.727447, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:98};
Spline(6) = {98:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111772, 0.742350, 0, 1.0};
Point(2) = {0.110470, 0.742433, 0, 1.0};
Point(3) = {0.108315, 0.742580, 0, 1.0};
Point(4) = {0.105336, 0.742816, 0, 1.0};
Point(5) = {0.101594, 0.743149, 0, 1.0};
Point(6) = {0.097148, 0.743572, 0, 1.0};
Point(7) = {0.092060, 0.744077, 0, 1.0};
Point(8) = {0.086406, 0.744657, 0, 1.0};
Point(9) = {0.080256, 0.745295, 0, 1.0};
Point(10) = {0.073695, 0.745979, 0, 1.0};
Point(11) = {0.066809, 0.746690, 0, 1.0};
Point(12) = {0.059686, 0.747401, 0, 1.0};
Point(13) = {0.052418, 0.748094, 0, 1.0};
Point(14) = {0.045099, 0.748744, 0, 1.0};
Point(15) = {0.037819, 0.749309, 0, 1.0};
Point(16) = {0.030674, 0.749746, 0, 1.0};
Point(17) = {0.023727, 0.749991, 0, 1.0};
Point(18) = {0.017007, 0.750000, 0, 1.0};
Point(19) = {0.010544, 0.749756, 0, 1.0};
Point(20) = {0.004365, 0.749258, 0, 1.0};
Point(21) = {-0.001506, 0.748507, 0, 1.0};
Point(22) = {-0.007052, 0.747532, 0, 1.0};
Point(23) = {-0.012246, 0.746374, 0, 1.0};
Point(24) = {-0.017039, 0.745079, 0, 1.0};
Point(25) = {-0.021386, 0.743674, 0, 1.0};
Point(26) = {-0.025256, 0.742195, 0, 1.0};
Point(27) = {-0.028613, 0.740672, 0, 1.0};
Point(28) = {-0.031441, 0.739140, 0, 1.0};
Point(29) = {-0.033723, 0.737637, 0, 1.0};
Point(30) = {-0.035460, 0.736202, 0, 1.0};
Point(31) = {-0.036651, 0.734891, 0, 1.0};
Point(32) = {-0.037319, 0.733757, 0, 1.0};
Point(33) = {-0.037496, 0.732904, 0, 1.0};
Point(34) = {-0.037161, 0.732531, 0, 1.0};
Point(35) = {-0.036203, 0.732719, 0, 1.0};
Point(36) = {-0.034502, 0.733532, 0, 1.0};
Point(37) = {-0.031901, 0.735026, 0, 1.0};
Point(38) = {-0.028229, 0.737184, 0, 1.0};
Point(39) = {-0.023288, 0.739891, 0, 1.0};
Point(40) = {-0.016892, 0.742947, 0, 1.0};
Point(41) = {-0.008850, 0.745904, 0, 1.0};
Point(42) = {0.000579, 0.748016, 0, 1.0};
Point(43) = {0.010512, 0.749018, 0, 1.0};
Point(44) = {0.020400, 0.749279, 0, 1.0};
Point(45) = {0.030104, 0.749110, 0, 1.0};
Point(46) = {0.039535, 0.748645, 0, 1.0};
Point(47) = {0.048615, 0.748011, 0, 1.0};
Point(48) = {0.057284, 0.747281, 0, 1.0};
Point(49) = {0.065493, 0.746522, 0, 1.0};
Point(50) = {0.073186, 0.745757, 0, 1.0};
Point(51) = {0.080303, 0.745025, 0, 1.0};
Point(52) = {0.086792, 0.744346, 0, 1.0};
Point(53) = {0.092604, 0.743746, 0, 1.0};
Point(54) = {0.097700, 0.743239, 0, 1.0};
Point(55) = {0.102051, 0.742841, 0, 1.0};
Point(56) = {0.105627, 0.742562, 0, 1.0};
Point(57) = {0.108438, 0.742417, 0, 1.0};
Point(58) = {0.110497, 0.742359, 0, 1.0};
Point(59) = {0.111773, 0.742336, 0, 1.0};
Point(60) = {-0.111772, -0.742350, 0, 1.0};
Point(61) = {-0.110470, -0.742433, 0, 1.0};
Point(62) = {-0.108315, -0.742580, 0, 1.0};
Point(63) = {-0.105336, -0.742816, 0, 1.0};
Point(64) = {-0.101594, -0.743149, 0, 1.0};
Point(65) = {-0.097148, -0.743572, 0, 1.0};
Point(66) = {-0.092060, -0.744077, 0, 1.0};
Point(67) = {-0.086406, -0.744657, 0, 1.0};
Point(68) = {-0.080256, -0.745295, 0, 1.0};
Point(69) = {-0.073695, -0.745979, 0, 1.0};
Point(70) = {-0.066809, -0.746690, 0, 1.0};
Point(71) = {-0.059686, -0.747401, 0, 1.0};
Point(72) = {-0.052418, -0.748094, 0, 1.0};
Point(73) = {-0.045099, -0.748744, 0, 1.0};
Point(74) = {-0.037819, -0.749309, 0, 1.0};
Point(75) = {-0.030674, -0.749746, 0, 1.0};
Point(76) = {-0.023727, -0.749991, 0, 1.0};
Point(77) = {-0.017007, -0.750000, 0, 1.0};
Point(78) = {-0.010544, -0.749756, 0, 1.0};
Point(79) = {-0.004365, -0.749258, 0, 1.0};
Point(80) = {0.001506, -0.748507, 0, 1.0};
Point(81) = {0.007052, -0.747532, 0, 1.0};
Point(82) = {0.012246, -0.746374, 0, 1.0};
Point(83) = {0.017039, -0.745079, 0, 1.0};
Point(84) = {0.021386, -0.743674, 0, 1.0};
Point(85) = {0.025256, -0.742195, 0, 1.0};
Point(86) = {0.028613, -0.740672, 0, 1.0};
Point(87) = {0.031441, -0.739140, 0, 1.0};
Point(88) = {0.033723, -0.737637, 0, 1.0};
Point(89) = {0.035460, -0.736202, 0, 1.0};
Point(90) = {0.036651, -0.734891, 0, 1.0};
Point(91) = {0.037319, -0.733757, 0, 1.0};
Point(92) = {0.037496, -0.732904, 0, 1.0};
Point(93) = {0.037161, -0.732531, 0, 1.0};
Point(94) = {0.036203, -0.732719, 0, 1.0};
Point(95) = {0.034502, -0.733532, 0, 1.0};
Point(96) = {0.031901, -0.735026, 0, 1.0};
Point(97) = {0.028229, -0.737184, 0, 1.0};
Point(98) = {0.023288, -0.739891, 0, 1.0};
Point(99) = {0.016892, -0.742947, 0, 1.0};
Point(100) = {0.008850, -0.745904, 0, 1.0};
Point(101) = {-0.000579, -0.748016, 0, 1.0};
Point(102) = {-0.010512, -0.749018, 0, 1.0};
Point(103) = {-0.020400, -0.749279, 0, 1.0};
Point(104) = {-0.030104, -0.749110, 0, 1.0};
Point(105) = {-0.039535, -0.748645, 0, 1.0};
Point(106) = {-0.048615, -0.748011, 0, 1.0};
Point(107) = {-0.057284, -0.747281, 0, 1.0};
Point(108) = {-0.065493, -0.746522, 0, 1.0};
Point(109) = {-0.073186, -0.745757, 0, 1.0};
Point(110) = {-0.080303, -0.745025, 0, 1.0};
Point(111) = {-0.086792, -0.744346, 0, 1.0};
Point(112) = {-0.092604, -0.743746, 0, 1.0};
Point(113) = {-0.097700, -0.743239, 0, 1.0};
Point(114) = {-0.102051, -0.742841, 0, 1.0};
Point(115) = {-0.105627, -0.742562, 0, 1.0};
Point(116) = {-0.108438, -0.742417, 0, 1.0};
Point(117) = {-0.110497, -0.742359, 0, 1.0};
Point(118) = {-0.111773, -0.742336, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:42};
Spline(3) = {42:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:79};
Spline(6) = {79:101};
Spline(7) = {101:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.148162, 0.744195, 0, 1.0};
Point(2) = {0.147810, 0.744317, 0, 1.0};
Point(3) = {0.146841, 0.744701, 0, 1.0};
Point(4) = {0.145392, 0.745265, 0, 1.0};
Point(5) = {0.143504, 0.745863, 0, 1.0};
Point(6) = {0.141093, 0.746402, 0, 1.0};
Point(7) = {0.138114, 0.746914, 0, 1.0};
Point(8) = {0.137080, 0.747068, 0, 1.0};
Point(9) = {0.122185, 0.748843, 0, 1.0};
Point(10) = {0.114710, 0.749506, 0, 1.0};
Point(11) = {0.111694, 0.749723, 0, 1.0};
Point(12) = {0.108678, 0.749884, 0, 1.0};
Point(13) = {0.105658, 0.749978, 0, 1.0};
Point(14) = {0.102636, 0.750000, 0, 1.0};
Point(15) = {0.092076, 0.749896, 0, 1.0};
Point(16) = {0.077083, 0.749739, 0, 1.0};
Point(17) = {0.075283, 0.749727, 0, 1.0};
Point(18) = {0.067777, 0.749642, 0, 1.0};
Point(19) = {0.060169, 0.749507, 0, 1.0};
Point(20) = {0.052501, 0.749323, 0, 1.0};
Point(21) = {0.044835, 0.749096, 0, 1.0};
Point(22) = {0.037229, 0.748828, 0, 1.0};
Point(23) = {0.029750, 0.748516, 0, 1.0};
Point(24) = {0.022465, 0.748140, 0, 1.0};
Point(25) = {0.015430, 0.747679, 0, 1.0};
Point(26) = {0.008686, 0.747103, 0, 1.0};
Point(27) = {0.002267, 0.746387, 0, 1.0};
Point(28) = {-0.003795, 0.745528, 0, 1.0};
Point(29) = {-0.009462, 0.744465, 0, 1.0};
Point(30) = {-0.014759, 0.743174, 0, 1.0};
Point(31) = {-0.019716, 0.741680, 0, 1.0};
Point(32) = {-0.024340, 0.740001, 0, 1.0};
Point(33) = {-0.028631, 0.738181, 0, 1.0};
Point(34) = {-0.032570, 0.736259, 0, 1.0};
Point(35) = {-0.036139, 0.734267, 0, 1.0};
Point(36) = {-0.039323, 0.732225, 0, 1.0};
Point(37) = {-0.042109, 0.730163, 0, 1.0};
Point(38) = {-0.044491, 0.728112, 0, 1.0};
Point(39) = {-0.046455, 0.726102, 0, 1.0};
Point(40) = {-0.047991, 0.724170, 0, 1.0};
Point(41) = {-0.049072, 0.722332, 0, 1.0};
Point(42) = {-0.049718, 0.720596, 0, 1.0};
Point(43) = {-0.049973, 0.719012, 0, 1.0};
Point(44) = {-0.049850, 0.717674, 0, 1.0};
Point(45) = {-0.049257, 0.716771, 0, 1.0};
Point(46) = {-0.048000, 0.716248, 0, 1.0};
Point(47) = {-0.046035, 0.715897, 0, 1.0};
Point(48) = {-0.043469, 0.715707, 0, 1.0};
Point(49) = {-0.040336, 0.715680, 0, 1.0};
Point(50) = {-0.036675, 0.715813, 0, 1.0};
Point(51) = {-0.032515, 0.716112, 0, 1.0};
Point(52) = {-0.027901, 0.716583, 0, 1.0};
Point(53) = {-0.022867, 0.717232, 0, 1.0};
Point(54) = {-0.017456, 0.718072, 0, 1.0};
Point(55) = {-0.011727, 0.719139, 0, 1.0};
Point(56) = {-0.005663, 0.720536, 0, 1.0};
Point(57) = {0.000829, 0.722256, 0, 1.0};
Point(58) = {0.007771, 0.724197, 0, 1.0};
Point(59) = {0.015129, 0.726292, 0, 1.0};
Point(60) = {0.022859, 0.728488, 0, 1.0};
Point(61) = {0.030915, 0.730729, 0, 1.0};
Point(62) = {0.039235, 0.732976, 0, 1.0};
Point(63) = {0.047763, 0.735172, 0, 1.0};
Point(64) = {0.056424, 0.737277, 0, 1.0};
Point(65) = {0.065145, 0.739248, 0, 1.0};
Point(66) = {0.073853, 0.741057, 0, 1.0};
Point(67) = {0.078242, 0.741899, 0, 1.0};
Point(68) = {0.093020, 0.744582, 0, 1.0};
Point(69) = {0.101908, 0.746019, 0, 1.0};
Point(70) = {0.104885, 0.746424, 0, 1.0};
Point(71) = {0.107871, 0.746744, 0, 1.0};
Point(72) = {0.110866, 0.746980, 0, 1.0};
Point(73) = {0.113867, 0.747125, 0, 1.0};
Point(74) = {0.122772, 0.747235, 0, 1.0};
Point(75) = {0.137801, 0.746377, 0, 1.0};
Point(76) = {0.141618, 0.745843, 0, 1.0};
Point(77) = {0.144630, 0.745203, 0, 1.0};
Point(78) = {0.146656, 0.744646, 0, 1.0};
Point(79) = {0.147796, 0.744305, 0, 1.0};
Point(80) = {0.148158, 0.744194, 0, 1.0};
Point(81) = {-0.148162, -0.744195, 0, 1.0};
Point(82) = {-0.147810, -0.744317, 0, 1.0};
Point(83) = {-0.146841, -0.744701, 0, 1.0};
Point(84) = {-0.145392, -0.745265, 0, 1.0};
Point(85) = {-0.143504, -0.745863, 0, 1.0};
Point(86) = {-0.141093, -0.746402, 0, 1.0};
Point(87) = {-0.138114, -0.746914, 0, 1.0};
Point(88) = {-0.137080, -0.747068, 0, 1.0};
Point(89) = {-0.122185, -0.748843, 0, 1.0};
Point(90) = {-0.114710, -0.749506, 0, 1.0};
Point(91) = {-0.111694, -0.749723, 0, 1.0};
Point(92) = {-0.108678, -0.749884, 0, 1.0};
Point(93) = {-0.105658, -0.749978, 0, 1.0};
Point(94) = {-0.102636, -0.750000, 0, 1.0};
Point(95) = {-0.092076, -0.749896, 0, 1.0};
Point(96) = {-0.077083, -0.749739, 0, 1.0};
Point(97) = {-0.075283, -0.749727, 0, 1.0};
Point(98) = {-0.067777, -0.749642, 0, 1.0};
Point(99) = {-0.060169, -0.749507, 0, 1.0};
Point(100) = {-0.052501, -0.749323, 0, 1.0};
Point(101) = {-0.044835, -0.749096, 0, 1.0};
Point(102) = {-0.037229, -0.748828, 0, 1.0};
Point(103) = {-0.029750, -0.748516, 0, 1.0};
Point(104) = {-0.022465, -0.748140, 0, 1.0};
Point(105) = {-0.015430, -0.747679, 0, 1.0};
Point(106) = {-0.008686, -0.747103, 0, 1.0};
Point(107) = {-0.002267, -0.746387, 0, 1.0};
Point(108) = {0.003795, -0.745528, 0, 1.0};
Point(109) = {0.009462, -0.744465, 0, 1.0};
Point(110) = {0.014759, -0.743174, 0, 1.0};
Point(111) = {0.019716, -0.741680, 0, 1.0};
Point(112) = {0.024340, -0.740001, 0, 1.0};
Point(113) = {0.028631, -0.738181, 0, 1.0};
Point(114) = {0.032570, -0.736259, 0, 1.0};
Point(115) = {0.036139, -0.734267, 0, 1.0};
Point(116) = {0.039323, -0.732225, 0, 1.0};
Point(117) = {0.042109, -0.730163, 0, 1.0};
Point(118) = {0.044491, -0.728112, 0, 1.0};
Point(119) = {0.046455, -0.726102, 0, 1.0};
Point(120) = {0.047991, -0.724170, 0, 1.0};
Point(121) = {0.049072, -0.722332, 0, 1.0};
Point(122) = {0.049718, -0.720596, 0, 1.0};
Point(123) = {0.049973, -0.719012, 0, 1.0};
Point(124) = {0.049850, -0.717674, 0, 1.0};
Point(125) = {0.049257, -0.716771, 0, 1.0};
Point(126) = {0.048000, -0.716248, 0, 1.0};
Point(127) = {0.046035, -0.715897, 0, 1.0};
Point(128) = {0.043469, -0.715707, 0, 1.0};
Point(129) = {0.040336, -0.715680, 0, 1.0};
Point(130) = {0.036675, -0.715813, 0, 1.0};
Point(131) = {0.032515, -0.716112, 0, 1.0};
Point(132) = {0.027901, -0.716583, 0, 1.0};
Point(133) = {0.022867, -0.717232, 0, 1.0};
Point(134) = {0.017456, -0.718072, 0, 1.0};
Point(135) = {0.011727, -0.719139, 0, 1.0};
Point(136) = {0.005663, -0.720536, 0, 1.0};
Point(137) = {-0.000829, -0.722256, 0, 1.0};
Point(138) = {-0.007771, -0.724197, 0, 1.0};
Point(139) = {-0.015129, -0.726292, 0, 1.0};
Point(140) = {-0.022859, -0.728488, 0, 1.0};
Point(141) = {-0.030915, -0.730729, 0, 1.0};
Point(142) = {-0.039235, -0.732976, 0, 1.0};
Point(143) = {-0.047763, -0.735172, 0, 1.0};
Point(144) = {-0.056424, -0.737277, 0, 1.0};
Point(145) = {-0.065145, -0.739248, 0, 1.0};
Point(146) = {-0.073853, -0.741057, 0, 1.0};
Point(147) = {-0.078242, -0.741899, 0, 1.0};
Point(148) = {-0.093020, -0.744582, 0, 1.0};
Point(149) = {-0.101908, -0.746019, 0, 1.0};
Point(150) = {-0.104885, -0.746424, 0, 1.0};
Point(151) = {-0.107871, -0.746744, 0, 1.0};
Point(152) = {-0.110866, -0.746980, 0, 1.0};
Point(153) = {-0.113867, -0.747125, 0, 1.0};
Point(154) = {-0.122772, -0.747235, 0, 1.0};
Point(155) = {-0.137801, -0.746377, 0, 1.0};
Point(156) = {-0.141618, -0.745843, 0, 1.0};
Point(157) = {-0.144630, -0.745203, 0, 1.0};
Point(158) = {-0.146656, -0.744646, 0, 1.0};
Point(159) = {-0.147796, -0.744305, 0, 1.0};
Point(160) = {-0.148158, -0.744194, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:57};
Spline(3) = {57:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:137};
Spline(7) = {137:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
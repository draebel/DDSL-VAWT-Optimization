SetFactory("OpenCASCADE");

Point(1) = {0.111121, 0.745646, 0, 1.0};
Point(2) = {0.110858, 0.745738, 0, 1.0};
Point(3) = {0.110130, 0.746026, 0, 1.0};
Point(4) = {0.109044, 0.746449, 0, 1.0};
Point(5) = {0.107628, 0.746897, 0, 1.0};
Point(6) = {0.105819, 0.747302, 0, 1.0};
Point(7) = {0.103585, 0.747686, 0, 1.0};
Point(8) = {0.102810, 0.747801, 0, 1.0};
Point(9) = {0.091639, 0.749132, 0, 1.0};
Point(10) = {0.086032, 0.749630, 0, 1.0};
Point(11) = {0.083770, 0.749792, 0, 1.0};
Point(12) = {0.081508, 0.749913, 0, 1.0};
Point(13) = {0.079244, 0.749984, 0, 1.0};
Point(14) = {0.076977, 0.750000, 0, 1.0};
Point(15) = {0.069057, 0.749922, 0, 1.0};
Point(16) = {0.057812, 0.749804, 0, 1.0};
Point(17) = {0.056462, 0.749795, 0, 1.0};
Point(18) = {0.050833, 0.749731, 0, 1.0};
Point(19) = {0.045127, 0.749630, 0, 1.0};
Point(20) = {0.039376, 0.749492, 0, 1.0};
Point(21) = {0.033626, 0.749322, 0, 1.0};
Point(22) = {0.027922, 0.749121, 0, 1.0};
Point(23) = {0.022312, 0.748887, 0, 1.0};
Point(24) = {0.016849, 0.748605, 0, 1.0};
Point(25) = {0.011572, 0.748259, 0, 1.0};
Point(26) = {0.006515, 0.747827, 0, 1.0};
Point(27) = {0.001700, 0.747290, 0, 1.0};
Point(28) = {-0.002846, 0.746646, 0, 1.0};
Point(29) = {-0.007096, 0.745849, 0, 1.0};
Point(30) = {-0.011069, 0.744880, 0, 1.0};
Point(31) = {-0.014787, 0.743760, 0, 1.0};
Point(32) = {-0.018255, 0.742501, 0, 1.0};
Point(33) = {-0.021474, 0.741136, 0, 1.0};
Point(34) = {-0.024428, 0.739694, 0, 1.0};
Point(35) = {-0.027104, 0.738201, 0, 1.0};
Point(36) = {-0.029492, 0.736669, 0, 1.0};
Point(37) = {-0.031582, 0.735122, 0, 1.0};
Point(38) = {-0.033368, 0.733584, 0, 1.0};
Point(39) = {-0.034841, 0.732076, 0, 1.0};
Point(40) = {-0.035993, 0.730627, 0, 1.0};
Point(41) = {-0.036804, 0.729249, 0, 1.0};
Point(42) = {-0.037289, 0.727947, 0, 1.0};
Point(43) = {-0.037480, 0.726759, 0, 1.0};
Point(44) = {-0.037388, 0.725756, 0, 1.0};
Point(45) = {-0.036942, 0.725079, 0, 1.0};
Point(46) = {-0.036000, 0.724686, 0, 1.0};
Point(47) = {-0.034526, 0.724423, 0, 1.0};
Point(48) = {-0.032602, 0.724280, 0, 1.0};
Point(49) = {-0.030252, 0.724260, 0, 1.0};
Point(50) = {-0.027506, 0.724360, 0, 1.0};
Point(51) = {-0.024387, 0.724584, 0, 1.0};
Point(52) = {-0.020926, 0.724938, 0, 1.0};
Point(53) = {-0.017150, 0.725424, 0, 1.0};
Point(54) = {-0.013092, 0.726054, 0, 1.0};
Point(55) = {-0.008796, 0.726855, 0, 1.0};
Point(56) = {-0.004248, 0.727902, 0, 1.0};
Point(57) = {0.000622, 0.729192, 0, 1.0};
Point(58) = {0.005828, 0.730648, 0, 1.0};
Point(59) = {0.011347, 0.732219, 0, 1.0};
Point(60) = {0.017145, 0.733866, 0, 1.0};
Point(61) = {0.023186, 0.735547, 0, 1.0};
Point(62) = {0.029426, 0.737232, 0, 1.0};
Point(63) = {0.035822, 0.738879, 0, 1.0};
Point(64) = {0.042318, 0.740457, 0, 1.0};
Point(65) = {0.048858, 0.741936, 0, 1.0};
Point(66) = {0.055390, 0.743293, 0, 1.0};
Point(67) = {0.058682, 0.743924, 0, 1.0};
Point(68) = {0.069765, 0.745937, 0, 1.0};
Point(69) = {0.076431, 0.747015, 0, 1.0};
Point(70) = {0.078664, 0.747318, 0, 1.0};
Point(71) = {0.080903, 0.747558, 0, 1.0};
Point(72) = {0.083150, 0.747735, 0, 1.0};
Point(73) = {0.085401, 0.747844, 0, 1.0};
Point(74) = {0.092079, 0.747926, 0, 1.0};
Point(75) = {0.103350, 0.747283, 0, 1.0};
Point(76) = {0.106213, 0.746883, 0, 1.0};
Point(77) = {0.108472, 0.746402, 0, 1.0};
Point(78) = {0.109992, 0.745985, 0, 1.0};
Point(79) = {0.110847, 0.745729, 0, 1.0};
Point(80) = {0.111118, 0.745646, 0, 1.0};
Point(81) = {-0.111121, -0.745646, 0, 1.0};
Point(82) = {-0.110858, -0.745738, 0, 1.0};
Point(83) = {-0.110130, -0.746026, 0, 1.0};
Point(84) = {-0.109044, -0.746449, 0, 1.0};
Point(85) = {-0.107628, -0.746897, 0, 1.0};
Point(86) = {-0.105819, -0.747302, 0, 1.0};
Point(87) = {-0.103585, -0.747686, 0, 1.0};
Point(88) = {-0.102810, -0.747801, 0, 1.0};
Point(89) = {-0.091639, -0.749132, 0, 1.0};
Point(90) = {-0.086032, -0.749630, 0, 1.0};
Point(91) = {-0.083770, -0.749792, 0, 1.0};
Point(92) = {-0.081508, -0.749913, 0, 1.0};
Point(93) = {-0.079244, -0.749984, 0, 1.0};
Point(94) = {-0.076977, -0.750000, 0, 1.0};
Point(95) = {-0.069057, -0.749922, 0, 1.0};
Point(96) = {-0.057812, -0.749804, 0, 1.0};
Point(97) = {-0.056462, -0.749795, 0, 1.0};
Point(98) = {-0.050833, -0.749731, 0, 1.0};
Point(99) = {-0.045127, -0.749630, 0, 1.0};
Point(100) = {-0.039376, -0.749492, 0, 1.0};
Point(101) = {-0.033626, -0.749322, 0, 1.0};
Point(102) = {-0.027922, -0.749121, 0, 1.0};
Point(103) = {-0.022312, -0.748887, 0, 1.0};
Point(104) = {-0.016849, -0.748605, 0, 1.0};
Point(105) = {-0.011572, -0.748259, 0, 1.0};
Point(106) = {-0.006515, -0.747827, 0, 1.0};
Point(107) = {-0.001700, -0.747290, 0, 1.0};
Point(108) = {0.002846, -0.746646, 0, 1.0};
Point(109) = {0.007096, -0.745849, 0, 1.0};
Point(110) = {0.011069, -0.744880, 0, 1.0};
Point(111) = {0.014787, -0.743760, 0, 1.0};
Point(112) = {0.018255, -0.742501, 0, 1.0};
Point(113) = {0.021474, -0.741136, 0, 1.0};
Point(114) = {0.024428, -0.739694, 0, 1.0};
Point(115) = {0.027104, -0.738201, 0, 1.0};
Point(116) = {0.029492, -0.736669, 0, 1.0};
Point(117) = {0.031582, -0.735122, 0, 1.0};
Point(118) = {0.033368, -0.733584, 0, 1.0};
Point(119) = {0.034841, -0.732076, 0, 1.0};
Point(120) = {0.035993, -0.730627, 0, 1.0};
Point(121) = {0.036804, -0.729249, 0, 1.0};
Point(122) = {0.037289, -0.727947, 0, 1.0};
Point(123) = {0.037480, -0.726759, 0, 1.0};
Point(124) = {0.037388, -0.725756, 0, 1.0};
Point(125) = {0.036942, -0.725079, 0, 1.0};
Point(126) = {0.036000, -0.724686, 0, 1.0};
Point(127) = {0.034526, -0.724423, 0, 1.0};
Point(128) = {0.032602, -0.724280, 0, 1.0};
Point(129) = {0.030252, -0.724260, 0, 1.0};
Point(130) = {0.027506, -0.724360, 0, 1.0};
Point(131) = {0.024387, -0.724584, 0, 1.0};
Point(132) = {0.020926, -0.724938, 0, 1.0};
Point(133) = {0.017150, -0.725424, 0, 1.0};
Point(134) = {0.013092, -0.726054, 0, 1.0};
Point(135) = {0.008796, -0.726855, 0, 1.0};
Point(136) = {0.004248, -0.727902, 0, 1.0};
Point(137) = {-0.000622, -0.729192, 0, 1.0};
Point(138) = {-0.005828, -0.730648, 0, 1.0};
Point(139) = {-0.011347, -0.732219, 0, 1.0};
Point(140) = {-0.017145, -0.733866, 0, 1.0};
Point(141) = {-0.023186, -0.735547, 0, 1.0};
Point(142) = {-0.029426, -0.737232, 0, 1.0};
Point(143) = {-0.035822, -0.738879, 0, 1.0};
Point(144) = {-0.042318, -0.740457, 0, 1.0};
Point(145) = {-0.048858, -0.741936, 0, 1.0};
Point(146) = {-0.055390, -0.743293, 0, 1.0};
Point(147) = {-0.058682, -0.743924, 0, 1.0};
Point(148) = {-0.069765, -0.745937, 0, 1.0};
Point(149) = {-0.076431, -0.747015, 0, 1.0};
Point(150) = {-0.078664, -0.747318, 0, 1.0};
Point(151) = {-0.080903, -0.747558, 0, 1.0};
Point(152) = {-0.083150, -0.747735, 0, 1.0};
Point(153) = {-0.085401, -0.747844, 0, 1.0};
Point(154) = {-0.092079, -0.747926, 0, 1.0};
Point(155) = {-0.103350, -0.747283, 0, 1.0};
Point(156) = {-0.106213, -0.746883, 0, 1.0};
Point(157) = {-0.108472, -0.746402, 0, 1.0};
Point(158) = {-0.109992, -0.745985, 0, 1.0};
Point(159) = {-0.110847, -0.745729, 0, 1.0};
Point(160) = {-0.111118, -0.745646, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:57};
Spline(3) = {57:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:137};
Spline(7) = {137:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074991, 0.736906, 0, 1.0};
Point(2) = {0.073517, 0.737082, 0, 1.0};
Point(3) = {0.069645, 0.737572, 0, 1.0};
Point(4) = {0.065773, 0.738096, 0, 1.0};
Point(5) = {0.061907, 0.738650, 0, 1.0};
Point(6) = {0.058054, 0.739231, 0, 1.0};
Point(7) = {0.054214, 0.739840, 0, 1.0};
Point(8) = {0.050384, 0.740478, 0, 1.0};
Point(9) = {0.046568, 0.741146, 0, 1.0};
Point(10) = {0.042725, 0.741847, 0, 1.0};
Point(11) = {0.038866, 0.742574, 0, 1.0};
Point(12) = {0.035020, 0.743306, 0, 1.0};
Point(13) = {0.031159, 0.744035, 0, 1.0};
Point(14) = {0.027282, 0.744748, 0, 1.0};
Point(15) = {0.023406, 0.745432, 0, 1.0};
Point(16) = {0.019525, 0.746081, 0, 1.0};
Point(17) = {0.015646, 0.746693, 0, 1.0};
Point(18) = {0.011768, 0.747266, 0, 1.0};
Point(19) = {0.007885, 0.747797, 0, 1.0};
Point(20) = {0.003996, 0.748283, 0, 1.0};
Point(21) = {0.000116, 0.748711, 0, 1.0};
Point(22) = {-0.003819, 0.749080, 0, 1.0};
Point(23) = {-0.007769, 0.749379, 0, 1.0};
Point(24) = {-0.011690, 0.749610, 0, 1.0};
Point(25) = {-0.015624, 0.749779, 0, 1.0};
Point(26) = {-0.019534, 0.749895, 0, 1.0};
Point(27) = {-0.027359, 0.750000, 0, 1.0};
Point(28) = {-0.035218, 0.749960, 0, 1.0};
Point(29) = {-0.039164, 0.749885, 0, 1.0};
Point(30) = {-0.043111, 0.749765, 0, 1.0};
Point(31) = {-0.047078, 0.749590, 0, 1.0};
Point(32) = {-0.051052, 0.749336, 0, 1.0};
Point(33) = {-0.055072, 0.748962, 0, 1.0};
Point(34) = {-0.059130, 0.748406, 0, 1.0};
Point(35) = {-0.063264, 0.747561, 0, 1.0};
Point(36) = {-0.067414, 0.746279, 0, 1.0};
Point(37) = {-0.071173, 0.744482, 0, 1.0};
Point(38) = {-0.073443, 0.742789, 0, 1.0};
Point(39) = {-0.074489, 0.741556, 0, 1.0};
Point(40) = {-0.074974, 0.740216, 0, 1.0};
Point(41) = {-0.074468, 0.739016, 0, 1.0};
Point(42) = {-0.073169, 0.738229, 0, 1.0};
Point(43) = {-0.072833, 0.738100, 0, 1.0};
Point(44) = {-0.071514, 0.737704, 0, 1.0};
Point(45) = {-0.069841, 0.737353, 0, 1.0};
Point(46) = {-0.065764, 0.736844, 0, 1.0};
Point(47) = {-0.062086, 0.736598, 0, 1.0};
Point(48) = {-0.058405, 0.736438, 0, 1.0};
Point(49) = {-0.054656, 0.736298, 0, 1.0};
Point(50) = {-0.050876, 0.736140, 0, 1.0};
Point(51) = {-0.047056, 0.735949, 0, 1.0};
Point(52) = {-0.043232, 0.735731, 0, 1.0};
Point(53) = {-0.039390, 0.735502, 0, 1.0};
Point(54) = {-0.035549, 0.735272, 0, 1.0};
Point(55) = {-0.027838, 0.734823, 0, 1.0};
Point(56) = {-0.020096, 0.734409, 0, 1.0};
Point(57) = {-0.016224, 0.734223, 0, 1.0};
Point(58) = {-0.012376, 0.734057, 0, 1.0};
Point(59) = {-0.008518, 0.733915, 0, 1.0};
Point(60) = {-0.004689, 0.733803, 0, 1.0};
Point(61) = {-0.000848, 0.733719, 0, 1.0};
Point(62) = {0.003048, 0.733670, 0, 1.0};
Point(63) = {0.006934, 0.733650, 0, 1.0};
Point(64) = {0.010826, 0.733655, 0, 1.0};
Point(65) = {0.014721, 0.733680, 0, 1.0};
Point(66) = {0.018615, 0.733719, 0, 1.0};
Point(67) = {0.022506, 0.733767, 0, 1.0};
Point(68) = {0.026401, 0.733821, 0, 1.0};
Point(69) = {0.030294, 0.733876, 0, 1.0};
Point(70) = {0.034201, 0.733932, 0, 1.0};
Point(71) = {0.038126, 0.733988, 0, 1.0};
Point(72) = {0.042035, 0.734048, 0, 1.0};
Point(73) = {0.045963, 0.734117, 0, 1.0};
Point(74) = {0.049920, 0.734203, 0, 1.0};
Point(75) = {0.053864, 0.734311, 0, 1.0};
Point(76) = {0.057800, 0.734451, 0, 1.0};
Point(77) = {0.061726, 0.734627, 0, 1.0};
Point(78) = {0.065641, 0.734842, 0, 1.0};
Point(79) = {0.069551, 0.735067, 0, 1.0};
Point(80) = {0.073463, 0.735297, 0, 1.0};
Point(81) = {0.074951, 0.735388, 0, 1.0};
Point(82) = {-0.074991, -0.736906, 0, 1.0};
Point(83) = {-0.073517, -0.737082, 0, 1.0};
Point(84) = {-0.069645, -0.737572, 0, 1.0};
Point(85) = {-0.065773, -0.738096, 0, 1.0};
Point(86) = {-0.061907, -0.738650, 0, 1.0};
Point(87) = {-0.058054, -0.739231, 0, 1.0};
Point(88) = {-0.054214, -0.739840, 0, 1.0};
Point(89) = {-0.050384, -0.740478, 0, 1.0};
Point(90) = {-0.046568, -0.741146, 0, 1.0};
Point(91) = {-0.042725, -0.741847, 0, 1.0};
Point(92) = {-0.038866, -0.742574, 0, 1.0};
Point(93) = {-0.035020, -0.743306, 0, 1.0};
Point(94) = {-0.031159, -0.744035, 0, 1.0};
Point(95) = {-0.027282, -0.744748, 0, 1.0};
Point(96) = {-0.023406, -0.745432, 0, 1.0};
Point(97) = {-0.019525, -0.746081, 0, 1.0};
Point(98) = {-0.015646, -0.746693, 0, 1.0};
Point(99) = {-0.011768, -0.747266, 0, 1.0};
Point(100) = {-0.007885, -0.747797, 0, 1.0};
Point(101) = {-0.003996, -0.748283, 0, 1.0};
Point(102) = {-0.000116, -0.748711, 0, 1.0};
Point(103) = {0.003819, -0.749080, 0, 1.0};
Point(104) = {0.007769, -0.749379, 0, 1.0};
Point(105) = {0.011690, -0.749610, 0, 1.0};
Point(106) = {0.015624, -0.749779, 0, 1.0};
Point(107) = {0.019534, -0.749895, 0, 1.0};
Point(108) = {0.027359, -0.750000, 0, 1.0};
Point(109) = {0.035218, -0.749960, 0, 1.0};
Point(110) = {0.039164, -0.749885, 0, 1.0};
Point(111) = {0.043111, -0.749765, 0, 1.0};
Point(112) = {0.047078, -0.749590, 0, 1.0};
Point(113) = {0.051052, -0.749336, 0, 1.0};
Point(114) = {0.055072, -0.748962, 0, 1.0};
Point(115) = {0.059130, -0.748406, 0, 1.0};
Point(116) = {0.063264, -0.747561, 0, 1.0};
Point(117) = {0.067414, -0.746279, 0, 1.0};
Point(118) = {0.071173, -0.744482, 0, 1.0};
Point(119) = {0.073443, -0.742789, 0, 1.0};
Point(120) = {0.074489, -0.741556, 0, 1.0};
Point(121) = {0.074974, -0.740216, 0, 1.0};
Point(122) = {0.074468, -0.739016, 0, 1.0};
Point(123) = {0.073169, -0.738229, 0, 1.0};
Point(124) = {0.072833, -0.738100, 0, 1.0};
Point(125) = {0.071514, -0.737704, 0, 1.0};
Point(126) = {0.069841, -0.737353, 0, 1.0};
Point(127) = {0.065764, -0.736844, 0, 1.0};
Point(128) = {0.062086, -0.736598, 0, 1.0};
Point(129) = {0.058405, -0.736438, 0, 1.0};
Point(130) = {0.054656, -0.736298, 0, 1.0};
Point(131) = {0.050876, -0.736140, 0, 1.0};
Point(132) = {0.047056, -0.735949, 0, 1.0};
Point(133) = {0.043232, -0.735731, 0, 1.0};
Point(134) = {0.039390, -0.735502, 0, 1.0};
Point(135) = {0.035549, -0.735272, 0, 1.0};
Point(136) = {0.027838, -0.734823, 0, 1.0};
Point(137) = {0.020096, -0.734409, 0, 1.0};
Point(138) = {0.016224, -0.734223, 0, 1.0};
Point(139) = {0.012376, -0.734057, 0, 1.0};
Point(140) = {0.008518, -0.733915, 0, 1.0};
Point(141) = {0.004689, -0.733803, 0, 1.0};
Point(142) = {0.000848, -0.733719, 0, 1.0};
Point(143) = {-0.003048, -0.733670, 0, 1.0};
Point(144) = {-0.006934, -0.733650, 0, 1.0};
Point(145) = {-0.010826, -0.733655, 0, 1.0};
Point(146) = {-0.014721, -0.733680, 0, 1.0};
Point(147) = {-0.018615, -0.733719, 0, 1.0};
Point(148) = {-0.022506, -0.733767, 0, 1.0};
Point(149) = {-0.026401, -0.733821, 0, 1.0};
Point(150) = {-0.030294, -0.733876, 0, 1.0};
Point(151) = {-0.034201, -0.733932, 0, 1.0};
Point(152) = {-0.038126, -0.733988, 0, 1.0};
Point(153) = {-0.042035, -0.734048, 0, 1.0};
Point(154) = {-0.045963, -0.734117, 0, 1.0};
Point(155) = {-0.049920, -0.734203, 0, 1.0};
Point(156) = {-0.053864, -0.734311, 0, 1.0};
Point(157) = {-0.057800, -0.734451, 0, 1.0};
Point(158) = {-0.061726, -0.734627, 0, 1.0};
Point(159) = {-0.065641, -0.734842, 0, 1.0};
Point(160) = {-0.069551, -0.735067, 0, 1.0};
Point(161) = {-0.073463, -0.735297, 0, 1.0};
Point(162) = {-0.074951, -0.735388, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:54};
Spline(3) = {54:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:109};
Spline(6) = {109:135};
Spline(7) = {135:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {36.00000000, 15.00000000, 0, 1.0};
Point(166) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
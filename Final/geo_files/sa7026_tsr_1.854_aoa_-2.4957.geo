SetFactory("OpenCASCADE");

Point(1) = {0.149810, 0.738639, 0, 1.0};
Point(2) = {0.149432, 0.738673, 0, 1.0};
Point(3) = {0.148316, 0.738798, 0, 1.0};
Point(4) = {0.146500, 0.739036, 0, 1.0};
Point(5) = {0.144028, 0.739398, 0, 1.0};
Point(6) = {0.140944, 0.739882, 0, 1.0};
Point(7) = {0.137296, 0.740484, 0, 1.0};
Point(8) = {0.133127, 0.741193, 0, 1.0};
Point(9) = {0.128490, 0.742000, 0, 1.0};
Point(10) = {0.123447, 0.742873, 0, 1.0};
Point(11) = {0.118029, 0.743772, 0, 1.0};
Point(12) = {0.112260, 0.744678, 0, 1.0};
Point(13) = {0.106193, 0.745573, 0, 1.0};
Point(14) = {0.099858, 0.746418, 0, 1.0};
Point(15) = {0.093270, 0.747199, 0, 1.0};
Point(16) = {0.086480, 0.747916, 0, 1.0};
Point(17) = {0.079521, 0.748538, 0, 1.0};
Point(18) = {0.072417, 0.749053, 0, 1.0};
Point(19) = {0.065210, 0.749472, 0, 1.0};
Point(20) = {0.057940, 0.749769, 0, 1.0};
Point(21) = {0.050640, 0.749942, 0, 1.0};
Point(22) = {0.043343, 0.750000, 0, 1.0};
Point(23) = {0.036097, 0.749934, 0, 1.0};
Point(24) = {0.028934, 0.749742, 0, 1.0};
Point(25) = {0.021899, 0.749432, 0, 1.0};
Point(26) = {0.015029, 0.748996, 0, 1.0};
Point(27) = {0.008362, 0.748433, 0, 1.0};
Point(28) = {0.001921, 0.747756, 0, 1.0};
Point(29) = {-0.004244, 0.746963, 0, 1.0};
Point(30) = {-0.010112, 0.746055, 0, 1.0};
Point(31) = {-0.015662, 0.745044, 0, 1.0};
Point(32) = {-0.020854, 0.743941, 0, 1.0};
Point(33) = {-0.025671, 0.742746, 0, 1.0};
Point(34) = {-0.030100, 0.741474, 0, 1.0};
Point(35) = {-0.034114, 0.740148, 0, 1.0};
Point(36) = {-0.037695, 0.738775, 0, 1.0};
Point(37) = {-0.040841, 0.737370, 0, 1.0};
Point(38) = {-0.043539, 0.735967, 0, 1.0};
Point(39) = {-0.045771, 0.734585, 0, 1.0};
Point(40) = {-0.047532, 0.733247, 0, 1.0};
Point(41) = {-0.048824, 0.731984, 0, 1.0};
Point(42) = {-0.049645, 0.730839, 0, 1.0};
Point(43) = {-0.050000, 0.729930, 0, 1.0};
Point(44) = {-0.049715, 0.729226, 0, 1.0};
Point(45) = {-0.048697, 0.728740, 0, 1.0};
Point(46) = {-0.047042, 0.728306, 0, 1.0};
Point(47) = {-0.044798, 0.727971, 0, 1.0};
Point(48) = {-0.041968, 0.727756, 0, 1.0};
Point(49) = {-0.038548, 0.727655, 0, 1.0};
Point(50) = {-0.034565, 0.727660, 0, 1.0};
Point(51) = {-0.030033, 0.727776, 0, 1.0};
Point(52) = {-0.024980, 0.727992, 0, 1.0};
Point(53) = {-0.019430, 0.728300, 0, 1.0};
Point(54) = {-0.013415, 0.728692, 0, 1.0};
Point(55) = {-0.006970, 0.729159, 0, 1.0};
Point(56) = {-0.000132, 0.729692, 0, 1.0};
Point(57) = {0.007055, 0.730279, 0, 1.0};
Point(58) = {0.014551, 0.730910, 0, 1.0};
Point(59) = {0.022307, 0.731571, 0, 1.0};
Point(60) = {0.030273, 0.732250, 0, 1.0};
Point(61) = {0.038397, 0.732934, 0, 1.0};
Point(62) = {0.046623, 0.733613, 0, 1.0};
Point(63) = {0.054898, 0.734276, 0, 1.0};
Point(64) = {0.063160, 0.734911, 0, 1.0};
Point(65) = {0.071352, 0.735508, 0, 1.0};
Point(66) = {0.079414, 0.736059, 0, 1.0};
Point(67) = {0.087285, 0.736563, 0, 1.0};
Point(68) = {0.094911, 0.737011, 0, 1.0};
Point(69) = {0.102233, 0.737402, 0, 1.0};
Point(70) = {0.109199, 0.737738, 0, 1.0};
Point(71) = {0.115755, 0.738014, 0, 1.0};
Point(72) = {0.121851, 0.738235, 0, 1.0};
Point(73) = {0.127445, 0.738403, 0, 1.0};
Point(74) = {0.132491, 0.738521, 0, 1.0};
Point(75) = {0.136950, 0.738597, 0, 1.0};
Point(76) = {0.140788, 0.738638, 0, 1.0};
Point(77) = {0.143974, 0.738653, 0, 1.0};
Point(78) = {0.146480, 0.738656, 0, 1.0};
Point(79) = {0.148304, 0.738660, 0, 1.0};
Point(80) = {0.149427, 0.738651, 0, 1.0};
Point(81) = {-0.149810, -0.738639, 0, 1.0};
Point(82) = {-0.149432, -0.738673, 0, 1.0};
Point(83) = {-0.148316, -0.738798, 0, 1.0};
Point(84) = {-0.146500, -0.739036, 0, 1.0};
Point(85) = {-0.144028, -0.739398, 0, 1.0};
Point(86) = {-0.140944, -0.739882, 0, 1.0};
Point(87) = {-0.137296, -0.740484, 0, 1.0};
Point(88) = {-0.133127, -0.741193, 0, 1.0};
Point(89) = {-0.128490, -0.742000, 0, 1.0};
Point(90) = {-0.123447, -0.742873, 0, 1.0};
Point(91) = {-0.118029, -0.743772, 0, 1.0};
Point(92) = {-0.112260, -0.744678, 0, 1.0};
Point(93) = {-0.106193, -0.745573, 0, 1.0};
Point(94) = {-0.099858, -0.746418, 0, 1.0};
Point(95) = {-0.093270, -0.747199, 0, 1.0};
Point(96) = {-0.086480, -0.747916, 0, 1.0};
Point(97) = {-0.079521, -0.748538, 0, 1.0};
Point(98) = {-0.072417, -0.749053, 0, 1.0};
Point(99) = {-0.065210, -0.749472, 0, 1.0};
Point(100) = {-0.057940, -0.749769, 0, 1.0};
Point(101) = {-0.050640, -0.749942, 0, 1.0};
Point(102) = {-0.043343, -0.750000, 0, 1.0};
Point(103) = {-0.036097, -0.749934, 0, 1.0};
Point(104) = {-0.028934, -0.749742, 0, 1.0};
Point(105) = {-0.021899, -0.749432, 0, 1.0};
Point(106) = {-0.015029, -0.748996, 0, 1.0};
Point(107) = {-0.008362, -0.748433, 0, 1.0};
Point(108) = {-0.001921, -0.747756, 0, 1.0};
Point(109) = {0.004244, -0.746963, 0, 1.0};
Point(110) = {0.010112, -0.746055, 0, 1.0};
Point(111) = {0.015662, -0.745044, 0, 1.0};
Point(112) = {0.020854, -0.743941, 0, 1.0};
Point(113) = {0.025671, -0.742746, 0, 1.0};
Point(114) = {0.030100, -0.741474, 0, 1.0};
Point(115) = {0.034114, -0.740148, 0, 1.0};
Point(116) = {0.037695, -0.738775, 0, 1.0};
Point(117) = {0.040841, -0.737370, 0, 1.0};
Point(118) = {0.043539, -0.735967, 0, 1.0};
Point(119) = {0.045771, -0.734585, 0, 1.0};
Point(120) = {0.047532, -0.733247, 0, 1.0};
Point(121) = {0.048824, -0.731984, 0, 1.0};
Point(122) = {0.049645, -0.730839, 0, 1.0};
Point(123) = {0.050000, -0.729930, 0, 1.0};
Point(124) = {0.049715, -0.729226, 0, 1.0};
Point(125) = {0.048697, -0.728740, 0, 1.0};
Point(126) = {0.047042, -0.728306, 0, 1.0};
Point(127) = {0.044798, -0.727971, 0, 1.0};
Point(128) = {0.041968, -0.727756, 0, 1.0};
Point(129) = {0.038548, -0.727655, 0, 1.0};
Point(130) = {0.034565, -0.727660, 0, 1.0};
Point(131) = {0.030033, -0.727776, 0, 1.0};
Point(132) = {0.024980, -0.727992, 0, 1.0};
Point(133) = {0.019430, -0.728300, 0, 1.0};
Point(134) = {0.013415, -0.728692, 0, 1.0};
Point(135) = {0.006970, -0.729159, 0, 1.0};
Point(136) = {0.000132, -0.729692, 0, 1.0};
Point(137) = {-0.007055, -0.730279, 0, 1.0};
Point(138) = {-0.014551, -0.730910, 0, 1.0};
Point(139) = {-0.022307, -0.731571, 0, 1.0};
Point(140) = {-0.030273, -0.732250, 0, 1.0};
Point(141) = {-0.038397, -0.732934, 0, 1.0};
Point(142) = {-0.046623, -0.733613, 0, 1.0};
Point(143) = {-0.054898, -0.734276, 0, 1.0};
Point(144) = {-0.063160, -0.734911, 0, 1.0};
Point(145) = {-0.071352, -0.735508, 0, 1.0};
Point(146) = {-0.079414, -0.736059, 0, 1.0};
Point(147) = {-0.087285, -0.736563, 0, 1.0};
Point(148) = {-0.094911, -0.737011, 0, 1.0};
Point(149) = {-0.102233, -0.737402, 0, 1.0};
Point(150) = {-0.109199, -0.737738, 0, 1.0};
Point(151) = {-0.115755, -0.738014, 0, 1.0};
Point(152) = {-0.121851, -0.738235, 0, 1.0};
Point(153) = {-0.127445, -0.738403, 0, 1.0};
Point(154) = {-0.132491, -0.738521, 0, 1.0};
Point(155) = {-0.136950, -0.738597, 0, 1.0};
Point(156) = {-0.140788, -0.738638, 0, 1.0};
Point(157) = {-0.143974, -0.738653, 0, 1.0};
Point(158) = {-0.146480, -0.738656, 0, 1.0};
Point(159) = {-0.148304, -0.738660, 0, 1.0};
Point(160) = {-0.149427, -0.738651, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:136};
Spline(7) = {136:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
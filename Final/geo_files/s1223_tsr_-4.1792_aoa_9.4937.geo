SetFactory("OpenCASCADE");

Point(1) = {0.075052, 0.717138, 0, 1.0};
Point(2) = {0.072422, 0.718504, 0, 1.0};
Point(3) = {0.069019, 0.720158, 0, 1.0};
Point(4) = {0.065258, 0.721877, 0, 1.0};
Point(5) = {0.061158, 0.723649, 0, 1.0};
Point(6) = {0.056744, 0.725462, 0, 1.0};
Point(7) = {0.052042, 0.727306, 0, 1.0};
Point(8) = {0.047080, 0.729168, 0, 1.0};
Point(9) = {0.041888, 0.731034, 0, 1.0};
Point(10) = {0.036498, 0.732893, 0, 1.0};
Point(11) = {0.030941, 0.734733, 0, 1.0};
Point(12) = {0.025251, 0.736546, 0, 1.0};
Point(13) = {0.019468, 0.738320, 0, 1.0};
Point(14) = {0.013630, 0.740047, 0, 1.0};
Point(15) = {0.007787, 0.741719, 0, 1.0};
Point(16) = {0.001986, 0.743314, 0, 1.0};
Point(17) = {-0.003722, 0.744809, 0, 1.0};
Point(18) = {-0.009303, 0.746170, 0, 1.0};
Point(19) = {-0.014727, 0.747367, 0, 1.0};
Point(20) = {-0.019974, 0.748375, 0, 1.0};
Point(21) = {-0.025010, 0.749182, 0, 1.0};
Point(22) = {-0.029821, 0.749725, 0, 1.0};
Point(23) = {-0.034434, 0.749988, 0, 1.0};
Point(24) = {-0.038869, 0.750000, 0, 1.0};
Point(25) = {-0.043122, 0.749776, 0, 1.0};
Point(26) = {-0.047182, 0.749350, 0, 1.0};
Point(27) = {-0.051024, 0.748746, 0, 1.0};
Point(28) = {-0.054623, 0.747985, 0, 1.0};
Point(29) = {-0.057964, 0.747077, 0, 1.0};
Point(30) = {-0.061028, 0.746043, 0, 1.0};
Point(31) = {-0.063798, 0.744901, 0, 1.0};
Point(32) = {-0.066256, 0.743671, 0, 1.0};
Point(33) = {-0.068384, 0.742377, 0, 1.0};
Point(34) = {-0.070157, 0.741019, 0, 1.0};
Point(35) = {-0.071591, 0.739600, 0, 1.0};
Point(36) = {-0.072708, 0.738166, 0, 1.0};
Point(37) = {-0.073504, 0.736758, 0, 1.0};
Point(38) = {-0.073973, 0.735428, 0, 1.0};
Point(39) = {-0.074108, 0.734234, 0, 1.0};
Point(40) = {-0.073906, 0.733280, 0, 1.0};
Point(41) = {-0.073147, 0.732648, 0, 1.0};
Point(42) = {-0.071692, 0.732202, 0, 1.0};
Point(43) = {-0.069638, 0.731803, 0, 1.0};
Point(44) = {-0.067028, 0.731452, 0, 1.0};
Point(45) = {-0.063896, 0.731139, 0, 1.0};
Point(46) = {-0.060277, 0.730866, 0, 1.0};
Point(47) = {-0.056207, 0.730641, 0, 1.0};
Point(48) = {-0.051724, 0.730488, 0, 1.0};
Point(49) = {-0.046811, 0.730470, 0, 1.0};
Point(50) = {-0.041407, 0.730570, 0, 1.0};
Point(51) = {-0.035521, 0.730702, 0, 1.0};
Point(52) = {-0.029190, 0.730821, 0, 1.0};
Point(53) = {-0.022466, 0.730888, 0, 1.0};
Point(54) = {-0.015400, 0.730869, 0, 1.0};
Point(55) = {-0.008055, 0.730732, 0, 1.0};
Point(56) = {-0.000496, 0.730451, 0, 1.0};
Point(57) = {0.007203, 0.730005, 0, 1.0};
Point(58) = {0.014965, 0.729374, 0, 1.0};
Point(59) = {0.022712, 0.728549, 0, 1.0};
Point(60) = {0.030358, 0.727527, 0, 1.0};
Point(61) = {0.037820, 0.726309, 0, 1.0};
Point(62) = {0.045014, 0.724905, 0, 1.0};
Point(63) = {0.051857, 0.723333, 0, 1.0};
Point(64) = {0.058269, 0.721613, 0, 1.0};
Point(65) = {0.064171, 0.719782, 0, 1.0};
Point(66) = {0.069496, 0.717874, 0, 1.0};
Point(67) = {0.074174, 0.715937, 0, 1.0};
Point(68) = {0.074806, 0.715671, 0, 1.0};
Point(69) = {-0.075052, -0.717138, 0, 1.0};
Point(70) = {-0.072422, -0.718504, 0, 1.0};
Point(71) = {-0.069019, -0.720158, 0, 1.0};
Point(72) = {-0.065258, -0.721877, 0, 1.0};
Point(73) = {-0.061158, -0.723649, 0, 1.0};
Point(74) = {-0.056744, -0.725462, 0, 1.0};
Point(75) = {-0.052042, -0.727306, 0, 1.0};
Point(76) = {-0.047080, -0.729168, 0, 1.0};
Point(77) = {-0.041888, -0.731034, 0, 1.0};
Point(78) = {-0.036498, -0.732893, 0, 1.0};
Point(79) = {-0.030941, -0.734733, 0, 1.0};
Point(80) = {-0.025251, -0.736546, 0, 1.0};
Point(81) = {-0.019468, -0.738320, 0, 1.0};
Point(82) = {-0.013630, -0.740047, 0, 1.0};
Point(83) = {-0.007787, -0.741719, 0, 1.0};
Point(84) = {-0.001986, -0.743314, 0, 1.0};
Point(85) = {0.003722, -0.744809, 0, 1.0};
Point(86) = {0.009303, -0.746170, 0, 1.0};
Point(87) = {0.014727, -0.747367, 0, 1.0};
Point(88) = {0.019974, -0.748375, 0, 1.0};
Point(89) = {0.025010, -0.749182, 0, 1.0};
Point(90) = {0.029821, -0.749725, 0, 1.0};
Point(91) = {0.034434, -0.749988, 0, 1.0};
Point(92) = {0.038869, -0.750000, 0, 1.0};
Point(93) = {0.043122, -0.749776, 0, 1.0};
Point(94) = {0.047182, -0.749350, 0, 1.0};
Point(95) = {0.051024, -0.748746, 0, 1.0};
Point(96) = {0.054623, -0.747985, 0, 1.0};
Point(97) = {0.057964, -0.747077, 0, 1.0};
Point(98) = {0.061028, -0.746043, 0, 1.0};
Point(99) = {0.063798, -0.744901, 0, 1.0};
Point(100) = {0.066256, -0.743671, 0, 1.0};
Point(101) = {0.068384, -0.742377, 0, 1.0};
Point(102) = {0.070157, -0.741019, 0, 1.0};
Point(103) = {0.071591, -0.739600, 0, 1.0};
Point(104) = {0.072708, -0.738166, 0, 1.0};
Point(105) = {0.073504, -0.736758, 0, 1.0};
Point(106) = {0.073973, -0.735428, 0, 1.0};
Point(107) = {0.074108, -0.734234, 0, 1.0};
Point(108) = {0.073906, -0.733280, 0, 1.0};
Point(109) = {0.073147, -0.732648, 0, 1.0};
Point(110) = {0.071692, -0.732202, 0, 1.0};
Point(111) = {0.069638, -0.731803, 0, 1.0};
Point(112) = {0.067028, -0.731452, 0, 1.0};
Point(113) = {0.063896, -0.731139, 0, 1.0};
Point(114) = {0.060277, -0.730866, 0, 1.0};
Point(115) = {0.056207, -0.730641, 0, 1.0};
Point(116) = {0.051724, -0.730488, 0, 1.0};
Point(117) = {0.046811, -0.730470, 0, 1.0};
Point(118) = {0.041407, -0.730570, 0, 1.0};
Point(119) = {0.035521, -0.730702, 0, 1.0};
Point(120) = {0.029190, -0.730821, 0, 1.0};
Point(121) = {0.022466, -0.730888, 0, 1.0};
Point(122) = {0.015400, -0.730869, 0, 1.0};
Point(123) = {0.008055, -0.730732, 0, 1.0};
Point(124) = {0.000496, -0.730451, 0, 1.0};
Point(125) = {-0.007203, -0.730005, 0, 1.0};
Point(126) = {-0.014965, -0.729374, 0, 1.0};
Point(127) = {-0.022712, -0.728549, 0, 1.0};
Point(128) = {-0.030358, -0.727527, 0, 1.0};
Point(129) = {-0.037820, -0.726309, 0, 1.0};
Point(130) = {-0.045014, -0.724905, 0, 1.0};
Point(131) = {-0.051857, -0.723333, 0, 1.0};
Point(132) = {-0.058269, -0.721613, 0, 1.0};
Point(133) = {-0.064171, -0.719782, 0, 1.0};
Point(134) = {-0.069496, -0.717874, 0, 1.0};
Point(135) = {-0.074174, -0.715937, 0, 1.0};
Point(136) = {-0.074806, -0.715671, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:51};
Spline(3) = {51:68};
Spline(4) = {68,1};

// Lines: second blade (splines 5-8)
Spline(5) = {69:90};
Spline(6) = {90:119};
Spline(7) = {119:136};
Spline(8) = {136,69};

// Outer domain (points 20001-4 and lines)
Point(137) = {-13.50000000, -15.00000000, 0, 1.0};
Point(138) = {-13.50000000, 15.00000000, 0, 1.0};
Point(139) = {36.00000000, 15.00000000, 0, 1.0};
Point(140) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {137, 138};
Line(12) = {138, 139};
Line(13) = {139, 140};
Line(14) = {137, 140};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
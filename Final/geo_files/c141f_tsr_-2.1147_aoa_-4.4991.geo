SetFactory("OpenCASCADE");

Point(1) = {0.074685, 0.745462, 0, 1.0};
Point(2) = {0.072149, 0.745879, 0, 1.0};
Point(3) = {0.068881, 0.746410, 0, 1.0};
Point(4) = {0.064951, 0.747038, 0, 1.0};
Point(5) = {0.060401, 0.747726, 0, 1.0};
Point(6) = {0.055286, 0.748316, 0, 1.0};
Point(7) = {0.049657, 0.748791, 0, 1.0};
Point(8) = {0.043560, 0.749231, 0, 1.0};
Point(9) = {0.037058, 0.749592, 0, 1.0};
Point(10) = {0.030215, 0.749850, 0, 1.0};
Point(11) = {0.023098, 0.749990, 0, 1.0};
Point(12) = {0.015776, 0.750000, 0, 1.0};
Point(13) = {0.008320, 0.749870, 0, 1.0};
Point(14) = {0.000803, 0.749597, 0, 1.0};
Point(15) = {-0.006702, 0.749179, 0, 1.0};
Point(16) = {-0.014124, 0.748623, 0, 1.0};
Point(17) = {-0.021391, 0.747938, 0, 1.0};
Point(18) = {-0.028436, 0.747159, 0, 1.0};
Point(19) = {-0.035192, 0.746313, 0, 1.0};
Point(20) = {-0.041595, 0.745420, 0, 1.0};
Point(21) = {-0.047585, 0.744494, 0, 1.0};
Point(22) = {-0.053102, 0.743545, 0, 1.0};
Point(23) = {-0.058087, 0.742479, 0, 1.0};
Point(24) = {-0.062488, 0.741276, 0, 1.0};
Point(25) = {-0.066272, 0.740046, 0, 1.0};
Point(26) = {-0.069398, 0.738769, 0, 1.0};
Point(27) = {-0.071827, 0.737320, 0, 1.0};
Point(28) = {-0.073548, 0.735883, 0, 1.0};
Point(29) = {-0.074543, 0.734461, 0, 1.0};
Point(30) = {-0.074769, 0.732625, 0, 1.0};
Point(31) = {-0.074279, 0.731104, 0, 1.0};
Point(32) = {-0.073086, 0.730023, 0, 1.0};
Point(33) = {-0.071206, 0.729428, 0, 1.0};
Point(34) = {-0.068652, 0.729284, 0, 1.0};
Point(35) = {-0.065432, 0.729381, 0, 1.0};
Point(36) = {-0.061575, 0.729675, 0, 1.0};
Point(37) = {-0.057109, 0.730046, 0, 1.0};
Point(38) = {-0.052071, 0.730443, 0, 1.0};
Point(39) = {-0.046508, 0.730804, 0, 1.0};
Point(40) = {-0.040479, 0.731234, 0, 1.0};
Point(41) = {-0.034042, 0.731693, 0, 1.0};
Point(42) = {-0.027259, 0.732198, 0, 1.0};
Point(43) = {-0.020196, 0.732744, 0, 1.0};
Point(44) = {-0.012921, 0.733341, 0, 1.0};
Point(45) = {-0.005508, 0.734011, 0, 1.0};
Point(46) = {0.001971, 0.734755, 0, 1.0};
Point(47) = {0.009446, 0.735560, 0, 1.0};
Point(48) = {0.016844, 0.736420, 0, 1.0};
Point(49) = {0.024095, 0.737313, 0, 1.0};
Point(50) = {0.031133, 0.738186, 0, 1.0};
Point(51) = {0.037889, 0.739036, 0, 1.0};
Point(52) = {0.044298, 0.739852, 0, 1.0};
Point(53) = {0.050299, 0.740633, 0, 1.0};
Point(54) = {0.055833, 0.741368, 0, 1.0};
Point(55) = {0.060848, 0.742044, 0, 1.0};
Point(56) = {0.065297, 0.742646, 0, 1.0};
Point(57) = {0.069136, 0.743168, 0, 1.0};
Point(58) = {0.072328, 0.743605, 0, 1.0};
Point(59) = {0.074804, 0.743941, 0, 1.0};
Point(60) = {-0.074685, -0.745462, 0, 1.0};
Point(61) = {-0.072149, -0.745879, 0, 1.0};
Point(62) = {-0.068881, -0.746410, 0, 1.0};
Point(63) = {-0.064951, -0.747038, 0, 1.0};
Point(64) = {-0.060401, -0.747726, 0, 1.0};
Point(65) = {-0.055286, -0.748316, 0, 1.0};
Point(66) = {-0.049657, -0.748791, 0, 1.0};
Point(67) = {-0.043560, -0.749231, 0, 1.0};
Point(68) = {-0.037058, -0.749592, 0, 1.0};
Point(69) = {-0.030215, -0.749850, 0, 1.0};
Point(70) = {-0.023098, -0.749990, 0, 1.0};
Point(71) = {-0.015776, -0.750000, 0, 1.0};
Point(72) = {-0.008320, -0.749870, 0, 1.0};
Point(73) = {-0.000803, -0.749597, 0, 1.0};
Point(74) = {0.006702, -0.749179, 0, 1.0};
Point(75) = {0.014124, -0.748623, 0, 1.0};
Point(76) = {0.021391, -0.747938, 0, 1.0};
Point(77) = {0.028436, -0.747159, 0, 1.0};
Point(78) = {0.035192, -0.746313, 0, 1.0};
Point(79) = {0.041595, -0.745420, 0, 1.0};
Point(80) = {0.047585, -0.744494, 0, 1.0};
Point(81) = {0.053102, -0.743545, 0, 1.0};
Point(82) = {0.058087, -0.742479, 0, 1.0};
Point(83) = {0.062488, -0.741276, 0, 1.0};
Point(84) = {0.066272, -0.740046, 0, 1.0};
Point(85) = {0.069398, -0.738769, 0, 1.0};
Point(86) = {0.071827, -0.737320, 0, 1.0};
Point(87) = {0.073548, -0.735883, 0, 1.0};
Point(88) = {0.074543, -0.734461, 0, 1.0};
Point(89) = {0.074769, -0.732625, 0, 1.0};
Point(90) = {0.074279, -0.731104, 0, 1.0};
Point(91) = {0.073086, -0.730023, 0, 1.0};
Point(92) = {0.071206, -0.729428, 0, 1.0};
Point(93) = {0.068652, -0.729284, 0, 1.0};
Point(94) = {0.065432, -0.729381, 0, 1.0};
Point(95) = {0.061575, -0.729675, 0, 1.0};
Point(96) = {0.057109, -0.730046, 0, 1.0};
Point(97) = {0.052071, -0.730443, 0, 1.0};
Point(98) = {0.046508, -0.730804, 0, 1.0};
Point(99) = {0.040479, -0.731234, 0, 1.0};
Point(100) = {0.034042, -0.731693, 0, 1.0};
Point(101) = {0.027259, -0.732198, 0, 1.0};
Point(102) = {0.020196, -0.732744, 0, 1.0};
Point(103) = {0.012921, -0.733341, 0, 1.0};
Point(104) = {0.005508, -0.734011, 0, 1.0};
Point(105) = {-0.001971, -0.734755, 0, 1.0};
Point(106) = {-0.009446, -0.735560, 0, 1.0};
Point(107) = {-0.016844, -0.736420, 0, 1.0};
Point(108) = {-0.024095, -0.737313, 0, 1.0};
Point(109) = {-0.031133, -0.738186, 0, 1.0};
Point(110) = {-0.037889, -0.739036, 0, 1.0};
Point(111) = {-0.044298, -0.739852, 0, 1.0};
Point(112) = {-0.050299, -0.740633, 0, 1.0};
Point(113) = {-0.055833, -0.741368, 0, 1.0};
Point(114) = {-0.060848, -0.742044, 0, 1.0};
Point(115) = {-0.065297, -0.742646, 0, 1.0};
Point(116) = {-0.069136, -0.743168, 0, 1.0};
Point(117) = {-0.072328, -0.743605, 0, 1.0};
Point(118) = {-0.074804, -0.743941, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:41};
Spline(3) = {41:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:78};
Spline(6) = {78:100};
Spline(7) = {100:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {36.00000000, 15.00000000, 0, 1.0};
Point(122) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
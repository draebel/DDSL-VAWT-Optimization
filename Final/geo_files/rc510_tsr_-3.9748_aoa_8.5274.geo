SetFactory("OpenCASCADE");

Point(1) = {0.074269, 0.722161, 0, 1.0};
Point(2) = {0.072827, 0.722515, 0, 1.0};
Point(3) = {0.069044, 0.723474, 0, 1.0};
Point(4) = {0.065265, 0.724466, 0, 1.0};
Point(5) = {0.061495, 0.725488, 0, 1.0};
Point(6) = {0.057743, 0.726535, 0, 1.0};
Point(7) = {0.054005, 0.727608, 0, 1.0};
Point(8) = {0.050282, 0.728709, 0, 1.0};
Point(9) = {0.046576, 0.729837, 0, 1.0};
Point(10) = {0.042847, 0.731003, 0, 1.0};
Point(11) = {0.039105, 0.732195, 0, 1.0};
Point(12) = {0.035378, 0.733390, 0, 1.0};
Point(13) = {0.031634, 0.734586, 0, 1.0};
Point(14) = {0.027873, 0.735766, 0, 1.0};
Point(15) = {0.024110, 0.736918, 0, 1.0};
Point(16) = {0.020337, 0.738037, 0, 1.0};
Point(17) = {0.016562, 0.739117, 0, 1.0};
Point(18) = {0.012782, 0.740159, 0, 1.0};
Point(19) = {0.008994, 0.741160, 0, 1.0};
Point(20) = {0.005193, 0.742117, 0, 1.0};
Point(21) = {0.001394, 0.743015, 0, 1.0};
Point(22) = {-0.002467, 0.743861, 0, 1.0};
Point(23) = {-0.006350, 0.744641, 0, 1.0};
Point(24) = {-0.010214, 0.745348, 0, 1.0};
Point(25) = {-0.014097, 0.745996, 0, 1.0};
Point(26) = {-0.017964, 0.746589, 0, 1.0};
Point(27) = {-0.025718, 0.747648, 0, 1.0};
Point(28) = {-0.033523, 0.748567, 0, 1.0};
Point(29) = {-0.037449, 0.748974, 0, 1.0};
Point(30) = {-0.041381, 0.749337, 0, 1.0};
Point(31) = {-0.045339, 0.749647, 0, 1.0};
Point(32) = {-0.049315, 0.749880, 0, 1.0};
Point(33) = {-0.053350, 0.750000, 0, 1.0};
Point(34) = {-0.057446, 0.749943, 0, 1.0};
Point(35) = {-0.061653, 0.749609, 0, 1.0};
Point(36) = {-0.065928, 0.748843, 0, 1.0};
Point(37) = {-0.069878, 0.747518, 0, 1.0};
Point(38) = {-0.072337, 0.746115, 0, 1.0};
Point(39) = {-0.073527, 0.745019, 0, 1.0};
Point(40) = {-0.074171, 0.743748, 0, 1.0};
Point(41) = {-0.073816, 0.742495, 0, 1.0};
Point(42) = {-0.072622, 0.741556, 0, 1.0};
Point(43) = {-0.072304, 0.741387, 0, 1.0};
Point(44) = {-0.071043, 0.740832, 0, 1.0};
Point(45) = {-0.069426, 0.740280, 0, 1.0};
Point(46) = {-0.065441, 0.739278, 0, 1.0};
Point(47) = {-0.061821, 0.738584, 0, 1.0};
Point(48) = {-0.058187, 0.737976, 0, 1.0};
Point(49) = {-0.054484, 0.737380, 0, 1.0};
Point(50) = {-0.050751, 0.736762, 0, 1.0};
Point(51) = {-0.046983, 0.736105, 0, 1.0};
Point(52) = {-0.043214, 0.735423, 0, 1.0};
Point(53) = {-0.039429, 0.734726, 0, 1.0};
Point(54) = {-0.035644, 0.734029, 0, 1.0};
Point(55) = {-0.028045, 0.732643, 0, 1.0};
Point(56) = {-0.020412, 0.731287, 0, 1.0};
Point(57) = {-0.016592, 0.730629, 0, 1.0};
Point(58) = {-0.012793, 0.729995, 0, 1.0};
Point(59) = {-0.008981, 0.729384, 0, 1.0};
Point(60) = {-0.005195, 0.728805, 0, 1.0};
Point(61) = {-0.001392, 0.728253, 0, 1.0};
Point(62) = {0.002469, 0.727729, 0, 1.0};
Point(63) = {0.006323, 0.727234, 0, 1.0};
Point(64) = {0.010186, 0.726765, 0, 1.0};
Point(65) = {0.014055, 0.726314, 0, 1.0};
Point(66) = {0.017925, 0.725878, 0, 1.0};
Point(67) = {0.021793, 0.725451, 0, 1.0};
Point(68) = {0.025665, 0.725029, 0, 1.0};
Point(69) = {0.029536, 0.724608, 0, 1.0};
Point(70) = {0.033421, 0.724186, 0, 1.0};
Point(71) = {0.037323, 0.723763, 0, 1.0};
Point(72) = {0.041211, 0.723346, 0, 1.0};
Point(73) = {0.045118, 0.722935, 0, 1.0};
Point(74) = {0.049055, 0.722537, 0, 1.0};
Point(75) = {0.052983, 0.722164, 0, 1.0};
Point(76) = {0.056907, 0.721822, 0, 1.0};
Point(77) = {0.060825, 0.721517, 0, 1.0};
Point(78) = {0.064737, 0.721253, 0, 1.0};
Point(79) = {0.068645, 0.720999, 0, 1.0};
Point(80) = {0.072555, 0.720749, 0, 1.0};
Point(81) = {0.074044, 0.720659, 0, 1.0};
Point(82) = {-0.074269, -0.722161, 0, 1.0};
Point(83) = {-0.072827, -0.722515, 0, 1.0};
Point(84) = {-0.069044, -0.723474, 0, 1.0};
Point(85) = {-0.065265, -0.724466, 0, 1.0};
Point(86) = {-0.061495, -0.725488, 0, 1.0};
Point(87) = {-0.057743, -0.726535, 0, 1.0};
Point(88) = {-0.054005, -0.727608, 0, 1.0};
Point(89) = {-0.050282, -0.728709, 0, 1.0};
Point(90) = {-0.046576, -0.729837, 0, 1.0};
Point(91) = {-0.042847, -0.731003, 0, 1.0};
Point(92) = {-0.039105, -0.732195, 0, 1.0};
Point(93) = {-0.035378, -0.733390, 0, 1.0};
Point(94) = {-0.031634, -0.734586, 0, 1.0};
Point(95) = {-0.027873, -0.735766, 0, 1.0};
Point(96) = {-0.024110, -0.736918, 0, 1.0};
Point(97) = {-0.020337, -0.738037, 0, 1.0};
Point(98) = {-0.016562, -0.739117, 0, 1.0};
Point(99) = {-0.012782, -0.740159, 0, 1.0};
Point(100) = {-0.008994, -0.741160, 0, 1.0};
Point(101) = {-0.005193, -0.742117, 0, 1.0};
Point(102) = {-0.001394, -0.743015, 0, 1.0};
Point(103) = {0.002467, -0.743861, 0, 1.0};
Point(104) = {0.006350, -0.744641, 0, 1.0};
Point(105) = {0.010214, -0.745348, 0, 1.0};
Point(106) = {0.014097, -0.745996, 0, 1.0};
Point(107) = {0.017964, -0.746589, 0, 1.0};
Point(108) = {0.025718, -0.747648, 0, 1.0};
Point(109) = {0.033523, -0.748567, 0, 1.0};
Point(110) = {0.037449, -0.748974, 0, 1.0};
Point(111) = {0.041381, -0.749337, 0, 1.0};
Point(112) = {0.045339, -0.749647, 0, 1.0};
Point(113) = {0.049315, -0.749880, 0, 1.0};
Point(114) = {0.053350, -0.750000, 0, 1.0};
Point(115) = {0.057446, -0.749943, 0, 1.0};
Point(116) = {0.061653, -0.749609, 0, 1.0};
Point(117) = {0.065928, -0.748843, 0, 1.0};
Point(118) = {0.069878, -0.747518, 0, 1.0};
Point(119) = {0.072337, -0.746115, 0, 1.0};
Point(120) = {0.073527, -0.745019, 0, 1.0};
Point(121) = {0.074171, -0.743748, 0, 1.0};
Point(122) = {0.073816, -0.742495, 0, 1.0};
Point(123) = {0.072622, -0.741556, 0, 1.0};
Point(124) = {0.072304, -0.741387, 0, 1.0};
Point(125) = {0.071043, -0.740832, 0, 1.0};
Point(126) = {0.069426, -0.740280, 0, 1.0};
Point(127) = {0.065441, -0.739278, 0, 1.0};
Point(128) = {0.061821, -0.738584, 0, 1.0};
Point(129) = {0.058187, -0.737976, 0, 1.0};
Point(130) = {0.054484, -0.737380, 0, 1.0};
Point(131) = {0.050751, -0.736762, 0, 1.0};
Point(132) = {0.046983, -0.736105, 0, 1.0};
Point(133) = {0.043214, -0.735423, 0, 1.0};
Point(134) = {0.039429, -0.734726, 0, 1.0};
Point(135) = {0.035644, -0.734029, 0, 1.0};
Point(136) = {0.028045, -0.732643, 0, 1.0};
Point(137) = {0.020412, -0.731287, 0, 1.0};
Point(138) = {0.016592, -0.730629, 0, 1.0};
Point(139) = {0.012793, -0.729995, 0, 1.0};
Point(140) = {0.008981, -0.729384, 0, 1.0};
Point(141) = {0.005195, -0.728805, 0, 1.0};
Point(142) = {0.001392, -0.728253, 0, 1.0};
Point(143) = {-0.002469, -0.727729, 0, 1.0};
Point(144) = {-0.006323, -0.727234, 0, 1.0};
Point(145) = {-0.010186, -0.726765, 0, 1.0};
Point(146) = {-0.014055, -0.726314, 0, 1.0};
Point(147) = {-0.017925, -0.725878, 0, 1.0};
Point(148) = {-0.021793, -0.725451, 0, 1.0};
Point(149) = {-0.025665, -0.725029, 0, 1.0};
Point(150) = {-0.029536, -0.724608, 0, 1.0};
Point(151) = {-0.033421, -0.724186, 0, 1.0};
Point(152) = {-0.037323, -0.723763, 0, 1.0};
Point(153) = {-0.041211, -0.723346, 0, 1.0};
Point(154) = {-0.045118, -0.722935, 0, 1.0};
Point(155) = {-0.049055, -0.722537, 0, 1.0};
Point(156) = {-0.052983, -0.722164, 0, 1.0};
Point(157) = {-0.056907, -0.721822, 0, 1.0};
Point(158) = {-0.060825, -0.721517, 0, 1.0};
Point(159) = {-0.064737, -0.721253, 0, 1.0};
Point(160) = {-0.068645, -0.720999, 0, 1.0};
Point(161) = {-0.072555, -0.720749, 0, 1.0};
Point(162) = {-0.074044, -0.720659, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:54};
Spline(3) = {54:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:109};
Spline(6) = {109:135};
Spline(7) = {135:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {36.00000000, 15.00000000, 0, 1.0};
Point(166) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
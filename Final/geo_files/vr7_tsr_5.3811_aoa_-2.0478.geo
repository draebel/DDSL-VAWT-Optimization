SetFactory("OpenCASCADE");

Point(1) = {0.074936, 0.743207, 0, 1.0};
Point(2) = {0.072926, 0.743466, 0, 1.0};
Point(3) = {0.070412, 0.743791, 0, 1.0};
Point(4) = {0.068402, 0.744052, 0, 1.0};
Point(5) = {0.065889, 0.744374, 0, 1.0};
Point(6) = {0.062873, 0.744767, 0, 1.0};
Point(7) = {0.059354, 0.745221, 0, 1.0};
Point(8) = {0.055836, 0.745676, 0, 1.0};
Point(9) = {0.051815, 0.746193, 0, 1.0};
Point(10) = {0.047794, 0.746709, 0, 1.0};
Point(11) = {0.043772, 0.747236, 0, 1.0};
Point(12) = {0.039751, 0.747753, 0, 1.0};
Point(13) = {0.035730, 0.748269, 0, 1.0};
Point(14) = {0.031710, 0.748766, 0, 1.0};
Point(15) = {0.027692, 0.749193, 0, 1.0};
Point(16) = {0.023677, 0.749539, 0, 1.0};
Point(17) = {0.019665, 0.749796, 0, 1.0};
Point(18) = {0.015657, 0.749963, 0, 1.0};
Point(19) = {0.011653, 0.750000, 0, 1.0};
Point(20) = {0.007652, 0.749947, 0, 1.0};
Point(21) = {0.003657, 0.749754, 0, 1.0};
Point(22) = {0.000165, 0.749459, 0, 1.0};
Point(23) = {-0.002824, 0.749102, 0, 1.0};
Point(24) = {-0.005312, 0.748723, 0, 1.0};
Point(25) = {-0.007300, 0.748352, 0, 1.0};
Point(26) = {-0.009287, 0.747950, 0, 1.0};
Point(27) = {-0.011272, 0.747499, 0, 1.0};
Point(28) = {-0.013255, 0.746968, 0, 1.0};
Point(29) = {-0.015037, 0.746444, 0, 1.0};
Point(30) = {-0.016717, 0.745864, 0, 1.0};
Point(31) = {-0.018198, 0.745290, 0, 1.0};
Point(32) = {-0.019183, 0.744870, 0, 1.0};
Point(33) = {-0.020168, 0.744414, 0, 1.0};
Point(34) = {-0.021151, 0.743924, 0, 1.0};
Point(35) = {-0.022131, 0.743354, 0, 1.0};
Point(36) = {-0.023108, 0.742683, 0, 1.0};
Point(37) = {-0.024079, 0.741848, 0, 1.0};
Point(38) = {-0.024559, 0.741300, 0, 1.0};
Point(39) = {-0.025000, 0.739634, 0, 1.0};
Point(40) = {-0.024480, 0.739077, 0, 1.0};
Point(41) = {-0.023972, 0.738860, 0, 1.0};
Point(42) = {-0.022962, 0.738616, 0, 1.0};
Point(43) = {-0.021956, 0.738452, 0, 1.0};
Point(44) = {-0.020951, 0.738333, 0, 1.0};
Point(45) = {-0.019947, 0.738228, 0, 1.0};
Point(46) = {-0.018943, 0.738139, 0, 1.0};
Point(47) = {-0.017940, 0.738080, 0, 1.0};
Point(48) = {-0.016434, 0.737954, 0, 1.0};
Point(49) = {-0.014730, 0.737855, 0, 1.0};
Point(50) = {-0.012926, 0.737779, 0, 1.0};
Point(51) = {-0.010923, 0.737725, 0, 1.0};
Point(52) = {-0.008921, 0.737697, 0, 1.0};
Point(53) = {-0.006919, 0.737679, 0, 1.0};
Point(54) = {-0.004918, 0.737690, 0, 1.0};
Point(55) = {-0.002417, 0.737709, 0, 1.0};
Point(56) = {0.000584, 0.737747, 0, 1.0};
Point(57) = {0.004083, 0.737822, 0, 1.0};
Point(58) = {0.008082, 0.737925, 0, 1.0};
Point(59) = {0.012080, 0.738058, 0, 1.0};
Point(60) = {0.016076, 0.738251, 0, 1.0};
Point(61) = {0.020070, 0.738493, 0, 1.0};
Point(62) = {0.024062, 0.738786, 0, 1.0};
Point(63) = {0.028052, 0.739129, 0, 1.0};
Point(64) = {0.032042, 0.739472, 0, 1.0};
Point(65) = {0.036032, 0.739825, 0, 1.0};
Point(66) = {0.040022, 0.740167, 0, 1.0};
Point(67) = {0.044012, 0.740520, 0, 1.0};
Point(68) = {0.048003, 0.740863, 0, 1.0};
Point(69) = {0.051993, 0.741216, 0, 1.0};
Point(70) = {0.055983, 0.741559, 0, 1.0};
Point(71) = {0.059474, 0.741863, 0, 1.0};
Point(72) = {0.062966, 0.742166, 0, 1.0};
Point(73) = {0.065958, 0.742427, 0, 1.0};
Point(74) = {0.068452, 0.742643, 0, 1.0};
Point(75) = {0.070447, 0.742816, 0, 1.0};
Point(76) = {0.072941, 0.743034, 0, 1.0};
Point(77) = {-0.074936, -0.743207, 0, 1.0};
Point(78) = {-0.072926, -0.743466, 0, 1.0};
Point(79) = {-0.070412, -0.743791, 0, 1.0};
Point(80) = {-0.068402, -0.744052, 0, 1.0};
Point(81) = {-0.065889, -0.744374, 0, 1.0};
Point(82) = {-0.062873, -0.744767, 0, 1.0};
Point(83) = {-0.059354, -0.745221, 0, 1.0};
Point(84) = {-0.055836, -0.745676, 0, 1.0};
Point(85) = {-0.051815, -0.746193, 0, 1.0};
Point(86) = {-0.047794, -0.746709, 0, 1.0};
Point(87) = {-0.043772, -0.747236, 0, 1.0};
Point(88) = {-0.039751, -0.747753, 0, 1.0};
Point(89) = {-0.035730, -0.748269, 0, 1.0};
Point(90) = {-0.031710, -0.748766, 0, 1.0};
Point(91) = {-0.027692, -0.749193, 0, 1.0};
Point(92) = {-0.023677, -0.749539, 0, 1.0};
Point(93) = {-0.019665, -0.749796, 0, 1.0};
Point(94) = {-0.015657, -0.749963, 0, 1.0};
Point(95) = {-0.011653, -0.750000, 0, 1.0};
Point(96) = {-0.007652, -0.749947, 0, 1.0};
Point(97) = {-0.003657, -0.749754, 0, 1.0};
Point(98) = {-0.000165, -0.749459, 0, 1.0};
Point(99) = {0.002824, -0.749102, 0, 1.0};
Point(100) = {0.005312, -0.748723, 0, 1.0};
Point(101) = {0.007300, -0.748352, 0, 1.0};
Point(102) = {0.009287, -0.747950, 0, 1.0};
Point(103) = {0.011272, -0.747499, 0, 1.0};
Point(104) = {0.013255, -0.746968, 0, 1.0};
Point(105) = {0.015037, -0.746444, 0, 1.0};
Point(106) = {0.016717, -0.745864, 0, 1.0};
Point(107) = {0.018198, -0.745290, 0, 1.0};
Point(108) = {0.019183, -0.744870, 0, 1.0};
Point(109) = {0.020168, -0.744414, 0, 1.0};
Point(110) = {0.021151, -0.743924, 0, 1.0};
Point(111) = {0.022131, -0.743354, 0, 1.0};
Point(112) = {0.023108, -0.742683, 0, 1.0};
Point(113) = {0.024079, -0.741848, 0, 1.0};
Point(114) = {0.024559, -0.741300, 0, 1.0};
Point(115) = {0.025000, -0.739634, 0, 1.0};
Point(116) = {0.024480, -0.739077, 0, 1.0};
Point(117) = {0.023972, -0.738860, 0, 1.0};
Point(118) = {0.022962, -0.738616, 0, 1.0};
Point(119) = {0.021956, -0.738452, 0, 1.0};
Point(120) = {0.020951, -0.738333, 0, 1.0};
Point(121) = {0.019947, -0.738228, 0, 1.0};
Point(122) = {0.018943, -0.738139, 0, 1.0};
Point(123) = {0.017940, -0.738080, 0, 1.0};
Point(124) = {0.016434, -0.737954, 0, 1.0};
Point(125) = {0.014730, -0.737855, 0, 1.0};
Point(126) = {0.012926, -0.737779, 0, 1.0};
Point(127) = {0.010923, -0.737725, 0, 1.0};
Point(128) = {0.008921, -0.737697, 0, 1.0};
Point(129) = {0.006919, -0.737679, 0, 1.0};
Point(130) = {0.004918, -0.737690, 0, 1.0};
Point(131) = {0.002417, -0.737709, 0, 1.0};
Point(132) = {-0.000584, -0.737747, 0, 1.0};
Point(133) = {-0.004083, -0.737822, 0, 1.0};
Point(134) = {-0.008082, -0.737925, 0, 1.0};
Point(135) = {-0.012080, -0.738058, 0, 1.0};
Point(136) = {-0.016076, -0.738251, 0, 1.0};
Point(137) = {-0.020070, -0.738493, 0, 1.0};
Point(138) = {-0.024062, -0.738786, 0, 1.0};
Point(139) = {-0.028052, -0.739129, 0, 1.0};
Point(140) = {-0.032042, -0.739472, 0, 1.0};
Point(141) = {-0.036032, -0.739825, 0, 1.0};
Point(142) = {-0.040022, -0.740167, 0, 1.0};
Point(143) = {-0.044012, -0.740520, 0, 1.0};
Point(144) = {-0.048003, -0.740863, 0, 1.0};
Point(145) = {-0.051993, -0.741216, 0, 1.0};
Point(146) = {-0.055983, -0.741559, 0, 1.0};
Point(147) = {-0.059474, -0.741863, 0, 1.0};
Point(148) = {-0.062966, -0.742166, 0, 1.0};
Point(149) = {-0.065958, -0.742427, 0, 1.0};
Point(150) = {-0.068452, -0.742643, 0, 1.0};
Point(151) = {-0.070447, -0.742816, 0, 1.0};
Point(152) = {-0.072941, -0.743034, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149872, 0.736414, 0, 1.0};
Point(2) = {0.145851, 0.736933, 0, 1.0};
Point(3) = {0.140825, 0.737581, 0, 1.0};
Point(4) = {0.136804, 0.738104, 0, 1.0};
Point(5) = {0.131777, 0.738749, 0, 1.0};
Point(6) = {0.125745, 0.739534, 0, 1.0};
Point(7) = {0.118708, 0.740443, 0, 1.0};
Point(8) = {0.111671, 0.741352, 0, 1.0};
Point(9) = {0.103629, 0.742385, 0, 1.0};
Point(10) = {0.095587, 0.743419, 0, 1.0};
Point(11) = {0.087545, 0.744472, 0, 1.0};
Point(12) = {0.079502, 0.745505, 0, 1.0};
Point(13) = {0.071460, 0.746538, 0, 1.0};
Point(14) = {0.063420, 0.747532, 0, 1.0};
Point(15) = {0.055384, 0.748385, 0, 1.0};
Point(16) = {0.047354, 0.749079, 0, 1.0};
Point(17) = {0.039331, 0.749592, 0, 1.0};
Point(18) = {0.031314, 0.749926, 0, 1.0};
Point(19) = {0.023306, 0.750000, 0, 1.0};
Point(20) = {0.015305, 0.749894, 0, 1.0};
Point(21) = {0.007313, 0.749508, 0, 1.0};
Point(22) = {0.000330, 0.748918, 0, 1.0};
Point(23) = {-0.005648, 0.748204, 0, 1.0};
Point(24) = {-0.010624, 0.747446, 0, 1.0};
Point(25) = {-0.014600, 0.746703, 0, 1.0};
Point(26) = {-0.018574, 0.745901, 0, 1.0};
Point(27) = {-0.022545, 0.744998, 0, 1.0};
Point(28) = {-0.026509, 0.743936, 0, 1.0};
Point(29) = {-0.030074, 0.742888, 0, 1.0};
Point(30) = {-0.033435, 0.741727, 0, 1.0};
Point(31) = {-0.036396, 0.740581, 0, 1.0};
Point(32) = {-0.038367, 0.739740, 0, 1.0};
Point(33) = {-0.040335, 0.738829, 0, 1.0};
Point(34) = {-0.042302, 0.737848, 0, 1.0};
Point(35) = {-0.044262, 0.736707, 0, 1.0};
Point(36) = {-0.046216, 0.735366, 0, 1.0};
Point(37) = {-0.048157, 0.733696, 0, 1.0};
Point(38) = {-0.049119, 0.732601, 0, 1.0};
Point(39) = {-0.050000, 0.729267, 0, 1.0};
Point(40) = {-0.048960, 0.728154, 0, 1.0};
Point(41) = {-0.047943, 0.727720, 0, 1.0};
Point(42) = {-0.045925, 0.727232, 0, 1.0};
Point(43) = {-0.043912, 0.726903, 0, 1.0};
Point(44) = {-0.041902, 0.726665, 0, 1.0};
Point(45) = {-0.039893, 0.726457, 0, 1.0};
Point(46) = {-0.037885, 0.726278, 0, 1.0};
Point(47) = {-0.035880, 0.726160, 0, 1.0};
Point(48) = {-0.032869, 0.725907, 0, 1.0};
Point(49) = {-0.029460, 0.725709, 0, 1.0};
Point(50) = {-0.025852, 0.725558, 0, 1.0};
Point(51) = {-0.021846, 0.725451, 0, 1.0};
Point(52) = {-0.017841, 0.725394, 0, 1.0};
Point(53) = {-0.013837, 0.725357, 0, 1.0};
Point(54) = {-0.009835, 0.725380, 0, 1.0};
Point(55) = {-0.004834, 0.725419, 0, 1.0};
Point(56) = {0.001168, 0.725493, 0, 1.0};
Point(57) = {0.008167, 0.725643, 0, 1.0};
Point(58) = {0.016164, 0.725849, 0, 1.0};
Point(59) = {0.024160, 0.726115, 0, 1.0};
Point(60) = {0.032151, 0.726501, 0, 1.0};
Point(61) = {0.040139, 0.726987, 0, 1.0};
Point(62) = {0.048123, 0.727572, 0, 1.0};
Point(63) = {0.056104, 0.728258, 0, 1.0};
Point(64) = {0.064084, 0.728944, 0, 1.0};
Point(65) = {0.072064, 0.729649, 0, 1.0};
Point(66) = {0.080045, 0.730335, 0, 1.0};
Point(67) = {0.088025, 0.731040, 0, 1.0};
Point(68) = {0.096005, 0.731726, 0, 1.0};
Point(69) = {0.103985, 0.732432, 0, 1.0};
Point(70) = {0.111966, 0.733117, 0, 1.0};
Point(71) = {0.118949, 0.733725, 0, 1.0};
Point(72) = {0.125931, 0.734331, 0, 1.0};
Point(73) = {0.131917, 0.734853, 0, 1.0};
Point(74) = {0.136904, 0.735286, 0, 1.0};
Point(75) = {0.140894, 0.735633, 0, 1.0};
Point(76) = {0.145882, 0.736067, 0, 1.0};
Point(77) = {-0.149872, -0.736414, 0, 1.0};
Point(78) = {-0.145851, -0.736933, 0, 1.0};
Point(79) = {-0.140825, -0.737581, 0, 1.0};
Point(80) = {-0.136804, -0.738104, 0, 1.0};
Point(81) = {-0.131777, -0.738749, 0, 1.0};
Point(82) = {-0.125745, -0.739534, 0, 1.0};
Point(83) = {-0.118708, -0.740443, 0, 1.0};
Point(84) = {-0.111671, -0.741352, 0, 1.0};
Point(85) = {-0.103629, -0.742385, 0, 1.0};
Point(86) = {-0.095587, -0.743419, 0, 1.0};
Point(87) = {-0.087545, -0.744472, 0, 1.0};
Point(88) = {-0.079502, -0.745505, 0, 1.0};
Point(89) = {-0.071460, -0.746538, 0, 1.0};
Point(90) = {-0.063420, -0.747532, 0, 1.0};
Point(91) = {-0.055384, -0.748385, 0, 1.0};
Point(92) = {-0.047354, -0.749079, 0, 1.0};
Point(93) = {-0.039331, -0.749592, 0, 1.0};
Point(94) = {-0.031314, -0.749926, 0, 1.0};
Point(95) = {-0.023306, -0.750000, 0, 1.0};
Point(96) = {-0.015305, -0.749894, 0, 1.0};
Point(97) = {-0.007313, -0.749508, 0, 1.0};
Point(98) = {-0.000330, -0.748918, 0, 1.0};
Point(99) = {0.005648, -0.748204, 0, 1.0};
Point(100) = {0.010624, -0.747446, 0, 1.0};
Point(101) = {0.014600, -0.746703, 0, 1.0};
Point(102) = {0.018574, -0.745901, 0, 1.0};
Point(103) = {0.022545, -0.744998, 0, 1.0};
Point(104) = {0.026509, -0.743936, 0, 1.0};
Point(105) = {0.030074, -0.742888, 0, 1.0};
Point(106) = {0.033435, -0.741727, 0, 1.0};
Point(107) = {0.036396, -0.740581, 0, 1.0};
Point(108) = {0.038367, -0.739740, 0, 1.0};
Point(109) = {0.040335, -0.738829, 0, 1.0};
Point(110) = {0.042302, -0.737848, 0, 1.0};
Point(111) = {0.044262, -0.736707, 0, 1.0};
Point(112) = {0.046216, -0.735366, 0, 1.0};
Point(113) = {0.048157, -0.733696, 0, 1.0};
Point(114) = {0.049119, -0.732601, 0, 1.0};
Point(115) = {0.050000, -0.729267, 0, 1.0};
Point(116) = {0.048960, -0.728154, 0, 1.0};
Point(117) = {0.047943, -0.727720, 0, 1.0};
Point(118) = {0.045925, -0.727232, 0, 1.0};
Point(119) = {0.043912, -0.726903, 0, 1.0};
Point(120) = {0.041902, -0.726665, 0, 1.0};
Point(121) = {0.039893, -0.726457, 0, 1.0};
Point(122) = {0.037885, -0.726278, 0, 1.0};
Point(123) = {0.035880, -0.726160, 0, 1.0};
Point(124) = {0.032869, -0.725907, 0, 1.0};
Point(125) = {0.029460, -0.725709, 0, 1.0};
Point(126) = {0.025852, -0.725558, 0, 1.0};
Point(127) = {0.021846, -0.725451, 0, 1.0};
Point(128) = {0.017841, -0.725394, 0, 1.0};
Point(129) = {0.013837, -0.725357, 0, 1.0};
Point(130) = {0.009835, -0.725380, 0, 1.0};
Point(131) = {0.004834, -0.725419, 0, 1.0};
Point(132) = {-0.001168, -0.725493, 0, 1.0};
Point(133) = {-0.008167, -0.725643, 0, 1.0};
Point(134) = {-0.016164, -0.725849, 0, 1.0};
Point(135) = {-0.024160, -0.726115, 0, 1.0};
Point(136) = {-0.032151, -0.726501, 0, 1.0};
Point(137) = {-0.040139, -0.726987, 0, 1.0};
Point(138) = {-0.048123, -0.727572, 0, 1.0};
Point(139) = {-0.056104, -0.728258, 0, 1.0};
Point(140) = {-0.064084, -0.728944, 0, 1.0};
Point(141) = {-0.072064, -0.729649, 0, 1.0};
Point(142) = {-0.080045, -0.730335, 0, 1.0};
Point(143) = {-0.088025, -0.731040, 0, 1.0};
Point(144) = {-0.096005, -0.731726, 0, 1.0};
Point(145) = {-0.103985, -0.732432, 0, 1.0};
Point(146) = {-0.111966, -0.733117, 0, 1.0};
Point(147) = {-0.118949, -0.733725, 0, 1.0};
Point(148) = {-0.125931, -0.734331, 0, 1.0};
Point(149) = {-0.131917, -0.734853, 0, 1.0};
Point(150) = {-0.136904, -0.735286, 0, 1.0};
Point(151) = {-0.140894, -0.735633, 0, 1.0};
Point(152) = {-0.145882, -0.736067, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
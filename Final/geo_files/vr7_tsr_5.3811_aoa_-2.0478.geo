SetFactory("OpenCASCADE");

Point(1) = {0.074911, 0.740239, 0, 1.0};
Point(2) = {0.074794, 0.740255, 0, 1.0};
Point(3) = {0.071638, 0.740665, 0, 1.0};
Point(4) = {0.067694, 0.741171, 0, 1.0};
Point(5) = {0.062960, 0.741787, 0, 1.0};
Point(6) = {0.057438, 0.742500, 0, 1.0};
Point(7) = {0.051916, 0.743214, 0, 1.0};
Point(8) = {0.045605, 0.744025, 0, 1.0};
Point(9) = {0.039294, 0.744835, 0, 1.0};
Point(10) = {0.032983, 0.745662, 0, 1.0};
Point(11) = {0.026672, 0.746473, 0, 1.0};
Point(12) = {0.020361, 0.747284, 0, 1.0};
Point(13) = {0.014052, 0.748063, 0, 1.0};
Point(14) = {0.007746, 0.748733, 0, 1.0};
Point(15) = {0.001445, 0.749277, 0, 1.0};
Point(16) = {-0.004852, 0.749680, 0, 1.0};
Point(17) = {-0.011143, 0.749942, 0, 1.0};
Point(18) = {-0.017427, 0.750000, 0, 1.0};
Point(19) = {-0.023706, 0.749917, 0, 1.0};
Point(20) = {-0.029977, 0.749614, 0, 1.0};
Point(21) = {-0.035457, 0.749151, 0, 1.0};
Point(22) = {-0.040148, 0.748591, 0, 1.0};
Point(23) = {-0.044053, 0.747996, 0, 1.0};
Point(24) = {-0.047173, 0.747413, 0, 1.0};
Point(25) = {-0.050291, 0.746783, 0, 1.0};
Point(26) = {-0.053407, 0.746075, 0, 1.0};
Point(27) = {-0.056518, 0.745241, 0, 1.0};
Point(28) = {-0.059316, 0.744419, 0, 1.0};
Point(29) = {-0.061953, 0.743508, 0, 1.0};
Point(30) = {-0.064276, 0.742608, 0, 1.0};
Point(31) = {-0.065823, 0.741948, 0, 1.0};
Point(32) = {-0.067368, 0.741234, 0, 1.0};
Point(33) = {-0.068911, 0.740464, 0, 1.0};
Point(34) = {-0.070449, 0.739569, 0, 1.0};
Point(35) = {-0.071982, 0.738517, 0, 1.0};
Point(36) = {-0.073506, 0.737206, 0, 1.0};
Point(37) = {-0.074260, 0.736346, 0, 1.0};
Point(38) = {-0.074952, 0.733730, 0, 1.0};
Point(39) = {-0.074136, 0.732857, 0, 1.0};
Point(40) = {-0.073338, 0.732516, 0, 1.0};
Point(41) = {-0.071754, 0.732133, 0, 1.0};
Point(42) = {-0.070174, 0.731875, 0, 1.0};
Point(43) = {-0.068597, 0.731688, 0, 1.0};
Point(44) = {-0.067021, 0.731525, 0, 1.0};
Point(45) = {-0.065445, 0.731385, 0, 1.0};
Point(46) = {-0.063872, 0.731292, 0, 1.0};
Point(47) = {-0.061509, 0.731094, 0, 1.0};
Point(48) = {-0.058834, 0.730938, 0, 1.0};
Point(49) = {-0.056002, 0.730820, 0, 1.0};
Point(50) = {-0.052859, 0.730736, 0, 1.0};
Point(51) = {-0.049716, 0.730691, 0, 1.0};
Point(52) = {-0.046574, 0.730662, 0, 1.0};
Point(53) = {-0.043434, 0.730680, 0, 1.0};
Point(54) = {-0.039509, 0.730710, 0, 1.0};
Point(55) = {-0.034799, 0.730769, 0, 1.0};
Point(56) = {-0.029307, 0.730887, 0, 1.0};
Point(57) = {-0.023031, 0.731048, 0, 1.0};
Point(58) = {-0.016757, 0.731257, 0, 1.0};
Point(59) = {-0.010486, 0.731560, 0, 1.0};
Point(60) = {-0.004217, 0.731941, 0, 1.0};
Point(61) = {0.002048, 0.732400, 0, 1.0};
Point(62) = {0.008311, 0.732938, 0, 1.0};
Point(63) = {0.014573, 0.733476, 0, 1.0};
Point(64) = {0.020835, 0.734030, 0, 1.0};
Point(65) = {0.027098, 0.734568, 0, 1.0};
Point(66) = {0.033360, 0.735122, 0, 1.0};
Point(67) = {0.039623, 0.735660, 0, 1.0};
Point(68) = {0.045885, 0.736214, 0, 1.0};
Point(69) = {0.052147, 0.736752, 0, 1.0};
Point(70) = {0.057627, 0.737229, 0, 1.0};
Point(71) = {0.063106, 0.737704, 0, 1.0};
Point(72) = {0.067803, 0.738114, 0, 1.0};
Point(73) = {0.071717, 0.738453, 0, 1.0};
Point(74) = {0.074848, 0.738725, 0, 1.0};
Point(75) = {0.074965, 0.738731, 0, 1.0};
Point(76) = {-0.074911, -0.740239, 0, 1.0};
Point(77) = {-0.074794, -0.740255, 0, 1.0};
Point(78) = {-0.071638, -0.740665, 0, 1.0};
Point(79) = {-0.067694, -0.741171, 0, 1.0};
Point(80) = {-0.062960, -0.741787, 0, 1.0};
Point(81) = {-0.057438, -0.742500, 0, 1.0};
Point(82) = {-0.051916, -0.743214, 0, 1.0};
Point(83) = {-0.045605, -0.744025, 0, 1.0};
Point(84) = {-0.039294, -0.744835, 0, 1.0};
Point(85) = {-0.032983, -0.745662, 0, 1.0};
Point(86) = {-0.026672, -0.746473, 0, 1.0};
Point(87) = {-0.020361, -0.747284, 0, 1.0};
Point(88) = {-0.014052, -0.748063, 0, 1.0};
Point(89) = {-0.007746, -0.748733, 0, 1.0};
Point(90) = {-0.001445, -0.749277, 0, 1.0};
Point(91) = {0.004852, -0.749680, 0, 1.0};
Point(92) = {0.011143, -0.749942, 0, 1.0};
Point(93) = {0.017427, -0.750000, 0, 1.0};
Point(94) = {0.023706, -0.749917, 0, 1.0};
Point(95) = {0.029977, -0.749614, 0, 1.0};
Point(96) = {0.035457, -0.749151, 0, 1.0};
Point(97) = {0.040148, -0.748591, 0, 1.0};
Point(98) = {0.044053, -0.747996, 0, 1.0};
Point(99) = {0.047173, -0.747413, 0, 1.0};
Point(100) = {0.050291, -0.746783, 0, 1.0};
Point(101) = {0.053407, -0.746075, 0, 1.0};
Point(102) = {0.056518, -0.745241, 0, 1.0};
Point(103) = {0.059316, -0.744419, 0, 1.0};
Point(104) = {0.061953, -0.743508, 0, 1.0};
Point(105) = {0.064276, -0.742608, 0, 1.0};
Point(106) = {0.065823, -0.741948, 0, 1.0};
Point(107) = {0.067368, -0.741234, 0, 1.0};
Point(108) = {0.068911, -0.740464, 0, 1.0};
Point(109) = {0.070449, -0.739569, 0, 1.0};
Point(110) = {0.071982, -0.738517, 0, 1.0};
Point(111) = {0.073506, -0.737206, 0, 1.0};
Point(112) = {0.074260, -0.736346, 0, 1.0};
Point(113) = {0.074952, -0.733730, 0, 1.0};
Point(114) = {0.074136, -0.732857, 0, 1.0};
Point(115) = {0.073338, -0.732516, 0, 1.0};
Point(116) = {0.071754, -0.732133, 0, 1.0};
Point(117) = {0.070174, -0.731875, 0, 1.0};
Point(118) = {0.068597, -0.731688, 0, 1.0};
Point(119) = {0.067021, -0.731525, 0, 1.0};
Point(120) = {0.065445, -0.731385, 0, 1.0};
Point(121) = {0.063872, -0.731292, 0, 1.0};
Point(122) = {0.061509, -0.731094, 0, 1.0};
Point(123) = {0.058834, -0.730938, 0, 1.0};
Point(124) = {0.056002, -0.730820, 0, 1.0};
Point(125) = {0.052859, -0.730736, 0, 1.0};
Point(126) = {0.049716, -0.730691, 0, 1.0};
Point(127) = {0.046574, -0.730662, 0, 1.0};
Point(128) = {0.043434, -0.730680, 0, 1.0};
Point(129) = {0.039509, -0.730710, 0, 1.0};
Point(130) = {0.034799, -0.730769, 0, 1.0};
Point(131) = {0.029307, -0.730887, 0, 1.0};
Point(132) = {0.023031, -0.731048, 0, 1.0};
Point(133) = {0.016757, -0.731257, 0, 1.0};
Point(134) = {0.010486, -0.731560, 0, 1.0};
Point(135) = {0.004217, -0.731941, 0, 1.0};
Point(136) = {-0.002048, -0.732400, 0, 1.0};
Point(137) = {-0.008311, -0.732938, 0, 1.0};
Point(138) = {-0.014573, -0.733476, 0, 1.0};
Point(139) = {-0.020835, -0.734030, 0, 1.0};
Point(140) = {-0.027098, -0.734568, 0, 1.0};
Point(141) = {-0.033360, -0.735122, 0, 1.0};
Point(142) = {-0.039623, -0.735660, 0, 1.0};
Point(143) = {-0.045885, -0.736214, 0, 1.0};
Point(144) = {-0.052147, -0.736752, 0, 1.0};
Point(145) = {-0.057627, -0.737229, 0, 1.0};
Point(146) = {-0.063106, -0.737704, 0, 1.0};
Point(147) = {-0.067803, -0.738114, 0, 1.0};
Point(148) = {-0.071717, -0.738453, 0, 1.0};
Point(149) = {-0.074848, -0.738725, 0, 1.0};
Point(150) = {-0.074965, -0.738731, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:96};
Spline(6) = {96:130};
Spline(7) = {130:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
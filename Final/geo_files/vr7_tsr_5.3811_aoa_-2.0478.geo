SetFactory("OpenCASCADE");

Point(1) = {0.074952, 0.739810, 0, 1.0};
Point(2) = {0.071936, 0.740199, 0, 1.0};
Point(3) = {0.068166, 0.740686, 0, 1.0};
Point(4) = {0.065151, 0.741078, 0, 1.0};
Point(5) = {0.061381, 0.741562, 0, 1.0};
Point(6) = {0.056857, 0.742150, 0, 1.0};
Point(7) = {0.051579, 0.742832, 0, 1.0};
Point(8) = {0.046301, 0.743514, 0, 1.0};
Point(9) = {0.040270, 0.744289, 0, 1.0};
Point(10) = {0.034238, 0.745064, 0, 1.0};
Point(11) = {0.028206, 0.745854, 0, 1.0};
Point(12) = {0.022175, 0.746629, 0, 1.0};
Point(13) = {0.016143, 0.747404, 0, 1.0};
Point(14) = {0.010113, 0.748149, 0, 1.0};
Point(15) = {0.004086, 0.748789, 0, 1.0};
Point(16) = {-0.001936, 0.749309, 0, 1.0};
Point(17) = {-0.007954, 0.749694, 0, 1.0};
Point(18) = {-0.013967, 0.749945, 0, 1.0};
Point(19) = {-0.019973, 0.750000, 0, 1.0};
Point(20) = {-0.025974, 0.749921, 0, 1.0};
Point(21) = {-0.031967, 0.749631, 0, 1.0};
Point(22) = {-0.037205, 0.749189, 0, 1.0};
Point(23) = {-0.041688, 0.748653, 0, 1.0};
Point(24) = {-0.045420, 0.748084, 0, 1.0};
Point(25) = {-0.048402, 0.747528, 0, 1.0};
Point(26) = {-0.051383, 0.746926, 0, 1.0};
Point(27) = {-0.054361, 0.746249, 0, 1.0};
Point(28) = {-0.057334, 0.745452, 0, 1.0};
Point(29) = {-0.060008, 0.744666, 0, 1.0};
Point(30) = {-0.062528, 0.743795, 0, 1.0};
Point(31) = {-0.064749, 0.742936, 0, 1.0};
Point(32) = {-0.066227, 0.742305, 0, 1.0};
Point(33) = {-0.067704, 0.741622, 0, 1.0};
Point(34) = {-0.069178, 0.740886, 0, 1.0};
Point(35) = {-0.070649, 0.740030, 0, 1.0};
Point(36) = {-0.072114, 0.739025, 0, 1.0};
Point(37) = {-0.073570, 0.737772, 0, 1.0};
Point(38) = {-0.074291, 0.736951, 0, 1.0};
Point(39) = {-0.074952, 0.734451, 0, 1.0};
Point(40) = {-0.074172, 0.733615, 0, 1.0};
Point(41) = {-0.073410, 0.733290, 0, 1.0};
Point(42) = {-0.071896, 0.732924, 0, 1.0};
Point(43) = {-0.070386, 0.732678, 0, 1.0};
Point(44) = {-0.068878, 0.732499, 0, 1.0};
Point(45) = {-0.067372, 0.732343, 0, 1.0};
Point(46) = {-0.065866, 0.732209, 0, 1.0};
Point(47) = {-0.064362, 0.732120, 0, 1.0};
Point(48) = {-0.062104, 0.731930, 0, 1.0};
Point(49) = {-0.059547, 0.731782, 0, 1.0};
Point(50) = {-0.056841, 0.731668, 0, 1.0};
Point(51) = {-0.053836, 0.731588, 0, 1.0};
Point(52) = {-0.050833, 0.731545, 0, 1.0};
Point(53) = {-0.047830, 0.731518, 0, 1.0};
Point(54) = {-0.044829, 0.731535, 0, 1.0};
Point(55) = {-0.041077, 0.731564, 0, 1.0};
Point(56) = {-0.036576, 0.731620, 0, 1.0};
Point(57) = {-0.031327, 0.731733, 0, 1.0};
Point(58) = {-0.025329, 0.731887, 0, 1.0};
Point(59) = {-0.019332, 0.732086, 0, 1.0};
Point(60) = {-0.013339, 0.732376, 0, 1.0};
Point(61) = {-0.007348, 0.732740, 0, 1.0};
Point(62) = {-0.001360, 0.733179, 0, 1.0};
Point(63) = {0.004626, 0.733694, 0, 1.0};
Point(64) = {0.010611, 0.734208, 0, 1.0};
Point(65) = {0.016596, 0.734737, 0, 1.0};
Point(66) = {0.022582, 0.735251, 0, 1.0};
Point(67) = {0.028566, 0.735780, 0, 1.0};
Point(68) = {0.034552, 0.736295, 0, 1.0};
Point(69) = {0.040537, 0.736824, 0, 1.0};
Point(70) = {0.046522, 0.737338, 0, 1.0};
Point(71) = {0.051759, 0.737794, 0, 1.0};
Point(72) = {0.056996, 0.738248, 0, 1.0};
Point(73) = {0.061485, 0.738640, 0, 1.0};
Point(74) = {0.065226, 0.738964, 0, 1.0};
Point(75) = {0.068219, 0.739224, 0, 1.0};
Point(76) = {0.071959, 0.739550, 0, 1.0};
Point(77) = {-0.074952, -0.739810, 0, 1.0};
Point(78) = {-0.071936, -0.740199, 0, 1.0};
Point(79) = {-0.068166, -0.740686, 0, 1.0};
Point(80) = {-0.065151, -0.741078, 0, 1.0};
Point(81) = {-0.061381, -0.741562, 0, 1.0};
Point(82) = {-0.056857, -0.742150, 0, 1.0};
Point(83) = {-0.051579, -0.742832, 0, 1.0};
Point(84) = {-0.046301, -0.743514, 0, 1.0};
Point(85) = {-0.040270, -0.744289, 0, 1.0};
Point(86) = {-0.034238, -0.745064, 0, 1.0};
Point(87) = {-0.028206, -0.745854, 0, 1.0};
Point(88) = {-0.022175, -0.746629, 0, 1.0};
Point(89) = {-0.016143, -0.747404, 0, 1.0};
Point(90) = {-0.010113, -0.748149, 0, 1.0};
Point(91) = {-0.004086, -0.748789, 0, 1.0};
Point(92) = {0.001936, -0.749309, 0, 1.0};
Point(93) = {0.007954, -0.749694, 0, 1.0};
Point(94) = {0.013967, -0.749945, 0, 1.0};
Point(95) = {0.019973, -0.750000, 0, 1.0};
Point(96) = {0.025974, -0.749921, 0, 1.0};
Point(97) = {0.031967, -0.749631, 0, 1.0};
Point(98) = {0.037205, -0.749189, 0, 1.0};
Point(99) = {0.041688, -0.748653, 0, 1.0};
Point(100) = {0.045420, -0.748084, 0, 1.0};
Point(101) = {0.048402, -0.747528, 0, 1.0};
Point(102) = {0.051383, -0.746926, 0, 1.0};
Point(103) = {0.054361, -0.746249, 0, 1.0};
Point(104) = {0.057334, -0.745452, 0, 1.0};
Point(105) = {0.060008, -0.744666, 0, 1.0};
Point(106) = {0.062528, -0.743795, 0, 1.0};
Point(107) = {0.064749, -0.742936, 0, 1.0};
Point(108) = {0.066227, -0.742305, 0, 1.0};
Point(109) = {0.067704, -0.741622, 0, 1.0};
Point(110) = {0.069178, -0.740886, 0, 1.0};
Point(111) = {0.070649, -0.740030, 0, 1.0};
Point(112) = {0.072114, -0.739025, 0, 1.0};
Point(113) = {0.073570, -0.737772, 0, 1.0};
Point(114) = {0.074291, -0.736951, 0, 1.0};
Point(115) = {0.074952, -0.734451, 0, 1.0};
Point(116) = {0.074172, -0.733615, 0, 1.0};
Point(117) = {0.073410, -0.733290, 0, 1.0};
Point(118) = {0.071896, -0.732924, 0, 1.0};
Point(119) = {0.070386, -0.732678, 0, 1.0};
Point(120) = {0.068878, -0.732499, 0, 1.0};
Point(121) = {0.067372, -0.732343, 0, 1.0};
Point(122) = {0.065866, -0.732209, 0, 1.0};
Point(123) = {0.064362, -0.732120, 0, 1.0};
Point(124) = {0.062104, -0.731930, 0, 1.0};
Point(125) = {0.059547, -0.731782, 0, 1.0};
Point(126) = {0.056841, -0.731668, 0, 1.0};
Point(127) = {0.053836, -0.731588, 0, 1.0};
Point(128) = {0.050833, -0.731545, 0, 1.0};
Point(129) = {0.047830, -0.731518, 0, 1.0};
Point(130) = {0.044829, -0.731535, 0, 1.0};
Point(131) = {0.041077, -0.731564, 0, 1.0};
Point(132) = {0.036576, -0.731620, 0, 1.0};
Point(133) = {0.031327, -0.731733, 0, 1.0};
Point(134) = {0.025329, -0.731887, 0, 1.0};
Point(135) = {0.019332, -0.732086, 0, 1.0};
Point(136) = {0.013339, -0.732376, 0, 1.0};
Point(137) = {0.007348, -0.732740, 0, 1.0};
Point(138) = {0.001360, -0.733179, 0, 1.0};
Point(139) = {-0.004626, -0.733694, 0, 1.0};
Point(140) = {-0.010611, -0.734208, 0, 1.0};
Point(141) = {-0.016596, -0.734737, 0, 1.0};
Point(142) = {-0.022582, -0.735251, 0, 1.0};
Point(143) = {-0.028566, -0.735780, 0, 1.0};
Point(144) = {-0.034552, -0.736295, 0, 1.0};
Point(145) = {-0.040537, -0.736824, 0, 1.0};
Point(146) = {-0.046522, -0.737338, 0, 1.0};
Point(147) = {-0.051759, -0.737794, 0, 1.0};
Point(148) = {-0.056996, -0.738248, 0, 1.0};
Point(149) = {-0.061485, -0.738640, 0, 1.0};
Point(150) = {-0.065226, -0.738964, 0, 1.0};
Point(151) = {-0.068219, -0.739224, 0, 1.0};
Point(152) = {-0.071959, -0.739550, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:56};
Spline(3) = {56:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:132};
Spline(7) = {132:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
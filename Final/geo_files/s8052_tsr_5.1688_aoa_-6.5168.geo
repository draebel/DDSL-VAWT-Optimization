SetFactory("OpenCASCADE");

Point(1) = {0.148708, 0.747213, 0, 1.0};
Point(2) = {0.148312, 0.747204, 0, 1.0};
Point(3) = {0.147162, 0.747195, 0, 1.0};
Point(4) = {0.145291, 0.747187, 0, 1.0};
Point(5) = {0.142715, 0.747193, 0, 1.0};
Point(6) = {0.139470, 0.747230, 0, 1.0};
Point(7) = {0.135595, 0.747305, 0, 1.0};
Point(8) = {0.131130, 0.747427, 0, 1.0};
Point(9) = {0.126126, 0.747596, 0, 1.0};
Point(10) = {0.120632, 0.747812, 0, 1.0};
Point(11) = {0.114700, 0.748073, 0, 1.0};
Point(12) = {0.108388, 0.748370, 0, 1.0};
Point(13) = {0.101754, 0.748693, 0, 1.0};
Point(14) = {0.094856, 0.749027, 0, 1.0};
Point(15) = {0.087753, 0.749357, 0, 1.0};
Point(16) = {0.080508, 0.749654, 0, 1.0};
Point(17) = {0.073186, 0.749893, 0, 1.0};
Point(18) = {0.065824, 0.750000, 0, 1.0};
Point(19) = {0.058412, 0.749946, 0, 1.0};
Point(20) = {0.050963, 0.749764, 0, 1.0};
Point(21) = {0.043520, 0.749451, 0, 1.0};
Point(22) = {0.036114, 0.749012, 0, 1.0};
Point(23) = {0.028794, 0.748457, 0, 1.0};
Point(24) = {0.021595, 0.747786, 0, 1.0};
Point(25) = {0.014552, 0.747008, 0, 1.0};
Point(26) = {0.007712, 0.746126, 0, 1.0};
Point(27) = {0.001108, 0.745150, 0, 1.0};
Point(28) = {-0.005218, 0.744087, 0, 1.0};
Point(29) = {-0.011234, 0.742947, 0, 1.0};
Point(30) = {-0.016897, 0.741734, 0, 1.0};
Point(31) = {-0.022176, 0.740457, 0, 1.0};
Point(32) = {-0.027041, 0.739116, 0, 1.0};
Point(33) = {-0.031467, 0.737723, 0, 1.0};
Point(34) = {-0.035426, 0.736268, 0, 1.0};
Point(35) = {-0.038921, 0.734754, 0, 1.0};
Point(36) = {-0.041949, 0.733212, 0, 1.0};
Point(37) = {-0.044495, 0.731653, 0, 1.0};
Point(38) = {-0.046562, 0.730098, 0, 1.0};
Point(39) = {-0.048120, 0.728586, 0, 1.0};
Point(40) = {-0.049185, 0.727103, 0, 1.0};
Point(41) = {-0.049805, 0.725682, 0, 1.0};
Point(42) = {-0.049990, 0.724441, 0, 1.0};
Point(43) = {-0.049585, 0.723474, 0, 1.0};
Point(44) = {-0.048483, 0.722705, 0, 1.0};
Point(45) = {-0.046753, 0.722012, 0, 1.0};
Point(46) = {-0.044445, 0.721404, 0, 1.0};
Point(47) = {-0.041582, 0.720904, 0, 1.0};
Point(48) = {-0.038186, 0.720521, 0, 1.0};
Point(49) = {-0.034278, 0.720265, 0, 1.0};
Point(50) = {-0.029875, 0.720138, 0, 1.0};
Point(51) = {-0.025004, 0.720143, 0, 1.0};
Point(52) = {-0.019687, 0.720279, 0, 1.0};
Point(53) = {-0.013960, 0.720543, 0, 1.0};
Point(54) = {-0.007851, 0.720933, 0, 1.0};
Point(55) = {-0.001398, 0.721444, 0, 1.0};
Point(56) = {0.005363, 0.722074, 0, 1.0};
Point(57) = {0.012388, 0.722814, 0, 1.0};
Point(58) = {0.019637, 0.723658, 0, 1.0};
Point(59) = {0.027064, 0.724599, 0, 1.0};
Point(60) = {0.034620, 0.725629, 0, 1.0};
Point(61) = {0.042257, 0.726745, 0, 1.0};
Point(62) = {0.049924, 0.727943, 0, 1.0};
Point(63) = {0.057563, 0.729236, 0, 1.0};
Point(64) = {0.065161, 0.730636, 0, 1.0};
Point(65) = {0.072708, 0.732120, 0, 1.0};
Point(66) = {0.080165, 0.733660, 0, 1.0};
Point(67) = {0.087505, 0.735227, 0, 1.0};
Point(68) = {0.094679, 0.736781, 0, 1.0};
Point(69) = {0.101642, 0.738290, 0, 1.0};
Point(70) = {0.108334, 0.739716, 0, 1.0};
Point(71) = {0.114690, 0.741040, 0, 1.0};
Point(72) = {0.120654, 0.742245, 0, 1.0};
Point(73) = {0.126166, 0.743317, 0, 1.0};
Point(74) = {0.131172, 0.744254, 0, 1.0};
Point(75) = {0.135622, 0.745054, 0, 1.0};
Point(76) = {0.139468, 0.745718, 0, 1.0};
Point(77) = {0.142676, 0.746266, 0, 1.0};
Point(78) = {0.145235, 0.746703, 0, 1.0};
Point(79) = {0.147129, 0.747010, 0, 1.0};
Point(80) = {0.148306, 0.747171, 0, 1.0};
Point(81) = {-0.148708, -0.747213, 0, 1.0};
Point(82) = {-0.148312, -0.747204, 0, 1.0};
Point(83) = {-0.147162, -0.747195, 0, 1.0};
Point(84) = {-0.145291, -0.747187, 0, 1.0};
Point(85) = {-0.142715, -0.747193, 0, 1.0};
Point(86) = {-0.139470, -0.747230, 0, 1.0};
Point(87) = {-0.135595, -0.747305, 0, 1.0};
Point(88) = {-0.131130, -0.747427, 0, 1.0};
Point(89) = {-0.126126, -0.747596, 0, 1.0};
Point(90) = {-0.120632, -0.747812, 0, 1.0};
Point(91) = {-0.114700, -0.748073, 0, 1.0};
Point(92) = {-0.108388, -0.748370, 0, 1.0};
Point(93) = {-0.101754, -0.748693, 0, 1.0};
Point(94) = {-0.094856, -0.749027, 0, 1.0};
Point(95) = {-0.087753, -0.749357, 0, 1.0};
Point(96) = {-0.080508, -0.749654, 0, 1.0};
Point(97) = {-0.073186, -0.749893, 0, 1.0};
Point(98) = {-0.065824, -0.750000, 0, 1.0};
Point(99) = {-0.058412, -0.749946, 0, 1.0};
Point(100) = {-0.050963, -0.749764, 0, 1.0};
Point(101) = {-0.043520, -0.749451, 0, 1.0};
Point(102) = {-0.036114, -0.749012, 0, 1.0};
Point(103) = {-0.028794, -0.748457, 0, 1.0};
Point(104) = {-0.021595, -0.747786, 0, 1.0};
Point(105) = {-0.014552, -0.747008, 0, 1.0};
Point(106) = {-0.007712, -0.746126, 0, 1.0};
Point(107) = {-0.001108, -0.745150, 0, 1.0};
Point(108) = {0.005218, -0.744087, 0, 1.0};
Point(109) = {0.011234, -0.742947, 0, 1.0};
Point(110) = {0.016897, -0.741734, 0, 1.0};
Point(111) = {0.022176, -0.740457, 0, 1.0};
Point(112) = {0.027041, -0.739116, 0, 1.0};
Point(113) = {0.031467, -0.737723, 0, 1.0};
Point(114) = {0.035426, -0.736268, 0, 1.0};
Point(115) = {0.038921, -0.734754, 0, 1.0};
Point(116) = {0.041949, -0.733212, 0, 1.0};
Point(117) = {0.044495, -0.731653, 0, 1.0};
Point(118) = {0.046562, -0.730098, 0, 1.0};
Point(119) = {0.048120, -0.728586, 0, 1.0};
Point(120) = {0.049185, -0.727103, 0, 1.0};
Point(121) = {0.049805, -0.725682, 0, 1.0};
Point(122) = {0.049990, -0.724441, 0, 1.0};
Point(123) = {0.049585, -0.723474, 0, 1.0};
Point(124) = {0.048483, -0.722705, 0, 1.0};
Point(125) = {0.046753, -0.722012, 0, 1.0};
Point(126) = {0.044445, -0.721404, 0, 1.0};
Point(127) = {0.041582, -0.720904, 0, 1.0};
Point(128) = {0.038186, -0.720521, 0, 1.0};
Point(129) = {0.034278, -0.720265, 0, 1.0};
Point(130) = {0.029875, -0.720138, 0, 1.0};
Point(131) = {0.025004, -0.720143, 0, 1.0};
Point(132) = {0.019687, -0.720279, 0, 1.0};
Point(133) = {0.013960, -0.720543, 0, 1.0};
Point(134) = {0.007851, -0.720933, 0, 1.0};
Point(135) = {0.001398, -0.721444, 0, 1.0};
Point(136) = {-0.005363, -0.722074, 0, 1.0};
Point(137) = {-0.012388, -0.722814, 0, 1.0};
Point(138) = {-0.019637, -0.723658, 0, 1.0};
Point(139) = {-0.027064, -0.724599, 0, 1.0};
Point(140) = {-0.034620, -0.725629, 0, 1.0};
Point(141) = {-0.042257, -0.726745, 0, 1.0};
Point(142) = {-0.049924, -0.727943, 0, 1.0};
Point(143) = {-0.057563, -0.729236, 0, 1.0};
Point(144) = {-0.065161, -0.730636, 0, 1.0};
Point(145) = {-0.072708, -0.732120, 0, 1.0};
Point(146) = {-0.080165, -0.733660, 0, 1.0};
Point(147) = {-0.087505, -0.735227, 0, 1.0};
Point(148) = {-0.094679, -0.736781, 0, 1.0};
Point(149) = {-0.101642, -0.738290, 0, 1.0};
Point(150) = {-0.108334, -0.739716, 0, 1.0};
Point(151) = {-0.114690, -0.741040, 0, 1.0};
Point(152) = {-0.120654, -0.742245, 0, 1.0};
Point(153) = {-0.126166, -0.743317, 0, 1.0};
Point(154) = {-0.131172, -0.744254, 0, 1.0};
Point(155) = {-0.135622, -0.745054, 0, 1.0};
Point(156) = {-0.139468, -0.745718, 0, 1.0};
Point(157) = {-0.142676, -0.746266, 0, 1.0};
Point(158) = {-0.145235, -0.746703, 0, 1.0};
Point(159) = {-0.147129, -0.747010, 0, 1.0};
Point(160) = {-0.148306, -0.747171, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:80};
Spline(4) = {80,1};

// Lines: second blade (splines 5-8)
Spline(5) = {81:107};
Spline(6) = {107:136};
Spline(7) = {136:160};
Spline(8) = {160,81};

// Outer domain (points 20001-4 and lines)
Point(161) = {-13.50000000, -15.00000000, 0, 1.0};
Point(162) = {-13.50000000, 15.00000000, 0, 1.0};
Point(163) = {13.50000000, 15.00000000, 0, 1.0};
Point(164) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {161, 162};
Line(12) = {162, 163};
Line(13) = {163, 164};
Line(14) = {161, 164};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112048, 0.743252, 0, 1.0};
Point(2) = {0.111540, 0.743363, 0, 1.0};
Point(3) = {0.110105, 0.743715, 0, 1.0};
Point(4) = {0.107911, 0.744264, 0, 1.0};
Point(5) = {0.105022, 0.744889, 0, 1.0};
Point(6) = {0.101426, 0.745530, 0, 1.0};
Point(7) = {0.097148, 0.746196, 0, 1.0};
Point(8) = {0.092257, 0.746881, 0, 1.0};
Point(9) = {0.086830, 0.747556, 0, 1.0};
Point(10) = {0.080929, 0.748178, 0, 1.0};
Point(11) = {0.074602, 0.748725, 0, 1.0};
Point(12) = {0.067909, 0.749190, 0, 1.0};
Point(13) = {0.060932, 0.749570, 0, 1.0};
Point(14) = {0.053758, 0.749846, 0, 1.0};
Point(15) = {0.046470, 0.749999, 0, 1.0};
Point(16) = {0.039150, 0.750000, 0, 1.0};
Point(17) = {0.031862, 0.749831, 0, 1.0};
Point(18) = {0.024671, 0.749476, 0, 1.0};
Point(19) = {0.017640, 0.748929, 0, 1.0};
Point(20) = {0.010825, 0.748187, 0, 1.0};
Point(21) = {0.004278, 0.747255, 0, 1.0};
Point(22) = {-0.001948, 0.746147, 0, 1.0};
Point(23) = {-0.007805, 0.744879, 0, 1.0};
Point(24) = {-0.013244, 0.743478, 0, 1.0};
Point(25) = {-0.018218, 0.741967, 0, 1.0};
Point(26) = {-0.022684, 0.740375, 0, 1.0};
Point(27) = {-0.026604, 0.738732, 0, 1.0};
Point(28) = {-0.029944, 0.737066, 0, 1.0};
Point(29) = {-0.032681, 0.735412, 0, 1.0};
Point(30) = {-0.034798, 0.733805, 0, 1.0};
Point(31) = {-0.036287, 0.732297, 0, 1.0};
Point(32) = {-0.037140, 0.730947, 0, 1.0};
Point(33) = {-0.037353, 0.729866, 0, 1.0};
Point(34) = {-0.036750, 0.729098, 0, 1.0};
Point(35) = {-0.035247, 0.728546, 0, 1.0};
Point(36) = {-0.032948, 0.728166, 0, 1.0};
Point(37) = {-0.029877, 0.727973, 0, 1.0};
Point(38) = {-0.026063, 0.727969, 0, 1.0};
Point(39) = {-0.021537, 0.728145, 0, 1.0};
Point(40) = {-0.016345, 0.728493, 0, 1.0};
Point(41) = {-0.010539, 0.728994, 0, 1.0};
Point(42) = {-0.004183, 0.729636, 0, 1.0};
Point(43) = {0.002649, 0.730404, 0, 1.0};
Point(44) = {0.009875, 0.731283, 0, 1.0};
Point(45) = {0.017406, 0.732263, 0, 1.0};
Point(46) = {0.025150, 0.733353, 0, 1.0};
Point(47) = {0.033046, 0.734586, 0, 1.0};
Point(48) = {0.041089, 0.735935, 0, 1.0};
Point(49) = {0.049223, 0.737308, 0, 1.0};
Point(50) = {0.057340, 0.738631, 0, 1.0};
Point(51) = {0.065319, 0.739851, 0, 1.0};
Point(52) = {0.073038, 0.740929, 0, 1.0};
Point(53) = {0.080373, 0.741831, 0, 1.0};
Point(54) = {0.087204, 0.742544, 0, 1.0};
Point(55) = {0.093410, 0.743059, 0, 1.0};
Point(56) = {0.098882, 0.743382, 0, 1.0};
Point(57) = {0.103518, 0.743525, 0, 1.0};
Point(58) = {0.107219, 0.743517, 0, 1.0};
Point(59) = {0.109898, 0.743415, 0, 1.0};
Point(60) = {0.111511, 0.743302, 0, 1.0};
Point(61) = {-0.112048, -0.743252, 0, 1.0};
Point(62) = {-0.111540, -0.743363, 0, 1.0};
Point(63) = {-0.110105, -0.743715, 0, 1.0};
Point(64) = {-0.107911, -0.744264, 0, 1.0};
Point(65) = {-0.105022, -0.744889, 0, 1.0};
Point(66) = {-0.101426, -0.745530, 0, 1.0};
Point(67) = {-0.097148, -0.746196, 0, 1.0};
Point(68) = {-0.092257, -0.746881, 0, 1.0};
Point(69) = {-0.086830, -0.747556, 0, 1.0};
Point(70) = {-0.080929, -0.748178, 0, 1.0};
Point(71) = {-0.074602, -0.748725, 0, 1.0};
Point(72) = {-0.067909, -0.749190, 0, 1.0};
Point(73) = {-0.060932, -0.749570, 0, 1.0};
Point(74) = {-0.053758, -0.749846, 0, 1.0};
Point(75) = {-0.046470, -0.749999, 0, 1.0};
Point(76) = {-0.039150, -0.750000, 0, 1.0};
Point(77) = {-0.031862, -0.749831, 0, 1.0};
Point(78) = {-0.024671, -0.749476, 0, 1.0};
Point(79) = {-0.017640, -0.748929, 0, 1.0};
Point(80) = {-0.010825, -0.748187, 0, 1.0};
Point(81) = {-0.004278, -0.747255, 0, 1.0};
Point(82) = {0.001948, -0.746147, 0, 1.0};
Point(83) = {0.007805, -0.744879, 0, 1.0};
Point(84) = {0.013244, -0.743478, 0, 1.0};
Point(85) = {0.018218, -0.741967, 0, 1.0};
Point(86) = {0.022684, -0.740375, 0, 1.0};
Point(87) = {0.026604, -0.738732, 0, 1.0};
Point(88) = {0.029944, -0.737066, 0, 1.0};
Point(89) = {0.032681, -0.735412, 0, 1.0};
Point(90) = {0.034798, -0.733805, 0, 1.0};
Point(91) = {0.036287, -0.732297, 0, 1.0};
Point(92) = {0.037140, -0.730947, 0, 1.0};
Point(93) = {0.037353, -0.729866, 0, 1.0};
Point(94) = {0.036750, -0.729098, 0, 1.0};
Point(95) = {0.035247, -0.728546, 0, 1.0};
Point(96) = {0.032948, -0.728166, 0, 1.0};
Point(97) = {0.029877, -0.727973, 0, 1.0};
Point(98) = {0.026063, -0.727969, 0, 1.0};
Point(99) = {0.021537, -0.728145, 0, 1.0};
Point(100) = {0.016345, -0.728493, 0, 1.0};
Point(101) = {0.010539, -0.728994, 0, 1.0};
Point(102) = {0.004183, -0.729636, 0, 1.0};
Point(103) = {-0.002649, -0.730404, 0, 1.0};
Point(104) = {-0.009875, -0.731283, 0, 1.0};
Point(105) = {-0.017406, -0.732263, 0, 1.0};
Point(106) = {-0.025150, -0.733353, 0, 1.0};
Point(107) = {-0.033046, -0.734586, 0, 1.0};
Point(108) = {-0.041089, -0.735935, 0, 1.0};
Point(109) = {-0.049223, -0.737308, 0, 1.0};
Point(110) = {-0.057340, -0.738631, 0, 1.0};
Point(111) = {-0.065319, -0.739851, 0, 1.0};
Point(112) = {-0.073038, -0.740929, 0, 1.0};
Point(113) = {-0.080373, -0.741831, 0, 1.0};
Point(114) = {-0.087204, -0.742544, 0, 1.0};
Point(115) = {-0.093410, -0.743059, 0, 1.0};
Point(116) = {-0.098882, -0.743382, 0, 1.0};
Point(117) = {-0.103518, -0.743525, 0, 1.0};
Point(118) = {-0.107219, -0.743517, 0, 1.0};
Point(119) = {-0.109898, -0.743415, 0, 1.0};
Point(120) = {-0.111511, -0.743302, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
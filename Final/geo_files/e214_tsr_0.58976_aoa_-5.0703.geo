SetFactory("OpenCASCADE");

Point(1) = {0.074609, 0.745501, 0, 1.0};
Point(2) = {0.074270, 0.745576, 0, 1.0};
Point(3) = {0.073313, 0.745810, 0, 1.0};
Point(4) = {0.071850, 0.746176, 0, 1.0};
Point(5) = {0.069925, 0.746593, 0, 1.0};
Point(6) = {0.067528, 0.747020, 0, 1.0};
Point(7) = {0.064675, 0.747464, 0, 1.0};
Point(8) = {0.061415, 0.747921, 0, 1.0};
Point(9) = {0.057797, 0.748371, 0, 1.0};
Point(10) = {0.053863, 0.748786, 0, 1.0};
Point(11) = {0.049646, 0.749150, 0, 1.0};
Point(12) = {0.045184, 0.749460, 0, 1.0};
Point(13) = {0.040533, 0.749713, 0, 1.0};
Point(14) = {0.035750, 0.749897, 0, 1.0};
Point(15) = {0.030892, 0.749999, 0, 1.0};
Point(16) = {0.026012, 0.750000, 0, 1.0};
Point(17) = {0.021154, 0.749887, 0, 1.0};
Point(18) = {0.016360, 0.749651, 0, 1.0};
Point(19) = {0.011673, 0.749286, 0, 1.0};
Point(20) = {0.007130, 0.748792, 0, 1.0};
Point(21) = {0.002766, 0.748170, 0, 1.0};
Point(22) = {-0.001385, 0.747432, 0, 1.0};
Point(23) = {-0.005290, 0.746586, 0, 1.0};
Point(24) = {-0.008915, 0.745652, 0, 1.0};
Point(25) = {-0.012231, 0.744645, 0, 1.0};
Point(26) = {-0.015208, 0.743584, 0, 1.0};
Point(27) = {-0.017822, 0.742489, 0, 1.0};
Point(28) = {-0.020048, 0.741378, 0, 1.0};
Point(29) = {-0.021873, 0.740275, 0, 1.0};
Point(30) = {-0.023284, 0.739204, 0, 1.0};
Point(31) = {-0.024277, 0.738198, 0, 1.0};
Point(32) = {-0.024846, 0.737299, 0, 1.0};
Point(33) = {-0.024987, 0.736578, 0, 1.0};
Point(34) = {-0.024586, 0.736066, 0, 1.0};
Point(35) = {-0.023583, 0.735698, 0, 1.0};
Point(36) = {-0.022051, 0.735444, 0, 1.0};
Point(37) = {-0.020003, 0.735316, 0, 1.0};
Point(38) = {-0.017461, 0.735313, 0, 1.0};
Point(39) = {-0.014444, 0.735431, 0, 1.0};
Point(40) = {-0.010983, 0.735662, 0, 1.0};
Point(41) = {-0.007112, 0.735997, 0, 1.0};
Point(42) = {-0.002875, 0.736425, 0, 1.0};
Point(43) = {0.001679, 0.736936, 0, 1.0};
Point(44) = {0.006496, 0.737522, 0, 1.0};
Point(45) = {0.011517, 0.738176, 0, 1.0};
Point(46) = {0.016679, 0.738903, 0, 1.0};
Point(47) = {0.021943, 0.739724, 0, 1.0};
Point(48) = {0.027305, 0.740624, 0, 1.0};
Point(49) = {0.032727, 0.741539, 0, 1.0};
Point(50) = {0.038138, 0.742421, 0, 1.0};
Point(51) = {0.043457, 0.743234, 0, 1.0};
Point(52) = {0.048603, 0.743953, 0, 1.0};
Point(53) = {0.053493, 0.744554, 0, 1.0};
Point(54) = {0.058047, 0.745030, 0, 1.0};
Point(55) = {0.062183, 0.745373, 0, 1.0};
Point(56) = {0.065832, 0.745588, 0, 1.0};
Point(57) = {0.068922, 0.745683, 0, 1.0};
Point(58) = {0.071389, 0.745678, 0, 1.0};
Point(59) = {0.073175, 0.745610, 0, 1.0};
Point(60) = {0.074250, 0.745535, 0, 1.0};
Point(61) = {-0.074609, -0.745501, 0, 1.0};
Point(62) = {-0.074270, -0.745576, 0, 1.0};
Point(63) = {-0.073313, -0.745810, 0, 1.0};
Point(64) = {-0.071850, -0.746176, 0, 1.0};
Point(65) = {-0.069925, -0.746593, 0, 1.0};
Point(66) = {-0.067528, -0.747020, 0, 1.0};
Point(67) = {-0.064675, -0.747464, 0, 1.0};
Point(68) = {-0.061415, -0.747921, 0, 1.0};
Point(69) = {-0.057797, -0.748371, 0, 1.0};
Point(70) = {-0.053863, -0.748786, 0, 1.0};
Point(71) = {-0.049646, -0.749150, 0, 1.0};
Point(72) = {-0.045184, -0.749460, 0, 1.0};
Point(73) = {-0.040533, -0.749713, 0, 1.0};
Point(74) = {-0.035750, -0.749897, 0, 1.0};
Point(75) = {-0.030892, -0.749999, 0, 1.0};
Point(76) = {-0.026012, -0.750000, 0, 1.0};
Point(77) = {-0.021154, -0.749887, 0, 1.0};
Point(78) = {-0.016360, -0.749651, 0, 1.0};
Point(79) = {-0.011673, -0.749286, 0, 1.0};
Point(80) = {-0.007130, -0.748792, 0, 1.0};
Point(81) = {-0.002766, -0.748170, 0, 1.0};
Point(82) = {0.001385, -0.747432, 0, 1.0};
Point(83) = {0.005290, -0.746586, 0, 1.0};
Point(84) = {0.008915, -0.745652, 0, 1.0};
Point(85) = {0.012231, -0.744645, 0, 1.0};
Point(86) = {0.015208, -0.743584, 0, 1.0};
Point(87) = {0.017822, -0.742489, 0, 1.0};
Point(88) = {0.020048, -0.741378, 0, 1.0};
Point(89) = {0.021873, -0.740275, 0, 1.0};
Point(90) = {0.023284, -0.739204, 0, 1.0};
Point(91) = {0.024277, -0.738198, 0, 1.0};
Point(92) = {0.024846, -0.737299, 0, 1.0};
Point(93) = {0.024987, -0.736578, 0, 1.0};
Point(94) = {0.024586, -0.736066, 0, 1.0};
Point(95) = {0.023583, -0.735698, 0, 1.0};
Point(96) = {0.022051, -0.735444, 0, 1.0};
Point(97) = {0.020003, -0.735316, 0, 1.0};
Point(98) = {0.017461, -0.735313, 0, 1.0};
Point(99) = {0.014444, -0.735431, 0, 1.0};
Point(100) = {0.010983, -0.735662, 0, 1.0};
Point(101) = {0.007112, -0.735997, 0, 1.0};
Point(102) = {0.002875, -0.736425, 0, 1.0};
Point(103) = {-0.001679, -0.736936, 0, 1.0};
Point(104) = {-0.006496, -0.737522, 0, 1.0};
Point(105) = {-0.011517, -0.738176, 0, 1.0};
Point(106) = {-0.016679, -0.738903, 0, 1.0};
Point(107) = {-0.021943, -0.739724, 0, 1.0};
Point(108) = {-0.027305, -0.740624, 0, 1.0};
Point(109) = {-0.032727, -0.741539, 0, 1.0};
Point(110) = {-0.038138, -0.742421, 0, 1.0};
Point(111) = {-0.043457, -0.743234, 0, 1.0};
Point(112) = {-0.048603, -0.743953, 0, 1.0};
Point(113) = {-0.053493, -0.744554, 0, 1.0};
Point(114) = {-0.058047, -0.745030, 0, 1.0};
Point(115) = {-0.062183, -0.745373, 0, 1.0};
Point(116) = {-0.065832, -0.745588, 0, 1.0};
Point(117) = {-0.068922, -0.745683, 0, 1.0};
Point(118) = {-0.071389, -0.745678, 0, 1.0};
Point(119) = {-0.073175, -0.745610, 0, 1.0};
Point(120) = {-0.074250, -0.745535, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
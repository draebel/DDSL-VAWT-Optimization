SetFactory("OpenCASCADE");

Point(1) = {0.112312, 0.725054, 0, 1.0};
Point(2) = {0.111040, 0.725520, 0, 1.0};
Point(3) = {0.108520, 0.726443, 0, 1.0};
Point(4) = {0.104791, 0.727808, 0, 1.0};
Point(5) = {0.099918, 0.729592, 0, 1.0};
Point(6) = {0.093988, 0.731764, 0, 1.0};
Point(7) = {0.090655, 0.732984, 0, 1.0};
Point(8) = {0.087098, 0.734287, 0, 1.0};
Point(9) = {0.083331, 0.735667, 0, 1.0};
Point(10) = {0.079370, 0.737118, 0, 1.0};
Point(11) = {0.075230, 0.738633, 0, 1.0};
Point(12) = {0.070928, 0.740082, 0, 1.0};
Point(13) = {0.066486, 0.741531, 0, 1.0};
Point(14) = {0.061919, 0.742923, 0, 1.0};
Point(15) = {0.057248, 0.744279, 0, 1.0};
Point(16) = {0.052493, 0.745540, 0, 1.0};
Point(17) = {0.047671, 0.746707, 0, 1.0};
Point(18) = {0.042806, 0.747726, 0, 1.0};
Point(19) = {0.037917, 0.748622, 0, 1.0};
Point(20) = {0.033025, 0.749308, 0, 1.0};
Point(21) = {0.028149, 0.749807, 0, 1.0};
Point(22) = {0.023309, 0.750000, 0, 1.0};
Point(23) = {0.018528, 0.749979, 0, 1.0};
Point(24) = {0.013825, 0.749676, 0, 1.0};
Point(25) = {0.009223, 0.749228, 0, 1.0};
Point(26) = {0.004739, 0.748584, 0, 1.0};
Point(27) = {0.000394, 0.747810, 0, 1.0};
Point(28) = {-0.003793, 0.746888, 0, 1.0};
Point(29) = {-0.007802, 0.745848, 0, 1.0};
Point(30) = {-0.011619, 0.744706, 0, 1.0};
Point(31) = {-0.015226, 0.743469, 0, 1.0};
Point(32) = {-0.018607, 0.742149, 0, 1.0};
Point(33) = {-0.021749, 0.740770, 0, 1.0};
Point(34) = {-0.024635, 0.739343, 0, 1.0};
Point(35) = {-0.027256, 0.737882, 0, 1.0};
Point(36) = {-0.029599, 0.736412, 0, 1.0};
Point(37) = {-0.031653, 0.734955, 0, 1.0};
Point(38) = {-0.033411, 0.733522, 0, 1.0};
Point(39) = {-0.034861, 0.732164, 0, 1.0};
Point(40) = {-0.036001, 0.730863, 0, 1.0};
Point(41) = {-0.036822, 0.729779, 0, 1.0};
Point(42) = {-0.037320, 0.728929, 0, 1.0};
Point(43) = {-0.037500, 0.727914, 0, 1.0};
Point(44) = {-0.037357, 0.727017, 0, 1.0};
Point(45) = {-0.036889, 0.726318, 0, 1.0};
Point(46) = {-0.036095, 0.726017, 0, 1.0};
Point(47) = {-0.034985, 0.725795, 0, 1.0};
Point(48) = {-0.033563, 0.725689, 0, 1.0};
Point(49) = {-0.031835, 0.725574, 0, 1.0};
Point(50) = {-0.029811, 0.725537, 0, 1.0};
Point(51) = {-0.027496, 0.725527, 0, 1.0};
Point(52) = {-0.024903, 0.725558, 0, 1.0};
Point(53) = {-0.022044, 0.725621, 0, 1.0};
Point(54) = {-0.018927, 0.725706, 0, 1.0};
Point(55) = {-0.015569, 0.725817, 0, 1.0};
Point(56) = {-0.011984, 0.725955, 0, 1.0};
Point(57) = {-0.008187, 0.726104, 0, 1.0};
Point(58) = {-0.004194, 0.726277, 0, 1.0};
Point(59) = {-0.000021, 0.726465, 0, 1.0};
Point(60) = {0.004313, 0.726685, 0, 1.0};
Point(61) = {0.008788, 0.726905, 0, 1.0};
Point(62) = {0.013387, 0.727180, 0, 1.0};
Point(63) = {0.018090, 0.727467, 0, 1.0};
Point(64) = {0.022878, 0.727851, 0, 1.0};
Point(65) = {0.027730, 0.728280, 0, 1.0};
Point(66) = {0.032626, 0.728809, 0, 1.0};
Point(67) = {0.037541, 0.729276, 0, 1.0};
Point(68) = {0.042456, 0.729758, 0, 1.0};
Point(69) = {0.047349, 0.730177, 0, 1.0};
Point(70) = {0.052201, 0.730555, 0, 1.0};
Point(71) = {0.056986, 0.730831, 0, 1.0};
Point(72) = {0.061687, 0.731029, 0, 1.0};
Point(73) = {0.066283, 0.731105, 0, 1.0};
Point(74) = {0.070753, 0.731091, 0, 1.0};
Point(75) = {0.075080, 0.730954, 0, 1.0};
Point(76) = {0.079245, 0.730729, 0, 1.0};
Point(77) = {0.083228, 0.730400, 0, 1.0};
Point(78) = {0.087015, 0.729999, 0, 1.0};
Point(79) = {0.090588, 0.729524, 0, 1.0};
Point(80) = {0.093934, 0.729012, 0, 1.0};
Point(81) = {0.099886, 0.727930, 0, 1.0};
Point(82) = {0.104773, 0.726885, 0, 1.0};
Point(83) = {0.108511, 0.725998, 0, 1.0};
Point(84) = {0.111037, 0.725377, 0, 1.0};
Point(85) = {0.112312, 0.725049, 0, 1.0};
Point(86) = {-0.112312, -0.725054, 0, 1.0};
Point(87) = {-0.111040, -0.725520, 0, 1.0};
Point(88) = {-0.108520, -0.726443, 0, 1.0};
Point(89) = {-0.104791, -0.727808, 0, 1.0};
Point(90) = {-0.099918, -0.729592, 0, 1.0};
Point(91) = {-0.093988, -0.731764, 0, 1.0};
Point(92) = {-0.090655, -0.732984, 0, 1.0};
Point(93) = {-0.087098, -0.734287, 0, 1.0};
Point(94) = {-0.083331, -0.735667, 0, 1.0};
Point(95) = {-0.079370, -0.737118, 0, 1.0};
Point(96) = {-0.075230, -0.738633, 0, 1.0};
Point(97) = {-0.070928, -0.740082, 0, 1.0};
Point(98) = {-0.066486, -0.741531, 0, 1.0};
Point(99) = {-0.061919, -0.742923, 0, 1.0};
Point(100) = {-0.057248, -0.744279, 0, 1.0};
Point(101) = {-0.052493, -0.745540, 0, 1.0};
Point(102) = {-0.047671, -0.746707, 0, 1.0};
Point(103) = {-0.042806, -0.747726, 0, 1.0};
Point(104) = {-0.037917, -0.748622, 0, 1.0};
Point(105) = {-0.033025, -0.749308, 0, 1.0};
Point(106) = {-0.028149, -0.749807, 0, 1.0};
Point(107) = {-0.023309, -0.750000, 0, 1.0};
Point(108) = {-0.018528, -0.749979, 0, 1.0};
Point(109) = {-0.013825, -0.749676, 0, 1.0};
Point(110) = {-0.009223, -0.749228, 0, 1.0};
Point(111) = {-0.004739, -0.748584, 0, 1.0};
Point(112) = {-0.000394, -0.747810, 0, 1.0};
Point(113) = {0.003793, -0.746888, 0, 1.0};
Point(114) = {0.007802, -0.745848, 0, 1.0};
Point(115) = {0.011619, -0.744706, 0, 1.0};
Point(116) = {0.015226, -0.743469, 0, 1.0};
Point(117) = {0.018607, -0.742149, 0, 1.0};
Point(118) = {0.021749, -0.740770, 0, 1.0};
Point(119) = {0.024635, -0.739343, 0, 1.0};
Point(120) = {0.027256, -0.737882, 0, 1.0};
Point(121) = {0.029599, -0.736412, 0, 1.0};
Point(122) = {0.031653, -0.734955, 0, 1.0};
Point(123) = {0.033411, -0.733522, 0, 1.0};
Point(124) = {0.034861, -0.732164, 0, 1.0};
Point(125) = {0.036001, -0.730863, 0, 1.0};
Point(126) = {0.036822, -0.729779, 0, 1.0};
Point(127) = {0.037320, -0.728929, 0, 1.0};
Point(128) = {0.037500, -0.727914, 0, 1.0};
Point(129) = {0.037357, -0.727017, 0, 1.0};
Point(130) = {0.036889, -0.726318, 0, 1.0};
Point(131) = {0.036095, -0.726017, 0, 1.0};
Point(132) = {0.034985, -0.725795, 0, 1.0};
Point(133) = {0.033563, -0.725689, 0, 1.0};
Point(134) = {0.031835, -0.725574, 0, 1.0};
Point(135) = {0.029811, -0.725537, 0, 1.0};
Point(136) = {0.027496, -0.725527, 0, 1.0};
Point(137) = {0.024903, -0.725558, 0, 1.0};
Point(138) = {0.022044, -0.725621, 0, 1.0};
Point(139) = {0.018927, -0.725706, 0, 1.0};
Point(140) = {0.015569, -0.725817, 0, 1.0};
Point(141) = {0.011984, -0.725955, 0, 1.0};
Point(142) = {0.008187, -0.726104, 0, 1.0};
Point(143) = {0.004194, -0.726277, 0, 1.0};
Point(144) = {0.000021, -0.726465, 0, 1.0};
Point(145) = {-0.004313, -0.726685, 0, 1.0};
Point(146) = {-0.008788, -0.726905, 0, 1.0};
Point(147) = {-0.013387, -0.727180, 0, 1.0};
Point(148) = {-0.018090, -0.727467, 0, 1.0};
Point(149) = {-0.022878, -0.727851, 0, 1.0};
Point(150) = {-0.027730, -0.728280, 0, 1.0};
Point(151) = {-0.032626, -0.728809, 0, 1.0};
Point(152) = {-0.037541, -0.729276, 0, 1.0};
Point(153) = {-0.042456, -0.729758, 0, 1.0};
Point(154) = {-0.047349, -0.730177, 0, 1.0};
Point(155) = {-0.052201, -0.730555, 0, 1.0};
Point(156) = {-0.056986, -0.730831, 0, 1.0};
Point(157) = {-0.061687, -0.731029, 0, 1.0};
Point(158) = {-0.066283, -0.731105, 0, 1.0};
Point(159) = {-0.070753, -0.731091, 0, 1.0};
Point(160) = {-0.075080, -0.730954, 0, 1.0};
Point(161) = {-0.079245, -0.730729, 0, 1.0};
Point(162) = {-0.083228, -0.730400, 0, 1.0};
Point(163) = {-0.087015, -0.729999, 0, 1.0};
Point(164) = {-0.090588, -0.729524, 0, 1.0};
Point(165) = {-0.093934, -0.729012, 0, 1.0};
Point(166) = {-0.099886, -0.727930, 0, 1.0};
Point(167) = {-0.104773, -0.726885, 0, 1.0};
Point(168) = {-0.108511, -0.725998, 0, 1.0};
Point(169) = {-0.111037, -0.725377, 0, 1.0};
Point(170) = {-0.112312, -0.725049, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
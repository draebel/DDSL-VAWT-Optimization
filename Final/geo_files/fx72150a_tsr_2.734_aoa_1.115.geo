SetFactory("OpenCASCADE");

Point(1) = {0.149750, 0.716738, 0, 1.0};
Point(2) = {0.148053, 0.717360, 0, 1.0};
Point(3) = {0.144693, 0.718591, 0, 1.0};
Point(4) = {0.139721, 0.720410, 0, 1.0};
Point(5) = {0.133224, 0.722789, 0, 1.0};
Point(6) = {0.125317, 0.725686, 0, 1.0};
Point(7) = {0.120874, 0.727312, 0, 1.0};
Point(8) = {0.116131, 0.729049, 0, 1.0};
Point(9) = {0.111108, 0.730889, 0, 1.0};
Point(10) = {0.105826, 0.732824, 0, 1.0};
Point(11) = {0.100307, 0.734844, 0, 1.0};
Point(12) = {0.094571, 0.736776, 0, 1.0};
Point(13) = {0.088648, 0.738708, 0, 1.0};
Point(14) = {0.082559, 0.740564, 0, 1.0};
Point(15) = {0.076331, 0.742372, 0, 1.0};
Point(16) = {0.069990, 0.744054, 0, 1.0};
Point(17) = {0.063561, 0.745609, 0, 1.0};
Point(18) = {0.057074, 0.746968, 0, 1.0};
Point(19) = {0.050556, 0.748163, 0, 1.0};
Point(20) = {0.044033, 0.749078, 0, 1.0};
Point(21) = {0.037533, 0.749742, 0, 1.0};
Point(22) = {0.031078, 0.750000, 0, 1.0};
Point(23) = {0.024705, 0.749972, 0, 1.0};
Point(24) = {0.018434, 0.749568, 0, 1.0};
Point(25) = {0.012297, 0.748971, 0, 1.0};
Point(26) = {0.006319, 0.748111, 0, 1.0};
Point(27) = {0.000526, 0.747080, 0, 1.0};
Point(28) = {-0.005057, 0.745850, 0, 1.0};
Point(29) = {-0.010403, 0.744464, 0, 1.0};
Point(30) = {-0.015492, 0.742941, 0, 1.0};
Point(31) = {-0.020301, 0.741292, 0, 1.0};
Point(32) = {-0.024810, 0.739532, 0, 1.0};
Point(33) = {-0.028998, 0.737693, 0, 1.0};
Point(34) = {-0.032846, 0.735791, 0, 1.0};
Point(35) = {-0.036341, 0.733843, 0, 1.0};
Point(36) = {-0.039466, 0.731883, 0, 1.0};
Point(37) = {-0.042204, 0.729940, 0, 1.0};
Point(38) = {-0.044547, 0.728029, 0, 1.0};
Point(39) = {-0.046481, 0.726219, 0, 1.0};
Point(40) = {-0.048001, 0.724484, 0, 1.0};
Point(41) = {-0.049095, 0.723039, 0, 1.0};
Point(42) = {-0.049760, 0.721906, 0, 1.0};
Point(43) = {-0.050000, 0.720552, 0, 1.0};
Point(44) = {-0.049809, 0.719356, 0, 1.0};
Point(45) = {-0.049185, 0.718424, 0, 1.0};
Point(46) = {-0.048127, 0.718023, 0, 1.0};
Point(47) = {-0.046646, 0.717726, 0, 1.0};
Point(48) = {-0.044751, 0.717585, 0, 1.0};
Point(49) = {-0.042447, 0.717433, 0, 1.0};
Point(50) = {-0.039748, 0.717382, 0, 1.0};
Point(51) = {-0.036661, 0.717370, 0, 1.0};
Point(52) = {-0.033204, 0.717411, 0, 1.0};
Point(53) = {-0.029392, 0.717495, 0, 1.0};
Point(54) = {-0.025237, 0.717608, 0, 1.0};
Point(55) = {-0.020759, 0.717757, 0, 1.0};
Point(56) = {-0.015978, 0.717940, 0, 1.0};
Point(57) = {-0.010916, 0.718139, 0, 1.0};
Point(58) = {-0.005592, 0.718370, 0, 1.0};
Point(59) = {-0.000028, 0.718619, 0, 1.0};
Point(60) = {0.005751, 0.718913, 0, 1.0};
Point(61) = {0.011718, 0.719207, 0, 1.0};
Point(62) = {0.017850, 0.719574, 0, 1.0};
Point(63) = {0.024120, 0.719956, 0, 1.0};
Point(64) = {0.030504, 0.720468, 0, 1.0};
Point(65) = {0.036974, 0.721040, 0, 1.0};
Point(66) = {0.043501, 0.721745, 0, 1.0};
Point(67) = {0.050054, 0.722368, 0, 1.0};
Point(68) = {0.056608, 0.723010, 0, 1.0};
Point(69) = {0.063132, 0.723569, 0, 1.0};
Point(70) = {0.069601, 0.724073, 0, 1.0};
Point(71) = {0.075982, 0.724441, 0, 1.0};
Point(72) = {0.082250, 0.724705, 0, 1.0};
Point(73) = {0.088377, 0.724806, 0, 1.0};
Point(74) = {0.094338, 0.724788, 0, 1.0};
Point(75) = {0.100107, 0.724606, 0, 1.0};
Point(76) = {0.105661, 0.724306, 0, 1.0};
Point(77) = {0.110971, 0.723866, 0, 1.0};
Point(78) = {0.116020, 0.723332, 0, 1.0};
Point(79) = {0.120784, 0.722699, 0, 1.0};
Point(80) = {0.125246, 0.722016, 0, 1.0};
Point(81) = {0.133181, 0.720574, 0, 1.0};
Point(82) = {0.139697, 0.719181, 0, 1.0};
Point(83) = {0.144681, 0.717997, 0, 1.0};
Point(84) = {0.148050, 0.717170, 0, 1.0};
Point(85) = {0.149749, 0.716732, 0, 1.0};
Point(86) = {-0.149750, -0.716738, 0, 1.0};
Point(87) = {-0.148053, -0.717360, 0, 1.0};
Point(88) = {-0.144693, -0.718591, 0, 1.0};
Point(89) = {-0.139721, -0.720410, 0, 1.0};
Point(90) = {-0.133224, -0.722789, 0, 1.0};
Point(91) = {-0.125317, -0.725686, 0, 1.0};
Point(92) = {-0.120874, -0.727312, 0, 1.0};
Point(93) = {-0.116131, -0.729049, 0, 1.0};
Point(94) = {-0.111108, -0.730889, 0, 1.0};
Point(95) = {-0.105826, -0.732824, 0, 1.0};
Point(96) = {-0.100307, -0.734844, 0, 1.0};
Point(97) = {-0.094571, -0.736776, 0, 1.0};
Point(98) = {-0.088648, -0.738708, 0, 1.0};
Point(99) = {-0.082559, -0.740564, 0, 1.0};
Point(100) = {-0.076331, -0.742372, 0, 1.0};
Point(101) = {-0.069990, -0.744054, 0, 1.0};
Point(102) = {-0.063561, -0.745609, 0, 1.0};
Point(103) = {-0.057074, -0.746968, 0, 1.0};
Point(104) = {-0.050556, -0.748163, 0, 1.0};
Point(105) = {-0.044033, -0.749078, 0, 1.0};
Point(106) = {-0.037533, -0.749742, 0, 1.0};
Point(107) = {-0.031078, -0.750000, 0, 1.0};
Point(108) = {-0.024705, -0.749972, 0, 1.0};
Point(109) = {-0.018434, -0.749568, 0, 1.0};
Point(110) = {-0.012297, -0.748971, 0, 1.0};
Point(111) = {-0.006319, -0.748111, 0, 1.0};
Point(112) = {-0.000526, -0.747080, 0, 1.0};
Point(113) = {0.005057, -0.745850, 0, 1.0};
Point(114) = {0.010403, -0.744464, 0, 1.0};
Point(115) = {0.015492, -0.742941, 0, 1.0};
Point(116) = {0.020301, -0.741292, 0, 1.0};
Point(117) = {0.024810, -0.739532, 0, 1.0};
Point(118) = {0.028998, -0.737693, 0, 1.0};
Point(119) = {0.032846, -0.735791, 0, 1.0};
Point(120) = {0.036341, -0.733843, 0, 1.0};
Point(121) = {0.039466, -0.731883, 0, 1.0};
Point(122) = {0.042204, -0.729940, 0, 1.0};
Point(123) = {0.044547, -0.728029, 0, 1.0};
Point(124) = {0.046481, -0.726219, 0, 1.0};
Point(125) = {0.048001, -0.724484, 0, 1.0};
Point(126) = {0.049095, -0.723039, 0, 1.0};
Point(127) = {0.049760, -0.721906, 0, 1.0};
Point(128) = {0.050000, -0.720552, 0, 1.0};
Point(129) = {0.049809, -0.719356, 0, 1.0};
Point(130) = {0.049185, -0.718424, 0, 1.0};
Point(131) = {0.048127, -0.718023, 0, 1.0};
Point(132) = {0.046646, -0.717726, 0, 1.0};
Point(133) = {0.044751, -0.717585, 0, 1.0};
Point(134) = {0.042447, -0.717433, 0, 1.0};
Point(135) = {0.039748, -0.717382, 0, 1.0};
Point(136) = {0.036661, -0.717370, 0, 1.0};
Point(137) = {0.033204, -0.717411, 0, 1.0};
Point(138) = {0.029392, -0.717495, 0, 1.0};
Point(139) = {0.025237, -0.717608, 0, 1.0};
Point(140) = {0.020759, -0.717757, 0, 1.0};
Point(141) = {0.015978, -0.717940, 0, 1.0};
Point(142) = {0.010916, -0.718139, 0, 1.0};
Point(143) = {0.005592, -0.718370, 0, 1.0};
Point(144) = {0.000028, -0.718619, 0, 1.0};
Point(145) = {-0.005751, -0.718913, 0, 1.0};
Point(146) = {-0.011718, -0.719207, 0, 1.0};
Point(147) = {-0.017850, -0.719574, 0, 1.0};
Point(148) = {-0.024120, -0.719956, 0, 1.0};
Point(149) = {-0.030504, -0.720468, 0, 1.0};
Point(150) = {-0.036974, -0.721040, 0, 1.0};
Point(151) = {-0.043501, -0.721745, 0, 1.0};
Point(152) = {-0.050054, -0.722368, 0, 1.0};
Point(153) = {-0.056608, -0.723010, 0, 1.0};
Point(154) = {-0.063132, -0.723569, 0, 1.0};
Point(155) = {-0.069601, -0.724073, 0, 1.0};
Point(156) = {-0.075982, -0.724441, 0, 1.0};
Point(157) = {-0.082250, -0.724705, 0, 1.0};
Point(158) = {-0.088377, -0.724806, 0, 1.0};
Point(159) = {-0.094338, -0.724788, 0, 1.0};
Point(160) = {-0.100107, -0.724606, 0, 1.0};
Point(161) = {-0.105661, -0.724306, 0, 1.0};
Point(162) = {-0.110971, -0.723866, 0, 1.0};
Point(163) = {-0.116020, -0.723332, 0, 1.0};
Point(164) = {-0.120784, -0.722699, 0, 1.0};
Point(165) = {-0.125246, -0.722016, 0, 1.0};
Point(166) = {-0.133181, -0.720574, 0, 1.0};
Point(167) = {-0.139697, -0.719181, 0, 1.0};
Point(168) = {-0.144681, -0.717997, 0, 1.0};
Point(169) = {-0.148050, -0.717170, 0, 1.0};
Point(170) = {-0.149749, -0.716732, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
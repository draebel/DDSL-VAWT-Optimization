SetFactory("OpenCASCADE");

Point(1) = {0.074875, 0.733369, 0, 1.0};
Point(2) = {0.074027, 0.733680, 0, 1.0};
Point(3) = {0.072346, 0.734296, 0, 1.0};
Point(4) = {0.069861, 0.735205, 0, 1.0};
Point(5) = {0.066612, 0.736395, 0, 1.0};
Point(6) = {0.062659, 0.737843, 0, 1.0};
Point(7) = {0.060437, 0.738656, 0, 1.0};
Point(8) = {0.058065, 0.739524, 0, 1.0};
Point(9) = {0.055554, 0.740445, 0, 1.0};
Point(10) = {0.052913, 0.741412, 0, 1.0};
Point(11) = {0.050153, 0.742422, 0, 1.0};
Point(12) = {0.047286, 0.743388, 0, 1.0};
Point(13) = {0.044324, 0.744354, 0, 1.0};
Point(14) = {0.041279, 0.745282, 0, 1.0};
Point(15) = {0.038165, 0.746186, 0, 1.0};
Point(16) = {0.034995, 0.747027, 0, 1.0};
Point(17) = {0.031781, 0.747805, 0, 1.0};
Point(18) = {0.028537, 0.748484, 0, 1.0};
Point(19) = {0.025278, 0.749081, 0, 1.0};
Point(20) = {0.022016, 0.749539, 0, 1.0};
Point(21) = {0.018766, 0.749871, 0, 1.0};
Point(22) = {0.015539, 0.750000, 0, 1.0};
Point(23) = {0.012352, 0.749986, 0, 1.0};
Point(24) = {0.009217, 0.749784, 0, 1.0};
Point(25) = {0.006148, 0.749486, 0, 1.0};
Point(26) = {0.003159, 0.749056, 0, 1.0};
Point(27) = {0.000263, 0.748540, 0, 1.0};
Point(28) = {-0.002529, 0.747925, 0, 1.0};
Point(29) = {-0.005202, 0.747232, 0, 1.0};
Point(30) = {-0.007746, 0.746470, 0, 1.0};
Point(31) = {-0.010150, 0.745646, 0, 1.0};
Point(32) = {-0.012405, 0.744766, 0, 1.0};
Point(33) = {-0.014499, 0.743846, 0, 1.0};
Point(34) = {-0.016423, 0.742896, 0, 1.0};
Point(35) = {-0.018170, 0.741921, 0, 1.0};
Point(36) = {-0.019733, 0.740942, 0, 1.0};
Point(37) = {-0.021102, 0.739970, 0, 1.0};
Point(38) = {-0.022274, 0.739015, 0, 1.0};
Point(39) = {-0.023241, 0.738109, 0, 1.0};
Point(40) = {-0.024001, 0.737242, 0, 1.0};
Point(41) = {-0.024548, 0.736520, 0, 1.0};
Point(42) = {-0.024880, 0.735953, 0, 1.0};
Point(43) = {-0.025000, 0.735276, 0, 1.0};
Point(44) = {-0.024905, 0.734678, 0, 1.0};
Point(45) = {-0.024593, 0.734212, 0, 1.0};
Point(46) = {-0.024063, 0.734012, 0, 1.0};
Point(47) = {-0.023323, 0.733863, 0, 1.0};
Point(48) = {-0.022375, 0.733793, 0, 1.0};
Point(49) = {-0.021224, 0.733716, 0, 1.0};
Point(50) = {-0.019874, 0.733691, 0, 1.0};
Point(51) = {-0.018331, 0.733685, 0, 1.0};
Point(52) = {-0.016602, 0.733705, 0, 1.0};
Point(53) = {-0.014696, 0.733747, 0, 1.0};
Point(54) = {-0.012618, 0.733804, 0, 1.0};
Point(55) = {-0.010379, 0.733878, 0, 1.0};
Point(56) = {-0.007989, 0.733970, 0, 1.0};
Point(57) = {-0.005458, 0.734070, 0, 1.0};
Point(58) = {-0.002796, 0.734185, 0, 1.0};
Point(59) = {-0.000014, 0.734310, 0, 1.0};
Point(60) = {0.002875, 0.734456, 0, 1.0};
Point(61) = {0.005859, 0.734603, 0, 1.0};
Point(62) = {0.008925, 0.734787, 0, 1.0};
Point(63) = {0.012060, 0.734978, 0, 1.0};
Point(64) = {0.015252, 0.735234, 0, 1.0};
Point(65) = {0.018487, 0.735520, 0, 1.0};
Point(66) = {0.021750, 0.735872, 0, 1.0};
Point(67) = {0.025027, 0.736184, 0, 1.0};
Point(68) = {0.028304, 0.736505, 0, 1.0};
Point(69) = {0.031566, 0.736785, 0, 1.0};
Point(70) = {0.034801, 0.737037, 0, 1.0};
Point(71) = {0.037991, 0.737221, 0, 1.0};
Point(72) = {0.041125, 0.737353, 0, 1.0};
Point(73) = {0.044188, 0.737403, 0, 1.0};
Point(74) = {0.047169, 0.737394, 0, 1.0};
Point(75) = {0.050054, 0.737303, 0, 1.0};
Point(76) = {0.052830, 0.737153, 0, 1.0};
Point(77) = {0.055485, 0.736933, 0, 1.0};
Point(78) = {0.058010, 0.736666, 0, 1.0};
Point(79) = {0.060392, 0.736350, 0, 1.0};
Point(80) = {0.062623, 0.736008, 0, 1.0};
Point(81) = {0.066591, 0.735287, 0, 1.0};
Point(82) = {0.069849, 0.734590, 0, 1.0};
Point(83) = {0.072341, 0.733999, 0, 1.0};
Point(84) = {0.074025, 0.733585, 0, 1.0};
Point(85) = {0.074875, 0.733366, 0, 1.0};
Point(86) = {-0.074875, -0.733369, 0, 1.0};
Point(87) = {-0.074027, -0.733680, 0, 1.0};
Point(88) = {-0.072346, -0.734296, 0, 1.0};
Point(89) = {-0.069861, -0.735205, 0, 1.0};
Point(90) = {-0.066612, -0.736395, 0, 1.0};
Point(91) = {-0.062659, -0.737843, 0, 1.0};
Point(92) = {-0.060437, -0.738656, 0, 1.0};
Point(93) = {-0.058065, -0.739524, 0, 1.0};
Point(94) = {-0.055554, -0.740445, 0, 1.0};
Point(95) = {-0.052913, -0.741412, 0, 1.0};
Point(96) = {-0.050153, -0.742422, 0, 1.0};
Point(97) = {-0.047286, -0.743388, 0, 1.0};
Point(98) = {-0.044324, -0.744354, 0, 1.0};
Point(99) = {-0.041279, -0.745282, 0, 1.0};
Point(100) = {-0.038165, -0.746186, 0, 1.0};
Point(101) = {-0.034995, -0.747027, 0, 1.0};
Point(102) = {-0.031781, -0.747805, 0, 1.0};
Point(103) = {-0.028537, -0.748484, 0, 1.0};
Point(104) = {-0.025278, -0.749081, 0, 1.0};
Point(105) = {-0.022016, -0.749539, 0, 1.0};
Point(106) = {-0.018766, -0.749871, 0, 1.0};
Point(107) = {-0.015539, -0.750000, 0, 1.0};
Point(108) = {-0.012352, -0.749986, 0, 1.0};
Point(109) = {-0.009217, -0.749784, 0, 1.0};
Point(110) = {-0.006148, -0.749486, 0, 1.0};
Point(111) = {-0.003159, -0.749056, 0, 1.0};
Point(112) = {-0.000263, -0.748540, 0, 1.0};
Point(113) = {0.002529, -0.747925, 0, 1.0};
Point(114) = {0.005202, -0.747232, 0, 1.0};
Point(115) = {0.007746, -0.746470, 0, 1.0};
Point(116) = {0.010150, -0.745646, 0, 1.0};
Point(117) = {0.012405, -0.744766, 0, 1.0};
Point(118) = {0.014499, -0.743846, 0, 1.0};
Point(119) = {0.016423, -0.742896, 0, 1.0};
Point(120) = {0.018170, -0.741921, 0, 1.0};
Point(121) = {0.019733, -0.740942, 0, 1.0};
Point(122) = {0.021102, -0.739970, 0, 1.0};
Point(123) = {0.022274, -0.739015, 0, 1.0};
Point(124) = {0.023241, -0.738109, 0, 1.0};
Point(125) = {0.024001, -0.737242, 0, 1.0};
Point(126) = {0.024548, -0.736520, 0, 1.0};
Point(127) = {0.024880, -0.735953, 0, 1.0};
Point(128) = {0.025000, -0.735276, 0, 1.0};
Point(129) = {0.024905, -0.734678, 0, 1.0};
Point(130) = {0.024593, -0.734212, 0, 1.0};
Point(131) = {0.024063, -0.734012, 0, 1.0};
Point(132) = {0.023323, -0.733863, 0, 1.0};
Point(133) = {0.022375, -0.733793, 0, 1.0};
Point(134) = {0.021224, -0.733716, 0, 1.0};
Point(135) = {0.019874, -0.733691, 0, 1.0};
Point(136) = {0.018331, -0.733685, 0, 1.0};
Point(137) = {0.016602, -0.733705, 0, 1.0};
Point(138) = {0.014696, -0.733747, 0, 1.0};
Point(139) = {0.012618, -0.733804, 0, 1.0};
Point(140) = {0.010379, -0.733878, 0, 1.0};
Point(141) = {0.007989, -0.733970, 0, 1.0};
Point(142) = {0.005458, -0.734070, 0, 1.0};
Point(143) = {0.002796, -0.734185, 0, 1.0};
Point(144) = {0.000014, -0.734310, 0, 1.0};
Point(145) = {-0.002875, -0.734456, 0, 1.0};
Point(146) = {-0.005859, -0.734603, 0, 1.0};
Point(147) = {-0.008925, -0.734787, 0, 1.0};
Point(148) = {-0.012060, -0.734978, 0, 1.0};
Point(149) = {-0.015252, -0.735234, 0, 1.0};
Point(150) = {-0.018487, -0.735520, 0, 1.0};
Point(151) = {-0.021750, -0.735872, 0, 1.0};
Point(152) = {-0.025027, -0.736184, 0, 1.0};
Point(153) = {-0.028304, -0.736505, 0, 1.0};
Point(154) = {-0.031566, -0.736785, 0, 1.0};
Point(155) = {-0.034801, -0.737037, 0, 1.0};
Point(156) = {-0.037991, -0.737221, 0, 1.0};
Point(157) = {-0.041125, -0.737353, 0, 1.0};
Point(158) = {-0.044188, -0.737403, 0, 1.0};
Point(159) = {-0.047169, -0.737394, 0, 1.0};
Point(160) = {-0.050054, -0.737303, 0, 1.0};
Point(161) = {-0.052830, -0.737153, 0, 1.0};
Point(162) = {-0.055485, -0.736933, 0, 1.0};
Point(163) = {-0.058010, -0.736666, 0, 1.0};
Point(164) = {-0.060392, -0.736350, 0, 1.0};
Point(165) = {-0.062623, -0.736008, 0, 1.0};
Point(166) = {-0.066591, -0.735287, 0, 1.0};
Point(167) = {-0.069849, -0.734590, 0, 1.0};
Point(168) = {-0.072341, -0.733999, 0, 1.0};
Point(169) = {-0.074025, -0.733585, 0, 1.0};
Point(170) = {-0.074875, -0.733366, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
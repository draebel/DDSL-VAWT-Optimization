SetFactory("OpenCASCADE");

Point(1) = {0.111643, 0.724997, 0, 1.0};
Point(2) = {0.110184, 0.725461, 0, 1.0};
Point(3) = {0.107999, 0.726178, 0, 1.0};
Point(4) = {0.104359, 0.727403, 0, 1.0};
Point(5) = {0.100722, 0.728651, 0, 1.0};
Point(6) = {0.097086, 0.729908, 0, 1.0};
Point(7) = {0.089814, 0.732422, 0, 1.0};
Point(8) = {0.082535, 0.734879, 0, 1.0};
Point(9) = {0.075244, 0.737217, 0, 1.0};
Point(10) = {0.067933, 0.739374, 0, 1.0};
Point(11) = {0.060598, 0.741303, 0, 1.0};
Point(12) = {0.053234, 0.742968, 0, 1.0};
Point(13) = {0.045844, 0.744395, 0, 1.0};
Point(14) = {0.038434, 0.745630, 0, 1.0};
Point(15) = {0.031007, 0.746708, 0, 1.0};
Point(16) = {0.023564, 0.747641, 0, 1.0};
Point(17) = {0.016106, 0.748432, 0, 1.0};
Point(18) = {0.008632, 0.749079, 0, 1.0};
Point(19) = {0.001142, 0.749573, 0, 1.0};
Point(20) = {-0.006367, 0.749892, 0, 1.0};
Point(21) = {-0.013899, 0.750000, 0, 1.0};
Point(22) = {-0.017676, 0.749953, 0, 1.0};
Point(23) = {-0.021462, 0.749816, 0, 1.0};
Point(24) = {-0.024501, 0.749617, 0, 1.0};
Point(25) = {-0.026789, 0.749389, 0, 1.0};
Point(26) = {-0.029091, 0.749032, 0, 1.0};
Point(27) = {-0.031416, 0.748456, 0, 1.0};
Point(28) = {-0.032987, 0.747873, 0, 1.0};
Point(29) = {-0.033791, 0.747418, 0, 1.0};
Point(30) = {-0.034448, 0.746925, 0, 1.0};
Point(31) = {-0.035036, 0.746368, 0, 1.0};
Point(32) = {-0.035466, 0.745881, 0, 1.0};
Point(33) = {-0.035817, 0.745418, 0, 1.0};
Point(34) = {-0.036087, 0.745014, 0, 1.0};
Point(35) = {-0.036364, 0.744543, 0, 1.0};
Point(36) = {-0.036651, 0.743979, 0, 1.0};
Point(37) = {-0.036957, 0.743240, 0, 1.0};
Point(38) = {-0.037182, 0.742560, 0, 1.0};
Point(39) = {-0.037308, 0.742089, 0, 1.0};
Point(40) = {-0.037500, 0.741008, 0, 1.0};
Point(41) = {-0.037546, 0.739885, 0, 1.0};
Point(42) = {-0.037515, 0.739471, 0, 1.0};
Point(43) = {-0.037423, 0.738928, 0, 1.0};
Point(44) = {-0.037257, 0.738364, 0, 1.0};
Point(45) = {-0.037079, 0.737921, 0, 1.0};
Point(46) = {-0.036893, 0.737545, 0, 1.0};
Point(47) = {-0.036702, 0.737218, 0, 1.0};
Point(48) = {-0.036441, 0.736839, 0, 1.0};
Point(49) = {-0.036108, 0.736430, 0, 1.0};
Point(50) = {-0.035633, 0.735941, 0, 1.0};
Point(51) = {-0.035081, 0.735464, 0, 1.0};
Point(52) = {-0.034382, 0.734948, 0, 1.0};
Point(53) = {-0.032967, 0.734086, 0, 1.0};
Point(54) = {-0.030817, 0.733036, 0, 1.0};
Point(55) = {-0.028648, 0.732164, 0, 1.0};
Point(56) = {-0.026467, 0.731405, 0, 1.0};
Point(57) = {-0.023546, 0.730508, 0, 1.0};
Point(58) = {-0.019881, 0.729515, 0, 1.0};
Point(59) = {-0.016206, 0.728619, 0, 1.0};
Point(60) = {-0.008831, 0.727061, 0, 1.0};
Point(61) = {-0.001428, 0.725760, 0, 1.0};
Point(62) = {0.005999, 0.724677, 0, 1.0};
Point(63) = {0.013448, 0.723798, 0, 1.0};
Point(64) = {0.020919, 0.723129, 0, 1.0};
Point(65) = {0.028418, 0.722712, 0, 1.0};
Point(66) = {0.035951, 0.722621, 0, 1.0};
Point(67) = {0.043520, 0.722855, 0, 1.0};
Point(68) = {0.051114, 0.723320, 0, 1.0};
Point(69) = {0.058730, 0.723990, 0, 1.0};
Point(70) = {0.066360, 0.724798, 0, 1.0};
Point(71) = {0.073992, 0.725617, 0, 1.0};
Point(72) = {0.081611, 0.726313, 0, 1.0};
Point(73) = {0.089198, 0.726719, 0, 1.0};
Point(74) = {0.096738, 0.726685, 0, 1.0};
Point(75) = {0.100486, 0.726462, 0, 1.0};
Point(76) = {0.104217, 0.726086, 0, 1.0};
Point(77) = {0.107930, 0.725545, 0, 1.0};
Point(78) = {0.110150, 0.725138, 0, 1.0};
Point(79) = {0.111625, 0.724833, 0, 1.0};
Point(80) = {-0.111643, -0.724997, 0, 1.0};
Point(81) = {-0.110184, -0.725461, 0, 1.0};
Point(82) = {-0.107999, -0.726178, 0, 1.0};
Point(83) = {-0.104359, -0.727403, 0, 1.0};
Point(84) = {-0.100722, -0.728651, 0, 1.0};
Point(85) = {-0.097086, -0.729908, 0, 1.0};
Point(86) = {-0.089814, -0.732422, 0, 1.0};
Point(87) = {-0.082535, -0.734879, 0, 1.0};
Point(88) = {-0.075244, -0.737217, 0, 1.0};
Point(89) = {-0.067933, -0.739374, 0, 1.0};
Point(90) = {-0.060598, -0.741303, 0, 1.0};
Point(91) = {-0.053234, -0.742968, 0, 1.0};
Point(92) = {-0.045844, -0.744395, 0, 1.0};
Point(93) = {-0.038434, -0.745630, 0, 1.0};
Point(94) = {-0.031007, -0.746708, 0, 1.0};
Point(95) = {-0.023564, -0.747641, 0, 1.0};
Point(96) = {-0.016106, -0.748432, 0, 1.0};
Point(97) = {-0.008632, -0.749079, 0, 1.0};
Point(98) = {-0.001142, -0.749573, 0, 1.0};
Point(99) = {0.006367, -0.749892, 0, 1.0};
Point(100) = {0.013899, -0.750000, 0, 1.0};
Point(101) = {0.017676, -0.749953, 0, 1.0};
Point(102) = {0.021462, -0.749816, 0, 1.0};
Point(103) = {0.024501, -0.749617, 0, 1.0};
Point(104) = {0.026789, -0.749389, 0, 1.0};
Point(105) = {0.029091, -0.749032, 0, 1.0};
Point(106) = {0.031416, -0.748456, 0, 1.0};
Point(107) = {0.032987, -0.747873, 0, 1.0};
Point(108) = {0.033791, -0.747418, 0, 1.0};
Point(109) = {0.034448, -0.746925, 0, 1.0};
Point(110) = {0.035036, -0.746368, 0, 1.0};
Point(111) = {0.035466, -0.745881, 0, 1.0};
Point(112) = {0.035817, -0.745418, 0, 1.0};
Point(113) = {0.036087, -0.745014, 0, 1.0};
Point(114) = {0.036364, -0.744543, 0, 1.0};
Point(115) = {0.036651, -0.743979, 0, 1.0};
Point(116) = {0.036957, -0.743240, 0, 1.0};
Point(117) = {0.037182, -0.742560, 0, 1.0};
Point(118) = {0.037308, -0.742089, 0, 1.0};
Point(119) = {0.037500, -0.741008, 0, 1.0};
Point(120) = {0.037546, -0.739885, 0, 1.0};
Point(121) = {0.037515, -0.739471, 0, 1.0};
Point(122) = {0.037423, -0.738928, 0, 1.0};
Point(123) = {0.037257, -0.738364, 0, 1.0};
Point(124) = {0.037079, -0.737921, 0, 1.0};
Point(125) = {0.036893, -0.737545, 0, 1.0};
Point(126) = {0.036702, -0.737218, 0, 1.0};
Point(127) = {0.036441, -0.736839, 0, 1.0};
Point(128) = {0.036108, -0.736430, 0, 1.0};
Point(129) = {0.035633, -0.735941, 0, 1.0};
Point(130) = {0.035081, -0.735464, 0, 1.0};
Point(131) = {0.034382, -0.734948, 0, 1.0};
Point(132) = {0.032967, -0.734086, 0, 1.0};
Point(133) = {0.030817, -0.733036, 0, 1.0};
Point(134) = {0.028648, -0.732164, 0, 1.0};
Point(135) = {0.026467, -0.731405, 0, 1.0};
Point(136) = {0.023546, -0.730508, 0, 1.0};
Point(137) = {0.019881, -0.729515, 0, 1.0};
Point(138) = {0.016206, -0.728619, 0, 1.0};
Point(139) = {0.008831, -0.727061, 0, 1.0};
Point(140) = {0.001428, -0.725760, 0, 1.0};
Point(141) = {-0.005999, -0.724677, 0, 1.0};
Point(142) = {-0.013448, -0.723798, 0, 1.0};
Point(143) = {-0.020919, -0.723129, 0, 1.0};
Point(144) = {-0.028418, -0.722712, 0, 1.0};
Point(145) = {-0.035951, -0.722621, 0, 1.0};
Point(146) = {-0.043520, -0.722855, 0, 1.0};
Point(147) = {-0.051114, -0.723320, 0, 1.0};
Point(148) = {-0.058730, -0.723990, 0, 1.0};
Point(149) = {-0.066360, -0.724798, 0, 1.0};
Point(150) = {-0.073992, -0.725617, 0, 1.0};
Point(151) = {-0.081611, -0.726313, 0, 1.0};
Point(152) = {-0.089198, -0.726719, 0, 1.0};
Point(153) = {-0.096738, -0.726685, 0, 1.0};
Point(154) = {-0.100486, -0.726462, 0, 1.0};
Point(155) = {-0.104217, -0.726086, 0, 1.0};
Point(156) = {-0.107930, -0.725545, 0, 1.0};
Point(157) = {-0.110150, -0.725138, 0, 1.0};
Point(158) = {-0.111625, -0.724833, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:62};
Spline(3) = {62:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:98};
Spline(6) = {98:141};
Spline(7) = {141:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
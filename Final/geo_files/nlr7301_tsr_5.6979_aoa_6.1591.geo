SetFactory("OpenCASCADE");

Point(1) = {0.074429, 0.733331, 0, 1.0};
Point(2) = {0.073456, 0.733640, 0, 1.0};
Point(3) = {0.071999, 0.734118, 0, 1.0};
Point(4) = {0.069573, 0.734936, 0, 1.0};
Point(5) = {0.067148, 0.735767, 0, 1.0};
Point(6) = {0.064724, 0.736605, 0, 1.0};
Point(7) = {0.059876, 0.738281, 0, 1.0};
Point(8) = {0.055023, 0.739919, 0, 1.0};
Point(9) = {0.050163, 0.741478, 0, 1.0};
Point(10) = {0.045289, 0.742916, 0, 1.0};
Point(11) = {0.040399, 0.744202, 0, 1.0};
Point(12) = {0.035489, 0.745312, 0, 1.0};
Point(13) = {0.030563, 0.746263, 0, 1.0};
Point(14) = {0.025623, 0.747087, 0, 1.0};
Point(15) = {0.020671, 0.747805, 0, 1.0};
Point(16) = {0.015709, 0.748427, 0, 1.0};
Point(17) = {0.010737, 0.748955, 0, 1.0};
Point(18) = {0.005755, 0.749386, 0, 1.0};
Point(19) = {0.000761, 0.749716, 0, 1.0};
Point(20) = {-0.004245, 0.749928, 0, 1.0};
Point(21) = {-0.009266, 0.750000, 0, 1.0};
Point(22) = {-0.011784, 0.749969, 0, 1.0};
Point(23) = {-0.014308, 0.749877, 0, 1.0};
Point(24) = {-0.016334, 0.749745, 0, 1.0};
Point(25) = {-0.017859, 0.749593, 0, 1.0};
Point(26) = {-0.019394, 0.749355, 0, 1.0};
Point(27) = {-0.020944, 0.748971, 0, 1.0};
Point(28) = {-0.021992, 0.748582, 0, 1.0};
Point(29) = {-0.022527, 0.748279, 0, 1.0};
Point(30) = {-0.022965, 0.747950, 0, 1.0};
Point(31) = {-0.023357, 0.747579, 0, 1.0};
Point(32) = {-0.023644, 0.747254, 0, 1.0};
Point(33) = {-0.023878, 0.746945, 0, 1.0};
Point(34) = {-0.024058, 0.746676, 0, 1.0};
Point(35) = {-0.024243, 0.746362, 0, 1.0};
Point(36) = {-0.024434, 0.745986, 0, 1.0};
Point(37) = {-0.024638, 0.745493, 0, 1.0};
Point(38) = {-0.024788, 0.745040, 0, 1.0};
Point(39) = {-0.024872, 0.744726, 0, 1.0};
Point(40) = {-0.025000, 0.744005, 0, 1.0};
Point(41) = {-0.025031, 0.743256, 0, 1.0};
Point(42) = {-0.025010, 0.742981, 0, 1.0};
Point(43) = {-0.024948, 0.742619, 0, 1.0};
Point(44) = {-0.024838, 0.742243, 0, 1.0};
Point(45) = {-0.024719, 0.741947, 0, 1.0};
Point(46) = {-0.024595, 0.741697, 0, 1.0};
Point(47) = {-0.024468, 0.741479, 0, 1.0};
Point(48) = {-0.024294, 0.741226, 0, 1.0};
Point(49) = {-0.024072, 0.740953, 0, 1.0};
Point(50) = {-0.023755, 0.740627, 0, 1.0};
Point(51) = {-0.023387, 0.740309, 0, 1.0};
Point(52) = {-0.022921, 0.739965, 0, 1.0};
Point(53) = {-0.021978, 0.739391, 0, 1.0};
Point(54) = {-0.020544, 0.738691, 0, 1.0};
Point(55) = {-0.019099, 0.738109, 0, 1.0};
Point(56) = {-0.017644, 0.737603, 0, 1.0};
Point(57) = {-0.015697, 0.737005, 0, 1.0};
Point(58) = {-0.013254, 0.736343, 0, 1.0};
Point(59) = {-0.010804, 0.735746, 0, 1.0};
Point(60) = {-0.005887, 0.734707, 0, 1.0};
Point(61) = {-0.000952, 0.733840, 0, 1.0};
Point(62) = {0.003999, 0.733118, 0, 1.0};
Point(63) = {0.008965, 0.732532, 0, 1.0};
Point(64) = {0.013946, 0.732086, 0, 1.0};
Point(65) = {0.018945, 0.731808, 0, 1.0};
Point(66) = {0.023967, 0.731747, 0, 1.0};
Point(67) = {0.029013, 0.731904, 0, 1.0};
Point(68) = {0.034076, 0.732213, 0, 1.0};
Point(69) = {0.039153, 0.732660, 0, 1.0};
Point(70) = {0.044240, 0.733198, 0, 1.0};
Point(71) = {0.049328, 0.733745, 0, 1.0};
Point(72) = {0.054407, 0.734208, 0, 1.0};
Point(73) = {0.059465, 0.734479, 0, 1.0};
Point(74) = {0.064492, 0.734457, 0, 1.0};
Point(75) = {0.066991, 0.734308, 0, 1.0};
Point(76) = {0.069478, 0.734058, 0, 1.0};
Point(77) = {0.071954, 0.733697, 0, 1.0};
Point(78) = {0.073433, 0.733426, 0, 1.0};
Point(79) = {0.074417, 0.733222, 0, 1.0};
Point(80) = {-0.074429, -0.733331, 0, 1.0};
Point(81) = {-0.073456, -0.733640, 0, 1.0};
Point(82) = {-0.071999, -0.734118, 0, 1.0};
Point(83) = {-0.069573, -0.734936, 0, 1.0};
Point(84) = {-0.067148, -0.735767, 0, 1.0};
Point(85) = {-0.064724, -0.736605, 0, 1.0};
Point(86) = {-0.059876, -0.738281, 0, 1.0};
Point(87) = {-0.055023, -0.739919, 0, 1.0};
Point(88) = {-0.050163, -0.741478, 0, 1.0};
Point(89) = {-0.045289, -0.742916, 0, 1.0};
Point(90) = {-0.040399, -0.744202, 0, 1.0};
Point(91) = {-0.035489, -0.745312, 0, 1.0};
Point(92) = {-0.030563, -0.746263, 0, 1.0};
Point(93) = {-0.025623, -0.747087, 0, 1.0};
Point(94) = {-0.020671, -0.747805, 0, 1.0};
Point(95) = {-0.015709, -0.748427, 0, 1.0};
Point(96) = {-0.010737, -0.748955, 0, 1.0};
Point(97) = {-0.005755, -0.749386, 0, 1.0};
Point(98) = {-0.000761, -0.749716, 0, 1.0};
Point(99) = {0.004245, -0.749928, 0, 1.0};
Point(100) = {0.009266, -0.750000, 0, 1.0};
Point(101) = {0.011784, -0.749969, 0, 1.0};
Point(102) = {0.014308, -0.749877, 0, 1.0};
Point(103) = {0.016334, -0.749745, 0, 1.0};
Point(104) = {0.017859, -0.749593, 0, 1.0};
Point(105) = {0.019394, -0.749355, 0, 1.0};
Point(106) = {0.020944, -0.748971, 0, 1.0};
Point(107) = {0.021992, -0.748582, 0, 1.0};
Point(108) = {0.022527, -0.748279, 0, 1.0};
Point(109) = {0.022965, -0.747950, 0, 1.0};
Point(110) = {0.023357, -0.747579, 0, 1.0};
Point(111) = {0.023644, -0.747254, 0, 1.0};
Point(112) = {0.023878, -0.746945, 0, 1.0};
Point(113) = {0.024058, -0.746676, 0, 1.0};
Point(114) = {0.024243, -0.746362, 0, 1.0};
Point(115) = {0.024434, -0.745986, 0, 1.0};
Point(116) = {0.024638, -0.745493, 0, 1.0};
Point(117) = {0.024788, -0.745040, 0, 1.0};
Point(118) = {0.024872, -0.744726, 0, 1.0};
Point(119) = {0.025000, -0.744005, 0, 1.0};
Point(120) = {0.025031, -0.743256, 0, 1.0};
Point(121) = {0.025010, -0.742981, 0, 1.0};
Point(122) = {0.024948, -0.742619, 0, 1.0};
Point(123) = {0.024838, -0.742243, 0, 1.0};
Point(124) = {0.024719, -0.741947, 0, 1.0};
Point(125) = {0.024595, -0.741697, 0, 1.0};
Point(126) = {0.024468, -0.741479, 0, 1.0};
Point(127) = {0.024294, -0.741226, 0, 1.0};
Point(128) = {0.024072, -0.740953, 0, 1.0};
Point(129) = {0.023755, -0.740627, 0, 1.0};
Point(130) = {0.023387, -0.740309, 0, 1.0};
Point(131) = {0.022921, -0.739965, 0, 1.0};
Point(132) = {0.021978, -0.739391, 0, 1.0};
Point(133) = {0.020544, -0.738691, 0, 1.0};
Point(134) = {0.019099, -0.738109, 0, 1.0};
Point(135) = {0.017644, -0.737603, 0, 1.0};
Point(136) = {0.015697, -0.737005, 0, 1.0};
Point(137) = {0.013254, -0.736343, 0, 1.0};
Point(138) = {0.010804, -0.735746, 0, 1.0};
Point(139) = {0.005887, -0.734707, 0, 1.0};
Point(140) = {0.000952, -0.733840, 0, 1.0};
Point(141) = {-0.003999, -0.733118, 0, 1.0};
Point(142) = {-0.008965, -0.732532, 0, 1.0};
Point(143) = {-0.013946, -0.732086, 0, 1.0};
Point(144) = {-0.018945, -0.731808, 0, 1.0};
Point(145) = {-0.023967, -0.731747, 0, 1.0};
Point(146) = {-0.029013, -0.731904, 0, 1.0};
Point(147) = {-0.034076, -0.732213, 0, 1.0};
Point(148) = {-0.039153, -0.732660, 0, 1.0};
Point(149) = {-0.044240, -0.733198, 0, 1.0};
Point(150) = {-0.049328, -0.733745, 0, 1.0};
Point(151) = {-0.054407, -0.734208, 0, 1.0};
Point(152) = {-0.059465, -0.734479, 0, 1.0};
Point(153) = {-0.064492, -0.734457, 0, 1.0};
Point(154) = {-0.066991, -0.734308, 0, 1.0};
Point(155) = {-0.069478, -0.734058, 0, 1.0};
Point(156) = {-0.071954, -0.733697, 0, 1.0};
Point(157) = {-0.073433, -0.733426, 0, 1.0};
Point(158) = {-0.074417, -0.733222, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:62};
Spline(3) = {62:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:98};
Spline(6) = {98:141};
Spline(7) = {141:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 23 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
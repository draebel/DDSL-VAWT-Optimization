SetFactory("OpenCASCADE");

Point(1) = {0.148857, 0.716663, 0, 1.0};
Point(2) = {0.146912, 0.717281, 0, 1.0};
Point(3) = {0.143998, 0.718237, 0, 1.0};
Point(4) = {0.139146, 0.719871, 0, 1.0};
Point(5) = {0.134296, 0.721535, 0, 1.0};
Point(6) = {0.129448, 0.723211, 0, 1.0};
Point(7) = {0.119752, 0.726562, 0, 1.0};
Point(8) = {0.110047, 0.729839, 0, 1.0};
Point(9) = {0.100325, 0.732956, 0, 1.0};
Point(10) = {0.090578, 0.735832, 0, 1.0};
Point(11) = {0.080797, 0.738404, 0, 1.0};
Point(12) = {0.070979, 0.740624, 0, 1.0};
Point(13) = {0.061126, 0.742526, 0, 1.0};
Point(14) = {0.051246, 0.744174, 0, 1.0};
Point(15) = {0.041343, 0.745611, 0, 1.0};
Point(16) = {0.031419, 0.746855, 0, 1.0};
Point(17) = {0.021475, 0.747910, 0, 1.0};
Point(18) = {0.011510, 0.748772, 0, 1.0};
Point(19) = {0.001523, 0.749431, 0, 1.0};
Point(20) = {-0.008490, 0.749856, 0, 1.0};
Point(21) = {-0.018532, 0.750000, 0, 1.0};
Point(22) = {-0.023568, 0.749938, 0, 1.0};
Point(23) = {-0.028617, 0.749755, 0, 1.0};
Point(24) = {-0.032668, 0.749490, 0, 1.0};
Point(25) = {-0.035719, 0.749185, 0, 1.0};
Point(26) = {-0.038787, 0.748710, 0, 1.0};
Point(27) = {-0.041888, 0.747942, 0, 1.0};
Point(28) = {-0.043983, 0.747164, 0, 1.0};
Point(29) = {-0.045054, 0.746558, 0, 1.0};
Point(30) = {-0.045930, 0.745900, 0, 1.0};
Point(31) = {-0.046714, 0.745158, 0, 1.0};
Point(32) = {-0.047287, 0.744507, 0, 1.0};
Point(33) = {-0.047756, 0.743890, 0, 1.0};
Point(34) = {-0.048116, 0.743352, 0, 1.0};
Point(35) = {-0.048486, 0.742724, 0, 1.0};
Point(36) = {-0.048868, 0.741972, 0, 1.0};
Point(37) = {-0.049277, 0.740987, 0, 1.0};
Point(38) = {-0.049576, 0.740079, 0, 1.0};
Point(39) = {-0.049744, 0.739452, 0, 1.0};
Point(40) = {-0.050000, 0.738011, 0, 1.0};
Point(41) = {-0.050061, 0.736513, 0, 1.0};
Point(42) = {-0.050020, 0.735961, 0, 1.0};
Point(43) = {-0.049897, 0.735238, 0, 1.0};
Point(44) = {-0.049676, 0.734486, 0, 1.0};
Point(45) = {-0.049438, 0.733895, 0, 1.0};
Point(46) = {-0.049191, 0.733393, 0, 1.0};
Point(47) = {-0.048936, 0.732958, 0, 1.0};
Point(48) = {-0.048588, 0.732451, 0, 1.0};
Point(49) = {-0.048144, 0.731907, 0, 1.0};
Point(50) = {-0.047510, 0.731255, 0, 1.0};
Point(51) = {-0.046775, 0.730618, 0, 1.0};
Point(52) = {-0.045843, 0.729930, 0, 1.0};
Point(53) = {-0.043955, 0.728781, 0, 1.0};
Point(54) = {-0.041089, 0.727382, 0, 1.0};
Point(55) = {-0.038197, 0.726219, 0, 1.0};
Point(56) = {-0.035289, 0.725207, 0, 1.0};
Point(57) = {-0.031395, 0.724010, 0, 1.0};
Point(58) = {-0.026509, 0.722686, 0, 1.0};
Point(59) = {-0.021608, 0.721492, 0, 1.0};
Point(60) = {-0.011775, 0.719414, 0, 1.0};
Point(61) = {-0.001904, 0.717679, 0, 1.0};
Point(62) = {0.007999, 0.716237, 0, 1.0};
Point(63) = {0.017930, 0.715064, 0, 1.0};
Point(64) = {0.027892, 0.714172, 0, 1.0};
Point(65) = {0.037890, 0.713617, 0, 1.0};
Point(66) = {0.047935, 0.713494, 0, 1.0};
Point(67) = {0.058027, 0.713807, 0, 1.0};
Point(68) = {0.068152, 0.714426, 0, 1.0};
Point(69) = {0.078306, 0.715320, 0, 1.0};
Point(70) = {0.088480, 0.716397, 0, 1.0};
Point(71) = {0.098656, 0.717489, 0, 1.0};
Point(72) = {0.108814, 0.718417, 0, 1.0};
Point(73) = {0.118931, 0.718959, 0, 1.0};
Point(74) = {0.128984, 0.718914, 0, 1.0};
Point(75) = {0.133981, 0.718616, 0, 1.0};
Point(76) = {0.138956, 0.718115, 0, 1.0};
Point(77) = {0.143907, 0.717394, 0, 1.0};
Point(78) = {0.146866, 0.716851, 0, 1.0};
Point(79) = {0.148834, 0.716444, 0, 1.0};
Point(80) = {-0.148857, -0.716663, 0, 1.0};
Point(81) = {-0.146912, -0.717281, 0, 1.0};
Point(82) = {-0.143998, -0.718237, 0, 1.0};
Point(83) = {-0.139146, -0.719871, 0, 1.0};
Point(84) = {-0.134296, -0.721535, 0, 1.0};
Point(85) = {-0.129448, -0.723211, 0, 1.0};
Point(86) = {-0.119752, -0.726562, 0, 1.0};
Point(87) = {-0.110047, -0.729839, 0, 1.0};
Point(88) = {-0.100325, -0.732956, 0, 1.0};
Point(89) = {-0.090578, -0.735832, 0, 1.0};
Point(90) = {-0.080797, -0.738404, 0, 1.0};
Point(91) = {-0.070979, -0.740624, 0, 1.0};
Point(92) = {-0.061126, -0.742526, 0, 1.0};
Point(93) = {-0.051246, -0.744174, 0, 1.0};
Point(94) = {-0.041343, -0.745611, 0, 1.0};
Point(95) = {-0.031419, -0.746855, 0, 1.0};
Point(96) = {-0.021475, -0.747910, 0, 1.0};
Point(97) = {-0.011510, -0.748772, 0, 1.0};
Point(98) = {-0.001523, -0.749431, 0, 1.0};
Point(99) = {0.008490, -0.749856, 0, 1.0};
Point(100) = {0.018532, -0.750000, 0, 1.0};
Point(101) = {0.023568, -0.749938, 0, 1.0};
Point(102) = {0.028617, -0.749755, 0, 1.0};
Point(103) = {0.032668, -0.749490, 0, 1.0};
Point(104) = {0.035719, -0.749185, 0, 1.0};
Point(105) = {0.038787, -0.748710, 0, 1.0};
Point(106) = {0.041888, -0.747942, 0, 1.0};
Point(107) = {0.043983, -0.747164, 0, 1.0};
Point(108) = {0.045054, -0.746558, 0, 1.0};
Point(109) = {0.045930, -0.745900, 0, 1.0};
Point(110) = {0.046714, -0.745158, 0, 1.0};
Point(111) = {0.047287, -0.744507, 0, 1.0};
Point(112) = {0.047756, -0.743890, 0, 1.0};
Point(113) = {0.048116, -0.743352, 0, 1.0};
Point(114) = {0.048486, -0.742724, 0, 1.0};
Point(115) = {0.048868, -0.741972, 0, 1.0};
Point(116) = {0.049277, -0.740987, 0, 1.0};
Point(117) = {0.049576, -0.740079, 0, 1.0};
Point(118) = {0.049744, -0.739452, 0, 1.0};
Point(119) = {0.050000, -0.738011, 0, 1.0};
Point(120) = {0.050061, -0.736513, 0, 1.0};
Point(121) = {0.050020, -0.735961, 0, 1.0};
Point(122) = {0.049897, -0.735238, 0, 1.0};
Point(123) = {0.049676, -0.734486, 0, 1.0};
Point(124) = {0.049438, -0.733895, 0, 1.0};
Point(125) = {0.049191, -0.733393, 0, 1.0};
Point(126) = {0.048936, -0.732958, 0, 1.0};
Point(127) = {0.048588, -0.732451, 0, 1.0};
Point(128) = {0.048144, -0.731907, 0, 1.0};
Point(129) = {0.047510, -0.731255, 0, 1.0};
Point(130) = {0.046775, -0.730618, 0, 1.0};
Point(131) = {0.045843, -0.729930, 0, 1.0};
Point(132) = {0.043955, -0.728781, 0, 1.0};
Point(133) = {0.041089, -0.727382, 0, 1.0};
Point(134) = {0.038197, -0.726219, 0, 1.0};
Point(135) = {0.035289, -0.725207, 0, 1.0};
Point(136) = {0.031395, -0.724010, 0, 1.0};
Point(137) = {0.026509, -0.722686, 0, 1.0};
Point(138) = {0.021608, -0.721492, 0, 1.0};
Point(139) = {0.011775, -0.719414, 0, 1.0};
Point(140) = {0.001904, -0.717679, 0, 1.0};
Point(141) = {-0.007999, -0.716237, 0, 1.0};
Point(142) = {-0.017930, -0.715064, 0, 1.0};
Point(143) = {-0.027892, -0.714172, 0, 1.0};
Point(144) = {-0.037890, -0.713617, 0, 1.0};
Point(145) = {-0.047935, -0.713494, 0, 1.0};
Point(146) = {-0.058027, -0.713807, 0, 1.0};
Point(147) = {-0.068152, -0.714426, 0, 1.0};
Point(148) = {-0.078306, -0.715320, 0, 1.0};
Point(149) = {-0.088480, -0.716397, 0, 1.0};
Point(150) = {-0.098656, -0.717489, 0, 1.0};
Point(151) = {-0.108814, -0.718417, 0, 1.0};
Point(152) = {-0.118931, -0.718959, 0, 1.0};
Point(153) = {-0.128984, -0.718914, 0, 1.0};
Point(154) = {-0.133981, -0.718616, 0, 1.0};
Point(155) = {-0.138956, -0.718115, 0, 1.0};
Point(156) = {-0.143907, -0.717394, 0, 1.0};
Point(157) = {-0.146866, -0.716851, 0, 1.0};
Point(158) = {-0.148834, -0.716444, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:62};
Spline(3) = {62:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:98};
Spline(6) = {98:141};
Spline(7) = {141:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 46 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
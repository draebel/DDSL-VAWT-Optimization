SetFactory("OpenCASCADE");

Point(1) = {0.074710, 0.722184, 0, 1.0};
Point(2) = {0.073394, 0.722748, 0, 1.0};
Point(3) = {0.070461, 0.724003, 0, 1.0};
Point(4) = {0.067262, 0.725359, 0, 1.0};
Point(5) = {0.063814, 0.726812, 0, 1.0};
Point(6) = {0.060133, 0.728361, 0, 1.0};
Point(7) = {0.056235, 0.730000, 0, 1.0};
Point(8) = {0.052134, 0.731708, 0, 1.0};
Point(9) = {0.047841, 0.733454, 0, 1.0};
Point(10) = {0.043374, 0.735205, 0, 1.0};
Point(11) = {0.038746, 0.736914, 0, 1.0};
Point(12) = {0.033972, 0.738556, 0, 1.0};
Point(13) = {0.029071, 0.740103, 0, 1.0};
Point(14) = {0.024062, 0.741544, 0, 1.0};
Point(15) = {0.018966, 0.742873, 0, 1.0};
Point(16) = {0.013808, 0.744095, 0, 1.0};
Point(17) = {0.008612, 0.745217, 0, 1.0};
Point(18) = {0.003400, 0.746237, 0, 1.0};
Point(19) = {-0.001807, 0.747138, 0, 1.0};
Point(20) = {-0.006990, 0.747916, 0, 1.0};
Point(21) = {-0.012122, 0.748564, 0, 1.0};
Point(22) = {-0.017182, 0.749088, 0, 1.0};
Point(23) = {-0.022148, 0.749494, 0, 1.0};
Point(24) = {-0.026998, 0.749784, 0, 1.0};
Point(25) = {-0.031712, 0.749952, 0, 1.0};
Point(26) = {-0.036269, 0.750000, 0, 1.0};
Point(27) = {-0.040647, 0.749927, 0, 1.0};
Point(28) = {-0.044830, 0.749740, 0, 1.0};
Point(29) = {-0.048798, 0.749450, 0, 1.0};
Point(30) = {-0.052531, 0.749071, 0, 1.0};
Point(31) = {-0.056013, 0.748606, 0, 1.0};
Point(32) = {-0.059225, 0.748070, 0, 1.0};
Point(33) = {-0.062158, 0.747464, 0, 1.0};
Point(34) = {-0.064796, 0.746800, 0, 1.0};
Point(35) = {-0.067126, 0.746072, 0, 1.0};
Point(36) = {-0.069139, 0.745308, 0, 1.0};
Point(37) = {-0.070823, 0.744506, 0, 1.0};
Point(38) = {-0.072164, 0.743728, 0, 1.0};
Point(39) = {-0.073161, 0.742949, 0, 1.0};
Point(40) = {-0.073806, 0.742193, 0, 1.0};
Point(41) = {-0.074106, 0.741393, 0, 1.0};
Point(42) = {-0.073974, 0.741111, 0, 1.0};
Point(43) = {-0.073516, 0.740667, 0, 1.0};
Point(44) = {-0.072718, 0.740170, 0, 1.0};
Point(45) = {-0.071583, 0.739625, 0, 1.0};
Point(46) = {-0.070117, 0.739029, 0, 1.0};
Point(47) = {-0.068323, 0.738386, 0, 1.0};
Point(48) = {-0.066210, 0.737722, 0, 1.0};
Point(49) = {-0.063784, 0.737022, 0, 1.0};
Point(50) = {-0.061058, 0.736302, 0, 1.0};
Point(51) = {-0.058047, 0.735545, 0, 1.0};
Point(52) = {-0.054758, 0.734774, 0, 1.0};
Point(53) = {-0.051208, 0.733974, 0, 1.0};
Point(54) = {-0.047412, 0.733168, 0, 1.0};
Point(55) = {-0.043386, 0.732344, 0, 1.0};
Point(56) = {-0.039147, 0.731519, 0, 1.0};
Point(57) = {-0.034711, 0.730697, 0, 1.0};
Point(58) = {-0.030096, 0.729892, 0, 1.0};
Point(59) = {-0.025324, 0.729108, 0, 1.0};
Point(60) = {-0.020412, 0.728354, 0, 1.0};
Point(61) = {-0.015383, 0.727624, 0, 1.0};
Point(62) = {-0.010259, 0.726927, 0, 1.0};
Point(63) = {-0.005060, 0.726259, 0, 1.0};
Point(64) = {0.000191, 0.725635, 0, 1.0};
Point(65) = {0.005473, 0.725063, 0, 1.0};
Point(66) = {0.010765, 0.724561, 0, 1.0};
Point(67) = {0.016046, 0.724127, 0, 1.0};
Point(68) = {0.021293, 0.723768, 0, 1.0};
Point(69) = {0.026480, 0.723474, 0, 1.0};
Point(70) = {0.031587, 0.723246, 0, 1.0};
Point(71) = {0.036592, 0.723089, 0, 1.0};
Point(72) = {0.041472, 0.722997, 0, 1.0};
Point(73) = {0.046204, 0.722943, 0, 1.0};
Point(74) = {0.050759, 0.722884, 0, 1.0};
Point(75) = {0.055109, 0.722775, 0, 1.0};
Point(76) = {0.059233, 0.722579, 0, 1.0};
Point(77) = {0.063111, 0.722295, 0, 1.0};
Point(78) = {0.066727, 0.721924, 0, 1.0};
Point(79) = {0.070067, 0.721478, 0, 1.0};
Point(80) = {0.073116, 0.720962, 0, 1.0};
Point(81) = {0.074478, 0.720694, 0, 1.0};
Point(82) = {-0.074710, -0.722184, 0, 1.0};
Point(83) = {-0.073394, -0.722748, 0, 1.0};
Point(84) = {-0.070461, -0.724003, 0, 1.0};
Point(85) = {-0.067262, -0.725359, 0, 1.0};
Point(86) = {-0.063814, -0.726812, 0, 1.0};
Point(87) = {-0.060133, -0.728361, 0, 1.0};
Point(88) = {-0.056235, -0.730000, 0, 1.0};
Point(89) = {-0.052134, -0.731708, 0, 1.0};
Point(90) = {-0.047841, -0.733454, 0, 1.0};
Point(91) = {-0.043374, -0.735205, 0, 1.0};
Point(92) = {-0.038746, -0.736914, 0, 1.0};
Point(93) = {-0.033972, -0.738556, 0, 1.0};
Point(94) = {-0.029071, -0.740103, 0, 1.0};
Point(95) = {-0.024062, -0.741544, 0, 1.0};
Point(96) = {-0.018966, -0.742873, 0, 1.0};
Point(97) = {-0.013808, -0.744095, 0, 1.0};
Point(98) = {-0.008612, -0.745217, 0, 1.0};
Point(99) = {-0.003400, -0.746237, 0, 1.0};
Point(100) = {0.001807, -0.747138, 0, 1.0};
Point(101) = {0.006990, -0.747916, 0, 1.0};
Point(102) = {0.012122, -0.748564, 0, 1.0};
Point(103) = {0.017182, -0.749088, 0, 1.0};
Point(104) = {0.022148, -0.749494, 0, 1.0};
Point(105) = {0.026998, -0.749784, 0, 1.0};
Point(106) = {0.031712, -0.749952, 0, 1.0};
Point(107) = {0.036269, -0.750000, 0, 1.0};
Point(108) = {0.040647, -0.749927, 0, 1.0};
Point(109) = {0.044830, -0.749740, 0, 1.0};
Point(110) = {0.048798, -0.749450, 0, 1.0};
Point(111) = {0.052531, -0.749071, 0, 1.0};
Point(112) = {0.056013, -0.748606, 0, 1.0};
Point(113) = {0.059225, -0.748070, 0, 1.0};
Point(114) = {0.062158, -0.747464, 0, 1.0};
Point(115) = {0.064796, -0.746800, 0, 1.0};
Point(116) = {0.067126, -0.746072, 0, 1.0};
Point(117) = {0.069139, -0.745308, 0, 1.0};
Point(118) = {0.070823, -0.744506, 0, 1.0};
Point(119) = {0.072164, -0.743728, 0, 1.0};
Point(120) = {0.073161, -0.742949, 0, 1.0};
Point(121) = {0.073806, -0.742193, 0, 1.0};
Point(122) = {0.074106, -0.741393, 0, 1.0};
Point(123) = {0.073974, -0.741111, 0, 1.0};
Point(124) = {0.073516, -0.740667, 0, 1.0};
Point(125) = {0.072718, -0.740170, 0, 1.0};
Point(126) = {0.071583, -0.739625, 0, 1.0};
Point(127) = {0.070117, -0.739029, 0, 1.0};
Point(128) = {0.068323, -0.738386, 0, 1.0};
Point(129) = {0.066210, -0.737722, 0, 1.0};
Point(130) = {0.063784, -0.737022, 0, 1.0};
Point(131) = {0.061058, -0.736302, 0, 1.0};
Point(132) = {0.058047, -0.735545, 0, 1.0};
Point(133) = {0.054758, -0.734774, 0, 1.0};
Point(134) = {0.051208, -0.733974, 0, 1.0};
Point(135) = {0.047412, -0.733168, 0, 1.0};
Point(136) = {0.043386, -0.732344, 0, 1.0};
Point(137) = {0.039147, -0.731519, 0, 1.0};
Point(138) = {0.034711, -0.730697, 0, 1.0};
Point(139) = {0.030096, -0.729892, 0, 1.0};
Point(140) = {0.025324, -0.729108, 0, 1.0};
Point(141) = {0.020412, -0.728354, 0, 1.0};
Point(142) = {0.015383, -0.727624, 0, 1.0};
Point(143) = {0.010259, -0.726927, 0, 1.0};
Point(144) = {0.005060, -0.726259, 0, 1.0};
Point(145) = {-0.000191, -0.725635, 0, 1.0};
Point(146) = {-0.005473, -0.725063, 0, 1.0};
Point(147) = {-0.010765, -0.724561, 0, 1.0};
Point(148) = {-0.016046, -0.724127, 0, 1.0};
Point(149) = {-0.021293, -0.723768, 0, 1.0};
Point(150) = {-0.026480, -0.723474, 0, 1.0};
Point(151) = {-0.031587, -0.723246, 0, 1.0};
Point(152) = {-0.036592, -0.723089, 0, 1.0};
Point(153) = {-0.041472, -0.722997, 0, 1.0};
Point(154) = {-0.046204, -0.722943, 0, 1.0};
Point(155) = {-0.050759, -0.722884, 0, 1.0};
Point(156) = {-0.055109, -0.722775, 0, 1.0};
Point(157) = {-0.059233, -0.722579, 0, 1.0};
Point(158) = {-0.063111, -0.722295, 0, 1.0};
Point(159) = {-0.066727, -0.721924, 0, 1.0};
Point(160) = {-0.070067, -0.721478, 0, 1.0};
Point(161) = {-0.073116, -0.720962, 0, 1.0};
Point(162) = {-0.074478, -0.720694, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {36.00000000, 15.00000000, 0, 1.0};
Point(166) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
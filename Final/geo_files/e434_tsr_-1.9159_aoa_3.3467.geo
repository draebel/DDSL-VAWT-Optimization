SetFactory("OpenCASCADE");

Point(1) = {0.074975, 0.729108, 0, 1.0};
Point(2) = {0.073776, 0.729472, 0, 1.0};
Point(3) = {0.069742, 0.730748, 0, 1.0};
Point(4) = {0.065000, 0.732228, 0, 1.0};
Point(5) = {0.059629, 0.733893, 0, 1.0};
Point(6) = {0.053720, 0.735711, 0, 1.0};
Point(7) = {0.047371, 0.737638, 0, 1.0};
Point(8) = {0.040676, 0.739625, 0, 1.0};
Point(9) = {0.033737, 0.741610, 0, 1.0};
Point(10) = {0.026650, 0.743511, 0, 1.0};
Point(11) = {0.019469, 0.745231, 0, 1.0};
Point(12) = {0.012215, 0.746707, 0, 1.0};
Point(13) = {0.004920, 0.747918, 0, 1.0};
Point(14) = {-0.002380, 0.748851, 0, 1.0};
Point(15) = {-0.009632, 0.749503, 0, 1.0};
Point(16) = {-0.016785, 0.749882, 0, 1.0};
Point(17) = {-0.023776, 0.750000, 0, 1.0};
Point(18) = {-0.030537, 0.749869, 0, 1.0};
Point(19) = {-0.037004, 0.749500, 0, 1.0};
Point(20) = {-0.043115, 0.748903, 0, 1.0};
Point(21) = {-0.048811, 0.748095, 0, 1.0};
Point(22) = {-0.054042, 0.747093, 0, 1.0};
Point(23) = {-0.058763, 0.745918, 0, 1.0};
Point(24) = {-0.062933, 0.744598, 0, 1.0};
Point(25) = {-0.066518, 0.743164, 0, 1.0};
Point(26) = {-0.069490, 0.741655, 0, 1.0};
Point(27) = {-0.071829, 0.740112, 0, 1.0};
Point(28) = {-0.073517, 0.738595, 0, 1.0};
Point(29) = {-0.074538, 0.737173, 0, 1.0};
Point(30) = {-0.074741, 0.736698, 0, 1.0};
Point(31) = {-0.074841, 0.736330, 0, 1.0};
Point(32) = {-0.074872, 0.736100, 0, 1.0};
Point(33) = {-0.074875, 0.735888, 0, 1.0};
Point(34) = {-0.074865, 0.735788, 0, 1.0};
Point(35) = {-0.074845, 0.735696, 0, 1.0};
Point(36) = {-0.074814, 0.735613, 0, 1.0};
Point(37) = {-0.074769, 0.735533, 0, 1.0};
Point(38) = {-0.074706, 0.735456, 0, 1.0};
Point(39) = {-0.074630, 0.735376, 0, 1.0};
Point(40) = {-0.074446, 0.735221, 0, 1.0};
Point(41) = {-0.074218, 0.735064, 0, 1.0};
Point(42) = {-0.073803, 0.734831, 0, 1.0};
Point(43) = {-0.072645, 0.734335, 0, 1.0};
Point(44) = {-0.070106, 0.733601, 0, 1.0};
Point(45) = {-0.066696, 0.732932, 0, 1.0};
Point(46) = {-0.062453, 0.732320, 0, 1.0};
Point(47) = {-0.057420, 0.731757, 0, 1.0};
Point(48) = {-0.051654, 0.731225, 0, 1.0};
Point(49) = {-0.045235, 0.730715, 0, 1.0};
Point(50) = {-0.038242, 0.730224, 0, 1.0};
Point(51) = {-0.030766, 0.729749, 0, 1.0};
Point(52) = {-0.022896, 0.729289, 0, 1.0};
Point(53) = {-0.014736, 0.728845, 0, 1.0};
Point(54) = {-0.006386, 0.728423, 0, 1.0};
Point(55) = {0.002049, 0.728033, 0, 1.0};
Point(56) = {0.010465, 0.727680, 0, 1.0};
Point(57) = {0.018761, 0.727385, 0, 1.0};
Point(58) = {0.026832, 0.727163, 0, 1.0};
Point(59) = {0.034582, 0.727065, 0, 1.0};
Point(60) = {0.042005, 0.727145, 0, 1.0};
Point(61) = {0.049108, 0.727333, 0, 1.0};
Point(62) = {0.055808, 0.727549, 0, 1.0};
Point(63) = {0.062020, 0.727730, 0, 1.0};
Point(64) = {0.067625, 0.727800, 0, 1.0};
Point(65) = {0.072465, 0.727726, 0, 1.0};
Point(66) = {0.074888, 0.727618, 0, 1.0};
Point(67) = {-0.074975, -0.729108, 0, 1.0};
Point(68) = {-0.073776, -0.729472, 0, 1.0};
Point(69) = {-0.069742, -0.730748, 0, 1.0};
Point(70) = {-0.065000, -0.732228, 0, 1.0};
Point(71) = {-0.059629, -0.733893, 0, 1.0};
Point(72) = {-0.053720, -0.735711, 0, 1.0};
Point(73) = {-0.047371, -0.737638, 0, 1.0};
Point(74) = {-0.040676, -0.739625, 0, 1.0};
Point(75) = {-0.033737, -0.741610, 0, 1.0};
Point(76) = {-0.026650, -0.743511, 0, 1.0};
Point(77) = {-0.019469, -0.745231, 0, 1.0};
Point(78) = {-0.012215, -0.746707, 0, 1.0};
Point(79) = {-0.004920, -0.747918, 0, 1.0};
Point(80) = {0.002380, -0.748851, 0, 1.0};
Point(81) = {0.009632, -0.749503, 0, 1.0};
Point(82) = {0.016785, -0.749882, 0, 1.0};
Point(83) = {0.023776, -0.750000, 0, 1.0};
Point(84) = {0.030537, -0.749869, 0, 1.0};
Point(85) = {0.037004, -0.749500, 0, 1.0};
Point(86) = {0.043115, -0.748903, 0, 1.0};
Point(87) = {0.048811, -0.748095, 0, 1.0};
Point(88) = {0.054042, -0.747093, 0, 1.0};
Point(89) = {0.058763, -0.745918, 0, 1.0};
Point(90) = {0.062933, -0.744598, 0, 1.0};
Point(91) = {0.066518, -0.743164, 0, 1.0};
Point(92) = {0.069490, -0.741655, 0, 1.0};
Point(93) = {0.071829, -0.740112, 0, 1.0};
Point(94) = {0.073517, -0.738595, 0, 1.0};
Point(95) = {0.074538, -0.737173, 0, 1.0};
Point(96) = {0.074741, -0.736698, 0, 1.0};
Point(97) = {0.074841, -0.736330, 0, 1.0};
Point(98) = {0.074872, -0.736100, 0, 1.0};
Point(99) = {0.074875, -0.735888, 0, 1.0};
Point(100) = {0.074865, -0.735788, 0, 1.0};
Point(101) = {0.074845, -0.735696, 0, 1.0};
Point(102) = {0.074814, -0.735613, 0, 1.0};
Point(103) = {0.074769, -0.735533, 0, 1.0};
Point(104) = {0.074706, -0.735456, 0, 1.0};
Point(105) = {0.074630, -0.735376, 0, 1.0};
Point(106) = {0.074446, -0.735221, 0, 1.0};
Point(107) = {0.074218, -0.735064, 0, 1.0};
Point(108) = {0.073803, -0.734831, 0, 1.0};
Point(109) = {0.072645, -0.734335, 0, 1.0};
Point(110) = {0.070106, -0.733601, 0, 1.0};
Point(111) = {0.066696, -0.732932, 0, 1.0};
Point(112) = {0.062453, -0.732320, 0, 1.0};
Point(113) = {0.057420, -0.731757, 0, 1.0};
Point(114) = {0.051654, -0.731225, 0, 1.0};
Point(115) = {0.045235, -0.730715, 0, 1.0};
Point(116) = {0.038242, -0.730224, 0, 1.0};
Point(117) = {0.030766, -0.729749, 0, 1.0};
Point(118) = {0.022896, -0.729289, 0, 1.0};
Point(119) = {0.014736, -0.728845, 0, 1.0};
Point(120) = {0.006386, -0.728423, 0, 1.0};
Point(121) = {-0.002049, -0.728033, 0, 1.0};
Point(122) = {-0.010465, -0.727680, 0, 1.0};
Point(123) = {-0.018761, -0.727385, 0, 1.0};
Point(124) = {-0.026832, -0.727163, 0, 1.0};
Point(125) = {-0.034582, -0.727065, 0, 1.0};
Point(126) = {-0.042005, -0.727145, 0, 1.0};
Point(127) = {-0.049108, -0.727333, 0, 1.0};
Point(128) = {-0.055808, -0.727549, 0, 1.0};
Point(129) = {-0.062020, -0.727730, 0, 1.0};
Point(130) = {-0.067625, -0.727800, 0, 1.0};
Point(131) = {-0.072465, -0.727726, 0, 1.0};
Point(132) = {-0.074888, -0.727618, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.147904, 0.710736, 0, 1.0};
Point(2) = {0.147210, 0.710938, 0, 1.0};
Point(3) = {0.145205, 0.711572, 0, 1.0};
Point(4) = {0.142041, 0.712663, 0, 1.0};
Point(5) = {0.137847, 0.714146, 0, 1.0};
Point(6) = {0.132689, 0.715943, 0, 1.0};
Point(7) = {0.126611, 0.718025, 0, 1.0};
Point(8) = {0.119698, 0.720376, 0, 1.0};
Point(9) = {0.112064, 0.722973, 0, 1.0};
Point(10) = {0.103822, 0.725766, 0, 1.0};
Point(11) = {0.095096, 0.728709, 0, 1.0};
Point(12) = {0.086008, 0.731735, 0, 1.0};
Point(13) = {0.076685, 0.734777, 0, 1.0};
Point(14) = {0.067252, 0.737751, 0, 1.0};
Point(15) = {0.057829, 0.740548, 0, 1.0};
Point(16) = {0.048478, 0.743047, 0, 1.0};
Point(17) = {0.039208, 0.745178, 0, 1.0};
Point(18) = {0.030064, 0.746922, 0, 1.0};
Point(19) = {0.021097, 0.748269, 0, 1.0};
Point(20) = {0.012360, 0.749215, 0, 1.0};
Point(21) = {0.003898, 0.749778, 0, 1.0};
Point(22) = {-0.004215, 0.750000, 0, 1.0};
Point(23) = {-0.011890, 0.749911, 0, 1.0};
Point(24) = {-0.019045, 0.749533, 0, 1.0};
Point(25) = {-0.025602, 0.748884, 0, 1.0};
Point(26) = {-0.031494, 0.747992, 0, 1.0};
Point(27) = {-0.036661, 0.746882, 0, 1.0};
Point(28) = {-0.041051, 0.745591, 0, 1.0};
Point(29) = {-0.044618, 0.744157, 0, 1.0};
Point(30) = {-0.047328, 0.742632, 0, 1.0};
Point(31) = {-0.049142, 0.741090, 0, 1.0};
Point(32) = {-0.049993, 0.739660, 0, 1.0};
Point(33) = {-0.049632, 0.738273, 0, 1.0};
Point(34) = {-0.048065, 0.736755, 0, 1.0};
Point(35) = {-0.045490, 0.735134, 0, 1.0};
Point(36) = {-0.041925, 0.733480, 0, 1.0};
Point(37) = {-0.037399, 0.731819, 0, 1.0};
Point(38) = {-0.031953, 0.730178, 0, 1.0};
Point(39) = {-0.025634, 0.728576, 0, 1.0};
Point(40) = {-0.018502, 0.727026, 0, 1.0};
Point(41) = {-0.010629, 0.725546, 0, 1.0};
Point(42) = {-0.002096, 0.724143, 0, 1.0};
Point(43) = {0.007001, 0.722836, 0, 1.0};
Point(44) = {0.016567, 0.721658, 0, 1.0};
Point(45) = {0.026536, 0.720650, 0, 1.0};
Point(46) = {0.036878, 0.719788, 0, 1.0};
Point(47) = {0.047491, 0.718997, 0, 1.0};
Point(48) = {0.058230, 0.718239, 0, 1.0};
Point(49) = {0.068946, 0.717490, 0, 1.0};
Point(50) = {0.079491, 0.716743, 0, 1.0};
Point(51) = {0.089722, 0.715996, 0, 1.0};
Point(52) = {0.099498, 0.715249, 0, 1.0};
Point(53) = {0.108684, 0.714509, 0, 1.0};
Point(54) = {0.117150, 0.713786, 0, 1.0};
Point(55) = {0.124779, 0.713100, 0, 1.0};
Point(56) = {0.131459, 0.712475, 0, 1.0};
Point(57) = {0.137109, 0.711943, 0, 1.0};
Point(58) = {0.141678, 0.711503, 0, 1.0};
Point(59) = {0.145076, 0.711132, 0, 1.0};
Point(60) = {0.147187, 0.710849, 0, 1.0};
Point(61) = {-0.147904, -0.710736, 0, 1.0};
Point(62) = {-0.147210, -0.710938, 0, 1.0};
Point(63) = {-0.145205, -0.711572, 0, 1.0};
Point(64) = {-0.142041, -0.712663, 0, 1.0};
Point(65) = {-0.137847, -0.714146, 0, 1.0};
Point(66) = {-0.132689, -0.715943, 0, 1.0};
Point(67) = {-0.126611, -0.718025, 0, 1.0};
Point(68) = {-0.119698, -0.720376, 0, 1.0};
Point(69) = {-0.112064, -0.722973, 0, 1.0};
Point(70) = {-0.103822, -0.725766, 0, 1.0};
Point(71) = {-0.095096, -0.728709, 0, 1.0};
Point(72) = {-0.086008, -0.731735, 0, 1.0};
Point(73) = {-0.076685, -0.734777, 0, 1.0};
Point(74) = {-0.067252, -0.737751, 0, 1.0};
Point(75) = {-0.057829, -0.740548, 0, 1.0};
Point(76) = {-0.048478, -0.743047, 0, 1.0};
Point(77) = {-0.039208, -0.745178, 0, 1.0};
Point(78) = {-0.030064, -0.746922, 0, 1.0};
Point(79) = {-0.021097, -0.748269, 0, 1.0};
Point(80) = {-0.012360, -0.749215, 0, 1.0};
Point(81) = {-0.003898, -0.749778, 0, 1.0};
Point(82) = {0.004215, -0.750000, 0, 1.0};
Point(83) = {0.011890, -0.749911, 0, 1.0};
Point(84) = {0.019045, -0.749533, 0, 1.0};
Point(85) = {0.025602, -0.748884, 0, 1.0};
Point(86) = {0.031494, -0.747992, 0, 1.0};
Point(87) = {0.036661, -0.746882, 0, 1.0};
Point(88) = {0.041051, -0.745591, 0, 1.0};
Point(89) = {0.044618, -0.744157, 0, 1.0};
Point(90) = {0.047328, -0.742632, 0, 1.0};
Point(91) = {0.049142, -0.741090, 0, 1.0};
Point(92) = {0.049993, -0.739660, 0, 1.0};
Point(93) = {0.049632, -0.738273, 0, 1.0};
Point(94) = {0.048065, -0.736755, 0, 1.0};
Point(95) = {0.045490, -0.735134, 0, 1.0};
Point(96) = {0.041925, -0.733480, 0, 1.0};
Point(97) = {0.037399, -0.731819, 0, 1.0};
Point(98) = {0.031953, -0.730178, 0, 1.0};
Point(99) = {0.025634, -0.728576, 0, 1.0};
Point(100) = {0.018502, -0.727026, 0, 1.0};
Point(101) = {0.010629, -0.725546, 0, 1.0};
Point(102) = {0.002096, -0.724143, 0, 1.0};
Point(103) = {-0.007001, -0.722836, 0, 1.0};
Point(104) = {-0.016567, -0.721658, 0, 1.0};
Point(105) = {-0.026536, -0.720650, 0, 1.0};
Point(106) = {-0.036878, -0.719788, 0, 1.0};
Point(107) = {-0.047491, -0.718997, 0, 1.0};
Point(108) = {-0.058230, -0.718239, 0, 1.0};
Point(109) = {-0.068946, -0.717490, 0, 1.0};
Point(110) = {-0.079491, -0.716743, 0, 1.0};
Point(111) = {-0.089722, -0.715996, 0, 1.0};
Point(112) = {-0.099498, -0.715249, 0, 1.0};
Point(113) = {-0.108684, -0.714509, 0, 1.0};
Point(114) = {-0.117150, -0.713786, 0, 1.0};
Point(115) = {-0.124779, -0.713100, 0, 1.0};
Point(116) = {-0.131459, -0.712475, 0, 1.0};
Point(117) = {-0.137109, -0.711943, 0, 1.0};
Point(118) = {-0.141678, -0.711503, 0, 1.0};
Point(119) = {-0.145076, -0.711132, 0, 1.0};
Point(120) = {-0.147187, -0.710849, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:103};
Spline(7) = {103:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
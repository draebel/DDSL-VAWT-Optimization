SetFactory("OpenCASCADE");

Point(1) = {0.074936, 0.741248, 0, 1.0};
Point(2) = {0.071625, 0.741738, 0, 1.0};
Point(3) = {0.067644, 0.742301, 0, 1.0};
Point(4) = {0.063663, 0.742876, 0, 1.0};
Point(5) = {0.059681, 0.743459, 0, 1.0};
Point(6) = {0.055699, 0.744062, 0, 1.0};
Point(7) = {0.051717, 0.744670, 0, 1.0};
Point(8) = {0.043754, 0.745831, 0, 1.0};
Point(9) = {0.035794, 0.746895, 0, 1.0};
Point(10) = {0.027836, 0.747834, 0, 1.0};
Point(11) = {0.019883, 0.748642, 0, 1.0};
Point(12) = {0.011933, 0.749281, 0, 1.0};
Point(13) = {0.003989, 0.749725, 0, 1.0};
Point(14) = {-0.003950, 0.749963, 0, 1.0};
Point(15) = {-0.011883, 0.750000, 0, 1.0};
Point(16) = {-0.015848, 0.749947, 0, 1.0};
Point(17) = {-0.019812, 0.749846, 0, 1.0};
Point(18) = {-0.023774, 0.749687, 0, 1.0};
Point(19) = {-0.027734, 0.749463, 0, 1.0};
Point(20) = {-0.031693, 0.749177, 0, 1.0};
Point(21) = {-0.035651, 0.748841, 0, 1.0};
Point(22) = {-0.039607, 0.748467, 0, 1.0};
Point(23) = {-0.043562, 0.748033, 0, 1.0};
Point(24) = {-0.047515, 0.747515, 0, 1.0};
Point(25) = {-0.051465, 0.746877, 0, 1.0};
Point(26) = {-0.055410, 0.746081, 0, 1.0};
Point(27) = {-0.059351, 0.745099, 0, 1.0};
Point(28) = {-0.063286, 0.743899, 0, 1.0};
Point(29) = {-0.067213, 0.742405, 0, 1.0};
Point(30) = {-0.069172, 0.741499, 0, 1.0};
Point(31) = {-0.071127, 0.740423, 0, 1.0};
Point(32) = {-0.072102, 0.739783, 0, 1.0};
Point(33) = {-0.073073, 0.739007, 0, 1.0};
Point(34) = {-0.073654, 0.738449, 0, 1.0};
Point(35) = {-0.074230, 0.737730, 0, 1.0};
Point(36) = {-0.074609, 0.737071, 0, 1.0};
Point(37) = {-0.074974, 0.735870, 0, 1.0};
Point(38) = {-0.074557, 0.735074, 0, 1.0};
Point(39) = {-0.074150, 0.734703, 0, 1.0};
Point(40) = {-0.073545, 0.734281, 0, 1.0};
Point(41) = {-0.072941, 0.733945, 0, 1.0};
Point(42) = {-0.071937, 0.733497, 0, 1.0};
Point(43) = {-0.070937, 0.733157, 0, 1.0};
Point(44) = {-0.068940, 0.732628, 0, 1.0};
Point(45) = {-0.066946, 0.732231, 0, 1.0};
Point(46) = {-0.062965, 0.731652, 0, 1.0};
Point(47) = {-0.058988, 0.731251, 0, 1.0};
Point(48) = {-0.055014, 0.730970, 0, 1.0};
Point(49) = {-0.051043, 0.730777, 0, 1.0};
Point(50) = {-0.047074, 0.730656, 0, 1.0};
Point(51) = {-0.043106, 0.730590, 0, 1.0};
Point(52) = {-0.039139, 0.730562, 0, 1.0};
Point(53) = {-0.035172, 0.730568, 0, 1.0};
Point(54) = {-0.031207, 0.730602, 0, 1.0};
Point(55) = {-0.027242, 0.730660, 0, 1.0};
Point(56) = {-0.023278, 0.730744, 0, 1.0};
Point(57) = {-0.019315, 0.730864, 0, 1.0};
Point(58) = {-0.015353, 0.731033, 0, 1.0};
Point(59) = {-0.011392, 0.731251, 0, 1.0};
Point(60) = {-0.003474, 0.731796, 0, 1.0};
Point(61) = {0.004440, 0.732489, 0, 1.0};
Point(62) = {0.012352, 0.733310, 0, 1.0};
Point(63) = {0.020260, 0.734239, 0, 1.0};
Point(64) = {0.028166, 0.735237, 0, 1.0};
Point(65) = {0.036073, 0.736242, 0, 1.0};
Point(66) = {0.043980, 0.737216, 0, 1.0};
Point(67) = {0.051889, 0.738102, 0, 1.0};
Point(68) = {0.055845, 0.738493, 0, 1.0};
Point(69) = {0.059802, 0.738842, 0, 1.0};
Point(70) = {0.063761, 0.739130, 0, 1.0};
Point(71) = {0.067721, 0.739376, 0, 1.0};
Point(72) = {0.071682, 0.739562, 0, 1.0};
Point(73) = {0.074976, 0.739724, 0, 1.0};
Point(74) = {-0.074936, -0.741248, 0, 1.0};
Point(75) = {-0.071625, -0.741738, 0, 1.0};
Point(76) = {-0.067644, -0.742301, 0, 1.0};
Point(77) = {-0.063663, -0.742876, 0, 1.0};
Point(78) = {-0.059681, -0.743459, 0, 1.0};
Point(79) = {-0.055699, -0.744062, 0, 1.0};
Point(80) = {-0.051717, -0.744670, 0, 1.0};
Point(81) = {-0.043754, -0.745831, 0, 1.0};
Point(82) = {-0.035794, -0.746895, 0, 1.0};
Point(83) = {-0.027836, -0.747834, 0, 1.0};
Point(84) = {-0.019883, -0.748642, 0, 1.0};
Point(85) = {-0.011933, -0.749281, 0, 1.0};
Point(86) = {-0.003989, -0.749725, 0, 1.0};
Point(87) = {0.003950, -0.749963, 0, 1.0};
Point(88) = {0.011883, -0.750000, 0, 1.0};
Point(89) = {0.015848, -0.749947, 0, 1.0};
Point(90) = {0.019812, -0.749846, 0, 1.0};
Point(91) = {0.023774, -0.749687, 0, 1.0};
Point(92) = {0.027734, -0.749463, 0, 1.0};
Point(93) = {0.031693, -0.749177, 0, 1.0};
Point(94) = {0.035651, -0.748841, 0, 1.0};
Point(95) = {0.039607, -0.748467, 0, 1.0};
Point(96) = {0.043562, -0.748033, 0, 1.0};
Point(97) = {0.047515, -0.747515, 0, 1.0};
Point(98) = {0.051465, -0.746877, 0, 1.0};
Point(99) = {0.055410, -0.746081, 0, 1.0};
Point(100) = {0.059351, -0.745099, 0, 1.0};
Point(101) = {0.063286, -0.743899, 0, 1.0};
Point(102) = {0.067213, -0.742405, 0, 1.0};
Point(103) = {0.069172, -0.741499, 0, 1.0};
Point(104) = {0.071127, -0.740423, 0, 1.0};
Point(105) = {0.072102, -0.739783, 0, 1.0};
Point(106) = {0.073073, -0.739007, 0, 1.0};
Point(107) = {0.073654, -0.738449, 0, 1.0};
Point(108) = {0.074230, -0.737730, 0, 1.0};
Point(109) = {0.074609, -0.737071, 0, 1.0};
Point(110) = {0.074974, -0.735870, 0, 1.0};
Point(111) = {0.074557, -0.735074, 0, 1.0};
Point(112) = {0.074150, -0.734703, 0, 1.0};
Point(113) = {0.073545, -0.734281, 0, 1.0};
Point(114) = {0.072941, -0.733945, 0, 1.0};
Point(115) = {0.071937, -0.733497, 0, 1.0};
Point(116) = {0.070937, -0.733157, 0, 1.0};
Point(117) = {0.068940, -0.732628, 0, 1.0};
Point(118) = {0.066946, -0.732231, 0, 1.0};
Point(119) = {0.062965, -0.731652, 0, 1.0};
Point(120) = {0.058988, -0.731251, 0, 1.0};
Point(121) = {0.055014, -0.730970, 0, 1.0};
Point(122) = {0.051043, -0.730777, 0, 1.0};
Point(123) = {0.047074, -0.730656, 0, 1.0};
Point(124) = {0.043106, -0.730590, 0, 1.0};
Point(125) = {0.039139, -0.730562, 0, 1.0};
Point(126) = {0.035172, -0.730568, 0, 1.0};
Point(127) = {0.031207, -0.730602, 0, 1.0};
Point(128) = {0.027242, -0.730660, 0, 1.0};
Point(129) = {0.023278, -0.730744, 0, 1.0};
Point(130) = {0.019315, -0.730864, 0, 1.0};
Point(131) = {0.015353, -0.731033, 0, 1.0};
Point(132) = {0.011392, -0.731251, 0, 1.0};
Point(133) = {0.003474, -0.731796, 0, 1.0};
Point(134) = {-0.004440, -0.732489, 0, 1.0};
Point(135) = {-0.012352, -0.733310, 0, 1.0};
Point(136) = {-0.020260, -0.734239, 0, 1.0};
Point(137) = {-0.028166, -0.735237, 0, 1.0};
Point(138) = {-0.036073, -0.736242, 0, 1.0};
Point(139) = {-0.043980, -0.737216, 0, 1.0};
Point(140) = {-0.051889, -0.738102, 0, 1.0};
Point(141) = {-0.055845, -0.738493, 0, 1.0};
Point(142) = {-0.059802, -0.738842, 0, 1.0};
Point(143) = {-0.063761, -0.739130, 0, 1.0};
Point(144) = {-0.067721, -0.739376, 0, 1.0};
Point(145) = {-0.071682, -0.739562, 0, 1.0};
Point(146) = {-0.074976, -0.739724, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {36.00000000, 15.00000000, 0, 1.0};
Point(150) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
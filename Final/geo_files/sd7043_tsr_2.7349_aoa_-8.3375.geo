SetFactory("OpenCASCADE");

Point(1) = {0.111249, 0.748675, 0, 1.0};
Point(2) = {0.110765, 0.748674, 0, 1.0};
Point(3) = {0.109331, 0.748684, 0, 1.0};
Point(4) = {0.106996, 0.748736, 0, 1.0};
Point(5) = {0.103824, 0.748843, 0, 1.0};
Point(6) = {0.099891, 0.749005, 0, 1.0};
Point(7) = {0.095277, 0.749212, 0, 1.0};
Point(8) = {0.090065, 0.749443, 0, 1.0};
Point(9) = {0.084333, 0.749669, 0, 1.0};
Point(10) = {0.078162, 0.749862, 0, 1.0};
Point(11) = {0.071627, 0.749982, 0, 1.0};
Point(12) = {0.064793, 0.750000, 0, 1.0};
Point(13) = {0.057717, 0.749891, 0, 1.0};
Point(14) = {0.050463, 0.749649, 0, 1.0};
Point(15) = {0.043099, 0.749267, 0, 1.0};
Point(16) = {0.035700, 0.748747, 0, 1.0};
Point(17) = {0.028340, 0.748083, 0, 1.0};
Point(18) = {0.021086, 0.747276, 0, 1.0};
Point(19) = {0.014009, 0.746331, 0, 1.0};
Point(20) = {0.007176, 0.745257, 0, 1.0};
Point(21) = {0.000651, 0.744063, 0, 1.0};
Point(22) = {-0.005501, 0.742762, 0, 1.0};
Point(23) = {-0.011224, 0.741367, 0, 1.0};
Point(24) = {-0.016461, 0.739893, 0, 1.0};
Point(25) = {-0.021168, 0.738353, 0, 1.0};
Point(26) = {-0.025305, 0.736763, 0, 1.0};
Point(27) = {-0.028844, 0.735140, 0, 1.0};
Point(28) = {-0.031763, 0.733508, 0, 1.0};
Point(29) = {-0.034056, 0.731893, 0, 1.0};
Point(30) = {-0.035719, 0.730331, 0, 1.0};
Point(31) = {-0.036755, 0.728860, 0, 1.0};
Point(32) = {-0.037206, 0.727532, 0, 1.0};
Point(33) = {-0.037104, 0.726512, 0, 1.0};
Point(34) = {-0.036250, 0.725891, 0, 1.0};
Point(35) = {-0.034513, 0.725569, 0, 1.0};
Point(36) = {-0.031990, 0.725481, 0, 1.0};
Point(37) = {-0.028710, 0.725632, 0, 1.0};
Point(38) = {-0.024698, 0.726019, 0, 1.0};
Point(39) = {-0.019991, 0.726627, 0, 1.0};
Point(40) = {-0.014633, 0.727438, 0, 1.0};
Point(41) = {-0.008677, 0.728436, 0, 1.0};
Point(42) = {-0.002181, 0.729599, 0, 1.0};
Point(43) = {0.004786, 0.730905, 0, 1.0};
Point(44) = {0.012153, 0.732326, 0, 1.0};
Point(45) = {0.019840, 0.733837, 0, 1.0};
Point(46) = {0.027765, 0.735404, 0, 1.0};
Point(47) = {0.035836, 0.736998, 0, 1.0};
Point(48) = {0.043963, 0.738590, 0, 1.0};
Point(49) = {0.052049, 0.740145, 0, 1.0};
Point(50) = {0.059997, 0.741636, 0, 1.0};
Point(51) = {0.067711, 0.743033, 0, 1.0};
Point(52) = {0.075091, 0.744309, 0, 1.0};
Point(53) = {0.082040, 0.745438, 0, 1.0};
Point(54) = {0.088459, 0.746402, 0, 1.0};
Point(55) = {0.094253, 0.747176, 0, 1.0};
Point(56) = {0.099321, 0.747755, 0, 1.0};
Point(57) = {0.103561, 0.748155, 0, 1.0};
Point(58) = {0.106904, 0.748415, 0, 1.0};
Point(59) = {0.109312, 0.748572, 0, 1.0};
Point(60) = {0.110764, 0.748651, 0, 1.0};
Point(61) = {0.111251, 0.748675, 0, 1.0};
Point(62) = {-0.111249, -0.748675, 0, 1.0};
Point(63) = {-0.110765, -0.748674, 0, 1.0};
Point(64) = {-0.109331, -0.748684, 0, 1.0};
Point(65) = {-0.106996, -0.748736, 0, 1.0};
Point(66) = {-0.103824, -0.748843, 0, 1.0};
Point(67) = {-0.099891, -0.749005, 0, 1.0};
Point(68) = {-0.095277, -0.749212, 0, 1.0};
Point(69) = {-0.090065, -0.749443, 0, 1.0};
Point(70) = {-0.084333, -0.749669, 0, 1.0};
Point(71) = {-0.078162, -0.749862, 0, 1.0};
Point(72) = {-0.071627, -0.749982, 0, 1.0};
Point(73) = {-0.064793, -0.750000, 0, 1.0};
Point(74) = {-0.057717, -0.749891, 0, 1.0};
Point(75) = {-0.050463, -0.749649, 0, 1.0};
Point(76) = {-0.043099, -0.749267, 0, 1.0};
Point(77) = {-0.035700, -0.748747, 0, 1.0};
Point(78) = {-0.028340, -0.748083, 0, 1.0};
Point(79) = {-0.021086, -0.747276, 0, 1.0};
Point(80) = {-0.014009, -0.746331, 0, 1.0};
Point(81) = {-0.007176, -0.745257, 0, 1.0};
Point(82) = {-0.000651, -0.744063, 0, 1.0};
Point(83) = {0.005501, -0.742762, 0, 1.0};
Point(84) = {0.011224, -0.741367, 0, 1.0};
Point(85) = {0.016461, -0.739893, 0, 1.0};
Point(86) = {0.021168, -0.738353, 0, 1.0};
Point(87) = {0.025305, -0.736763, 0, 1.0};
Point(88) = {0.028844, -0.735140, 0, 1.0};
Point(89) = {0.031763, -0.733508, 0, 1.0};
Point(90) = {0.034056, -0.731893, 0, 1.0};
Point(91) = {0.035719, -0.730331, 0, 1.0};
Point(92) = {0.036755, -0.728860, 0, 1.0};
Point(93) = {0.037206, -0.727532, 0, 1.0};
Point(94) = {0.037104, -0.726512, 0, 1.0};
Point(95) = {0.036250, -0.725891, 0, 1.0};
Point(96) = {0.034513, -0.725569, 0, 1.0};
Point(97) = {0.031990, -0.725481, 0, 1.0};
Point(98) = {0.028710, -0.725632, 0, 1.0};
Point(99) = {0.024698, -0.726019, 0, 1.0};
Point(100) = {0.019991, -0.726627, 0, 1.0};
Point(101) = {0.014633, -0.727438, 0, 1.0};
Point(102) = {0.008677, -0.728436, 0, 1.0};
Point(103) = {0.002181, -0.729599, 0, 1.0};
Point(104) = {-0.004786, -0.730905, 0, 1.0};
Point(105) = {-0.012153, -0.732326, 0, 1.0};
Point(106) = {-0.019840, -0.733837, 0, 1.0};
Point(107) = {-0.027765, -0.735404, 0, 1.0};
Point(108) = {-0.035836, -0.736998, 0, 1.0};
Point(109) = {-0.043963, -0.738590, 0, 1.0};
Point(110) = {-0.052049, -0.740145, 0, 1.0};
Point(111) = {-0.059997, -0.741636, 0, 1.0};
Point(112) = {-0.067711, -0.743033, 0, 1.0};
Point(113) = {-0.075091, -0.744309, 0, 1.0};
Point(114) = {-0.082040, -0.745438, 0, 1.0};
Point(115) = {-0.088459, -0.746402, 0, 1.0};
Point(116) = {-0.094253, -0.747176, 0, 1.0};
Point(117) = {-0.099321, -0.747755, 0, 1.0};
Point(118) = {-0.103561, -0.748155, 0, 1.0};
Point(119) = {-0.106904, -0.748415, 0, 1.0};
Point(120) = {-0.109312, -0.748572, 0, 1.0};
Point(121) = {-0.110764, -0.748651, 0, 1.0};
Point(122) = {-0.111251, -0.748675, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.111098, 0.748677, 0, 1.0};
Point(2) = {0.110615, 0.748675, 0, 1.0};
Point(3) = {0.109181, 0.748685, 0, 1.0};
Point(4) = {0.106849, 0.748737, 0, 1.0};
Point(5) = {0.103680, 0.748844, 0, 1.0};
Point(6) = {0.099752, 0.749006, 0, 1.0};
Point(7) = {0.095142, 0.749213, 0, 1.0};
Point(8) = {0.089935, 0.749444, 0, 1.0};
Point(9) = {0.084210, 0.749670, 0, 1.0};
Point(10) = {0.078045, 0.749862, 0, 1.0};
Point(11) = {0.071516, 0.749982, 0, 1.0};
Point(12) = {0.064689, 0.750000, 0, 1.0};
Point(13) = {0.057621, 0.749892, 0, 1.0};
Point(14) = {0.050374, 0.749649, 0, 1.0};
Point(15) = {0.043017, 0.749268, 0, 1.0};
Point(16) = {0.035626, 0.748749, 0, 1.0};
Point(17) = {0.028273, 0.748085, 0, 1.0};
Point(18) = {0.021027, 0.747279, 0, 1.0};
Point(19) = {0.013957, 0.746335, 0, 1.0};
Point(20) = {0.007131, 0.745262, 0, 1.0};
Point(21) = {0.000613, 0.744069, 0, 1.0};
Point(22) = {-0.005534, 0.742770, 0, 1.0};
Point(23) = {-0.011251, 0.741376, 0, 1.0};
Point(24) = {-0.016482, 0.739903, 0, 1.0};
Point(25) = {-0.021185, 0.738365, 0, 1.0};
Point(26) = {-0.025317, 0.736776, 0, 1.0};
Point(27) = {-0.028853, 0.735155, 0, 1.0};
Point(28) = {-0.031768, 0.733524, 0, 1.0};
Point(29) = {-0.034059, 0.731911, 0, 1.0};
Point(30) = {-0.035720, 0.730351, 0, 1.0};
Point(31) = {-0.036755, 0.728881, 0, 1.0};
Point(32) = {-0.037206, 0.727555, 0, 1.0};
Point(33) = {-0.037104, 0.726536, 0, 1.0};
Point(34) = {-0.036251, 0.725916, 0, 1.0};
Point(35) = {-0.034515, 0.725594, 0, 1.0};
Point(36) = {-0.031995, 0.725506, 0, 1.0};
Point(37) = {-0.028718, 0.725657, 0, 1.0};
Point(38) = {-0.024711, 0.726043, 0, 1.0};
Point(39) = {-0.020009, 0.726650, 0, 1.0};
Point(40) = {-0.014656, 0.727461, 0, 1.0};
Point(41) = {-0.008706, 0.728458, 0, 1.0};
Point(42) = {-0.002217, 0.729620, 0, 1.0};
Point(43) = {0.004744, 0.730925, 0, 1.0};
Point(44) = {0.012103, 0.732344, 0, 1.0};
Point(45) = {0.019782, 0.733853, 0, 1.0};
Point(46) = {0.027699, 0.735419, 0, 1.0};
Point(47) = {0.035761, 0.737012, 0, 1.0};
Point(48) = {0.043880, 0.738601, 0, 1.0};
Point(49) = {0.051958, 0.740155, 0, 1.0};
Point(50) = {0.059898, 0.741644, 0, 1.0};
Point(51) = {0.067604, 0.743040, 0, 1.0};
Point(52) = {0.074977, 0.744315, 0, 1.0};
Point(53) = {0.081918, 0.745443, 0, 1.0};
Point(54) = {0.088331, 0.746405, 0, 1.0};
Point(55) = {0.094119, 0.747179, 0, 1.0};
Point(56) = {0.099182, 0.747758, 0, 1.0};
Point(57) = {0.103417, 0.748157, 0, 1.0};
Point(58) = {0.106757, 0.748416, 0, 1.0};
Point(59) = {0.109163, 0.748573, 0, 1.0};
Point(60) = {0.110613, 0.748653, 0, 1.0};
Point(61) = {0.111099, 0.748677, 0, 1.0};
Point(62) = {-0.111098, -0.748677, 0, 1.0};
Point(63) = {-0.110615, -0.748675, 0, 1.0};
Point(64) = {-0.109181, -0.748685, 0, 1.0};
Point(65) = {-0.106849, -0.748737, 0, 1.0};
Point(66) = {-0.103680, -0.748844, 0, 1.0};
Point(67) = {-0.099752, -0.749006, 0, 1.0};
Point(68) = {-0.095142, -0.749213, 0, 1.0};
Point(69) = {-0.089935, -0.749444, 0, 1.0};
Point(70) = {-0.084210, -0.749670, 0, 1.0};
Point(71) = {-0.078045, -0.749862, 0, 1.0};
Point(72) = {-0.071516, -0.749982, 0, 1.0};
Point(73) = {-0.064689, -0.750000, 0, 1.0};
Point(74) = {-0.057621, -0.749892, 0, 1.0};
Point(75) = {-0.050374, -0.749649, 0, 1.0};
Point(76) = {-0.043017, -0.749268, 0, 1.0};
Point(77) = {-0.035626, -0.748749, 0, 1.0};
Point(78) = {-0.028273, -0.748085, 0, 1.0};
Point(79) = {-0.021027, -0.747279, 0, 1.0};
Point(80) = {-0.013957, -0.746335, 0, 1.0};
Point(81) = {-0.007131, -0.745262, 0, 1.0};
Point(82) = {-0.000613, -0.744069, 0, 1.0};
Point(83) = {0.005534, -0.742770, 0, 1.0};
Point(84) = {0.011251, -0.741376, 0, 1.0};
Point(85) = {0.016482, -0.739903, 0, 1.0};
Point(86) = {0.021185, -0.738365, 0, 1.0};
Point(87) = {0.025317, -0.736776, 0, 1.0};
Point(88) = {0.028853, -0.735155, 0, 1.0};
Point(89) = {0.031768, -0.733524, 0, 1.0};
Point(90) = {0.034059, -0.731911, 0, 1.0};
Point(91) = {0.035720, -0.730351, 0, 1.0};
Point(92) = {0.036755, -0.728881, 0, 1.0};
Point(93) = {0.037206, -0.727555, 0, 1.0};
Point(94) = {0.037104, -0.726536, 0, 1.0};
Point(95) = {0.036251, -0.725916, 0, 1.0};
Point(96) = {0.034515, -0.725594, 0, 1.0};
Point(97) = {0.031995, -0.725506, 0, 1.0};
Point(98) = {0.028718, -0.725657, 0, 1.0};
Point(99) = {0.024711, -0.726043, 0, 1.0};
Point(100) = {0.020009, -0.726650, 0, 1.0};
Point(101) = {0.014656, -0.727461, 0, 1.0};
Point(102) = {0.008706, -0.728458, 0, 1.0};
Point(103) = {0.002217, -0.729620, 0, 1.0};
Point(104) = {-0.004744, -0.730925, 0, 1.0};
Point(105) = {-0.012103, -0.732344, 0, 1.0};
Point(106) = {-0.019782, -0.733853, 0, 1.0};
Point(107) = {-0.027699, -0.735419, 0, 1.0};
Point(108) = {-0.035761, -0.737012, 0, 1.0};
Point(109) = {-0.043880, -0.738601, 0, 1.0};
Point(110) = {-0.051958, -0.740155, 0, 1.0};
Point(111) = {-0.059898, -0.741644, 0, 1.0};
Point(112) = {-0.067604, -0.743040, 0, 1.0};
Point(113) = {-0.074977, -0.744315, 0, 1.0};
Point(114) = {-0.081918, -0.745443, 0, 1.0};
Point(115) = {-0.088331, -0.746405, 0, 1.0};
Point(116) = {-0.094119, -0.747179, 0, 1.0};
Point(117) = {-0.099182, -0.747758, 0, 1.0};
Point(118) = {-0.103417, -0.748157, 0, 1.0};
Point(119) = {-0.106757, -0.748416, 0, 1.0};
Point(120) = {-0.109163, -0.748573, 0, 1.0};
Point(121) = {-0.110613, -0.748653, 0, 1.0};
Point(122) = {-0.111099, -0.748677, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
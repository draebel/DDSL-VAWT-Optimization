SetFactory("OpenCASCADE");

Point(1) = {0.147886, 0.748235, 0, 1.0};
Point(2) = {0.147242, 0.748233, 0, 1.0};
Point(3) = {0.145330, 0.748246, 0, 1.0};
Point(4) = {0.142219, 0.748316, 0, 1.0};
Point(5) = {0.137991, 0.748458, 0, 1.0};
Point(6) = {0.132750, 0.748674, 0, 1.0};
Point(7) = {0.126602, 0.748950, 0, 1.0};
Point(8) = {0.119655, 0.749258, 0, 1.0};
Point(9) = {0.112017, 0.749559, 0, 1.0};
Point(10) = {0.103793, 0.749816, 0, 1.0};
Point(11) = {0.095084, 0.749976, 0, 1.0};
Point(12) = {0.085976, 0.750000, 0, 1.0};
Point(13) = {0.076547, 0.749855, 0, 1.0};
Point(14) = {0.066880, 0.749532, 0, 1.0};
Point(15) = {0.057066, 0.749024, 0, 1.0};
Point(16) = {0.047206, 0.748331, 0, 1.0};
Point(17) = {0.037397, 0.747445, 0, 1.0};
Point(18) = {0.027731, 0.746370, 0, 1.0};
Point(19) = {0.018300, 0.745111, 0, 1.0};
Point(20) = {0.009193, 0.743679, 0, 1.0};
Point(21) = {0.000498, 0.742088, 0, 1.0};
Point(22) = {-0.007702, 0.740355, 0, 1.0};
Point(23) = {-0.015328, 0.738495, 0, 1.0};
Point(24) = {-0.022307, 0.736530, 0, 1.0};
Point(25) = {-0.028580, 0.734479, 0, 1.0};
Point(26) = {-0.034093, 0.732359, 0, 1.0};
Point(27) = {-0.038809, 0.730196, 0, 1.0};
Point(28) = {-0.042699, 0.728021, 0, 1.0};
Point(29) = {-0.045755, 0.725870, 0, 1.0};
Point(30) = {-0.047971, 0.723788, 0, 1.0};
Point(31) = {-0.049351, 0.721827, 0, 1.0};
Point(32) = {-0.049953, 0.720057, 0, 1.0};
Point(33) = {-0.049816, 0.718699, 0, 1.0};
Point(34) = {-0.048678, 0.717871, 0, 1.0};
Point(35) = {-0.046364, 0.717442, 0, 1.0};
Point(36) = {-0.043001, 0.717325, 0, 1.0};
Point(37) = {-0.038630, 0.717526, 0, 1.0};
Point(38) = {-0.033284, 0.718041, 0, 1.0};
Point(39) = {-0.027012, 0.718851, 0, 1.0};
Point(40) = {-0.019871, 0.719932, 0, 1.0};
Point(41) = {-0.011934, 0.721263, 0, 1.0};
Point(42) = {-0.003277, 0.722813, 0, 1.0};
Point(43) = {0.006009, 0.724554, 0, 1.0};
Point(44) = {0.015826, 0.726447, 0, 1.0};
Point(45) = {0.026070, 0.728460, 0, 1.0};
Point(46) = {0.036631, 0.730549, 0, 1.0};
Point(47) = {0.047387, 0.732673, 0, 1.0};
Point(48) = {0.058217, 0.734794, 0, 1.0};
Point(49) = {0.068993, 0.736867, 0, 1.0};
Point(50) = {0.079585, 0.738853, 0, 1.0};
Point(51) = {0.089865, 0.740716, 0, 1.0};
Point(52) = {0.099701, 0.742416, 0, 1.0};
Point(53) = {0.108960, 0.743921, 0, 1.0};
Point(54) = {0.117515, 0.745205, 0, 1.0};
Point(55) = {0.125236, 0.746237, 0, 1.0};
Point(56) = {0.131990, 0.747009, 0, 1.0};
Point(57) = {0.137640, 0.747542, 0, 1.0};
Point(58) = {0.142095, 0.747887, 0, 1.0};
Point(59) = {0.145305, 0.748097, 0, 1.0};
Point(60) = {0.147240, 0.748203, 0, 1.0};
Point(61) = {0.147888, 0.748235, 0, 1.0};
Point(62) = {-0.147886, -0.748235, 0, 1.0};
Point(63) = {-0.147242, -0.748233, 0, 1.0};
Point(64) = {-0.145330, -0.748246, 0, 1.0};
Point(65) = {-0.142219, -0.748316, 0, 1.0};
Point(66) = {-0.137991, -0.748458, 0, 1.0};
Point(67) = {-0.132750, -0.748674, 0, 1.0};
Point(68) = {-0.126602, -0.748950, 0, 1.0};
Point(69) = {-0.119655, -0.749258, 0, 1.0};
Point(70) = {-0.112017, -0.749559, 0, 1.0};
Point(71) = {-0.103793, -0.749816, 0, 1.0};
Point(72) = {-0.095084, -0.749976, 0, 1.0};
Point(73) = {-0.085976, -0.750000, 0, 1.0};
Point(74) = {-0.076547, -0.749855, 0, 1.0};
Point(75) = {-0.066880, -0.749532, 0, 1.0};
Point(76) = {-0.057066, -0.749024, 0, 1.0};
Point(77) = {-0.047206, -0.748331, 0, 1.0};
Point(78) = {-0.037397, -0.747445, 0, 1.0};
Point(79) = {-0.027731, -0.746370, 0, 1.0};
Point(80) = {-0.018300, -0.745111, 0, 1.0};
Point(81) = {-0.009193, -0.743679, 0, 1.0};
Point(82) = {-0.000498, -0.742088, 0, 1.0};
Point(83) = {0.007702, -0.740355, 0, 1.0};
Point(84) = {0.015328, -0.738495, 0, 1.0};
Point(85) = {0.022307, -0.736530, 0, 1.0};
Point(86) = {0.028580, -0.734479, 0, 1.0};
Point(87) = {0.034093, -0.732359, 0, 1.0};
Point(88) = {0.038809, -0.730196, 0, 1.0};
Point(89) = {0.042699, -0.728021, 0, 1.0};
Point(90) = {0.045755, -0.725870, 0, 1.0};
Point(91) = {0.047971, -0.723788, 0, 1.0};
Point(92) = {0.049351, -0.721827, 0, 1.0};
Point(93) = {0.049953, -0.720057, 0, 1.0};
Point(94) = {0.049816, -0.718699, 0, 1.0};
Point(95) = {0.048678, -0.717871, 0, 1.0};
Point(96) = {0.046364, -0.717442, 0, 1.0};
Point(97) = {0.043001, -0.717325, 0, 1.0};
Point(98) = {0.038630, -0.717526, 0, 1.0};
Point(99) = {0.033284, -0.718041, 0, 1.0};
Point(100) = {0.027012, -0.718851, 0, 1.0};
Point(101) = {0.019871, -0.719932, 0, 1.0};
Point(102) = {0.011934, -0.721263, 0, 1.0};
Point(103) = {0.003277, -0.722813, 0, 1.0};
Point(104) = {-0.006009, -0.724554, 0, 1.0};
Point(105) = {-0.015826, -0.726447, 0, 1.0};
Point(106) = {-0.026070, -0.728460, 0, 1.0};
Point(107) = {-0.036631, -0.730549, 0, 1.0};
Point(108) = {-0.047387, -0.732673, 0, 1.0};
Point(109) = {-0.058217, -0.734794, 0, 1.0};
Point(110) = {-0.068993, -0.736867, 0, 1.0};
Point(111) = {-0.079585, -0.738853, 0, 1.0};
Point(112) = {-0.089865, -0.740716, 0, 1.0};
Point(113) = {-0.099701, -0.742416, 0, 1.0};
Point(114) = {-0.108960, -0.743921, 0, 1.0};
Point(115) = {-0.117515, -0.745205, 0, 1.0};
Point(116) = {-0.125236, -0.746237, 0, 1.0};
Point(117) = {-0.131990, -0.747009, 0, 1.0};
Point(118) = {-0.137640, -0.747542, 0, 1.0};
Point(119) = {-0.142095, -0.747887, 0, 1.0};
Point(120) = {-0.145305, -0.748097, 0, 1.0};
Point(121) = {-0.147240, -0.748203, 0, 1.0};
Point(122) = {-0.147888, -0.748235, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
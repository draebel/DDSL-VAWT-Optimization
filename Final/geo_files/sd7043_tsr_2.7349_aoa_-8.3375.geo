SetFactory("OpenCASCADE");

Point(1) = {0.110915, 0.748676, 0, 1.0};
Point(2) = {0.110431, 0.748675, 0, 1.0};
Point(3) = {0.108997, 0.748684, 0, 1.0};
Point(4) = {0.106664, 0.748737, 0, 1.0};
Point(5) = {0.103493, 0.748844, 0, 1.0};
Point(6) = {0.099563, 0.749006, 0, 1.0};
Point(7) = {0.094951, 0.749212, 0, 1.0};
Point(8) = {0.089742, 0.749443, 0, 1.0};
Point(9) = {0.084013, 0.749670, 0, 1.0};
Point(10) = {0.077845, 0.749862, 0, 1.0};
Point(11) = {0.071313, 0.749982, 0, 1.0};
Point(12) = {0.064482, 0.750000, 0, 1.0};
Point(13) = {0.057410, 0.749891, 0, 1.0};
Point(14) = {0.050160, 0.749649, 0, 1.0};
Point(15) = {0.042799, 0.749268, 0, 1.0};
Point(16) = {0.035405, 0.748748, 0, 1.0};
Point(17) = {0.028048, 0.748084, 0, 1.0};
Point(18) = {0.020798, 0.747277, 0, 1.0};
Point(19) = {0.013725, 0.746333, 0, 1.0};
Point(20) = {0.006895, 0.745260, 0, 1.0};
Point(21) = {0.000373, 0.744066, 0, 1.0};
Point(22) = {-0.005776, 0.742766, 0, 1.0};
Point(23) = {-0.011496, 0.741371, 0, 1.0};
Point(24) = {-0.016731, 0.739898, 0, 1.0};
Point(25) = {-0.021435, 0.738359, 0, 1.0};
Point(26) = {-0.025570, 0.736769, 0, 1.0};
Point(27) = {-0.029107, 0.735147, 0, 1.0};
Point(28) = {-0.032024, 0.733516, 0, 1.0};
Point(29) = {-0.034316, 0.731902, 0, 1.0};
Point(30) = {-0.035978, 0.730341, 0, 1.0};
Point(31) = {-0.037013, 0.728871, 0, 1.0};
Point(32) = {-0.037465, 0.727543, 0, 1.0};
Point(33) = {-0.037362, 0.726524, 0, 1.0};
Point(34) = {-0.036509, 0.725903, 0, 1.0};
Point(35) = {-0.034773, 0.725582, 0, 1.0};
Point(36) = {-0.032251, 0.725493, 0, 1.0};
Point(37) = {-0.028973, 0.725645, 0, 1.0};
Point(38) = {-0.024963, 0.726031, 0, 1.0};
Point(39) = {-0.020259, 0.726638, 0, 1.0};
Point(40) = {-0.014903, 0.727449, 0, 1.0};
Point(41) = {-0.008950, 0.728447, 0, 1.0};
Point(42) = {-0.002458, 0.729610, 0, 1.0};
Point(43) = {0.004506, 0.730915, 0, 1.0};
Point(44) = {0.011869, 0.732335, 0, 1.0};
Point(45) = {0.019553, 0.733845, 0, 1.0};
Point(46) = {0.027473, 0.735412, 0, 1.0};
Point(47) = {0.035540, 0.737005, 0, 1.0};
Point(48) = {0.043663, 0.738596, 0, 1.0};
Point(49) = {0.051745, 0.740150, 0, 1.0};
Point(50) = {0.059688, 0.741640, 0, 1.0};
Point(51) = {0.067399, 0.743037, 0, 1.0};
Point(52) = {0.074776, 0.744312, 0, 1.0};
Point(53) = {0.081720, 0.745440, 0, 1.0};
Point(54) = {0.088136, 0.746403, 0, 1.0};
Point(55) = {0.093927, 0.747178, 0, 1.0};
Point(56) = {0.098992, 0.747756, 0, 1.0};
Point(57) = {0.103230, 0.748156, 0, 1.0};
Point(58) = {0.106572, 0.748415, 0, 1.0};
Point(59) = {0.108979, 0.748573, 0, 1.0};
Point(60) = {0.110430, 0.748652, 0, 1.0};
Point(61) = {0.110916, 0.748676, 0, 1.0};
Point(62) = {-0.110915, -0.748676, 0, 1.0};
Point(63) = {-0.110431, -0.748675, 0, 1.0};
Point(64) = {-0.108997, -0.748684, 0, 1.0};
Point(65) = {-0.106664, -0.748737, 0, 1.0};
Point(66) = {-0.103493, -0.748844, 0, 1.0};
Point(67) = {-0.099563, -0.749006, 0, 1.0};
Point(68) = {-0.094951, -0.749212, 0, 1.0};
Point(69) = {-0.089742, -0.749443, 0, 1.0};
Point(70) = {-0.084013, -0.749670, 0, 1.0};
Point(71) = {-0.077845, -0.749862, 0, 1.0};
Point(72) = {-0.071313, -0.749982, 0, 1.0};
Point(73) = {-0.064482, -0.750000, 0, 1.0};
Point(74) = {-0.057410, -0.749891, 0, 1.0};
Point(75) = {-0.050160, -0.749649, 0, 1.0};
Point(76) = {-0.042799, -0.749268, 0, 1.0};
Point(77) = {-0.035405, -0.748748, 0, 1.0};
Point(78) = {-0.028048, -0.748084, 0, 1.0};
Point(79) = {-0.020798, -0.747277, 0, 1.0};
Point(80) = {-0.013725, -0.746333, 0, 1.0};
Point(81) = {-0.006895, -0.745260, 0, 1.0};
Point(82) = {-0.000373, -0.744066, 0, 1.0};
Point(83) = {0.005776, -0.742766, 0, 1.0};
Point(84) = {0.011496, -0.741371, 0, 1.0};
Point(85) = {0.016731, -0.739898, 0, 1.0};
Point(86) = {0.021435, -0.738359, 0, 1.0};
Point(87) = {0.025570, -0.736769, 0, 1.0};
Point(88) = {0.029107, -0.735147, 0, 1.0};
Point(89) = {0.032024, -0.733516, 0, 1.0};
Point(90) = {0.034316, -0.731902, 0, 1.0};
Point(91) = {0.035978, -0.730341, 0, 1.0};
Point(92) = {0.037013, -0.728871, 0, 1.0};
Point(93) = {0.037465, -0.727543, 0, 1.0};
Point(94) = {0.037362, -0.726524, 0, 1.0};
Point(95) = {0.036509, -0.725903, 0, 1.0};
Point(96) = {0.034773, -0.725582, 0, 1.0};
Point(97) = {0.032251, -0.725493, 0, 1.0};
Point(98) = {0.028973, -0.725645, 0, 1.0};
Point(99) = {0.024963, -0.726031, 0, 1.0};
Point(100) = {0.020259, -0.726638, 0, 1.0};
Point(101) = {0.014903, -0.727449, 0, 1.0};
Point(102) = {0.008950, -0.728447, 0, 1.0};
Point(103) = {0.002458, -0.729610, 0, 1.0};
Point(104) = {-0.004506, -0.730915, 0, 1.0};
Point(105) = {-0.011869, -0.732335, 0, 1.0};
Point(106) = {-0.019553, -0.733845, 0, 1.0};
Point(107) = {-0.027473, -0.735412, 0, 1.0};
Point(108) = {-0.035540, -0.737005, 0, 1.0};
Point(109) = {-0.043663, -0.738596, 0, 1.0};
Point(110) = {-0.051745, -0.740150, 0, 1.0};
Point(111) = {-0.059688, -0.741640, 0, 1.0};
Point(112) = {-0.067399, -0.743037, 0, 1.0};
Point(113) = {-0.074776, -0.744312, 0, 1.0};
Point(114) = {-0.081720, -0.745440, 0, 1.0};
Point(115) = {-0.088136, -0.746403, 0, 1.0};
Point(116) = {-0.093927, -0.747178, 0, 1.0};
Point(117) = {-0.098992, -0.747756, 0, 1.0};
Point(118) = {-0.103230, -0.748156, 0, 1.0};
Point(119) = {-0.106572, -0.748415, 0, 1.0};
Point(120) = {-0.108979, -0.748573, 0, 1.0};
Point(121) = {-0.110430, -0.748652, 0, 1.0};
Point(122) = {-0.110916, -0.748676, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
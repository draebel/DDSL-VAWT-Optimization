SetFactory("OpenCASCADE");

Point(1) = {0.074695, 0.748646, 0, 1.0};
Point(2) = {0.072181, 0.748734, 0, 1.0};
Point(3) = {0.069664, 0.748846, 0, 1.0};
Point(4) = {0.067148, 0.748963, 0, 1.0};
Point(5) = {0.064632, 0.749068, 0, 1.0};
Point(6) = {0.062115, 0.749179, 0, 1.0};
Point(7) = {0.059599, 0.749289, 0, 1.0};
Point(8) = {0.057083, 0.749401, 0, 1.0};
Point(9) = {0.054567, 0.749511, 0, 1.0};
Point(10) = {0.049536, 0.749705, 0, 1.0};
Point(11) = {0.044509, 0.749860, 0, 1.0};
Point(12) = {0.039486, 0.749960, 0, 1.0};
Point(13) = {0.034467, 0.750000, 0, 1.0};
Point(14) = {0.029455, 0.749961, 0, 1.0};
Point(15) = {0.024450, 0.749834, 0, 1.0};
Point(16) = {0.019451, 0.749619, 0, 1.0};
Point(17) = {0.014459, 0.749326, 0, 1.0};
Point(18) = {0.011965, 0.749154, 0, 1.0};
Point(19) = {0.009472, 0.748967, 0, 1.0};
Point(20) = {0.006980, 0.748760, 0, 1.0};
Point(21) = {0.004499, 0.748420, 0, 1.0};
Point(22) = {0.002005, 0.748245, 0, 1.0};
Point(23) = {-0.000479, 0.747947, 0, 1.0};
Point(24) = {-0.002962, 0.747632, 0, 1.0};
Point(25) = {-0.005443, 0.747294, 0, 1.0};
Point(26) = {-0.007922, 0.746919, 0, 1.0};
Point(27) = {-0.010396, 0.746492, 0, 1.0};
Point(28) = {-0.012865, 0.745997, 0, 1.0};
Point(29) = {-0.015327, 0.745422, 0, 1.0};
Point(30) = {-0.017783, 0.744752, 0, 1.0};
Point(31) = {-0.020228, 0.743951, 0, 1.0};
Point(32) = {-0.021444, 0.743478, 0, 1.0};
Point(33) = {-0.022655, 0.742928, 0, 1.0};
Point(34) = {-0.023257, 0.742608, 0, 1.0};
Point(35) = {-0.023855, 0.742233, 0, 1.0};
Point(36) = {-0.024210, 0.741972, 0, 1.0};
Point(37) = {-0.024561, 0.741651, 0, 1.0};
Point(38) = {-0.024790, 0.741367, 0, 1.0};
Point(39) = {-0.025000, 0.740846, 0, 1.0};
Point(40) = {-0.024725, 0.740538, 0, 1.0};
Point(41) = {-0.024464, 0.740403, 0, 1.0};
Point(42) = {-0.024076, 0.740254, 0, 1.0};
Point(43) = {-0.023691, 0.740139, 0, 1.0};
Point(44) = {-0.023053, 0.739995, 0, 1.0};
Point(45) = {-0.022418, 0.739897, 0, 1.0};
Point(46) = {-0.021154, 0.739767, 0, 1.0};
Point(47) = {-0.019894, 0.739691, 0, 1.0};
Point(48) = {-0.017381, 0.739623, 0, 1.0};
Point(49) = {-0.014874, 0.739626, 0, 1.0};
Point(50) = {-0.012370, 0.739669, 0, 1.0};
Point(51) = {-0.009868, 0.739745, 0, 1.0};
Point(52) = {-0.007368, 0.739848, 0, 1.0};
Point(53) = {-0.004871, 0.739975, 0, 1.0};
Point(54) = {-0.002374, 0.740120, 0, 1.0};
Point(55) = {0.000121, 0.740281, 0, 1.0};
Point(56) = {0.002615, 0.740452, 0, 1.0};
Point(57) = {0.005108, 0.740633, 0, 1.0};
Point(58) = {0.007601, 0.740827, 0, 1.0};
Point(59) = {0.010092, 0.741038, 0, 1.0};
Point(60) = {0.012582, 0.741266, 0, 1.0};
Point(61) = {0.015070, 0.741512, 0, 1.0};
Point(62) = {0.020044, 0.742046, 0, 1.0};
Point(63) = {0.025013, 0.742634, 0, 1.0};
Point(64) = {0.029978, 0.743273, 0, 1.0};
Point(65) = {0.034940, 0.743956, 0, 1.0};
Point(66) = {0.039900, 0.744667, 0, 1.0};
Point(67) = {0.044859, 0.745379, 0, 1.0};
Point(68) = {0.049820, 0.746077, 0, 1.0};
Point(69) = {0.054783, 0.746739, 0, 1.0};
Point(70) = {0.057267, 0.747048, 0, 1.0};
Point(71) = {0.059752, 0.747334, 0, 1.0};
Point(72) = {0.062240, 0.747586, 0, 1.0};
Point(73) = {0.064730, 0.747811, 0, 1.0};
Point(74) = {0.067222, 0.748016, 0, 1.0};
Point(75) = {0.069713, 0.748226, 0, 1.0};
Point(76) = {0.072205, 0.748431, 0, 1.0};
Point(77) = {-0.074695, -0.748646, 0, 1.0};
Point(78) = {-0.072181, -0.748734, 0, 1.0};
Point(79) = {-0.069664, -0.748846, 0, 1.0};
Point(80) = {-0.067148, -0.748963, 0, 1.0};
Point(81) = {-0.064632, -0.749068, 0, 1.0};
Point(82) = {-0.062115, -0.749179, 0, 1.0};
Point(83) = {-0.059599, -0.749289, 0, 1.0};
Point(84) = {-0.057083, -0.749401, 0, 1.0};
Point(85) = {-0.054567, -0.749511, 0, 1.0};
Point(86) = {-0.049536, -0.749705, 0, 1.0};
Point(87) = {-0.044509, -0.749860, 0, 1.0};
Point(88) = {-0.039486, -0.749960, 0, 1.0};
Point(89) = {-0.034467, -0.750000, 0, 1.0};
Point(90) = {-0.029455, -0.749961, 0, 1.0};
Point(91) = {-0.024450, -0.749834, 0, 1.0};
Point(92) = {-0.019451, -0.749619, 0, 1.0};
Point(93) = {-0.014459, -0.749326, 0, 1.0};
Point(94) = {-0.011965, -0.749154, 0, 1.0};
Point(95) = {-0.009472, -0.748967, 0, 1.0};
Point(96) = {-0.006980, -0.748760, 0, 1.0};
Point(97) = {-0.004499, -0.748420, 0, 1.0};
Point(98) = {-0.002005, -0.748245, 0, 1.0};
Point(99) = {0.000479, -0.747947, 0, 1.0};
Point(100) = {0.002962, -0.747632, 0, 1.0};
Point(101) = {0.005443, -0.747294, 0, 1.0};
Point(102) = {0.007922, -0.746919, 0, 1.0};
Point(103) = {0.010396, -0.746492, 0, 1.0};
Point(104) = {0.012865, -0.745997, 0, 1.0};
Point(105) = {0.015327, -0.745422, 0, 1.0};
Point(106) = {0.017783, -0.744752, 0, 1.0};
Point(107) = {0.020228, -0.743951, 0, 1.0};
Point(108) = {0.021444, -0.743478, 0, 1.0};
Point(109) = {0.022655, -0.742928, 0, 1.0};
Point(110) = {0.023257, -0.742608, 0, 1.0};
Point(111) = {0.023855, -0.742233, 0, 1.0};
Point(112) = {0.024210, -0.741972, 0, 1.0};
Point(113) = {0.024561, -0.741651, 0, 1.0};
Point(114) = {0.024790, -0.741367, 0, 1.0};
Point(115) = {0.025000, -0.740846, 0, 1.0};
Point(116) = {0.024725, -0.740538, 0, 1.0};
Point(117) = {0.024464, -0.740403, 0, 1.0};
Point(118) = {0.024076, -0.740254, 0, 1.0};
Point(119) = {0.023691, -0.740139, 0, 1.0};
Point(120) = {0.023053, -0.739995, 0, 1.0};
Point(121) = {0.022418, -0.739897, 0, 1.0};
Point(122) = {0.021154, -0.739767, 0, 1.0};
Point(123) = {0.019894, -0.739691, 0, 1.0};
Point(124) = {0.017381, -0.739623, 0, 1.0};
Point(125) = {0.014874, -0.739626, 0, 1.0};
Point(126) = {0.012370, -0.739669, 0, 1.0};
Point(127) = {0.009868, -0.739745, 0, 1.0};
Point(128) = {0.007368, -0.739848, 0, 1.0};
Point(129) = {0.004871, -0.739975, 0, 1.0};
Point(130) = {0.002374, -0.740120, 0, 1.0};
Point(131) = {-0.000121, -0.740281, 0, 1.0};
Point(132) = {-0.002615, -0.740452, 0, 1.0};
Point(133) = {-0.005108, -0.740633, 0, 1.0};
Point(134) = {-0.007601, -0.740827, 0, 1.0};
Point(135) = {-0.010092, -0.741038, 0, 1.0};
Point(136) = {-0.012582, -0.741266, 0, 1.0};
Point(137) = {-0.015070, -0.741512, 0, 1.0};
Point(138) = {-0.020044, -0.742046, 0, 1.0};
Point(139) = {-0.025013, -0.742634, 0, 1.0};
Point(140) = {-0.029978, -0.743273, 0, 1.0};
Point(141) = {-0.034940, -0.743956, 0, 1.0};
Point(142) = {-0.039900, -0.744667, 0, 1.0};
Point(143) = {-0.044859, -0.745379, 0, 1.0};
Point(144) = {-0.049820, -0.746077, 0, 1.0};
Point(145) = {-0.054783, -0.746739, 0, 1.0};
Point(146) = {-0.057267, -0.747048, 0, 1.0};
Point(147) = {-0.059752, -0.747334, 0, 1.0};
Point(148) = {-0.062240, -0.747586, 0, 1.0};
Point(149) = {-0.064730, -0.747811, 0, 1.0};
Point(150) = {-0.067222, -0.748016, 0, 1.0};
Point(151) = {-0.069713, -0.748226, 0, 1.0};
Point(152) = {-0.072205, -0.748431, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
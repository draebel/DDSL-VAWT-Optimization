SetFactory("OpenCASCADE");

Point(1) = {0.149391, 0.747291, 0, 1.0};
Point(2) = {0.144362, 0.747467, 0, 1.0};
Point(3) = {0.139329, 0.747691, 0, 1.0};
Point(4) = {0.134295, 0.747926, 0, 1.0};
Point(5) = {0.129264, 0.748136, 0, 1.0};
Point(6) = {0.124231, 0.748358, 0, 1.0};
Point(7) = {0.119198, 0.748578, 0, 1.0};
Point(8) = {0.114166, 0.748802, 0, 1.0};
Point(9) = {0.109133, 0.749022, 0, 1.0};
Point(10) = {0.099072, 0.749411, 0, 1.0};
Point(11) = {0.089017, 0.749720, 0, 1.0};
Point(12) = {0.078971, 0.749921, 0, 1.0};
Point(13) = {0.068934, 0.750000, 0, 1.0};
Point(14) = {0.058910, 0.749922, 0, 1.0};
Point(15) = {0.048899, 0.749668, 0, 1.0};
Point(16) = {0.038902, 0.749237, 0, 1.0};
Point(17) = {0.028918, 0.748653, 0, 1.0};
Point(18) = {0.023929, 0.748309, 0, 1.0};
Point(19) = {0.018943, 0.747935, 0, 1.0};
Point(20) = {0.013960, 0.747521, 0, 1.0};
Point(21) = {0.008998, 0.746840, 0, 1.0};
Point(22) = {0.004010, 0.746490, 0, 1.0};
Point(23) = {-0.000958, 0.745894, 0, 1.0};
Point(24) = {-0.005924, 0.745265, 0, 1.0};
Point(25) = {-0.010887, 0.744588, 0, 1.0};
Point(26) = {-0.015843, 0.743839, 0, 1.0};
Point(27) = {-0.020792, 0.742984, 0, 1.0};
Point(28) = {-0.025730, 0.741994, 0, 1.0};
Point(29) = {-0.030655, 0.740845, 0, 1.0};
Point(30) = {-0.035565, 0.739503, 0, 1.0};
Point(31) = {-0.040455, 0.737901, 0, 1.0};
Point(32) = {-0.042889, 0.736957, 0, 1.0};
Point(33) = {-0.045311, 0.735856, 0, 1.0};
Point(34) = {-0.046514, 0.735216, 0, 1.0};
Point(35) = {-0.047709, 0.734467, 0, 1.0};
Point(36) = {-0.048421, 0.733944, 0, 1.0};
Point(37) = {-0.049123, 0.733301, 0, 1.0};
Point(38) = {-0.049580, 0.732734, 0, 1.0};
Point(39) = {-0.050000, 0.731692, 0, 1.0};
Point(40) = {-0.049450, 0.731077, 0, 1.0};
Point(41) = {-0.048928, 0.730807, 0, 1.0};
Point(42) = {-0.048152, 0.730508, 0, 1.0};
Point(43) = {-0.047382, 0.730278, 0, 1.0};
Point(44) = {-0.046105, 0.729990, 0, 1.0};
Point(45) = {-0.044836, 0.729795, 0, 1.0};
Point(46) = {-0.042308, 0.729533, 0, 1.0};
Point(47) = {-0.039789, 0.729381, 0, 1.0};
Point(48) = {-0.034763, 0.729247, 0, 1.0};
Point(49) = {-0.029748, 0.729252, 0, 1.0};
Point(50) = {-0.024740, 0.729339, 0, 1.0};
Point(51) = {-0.019736, 0.729490, 0, 1.0};
Point(52) = {-0.014737, 0.729696, 0, 1.0};
Point(53) = {-0.009742, 0.729951, 0, 1.0};
Point(54) = {-0.004749, 0.730241, 0, 1.0};
Point(55) = {0.000241, 0.730561, 0, 1.0};
Point(56) = {0.005230, 0.730903, 0, 1.0};
Point(57) = {0.010217, 0.731265, 0, 1.0};
Point(58) = {0.015202, 0.731653, 0, 1.0};
Point(59) = {0.020184, 0.732075, 0, 1.0};
Point(60) = {0.025163, 0.732533, 0, 1.0};
Point(61) = {0.030140, 0.733025, 0, 1.0};
Point(62) = {0.040087, 0.734092, 0, 1.0};
Point(63) = {0.050026, 0.735268, 0, 1.0};
Point(64) = {0.059956, 0.736547, 0, 1.0};
Point(65) = {0.069880, 0.737913, 0, 1.0};
Point(66) = {0.079799, 0.739335, 0, 1.0};
Point(67) = {0.089718, 0.740759, 0, 1.0};
Point(68) = {0.099640, 0.742155, 0, 1.0};
Point(69) = {0.109567, 0.743477, 0, 1.0};
Point(70) = {0.114534, 0.744097, 0, 1.0};
Point(71) = {0.119504, 0.744668, 0, 1.0};
Point(72) = {0.124480, 0.745172, 0, 1.0};
Point(73) = {0.129460, 0.745621, 0, 1.0};
Point(74) = {0.134443, 0.746031, 0, 1.0};
Point(75) = {0.139426, 0.746451, 0, 1.0};
Point(76) = {0.144409, 0.746861, 0, 1.0};
Point(77) = {-0.149391, -0.747291, 0, 1.0};
Point(78) = {-0.144362, -0.747467, 0, 1.0};
Point(79) = {-0.139329, -0.747691, 0, 1.0};
Point(80) = {-0.134295, -0.747926, 0, 1.0};
Point(81) = {-0.129264, -0.748136, 0, 1.0};
Point(82) = {-0.124231, -0.748358, 0, 1.0};
Point(83) = {-0.119198, -0.748578, 0, 1.0};
Point(84) = {-0.114166, -0.748802, 0, 1.0};
Point(85) = {-0.109133, -0.749022, 0, 1.0};
Point(86) = {-0.099072, -0.749411, 0, 1.0};
Point(87) = {-0.089017, -0.749720, 0, 1.0};
Point(88) = {-0.078971, -0.749921, 0, 1.0};
Point(89) = {-0.068934, -0.750000, 0, 1.0};
Point(90) = {-0.058910, -0.749922, 0, 1.0};
Point(91) = {-0.048899, -0.749668, 0, 1.0};
Point(92) = {-0.038902, -0.749237, 0, 1.0};
Point(93) = {-0.028918, -0.748653, 0, 1.0};
Point(94) = {-0.023929, -0.748309, 0, 1.0};
Point(95) = {-0.018943, -0.747935, 0, 1.0};
Point(96) = {-0.013960, -0.747521, 0, 1.0};
Point(97) = {-0.008998, -0.746840, 0, 1.0};
Point(98) = {-0.004010, -0.746490, 0, 1.0};
Point(99) = {0.000958, -0.745894, 0, 1.0};
Point(100) = {0.005924, -0.745265, 0, 1.0};
Point(101) = {0.010887, -0.744588, 0, 1.0};
Point(102) = {0.015843, -0.743839, 0, 1.0};
Point(103) = {0.020792, -0.742984, 0, 1.0};
Point(104) = {0.025730, -0.741994, 0, 1.0};
Point(105) = {0.030655, -0.740845, 0, 1.0};
Point(106) = {0.035565, -0.739503, 0, 1.0};
Point(107) = {0.040455, -0.737901, 0, 1.0};
Point(108) = {0.042889, -0.736957, 0, 1.0};
Point(109) = {0.045311, -0.735856, 0, 1.0};
Point(110) = {0.046514, -0.735216, 0, 1.0};
Point(111) = {0.047709, -0.734467, 0, 1.0};
Point(112) = {0.048421, -0.733944, 0, 1.0};
Point(113) = {0.049123, -0.733301, 0, 1.0};
Point(114) = {0.049580, -0.732734, 0, 1.0};
Point(115) = {0.050000, -0.731692, 0, 1.0};
Point(116) = {0.049450, -0.731077, 0, 1.0};
Point(117) = {0.048928, -0.730807, 0, 1.0};
Point(118) = {0.048152, -0.730508, 0, 1.0};
Point(119) = {0.047382, -0.730278, 0, 1.0};
Point(120) = {0.046105, -0.729990, 0, 1.0};
Point(121) = {0.044836, -0.729795, 0, 1.0};
Point(122) = {0.042308, -0.729533, 0, 1.0};
Point(123) = {0.039789, -0.729381, 0, 1.0};
Point(124) = {0.034763, -0.729247, 0, 1.0};
Point(125) = {0.029748, -0.729252, 0, 1.0};
Point(126) = {0.024740, -0.729339, 0, 1.0};
Point(127) = {0.019736, -0.729490, 0, 1.0};
Point(128) = {0.014737, -0.729696, 0, 1.0};
Point(129) = {0.009742, -0.729951, 0, 1.0};
Point(130) = {0.004749, -0.730241, 0, 1.0};
Point(131) = {-0.000241, -0.730561, 0, 1.0};
Point(132) = {-0.005230, -0.730903, 0, 1.0};
Point(133) = {-0.010217, -0.731265, 0, 1.0};
Point(134) = {-0.015202, -0.731653, 0, 1.0};
Point(135) = {-0.020184, -0.732075, 0, 1.0};
Point(136) = {-0.025163, -0.732533, 0, 1.0};
Point(137) = {-0.030140, -0.733025, 0, 1.0};
Point(138) = {-0.040087, -0.734092, 0, 1.0};
Point(139) = {-0.050026, -0.735268, 0, 1.0};
Point(140) = {-0.059956, -0.736547, 0, 1.0};
Point(141) = {-0.069880, -0.737913, 0, 1.0};
Point(142) = {-0.079799, -0.739335, 0, 1.0};
Point(143) = {-0.089718, -0.740759, 0, 1.0};
Point(144) = {-0.099640, -0.742155, 0, 1.0};
Point(145) = {-0.109567, -0.743477, 0, 1.0};
Point(146) = {-0.114534, -0.744097, 0, 1.0};
Point(147) = {-0.119504, -0.744668, 0, 1.0};
Point(148) = {-0.124480, -0.745172, 0, 1.0};
Point(149) = {-0.129460, -0.745621, 0, 1.0};
Point(150) = {-0.134443, -0.746031, 0, 1.0};
Point(151) = {-0.139426, -0.746451, 0, 1.0};
Point(152) = {-0.144409, -0.746861, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
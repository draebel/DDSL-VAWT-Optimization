SetFactory("OpenCASCADE");

Point(1) = {0.112157, 0.747968, 0, 1.0};
Point(2) = {0.108385, 0.748100, 0, 1.0};
Point(3) = {0.104611, 0.748269, 0, 1.0};
Point(4) = {0.100836, 0.748444, 0, 1.0};
Point(5) = {0.097062, 0.748602, 0, 1.0};
Point(6) = {0.093287, 0.748768, 0, 1.0};
Point(7) = {0.089513, 0.748934, 0, 1.0};
Point(8) = {0.085738, 0.749102, 0, 1.0};
Point(9) = {0.081964, 0.749267, 0, 1.0};
Point(10) = {0.074418, 0.749558, 0, 1.0};
Point(11) = {0.066877, 0.749790, 0, 1.0};
Point(12) = {0.059343, 0.749940, 0, 1.0};
Point(13) = {0.051815, 0.750000, 0, 1.0};
Point(14) = {0.044297, 0.749941, 0, 1.0};
Point(15) = {0.036789, 0.749751, 0, 1.0};
Point(16) = {0.029291, 0.749428, 0, 1.0};
Point(17) = {0.021802, 0.748990, 0, 1.0};
Point(18) = {0.018061, 0.748731, 0, 1.0};
Point(19) = {0.014322, 0.748451, 0, 1.0};
Point(20) = {0.010584, 0.748141, 0, 1.0};
Point(21) = {0.006863, 0.747630, 0, 1.0};
Point(22) = {0.003122, 0.747367, 0, 1.0};
Point(23) = {-0.000605, 0.746921, 0, 1.0};
Point(24) = {-0.004329, 0.746449, 0, 1.0};
Point(25) = {-0.008051, 0.745941, 0, 1.0};
Point(26) = {-0.011768, 0.745379, 0, 1.0};
Point(27) = {-0.015480, 0.744738, 0, 1.0};
Point(28) = {-0.019183, 0.743996, 0, 1.0};
Point(29) = {-0.022877, 0.743133, 0, 1.0};
Point(30) = {-0.026560, 0.742128, 0, 1.0};
Point(31) = {-0.030227, 0.740926, 0, 1.0};
Point(32) = {-0.032052, 0.740217, 0, 1.0};
Point(33) = {-0.033869, 0.739392, 0, 1.0};
Point(34) = {-0.034771, 0.738912, 0, 1.0};
Point(35) = {-0.035668, 0.738350, 0, 1.0};
Point(36) = {-0.036201, 0.737958, 0, 1.0};
Point(37) = {-0.036728, 0.737476, 0, 1.0};
Point(38) = {-0.037071, 0.737050, 0, 1.0};
Point(39) = {-0.037386, 0.736269, 0, 1.0};
Point(40) = {-0.036974, 0.735808, 0, 1.0};
Point(41) = {-0.036582, 0.735605, 0, 1.0};
Point(42) = {-0.036000, 0.735381, 0, 1.0};
Point(43) = {-0.035422, 0.735208, 0, 1.0};
Point(44) = {-0.034465, 0.734993, 0, 1.0};
Point(45) = {-0.033513, 0.734846, 0, 1.0};
Point(46) = {-0.031617, 0.734650, 0, 1.0};
Point(47) = {-0.029727, 0.734536, 0, 1.0};
Point(48) = {-0.025958, 0.734435, 0, 1.0};
Point(49) = {-0.022197, 0.734439, 0, 1.0};
Point(50) = {-0.018440, 0.734504, 0, 1.0};
Point(51) = {-0.014688, 0.734617, 0, 1.0};
Point(52) = {-0.010938, 0.734772, 0, 1.0};
Point(53) = {-0.007192, 0.734963, 0, 1.0};
Point(54) = {-0.003447, 0.735181, 0, 1.0};
Point(55) = {0.000295, 0.735421, 0, 1.0};
Point(56) = {0.004037, 0.735677, 0, 1.0};
Point(57) = {0.007777, 0.735949, 0, 1.0};
Point(58) = {0.011515, 0.736240, 0, 1.0};
Point(59) = {0.015252, 0.736556, 0, 1.0};
Point(60) = {0.018987, 0.736900, 0, 1.0};
Point(61) = {0.022719, 0.737268, 0, 1.0};
Point(62) = {0.030180, 0.738069, 0, 1.0};
Point(63) = {0.037634, 0.738951, 0, 1.0};
Point(64) = {0.045081, 0.739910, 0, 1.0};
Point(65) = {0.052524, 0.740935, 0, 1.0};
Point(66) = {0.059964, 0.742001, 0, 1.0};
Point(67) = {0.067403, 0.743069, 0, 1.0};
Point(68) = {0.074844, 0.744116, 0, 1.0};
Point(69) = {0.082289, 0.745108, 0, 1.0};
Point(70) = {0.086015, 0.745572, 0, 1.0};
Point(71) = {0.089742, 0.746001, 0, 1.0};
Point(72) = {0.093474, 0.746379, 0, 1.0};
Point(73) = {0.097209, 0.746716, 0, 1.0};
Point(74) = {0.100947, 0.747024, 0, 1.0};
Point(75) = {0.104684, 0.747338, 0, 1.0};
Point(76) = {0.108421, 0.747646, 0, 1.0};
Point(77) = {-0.112157, -0.747968, 0, 1.0};
Point(78) = {-0.108385, -0.748100, 0, 1.0};
Point(79) = {-0.104611, -0.748269, 0, 1.0};
Point(80) = {-0.100836, -0.748444, 0, 1.0};
Point(81) = {-0.097062, -0.748602, 0, 1.0};
Point(82) = {-0.093287, -0.748768, 0, 1.0};
Point(83) = {-0.089513, -0.748934, 0, 1.0};
Point(84) = {-0.085738, -0.749102, 0, 1.0};
Point(85) = {-0.081964, -0.749267, 0, 1.0};
Point(86) = {-0.074418, -0.749558, 0, 1.0};
Point(87) = {-0.066877, -0.749790, 0, 1.0};
Point(88) = {-0.059343, -0.749940, 0, 1.0};
Point(89) = {-0.051815, -0.750000, 0, 1.0};
Point(90) = {-0.044297, -0.749941, 0, 1.0};
Point(91) = {-0.036789, -0.749751, 0, 1.0};
Point(92) = {-0.029291, -0.749428, 0, 1.0};
Point(93) = {-0.021802, -0.748990, 0, 1.0};
Point(94) = {-0.018061, -0.748731, 0, 1.0};
Point(95) = {-0.014322, -0.748451, 0, 1.0};
Point(96) = {-0.010584, -0.748141, 0, 1.0};
Point(97) = {-0.006863, -0.747630, 0, 1.0};
Point(98) = {-0.003122, -0.747367, 0, 1.0};
Point(99) = {0.000605, -0.746921, 0, 1.0};
Point(100) = {0.004329, -0.746449, 0, 1.0};
Point(101) = {0.008051, -0.745941, 0, 1.0};
Point(102) = {0.011768, -0.745379, 0, 1.0};
Point(103) = {0.015480, -0.744738, 0, 1.0};
Point(104) = {0.019183, -0.743996, 0, 1.0};
Point(105) = {0.022877, -0.743133, 0, 1.0};
Point(106) = {0.026560, -0.742128, 0, 1.0};
Point(107) = {0.030227, -0.740926, 0, 1.0};
Point(108) = {0.032052, -0.740217, 0, 1.0};
Point(109) = {0.033869, -0.739392, 0, 1.0};
Point(110) = {0.034771, -0.738912, 0, 1.0};
Point(111) = {0.035668, -0.738350, 0, 1.0};
Point(112) = {0.036201, -0.737958, 0, 1.0};
Point(113) = {0.036728, -0.737476, 0, 1.0};
Point(114) = {0.037071, -0.737050, 0, 1.0};
Point(115) = {0.037386, -0.736269, 0, 1.0};
Point(116) = {0.036974, -0.735808, 0, 1.0};
Point(117) = {0.036582, -0.735605, 0, 1.0};
Point(118) = {0.036000, -0.735381, 0, 1.0};
Point(119) = {0.035422, -0.735208, 0, 1.0};
Point(120) = {0.034465, -0.734993, 0, 1.0};
Point(121) = {0.033513, -0.734846, 0, 1.0};
Point(122) = {0.031617, -0.734650, 0, 1.0};
Point(123) = {0.029727, -0.734536, 0, 1.0};
Point(124) = {0.025958, -0.734435, 0, 1.0};
Point(125) = {0.022197, -0.734439, 0, 1.0};
Point(126) = {0.018440, -0.734504, 0, 1.0};
Point(127) = {0.014688, -0.734617, 0, 1.0};
Point(128) = {0.010938, -0.734772, 0, 1.0};
Point(129) = {0.007192, -0.734963, 0, 1.0};
Point(130) = {0.003447, -0.735181, 0, 1.0};
Point(131) = {-0.000295, -0.735421, 0, 1.0};
Point(132) = {-0.004037, -0.735677, 0, 1.0};
Point(133) = {-0.007777, -0.735949, 0, 1.0};
Point(134) = {-0.011515, -0.736240, 0, 1.0};
Point(135) = {-0.015252, -0.736556, 0, 1.0};
Point(136) = {-0.018987, -0.736900, 0, 1.0};
Point(137) = {-0.022719, -0.737268, 0, 1.0};
Point(138) = {-0.030180, -0.738069, 0, 1.0};
Point(139) = {-0.037634, -0.738951, 0, 1.0};
Point(140) = {-0.045081, -0.739910, 0, 1.0};
Point(141) = {-0.052524, -0.740935, 0, 1.0};
Point(142) = {-0.059964, -0.742001, 0, 1.0};
Point(143) = {-0.067403, -0.743069, 0, 1.0};
Point(144) = {-0.074844, -0.744116, 0, 1.0};
Point(145) = {-0.082289, -0.745108, 0, 1.0};
Point(146) = {-0.086015, -0.745572, 0, 1.0};
Point(147) = {-0.089742, -0.746001, 0, 1.0};
Point(148) = {-0.093474, -0.746379, 0, 1.0};
Point(149) = {-0.097209, -0.746716, 0, 1.0};
Point(150) = {-0.100947, -0.747024, 0, 1.0};
Point(151) = {-0.104684, -0.747338, 0, 1.0};
Point(152) = {-0.108421, -0.747646, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:55};
Spline(3) = {55:76};
Spline(4) = {76,1};

// Lines: second blade (splines 5-8)
Spline(5) = {77:97};
Spline(6) = {97:131};
Spline(7) = {131:152};
Spline(8) = {152,77};

// Outer domain (points 20001-4 and lines)
Point(153) = {-13.50000000, -15.00000000, 0, 1.0};
Point(154) = {-13.50000000, 15.00000000, 0, 1.0};
Point(155) = {13.50000000, 15.00000000, 0, 1.0};
Point(156) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {153, 154};
Line(12) = {154, 155};
Line(13) = {155, 156};
Line(14) = {153, 156};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
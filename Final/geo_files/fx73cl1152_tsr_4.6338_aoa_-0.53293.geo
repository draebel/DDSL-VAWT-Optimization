SetFactory("OpenCASCADE");

Point(1) = {0.074976, 0.731874, 0, 1.0};
Point(2) = {0.072895, 0.732273, 0, 1.0};
Point(3) = {0.070150, 0.732807, 0, 1.0};
Point(4) = {0.067124, 0.733398, 0, 1.0};
Point(5) = {0.063827, 0.734046, 0, 1.0};
Point(6) = {0.060273, 0.734748, 0, 1.0};
Point(7) = {0.056480, 0.735494, 0, 1.0};
Point(8) = {0.052463, 0.736285, 0, 1.0};
Point(9) = {0.048240, 0.737124, 0, 1.0};
Point(10) = {0.043825, 0.738009, 0, 1.0};
Point(11) = {0.039241, 0.738935, 0, 1.0};
Point(12) = {0.034507, 0.739893, 0, 1.0};
Point(13) = {0.029643, 0.740881, 0, 1.0};
Point(14) = {0.024670, 0.741891, 0, 1.0};
Point(15) = {0.019609, 0.742913, 0, 1.0};
Point(16) = {0.014480, 0.743935, 0, 1.0};
Point(17) = {0.009308, 0.744944, 0, 1.0};
Point(18) = {0.004114, 0.745925, 0, 1.0};
Point(19) = {-0.001079, 0.746860, 0, 1.0};
Point(20) = {-0.006250, 0.747728, 0, 1.0};
Point(21) = {-0.011376, 0.748511, 0, 1.0};
Point(22) = {-0.016434, 0.749182, 0, 1.0};
Point(23) = {-0.021403, 0.749693, 0, 1.0};
Point(24) = {-0.026260, 0.749977, 0, 1.0};
Point(25) = {-0.030985, 0.750000, 0, 1.0};
Point(26) = {-0.035559, 0.749762, 0, 1.0};
Point(27) = {-0.039961, 0.749297, 0, 1.0};
Point(28) = {-0.044170, 0.748604, 0, 1.0};
Point(29) = {-0.048171, 0.747673, 0, 1.0};
Point(30) = {-0.051947, 0.746521, 0, 1.0};
Point(31) = {-0.055481, 0.745195, 0, 1.0};
Point(32) = {-0.058759, 0.743739, 0, 1.0};
Point(33) = {-0.061765, 0.742187, 0, 1.0};
Point(34) = {-0.064490, 0.740554, 0, 1.0};
Point(35) = {-0.066920, 0.738870, 0, 1.0};
Point(36) = {-0.069045, 0.737184, 0, 1.0};
Point(37) = {-0.070858, 0.735517, 0, 1.0};
Point(38) = {-0.072347, 0.733886, 0, 1.0};
Point(39) = {-0.073510, 0.732308, 0, 1.0};
Point(40) = {-0.074342, 0.730845, 0, 1.0};
Point(41) = {-0.074839, 0.729526, 0, 1.0};
Point(42) = {-0.074997, 0.728291, 0, 1.0};
Point(43) = {-0.074816, 0.727094, 0, 1.0};
Point(44) = {-0.074296, 0.725943, 0, 1.0};
Point(45) = {-0.073442, 0.724952, 0, 1.0};
Point(46) = {-0.072257, 0.724202, 0, 1.0};
Point(47) = {-0.070748, 0.723693, 0, 1.0};
Point(48) = {-0.068917, 0.723382, 0, 1.0};
Point(49) = {-0.066775, 0.723211, 0, 1.0};
Point(50) = {-0.064328, 0.723169, 0, 1.0};
Point(51) = {-0.061589, 0.723222, 0, 1.0};
Point(52) = {-0.058570, 0.723359, 0, 1.0};
Point(53) = {-0.055280, 0.723574, 0, 1.0};
Point(54) = {-0.051736, 0.723865, 0, 1.0};
Point(55) = {-0.047953, 0.724247, 0, 1.0};
Point(56) = {-0.043948, 0.724689, 0, 1.0};
Point(57) = {-0.039736, 0.725171, 0, 1.0};
Point(58) = {-0.035335, 0.725676, 0, 1.0};
Point(59) = {-0.030764, 0.726183, 0, 1.0};
Point(60) = {-0.026044, 0.726692, 0, 1.0};
Point(61) = {-0.021194, 0.727193, 0, 1.0};
Point(62) = {-0.016234, 0.727687, 0, 1.0};
Point(63) = {-0.011187, 0.728155, 0, 1.0};
Point(64) = {-0.006072, 0.728591, 0, 1.0};
Point(65) = {-0.000913, 0.728994, 0, 1.0};
Point(66) = {0.004268, 0.729368, 0, 1.0};
Point(67) = {0.009450, 0.729708, 0, 1.0};
Point(68) = {0.014609, 0.730012, 0, 1.0};
Point(69) = {0.019726, 0.730277, 0, 1.0};
Point(70) = {0.024776, 0.730500, 0, 1.0};
Point(71) = {0.029738, 0.730680, 0, 1.0};
Point(72) = {0.034592, 0.730817, 0, 1.0};
Point(73) = {0.039315, 0.730921, 0, 1.0};
Point(74) = {0.043891, 0.730989, 0, 1.0};
Point(75) = {0.048296, 0.731019, 0, 1.0};
Point(76) = {0.052512, 0.731007, 0, 1.0};
Point(77) = {0.056522, 0.730965, 0, 1.0};
Point(78) = {0.060309, 0.730900, 0, 1.0};
Point(79) = {0.063857, 0.730815, 0, 1.0};
Point(80) = {0.067149, 0.730714, 0, 1.0};
Point(81) = {0.070171, 0.730596, 0, 1.0};
Point(82) = {0.072912, 0.730468, 0, 1.0};
Point(83) = {0.074991, 0.730351, 0, 1.0};
Point(84) = {-0.074976, -0.731874, 0, 1.0};
Point(85) = {-0.072895, -0.732273, 0, 1.0};
Point(86) = {-0.070150, -0.732807, 0, 1.0};
Point(87) = {-0.067124, -0.733398, 0, 1.0};
Point(88) = {-0.063827, -0.734046, 0, 1.0};
Point(89) = {-0.060273, -0.734748, 0, 1.0};
Point(90) = {-0.056480, -0.735494, 0, 1.0};
Point(91) = {-0.052463, -0.736285, 0, 1.0};
Point(92) = {-0.048240, -0.737124, 0, 1.0};
Point(93) = {-0.043825, -0.738009, 0, 1.0};
Point(94) = {-0.039241, -0.738935, 0, 1.0};
Point(95) = {-0.034507, -0.739893, 0, 1.0};
Point(96) = {-0.029643, -0.740881, 0, 1.0};
Point(97) = {-0.024670, -0.741891, 0, 1.0};
Point(98) = {-0.019609, -0.742913, 0, 1.0};
Point(99) = {-0.014480, -0.743935, 0, 1.0};
Point(100) = {-0.009308, -0.744944, 0, 1.0};
Point(101) = {-0.004114, -0.745925, 0, 1.0};
Point(102) = {0.001079, -0.746860, 0, 1.0};
Point(103) = {0.006250, -0.747728, 0, 1.0};
Point(104) = {0.011376, -0.748511, 0, 1.0};
Point(105) = {0.016434, -0.749182, 0, 1.0};
Point(106) = {0.021403, -0.749693, 0, 1.0};
Point(107) = {0.026260, -0.749977, 0, 1.0};
Point(108) = {0.030985, -0.750000, 0, 1.0};
Point(109) = {0.035559, -0.749762, 0, 1.0};
Point(110) = {0.039961, -0.749297, 0, 1.0};
Point(111) = {0.044170, -0.748604, 0, 1.0};
Point(112) = {0.048171, -0.747673, 0, 1.0};
Point(113) = {0.051947, -0.746521, 0, 1.0};
Point(114) = {0.055481, -0.745195, 0, 1.0};
Point(115) = {0.058759, -0.743739, 0, 1.0};
Point(116) = {0.061765, -0.742187, 0, 1.0};
Point(117) = {0.064490, -0.740554, 0, 1.0};
Point(118) = {0.066920, -0.738870, 0, 1.0};
Point(119) = {0.069045, -0.737184, 0, 1.0};
Point(120) = {0.070858, -0.735517, 0, 1.0};
Point(121) = {0.072347, -0.733886, 0, 1.0};
Point(122) = {0.073510, -0.732308, 0, 1.0};
Point(123) = {0.074342, -0.730845, 0, 1.0};
Point(124) = {0.074839, -0.729526, 0, 1.0};
Point(125) = {0.074997, -0.728291, 0, 1.0};
Point(126) = {0.074816, -0.727094, 0, 1.0};
Point(127) = {0.074296, -0.725943, 0, 1.0};
Point(128) = {0.073442, -0.724952, 0, 1.0};
Point(129) = {0.072257, -0.724202, 0, 1.0};
Point(130) = {0.070748, -0.723693, 0, 1.0};
Point(131) = {0.068917, -0.723382, 0, 1.0};
Point(132) = {0.066775, -0.723211, 0, 1.0};
Point(133) = {0.064328, -0.723169, 0, 1.0};
Point(134) = {0.061589, -0.723222, 0, 1.0};
Point(135) = {0.058570, -0.723359, 0, 1.0};
Point(136) = {0.055280, -0.723574, 0, 1.0};
Point(137) = {0.051736, -0.723865, 0, 1.0};
Point(138) = {0.047953, -0.724247, 0, 1.0};
Point(139) = {0.043948, -0.724689, 0, 1.0};
Point(140) = {0.039736, -0.725171, 0, 1.0};
Point(141) = {0.035335, -0.725676, 0, 1.0};
Point(142) = {0.030764, -0.726183, 0, 1.0};
Point(143) = {0.026044, -0.726692, 0, 1.0};
Point(144) = {0.021194, -0.727193, 0, 1.0};
Point(145) = {0.016234, -0.727687, 0, 1.0};
Point(146) = {0.011187, -0.728155, 0, 1.0};
Point(147) = {0.006072, -0.728591, 0, 1.0};
Point(148) = {0.000913, -0.728994, 0, 1.0};
Point(149) = {-0.004268, -0.729368, 0, 1.0};
Point(150) = {-0.009450, -0.729708, 0, 1.0};
Point(151) = {-0.014609, -0.730012, 0, 1.0};
Point(152) = {-0.019726, -0.730277, 0, 1.0};
Point(153) = {-0.024776, -0.730500, 0, 1.0};
Point(154) = {-0.029738, -0.730680, 0, 1.0};
Point(155) = {-0.034592, -0.730817, 0, 1.0};
Point(156) = {-0.039315, -0.730921, 0, 1.0};
Point(157) = {-0.043891, -0.730989, 0, 1.0};
Point(158) = {-0.048296, -0.731019, 0, 1.0};
Point(159) = {-0.052512, -0.731007, 0, 1.0};
Point(160) = {-0.056522, -0.730965, 0, 1.0};
Point(161) = {-0.060309, -0.730900, 0, 1.0};
Point(162) = {-0.063857, -0.730815, 0, 1.0};
Point(163) = {-0.067149, -0.730714, 0, 1.0};
Point(164) = {-0.070171, -0.730596, 0, 1.0};
Point(165) = {-0.072912, -0.730468, 0, 1.0};
Point(166) = {-0.074991, -0.730351, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {36.00000000, 15.00000000, 0, 1.0};
Point(170) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
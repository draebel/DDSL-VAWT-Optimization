SetFactory("OpenCASCADE");

Point(1) = {0.149358, 0.743350, 0, 1.0};
Point(2) = {0.148869, 0.743431, 0, 1.0};
Point(3) = {0.147405, 0.743673, 0, 1.0};
Point(4) = {0.144982, 0.744073, 0, 1.0};
Point(5) = {0.141623, 0.744625, 0, 1.0};
Point(6) = {0.137359, 0.745318, 0, 1.0};
Point(7) = {0.132234, 0.746137, 0, 1.0};
Point(8) = {0.126300, 0.747034, 0, 1.0};
Point(9) = {0.119628, 0.747803, 0, 1.0};
Point(10) = {0.112286, 0.748424, 0, 1.0};
Point(11) = {0.104334, 0.748996, 0, 1.0};
Point(12) = {0.095853, 0.749468, 0, 1.0};
Point(13) = {0.086928, 0.749805, 0, 1.0};
Point(14) = {0.077645, 0.749987, 0, 1.0};
Point(15) = {0.068096, 0.750000, 0, 1.0};
Point(16) = {0.058372, 0.749830, 0, 1.0};
Point(17) = {0.048567, 0.749474, 0, 1.0};
Point(18) = {0.038778, 0.748929, 0, 1.0};
Point(19) = {0.029098, 0.748203, 0, 1.0};
Point(20) = {0.019620, 0.747310, 0, 1.0};
Point(21) = {0.010431, 0.746294, 0, 1.0};
Point(22) = {0.001619, 0.745191, 0, 1.0};
Point(23) = {-0.006733, 0.744026, 0, 1.0};
Point(24) = {-0.014544, 0.742819, 0, 1.0};
Point(25) = {-0.021741, 0.741581, 0, 1.0};
Point(26) = {-0.028242, 0.740191, 0, 1.0};
Point(27) = {-0.033983, 0.738622, 0, 1.0};
Point(28) = {-0.038917, 0.737018, 0, 1.0};
Point(29) = {-0.042995, 0.735352, 0, 1.0};
Point(30) = {-0.046163, 0.733462, 0, 1.0};
Point(31) = {-0.048407, 0.731587, 0, 1.0};
Point(32) = {-0.049705, 0.729732, 0, 1.0};
Point(33) = {-0.050000, 0.727338, 0, 1.0};
Point(34) = {-0.049361, 0.725355, 0, 1.0};
Point(35) = {-0.047806, 0.723944, 0, 1.0};
Point(36) = {-0.045353, 0.723168, 0, 1.0};
Point(37) = {-0.042022, 0.722981, 0, 1.0};
Point(38) = {-0.037823, 0.723108, 0, 1.0};
Point(39) = {-0.032792, 0.723490, 0, 1.0};
Point(40) = {-0.026966, 0.723974, 0, 1.0};
Point(41) = {-0.020396, 0.724492, 0, 1.0};
Point(42) = {-0.013139, 0.724963, 0, 1.0};
Point(43) = {-0.005277, 0.725524, 0, 1.0};
Point(44) = {0.003120, 0.726123, 0, 1.0};
Point(45) = {0.011967, 0.726782, 0, 1.0};
Point(46) = {0.021179, 0.727494, 0, 1.0};
Point(47) = {0.030666, 0.728272, 0, 1.0};
Point(48) = {0.040335, 0.729146, 0, 1.0};
Point(49) = {0.050090, 0.730116, 0, 1.0};
Point(50) = {0.059840, 0.731166, 0, 1.0};
Point(51) = {0.069489, 0.732288, 0, 1.0};
Point(52) = {0.078947, 0.733452, 0, 1.0};
Point(53) = {0.088125, 0.734592, 0, 1.0};
Point(54) = {0.096937, 0.735699, 0, 1.0};
Point(55) = {0.105296, 0.736764, 0, 1.0};
Point(56) = {0.113123, 0.737783, 0, 1.0};
Point(57) = {0.120341, 0.738741, 0, 1.0};
Point(58) = {0.126883, 0.739624, 0, 1.0};
Point(59) = {0.132685, 0.740409, 0, 1.0};
Point(60) = {0.137692, 0.741089, 0, 1.0};
Point(61) = {0.141856, 0.741659, 0, 1.0};
Point(62) = {0.145137, 0.742112, 0, 1.0};
Point(63) = {0.147503, 0.742439, 0, 1.0};
Point(64) = {0.148932, 0.742636, 0, 1.0};
Point(65) = {0.149409, 0.742702, 0, 1.0};
Point(66) = {-0.149358, -0.743350, 0, 1.0};
Point(67) = {-0.148869, -0.743431, 0, 1.0};
Point(68) = {-0.147405, -0.743673, 0, 1.0};
Point(69) = {-0.144982, -0.744073, 0, 1.0};
Point(70) = {-0.141623, -0.744625, 0, 1.0};
Point(71) = {-0.137359, -0.745318, 0, 1.0};
Point(72) = {-0.132234, -0.746137, 0, 1.0};
Point(73) = {-0.126300, -0.747034, 0, 1.0};
Point(74) = {-0.119628, -0.747803, 0, 1.0};
Point(75) = {-0.112286, -0.748424, 0, 1.0};
Point(76) = {-0.104334, -0.748996, 0, 1.0};
Point(77) = {-0.095853, -0.749468, 0, 1.0};
Point(78) = {-0.086928, -0.749805, 0, 1.0};
Point(79) = {-0.077645, -0.749987, 0, 1.0};
Point(80) = {-0.068096, -0.750000, 0, 1.0};
Point(81) = {-0.058372, -0.749830, 0, 1.0};
Point(82) = {-0.048567, -0.749474, 0, 1.0};
Point(83) = {-0.038778, -0.748929, 0, 1.0};
Point(84) = {-0.029098, -0.748203, 0, 1.0};
Point(85) = {-0.019620, -0.747310, 0, 1.0};
Point(86) = {-0.010431, -0.746294, 0, 1.0};
Point(87) = {-0.001619, -0.745191, 0, 1.0};
Point(88) = {0.006733, -0.744026, 0, 1.0};
Point(89) = {0.014544, -0.742819, 0, 1.0};
Point(90) = {0.021741, -0.741581, 0, 1.0};
Point(91) = {0.028242, -0.740191, 0, 1.0};
Point(92) = {0.033983, -0.738622, 0, 1.0};
Point(93) = {0.038917, -0.737018, 0, 1.0};
Point(94) = {0.042995, -0.735352, 0, 1.0};
Point(95) = {0.046163, -0.733462, 0, 1.0};
Point(96) = {0.048407, -0.731587, 0, 1.0};
Point(97) = {0.049705, -0.729732, 0, 1.0};
Point(98) = {0.050000, -0.727338, 0, 1.0};
Point(99) = {0.049361, -0.725355, 0, 1.0};
Point(100) = {0.047806, -0.723944, 0, 1.0};
Point(101) = {0.045353, -0.723168, 0, 1.0};
Point(102) = {0.042022, -0.722981, 0, 1.0};
Point(103) = {0.037823, -0.723108, 0, 1.0};
Point(104) = {0.032792, -0.723490, 0, 1.0};
Point(105) = {0.026966, -0.723974, 0, 1.0};
Point(106) = {0.020396, -0.724492, 0, 1.0};
Point(107) = {0.013139, -0.724963, 0, 1.0};
Point(108) = {0.005277, -0.725524, 0, 1.0};
Point(109) = {-0.003120, -0.726123, 0, 1.0};
Point(110) = {-0.011967, -0.726782, 0, 1.0};
Point(111) = {-0.021179, -0.727494, 0, 1.0};
Point(112) = {-0.030666, -0.728272, 0, 1.0};
Point(113) = {-0.040335, -0.729146, 0, 1.0};
Point(114) = {-0.050090, -0.730116, 0, 1.0};
Point(115) = {-0.059840, -0.731166, 0, 1.0};
Point(116) = {-0.069489, -0.732288, 0, 1.0};
Point(117) = {-0.078947, -0.733452, 0, 1.0};
Point(118) = {-0.088125, -0.734592, 0, 1.0};
Point(119) = {-0.096937, -0.735699, 0, 1.0};
Point(120) = {-0.105296, -0.736764, 0, 1.0};
Point(121) = {-0.113123, -0.737783, 0, 1.0};
Point(122) = {-0.120341, -0.738741, 0, 1.0};
Point(123) = {-0.126883, -0.739624, 0, 1.0};
Point(124) = {-0.132685, -0.740409, 0, 1.0};
Point(125) = {-0.137692, -0.741089, 0, 1.0};
Point(126) = {-0.141856, -0.741659, 0, 1.0};
Point(127) = {-0.145137, -0.742112, 0, 1.0};
Point(128) = {-0.147503, -0.742439, 0, 1.0};
Point(129) = {-0.148932, -0.742636, 0, 1.0};
Point(130) = {-0.149409, -0.742702, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
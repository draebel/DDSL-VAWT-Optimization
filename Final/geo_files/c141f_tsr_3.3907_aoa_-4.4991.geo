SetFactory("OpenCASCADE");

Point(1) = {0.074679, 0.746675, 0, 1.0};
Point(2) = {0.074434, 0.746716, 0, 1.0};
Point(3) = {0.073703, 0.746837, 0, 1.0};
Point(4) = {0.072491, 0.747036, 0, 1.0};
Point(5) = {0.070811, 0.747312, 0, 1.0};
Point(6) = {0.068680, 0.747659, 0, 1.0};
Point(7) = {0.066117, 0.748068, 0, 1.0};
Point(8) = {0.063150, 0.748517, 0, 1.0};
Point(9) = {0.059814, 0.748902, 0, 1.0};
Point(10) = {0.056143, 0.749212, 0, 1.0};
Point(11) = {0.052167, 0.749498, 0, 1.0};
Point(12) = {0.047927, 0.749734, 0, 1.0};
Point(13) = {0.043464, 0.749902, 0, 1.0};
Point(14) = {0.038823, 0.749994, 0, 1.0};
Point(15) = {0.034048, 0.750000, 0, 1.0};
Point(16) = {0.029186, 0.749915, 0, 1.0};
Point(17) = {0.024284, 0.749737, 0, 1.0};
Point(18) = {0.019389, 0.749465, 0, 1.0};
Point(19) = {0.014549, 0.749102, 0, 1.0};
Point(20) = {0.009810, 0.748655, 0, 1.0};
Point(21) = {0.005216, 0.748147, 0, 1.0};
Point(22) = {0.000810, 0.747596, 0, 1.0};
Point(23) = {-0.003366, 0.747013, 0, 1.0};
Point(24) = {-0.007272, 0.746410, 0, 1.0};
Point(25) = {-0.010870, 0.745790, 0, 1.0};
Point(26) = {-0.014121, 0.745095, 0, 1.0};
Point(27) = {-0.016991, 0.744311, 0, 1.0};
Point(28) = {-0.019459, 0.743509, 0, 1.0};
Point(29) = {-0.021498, 0.742676, 0, 1.0};
Point(30) = {-0.023081, 0.741731, 0, 1.0};
Point(31) = {-0.024204, 0.740794, 0, 1.0};
Point(32) = {-0.024853, 0.739866, 0, 1.0};
Point(33) = {-0.025000, 0.738669, 0, 1.0};
Point(34) = {-0.024680, 0.737677, 0, 1.0};
Point(35) = {-0.023903, 0.736972, 0, 1.0};
Point(36) = {-0.022676, 0.736584, 0, 1.0};
Point(37) = {-0.021011, 0.736490, 0, 1.0};
Point(38) = {-0.018911, 0.736554, 0, 1.0};
Point(39) = {-0.016396, 0.736745, 0, 1.0};
Point(40) = {-0.013483, 0.736987, 0, 1.0};
Point(41) = {-0.010198, 0.737246, 0, 1.0};
Point(42) = {-0.006570, 0.737482, 0, 1.0};
Point(43) = {-0.002638, 0.737762, 0, 1.0};
Point(44) = {0.001560, 0.738061, 0, 1.0};
Point(45) = {0.005983, 0.738391, 0, 1.0};
Point(46) = {0.010589, 0.738747, 0, 1.0};
Point(47) = {0.015333, 0.739136, 0, 1.0};
Point(48) = {0.020168, 0.739573, 0, 1.0};
Point(49) = {0.025045, 0.740058, 0, 1.0};
Point(50) = {0.029920, 0.740583, 0, 1.0};
Point(51) = {0.034745, 0.741144, 0, 1.0};
Point(52) = {0.039473, 0.741726, 0, 1.0};
Point(53) = {0.044063, 0.742296, 0, 1.0};
Point(54) = {0.048468, 0.742850, 0, 1.0};
Point(55) = {0.052648, 0.743382, 0, 1.0};
Point(56) = {0.056562, 0.743892, 0, 1.0};
Point(57) = {0.060171, 0.744371, 0, 1.0};
Point(58) = {0.063441, 0.744812, 0, 1.0};
Point(59) = {0.066342, 0.745204, 0, 1.0};
Point(60) = {0.068846, 0.745545, 0, 1.0};
Point(61) = {0.070928, 0.745830, 0, 1.0};
Point(62) = {0.072568, 0.746056, 0, 1.0};
Point(63) = {0.073751, 0.746219, 0, 1.0};
Point(64) = {0.074466, 0.746318, 0, 1.0};
Point(65) = {0.074705, 0.746351, 0, 1.0};
Point(66) = {-0.074679, -0.746675, 0, 1.0};
Point(67) = {-0.074434, -0.746716, 0, 1.0};
Point(68) = {-0.073703, -0.746837, 0, 1.0};
Point(69) = {-0.072491, -0.747036, 0, 1.0};
Point(70) = {-0.070811, -0.747312, 0, 1.0};
Point(71) = {-0.068680, -0.747659, 0, 1.0};
Point(72) = {-0.066117, -0.748068, 0, 1.0};
Point(73) = {-0.063150, -0.748517, 0, 1.0};
Point(74) = {-0.059814, -0.748902, 0, 1.0};
Point(75) = {-0.056143, -0.749212, 0, 1.0};
Point(76) = {-0.052167, -0.749498, 0, 1.0};
Point(77) = {-0.047927, -0.749734, 0, 1.0};
Point(78) = {-0.043464, -0.749902, 0, 1.0};
Point(79) = {-0.038823, -0.749994, 0, 1.0};
Point(80) = {-0.034048, -0.750000, 0, 1.0};
Point(81) = {-0.029186, -0.749915, 0, 1.0};
Point(82) = {-0.024284, -0.749737, 0, 1.0};
Point(83) = {-0.019389, -0.749465, 0, 1.0};
Point(84) = {-0.014549, -0.749102, 0, 1.0};
Point(85) = {-0.009810, -0.748655, 0, 1.0};
Point(86) = {-0.005216, -0.748147, 0, 1.0};
Point(87) = {-0.000810, -0.747596, 0, 1.0};
Point(88) = {0.003366, -0.747013, 0, 1.0};
Point(89) = {0.007272, -0.746410, 0, 1.0};
Point(90) = {0.010870, -0.745790, 0, 1.0};
Point(91) = {0.014121, -0.745095, 0, 1.0};
Point(92) = {0.016991, -0.744311, 0, 1.0};
Point(93) = {0.019459, -0.743509, 0, 1.0};
Point(94) = {0.021498, -0.742676, 0, 1.0};
Point(95) = {0.023081, -0.741731, 0, 1.0};
Point(96) = {0.024204, -0.740794, 0, 1.0};
Point(97) = {0.024853, -0.739866, 0, 1.0};
Point(98) = {0.025000, -0.738669, 0, 1.0};
Point(99) = {0.024680, -0.737677, 0, 1.0};
Point(100) = {0.023903, -0.736972, 0, 1.0};
Point(101) = {0.022676, -0.736584, 0, 1.0};
Point(102) = {0.021011, -0.736490, 0, 1.0};
Point(103) = {0.018911, -0.736554, 0, 1.0};
Point(104) = {0.016396, -0.736745, 0, 1.0};
Point(105) = {0.013483, -0.736987, 0, 1.0};
Point(106) = {0.010198, -0.737246, 0, 1.0};
Point(107) = {0.006570, -0.737482, 0, 1.0};
Point(108) = {0.002638, -0.737762, 0, 1.0};
Point(109) = {-0.001560, -0.738061, 0, 1.0};
Point(110) = {-0.005983, -0.738391, 0, 1.0};
Point(111) = {-0.010589, -0.738747, 0, 1.0};
Point(112) = {-0.015333, -0.739136, 0, 1.0};
Point(113) = {-0.020168, -0.739573, 0, 1.0};
Point(114) = {-0.025045, -0.740058, 0, 1.0};
Point(115) = {-0.029920, -0.740583, 0, 1.0};
Point(116) = {-0.034745, -0.741144, 0, 1.0};
Point(117) = {-0.039473, -0.741726, 0, 1.0};
Point(118) = {-0.044063, -0.742296, 0, 1.0};
Point(119) = {-0.048468, -0.742850, 0, 1.0};
Point(120) = {-0.052648, -0.743382, 0, 1.0};
Point(121) = {-0.056562, -0.743892, 0, 1.0};
Point(122) = {-0.060171, -0.744371, 0, 1.0};
Point(123) = {-0.063441, -0.744812, 0, 1.0};
Point(124) = {-0.066342, -0.745204, 0, 1.0};
Point(125) = {-0.068846, -0.745545, 0, 1.0};
Point(126) = {-0.070928, -0.745830, 0, 1.0};
Point(127) = {-0.072568, -0.746056, 0, 1.0};
Point(128) = {-0.073751, -0.746219, 0, 1.0};
Point(129) = {-0.074466, -0.746318, 0, 1.0};
Point(130) = {-0.074705, -0.746351, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112134, 0.745013, 0, 1.0};
Point(2) = {0.111767, 0.745073, 0, 1.0};
Point(3) = {0.110670, 0.745255, 0, 1.0};
Point(4) = {0.108852, 0.745555, 0, 1.0};
Point(5) = {0.106332, 0.745969, 0, 1.0};
Point(6) = {0.103135, 0.746489, 0, 1.0};
Point(7) = {0.099291, 0.747103, 0, 1.0};
Point(8) = {0.094840, 0.747775, 0, 1.0};
Point(9) = {0.089837, 0.748352, 0, 1.0};
Point(10) = {0.084330, 0.748818, 0, 1.0};
Point(11) = {0.078366, 0.749247, 0, 1.0};
Point(12) = {0.072006, 0.749601, 0, 1.0};
Point(13) = {0.065312, 0.749853, 0, 1.0};
Point(14) = {0.058350, 0.749990, 0, 1.0};
Point(15) = {0.051187, 0.750000, 0, 1.0};
Point(16) = {0.043894, 0.749873, 0, 1.0};
Point(17) = {0.036541, 0.749605, 0, 1.0};
Point(18) = {0.029199, 0.749197, 0, 1.0};
Point(19) = {0.021939, 0.748653, 0, 1.0};
Point(20) = {0.014830, 0.747983, 0, 1.0};
Point(21) = {0.007939, 0.747221, 0, 1.0};
Point(22) = {0.001330, 0.746394, 0, 1.0};
Point(23) = {-0.004934, 0.745519, 0, 1.0};
Point(24) = {-0.010793, 0.744614, 0, 1.0};
Point(25) = {-0.016190, 0.743686, 0, 1.0};
Point(26) = {-0.021066, 0.742643, 0, 1.0};
Point(27) = {-0.025371, 0.741466, 0, 1.0};
Point(28) = {-0.029072, 0.740263, 0, 1.0};
Point(29) = {-0.032131, 0.739014, 0, 1.0};
Point(30) = {-0.034506, 0.737597, 0, 1.0};
Point(31) = {-0.036190, 0.736190, 0, 1.0};
Point(32) = {-0.037163, 0.734799, 0, 1.0};
Point(33) = {-0.037384, 0.733003, 0, 1.0};
Point(34) = {-0.036905, 0.731516, 0, 1.0};
Point(35) = {-0.035739, 0.730458, 0, 1.0};
Point(36) = {-0.033899, 0.729876, 0, 1.0};
Point(37) = {-0.031401, 0.729735, 0, 1.0};
Point(38) = {-0.028251, 0.729831, 0, 1.0};
Point(39) = {-0.024478, 0.730118, 0, 1.0};
Point(40) = {-0.020109, 0.730481, 0, 1.0};
Point(41) = {-0.015182, 0.730869, 0, 1.0};
Point(42) = {-0.009739, 0.731222, 0, 1.0};
Point(43) = {-0.003842, 0.731643, 0, 1.0};
Point(44) = {0.002455, 0.732092, 0, 1.0};
Point(45) = {0.009090, 0.732586, 0, 1.0};
Point(46) = {0.016000, 0.733120, 0, 1.0};
Point(47) = {0.023115, 0.733704, 0, 1.0};
Point(48) = {0.030367, 0.734359, 0, 1.0};
Point(49) = {0.037683, 0.735087, 0, 1.0};
Point(50) = {0.044996, 0.735874, 0, 1.0};
Point(51) = {0.052232, 0.736716, 0, 1.0};
Point(52) = {0.059325, 0.737589, 0, 1.0};
Point(53) = {0.066210, 0.738444, 0, 1.0};
Point(54) = {0.072818, 0.739275, 0, 1.0};
Point(55) = {0.079088, 0.740073, 0, 1.0};
Point(56) = {0.084958, 0.740837, 0, 1.0};
Point(57) = {0.090372, 0.741556, 0, 1.0};
Point(58) = {0.095278, 0.742218, 0, 1.0};
Point(59) = {0.099629, 0.742806, 0, 1.0};
Point(60) = {0.103385, 0.743317, 0, 1.0};
Point(61) = {0.106508, 0.743744, 0, 1.0};
Point(62) = {0.108968, 0.744084, 0, 1.0};
Point(63) = {0.110743, 0.744329, 0, 1.0};
Point(64) = {0.111814, 0.744477, 0, 1.0};
Point(65) = {0.112172, 0.744527, 0, 1.0};
Point(66) = {-0.112134, -0.745013, 0, 1.0};
Point(67) = {-0.111767, -0.745073, 0, 1.0};
Point(68) = {-0.110670, -0.745255, 0, 1.0};
Point(69) = {-0.108852, -0.745555, 0, 1.0};
Point(70) = {-0.106332, -0.745969, 0, 1.0};
Point(71) = {-0.103135, -0.746489, 0, 1.0};
Point(72) = {-0.099291, -0.747103, 0, 1.0};
Point(73) = {-0.094840, -0.747775, 0, 1.0};
Point(74) = {-0.089837, -0.748352, 0, 1.0};
Point(75) = {-0.084330, -0.748818, 0, 1.0};
Point(76) = {-0.078366, -0.749247, 0, 1.0};
Point(77) = {-0.072006, -0.749601, 0, 1.0};
Point(78) = {-0.065312, -0.749853, 0, 1.0};
Point(79) = {-0.058350, -0.749990, 0, 1.0};
Point(80) = {-0.051187, -0.750000, 0, 1.0};
Point(81) = {-0.043894, -0.749873, 0, 1.0};
Point(82) = {-0.036541, -0.749605, 0, 1.0};
Point(83) = {-0.029199, -0.749197, 0, 1.0};
Point(84) = {-0.021939, -0.748653, 0, 1.0};
Point(85) = {-0.014830, -0.747983, 0, 1.0};
Point(86) = {-0.007939, -0.747221, 0, 1.0};
Point(87) = {-0.001330, -0.746394, 0, 1.0};
Point(88) = {0.004934, -0.745519, 0, 1.0};
Point(89) = {0.010793, -0.744614, 0, 1.0};
Point(90) = {0.016190, -0.743686, 0, 1.0};
Point(91) = {0.021066, -0.742643, 0, 1.0};
Point(92) = {0.025371, -0.741466, 0, 1.0};
Point(93) = {0.029072, -0.740263, 0, 1.0};
Point(94) = {0.032131, -0.739014, 0, 1.0};
Point(95) = {0.034506, -0.737597, 0, 1.0};
Point(96) = {0.036190, -0.736190, 0, 1.0};
Point(97) = {0.037163, -0.734799, 0, 1.0};
Point(98) = {0.037384, -0.733003, 0, 1.0};
Point(99) = {0.036905, -0.731516, 0, 1.0};
Point(100) = {0.035739, -0.730458, 0, 1.0};
Point(101) = {0.033899, -0.729876, 0, 1.0};
Point(102) = {0.031401, -0.729735, 0, 1.0};
Point(103) = {0.028251, -0.729831, 0, 1.0};
Point(104) = {0.024478, -0.730118, 0, 1.0};
Point(105) = {0.020109, -0.730481, 0, 1.0};
Point(106) = {0.015182, -0.730869, 0, 1.0};
Point(107) = {0.009739, -0.731222, 0, 1.0};
Point(108) = {0.003842, -0.731643, 0, 1.0};
Point(109) = {-0.002455, -0.732092, 0, 1.0};
Point(110) = {-0.009090, -0.732586, 0, 1.0};
Point(111) = {-0.016000, -0.733120, 0, 1.0};
Point(112) = {-0.023115, -0.733704, 0, 1.0};
Point(113) = {-0.030367, -0.734359, 0, 1.0};
Point(114) = {-0.037683, -0.735087, 0, 1.0};
Point(115) = {-0.044996, -0.735874, 0, 1.0};
Point(116) = {-0.052232, -0.736716, 0, 1.0};
Point(117) = {-0.059325, -0.737589, 0, 1.0};
Point(118) = {-0.066210, -0.738444, 0, 1.0};
Point(119) = {-0.072818, -0.739275, 0, 1.0};
Point(120) = {-0.079088, -0.740073, 0, 1.0};
Point(121) = {-0.084958, -0.740837, 0, 1.0};
Point(122) = {-0.090372, -0.741556, 0, 1.0};
Point(123) = {-0.095278, -0.742218, 0, 1.0};
Point(124) = {-0.099629, -0.742806, 0, 1.0};
Point(125) = {-0.103385, -0.743317, 0, 1.0};
Point(126) = {-0.106508, -0.743744, 0, 1.0};
Point(127) = {-0.108968, -0.744084, 0, 1.0};
Point(128) = {-0.110743, -0.744329, 0, 1.0};
Point(129) = {-0.111814, -0.744477, 0, 1.0};
Point(130) = {-0.112172, -0.744527, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
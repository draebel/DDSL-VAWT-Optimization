SetFactory("OpenCASCADE");

Point(1) = {0.074996, 0.742161, 0, 1.0};
Point(2) = {0.074638, 0.742155, 0, 1.0};
Point(3) = {0.073565, 0.742166, 0, 1.0};
Point(4) = {0.071794, 0.742255, 0, 1.0};
Point(5) = {0.069383, 0.742484, 0, 1.0};
Point(6) = {0.066424, 0.742876, 0, 1.0};
Point(7) = {0.063006, 0.743420, 0, 1.0};
Point(8) = {0.059205, 0.744090, 0, 1.0};
Point(9) = {0.055089, 0.744853, 0, 1.0};
Point(10) = {0.050725, 0.745676, 0, 1.0};
Point(11) = {0.046170, 0.746521, 0, 1.0};
Point(12) = {0.041482, 0.747351, 0, 1.0};
Point(13) = {0.036713, 0.748132, 0, 1.0};
Point(14) = {0.031922, 0.748825, 0, 1.0};
Point(15) = {0.027145, 0.749371, 0, 1.0};
Point(16) = {0.022377, 0.749735, 0, 1.0};
Point(17) = {0.017624, 0.749936, 0, 1.0};
Point(18) = {0.012929, 0.750000, 0, 1.0};
Point(19) = {0.008346, 0.749933, 0, 1.0};
Point(20) = {0.003922, 0.749739, 0, 1.0};
Point(21) = {-0.000298, 0.749416, 0, 1.0};
Point(22) = {-0.004278, 0.748970, 0, 1.0};
Point(23) = {-0.007985, 0.748406, 0, 1.0};
Point(24) = {-0.011391, 0.747736, 0, 1.0};
Point(25) = {-0.014468, 0.746977, 0, 1.0};
Point(26) = {-0.017190, 0.746149, 0, 1.0};
Point(27) = {-0.019533, 0.745271, 0, 1.0};
Point(28) = {-0.021481, 0.744366, 0, 1.0};
Point(29) = {-0.023018, 0.743466, 0, 1.0};
Point(30) = {-0.024130, 0.742604, 0, 1.0};
Point(31) = {-0.024798, 0.741830, 0, 1.0};
Point(32) = {-0.024911, 0.741620, 0, 1.0};
Point(33) = {-0.024980, 0.741431, 0, 1.0};
Point(34) = {-0.024999, 0.741318, 0, 1.0};
Point(35) = {-0.024992, 0.741218, 0, 1.0};
Point(36) = {-0.024950, 0.741126, 0, 1.0};
Point(37) = {-0.024876, 0.741031, 0, 1.0};
Point(38) = {-0.024718, 0.740884, 0, 1.0};
Point(39) = {-0.024510, 0.740733, 0, 1.0};
Point(40) = {-0.023480, 0.740244, 0, 1.0};
Point(41) = {-0.021935, 0.739800, 0, 1.0};
Point(42) = {-0.019888, 0.739427, 0, 1.0};
Point(43) = {-0.017347, 0.739132, 0, 1.0};
Point(44) = {-0.014331, 0.738915, 0, 1.0};
Point(45) = {-0.010864, 0.738774, 0, 1.0};
Point(46) = {-0.006977, 0.738698, 0, 1.0};
Point(47) = {-0.002711, 0.738678, 0, 1.0};
Point(48) = {0.001887, 0.738702, 0, 1.0};
Point(49) = {0.006760, 0.738762, 0, 1.0};
Point(50) = {0.011847, 0.738851, 0, 1.0};
Point(51) = {0.017087, 0.738968, 0, 1.0};
Point(52) = {0.022420, 0.739110, 0, 1.0};
Point(53) = {0.027783, 0.739274, 0, 1.0};
Point(54) = {0.033115, 0.739456, 0, 1.0};
Point(55) = {0.038354, 0.739653, 0, 1.0};
Point(56) = {0.043439, 0.739863, 0, 1.0};
Point(57) = {0.048311, 0.740083, 0, 1.0};
Point(58) = {0.052914, 0.740308, 0, 1.0};
Point(59) = {0.057193, 0.740539, 0, 1.0};
Point(60) = {0.061099, 0.740771, 0, 1.0};
Point(61) = {0.064584, 0.741004, 0, 1.0};
Point(62) = {0.067608, 0.741237, 0, 1.0};
Point(63) = {0.070132, 0.741476, 0, 1.0};
Point(64) = {0.072150, 0.741732, 0, 1.0};
Point(65) = {0.073671, 0.741968, 0, 1.0};
Point(66) = {0.074652, 0.742116, 0, 1.0};
Point(67) = {-0.074996, -0.742161, 0, 1.0};
Point(68) = {-0.074638, -0.742155, 0, 1.0};
Point(69) = {-0.073565, -0.742166, 0, 1.0};
Point(70) = {-0.071794, -0.742255, 0, 1.0};
Point(71) = {-0.069383, -0.742484, 0, 1.0};
Point(72) = {-0.066424, -0.742876, 0, 1.0};
Point(73) = {-0.063006, -0.743420, 0, 1.0};
Point(74) = {-0.059205, -0.744090, 0, 1.0};
Point(75) = {-0.055089, -0.744853, 0, 1.0};
Point(76) = {-0.050725, -0.745676, 0, 1.0};
Point(77) = {-0.046170, -0.746521, 0, 1.0};
Point(78) = {-0.041482, -0.747351, 0, 1.0};
Point(79) = {-0.036713, -0.748132, 0, 1.0};
Point(80) = {-0.031922, -0.748825, 0, 1.0};
Point(81) = {-0.027145, -0.749371, 0, 1.0};
Point(82) = {-0.022377, -0.749735, 0, 1.0};
Point(83) = {-0.017624, -0.749936, 0, 1.0};
Point(84) = {-0.012929, -0.750000, 0, 1.0};
Point(85) = {-0.008346, -0.749933, 0, 1.0};
Point(86) = {-0.003922, -0.749739, 0, 1.0};
Point(87) = {0.000298, -0.749416, 0, 1.0};
Point(88) = {0.004278, -0.748970, 0, 1.0};
Point(89) = {0.007985, -0.748406, 0, 1.0};
Point(90) = {0.011391, -0.747736, 0, 1.0};
Point(91) = {0.014468, -0.746977, 0, 1.0};
Point(92) = {0.017190, -0.746149, 0, 1.0};
Point(93) = {0.019533, -0.745271, 0, 1.0};
Point(94) = {0.021481, -0.744366, 0, 1.0};
Point(95) = {0.023018, -0.743466, 0, 1.0};
Point(96) = {0.024130, -0.742604, 0, 1.0};
Point(97) = {0.024798, -0.741830, 0, 1.0};
Point(98) = {0.024911, -0.741620, 0, 1.0};
Point(99) = {0.024980, -0.741431, 0, 1.0};
Point(100) = {0.024999, -0.741318, 0, 1.0};
Point(101) = {0.024992, -0.741218, 0, 1.0};
Point(102) = {0.024950, -0.741126, 0, 1.0};
Point(103) = {0.024876, -0.741031, 0, 1.0};
Point(104) = {0.024718, -0.740884, 0, 1.0};
Point(105) = {0.024510, -0.740733, 0, 1.0};
Point(106) = {0.023480, -0.740244, 0, 1.0};
Point(107) = {0.021935, -0.739800, 0, 1.0};
Point(108) = {0.019888, -0.739427, 0, 1.0};
Point(109) = {0.017347, -0.739132, 0, 1.0};
Point(110) = {0.014331, -0.738915, 0, 1.0};
Point(111) = {0.010864, -0.738774, 0, 1.0};
Point(112) = {0.006977, -0.738698, 0, 1.0};
Point(113) = {0.002711, -0.738678, 0, 1.0};
Point(114) = {-0.001887, -0.738702, 0, 1.0};
Point(115) = {-0.006760, -0.738762, 0, 1.0};
Point(116) = {-0.011847, -0.738851, 0, 1.0};
Point(117) = {-0.017087, -0.738968, 0, 1.0};
Point(118) = {-0.022420, -0.739110, 0, 1.0};
Point(119) = {-0.027783, -0.739274, 0, 1.0};
Point(120) = {-0.033115, -0.739456, 0, 1.0};
Point(121) = {-0.038354, -0.739653, 0, 1.0};
Point(122) = {-0.043439, -0.739863, 0, 1.0};
Point(123) = {-0.048311, -0.740083, 0, 1.0};
Point(124) = {-0.052914, -0.740308, 0, 1.0};
Point(125) = {-0.057193, -0.740539, 0, 1.0};
Point(126) = {-0.061099, -0.740771, 0, 1.0};
Point(127) = {-0.064584, -0.741004, 0, 1.0};
Point(128) = {-0.067608, -0.741237, 0, 1.0};
Point(129) = {-0.070132, -0.741476, 0, 1.0};
Point(130) = {-0.072150, -0.741732, 0, 1.0};
Point(131) = {-0.073671, -0.741968, 0, 1.0};
Point(132) = {-0.074652, -0.742116, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
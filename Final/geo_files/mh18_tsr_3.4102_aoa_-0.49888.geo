SetFactory("OpenCASCADE");

Point(1) = {0.149992, 0.734321, 0, 1.0};
Point(2) = {0.149276, 0.734310, 0, 1.0};
Point(3) = {0.147129, 0.734331, 0, 1.0};
Point(4) = {0.143588, 0.734510, 0, 1.0};
Point(5) = {0.138767, 0.734967, 0, 1.0};
Point(6) = {0.132849, 0.735752, 0, 1.0};
Point(7) = {0.126013, 0.736840, 0, 1.0};
Point(8) = {0.118409, 0.738180, 0, 1.0};
Point(9) = {0.110178, 0.739707, 0, 1.0};
Point(10) = {0.101449, 0.741352, 0, 1.0};
Point(11) = {0.092341, 0.743041, 0, 1.0};
Point(12) = {0.082965, 0.744701, 0, 1.0};
Point(13) = {0.073427, 0.746263, 0, 1.0};
Point(14) = {0.063843, 0.747650, 0, 1.0};
Point(15) = {0.054289, 0.748742, 0, 1.0};
Point(16) = {0.044755, 0.749471, 0, 1.0};
Point(17) = {0.035249, 0.749873, 0, 1.0};
Point(18) = {0.025859, 0.750000, 0, 1.0};
Point(19) = {0.016692, 0.749867, 0, 1.0};
Point(20) = {0.007844, 0.749477, 0, 1.0};
Point(21) = {-0.000596, 0.748833, 0, 1.0};
Point(22) = {-0.008556, 0.747939, 0, 1.0};
Point(23) = {-0.015970, 0.746811, 0, 1.0};
Point(24) = {-0.022782, 0.745472, 0, 1.0};
Point(25) = {-0.028936, 0.743955, 0, 1.0};
Point(26) = {-0.034379, 0.742299, 0, 1.0};
Point(27) = {-0.039065, 0.740542, 0, 1.0};
Point(28) = {-0.042962, 0.738733, 0, 1.0};
Point(29) = {-0.046036, 0.736931, 0, 1.0};
Point(30) = {-0.048260, 0.735209, 0, 1.0};
Point(31) = {-0.049596, 0.733661, 0, 1.0};
Point(32) = {-0.049821, 0.733241, 0, 1.0};
Point(33) = {-0.049959, 0.732863, 0, 1.0};
Point(34) = {-0.049998, 0.732635, 0, 1.0};
Point(35) = {-0.049984, 0.732437, 0, 1.0};
Point(36) = {-0.049901, 0.732252, 0, 1.0};
Point(37) = {-0.049752, 0.732061, 0, 1.0};
Point(38) = {-0.049437, 0.731767, 0, 1.0};
Point(39) = {-0.049020, 0.731465, 0, 1.0};
Point(40) = {-0.046959, 0.730488, 0, 1.0};
Point(41) = {-0.043871, 0.729599, 0, 1.0};
Point(42) = {-0.039775, 0.728854, 0, 1.0};
Point(43) = {-0.034694, 0.728264, 0, 1.0};
Point(44) = {-0.028663, 0.727831, 0, 1.0};
Point(45) = {-0.021729, 0.727547, 0, 1.0};
Point(46) = {-0.013955, 0.727396, 0, 1.0};
Point(47) = {-0.005421, 0.727356, 0, 1.0};
Point(48) = {0.003774, 0.727405, 0, 1.0};
Point(49) = {0.013520, 0.727525, 0, 1.0};
Point(50) = {0.023694, 0.727703, 0, 1.0};
Point(51) = {0.034175, 0.727937, 0, 1.0};
Point(52) = {0.044840, 0.728220, 0, 1.0};
Point(53) = {0.055567, 0.728548, 0, 1.0};
Point(54) = {0.066230, 0.728912, 0, 1.0};
Point(55) = {0.076708, 0.729307, 0, 1.0};
Point(56) = {0.086878, 0.729726, 0, 1.0};
Point(57) = {0.096622, 0.730165, 0, 1.0};
Point(58) = {0.105827, 0.730617, 0, 1.0};
Point(59) = {0.114386, 0.731077, 0, 1.0};
Point(60) = {0.122197, 0.731542, 0, 1.0};
Point(61) = {0.129168, 0.732008, 0, 1.0};
Point(62) = {0.135216, 0.732474, 0, 1.0};
Point(63) = {0.140265, 0.732952, 0, 1.0};
Point(64) = {0.144299, 0.733464, 0, 1.0};
Point(65) = {0.147341, 0.733937, 0, 1.0};
Point(66) = {0.149303, 0.734233, 0, 1.0};
Point(67) = {-0.149992, -0.734321, 0, 1.0};
Point(68) = {-0.149276, -0.734310, 0, 1.0};
Point(69) = {-0.147129, -0.734331, 0, 1.0};
Point(70) = {-0.143588, -0.734510, 0, 1.0};
Point(71) = {-0.138767, -0.734967, 0, 1.0};
Point(72) = {-0.132849, -0.735752, 0, 1.0};
Point(73) = {-0.126013, -0.736840, 0, 1.0};
Point(74) = {-0.118409, -0.738180, 0, 1.0};
Point(75) = {-0.110178, -0.739707, 0, 1.0};
Point(76) = {-0.101449, -0.741352, 0, 1.0};
Point(77) = {-0.092341, -0.743041, 0, 1.0};
Point(78) = {-0.082965, -0.744701, 0, 1.0};
Point(79) = {-0.073427, -0.746263, 0, 1.0};
Point(80) = {-0.063843, -0.747650, 0, 1.0};
Point(81) = {-0.054289, -0.748742, 0, 1.0};
Point(82) = {-0.044755, -0.749471, 0, 1.0};
Point(83) = {-0.035249, -0.749873, 0, 1.0};
Point(84) = {-0.025859, -0.750000, 0, 1.0};
Point(85) = {-0.016692, -0.749867, 0, 1.0};
Point(86) = {-0.007844, -0.749477, 0, 1.0};
Point(87) = {0.000596, -0.748833, 0, 1.0};
Point(88) = {0.008556, -0.747939, 0, 1.0};
Point(89) = {0.015970, -0.746811, 0, 1.0};
Point(90) = {0.022782, -0.745472, 0, 1.0};
Point(91) = {0.028936, -0.743955, 0, 1.0};
Point(92) = {0.034379, -0.742299, 0, 1.0};
Point(93) = {0.039065, -0.740542, 0, 1.0};
Point(94) = {0.042962, -0.738733, 0, 1.0};
Point(95) = {0.046036, -0.736931, 0, 1.0};
Point(96) = {0.048260, -0.735209, 0, 1.0};
Point(97) = {0.049596, -0.733661, 0, 1.0};
Point(98) = {0.049821, -0.733241, 0, 1.0};
Point(99) = {0.049959, -0.732863, 0, 1.0};
Point(100) = {0.049998, -0.732635, 0, 1.0};
Point(101) = {0.049984, -0.732437, 0, 1.0};
Point(102) = {0.049901, -0.732252, 0, 1.0};
Point(103) = {0.049752, -0.732061, 0, 1.0};
Point(104) = {0.049437, -0.731767, 0, 1.0};
Point(105) = {0.049020, -0.731465, 0, 1.0};
Point(106) = {0.046959, -0.730488, 0, 1.0};
Point(107) = {0.043871, -0.729599, 0, 1.0};
Point(108) = {0.039775, -0.728854, 0, 1.0};
Point(109) = {0.034694, -0.728264, 0, 1.0};
Point(110) = {0.028663, -0.727831, 0, 1.0};
Point(111) = {0.021729, -0.727547, 0, 1.0};
Point(112) = {0.013955, -0.727396, 0, 1.0};
Point(113) = {0.005421, -0.727356, 0, 1.0};
Point(114) = {-0.003774, -0.727405, 0, 1.0};
Point(115) = {-0.013520, -0.727525, 0, 1.0};
Point(116) = {-0.023694, -0.727703, 0, 1.0};
Point(117) = {-0.034175, -0.727937, 0, 1.0};
Point(118) = {-0.044840, -0.728220, 0, 1.0};
Point(119) = {-0.055567, -0.728548, 0, 1.0};
Point(120) = {-0.066230, -0.728912, 0, 1.0};
Point(121) = {-0.076708, -0.729307, 0, 1.0};
Point(122) = {-0.086878, -0.729726, 0, 1.0};
Point(123) = {-0.096622, -0.730165, 0, 1.0};
Point(124) = {-0.105827, -0.730617, 0, 1.0};
Point(125) = {-0.114386, -0.731077, 0, 1.0};
Point(126) = {-0.122197, -0.731542, 0, 1.0};
Point(127) = {-0.129168, -0.732008, 0, 1.0};
Point(128) = {-0.135216, -0.732474, 0, 1.0};
Point(129) = {-0.140265, -0.732952, 0, 1.0};
Point(130) = {-0.144299, -0.733464, 0, 1.0};
Point(131) = {-0.147341, -0.733937, 0, 1.0};
Point(132) = {-0.149303, -0.734233, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
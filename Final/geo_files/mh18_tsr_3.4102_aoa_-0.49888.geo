SetFactory("OpenCASCADE");

Point(1) = {0.112493, 0.738241, 0, 1.0};
Point(2) = {0.111956, 0.738233, 0, 1.0};
Point(3) = {0.110346, 0.738249, 0, 1.0};
Point(4) = {0.107690, 0.738383, 0, 1.0};
Point(5) = {0.104074, 0.738725, 0, 1.0};
Point(6) = {0.099636, 0.739314, 0, 1.0};
Point(7) = {0.094508, 0.740130, 0, 1.0};
Point(8) = {0.088806, 0.741135, 0, 1.0};
Point(9) = {0.082633, 0.742280, 0, 1.0};
Point(10) = {0.076086, 0.743514, 0, 1.0};
Point(11) = {0.069255, 0.744781, 0, 1.0};
Point(12) = {0.062223, 0.746026, 0, 1.0};
Point(13) = {0.055069, 0.747197, 0, 1.0};
Point(14) = {0.047882, 0.748237, 0, 1.0};
Point(15) = {0.040717, 0.749056, 0, 1.0};
Point(16) = {0.033566, 0.749603, 0, 1.0};
Point(17) = {0.026436, 0.749905, 0, 1.0};
Point(18) = {0.019394, 0.750000, 0, 1.0};
Point(19) = {0.012518, 0.749900, 0, 1.0};
Point(20) = {0.005883, 0.749608, 0, 1.0};
Point(21) = {-0.000447, 0.749124, 0, 1.0};
Point(22) = {-0.006417, 0.748454, 0, 1.0};
Point(23) = {-0.011978, 0.747608, 0, 1.0};
Point(24) = {-0.017086, 0.746604, 0, 1.0};
Point(25) = {-0.021702, 0.745466, 0, 1.0};
Point(26) = {-0.025784, 0.744224, 0, 1.0};
Point(27) = {-0.029299, 0.742907, 0, 1.0};
Point(28) = {-0.032221, 0.741550, 0, 1.0};
Point(29) = {-0.034527, 0.740198, 0, 1.0};
Point(30) = {-0.036195, 0.738907, 0, 1.0};
Point(31) = {-0.037197, 0.737746, 0, 1.0};
Point(32) = {-0.037366, 0.737431, 0, 1.0};
Point(33) = {-0.037469, 0.737147, 0, 1.0};
Point(34) = {-0.037499, 0.736977, 0, 1.0};
Point(35) = {-0.037488, 0.736828, 0, 1.0};
Point(36) = {-0.037425, 0.736689, 0, 1.0};
Point(37) = {-0.037314, 0.736546, 0, 1.0};
Point(38) = {-0.037077, 0.736325, 0, 1.0};
Point(39) = {-0.036764, 0.736099, 0, 1.0};
Point(40) = {-0.035219, 0.735366, 0, 1.0};
Point(41) = {-0.032903, 0.734700, 0, 1.0};
Point(42) = {-0.029831, 0.734141, 0, 1.0};
Point(43) = {-0.026020, 0.733698, 0, 1.0};
Point(44) = {-0.021497, 0.733373, 0, 1.0};
Point(45) = {-0.016296, 0.733161, 0, 1.0};
Point(46) = {-0.010466, 0.733048, 0, 1.0};
Point(47) = {-0.004066, 0.733017, 0, 1.0};
Point(48) = {0.002830, 0.733054, 0, 1.0};
Point(49) = {0.010140, 0.733144, 0, 1.0};
Point(50) = {0.017770, 0.733277, 0, 1.0};
Point(51) = {0.025631, 0.733453, 0, 1.0};
Point(52) = {0.033630, 0.733665, 0, 1.0};
Point(53) = {0.041674, 0.733911, 0, 1.0};
Point(54) = {0.049672, 0.734184, 0, 1.0};
Point(55) = {0.057530, 0.734480, 0, 1.0};
Point(56) = {0.065157, 0.734795, 0, 1.0};
Point(57) = {0.072466, 0.735124, 0, 1.0};
Point(58) = {0.079370, 0.735463, 0, 1.0};
Point(59) = {0.085788, 0.735808, 0, 1.0};
Point(60) = {0.091647, 0.736157, 0, 1.0};
Point(61) = {0.096875, 0.736506, 0, 1.0};
Point(62) = {0.101411, 0.736855, 0, 1.0};
Point(63) = {0.105197, 0.737214, 0, 1.0};
Point(64) = {0.108223, 0.737598, 0, 1.0};
Point(65) = {0.110505, 0.737953, 0, 1.0};
Point(66) = {0.111976, 0.738175, 0, 1.0};
Point(67) = {-0.112493, -0.738241, 0, 1.0};
Point(68) = {-0.111956, -0.738233, 0, 1.0};
Point(69) = {-0.110346, -0.738249, 0, 1.0};
Point(70) = {-0.107690, -0.738383, 0, 1.0};
Point(71) = {-0.104074, -0.738725, 0, 1.0};
Point(72) = {-0.099636, -0.739314, 0, 1.0};
Point(73) = {-0.094508, -0.740130, 0, 1.0};
Point(74) = {-0.088806, -0.741135, 0, 1.0};
Point(75) = {-0.082633, -0.742280, 0, 1.0};
Point(76) = {-0.076086, -0.743514, 0, 1.0};
Point(77) = {-0.069255, -0.744781, 0, 1.0};
Point(78) = {-0.062223, -0.746026, 0, 1.0};
Point(79) = {-0.055069, -0.747197, 0, 1.0};
Point(80) = {-0.047882, -0.748237, 0, 1.0};
Point(81) = {-0.040717, -0.749056, 0, 1.0};
Point(82) = {-0.033566, -0.749603, 0, 1.0};
Point(83) = {-0.026436, -0.749905, 0, 1.0};
Point(84) = {-0.019394, -0.750000, 0, 1.0};
Point(85) = {-0.012518, -0.749900, 0, 1.0};
Point(86) = {-0.005883, -0.749608, 0, 1.0};
Point(87) = {0.000447, -0.749124, 0, 1.0};
Point(88) = {0.006417, -0.748454, 0, 1.0};
Point(89) = {0.011978, -0.747608, 0, 1.0};
Point(90) = {0.017086, -0.746604, 0, 1.0};
Point(91) = {0.021702, -0.745466, 0, 1.0};
Point(92) = {0.025784, -0.744224, 0, 1.0};
Point(93) = {0.029299, -0.742907, 0, 1.0};
Point(94) = {0.032221, -0.741550, 0, 1.0};
Point(95) = {0.034527, -0.740198, 0, 1.0};
Point(96) = {0.036195, -0.738907, 0, 1.0};
Point(97) = {0.037197, -0.737746, 0, 1.0};
Point(98) = {0.037366, -0.737431, 0, 1.0};
Point(99) = {0.037469, -0.737147, 0, 1.0};
Point(100) = {0.037499, -0.736977, 0, 1.0};
Point(101) = {0.037488, -0.736828, 0, 1.0};
Point(102) = {0.037425, -0.736689, 0, 1.0};
Point(103) = {0.037314, -0.736546, 0, 1.0};
Point(104) = {0.037077, -0.736325, 0, 1.0};
Point(105) = {0.036764, -0.736099, 0, 1.0};
Point(106) = {0.035219, -0.735366, 0, 1.0};
Point(107) = {0.032903, -0.734700, 0, 1.0};
Point(108) = {0.029831, -0.734141, 0, 1.0};
Point(109) = {0.026020, -0.733698, 0, 1.0};
Point(110) = {0.021497, -0.733373, 0, 1.0};
Point(111) = {0.016296, -0.733161, 0, 1.0};
Point(112) = {0.010466, -0.733048, 0, 1.0};
Point(113) = {0.004066, -0.733017, 0, 1.0};
Point(114) = {-0.002830, -0.733054, 0, 1.0};
Point(115) = {-0.010140, -0.733144, 0, 1.0};
Point(116) = {-0.017770, -0.733277, 0, 1.0};
Point(117) = {-0.025631, -0.733453, 0, 1.0};
Point(118) = {-0.033630, -0.733665, 0, 1.0};
Point(119) = {-0.041674, -0.733911, 0, 1.0};
Point(120) = {-0.049672, -0.734184, 0, 1.0};
Point(121) = {-0.057530, -0.734480, 0, 1.0};
Point(122) = {-0.065157, -0.734795, 0, 1.0};
Point(123) = {-0.072466, -0.735124, 0, 1.0};
Point(124) = {-0.079370, -0.735463, 0, 1.0};
Point(125) = {-0.085788, -0.735808, 0, 1.0};
Point(126) = {-0.091647, -0.736157, 0, 1.0};
Point(127) = {-0.096875, -0.736506, 0, 1.0};
Point(128) = {-0.101411, -0.736855, 0, 1.0};
Point(129) = {-0.105197, -0.737214, 0, 1.0};
Point(130) = {-0.108223, -0.737598, 0, 1.0};
Point(131) = {-0.110505, -0.737953, 0, 1.0};
Point(132) = {-0.111976, -0.738175, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:48};
Spline(3) = {48:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:86};
Spline(6) = {86:114};
Spline(7) = {114:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
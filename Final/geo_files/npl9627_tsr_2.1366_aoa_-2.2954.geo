SetFactory("OpenCASCADE");

Point(1) = {0.074907, 0.743994, 0, 1.0};
Point(2) = {0.073091, 0.744195, 0, 1.0};
Point(3) = {0.069850, 0.744544, 0, 1.0};
Point(4) = {0.065953, 0.744951, 0, 1.0};
Point(5) = {0.061441, 0.745403, 0, 1.0};
Point(6) = {0.056351, 0.745892, 0, 1.0};
Point(7) = {0.050739, 0.746403, 0, 1.0};
Point(8) = {0.044654, 0.746928, 0, 1.0};
Point(9) = {0.038157, 0.747453, 0, 1.0};
Point(10) = {0.031310, 0.747964, 0, 1.0};
Point(11) = {0.024181, 0.748454, 0, 1.0};
Point(12) = {0.016838, 0.748904, 0, 1.0};
Point(13) = {0.009350, 0.749305, 0, 1.0};
Point(14) = {0.001792, 0.749638, 0, 1.0};
Point(15) = {-0.005765, 0.749887, 0, 1.0};
Point(16) = {-0.013246, 0.750000, 0, 1.0};
Point(17) = {-0.020577, 0.749981, 0, 1.0};
Point(18) = {-0.027690, 0.749783, 0, 1.0};
Point(19) = {-0.034516, 0.749436, 0, 1.0};
Point(20) = {-0.040988, 0.748929, 0, 1.0};
Point(21) = {-0.047044, 0.748276, 0, 1.0};
Point(22) = {-0.052625, 0.747451, 0, 1.0};
Point(23) = {-0.057680, 0.746493, 0, 1.0};
Point(24) = {-0.062155, 0.745408, 0, 1.0};
Point(25) = {-0.066015, 0.744274, 0, 1.0};
Point(26) = {-0.069220, 0.743135, 0, 1.0};
Point(27) = {-0.071734, 0.741770, 0, 1.0};
Point(28) = {-0.072723, 0.741068, 0, 1.0};
Point(29) = {-0.073535, 0.740307, 0, 1.0};
Point(30) = {-0.073776, 0.740036, 0, 1.0};
Point(31) = {-0.074001, 0.739749, 0, 1.0};
Point(32) = {-0.074224, 0.739448, 0, 1.0};
Point(33) = {-0.074446, 0.739046, 0, 1.0};
Point(34) = {-0.074606, 0.738744, 0, 1.0};
Point(35) = {-0.074724, 0.738462, 0, 1.0};
Point(36) = {-0.074811, 0.738196, 0, 1.0};
Point(37) = {-0.074880, 0.737899, 0, 1.0};
Point(38) = {-0.074920, 0.737630, 0, 1.0};
Point(39) = {-0.074940, 0.737169, 0, 1.0};
Point(40) = {-0.074900, 0.736797, 0, 1.0};
Point(41) = {-0.074849, 0.736582, 0, 1.0};
Point(42) = {-0.074766, 0.736345, 0, 1.0};
Point(43) = {-0.074669, 0.736140, 0, 1.0};
Point(44) = {-0.074539, 0.735927, 0, 1.0};
Point(45) = {-0.074366, 0.735723, 0, 1.0};
Point(46) = {-0.074129, 0.735505, 0, 1.0};
Point(47) = {-0.073893, 0.735288, 0, 1.0};
Point(48) = {-0.073658, 0.735109, 0, 1.0};
Point(49) = {-0.073406, 0.734961, 0, 1.0};
Point(50) = {-0.072564, 0.734486, 0, 1.0};
Point(51) = {-0.071549, 0.734084, 0, 1.0};
Point(52) = {-0.068983, 0.733301, 0, 1.0};
Point(53) = {-0.065732, 0.732518, 0, 1.0};
Point(54) = {-0.061828, 0.731816, 0, 1.0};
Point(55) = {-0.057313, 0.731265, 0, 1.0};
Point(56) = {-0.052226, 0.730882, 0, 1.0};
Point(57) = {-0.046621, 0.730668, 0, 1.0};
Point(58) = {-0.040548, 0.730628, 0, 1.0};
Point(59) = {-0.034067, 0.730758, 0, 1.0};
Point(60) = {-0.027239, 0.731055, 0, 1.0};
Point(61) = {-0.020132, 0.731502, 0, 1.0};
Point(62) = {-0.012814, 0.732077, 0, 1.0};
Point(63) = {-0.005351, 0.732680, 0, 1.0};
Point(64) = {0.002184, 0.733333, 0, 1.0};
Point(65) = {0.009718, 0.734029, 0, 1.0};
Point(66) = {0.017178, 0.734789, 0, 1.0};
Point(67) = {0.024491, 0.735592, 0, 1.0};
Point(68) = {0.031588, 0.736424, 0, 1.0};
Point(69) = {0.038402, 0.737264, 0, 1.0};
Point(70) = {0.044867, 0.738101, 0, 1.0};
Point(71) = {0.050919, 0.738919, 0, 1.0};
Point(72) = {0.056500, 0.739699, 0, 1.0};
Point(73) = {0.061560, 0.740432, 0, 1.0};
Point(74) = {0.066046, 0.741101, 0, 1.0};
Point(75) = {0.069919, 0.741695, 0, 1.0};
Point(76) = {0.073139, 0.742199, 0, 1.0};
Point(77) = {0.074967, 0.742489, 0, 1.0};
Point(78) = {-0.074907, -0.743994, 0, 1.0};
Point(79) = {-0.073091, -0.744195, 0, 1.0};
Point(80) = {-0.069850, -0.744544, 0, 1.0};
Point(81) = {-0.065953, -0.744951, 0, 1.0};
Point(82) = {-0.061441, -0.745403, 0, 1.0};
Point(83) = {-0.056351, -0.745892, 0, 1.0};
Point(84) = {-0.050739, -0.746403, 0, 1.0};
Point(85) = {-0.044654, -0.746928, 0, 1.0};
Point(86) = {-0.038157, -0.747453, 0, 1.0};
Point(87) = {-0.031310, -0.747964, 0, 1.0};
Point(88) = {-0.024181, -0.748454, 0, 1.0};
Point(89) = {-0.016838, -0.748904, 0, 1.0};
Point(90) = {-0.009350, -0.749305, 0, 1.0};
Point(91) = {-0.001792, -0.749638, 0, 1.0};
Point(92) = {0.005765, -0.749887, 0, 1.0};
Point(93) = {0.013246, -0.750000, 0, 1.0};
Point(94) = {0.020577, -0.749981, 0, 1.0};
Point(95) = {0.027690, -0.749783, 0, 1.0};
Point(96) = {0.034516, -0.749436, 0, 1.0};
Point(97) = {0.040988, -0.748929, 0, 1.0};
Point(98) = {0.047044, -0.748276, 0, 1.0};
Point(99) = {0.052625, -0.747451, 0, 1.0};
Point(100) = {0.057680, -0.746493, 0, 1.0};
Point(101) = {0.062155, -0.745408, 0, 1.0};
Point(102) = {0.066015, -0.744274, 0, 1.0};
Point(103) = {0.069220, -0.743135, 0, 1.0};
Point(104) = {0.071734, -0.741770, 0, 1.0};
Point(105) = {0.072723, -0.741068, 0, 1.0};
Point(106) = {0.073535, -0.740307, 0, 1.0};
Point(107) = {0.073776, -0.740036, 0, 1.0};
Point(108) = {0.074001, -0.739749, 0, 1.0};
Point(109) = {0.074224, -0.739448, 0, 1.0};
Point(110) = {0.074446, -0.739046, 0, 1.0};
Point(111) = {0.074606, -0.738744, 0, 1.0};
Point(112) = {0.074724, -0.738462, 0, 1.0};
Point(113) = {0.074811, -0.738196, 0, 1.0};
Point(114) = {0.074880, -0.737899, 0, 1.0};
Point(115) = {0.074920, -0.737630, 0, 1.0};
Point(116) = {0.074940, -0.737169, 0, 1.0};
Point(117) = {0.074900, -0.736797, 0, 1.0};
Point(118) = {0.074849, -0.736582, 0, 1.0};
Point(119) = {0.074766, -0.736345, 0, 1.0};
Point(120) = {0.074669, -0.736140, 0, 1.0};
Point(121) = {0.074539, -0.735927, 0, 1.0};
Point(122) = {0.074366, -0.735723, 0, 1.0};
Point(123) = {0.074129, -0.735505, 0, 1.0};
Point(124) = {0.073893, -0.735288, 0, 1.0};
Point(125) = {0.073658, -0.735109, 0, 1.0};
Point(126) = {0.073406, -0.734961, 0, 1.0};
Point(127) = {0.072564, -0.734486, 0, 1.0};
Point(128) = {0.071549, -0.734084, 0, 1.0};
Point(129) = {0.068983, -0.733301, 0, 1.0};
Point(130) = {0.065732, -0.732518, 0, 1.0};
Point(131) = {0.061828, -0.731816, 0, 1.0};
Point(132) = {0.057313, -0.731265, 0, 1.0};
Point(133) = {0.052226, -0.730882, 0, 1.0};
Point(134) = {0.046621, -0.730668, 0, 1.0};
Point(135) = {0.040548, -0.730628, 0, 1.0};
Point(136) = {0.034067, -0.730758, 0, 1.0};
Point(137) = {0.027239, -0.731055, 0, 1.0};
Point(138) = {0.020132, -0.731502, 0, 1.0};
Point(139) = {0.012814, -0.732077, 0, 1.0};
Point(140) = {0.005351, -0.732680, 0, 1.0};
Point(141) = {-0.002184, -0.733333, 0, 1.0};
Point(142) = {-0.009718, -0.734029, 0, 1.0};
Point(143) = {-0.017178, -0.734789, 0, 1.0};
Point(144) = {-0.024491, -0.735592, 0, 1.0};
Point(145) = {-0.031588, -0.736424, 0, 1.0};
Point(146) = {-0.038402, -0.737264, 0, 1.0};
Point(147) = {-0.044867, -0.738101, 0, 1.0};
Point(148) = {-0.050919, -0.738919, 0, 1.0};
Point(149) = {-0.056500, -0.739699, 0, 1.0};
Point(150) = {-0.061560, -0.740432, 0, 1.0};
Point(151) = {-0.066046, -0.741101, 0, 1.0};
Point(152) = {-0.069919, -0.741695, 0, 1.0};
Point(153) = {-0.073139, -0.742199, 0, 1.0};
Point(154) = {-0.074967, -0.742489, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:59};
Spline(3) = {59:77};
Spline(4) = {77,1};

// Lines: second blade (splines 5-8)
Spline(5) = {78:96};
Spline(6) = {96:136};
Spline(7) = {136:154};
Spline(8) = {154,78};

// Outer domain (points 20001-4 and lines)
Point(155) = {-13.50000000, -15.00000000, 0, 1.0};
Point(156) = {-13.50000000, 15.00000000, 0, 1.0};
Point(157) = {36.00000000, 15.00000000, 0, 1.0};
Point(158) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {155, 156};
Line(12) = {156, 157};
Line(13) = {157, 158};
Line(14) = {155, 158};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
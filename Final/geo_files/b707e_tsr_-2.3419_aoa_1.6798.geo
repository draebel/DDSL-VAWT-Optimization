SetFactory("OpenCASCADE");

Point(1) = {0.075000, 0.738548, 0, 1.0};
Point(2) = {0.072178, 0.739084, 0, 1.0};
Point(3) = {0.069062, 0.739654, 0, 1.0};
Point(4) = {0.065945, 0.740194, 0, 1.0};
Point(5) = {0.062828, 0.740699, 0, 1.0};
Point(6) = {0.059709, 0.741180, 0, 1.0};
Point(7) = {0.056591, 0.741649, 0, 1.0};
Point(8) = {0.053472, 0.742120, 0, 1.0};
Point(9) = {0.050354, 0.742605, 0, 1.0};
Point(10) = {0.047236, 0.743114, 0, 1.0};
Point(11) = {0.044119, 0.743639, 0, 1.0};
Point(12) = {0.041002, 0.744170, 0, 1.0};
Point(13) = {0.037885, 0.744695, 0, 1.0};
Point(14) = {0.034767, 0.745204, 0, 1.0};
Point(15) = {0.031649, 0.745688, 0, 1.0};
Point(16) = {0.028530, 0.746146, 0, 1.0};
Point(17) = {0.025410, 0.746582, 0, 1.0};
Point(18) = {0.022290, 0.746998, 0, 1.0};
Point(19) = {0.019169, 0.747397, 0, 1.0};
Point(20) = {0.016048, 0.747779, 0, 1.0};
Point(21) = {0.012926, 0.748140, 0, 1.0};
Point(22) = {0.009803, 0.748475, 0, 1.0};
Point(23) = {0.006680, 0.748777, 0, 1.0};
Point(24) = {0.003555, 0.749040, 0, 1.0};
Point(25) = {0.000429, 0.749263, 0, 1.0};
Point(26) = {-0.002698, 0.749449, 0, 1.0};
Point(27) = {-0.005826, 0.749603, 0, 1.0};
Point(28) = {-0.008955, 0.749728, 0, 1.0};
Point(29) = {-0.012084, 0.749829, 0, 1.0};
Point(30) = {-0.015214, 0.749908, 0, 1.0};
Point(31) = {-0.018345, 0.749965, 0, 1.0};
Point(32) = {-0.021477, 0.749996, 0, 1.0};
Point(33) = {-0.024609, 0.750000, 0, 1.0};
Point(34) = {-0.027742, 0.749973, 0, 1.0};
Point(35) = {-0.030877, 0.749915, 0, 1.0};
Point(36) = {-0.034012, 0.749834, 0, 1.0};
Point(37) = {-0.037147, 0.749737, 0, 1.0};
Point(38) = {-0.040283, 0.749622, 0, 1.0};
Point(39) = {-0.043419, 0.749475, 0, 1.0};
Point(40) = {-0.046558, 0.749283, 0, 1.0};
Point(41) = {-0.049697, 0.749040, 0, 1.0};
Point(42) = {-0.052838, 0.748742, 0, 1.0};
Point(43) = {-0.055982, 0.748369, 0, 1.0};
Point(44) = {-0.059129, 0.747883, 0, 1.0};
Point(45) = {-0.062279, 0.747263, 0, 1.0};
Point(46) = {-0.065433, 0.746538, 0, 1.0};
Point(47) = {-0.067013, 0.746070, 0, 1.0};
Point(48) = {-0.068596, 0.745485, 0, 1.0};
Point(49) = {-0.070180, 0.744878, 0, 1.0};
Point(50) = {-0.071762, 0.744354, 0, 1.0};
Point(51) = {-0.073032, 0.743776, 0, 1.0};
Point(52) = {-0.073673, 0.743287, 0, 1.0};
Point(53) = {-0.074314, 0.742771, 0, 1.0};
Point(54) = {-0.074637, 0.742470, 0, 1.0};
Point(55) = {-0.074799, 0.742269, 0, 1.0};
Point(56) = {-0.074881, 0.742132, 0, 1.0};
Point(57) = {-0.074968, 0.741856, 0, 1.0};
Point(58) = {-0.074902, 0.741425, 0, 1.0};
Point(59) = {-0.074828, 0.741267, 0, 1.0};
Point(60) = {-0.074678, 0.741040, 0, 1.0};
Point(61) = {-0.074374, 0.740729, 0, 1.0};
Point(62) = {-0.073757, 0.740411, 0, 1.0};
Point(63) = {-0.073134, 0.740311, 0, 1.0};
Point(64) = {-0.071885, 0.740170, 0, 1.0};
Point(65) = {-0.070323, 0.740002, 0, 1.0};
Point(66) = {-0.068761, 0.739874, 0, 1.0};
Point(67) = {-0.067198, 0.739758, 0, 1.0};
Point(68) = {-0.065636, 0.739629, 0, 1.0};
Point(69) = {-0.062511, 0.739354, 0, 1.0};
Point(70) = {-0.059386, 0.739100, 0, 1.0};
Point(71) = {-0.056261, 0.738852, 0, 1.0};
Point(72) = {-0.053136, 0.738595, 0, 1.0};
Point(73) = {-0.050012, 0.738314, 0, 1.0};
Point(74) = {-0.046888, 0.738019, 0, 1.0};
Point(75) = {-0.043764, 0.737737, 0, 1.0};
Point(76) = {-0.040639, 0.737488, 0, 1.0};
Point(77) = {-0.037513, 0.737258, 0, 1.0};
Point(78) = {-0.034387, 0.737021, 0, 1.0};
Point(79) = {-0.031262, 0.736778, 0, 1.0};
Point(80) = {-0.028136, 0.736546, 0, 1.0};
Point(81) = {-0.025010, 0.736341, 0, 1.0};
Point(82) = {-0.021882, 0.736163, 0, 1.0};
Point(83) = {-0.018755, 0.736008, 0, 1.0};
Point(84) = {-0.015626, 0.735870, 0, 1.0};
Point(85) = {-0.012497, 0.735745, 0, 1.0};
Point(86) = {-0.009368, 0.735630, 0, 1.0};
Point(87) = {-0.006239, 0.735529, 0, 1.0};
Point(88) = {-0.003109, 0.735448, 0, 1.0};
Point(89) = {0.000022, 0.735393, 0, 1.0};
Point(90) = {0.003154, 0.735369, 0, 1.0};
Point(91) = {0.006287, 0.735382, 0, 1.0};
Point(92) = {0.009421, 0.735428, 0, 1.0};
Point(93) = {0.012555, 0.735497, 0, 1.0};
Point(94) = {0.015690, 0.735578, 0, 1.0};
Point(95) = {0.018825, 0.735662, 0, 1.0};
Point(96) = {0.021960, 0.735741, 0, 1.0};
Point(97) = {0.025095, 0.735815, 0, 1.0};
Point(98) = {0.028229, 0.735887, 0, 1.0};
Point(99) = {0.031364, 0.735960, 0, 1.0};
Point(100) = {0.034499, 0.736036, 0, 1.0};
Point(101) = {0.037633, 0.736117, 0, 1.0};
Point(102) = {0.040768, 0.736202, 0, 1.0};
Point(103) = {0.043903, 0.736289, 0, 1.0};
Point(104) = {0.047038, 0.736374, 0, 1.0};
Point(105) = {0.050173, 0.736457, 0, 1.0};
Point(106) = {0.053308, 0.736534, 0, 1.0};
Point(107) = {0.056443, 0.736608, 0, 1.0};
Point(108) = {0.059577, 0.736681, 0, 1.0};
Point(109) = {0.062712, 0.736754, 0, 1.0};
Point(110) = {0.065847, 0.736830, 0, 1.0};
Point(111) = {0.068982, 0.736912, 0, 1.0};
Point(112) = {0.072117, 0.736997, 0, 1.0};
Point(113) = {0.074956, 0.737072, 0, 1.0};
Point(114) = {-0.075000, -0.738548, 0, 1.0};
Point(115) = {-0.072178, -0.739084, 0, 1.0};
Point(116) = {-0.069062, -0.739654, 0, 1.0};
Point(117) = {-0.065945, -0.740194, 0, 1.0};
Point(118) = {-0.062828, -0.740699, 0, 1.0};
Point(119) = {-0.059709, -0.741180, 0, 1.0};
Point(120) = {-0.056591, -0.741649, 0, 1.0};
Point(121) = {-0.053472, -0.742120, 0, 1.0};
Point(122) = {-0.050354, -0.742605, 0, 1.0};
Point(123) = {-0.047236, -0.743114, 0, 1.0};
Point(124) = {-0.044119, -0.743639, 0, 1.0};
Point(125) = {-0.041002, -0.744170, 0, 1.0};
Point(126) = {-0.037885, -0.744695, 0, 1.0};
Point(127) = {-0.034767, -0.745204, 0, 1.0};
Point(128) = {-0.031649, -0.745688, 0, 1.0};
Point(129) = {-0.028530, -0.746146, 0, 1.0};
Point(130) = {-0.025410, -0.746582, 0, 1.0};
Point(131) = {-0.022290, -0.746998, 0, 1.0};
Point(132) = {-0.019169, -0.747397, 0, 1.0};
Point(133) = {-0.016048, -0.747779, 0, 1.0};
Point(134) = {-0.012926, -0.748140, 0, 1.0};
Point(135) = {-0.009803, -0.748475, 0, 1.0};
Point(136) = {-0.006680, -0.748777, 0, 1.0};
Point(137) = {-0.003555, -0.749040, 0, 1.0};
Point(138) = {-0.000429, -0.749263, 0, 1.0};
Point(139) = {0.002698, -0.749449, 0, 1.0};
Point(140) = {0.005826, -0.749603, 0, 1.0};
Point(141) = {0.008955, -0.749728, 0, 1.0};
Point(142) = {0.012084, -0.749829, 0, 1.0};
Point(143) = {0.015214, -0.749908, 0, 1.0};
Point(144) = {0.018345, -0.749965, 0, 1.0};
Point(145) = {0.021477, -0.749996, 0, 1.0};
Point(146) = {0.024609, -0.750000, 0, 1.0};
Point(147) = {0.027742, -0.749973, 0, 1.0};
Point(148) = {0.030877, -0.749915, 0, 1.0};
Point(149) = {0.034012, -0.749834, 0, 1.0};
Point(150) = {0.037147, -0.749737, 0, 1.0};
Point(151) = {0.040283, -0.749622, 0, 1.0};
Point(152) = {0.043419, -0.749475, 0, 1.0};
Point(153) = {0.046558, -0.749283, 0, 1.0};
Point(154) = {0.049697, -0.749040, 0, 1.0};
Point(155) = {0.052838, -0.748742, 0, 1.0};
Point(156) = {0.055982, -0.748369, 0, 1.0};
Point(157) = {0.059129, -0.747883, 0, 1.0};
Point(158) = {0.062279, -0.747263, 0, 1.0};
Point(159) = {0.065433, -0.746538, 0, 1.0};
Point(160) = {0.067013, -0.746070, 0, 1.0};
Point(161) = {0.068596, -0.745485, 0, 1.0};
Point(162) = {0.070180, -0.744878, 0, 1.0};
Point(163) = {0.071762, -0.744354, 0, 1.0};
Point(164) = {0.073032, -0.743776, 0, 1.0};
Point(165) = {0.073673, -0.743287, 0, 1.0};
Point(166) = {0.074314, -0.742771, 0, 1.0};
Point(167) = {0.074637, -0.742470, 0, 1.0};
Point(168) = {0.074799, -0.742269, 0, 1.0};
Point(169) = {0.074881, -0.742132, 0, 1.0};
Point(170) = {0.074968, -0.741856, 0, 1.0};
Point(171) = {0.074902, -0.741425, 0, 1.0};
Point(172) = {0.074828, -0.741267, 0, 1.0};
Point(173) = {0.074678, -0.741040, 0, 1.0};
Point(174) = {0.074374, -0.740729, 0, 1.0};
Point(175) = {0.073757, -0.740411, 0, 1.0};
Point(176) = {0.073134, -0.740311, 0, 1.0};
Point(177) = {0.071885, -0.740170, 0, 1.0};
Point(178) = {0.070323, -0.740002, 0, 1.0};
Point(179) = {0.068761, -0.739874, 0, 1.0};
Point(180) = {0.067198, -0.739758, 0, 1.0};
Point(181) = {0.065636, -0.739629, 0, 1.0};
Point(182) = {0.062511, -0.739354, 0, 1.0};
Point(183) = {0.059386, -0.739100, 0, 1.0};
Point(184) = {0.056261, -0.738852, 0, 1.0};
Point(185) = {0.053136, -0.738595, 0, 1.0};
Point(186) = {0.050012, -0.738314, 0, 1.0};
Point(187) = {0.046888, -0.738019, 0, 1.0};
Point(188) = {0.043764, -0.737737, 0, 1.0};
Point(189) = {0.040639, -0.737488, 0, 1.0};
Point(190) = {0.037513, -0.737258, 0, 1.0};
Point(191) = {0.034387, -0.737021, 0, 1.0};
Point(192) = {0.031262, -0.736778, 0, 1.0};
Point(193) = {0.028136, -0.736546, 0, 1.0};
Point(194) = {0.025010, -0.736341, 0, 1.0};
Point(195) = {0.021882, -0.736163, 0, 1.0};
Point(196) = {0.018755, -0.736008, 0, 1.0};
Point(197) = {0.015626, -0.735870, 0, 1.0};
Point(198) = {0.012497, -0.735745, 0, 1.0};
Point(199) = {0.009368, -0.735630, 0, 1.0};
Point(200) = {0.006239, -0.735529, 0, 1.0};
Point(201) = {0.003109, -0.735448, 0, 1.0};
Point(202) = {-0.000022, -0.735393, 0, 1.0};
Point(203) = {-0.003154, -0.735369, 0, 1.0};
Point(204) = {-0.006287, -0.735382, 0, 1.0};
Point(205) = {-0.009421, -0.735428, 0, 1.0};
Point(206) = {-0.012555, -0.735497, 0, 1.0};
Point(207) = {-0.015690, -0.735578, 0, 1.0};
Point(208) = {-0.018825, -0.735662, 0, 1.0};
Point(209) = {-0.021960, -0.735741, 0, 1.0};
Point(210) = {-0.025095, -0.735815, 0, 1.0};
Point(211) = {-0.028229, -0.735887, 0, 1.0};
Point(212) = {-0.031364, -0.735960, 0, 1.0};
Point(213) = {-0.034499, -0.736036, 0, 1.0};
Point(214) = {-0.037633, -0.736117, 0, 1.0};
Point(215) = {-0.040768, -0.736202, 0, 1.0};
Point(216) = {-0.043903, -0.736289, 0, 1.0};
Point(217) = {-0.047038, -0.736374, 0, 1.0};
Point(218) = {-0.050173, -0.736457, 0, 1.0};
Point(219) = {-0.053308, -0.736534, 0, 1.0};
Point(220) = {-0.056443, -0.736608, 0, 1.0};
Point(221) = {-0.059577, -0.736681, 0, 1.0};
Point(222) = {-0.062712, -0.736754, 0, 1.0};
Point(223) = {-0.065847, -0.736830, 0, 1.0};
Point(224) = {-0.068982, -0.736912, 0, 1.0};
Point(225) = {-0.072117, -0.736997, 0, 1.0};
Point(226) = {-0.074956, -0.737072, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:36};
Spline(2) = {36:79};
Spline(3) = {79:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:149};
Spline(6) = {149:192};
Spline(7) = {192:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {36.00000000, 15.00000000, 0, 1.0};
Point(230) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074999, 0.735649, 0, 1.0};
Point(2) = {0.071245, 0.736525, 0, 1.0};
Point(3) = {0.067491, 0.737381, 0, 1.0};
Point(4) = {0.063737, 0.738221, 0, 1.0};
Point(5) = {0.059984, 0.739061, 0, 1.0};
Point(6) = {0.056230, 0.739897, 0, 1.0};
Point(7) = {0.052476, 0.740725, 0, 1.0};
Point(8) = {0.048722, 0.741542, 0, 1.0};
Point(9) = {0.044969, 0.742358, 0, 1.0};
Point(10) = {0.041215, 0.743148, 0, 1.0};
Point(11) = {0.037462, 0.743926, 0, 1.0};
Point(12) = {0.033708, 0.744681, 0, 1.0};
Point(13) = {0.029955, 0.745405, 0, 1.0};
Point(14) = {0.026202, 0.746092, 0, 1.0};
Point(15) = {0.022449, 0.746735, 0, 1.0};
Point(16) = {0.018696, 0.747328, 0, 1.0};
Point(17) = {0.014944, 0.747865, 0, 1.0};
Point(18) = {0.011192, 0.748342, 0, 1.0};
Point(19) = {0.007440, 0.748769, 0, 1.0};
Point(20) = {0.003688, 0.749127, 0, 1.0};
Point(21) = {-0.000063, 0.749428, 0, 1.0};
Point(22) = {-0.003814, 0.749659, 0, 1.0};
Point(23) = {-0.007565, 0.749831, 0, 1.0};
Point(24) = {-0.011316, 0.749939, 0, 1.0};
Point(25) = {-0.015066, 0.749993, 0, 1.0};
Point(26) = {-0.018816, 0.750000, 0, 1.0};
Point(27) = {-0.022566, 0.749953, 0, 1.0};
Point(28) = {-0.026316, 0.749860, 0, 1.0};
Point(29) = {-0.030065, 0.749714, 0, 1.0};
Point(30) = {-0.033814, 0.749516, 0, 1.0};
Point(31) = {-0.037563, 0.749262, 0, 1.0};
Point(32) = {-0.041312, 0.748950, 0, 1.0};
Point(33) = {-0.045060, 0.748568, 0, 1.0};
Point(34) = {-0.048808, 0.748115, 0, 1.0};
Point(35) = {-0.052556, 0.747572, 0, 1.0};
Point(36) = {-0.056303, 0.746924, 0, 1.0};
Point(37) = {-0.060049, 0.746124, 0, 1.0};
Point(38) = {-0.063795, 0.745101, 0, 1.0};
Point(39) = {-0.067538, 0.743663, 0, 1.0};
Point(40) = {-0.069409, 0.742630, 0, 1.0};
Point(41) = {-0.071278, 0.741290, 0, 1.0};
Point(42) = {-0.073144, 0.739447, 0, 1.0};
Point(43) = {-0.074262, 0.737719, 0, 1.0};
Point(44) = {-0.074707, 0.736664, 0, 1.0};
Point(45) = {-0.074999, 0.734939, 0, 1.0};
Point(46) = {-0.074693, 0.733506, 0, 1.0};
Point(47) = {-0.074239, 0.732745, 0, 1.0};
Point(48) = {-0.073109, 0.731641, 0, 1.0};
Point(49) = {-0.071229, 0.730508, 0, 1.0};
Point(50) = {-0.069351, 0.729681, 0, 1.0};
Point(51) = {-0.067473, 0.729026, 0, 1.0};
Point(52) = {-0.063718, 0.728029, 0, 1.0};
Point(53) = {-0.059965, 0.727271, 0, 1.0};
Point(54) = {-0.056212, 0.726659, 0, 1.0};
Point(55) = {-0.052460, 0.726166, 0, 1.0};
Point(56) = {-0.048708, 0.725759, 0, 1.0};
Point(57) = {-0.044956, 0.725430, 0, 1.0};
Point(58) = {-0.041205, 0.725151, 0, 1.0};
Point(59) = {-0.037454, 0.724931, 0, 1.0};
Point(60) = {-0.033703, 0.724757, 0, 1.0};
Point(61) = {-0.029953, 0.724628, 0, 1.0};
Point(62) = {-0.026202, 0.724542, 0, 1.0};
Point(63) = {-0.022452, 0.724494, 0, 1.0};
Point(64) = {-0.018702, 0.724488, 0, 1.0};
Point(65) = {-0.014952, 0.724531, 0, 1.0};
Point(66) = {-0.011202, 0.724625, 0, 1.0};
Point(67) = {-0.007453, 0.724773, 0, 1.0};
Point(68) = {-0.003704, 0.724977, 0, 1.0};
Point(69) = {0.000045, 0.725240, 0, 1.0};
Point(70) = {0.003794, 0.725560, 0, 1.0};
Point(71) = {0.007542, 0.725953, 0, 1.0};
Point(72) = {0.011290, 0.726409, 0, 1.0};
Point(73) = {0.015037, 0.726942, 0, 1.0};
Point(74) = {0.018785, 0.727551, 0, 1.0};
Point(75) = {0.022532, 0.728216, 0, 1.0};
Point(76) = {0.026279, 0.728923, 0, 1.0};
Point(77) = {0.030025, 0.729658, 0, 1.0};
Point(78) = {0.033772, 0.730395, 0, 1.0};
Point(79) = {0.037519, 0.731124, 0, 1.0};
Point(80) = {0.041266, 0.731847, 0, 1.0};
Point(81) = {0.045013, 0.732542, 0, 1.0};
Point(82) = {0.048760, 0.733195, 0, 1.0};
Point(83) = {0.052507, 0.733788, 0, 1.0};
Point(84) = {0.056255, 0.734300, 0, 1.0};
Point(85) = {0.060003, 0.734705, 0, 1.0};
Point(86) = {0.063752, 0.734978, 0, 1.0};
Point(87) = {0.067502, 0.735080, 0, 1.0};
Point(88) = {0.071252, 0.734959, 0, 1.0};
Point(89) = {0.075004, 0.734566, 0, 1.0};
Point(90) = {-0.074999, -0.735649, 0, 1.0};
Point(91) = {-0.071245, -0.736525, 0, 1.0};
Point(92) = {-0.067491, -0.737381, 0, 1.0};
Point(93) = {-0.063737, -0.738221, 0, 1.0};
Point(94) = {-0.059984, -0.739061, 0, 1.0};
Point(95) = {-0.056230, -0.739897, 0, 1.0};
Point(96) = {-0.052476, -0.740725, 0, 1.0};
Point(97) = {-0.048722, -0.741542, 0, 1.0};
Point(98) = {-0.044969, -0.742358, 0, 1.0};
Point(99) = {-0.041215, -0.743148, 0, 1.0};
Point(100) = {-0.037462, -0.743926, 0, 1.0};
Point(101) = {-0.033708, -0.744681, 0, 1.0};
Point(102) = {-0.029955, -0.745405, 0, 1.0};
Point(103) = {-0.026202, -0.746092, 0, 1.0};
Point(104) = {-0.022449, -0.746735, 0, 1.0};
Point(105) = {-0.018696, -0.747328, 0, 1.0};
Point(106) = {-0.014944, -0.747865, 0, 1.0};
Point(107) = {-0.011192, -0.748342, 0, 1.0};
Point(108) = {-0.007440, -0.748769, 0, 1.0};
Point(109) = {-0.003688, -0.749127, 0, 1.0};
Point(110) = {0.000063, -0.749428, 0, 1.0};
Point(111) = {0.003814, -0.749659, 0, 1.0};
Point(112) = {0.007565, -0.749831, 0, 1.0};
Point(113) = {0.011316, -0.749939, 0, 1.0};
Point(114) = {0.015066, -0.749993, 0, 1.0};
Point(115) = {0.018816, -0.750000, 0, 1.0};
Point(116) = {0.022566, -0.749953, 0, 1.0};
Point(117) = {0.026316, -0.749860, 0, 1.0};
Point(118) = {0.030065, -0.749714, 0, 1.0};
Point(119) = {0.033814, -0.749516, 0, 1.0};
Point(120) = {0.037563, -0.749262, 0, 1.0};
Point(121) = {0.041312, -0.748950, 0, 1.0};
Point(122) = {0.045060, -0.748568, 0, 1.0};
Point(123) = {0.048808, -0.748115, 0, 1.0};
Point(124) = {0.052556, -0.747572, 0, 1.0};
Point(125) = {0.056303, -0.746924, 0, 1.0};
Point(126) = {0.060049, -0.746124, 0, 1.0};
Point(127) = {0.063795, -0.745101, 0, 1.0};
Point(128) = {0.067538, -0.743663, 0, 1.0};
Point(129) = {0.069409, -0.742630, 0, 1.0};
Point(130) = {0.071278, -0.741290, 0, 1.0};
Point(131) = {0.073144, -0.739447, 0, 1.0};
Point(132) = {0.074262, -0.737719, 0, 1.0};
Point(133) = {0.074707, -0.736664, 0, 1.0};
Point(134) = {0.074999, -0.734939, 0, 1.0};
Point(135) = {0.074693, -0.733506, 0, 1.0};
Point(136) = {0.074239, -0.732745, 0, 1.0};
Point(137) = {0.073109, -0.731641, 0, 1.0};
Point(138) = {0.071229, -0.730508, 0, 1.0};
Point(139) = {0.069351, -0.729681, 0, 1.0};
Point(140) = {0.067473, -0.729026, 0, 1.0};
Point(141) = {0.063718, -0.728029, 0, 1.0};
Point(142) = {0.059965, -0.727271, 0, 1.0};
Point(143) = {0.056212, -0.726659, 0, 1.0};
Point(144) = {0.052460, -0.726166, 0, 1.0};
Point(145) = {0.048708, -0.725759, 0, 1.0};
Point(146) = {0.044956, -0.725430, 0, 1.0};
Point(147) = {0.041205, -0.725151, 0, 1.0};
Point(148) = {0.037454, -0.724931, 0, 1.0};
Point(149) = {0.033703, -0.724757, 0, 1.0};
Point(150) = {0.029953, -0.724628, 0, 1.0};
Point(151) = {0.026202, -0.724542, 0, 1.0};
Point(152) = {0.022452, -0.724494, 0, 1.0};
Point(153) = {0.018702, -0.724488, 0, 1.0};
Point(154) = {0.014952, -0.724531, 0, 1.0};
Point(155) = {0.011202, -0.724625, 0, 1.0};
Point(156) = {0.007453, -0.724773, 0, 1.0};
Point(157) = {0.003704, -0.724977, 0, 1.0};
Point(158) = {-0.000045, -0.725240, 0, 1.0};
Point(159) = {-0.003794, -0.725560, 0, 1.0};
Point(160) = {-0.007542, -0.725953, 0, 1.0};
Point(161) = {-0.011290, -0.726409, 0, 1.0};
Point(162) = {-0.015037, -0.726942, 0, 1.0};
Point(163) = {-0.018785, -0.727551, 0, 1.0};
Point(164) = {-0.022532, -0.728216, 0, 1.0};
Point(165) = {-0.026279, -0.728923, 0, 1.0};
Point(166) = {-0.030025, -0.729658, 0, 1.0};
Point(167) = {-0.033772, -0.730395, 0, 1.0};
Point(168) = {-0.037519, -0.731124, 0, 1.0};
Point(169) = {-0.041266, -0.731847, 0, 1.0};
Point(170) = {-0.045013, -0.732542, 0, 1.0};
Point(171) = {-0.048760, -0.733195, 0, 1.0};
Point(172) = {-0.052507, -0.733788, 0, 1.0};
Point(173) = {-0.056255, -0.734300, 0, 1.0};
Point(174) = {-0.060003, -0.734705, 0, 1.0};
Point(175) = {-0.063752, -0.734978, 0, 1.0};
Point(176) = {-0.067502, -0.735080, 0, 1.0};
Point(177) = {-0.071252, -0.734959, 0, 1.0};
Point(178) = {-0.075004, -0.734566, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:59};
Spline(3) = {59:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:148};
Spline(7) = {148:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
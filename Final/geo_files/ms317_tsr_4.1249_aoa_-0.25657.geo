SetFactory("OpenCASCADE");

Point(1) = {0.074998, 0.740433, 0, 1.0};
Point(2) = {0.072496, 0.741017, 0, 1.0};
Point(3) = {0.069993, 0.741588, 0, 1.0};
Point(4) = {0.067491, 0.742147, 0, 1.0};
Point(5) = {0.064988, 0.742707, 0, 1.0};
Point(6) = {0.062486, 0.743265, 0, 1.0};
Point(7) = {0.059983, 0.743817, 0, 1.0};
Point(8) = {0.057481, 0.744362, 0, 1.0};
Point(9) = {0.054978, 0.744905, 0, 1.0};
Point(10) = {0.052476, 0.745432, 0, 1.0};
Point(11) = {0.049973, 0.745951, 0, 1.0};
Point(12) = {0.047471, 0.746454, 0, 1.0};
Point(13) = {0.044969, 0.746937, 0, 1.0};
Point(14) = {0.042467, 0.747394, 0, 1.0};
Point(15) = {0.039965, 0.747823, 0, 1.0};
Point(16) = {0.037463, 0.748219, 0, 1.0};
Point(17) = {0.034962, 0.748577, 0, 1.0};
Point(18) = {0.032460, 0.748895, 0, 1.0};
Point(19) = {0.029959, 0.749179, 0, 1.0};
Point(20) = {0.027458, 0.749418, 0, 1.0};
Point(21) = {0.024957, 0.749619, 0, 1.0};
Point(22) = {0.022456, 0.749773, 0, 1.0};
Point(23) = {0.019956, 0.749888, 0, 1.0};
Point(24) = {0.017455, 0.749959, 0, 1.0};
Point(25) = {0.014955, 0.749995, 0, 1.0};
Point(26) = {0.012455, 0.750000, 0, 1.0};
Point(27) = {0.009955, 0.749969, 0, 1.0};
Point(28) = {0.007455, 0.749907, 0, 1.0};
Point(29) = {0.004956, 0.749809, 0, 1.0};
Point(30) = {0.002456, 0.749677, 0, 1.0};
Point(31) = {-0.000043, 0.749508, 0, 1.0};
Point(32) = {-0.002542, 0.749300, 0, 1.0};
Point(33) = {-0.005041, 0.749046, 0, 1.0};
Point(34) = {-0.007540, 0.748743, 0, 1.0};
Point(35) = {-0.010038, 0.748381, 0, 1.0};
Point(36) = {-0.012536, 0.747949, 0, 1.0};
Point(37) = {-0.015034, 0.747416, 0, 1.0};
Point(38) = {-0.017531, 0.746734, 0, 1.0};
Point(39) = {-0.020026, 0.745776, 0, 1.0};
Point(40) = {-0.021273, 0.745087, 0, 1.0};
Point(41) = {-0.022519, 0.744193, 0, 1.0};
Point(42) = {-0.023764, 0.742965, 0, 1.0};
Point(43) = {-0.024509, 0.741812, 0, 1.0};
Point(44) = {-0.024806, 0.741109, 0, 1.0};
Point(45) = {-0.025000, 0.739959, 0, 1.0};
Point(46) = {-0.024796, 0.739004, 0, 1.0};
Point(47) = {-0.024494, 0.738496, 0, 1.0};
Point(48) = {-0.023741, 0.737761, 0, 1.0};
Point(49) = {-0.022487, 0.737005, 0, 1.0};
Point(50) = {-0.021235, 0.736454, 0, 1.0};
Point(51) = {-0.019983, 0.736018, 0, 1.0};
Point(52) = {-0.017480, 0.735353, 0, 1.0};
Point(53) = {-0.014977, 0.734847, 0, 1.0};
Point(54) = {-0.012476, 0.734439, 0, 1.0};
Point(55) = {-0.009974, 0.734110, 0, 1.0};
Point(56) = {-0.007473, 0.733840, 0, 1.0};
Point(57) = {-0.004972, 0.733620, 0, 1.0};
Point(58) = {-0.002471, 0.733434, 0, 1.0};
Point(59) = {0.000030, 0.733287, 0, 1.0};
Point(60) = {0.002530, 0.733171, 0, 1.0};
Point(61) = {0.005031, 0.733086, 0, 1.0};
Point(62) = {0.007531, 0.733028, 0, 1.0};
Point(63) = {0.010031, 0.732996, 0, 1.0};
Point(64) = {0.012531, 0.732992, 0, 1.0};
Point(65) = {0.015031, 0.733020, 0, 1.0};
Point(66) = {0.017531, 0.733084, 0, 1.0};
Point(67) = {0.020030, 0.733182, 0, 1.0};
Point(68) = {0.022530, 0.733318, 0, 1.0};
Point(69) = {0.025029, 0.733493, 0, 1.0};
Point(70) = {0.027528, 0.733706, 0, 1.0};
Point(71) = {0.030027, 0.733969, 0, 1.0};
Point(72) = {0.032526, 0.734273, 0, 1.0};
Point(73) = {0.035024, 0.734628, 0, 1.0};
Point(74) = {0.037522, 0.735034, 0, 1.0};
Point(75) = {0.040020, 0.735477, 0, 1.0};
Point(76) = {0.042518, 0.735948, 0, 1.0};
Point(77) = {0.045016, 0.736439, 0, 1.0};
Point(78) = {0.047514, 0.736930, 0, 1.0};
Point(79) = {0.050012, 0.737416, 0, 1.0};
Point(80) = {0.052510, 0.737898, 0, 1.0};
Point(81) = {0.055008, 0.738361, 0, 1.0};
Point(82) = {0.057506, 0.738797, 0, 1.0};
Point(83) = {0.060004, 0.739192, 0, 1.0};
Point(84) = {0.062502, 0.739533, 0, 1.0};
Point(85) = {0.065001, 0.739803, 0, 1.0};
Point(86) = {0.067500, 0.739985, 0, 1.0};
Point(87) = {0.070000, 0.740054, 0, 1.0};
Point(88) = {0.072500, 0.739973, 0, 1.0};
Point(89) = {0.075002, 0.739711, 0, 1.0};
Point(90) = {-0.074998, -0.740433, 0, 1.0};
Point(91) = {-0.072496, -0.741017, 0, 1.0};
Point(92) = {-0.069993, -0.741588, 0, 1.0};
Point(93) = {-0.067491, -0.742147, 0, 1.0};
Point(94) = {-0.064988, -0.742707, 0, 1.0};
Point(95) = {-0.062486, -0.743265, 0, 1.0};
Point(96) = {-0.059983, -0.743817, 0, 1.0};
Point(97) = {-0.057481, -0.744362, 0, 1.0};
Point(98) = {-0.054978, -0.744905, 0, 1.0};
Point(99) = {-0.052476, -0.745432, 0, 1.0};
Point(100) = {-0.049973, -0.745951, 0, 1.0};
Point(101) = {-0.047471, -0.746454, 0, 1.0};
Point(102) = {-0.044969, -0.746937, 0, 1.0};
Point(103) = {-0.042467, -0.747394, 0, 1.0};
Point(104) = {-0.039965, -0.747823, 0, 1.0};
Point(105) = {-0.037463, -0.748219, 0, 1.0};
Point(106) = {-0.034962, -0.748577, 0, 1.0};
Point(107) = {-0.032460, -0.748895, 0, 1.0};
Point(108) = {-0.029959, -0.749179, 0, 1.0};
Point(109) = {-0.027458, -0.749418, 0, 1.0};
Point(110) = {-0.024957, -0.749619, 0, 1.0};
Point(111) = {-0.022456, -0.749773, 0, 1.0};
Point(112) = {-0.019956, -0.749888, 0, 1.0};
Point(113) = {-0.017455, -0.749959, 0, 1.0};
Point(114) = {-0.014955, -0.749995, 0, 1.0};
Point(115) = {-0.012455, -0.750000, 0, 1.0};
Point(116) = {-0.009955, -0.749969, 0, 1.0};
Point(117) = {-0.007455, -0.749907, 0, 1.0};
Point(118) = {-0.004956, -0.749809, 0, 1.0};
Point(119) = {-0.002456, -0.749677, 0, 1.0};
Point(120) = {0.000043, -0.749508, 0, 1.0};
Point(121) = {0.002542, -0.749300, 0, 1.0};
Point(122) = {0.005041, -0.749046, 0, 1.0};
Point(123) = {0.007540, -0.748743, 0, 1.0};
Point(124) = {0.010038, -0.748381, 0, 1.0};
Point(125) = {0.012536, -0.747949, 0, 1.0};
Point(126) = {0.015034, -0.747416, 0, 1.0};
Point(127) = {0.017531, -0.746734, 0, 1.0};
Point(128) = {0.020026, -0.745776, 0, 1.0};
Point(129) = {0.021273, -0.745087, 0, 1.0};
Point(130) = {0.022519, -0.744193, 0, 1.0};
Point(131) = {0.023764, -0.742965, 0, 1.0};
Point(132) = {0.024509, -0.741812, 0, 1.0};
Point(133) = {0.024806, -0.741109, 0, 1.0};
Point(134) = {0.025000, -0.739959, 0, 1.0};
Point(135) = {0.024796, -0.739004, 0, 1.0};
Point(136) = {0.024494, -0.738496, 0, 1.0};
Point(137) = {0.023741, -0.737761, 0, 1.0};
Point(138) = {0.022487, -0.737005, 0, 1.0};
Point(139) = {0.021235, -0.736454, 0, 1.0};
Point(140) = {0.019983, -0.736018, 0, 1.0};
Point(141) = {0.017480, -0.735353, 0, 1.0};
Point(142) = {0.014977, -0.734847, 0, 1.0};
Point(143) = {0.012476, -0.734439, 0, 1.0};
Point(144) = {0.009974, -0.734110, 0, 1.0};
Point(145) = {0.007473, -0.733840, 0, 1.0};
Point(146) = {0.004972, -0.733620, 0, 1.0};
Point(147) = {0.002471, -0.733434, 0, 1.0};
Point(148) = {-0.000030, -0.733287, 0, 1.0};
Point(149) = {-0.002530, -0.733171, 0, 1.0};
Point(150) = {-0.005031, -0.733086, 0, 1.0};
Point(151) = {-0.007531, -0.733028, 0, 1.0};
Point(152) = {-0.010031, -0.732996, 0, 1.0};
Point(153) = {-0.012531, -0.732992, 0, 1.0};
Point(154) = {-0.015031, -0.733020, 0, 1.0};
Point(155) = {-0.017531, -0.733084, 0, 1.0};
Point(156) = {-0.020030, -0.733182, 0, 1.0};
Point(157) = {-0.022530, -0.733318, 0, 1.0};
Point(158) = {-0.025029, -0.733493, 0, 1.0};
Point(159) = {-0.027528, -0.733706, 0, 1.0};
Point(160) = {-0.030027, -0.733969, 0, 1.0};
Point(161) = {-0.032526, -0.734273, 0, 1.0};
Point(162) = {-0.035024, -0.734628, 0, 1.0};
Point(163) = {-0.037522, -0.735034, 0, 1.0};
Point(164) = {-0.040020, -0.735477, 0, 1.0};
Point(165) = {-0.042518, -0.735948, 0, 1.0};
Point(166) = {-0.045016, -0.736439, 0, 1.0};
Point(167) = {-0.047514, -0.736930, 0, 1.0};
Point(168) = {-0.050012, -0.737416, 0, 1.0};
Point(169) = {-0.052510, -0.737898, 0, 1.0};
Point(170) = {-0.055008, -0.738361, 0, 1.0};
Point(171) = {-0.057506, -0.738797, 0, 1.0};
Point(172) = {-0.060004, -0.739192, 0, 1.0};
Point(173) = {-0.062502, -0.739533, 0, 1.0};
Point(174) = {-0.065001, -0.739803, 0, 1.0};
Point(175) = {-0.067500, -0.739985, 0, 1.0};
Point(176) = {-0.070000, -0.740054, 0, 1.0};
Point(177) = {-0.072500, -0.739973, 0, 1.0};
Point(178) = {-0.075002, -0.739711, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:59};
Spline(3) = {59:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:148};
Spline(7) = {148:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
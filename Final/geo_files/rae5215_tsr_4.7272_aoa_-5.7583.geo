SetFactory("OpenCASCADE");

Point(1) = {0.074453, 0.748845, 0, 1.0};
Point(2) = {0.072423, 0.748939, 0, 1.0};
Point(3) = {0.068417, 0.749114, 0, 1.0};
Point(4) = {0.063781, 0.749287, 0, 1.0};
Point(5) = {0.058552, 0.749475, 0, 1.0};
Point(6) = {0.052787, 0.749664, 0, 1.0};
Point(7) = {0.046541, 0.749826, 0, 1.0};
Point(8) = {0.039875, 0.749950, 0, 1.0};
Point(9) = {0.032858, 0.750000, 0, 1.0};
Point(10) = {0.025562, 0.749930, 0, 1.0};
Point(11) = {0.018062, 0.749698, 0, 1.0};
Point(12) = {0.010427, 0.749330, 0, 1.0};
Point(13) = {0.002730, 0.748830, 0, 1.0};
Point(14) = {-0.004955, 0.748210, 0, 1.0};
Point(15) = {-0.012557, 0.747513, 0, 1.0};
Point(16) = {-0.020002, 0.746737, 0, 1.0};
Point(17) = {-0.027221, 0.745905, 0, 1.0};
Point(18) = {-0.034144, 0.745023, 0, 1.0};
Point(19) = {-0.040706, 0.744118, 0, 1.0};
Point(20) = {-0.046842, 0.743190, 0, 1.0};
Point(21) = {-0.052493, 0.742247, 0, 1.0};
Point(22) = {-0.057607, 0.741295, 0, 1.0};
Point(23) = {-0.062132, 0.740367, 0, 1.0};
Point(24) = {-0.066019, 0.739362, 0, 1.0};
Point(25) = {-0.069218, 0.738191, 0, 1.0};
Point(26) = {-0.070435, 0.737625, 0, 1.0};
Point(27) = {-0.071701, 0.736905, 0, 1.0};
Point(28) = {-0.072666, 0.736237, 0, 1.0};
Point(29) = {-0.073448, 0.735542, 0, 1.0};
Point(30) = {-0.073676, 0.735281, 0, 1.0};
Point(31) = {-0.073885, 0.735004, 0, 1.0};
Point(32) = {-0.074088, 0.734671, 0, 1.0};
Point(33) = {-0.074286, 0.734276, 0, 1.0};
Point(34) = {-0.074422, 0.733923, 0, 1.0};
Point(35) = {-0.074517, 0.733592, 0, 1.0};
Point(36) = {-0.074581, 0.733281, 0, 1.0};
Point(37) = {-0.074626, 0.732944, 0, 1.0};
Point(38) = {-0.074622, 0.732119, 0, 1.0};
Point(39) = {-0.074479, 0.731486, 0, 1.0};
Point(40) = {-0.074379, 0.731282, 0, 1.0};
Point(41) = {-0.074266, 0.731104, 0, 1.0};
Point(42) = {-0.074121, 0.730929, 0, 1.0};
Point(43) = {-0.073932, 0.730766, 0, 1.0};
Point(44) = {-0.073677, 0.730587, 0, 1.0};
Point(45) = {-0.073425, 0.730440, 0, 1.0};
Point(46) = {-0.073176, 0.730324, 0, 1.0};
Point(47) = {-0.072910, 0.730212, 0, 1.0};
Point(48) = {-0.072032, 0.729957, 0, 1.0};
Point(49) = {-0.070980, 0.729757, 0, 1.0};
Point(50) = {-0.069620, 0.729546, 0, 1.0};
Point(51) = {-0.068332, 0.729406, 0, 1.0};
Point(52) = {-0.064995, 0.729203, 0, 1.0};
Point(53) = {-0.060995, 0.729090, 0, 1.0};
Point(54) = {-0.056377, 0.729100, 0, 1.0};
Point(55) = {-0.051179, 0.729216, 0, 1.0};
Point(56) = {-0.045456, 0.729440, 0, 1.0};
Point(57) = {-0.039261, 0.729788, 0, 1.0};
Point(58) = {-0.032655, 0.730256, 0, 1.0};
Point(59) = {-0.025704, 0.730864, 0, 1.0};
Point(60) = {-0.018479, 0.731634, 0, 1.0};
Point(61) = {-0.011050, 0.732566, 0, 1.0};
Point(62) = {-0.003488, 0.733665, 0, 1.0};
Point(63) = {0.004129, 0.734952, 0, 1.0};
Point(64) = {0.011729, 0.736420, 0, 1.0};
Point(65) = {0.019242, 0.738001, 0, 1.0};
Point(66) = {0.026602, 0.739614, 0, 1.0};
Point(67) = {0.033750, 0.741153, 0, 1.0};
Point(68) = {0.040623, 0.742527, 0, 1.0};
Point(69) = {0.047155, 0.743729, 0, 1.0};
Point(70) = {0.053283, 0.744741, 0, 1.0};
Point(71) = {0.058945, 0.745573, 0, 1.0};
Point(72) = {0.064088, 0.746242, 0, 1.0};
Point(73) = {0.068653, 0.746773, 0, 1.0};
Point(74) = {0.072602, 0.747165, 0, 1.0};
Point(75) = {0.074604, 0.747345, 0, 1.0};
Point(76) = {-0.074453, -0.748845, 0, 1.0};
Point(77) = {-0.072423, -0.748939, 0, 1.0};
Point(78) = {-0.068417, -0.749114, 0, 1.0};
Point(79) = {-0.063781, -0.749287, 0, 1.0};
Point(80) = {-0.058552, -0.749475, 0, 1.0};
Point(81) = {-0.052787, -0.749664, 0, 1.0};
Point(82) = {-0.046541, -0.749826, 0, 1.0};
Point(83) = {-0.039875, -0.749950, 0, 1.0};
Point(84) = {-0.032858, -0.750000, 0, 1.0};
Point(85) = {-0.025562, -0.749930, 0, 1.0};
Point(86) = {-0.018062, -0.749698, 0, 1.0};
Point(87) = {-0.010427, -0.749330, 0, 1.0};
Point(88) = {-0.002730, -0.748830, 0, 1.0};
Point(89) = {0.004955, -0.748210, 0, 1.0};
Point(90) = {0.012557, -0.747513, 0, 1.0};
Point(91) = {0.020002, -0.746737, 0, 1.0};
Point(92) = {0.027221, -0.745905, 0, 1.0};
Point(93) = {0.034144, -0.745023, 0, 1.0};
Point(94) = {0.040706, -0.744118, 0, 1.0};
Point(95) = {0.046842, -0.743190, 0, 1.0};
Point(96) = {0.052493, -0.742247, 0, 1.0};
Point(97) = {0.057607, -0.741295, 0, 1.0};
Point(98) = {0.062132, -0.740367, 0, 1.0};
Point(99) = {0.066019, -0.739362, 0, 1.0};
Point(100) = {0.069218, -0.738191, 0, 1.0};
Point(101) = {0.070435, -0.737625, 0, 1.0};
Point(102) = {0.071701, -0.736905, 0, 1.0};
Point(103) = {0.072666, -0.736237, 0, 1.0};
Point(104) = {0.073448, -0.735542, 0, 1.0};
Point(105) = {0.073676, -0.735281, 0, 1.0};
Point(106) = {0.073885, -0.735004, 0, 1.0};
Point(107) = {0.074088, -0.734671, 0, 1.0};
Point(108) = {0.074286, -0.734276, 0, 1.0};
Point(109) = {0.074422, -0.733923, 0, 1.0};
Point(110) = {0.074517, -0.733592, 0, 1.0};
Point(111) = {0.074581, -0.733281, 0, 1.0};
Point(112) = {0.074626, -0.732944, 0, 1.0};
Point(113) = {0.074622, -0.732119, 0, 1.0};
Point(114) = {0.074479, -0.731486, 0, 1.0};
Point(115) = {0.074379, -0.731282, 0, 1.0};
Point(116) = {0.074266, -0.731104, 0, 1.0};
Point(117) = {0.074121, -0.730929, 0, 1.0};
Point(118) = {0.073932, -0.730766, 0, 1.0};
Point(119) = {0.073677, -0.730587, 0, 1.0};
Point(120) = {0.073425, -0.730440, 0, 1.0};
Point(121) = {0.073176, -0.730324, 0, 1.0};
Point(122) = {0.072910, -0.730212, 0, 1.0};
Point(123) = {0.072032, -0.729957, 0, 1.0};
Point(124) = {0.070980, -0.729757, 0, 1.0};
Point(125) = {0.069620, -0.729546, 0, 1.0};
Point(126) = {0.068332, -0.729406, 0, 1.0};
Point(127) = {0.064995, -0.729203, 0, 1.0};
Point(128) = {0.060995, -0.729090, 0, 1.0};
Point(129) = {0.056377, -0.729100, 0, 1.0};
Point(130) = {0.051179, -0.729216, 0, 1.0};
Point(131) = {0.045456, -0.729440, 0, 1.0};
Point(132) = {0.039261, -0.729788, 0, 1.0};
Point(133) = {0.032655, -0.730256, 0, 1.0};
Point(134) = {0.025704, -0.730864, 0, 1.0};
Point(135) = {0.018479, -0.731634, 0, 1.0};
Point(136) = {0.011050, -0.732566, 0, 1.0};
Point(137) = {0.003488, -0.733665, 0, 1.0};
Point(138) = {-0.004129, -0.734952, 0, 1.0};
Point(139) = {-0.011729, -0.736420, 0, 1.0};
Point(140) = {-0.019242, -0.738001, 0, 1.0};
Point(141) = {-0.026602, -0.739614, 0, 1.0};
Point(142) = {-0.033750, -0.741153, 0, 1.0};
Point(143) = {-0.040623, -0.742527, 0, 1.0};
Point(144) = {-0.047155, -0.743729, 0, 1.0};
Point(145) = {-0.053283, -0.744741, 0, 1.0};
Point(146) = {-0.058945, -0.745573, 0, 1.0};
Point(147) = {-0.064088, -0.746242, 0, 1.0};
Point(148) = {-0.068653, -0.746773, 0, 1.0};
Point(149) = {-0.072602, -0.747165, 0, 1.0};
Point(150) = {-0.074604, -0.747345, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:58};
Spline(3) = {58:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:93};
Spline(6) = {93:133};
Spline(7) = {133:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {36.00000000, 15.00000000, 0, 1.0};
Point(154) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
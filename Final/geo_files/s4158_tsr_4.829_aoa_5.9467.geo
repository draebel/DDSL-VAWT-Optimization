SetFactory("OpenCASCADE");

Point(1) = {0.074596, 0.725915, 0, 1.0};
Point(2) = {0.074084, 0.726003, 0, 1.0};
Point(3) = {0.072556, 0.726295, 0, 1.0};
Point(4) = {0.070053, 0.726851, 0, 1.0};
Point(5) = {0.066648, 0.727729, 0, 1.0};
Point(6) = {0.062460, 0.728962, 0, 1.0};
Point(7) = {0.057626, 0.730533, 0, 1.0};
Point(8) = {0.052274, 0.732398, 0, 1.0};
Point(9) = {0.046535, 0.734486, 0, 1.0};
Point(10) = {0.040530, 0.736701, 0, 1.0};
Point(11) = {0.034361, 0.738898, 0, 1.0};
Point(12) = {0.028023, 0.740904, 0, 1.0};
Point(13) = {0.021436, 0.742676, 0, 1.0};
Point(14) = {0.014612, 0.744266, 0, 1.0};
Point(15) = {0.007635, 0.745682, 0, 1.0};
Point(16) = {0.000569, 0.746905, 0, 1.0};
Point(17) = {-0.006524, 0.747932, 0, 1.0};
Point(18) = {-0.013576, 0.748758, 0, 1.0};
Point(19) = {-0.020516, 0.749383, 0, 1.0};
Point(20) = {-0.027265, 0.749803, 0, 1.0};
Point(21) = {-0.033764, 0.750000, 0, 1.0};
Point(22) = {-0.039964, 0.749979, 0, 1.0};
Point(23) = {-0.045813, 0.749762, 0, 1.0};
Point(24) = {-0.051247, 0.749364, 0, 1.0};
Point(25) = {-0.056198, 0.748794, 0, 1.0};
Point(26) = {-0.060625, 0.748056, 0, 1.0};
Point(27) = {-0.064505, 0.747167, 0, 1.0};
Point(28) = {-0.067806, 0.746168, 0, 1.0};
Point(29) = {-0.070486, 0.745095, 0, 1.0};
Point(30) = {-0.072511, 0.743974, 0, 1.0};
Point(31) = {-0.073862, 0.742834, 0, 1.0};
Point(32) = {-0.074541, 0.741729, 0, 1.0};
Point(33) = {-0.074596, 0.741455, 0, 1.0};
Point(34) = {-0.074474, 0.740796, 0, 1.0};
Point(35) = {-0.073540, 0.739997, 0, 1.0};
Point(36) = {-0.071735, 0.739206, 0, 1.0};
Point(37) = {-0.069111, 0.738451, 0, 1.0};
Point(38) = {-0.065683, 0.737738, 0, 1.0};
Point(39) = {-0.061480, 0.737055, 0, 1.0};
Point(40) = {-0.056549, 0.736389, 0, 1.0};
Point(41) = {-0.050949, 0.735735, 0, 1.0};
Point(42) = {-0.044753, 0.735091, 0, 1.0};
Point(43) = {-0.038029, 0.734466, 0, 1.0};
Point(44) = {-0.030847, 0.733858, 0, 1.0};
Point(45) = {-0.023284, 0.733263, 0, 1.0};
Point(46) = {-0.015431, 0.732676, 0, 1.0};
Point(47) = {-0.007378, 0.732093, 0, 1.0};
Point(48) = {0.000780, 0.731515, 0, 1.0};
Point(49) = {0.008944, 0.730941, 0, 1.0};
Point(50) = {0.017015, 0.730372, 0, 1.0};
Point(51) = {0.024895, 0.729807, 0, 1.0};
Point(52) = {0.032487, 0.729251, 0, 1.0};
Point(53) = {0.039697, 0.728712, 0, 1.0};
Point(54) = {0.046432, 0.728189, 0, 1.0};
Point(55) = {0.052608, 0.727697, 0, 1.0};
Point(56) = {0.058144, 0.727241, 0, 1.0};
Point(57) = {0.062967, 0.726835, 0, 1.0};
Point(58) = {0.067012, 0.726494, 0, 1.0};
Point(59) = {0.070231, 0.726238, 0, 1.0};
Point(60) = {0.072604, 0.726070, 0, 1.0};
Point(61) = {0.074087, 0.725960, 0, 1.0};
Point(62) = {-0.074596, -0.725915, 0, 1.0};
Point(63) = {-0.074084, -0.726003, 0, 1.0};
Point(64) = {-0.072556, -0.726295, 0, 1.0};
Point(65) = {-0.070053, -0.726851, 0, 1.0};
Point(66) = {-0.066648, -0.727729, 0, 1.0};
Point(67) = {-0.062460, -0.728962, 0, 1.0};
Point(68) = {-0.057626, -0.730533, 0, 1.0};
Point(69) = {-0.052274, -0.732398, 0, 1.0};
Point(70) = {-0.046535, -0.734486, 0, 1.0};
Point(71) = {-0.040530, -0.736701, 0, 1.0};
Point(72) = {-0.034361, -0.738898, 0, 1.0};
Point(73) = {-0.028023, -0.740904, 0, 1.0};
Point(74) = {-0.021436, -0.742676, 0, 1.0};
Point(75) = {-0.014612, -0.744266, 0, 1.0};
Point(76) = {-0.007635, -0.745682, 0, 1.0};
Point(77) = {-0.000569, -0.746905, 0, 1.0};
Point(78) = {0.006524, -0.747932, 0, 1.0};
Point(79) = {0.013576, -0.748758, 0, 1.0};
Point(80) = {0.020516, -0.749383, 0, 1.0};
Point(81) = {0.027265, -0.749803, 0, 1.0};
Point(82) = {0.033764, -0.750000, 0, 1.0};
Point(83) = {0.039964, -0.749979, 0, 1.0};
Point(84) = {0.045813, -0.749762, 0, 1.0};
Point(85) = {0.051247, -0.749364, 0, 1.0};
Point(86) = {0.056198, -0.748794, 0, 1.0};
Point(87) = {0.060625, -0.748056, 0, 1.0};
Point(88) = {0.064505, -0.747167, 0, 1.0};
Point(89) = {0.067806, -0.746168, 0, 1.0};
Point(90) = {0.070486, -0.745095, 0, 1.0};
Point(91) = {0.072511, -0.743974, 0, 1.0};
Point(92) = {0.073862, -0.742834, 0, 1.0};
Point(93) = {0.074541, -0.741729, 0, 1.0};
Point(94) = {0.074596, -0.741455, 0, 1.0};
Point(95) = {0.074474, -0.740796, 0, 1.0};
Point(96) = {0.073540, -0.739997, 0, 1.0};
Point(97) = {0.071735, -0.739206, 0, 1.0};
Point(98) = {0.069111, -0.738451, 0, 1.0};
Point(99) = {0.065683, -0.737738, 0, 1.0};
Point(100) = {0.061480, -0.737055, 0, 1.0};
Point(101) = {0.056549, -0.736389, 0, 1.0};
Point(102) = {0.050949, -0.735735, 0, 1.0};
Point(103) = {0.044753, -0.735091, 0, 1.0};
Point(104) = {0.038029, -0.734466, 0, 1.0};
Point(105) = {0.030847, -0.733858, 0, 1.0};
Point(106) = {0.023284, -0.733263, 0, 1.0};
Point(107) = {0.015431, -0.732676, 0, 1.0};
Point(108) = {0.007378, -0.732093, 0, 1.0};
Point(109) = {-0.000780, -0.731515, 0, 1.0};
Point(110) = {-0.008944, -0.730941, 0, 1.0};
Point(111) = {-0.017015, -0.730372, 0, 1.0};
Point(112) = {-0.024895, -0.729807, 0, 1.0};
Point(113) = {-0.032487, -0.729251, 0, 1.0};
Point(114) = {-0.039697, -0.728712, 0, 1.0};
Point(115) = {-0.046432, -0.728189, 0, 1.0};
Point(116) = {-0.052608, -0.727697, 0, 1.0};
Point(117) = {-0.058144, -0.727241, 0, 1.0};
Point(118) = {-0.062967, -0.726835, 0, 1.0};
Point(119) = {-0.067012, -0.726494, 0, 1.0};
Point(120) = {-0.070231, -0.726238, 0, 1.0};
Point(121) = {-0.072604, -0.726070, 0, 1.0};
Point(122) = {-0.074087, -0.725960, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
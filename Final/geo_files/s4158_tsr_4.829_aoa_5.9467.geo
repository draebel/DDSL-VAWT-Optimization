SetFactory("OpenCASCADE");

Point(1) = {0.074462, 0.733943, 0, 1.0};
Point(2) = {0.074120, 0.734002, 0, 1.0};
Point(3) = {0.073102, 0.734197, 0, 1.0};
Point(4) = {0.071433, 0.734567, 0, 1.0};
Point(5) = {0.069163, 0.735153, 0, 1.0};
Point(6) = {0.066371, 0.735974, 0, 1.0};
Point(7) = {0.063148, 0.737022, 0, 1.0};
Point(8) = {0.059581, 0.738265, 0, 1.0};
Point(9) = {0.055754, 0.739657, 0, 1.0};
Point(10) = {0.051751, 0.741134, 0, 1.0};
Point(11) = {0.047638, 0.742599, 0, 1.0};
Point(12) = {0.043413, 0.743936, 0, 1.0};
Point(13) = {0.039022, 0.745117, 0, 1.0};
Point(14) = {0.034472, 0.746177, 0, 1.0};
Point(15) = {0.029821, 0.747121, 0, 1.0};
Point(16) = {0.025110, 0.747937, 0, 1.0};
Point(17) = {0.020382, 0.748621, 0, 1.0};
Point(18) = {0.015680, 0.749172, 0, 1.0};
Point(19) = {0.011054, 0.749589, 0, 1.0};
Point(20) = {0.006554, 0.749868, 0, 1.0};
Point(21) = {0.002222, 0.750000, 0, 1.0};
Point(22) = {-0.001912, 0.749986, 0, 1.0};
Point(23) = {-0.005811, 0.749841, 0, 1.0};
Point(24) = {-0.009434, 0.749576, 0, 1.0};
Point(25) = {-0.012734, 0.749196, 0, 1.0};
Point(26) = {-0.015686, 0.748704, 0, 1.0};
Point(27) = {-0.018272, 0.748111, 0, 1.0};
Point(28) = {-0.020473, 0.747446, 0, 1.0};
Point(29) = {-0.022260, 0.746730, 0, 1.0};
Point(30) = {-0.023610, 0.745983, 0, 1.0};
Point(31) = {-0.024510, 0.745223, 0, 1.0};
Point(32) = {-0.024963, 0.744486, 0, 1.0};
Point(33) = {-0.025000, 0.744304, 0, 1.0};
Point(34) = {-0.024918, 0.743864, 0, 1.0};
Point(35) = {-0.024296, 0.743331, 0, 1.0};
Point(36) = {-0.023092, 0.742804, 0, 1.0};
Point(37) = {-0.021343, 0.742301, 0, 1.0};
Point(38) = {-0.019058, 0.741826, 0, 1.0};
Point(39) = {-0.016256, 0.741370, 0, 1.0};
Point(40) = {-0.012968, 0.740926, 0, 1.0};
Point(41) = {-0.009235, 0.740490, 0, 1.0};
Point(42) = {-0.005105, 0.740061, 0, 1.0};
Point(43) = {-0.000622, 0.739644, 0, 1.0};
Point(44) = {0.004166, 0.739239, 0, 1.0};
Point(45) = {0.009208, 0.738842, 0, 1.0};
Point(46) = {0.014444, 0.738451, 0, 1.0};
Point(47) = {0.019813, 0.738062, 0, 1.0};
Point(48) = {0.025251, 0.737677, 0, 1.0};
Point(49) = {0.030693, 0.737294, 0, 1.0};
Point(50) = {0.036074, 0.736914, 0, 1.0};
Point(51) = {0.041327, 0.736538, 0, 1.0};
Point(52) = {0.046389, 0.736168, 0, 1.0};
Point(53) = {0.051196, 0.735808, 0, 1.0};
Point(54) = {0.055686, 0.735460, 0, 1.0};
Point(55) = {0.059803, 0.735131, 0, 1.0};
Point(56) = {0.063493, 0.734827, 0, 1.0};
Point(57) = {0.066709, 0.734557, 0, 1.0};
Point(58) = {0.069406, 0.734329, 0, 1.0};
Point(59) = {0.071552, 0.734159, 0, 1.0};
Point(60) = {0.073133, 0.734046, 0, 1.0};
Point(61) = {0.074122, 0.733974, 0, 1.0};
Point(62) = {-0.074462, -0.733943, 0, 1.0};
Point(63) = {-0.074120, -0.734002, 0, 1.0};
Point(64) = {-0.073102, -0.734197, 0, 1.0};
Point(65) = {-0.071433, -0.734567, 0, 1.0};
Point(66) = {-0.069163, -0.735153, 0, 1.0};
Point(67) = {-0.066371, -0.735974, 0, 1.0};
Point(68) = {-0.063148, -0.737022, 0, 1.0};
Point(69) = {-0.059581, -0.738265, 0, 1.0};
Point(70) = {-0.055754, -0.739657, 0, 1.0};
Point(71) = {-0.051751, -0.741134, 0, 1.0};
Point(72) = {-0.047638, -0.742599, 0, 1.0};
Point(73) = {-0.043413, -0.743936, 0, 1.0};
Point(74) = {-0.039022, -0.745117, 0, 1.0};
Point(75) = {-0.034472, -0.746177, 0, 1.0};
Point(76) = {-0.029821, -0.747121, 0, 1.0};
Point(77) = {-0.025110, -0.747937, 0, 1.0};
Point(78) = {-0.020382, -0.748621, 0, 1.0};
Point(79) = {-0.015680, -0.749172, 0, 1.0};
Point(80) = {-0.011054, -0.749589, 0, 1.0};
Point(81) = {-0.006554, -0.749868, 0, 1.0};
Point(82) = {-0.002222, -0.750000, 0, 1.0};
Point(83) = {0.001912, -0.749986, 0, 1.0};
Point(84) = {0.005811, -0.749841, 0, 1.0};
Point(85) = {0.009434, -0.749576, 0, 1.0};
Point(86) = {0.012734, -0.749196, 0, 1.0};
Point(87) = {0.015686, -0.748704, 0, 1.0};
Point(88) = {0.018272, -0.748111, 0, 1.0};
Point(89) = {0.020473, -0.747446, 0, 1.0};
Point(90) = {0.022260, -0.746730, 0, 1.0};
Point(91) = {0.023610, -0.745983, 0, 1.0};
Point(92) = {0.024510, -0.745223, 0, 1.0};
Point(93) = {0.024963, -0.744486, 0, 1.0};
Point(94) = {0.025000, -0.744304, 0, 1.0};
Point(95) = {0.024918, -0.743864, 0, 1.0};
Point(96) = {0.024296, -0.743331, 0, 1.0};
Point(97) = {0.023092, -0.742804, 0, 1.0};
Point(98) = {0.021343, -0.742301, 0, 1.0};
Point(99) = {0.019058, -0.741826, 0, 1.0};
Point(100) = {0.016256, -0.741370, 0, 1.0};
Point(101) = {0.012968, -0.740926, 0, 1.0};
Point(102) = {0.009235, -0.740490, 0, 1.0};
Point(103) = {0.005105, -0.740061, 0, 1.0};
Point(104) = {0.000622, -0.739644, 0, 1.0};
Point(105) = {-0.004166, -0.739239, 0, 1.0};
Point(106) = {-0.009208, -0.738842, 0, 1.0};
Point(107) = {-0.014444, -0.738451, 0, 1.0};
Point(108) = {-0.019813, -0.738062, 0, 1.0};
Point(109) = {-0.025251, -0.737677, 0, 1.0};
Point(110) = {-0.030693, -0.737294, 0, 1.0};
Point(111) = {-0.036074, -0.736914, 0, 1.0};
Point(112) = {-0.041327, -0.736538, 0, 1.0};
Point(113) = {-0.046389, -0.736168, 0, 1.0};
Point(114) = {-0.051196, -0.735808, 0, 1.0};
Point(115) = {-0.055686, -0.735460, 0, 1.0};
Point(116) = {-0.059803, -0.735131, 0, 1.0};
Point(117) = {-0.063493, -0.734827, 0, 1.0};
Point(118) = {-0.066709, -0.734557, 0, 1.0};
Point(119) = {-0.069406, -0.734329, 0, 1.0};
Point(120) = {-0.071552, -0.734159, 0, 1.0};
Point(121) = {-0.073133, -0.734046, 0, 1.0};
Point(122) = {-0.074122, -0.733974, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
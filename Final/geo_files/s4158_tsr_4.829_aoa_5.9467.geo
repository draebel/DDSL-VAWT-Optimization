SetFactory("OpenCASCADE");

Point(1) = {0.148924, 0.717886, 0, 1.0};
Point(2) = {0.148240, 0.718004, 0, 1.0};
Point(3) = {0.146204, 0.718393, 0, 1.0};
Point(4) = {0.142866, 0.719135, 0, 1.0};
Point(5) = {0.138325, 0.720306, 0, 1.0};
Point(6) = {0.132742, 0.721949, 0, 1.0};
Point(7) = {0.126296, 0.724044, 0, 1.0};
Point(8) = {0.119161, 0.726531, 0, 1.0};
Point(9) = {0.111508, 0.729314, 0, 1.0};
Point(10) = {0.103501, 0.732268, 0, 1.0};
Point(11) = {0.095277, 0.735198, 0, 1.0};
Point(12) = {0.086826, 0.737872, 0, 1.0};
Point(13) = {0.078044, 0.740234, 0, 1.0};
Point(14) = {0.068944, 0.742354, 0, 1.0};
Point(15) = {0.059642, 0.744242, 0, 1.0};
Point(16) = {0.050220, 0.745873, 0, 1.0};
Point(17) = {0.040763, 0.747242, 0, 1.0};
Point(18) = {0.031361, 0.748344, 0, 1.0};
Point(19) = {0.022107, 0.749178, 0, 1.0};
Point(20) = {0.013109, 0.749737, 0, 1.0};
Point(21) = {0.004443, 0.750000, 0, 1.0};
Point(22) = {-0.003824, 0.749972, 0, 1.0};
Point(23) = {-0.011622, 0.749683, 0, 1.0};
Point(24) = {-0.018868, 0.749153, 0, 1.0};
Point(25) = {-0.025468, 0.748392, 0, 1.0};
Point(26) = {-0.031372, 0.747409, 0, 1.0};
Point(27) = {-0.036545, 0.746222, 0, 1.0};
Point(28) = {-0.040946, 0.744891, 0, 1.0};
Point(29) = {-0.044520, 0.743460, 0, 1.0};
Point(30) = {-0.047219, 0.741965, 0, 1.0};
Point(31) = {-0.049020, 0.740446, 0, 1.0};
Point(32) = {-0.049926, 0.738972, 0, 1.0};
Point(33) = {-0.050000, 0.738607, 0, 1.0};
Point(34) = {-0.049836, 0.737728, 0, 1.0};
Point(35) = {-0.048592, 0.736663, 0, 1.0};
Point(36) = {-0.046184, 0.735608, 0, 1.0};
Point(37) = {-0.042686, 0.734602, 0, 1.0};
Point(38) = {-0.038116, 0.733651, 0, 1.0};
Point(39) = {-0.032512, 0.732740, 0, 1.0};
Point(40) = {-0.025936, 0.731852, 0, 1.0};
Point(41) = {-0.018471, 0.730980, 0, 1.0};
Point(42) = {-0.010209, 0.730121, 0, 1.0};
Point(43) = {-0.001243, 0.729288, 0, 1.0};
Point(44) = {0.008332, 0.728477, 0, 1.0};
Point(45) = {0.018417, 0.727684, 0, 1.0};
Point(46) = {0.028888, 0.726901, 0, 1.0};
Point(47) = {0.039625, 0.726125, 0, 1.0};
Point(48) = {0.050502, 0.725354, 0, 1.0};
Point(49) = {0.061387, 0.724588, 0, 1.0};
Point(50) = {0.072148, 0.723829, 0, 1.0};
Point(51) = {0.082655, 0.723076, 0, 1.0};
Point(52) = {0.092779, 0.722335, 0, 1.0};
Point(53) = {0.102392, 0.721615, 0, 1.0};
Point(54) = {0.111372, 0.720919, 0, 1.0};
Point(55) = {0.119606, 0.720263, 0, 1.0};
Point(56) = {0.126987, 0.719655, 0, 1.0};
Point(57) = {0.133417, 0.719114, 0, 1.0};
Point(58) = {0.138811, 0.718658, 0, 1.0};
Point(59) = {0.143103, 0.718318, 0, 1.0};
Point(60) = {0.146267, 0.718093, 0, 1.0};
Point(61) = {0.148244, 0.717947, 0, 1.0};
Point(62) = {-0.148924, -0.717886, 0, 1.0};
Point(63) = {-0.148240, -0.718004, 0, 1.0};
Point(64) = {-0.146204, -0.718393, 0, 1.0};
Point(65) = {-0.142866, -0.719135, 0, 1.0};
Point(66) = {-0.138325, -0.720306, 0, 1.0};
Point(67) = {-0.132742, -0.721949, 0, 1.0};
Point(68) = {-0.126296, -0.724044, 0, 1.0};
Point(69) = {-0.119161, -0.726531, 0, 1.0};
Point(70) = {-0.111508, -0.729314, 0, 1.0};
Point(71) = {-0.103501, -0.732268, 0, 1.0};
Point(72) = {-0.095277, -0.735198, 0, 1.0};
Point(73) = {-0.086826, -0.737872, 0, 1.0};
Point(74) = {-0.078044, -0.740234, 0, 1.0};
Point(75) = {-0.068944, -0.742354, 0, 1.0};
Point(76) = {-0.059642, -0.744242, 0, 1.0};
Point(77) = {-0.050220, -0.745873, 0, 1.0};
Point(78) = {-0.040763, -0.747242, 0, 1.0};
Point(79) = {-0.031361, -0.748344, 0, 1.0};
Point(80) = {-0.022107, -0.749178, 0, 1.0};
Point(81) = {-0.013109, -0.749737, 0, 1.0};
Point(82) = {-0.004443, -0.750000, 0, 1.0};
Point(83) = {0.003824, -0.749972, 0, 1.0};
Point(84) = {0.011622, -0.749683, 0, 1.0};
Point(85) = {0.018868, -0.749153, 0, 1.0};
Point(86) = {0.025468, -0.748392, 0, 1.0};
Point(87) = {0.031372, -0.747409, 0, 1.0};
Point(88) = {0.036545, -0.746222, 0, 1.0};
Point(89) = {0.040946, -0.744891, 0, 1.0};
Point(90) = {0.044520, -0.743460, 0, 1.0};
Point(91) = {0.047219, -0.741965, 0, 1.0};
Point(92) = {0.049020, -0.740446, 0, 1.0};
Point(93) = {0.049926, -0.738972, 0, 1.0};
Point(94) = {0.050000, -0.738607, 0, 1.0};
Point(95) = {0.049836, -0.737728, 0, 1.0};
Point(96) = {0.048592, -0.736663, 0, 1.0};
Point(97) = {0.046184, -0.735608, 0, 1.0};
Point(98) = {0.042686, -0.734602, 0, 1.0};
Point(99) = {0.038116, -0.733651, 0, 1.0};
Point(100) = {0.032512, -0.732740, 0, 1.0};
Point(101) = {0.025936, -0.731852, 0, 1.0};
Point(102) = {0.018471, -0.730980, 0, 1.0};
Point(103) = {0.010209, -0.730121, 0, 1.0};
Point(104) = {0.001243, -0.729288, 0, 1.0};
Point(105) = {-0.008332, -0.728477, 0, 1.0};
Point(106) = {-0.018417, -0.727684, 0, 1.0};
Point(107) = {-0.028888, -0.726901, 0, 1.0};
Point(108) = {-0.039625, -0.726125, 0, 1.0};
Point(109) = {-0.050502, -0.725354, 0, 1.0};
Point(110) = {-0.061387, -0.724588, 0, 1.0};
Point(111) = {-0.072148, -0.723829, 0, 1.0};
Point(112) = {-0.082655, -0.723076, 0, 1.0};
Point(113) = {-0.092779, -0.722335, 0, 1.0};
Point(114) = {-0.102392, -0.721615, 0, 1.0};
Point(115) = {-0.111372, -0.720919, 0, 1.0};
Point(116) = {-0.119606, -0.720263, 0, 1.0};
Point(117) = {-0.126987, -0.719655, 0, 1.0};
Point(118) = {-0.133417, -0.719114, 0, 1.0};
Point(119) = {-0.138811, -0.718658, 0, 1.0};
Point(120) = {-0.143103, -0.718318, 0, 1.0};
Point(121) = {-0.146267, -0.718093, 0, 1.0};
Point(122) = {-0.148244, -0.717947, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:44};
Spline(3) = {44:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:105};
Spline(7) = {105:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.112488, 0.736492, 0, 1.0};
Point(2) = {0.112246, 0.736578, 0, 1.0};
Point(3) = {0.111519, 0.736671, 0, 1.0};
Point(4) = {0.110315, 0.736976, 0, 1.0};
Point(5) = {0.108639, 0.737389, 0, 1.0};
Point(6) = {0.106504, 0.737905, 0, 1.0};
Point(7) = {0.103921, 0.738446, 0, 1.0};
Point(8) = {0.100908, 0.738993, 0, 1.0};
Point(9) = {0.097484, 0.739565, 0, 1.0};
Point(10) = {0.093671, 0.740172, 0, 1.0};
Point(11) = {0.089495, 0.740814, 0, 1.0};
Point(12) = {0.084982, 0.741491, 0, 1.0};
Point(13) = {0.080162, 0.742198, 0, 1.0};
Point(14) = {0.075065, 0.742933, 0, 1.0};
Point(15) = {0.069726, 0.743689, 0, 1.0};
Point(16) = {0.064179, 0.744456, 0, 1.0};
Point(17) = {0.058459, 0.745225, 0, 1.0};
Point(18) = {0.052604, 0.745987, 0, 1.0};
Point(19) = {0.046651, 0.746726, 0, 1.0};
Point(20) = {0.040639, 0.747429, 0, 1.0};
Point(21) = {0.034606, 0.748082, 0, 1.0};
Point(22) = {0.028593, 0.748668, 0, 1.0};
Point(23) = {0.022637, 0.749170, 0, 1.0};
Point(24) = {0.016777, 0.749571, 0, 1.0};
Point(25) = {0.011051, 0.749854, 0, 1.0};
Point(26) = {0.005496, 0.750000, 0, 1.0};
Point(27) = {0.000147, 0.749988, 0, 1.0};
Point(28) = {-0.004960, 0.749845, 0, 1.0};
Point(29) = {-0.009791, 0.749639, 0, 1.0};
Point(30) = {-0.014317, 0.749271, 0, 1.0};
Point(31) = {-0.018509, 0.748693, 0, 1.0};
Point(32) = {-0.022338, 0.747925, 0, 1.0};
Point(33) = {-0.025781, 0.747027, 0, 1.0};
Point(34) = {-0.028813, 0.746069, 0, 1.0};
Point(35) = {-0.031415, 0.745049, 0, 1.0};
Point(36) = {-0.033571, 0.743938, 0, 1.0};
Point(37) = {-0.035266, 0.742736, 0, 1.0};
Point(38) = {-0.036491, 0.741399, 0, 1.0};
Point(39) = {-0.037234, 0.740173, 0, 1.0};
Point(40) = {-0.037500, 0.738352, 0, 1.0};
Point(41) = {-0.037266, 0.737609, 0, 1.0};
Point(42) = {-0.036545, 0.737070, 0, 1.0};
Point(43) = {-0.035343, 0.736530, 0, 1.0};
Point(44) = {-0.033669, 0.735987, 0, 1.0};
Point(45) = {-0.031534, 0.735470, 0, 1.0};
Point(46) = {-0.028950, 0.735004, 0, 1.0};
Point(47) = {-0.025935, 0.734588, 0, 1.0};
Point(48) = {-0.022508, 0.734216, 0, 1.0};
Point(49) = {-0.018692, 0.733882, 0, 1.0};
Point(50) = {-0.014512, 0.733584, 0, 1.0};
Point(51) = {-0.009994, 0.733321, 0, 1.0};
Point(52) = {-0.005168, 0.733095, 0, 1.0};
Point(53) = {-0.000065, 0.732906, 0, 1.0};
Point(54) = {0.005282, 0.732774, 0, 1.0};
Point(55) = {0.010839, 0.732734, 0, 1.0};
Point(56) = {0.016569, 0.732777, 0, 1.0};
Point(57) = {0.022435, 0.732891, 0, 1.0};
Point(58) = {0.028399, 0.733057, 0, 1.0};
Point(59) = {0.034422, 0.733252, 0, 1.0};
Point(60) = {0.040465, 0.733463, 0, 1.0};
Point(61) = {0.046489, 0.733690, 0, 1.0};
Point(62) = {0.052454, 0.733937, 0, 1.0};
Point(63) = {0.058322, 0.734207, 0, 1.0};
Point(64) = {0.064055, 0.734500, 0, 1.0};
Point(65) = {0.069616, 0.734799, 0, 1.0};
Point(66) = {0.074968, 0.735065, 0, 1.0};
Point(67) = {0.080075, 0.735243, 0, 1.0};
Point(68) = {0.084906, 0.735417, 0, 1.0};
Point(69) = {0.089430, 0.735577, 0, 1.0};
Point(70) = {0.093615, 0.735695, 0, 1.0};
Point(71) = {0.097438, 0.735913, 0, 1.0};
Point(72) = {0.100871, 0.736018, 0, 1.0};
Point(73) = {0.103893, 0.736135, 0, 1.0};
Point(74) = {0.106483, 0.736238, 0, 1.0};
Point(75) = {0.108626, 0.736308, 0, 1.0};
Point(76) = {0.110308, 0.736378, 0, 1.0};
Point(77) = {0.111516, 0.736439, 0, 1.0};
Point(78) = {0.112245, 0.736479, 0, 1.0};
Point(79) = {-0.112488, -0.736492, 0, 1.0};
Point(80) = {-0.112246, -0.736578, 0, 1.0};
Point(81) = {-0.111519, -0.736671, 0, 1.0};
Point(82) = {-0.110315, -0.736976, 0, 1.0};
Point(83) = {-0.108639, -0.737389, 0, 1.0};
Point(84) = {-0.106504, -0.737905, 0, 1.0};
Point(85) = {-0.103921, -0.738446, 0, 1.0};
Point(86) = {-0.100908, -0.738993, 0, 1.0};
Point(87) = {-0.097484, -0.739565, 0, 1.0};
Point(88) = {-0.093671, -0.740172, 0, 1.0};
Point(89) = {-0.089495, -0.740814, 0, 1.0};
Point(90) = {-0.084982, -0.741491, 0, 1.0};
Point(91) = {-0.080162, -0.742198, 0, 1.0};
Point(92) = {-0.075065, -0.742933, 0, 1.0};
Point(93) = {-0.069726, -0.743689, 0, 1.0};
Point(94) = {-0.064179, -0.744456, 0, 1.0};
Point(95) = {-0.058459, -0.745225, 0, 1.0};
Point(96) = {-0.052604, -0.745987, 0, 1.0};
Point(97) = {-0.046651, -0.746726, 0, 1.0};
Point(98) = {-0.040639, -0.747429, 0, 1.0};
Point(99) = {-0.034606, -0.748082, 0, 1.0};
Point(100) = {-0.028593, -0.748668, 0, 1.0};
Point(101) = {-0.022637, -0.749170, 0, 1.0};
Point(102) = {-0.016777, -0.749571, 0, 1.0};
Point(103) = {-0.011051, -0.749854, 0, 1.0};
Point(104) = {-0.005496, -0.750000, 0, 1.0};
Point(105) = {-0.000147, -0.749988, 0, 1.0};
Point(106) = {0.004960, -0.749845, 0, 1.0};
Point(107) = {0.009791, -0.749639, 0, 1.0};
Point(108) = {0.014317, -0.749271, 0, 1.0};
Point(109) = {0.018509, -0.748693, 0, 1.0};
Point(110) = {0.022338, -0.747925, 0, 1.0};
Point(111) = {0.025781, -0.747027, 0, 1.0};
Point(112) = {0.028813, -0.746069, 0, 1.0};
Point(113) = {0.031415, -0.745049, 0, 1.0};
Point(114) = {0.033571, -0.743938, 0, 1.0};
Point(115) = {0.035266, -0.742736, 0, 1.0};
Point(116) = {0.036491, -0.741399, 0, 1.0};
Point(117) = {0.037234, -0.740173, 0, 1.0};
Point(118) = {0.037500, -0.738352, 0, 1.0};
Point(119) = {0.037266, -0.737609, 0, 1.0};
Point(120) = {0.036545, -0.737070, 0, 1.0};
Point(121) = {0.035343, -0.736530, 0, 1.0};
Point(122) = {0.033669, -0.735987, 0, 1.0};
Point(123) = {0.031534, -0.735470, 0, 1.0};
Point(124) = {0.028950, -0.735004, 0, 1.0};
Point(125) = {0.025935, -0.734588, 0, 1.0};
Point(126) = {0.022508, -0.734216, 0, 1.0};
Point(127) = {0.018692, -0.733882, 0, 1.0};
Point(128) = {0.014512, -0.733584, 0, 1.0};
Point(129) = {0.009994, -0.733321, 0, 1.0};
Point(130) = {0.005168, -0.733095, 0, 1.0};
Point(131) = {0.000065, -0.732906, 0, 1.0};
Point(132) = {-0.005282, -0.732774, 0, 1.0};
Point(133) = {-0.010839, -0.732734, 0, 1.0};
Point(134) = {-0.016569, -0.732777, 0, 1.0};
Point(135) = {-0.022435, -0.732891, 0, 1.0};
Point(136) = {-0.028399, -0.733057, 0, 1.0};
Point(137) = {-0.034422, -0.733252, 0, 1.0};
Point(138) = {-0.040465, -0.733463, 0, 1.0};
Point(139) = {-0.046489, -0.733690, 0, 1.0};
Point(140) = {-0.052454, -0.733937, 0, 1.0};
Point(141) = {-0.058322, -0.734207, 0, 1.0};
Point(142) = {-0.064055, -0.734500, 0, 1.0};
Point(143) = {-0.069616, -0.734799, 0, 1.0};
Point(144) = {-0.074968, -0.735065, 0, 1.0};
Point(145) = {-0.080075, -0.735243, 0, 1.0};
Point(146) = {-0.084906, -0.735417, 0, 1.0};
Point(147) = {-0.089430, -0.735577, 0, 1.0};
Point(148) = {-0.093615, -0.735695, 0, 1.0};
Point(149) = {-0.097438, -0.735913, 0, 1.0};
Point(150) = {-0.100871, -0.736018, 0, 1.0};
Point(151) = {-0.103893, -0.736135, 0, 1.0};
Point(152) = {-0.106483, -0.736238, 0, 1.0};
Point(153) = {-0.108626, -0.736308, 0, 1.0};
Point(154) = {-0.110308, -0.736378, 0, 1.0};
Point(155) = {-0.111516, -0.736439, 0, 1.0};
Point(156) = {-0.112245, -0.736479, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:53};
Spline(3) = {53:78};
Spline(4) = {78,1};

// Lines: second blade (splines 5-8)
Spline(5) = {79:104};
Spline(6) = {104:131};
Spline(7) = {131:156};
Spline(8) = {156,79};

// Outer domain (points 20001-4 and lines)
Point(157) = {-13.50000000, -15.00000000, 0, 1.0};
Point(158) = {-13.50000000, 15.00000000, 0, 1.0};
Point(159) = {13.50000000, 15.00000000, 0, 1.0};
Point(160) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {157, 158};
Line(12) = {158, 159};
Line(13) = {159, 160};
Line(14) = {157, 160};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
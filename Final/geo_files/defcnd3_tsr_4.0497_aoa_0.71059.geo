SetFactory("OpenCASCADE");

Point(1) = {0.074992, 0.740995, 0, 1.0};
Point(2) = {0.074831, 0.741052, 0, 1.0};
Point(3) = {0.074346, 0.741114, 0, 1.0};
Point(4) = {0.073543, 0.741317, 0, 1.0};
Point(5) = {0.072426, 0.741593, 0, 1.0};
Point(6) = {0.071003, 0.741937, 0, 1.0};
Point(7) = {0.069281, 0.742298, 0, 1.0};
Point(8) = {0.067272, 0.742662, 0, 1.0};
Point(9) = {0.064989, 0.743044, 0, 1.0};
Point(10) = {0.062447, 0.743448, 0, 1.0};
Point(11) = {0.059663, 0.743876, 0, 1.0};
Point(12) = {0.056655, 0.744327, 0, 1.0};
Point(13) = {0.053441, 0.744799, 0, 1.0};
Point(14) = {0.050044, 0.745289, 0, 1.0};
Point(15) = {0.046484, 0.745792, 0, 1.0};
Point(16) = {0.042786, 0.746304, 0, 1.0};
Point(17) = {0.038973, 0.746817, 0, 1.0};
Point(18) = {0.035069, 0.747324, 0, 1.0};
Point(19) = {0.031100, 0.747817, 0, 1.0};
Point(20) = {0.027092, 0.748286, 0, 1.0};
Point(21) = {0.023071, 0.748722, 0, 1.0};
Point(22) = {0.019062, 0.749112, 0, 1.0};
Point(23) = {0.015091, 0.749447, 0, 1.0};
Point(24) = {0.011185, 0.749714, 0, 1.0};
Point(25) = {0.007367, 0.749903, 0, 1.0};
Point(26) = {0.003664, 0.750000, 0, 1.0};
Point(27) = {0.000098, 0.749992, 0, 1.0};
Point(28) = {-0.003307, 0.749896, 0, 1.0};
Point(29) = {-0.006528, 0.749759, 0, 1.0};
Point(30) = {-0.009545, 0.749514, 0, 1.0};
Point(31) = {-0.012339, 0.749129, 0, 1.0};
Point(32) = {-0.014892, 0.748617, 0, 1.0};
Point(33) = {-0.017187, 0.748018, 0, 1.0};
Point(34) = {-0.019209, 0.747379, 0, 1.0};
Point(35) = {-0.020943, 0.746699, 0, 1.0};
Point(36) = {-0.022380, 0.745958, 0, 1.0};
Point(37) = {-0.023511, 0.745157, 0, 1.0};
Point(38) = {-0.024327, 0.744266, 0, 1.0};
Point(39) = {-0.024823, 0.743449, 0, 1.0};
Point(40) = {-0.025000, 0.742235, 0, 1.0};
Point(41) = {-0.024844, 0.741739, 0, 1.0};
Point(42) = {-0.024363, 0.741380, 0, 1.0};
Point(43) = {-0.023562, 0.741020, 0, 1.0};
Point(44) = {-0.022446, 0.740658, 0, 1.0};
Point(45) = {-0.021023, 0.740313, 0, 1.0};
Point(46) = {-0.019300, 0.740003, 0, 1.0};
Point(47) = {-0.017290, 0.739725, 0, 1.0};
Point(48) = {-0.015006, 0.739477, 0, 1.0};
Point(49) = {-0.012461, 0.739254, 0, 1.0};
Point(50) = {-0.009674, 0.739056, 0, 1.0};
Point(51) = {-0.006662, 0.738881, 0, 1.0};
Point(52) = {-0.003445, 0.738730, 0, 1.0};
Point(53) = {-0.000043, 0.738604, 0, 1.0};
Point(54) = {0.003521, 0.738516, 0, 1.0};
Point(55) = {0.007226, 0.738489, 0, 1.0};
Point(56) = {0.011046, 0.738518, 0, 1.0};
Point(57) = {0.014957, 0.738594, 0, 1.0};
Point(58) = {0.018933, 0.738705, 0, 1.0};
Point(59) = {0.022948, 0.738835, 0, 1.0};
Point(60) = {0.026977, 0.738975, 0, 1.0};
Point(61) = {0.030993, 0.739127, 0, 1.0};
Point(62) = {0.034969, 0.739291, 0, 1.0};
Point(63) = {0.038882, 0.739471, 0, 1.0};
Point(64) = {0.042704, 0.739667, 0, 1.0};
Point(65) = {0.046411, 0.739866, 0, 1.0};
Point(66) = {0.049979, 0.740043, 0, 1.0};
Point(67) = {0.053384, 0.740162, 0, 1.0};
Point(68) = {0.056604, 0.740278, 0, 1.0};
Point(69) = {0.059620, 0.740385, 0, 1.0};
Point(70) = {0.062410, 0.740464, 0, 1.0};
Point(71) = {0.064959, 0.740608, 0, 1.0};
Point(72) = {0.067247, 0.740678, 0, 1.0};
Point(73) = {0.069262, 0.740756, 0, 1.0};
Point(74) = {0.070989, 0.740826, 0, 1.0};
Point(75) = {0.072417, 0.740872, 0, 1.0};
Point(76) = {0.073538, 0.740919, 0, 1.0};
Point(77) = {0.074344, 0.740960, 0, 1.0};
Point(78) = {0.074830, 0.740986, 0, 1.0};
Point(79) = {-0.074992, -0.740995, 0, 1.0};
Point(80) = {-0.074831, -0.741052, 0, 1.0};
Point(81) = {-0.074346, -0.741114, 0, 1.0};
Point(82) = {-0.073543, -0.741317, 0, 1.0};
Point(83) = {-0.072426, -0.741593, 0, 1.0};
Point(84) = {-0.071003, -0.741937, 0, 1.0};
Point(85) = {-0.069281, -0.742298, 0, 1.0};
Point(86) = {-0.067272, -0.742662, 0, 1.0};
Point(87) = {-0.064989, -0.743044, 0, 1.0};
Point(88) = {-0.062447, -0.743448, 0, 1.0};
Point(89) = {-0.059663, -0.743876, 0, 1.0};
Point(90) = {-0.056655, -0.744327, 0, 1.0};
Point(91) = {-0.053441, -0.744799, 0, 1.0};
Point(92) = {-0.050044, -0.745289, 0, 1.0};
Point(93) = {-0.046484, -0.745792, 0, 1.0};
Point(94) = {-0.042786, -0.746304, 0, 1.0};
Point(95) = {-0.038973, -0.746817, 0, 1.0};
Point(96) = {-0.035069, -0.747324, 0, 1.0};
Point(97) = {-0.031100, -0.747817, 0, 1.0};
Point(98) = {-0.027092, -0.748286, 0, 1.0};
Point(99) = {-0.023071, -0.748722, 0, 1.0};
Point(100) = {-0.019062, -0.749112, 0, 1.0};
Point(101) = {-0.015091, -0.749447, 0, 1.0};
Point(102) = {-0.011185, -0.749714, 0, 1.0};
Point(103) = {-0.007367, -0.749903, 0, 1.0};
Point(104) = {-0.003664, -0.750000, 0, 1.0};
Point(105) = {-0.000098, -0.749992, 0, 1.0};
Point(106) = {0.003307, -0.749896, 0, 1.0};
Point(107) = {0.006528, -0.749759, 0, 1.0};
Point(108) = {0.009545, -0.749514, 0, 1.0};
Point(109) = {0.012339, -0.749129, 0, 1.0};
Point(110) = {0.014892, -0.748617, 0, 1.0};
Point(111) = {0.017187, -0.748018, 0, 1.0};
Point(112) = {0.019209, -0.747379, 0, 1.0};
Point(113) = {0.020943, -0.746699, 0, 1.0};
Point(114) = {0.022380, -0.745958, 0, 1.0};
Point(115) = {0.023511, -0.745157, 0, 1.0};
Point(116) = {0.024327, -0.744266, 0, 1.0};
Point(117) = {0.024823, -0.743449, 0, 1.0};
Point(118) = {0.025000, -0.742235, 0, 1.0};
Point(119) = {0.024844, -0.741739, 0, 1.0};
Point(120) = {0.024363, -0.741380, 0, 1.0};
Point(121) = {0.023562, -0.741020, 0, 1.0};
Point(122) = {0.022446, -0.740658, 0, 1.0};
Point(123) = {0.021023, -0.740313, 0, 1.0};
Point(124) = {0.019300, -0.740003, 0, 1.0};
Point(125) = {0.017290, -0.739725, 0, 1.0};
Point(126) = {0.015006, -0.739477, 0, 1.0};
Point(127) = {0.012461, -0.739254, 0, 1.0};
Point(128) = {0.009674, -0.739056, 0, 1.0};
Point(129) = {0.006662, -0.738881, 0, 1.0};
Point(130) = {0.003445, -0.738730, 0, 1.0};
Point(131) = {0.000043, -0.738604, 0, 1.0};
Point(132) = {-0.003521, -0.738516, 0, 1.0};
Point(133) = {-0.007226, -0.738489, 0, 1.0};
Point(134) = {-0.011046, -0.738518, 0, 1.0};
Point(135) = {-0.014957, -0.738594, 0, 1.0};
Point(136) = {-0.018933, -0.738705, 0, 1.0};
Point(137) = {-0.022948, -0.738835, 0, 1.0};
Point(138) = {-0.026977, -0.738975, 0, 1.0};
Point(139) = {-0.030993, -0.739127, 0, 1.0};
Point(140) = {-0.034969, -0.739291, 0, 1.0};
Point(141) = {-0.038882, -0.739471, 0, 1.0};
Point(142) = {-0.042704, -0.739667, 0, 1.0};
Point(143) = {-0.046411, -0.739866, 0, 1.0};
Point(144) = {-0.049979, -0.740043, 0, 1.0};
Point(145) = {-0.053384, -0.740162, 0, 1.0};
Point(146) = {-0.056604, -0.740278, 0, 1.0};
Point(147) = {-0.059620, -0.740385, 0, 1.0};
Point(148) = {-0.062410, -0.740464, 0, 1.0};
Point(149) = {-0.064959, -0.740608, 0, 1.0};
Point(150) = {-0.067247, -0.740678, 0, 1.0};
Point(151) = {-0.069262, -0.740756, 0, 1.0};
Point(152) = {-0.070989, -0.740826, 0, 1.0};
Point(153) = {-0.072417, -0.740872, 0, 1.0};
Point(154) = {-0.073538, -0.740919, 0, 1.0};
Point(155) = {-0.074344, -0.740960, 0, 1.0};
Point(156) = {-0.074830, -0.740986, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:53};
Spline(3) = {53:78};
Spline(4) = {78,1};

// Lines: second blade (splines 5-8)
Spline(5) = {79:104};
Spline(6) = {104:131};
Spline(7) = {131:156};
Spline(8) = {156,79};

// Outer domain (points 20001-4 and lines)
Point(157) = {-13.50000000, -15.00000000, 0, 1.0};
Point(158) = {-13.50000000, 15.00000000, 0, 1.0};
Point(159) = {13.50000000, 15.00000000, 0, 1.0};
Point(160) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {157, 158};
Line(12) = {158, 159};
Line(13) = {159, 160};
Line(14) = {157, 160};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
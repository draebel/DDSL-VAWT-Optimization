SetFactory("OpenCASCADE");

Point(1) = {0.149985, 0.731989, 0, 1.0};
Point(2) = {0.149662, 0.732104, 0, 1.0};
Point(3) = {0.148692, 0.732228, 0, 1.0};
Point(4) = {0.147087, 0.732634, 0, 1.0};
Point(5) = {0.144853, 0.733185, 0, 1.0};
Point(6) = {0.142005, 0.733874, 0, 1.0};
Point(7) = {0.138562, 0.734595, 0, 1.0};
Point(8) = {0.134544, 0.735324, 0, 1.0};
Point(9) = {0.129978, 0.736087, 0, 1.0};
Point(10) = {0.124895, 0.736896, 0, 1.0};
Point(11) = {0.119326, 0.737752, 0, 1.0};
Point(12) = {0.113309, 0.738655, 0, 1.0};
Point(13) = {0.106882, 0.739597, 0, 1.0};
Point(14) = {0.100087, 0.740578, 0, 1.0};
Point(15) = {0.092968, 0.741585, 0, 1.0};
Point(16) = {0.085572, 0.742608, 0, 1.0};
Point(17) = {0.077945, 0.743634, 0, 1.0};
Point(18) = {0.070138, 0.744649, 0, 1.0};
Point(19) = {0.062201, 0.745635, 0, 1.0};
Point(20) = {0.054185, 0.746572, 0, 1.0};
Point(21) = {0.046142, 0.747443, 0, 1.0};
Point(22) = {0.038124, 0.748224, 0, 1.0};
Point(23) = {0.030182, 0.748894, 0, 1.0};
Point(24) = {0.022369, 0.749428, 0, 1.0};
Point(25) = {0.014735, 0.749806, 0, 1.0};
Point(26) = {0.007328, 0.750000, 0, 1.0};
Point(27) = {0.000196, 0.749984, 0, 1.0};
Point(28) = {-0.006613, 0.749793, 0, 1.0};
Point(29) = {-0.013055, 0.749519, 0, 1.0};
Point(30) = {-0.019089, 0.749028, 0, 1.0};
Point(31) = {-0.024678, 0.748258, 0, 1.0};
Point(32) = {-0.029784, 0.747233, 0, 1.0};
Point(33) = {-0.034374, 0.746035, 0, 1.0};
Point(34) = {-0.038417, 0.744758, 0, 1.0};
Point(35) = {-0.041887, 0.743399, 0, 1.0};
Point(36) = {-0.044761, 0.741917, 0, 1.0};
Point(37) = {-0.047021, 0.740314, 0, 1.0};
Point(38) = {-0.048655, 0.738533, 0, 1.0};
Point(39) = {-0.049646, 0.736897, 0, 1.0};
Point(40) = {-0.050000, 0.734470, 0, 1.0};
Point(41) = {-0.049688, 0.733478, 0, 1.0};
Point(42) = {-0.048726, 0.732760, 0, 1.0};
Point(43) = {-0.047124, 0.732041, 0, 1.0};
Point(44) = {-0.044892, 0.731315, 0, 1.0};
Point(45) = {-0.042045, 0.730627, 0, 1.0};
Point(46) = {-0.038600, 0.730005, 0, 1.0};
Point(47) = {-0.034580, 0.729450, 0, 1.0};
Point(48) = {-0.030011, 0.728954, 0, 1.0};
Point(49) = {-0.024923, 0.728509, 0, 1.0};
Point(50) = {-0.019349, 0.728112, 0, 1.0};
Point(51) = {-0.013325, 0.727762, 0, 1.0};
Point(52) = {-0.006890, 0.727460, 0, 1.0};
Point(53) = {-0.000086, 0.727208, 0, 1.0};
Point(54) = {0.007043, 0.727033, 0, 1.0};
Point(55) = {0.014452, 0.726978, 0, 1.0};
Point(56) = {0.022092, 0.727037, 0, 1.0};
Point(57) = {0.029913, 0.727188, 0, 1.0};
Point(58) = {0.037866, 0.727409, 0, 1.0};
Point(59) = {0.045896, 0.727670, 0, 1.0};
Point(60) = {0.053954, 0.727950, 0, 1.0};
Point(61) = {0.061985, 0.728253, 0, 1.0};
Point(62) = {0.069939, 0.728583, 0, 1.0};
Point(63) = {0.077763, 0.728942, 0, 1.0};
Point(64) = {0.085407, 0.729333, 0, 1.0};
Point(65) = {0.092821, 0.729732, 0, 1.0};
Point(66) = {0.099957, 0.730086, 0, 1.0};
Point(67) = {0.106767, 0.730324, 0, 1.0};
Point(68) = {0.113209, 0.730556, 0, 1.0};
Point(69) = {0.119240, 0.730770, 0, 1.0};
Point(70) = {0.124821, 0.730927, 0, 1.0};
Point(71) = {0.129918, 0.731217, 0, 1.0};
Point(72) = {0.134495, 0.731357, 0, 1.0};
Point(73) = {0.138523, 0.731513, 0, 1.0};
Point(74) = {0.141978, 0.731651, 0, 1.0};
Point(75) = {0.144835, 0.731744, 0, 1.0};
Point(76) = {0.147077, 0.731837, 0, 1.0};
Point(77) = {0.148689, 0.731919, 0, 1.0};
Point(78) = {0.149660, 0.731971, 0, 1.0};
Point(79) = {-0.149985, -0.731989, 0, 1.0};
Point(80) = {-0.149662, -0.732104, 0, 1.0};
Point(81) = {-0.148692, -0.732228, 0, 1.0};
Point(82) = {-0.147087, -0.732634, 0, 1.0};
Point(83) = {-0.144853, -0.733185, 0, 1.0};
Point(84) = {-0.142005, -0.733874, 0, 1.0};
Point(85) = {-0.138562, -0.734595, 0, 1.0};
Point(86) = {-0.134544, -0.735324, 0, 1.0};
Point(87) = {-0.129978, -0.736087, 0, 1.0};
Point(88) = {-0.124895, -0.736896, 0, 1.0};
Point(89) = {-0.119326, -0.737752, 0, 1.0};
Point(90) = {-0.113309, -0.738655, 0, 1.0};
Point(91) = {-0.106882, -0.739597, 0, 1.0};
Point(92) = {-0.100087, -0.740578, 0, 1.0};
Point(93) = {-0.092968, -0.741585, 0, 1.0};
Point(94) = {-0.085572, -0.742608, 0, 1.0};
Point(95) = {-0.077945, -0.743634, 0, 1.0};
Point(96) = {-0.070138, -0.744649, 0, 1.0};
Point(97) = {-0.062201, -0.745635, 0, 1.0};
Point(98) = {-0.054185, -0.746572, 0, 1.0};
Point(99) = {-0.046142, -0.747443, 0, 1.0};
Point(100) = {-0.038124, -0.748224, 0, 1.0};
Point(101) = {-0.030182, -0.748894, 0, 1.0};
Point(102) = {-0.022369, -0.749428, 0, 1.0};
Point(103) = {-0.014735, -0.749806, 0, 1.0};
Point(104) = {-0.007328, -0.750000, 0, 1.0};
Point(105) = {-0.000196, -0.749984, 0, 1.0};
Point(106) = {0.006613, -0.749793, 0, 1.0};
Point(107) = {0.013055, -0.749519, 0, 1.0};
Point(108) = {0.019089, -0.749028, 0, 1.0};
Point(109) = {0.024678, -0.748258, 0, 1.0};
Point(110) = {0.029784, -0.747233, 0, 1.0};
Point(111) = {0.034374, -0.746035, 0, 1.0};
Point(112) = {0.038417, -0.744758, 0, 1.0};
Point(113) = {0.041887, -0.743399, 0, 1.0};
Point(114) = {0.044761, -0.741917, 0, 1.0};
Point(115) = {0.047021, -0.740314, 0, 1.0};
Point(116) = {0.048655, -0.738533, 0, 1.0};
Point(117) = {0.049646, -0.736897, 0, 1.0};
Point(118) = {0.050000, -0.734470, 0, 1.0};
Point(119) = {0.049688, -0.733478, 0, 1.0};
Point(120) = {0.048726, -0.732760, 0, 1.0};
Point(121) = {0.047124, -0.732041, 0, 1.0};
Point(122) = {0.044892, -0.731315, 0, 1.0};
Point(123) = {0.042045, -0.730627, 0, 1.0};
Point(124) = {0.038600, -0.730005, 0, 1.0};
Point(125) = {0.034580, -0.729450, 0, 1.0};
Point(126) = {0.030011, -0.728954, 0, 1.0};
Point(127) = {0.024923, -0.728509, 0, 1.0};
Point(128) = {0.019349, -0.728112, 0, 1.0};
Point(129) = {0.013325, -0.727762, 0, 1.0};
Point(130) = {0.006890, -0.727460, 0, 1.0};
Point(131) = {0.000086, -0.727208, 0, 1.0};
Point(132) = {-0.007043, -0.727033, 0, 1.0};
Point(133) = {-0.014452, -0.726978, 0, 1.0};
Point(134) = {-0.022092, -0.727037, 0, 1.0};
Point(135) = {-0.029913, -0.727188, 0, 1.0};
Point(136) = {-0.037866, -0.727409, 0, 1.0};
Point(137) = {-0.045896, -0.727670, 0, 1.0};
Point(138) = {-0.053954, -0.727950, 0, 1.0};
Point(139) = {-0.061985, -0.728253, 0, 1.0};
Point(140) = {-0.069939, -0.728583, 0, 1.0};
Point(141) = {-0.077763, -0.728942, 0, 1.0};
Point(142) = {-0.085407, -0.729333, 0, 1.0};
Point(143) = {-0.092821, -0.729732, 0, 1.0};
Point(144) = {-0.099957, -0.730086, 0, 1.0};
Point(145) = {-0.106767, -0.730324, 0, 1.0};
Point(146) = {-0.113209, -0.730556, 0, 1.0};
Point(147) = {-0.119240, -0.730770, 0, 1.0};
Point(148) = {-0.124821, -0.730927, 0, 1.0};
Point(149) = {-0.129918, -0.731217, 0, 1.0};
Point(150) = {-0.134495, -0.731357, 0, 1.0};
Point(151) = {-0.138523, -0.731513, 0, 1.0};
Point(152) = {-0.141978, -0.731651, 0, 1.0};
Point(153) = {-0.144835, -0.731744, 0, 1.0};
Point(154) = {-0.147077, -0.731837, 0, 1.0};
Point(155) = {-0.148689, -0.731919, 0, 1.0};
Point(156) = {-0.149660, -0.731971, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:53};
Spline(3) = {53:78};
Spline(4) = {78,1};

// Lines: second blade (splines 5-8)
Spline(5) = {79:104};
Spline(6) = {104:131};
Spline(7) = {131:156};
Spline(8) = {156,79};

// Outer domain (points 20001-4 and lines)
Point(157) = {-13.50000000, -15.00000000, 0, 1.0};
Point(158) = {-13.50000000, 15.00000000, 0, 1.0};
Point(159) = {13.50000000, 15.00000000, 0, 1.0};
Point(160) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {157, 158};
Line(12) = {158, 159};
Line(13) = {159, 160};
Line(14) = {157, 160};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
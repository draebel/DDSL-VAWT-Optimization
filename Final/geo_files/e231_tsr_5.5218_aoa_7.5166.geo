SetFactory("OpenCASCADE");

Point(1) = {0.074485, 0.723883, 0, 1.0};
Point(2) = {0.072356, 0.724585, 0, 1.0};
Point(3) = {0.068139, 0.726020, 0, 1.0};
Point(4) = {0.063244, 0.727750, 0, 1.0};
Point(5) = {0.057789, 0.729737, 0, 1.0};
Point(6) = {0.051882, 0.731912, 0, 1.0};
Point(7) = {0.045628, 0.734190, 0, 1.0};
Point(8) = {0.039104, 0.736461, 0, 1.0};
Point(9) = {0.032336, 0.738622, 0, 1.0};
Point(10) = {0.025330, 0.740627, 0, 1.0};
Point(11) = {0.018125, 0.742457, 0, 1.0};
Point(12) = {0.010765, 0.744098, 0, 1.0};
Point(13) = {0.003312, 0.745543, 0, 1.0};
Point(14) = {-0.004172, 0.746791, 0, 1.0};
Point(15) = {-0.011611, 0.747842, 0, 1.0};
Point(16) = {-0.018925, 0.748694, 0, 1.0};
Point(17) = {-0.026036, 0.749339, 0, 1.0};
Point(18) = {-0.032869, 0.749774, 0, 1.0};
Point(19) = {-0.039357, 0.749994, 0, 1.0};
Point(20) = {-0.045433, 0.750000, 0, 1.0};
Point(21) = {-0.051040, 0.749792, 0, 1.0};
Point(22) = {-0.056127, 0.749379, 0, 1.0};
Point(23) = {-0.060650, 0.748768, 0, 1.0};
Point(24) = {-0.064571, 0.747979, 0, 1.0};
Point(25) = {-0.067863, 0.747034, 0, 1.0};
Point(26) = {-0.070499, 0.745965, 0, 1.0};
Point(27) = {-0.072469, 0.744814, 0, 1.0};
Point(28) = {-0.073759, 0.743645, 0, 1.0};
Point(29) = {-0.074297, 0.742752, 0, 1.0};
Point(30) = {-0.074356, 0.742520, 0, 1.0};
Point(31) = {-0.074353, 0.742300, 0, 1.0};
Point(32) = {-0.074264, 0.742099, 0, 1.0};
Point(33) = {-0.074097, 0.741884, 0, 1.0};
Point(34) = {-0.073947, 0.741731, 0, 1.0};
Point(35) = {-0.072553, 0.740759, 0, 1.0};
Point(36) = {-0.070307, 0.739703, 0, 1.0};
Point(37) = {-0.067238, 0.738601, 0, 1.0};
Point(38) = {-0.063387, 0.737466, 0, 1.0};
Point(39) = {-0.058790, 0.736307, 0, 1.0};
Point(40) = {-0.053500, 0.735136, 0, 1.0};
Point(41) = {-0.047577, 0.733959, 0, 1.0};
Point(42) = {-0.041084, 0.732787, 0, 1.0};
Point(43) = {-0.034097, 0.731626, 0, 1.0};
Point(44) = {-0.026697, 0.730487, 0, 1.0};
Point(45) = {-0.018964, 0.729378, 0, 1.0};
Point(46) = {-0.010992, 0.728309, 0, 1.0};
Point(47) = {-0.002867, 0.727291, 0, 1.0};
Point(48) = {0.005311, 0.726335, 0, 1.0};
Point(49) = {0.013452, 0.725453, 0, 1.0};
Point(50) = {0.021464, 0.724656, 0, 1.0};
Point(51) = {0.029252, 0.723956, 0, 1.0};
Point(52) = {0.036724, 0.723369, 0, 1.0};
Point(53) = {0.043797, 0.722931, 0, 1.0};
Point(54) = {0.050439, 0.722671, 0, 1.0};
Point(55) = {0.056637, 0.722568, 0, 1.0};
Point(56) = {0.062350, 0.722552, 0, 1.0};
Point(57) = {0.067498, 0.722548, 0, 1.0};
Point(58) = {0.071953, 0.722501, 0, 1.0};
Point(59) = {0.074295, 0.722441, 0, 1.0};
Point(60) = {-0.074485, -0.723883, 0, 1.0};
Point(61) = {-0.072356, -0.724585, 0, 1.0};
Point(62) = {-0.068139, -0.726020, 0, 1.0};
Point(63) = {-0.063244, -0.727750, 0, 1.0};
Point(64) = {-0.057789, -0.729737, 0, 1.0};
Point(65) = {-0.051882, -0.731912, 0, 1.0};
Point(66) = {-0.045628, -0.734190, 0, 1.0};
Point(67) = {-0.039104, -0.736461, 0, 1.0};
Point(68) = {-0.032336, -0.738622, 0, 1.0};
Point(69) = {-0.025330, -0.740627, 0, 1.0};
Point(70) = {-0.018125, -0.742457, 0, 1.0};
Point(71) = {-0.010765, -0.744098, 0, 1.0};
Point(72) = {-0.003312, -0.745543, 0, 1.0};
Point(73) = {0.004172, -0.746791, 0, 1.0};
Point(74) = {0.011611, -0.747842, 0, 1.0};
Point(75) = {0.018925, -0.748694, 0, 1.0};
Point(76) = {0.026036, -0.749339, 0, 1.0};
Point(77) = {0.032869, -0.749774, 0, 1.0};
Point(78) = {0.039357, -0.749994, 0, 1.0};
Point(79) = {0.045433, -0.750000, 0, 1.0};
Point(80) = {0.051040, -0.749792, 0, 1.0};
Point(81) = {0.056127, -0.749379, 0, 1.0};
Point(82) = {0.060650, -0.748768, 0, 1.0};
Point(83) = {0.064571, -0.747979, 0, 1.0};
Point(84) = {0.067863, -0.747034, 0, 1.0};
Point(85) = {0.070499, -0.745965, 0, 1.0};
Point(86) = {0.072469, -0.744814, 0, 1.0};
Point(87) = {0.073759, -0.743645, 0, 1.0};
Point(88) = {0.074297, -0.742752, 0, 1.0};
Point(89) = {0.074356, -0.742520, 0, 1.0};
Point(90) = {0.074353, -0.742300, 0, 1.0};
Point(91) = {0.074264, -0.742099, 0, 1.0};
Point(92) = {0.074097, -0.741884, 0, 1.0};
Point(93) = {0.073947, -0.741731, 0, 1.0};
Point(94) = {0.072553, -0.740759, 0, 1.0};
Point(95) = {0.070307, -0.739703, 0, 1.0};
Point(96) = {0.067238, -0.738601, 0, 1.0};
Point(97) = {0.063387, -0.737466, 0, 1.0};
Point(98) = {0.058790, -0.736307, 0, 1.0};
Point(99) = {0.053500, -0.735136, 0, 1.0};
Point(100) = {0.047577, -0.733959, 0, 1.0};
Point(101) = {0.041084, -0.732787, 0, 1.0};
Point(102) = {0.034097, -0.731626, 0, 1.0};
Point(103) = {0.026697, -0.730487, 0, 1.0};
Point(104) = {0.018964, -0.729378, 0, 1.0};
Point(105) = {0.010992, -0.728309, 0, 1.0};
Point(106) = {0.002867, -0.727291, 0, 1.0};
Point(107) = {-0.005311, -0.726335, 0, 1.0};
Point(108) = {-0.013452, -0.725453, 0, 1.0};
Point(109) = {-0.021464, -0.724656, 0, 1.0};
Point(110) = {-0.029252, -0.723956, 0, 1.0};
Point(111) = {-0.036724, -0.723369, 0, 1.0};
Point(112) = {-0.043797, -0.722931, 0, 1.0};
Point(113) = {-0.050439, -0.722671, 0, 1.0};
Point(114) = {-0.056637, -0.722568, 0, 1.0};
Point(115) = {-0.062350, -0.722552, 0, 1.0};
Point(116) = {-0.067498, -0.722548, 0, 1.0};
Point(117) = {-0.071953, -0.722501, 0, 1.0};
Point(118) = {-0.074295, -0.722441, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:77};
Spline(6) = {77:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {36.00000000, 15.00000000, 0, 1.0};
Point(122) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074653, 0.724053, 0, 1.0};
Point(2) = {0.072496, 0.724795, 0, 1.0};
Point(3) = {0.069860, 0.725758, 0, 1.0};
Point(4) = {0.066953, 0.726826, 0, 1.0};
Point(5) = {0.063788, 0.728001, 0, 1.0};
Point(6) = {0.060378, 0.729283, 0, 1.0};
Point(7) = {0.056744, 0.730693, 0, 1.0};
Point(8) = {0.052901, 0.732229, 0, 1.0};
Point(9) = {0.048865, 0.733880, 0, 1.0};
Point(10) = {0.044650, 0.735628, 0, 1.0};
Point(11) = {0.040268, 0.737411, 0, 1.0};
Point(12) = {0.035729, 0.739141, 0, 1.0};
Point(13) = {0.031042, 0.740737, 0, 1.0};
Point(14) = {0.026226, 0.742180, 0, 1.0};
Point(15) = {0.021307, 0.743500, 0, 1.0};
Point(16) = {0.016306, 0.744719, 0, 1.0};
Point(17) = {0.011251, 0.745846, 0, 1.0};
Point(18) = {0.006161, 0.746873, 0, 1.0};
Point(19) = {0.001055, 0.747781, 0, 1.0};
Point(20) = {-0.004047, 0.748534, 0, 1.0};
Point(21) = {-0.009130, 0.749102, 0, 1.0};
Point(22) = {-0.014165, 0.749505, 0, 1.0};
Point(23) = {-0.019129, 0.749776, 0, 1.0};
Point(24) = {-0.023996, 0.749941, 0, 1.0};
Point(25) = {-0.028746, 0.750000, 0, 1.0};
Point(26) = {-0.033359, 0.749950, 0, 1.0};
Point(27) = {-0.037814, 0.749807, 0, 1.0};
Point(28) = {-0.042088, 0.749573, 0, 1.0};
Point(29) = {-0.046165, 0.749254, 0, 1.0};
Point(30) = {-0.050028, 0.748856, 0, 1.0};
Point(31) = {-0.053658, 0.748383, 0, 1.0};
Point(32) = {-0.057040, 0.747845, 0, 1.0};
Point(33) = {-0.060157, 0.747247, 0, 1.0};
Point(34) = {-0.062997, 0.746598, 0, 1.0};
Point(35) = {-0.065548, 0.745902, 0, 1.0};
Point(36) = {-0.067795, 0.745175, 0, 1.0};
Point(37) = {-0.069730, 0.744433, 0, 1.0};
Point(38) = {-0.071340, 0.743675, 0, 1.0};
Point(39) = {-0.072620, 0.742930, 0, 1.0};
Point(40) = {-0.073565, 0.742190, 0, 1.0};
Point(41) = {-0.074165, 0.741497, 0, 1.0};
Point(42) = {-0.074409, 0.740911, 0, 1.0};
Point(43) = {-0.074300, 0.740420, 0, 1.0};
Point(44) = {-0.073842, 0.739992, 0, 1.0};
Point(45) = {-0.073046, 0.739559, 0, 1.0};
Point(46) = {-0.071919, 0.739093, 0, 1.0};
Point(47) = {-0.070465, 0.738611, 0, 1.0};
Point(48) = {-0.068688, 0.738107, 0, 1.0};
Point(49) = {-0.066599, 0.737579, 0, 1.0};
Point(50) = {-0.064205, 0.737034, 0, 1.0};
Point(51) = {-0.061518, 0.736471, 0, 1.0};
Point(52) = {-0.058550, 0.735889, 0, 1.0};
Point(53) = {-0.055311, 0.735293, 0, 1.0};
Point(54) = {-0.051818, 0.734680, 0, 1.0};
Point(55) = {-0.048084, 0.734055, 0, 1.0};
Point(56) = {-0.044128, 0.733418, 0, 1.0};
Point(57) = {-0.039964, 0.732773, 0, 1.0};
Point(58) = {-0.035610, 0.732122, 0, 1.0};
Point(59) = {-0.031086, 0.731467, 0, 1.0};
Point(60) = {-0.026412, 0.730811, 0, 1.0};
Point(61) = {-0.021606, 0.730158, 0, 1.0};
Point(62) = {-0.016690, 0.729512, 0, 1.0};
Point(63) = {-0.011684, 0.728873, 0, 1.0};
Point(64) = {-0.006609, 0.728244, 0, 1.0};
Point(65) = {-0.001489, 0.727632, 0, 1.0};
Point(66) = {0.003657, 0.727040, 0, 1.0};
Point(67) = {0.008805, 0.726472, 0, 1.0};
Point(68) = {0.013934, 0.725932, 0, 1.0};
Point(69) = {0.019025, 0.725427, 0, 1.0};
Point(70) = {0.024053, 0.724963, 0, 1.0};
Point(71) = {0.028998, 0.724548, 0, 1.0};
Point(72) = {0.033843, 0.724201, 0, 1.0};
Point(73) = {0.038569, 0.723956, 0, 1.0};
Point(74) = {0.043160, 0.723831, 0, 1.0};
Point(75) = {0.047592, 0.723800, 0, 1.0};
Point(76) = {0.051837, 0.723797, 0, 1.0};
Point(77) = {0.055870, 0.723763, 0, 1.0};
Point(78) = {0.059668, 0.723657, 0, 1.0};
Point(79) = {0.063218, 0.723489, 0, 1.0};
Point(80) = {0.066506, 0.723283, 0, 1.0};
Point(81) = {0.069518, 0.723051, 0, 1.0};
Point(82) = {0.072244, 0.722799, 0, 1.0};
Point(83) = {0.074463, 0.722546, 0, 1.0};
Point(84) = {-0.074653, -0.724053, 0, 1.0};
Point(85) = {-0.072496, -0.724795, 0, 1.0};
Point(86) = {-0.069860, -0.725758, 0, 1.0};
Point(87) = {-0.066953, -0.726826, 0, 1.0};
Point(88) = {-0.063788, -0.728001, 0, 1.0};
Point(89) = {-0.060378, -0.729283, 0, 1.0};
Point(90) = {-0.056744, -0.730693, 0, 1.0};
Point(91) = {-0.052901, -0.732229, 0, 1.0};
Point(92) = {-0.048865, -0.733880, 0, 1.0};
Point(93) = {-0.044650, -0.735628, 0, 1.0};
Point(94) = {-0.040268, -0.737411, 0, 1.0};
Point(95) = {-0.035729, -0.739141, 0, 1.0};
Point(96) = {-0.031042, -0.740737, 0, 1.0};
Point(97) = {-0.026226, -0.742180, 0, 1.0};
Point(98) = {-0.021307, -0.743500, 0, 1.0};
Point(99) = {-0.016306, -0.744719, 0, 1.0};
Point(100) = {-0.011251, -0.745846, 0, 1.0};
Point(101) = {-0.006161, -0.746873, 0, 1.0};
Point(102) = {-0.001055, -0.747781, 0, 1.0};
Point(103) = {0.004047, -0.748534, 0, 1.0};
Point(104) = {0.009130, -0.749102, 0, 1.0};
Point(105) = {0.014165, -0.749505, 0, 1.0};
Point(106) = {0.019129, -0.749776, 0, 1.0};
Point(107) = {0.023996, -0.749941, 0, 1.0};
Point(108) = {0.028746, -0.750000, 0, 1.0};
Point(109) = {0.033359, -0.749950, 0, 1.0};
Point(110) = {0.037814, -0.749807, 0, 1.0};
Point(111) = {0.042088, -0.749573, 0, 1.0};
Point(112) = {0.046165, -0.749254, 0, 1.0};
Point(113) = {0.050028, -0.748856, 0, 1.0};
Point(114) = {0.053658, -0.748383, 0, 1.0};
Point(115) = {0.057040, -0.747845, 0, 1.0};
Point(116) = {0.060157, -0.747247, 0, 1.0};
Point(117) = {0.062997, -0.746598, 0, 1.0};
Point(118) = {0.065548, -0.745902, 0, 1.0};
Point(119) = {0.067795, -0.745175, 0, 1.0};
Point(120) = {0.069730, -0.744433, 0, 1.0};
Point(121) = {0.071340, -0.743675, 0, 1.0};
Point(122) = {0.072620, -0.742930, 0, 1.0};
Point(123) = {0.073565, -0.742190, 0, 1.0};
Point(124) = {0.074165, -0.741497, 0, 1.0};
Point(125) = {0.074409, -0.740911, 0, 1.0};
Point(126) = {0.074300, -0.740420, 0, 1.0};
Point(127) = {0.073842, -0.739992, 0, 1.0};
Point(128) = {0.073046, -0.739559, 0, 1.0};
Point(129) = {0.071919, -0.739093, 0, 1.0};
Point(130) = {0.070465, -0.738611, 0, 1.0};
Point(131) = {0.068688, -0.738107, 0, 1.0};
Point(132) = {0.066599, -0.737579, 0, 1.0};
Point(133) = {0.064205, -0.737034, 0, 1.0};
Point(134) = {0.061518, -0.736471, 0, 1.0};
Point(135) = {0.058550, -0.735889, 0, 1.0};
Point(136) = {0.055311, -0.735293, 0, 1.0};
Point(137) = {0.051818, -0.734680, 0, 1.0};
Point(138) = {0.048084, -0.734055, 0, 1.0};
Point(139) = {0.044128, -0.733418, 0, 1.0};
Point(140) = {0.039964, -0.732773, 0, 1.0};
Point(141) = {0.035610, -0.732122, 0, 1.0};
Point(142) = {0.031086, -0.731467, 0, 1.0};
Point(143) = {0.026412, -0.730811, 0, 1.0};
Point(144) = {0.021606, -0.730158, 0, 1.0};
Point(145) = {0.016690, -0.729512, 0, 1.0};
Point(146) = {0.011684, -0.728873, 0, 1.0};
Point(147) = {0.006609, -0.728244, 0, 1.0};
Point(148) = {0.001489, -0.727632, 0, 1.0};
Point(149) = {-0.003657, -0.727040, 0, 1.0};
Point(150) = {-0.008805, -0.726472, 0, 1.0};
Point(151) = {-0.013934, -0.725932, 0, 1.0};
Point(152) = {-0.019025, -0.725427, 0, 1.0};
Point(153) = {-0.024053, -0.724963, 0, 1.0};
Point(154) = {-0.028998, -0.724548, 0, 1.0};
Point(155) = {-0.033843, -0.724201, 0, 1.0};
Point(156) = {-0.038569, -0.723956, 0, 1.0};
Point(157) = {-0.043160, -0.723831, 0, 1.0};
Point(158) = {-0.047592, -0.723800, 0, 1.0};
Point(159) = {-0.051837, -0.723797, 0, 1.0};
Point(160) = {-0.055870, -0.723763, 0, 1.0};
Point(161) = {-0.059668, -0.723657, 0, 1.0};
Point(162) = {-0.063218, -0.723489, 0, 1.0};
Point(163) = {-0.066506, -0.723283, 0, 1.0};
Point(164) = {-0.069518, -0.723051, 0, 1.0};
Point(165) = {-0.072244, -0.722799, 0, 1.0};
Point(166) = {-0.074463, -0.722546, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:108};
Spline(6) = {108:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074789, 0.727193, 0, 1.0};
Point(2) = {0.074369, 0.727316, 0, 1.0};
Point(3) = {0.070398, 0.728747, 0, 1.0};
Point(4) = {0.065755, 0.730316, 0, 1.0};
Point(5) = {0.060443, 0.732003, 0, 1.0};
Point(6) = {0.054530, 0.733823, 0, 1.0};
Point(7) = {0.048116, 0.735760, 0, 1.0};
Point(8) = {0.041307, 0.737777, 0, 1.0};
Point(9) = {0.034204, 0.739824, 0, 1.0};
Point(10) = {0.026907, 0.741839, 0, 1.0};
Point(11) = {0.019513, 0.743751, 0, 1.0};
Point(12) = {0.012108, 0.745456, 0, 1.0};
Point(13) = {0.004694, 0.746842, 0, 1.0};
Point(14) = {-0.002787, 0.747899, 0, 1.0};
Point(15) = {-0.010301, 0.748705, 0, 1.0};
Point(16) = {-0.017758, 0.749304, 0, 1.0};
Point(17) = {-0.025064, 0.749712, 0, 1.0};
Point(18) = {-0.032131, 0.749941, 0, 1.0};
Point(19) = {-0.038871, 0.750000, 0, 1.0};
Point(20) = {-0.045197, 0.749899, 0, 1.0};
Point(21) = {-0.051023, 0.749641, 0, 1.0};
Point(22) = {-0.056264, 0.749227, 0, 1.0};
Point(23) = {-0.060826, 0.748626, 0, 1.0};
Point(24) = {-0.064686, 0.747761, 0, 1.0};
Point(25) = {-0.067908, 0.746625, 0, 1.0};
Point(26) = {-0.070525, 0.745299, 0, 1.0};
Point(27) = {-0.072518, 0.743868, 0, 1.0};
Point(28) = {-0.073873, 0.742412, 0, 1.0};
Point(29) = {-0.074552, 0.741047, 0, 1.0};
Point(30) = {-0.074606, 0.740770, 0, 1.0};
Point(31) = {-0.074624, 0.740477, 0, 1.0};
Point(32) = {-0.074579, 0.740217, 0, 1.0};
Point(33) = {-0.074450, 0.739972, 0, 1.0};
Point(34) = {-0.074240, 0.739719, 0, 1.0};
Point(35) = {-0.073189, 0.738873, 0, 1.0};
Point(36) = {-0.071034, 0.737708, 0, 1.0};
Point(37) = {-0.068034, 0.736475, 0, 1.0};
Point(38) = {-0.064247, 0.735184, 0, 1.0};
Point(39) = {-0.059731, 0.733854, 0, 1.0};
Point(40) = {-0.054558, 0.732499, 0, 1.0};
Point(41) = {-0.048795, 0.731143, 0, 1.0};
Point(42) = {-0.042524, 0.729810, 0, 1.0};
Point(43) = {-0.035826, 0.728526, 0, 1.0};
Point(44) = {-0.028784, 0.727324, 0, 1.0};
Point(45) = {-0.021487, 0.726239, 0, 1.0};
Point(46) = {-0.014022, 0.725315, 0, 1.0};
Point(47) = {-0.006479, 0.724603, 0, 1.0};
Point(48) = {0.001054, 0.724210, 0, 1.0};
Point(49) = {0.008647, 0.724285, 0, 1.0};
Point(50) = {0.016491, 0.724752, 0, 1.0};
Point(51) = {0.024573, 0.725347, 0, 1.0};
Point(52) = {0.032719, 0.725906, 0, 1.0};
Point(53) = {0.040752, 0.726347, 0, 1.0};
Point(54) = {0.048496, 0.726616, 0, 1.0};
Point(55) = {0.055779, 0.726696, 0, 1.0};
Point(56) = {0.062440, 0.726580, 0, 1.0};
Point(57) = {0.068325, 0.726288, 0, 1.0};
Point(58) = {0.073285, 0.725870, 0, 1.0};
Point(59) = {0.074638, 0.725724, 0, 1.0};
Point(60) = {-0.074789, -0.727193, 0, 1.0};
Point(61) = {-0.074369, -0.727316, 0, 1.0};
Point(62) = {-0.070398, -0.728747, 0, 1.0};
Point(63) = {-0.065755, -0.730316, 0, 1.0};
Point(64) = {-0.060443, -0.732003, 0, 1.0};
Point(65) = {-0.054530, -0.733823, 0, 1.0};
Point(66) = {-0.048116, -0.735760, 0, 1.0};
Point(67) = {-0.041307, -0.737777, 0, 1.0};
Point(68) = {-0.034204, -0.739824, 0, 1.0};
Point(69) = {-0.026907, -0.741839, 0, 1.0};
Point(70) = {-0.019513, -0.743751, 0, 1.0};
Point(71) = {-0.012108, -0.745456, 0, 1.0};
Point(72) = {-0.004694, -0.746842, 0, 1.0};
Point(73) = {0.002787, -0.747899, 0, 1.0};
Point(74) = {0.010301, -0.748705, 0, 1.0};
Point(75) = {0.017758, -0.749304, 0, 1.0};
Point(76) = {0.025064, -0.749712, 0, 1.0};
Point(77) = {0.032131, -0.749941, 0, 1.0};
Point(78) = {0.038871, -0.750000, 0, 1.0};
Point(79) = {0.045197, -0.749899, 0, 1.0};
Point(80) = {0.051023, -0.749641, 0, 1.0};
Point(81) = {0.056264, -0.749227, 0, 1.0};
Point(82) = {0.060826, -0.748626, 0, 1.0};
Point(83) = {0.064686, -0.747761, 0, 1.0};
Point(84) = {0.067908, -0.746625, 0, 1.0};
Point(85) = {0.070525, -0.745299, 0, 1.0};
Point(86) = {0.072518, -0.743868, 0, 1.0};
Point(87) = {0.073873, -0.742412, 0, 1.0};
Point(88) = {0.074552, -0.741047, 0, 1.0};
Point(89) = {0.074606, -0.740770, 0, 1.0};
Point(90) = {0.074624, -0.740477, 0, 1.0};
Point(91) = {0.074579, -0.740217, 0, 1.0};
Point(92) = {0.074450, -0.739972, 0, 1.0};
Point(93) = {0.074240, -0.739719, 0, 1.0};
Point(94) = {0.073189, -0.738873, 0, 1.0};
Point(95) = {0.071034, -0.737708, 0, 1.0};
Point(96) = {0.068034, -0.736475, 0, 1.0};
Point(97) = {0.064247, -0.735184, 0, 1.0};
Point(98) = {0.059731, -0.733854, 0, 1.0};
Point(99) = {0.054558, -0.732499, 0, 1.0};
Point(100) = {0.048795, -0.731143, 0, 1.0};
Point(101) = {0.042524, -0.729810, 0, 1.0};
Point(102) = {0.035826, -0.728526, 0, 1.0};
Point(103) = {0.028784, -0.727324, 0, 1.0};
Point(104) = {0.021487, -0.726239, 0, 1.0};
Point(105) = {0.014022, -0.725315, 0, 1.0};
Point(106) = {0.006479, -0.724603, 0, 1.0};
Point(107) = {-0.001054, -0.724210, 0, 1.0};
Point(108) = {-0.008647, -0.724285, 0, 1.0};
Point(109) = {-0.016491, -0.724752, 0, 1.0};
Point(110) = {-0.024573, -0.725347, 0, 1.0};
Point(111) = {-0.032719, -0.725906, 0, 1.0};
Point(112) = {-0.040752, -0.726347, 0, 1.0};
Point(113) = {-0.048496, -0.726616, 0, 1.0};
Point(114) = {-0.055779, -0.726696, 0, 1.0};
Point(115) = {-0.062440, -0.726580, 0, 1.0};
Point(116) = {-0.068325, -0.726288, 0, 1.0};
Point(117) = {-0.073285, -0.725870, 0, 1.0};
Point(118) = {-0.074638, -0.725724, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:77};
Spline(6) = {77:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074976, 0.743999, 0, 1.0};
Point(2) = {0.074734, 0.744054, 0, 1.0};
Point(3) = {0.074011, 0.744217, 0, 1.0};
Point(4) = {0.072813, 0.744487, 0, 1.0};
Point(5) = {0.071152, 0.744861, 0, 1.0};
Point(6) = {0.069044, 0.745331, 0, 1.0};
Point(7) = {0.066509, 0.745888, 0, 1.0};
Point(8) = {0.063573, 0.746509, 0, 1.0};
Point(9) = {0.060266, 0.747087, 0, 1.0};
Point(10) = {0.056619, 0.747610, 0, 1.0};
Point(11) = {0.052666, 0.748127, 0, 1.0};
Point(12) = {0.048447, 0.748609, 0, 1.0};
Point(13) = {0.044002, 0.749037, 0, 1.0};
Point(14) = {0.039373, 0.749398, 0, 1.0};
Point(15) = {0.034607, 0.749682, 0, 1.0};
Point(16) = {0.029748, 0.749880, 0, 1.0};
Point(17) = {0.024844, 0.749987, 0, 1.0};
Point(18) = {0.019942, 0.750000, 0, 1.0};
Point(19) = {0.015089, 0.749919, 0, 1.0};
Point(20) = {0.010332, 0.749749, 0, 1.0};
Point(21) = {0.005716, 0.749509, 0, 1.0};
Point(22) = {0.001285, 0.749215, 0, 1.0};
Point(23) = {-0.002918, 0.748876, 0, 1.0};
Point(24) = {-0.006852, 0.748501, 0, 1.0};
Point(25) = {-0.010480, 0.748092, 0, 1.0};
Point(26) = {-0.013766, 0.747587, 0, 1.0};
Point(27) = {-0.016677, 0.746971, 0, 1.0};
Point(28) = {-0.019186, 0.746314, 0, 1.0};
Point(29) = {-0.021270, 0.745601, 0, 1.0};
Point(30) = {-0.022906, 0.744750, 0, 1.0};
Point(31) = {-0.024081, 0.743879, 0, 1.0};
Point(32) = {-0.024783, 0.742991, 0, 1.0};
Point(33) = {-0.025000, 0.741804, 0, 1.0};
Point(34) = {-0.024739, 0.740796, 0, 1.0};
Point(35) = {-0.024003, 0.740047, 0, 1.0};
Point(36) = {-0.022801, 0.739588, 0, 1.0};
Point(37) = {-0.021144, 0.739397, 0, 1.0};
Point(38) = {-0.019045, 0.739339, 0, 1.0};
Point(39) = {-0.016522, 0.739383, 0, 1.0};
Point(40) = {-0.013600, 0.739456, 0, 1.0};
Point(41) = {-0.010306, 0.739523, 0, 1.0};
Point(42) = {-0.006670, 0.739547, 0, 1.0};
Point(43) = {-0.002729, 0.739598, 0, 1.0};
Point(44) = {0.001479, 0.739653, 0, 1.0};
Point(45) = {0.005915, 0.739725, 0, 1.0};
Point(46) = {0.010534, 0.739812, 0, 1.0};
Point(47) = {0.015292, 0.739925, 0, 1.0};
Point(48) = {0.020144, 0.740080, 0, 1.0};
Point(49) = {0.025041, 0.740280, 0, 1.0};
Point(50) = {0.029939, 0.740521, 0, 1.0};
Point(51) = {0.034787, 0.740800, 0, 1.0};
Point(52) = {0.039542, 0.741106, 0, 1.0};
Point(53) = {0.044157, 0.741408, 0, 1.0};
Point(54) = {0.048587, 0.741705, 0, 1.0};
Point(55) = {0.052791, 0.741993, 0, 1.0};
Point(56) = {0.056727, 0.742274, 0, 1.0};
Point(57) = {0.060358, 0.742543, 0, 1.0};
Point(58) = {0.063649, 0.742793, 0, 1.0};
Point(59) = {0.066568, 0.743016, 0, 1.0};
Point(60) = {0.069087, 0.743210, 0, 1.0};
Point(61) = {0.071182, 0.743374, 0, 1.0};
Point(62) = {0.072833, 0.743504, 0, 1.0};
Point(63) = {0.074023, 0.743598, 0, 1.0};
Point(64) = {0.074742, 0.743655, 0, 1.0};
Point(65) = {0.074983, 0.743675, 0, 1.0};
Point(66) = {-0.074976, -0.743999, 0, 1.0};
Point(67) = {-0.074734, -0.744054, 0, 1.0};
Point(68) = {-0.074011, -0.744217, 0, 1.0};
Point(69) = {-0.072813, -0.744487, 0, 1.0};
Point(70) = {-0.071152, -0.744861, 0, 1.0};
Point(71) = {-0.069044, -0.745331, 0, 1.0};
Point(72) = {-0.066509, -0.745888, 0, 1.0};
Point(73) = {-0.063573, -0.746509, 0, 1.0};
Point(74) = {-0.060266, -0.747087, 0, 1.0};
Point(75) = {-0.056619, -0.747610, 0, 1.0};
Point(76) = {-0.052666, -0.748127, 0, 1.0};
Point(77) = {-0.048447, -0.748609, 0, 1.0};
Point(78) = {-0.044002, -0.749037, 0, 1.0};
Point(79) = {-0.039373, -0.749398, 0, 1.0};
Point(80) = {-0.034607, -0.749682, 0, 1.0};
Point(81) = {-0.029748, -0.749880, 0, 1.0};
Point(82) = {-0.024844, -0.749987, 0, 1.0};
Point(83) = {-0.019942, -0.750000, 0, 1.0};
Point(84) = {-0.015089, -0.749919, 0, 1.0};
Point(85) = {-0.010332, -0.749749, 0, 1.0};
Point(86) = {-0.005716, -0.749509, 0, 1.0};
Point(87) = {-0.001285, -0.749215, 0, 1.0};
Point(88) = {0.002918, -0.748876, 0, 1.0};
Point(89) = {0.006852, -0.748501, 0, 1.0};
Point(90) = {0.010480, -0.748092, 0, 1.0};
Point(91) = {0.013766, -0.747587, 0, 1.0};
Point(92) = {0.016677, -0.746971, 0, 1.0};
Point(93) = {0.019186, -0.746314, 0, 1.0};
Point(94) = {0.021270, -0.745601, 0, 1.0};
Point(95) = {0.022906, -0.744750, 0, 1.0};
Point(96) = {0.024081, -0.743879, 0, 1.0};
Point(97) = {0.024783, -0.742991, 0, 1.0};
Point(98) = {0.025000, -0.741804, 0, 1.0};
Point(99) = {0.024739, -0.740796, 0, 1.0};
Point(100) = {0.024003, -0.740047, 0, 1.0};
Point(101) = {0.022801, -0.739588, 0, 1.0};
Point(102) = {0.021144, -0.739397, 0, 1.0};
Point(103) = {0.019045, -0.739339, 0, 1.0};
Point(104) = {0.016522, -0.739383, 0, 1.0};
Point(105) = {0.013600, -0.739456, 0, 1.0};
Point(106) = {0.010306, -0.739523, 0, 1.0};
Point(107) = {0.006670, -0.739547, 0, 1.0};
Point(108) = {0.002729, -0.739598, 0, 1.0};
Point(109) = {-0.001479, -0.739653, 0, 1.0};
Point(110) = {-0.005915, -0.739725, 0, 1.0};
Point(111) = {-0.010534, -0.739812, 0, 1.0};
Point(112) = {-0.015292, -0.739925, 0, 1.0};
Point(113) = {-0.020144, -0.740080, 0, 1.0};
Point(114) = {-0.025041, -0.740280, 0, 1.0};
Point(115) = {-0.029939, -0.740521, 0, 1.0};
Point(116) = {-0.034787, -0.740800, 0, 1.0};
Point(117) = {-0.039542, -0.741106, 0, 1.0};
Point(118) = {-0.044157, -0.741408, 0, 1.0};
Point(119) = {-0.048587, -0.741705, 0, 1.0};
Point(120) = {-0.052791, -0.741993, 0, 1.0};
Point(121) = {-0.056727, -0.742274, 0, 1.0};
Point(122) = {-0.060358, -0.742543, 0, 1.0};
Point(123) = {-0.063649, -0.742793, 0, 1.0};
Point(124) = {-0.066568, -0.743016, 0, 1.0};
Point(125) = {-0.069087, -0.743210, 0, 1.0};
Point(126) = {-0.071182, -0.743374, 0, 1.0};
Point(127) = {-0.072833, -0.743504, 0, 1.0};
Point(128) = {-0.074023, -0.743598, 0, 1.0};
Point(129) = {-0.074742, -0.743655, 0, 1.0};
Point(130) = {-0.074983, -0.743675, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.149952, 0.737999, 0, 1.0};
Point(2) = {0.149468, 0.738108, 0, 1.0};
Point(3) = {0.148021, 0.738435, 0, 1.0};
Point(4) = {0.145626, 0.738975, 0, 1.0};
Point(5) = {0.142304, 0.739721, 0, 1.0};
Point(6) = {0.138088, 0.740661, 0, 1.0};
Point(7) = {0.133019, 0.741777, 0, 1.0};
Point(8) = {0.127147, 0.743017, 0, 1.0};
Point(9) = {0.120531, 0.744174, 0, 1.0};
Point(10) = {0.113238, 0.745220, 0, 1.0};
Point(11) = {0.105332, 0.746254, 0, 1.0};
Point(12) = {0.096894, 0.747218, 0, 1.0};
Point(13) = {0.088003, 0.748073, 0, 1.0};
Point(14) = {0.078747, 0.748796, 0, 1.0};
Point(15) = {0.069214, 0.749364, 0, 1.0};
Point(16) = {0.059497, 0.749760, 0, 1.0};
Point(17) = {0.049688, 0.749974, 0, 1.0};
Point(18) = {0.039884, 0.750000, 0, 1.0};
Point(19) = {0.030178, 0.749838, 0, 1.0};
Point(20) = {0.020663, 0.749498, 0, 1.0};
Point(21) = {0.011431, 0.749018, 0, 1.0};
Point(22) = {0.002570, 0.748430, 0, 1.0};
Point(23) = {-0.005835, 0.747752, 0, 1.0};
Point(24) = {-0.013704, 0.747002, 0, 1.0};
Point(25) = {-0.020960, 0.746184, 0, 1.0};
Point(26) = {-0.027531, 0.745174, 0, 1.0};
Point(27) = {-0.033353, 0.743942, 0, 1.0};
Point(28) = {-0.038373, 0.742628, 0, 1.0};
Point(29) = {-0.042541, 0.741202, 0, 1.0};
Point(30) = {-0.045813, 0.739499, 0, 1.0};
Point(31) = {-0.048163, 0.737758, 0, 1.0};
Point(32) = {-0.049567, 0.735982, 0, 1.0};
Point(33) = {-0.050000, 0.733609, 0, 1.0};
Point(34) = {-0.049477, 0.731592, 0, 1.0};
Point(35) = {-0.048007, 0.730093, 0, 1.0};
Point(36) = {-0.045603, 0.729176, 0, 1.0};
Point(37) = {-0.042289, 0.728795, 0, 1.0};
Point(38) = {-0.038089, 0.728677, 0, 1.0};
Point(39) = {-0.033045, 0.728767, 0, 1.0};
Point(40) = {-0.027201, 0.728911, 0, 1.0};
Point(41) = {-0.020612, 0.729046, 0, 1.0};
Point(42) = {-0.013340, 0.729094, 0, 1.0};
Point(43) = {-0.005458, 0.729197, 0, 1.0};
Point(44) = {0.002959, 0.729306, 0, 1.0};
Point(45) = {0.011829, 0.729449, 0, 1.0};
Point(46) = {0.021067, 0.729624, 0, 1.0};
Point(47) = {0.030584, 0.729849, 0, 1.0};
Point(48) = {0.040287, 0.730160, 0, 1.0};
Point(49) = {0.050083, 0.730561, 0, 1.0};
Point(50) = {0.059877, 0.731042, 0, 1.0};
Point(51) = {0.069575, 0.731601, 0, 1.0};
Point(52) = {0.079084, 0.732213, 0, 1.0};
Point(53) = {0.088313, 0.732816, 0, 1.0};
Point(54) = {0.097174, 0.733410, 0, 1.0};
Point(55) = {0.105582, 0.733987, 0, 1.0};
Point(56) = {0.113454, 0.734549, 0, 1.0};
Point(57) = {0.120716, 0.735085, 0, 1.0};
Point(58) = {0.127298, 0.735586, 0, 1.0};
Point(59) = {0.133136, 0.736032, 0, 1.0};
Point(60) = {0.138174, 0.736420, 0, 1.0};
Point(61) = {0.142364, 0.736747, 0, 1.0};
Point(62) = {0.145666, 0.737009, 0, 1.0};
Point(63) = {0.148047, 0.737197, 0, 1.0};
Point(64) = {0.149485, 0.737311, 0, 1.0};
Point(65) = {0.149965, 0.737349, 0, 1.0};
Point(66) = {-0.149952, -0.737999, 0, 1.0};
Point(67) = {-0.149468, -0.738108, 0, 1.0};
Point(68) = {-0.148021, -0.738435, 0, 1.0};
Point(69) = {-0.145626, -0.738975, 0, 1.0};
Point(70) = {-0.142304, -0.739721, 0, 1.0};
Point(71) = {-0.138088, -0.740661, 0, 1.0};
Point(72) = {-0.133019, -0.741777, 0, 1.0};
Point(73) = {-0.127147, -0.743017, 0, 1.0};
Point(74) = {-0.120531, -0.744174, 0, 1.0};
Point(75) = {-0.113238, -0.745220, 0, 1.0};
Point(76) = {-0.105332, -0.746254, 0, 1.0};
Point(77) = {-0.096894, -0.747218, 0, 1.0};
Point(78) = {-0.088003, -0.748073, 0, 1.0};
Point(79) = {-0.078747, -0.748796, 0, 1.0};
Point(80) = {-0.069214, -0.749364, 0, 1.0};
Point(81) = {-0.059497, -0.749760, 0, 1.0};
Point(82) = {-0.049688, -0.749974, 0, 1.0};
Point(83) = {-0.039884, -0.750000, 0, 1.0};
Point(84) = {-0.030178, -0.749838, 0, 1.0};
Point(85) = {-0.020663, -0.749498, 0, 1.0};
Point(86) = {-0.011431, -0.749018, 0, 1.0};
Point(87) = {-0.002570, -0.748430, 0, 1.0};
Point(88) = {0.005835, -0.747752, 0, 1.0};
Point(89) = {0.013704, -0.747002, 0, 1.0};
Point(90) = {0.020960, -0.746184, 0, 1.0};
Point(91) = {0.027531, -0.745174, 0, 1.0};
Point(92) = {0.033353, -0.743942, 0, 1.0};
Point(93) = {0.038373, -0.742628, 0, 1.0};
Point(94) = {0.042541, -0.741202, 0, 1.0};
Point(95) = {0.045813, -0.739499, 0, 1.0};
Point(96) = {0.048163, -0.737758, 0, 1.0};
Point(97) = {0.049567, -0.735982, 0, 1.0};
Point(98) = {0.050000, -0.733609, 0, 1.0};
Point(99) = {0.049477, -0.731592, 0, 1.0};
Point(100) = {0.048007, -0.730093, 0, 1.0};
Point(101) = {0.045603, -0.729176, 0, 1.0};
Point(102) = {0.042289, -0.728795, 0, 1.0};
Point(103) = {0.038089, -0.728677, 0, 1.0};
Point(104) = {0.033045, -0.728767, 0, 1.0};
Point(105) = {0.027201, -0.728911, 0, 1.0};
Point(106) = {0.020612, -0.729046, 0, 1.0};
Point(107) = {0.013340, -0.729094, 0, 1.0};
Point(108) = {0.005458, -0.729197, 0, 1.0};
Point(109) = {-0.002959, -0.729306, 0, 1.0};
Point(110) = {-0.011829, -0.729449, 0, 1.0};
Point(111) = {-0.021067, -0.729624, 0, 1.0};
Point(112) = {-0.030584, -0.729849, 0, 1.0};
Point(113) = {-0.040287, -0.730160, 0, 1.0};
Point(114) = {-0.050083, -0.730561, 0, 1.0};
Point(115) = {-0.059877, -0.731042, 0, 1.0};
Point(116) = {-0.069575, -0.731601, 0, 1.0};
Point(117) = {-0.079084, -0.732213, 0, 1.0};
Point(118) = {-0.088313, -0.732816, 0, 1.0};
Point(119) = {-0.097174, -0.733410, 0, 1.0};
Point(120) = {-0.105582, -0.733987, 0, 1.0};
Point(121) = {-0.113454, -0.734549, 0, 1.0};
Point(122) = {-0.120716, -0.735085, 0, 1.0};
Point(123) = {-0.127298, -0.735586, 0, 1.0};
Point(124) = {-0.133136, -0.736032, 0, 1.0};
Point(125) = {-0.138174, -0.736420, 0, 1.0};
Point(126) = {-0.142364, -0.736747, 0, 1.0};
Point(127) = {-0.145666, -0.737009, 0, 1.0};
Point(128) = {-0.148047, -0.737197, 0, 1.0};
Point(129) = {-0.149485, -0.737311, 0, 1.0};
Point(130) = {-0.149965, -0.737349, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:44};
Spline(3) = {44:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:87};
Spline(6) = {87:109};
Spline(7) = {109:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
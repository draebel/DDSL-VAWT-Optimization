SetFactory("OpenCASCADE");

Point(1) = {0.074047, 0.740851, 0, 1.0};
Point(2) = {0.073147, 0.741003, 0, 1.0};
Point(3) = {0.071302, 0.741417, 0, 1.0};
Point(4) = {0.069143, 0.741892, 0, 1.0};
Point(5) = {0.066678, 0.742415, 0, 1.0};
Point(6) = {0.063922, 0.742972, 0, 1.0};
Point(7) = {0.060887, 0.743556, 0, 1.0};
Point(8) = {0.057586, 0.744154, 0, 1.0};
Point(9) = {0.054035, 0.744761, 0, 1.0};
Point(10) = {0.050248, 0.745373, 0, 1.0};
Point(11) = {0.046243, 0.745991, 0, 1.0};
Point(12) = {0.042036, 0.746612, 0, 1.0};
Point(13) = {0.037645, 0.747224, 0, 1.0};
Point(14) = {0.033091, 0.747813, 0, 1.0};
Point(15) = {0.028397, 0.748363, 0, 1.0};
Point(16) = {0.023585, 0.748858, 0, 1.0};
Point(17) = {0.018676, 0.749283, 0, 1.0};
Point(18) = {0.013694, 0.749623, 0, 1.0};
Point(19) = {0.008659, 0.749865, 0, 1.0};
Point(20) = {0.003599, 0.749998, 0, 1.0};
Point(21) = {-0.001463, 0.750000, 0, 1.0};
Point(22) = {-0.006506, 0.749861, 0, 1.0};
Point(23) = {-0.011505, 0.749576, 0, 1.0};
Point(24) = {-0.016441, 0.749143, 0, 1.0};
Point(25) = {-0.021288, 0.748560, 0, 1.0};
Point(26) = {-0.026028, 0.747823, 0, 1.0};
Point(27) = {-0.030638, 0.746928, 0, 1.0};
Point(28) = {-0.035098, 0.745876, 0, 1.0};
Point(29) = {-0.039390, 0.744670, 0, 1.0};
Point(30) = {-0.043495, 0.743315, 0, 1.0};
Point(31) = {-0.047394, 0.741821, 0, 1.0};
Point(32) = {-0.051074, 0.740206, 0, 1.0};
Point(33) = {-0.054520, 0.738487, 0, 1.0};
Point(34) = {-0.057722, 0.736692, 0, 1.0};
Point(35) = {-0.060666, 0.734842, 0, 1.0};
Point(36) = {-0.063341, 0.732958, 0, 1.0};
Point(37) = {-0.065740, 0.731065, 0, 1.0};
Point(38) = {-0.067855, 0.729185, 0, 1.0};
Point(39) = {-0.069677, 0.727342, 0, 1.0};
Point(40) = {-0.071200, 0.725547, 0, 1.0};
Point(41) = {-0.072415, 0.723805, 0, 1.0};
Point(42) = {-0.073324, 0.722148, 0, 1.0};
Point(43) = {-0.073927, 0.720619, 0, 1.0};
Point(44) = {-0.074224, 0.719252, 0, 1.0};
Point(45) = {-0.074216, 0.718059, 0, 1.0};
Point(46) = {-0.073893, 0.716978, 0, 1.0};
Point(47) = {-0.073244, 0.715937, 0, 1.0};
Point(48) = {-0.072269, 0.714907, 0, 1.0};
Point(49) = {-0.070974, 0.713910, 0, 1.0};
Point(50) = {-0.069375, 0.713019, 0, 1.0};
Point(51) = {-0.067480, 0.712269, 0, 1.0};
Point(52) = {-0.065302, 0.711662, 0, 1.0};
Point(53) = {-0.062844, 0.711191, 0, 1.0};
Point(54) = {-0.060119, 0.710848, 0, 1.0};
Point(55) = {-0.057139, 0.710632, 0, 1.0};
Point(56) = {-0.053911, 0.710537, 0, 1.0};
Point(57) = {-0.050450, 0.710554, 0, 1.0};
Point(58) = {-0.046770, 0.710673, 0, 1.0};
Point(59) = {-0.042888, 0.710895, 0, 1.0};
Point(60) = {-0.038818, 0.711219, 0, 1.0};
Point(61) = {-0.034578, 0.711642, 0, 1.0};
Point(62) = {-0.030186, 0.712163, 0, 1.0};
Point(63) = {-0.025662, 0.712782, 0, 1.0};
Point(64) = {-0.021026, 0.713494, 0, 1.0};
Point(65) = {-0.016296, 0.714298, 0, 1.0};
Point(66) = {-0.011492, 0.715185, 0, 1.0};
Point(67) = {-0.006635, 0.716156, 0, 1.0};
Point(68) = {-0.001748, 0.717209, 0, 1.0};
Point(69) = {0.003149, 0.718347, 0, 1.0};
Point(70) = {0.008034, 0.719562, 0, 1.0};
Point(71) = {0.012889, 0.720842, 0, 1.0};
Point(72) = {0.017693, 0.722175, 0, 1.0};
Point(73) = {0.022426, 0.723545, 0, 1.0};
Point(74) = {0.027071, 0.724934, 0, 1.0};
Point(75) = {0.031609, 0.726321, 0, 1.0};
Point(76) = {0.036023, 0.727689, 0, 1.0};
Point(77) = {0.040297, 0.729019, 0, 1.0};
Point(78) = {0.044413, 0.730302, 0, 1.0};
Point(79) = {0.048352, 0.731521, 0, 1.0};
Point(80) = {0.052100, 0.732668, 0, 1.0};
Point(81) = {0.055641, 0.733734, 0, 1.0};
Point(82) = {0.058962, 0.734714, 0, 1.0};
Point(83) = {0.062043, 0.735622, 0, 1.0};
Point(84) = {0.064870, 0.736465, 0, 1.0};
Point(85) = {0.067431, 0.737246, 0, 1.0};
Point(86) = {0.069717, 0.737952, 0, 1.0};
Point(87) = {0.071717, 0.738570, 0, 1.0};
Point(88) = {0.073426, 0.739092, 0, 1.0};
Point(89) = {0.074266, 0.739347, 0, 1.0};
Point(90) = {-0.074047, -0.740851, 0, 1.0};
Point(91) = {-0.073147, -0.741003, 0, 1.0};
Point(92) = {-0.071302, -0.741417, 0, 1.0};
Point(93) = {-0.069143, -0.741892, 0, 1.0};
Point(94) = {-0.066678, -0.742415, 0, 1.0};
Point(95) = {-0.063922, -0.742972, 0, 1.0};
Point(96) = {-0.060887, -0.743556, 0, 1.0};
Point(97) = {-0.057586, -0.744154, 0, 1.0};
Point(98) = {-0.054035, -0.744761, 0, 1.0};
Point(99) = {-0.050248, -0.745373, 0, 1.0};
Point(100) = {-0.046243, -0.745991, 0, 1.0};
Point(101) = {-0.042036, -0.746612, 0, 1.0};
Point(102) = {-0.037645, -0.747224, 0, 1.0};
Point(103) = {-0.033091, -0.747813, 0, 1.0};
Point(104) = {-0.028397, -0.748363, 0, 1.0};
Point(105) = {-0.023585, -0.748858, 0, 1.0};
Point(106) = {-0.018676, -0.749283, 0, 1.0};
Point(107) = {-0.013694, -0.749623, 0, 1.0};
Point(108) = {-0.008659, -0.749865, 0, 1.0};
Point(109) = {-0.003599, -0.749998, 0, 1.0};
Point(110) = {0.001463, -0.750000, 0, 1.0};
Point(111) = {0.006506, -0.749861, 0, 1.0};
Point(112) = {0.011505, -0.749576, 0, 1.0};
Point(113) = {0.016441, -0.749143, 0, 1.0};
Point(114) = {0.021288, -0.748560, 0, 1.0};
Point(115) = {0.026028, -0.747823, 0, 1.0};
Point(116) = {0.030638, -0.746928, 0, 1.0};
Point(117) = {0.035098, -0.745876, 0, 1.0};
Point(118) = {0.039390, -0.744670, 0, 1.0};
Point(119) = {0.043495, -0.743315, 0, 1.0};
Point(120) = {0.047394, -0.741821, 0, 1.0};
Point(121) = {0.051074, -0.740206, 0, 1.0};
Point(122) = {0.054520, -0.738487, 0, 1.0};
Point(123) = {0.057722, -0.736692, 0, 1.0};
Point(124) = {0.060666, -0.734842, 0, 1.0};
Point(125) = {0.063341, -0.732958, 0, 1.0};
Point(126) = {0.065740, -0.731065, 0, 1.0};
Point(127) = {0.067855, -0.729185, 0, 1.0};
Point(128) = {0.069677, -0.727342, 0, 1.0};
Point(129) = {0.071200, -0.725547, 0, 1.0};
Point(130) = {0.072415, -0.723805, 0, 1.0};
Point(131) = {0.073324, -0.722148, 0, 1.0};
Point(132) = {0.073927, -0.720619, 0, 1.0};
Point(133) = {0.074224, -0.719252, 0, 1.0};
Point(134) = {0.074216, -0.718059, 0, 1.0};
Point(135) = {0.073893, -0.716978, 0, 1.0};
Point(136) = {0.073244, -0.715937, 0, 1.0};
Point(137) = {0.072269, -0.714907, 0, 1.0};
Point(138) = {0.070974, -0.713910, 0, 1.0};
Point(139) = {0.069375, -0.713019, 0, 1.0};
Point(140) = {0.067480, -0.712269, 0, 1.0};
Point(141) = {0.065302, -0.711662, 0, 1.0};
Point(142) = {0.062844, -0.711191, 0, 1.0};
Point(143) = {0.060119, -0.710848, 0, 1.0};
Point(144) = {0.057139, -0.710632, 0, 1.0};
Point(145) = {0.053911, -0.710537, 0, 1.0};
Point(146) = {0.050450, -0.710554, 0, 1.0};
Point(147) = {0.046770, -0.710673, 0, 1.0};
Point(148) = {0.042888, -0.710895, 0, 1.0};
Point(149) = {0.038818, -0.711219, 0, 1.0};
Point(150) = {0.034578, -0.711642, 0, 1.0};
Point(151) = {0.030186, -0.712163, 0, 1.0};
Point(152) = {0.025662, -0.712782, 0, 1.0};
Point(153) = {0.021026, -0.713494, 0, 1.0};
Point(154) = {0.016296, -0.714298, 0, 1.0};
Point(155) = {0.011492, -0.715185, 0, 1.0};
Point(156) = {0.006635, -0.716156, 0, 1.0};
Point(157) = {0.001748, -0.717209, 0, 1.0};
Point(158) = {-0.003149, -0.718347, 0, 1.0};
Point(159) = {-0.008034, -0.719562, 0, 1.0};
Point(160) = {-0.012889, -0.720842, 0, 1.0};
Point(161) = {-0.017693, -0.722175, 0, 1.0};
Point(162) = {-0.022426, -0.723545, 0, 1.0};
Point(163) = {-0.027071, -0.724934, 0, 1.0};
Point(164) = {-0.031609, -0.726321, 0, 1.0};
Point(165) = {-0.036023, -0.727689, 0, 1.0};
Point(166) = {-0.040297, -0.729019, 0, 1.0};
Point(167) = {-0.044413, -0.730302, 0, 1.0};
Point(168) = {-0.048352, -0.731521, 0, 1.0};
Point(169) = {-0.052100, -0.732668, 0, 1.0};
Point(170) = {-0.055641, -0.733734, 0, 1.0};
Point(171) = {-0.058962, -0.734714, 0, 1.0};
Point(172) = {-0.062043, -0.735622, 0, 1.0};
Point(173) = {-0.064870, -0.736465, 0, 1.0};
Point(174) = {-0.067431, -0.737246, 0, 1.0};
Point(175) = {-0.069717, -0.737952, 0, 1.0};
Point(176) = {-0.071717, -0.738570, 0, 1.0};
Point(177) = {-0.073426, -0.739092, 0, 1.0};
Point(178) = {-0.074266, -0.739347, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:61};
Spline(3) = {61:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:118};
Spline(6) = {118:150};
Spline(7) = {150:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 35 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074947, 0.728397, 0, 1.0};
Point(2) = {0.073083, 0.728831, 0, 1.0};
Point(3) = {0.068896, 0.729840, 0, 1.0};
Point(4) = {0.063911, 0.731038, 0, 1.0};
Point(5) = {0.058212, 0.732421, 0, 1.0};
Point(6) = {0.051899, 0.733979, 0, 1.0};
Point(7) = {0.045080, 0.735687, 0, 1.0};
Point(8) = {0.037865, 0.737516, 0, 1.0};
Point(9) = {0.030367, 0.739417, 0, 1.0};
Point(10) = {0.022696, 0.741342, 0, 1.0};
Point(11) = {0.014956, 0.743232, 0, 1.0};
Point(12) = {0.007243, 0.745021, 0, 1.0};
Point(13) = {-0.000353, 0.746646, 0, 1.0};
Point(14) = {-0.007750, 0.748036, 0, 1.0};
Point(15) = {-0.014881, 0.749103, 0, 1.0};
Point(16) = {-0.021753, 0.749756, 0, 1.0};
Point(17) = {-0.028400, 0.750000, 0, 1.0};
Point(18) = {-0.034814, 0.749886, 0, 1.0};
Point(19) = {-0.040945, 0.749467, 0, 1.0};
Point(20) = {-0.046726, 0.748784, 0, 1.0};
Point(21) = {-0.052095, 0.747864, 0, 1.0};
Point(22) = {-0.056999, 0.746738, 0, 1.0};
Point(23) = {-0.061388, 0.745433, 0, 1.0};
Point(24) = {-0.065220, 0.743984, 0, 1.0};
Point(25) = {-0.068456, 0.742428, 0, 1.0};
Point(26) = {-0.071065, 0.740808, 0, 1.0};
Point(27) = {-0.073022, 0.739181, 0, 1.0};
Point(28) = {-0.074296, 0.737611, 0, 1.0};
Point(29) = {-0.074612, 0.737009, 0, 1.0};
Point(30) = {-0.074767, 0.736587, 0, 1.0};
Point(31) = {-0.074832, 0.736319, 0, 1.0};
Point(32) = {-0.074863, 0.736064, 0, 1.0};
Point(33) = {-0.074867, 0.735944, 0, 1.0};
Point(34) = {-0.074859, 0.735829, 0, 1.0};
Point(35) = {-0.074839, 0.735720, 0, 1.0};
Point(36) = {-0.074803, 0.735615, 0, 1.0};
Point(37) = {-0.074750, 0.735507, 0, 1.0};
Point(38) = {-0.074685, 0.735398, 0, 1.0};
Point(39) = {-0.074521, 0.735174, 0, 1.0};
Point(40) = {-0.074318, 0.734946, 0, 1.0};
Point(41) = {-0.073939, 0.734593, 0, 1.0};
Point(42) = {-0.072958, 0.733867, 0, 1.0};
Point(43) = {-0.070637, 0.732606, 0, 1.0};
Point(44) = {-0.067512, 0.731325, 0, 1.0};
Point(45) = {-0.063629, 0.730046, 0, 1.0};
Point(46) = {-0.059033, 0.728787, 0, 1.0};
Point(47) = {-0.053779, 0.727556, 0, 1.0};
Point(48) = {-0.047938, 0.726363, 0, 1.0};
Point(49) = {-0.041590, 0.725225, 0, 1.0};
Point(50) = {-0.034815, 0.724166, 0, 1.0};
Point(51) = {-0.027694, 0.723204, 0, 1.0};
Point(52) = {-0.020314, 0.722365, 0, 1.0};
Point(53) = {-0.012762, 0.721674, 0, 1.0};
Point(54) = {-0.005125, 0.721158, 0, 1.0};
Point(55) = {0.002505, 0.720853, 0, 1.0};
Point(56) = {0.010037, 0.720833, 0, 1.0};
Point(57) = {0.017478, 0.721194, 0, 1.0};
Point(58) = {0.024919, 0.721936, 0, 1.0};
Point(59) = {0.032407, 0.722923, 0, 1.0};
Point(60) = {0.039883, 0.723974, 0, 1.0};
Point(61) = {0.047195, 0.724947, 0, 1.0};
Point(62) = {0.054179, 0.725762, 0, 1.0};
Point(63) = {0.060664, 0.726369, 0, 1.0};
Point(64) = {0.066482, 0.726750, 0, 1.0};
Point(65) = {0.071478, 0.726919, 0, 1.0};
Point(66) = {0.074859, 0.726932, 0, 1.0};
Point(67) = {-0.074947, -0.728397, 0, 1.0};
Point(68) = {-0.073083, -0.728831, 0, 1.0};
Point(69) = {-0.068896, -0.729840, 0, 1.0};
Point(70) = {-0.063911, -0.731038, 0, 1.0};
Point(71) = {-0.058212, -0.732421, 0, 1.0};
Point(72) = {-0.051899, -0.733979, 0, 1.0};
Point(73) = {-0.045080, -0.735687, 0, 1.0};
Point(74) = {-0.037865, -0.737516, 0, 1.0};
Point(75) = {-0.030367, -0.739417, 0, 1.0};
Point(76) = {-0.022696, -0.741342, 0, 1.0};
Point(77) = {-0.014956, -0.743232, 0, 1.0};
Point(78) = {-0.007243, -0.745021, 0, 1.0};
Point(79) = {0.000353, -0.746646, 0, 1.0};
Point(80) = {0.007750, -0.748036, 0, 1.0};
Point(81) = {0.014881, -0.749103, 0, 1.0};
Point(82) = {0.021753, -0.749756, 0, 1.0};
Point(83) = {0.028400, -0.750000, 0, 1.0};
Point(84) = {0.034814, -0.749886, 0, 1.0};
Point(85) = {0.040945, -0.749467, 0, 1.0};
Point(86) = {0.046726, -0.748784, 0, 1.0};
Point(87) = {0.052095, -0.747864, 0, 1.0};
Point(88) = {0.056999, -0.746738, 0, 1.0};
Point(89) = {0.061388, -0.745433, 0, 1.0};
Point(90) = {0.065220, -0.743984, 0, 1.0};
Point(91) = {0.068456, -0.742428, 0, 1.0};
Point(92) = {0.071065, -0.740808, 0, 1.0};
Point(93) = {0.073022, -0.739181, 0, 1.0};
Point(94) = {0.074296, -0.737611, 0, 1.0};
Point(95) = {0.074612, -0.737009, 0, 1.0};
Point(96) = {0.074767, -0.736587, 0, 1.0};
Point(97) = {0.074832, -0.736319, 0, 1.0};
Point(98) = {0.074863, -0.736064, 0, 1.0};
Point(99) = {0.074867, -0.735944, 0, 1.0};
Point(100) = {0.074859, -0.735829, 0, 1.0};
Point(101) = {0.074839, -0.735720, 0, 1.0};
Point(102) = {0.074803, -0.735615, 0, 1.0};
Point(103) = {0.074750, -0.735507, 0, 1.0};
Point(104) = {0.074685, -0.735398, 0, 1.0};
Point(105) = {0.074521, -0.735174, 0, 1.0};
Point(106) = {0.074318, -0.734946, 0, 1.0};
Point(107) = {0.073939, -0.734593, 0, 1.0};
Point(108) = {0.072958, -0.733867, 0, 1.0};
Point(109) = {0.070637, -0.732606, 0, 1.0};
Point(110) = {0.067512, -0.731325, 0, 1.0};
Point(111) = {0.063629, -0.730046, 0, 1.0};
Point(112) = {0.059033, -0.728787, 0, 1.0};
Point(113) = {0.053779, -0.727556, 0, 1.0};
Point(114) = {0.047938, -0.726363, 0, 1.0};
Point(115) = {0.041590, -0.725225, 0, 1.0};
Point(116) = {0.034815, -0.724166, 0, 1.0};
Point(117) = {0.027694, -0.723204, 0, 1.0};
Point(118) = {0.020314, -0.722365, 0, 1.0};
Point(119) = {0.012762, -0.721674, 0, 1.0};
Point(120) = {0.005125, -0.721158, 0, 1.0};
Point(121) = {-0.002505, -0.720853, 0, 1.0};
Point(122) = {-0.010037, -0.720833, 0, 1.0};
Point(123) = {-0.017478, -0.721194, 0, 1.0};
Point(124) = {-0.024919, -0.721936, 0, 1.0};
Point(125) = {-0.032407, -0.722923, 0, 1.0};
Point(126) = {-0.039883, -0.723974, 0, 1.0};
Point(127) = {-0.047195, -0.724947, 0, 1.0};
Point(128) = {-0.054179, -0.725762, 0, 1.0};
Point(129) = {-0.060664, -0.726369, 0, 1.0};
Point(130) = {-0.066482, -0.726750, 0, 1.0};
Point(131) = {-0.071478, -0.726919, 0, 1.0};
Point(132) = {-0.074859, -0.726932, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {36.00000000, 15.00000000, 0, 1.0};
Point(136) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
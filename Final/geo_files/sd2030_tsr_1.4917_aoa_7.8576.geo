SetFactory("OpenCASCADE");

Point(1) = {0.111092, 0.724790, 0, 1.0};
Point(2) = {0.110604, 0.724931, 0, 1.0};
Point(3) = {0.109183, 0.725374, 0, 1.0};
Point(4) = {0.106929, 0.726137, 0, 1.0};
Point(5) = {0.103940, 0.727185, 0, 1.0};
Point(6) = {0.100294, 0.728457, 0, 1.0};
Point(7) = {0.096036, 0.729884, 0, 1.0};
Point(8) = {0.091189, 0.731419, 0, 1.0};
Point(9) = {0.085796, 0.733051, 0, 1.0};
Point(10) = {0.079930, 0.734757, 0, 1.0};
Point(11) = {0.073669, 0.736496, 0, 1.0};
Point(12) = {0.067078, 0.738217, 0, 1.0};
Point(13) = {0.060205, 0.739880, 0, 1.0};
Point(14) = {0.053110, 0.741459, 0, 1.0};
Point(15) = {0.045848, 0.742937, 0, 1.0};
Point(16) = {0.038487, 0.744301, 0, 1.0};
Point(17) = {0.031101, 0.745543, 0, 1.0};
Point(18) = {0.023764, 0.746651, 0, 1.0};
Point(19) = {0.016557, 0.747618, 0, 1.0};
Point(20) = {0.009553, 0.748433, 0, 1.0};
Point(21) = {0.002829, 0.749087, 0, 1.0};
Point(22) = {-0.003546, 0.749570, 0, 1.0};
Point(23) = {-0.009508, 0.749877, 0, 1.0};
Point(24) = {-0.014998, 0.750000, 0, 1.0};
Point(25) = {-0.019964, 0.749939, 0, 1.0};
Point(26) = {-0.024366, 0.749692, 0, 1.0};
Point(27) = {-0.028172, 0.749271, 0, 1.0};
Point(28) = {-0.031350, 0.748692, 0, 1.0};
Point(29) = {-0.033875, 0.747970, 0, 1.0};
Point(30) = {-0.035740, 0.747130, 0, 1.0};
Point(31) = {-0.036948, 0.746215, 0, 1.0};
Point(32) = {-0.037497, 0.745322, 0, 1.0};
Point(33) = {-0.037233, 0.744501, 0, 1.0};
Point(34) = {-0.036100, 0.743688, 0, 1.0};
Point(35) = {-0.034173, 0.742860, 0, 1.0};
Point(36) = {-0.031445, 0.742037, 0, 1.0};
Point(37) = {-0.027930, 0.741206, 0, 1.0};
Point(38) = {-0.023669, 0.740364, 0, 1.0};
Point(39) = {-0.018704, 0.739503, 0, 1.0};
Point(40) = {-0.013093, 0.738623, 0, 1.0};
Point(41) = {-0.006904, 0.737723, 0, 1.0};
Point(42) = {-0.000209, 0.736808, 0, 1.0};
Point(43) = {0.006916, 0.735881, 0, 1.0};
Point(44) = {0.014384, 0.734947, 0, 1.0};
Point(45) = {0.022111, 0.734014, 0, 1.0};
Point(46) = {0.030005, 0.733091, 0, 1.0};
Point(47) = {0.037973, 0.732185, 0, 1.0};
Point(48) = {0.045923, 0.731309, 0, 1.0};
Point(49) = {0.053762, 0.730474, 0, 1.0};
Point(50) = {0.061403, 0.729700, 0, 1.0};
Point(51) = {0.068775, 0.729001, 0, 1.0};
Point(52) = {0.075810, 0.728375, 0, 1.0};
Point(53) = {0.082439, 0.727811, 0, 1.0};
Point(54) = {0.088582, 0.727294, 0, 1.0};
Point(55) = {0.094157, 0.726809, 0, 1.0};
Point(56) = {0.099079, 0.726348, 0, 1.0};
Point(57) = {0.103263, 0.725907, 0, 1.0};
Point(58) = {0.106624, 0.725496, 0, 1.0};
Point(59) = {0.109085, 0.725141, 0, 1.0};
Point(60) = {0.110588, 0.724885, 0, 1.0};
Point(61) = {0.111093, 0.724790, 0, 1.0};
Point(62) = {-0.111092, -0.724790, 0, 1.0};
Point(63) = {-0.110604, -0.724931, 0, 1.0};
Point(64) = {-0.109183, -0.725374, 0, 1.0};
Point(65) = {-0.106929, -0.726137, 0, 1.0};
Point(66) = {-0.103940, -0.727185, 0, 1.0};
Point(67) = {-0.100294, -0.728457, 0, 1.0};
Point(68) = {-0.096036, -0.729884, 0, 1.0};
Point(69) = {-0.091189, -0.731419, 0, 1.0};
Point(70) = {-0.085796, -0.733051, 0, 1.0};
Point(71) = {-0.079930, -0.734757, 0, 1.0};
Point(72) = {-0.073669, -0.736496, 0, 1.0};
Point(73) = {-0.067078, -0.738217, 0, 1.0};
Point(74) = {-0.060205, -0.739880, 0, 1.0};
Point(75) = {-0.053110, -0.741459, 0, 1.0};
Point(76) = {-0.045848, -0.742937, 0, 1.0};
Point(77) = {-0.038487, -0.744301, 0, 1.0};
Point(78) = {-0.031101, -0.745543, 0, 1.0};
Point(79) = {-0.023764, -0.746651, 0, 1.0};
Point(80) = {-0.016557, -0.747618, 0, 1.0};
Point(81) = {-0.009553, -0.748433, 0, 1.0};
Point(82) = {-0.002829, -0.749087, 0, 1.0};
Point(83) = {0.003546, -0.749570, 0, 1.0};
Point(84) = {0.009508, -0.749877, 0, 1.0};
Point(85) = {0.014998, -0.750000, 0, 1.0};
Point(86) = {0.019964, -0.749939, 0, 1.0};
Point(87) = {0.024366, -0.749692, 0, 1.0};
Point(88) = {0.028172, -0.749271, 0, 1.0};
Point(89) = {0.031350, -0.748692, 0, 1.0};
Point(90) = {0.033875, -0.747970, 0, 1.0};
Point(91) = {0.035740, -0.747130, 0, 1.0};
Point(92) = {0.036948, -0.746215, 0, 1.0};
Point(93) = {0.037497, -0.745322, 0, 1.0};
Point(94) = {0.037233, -0.744501, 0, 1.0};
Point(95) = {0.036100, -0.743688, 0, 1.0};
Point(96) = {0.034173, -0.742860, 0, 1.0};
Point(97) = {0.031445, -0.742037, 0, 1.0};
Point(98) = {0.027930, -0.741206, 0, 1.0};
Point(99) = {0.023669, -0.740364, 0, 1.0};
Point(100) = {0.018704, -0.739503, 0, 1.0};
Point(101) = {0.013093, -0.738623, 0, 1.0};
Point(102) = {0.006904, -0.737723, 0, 1.0};
Point(103) = {0.000209, -0.736808, 0, 1.0};
Point(104) = {-0.006916, -0.735881, 0, 1.0};
Point(105) = {-0.014384, -0.734947, 0, 1.0};
Point(106) = {-0.022111, -0.734014, 0, 1.0};
Point(107) = {-0.030005, -0.733091, 0, 1.0};
Point(108) = {-0.037973, -0.732185, 0, 1.0};
Point(109) = {-0.045923, -0.731309, 0, 1.0};
Point(110) = {-0.053762, -0.730474, 0, 1.0};
Point(111) = {-0.061403, -0.729700, 0, 1.0};
Point(112) = {-0.068775, -0.729001, 0, 1.0};
Point(113) = {-0.075810, -0.728375, 0, 1.0};
Point(114) = {-0.082439, -0.727811, 0, 1.0};
Point(115) = {-0.088582, -0.727294, 0, 1.0};
Point(116) = {-0.094157, -0.726809, 0, 1.0};
Point(117) = {-0.099079, -0.726348, 0, 1.0};
Point(118) = {-0.103263, -0.725907, 0, 1.0};
Point(119) = {-0.106624, -0.725496, 0, 1.0};
Point(120) = {-0.109085, -0.725141, 0, 1.0};
Point(121) = {-0.110588, -0.724885, 0, 1.0};
Point(122) = {-0.111093, -0.724790, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.148122, 0.716386, 0, 1.0};
Point(2) = {0.147472, 0.716575, 0, 1.0};
Point(3) = {0.145577, 0.717166, 0, 1.0};
Point(4) = {0.142572, 0.718182, 0, 1.0};
Point(5) = {0.138587, 0.719580, 0, 1.0};
Point(6) = {0.133726, 0.721277, 0, 1.0};
Point(7) = {0.128048, 0.723179, 0, 1.0};
Point(8) = {0.121585, 0.725225, 0, 1.0};
Point(9) = {0.114395, 0.727401, 0, 1.0};
Point(10) = {0.106573, 0.729676, 0, 1.0};
Point(11) = {0.098225, 0.731994, 0, 1.0};
Point(12) = {0.089437, 0.734290, 0, 1.0};
Point(13) = {0.080274, 0.736507, 0, 1.0};
Point(14) = {0.070813, 0.738612, 0, 1.0};
Point(15) = {0.061131, 0.740582, 0, 1.0};
Point(16) = {0.051316, 0.742401, 0, 1.0};
Point(17) = {0.041468, 0.744057, 0, 1.0};
Point(18) = {0.031686, 0.745534, 0, 1.0};
Point(19) = {0.022076, 0.746824, 0, 1.0};
Point(20) = {0.012737, 0.747911, 0, 1.0};
Point(21) = {0.003772, 0.748783, 0, 1.0};
Point(22) = {-0.004728, 0.749427, 0, 1.0};
Point(23) = {-0.012677, 0.749836, 0, 1.0};
Point(24) = {-0.019997, 0.750000, 0, 1.0};
Point(25) = {-0.026618, 0.749918, 0, 1.0};
Point(26) = {-0.032488, 0.749590, 0, 1.0};
Point(27) = {-0.037563, 0.749028, 0, 1.0};
Point(28) = {-0.041800, 0.748256, 0, 1.0};
Point(29) = {-0.045167, 0.747294, 0, 1.0};
Point(30) = {-0.047654, 0.746173, 0, 1.0};
Point(31) = {-0.049264, 0.744954, 0, 1.0};
Point(32) = {-0.049995, 0.743763, 0, 1.0};
Point(33) = {-0.049644, 0.742668, 0, 1.0};
Point(34) = {-0.048134, 0.741584, 0, 1.0};
Point(35) = {-0.045565, 0.740480, 0, 1.0};
Point(36) = {-0.041926, 0.739382, 0, 1.0};
Point(37) = {-0.037240, 0.738275, 0, 1.0};
Point(38) = {-0.031558, 0.737152, 0, 1.0};
Point(39) = {-0.024939, 0.736004, 0, 1.0};
Point(40) = {-0.017457, 0.734830, 0, 1.0};
Point(41) = {-0.009205, 0.733631, 0, 1.0};
Point(42) = {-0.000278, 0.732411, 0, 1.0};
Point(43) = {0.009222, 0.731175, 0, 1.0};
Point(44) = {0.019179, 0.729930, 0, 1.0};
Point(45) = {0.029482, 0.728686, 0, 1.0};
Point(46) = {0.040006, 0.727455, 0, 1.0};
Point(47) = {0.050631, 0.726247, 0, 1.0};
Point(48) = {0.061231, 0.725079, 0, 1.0};
Point(49) = {0.071683, 0.723966, 0, 1.0};
Point(50) = {0.081871, 0.722933, 0, 1.0};
Point(51) = {0.091700, 0.722001, 0, 1.0};
Point(52) = {0.101080, 0.721167, 0, 1.0};
Point(53) = {0.109918, 0.720415, 0, 1.0};
Point(54) = {0.118109, 0.719725, 0, 1.0};
Point(55) = {0.125542, 0.719079, 0, 1.0};
Point(56) = {0.132106, 0.718464, 0, 1.0};
Point(57) = {0.137684, 0.717876, 0, 1.0};
Point(58) = {0.142165, 0.717328, 0, 1.0};
Point(59) = {0.145447, 0.716855, 0, 1.0};
Point(60) = {0.147451, 0.716513, 0, 1.0};
Point(61) = {0.148124, 0.716386, 0, 1.0};
Point(62) = {-0.148122, -0.716386, 0, 1.0};
Point(63) = {-0.147472, -0.716575, 0, 1.0};
Point(64) = {-0.145577, -0.717166, 0, 1.0};
Point(65) = {-0.142572, -0.718182, 0, 1.0};
Point(66) = {-0.138587, -0.719580, 0, 1.0};
Point(67) = {-0.133726, -0.721277, 0, 1.0};
Point(68) = {-0.128048, -0.723179, 0, 1.0};
Point(69) = {-0.121585, -0.725225, 0, 1.0};
Point(70) = {-0.114395, -0.727401, 0, 1.0};
Point(71) = {-0.106573, -0.729676, 0, 1.0};
Point(72) = {-0.098225, -0.731994, 0, 1.0};
Point(73) = {-0.089437, -0.734290, 0, 1.0};
Point(74) = {-0.080274, -0.736507, 0, 1.0};
Point(75) = {-0.070813, -0.738612, 0, 1.0};
Point(76) = {-0.061131, -0.740582, 0, 1.0};
Point(77) = {-0.051316, -0.742401, 0, 1.0};
Point(78) = {-0.041468, -0.744057, 0, 1.0};
Point(79) = {-0.031686, -0.745534, 0, 1.0};
Point(80) = {-0.022076, -0.746824, 0, 1.0};
Point(81) = {-0.012737, -0.747911, 0, 1.0};
Point(82) = {-0.003772, -0.748783, 0, 1.0};
Point(83) = {0.004728, -0.749427, 0, 1.0};
Point(84) = {0.012677, -0.749836, 0, 1.0};
Point(85) = {0.019997, -0.750000, 0, 1.0};
Point(86) = {0.026618, -0.749918, 0, 1.0};
Point(87) = {0.032488, -0.749590, 0, 1.0};
Point(88) = {0.037563, -0.749028, 0, 1.0};
Point(89) = {0.041800, -0.748256, 0, 1.0};
Point(90) = {0.045167, -0.747294, 0, 1.0};
Point(91) = {0.047654, -0.746173, 0, 1.0};
Point(92) = {0.049264, -0.744954, 0, 1.0};
Point(93) = {0.049995, -0.743763, 0, 1.0};
Point(94) = {0.049644, -0.742668, 0, 1.0};
Point(95) = {0.048134, -0.741584, 0, 1.0};
Point(96) = {0.045565, -0.740480, 0, 1.0};
Point(97) = {0.041926, -0.739382, 0, 1.0};
Point(98) = {0.037240, -0.738275, 0, 1.0};
Point(99) = {0.031558, -0.737152, 0, 1.0};
Point(100) = {0.024939, -0.736004, 0, 1.0};
Point(101) = {0.017457, -0.734830, 0, 1.0};
Point(102) = {0.009205, -0.733631, 0, 1.0};
Point(103) = {0.000278, -0.732411, 0, 1.0};
Point(104) = {-0.009222, -0.731175, 0, 1.0};
Point(105) = {-0.019179, -0.729930, 0, 1.0};
Point(106) = {-0.029482, -0.728686, 0, 1.0};
Point(107) = {-0.040006, -0.727455, 0, 1.0};
Point(108) = {-0.050631, -0.726247, 0, 1.0};
Point(109) = {-0.061231, -0.725079, 0, 1.0};
Point(110) = {-0.071683, -0.723966, 0, 1.0};
Point(111) = {-0.081871, -0.722933, 0, 1.0};
Point(112) = {-0.091700, -0.722001, 0, 1.0};
Point(113) = {-0.101080, -0.721167, 0, 1.0};
Point(114) = {-0.109918, -0.720415, 0, 1.0};
Point(115) = {-0.118109, -0.719725, 0, 1.0};
Point(116) = {-0.125542, -0.719079, 0, 1.0};
Point(117) = {-0.132106, -0.718464, 0, 1.0};
Point(118) = {-0.137684, -0.717876, 0, 1.0};
Point(119) = {-0.142165, -0.717328, 0, 1.0};
Point(120) = {-0.145447, -0.716855, 0, 1.0};
Point(121) = {-0.147451, -0.716513, 0, 1.0};
Point(122) = {-0.148124, -0.716386, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 44 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
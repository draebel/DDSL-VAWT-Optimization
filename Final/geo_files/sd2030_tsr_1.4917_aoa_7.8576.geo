SetFactory("OpenCASCADE");

Point(1) = {0.074291, 0.724790, 0, 1.0};
Point(2) = {0.073803, 0.724932, 0, 1.0};
Point(3) = {0.072382, 0.725375, 0, 1.0};
Point(4) = {0.070128, 0.726137, 0, 1.0};
Point(5) = {0.067140, 0.727185, 0, 1.0};
Point(6) = {0.063493, 0.728458, 0, 1.0};
Point(7) = {0.059236, 0.729884, 0, 1.0};
Point(8) = {0.054388, 0.731419, 0, 1.0};
Point(9) = {0.048996, 0.733051, 0, 1.0};
Point(10) = {0.043129, 0.734757, 0, 1.0};
Point(11) = {0.036869, 0.736496, 0, 1.0};
Point(12) = {0.030277, 0.738217, 0, 1.0};
Point(13) = {0.023405, 0.739880, 0, 1.0};
Point(14) = {0.016309, 0.741459, 0, 1.0};
Point(15) = {0.009048, 0.742937, 0, 1.0};
Point(16) = {0.001687, 0.744301, 0, 1.0};
Point(17) = {-0.005699, 0.745543, 0, 1.0};
Point(18) = {-0.013036, 0.746651, 0, 1.0};
Point(19) = {-0.020243, 0.747618, 0, 1.0};
Point(20) = {-0.027247, 0.748433, 0, 1.0};
Point(21) = {-0.033971, 0.749087, 0, 1.0};
Point(22) = {-0.040346, 0.749570, 0, 1.0};
Point(23) = {-0.046307, 0.749877, 0, 1.0};
Point(24) = {-0.051797, 0.750000, 0, 1.0};
Point(25) = {-0.056763, 0.749939, 0, 1.0};
Point(26) = {-0.061166, 0.749692, 0, 1.0};
Point(27) = {-0.064971, 0.749271, 0, 1.0};
Point(28) = {-0.068149, 0.748692, 0, 1.0};
Point(29) = {-0.070675, 0.747970, 0, 1.0};
Point(30) = {-0.072540, 0.747130, 0, 1.0};
Point(31) = {-0.073747, 0.746215, 0, 1.0};
Point(32) = {-0.074296, 0.745322, 0, 1.0};
Point(33) = {-0.074032, 0.744501, 0, 1.0};
Point(34) = {-0.072900, 0.743688, 0, 1.0};
Point(35) = {-0.070973, 0.742860, 0, 1.0};
Point(36) = {-0.068244, 0.742037, 0, 1.0};
Point(37) = {-0.064729, 0.741207, 0, 1.0};
Point(38) = {-0.060468, 0.740364, 0, 1.0};
Point(39) = {-0.055504, 0.739503, 0, 1.0};
Point(40) = {-0.049892, 0.738623, 0, 1.0};
Point(41) = {-0.043704, 0.737723, 0, 1.0};
Point(42) = {-0.037008, 0.736808, 0, 1.0};
Point(43) = {-0.029883, 0.735881, 0, 1.0};
Point(44) = {-0.022416, 0.734947, 0, 1.0};
Point(45) = {-0.014689, 0.734014, 0, 1.0};
Point(46) = {-0.006795, 0.733092, 0, 1.0};
Point(47) = {0.001173, 0.732186, 0, 1.0};
Point(48) = {0.009123, 0.731310, 0, 1.0};
Point(49) = {0.016962, 0.730475, 0, 1.0};
Point(50) = {0.024603, 0.729700, 0, 1.0};
Point(51) = {0.031975, 0.729001, 0, 1.0};
Point(52) = {0.039010, 0.728375, 0, 1.0};
Point(53) = {0.045638, 0.727812, 0, 1.0};
Point(54) = {0.051781, 0.727294, 0, 1.0};
Point(55) = {0.057356, 0.726809, 0, 1.0};
Point(56) = {0.062279, 0.726348, 0, 1.0};
Point(57) = {0.066462, 0.725907, 0, 1.0};
Point(58) = {0.069823, 0.725496, 0, 1.0};
Point(59) = {0.072285, 0.725141, 0, 1.0};
Point(60) = {0.073788, 0.724885, 0, 1.0};
Point(61) = {0.074292, 0.724790, 0, 1.0};
Point(62) = {-0.074291, -0.724790, 0, 1.0};
Point(63) = {-0.073803, -0.724932, 0, 1.0};
Point(64) = {-0.072382, -0.725375, 0, 1.0};
Point(65) = {-0.070128, -0.726137, 0, 1.0};
Point(66) = {-0.067140, -0.727185, 0, 1.0};
Point(67) = {-0.063493, -0.728458, 0, 1.0};
Point(68) = {-0.059236, -0.729884, 0, 1.0};
Point(69) = {-0.054388, -0.731419, 0, 1.0};
Point(70) = {-0.048996, -0.733051, 0, 1.0};
Point(71) = {-0.043129, -0.734757, 0, 1.0};
Point(72) = {-0.036869, -0.736496, 0, 1.0};
Point(73) = {-0.030277, -0.738217, 0, 1.0};
Point(74) = {-0.023405, -0.739880, 0, 1.0};
Point(75) = {-0.016309, -0.741459, 0, 1.0};
Point(76) = {-0.009048, -0.742937, 0, 1.0};
Point(77) = {-0.001687, -0.744301, 0, 1.0};
Point(78) = {0.005699, -0.745543, 0, 1.0};
Point(79) = {0.013036, -0.746651, 0, 1.0};
Point(80) = {0.020243, -0.747618, 0, 1.0};
Point(81) = {0.027247, -0.748433, 0, 1.0};
Point(82) = {0.033971, -0.749087, 0, 1.0};
Point(83) = {0.040346, -0.749570, 0, 1.0};
Point(84) = {0.046307, -0.749877, 0, 1.0};
Point(85) = {0.051797, -0.750000, 0, 1.0};
Point(86) = {0.056763, -0.749939, 0, 1.0};
Point(87) = {0.061166, -0.749692, 0, 1.0};
Point(88) = {0.064971, -0.749271, 0, 1.0};
Point(89) = {0.068149, -0.748692, 0, 1.0};
Point(90) = {0.070675, -0.747970, 0, 1.0};
Point(91) = {0.072540, -0.747130, 0, 1.0};
Point(92) = {0.073747, -0.746215, 0, 1.0};
Point(93) = {0.074296, -0.745322, 0, 1.0};
Point(94) = {0.074032, -0.744501, 0, 1.0};
Point(95) = {0.072900, -0.743688, 0, 1.0};
Point(96) = {0.070973, -0.742860, 0, 1.0};
Point(97) = {0.068244, -0.742037, 0, 1.0};
Point(98) = {0.064729, -0.741207, 0, 1.0};
Point(99) = {0.060468, -0.740364, 0, 1.0};
Point(100) = {0.055504, -0.739503, 0, 1.0};
Point(101) = {0.049892, -0.738623, 0, 1.0};
Point(102) = {0.043704, -0.737723, 0, 1.0};
Point(103) = {0.037008, -0.736808, 0, 1.0};
Point(104) = {0.029883, -0.735881, 0, 1.0};
Point(105) = {0.022416, -0.734947, 0, 1.0};
Point(106) = {0.014689, -0.734014, 0, 1.0};
Point(107) = {0.006795, -0.733092, 0, 1.0};
Point(108) = {-0.001173, -0.732186, 0, 1.0};
Point(109) = {-0.009123, -0.731310, 0, 1.0};
Point(110) = {-0.016962, -0.730475, 0, 1.0};
Point(111) = {-0.024603, -0.729700, 0, 1.0};
Point(112) = {-0.031975, -0.729001, 0, 1.0};
Point(113) = {-0.039010, -0.728375, 0, 1.0};
Point(114) = {-0.045638, -0.727812, 0, 1.0};
Point(115) = {-0.051781, -0.727294, 0, 1.0};
Point(116) = {-0.057356, -0.726809, 0, 1.0};
Point(117) = {-0.062279, -0.726348, 0, 1.0};
Point(118) = {-0.066462, -0.725907, 0, 1.0};
Point(119) = {-0.069823, -0.725496, 0, 1.0};
Point(120) = {-0.072285, -0.725141, 0, 1.0};
Point(121) = {-0.073788, -0.724885, 0, 1.0};
Point(122) = {-0.074292, -0.724790, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
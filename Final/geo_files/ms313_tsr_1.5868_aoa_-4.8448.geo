SetFactory("OpenCASCADE");

Point(1) = {0.112117, 0.744413, 0, 1.0};
Point(2) = {0.108314, 0.744869, 0, 1.0};
Point(3) = {0.104513, 0.745318, 0, 1.0};
Point(4) = {0.100711, 0.745767, 0, 1.0};
Point(5) = {0.096910, 0.746217, 0, 1.0};
Point(6) = {0.093109, 0.746663, 0, 1.0};
Point(7) = {0.089308, 0.747105, 0, 1.0};
Point(8) = {0.085507, 0.747540, 0, 1.0};
Point(9) = {0.081709, 0.747955, 0, 1.0};
Point(10) = {0.077912, 0.748343, 0, 1.0};
Point(11) = {0.074118, 0.748702, 0, 1.0};
Point(12) = {0.070327, 0.749027, 0, 1.0};
Point(13) = {0.066540, 0.749313, 0, 1.0};
Point(14) = {0.062756, 0.749556, 0, 1.0};
Point(15) = {0.058976, 0.749750, 0, 1.0};
Point(16) = {0.055201, 0.749890, 0, 1.0};
Point(17) = {0.051430, 0.749973, 0, 1.0};
Point(18) = {0.047664, 0.750000, 0, 1.0};
Point(19) = {0.043903, 0.749972, 0, 1.0};
Point(20) = {0.040146, 0.749894, 0, 1.0};
Point(21) = {0.036393, 0.749770, 0, 1.0};
Point(22) = {0.032644, 0.749604, 0, 1.0};
Point(23) = {0.028898, 0.749400, 0, 1.0};
Point(24) = {0.025155, 0.749160, 0, 1.0};
Point(25) = {0.021415, 0.748883, 0, 1.0};
Point(26) = {0.017678, 0.748571, 0, 1.0};
Point(27) = {0.013944, 0.748223, 0, 1.0};
Point(28) = {0.010213, 0.747841, 0, 1.0};
Point(29) = {0.006485, 0.747421, 0, 1.0};
Point(30) = {0.002761, 0.746962, 0, 1.0};
Point(31) = {-0.000960, 0.746457, 0, 1.0};
Point(32) = {-0.004677, 0.745905, 0, 1.0};
Point(33) = {-0.008389, 0.745300, 0, 1.0};
Point(34) = {-0.012096, 0.744638, 0, 1.0};
Point(35) = {-0.015798, 0.743907, 0, 1.0};
Point(36) = {-0.019492, 0.743084, 0, 1.0};
Point(37) = {-0.023175, 0.742140, 0, 1.0};
Point(38) = {-0.026843, 0.741010, 0, 1.0};
Point(39) = {-0.030481, 0.739538, 0, 1.0};
Point(40) = {-0.032279, 0.738548, 0, 1.0};
Point(41) = {-0.034053, 0.737280, 0, 1.0};
Point(42) = {-0.035793, 0.735603, 0, 1.0};
Point(43) = {-0.036798, 0.734138, 0, 1.0};
Point(44) = {-0.037175, 0.733256, 0, 1.0};
Point(45) = {-0.037366, 0.731962, 0, 1.0};
Point(46) = {-0.036975, 0.730902, 0, 1.0};
Point(47) = {-0.036480, 0.730387, 0, 1.0};
Point(48) = {-0.035292, 0.729694, 0, 1.0};
Point(49) = {-0.033356, 0.729053, 0, 1.0};
Point(50) = {-0.031439, 0.728642, 0, 1.0};
Point(51) = {-0.029533, 0.728345, 0, 1.0};
Point(52) = {-0.025735, 0.727940, 0, 1.0};
Point(53) = {-0.021950, 0.727689, 0, 1.0};
Point(54) = {-0.018174, 0.727539, 0, 1.0};
Point(55) = {-0.014404, 0.727464, 0, 1.0};
Point(56) = {-0.010640, 0.727455, 0, 1.0};
Point(57) = {-0.006880, 0.727502, 0, 1.0};
Point(58) = {-0.003125, 0.727598, 0, 1.0};
Point(59) = {0.000627, 0.727737, 0, 1.0};
Point(60) = {0.004375, 0.727913, 0, 1.0};
Point(61) = {0.008121, 0.728123, 0, 1.0};
Point(62) = {0.011864, 0.728362, 0, 1.0};
Point(63) = {0.015604, 0.728632, 0, 1.0};
Point(64) = {0.019342, 0.728934, 0, 1.0};
Point(65) = {0.023077, 0.729271, 0, 1.0};
Point(66) = {0.026809, 0.729649, 0, 1.0};
Point(67) = {0.030536, 0.730070, 0, 1.0};
Point(68) = {0.034260, 0.730536, 0, 1.0};
Point(69) = {0.037980, 0.731048, 0, 1.0};
Point(70) = {0.041697, 0.731602, 0, 1.0};
Point(71) = {0.045409, 0.732202, 0, 1.0};
Point(72) = {0.049118, 0.732850, 0, 1.0};
Point(73) = {0.052822, 0.733546, 0, 1.0};
Point(74) = {0.056523, 0.734288, 0, 1.0};
Point(75) = {0.060220, 0.735070, 0, 1.0};
Point(76) = {0.063915, 0.735881, 0, 1.0};
Point(77) = {0.067608, 0.736711, 0, 1.0};
Point(78) = {0.071300, 0.737551, 0, 1.0};
Point(79) = {0.074992, 0.738391, 0, 1.0};
Point(80) = {0.078686, 0.739220, 0, 1.0};
Point(81) = {0.082381, 0.740024, 0, 1.0};
Point(82) = {0.086080, 0.740787, 0, 1.0};
Point(83) = {0.089783, 0.741494, 0, 1.0};
Point(84) = {0.093493, 0.742132, 0, 1.0};
Point(85) = {0.097209, 0.742688, 0, 1.0};
Point(86) = {0.100934, 0.743143, 0, 1.0};
Point(87) = {0.104669, 0.743473, 0, 1.0};
Point(88) = {0.108419, 0.743637, 0, 1.0};
Point(89) = {0.112187, 0.743578, 0, 1.0};
Point(90) = {-0.112117, -0.744413, 0, 1.0};
Point(91) = {-0.108314, -0.744869, 0, 1.0};
Point(92) = {-0.104513, -0.745318, 0, 1.0};
Point(93) = {-0.100711, -0.745767, 0, 1.0};
Point(94) = {-0.096910, -0.746217, 0, 1.0};
Point(95) = {-0.093109, -0.746663, 0, 1.0};
Point(96) = {-0.089308, -0.747105, 0, 1.0};
Point(97) = {-0.085507, -0.747540, 0, 1.0};
Point(98) = {-0.081709, -0.747955, 0, 1.0};
Point(99) = {-0.077912, -0.748343, 0, 1.0};
Point(100) = {-0.074118, -0.748702, 0, 1.0};
Point(101) = {-0.070327, -0.749027, 0, 1.0};
Point(102) = {-0.066540, -0.749313, 0, 1.0};
Point(103) = {-0.062756, -0.749556, 0, 1.0};
Point(104) = {-0.058976, -0.749750, 0, 1.0};
Point(105) = {-0.055201, -0.749890, 0, 1.0};
Point(106) = {-0.051430, -0.749973, 0, 1.0};
Point(107) = {-0.047664, -0.750000, 0, 1.0};
Point(108) = {-0.043903, -0.749972, 0, 1.0};
Point(109) = {-0.040146, -0.749894, 0, 1.0};
Point(110) = {-0.036393, -0.749770, 0, 1.0};
Point(111) = {-0.032644, -0.749604, 0, 1.0};
Point(112) = {-0.028898, -0.749400, 0, 1.0};
Point(113) = {-0.025155, -0.749160, 0, 1.0};
Point(114) = {-0.021415, -0.748883, 0, 1.0};
Point(115) = {-0.017678, -0.748571, 0, 1.0};
Point(116) = {-0.013944, -0.748223, 0, 1.0};
Point(117) = {-0.010213, -0.747841, 0, 1.0};
Point(118) = {-0.006485, -0.747421, 0, 1.0};
Point(119) = {-0.002761, -0.746962, 0, 1.0};
Point(120) = {0.000960, -0.746457, 0, 1.0};
Point(121) = {0.004677, -0.745905, 0, 1.0};
Point(122) = {0.008389, -0.745300, 0, 1.0};
Point(123) = {0.012096, -0.744638, 0, 1.0};
Point(124) = {0.015798, -0.743907, 0, 1.0};
Point(125) = {0.019492, -0.743084, 0, 1.0};
Point(126) = {0.023175, -0.742140, 0, 1.0};
Point(127) = {0.026843, -0.741010, 0, 1.0};
Point(128) = {0.030481, -0.739538, 0, 1.0};
Point(129) = {0.032279, -0.738548, 0, 1.0};
Point(130) = {0.034053, -0.737280, 0, 1.0};
Point(131) = {0.035793, -0.735603, 0, 1.0};
Point(132) = {0.036798, -0.734138, 0, 1.0};
Point(133) = {0.037175, -0.733256, 0, 1.0};
Point(134) = {0.037366, -0.731962, 0, 1.0};
Point(135) = {0.036975, -0.730902, 0, 1.0};
Point(136) = {0.036480, -0.730387, 0, 1.0};
Point(137) = {0.035292, -0.729694, 0, 1.0};
Point(138) = {0.033356, -0.729053, 0, 1.0};
Point(139) = {0.031439, -0.728642, 0, 1.0};
Point(140) = {0.029533, -0.728345, 0, 1.0};
Point(141) = {0.025735, -0.727940, 0, 1.0};
Point(142) = {0.021950, -0.727689, 0, 1.0};
Point(143) = {0.018174, -0.727539, 0, 1.0};
Point(144) = {0.014404, -0.727464, 0, 1.0};
Point(145) = {0.010640, -0.727455, 0, 1.0};
Point(146) = {0.006880, -0.727502, 0, 1.0};
Point(147) = {0.003125, -0.727598, 0, 1.0};
Point(148) = {-0.000627, -0.727737, 0, 1.0};
Point(149) = {-0.004375, -0.727913, 0, 1.0};
Point(150) = {-0.008121, -0.728123, 0, 1.0};
Point(151) = {-0.011864, -0.728362, 0, 1.0};
Point(152) = {-0.015604, -0.728632, 0, 1.0};
Point(153) = {-0.019342, -0.728934, 0, 1.0};
Point(154) = {-0.023077, -0.729271, 0, 1.0};
Point(155) = {-0.026809, -0.729649, 0, 1.0};
Point(156) = {-0.030536, -0.730070, 0, 1.0};
Point(157) = {-0.034260, -0.730536, 0, 1.0};
Point(158) = {-0.037980, -0.731048, 0, 1.0};
Point(159) = {-0.041697, -0.731602, 0, 1.0};
Point(160) = {-0.045409, -0.732202, 0, 1.0};
Point(161) = {-0.049118, -0.732850, 0, 1.0};
Point(162) = {-0.052822, -0.733546, 0, 1.0};
Point(163) = {-0.056523, -0.734288, 0, 1.0};
Point(164) = {-0.060220, -0.735070, 0, 1.0};
Point(165) = {-0.063915, -0.735881, 0, 1.0};
Point(166) = {-0.067608, -0.736711, 0, 1.0};
Point(167) = {-0.071300, -0.737551, 0, 1.0};
Point(168) = {-0.074992, -0.738391, 0, 1.0};
Point(169) = {-0.078686, -0.739220, 0, 1.0};
Point(170) = {-0.082381, -0.740024, 0, 1.0};
Point(171) = {-0.086080, -0.740787, 0, 1.0};
Point(172) = {-0.089783, -0.741494, 0, 1.0};
Point(173) = {-0.093493, -0.742132, 0, 1.0};
Point(174) = {-0.097209, -0.742688, 0, 1.0};
Point(175) = {-0.100934, -0.743143, 0, 1.0};
Point(176) = {-0.104669, -0.743473, 0, 1.0};
Point(177) = {-0.108419, -0.743637, 0, 1.0};
Point(178) = {-0.112187, -0.743578, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074647, 0.746275, 0, 1.0};
Point(2) = {0.072112, 0.746579, 0, 1.0};
Point(3) = {0.069578, 0.746878, 0, 1.0};
Point(4) = {0.067043, 0.747178, 0, 1.0};
Point(5) = {0.064509, 0.747478, 0, 1.0};
Point(6) = {0.061975, 0.747775, 0, 1.0};
Point(7) = {0.059441, 0.748070, 0, 1.0};
Point(8) = {0.056907, 0.748360, 0, 1.0};
Point(9) = {0.054375, 0.748636, 0, 1.0};
Point(10) = {0.051844, 0.748896, 0, 1.0};
Point(11) = {0.049315, 0.749135, 0, 1.0};
Point(12) = {0.046787, 0.749351, 0, 1.0};
Point(13) = {0.044262, 0.749542, 0, 1.0};
Point(14) = {0.041740, 0.749704, 0, 1.0};
Point(15) = {0.039220, 0.749833, 0, 1.0};
Point(16) = {0.036703, 0.749926, 0, 1.0};
Point(17) = {0.034189, 0.749982, 0, 1.0};
Point(18) = {0.031679, 0.750000, 0, 1.0};
Point(19) = {0.029171, 0.749982, 0, 1.0};
Point(20) = {0.026667, 0.749929, 0, 1.0};
Point(21) = {0.024165, 0.749847, 0, 1.0};
Point(22) = {0.021665, 0.749736, 0, 1.0};
Point(23) = {0.019168, 0.749600, 0, 1.0};
Point(24) = {0.016672, 0.749440, 0, 1.0};
Point(25) = {0.014179, 0.749255, 0, 1.0};
Point(26) = {0.011688, 0.749047, 0, 1.0};
Point(27) = {0.009198, 0.748816, 0, 1.0};
Point(28) = {0.006711, 0.748561, 0, 1.0};
Point(29) = {0.004226, 0.748281, 0, 1.0};
Point(30) = {0.001743, 0.747974, 0, 1.0};
Point(31) = {-0.000738, 0.747638, 0, 1.0};
Point(32) = {-0.003215, 0.747270, 0, 1.0};
Point(33) = {-0.005690, 0.746867, 0, 1.0};
Point(34) = {-0.008162, 0.746425, 0, 1.0};
Point(35) = {-0.010629, 0.745938, 0, 1.0};
Point(36) = {-0.013092, 0.745389, 0, 1.0};
Point(37) = {-0.015548, 0.744760, 0, 1.0};
Point(38) = {-0.017993, 0.744007, 0, 1.0};
Point(39) = {-0.020418, 0.743025, 0, 1.0};
Point(40) = {-0.021617, 0.742365, 0, 1.0};
Point(41) = {-0.022800, 0.741520, 0, 1.0};
Point(42) = {-0.023960, 0.740402, 0, 1.0};
Point(43) = {-0.024629, 0.739425, 0, 1.0};
Point(44) = {-0.024881, 0.738837, 0, 1.0};
Point(45) = {-0.025008, 0.737975, 0, 1.0};
Point(46) = {-0.024748, 0.737268, 0, 1.0};
Point(47) = {-0.024418, 0.736924, 0, 1.0};
Point(48) = {-0.023626, 0.736463, 0, 1.0};
Point(49) = {-0.022335, 0.736035, 0, 1.0};
Point(50) = {-0.021057, 0.735761, 0, 1.0};
Point(51) = {-0.019786, 0.735563, 0, 1.0};
Point(52) = {-0.017254, 0.735294, 0, 1.0};
Point(53) = {-0.014731, 0.735126, 0, 1.0};
Point(54) = {-0.012214, 0.735026, 0, 1.0};
Point(55) = {-0.009700, 0.734976, 0, 1.0};
Point(56) = {-0.007191, 0.734970, 0, 1.0};
Point(57) = {-0.004685, 0.735001, 0, 1.0};
Point(58) = {-0.002181, 0.735065, 0, 1.0};
Point(59) = {0.000320, 0.735158, 0, 1.0};
Point(60) = {0.002819, 0.735276, 0, 1.0};
Point(61) = {0.005316, 0.735415, 0, 1.0};
Point(62) = {0.007812, 0.735575, 0, 1.0};
Point(63) = {0.010305, 0.735755, 0, 1.0};
Point(64) = {0.012797, 0.735956, 0, 1.0};
Point(65) = {0.015287, 0.736181, 0, 1.0};
Point(66) = {0.017775, 0.736433, 0, 1.0};
Point(67) = {0.020260, 0.736713, 0, 1.0};
Point(68) = {0.022743, 0.737024, 0, 1.0};
Point(69) = {0.025223, 0.737365, 0, 1.0};
Point(70) = {0.027700, 0.737735, 0, 1.0};
Point(71) = {0.030175, 0.738135, 0, 1.0};
Point(72) = {0.032648, 0.738566, 0, 1.0};
Point(73) = {0.035117, 0.739030, 0, 1.0};
Point(74) = {0.037584, 0.739525, 0, 1.0};
Point(75) = {0.040049, 0.740046, 0, 1.0};
Point(76) = {0.042512, 0.740587, 0, 1.0};
Point(77) = {0.044974, 0.741141, 0, 1.0};
Point(78) = {0.047436, 0.741701, 0, 1.0};
Point(79) = {0.049897, 0.742261, 0, 1.0};
Point(80) = {0.052359, 0.742814, 0, 1.0};
Point(81) = {0.054823, 0.743349, 0, 1.0};
Point(82) = {0.057289, 0.743858, 0, 1.0};
Point(83) = {0.059758, 0.744329, 0, 1.0};
Point(84) = {0.062231, 0.744755, 0, 1.0};
Point(85) = {0.064708, 0.745125, 0, 1.0};
Point(86) = {0.067192, 0.745429, 0, 1.0};
Point(87) = {0.069682, 0.745648, 0, 1.0};
Point(88) = {0.072182, 0.745758, 0, 1.0};
Point(89) = {0.074694, 0.745719, 0, 1.0};
Point(90) = {-0.074647, -0.746275, 0, 1.0};
Point(91) = {-0.072112, -0.746579, 0, 1.0};
Point(92) = {-0.069578, -0.746878, 0, 1.0};
Point(93) = {-0.067043, -0.747178, 0, 1.0};
Point(94) = {-0.064509, -0.747478, 0, 1.0};
Point(95) = {-0.061975, -0.747775, 0, 1.0};
Point(96) = {-0.059441, -0.748070, 0, 1.0};
Point(97) = {-0.056907, -0.748360, 0, 1.0};
Point(98) = {-0.054375, -0.748636, 0, 1.0};
Point(99) = {-0.051844, -0.748896, 0, 1.0};
Point(100) = {-0.049315, -0.749135, 0, 1.0};
Point(101) = {-0.046787, -0.749351, 0, 1.0};
Point(102) = {-0.044262, -0.749542, 0, 1.0};
Point(103) = {-0.041740, -0.749704, 0, 1.0};
Point(104) = {-0.039220, -0.749833, 0, 1.0};
Point(105) = {-0.036703, -0.749926, 0, 1.0};
Point(106) = {-0.034189, -0.749982, 0, 1.0};
Point(107) = {-0.031679, -0.750000, 0, 1.0};
Point(108) = {-0.029171, -0.749982, 0, 1.0};
Point(109) = {-0.026667, -0.749929, 0, 1.0};
Point(110) = {-0.024165, -0.749847, 0, 1.0};
Point(111) = {-0.021665, -0.749736, 0, 1.0};
Point(112) = {-0.019168, -0.749600, 0, 1.0};
Point(113) = {-0.016672, -0.749440, 0, 1.0};
Point(114) = {-0.014179, -0.749255, 0, 1.0};
Point(115) = {-0.011688, -0.749047, 0, 1.0};
Point(116) = {-0.009198, -0.748816, 0, 1.0};
Point(117) = {-0.006711, -0.748561, 0, 1.0};
Point(118) = {-0.004226, -0.748281, 0, 1.0};
Point(119) = {-0.001743, -0.747974, 0, 1.0};
Point(120) = {0.000738, -0.747638, 0, 1.0};
Point(121) = {0.003215, -0.747270, 0, 1.0};
Point(122) = {0.005690, -0.746867, 0, 1.0};
Point(123) = {0.008162, -0.746425, 0, 1.0};
Point(124) = {0.010629, -0.745938, 0, 1.0};
Point(125) = {0.013092, -0.745389, 0, 1.0};
Point(126) = {0.015548, -0.744760, 0, 1.0};
Point(127) = {0.017993, -0.744007, 0, 1.0};
Point(128) = {0.020418, -0.743025, 0, 1.0};
Point(129) = {0.021617, -0.742365, 0, 1.0};
Point(130) = {0.022800, -0.741520, 0, 1.0};
Point(131) = {0.023960, -0.740402, 0, 1.0};
Point(132) = {0.024629, -0.739425, 0, 1.0};
Point(133) = {0.024881, -0.738837, 0, 1.0};
Point(134) = {0.025008, -0.737975, 0, 1.0};
Point(135) = {0.024748, -0.737268, 0, 1.0};
Point(136) = {0.024418, -0.736924, 0, 1.0};
Point(137) = {0.023626, -0.736463, 0, 1.0};
Point(138) = {0.022335, -0.736035, 0, 1.0};
Point(139) = {0.021057, -0.735761, 0, 1.0};
Point(140) = {0.019786, -0.735563, 0, 1.0};
Point(141) = {0.017254, -0.735294, 0, 1.0};
Point(142) = {0.014731, -0.735126, 0, 1.0};
Point(143) = {0.012214, -0.735026, 0, 1.0};
Point(144) = {0.009700, -0.734976, 0, 1.0};
Point(145) = {0.007191, -0.734970, 0, 1.0};
Point(146) = {0.004685, -0.735001, 0, 1.0};
Point(147) = {0.002181, -0.735065, 0, 1.0};
Point(148) = {-0.000320, -0.735158, 0, 1.0};
Point(149) = {-0.002819, -0.735276, 0, 1.0};
Point(150) = {-0.005316, -0.735415, 0, 1.0};
Point(151) = {-0.007812, -0.735575, 0, 1.0};
Point(152) = {-0.010305, -0.735755, 0, 1.0};
Point(153) = {-0.012797, -0.735956, 0, 1.0};
Point(154) = {-0.015287, -0.736181, 0, 1.0};
Point(155) = {-0.017775, -0.736433, 0, 1.0};
Point(156) = {-0.020260, -0.736713, 0, 1.0};
Point(157) = {-0.022743, -0.737024, 0, 1.0};
Point(158) = {-0.025223, -0.737365, 0, 1.0};
Point(159) = {-0.027700, -0.737735, 0, 1.0};
Point(160) = {-0.030175, -0.738135, 0, 1.0};
Point(161) = {-0.032648, -0.738566, 0, 1.0};
Point(162) = {-0.035117, -0.739030, 0, 1.0};
Point(163) = {-0.037584, -0.739525, 0, 1.0};
Point(164) = {-0.040049, -0.740046, 0, 1.0};
Point(165) = {-0.042512, -0.740587, 0, 1.0};
Point(166) = {-0.044974, -0.741141, 0, 1.0};
Point(167) = {-0.047436, -0.741701, 0, 1.0};
Point(168) = {-0.049897, -0.742261, 0, 1.0};
Point(169) = {-0.052359, -0.742814, 0, 1.0};
Point(170) = {-0.054823, -0.743349, 0, 1.0};
Point(171) = {-0.057289, -0.743858, 0, 1.0};
Point(172) = {-0.059758, -0.744329, 0, 1.0};
Point(173) = {-0.062231, -0.744755, 0, 1.0};
Point(174) = {-0.064708, -0.745125, 0, 1.0};
Point(175) = {-0.067192, -0.745429, 0, 1.0};
Point(176) = {-0.069682, -0.745648, 0, 1.0};
Point(177) = {-0.072182, -0.745758, 0, 1.0};
Point(178) = {-0.074694, -0.745719, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
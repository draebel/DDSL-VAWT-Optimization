SetFactory("OpenCASCADE");

Point(1) = {0.149293, 0.742550, 0, 1.0};
Point(2) = {0.144224, 0.743158, 0, 1.0};
Point(3) = {0.139155, 0.743757, 0, 1.0};
Point(4) = {0.134086, 0.744357, 0, 1.0};
Point(5) = {0.129018, 0.744956, 0, 1.0};
Point(6) = {0.123949, 0.745550, 0, 1.0};
Point(7) = {0.118881, 0.746141, 0, 1.0};
Point(8) = {0.113814, 0.746721, 0, 1.0};
Point(9) = {0.108750, 0.747273, 0, 1.0};
Point(10) = {0.103688, 0.747791, 0, 1.0};
Point(11) = {0.098629, 0.748270, 0, 1.0};
Point(12) = {0.093575, 0.748703, 0, 1.0};
Point(13) = {0.088524, 0.749084, 0, 1.0};
Point(14) = {0.083479, 0.749408, 0, 1.0};
Point(15) = {0.078439, 0.749666, 0, 1.0};
Point(16) = {0.073405, 0.749853, 0, 1.0};
Point(17) = {0.068378, 0.749964, 0, 1.0};
Point(18) = {0.063357, 0.750000, 0, 1.0};
Point(19) = {0.058342, 0.749963, 0, 1.0};
Point(20) = {0.053333, 0.749859, 0, 1.0};
Point(21) = {0.048329, 0.749694, 0, 1.0};
Point(22) = {0.043330, 0.749472, 0, 1.0};
Point(23) = {0.038335, 0.749200, 0, 1.0};
Point(24) = {0.033345, 0.748880, 0, 1.0};
Point(25) = {0.028358, 0.748511, 0, 1.0};
Point(26) = {0.023375, 0.748094, 0, 1.0};
Point(27) = {0.018397, 0.747631, 0, 1.0};
Point(28) = {0.013422, 0.747121, 0, 1.0};
Point(29) = {0.008451, 0.746562, 0, 1.0};
Point(30) = {0.003485, 0.745949, 0, 1.0};
Point(31) = {-0.001476, 0.745276, 0, 1.0};
Point(32) = {-0.006431, 0.744539, 0, 1.0};
Point(33) = {-0.011381, 0.743733, 0, 1.0};
Point(34) = {-0.016324, 0.742851, 0, 1.0};
Point(35) = {-0.021259, 0.741876, 0, 1.0};
Point(36) = {-0.026184, 0.740779, 0, 1.0};
Point(37) = {-0.031095, 0.739520, 0, 1.0};
Point(38) = {-0.035985, 0.738014, 0, 1.0};
Point(39) = {-0.040837, 0.736050, 0, 1.0};
Point(40) = {-0.043234, 0.734731, 0, 1.0};
Point(41) = {-0.045600, 0.733040, 0, 1.0};
Point(42) = {-0.047919, 0.730804, 0, 1.0};
Point(43) = {-0.049259, 0.728850, 0, 1.0};
Point(44) = {-0.049761, 0.727675, 0, 1.0};
Point(45) = {-0.050017, 0.725949, 0, 1.0};
Point(46) = {-0.049495, 0.724537, 0, 1.0};
Point(47) = {-0.048835, 0.723849, 0, 1.0};
Point(48) = {-0.047251, 0.722926, 0, 1.0};
Point(49) = {-0.044670, 0.722071, 0, 1.0};
Point(50) = {-0.042115, 0.721523, 0, 1.0};
Point(51) = {-0.039572, 0.721126, 0, 1.0};
Point(52) = {-0.034508, 0.720587, 0, 1.0};
Point(53) = {-0.029462, 0.720252, 0, 1.0};
Point(54) = {-0.024427, 0.720051, 0, 1.0};
Point(55) = {-0.019401, 0.719953, 0, 1.0};
Point(56) = {-0.014382, 0.719940, 0, 1.0};
Point(57) = {-0.009369, 0.720003, 0, 1.0};
Point(58) = {-0.004362, 0.720131, 0, 1.0};
Point(59) = {0.000640, 0.720316, 0, 1.0};
Point(60) = {0.005638, 0.720551, 0, 1.0};
Point(61) = {0.010632, 0.720830, 0, 1.0};
Point(62) = {0.015623, 0.721150, 0, 1.0};
Point(63) = {0.020611, 0.721509, 0, 1.0};
Point(64) = {0.025594, 0.721912, 0, 1.0};
Point(65) = {0.030574, 0.722362, 0, 1.0};
Point(66) = {0.035550, 0.722865, 0, 1.0};
Point(67) = {0.040520, 0.723427, 0, 1.0};
Point(68) = {0.045485, 0.724049, 0, 1.0};
Point(69) = {0.050445, 0.724730, 0, 1.0};
Point(70) = {0.055400, 0.725470, 0, 1.0};
Point(71) = {0.060351, 0.726270, 0, 1.0};
Point(72) = {0.065295, 0.727133, 0, 1.0};
Point(73) = {0.070235, 0.728061, 0, 1.0};
Point(74) = {0.075169, 0.729051, 0, 1.0};
Point(75) = {0.080098, 0.730093, 0, 1.0};
Point(76) = {0.085025, 0.731174, 0, 1.0};
Point(77) = {0.089949, 0.732282, 0, 1.0};
Point(78) = {0.094872, 0.733401, 0, 1.0};
Point(79) = {0.099795, 0.734522, 0, 1.0};
Point(80) = {0.104719, 0.735627, 0, 1.0};
Point(81) = {0.109646, 0.736699, 0, 1.0};
Point(82) = {0.114578, 0.737716, 0, 1.0};
Point(83) = {0.119516, 0.738658, 0, 1.0};
Point(84) = {0.124461, 0.739509, 0, 1.0};
Point(85) = {0.129417, 0.740251, 0, 1.0};
Point(86) = {0.134383, 0.740858, 0, 1.0};
Point(87) = {0.139364, 0.741297, 0, 1.0};
Point(88) = {0.144363, 0.741516, 0, 1.0};
Point(89) = {0.149388, 0.741438, 0, 1.0};
Point(90) = {-0.149293, -0.742550, 0, 1.0};
Point(91) = {-0.144224, -0.743158, 0, 1.0};
Point(92) = {-0.139155, -0.743757, 0, 1.0};
Point(93) = {-0.134086, -0.744357, 0, 1.0};
Point(94) = {-0.129018, -0.744956, 0, 1.0};
Point(95) = {-0.123949, -0.745550, 0, 1.0};
Point(96) = {-0.118881, -0.746141, 0, 1.0};
Point(97) = {-0.113814, -0.746721, 0, 1.0};
Point(98) = {-0.108750, -0.747273, 0, 1.0};
Point(99) = {-0.103688, -0.747791, 0, 1.0};
Point(100) = {-0.098629, -0.748270, 0, 1.0};
Point(101) = {-0.093575, -0.748703, 0, 1.0};
Point(102) = {-0.088524, -0.749084, 0, 1.0};
Point(103) = {-0.083479, -0.749408, 0, 1.0};
Point(104) = {-0.078439, -0.749666, 0, 1.0};
Point(105) = {-0.073405, -0.749853, 0, 1.0};
Point(106) = {-0.068378, -0.749964, 0, 1.0};
Point(107) = {-0.063357, -0.750000, 0, 1.0};
Point(108) = {-0.058342, -0.749963, 0, 1.0};
Point(109) = {-0.053333, -0.749859, 0, 1.0};
Point(110) = {-0.048329, -0.749694, 0, 1.0};
Point(111) = {-0.043330, -0.749472, 0, 1.0};
Point(112) = {-0.038335, -0.749200, 0, 1.0};
Point(113) = {-0.033345, -0.748880, 0, 1.0};
Point(114) = {-0.028358, -0.748511, 0, 1.0};
Point(115) = {-0.023375, -0.748094, 0, 1.0};
Point(116) = {-0.018397, -0.747631, 0, 1.0};
Point(117) = {-0.013422, -0.747121, 0, 1.0};
Point(118) = {-0.008451, -0.746562, 0, 1.0};
Point(119) = {-0.003485, -0.745949, 0, 1.0};
Point(120) = {0.001476, -0.745276, 0, 1.0};
Point(121) = {0.006431, -0.744539, 0, 1.0};
Point(122) = {0.011381, -0.743733, 0, 1.0};
Point(123) = {0.016324, -0.742851, 0, 1.0};
Point(124) = {0.021259, -0.741876, 0, 1.0};
Point(125) = {0.026184, -0.740779, 0, 1.0};
Point(126) = {0.031095, -0.739520, 0, 1.0};
Point(127) = {0.035985, -0.738014, 0, 1.0};
Point(128) = {0.040837, -0.736050, 0, 1.0};
Point(129) = {0.043234, -0.734731, 0, 1.0};
Point(130) = {0.045600, -0.733040, 0, 1.0};
Point(131) = {0.047919, -0.730804, 0, 1.0};
Point(132) = {0.049259, -0.728850, 0, 1.0};
Point(133) = {0.049761, -0.727675, 0, 1.0};
Point(134) = {0.050017, -0.725949, 0, 1.0};
Point(135) = {0.049495, -0.724537, 0, 1.0};
Point(136) = {0.048835, -0.723849, 0, 1.0};
Point(137) = {0.047251, -0.722926, 0, 1.0};
Point(138) = {0.044670, -0.722071, 0, 1.0};
Point(139) = {0.042115, -0.721523, 0, 1.0};
Point(140) = {0.039572, -0.721126, 0, 1.0};
Point(141) = {0.034508, -0.720587, 0, 1.0};
Point(142) = {0.029462, -0.720252, 0, 1.0};
Point(143) = {0.024427, -0.720051, 0, 1.0};
Point(144) = {0.019401, -0.719953, 0, 1.0};
Point(145) = {0.014382, -0.719940, 0, 1.0};
Point(146) = {0.009369, -0.720003, 0, 1.0};
Point(147) = {0.004362, -0.720131, 0, 1.0};
Point(148) = {-0.000640, -0.720316, 0, 1.0};
Point(149) = {-0.005638, -0.720551, 0, 1.0};
Point(150) = {-0.010632, -0.720830, 0, 1.0};
Point(151) = {-0.015623, -0.721150, 0, 1.0};
Point(152) = {-0.020611, -0.721509, 0, 1.0};
Point(153) = {-0.025594, -0.721912, 0, 1.0};
Point(154) = {-0.030574, -0.722362, 0, 1.0};
Point(155) = {-0.035550, -0.722865, 0, 1.0};
Point(156) = {-0.040520, -0.723427, 0, 1.0};
Point(157) = {-0.045485, -0.724049, 0, 1.0};
Point(158) = {-0.050445, -0.724730, 0, 1.0};
Point(159) = {-0.055400, -0.725470, 0, 1.0};
Point(160) = {-0.060351, -0.726270, 0, 1.0};
Point(161) = {-0.065295, -0.727133, 0, 1.0};
Point(162) = {-0.070235, -0.728061, 0, 1.0};
Point(163) = {-0.075169, -0.729051, 0, 1.0};
Point(164) = {-0.080098, -0.730093, 0, 1.0};
Point(165) = {-0.085025, -0.731174, 0, 1.0};
Point(166) = {-0.089949, -0.732282, 0, 1.0};
Point(167) = {-0.094872, -0.733401, 0, 1.0};
Point(168) = {-0.099795, -0.734522, 0, 1.0};
Point(169) = {-0.104719, -0.735627, 0, 1.0};
Point(170) = {-0.109646, -0.736699, 0, 1.0};
Point(171) = {-0.114578, -0.737716, 0, 1.0};
Point(172) = {-0.119516, -0.738658, 0, 1.0};
Point(173) = {-0.124461, -0.739509, 0, 1.0};
Point(174) = {-0.129417, -0.740251, 0, 1.0};
Point(175) = {-0.134383, -0.740858, 0, 1.0};
Point(176) = {-0.139364, -0.741297, 0, 1.0};
Point(177) = {-0.144363, -0.741516, 0, 1.0};
Point(178) = {-0.149388, -0.741438, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:60};
Spline(3) = {60:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:149};
Spline(7) = {149:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
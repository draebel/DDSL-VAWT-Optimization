SetFactory("OpenCASCADE");

Point(1) = {0.074929, 0.738461, 0, 1.0};
Point(2) = {0.074376, 0.738598, 0, 1.0};
Point(3) = {0.072800, 0.739056, 0, 1.0};
Point(4) = {0.070382, 0.739867, 0, 1.0};
Point(5) = {0.067296, 0.740960, 0, 1.0};
Point(6) = {0.063638, 0.742207, 0, 1.0};
Point(7) = {0.059428, 0.743505, 0, 1.0};
Point(8) = {0.054677, 0.744835, 0, 1.0};
Point(9) = {0.049487, 0.746213, 0, 1.0};
Point(10) = {0.044029, 0.747552, 0, 1.0};
Point(11) = {0.038367, 0.748635, 0, 1.0};
Point(12) = {0.032373, 0.749355, 0, 1.0};
Point(13) = {0.026028, 0.749795, 0, 1.0};
Point(14) = {0.019315, 0.750000, 0, 1.0};
Point(15) = {0.012401, 0.749987, 0, 1.0};
Point(16) = {0.005324, 0.749763, 0, 1.0};
Point(17) = {-0.001839, 0.749383, 0, 1.0};
Point(18) = {-0.009019, 0.748717, 0, 1.0};
Point(19) = {-0.016139, 0.747916, 0, 1.0};
Point(20) = {-0.023133, 0.746988, 0, 1.0};
Point(21) = {-0.029917, 0.745815, 0, 1.0};
Point(22) = {-0.036435, 0.744547, 0, 1.0};
Point(23) = {-0.042619, 0.743161, 0, 1.0};
Point(24) = {-0.048407, 0.741676, 0, 1.0};
Point(25) = {-0.053741, 0.740118, 0, 1.0};
Point(26) = {-0.058566, 0.738511, 0, 1.0};
Point(27) = {-0.062841, 0.736883, 0, 1.0};
Point(28) = {-0.066520, 0.735266, 0, 1.0};
Point(29) = {-0.069571, 0.733695, 0, 1.0};
Point(30) = {-0.071959, 0.732207, 0, 1.0};
Point(31) = {-0.073664, 0.730854, 0, 1.0};
Point(32) = {-0.074652, 0.729705, 0, 1.0};
Point(33) = {-0.074778, 0.728891, 0, 1.0};
Point(34) = {-0.074220, 0.728251, 0, 1.0};
Point(35) = {-0.072133, 0.727708, 0, 1.0};
Point(36) = {-0.069516, 0.727092, 0, 1.0};
Point(37) = {-0.066134, 0.726584, 0, 1.0};
Point(38) = {-0.062036, 0.726150, 0, 1.0};
Point(39) = {-0.057277, 0.725800, 0, 1.0};
Point(40) = {-0.051920, 0.725545, 0, 1.0};
Point(41) = {-0.046030, 0.725392, 0, 1.0};
Point(42) = {-0.039679, 0.725348, 0, 1.0};
Point(43) = {-0.032945, 0.725423, 0, 1.0};
Point(44) = {-0.025910, 0.725625, 0, 1.0};
Point(45) = {-0.018657, 0.725962, 0, 1.0};
Point(46) = {-0.011275, 0.726450, 0, 1.0};
Point(47) = {-0.003857, 0.727107, 0, 1.0};
Point(48) = {0.003506, 0.727962, 0, 1.0};
Point(49) = {0.010697, 0.729126, 0, 1.0};
Point(50) = {0.017853, 0.730797, 0, 1.0};
Point(51) = {0.025275, 0.732796, 0, 1.0};
Point(52) = {0.032916, 0.734707, 0, 1.0};
Point(53) = {0.040491, 0.736314, 0, 1.0};
Point(54) = {0.047754, 0.737563, 0, 1.0};
Point(55) = {0.054492, 0.738422, 0, 1.0};
Point(56) = {0.060519, 0.738907, 0, 1.0};
Point(57) = {0.065644, 0.739052, 0, 1.0};
Point(58) = {0.069713, 0.738949, 0, 1.0};
Point(59) = {0.072622, 0.738734, 0, 1.0};
Point(60) = {0.074355, 0.738539, 0, 1.0};
Point(61) = {-0.074929, -0.738461, 0, 1.0};
Point(62) = {-0.074376, -0.738598, 0, 1.0};
Point(63) = {-0.072800, -0.739056, 0, 1.0};
Point(64) = {-0.070382, -0.739867, 0, 1.0};
Point(65) = {-0.067296, -0.740960, 0, 1.0};
Point(66) = {-0.063638, -0.742207, 0, 1.0};
Point(67) = {-0.059428, -0.743505, 0, 1.0};
Point(68) = {-0.054677, -0.744835, 0, 1.0};
Point(69) = {-0.049487, -0.746213, 0, 1.0};
Point(70) = {-0.044029, -0.747552, 0, 1.0};
Point(71) = {-0.038367, -0.748635, 0, 1.0};
Point(72) = {-0.032373, -0.749355, 0, 1.0};
Point(73) = {-0.026028, -0.749795, 0, 1.0};
Point(74) = {-0.019315, -0.750000, 0, 1.0};
Point(75) = {-0.012401, -0.749987, 0, 1.0};
Point(76) = {-0.005324, -0.749763, 0, 1.0};
Point(77) = {0.001839, -0.749383, 0, 1.0};
Point(78) = {0.009019, -0.748717, 0, 1.0};
Point(79) = {0.016139, -0.747916, 0, 1.0};
Point(80) = {0.023133, -0.746988, 0, 1.0};
Point(81) = {0.029917, -0.745815, 0, 1.0};
Point(82) = {0.036435, -0.744547, 0, 1.0};
Point(83) = {0.042619, -0.743161, 0, 1.0};
Point(84) = {0.048407, -0.741676, 0, 1.0};
Point(85) = {0.053741, -0.740118, 0, 1.0};
Point(86) = {0.058566, -0.738511, 0, 1.0};
Point(87) = {0.062841, -0.736883, 0, 1.0};
Point(88) = {0.066520, -0.735266, 0, 1.0};
Point(89) = {0.069571, -0.733695, 0, 1.0};
Point(90) = {0.071959, -0.732207, 0, 1.0};
Point(91) = {0.073664, -0.730854, 0, 1.0};
Point(92) = {0.074652, -0.729705, 0, 1.0};
Point(93) = {0.074778, -0.728891, 0, 1.0};
Point(94) = {0.074220, -0.728251, 0, 1.0};
Point(95) = {0.072133, -0.727708, 0, 1.0};
Point(96) = {0.069516, -0.727092, 0, 1.0};
Point(97) = {0.066134, -0.726584, 0, 1.0};
Point(98) = {0.062036, -0.726150, 0, 1.0};
Point(99) = {0.057277, -0.725800, 0, 1.0};
Point(100) = {0.051920, -0.725545, 0, 1.0};
Point(101) = {0.046030, -0.725392, 0, 1.0};
Point(102) = {0.039679, -0.725348, 0, 1.0};
Point(103) = {0.032945, -0.725423, 0, 1.0};
Point(104) = {0.025910, -0.725625, 0, 1.0};
Point(105) = {0.018657, -0.725962, 0, 1.0};
Point(106) = {0.011275, -0.726450, 0, 1.0};
Point(107) = {0.003857, -0.727107, 0, 1.0};
Point(108) = {-0.003506, -0.727962, 0, 1.0};
Point(109) = {-0.010697, -0.729126, 0, 1.0};
Point(110) = {-0.017853, -0.730797, 0, 1.0};
Point(111) = {-0.025275, -0.732796, 0, 1.0};
Point(112) = {-0.032916, -0.734707, 0, 1.0};
Point(113) = {-0.040491, -0.736314, 0, 1.0};
Point(114) = {-0.047754, -0.737563, 0, 1.0};
Point(115) = {-0.054492, -0.738422, 0, 1.0};
Point(116) = {-0.060519, -0.738907, 0, 1.0};
Point(117) = {-0.065644, -0.739052, 0, 1.0};
Point(118) = {-0.069713, -0.738949, 0, 1.0};
Point(119) = {-0.072622, -0.738734, 0, 1.0};
Point(120) = {-0.074355, -0.738539, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
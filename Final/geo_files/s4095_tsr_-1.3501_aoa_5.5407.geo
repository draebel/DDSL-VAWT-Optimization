SetFactory("OpenCASCADE");

Point(1) = {0.074945, 0.731048, 0, 1.0};
Point(2) = {0.074130, 0.731178, 0, 1.0};
Point(3) = {0.071873, 0.731606, 0, 1.0};
Point(4) = {0.068820, 0.732182, 0, 1.0};
Point(5) = {0.064985, 0.732901, 0, 1.0};
Point(6) = {0.060421, 0.733768, 0, 1.0};
Point(7) = {0.055192, 0.734776, 0, 1.0};
Point(8) = {0.049371, 0.735911, 0, 1.0};
Point(9) = {0.043035, 0.737154, 0, 1.0};
Point(10) = {0.036267, 0.738484, 0, 1.0};
Point(11) = {0.029153, 0.739876, 0, 1.0};
Point(12) = {0.021784, 0.741303, 0, 1.0};
Point(13) = {0.014249, 0.742733, 0, 1.0};
Point(14) = {0.006641, 0.744131, 0, 1.0};
Point(15) = {-0.000947, 0.745457, 0, 1.0};
Point(16) = {-0.008445, 0.746656, 0, 1.0};
Point(17) = {-0.015796, 0.747697, 0, 1.0};
Point(18) = {-0.022936, 0.748566, 0, 1.0};
Point(19) = {-0.029801, 0.749243, 0, 1.0};
Point(20) = {-0.036330, 0.749714, 0, 1.0};
Point(21) = {-0.042469, 0.749969, 0, 1.0};
Point(22) = {-0.048170, 0.750000, 0, 1.0};
Point(23) = {-0.053390, 0.749809, 0, 1.0};
Point(24) = {-0.058091, 0.749399, 0, 1.0};
Point(25) = {-0.062243, 0.748784, 0, 1.0};
Point(26) = {-0.065822, 0.747982, 0, 1.0};
Point(27) = {-0.068810, 0.747019, 0, 1.0};
Point(28) = {-0.071193, 0.745929, 0, 1.0};
Point(29) = {-0.072967, 0.744761, 0, 1.0};
Point(30) = {-0.074119, 0.743577, 0, 1.0};
Point(31) = {-0.074650, 0.742484, 0, 1.0};
Point(32) = {-0.074362, 0.741561, 0, 1.0};
Point(33) = {-0.073169, 0.740703, 0, 1.0};
Point(34) = {-0.071182, 0.739861, 0, 1.0};
Point(35) = {-0.068404, 0.739070, 0, 1.0};
Point(36) = {-0.064850, 0.738330, 0, 1.0};
Point(37) = {-0.060540, 0.737637, 0, 1.0};
Point(38) = {-0.055515, 0.736980, 0, 1.0};
Point(39) = {-0.049821, 0.736351, 0, 1.0};
Point(40) = {-0.043521, 0.735736, 0, 1.0};
Point(41) = {-0.036686, 0.735126, 0, 1.0};
Point(42) = {-0.029396, 0.734512, 0, 1.0};
Point(43) = {-0.021738, 0.733888, 0, 1.0};
Point(44) = {-0.013807, 0.733248, 0, 1.0};
Point(45) = {-0.005701, 0.732593, 0, 1.0};
Point(46) = {0.002479, 0.731925, 0, 1.0};
Point(47) = {0.010635, 0.731251, 0, 1.0};
Point(48) = {0.018670, 0.730576, 0, 1.0};
Point(49) = {0.026487, 0.729907, 0, 1.0};
Point(50) = {0.033995, 0.729251, 0, 1.0};
Point(51) = {0.041103, 0.728615, 0, 1.0};
Point(52) = {0.047728, 0.728005, 0, 1.0};
Point(53) = {0.053788, 0.727431, 0, 1.0};
Point(54) = {0.059212, 0.726900, 0, 1.0};
Point(55) = {0.063932, 0.726420, 0, 1.0};
Point(56) = {0.067886, 0.726002, 0, 1.0};
Point(57) = {0.071030, 0.725665, 0, 1.0};
Point(58) = {0.073346, 0.725408, 0, 1.0};
Point(59) = {0.074384, 0.725264, 0, 1.0};
Point(60) = {-0.074945, -0.731048, 0, 1.0};
Point(61) = {-0.074130, -0.731178, 0, 1.0};
Point(62) = {-0.071873, -0.731606, 0, 1.0};
Point(63) = {-0.068820, -0.732182, 0, 1.0};
Point(64) = {-0.064985, -0.732901, 0, 1.0};
Point(65) = {-0.060421, -0.733768, 0, 1.0};
Point(66) = {-0.055192, -0.734776, 0, 1.0};
Point(67) = {-0.049371, -0.735911, 0, 1.0};
Point(68) = {-0.043035, -0.737154, 0, 1.0};
Point(69) = {-0.036267, -0.738484, 0, 1.0};
Point(70) = {-0.029153, -0.739876, 0, 1.0};
Point(71) = {-0.021784, -0.741303, 0, 1.0};
Point(72) = {-0.014249, -0.742733, 0, 1.0};
Point(73) = {-0.006641, -0.744131, 0, 1.0};
Point(74) = {0.000947, -0.745457, 0, 1.0};
Point(75) = {0.008445, -0.746656, 0, 1.0};
Point(76) = {0.015796, -0.747697, 0, 1.0};
Point(77) = {0.022936, -0.748566, 0, 1.0};
Point(78) = {0.029801, -0.749243, 0, 1.0};
Point(79) = {0.036330, -0.749714, 0, 1.0};
Point(80) = {0.042469, -0.749969, 0, 1.0};
Point(81) = {0.048170, -0.750000, 0, 1.0};
Point(82) = {0.053390, -0.749809, 0, 1.0};
Point(83) = {0.058091, -0.749399, 0, 1.0};
Point(84) = {0.062243, -0.748784, 0, 1.0};
Point(85) = {0.065822, -0.747982, 0, 1.0};
Point(86) = {0.068810, -0.747019, 0, 1.0};
Point(87) = {0.071193, -0.745929, 0, 1.0};
Point(88) = {0.072967, -0.744761, 0, 1.0};
Point(89) = {0.074119, -0.743577, 0, 1.0};
Point(90) = {0.074650, -0.742484, 0, 1.0};
Point(91) = {0.074362, -0.741561, 0, 1.0};
Point(92) = {0.073169, -0.740703, 0, 1.0};
Point(93) = {0.071182, -0.739861, 0, 1.0};
Point(94) = {0.068404, -0.739070, 0, 1.0};
Point(95) = {0.064850, -0.738330, 0, 1.0};
Point(96) = {0.060540, -0.737637, 0, 1.0};
Point(97) = {0.055515, -0.736980, 0, 1.0};
Point(98) = {0.049821, -0.736351, 0, 1.0};
Point(99) = {0.043521, -0.735736, 0, 1.0};
Point(100) = {0.036686, -0.735126, 0, 1.0};
Point(101) = {0.029396, -0.734512, 0, 1.0};
Point(102) = {0.021738, -0.733888, 0, 1.0};
Point(103) = {0.013807, -0.733248, 0, 1.0};
Point(104) = {0.005701, -0.732593, 0, 1.0};
Point(105) = {-0.002479, -0.731925, 0, 1.0};
Point(106) = {-0.010635, -0.731251, 0, 1.0};
Point(107) = {-0.018670, -0.730576, 0, 1.0};
Point(108) = {-0.026487, -0.729907, 0, 1.0};
Point(109) = {-0.033995, -0.729251, 0, 1.0};
Point(110) = {-0.041103, -0.728615, 0, 1.0};
Point(111) = {-0.047728, -0.728005, 0, 1.0};
Point(112) = {-0.053788, -0.727431, 0, 1.0};
Point(113) = {-0.059212, -0.726900, 0, 1.0};
Point(114) = {-0.063932, -0.726420, 0, 1.0};
Point(115) = {-0.067886, -0.726002, 0, 1.0};
Point(116) = {-0.071030, -0.725665, 0, 1.0};
Point(117) = {-0.073346, -0.725408, 0, 1.0};
Point(118) = {-0.074384, -0.725264, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:41};
Spline(3) = {41:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:78};
Spline(6) = {78:100};
Spline(7) = {100:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {36.00000000, 15.00000000, 0, 1.0};
Point(122) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
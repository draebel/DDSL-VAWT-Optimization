SetFactory("OpenCASCADE");

Point(1) = {0.074452, 0.721105, 0, 1.0};
Point(2) = {0.072058, 0.721583, 0, 1.0};
Point(3) = {0.069047, 0.722242, 0, 1.0};
Point(4) = {0.065776, 0.723035, 0, 1.0};
Point(5) = {0.062261, 0.723971, 0, 1.0};
Point(6) = {0.058519, 0.725049, 0, 1.0};
Point(7) = {0.054565, 0.726264, 0, 1.0};
Point(8) = {0.050417, 0.727614, 0, 1.0};
Point(9) = {0.046091, 0.729096, 0, 1.0};
Point(10) = {0.041608, 0.730705, 0, 1.0};
Point(11) = {0.036987, 0.732433, 0, 1.0};
Point(12) = {0.032245, 0.734257, 0, 1.0};
Point(13) = {0.027398, 0.736142, 0, 1.0};
Point(14) = {0.022466, 0.738057, 0, 1.0};
Point(15) = {0.017463, 0.739963, 0, 1.0};
Point(16) = {0.012409, 0.741813, 0, 1.0};
Point(17) = {0.007316, 0.743534, 0, 1.0};
Point(18) = {0.002199, 0.745065, 0, 1.0};
Point(19) = {-0.002924, 0.746374, 0, 1.0};
Point(20) = {-0.008031, 0.747458, 0, 1.0};
Point(21) = {-0.013096, 0.748328, 0, 1.0};
Point(22) = {-0.018097, 0.748998, 0, 1.0};
Point(23) = {-0.023009, 0.749485, 0, 1.0};
Point(24) = {-0.027808, 0.749811, 0, 1.0};
Point(25) = {-0.032474, 0.749984, 0, 1.0};
Point(26) = {-0.036986, 0.750000, 0, 1.0};
Point(27) = {-0.041324, 0.749859, 0, 1.0};
Point(28) = {-0.045468, 0.749571, 0, 1.0};
Point(29) = {-0.049400, 0.749154, 0, 1.0};
Point(30) = {-0.053102, 0.748618, 0, 1.0};
Point(31) = {-0.056557, 0.747972, 0, 1.0};
Point(32) = {-0.059746, 0.747229, 0, 1.0};
Point(33) = {-0.062657, 0.746410, 0, 1.0};
Point(34) = {-0.065273, 0.745547, 0, 1.0};
Point(35) = {-0.067579, 0.744660, 0, 1.0};
Point(36) = {-0.069565, 0.743766, 0, 1.0};
Point(37) = {-0.071222, 0.742862, 0, 1.0};
Point(38) = {-0.072543, 0.741958, 0, 1.0};
Point(39) = {-0.073520, 0.741090, 0, 1.0};
Point(40) = {-0.074141, 0.740306, 0, 1.0};
Point(41) = {-0.074401, 0.739623, 0, 1.0};
Point(42) = {-0.074306, 0.739005, 0, 1.0};
Point(43) = {-0.073861, 0.738406, 0, 1.0};
Point(44) = {-0.073070, 0.737816, 0, 1.0};
Point(45) = {-0.071935, 0.737246, 0, 1.0};
Point(46) = {-0.070464, 0.736694, 0, 1.0};
Point(47) = {-0.068663, 0.736127, 0, 1.0};
Point(48) = {-0.066548, 0.735517, 0, 1.0};
Point(49) = {-0.064124, 0.734866, 0, 1.0};
Point(50) = {-0.061403, 0.734192, 0, 1.0};
Point(51) = {-0.058395, 0.733511, 0, 1.0};
Point(52) = {-0.055109, 0.732829, 0, 1.0};
Point(53) = {-0.051563, 0.732144, 0, 1.0};
Point(54) = {-0.047771, 0.731454, 0, 1.0};
Point(55) = {-0.043751, 0.730759, 0, 1.0};
Point(56) = {-0.039520, 0.730064, 0, 1.0};
Point(57) = {-0.035094, 0.729375, 0, 1.0};
Point(58) = {-0.030493, 0.728689, 0, 1.0};
Point(59) = {-0.025739, 0.728009, 0, 1.0};
Point(60) = {-0.020850, 0.727338, 0, 1.0};
Point(61) = {-0.015847, 0.726686, 0, 1.0};
Point(62) = {-0.010750, 0.726066, 0, 1.0};
Point(63) = {-0.005579, 0.725485, 0, 1.0};
Point(64) = {-0.000358, 0.724947, 0, 1.0};
Point(65) = {0.004891, 0.724450, 0, 1.0};
Point(66) = {0.010143, 0.723982, 0, 1.0};
Point(67) = {0.015374, 0.723525, 0, 1.0};
Point(68) = {0.020562, 0.723075, 0, 1.0};
Point(69) = {0.025682, 0.722637, 0, 1.0};
Point(70) = {0.030714, 0.722215, 0, 1.0};
Point(71) = {0.035637, 0.721814, 0, 1.0};
Point(72) = {0.040431, 0.721445, 0, 1.0};
Point(73) = {0.045077, 0.721117, 0, 1.0};
Point(74) = {0.049556, 0.720837, 0, 1.0};
Point(75) = {0.053844, 0.720590, 0, 1.0};
Point(76) = {0.057923, 0.720360, 0, 1.0};
Point(77) = {0.061775, 0.720147, 0, 1.0};
Point(78) = {0.065384, 0.719958, 0, 1.0};
Point(79) = {0.068737, 0.719806, 0, 1.0};
Point(80) = {0.071817, 0.719692, 0, 1.0};
Point(81) = {0.074262, 0.719612, 0, 1.0};
Point(82) = {-0.074452, -0.721105, 0, 1.0};
Point(83) = {-0.072058, -0.721583, 0, 1.0};
Point(84) = {-0.069047, -0.722242, 0, 1.0};
Point(85) = {-0.065776, -0.723035, 0, 1.0};
Point(86) = {-0.062261, -0.723971, 0, 1.0};
Point(87) = {-0.058519, -0.725049, 0, 1.0};
Point(88) = {-0.054565, -0.726264, 0, 1.0};
Point(89) = {-0.050417, -0.727614, 0, 1.0};
Point(90) = {-0.046091, -0.729096, 0, 1.0};
Point(91) = {-0.041608, -0.730705, 0, 1.0};
Point(92) = {-0.036987, -0.732433, 0, 1.0};
Point(93) = {-0.032245, -0.734257, 0, 1.0};
Point(94) = {-0.027398, -0.736142, 0, 1.0};
Point(95) = {-0.022466, -0.738057, 0, 1.0};
Point(96) = {-0.017463, -0.739963, 0, 1.0};
Point(97) = {-0.012409, -0.741813, 0, 1.0};
Point(98) = {-0.007316, -0.743534, 0, 1.0};
Point(99) = {-0.002199, -0.745065, 0, 1.0};
Point(100) = {0.002924, -0.746374, 0, 1.0};
Point(101) = {0.008031, -0.747458, 0, 1.0};
Point(102) = {0.013096, -0.748328, 0, 1.0};
Point(103) = {0.018097, -0.748998, 0, 1.0};
Point(104) = {0.023009, -0.749485, 0, 1.0};
Point(105) = {0.027808, -0.749811, 0, 1.0};
Point(106) = {0.032474, -0.749984, 0, 1.0};
Point(107) = {0.036986, -0.750000, 0, 1.0};
Point(108) = {0.041324, -0.749859, 0, 1.0};
Point(109) = {0.045468, -0.749571, 0, 1.0};
Point(110) = {0.049400, -0.749154, 0, 1.0};
Point(111) = {0.053102, -0.748618, 0, 1.0};
Point(112) = {0.056557, -0.747972, 0, 1.0};
Point(113) = {0.059746, -0.747229, 0, 1.0};
Point(114) = {0.062657, -0.746410, 0, 1.0};
Point(115) = {0.065273, -0.745547, 0, 1.0};
Point(116) = {0.067579, -0.744660, 0, 1.0};
Point(117) = {0.069565, -0.743766, 0, 1.0};
Point(118) = {0.071222, -0.742862, 0, 1.0};
Point(119) = {0.072543, -0.741958, 0, 1.0};
Point(120) = {0.073520, -0.741090, 0, 1.0};
Point(121) = {0.074141, -0.740306, 0, 1.0};
Point(122) = {0.074401, -0.739623, 0, 1.0};
Point(123) = {0.074306, -0.739005, 0, 1.0};
Point(124) = {0.073861, -0.738406, 0, 1.0};
Point(125) = {0.073070, -0.737816, 0, 1.0};
Point(126) = {0.071935, -0.737246, 0, 1.0};
Point(127) = {0.070464, -0.736694, 0, 1.0};
Point(128) = {0.068663, -0.736127, 0, 1.0};
Point(129) = {0.066548, -0.735517, 0, 1.0};
Point(130) = {0.064124, -0.734866, 0, 1.0};
Point(131) = {0.061403, -0.734192, 0, 1.0};
Point(132) = {0.058395, -0.733511, 0, 1.0};
Point(133) = {0.055109, -0.732829, 0, 1.0};
Point(134) = {0.051563, -0.732144, 0, 1.0};
Point(135) = {0.047771, -0.731454, 0, 1.0};
Point(136) = {0.043751, -0.730759, 0, 1.0};
Point(137) = {0.039520, -0.730064, 0, 1.0};
Point(138) = {0.035094, -0.729375, 0, 1.0};
Point(139) = {0.030493, -0.728689, 0, 1.0};
Point(140) = {0.025739, -0.728009, 0, 1.0};
Point(141) = {0.020850, -0.727338, 0, 1.0};
Point(142) = {0.015847, -0.726686, 0, 1.0};
Point(143) = {0.010750, -0.726066, 0, 1.0};
Point(144) = {0.005579, -0.725485, 0, 1.0};
Point(145) = {0.000358, -0.724947, 0, 1.0};
Point(146) = {-0.004891, -0.724450, 0, 1.0};
Point(147) = {-0.010143, -0.723982, 0, 1.0};
Point(148) = {-0.015374, -0.723525, 0, 1.0};
Point(149) = {-0.020562, -0.723075, 0, 1.0};
Point(150) = {-0.025682, -0.722637, 0, 1.0};
Point(151) = {-0.030714, -0.722215, 0, 1.0};
Point(152) = {-0.035637, -0.721814, 0, 1.0};
Point(153) = {-0.040431, -0.721445, 0, 1.0};
Point(154) = {-0.045077, -0.721117, 0, 1.0};
Point(155) = {-0.049556, -0.720837, 0, 1.0};
Point(156) = {-0.053844, -0.720590, 0, 1.0};
Point(157) = {-0.057923, -0.720360, 0, 1.0};
Point(158) = {-0.061775, -0.720147, 0, 1.0};
Point(159) = {-0.065384, -0.719958, 0, 1.0};
Point(160) = {-0.068737, -0.719806, 0, 1.0};
Point(161) = {-0.071817, -0.719692, 0, 1.0};
Point(162) = {-0.074262, -0.719612, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {36.00000000, 15.00000000, 0, 1.0};
Point(166) = {36.00000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
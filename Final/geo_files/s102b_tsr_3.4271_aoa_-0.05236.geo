SetFactory("OpenCASCADE");

Point(1) = {0.112500, 0.736560, 0, 1.0};
Point(2) = {0.112033, 0.736663, 0, 1.0};
Point(3) = {0.110638, 0.736969, 0, 1.0};
Point(4) = {0.108332, 0.737474, 0, 1.0};
Point(5) = {0.105144, 0.738171, 0, 1.0};
Point(6) = {0.101111, 0.739045, 0, 1.0};
Point(7) = {0.096283, 0.740074, 0, 1.0};
Point(8) = {0.091093, 0.741148, 0, 1.0};
Point(9) = {0.085322, 0.742289, 0, 1.0};
Point(10) = {0.079066, 0.743492, 0, 1.0};
Point(11) = {0.072427, 0.744731, 0, 1.0};
Point(12) = {0.065508, 0.745970, 0, 1.0};
Point(13) = {0.058409, 0.747159, 0, 1.0};
Point(14) = {0.051227, 0.748241, 0, 1.0};
Point(15) = {0.044057, 0.749127, 0, 1.0};
Point(16) = {0.036909, 0.749710, 0, 1.0};
Point(17) = {0.029729, 0.749975, 0, 1.0};
Point(18) = {0.022543, 0.750000, 0, 1.0};
Point(19) = {0.015431, 0.749835, 0, 1.0};
Point(20) = {0.008481, 0.749503, 0, 1.0};
Point(21) = {0.001775, 0.749026, 0, 1.0};
Point(22) = {-0.004606, 0.748420, 0, 1.0};
Point(23) = {-0.010580, 0.747703, 0, 1.0};
Point(24) = {-0.016064, 0.746887, 0, 1.0};
Point(25) = {-0.020981, 0.745981, 0, 1.0};
Point(26) = {-0.025237, 0.744964, 0, 1.0};
Point(27) = {-0.028802, 0.743767, 0, 1.0};
Point(28) = {-0.031738, 0.742377, 0, 1.0};
Point(29) = {-0.034083, 0.740866, 0, 1.0};
Point(30) = {-0.035827, 0.739316, 0, 1.0};
Point(31) = {-0.036966, 0.737806, 0, 1.0};
Point(32) = {-0.037475, 0.736448, 0, 1.0};
Point(33) = {-0.037499, 0.736181, 0, 1.0};
Point(34) = {-0.037486, 0.735902, 0, 1.0};
Point(35) = {-0.037419, 0.735661, 0, 1.0};
Point(36) = {-0.037273, 0.735442, 0, 1.0};
Point(37) = {-0.037049, 0.735223, 0, 1.0};
Point(38) = {-0.035972, 0.734527, 0, 1.0};
Point(39) = {-0.033820, 0.733636, 0, 1.0};
Point(40) = {-0.030861, 0.732764, 0, 1.0};
Point(41) = {-0.027152, 0.731916, 0, 1.0};
Point(42) = {-0.022750, 0.731101, 0, 1.0};
Point(43) = {-0.017725, 0.730327, 0, 1.0};
Point(44) = {-0.012141, 0.729610, 0, 1.0};
Point(45) = {-0.006079, 0.728965, 0, 1.0};
Point(46) = {0.000382, 0.728408, 0, 1.0};
Point(47) = {0.007161, 0.727963, 0, 1.0};
Point(48) = {0.014169, 0.727653, 0, 1.0};
Point(49) = {0.021320, 0.727512, 0, 1.0};
Point(50) = {0.028524, 0.727579, 0, 1.0};
Point(51) = {0.035688, 0.727947, 0, 1.0};
Point(52) = {0.042862, 0.728764, 0, 1.0};
Point(53) = {0.050235, 0.729975, 0, 1.0};
Point(54) = {0.057820, 0.731332, 0, 1.0};
Point(55) = {0.065471, 0.732660, 0, 1.0};
Point(56) = {0.073025, 0.733866, 0, 1.0};
Point(57) = {0.080323, 0.734880, 0, 1.0};
Point(58) = {0.087203, 0.735671, 0, 1.0};
Point(59) = {0.093514, 0.736215, 0, 1.0};
Point(60) = {0.099109, 0.736517, 0, 1.0};
Point(61) = {0.103842, 0.736609, 0, 1.0};
Point(62) = {0.107601, 0.736554, 0, 1.0};
Point(63) = {0.110316, 0.736430, 0, 1.0};
Point(64) = {0.111954, 0.736310, 0, 1.0};
Point(65) = {0.112500, 0.736260, 0, 1.0};
Point(66) = {-0.112500, -0.736560, 0, 1.0};
Point(67) = {-0.112033, -0.736663, 0, 1.0};
Point(68) = {-0.110638, -0.736969, 0, 1.0};
Point(69) = {-0.108332, -0.737474, 0, 1.0};
Point(70) = {-0.105144, -0.738171, 0, 1.0};
Point(71) = {-0.101111, -0.739045, 0, 1.0};
Point(72) = {-0.096283, -0.740074, 0, 1.0};
Point(73) = {-0.091093, -0.741148, 0, 1.0};
Point(74) = {-0.085322, -0.742289, 0, 1.0};
Point(75) = {-0.079066, -0.743492, 0, 1.0};
Point(76) = {-0.072427, -0.744731, 0, 1.0};
Point(77) = {-0.065508, -0.745970, 0, 1.0};
Point(78) = {-0.058409, -0.747159, 0, 1.0};
Point(79) = {-0.051227, -0.748241, 0, 1.0};
Point(80) = {-0.044057, -0.749127, 0, 1.0};
Point(81) = {-0.036909, -0.749710, 0, 1.0};
Point(82) = {-0.029729, -0.749975, 0, 1.0};
Point(83) = {-0.022543, -0.750000, 0, 1.0};
Point(84) = {-0.015431, -0.749835, 0, 1.0};
Point(85) = {-0.008481, -0.749503, 0, 1.0};
Point(86) = {-0.001775, -0.749026, 0, 1.0};
Point(87) = {0.004606, -0.748420, 0, 1.0};
Point(88) = {0.010580, -0.747703, 0, 1.0};
Point(89) = {0.016064, -0.746887, 0, 1.0};
Point(90) = {0.020981, -0.745981, 0, 1.0};
Point(91) = {0.025237, -0.744964, 0, 1.0};
Point(92) = {0.028802, -0.743767, 0, 1.0};
Point(93) = {0.031738, -0.742377, 0, 1.0};
Point(94) = {0.034083, -0.740866, 0, 1.0};
Point(95) = {0.035827, -0.739316, 0, 1.0};
Point(96) = {0.036966, -0.737806, 0, 1.0};
Point(97) = {0.037475, -0.736448, 0, 1.0};
Point(98) = {0.037499, -0.736181, 0, 1.0};
Point(99) = {0.037486, -0.735902, 0, 1.0};
Point(100) = {0.037419, -0.735661, 0, 1.0};
Point(101) = {0.037273, -0.735442, 0, 1.0};
Point(102) = {0.037049, -0.735223, 0, 1.0};
Point(103) = {0.035972, -0.734527, 0, 1.0};
Point(104) = {0.033820, -0.733636, 0, 1.0};
Point(105) = {0.030861, -0.732764, 0, 1.0};
Point(106) = {0.027152, -0.731916, 0, 1.0};
Point(107) = {0.022750, -0.731101, 0, 1.0};
Point(108) = {0.017725, -0.730327, 0, 1.0};
Point(109) = {0.012141, -0.729610, 0, 1.0};
Point(110) = {0.006079, -0.728965, 0, 1.0};
Point(111) = {-0.000382, -0.728408, 0, 1.0};
Point(112) = {-0.007161, -0.727963, 0, 1.0};
Point(113) = {-0.014169, -0.727653, 0, 1.0};
Point(114) = {-0.021320, -0.727512, 0, 1.0};
Point(115) = {-0.028524, -0.727579, 0, 1.0};
Point(116) = {-0.035688, -0.727947, 0, 1.0};
Point(117) = {-0.042862, -0.728764, 0, 1.0};
Point(118) = {-0.050235, -0.729975, 0, 1.0};
Point(119) = {-0.057820, -0.731332, 0, 1.0};
Point(120) = {-0.065471, -0.732660, 0, 1.0};
Point(121) = {-0.073025, -0.733866, 0, 1.0};
Point(122) = {-0.080323, -0.734880, 0, 1.0};
Point(123) = {-0.087203, -0.735671, 0, 1.0};
Point(124) = {-0.093514, -0.736215, 0, 1.0};
Point(125) = {-0.099109, -0.736517, 0, 1.0};
Point(126) = {-0.103842, -0.736609, 0, 1.0};
Point(127) = {-0.107601, -0.736554, 0, 1.0};
Point(128) = {-0.110316, -0.736430, 0, 1.0};
Point(129) = {-0.111954, -0.736310, 0, 1.0};
Point(130) = {-0.112500, -0.736260, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:47};
Spline(3) = {47:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:112};
Spline(7) = {112:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074281, 0.744314, 0, 1.0};
Point(2) = {0.073708, 0.744330, 0, 1.0};
Point(3) = {0.072043, 0.744430, 0, 1.0};
Point(4) = {0.069415, 0.744675, 0, 1.0};
Point(5) = {0.065951, 0.745040, 0, 1.0};
Point(6) = {0.061726, 0.745479, 0, 1.0};
Point(7) = {0.056778, 0.745981, 0, 1.0};
Point(8) = {0.051192, 0.746576, 0, 1.0};
Point(9) = {0.045094, 0.747274, 0, 1.0};
Point(10) = {0.038625, 0.748049, 0, 1.0};
Point(11) = {0.031941, 0.748854, 0, 1.0};
Point(12) = {0.025205, 0.749566, 0, 1.0};
Point(13) = {0.018465, 0.749976, 0, 1.0};
Point(14) = {0.011602, 0.750000, 0, 1.0};
Point(15) = {0.004587, 0.749726, 0, 1.0};
Point(16) = {-0.002499, 0.749209, 0, 1.0};
Point(17) = {-0.009576, 0.748463, 0, 1.0};
Point(18) = {-0.016572, 0.747504, 0, 1.0};
Point(19) = {-0.023417, 0.746342, 0, 1.0};
Point(20) = {-0.030046, 0.744990, 0, 1.0};
Point(21) = {-0.036398, 0.743469, 0, 1.0};
Point(22) = {-0.042411, 0.741800, 0, 1.0};
Point(23) = {-0.048027, 0.740006, 0, 1.0};
Point(24) = {-0.053197, 0.738108, 0, 1.0};
Point(25) = {-0.057873, 0.736136, 0, 1.0};
Point(26) = {-0.062017, 0.734122, 0, 1.0};
Point(27) = {-0.065590, 0.732094, 0, 1.0};
Point(28) = {-0.068572, 0.730090, 0, 1.0};
Point(29) = {-0.070945, 0.728155, 0, 1.0};
Point(30) = {-0.072688, 0.726342, 0, 1.0};
Point(31) = {-0.073790, 0.724706, 0, 1.0};
Point(32) = {-0.074245, 0.723338, 0, 1.0};
Point(33) = {-0.073881, 0.722372, 0, 1.0};
Point(34) = {-0.072579, 0.721694, 0, 1.0};
Point(35) = {-0.070424, 0.721159, 0, 1.0};
Point(36) = {-0.067473, 0.720799, 0, 1.0};
Point(37) = {-0.063768, 0.720620, 0, 1.0};
Point(38) = {-0.059341, 0.720619, 0, 1.0};
Point(39) = {-0.054243, 0.720784, 0, 1.0};
Point(40) = {-0.048539, 0.721104, 0, 1.0};
Point(41) = {-0.042300, 0.721572, 0, 1.0};
Point(42) = {-0.035598, 0.722180, 0, 1.0};
Point(43) = {-0.028515, 0.722918, 0, 1.0};
Point(44) = {-0.021132, 0.723778, 0, 1.0};
Point(45) = {-0.013539, 0.724752, 0, 1.0};
Point(46) = {-0.005821, 0.725828, 0, 1.0};
Point(47) = {0.001929, 0.726995, 0, 1.0};
Point(48) = {0.009619, 0.728246, 0, 1.0};
Point(49) = {0.017156, 0.729566, 0, 1.0};
Point(50) = {0.024441, 0.730956, 0, 1.0};
Point(51) = {0.031376, 0.732421, 0, 1.0};
Point(52) = {0.037856, 0.734020, 0, 1.0};
Point(53) = {0.043914, 0.735882, 0, 1.0};
Point(54) = {0.049746, 0.737934, 0, 1.0};
Point(55) = {0.055368, 0.739894, 0, 1.0};
Point(56) = {0.060604, 0.741554, 0, 1.0};
Point(57) = {0.065252, 0.742815, 0, 1.0};
Point(58) = {0.069103, 0.743642, 0, 1.0};
Point(59) = {0.071960, 0.744087, 0, 1.0};
Point(60) = {0.073700, 0.744270, 0, 1.0};
Point(61) = {-0.074281, -0.744314, 0, 1.0};
Point(62) = {-0.073708, -0.744330, 0, 1.0};
Point(63) = {-0.072043, -0.744430, 0, 1.0};
Point(64) = {-0.069415, -0.744675, 0, 1.0};
Point(65) = {-0.065951, -0.745040, 0, 1.0};
Point(66) = {-0.061726, -0.745479, 0, 1.0};
Point(67) = {-0.056778, -0.745981, 0, 1.0};
Point(68) = {-0.051192, -0.746576, 0, 1.0};
Point(69) = {-0.045094, -0.747274, 0, 1.0};
Point(70) = {-0.038625, -0.748049, 0, 1.0};
Point(71) = {-0.031941, -0.748854, 0, 1.0};
Point(72) = {-0.025205, -0.749566, 0, 1.0};
Point(73) = {-0.018465, -0.749976, 0, 1.0};
Point(74) = {-0.011602, -0.750000, 0, 1.0};
Point(75) = {-0.004587, -0.749726, 0, 1.0};
Point(76) = {0.002499, -0.749209, 0, 1.0};
Point(77) = {0.009576, -0.748463, 0, 1.0};
Point(78) = {0.016572, -0.747504, 0, 1.0};
Point(79) = {0.023417, -0.746342, 0, 1.0};
Point(80) = {0.030046, -0.744990, 0, 1.0};
Point(81) = {0.036398, -0.743469, 0, 1.0};
Point(82) = {0.042411, -0.741800, 0, 1.0};
Point(83) = {0.048027, -0.740006, 0, 1.0};
Point(84) = {0.053197, -0.738108, 0, 1.0};
Point(85) = {0.057873, -0.736136, 0, 1.0};
Point(86) = {0.062017, -0.734122, 0, 1.0};
Point(87) = {0.065590, -0.732094, 0, 1.0};
Point(88) = {0.068572, -0.730090, 0, 1.0};
Point(89) = {0.070945, -0.728155, 0, 1.0};
Point(90) = {0.072688, -0.726342, 0, 1.0};
Point(91) = {0.073790, -0.724706, 0, 1.0};
Point(92) = {0.074245, -0.723338, 0, 1.0};
Point(93) = {0.073881, -0.722372, 0, 1.0};
Point(94) = {0.072579, -0.721694, 0, 1.0};
Point(95) = {0.070424, -0.721159, 0, 1.0};
Point(96) = {0.067473, -0.720799, 0, 1.0};
Point(97) = {0.063768, -0.720620, 0, 1.0};
Point(98) = {0.059341, -0.720619, 0, 1.0};
Point(99) = {0.054243, -0.720784, 0, 1.0};
Point(100) = {0.048539, -0.721104, 0, 1.0};
Point(101) = {0.042300, -0.721572, 0, 1.0};
Point(102) = {0.035598, -0.722180, 0, 1.0};
Point(103) = {0.028515, -0.722918, 0, 1.0};
Point(104) = {0.021132, -0.723778, 0, 1.0};
Point(105) = {0.013539, -0.724752, 0, 1.0};
Point(106) = {0.005821, -0.725828, 0, 1.0};
Point(107) = {-0.001929, -0.726995, 0, 1.0};
Point(108) = {-0.009619, -0.728246, 0, 1.0};
Point(109) = {-0.017156, -0.729566, 0, 1.0};
Point(110) = {-0.024441, -0.730956, 0, 1.0};
Point(111) = {-0.031376, -0.732421, 0, 1.0};
Point(112) = {-0.037856, -0.734020, 0, 1.0};
Point(113) = {-0.043914, -0.735882, 0, 1.0};
Point(114) = {-0.049746, -0.737934, 0, 1.0};
Point(115) = {-0.055368, -0.739894, 0, 1.0};
Point(116) = {-0.060604, -0.741554, 0, 1.0};
Point(117) = {-0.065252, -0.742815, 0, 1.0};
Point(118) = {-0.069103, -0.743642, 0, 1.0};
Point(119) = {-0.071960, -0.744087, 0, 1.0};
Point(120) = {-0.073700, -0.744270, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:42};
Spline(3) = {42:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:81};
Spline(6) = {81:102};
Spline(7) = {102:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
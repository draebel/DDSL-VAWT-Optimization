SetFactory("OpenCASCADE");

Point(1) = {0.074223, 0.723553, 0, 1.0};
Point(2) = {0.073934, 0.723638, 0, 1.0};
Point(3) = {0.073102, 0.723911, 0, 1.0};
Point(4) = {0.071779, 0.724368, 0, 1.0};
Point(5) = {0.070008, 0.724996, 0, 1.0};
Point(6) = {0.067821, 0.725771, 0, 1.0};
Point(7) = {0.065236, 0.726665, 0, 1.0};
Point(8) = {0.062261, 0.727665, 0, 1.0};
Point(9) = {0.058917, 0.728771, 0, 1.0};
Point(10) = {0.055239, 0.729974, 0, 1.0};
Point(11) = {0.051261, 0.731257, 0, 1.0};
Point(12) = {0.047017, 0.732602, 0, 1.0};
Point(13) = {0.042543, 0.733985, 0, 1.0};
Point(14) = {0.037862, 0.735364, 0, 1.0};
Point(15) = {0.032981, 0.736722, 0, 1.0};
Point(16) = {0.027920, 0.738060, 0, 1.0};
Point(17) = {0.022708, 0.739362, 0, 1.0};
Point(18) = {0.017368, 0.740620, 0, 1.0};
Point(19) = {0.011934, 0.741827, 0, 1.0};
Point(20) = {0.006434, 0.742974, 0, 1.0};
Point(21) = {0.000894, 0.744054, 0, 1.0};
Point(22) = {-0.004649, 0.745061, 0, 1.0};
Point(23) = {-0.010166, 0.745987, 0, 1.0};
Point(24) = {-0.015626, 0.746829, 0, 1.0};
Point(25) = {-0.020996, 0.747580, 0, 1.0};
Point(26) = {-0.026246, 0.748237, 0, 1.0};
Point(27) = {-0.031345, 0.748795, 0, 1.0};
Point(28) = {-0.036264, 0.749250, 0, 1.0};
Point(29) = {-0.040975, 0.749601, 0, 1.0};
Point(30) = {-0.045452, 0.749843, 0, 1.0};
Point(31) = {-0.049669, 0.749976, 0, 1.0};
Point(32) = {-0.053602, 0.750000, 0, 1.0};
Point(33) = {-0.057230, 0.749912, 0, 1.0};
Point(34) = {-0.060538, 0.749713, 0, 1.0};
Point(35) = {-0.063502, 0.749406, 0, 1.0};
Point(36) = {-0.066119, 0.748987, 0, 1.0};
Point(37) = {-0.068384, 0.748471, 0, 1.0};
Point(38) = {-0.070280, 0.747858, 0, 1.0};
Point(39) = {-0.071818, 0.747156, 0, 1.0};
Point(40) = {-0.072998, 0.746405, 0, 1.0};
Point(41) = {-0.073808, 0.745613, 0, 1.0};
Point(42) = {-0.074264, 0.744808, 0, 1.0};
Point(43) = {-0.074341, 0.744117, 0, 1.0};
Point(44) = {-0.073902, 0.743487, 0, 1.0};
Point(45) = {-0.072935, 0.742797, 0, 1.0};
Point(46) = {-0.071530, 0.742090, 0, 1.0};
Point(47) = {-0.069678, 0.741387, 0, 1.0};
Point(48) = {-0.067373, 0.740682, 0, 1.0};
Point(49) = {-0.064625, 0.739966, 0, 1.0};
Point(50) = {-0.061455, 0.739230, 0, 1.0};
Point(51) = {-0.057890, 0.738474, 0, 1.0};
Point(52) = {-0.053956, 0.737701, 0, 1.0};
Point(53) = {-0.049682, 0.736912, 0, 1.0};
Point(54) = {-0.045096, 0.736112, 0, 1.0};
Point(55) = {-0.040231, 0.735306, 0, 1.0};
Point(56) = {-0.035119, 0.734498, 0, 1.0};
Point(57) = {-0.029794, 0.733694, 0, 1.0};
Point(58) = {-0.024291, 0.732900, 0, 1.0};
Point(59) = {-0.018645, 0.732122, 0, 1.0};
Point(60) = {-0.012895, 0.731367, 0, 1.0};
Point(61) = {-0.007078, 0.730645, 0, 1.0};
Point(62) = {-0.001227, 0.729966, 0, 1.0};
Point(63) = {0.004625, 0.729343, 0, 1.0};
Point(64) = {0.010452, 0.728779, 0, 1.0};
Point(65) = {0.016231, 0.728278, 0, 1.0};
Point(66) = {0.021937, 0.727847, 0, 1.0};
Point(67) = {0.027553, 0.727470, 0, 1.0};
Point(68) = {0.033049, 0.727119, 0, 1.0};
Point(69) = {0.038378, 0.726780, 0, 1.0};
Point(70) = {0.043492, 0.726442, 0, 1.0};
Point(71) = {0.048346, 0.726102, 0, 1.0};
Point(72) = {0.052895, 0.725758, 0, 1.0};
Point(73) = {0.057097, 0.725410, 0, 1.0};
Point(74) = {0.060910, 0.725064, 0, 1.0};
Point(75) = {0.064297, 0.724729, 0, 1.0};
Point(76) = {0.067224, 0.724415, 0, 1.0};
Point(77) = {0.069667, 0.724141, 0, 1.0};
Point(78) = {0.071614, 0.723914, 0, 1.0};
Point(79) = {0.073042, 0.723732, 0, 1.0};
Point(80) = {0.073924, 0.723605, 0, 1.0};
Point(81) = {0.074223, 0.723553, 0, 1.0};
Point(82) = {-0.074223, -0.723553, 0, 1.0};
Point(83) = {-0.073934, -0.723638, 0, 1.0};
Point(84) = {-0.073102, -0.723911, 0, 1.0};
Point(85) = {-0.071779, -0.724368, 0, 1.0};
Point(86) = {-0.070008, -0.724996, 0, 1.0};
Point(87) = {-0.067821, -0.725771, 0, 1.0};
Point(88) = {-0.065236, -0.726665, 0, 1.0};
Point(89) = {-0.062261, -0.727665, 0, 1.0};
Point(90) = {-0.058917, -0.728771, 0, 1.0};
Point(91) = {-0.055239, -0.729974, 0, 1.0};
Point(92) = {-0.051261, -0.731257, 0, 1.0};
Point(93) = {-0.047017, -0.732602, 0, 1.0};
Point(94) = {-0.042543, -0.733985, 0, 1.0};
Point(95) = {-0.037862, -0.735364, 0, 1.0};
Point(96) = {-0.032981, -0.736722, 0, 1.0};
Point(97) = {-0.027920, -0.738060, 0, 1.0};
Point(98) = {-0.022708, -0.739362, 0, 1.0};
Point(99) = {-0.017368, -0.740620, 0, 1.0};
Point(100) = {-0.011934, -0.741827, 0, 1.0};
Point(101) = {-0.006434, -0.742974, 0, 1.0};
Point(102) = {-0.000894, -0.744054, 0, 1.0};
Point(103) = {0.004649, -0.745061, 0, 1.0};
Point(104) = {0.010166, -0.745987, 0, 1.0};
Point(105) = {0.015626, -0.746829, 0, 1.0};
Point(106) = {0.020996, -0.747580, 0, 1.0};
Point(107) = {0.026246, -0.748237, 0, 1.0};
Point(108) = {0.031345, -0.748795, 0, 1.0};
Point(109) = {0.036264, -0.749250, 0, 1.0};
Point(110) = {0.040975, -0.749601, 0, 1.0};
Point(111) = {0.045452, -0.749843, 0, 1.0};
Point(112) = {0.049669, -0.749976, 0, 1.0};
Point(113) = {0.053602, -0.750000, 0, 1.0};
Point(114) = {0.057230, -0.749912, 0, 1.0};
Point(115) = {0.060538, -0.749713, 0, 1.0};
Point(116) = {0.063502, -0.749406, 0, 1.0};
Point(117) = {0.066119, -0.748987, 0, 1.0};
Point(118) = {0.068384, -0.748471, 0, 1.0};
Point(119) = {0.070280, -0.747858, 0, 1.0};
Point(120) = {0.071818, -0.747156, 0, 1.0};
Point(121) = {0.072998, -0.746405, 0, 1.0};
Point(122) = {0.073808, -0.745613, 0, 1.0};
Point(123) = {0.074264, -0.744808, 0, 1.0};
Point(124) = {0.074341, -0.744117, 0, 1.0};
Point(125) = {0.073902, -0.743487, 0, 1.0};
Point(126) = {0.072935, -0.742797, 0, 1.0};
Point(127) = {0.071530, -0.742090, 0, 1.0};
Point(128) = {0.069678, -0.741387, 0, 1.0};
Point(129) = {0.067373, -0.740682, 0, 1.0};
Point(130) = {0.064625, -0.739966, 0, 1.0};
Point(131) = {0.061455, -0.739230, 0, 1.0};
Point(132) = {0.057890, -0.738474, 0, 1.0};
Point(133) = {0.053956, -0.737701, 0, 1.0};
Point(134) = {0.049682, -0.736912, 0, 1.0};
Point(135) = {0.045096, -0.736112, 0, 1.0};
Point(136) = {0.040231, -0.735306, 0, 1.0};
Point(137) = {0.035119, -0.734498, 0, 1.0};
Point(138) = {0.029794, -0.733694, 0, 1.0};
Point(139) = {0.024291, -0.732900, 0, 1.0};
Point(140) = {0.018645, -0.732122, 0, 1.0};
Point(141) = {0.012895, -0.731367, 0, 1.0};
Point(142) = {0.007078, -0.730645, 0, 1.0};
Point(143) = {0.001227, -0.729966, 0, 1.0};
Point(144) = {-0.004625, -0.729343, 0, 1.0};
Point(145) = {-0.010452, -0.728779, 0, 1.0};
Point(146) = {-0.016231, -0.728278, 0, 1.0};
Point(147) = {-0.021937, -0.727847, 0, 1.0};
Point(148) = {-0.027553, -0.727470, 0, 1.0};
Point(149) = {-0.033049, -0.727119, 0, 1.0};
Point(150) = {-0.038378, -0.726780, 0, 1.0};
Point(151) = {-0.043492, -0.726442, 0, 1.0};
Point(152) = {-0.048346, -0.726102, 0, 1.0};
Point(153) = {-0.052895, -0.725758, 0, 1.0};
Point(154) = {-0.057097, -0.725410, 0, 1.0};
Point(155) = {-0.060910, -0.725064, 0, 1.0};
Point(156) = {-0.064297, -0.724729, 0, 1.0};
Point(157) = {-0.067224, -0.724415, 0, 1.0};
Point(158) = {-0.069667, -0.724141, 0, 1.0};
Point(159) = {-0.071614, -0.723914, 0, 1.0};
Point(160) = {-0.073042, -0.723732, 0, 1.0};
Point(161) = {-0.073924, -0.723605, 0, 1.0};
Point(162) = {-0.074223, -0.723553, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
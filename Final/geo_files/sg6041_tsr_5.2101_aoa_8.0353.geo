SetFactory("OpenCASCADE");

Point(1) = {0.111027, 0.723557, 0, 1.0};
Point(2) = {0.110738, 0.723642, 0, 1.0};
Point(3) = {0.109906, 0.723915, 0, 1.0};
Point(4) = {0.108584, 0.724372, 0, 1.0};
Point(5) = {0.106813, 0.725000, 0, 1.0};
Point(6) = {0.104626, 0.725775, 0, 1.0};
Point(7) = {0.102041, 0.726668, 0, 1.0};
Point(8) = {0.099067, 0.727669, 0, 1.0};
Point(9) = {0.095724, 0.728774, 0, 1.0};
Point(10) = {0.092047, 0.729977, 0, 1.0};
Point(11) = {0.088069, 0.731260, 0, 1.0};
Point(12) = {0.083826, 0.732605, 0, 1.0};
Point(13) = {0.079352, 0.733987, 0, 1.0};
Point(14) = {0.074672, 0.735366, 0, 1.0};
Point(15) = {0.069791, 0.736724, 0, 1.0};
Point(16) = {0.064731, 0.738062, 0, 1.0};
Point(17) = {0.059520, 0.739364, 0, 1.0};
Point(18) = {0.054181, 0.740621, 0, 1.0};
Point(19) = {0.048748, 0.741829, 0, 1.0};
Point(20) = {0.043249, 0.742975, 0, 1.0};
Point(21) = {0.037710, 0.744055, 0, 1.0};
Point(22) = {0.032168, 0.745061, 0, 1.0};
Point(23) = {0.026651, 0.745987, 0, 1.0};
Point(24) = {0.021192, 0.746829, 0, 1.0};
Point(25) = {0.015823, 0.747581, 0, 1.0};
Point(26) = {0.010574, 0.748237, 0, 1.0};
Point(27) = {0.005476, 0.748795, 0, 1.0};
Point(28) = {0.000558, 0.749250, 0, 1.0};
Point(29) = {-0.004153, 0.749601, 0, 1.0};
Point(30) = {-0.008629, 0.749843, 0, 1.0};
Point(31) = {-0.012845, 0.749976, 0, 1.0};
Point(32) = {-0.016777, 0.750000, 0, 1.0};
Point(33) = {-0.020405, 0.749912, 0, 1.0};
Point(34) = {-0.023713, 0.749713, 0, 1.0};
Point(35) = {-0.026677, 0.749406, 0, 1.0};
Point(36) = {-0.029292, 0.748987, 0, 1.0};
Point(37) = {-0.031558, 0.748471, 0, 1.0};
Point(38) = {-0.033454, 0.747858, 0, 1.0};
Point(39) = {-0.034991, 0.747156, 0, 1.0};
Point(40) = {-0.036171, 0.746406, 0, 1.0};
Point(41) = {-0.036981, 0.745614, 0, 1.0};
Point(42) = {-0.037436, 0.744809, 0, 1.0};
Point(43) = {-0.037513, 0.744118, 0, 1.0};
Point(44) = {-0.037074, 0.743488, 0, 1.0};
Point(45) = {-0.036107, 0.742798, 0, 1.0};
Point(46) = {-0.034703, 0.742091, 0, 1.0};
Point(47) = {-0.032851, 0.741388, 0, 1.0};
Point(48) = {-0.030547, 0.740683, 0, 1.0};
Point(49) = {-0.027799, 0.739968, 0, 1.0};
Point(50) = {-0.024629, 0.739232, 0, 1.0};
Point(51) = {-0.021065, 0.738476, 0, 1.0};
Point(52) = {-0.017132, 0.737703, 0, 1.0};
Point(53) = {-0.012858, 0.736914, 0, 1.0};
Point(54) = {-0.008273, 0.736114, 0, 1.0};
Point(55) = {-0.003409, 0.735308, 0, 1.0};
Point(56) = {0.001702, 0.734501, 0, 1.0};
Point(57) = {0.007027, 0.733697, 0, 1.0};
Point(58) = {0.012529, 0.732903, 0, 1.0};
Point(59) = {0.018173, 0.732125, 0, 1.0};
Point(60) = {0.023923, 0.731370, 0, 1.0};
Point(61) = {0.029739, 0.730648, 0, 1.0};
Point(62) = {0.035589, 0.729970, 0, 1.0};
Point(63) = {0.041440, 0.729346, 0, 1.0};
Point(64) = {0.047267, 0.728782, 0, 1.0};
Point(65) = {0.053044, 0.728282, 0, 1.0};
Point(66) = {0.058749, 0.727851, 0, 1.0};
Point(67) = {0.064365, 0.727474, 0, 1.0};
Point(68) = {0.069860, 0.727123, 0, 1.0};
Point(69) = {0.075187, 0.726783, 0, 1.0};
Point(70) = {0.080301, 0.726446, 0, 1.0};
Point(71) = {0.085154, 0.726106, 0, 1.0};
Point(72) = {0.089703, 0.725762, 0, 1.0};
Point(73) = {0.093904, 0.725414, 0, 1.0};
Point(74) = {0.097717, 0.725068, 0, 1.0};
Point(75) = {0.101103, 0.724733, 0, 1.0};
Point(76) = {0.104029, 0.724419, 0, 1.0};
Point(77) = {0.106472, 0.724145, 0, 1.0};
Point(78) = {0.108418, 0.723918, 0, 1.0};
Point(79) = {0.109847, 0.723736, 0, 1.0};
Point(80) = {0.110728, 0.723609, 0, 1.0};
Point(81) = {0.111027, 0.723557, 0, 1.0};
Point(82) = {-0.111027, -0.723557, 0, 1.0};
Point(83) = {-0.110738, -0.723642, 0, 1.0};
Point(84) = {-0.109906, -0.723915, 0, 1.0};
Point(85) = {-0.108584, -0.724372, 0, 1.0};
Point(86) = {-0.106813, -0.725000, 0, 1.0};
Point(87) = {-0.104626, -0.725775, 0, 1.0};
Point(88) = {-0.102041, -0.726668, 0, 1.0};
Point(89) = {-0.099067, -0.727669, 0, 1.0};
Point(90) = {-0.095724, -0.728774, 0, 1.0};
Point(91) = {-0.092047, -0.729977, 0, 1.0};
Point(92) = {-0.088069, -0.731260, 0, 1.0};
Point(93) = {-0.083826, -0.732605, 0, 1.0};
Point(94) = {-0.079352, -0.733987, 0, 1.0};
Point(95) = {-0.074672, -0.735366, 0, 1.0};
Point(96) = {-0.069791, -0.736724, 0, 1.0};
Point(97) = {-0.064731, -0.738062, 0, 1.0};
Point(98) = {-0.059520, -0.739364, 0, 1.0};
Point(99) = {-0.054181, -0.740621, 0, 1.0};
Point(100) = {-0.048748, -0.741829, 0, 1.0};
Point(101) = {-0.043249, -0.742975, 0, 1.0};
Point(102) = {-0.037710, -0.744055, 0, 1.0};
Point(103) = {-0.032168, -0.745061, 0, 1.0};
Point(104) = {-0.026651, -0.745987, 0, 1.0};
Point(105) = {-0.021192, -0.746829, 0, 1.0};
Point(106) = {-0.015823, -0.747581, 0, 1.0};
Point(107) = {-0.010574, -0.748237, 0, 1.0};
Point(108) = {-0.005476, -0.748795, 0, 1.0};
Point(109) = {-0.000558, -0.749250, 0, 1.0};
Point(110) = {0.004153, -0.749601, 0, 1.0};
Point(111) = {0.008629, -0.749843, 0, 1.0};
Point(112) = {0.012845, -0.749976, 0, 1.0};
Point(113) = {0.016777, -0.750000, 0, 1.0};
Point(114) = {0.020405, -0.749912, 0, 1.0};
Point(115) = {0.023713, -0.749713, 0, 1.0};
Point(116) = {0.026677, -0.749406, 0, 1.0};
Point(117) = {0.029292, -0.748987, 0, 1.0};
Point(118) = {0.031558, -0.748471, 0, 1.0};
Point(119) = {0.033454, -0.747858, 0, 1.0};
Point(120) = {0.034991, -0.747156, 0, 1.0};
Point(121) = {0.036171, -0.746406, 0, 1.0};
Point(122) = {0.036981, -0.745614, 0, 1.0};
Point(123) = {0.037436, -0.744809, 0, 1.0};
Point(124) = {0.037513, -0.744118, 0, 1.0};
Point(125) = {0.037074, -0.743488, 0, 1.0};
Point(126) = {0.036107, -0.742798, 0, 1.0};
Point(127) = {0.034703, -0.742091, 0, 1.0};
Point(128) = {0.032851, -0.741388, 0, 1.0};
Point(129) = {0.030547, -0.740683, 0, 1.0};
Point(130) = {0.027799, -0.739968, 0, 1.0};
Point(131) = {0.024629, -0.739232, 0, 1.0};
Point(132) = {0.021065, -0.738476, 0, 1.0};
Point(133) = {0.017132, -0.737703, 0, 1.0};
Point(134) = {0.012858, -0.736914, 0, 1.0};
Point(135) = {0.008273, -0.736114, 0, 1.0};
Point(136) = {0.003409, -0.735308, 0, 1.0};
Point(137) = {-0.001702, -0.734501, 0, 1.0};
Point(138) = {-0.007027, -0.733697, 0, 1.0};
Point(139) = {-0.012529, -0.732903, 0, 1.0};
Point(140) = {-0.018173, -0.732125, 0, 1.0};
Point(141) = {-0.023923, -0.731370, 0, 1.0};
Point(142) = {-0.029739, -0.730648, 0, 1.0};
Point(143) = {-0.035589, -0.729970, 0, 1.0};
Point(144) = {-0.041440, -0.729346, 0, 1.0};
Point(145) = {-0.047267, -0.728782, 0, 1.0};
Point(146) = {-0.053044, -0.728282, 0, 1.0};
Point(147) = {-0.058749, -0.727851, 0, 1.0};
Point(148) = {-0.064365, -0.727474, 0, 1.0};
Point(149) = {-0.069860, -0.727123, 0, 1.0};
Point(150) = {-0.075187, -0.726783, 0, 1.0};
Point(151) = {-0.080301, -0.726446, 0, 1.0};
Point(152) = {-0.085154, -0.726106, 0, 1.0};
Point(153) = {-0.089703, -0.725762, 0, 1.0};
Point(154) = {-0.093904, -0.725414, 0, 1.0};
Point(155) = {-0.097717, -0.725068, 0, 1.0};
Point(156) = {-0.101103, -0.724733, 0, 1.0};
Point(157) = {-0.104029, -0.724419, 0, 1.0};
Point(158) = {-0.106472, -0.724145, 0, 1.0};
Point(159) = {-0.108418, -0.723918, 0, 1.0};
Point(160) = {-0.109847, -0.723736, 0, 1.0};
Point(161) = {-0.110728, -0.723609, 0, 1.0};
Point(162) = {-0.111027, -0.723557, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
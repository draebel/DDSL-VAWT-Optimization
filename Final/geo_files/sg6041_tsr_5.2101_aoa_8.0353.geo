SetFactory("OpenCASCADE");

Point(1) = {0.074409, 0.724634, 0, 1.0};
Point(2) = {0.074335, 0.724660, 0, 1.0};
Point(3) = {0.071631, 0.725595, 0, 1.0};
Point(4) = {0.068520, 0.726641, 0, 1.0};
Point(5) = {0.065023, 0.727798, 0, 1.0};
Point(6) = {0.061176, 0.729055, 0, 1.0};
Point(7) = {0.057016, 0.730398, 0, 1.0};
Point(8) = {0.052577, 0.731805, 0, 1.0};
Point(9) = {0.047898, 0.733250, 0, 1.0};
Point(10) = {0.043002, 0.734693, 0, 1.0};
Point(11) = {0.037897, 0.736113, 0, 1.0};
Point(12) = {0.032604, 0.737513, 0, 1.0};
Point(13) = {0.027153, 0.738874, 0, 1.0};
Point(14) = {0.021569, 0.740190, 0, 1.0};
Point(15) = {0.015886, 0.741453, 0, 1.0};
Point(16) = {0.010133, 0.742651, 0, 1.0};
Point(17) = {0.004340, 0.743782, 0, 1.0};
Point(18) = {-0.001457, 0.744834, 0, 1.0};
Point(19) = {-0.007228, 0.745803, 0, 1.0};
Point(20) = {-0.012938, 0.746684, 0, 1.0};
Point(21) = {-0.018554, 0.747469, 0, 1.0};
Point(22) = {-0.024045, 0.748156, 0, 1.0};
Point(23) = {-0.029377, 0.748740, 0, 1.0};
Point(24) = {-0.034522, 0.749216, 0, 1.0};
Point(25) = {-0.039449, 0.749582, 0, 1.0};
Point(26) = {-0.044131, 0.749836, 0, 1.0};
Point(27) = {-0.048541, 0.749975, 0, 1.0};
Point(28) = {-0.052654, 0.750000, 0, 1.0};
Point(29) = {-0.056449, 0.749908, 0, 1.0};
Point(30) = {-0.059909, 0.749700, 0, 1.0};
Point(31) = {-0.063009, 0.749379, 0, 1.0};
Point(32) = {-0.065745, 0.748941, 0, 1.0};
Point(33) = {-0.068115, 0.748401, 0, 1.0};
Point(34) = {-0.070098, 0.747759, 0, 1.0};
Point(35) = {-0.071706, 0.747026, 0, 1.0};
Point(36) = {-0.072940, 0.746241, 0, 1.0};
Point(37) = {-0.073787, 0.745412, 0, 1.0};
Point(38) = {-0.074264, 0.744570, 0, 1.0};
Point(39) = {-0.074345, 0.743847, 0, 1.0};
Point(40) = {-0.073885, 0.743188, 0, 1.0};
Point(41) = {-0.072874, 0.742467, 0, 1.0};
Point(42) = {-0.071405, 0.741727, 0, 1.0};
Point(43) = {-0.069468, 0.740992, 0, 1.0};
Point(44) = {-0.067057, 0.740255, 0, 1.0};
Point(45) = {-0.064183, 0.739506, 0, 1.0};
Point(46) = {-0.060867, 0.738737, 0, 1.0};
Point(47) = {-0.057139, 0.737946, 0, 1.0};
Point(48) = {-0.053025, 0.737137, 0, 1.0};
Point(49) = {-0.048555, 0.736312, 0, 1.0};
Point(50) = {-0.043759, 0.735476, 0, 1.0};
Point(51) = {-0.038671, 0.734632, 0, 1.0};
Point(52) = {-0.033325, 0.733788, 0, 1.0};
Point(53) = {-0.027755, 0.732947, 0, 1.0};
Point(54) = {-0.022000, 0.732116, 0, 1.0};
Point(55) = {-0.016096, 0.731303, 0, 1.0};
Point(56) = {-0.010082, 0.730513, 0, 1.0};
Point(57) = {-0.003998, 0.729757, 0, 1.0};
Point(58) = {0.002121, 0.729048, 0, 1.0};
Point(59) = {0.008241, 0.728396, 0, 1.0};
Point(60) = {0.014336, 0.727806, 0, 1.0};
Point(61) = {0.020379, 0.727282, 0, 1.0};
Point(62) = {0.026347, 0.726832, 0, 1.0};
Point(63) = {0.032221, 0.726437, 0, 1.0};
Point(64) = {0.037969, 0.726070, 0, 1.0};
Point(65) = {0.043541, 0.725715, 0, 1.0};
Point(66) = {0.048890, 0.725362, 0, 1.0};
Point(67) = {0.053967, 0.725007, 0, 1.0};
Point(68) = {0.058725, 0.724646, 0, 1.0};
Point(69) = {0.063119, 0.724283, 0, 1.0};
Point(70) = {0.067107, 0.723921, 0, 1.0};
Point(71) = {0.070649, 0.723570, 0, 1.0};
Point(72) = {0.073710, 0.723242, 0, 1.0};
Point(73) = {0.074204, 0.723183, 0, 1.0};
Point(74) = {-0.074409, -0.724634, 0, 1.0};
Point(75) = {-0.074335, -0.724660, 0, 1.0};
Point(76) = {-0.071631, -0.725595, 0, 1.0};
Point(77) = {-0.068520, -0.726641, 0, 1.0};
Point(78) = {-0.065023, -0.727798, 0, 1.0};
Point(79) = {-0.061176, -0.729055, 0, 1.0};
Point(80) = {-0.057016, -0.730398, 0, 1.0};
Point(81) = {-0.052577, -0.731805, 0, 1.0};
Point(82) = {-0.047898, -0.733250, 0, 1.0};
Point(83) = {-0.043002, -0.734693, 0, 1.0};
Point(84) = {-0.037897, -0.736113, 0, 1.0};
Point(85) = {-0.032604, -0.737513, 0, 1.0};
Point(86) = {-0.027153, -0.738874, 0, 1.0};
Point(87) = {-0.021569, -0.740190, 0, 1.0};
Point(88) = {-0.015886, -0.741453, 0, 1.0};
Point(89) = {-0.010133, -0.742651, 0, 1.0};
Point(90) = {-0.004340, -0.743782, 0, 1.0};
Point(91) = {0.001457, -0.744834, 0, 1.0};
Point(92) = {0.007228, -0.745803, 0, 1.0};
Point(93) = {0.012938, -0.746684, 0, 1.0};
Point(94) = {0.018554, -0.747469, 0, 1.0};
Point(95) = {0.024045, -0.748156, 0, 1.0};
Point(96) = {0.029377, -0.748740, 0, 1.0};
Point(97) = {0.034522, -0.749216, 0, 1.0};
Point(98) = {0.039449, -0.749582, 0, 1.0};
Point(99) = {0.044131, -0.749836, 0, 1.0};
Point(100) = {0.048541, -0.749975, 0, 1.0};
Point(101) = {0.052654, -0.750000, 0, 1.0};
Point(102) = {0.056449, -0.749908, 0, 1.0};
Point(103) = {0.059909, -0.749700, 0, 1.0};
Point(104) = {0.063009, -0.749379, 0, 1.0};
Point(105) = {0.065745, -0.748941, 0, 1.0};
Point(106) = {0.068115, -0.748401, 0, 1.0};
Point(107) = {0.070098, -0.747759, 0, 1.0};
Point(108) = {0.071706, -0.747026, 0, 1.0};
Point(109) = {0.072940, -0.746241, 0, 1.0};
Point(110) = {0.073787, -0.745412, 0, 1.0};
Point(111) = {0.074264, -0.744570, 0, 1.0};
Point(112) = {0.074345, -0.743847, 0, 1.0};
Point(113) = {0.073885, -0.743188, 0, 1.0};
Point(114) = {0.072874, -0.742467, 0, 1.0};
Point(115) = {0.071405, -0.741727, 0, 1.0};
Point(116) = {0.069468, -0.740992, 0, 1.0};
Point(117) = {0.067057, -0.740255, 0, 1.0};
Point(118) = {0.064183, -0.739506, 0, 1.0};
Point(119) = {0.060867, -0.738737, 0, 1.0};
Point(120) = {0.057139, -0.737946, 0, 1.0};
Point(121) = {0.053025, -0.737137, 0, 1.0};
Point(122) = {0.048555, -0.736312, 0, 1.0};
Point(123) = {0.043759, -0.735476, 0, 1.0};
Point(124) = {0.038671, -0.734632, 0, 1.0};
Point(125) = {0.033325, -0.733788, 0, 1.0};
Point(126) = {0.027755, -0.732947, 0, 1.0};
Point(127) = {0.022000, -0.732116, 0, 1.0};
Point(128) = {0.016096, -0.731303, 0, 1.0};
Point(129) = {0.010082, -0.730513, 0, 1.0};
Point(130) = {0.003998, -0.729757, 0, 1.0};
Point(131) = {-0.002121, -0.729048, 0, 1.0};
Point(132) = {-0.008241, -0.728396, 0, 1.0};
Point(133) = {-0.014336, -0.727806, 0, 1.0};
Point(134) = {-0.020379, -0.727282, 0, 1.0};
Point(135) = {-0.026347, -0.726832, 0, 1.0};
Point(136) = {-0.032221, -0.726437, 0, 1.0};
Point(137) = {-0.037969, -0.726070, 0, 1.0};
Point(138) = {-0.043541, -0.725715, 0, 1.0};
Point(139) = {-0.048890, -0.725362, 0, 1.0};
Point(140) = {-0.053967, -0.725007, 0, 1.0};
Point(141) = {-0.058725, -0.724646, 0, 1.0};
Point(142) = {-0.063119, -0.724283, 0, 1.0};
Point(143) = {-0.067107, -0.723921, 0, 1.0};
Point(144) = {-0.070649, -0.723570, 0, 1.0};
Point(145) = {-0.073710, -0.723242, 0, 1.0};
Point(146) = {-0.074204, -0.723183, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:23};
Spline(2) = {23:51};
Spline(3) = {51:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:96};
Spline(6) = {96:124};
Spline(7) = {124:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
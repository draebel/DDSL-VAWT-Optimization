SetFactory("OpenCASCADE");

Point(1) = {0.111308, 0.723561, 0, 1.0};
Point(2) = {0.111020, 0.723646, 0, 1.0};
Point(3) = {0.110188, 0.723919, 0, 1.0};
Point(4) = {0.108865, 0.724376, 0, 1.0};
Point(5) = {0.107095, 0.725004, 0, 1.0};
Point(6) = {0.104908, 0.725778, 0, 1.0};
Point(7) = {0.102324, 0.726672, 0, 1.0};
Point(8) = {0.099350, 0.727672, 0, 1.0};
Point(9) = {0.096008, 0.728778, 0, 1.0};
Point(10) = {0.092331, 0.729980, 0, 1.0};
Point(11) = {0.088354, 0.731263, 0, 1.0};
Point(12) = {0.084111, 0.732608, 0, 1.0};
Point(13) = {0.079638, 0.733990, 0, 1.0};
Point(14) = {0.074959, 0.735369, 0, 1.0};
Point(15) = {0.070079, 0.736726, 0, 1.0};
Point(16) = {0.065020, 0.738064, 0, 1.0};
Point(17) = {0.059809, 0.739365, 0, 1.0};
Point(18) = {0.054471, 0.740623, 0, 1.0};
Point(19) = {0.049039, 0.741830, 0, 1.0};
Point(20) = {0.043540, 0.742976, 0, 1.0};
Point(21) = {0.038003, 0.744056, 0, 1.0};
Point(22) = {0.032461, 0.745062, 0, 1.0};
Point(23) = {0.026946, 0.745988, 0, 1.0};
Point(24) = {0.021488, 0.746830, 0, 1.0};
Point(25) = {0.016119, 0.747581, 0, 1.0};
Point(26) = {0.010871, 0.748238, 0, 1.0};
Point(27) = {0.005774, 0.748795, 0, 1.0};
Point(28) = {0.000856, 0.749250, 0, 1.0};
Point(29) = {-0.003854, 0.749601, 0, 1.0};
Point(30) = {-0.008329, 0.749843, 0, 1.0};
Point(31) = {-0.012544, 0.749976, 0, 1.0};
Point(32) = {-0.016476, 0.750000, 0, 1.0};
Point(33) = {-0.020104, 0.749912, 0, 1.0};
Point(34) = {-0.023410, 0.749713, 0, 1.0};
Point(35) = {-0.026374, 0.749406, 0, 1.0};
Point(36) = {-0.028989, 0.748987, 0, 1.0};
Point(37) = {-0.031254, 0.748471, 0, 1.0};
Point(38) = {-0.033150, 0.747858, 0, 1.0};
Point(39) = {-0.034687, 0.747157, 0, 1.0};
Point(40) = {-0.035867, 0.746406, 0, 1.0};
Point(41) = {-0.036677, 0.745614, 0, 1.0};
Point(42) = {-0.037132, 0.744810, 0, 1.0};
Point(43) = {-0.037209, 0.744119, 0, 1.0};
Point(44) = {-0.036770, 0.743489, 0, 1.0};
Point(45) = {-0.035803, 0.742799, 0, 1.0};
Point(46) = {-0.034399, 0.742092, 0, 1.0};
Point(47) = {-0.032548, 0.741389, 0, 1.0};
Point(48) = {-0.030244, 0.740685, 0, 1.0};
Point(49) = {-0.027496, 0.739969, 0, 1.0};
Point(50) = {-0.024327, 0.739234, 0, 1.0};
Point(51) = {-0.020763, 0.738478, 0, 1.0};
Point(52) = {-0.016830, 0.737705, 0, 1.0};
Point(53) = {-0.012558, 0.736916, 0, 1.0};
Point(54) = {-0.007974, 0.736117, 0, 1.0};
Point(55) = {-0.003110, 0.735311, 0, 1.0};
Point(56) = {0.002001, 0.734503, 0, 1.0};
Point(57) = {0.007324, 0.733699, 0, 1.0};
Point(58) = {0.012826, 0.732906, 0, 1.0};
Point(59) = {0.018469, 0.732128, 0, 1.0};
Point(60) = {0.024217, 0.731373, 0, 1.0};
Point(61) = {0.030033, 0.730651, 0, 1.0};
Point(62) = {0.035882, 0.729973, 0, 1.0};
Point(63) = {0.041732, 0.729349, 0, 1.0};
Point(64) = {0.047558, 0.728785, 0, 1.0};
Point(65) = {0.053334, 0.728285, 0, 1.0};
Point(66) = {0.059038, 0.727854, 0, 1.0};
Point(67) = {0.064653, 0.727477, 0, 1.0};
Point(68) = {0.070148, 0.727126, 0, 1.0};
Point(69) = {0.075474, 0.726787, 0, 1.0};
Point(70) = {0.080587, 0.726450, 0, 1.0};
Point(71) = {0.085439, 0.726110, 0, 1.0};
Point(72) = {0.089987, 0.725765, 0, 1.0};
Point(73) = {0.094188, 0.725418, 0, 1.0};
Point(74) = {0.098000, 0.725072, 0, 1.0};
Point(75) = {0.101386, 0.724736, 0, 1.0};
Point(76) = {0.104311, 0.724423, 0, 1.0};
Point(77) = {0.106754, 0.724149, 0, 1.0};
Point(78) = {0.108700, 0.723922, 0, 1.0};
Point(79) = {0.110128, 0.723740, 0, 1.0};
Point(80) = {0.111009, 0.723613, 0, 1.0};
Point(81) = {0.111308, 0.723561, 0, 1.0};
Point(82) = {-0.111308, -0.723561, 0, 1.0};
Point(83) = {-0.111020, -0.723646, 0, 1.0};
Point(84) = {-0.110188, -0.723919, 0, 1.0};
Point(85) = {-0.108865, -0.724376, 0, 1.0};
Point(86) = {-0.107095, -0.725004, 0, 1.0};
Point(87) = {-0.104908, -0.725778, 0, 1.0};
Point(88) = {-0.102324, -0.726672, 0, 1.0};
Point(89) = {-0.099350, -0.727672, 0, 1.0};
Point(90) = {-0.096008, -0.728778, 0, 1.0};
Point(91) = {-0.092331, -0.729980, 0, 1.0};
Point(92) = {-0.088354, -0.731263, 0, 1.0};
Point(93) = {-0.084111, -0.732608, 0, 1.0};
Point(94) = {-0.079638, -0.733990, 0, 1.0};
Point(95) = {-0.074959, -0.735369, 0, 1.0};
Point(96) = {-0.070079, -0.736726, 0, 1.0};
Point(97) = {-0.065020, -0.738064, 0, 1.0};
Point(98) = {-0.059809, -0.739365, 0, 1.0};
Point(99) = {-0.054471, -0.740623, 0, 1.0};
Point(100) = {-0.049039, -0.741830, 0, 1.0};
Point(101) = {-0.043540, -0.742976, 0, 1.0};
Point(102) = {-0.038003, -0.744056, 0, 1.0};
Point(103) = {-0.032461, -0.745062, 0, 1.0};
Point(104) = {-0.026946, -0.745988, 0, 1.0};
Point(105) = {-0.021488, -0.746830, 0, 1.0};
Point(106) = {-0.016119, -0.747581, 0, 1.0};
Point(107) = {-0.010871, -0.748238, 0, 1.0};
Point(108) = {-0.005774, -0.748795, 0, 1.0};
Point(109) = {-0.000856, -0.749250, 0, 1.0};
Point(110) = {0.003854, -0.749601, 0, 1.0};
Point(111) = {0.008329, -0.749843, 0, 1.0};
Point(112) = {0.012544, -0.749976, 0, 1.0};
Point(113) = {0.016476, -0.750000, 0, 1.0};
Point(114) = {0.020104, -0.749912, 0, 1.0};
Point(115) = {0.023410, -0.749713, 0, 1.0};
Point(116) = {0.026374, -0.749406, 0, 1.0};
Point(117) = {0.028989, -0.748987, 0, 1.0};
Point(118) = {0.031254, -0.748471, 0, 1.0};
Point(119) = {0.033150, -0.747858, 0, 1.0};
Point(120) = {0.034687, -0.747157, 0, 1.0};
Point(121) = {0.035867, -0.746406, 0, 1.0};
Point(122) = {0.036677, -0.745614, 0, 1.0};
Point(123) = {0.037132, -0.744810, 0, 1.0};
Point(124) = {0.037209, -0.744119, 0, 1.0};
Point(125) = {0.036770, -0.743489, 0, 1.0};
Point(126) = {0.035803, -0.742799, 0, 1.0};
Point(127) = {0.034399, -0.742092, 0, 1.0};
Point(128) = {0.032548, -0.741389, 0, 1.0};
Point(129) = {0.030244, -0.740685, 0, 1.0};
Point(130) = {0.027496, -0.739969, 0, 1.0};
Point(131) = {0.024327, -0.739234, 0, 1.0};
Point(132) = {0.020763, -0.738478, 0, 1.0};
Point(133) = {0.016830, -0.737705, 0, 1.0};
Point(134) = {0.012558, -0.736916, 0, 1.0};
Point(135) = {0.007974, -0.736117, 0, 1.0};
Point(136) = {0.003110, -0.735311, 0, 1.0};
Point(137) = {-0.002001, -0.734503, 0, 1.0};
Point(138) = {-0.007324, -0.733699, 0, 1.0};
Point(139) = {-0.012826, -0.732906, 0, 1.0};
Point(140) = {-0.018469, -0.732128, 0, 1.0};
Point(141) = {-0.024217, -0.731373, 0, 1.0};
Point(142) = {-0.030033, -0.730651, 0, 1.0};
Point(143) = {-0.035882, -0.729973, 0, 1.0};
Point(144) = {-0.041732, -0.729349, 0, 1.0};
Point(145) = {-0.047558, -0.728785, 0, 1.0};
Point(146) = {-0.053334, -0.728285, 0, 1.0};
Point(147) = {-0.059038, -0.727854, 0, 1.0};
Point(148) = {-0.064653, -0.727477, 0, 1.0};
Point(149) = {-0.070148, -0.727126, 0, 1.0};
Point(150) = {-0.075474, -0.726787, 0, 1.0};
Point(151) = {-0.080587, -0.726450, 0, 1.0};
Point(152) = {-0.085439, -0.726110, 0, 1.0};
Point(153) = {-0.089987, -0.725765, 0, 1.0};
Point(154) = {-0.094188, -0.725418, 0, 1.0};
Point(155) = {-0.098000, -0.725072, 0, 1.0};
Point(156) = {-0.101386, -0.724736, 0, 1.0};
Point(157) = {-0.104311, -0.724423, 0, 1.0};
Point(158) = {-0.106754, -0.724149, 0, 1.0};
Point(159) = {-0.108700, -0.723922, 0, 1.0};
Point(160) = {-0.110128, -0.723740, 0, 1.0};
Point(161) = {-0.111009, -0.723613, 0, 1.0};
Point(162) = {-0.111308, -0.723561, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074018, 0.732371, 0, 1.0};
Point(2) = {0.073826, 0.732428, 0, 1.0};
Point(3) = {0.073271, 0.732610, 0, 1.0};
Point(4) = {0.072389, 0.732915, 0, 1.0};
Point(5) = {0.071209, 0.733333, 0, 1.0};
Point(6) = {0.069751, 0.733850, 0, 1.0};
Point(7) = {0.068028, 0.734446, 0, 1.0};
Point(8) = {0.066045, 0.735112, 0, 1.0};
Point(9) = {0.063816, 0.735850, 0, 1.0};
Point(10) = {0.061364, 0.736651, 0, 1.0};
Point(11) = {0.058713, 0.737507, 0, 1.0};
Point(12) = {0.055884, 0.738403, 0, 1.0};
Point(13) = {0.052902, 0.739325, 0, 1.0};
Point(14) = {0.049781, 0.740244, 0, 1.0};
Point(15) = {0.046528, 0.741149, 0, 1.0};
Point(16) = {0.043154, 0.742041, 0, 1.0};
Point(17) = {0.039680, 0.742909, 0, 1.0};
Point(18) = {0.036121, 0.743748, 0, 1.0};
Point(19) = {0.032499, 0.744552, 0, 1.0};
Point(20) = {0.028832, 0.745316, 0, 1.0};
Point(21) = {0.025140, 0.746037, 0, 1.0};
Point(22) = {0.021445, 0.746708, 0, 1.0};
Point(23) = {0.017768, 0.747325, 0, 1.0};
Point(24) = {0.014128, 0.747886, 0, 1.0};
Point(25) = {0.010549, 0.748387, 0, 1.0};
Point(26) = {0.007049, 0.748825, 0, 1.0};
Point(27) = {0.003651, 0.749197, 0, 1.0};
Point(28) = {0.000372, 0.749500, 0, 1.0};
Point(29) = {-0.002769, 0.749734, 0, 1.0};
Point(30) = {-0.005752, 0.749895, 0, 1.0};
Point(31) = {-0.008563, 0.749984, 0, 1.0};
Point(32) = {-0.011185, 0.750000, 0, 1.0};
Point(33) = {-0.013603, 0.749941, 0, 1.0};
Point(34) = {-0.015808, 0.749809, 0, 1.0};
Point(35) = {-0.017784, 0.749604, 0, 1.0};
Point(36) = {-0.019528, 0.749325, 0, 1.0};
Point(37) = {-0.021038, 0.748981, 0, 1.0};
Point(38) = {-0.022302, 0.748572, 0, 1.0};
Point(39) = {-0.023327, 0.748104, 0, 1.0};
Point(40) = {-0.024114, 0.747604, 0, 1.0};
Point(41) = {-0.024654, 0.747076, 0, 1.0};
Point(42) = {-0.024957, 0.746540, 0, 1.0};
Point(43) = {-0.025009, 0.746078, 0, 1.0};
Point(44) = {-0.024716, 0.745659, 0, 1.0};
Point(45) = {-0.024072, 0.745199, 0, 1.0};
Point(46) = {-0.023135, 0.744727, 0, 1.0};
Point(47) = {-0.021901, 0.744259, 0, 1.0};
Point(48) = {-0.020365, 0.743789, 0, 1.0};
Point(49) = {-0.018533, 0.743312, 0, 1.0};
Point(50) = {-0.016419, 0.742821, 0, 1.0};
Point(51) = {-0.014043, 0.742318, 0, 1.0};
Point(52) = {-0.011421, 0.741802, 0, 1.0};
Point(53) = {-0.008572, 0.741276, 0, 1.0};
Point(54) = {-0.005516, 0.740743, 0, 1.0};
Point(55) = {-0.002273, 0.740206, 0, 1.0};
Point(56) = {0.001135, 0.739667, 0, 1.0};
Point(57) = {0.004685, 0.739131, 0, 1.0};
Point(58) = {0.008353, 0.738602, 0, 1.0};
Point(59) = {0.012116, 0.738083, 0, 1.0};
Point(60) = {0.015948, 0.737580, 0, 1.0};
Point(61) = {0.019826, 0.737098, 0, 1.0};
Point(62) = {0.023726, 0.736646, 0, 1.0};
Point(63) = {0.027627, 0.736231, 0, 1.0};
Point(64) = {0.031511, 0.735855, 0, 1.0};
Point(65) = {0.035363, 0.735521, 0, 1.0};
Point(66) = {0.039166, 0.735234, 0, 1.0};
Point(67) = {0.042910, 0.734982, 0, 1.0};
Point(68) = {0.046573, 0.734749, 0, 1.0};
Point(69) = {0.050125, 0.734522, 0, 1.0};
Point(70) = {0.053534, 0.734297, 0, 1.0};
Point(71) = {0.056769, 0.734071, 0, 1.0};
Point(72) = {0.059802, 0.733841, 0, 1.0};
Point(73) = {0.062603, 0.733609, 0, 1.0};
Point(74) = {0.065144, 0.733379, 0, 1.0};
Point(75) = {0.067402, 0.733155, 0, 1.0};
Point(76) = {0.069353, 0.732946, 0, 1.0};
Point(77) = {0.070981, 0.732763, 0, 1.0};
Point(78) = {0.072279, 0.732612, 0, 1.0};
Point(79) = {0.073231, 0.732491, 0, 1.0};
Point(80) = {0.073819, 0.732406, 0, 1.0};
Point(81) = {0.074018, 0.732371, 0, 1.0};
Point(82) = {-0.074018, -0.732371, 0, 1.0};
Point(83) = {-0.073826, -0.732428, 0, 1.0};
Point(84) = {-0.073271, -0.732610, 0, 1.0};
Point(85) = {-0.072389, -0.732915, 0, 1.0};
Point(86) = {-0.071209, -0.733333, 0, 1.0};
Point(87) = {-0.069751, -0.733850, 0, 1.0};
Point(88) = {-0.068028, -0.734446, 0, 1.0};
Point(89) = {-0.066045, -0.735112, 0, 1.0};
Point(90) = {-0.063816, -0.735850, 0, 1.0};
Point(91) = {-0.061364, -0.736651, 0, 1.0};
Point(92) = {-0.058713, -0.737507, 0, 1.0};
Point(93) = {-0.055884, -0.738403, 0, 1.0};
Point(94) = {-0.052902, -0.739325, 0, 1.0};
Point(95) = {-0.049781, -0.740244, 0, 1.0};
Point(96) = {-0.046528, -0.741149, 0, 1.0};
Point(97) = {-0.043154, -0.742041, 0, 1.0};
Point(98) = {-0.039680, -0.742909, 0, 1.0};
Point(99) = {-0.036121, -0.743748, 0, 1.0};
Point(100) = {-0.032499, -0.744552, 0, 1.0};
Point(101) = {-0.028832, -0.745316, 0, 1.0};
Point(102) = {-0.025140, -0.746037, 0, 1.0};
Point(103) = {-0.021445, -0.746708, 0, 1.0};
Point(104) = {-0.017768, -0.747325, 0, 1.0};
Point(105) = {-0.014128, -0.747886, 0, 1.0};
Point(106) = {-0.010549, -0.748387, 0, 1.0};
Point(107) = {-0.007049, -0.748825, 0, 1.0};
Point(108) = {-0.003651, -0.749197, 0, 1.0};
Point(109) = {-0.000372, -0.749500, 0, 1.0};
Point(110) = {0.002769, -0.749734, 0, 1.0};
Point(111) = {0.005752, -0.749895, 0, 1.0};
Point(112) = {0.008563, -0.749984, 0, 1.0};
Point(113) = {0.011185, -0.750000, 0, 1.0};
Point(114) = {0.013603, -0.749941, 0, 1.0};
Point(115) = {0.015808, -0.749809, 0, 1.0};
Point(116) = {0.017784, -0.749604, 0, 1.0};
Point(117) = {0.019528, -0.749325, 0, 1.0};
Point(118) = {0.021038, -0.748981, 0, 1.0};
Point(119) = {0.022302, -0.748572, 0, 1.0};
Point(120) = {0.023327, -0.748104, 0, 1.0};
Point(121) = {0.024114, -0.747604, 0, 1.0};
Point(122) = {0.024654, -0.747076, 0, 1.0};
Point(123) = {0.024957, -0.746540, 0, 1.0};
Point(124) = {0.025009, -0.746078, 0, 1.0};
Point(125) = {0.024716, -0.745659, 0, 1.0};
Point(126) = {0.024072, -0.745199, 0, 1.0};
Point(127) = {0.023135, -0.744727, 0, 1.0};
Point(128) = {0.021901, -0.744259, 0, 1.0};
Point(129) = {0.020365, -0.743789, 0, 1.0};
Point(130) = {0.018533, -0.743312, 0, 1.0};
Point(131) = {0.016419, -0.742821, 0, 1.0};
Point(132) = {0.014043, -0.742318, 0, 1.0};
Point(133) = {0.011421, -0.741802, 0, 1.0};
Point(134) = {0.008572, -0.741276, 0, 1.0};
Point(135) = {0.005516, -0.740743, 0, 1.0};
Point(136) = {0.002273, -0.740206, 0, 1.0};
Point(137) = {-0.001135, -0.739667, 0, 1.0};
Point(138) = {-0.004685, -0.739131, 0, 1.0};
Point(139) = {-0.008353, -0.738602, 0, 1.0};
Point(140) = {-0.012116, -0.738083, 0, 1.0};
Point(141) = {-0.015948, -0.737580, 0, 1.0};
Point(142) = {-0.019826, -0.737098, 0, 1.0};
Point(143) = {-0.023726, -0.736646, 0, 1.0};
Point(144) = {-0.027627, -0.736231, 0, 1.0};
Point(145) = {-0.031511, -0.735855, 0, 1.0};
Point(146) = {-0.035363, -0.735521, 0, 1.0};
Point(147) = {-0.039166, -0.735234, 0, 1.0};
Point(148) = {-0.042910, -0.734982, 0, 1.0};
Point(149) = {-0.046573, -0.734749, 0, 1.0};
Point(150) = {-0.050125, -0.734522, 0, 1.0};
Point(151) = {-0.053534, -0.734297, 0, 1.0};
Point(152) = {-0.056769, -0.734071, 0, 1.0};
Point(153) = {-0.059802, -0.733841, 0, 1.0};
Point(154) = {-0.062603, -0.733609, 0, 1.0};
Point(155) = {-0.065144, -0.733379, 0, 1.0};
Point(156) = {-0.067402, -0.733155, 0, 1.0};
Point(157) = {-0.069353, -0.732946, 0, 1.0};
Point(158) = {-0.070981, -0.732763, 0, 1.0};
Point(159) = {-0.072279, -0.732612, 0, 1.0};
Point(160) = {-0.073231, -0.732491, 0, 1.0};
Point(161) = {-0.073819, -0.732406, 0, 1.0};
Point(162) = {-0.074018, -0.732371, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074579, 0.718099, 0, 1.0};
Point(2) = {0.072841, 0.718770, 0, 1.0};
Point(3) = {0.069865, 0.719904, 0, 1.0};
Point(4) = {0.066690, 0.721098, 0, 1.0};
Point(5) = {0.063226, 0.722389, 0, 1.0};
Point(6) = {0.059540, 0.723724, 0, 1.0};
Point(7) = {0.055612, 0.725141, 0, 1.0};
Point(8) = {0.051484, 0.726604, 0, 1.0};
Point(9) = {0.047179, 0.728148, 0, 1.0};
Point(10) = {0.042709, 0.729710, 0, 1.0};
Point(11) = {0.038086, 0.731353, 0, 1.0};
Point(12) = {0.033334, 0.732984, 0, 1.0};
Point(13) = {0.028466, 0.734676, 0, 1.0};
Point(14) = {0.023510, 0.736354, 0, 1.0};
Point(15) = {0.018498, 0.738058, 0, 1.0};
Point(16) = {0.013430, 0.739682, 0, 1.0};
Point(17) = {0.008326, 0.741345, 0, 1.0};
Point(18) = {0.003220, 0.742857, 0, 1.0};
Point(19) = {-0.001887, 0.744370, 0, 1.0};
Point(20) = {-0.006975, 0.745613, 0, 1.0};
Point(21) = {-0.012005, 0.746817, 0, 1.0};
Point(22) = {-0.016981, 0.747698, 0, 1.0};
Point(23) = {-0.021892, 0.748572, 0, 1.0};
Point(24) = {-0.026662, 0.749079, 0, 1.0};
Point(25) = {-0.031316, 0.749622, 0, 1.0};
Point(26) = {-0.035843, 0.749772, 0, 1.0};
Point(27) = {-0.040171, 0.750000, 0, 1.0};
Point(28) = {-0.044335, 0.749794, 0, 1.0};
Point(29) = {-0.048267, 0.749742, 0, 1.0};
Point(30) = {-0.052024, 0.749205, 0, 1.0};
Point(31) = {-0.055468, 0.748912, 0, 1.0};
Point(32) = {-0.058732, 0.748059, 0, 1.0};
Point(33) = {-0.061645, 0.747553, 0, 1.0};
Point(34) = {-0.064355, 0.746350, 0, 1.0};
Point(35) = {-0.066726, 0.745420, 0, 1.0};
Point(36) = {-0.068784, 0.744357, 0, 1.0};
Point(37) = {-0.070516, 0.743242, 0, 1.0};
Point(38) = {-0.071907, 0.742154, 0, 1.0};
Point(39) = {-0.072971, 0.741013, 0, 1.0};
Point(40) = {-0.073726, 0.739577, 0, 1.0};
Point(41) = {-0.074055, 0.738565, 0, 1.0};
Point(42) = {-0.073943, 0.738219, 0, 1.0};
Point(43) = {-0.073483, 0.737818, 0, 1.0};
Point(44) = {-0.072701, 0.737200, 0, 1.0};
Point(45) = {-0.071584, 0.736579, 0, 1.0};
Point(46) = {-0.070157, 0.735792, 0, 1.0};
Point(47) = {-0.068364, 0.735195, 0, 1.0};
Point(48) = {-0.066287, 0.734293, 0, 1.0};
Point(49) = {-0.063887, 0.733559, 0, 1.0};
Point(50) = {-0.061211, 0.732590, 0, 1.0};
Point(51) = {-0.058196, 0.731889, 0, 1.0};
Point(52) = {-0.054965, 0.730850, 0, 1.0};
Point(53) = {-0.051409, 0.730131, 0, 1.0};
Point(54) = {-0.047645, 0.729142, 0, 1.0};
Point(55) = {-0.043627, 0.728433, 0, 1.0};
Point(56) = {-0.039409, 0.727516, 0, 1.0};
Point(57) = {-0.034965, 0.726853, 0, 1.0};
Point(58) = {-0.030354, 0.726037, 0, 1.0};
Point(59) = {-0.025597, 0.725450, 0, 1.0};
Point(60) = {-0.020659, 0.724746, 0, 1.0};
Point(61) = {-0.015622, 0.724245, 0, 1.0};
Point(62) = {-0.010492, 0.723666, 0, 1.0};
Point(63) = {-0.005270, 0.723260, 0, 1.0};
Point(64) = {0.000006, 0.722804, 0, 1.0};
Point(65) = {0.005309, 0.722512, 0, 1.0};
Point(66) = {0.010628, 0.722192, 0, 1.0};
Point(67) = {0.015928, 0.722023, 0, 1.0};
Point(68) = {0.021181, 0.721819, 0, 1.0};
Point(69) = {0.026383, 0.721677, 0, 1.0};
Point(70) = {0.031485, 0.721446, 0, 1.0};
Point(71) = {0.036462, 0.721222, 0, 1.0};
Point(72) = {0.041298, 0.720901, 0, 1.0};
Point(73) = {0.045966, 0.720577, 0, 1.0};
Point(74) = {0.050452, 0.720163, 0, 1.0};
Point(75) = {0.054747, 0.719739, 0, 1.0};
Point(76) = {0.058821, 0.719242, 0, 1.0};
Point(77) = {0.062640, 0.718733, 0, 1.0};
Point(78) = {0.066220, 0.718163, 0, 1.0};
Point(79) = {0.069495, 0.717598, 0, 1.0};
Point(80) = {0.072556, 0.716988, 0, 1.0};
Point(81) = {0.074340, 0.716605, 0, 1.0};
Point(82) = {-0.074579, -0.718099, 0, 1.0};
Point(83) = {-0.072841, -0.718770, 0, 1.0};
Point(84) = {-0.069865, -0.719904, 0, 1.0};
Point(85) = {-0.066690, -0.721098, 0, 1.0};
Point(86) = {-0.063226, -0.722389, 0, 1.0};
Point(87) = {-0.059540, -0.723724, 0, 1.0};
Point(88) = {-0.055612, -0.725141, 0, 1.0};
Point(89) = {-0.051484, -0.726604, 0, 1.0};
Point(90) = {-0.047179, -0.728148, 0, 1.0};
Point(91) = {-0.042709, -0.729710, 0, 1.0};
Point(92) = {-0.038086, -0.731353, 0, 1.0};
Point(93) = {-0.033334, -0.732984, 0, 1.0};
Point(94) = {-0.028466, -0.734676, 0, 1.0};
Point(95) = {-0.023510, -0.736354, 0, 1.0};
Point(96) = {-0.018498, -0.738058, 0, 1.0};
Point(97) = {-0.013430, -0.739682, 0, 1.0};
Point(98) = {-0.008326, -0.741345, 0, 1.0};
Point(99) = {-0.003220, -0.742857, 0, 1.0};
Point(100) = {0.001887, -0.744370, 0, 1.0};
Point(101) = {0.006975, -0.745613, 0, 1.0};
Point(102) = {0.012005, -0.746817, 0, 1.0};
Point(103) = {0.016981, -0.747698, 0, 1.0};
Point(104) = {0.021892, -0.748572, 0, 1.0};
Point(105) = {0.026662, -0.749079, 0, 1.0};
Point(106) = {0.031316, -0.749622, 0, 1.0};
Point(107) = {0.035843, -0.749772, 0, 1.0};
Point(108) = {0.040171, -0.750000, 0, 1.0};
Point(109) = {0.044335, -0.749794, 0, 1.0};
Point(110) = {0.048267, -0.749742, 0, 1.0};
Point(111) = {0.052024, -0.749205, 0, 1.0};
Point(112) = {0.055468, -0.748912, 0, 1.0};
Point(113) = {0.058732, -0.748059, 0, 1.0};
Point(114) = {0.061645, -0.747553, 0, 1.0};
Point(115) = {0.064355, -0.746350, 0, 1.0};
Point(116) = {0.066726, -0.745420, 0, 1.0};
Point(117) = {0.068784, -0.744357, 0, 1.0};
Point(118) = {0.070516, -0.743242, 0, 1.0};
Point(119) = {0.071907, -0.742154, 0, 1.0};
Point(120) = {0.072971, -0.741013, 0, 1.0};
Point(121) = {0.073726, -0.739577, 0, 1.0};
Point(122) = {0.074055, -0.738565, 0, 1.0};
Point(123) = {0.073943, -0.738219, 0, 1.0};
Point(124) = {0.073483, -0.737818, 0, 1.0};
Point(125) = {0.072701, -0.737200, 0, 1.0};
Point(126) = {0.071584, -0.736579, 0, 1.0};
Point(127) = {0.070157, -0.735792, 0, 1.0};
Point(128) = {0.068364, -0.735195, 0, 1.0};
Point(129) = {0.066287, -0.734293, 0, 1.0};
Point(130) = {0.063887, -0.733559, 0, 1.0};
Point(131) = {0.061211, -0.732590, 0, 1.0};
Point(132) = {0.058196, -0.731889, 0, 1.0};
Point(133) = {0.054965, -0.730850, 0, 1.0};
Point(134) = {0.051409, -0.730131, 0, 1.0};
Point(135) = {0.047645, -0.729142, 0, 1.0};
Point(136) = {0.043627, -0.728433, 0, 1.0};
Point(137) = {0.039409, -0.727516, 0, 1.0};
Point(138) = {0.034965, -0.726853, 0, 1.0};
Point(139) = {0.030354, -0.726037, 0, 1.0};
Point(140) = {0.025597, -0.725450, 0, 1.0};
Point(141) = {0.020659, -0.724746, 0, 1.0};
Point(142) = {0.015622, -0.724245, 0, 1.0};
Point(143) = {0.010492, -0.723666, 0, 1.0};
Point(144) = {0.005270, -0.723260, 0, 1.0};
Point(145) = {-0.000006, -0.722804, 0, 1.0};
Point(146) = {-0.005309, -0.722512, 0, 1.0};
Point(147) = {-0.010628, -0.722192, 0, 1.0};
Point(148) = {-0.015928, -0.722023, 0, 1.0};
Point(149) = {-0.021181, -0.721819, 0, 1.0};
Point(150) = {-0.026383, -0.721677, 0, 1.0};
Point(151) = {-0.031485, -0.721446, 0, 1.0};
Point(152) = {-0.036462, -0.721222, 0, 1.0};
Point(153) = {-0.041298, -0.720901, 0, 1.0};
Point(154) = {-0.045966, -0.720577, 0, 1.0};
Point(155) = {-0.050452, -0.720163, 0, 1.0};
Point(156) = {-0.054747, -0.719739, 0, 1.0};
Point(157) = {-0.058821, -0.719242, 0, 1.0};
Point(158) = {-0.062640, -0.718733, 0, 1.0};
Point(159) = {-0.066220, -0.718163, 0, 1.0};
Point(160) = {-0.069495, -0.717598, 0, 1.0};
Point(161) = {-0.072556, -0.716988, 0, 1.0};
Point(162) = {-0.074340, -0.716605, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
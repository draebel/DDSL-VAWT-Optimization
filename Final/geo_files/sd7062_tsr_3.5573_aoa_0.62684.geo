SetFactory("OpenCASCADE");

Point(1) = {0.149988, 0.726772, 0, 1.0};
Point(2) = {0.149293, 0.726893, 0, 1.0};
Point(3) = {0.147261, 0.727285, 0, 1.0};
Point(4) = {0.144009, 0.727979, 0, 1.0};
Point(5) = {0.139647, 0.728957, 0, 1.0};
Point(6) = {0.134278, 0.730174, 0, 1.0};
Point(7) = {0.127973, 0.731591, 0, 1.0};
Point(8) = {0.120818, 0.733189, 0, 1.0};
Point(9) = {0.112929, 0.734947, 0, 1.0};
Point(10) = {0.104427, 0.736827, 0, 1.0};
Point(11) = {0.095440, 0.738773, 0, 1.0};
Point(12) = {0.086083, 0.740724, 0, 1.0};
Point(13) = {0.076465, 0.742611, 0, 1.0};
Point(14) = {0.066684, 0.744378, 0, 1.0};
Point(15) = {0.056836, 0.745970, 0, 1.0};
Point(16) = {0.047011, 0.747345, 0, 1.0};
Point(17) = {0.037299, 0.748464, 0, 1.0};
Point(18) = {0.027785, 0.749294, 0, 1.0};
Point(19) = {0.018550, 0.749813, 0, 1.0};
Point(20) = {0.009674, 0.750000, 0, 1.0};
Point(21) = {0.001224, 0.749844, 0, 1.0};
Point(22) = {-0.006732, 0.749343, 0, 1.0};
Point(23) = {-0.014134, 0.748498, 0, 1.0};
Point(24) = {-0.020933, 0.747323, 0, 1.0};
Point(25) = {-0.027088, 0.745834, 0, 1.0};
Point(26) = {-0.032560, 0.744064, 0, 1.0};
Point(27) = {-0.037318, 0.742054, 0, 1.0};
Point(28) = {-0.041336, 0.739847, 0, 1.0};
Point(29) = {-0.044606, 0.737501, 0, 1.0};
Point(30) = {-0.047113, 0.735090, 0, 1.0};
Point(31) = {-0.048835, 0.732689, 0, 1.0};
Point(32) = {-0.049778, 0.730379, 0, 1.0};
Point(33) = {-0.049953, 0.728305, 0, 1.0};
Point(34) = {-0.049174, 0.726720, 0, 1.0};
Point(35) = {-0.047209, 0.725527, 0, 1.0};
Point(36) = {-0.044067, 0.724484, 0, 1.0};
Point(37) = {-0.039860, 0.723602, 0, 1.0};
Point(38) = {-0.034645, 0.722895, 0, 1.0};
Point(39) = {-0.028475, 0.722366, 0, 1.0};
Point(40) = {-0.021418, 0.722008, 0, 1.0};
Point(41) = {-0.013546, 0.721826, 0, 1.0};
Point(42) = {-0.004935, 0.721812, 0, 1.0};
Point(43) = {0.004325, 0.721953, 0, 1.0};
Point(44) = {0.014140, 0.722237, 0, 1.0};
Point(45) = {0.024411, 0.722651, 0, 1.0};
Point(46) = {0.035036, 0.723177, 0, 1.0};
Point(47) = {0.045907, 0.723782, 0, 1.0};
Point(48) = {0.056911, 0.724430, 0, 1.0};
Point(49) = {0.067915, 0.725079, 0, 1.0};
Point(50) = {0.078778, 0.725697, 0, 1.0};
Point(51) = {0.089363, 0.726249, 0, 1.0};
Point(52) = {0.099520, 0.726710, 0, 1.0};
Point(53) = {0.109103, 0.727061, 0, 1.0};
Point(54) = {0.117972, 0.727296, 0, 1.0};
Point(55) = {0.125990, 0.727412, 0, 1.0};
Point(56) = {0.133030, 0.727417, 0, 1.0};
Point(57) = {0.138975, 0.727324, 0, 1.0};
Point(58) = {0.143720, 0.727166, 0, 1.0};
Point(59) = {0.147176, 0.726986, 0, 1.0};
Point(60) = {0.149281, 0.726833, 0, 1.0};
Point(61) = {0.149990, 0.726772, 0, 1.0};
Point(62) = {-0.149988, -0.726772, 0, 1.0};
Point(63) = {-0.149293, -0.726893, 0, 1.0};
Point(64) = {-0.147261, -0.727285, 0, 1.0};
Point(65) = {-0.144009, -0.727979, 0, 1.0};
Point(66) = {-0.139647, -0.728957, 0, 1.0};
Point(67) = {-0.134278, -0.730174, 0, 1.0};
Point(68) = {-0.127973, -0.731591, 0, 1.0};
Point(69) = {-0.120818, -0.733189, 0, 1.0};
Point(70) = {-0.112929, -0.734947, 0, 1.0};
Point(71) = {-0.104427, -0.736827, 0, 1.0};
Point(72) = {-0.095440, -0.738773, 0, 1.0};
Point(73) = {-0.086083, -0.740724, 0, 1.0};
Point(74) = {-0.076465, -0.742611, 0, 1.0};
Point(75) = {-0.066684, -0.744378, 0, 1.0};
Point(76) = {-0.056836, -0.745970, 0, 1.0};
Point(77) = {-0.047011, -0.747345, 0, 1.0};
Point(78) = {-0.037299, -0.748464, 0, 1.0};
Point(79) = {-0.027785, -0.749294, 0, 1.0};
Point(80) = {-0.018550, -0.749813, 0, 1.0};
Point(81) = {-0.009674, -0.750000, 0, 1.0};
Point(82) = {-0.001224, -0.749844, 0, 1.0};
Point(83) = {0.006732, -0.749343, 0, 1.0};
Point(84) = {0.014134, -0.748498, 0, 1.0};
Point(85) = {0.020933, -0.747323, 0, 1.0};
Point(86) = {0.027088, -0.745834, 0, 1.0};
Point(87) = {0.032560, -0.744064, 0, 1.0};
Point(88) = {0.037318, -0.742054, 0, 1.0};
Point(89) = {0.041336, -0.739847, 0, 1.0};
Point(90) = {0.044606, -0.737501, 0, 1.0};
Point(91) = {0.047113, -0.735090, 0, 1.0};
Point(92) = {0.048835, -0.732689, 0, 1.0};
Point(93) = {0.049778, -0.730379, 0, 1.0};
Point(94) = {0.049953, -0.728305, 0, 1.0};
Point(95) = {0.049174, -0.726720, 0, 1.0};
Point(96) = {0.047209, -0.725527, 0, 1.0};
Point(97) = {0.044067, -0.724484, 0, 1.0};
Point(98) = {0.039860, -0.723602, 0, 1.0};
Point(99) = {0.034645, -0.722895, 0, 1.0};
Point(100) = {0.028475, -0.722366, 0, 1.0};
Point(101) = {0.021418, -0.722008, 0, 1.0};
Point(102) = {0.013546, -0.721826, 0, 1.0};
Point(103) = {0.004935, -0.721812, 0, 1.0};
Point(104) = {-0.004325, -0.721953, 0, 1.0};
Point(105) = {-0.014140, -0.722237, 0, 1.0};
Point(106) = {-0.024411, -0.722651, 0, 1.0};
Point(107) = {-0.035036, -0.723177, 0, 1.0};
Point(108) = {-0.045907, -0.723782, 0, 1.0};
Point(109) = {-0.056911, -0.724430, 0, 1.0};
Point(110) = {-0.067915, -0.725079, 0, 1.0};
Point(111) = {-0.078778, -0.725697, 0, 1.0};
Point(112) = {-0.089363, -0.726249, 0, 1.0};
Point(113) = {-0.099520, -0.726710, 0, 1.0};
Point(114) = {-0.109103, -0.727061, 0, 1.0};
Point(115) = {-0.117972, -0.727296, 0, 1.0};
Point(116) = {-0.125990, -0.727412, 0, 1.0};
Point(117) = {-0.133030, -0.727417, 0, 1.0};
Point(118) = {-0.138975, -0.727324, 0, 1.0};
Point(119) = {-0.143720, -0.727166, 0, 1.0};
Point(120) = {-0.147176, -0.726986, 0, 1.0};
Point(121) = {-0.149281, -0.726833, 0, 1.0};
Point(122) = {-0.149990, -0.726772, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 45 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074994, 0.738386, 0, 1.0};
Point(2) = {0.074647, 0.738447, 0, 1.0};
Point(3) = {0.073631, 0.738643, 0, 1.0};
Point(4) = {0.072004, 0.738990, 0, 1.0};
Point(5) = {0.069824, 0.739478, 0, 1.0};
Point(6) = {0.067139, 0.740087, 0, 1.0};
Point(7) = {0.063987, 0.740795, 0, 1.0};
Point(8) = {0.060409, 0.741595, 0, 1.0};
Point(9) = {0.056465, 0.742474, 0, 1.0};
Point(10) = {0.052214, 0.743413, 0, 1.0};
Point(11) = {0.047720, 0.744387, 0, 1.0};
Point(12) = {0.043041, 0.745362, 0, 1.0};
Point(13) = {0.038232, 0.746305, 0, 1.0};
Point(14) = {0.033342, 0.747189, 0, 1.0};
Point(15) = {0.028418, 0.747985, 0, 1.0};
Point(16) = {0.023505, 0.748673, 0, 1.0};
Point(17) = {0.018649, 0.749232, 0, 1.0};
Point(18) = {0.013893, 0.749647, 0, 1.0};
Point(19) = {0.009275, 0.749906, 0, 1.0};
Point(20) = {0.004837, 0.750000, 0, 1.0};
Point(21) = {0.000612, 0.749922, 0, 1.0};
Point(22) = {-0.003366, 0.749672, 0, 1.0};
Point(23) = {-0.007067, 0.749249, 0, 1.0};
Point(24) = {-0.010467, 0.748661, 0, 1.0};
Point(25) = {-0.013544, 0.747917, 0, 1.0};
Point(26) = {-0.016280, 0.747032, 0, 1.0};
Point(27) = {-0.018659, 0.746027, 0, 1.0};
Point(28) = {-0.020668, 0.744924, 0, 1.0};
Point(29) = {-0.022303, 0.743751, 0, 1.0};
Point(30) = {-0.023556, 0.742545, 0, 1.0};
Point(31) = {-0.024418, 0.741345, 0, 1.0};
Point(32) = {-0.024889, 0.740190, 0, 1.0};
Point(33) = {-0.024977, 0.739153, 0, 1.0};
Point(34) = {-0.024587, 0.738360, 0, 1.0};
Point(35) = {-0.023605, 0.737763, 0, 1.0};
Point(36) = {-0.022033, 0.737242, 0, 1.0};
Point(37) = {-0.019930, 0.736801, 0, 1.0};
Point(38) = {-0.017323, 0.736448, 0, 1.0};
Point(39) = {-0.014237, 0.736183, 0, 1.0};
Point(40) = {-0.010709, 0.736004, 0, 1.0};
Point(41) = {-0.006773, 0.735913, 0, 1.0};
Point(42) = {-0.002468, 0.735906, 0, 1.0};
Point(43) = {0.002162, 0.735976, 0, 1.0};
Point(44) = {0.007070, 0.736119, 0, 1.0};
Point(45) = {0.012206, 0.736326, 0, 1.0};
Point(46) = {0.017518, 0.736588, 0, 1.0};
Point(47) = {0.022954, 0.736891, 0, 1.0};
Point(48) = {0.028455, 0.737215, 0, 1.0};
Point(49) = {0.033957, 0.737540, 0, 1.0};
Point(50) = {0.039389, 0.737848, 0, 1.0};
Point(51) = {0.044681, 0.738124, 0, 1.0};
Point(52) = {0.049760, 0.738355, 0, 1.0};
Point(53) = {0.054551, 0.738530, 0, 1.0};
Point(54) = {0.058986, 0.738648, 0, 1.0};
Point(55) = {0.062995, 0.738706, 0, 1.0};
Point(56) = {0.066515, 0.738709, 0, 1.0};
Point(57) = {0.069488, 0.738662, 0, 1.0};
Point(58) = {0.071860, 0.738583, 0, 1.0};
Point(59) = {0.073588, 0.738493, 0, 1.0};
Point(60) = {0.074640, 0.738417, 0, 1.0};
Point(61) = {0.074995, 0.738386, 0, 1.0};
Point(62) = {-0.074994, -0.738386, 0, 1.0};
Point(63) = {-0.074647, -0.738447, 0, 1.0};
Point(64) = {-0.073631, -0.738643, 0, 1.0};
Point(65) = {-0.072004, -0.738990, 0, 1.0};
Point(66) = {-0.069824, -0.739478, 0, 1.0};
Point(67) = {-0.067139, -0.740087, 0, 1.0};
Point(68) = {-0.063987, -0.740795, 0, 1.0};
Point(69) = {-0.060409, -0.741595, 0, 1.0};
Point(70) = {-0.056465, -0.742474, 0, 1.0};
Point(71) = {-0.052214, -0.743413, 0, 1.0};
Point(72) = {-0.047720, -0.744387, 0, 1.0};
Point(73) = {-0.043041, -0.745362, 0, 1.0};
Point(74) = {-0.038232, -0.746305, 0, 1.0};
Point(75) = {-0.033342, -0.747189, 0, 1.0};
Point(76) = {-0.028418, -0.747985, 0, 1.0};
Point(77) = {-0.023505, -0.748673, 0, 1.0};
Point(78) = {-0.018649, -0.749232, 0, 1.0};
Point(79) = {-0.013893, -0.749647, 0, 1.0};
Point(80) = {-0.009275, -0.749906, 0, 1.0};
Point(81) = {-0.004837, -0.750000, 0, 1.0};
Point(82) = {-0.000612, -0.749922, 0, 1.0};
Point(83) = {0.003366, -0.749672, 0, 1.0};
Point(84) = {0.007067, -0.749249, 0, 1.0};
Point(85) = {0.010467, -0.748661, 0, 1.0};
Point(86) = {0.013544, -0.747917, 0, 1.0};
Point(87) = {0.016280, -0.747032, 0, 1.0};
Point(88) = {0.018659, -0.746027, 0, 1.0};
Point(89) = {0.020668, -0.744924, 0, 1.0};
Point(90) = {0.022303, -0.743751, 0, 1.0};
Point(91) = {0.023556, -0.742545, 0, 1.0};
Point(92) = {0.024418, -0.741345, 0, 1.0};
Point(93) = {0.024889, -0.740190, 0, 1.0};
Point(94) = {0.024977, -0.739153, 0, 1.0};
Point(95) = {0.024587, -0.738360, 0, 1.0};
Point(96) = {0.023605, -0.737763, 0, 1.0};
Point(97) = {0.022033, -0.737242, 0, 1.0};
Point(98) = {0.019930, -0.736801, 0, 1.0};
Point(99) = {0.017323, -0.736448, 0, 1.0};
Point(100) = {0.014237, -0.736183, 0, 1.0};
Point(101) = {0.010709, -0.736004, 0, 1.0};
Point(102) = {0.006773, -0.735913, 0, 1.0};
Point(103) = {0.002468, -0.735906, 0, 1.0};
Point(104) = {-0.002162, -0.735976, 0, 1.0};
Point(105) = {-0.007070, -0.736119, 0, 1.0};
Point(106) = {-0.012206, -0.736326, 0, 1.0};
Point(107) = {-0.017518, -0.736588, 0, 1.0};
Point(108) = {-0.022954, -0.736891, 0, 1.0};
Point(109) = {-0.028455, -0.737215, 0, 1.0};
Point(110) = {-0.033957, -0.737540, 0, 1.0};
Point(111) = {-0.039389, -0.737848, 0, 1.0};
Point(112) = {-0.044681, -0.738124, 0, 1.0};
Point(113) = {-0.049760, -0.738355, 0, 1.0};
Point(114) = {-0.054551, -0.738530, 0, 1.0};
Point(115) = {-0.058986, -0.738648, 0, 1.0};
Point(116) = {-0.062995, -0.738706, 0, 1.0};
Point(117) = {-0.066515, -0.738709, 0, 1.0};
Point(118) = {-0.069488, -0.738662, 0, 1.0};
Point(119) = {-0.071860, -0.738583, 0, 1.0};
Point(120) = {-0.073588, -0.738493, 0, 1.0};
Point(121) = {-0.074640, -0.738417, 0, 1.0};
Point(122) = {-0.074995, -0.738386, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 22 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
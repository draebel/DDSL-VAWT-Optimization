SetFactory("OpenCASCADE");

Point(1) = {0.112419, 0.732583, 0, 1.0};
Point(2) = {0.111898, 0.732674, 0, 1.0};
Point(3) = {0.110375, 0.732968, 0, 1.0};
Point(4) = {0.107936, 0.733489, 0, 1.0};
Point(5) = {0.104666, 0.734222, 0, 1.0};
Point(6) = {0.100640, 0.735134, 0, 1.0};
Point(7) = {0.095912, 0.736197, 0, 1.0};
Point(8) = {0.090548, 0.737395, 0, 1.0};
Point(9) = {0.084632, 0.738714, 0, 1.0};
Point(10) = {0.078257, 0.740123, 0, 1.0};
Point(11) = {0.071519, 0.741582, 0, 1.0};
Point(12) = {0.064503, 0.743044, 0, 1.0};
Point(13) = {0.057291, 0.744460, 0, 1.0};
Point(14) = {0.049957, 0.745785, 0, 1.0};
Point(15) = {0.042574, 0.746978, 0, 1.0};
Point(16) = {0.035206, 0.748010, 0, 1.0};
Point(17) = {0.027924, 0.748848, 0, 1.0};
Point(18) = {0.020791, 0.749470, 0, 1.0};
Point(19) = {0.013866, 0.749860, 0, 1.0};
Point(20) = {0.007211, 0.750000, 0, 1.0};
Point(21) = {0.000875, 0.749883, 0, 1.0};
Point(22) = {-0.005091, 0.749508, 0, 1.0};
Point(23) = {-0.010640, 0.748874, 0, 1.0};
Point(24) = {-0.015739, 0.747993, 0, 1.0};
Point(25) = {-0.020353, 0.746876, 0, 1.0};
Point(26) = {-0.024456, 0.745549, 0, 1.0};
Point(27) = {-0.028024, 0.744042, 0, 1.0};
Point(28) = {-0.031037, 0.742388, 0, 1.0};
Point(29) = {-0.033489, 0.740628, 0, 1.0};
Point(30) = {-0.035368, 0.738821, 0, 1.0};
Point(31) = {-0.036659, 0.737020, 0, 1.0};
Point(32) = {-0.037367, 0.735288, 0, 1.0};
Point(33) = {-0.037498, 0.733733, 0, 1.0};
Point(34) = {-0.036914, 0.732545, 0, 1.0};
Point(35) = {-0.035440, 0.731650, 0, 1.0};
Point(36) = {-0.033084, 0.730868, 0, 1.0};
Point(37) = {-0.029930, 0.730207, 0, 1.0};
Point(38) = {-0.026020, 0.729677, 0, 1.0};
Point(39) = {-0.021393, 0.729280, 0, 1.0};
Point(40) = {-0.016102, 0.729012, 0, 1.0};
Point(41) = {-0.010199, 0.728875, 0, 1.0};
Point(42) = {-0.003743, 0.728865, 0, 1.0};
Point(43) = {0.003200, 0.728970, 0, 1.0};
Point(44) = {0.010560, 0.729184, 0, 1.0};
Point(45) = {0.018261, 0.729494, 0, 1.0};
Point(46) = {0.026227, 0.729888, 0, 1.0};
Point(47) = {0.034379, 0.730342, 0, 1.0};
Point(48) = {0.042629, 0.730827, 0, 1.0};
Point(49) = {0.050880, 0.731314, 0, 1.0};
Point(50) = {0.059026, 0.731777, 0, 1.0};
Point(51) = {0.066962, 0.732191, 0, 1.0};
Point(52) = {0.074578, 0.732537, 0, 1.0};
Point(53) = {0.081763, 0.732800, 0, 1.0};
Point(54) = {0.088413, 0.732976, 0, 1.0};
Point(55) = {0.094425, 0.733064, 0, 1.0};
Point(56) = {0.099704, 0.733067, 0, 1.0};
Point(57) = {0.104162, 0.732997, 0, 1.0};
Point(58) = {0.107719, 0.732879, 0, 1.0};
Point(59) = {0.110311, 0.732744, 0, 1.0};
Point(60) = {0.111889, 0.732629, 0, 1.0};
Point(61) = {0.112421, 0.732583, 0, 1.0};
Point(62) = {-0.112419, -0.732583, 0, 1.0};
Point(63) = {-0.111898, -0.732674, 0, 1.0};
Point(64) = {-0.110375, -0.732968, 0, 1.0};
Point(65) = {-0.107936, -0.733489, 0, 1.0};
Point(66) = {-0.104666, -0.734222, 0, 1.0};
Point(67) = {-0.100640, -0.735134, 0, 1.0};
Point(68) = {-0.095912, -0.736197, 0, 1.0};
Point(69) = {-0.090548, -0.737395, 0, 1.0};
Point(70) = {-0.084632, -0.738714, 0, 1.0};
Point(71) = {-0.078257, -0.740123, 0, 1.0};
Point(72) = {-0.071519, -0.741582, 0, 1.0};
Point(73) = {-0.064503, -0.743044, 0, 1.0};
Point(74) = {-0.057291, -0.744460, 0, 1.0};
Point(75) = {-0.049957, -0.745785, 0, 1.0};
Point(76) = {-0.042574, -0.746978, 0, 1.0};
Point(77) = {-0.035206, -0.748010, 0, 1.0};
Point(78) = {-0.027924, -0.748848, 0, 1.0};
Point(79) = {-0.020791, -0.749470, 0, 1.0};
Point(80) = {-0.013866, -0.749860, 0, 1.0};
Point(81) = {-0.007211, -0.750000, 0, 1.0};
Point(82) = {-0.000875, -0.749883, 0, 1.0};
Point(83) = {0.005091, -0.749508, 0, 1.0};
Point(84) = {0.010640, -0.748874, 0, 1.0};
Point(85) = {0.015739, -0.747993, 0, 1.0};
Point(86) = {0.020353, -0.746876, 0, 1.0};
Point(87) = {0.024456, -0.745549, 0, 1.0};
Point(88) = {0.028024, -0.744042, 0, 1.0};
Point(89) = {0.031037, -0.742388, 0, 1.0};
Point(90) = {0.033489, -0.740628, 0, 1.0};
Point(91) = {0.035368, -0.738821, 0, 1.0};
Point(92) = {0.036659, -0.737020, 0, 1.0};
Point(93) = {0.037367, -0.735288, 0, 1.0};
Point(94) = {0.037498, -0.733733, 0, 1.0};
Point(95) = {0.036914, -0.732545, 0, 1.0};
Point(96) = {0.035440, -0.731650, 0, 1.0};
Point(97) = {0.033084, -0.730868, 0, 1.0};
Point(98) = {0.029930, -0.730207, 0, 1.0};
Point(99) = {0.026020, -0.729677, 0, 1.0};
Point(100) = {0.021393, -0.729280, 0, 1.0};
Point(101) = {0.016102, -0.729012, 0, 1.0};
Point(102) = {0.010199, -0.728875, 0, 1.0};
Point(103) = {0.003743, -0.728865, 0, 1.0};
Point(104) = {-0.003200, -0.728970, 0, 1.0};
Point(105) = {-0.010560, -0.729184, 0, 1.0};
Point(106) = {-0.018261, -0.729494, 0, 1.0};
Point(107) = {-0.026227, -0.729888, 0, 1.0};
Point(108) = {-0.034379, -0.730342, 0, 1.0};
Point(109) = {-0.042629, -0.730827, 0, 1.0};
Point(110) = {-0.050880, -0.731314, 0, 1.0};
Point(111) = {-0.059026, -0.731777, 0, 1.0};
Point(112) = {-0.066962, -0.732191, 0, 1.0};
Point(113) = {-0.074578, -0.732537, 0, 1.0};
Point(114) = {-0.081763, -0.732800, 0, 1.0};
Point(115) = {-0.088413, -0.732976, 0, 1.0};
Point(116) = {-0.094425, -0.733064, 0, 1.0};
Point(117) = {-0.099704, -0.733067, 0, 1.0};
Point(118) = {-0.104162, -0.732997, 0, 1.0};
Point(119) = {-0.107719, -0.732879, 0, 1.0};
Point(120) = {-0.110311, -0.732744, 0, 1.0};
Point(121) = {-0.111889, -0.732629, 0, 1.0};
Point(122) = {-0.112421, -0.732583, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:82};
Spline(6) = {82:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 1 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
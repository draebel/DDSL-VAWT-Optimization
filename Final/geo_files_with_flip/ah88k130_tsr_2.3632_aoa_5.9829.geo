SetFactory("OpenCASCADE");

Point(1) = {0.074364, 0.730689, 0, 1.0};
Point(2) = {0.074234, 0.730687, 0, 1.0};
Point(3) = {0.071745, 0.730333, 0, 1.0};
Point(4) = {0.068957, 0.729928, 0, 1.0};
Point(5) = {0.065880, 0.729450, 0, 1.0};
Point(6) = {0.062528, 0.728938, 0, 1.0};
Point(7) = {0.058914, 0.728360, 0, 1.0};
Point(8) = {0.055052, 0.727718, 0, 1.0};
Point(9) = {0.050962, 0.727027, 0, 1.0};
Point(10) = {0.046659, 0.726280, 0, 1.0};
Point(11) = {0.042163, 0.725515, 0, 1.0};
Point(12) = {0.037501, 0.724780, 0, 1.0};
Point(13) = {0.032709, 0.724234, 0, 1.0};
Point(14) = {0.027806, 0.723872, 0, 1.0};
Point(15) = {0.022809, 0.723662, 0, 1.0};
Point(16) = {0.017737, 0.723564, 0, 1.0};
Point(17) = {0.012609, 0.723591, 0, 1.0};
Point(18) = {0.007451, 0.723735, 0, 1.0};
Point(19) = {0.002283, 0.724000, 0, 1.0};
Point(20) = {-0.002869, 0.724406, 0, 1.0};
Point(21) = {-0.007983, 0.724973, 0, 1.0};
Point(22) = {-0.013043, 0.725644, 0, 1.0};
Point(23) = {-0.018024, 0.726422, 0, 1.0};
Point(24) = {-0.022907, 0.727291, 0, 1.0};
Point(25) = {-0.027672, 0.728247, 0, 1.0};
Point(26) = {-0.032299, 0.729278, 0, 1.0};
Point(27) = {-0.036770, 0.730371, 0, 1.0};
Point(28) = {-0.041064, 0.731527, 0, 1.0};
Point(29) = {-0.045163, 0.732727, 0, 1.0};
Point(30) = {-0.049051, 0.733967, 0, 1.0};
Point(31) = {-0.052713, 0.735229, 0, 1.0};
Point(32) = {-0.056131, 0.736525, 0, 1.0};
Point(33) = {-0.059295, 0.737814, 0, 1.0};
Point(34) = {-0.062186, 0.739112, 0, 1.0};
Point(35) = {-0.064798, 0.740384, 0, 1.0};
Point(36) = {-0.067117, 0.741648, 0, 1.0};
Point(37) = {-0.069135, 0.742853, 0, 1.0};
Point(38) = {-0.070843, 0.744041, 0, 1.0};
Point(39) = {-0.072241, 0.745091, 0, 1.0};
Point(40) = {-0.073312, 0.746134, 0, 1.0};
Point(41) = {-0.074065, 0.747025, 0, 1.0};
Point(42) = {-0.074497, 0.747776, 0, 1.0};
Point(43) = {-0.074591, 0.748493, 0, 1.0};
Point(44) = {-0.074382, 0.748871, 0, 1.0};
Point(45) = {-0.073836, 0.749213, 0, 1.0};
Point(46) = {-0.072958, 0.749509, 0, 1.0};
Point(47) = {-0.071757, 0.749707, 0, 1.0};
Point(48) = {-0.070235, 0.749844, 0, 1.0};
Point(49) = {-0.068390, 0.749970, 0, 1.0};
Point(50) = {-0.066242, 0.749992, 0, 1.0};
Point(51) = {-0.063790, 0.750000, 0, 1.0};
Point(52) = {-0.061051, 0.749939, 0, 1.0};
Point(53) = {-0.058035, 0.749839, 0, 1.0};
Point(54) = {-0.054752, 0.749684, 0, 1.0};
Point(55) = {-0.051218, 0.749497, 0, 1.0};
Point(56) = {-0.047449, 0.749257, 0, 1.0};
Point(57) = {-0.043460, 0.748978, 0, 1.0};
Point(58) = {-0.039268, 0.748661, 0, 1.0};
Point(59) = {-0.034890, 0.748304, 0, 1.0};
Point(60) = {-0.030347, 0.747904, 0, 1.0};
Point(61) = {-0.025657, 0.747476, 0, 1.0};
Point(62) = {-0.020841, 0.747010, 0, 1.0};
Point(63) = {-0.015919, 0.746505, 0, 1.0};
Point(64) = {-0.010913, 0.745973, 0, 1.0};
Point(65) = {-0.005842, 0.745403, 0, 1.0};
Point(66) = {-0.000732, 0.744802, 0, 1.0};
Point(67) = {0.004396, 0.744162, 0, 1.0};
Point(68) = {0.009520, 0.743480, 0, 1.0};
Point(69) = {0.014616, 0.742741, 0, 1.0};
Point(70) = {0.019667, 0.741983, 0, 1.0};
Point(71) = {0.024647, 0.741200, 0, 1.0};
Point(72) = {0.029539, 0.740411, 0, 1.0};
Point(73) = {0.034319, 0.739596, 0, 1.0};
Point(74) = {0.038967, 0.738775, 0, 1.0};
Point(75) = {0.043461, 0.737897, 0, 1.0};
Point(76) = {0.047775, 0.736929, 0, 1.0};
Point(77) = {0.051897, 0.735955, 0, 1.0};
Point(78) = {0.055824, 0.735083, 0, 1.0};
Point(79) = {0.059538, 0.734320, 0, 1.0};
Point(80) = {0.063025, 0.733680, 0, 1.0};
Point(81) = {0.066264, 0.733111, 0, 1.0};
Point(82) = {0.069252, 0.732736, 0, 1.0};
Point(83) = {0.071964, 0.732419, 0, 1.0};
Point(84) = {0.074391, 0.732188, 0, 1.0};
Point(85) = {0.074520, 0.732178, 0, 1.0};
Point(86) = {-0.074364, -0.730689, 0, 1.0};
Point(87) = {-0.074234, -0.730687, 0, 1.0};
Point(88) = {-0.071745, -0.730333, 0, 1.0};
Point(89) = {-0.068957, -0.729928, 0, 1.0};
Point(90) = {-0.065880, -0.729450, 0, 1.0};
Point(91) = {-0.062528, -0.728938, 0, 1.0};
Point(92) = {-0.058914, -0.728360, 0, 1.0};
Point(93) = {-0.055052, -0.727718, 0, 1.0};
Point(94) = {-0.050962, -0.727027, 0, 1.0};
Point(95) = {-0.046659, -0.726280, 0, 1.0};
Point(96) = {-0.042163, -0.725515, 0, 1.0};
Point(97) = {-0.037501, -0.724780, 0, 1.0};
Point(98) = {-0.032709, -0.724234, 0, 1.0};
Point(99) = {-0.027806, -0.723872, 0, 1.0};
Point(100) = {-0.022809, -0.723662, 0, 1.0};
Point(101) = {-0.017737, -0.723564, 0, 1.0};
Point(102) = {-0.012609, -0.723591, 0, 1.0};
Point(103) = {-0.007451, -0.723735, 0, 1.0};
Point(104) = {-0.002283, -0.724000, 0, 1.0};
Point(105) = {0.002869, -0.724406, 0, 1.0};
Point(106) = {0.007983, -0.724973, 0, 1.0};
Point(107) = {0.013043, -0.725644, 0, 1.0};
Point(108) = {0.018024, -0.726422, 0, 1.0};
Point(109) = {0.022907, -0.727291, 0, 1.0};
Point(110) = {0.027672, -0.728247, 0, 1.0};
Point(111) = {0.032299, -0.729278, 0, 1.0};
Point(112) = {0.036770, -0.730371, 0, 1.0};
Point(113) = {0.041064, -0.731527, 0, 1.0};
Point(114) = {0.045163, -0.732727, 0, 1.0};
Point(115) = {0.049051, -0.733967, 0, 1.0};
Point(116) = {0.052713, -0.735229, 0, 1.0};
Point(117) = {0.056131, -0.736525, 0, 1.0};
Point(118) = {0.059295, -0.737814, 0, 1.0};
Point(119) = {0.062186, -0.739112, 0, 1.0};
Point(120) = {0.064798, -0.740384, 0, 1.0};
Point(121) = {0.067117, -0.741648, 0, 1.0};
Point(122) = {0.069135, -0.742853, 0, 1.0};
Point(123) = {0.070843, -0.744041, 0, 1.0};
Point(124) = {0.072241, -0.745091, 0, 1.0};
Point(125) = {0.073312, -0.746134, 0, 1.0};
Point(126) = {0.074065, -0.747025, 0, 1.0};
Point(127) = {0.074497, -0.747776, 0, 1.0};
Point(128) = {0.074591, -0.748493, 0, 1.0};
Point(129) = {0.074382, -0.748871, 0, 1.0};
Point(130) = {0.073836, -0.749213, 0, 1.0};
Point(131) = {0.072958, -0.749509, 0, 1.0};
Point(132) = {0.071757, -0.749707, 0, 1.0};
Point(133) = {0.070235, -0.749844, 0, 1.0};
Point(134) = {0.068390, -0.749970, 0, 1.0};
Point(135) = {0.066242, -0.749992, 0, 1.0};
Point(136) = {0.063790, -0.750000, 0, 1.0};
Point(137) = {0.061051, -0.749939, 0, 1.0};
Point(138) = {0.058035, -0.749839, 0, 1.0};
Point(139) = {0.054752, -0.749684, 0, 1.0};
Point(140) = {0.051218, -0.749497, 0, 1.0};
Point(141) = {0.047449, -0.749257, 0, 1.0};
Point(142) = {0.043460, -0.748978, 0, 1.0};
Point(143) = {0.039268, -0.748661, 0, 1.0};
Point(144) = {0.034890, -0.748304, 0, 1.0};
Point(145) = {0.030347, -0.747904, 0, 1.0};
Point(146) = {0.025657, -0.747476, 0, 1.0};
Point(147) = {0.020841, -0.747010, 0, 1.0};
Point(148) = {0.015919, -0.746505, 0, 1.0};
Point(149) = {0.010913, -0.745973, 0, 1.0};
Point(150) = {0.005842, -0.745403, 0, 1.0};
Point(151) = {0.000732, -0.744802, 0, 1.0};
Point(152) = {-0.004396, -0.744162, 0, 1.0};
Point(153) = {-0.009520, -0.743480, 0, 1.0};
Point(154) = {-0.014616, -0.742741, 0, 1.0};
Point(155) = {-0.019667, -0.741983, 0, 1.0};
Point(156) = {-0.024647, -0.741200, 0, 1.0};
Point(157) = {-0.029539, -0.740411, 0, 1.0};
Point(158) = {-0.034319, -0.739596, 0, 1.0};
Point(159) = {-0.038967, -0.738775, 0, 1.0};
Point(160) = {-0.043461, -0.737897, 0, 1.0};
Point(161) = {-0.047775, -0.736929, 0, 1.0};
Point(162) = {-0.051897, -0.735955, 0, 1.0};
Point(163) = {-0.055824, -0.735083, 0, 1.0};
Point(164) = {-0.059538, -0.734320, 0, 1.0};
Point(165) = {-0.063025, -0.733680, 0, 1.0};
Point(166) = {-0.066264, -0.733111, 0, 1.0};
Point(167) = {-0.069252, -0.732736, 0, 1.0};
Point(168) = {-0.071964, -0.732419, 0, 1.0};
Point(169) = {-0.074391, -0.732188, 0, 1.0};
Point(170) = {-0.074520, -0.732178, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
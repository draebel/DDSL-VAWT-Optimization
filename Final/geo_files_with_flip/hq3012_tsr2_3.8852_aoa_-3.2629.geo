SetFactory("OpenCASCADE");

Point(1) = {0.074980, 0.748312, 0, 1.0};
Point(2) = {0.071540, 0.747389, 0, 1.0};
Point(3) = {0.067633, 0.746338, 0, 1.0};
Point(4) = {0.063727, 0.745284, 0, 1.0};
Point(5) = {0.059820, 0.744246, 0, 1.0};
Point(6) = {0.055913, 0.743216, 0, 1.0};
Point(7) = {0.052005, 0.742198, 0, 1.0};
Point(8) = {0.044183, 0.740245, 0, 1.0};
Point(9) = {0.036356, 0.738408, 0, 1.0};
Point(10) = {0.028520, 0.736720, 0, 1.0};
Point(11) = {0.020675, 0.735186, 0, 1.0};
Point(12) = {0.012818, 0.733853, 0, 1.0};
Point(13) = {0.004949, 0.732741, 0, 1.0};
Point(14) = {-0.002933, 0.731857, 0, 1.0};
Point(15) = {-0.010827, 0.731187, 0, 1.0};
Point(16) = {-0.014779, 0.730926, 0, 1.0};
Point(17) = {-0.018733, 0.730718, 0, 1.0};
Point(18) = {-0.022691, 0.730571, 0, 1.0};
Point(19) = {-0.026652, 0.730491, 0, 1.0};
Point(20) = {-0.030618, 0.730472, 0, 1.0};
Point(21) = {-0.034586, 0.730513, 0, 1.0};
Point(22) = {-0.038559, 0.730619, 0, 1.0};
Point(23) = {-0.042536, 0.730813, 0, 1.0};
Point(24) = {-0.046519, 0.731108, 0, 1.0};
Point(25) = {-0.050508, 0.731518, 0, 1.0};
Point(26) = {-0.054505, 0.732058, 0, 1.0};
Point(27) = {-0.058513, 0.732782, 0, 1.0};
Point(28) = {-0.062534, 0.733749, 0, 1.0};
Point(29) = {-0.066576, 0.735073, 0, 1.0};
Point(30) = {-0.068608, 0.735928, 0, 1.0};
Point(31) = {-0.070651, 0.736978, 0, 1.0};
Point(32) = {-0.071679, 0.737612, 0, 1.0};
Point(33) = {-0.072713, 0.738374, 0, 1.0};
Point(34) = {-0.073340, 0.738923, 0, 1.0};
Point(35) = {-0.073976, 0.739639, 0, 1.0};
Point(36) = {-0.074410, 0.740309, 0, 1.0};
Point(37) = {-0.074878, 0.741563, 0, 1.0};
Point(38) = {-0.074524, 0.742299, 0, 1.0};
Point(39) = {-0.074147, 0.742648, 0, 1.0};
Point(40) = {-0.073576, 0.743065, 0, 1.0};
Point(41) = {-0.073001, 0.743409, 0, 1.0};
Point(42) = {-0.072035, 0.743870, 0, 1.0};
Point(43) = {-0.071064, 0.744220, 0, 1.0};
Point(44) = {-0.069113, 0.744780, 0, 1.0};
Point(45) = {-0.067154, 0.745221, 0, 1.0};
Point(46) = {-0.063229, 0.745930, 0, 1.0};
Point(47) = {-0.059295, 0.746508, 0, 1.0};
Point(48) = {-0.055358, 0.747008, 0, 1.0};
Point(49) = {-0.051417, 0.747449, 0, 1.0};
Point(50) = {-0.047472, 0.747831, 0, 1.0};
Point(51) = {-0.043525, 0.748168, 0, 1.0};
Point(52) = {-0.039576, 0.748471, 0, 1.0};
Point(53) = {-0.035626, 0.748747, 0, 1.0};
Point(54) = {-0.031674, 0.748998, 0, 1.0};
Point(55) = {-0.027721, 0.749234, 0, 1.0};
Point(56) = {-0.023768, 0.749458, 0, 1.0};
Point(57) = {-0.019813, 0.749663, 0, 1.0};
Point(58) = {-0.015855, 0.749814, 0, 1.0};
Point(59) = {-0.011895, 0.749913, 0, 1.0};
Point(60) = {-0.003967, 0.750000, 0, 1.0};
Point(61) = {0.003968, 0.749946, 0, 1.0};
Point(62) = {0.011910, 0.749788, 0, 1.0};
Point(63) = {0.019856, 0.749546, 0, 1.0};
Point(64) = {0.027804, 0.749267, 0, 1.0};
Point(65) = {0.035751, 0.749014, 0, 1.0};
Point(66) = {0.043694, 0.748826, 0, 1.0};
Point(67) = {0.051630, 0.748766, 0, 1.0};
Point(68) = {0.055594, 0.748806, 0, 1.0};
Point(69) = {0.059555, 0.748898, 0, 1.0};
Point(70) = {0.063512, 0.749061, 0, 1.0};
Point(71) = {0.067466, 0.749270, 0, 1.0};
Point(72) = {0.071416, 0.749556, 0, 1.0};
Point(73) = {0.074895, 0.749801, 0, 1.0};
Point(74) = {-0.074980, -0.748312, 0, 1.0};
Point(75) = {-0.071540, -0.747389, 0, 1.0};
Point(76) = {-0.067633, -0.746338, 0, 1.0};
Point(77) = {-0.063727, -0.745284, 0, 1.0};
Point(78) = {-0.059820, -0.744246, 0, 1.0};
Point(79) = {-0.055913, -0.743216, 0, 1.0};
Point(80) = {-0.052005, -0.742198, 0, 1.0};
Point(81) = {-0.044183, -0.740245, 0, 1.0};
Point(82) = {-0.036356, -0.738408, 0, 1.0};
Point(83) = {-0.028520, -0.736720, 0, 1.0};
Point(84) = {-0.020675, -0.735186, 0, 1.0};
Point(85) = {-0.012818, -0.733853, 0, 1.0};
Point(86) = {-0.004949, -0.732741, 0, 1.0};
Point(87) = {0.002933, -0.731857, 0, 1.0};
Point(88) = {0.010827, -0.731187, 0, 1.0};
Point(89) = {0.014779, -0.730926, 0, 1.0};
Point(90) = {0.018733, -0.730718, 0, 1.0};
Point(91) = {0.022691, -0.730571, 0, 1.0};
Point(92) = {0.026652, -0.730491, 0, 1.0};
Point(93) = {0.030618, -0.730472, 0, 1.0};
Point(94) = {0.034586, -0.730513, 0, 1.0};
Point(95) = {0.038559, -0.730619, 0, 1.0};
Point(96) = {0.042536, -0.730813, 0, 1.0};
Point(97) = {0.046519, -0.731108, 0, 1.0};
Point(98) = {0.050508, -0.731518, 0, 1.0};
Point(99) = {0.054505, -0.732058, 0, 1.0};
Point(100) = {0.058513, -0.732782, 0, 1.0};
Point(101) = {0.062534, -0.733749, 0, 1.0};
Point(102) = {0.066576, -0.735073, 0, 1.0};
Point(103) = {0.068608, -0.735928, 0, 1.0};
Point(104) = {0.070651, -0.736978, 0, 1.0};
Point(105) = {0.071679, -0.737612, 0, 1.0};
Point(106) = {0.072713, -0.738374, 0, 1.0};
Point(107) = {0.073340, -0.738923, 0, 1.0};
Point(108) = {0.073976, -0.739639, 0, 1.0};
Point(109) = {0.074410, -0.740309, 0, 1.0};
Point(110) = {0.074878, -0.741563, 0, 1.0};
Point(111) = {0.074524, -0.742299, 0, 1.0};
Point(112) = {0.074147, -0.742648, 0, 1.0};
Point(113) = {0.073576, -0.743065, 0, 1.0};
Point(114) = {0.073001, -0.743409, 0, 1.0};
Point(115) = {0.072035, -0.743870, 0, 1.0};
Point(116) = {0.071064, -0.744220, 0, 1.0};
Point(117) = {0.069113, -0.744780, 0, 1.0};
Point(118) = {0.067154, -0.745221, 0, 1.0};
Point(119) = {0.063229, -0.745930, 0, 1.0};
Point(120) = {0.059295, -0.746508, 0, 1.0};
Point(121) = {0.055358, -0.747008, 0, 1.0};
Point(122) = {0.051417, -0.747449, 0, 1.0};
Point(123) = {0.047472, -0.747831, 0, 1.0};
Point(124) = {0.043525, -0.748168, 0, 1.0};
Point(125) = {0.039576, -0.748471, 0, 1.0};
Point(126) = {0.035626, -0.748747, 0, 1.0};
Point(127) = {0.031674, -0.748998, 0, 1.0};
Point(128) = {0.027721, -0.749234, 0, 1.0};
Point(129) = {0.023768, -0.749458, 0, 1.0};
Point(130) = {0.019813, -0.749663, 0, 1.0};
Point(131) = {0.015855, -0.749814, 0, 1.0};
Point(132) = {0.011895, -0.749913, 0, 1.0};
Point(133) = {0.003967, -0.750000, 0, 1.0};
Point(134) = {-0.003968, -0.749946, 0, 1.0};
Point(135) = {-0.011910, -0.749788, 0, 1.0};
Point(136) = {-0.019856, -0.749546, 0, 1.0};
Point(137) = {-0.027804, -0.749267, 0, 1.0};
Point(138) = {-0.035751, -0.749014, 0, 1.0};
Point(139) = {-0.043694, -0.748826, 0, 1.0};
Point(140) = {-0.051630, -0.748766, 0, 1.0};
Point(141) = {-0.055594, -0.748806, 0, 1.0};
Point(142) = {-0.059555, -0.748898, 0, 1.0};
Point(143) = {-0.063512, -0.749061, 0, 1.0};
Point(144) = {-0.067466, -0.749270, 0, 1.0};
Point(145) = {-0.071416, -0.749556, 0, 1.0};
Point(146) = {-0.074895, -0.749801, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
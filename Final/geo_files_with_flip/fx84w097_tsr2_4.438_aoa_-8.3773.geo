SetFactory("OpenCASCADE");

Point(1) = {0.074403, 0.748488, 0, 1.0};
Point(2) = {0.073197, 0.748131, 0, 1.0};
Point(3) = {0.070202, 0.747227, 0, 1.0};
Point(4) = {0.066942, 0.746219, 0, 1.0};
Point(5) = {0.063431, 0.745115, 0, 1.0};
Point(6) = {0.059686, 0.743921, 0, 1.0};
Point(7) = {0.055721, 0.742649, 0, 1.0};
Point(8) = {0.051552, 0.741308, 0, 1.0};
Point(9) = {0.047195, 0.739909, 0, 1.0};
Point(10) = {0.042669, 0.738471, 0, 1.0};
Point(11) = {0.037991, 0.737009, 0, 1.0};
Point(12) = {0.033180, 0.735535, 0, 1.0};
Point(13) = {0.028255, 0.734073, 0, 1.0};
Point(14) = {0.023235, 0.732632, 0, 1.0};
Point(15) = {0.018140, 0.731232, 0, 1.0};
Point(16) = {0.012991, 0.729891, 0, 1.0};
Point(17) = {0.007809, 0.728617, 0, 1.0};
Point(18) = {0.002615, 0.727427, 0, 1.0};
Point(19) = {-0.002570, 0.726338, 0, 1.0};
Point(20) = {-0.007727, 0.725352, 0, 1.0};
Point(21) = {-0.012831, 0.724484, 0, 1.0};
Point(22) = {-0.017861, 0.723735, 0, 1.0};
Point(23) = {-0.022796, 0.723107, 0, 1.0};
Point(24) = {-0.027616, 0.722610, 0, 1.0};
Point(25) = {-0.032300, 0.722237, 0, 1.0};
Point(26) = {-0.036826, 0.721986, 0, 1.0};
Point(27) = {-0.041173, 0.721858, 0, 1.0};
Point(28) = {-0.045322, 0.721835, 0, 1.0};
Point(29) = {-0.049256, 0.721921, 0, 1.0};
Point(30) = {-0.052957, 0.722108, 0, 1.0};
Point(31) = {-0.056407, 0.722392, 0, 1.0};
Point(32) = {-0.059589, 0.722759, 0, 1.0};
Point(33) = {-0.062491, 0.723195, 0, 1.0};
Point(34) = {-0.065097, 0.723691, 0, 1.0};
Point(35) = {-0.067394, 0.724237, 0, 1.0};
Point(36) = {-0.069374, 0.724823, 0, 1.0};
Point(37) = {-0.071022, 0.725438, 0, 1.0};
Point(38) = {-0.072337, 0.726077, 0, 1.0};
Point(39) = {-0.073307, 0.726722, 0, 1.0};
Point(40) = {-0.073929, 0.727366, 0, 1.0};
Point(41) = {-0.074200, 0.728014, 0, 1.0};
Point(42) = {-0.074119, 0.728661, 0, 1.0};
Point(43) = {-0.073688, 0.729308, 0, 1.0};
Point(44) = {-0.072905, 0.729939, 0, 1.0};
Point(45) = {-0.071776, 0.730553, 0, 1.0};
Point(46) = {-0.070306, 0.731154, 0, 1.0};
Point(47) = {-0.068500, 0.731745, 0, 1.0};
Point(48) = {-0.066369, 0.732325, 0, 1.0};
Point(49) = {-0.063919, 0.732897, 0, 1.0};
Point(50) = {-0.061166, 0.733465, 0, 1.0};
Point(51) = {-0.058121, 0.734029, 0, 1.0};
Point(52) = {-0.054795, 0.734594, 0, 1.0};
Point(53) = {-0.051206, 0.735164, 0, 1.0};
Point(54) = {-0.047370, 0.735738, 0, 1.0};
Point(55) = {-0.043303, 0.736321, 0, 1.0};
Point(56) = {-0.039024, 0.736911, 0, 1.0};
Point(57) = {-0.034550, 0.737515, 0, 1.0};
Point(58) = {-0.029902, 0.738130, 0, 1.0};
Point(59) = {-0.025101, 0.738755, 0, 1.0};
Point(60) = {-0.020166, 0.739388, 0, 1.0};
Point(61) = {-0.015120, 0.740029, 0, 1.0};
Point(62) = {-0.009983, 0.740673, 0, 1.0};
Point(63) = {-0.004776, 0.741318, 0, 1.0};
Point(64) = {0.000475, 0.741961, 0, 1.0};
Point(65) = {0.005751, 0.742597, 0, 1.0};
Point(66) = {0.011027, 0.743225, 0, 1.0};
Point(67) = {0.016284, 0.743836, 0, 1.0};
Point(68) = {0.021498, 0.744432, 0, 1.0};
Point(69) = {0.026644, 0.745007, 0, 1.0};
Point(70) = {0.031704, 0.745560, 0, 1.0};
Point(71) = {0.036653, 0.746092, 0, 1.0};
Point(72) = {0.041472, 0.746598, 0, 1.0};
Point(73) = {0.046139, 0.747080, 0, 1.0};
Point(74) = {0.050635, 0.747537, 0, 1.0};
Point(75) = {0.054937, 0.747974, 0, 1.0};
Point(76) = {0.059028, 0.748389, 0, 1.0};
Point(77) = {0.062891, 0.748784, 0, 1.0};
Point(78) = {0.066509, 0.749159, 0, 1.0};
Point(79) = {0.069865, 0.749517, 0, 1.0};
Point(80) = {0.072943, 0.749857, 0, 1.0};
Point(81) = {0.074180, 0.750000, 0, 1.0};
Point(82) = {-0.074403, -0.748488, 0, 1.0};
Point(83) = {-0.073197, -0.748131, 0, 1.0};
Point(84) = {-0.070202, -0.747227, 0, 1.0};
Point(85) = {-0.066942, -0.746219, 0, 1.0};
Point(86) = {-0.063431, -0.745115, 0, 1.0};
Point(87) = {-0.059686, -0.743921, 0, 1.0};
Point(88) = {-0.055721, -0.742649, 0, 1.0};
Point(89) = {-0.051552, -0.741308, 0, 1.0};
Point(90) = {-0.047195, -0.739909, 0, 1.0};
Point(91) = {-0.042669, -0.738471, 0, 1.0};
Point(92) = {-0.037991, -0.737009, 0, 1.0};
Point(93) = {-0.033180, -0.735535, 0, 1.0};
Point(94) = {-0.028255, -0.734073, 0, 1.0};
Point(95) = {-0.023235, -0.732632, 0, 1.0};
Point(96) = {-0.018140, -0.731232, 0, 1.0};
Point(97) = {-0.012991, -0.729891, 0, 1.0};
Point(98) = {-0.007809, -0.728617, 0, 1.0};
Point(99) = {-0.002615, -0.727427, 0, 1.0};
Point(100) = {0.002570, -0.726338, 0, 1.0};
Point(101) = {0.007727, -0.725352, 0, 1.0};
Point(102) = {0.012831, -0.724484, 0, 1.0};
Point(103) = {0.017861, -0.723735, 0, 1.0};
Point(104) = {0.022796, -0.723107, 0, 1.0};
Point(105) = {0.027616, -0.722610, 0, 1.0};
Point(106) = {0.032300, -0.722237, 0, 1.0};
Point(107) = {0.036826, -0.721986, 0, 1.0};
Point(108) = {0.041173, -0.721858, 0, 1.0};
Point(109) = {0.045322, -0.721835, 0, 1.0};
Point(110) = {0.049256, -0.721921, 0, 1.0};
Point(111) = {0.052957, -0.722108, 0, 1.0};
Point(112) = {0.056407, -0.722392, 0, 1.0};
Point(113) = {0.059589, -0.722759, 0, 1.0};
Point(114) = {0.062491, -0.723195, 0, 1.0};
Point(115) = {0.065097, -0.723691, 0, 1.0};
Point(116) = {0.067394, -0.724237, 0, 1.0};
Point(117) = {0.069374, -0.724823, 0, 1.0};
Point(118) = {0.071022, -0.725438, 0, 1.0};
Point(119) = {0.072337, -0.726077, 0, 1.0};
Point(120) = {0.073307, -0.726722, 0, 1.0};
Point(121) = {0.073929, -0.727366, 0, 1.0};
Point(122) = {0.074200, -0.728014, 0, 1.0};
Point(123) = {0.074119, -0.728661, 0, 1.0};
Point(124) = {0.073688, -0.729308, 0, 1.0};
Point(125) = {0.072905, -0.729939, 0, 1.0};
Point(126) = {0.071776, -0.730553, 0, 1.0};
Point(127) = {0.070306, -0.731154, 0, 1.0};
Point(128) = {0.068500, -0.731745, 0, 1.0};
Point(129) = {0.066369, -0.732325, 0, 1.0};
Point(130) = {0.063919, -0.732897, 0, 1.0};
Point(131) = {0.061166, -0.733465, 0, 1.0};
Point(132) = {0.058121, -0.734029, 0, 1.0};
Point(133) = {0.054795, -0.734594, 0, 1.0};
Point(134) = {0.051206, -0.735164, 0, 1.0};
Point(135) = {0.047370, -0.735738, 0, 1.0};
Point(136) = {0.043303, -0.736321, 0, 1.0};
Point(137) = {0.039024, -0.736911, 0, 1.0};
Point(138) = {0.034550, -0.737515, 0, 1.0};
Point(139) = {0.029902, -0.738130, 0, 1.0};
Point(140) = {0.025101, -0.738755, 0, 1.0};
Point(141) = {0.020166, -0.739388, 0, 1.0};
Point(142) = {0.015120, -0.740029, 0, 1.0};
Point(143) = {0.009983, -0.740673, 0, 1.0};
Point(144) = {0.004776, -0.741318, 0, 1.0};
Point(145) = {-0.000475, -0.741961, 0, 1.0};
Point(146) = {-0.005751, -0.742597, 0, 1.0};
Point(147) = {-0.011027, -0.743225, 0, 1.0};
Point(148) = {-0.016284, -0.743836, 0, 1.0};
Point(149) = {-0.021498, -0.744432, 0, 1.0};
Point(150) = {-0.026644, -0.745007, 0, 1.0};
Point(151) = {-0.031704, -0.745560, 0, 1.0};
Point(152) = {-0.036653, -0.746092, 0, 1.0};
Point(153) = {-0.041472, -0.746598, 0, 1.0};
Point(154) = {-0.046139, -0.747080, 0, 1.0};
Point(155) = {-0.050635, -0.747537, 0, 1.0};
Point(156) = {-0.054937, -0.747974, 0, 1.0};
Point(157) = {-0.059028, -0.748389, 0, 1.0};
Point(158) = {-0.062891, -0.748784, 0, 1.0};
Point(159) = {-0.066509, -0.749159, 0, 1.0};
Point(160) = {-0.069865, -0.749517, 0, 1.0};
Point(161) = {-0.072943, -0.749857, 0, 1.0};
Point(162) = {-0.074180, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074519, 0.731998, 0, 1.0};
Point(2) = {0.073238, 0.731944, 0, 1.0};
Point(3) = {0.066831, 0.731542, 0, 1.0};
Point(4) = {0.063624, 0.731308, 0, 1.0};
Point(5) = {0.060417, 0.731073, 0, 1.0};
Point(6) = {0.057211, 0.730844, 0, 1.0};
Point(7) = {0.050802, 0.730421, 0, 1.0};
Point(8) = {0.047599, 0.730234, 0, 1.0};
Point(9) = {0.044399, 0.730067, 0, 1.0};
Point(10) = {0.041201, 0.729925, 0, 1.0};
Point(11) = {0.034812, 0.729721, 0, 1.0};
Point(12) = {0.031622, 0.729662, 0, 1.0};
Point(13) = {0.028434, 0.729632, 0, 1.0};
Point(14) = {0.025249, 0.729631, 0, 1.0};
Point(15) = {0.018887, 0.729710, 0, 1.0};
Point(16) = {0.015709, 0.729785, 0, 1.0};
Point(17) = {0.012533, 0.729883, 0, 1.0};
Point(18) = {0.009359, 0.730000, 0, 1.0};
Point(19) = {0.003017, 0.730293, 0, 1.0};
Point(20) = {-0.000151, 0.730469, 0, 1.0};
Point(21) = {-0.003317, 0.730664, 0, 1.0};
Point(22) = {-0.006482, 0.730881, 0, 1.0};
Point(23) = {-0.009645, 0.731115, 0, 1.0};
Point(24) = {-0.015967, 0.731628, 0, 1.0};
Point(25) = {-0.022284, 0.732184, 0, 1.0};
Point(26) = {-0.028352, 0.732752, 0, 1.0};
Point(27) = {-0.036291, 0.733565, 0, 1.0};
Point(28) = {-0.044214, 0.734514, 0, 1.0};
Point(29) = {-0.052106, 0.735718, 0, 1.0};
Point(30) = {-0.059937, 0.737417, 0, 1.0};
Point(31) = {-0.063812, 0.738614, 0, 1.0};
Point(32) = {-0.067637, 0.740239, 0, 1.0};
Point(33) = {-0.071363, 0.742667, 0, 1.0};
Point(34) = {-0.073149, 0.744516, 0, 1.0};
Point(35) = {-0.073827, 0.745518, 0, 1.0};
Point(36) = {-0.074150, 0.746131, 0, 1.0};
Point(37) = {-0.074614, 0.748131, 0, 1.0};
Point(38) = {-0.074160, 0.749062, 0, 1.0};
Point(39) = {-0.073716, 0.749341, 0, 1.0};
Point(40) = {-0.072790, 0.749613, 0, 1.0};
Point(41) = {-0.070826, 0.749836, 0, 1.0};
Point(42) = {-0.068882, 0.749935, 0, 1.0};
Point(43) = {-0.067913, 0.749967, 0, 1.0};
Point(44) = {-0.065981, 0.750000, 0, 1.0};
Point(45) = {-0.061811, 0.749968, 0, 1.0};
Point(46) = {-0.058614, 0.749880, 0, 1.0};
Point(47) = {-0.053829, 0.749688, 0, 1.0};
Point(48) = {-0.049327, 0.749477, 0, 1.0};
Point(49) = {-0.046949, 0.749360, 0, 1.0};
Point(50) = {-0.042194, 0.749125, 0, 1.0};
Point(51) = {-0.037439, 0.748883, 0, 1.0};
Point(52) = {-0.035063, 0.748756, 0, 1.0};
Point(53) = {-0.030311, 0.748485, 0, 1.0};
Point(54) = {-0.025562, 0.748183, 0, 1.0};
Point(55) = {-0.020816, 0.747847, 0, 1.0};
Point(56) = {-0.014494, 0.747342, 0, 1.0};
Point(57) = {-0.008178, 0.746768, 0, 1.0};
Point(58) = {-0.005023, 0.746455, 0, 1.0};
Point(59) = {-0.001869, 0.746124, 0, 1.0};
Point(60) = {0.001283, 0.745776, 0, 1.0};
Point(61) = {0.004433, 0.745408, 0, 1.0};
Point(62) = {0.010729, 0.744614, 0, 1.0};
Point(63) = {0.013874, 0.744188, 0, 1.0};
Point(64) = {0.017017, 0.743745, 0, 1.0};
Point(65) = {0.020159, 0.743284, 0, 1.0};
Point(66) = {0.026437, 0.742315, 0, 1.0};
Point(67) = {0.029575, 0.741808, 0, 1.0};
Point(68) = {0.032711, 0.741286, 0, 1.0};
Point(69) = {0.035846, 0.740751, 0, 1.0};
Point(70) = {0.042111, 0.739641, 0, 1.0};
Point(71) = {0.045242, 0.739071, 0, 1.0};
Point(72) = {0.048373, 0.738492, 0, 1.0};
Point(73) = {0.051503, 0.737907, 0, 1.0};
Point(74) = {0.057761, 0.736722, 0, 1.0};
Point(75) = {0.060890, 0.736123, 0, 1.0};
Point(76) = {0.064019, 0.735520, 0, 1.0};
Point(77) = {0.067146, 0.734912, 0, 1.0};
Point(78) = {0.073403, 0.733705, 0, 1.0};
Point(79) = {0.074669, 0.733471, 0, 1.0};
Point(80) = {-0.074519, -0.731998, 0, 1.0};
Point(81) = {-0.073238, -0.731944, 0, 1.0};
Point(82) = {-0.066831, -0.731542, 0, 1.0};
Point(83) = {-0.063624, -0.731308, 0, 1.0};
Point(84) = {-0.060417, -0.731073, 0, 1.0};
Point(85) = {-0.057211, -0.730844, 0, 1.0};
Point(86) = {-0.050802, -0.730421, 0, 1.0};
Point(87) = {-0.047599, -0.730234, 0, 1.0};
Point(88) = {-0.044399, -0.730067, 0, 1.0};
Point(89) = {-0.041201, -0.729925, 0, 1.0};
Point(90) = {-0.034812, -0.729721, 0, 1.0};
Point(91) = {-0.031622, -0.729662, 0, 1.0};
Point(92) = {-0.028434, -0.729632, 0, 1.0};
Point(93) = {-0.025249, -0.729631, 0, 1.0};
Point(94) = {-0.018887, -0.729710, 0, 1.0};
Point(95) = {-0.015709, -0.729785, 0, 1.0};
Point(96) = {-0.012533, -0.729883, 0, 1.0};
Point(97) = {-0.009359, -0.730000, 0, 1.0};
Point(98) = {-0.003017, -0.730293, 0, 1.0};
Point(99) = {0.000151, -0.730469, 0, 1.0};
Point(100) = {0.003317, -0.730664, 0, 1.0};
Point(101) = {0.006482, -0.730881, 0, 1.0};
Point(102) = {0.009645, -0.731115, 0, 1.0};
Point(103) = {0.015967, -0.731628, 0, 1.0};
Point(104) = {0.022284, -0.732184, 0, 1.0};
Point(105) = {0.028352, -0.732752, 0, 1.0};
Point(106) = {0.036291, -0.733565, 0, 1.0};
Point(107) = {0.044214, -0.734514, 0, 1.0};
Point(108) = {0.052106, -0.735718, 0, 1.0};
Point(109) = {0.059937, -0.737417, 0, 1.0};
Point(110) = {0.063812, -0.738614, 0, 1.0};
Point(111) = {0.067637, -0.740239, 0, 1.0};
Point(112) = {0.071363, -0.742667, 0, 1.0};
Point(113) = {0.073149, -0.744516, 0, 1.0};
Point(114) = {0.073827, -0.745518, 0, 1.0};
Point(115) = {0.074150, -0.746131, 0, 1.0};
Point(116) = {0.074614, -0.748131, 0, 1.0};
Point(117) = {0.074160, -0.749062, 0, 1.0};
Point(118) = {0.073716, -0.749341, 0, 1.0};
Point(119) = {0.072790, -0.749613, 0, 1.0};
Point(120) = {0.070826, -0.749836, 0, 1.0};
Point(121) = {0.068882, -0.749935, 0, 1.0};
Point(122) = {0.067913, -0.749967, 0, 1.0};
Point(123) = {0.065981, -0.750000, 0, 1.0};
Point(124) = {0.061811, -0.749968, 0, 1.0};
Point(125) = {0.058614, -0.749880, 0, 1.0};
Point(126) = {0.053829, -0.749688, 0, 1.0};
Point(127) = {0.049327, -0.749477, 0, 1.0};
Point(128) = {0.046949, -0.749360, 0, 1.0};
Point(129) = {0.042194, -0.749125, 0, 1.0};
Point(130) = {0.037439, -0.748883, 0, 1.0};
Point(131) = {0.035063, -0.748756, 0, 1.0};
Point(132) = {0.030311, -0.748485, 0, 1.0};
Point(133) = {0.025562, -0.748183, 0, 1.0};
Point(134) = {0.020816, -0.747847, 0, 1.0};
Point(135) = {0.014494, -0.747342, 0, 1.0};
Point(136) = {0.008178, -0.746768, 0, 1.0};
Point(137) = {0.005023, -0.746455, 0, 1.0};
Point(138) = {0.001869, -0.746124, 0, 1.0};
Point(139) = {-0.001283, -0.745776, 0, 1.0};
Point(140) = {-0.004433, -0.745408, 0, 1.0};
Point(141) = {-0.010729, -0.744614, 0, 1.0};
Point(142) = {-0.013874, -0.744188, 0, 1.0};
Point(143) = {-0.017017, -0.743745, 0, 1.0};
Point(144) = {-0.020159, -0.743284, 0, 1.0};
Point(145) = {-0.026437, -0.742315, 0, 1.0};
Point(146) = {-0.029575, -0.741808, 0, 1.0};
Point(147) = {-0.032711, -0.741286, 0, 1.0};
Point(148) = {-0.035846, -0.740751, 0, 1.0};
Point(149) = {-0.042111, -0.739641, 0, 1.0};
Point(150) = {-0.045242, -0.739071, 0, 1.0};
Point(151) = {-0.048373, -0.738492, 0, 1.0};
Point(152) = {-0.051503, -0.737907, 0, 1.0};
Point(153) = {-0.057761, -0.736722, 0, 1.0};
Point(154) = {-0.060890, -0.736123, 0, 1.0};
Point(155) = {-0.064019, -0.735520, 0, 1.0};
Point(156) = {-0.067146, -0.734912, 0, 1.0};
Point(157) = {-0.073403, -0.733705, 0, 1.0};
Point(158) = {-0.074669, -0.733471, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:53};
Spline(3) = {53:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:106};
Spline(6) = {106:132};
Spline(7) = {132:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074588, 0.748559, 0, 1.0};
Point(2) = {0.074326, 0.748399, 0, 1.0};
Point(3) = {0.072644, 0.747423, 0, 1.0};
Point(4) = {0.070687, 0.746402, 0, 1.0};
Point(5) = {0.068428, 0.745331, 0, 1.0};
Point(6) = {0.065866, 0.744191, 0, 1.0};
Point(7) = {0.063024, 0.742976, 0, 1.0};
Point(8) = {0.059919, 0.741691, 0, 1.0};
Point(9) = {0.056567, 0.740342, 0, 1.0};
Point(10) = {0.052992, 0.738930, 0, 1.0};
Point(11) = {0.049212, 0.737465, 0, 1.0};
Point(12) = {0.045247, 0.735957, 0, 1.0};
Point(13) = {0.041121, 0.734412, 0, 1.0};
Point(14) = {0.036857, 0.732843, 0, 1.0};
Point(15) = {0.032474, 0.731261, 0, 1.0};
Point(16) = {0.027996, 0.729677, 0, 1.0};
Point(17) = {0.023447, 0.728106, 0, 1.0};
Point(18) = {0.018846, 0.726558, 0, 1.0};
Point(19) = {0.014213, 0.725046, 0, 1.0};
Point(20) = {0.009572, 0.723587, 0, 1.0};
Point(21) = {0.004941, 0.722191, 0, 1.0};
Point(22) = {0.000338, 0.720872, 0, 1.0};
Point(23) = {-0.004218, 0.719643, 0, 1.0};
Point(24) = {-0.008712, 0.718516, 0, 1.0};
Point(25) = {-0.013126, 0.717502, 0, 1.0};
Point(26) = {-0.017448, 0.716613, 0, 1.0};
Point(27) = {-0.021661, 0.715859, 0, 1.0};
Point(28) = {-0.025753, 0.715251, 0, 1.0};
Point(29) = {-0.029719, 0.714800, 0, 1.0};
Point(30) = {-0.033553, 0.714511, 0, 1.0};
Point(31) = {-0.037249, 0.714389, 0, 1.0};
Point(32) = {-0.040805, 0.714436, 0, 1.0};
Point(33) = {-0.044221, 0.714647, 0, 1.0};
Point(34) = {-0.047492, 0.715015, 0, 1.0};
Point(35) = {-0.050617, 0.715532, 0, 1.0};
Point(36) = {-0.053592, 0.716187, 0, 1.0};
Point(37) = {-0.056412, 0.716962, 0, 1.0};
Point(38) = {-0.059063, 0.717839, 0, 1.0};
Point(39) = {-0.061537, 0.718806, 0, 1.0};
Point(40) = {-0.063819, 0.719850, 0, 1.0};
Point(41) = {-0.065901, 0.720963, 0, 1.0};
Point(42) = {-0.067773, 0.722129, 0, 1.0};
Point(43) = {-0.069425, 0.723335, 0, 1.0};
Point(44) = {-0.070853, 0.724570, 0, 1.0};
Point(45) = {-0.072046, 0.725817, 0, 1.0};
Point(46) = {-0.073553, 0.728109, 0, 1.0};
Point(47) = {-0.074063, 0.729208, 0, 1.0};
Point(48) = {-0.074304, 0.730241, 0, 1.0};
Point(49) = {-0.074234, 0.731142, 0, 1.0};
Point(50) = {-0.073754, 0.731972, 0, 1.0};
Point(51) = {-0.072864, 0.732836, 0, 1.0};
Point(52) = {-0.071644, 0.733722, 0, 1.0};
Point(53) = {-0.070111, 0.734612, 0, 1.0};
Point(54) = {-0.068271, 0.735486, 0, 1.0};
Point(55) = {-0.066120, 0.736338, 0, 1.0};
Point(56) = {-0.063659, 0.737173, 0, 1.0};
Point(57) = {-0.060900, 0.737996, 0, 1.0};
Point(58) = {-0.057855, 0.738809, 0, 1.0};
Point(59) = {-0.054542, 0.739616, 0, 1.0};
Point(60) = {-0.050981, 0.740412, 0, 1.0};
Point(61) = {-0.047190, 0.741197, 0, 1.0};
Point(62) = {-0.043187, 0.741967, 0, 1.0};
Point(63) = {-0.038994, 0.742718, 0, 1.0};
Point(64) = {-0.034630, 0.743448, 0, 1.0};
Point(65) = {-0.030117, 0.744153, 0, 1.0};
Point(66) = {-0.025477, 0.744825, 0, 1.0};
Point(67) = {-0.020731, 0.745462, 0, 1.0};
Point(68) = {-0.015902, 0.746058, 0, 1.0};
Point(69) = {-0.011014, 0.746605, 0, 1.0};
Point(70) = {-0.006087, 0.747092, 0, 1.0};
Point(71) = {-0.001138, 0.747505, 0, 1.0};
Point(72) = {0.003826, 0.747838, 0, 1.0};
Point(73) = {0.008795, 0.748088, 0, 1.0};
Point(74) = {0.013758, 0.748259, 0, 1.0};
Point(75) = {0.018703, 0.748353, 0, 1.0};
Point(76) = {0.023619, 0.748371, 0, 1.0};
Point(77) = {0.028503, 0.748312, 0, 1.0};
Point(78) = {0.033370, 0.748203, 0, 1.0};
Point(79) = {0.038200, 0.748093, 0, 1.0};
Point(80) = {0.042953, 0.748015, 0, 1.0};
Point(81) = {0.047582, 0.747989, 0, 1.0};
Point(82) = {0.052046, 0.748030, 0, 1.0};
Point(83) = {0.056298, 0.748142, 0, 1.0};
Point(84) = {0.060294, 0.748332, 0, 1.0};
Point(85) = {0.063993, 0.748594, 0, 1.0};
Point(86) = {0.067352, 0.748921, 0, 1.0};
Point(87) = {0.070330, 0.749303, 0, 1.0};
Point(88) = {0.072886, 0.749716, 0, 1.0};
Point(89) = {0.074390, 0.750000, 0, 1.0};
Point(90) = {-0.074588, -0.748559, 0, 1.0};
Point(91) = {-0.074326, -0.748399, 0, 1.0};
Point(92) = {-0.072644, -0.747423, 0, 1.0};
Point(93) = {-0.070687, -0.746402, 0, 1.0};
Point(94) = {-0.068428, -0.745331, 0, 1.0};
Point(95) = {-0.065866, -0.744191, 0, 1.0};
Point(96) = {-0.063024, -0.742976, 0, 1.0};
Point(97) = {-0.059919, -0.741691, 0, 1.0};
Point(98) = {-0.056567, -0.740342, 0, 1.0};
Point(99) = {-0.052992, -0.738930, 0, 1.0};
Point(100) = {-0.049212, -0.737465, 0, 1.0};
Point(101) = {-0.045247, -0.735957, 0, 1.0};
Point(102) = {-0.041121, -0.734412, 0, 1.0};
Point(103) = {-0.036857, -0.732843, 0, 1.0};
Point(104) = {-0.032474, -0.731261, 0, 1.0};
Point(105) = {-0.027996, -0.729677, 0, 1.0};
Point(106) = {-0.023447, -0.728106, 0, 1.0};
Point(107) = {-0.018846, -0.726558, 0, 1.0};
Point(108) = {-0.014213, -0.725046, 0, 1.0};
Point(109) = {-0.009572, -0.723587, 0, 1.0};
Point(110) = {-0.004941, -0.722191, 0, 1.0};
Point(111) = {-0.000338, -0.720872, 0, 1.0};
Point(112) = {0.004218, -0.719643, 0, 1.0};
Point(113) = {0.008712, -0.718516, 0, 1.0};
Point(114) = {0.013126, -0.717502, 0, 1.0};
Point(115) = {0.017448, -0.716613, 0, 1.0};
Point(116) = {0.021661, -0.715859, 0, 1.0};
Point(117) = {0.025753, -0.715251, 0, 1.0};
Point(118) = {0.029719, -0.714800, 0, 1.0};
Point(119) = {0.033553, -0.714511, 0, 1.0};
Point(120) = {0.037249, -0.714389, 0, 1.0};
Point(121) = {0.040805, -0.714436, 0, 1.0};
Point(122) = {0.044221, -0.714647, 0, 1.0};
Point(123) = {0.047492, -0.715015, 0, 1.0};
Point(124) = {0.050617, -0.715532, 0, 1.0};
Point(125) = {0.053592, -0.716187, 0, 1.0};
Point(126) = {0.056412, -0.716962, 0, 1.0};
Point(127) = {0.059063, -0.717839, 0, 1.0};
Point(128) = {0.061537, -0.718806, 0, 1.0};
Point(129) = {0.063819, -0.719850, 0, 1.0};
Point(130) = {0.065901, -0.720963, 0, 1.0};
Point(131) = {0.067773, -0.722129, 0, 1.0};
Point(132) = {0.069425, -0.723335, 0, 1.0};
Point(133) = {0.070853, -0.724570, 0, 1.0};
Point(134) = {0.072046, -0.725817, 0, 1.0};
Point(135) = {0.073553, -0.728109, 0, 1.0};
Point(136) = {0.074063, -0.729208, 0, 1.0};
Point(137) = {0.074304, -0.730241, 0, 1.0};
Point(138) = {0.074234, -0.731142, 0, 1.0};
Point(139) = {0.073754, -0.731972, 0, 1.0};
Point(140) = {0.072864, -0.732836, 0, 1.0};
Point(141) = {0.071644, -0.733722, 0, 1.0};
Point(142) = {0.070111, -0.734612, 0, 1.0};
Point(143) = {0.068271, -0.735486, 0, 1.0};
Point(144) = {0.066120, -0.736338, 0, 1.0};
Point(145) = {0.063659, -0.737173, 0, 1.0};
Point(146) = {0.060900, -0.737996, 0, 1.0};
Point(147) = {0.057855, -0.738809, 0, 1.0};
Point(148) = {0.054542, -0.739616, 0, 1.0};
Point(149) = {0.050981, -0.740412, 0, 1.0};
Point(150) = {0.047190, -0.741197, 0, 1.0};
Point(151) = {0.043187, -0.741967, 0, 1.0};
Point(152) = {0.038994, -0.742718, 0, 1.0};
Point(153) = {0.034630, -0.743448, 0, 1.0};
Point(154) = {0.030117, -0.744153, 0, 1.0};
Point(155) = {0.025477, -0.744825, 0, 1.0};
Point(156) = {0.020731, -0.745462, 0, 1.0};
Point(157) = {0.015902, -0.746058, 0, 1.0};
Point(158) = {0.011014, -0.746605, 0, 1.0};
Point(159) = {0.006087, -0.747092, 0, 1.0};
Point(160) = {0.001138, -0.747505, 0, 1.0};
Point(161) = {-0.003826, -0.747838, 0, 1.0};
Point(162) = {-0.008795, -0.748088, 0, 1.0};
Point(163) = {-0.013758, -0.748259, 0, 1.0};
Point(164) = {-0.018703, -0.748353, 0, 1.0};
Point(165) = {-0.023619, -0.748371, 0, 1.0};
Point(166) = {-0.028503, -0.748312, 0, 1.0};
Point(167) = {-0.033370, -0.748203, 0, 1.0};
Point(168) = {-0.038200, -0.748093, 0, 1.0};
Point(169) = {-0.042953, -0.748015, 0, 1.0};
Point(170) = {-0.047582, -0.747989, 0, 1.0};
Point(171) = {-0.052046, -0.748030, 0, 1.0};
Point(172) = {-0.056298, -0.748142, 0, 1.0};
Point(173) = {-0.060294, -0.748332, 0, 1.0};
Point(174) = {-0.063993, -0.748594, 0, 1.0};
Point(175) = {-0.067352, -0.748921, 0, 1.0};
Point(176) = {-0.070330, -0.749303, 0, 1.0};
Point(177) = {-0.072886, -0.749716, 0, 1.0};
Point(178) = {-0.074390, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:30};
Spline(2) = {30:64};
Spline(3) = {64:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:119};
Spline(6) = {119:153};
Spline(7) = {153:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
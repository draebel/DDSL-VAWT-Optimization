SetFactory("OpenCASCADE");

Point(1) = {0.075004, 0.741410, 0, 1.0};
Point(2) = {0.073154, 0.741686, 0, 1.0};
Point(3) = {0.069139, 0.742285, 0, 1.0};
Point(4) = {0.064919, 0.742936, 0, 1.0};
Point(5) = {0.060306, 0.743711, 0, 1.0};
Point(6) = {0.054475, 0.744730, 0, 1.0};
Point(7) = {0.048643, 0.745710, 0, 1.0};
Point(8) = {0.043541, 0.746526, 0, 1.0};
Point(9) = {0.038863, 0.747137, 0, 1.0};
Point(10) = {0.034514, 0.747593, 0, 1.0};
Point(11) = {0.029362, 0.747992, 0, 1.0};
Point(12) = {0.023199, 0.748425, 0, 1.0};
Point(13) = {0.016839, 0.748811, 0, 1.0};
Point(14) = {0.010353, 0.749143, 0, 1.0};
Point(15) = {0.003855, 0.749422, 0, 1.0};
Point(16) = {-0.002786, 0.749651, 0, 1.0};
Point(17) = {-0.009439, 0.749826, 0, 1.0};
Point(18) = {-0.015998, 0.749942, 0, 1.0};
Point(19) = {-0.022473, 0.750000, 0, 1.0};
Point(20) = {-0.028764, 0.749997, 0, 1.0};
Point(21) = {-0.034810, 0.749933, 0, 1.0};
Point(22) = {-0.040572, 0.749802, 0, 1.0};
Point(23) = {-0.046035, 0.749603, 0, 1.0};
Point(24) = {-0.051204, 0.749333, 0, 1.0};
Point(25) = {-0.055936, 0.748992, 0, 1.0};
Point(26) = {-0.059783, 0.748603, 0, 1.0};
Point(27) = {-0.063009, 0.748057, 0, 1.0};
Point(28) = {-0.066215, 0.747297, 0, 1.0};
Point(29) = {-0.069116, 0.746371, 0, 1.0};
Point(30) = {-0.071605, 0.745349, 0, 1.0};
Point(31) = {-0.073479, 0.744175, 0, 1.0};
Point(32) = {-0.074590, 0.742921, 0, 1.0};
Point(33) = {-0.074998, 0.741839, 0, 1.0};
Point(34) = {-0.074605, 0.741048, 0, 1.0};
Point(35) = {-0.073508, 0.740493, 0, 1.0};
Point(36) = {-0.071647, 0.739996, 0, 1.0};
Point(37) = {-0.069170, 0.739538, 0, 1.0};
Point(38) = {-0.066279, 0.739133, 0, 1.0};
Point(39) = {-0.063081, 0.738776, 0, 1.0};
Point(40) = {-0.059862, 0.738469, 0, 1.0};
Point(41) = {-0.056020, 0.738151, 0, 1.0};
Point(42) = {-0.051294, 0.737814, 0, 1.0};
Point(43) = {-0.046129, 0.737501, 0, 1.0};
Point(44) = {-0.040670, 0.737227, 0, 1.0};
Point(45) = {-0.034911, 0.736993, 0, 1.0};
Point(46) = {-0.028867, 0.736798, 0, 1.0};
Point(47) = {-0.022577, 0.736650, 0, 1.0};
Point(48) = {-0.016102, 0.736541, 0, 1.0};
Point(49) = {-0.009543, 0.736477, 0, 1.0};
Point(50) = {-0.002889, 0.736453, 0, 1.0};
Point(51) = {0.003754, 0.736481, 0, 1.0};
Point(52) = {0.010255, 0.736566, 0, 1.0};
Point(53) = {0.016744, 0.736708, 0, 1.0};
Point(54) = {0.023109, 0.736863, 0, 1.0};
Point(55) = {0.029277, 0.737052, 0, 1.0};
Point(56) = {0.034433, 0.737240, 0, 1.0};
Point(57) = {0.038787, 0.737401, 0, 1.0};
Point(58) = {0.043471, 0.737582, 0, 1.0};
Point(59) = {0.048581, 0.737801, 0, 1.0};
Point(60) = {0.054423, 0.738066, 0, 1.0};
Point(61) = {0.060264, 0.738364, 0, 1.0};
Point(62) = {0.064885, 0.738647, 0, 1.0};
Point(63) = {0.069114, 0.739041, 0, 1.0};
Point(64) = {0.073138, 0.739588, 0, 1.0};
Point(65) = {0.074992, 0.739873, 0, 1.0};
Point(66) = {-0.075004, -0.741410, 0, 1.0};
Point(67) = {-0.073154, -0.741686, 0, 1.0};
Point(68) = {-0.069139, -0.742285, 0, 1.0};
Point(69) = {-0.064919, -0.742936, 0, 1.0};
Point(70) = {-0.060306, -0.743711, 0, 1.0};
Point(71) = {-0.054475, -0.744730, 0, 1.0};
Point(72) = {-0.048643, -0.745710, 0, 1.0};
Point(73) = {-0.043541, -0.746526, 0, 1.0};
Point(74) = {-0.038863, -0.747137, 0, 1.0};
Point(75) = {-0.034514, -0.747593, 0, 1.0};
Point(76) = {-0.029362, -0.747992, 0, 1.0};
Point(77) = {-0.023199, -0.748425, 0, 1.0};
Point(78) = {-0.016839, -0.748811, 0, 1.0};
Point(79) = {-0.010353, -0.749143, 0, 1.0};
Point(80) = {-0.003855, -0.749422, 0, 1.0};
Point(81) = {0.002786, -0.749651, 0, 1.0};
Point(82) = {0.009439, -0.749826, 0, 1.0};
Point(83) = {0.015998, -0.749942, 0, 1.0};
Point(84) = {0.022473, -0.750000, 0, 1.0};
Point(85) = {0.028764, -0.749997, 0, 1.0};
Point(86) = {0.034810, -0.749933, 0, 1.0};
Point(87) = {0.040572, -0.749802, 0, 1.0};
Point(88) = {0.046035, -0.749603, 0, 1.0};
Point(89) = {0.051204, -0.749333, 0, 1.0};
Point(90) = {0.055936, -0.748992, 0, 1.0};
Point(91) = {0.059783, -0.748603, 0, 1.0};
Point(92) = {0.063009, -0.748057, 0, 1.0};
Point(93) = {0.066215, -0.747297, 0, 1.0};
Point(94) = {0.069116, -0.746371, 0, 1.0};
Point(95) = {0.071605, -0.745349, 0, 1.0};
Point(96) = {0.073479, -0.744175, 0, 1.0};
Point(97) = {0.074590, -0.742921, 0, 1.0};
Point(98) = {0.074998, -0.741839, 0, 1.0};
Point(99) = {0.074605, -0.741048, 0, 1.0};
Point(100) = {0.073508, -0.740493, 0, 1.0};
Point(101) = {0.071647, -0.739996, 0, 1.0};
Point(102) = {0.069170, -0.739538, 0, 1.0};
Point(103) = {0.066279, -0.739133, 0, 1.0};
Point(104) = {0.063081, -0.738776, 0, 1.0};
Point(105) = {0.059862, -0.738469, 0, 1.0};
Point(106) = {0.056020, -0.738151, 0, 1.0};
Point(107) = {0.051294, -0.737814, 0, 1.0};
Point(108) = {0.046129, -0.737501, 0, 1.0};
Point(109) = {0.040670, -0.737227, 0, 1.0};
Point(110) = {0.034911, -0.736993, 0, 1.0};
Point(111) = {0.028867, -0.736798, 0, 1.0};
Point(112) = {0.022577, -0.736650, 0, 1.0};
Point(113) = {0.016102, -0.736541, 0, 1.0};
Point(114) = {0.009543, -0.736477, 0, 1.0};
Point(115) = {0.002889, -0.736453, 0, 1.0};
Point(116) = {-0.003754, -0.736481, 0, 1.0};
Point(117) = {-0.010255, -0.736566, 0, 1.0};
Point(118) = {-0.016744, -0.736708, 0, 1.0};
Point(119) = {-0.023109, -0.736863, 0, 1.0};
Point(120) = {-0.029277, -0.737052, 0, 1.0};
Point(121) = {-0.034433, -0.737240, 0, 1.0};
Point(122) = {-0.038787, -0.737401, 0, 1.0};
Point(123) = {-0.043471, -0.737582, 0, 1.0};
Point(124) = {-0.048581, -0.737801, 0, 1.0};
Point(125) = {-0.054423, -0.738066, 0, 1.0};
Point(126) = {-0.060264, -0.738364, 0, 1.0};
Point(127) = {-0.064885, -0.738647, 0, 1.0};
Point(128) = {-0.069114, -0.739041, 0, 1.0};
Point(129) = {-0.073138, -0.739588, 0, 1.0};
Point(130) = {-0.074992, -0.739873, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
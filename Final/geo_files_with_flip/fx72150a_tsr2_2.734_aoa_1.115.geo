SetFactory("OpenCASCADE");

Point(1) = {0.074907, 0.740743, 0, 1.0};
Point(2) = {0.073041, 0.740141, 0, 1.0};
Point(3) = {0.066558, 0.738049, 0, 1.0};
Point(4) = {0.062916, 0.736874, 0, 1.0};
Point(5) = {0.059028, 0.735619, 0, 1.0};
Point(6) = {0.054909, 0.734290, 0, 1.0};
Point(7) = {0.050580, 0.732892, 0, 1.0};
Point(8) = {0.046055, 0.731433, 0, 1.0};
Point(9) = {0.041358, 0.730052, 0, 1.0};
Point(10) = {0.036509, 0.728678, 0, 1.0};
Point(11) = {0.031529, 0.727368, 0, 1.0};
Point(12) = {0.026438, 0.726103, 0, 1.0};
Point(13) = {0.021260, 0.724944, 0, 1.0};
Point(14) = {0.016015, 0.723889, 0, 1.0};
Point(15) = {0.010729, 0.722995, 0, 1.0};
Point(16) = {0.005423, 0.722234, 0, 1.0};
Point(17) = {0.000122, 0.721700, 0, 1.0};
Point(18) = {-0.005153, 0.721367, 0, 1.0};
Point(19) = {-0.010378, 0.721362, 0, 1.0};
Point(20) = {-0.015529, 0.721585, 0, 1.0};
Point(21) = {-0.020585, 0.722109, 0, 1.0};
Point(22) = {-0.025527, 0.722785, 0, 1.0};
Point(23) = {-0.030332, 0.723668, 0, 1.0};
Point(24) = {-0.034982, 0.724684, 0, 1.0};
Point(25) = {-0.039456, 0.725854, 0, 1.0};
Point(26) = {-0.043733, 0.727142, 0, 1.0};
Point(27) = {-0.047798, 0.728534, 0, 1.0};
Point(28) = {-0.051633, 0.730018, 0, 1.0};
Point(29) = {-0.055222, 0.731583, 0, 1.0};
Point(30) = {-0.058550, 0.733201, 0, 1.0};
Point(31) = {-0.061600, 0.734859, 0, 1.0};
Point(32) = {-0.064364, 0.736544, 0, 1.0};
Point(33) = {-0.066828, 0.738226, 0, 1.0};
Point(34) = {-0.068980, 0.739883, 0, 1.0};
Point(35) = {-0.070814, 0.741501, 0, 1.0};
Point(36) = {-0.072320, 0.743025, 0, 1.0};
Point(37) = {-0.073494, 0.744475, 0, 1.0};
Point(38) = {-0.074333, 0.745678, 0, 1.0};
Point(39) = {-0.074834, 0.746615, 0, 1.0};
Point(40) = {-0.074986, 0.747716, 0, 1.0};
Point(41) = {-0.074794, 0.748677, 0, 1.0};
Point(42) = {-0.074260, 0.749411, 0, 1.0};
Point(43) = {-0.073392, 0.749701, 0, 1.0};
Point(44) = {-0.072186, 0.749895, 0, 1.0};
Point(45) = {-0.070650, 0.749949, 0, 1.0};
Point(46) = {-0.068783, 0.750000, 0, 1.0};
Point(47) = {-0.066599, 0.749956, 0, 1.0};
Point(48) = {-0.064104, 0.749868, 0, 1.0};
Point(49) = {-0.061311, 0.749727, 0, 1.0};
Point(50) = {-0.058232, 0.749539, 0, 1.0};
Point(51) = {-0.054877, 0.749317, 0, 1.0};
Point(52) = {-0.051263, 0.749055, 0, 1.0};
Point(53) = {-0.047404, 0.748757, 0, 1.0};
Point(54) = {-0.043319, 0.748436, 0, 1.0};
Point(55) = {-0.039023, 0.748083, 0, 1.0};
Point(56) = {-0.034534, 0.747706, 0, 1.0};
Point(57) = {-0.029872, 0.747286, 0, 1.0};
Point(58) = {-0.025058, 0.746861, 0, 1.0};
Point(59) = {-0.020113, 0.746372, 0, 1.0};
Point(60) = {-0.015057, 0.745865, 0, 1.0};
Point(61) = {-0.009913, 0.745251, 0, 1.0};
Point(62) = {-0.004702, 0.744585, 0, 1.0};
Point(63) = {0.000552, 0.743809, 0, 1.0};
Point(64) = {0.005829, 0.743100, 0, 1.0};
Point(65) = {0.011106, 0.742374, 0, 1.0};
Point(66) = {0.016362, 0.741717, 0, 1.0};
Point(67) = {0.021575, 0.741106, 0, 1.0};
Point(68) = {0.026721, 0.740607, 0, 1.0};
Point(69) = {0.031779, 0.740197, 0, 1.0};
Point(70) = {0.036728, 0.739922, 0, 1.0};
Point(71) = {0.041547, 0.739749, 0, 1.0};
Point(72) = {0.046216, 0.739715, 0, 1.0};
Point(73) = {0.050714, 0.739783, 0, 1.0};
Point(74) = {0.055020, 0.739971, 0, 1.0};
Point(75) = {0.059118, 0.740244, 0, 1.0};
Point(76) = {0.062989, 0.740605, 0, 1.0};
Point(77) = {0.066616, 0.741017, 0, 1.0};
Point(78) = {0.073076, 0.741933, 0, 1.0};
Point(79) = {0.074936, 0.742228, 0, 1.0};
Point(80) = {-0.074907, -0.740743, 0, 1.0};
Point(81) = {-0.073041, -0.740141, 0, 1.0};
Point(82) = {-0.066558, -0.738049, 0, 1.0};
Point(83) = {-0.062916, -0.736874, 0, 1.0};
Point(84) = {-0.059028, -0.735619, 0, 1.0};
Point(85) = {-0.054909, -0.734290, 0, 1.0};
Point(86) = {-0.050580, -0.732892, 0, 1.0};
Point(87) = {-0.046055, -0.731433, 0, 1.0};
Point(88) = {-0.041358, -0.730052, 0, 1.0};
Point(89) = {-0.036509, -0.728678, 0, 1.0};
Point(90) = {-0.031529, -0.727368, 0, 1.0};
Point(91) = {-0.026438, -0.726103, 0, 1.0};
Point(92) = {-0.021260, -0.724944, 0, 1.0};
Point(93) = {-0.016015, -0.723889, 0, 1.0};
Point(94) = {-0.010729, -0.722995, 0, 1.0};
Point(95) = {-0.005423, -0.722234, 0, 1.0};
Point(96) = {-0.000122, -0.721700, 0, 1.0};
Point(97) = {0.005153, -0.721367, 0, 1.0};
Point(98) = {0.010378, -0.721362, 0, 1.0};
Point(99) = {0.015529, -0.721585, 0, 1.0};
Point(100) = {0.020585, -0.722109, 0, 1.0};
Point(101) = {0.025527, -0.722785, 0, 1.0};
Point(102) = {0.030332, -0.723668, 0, 1.0};
Point(103) = {0.034982, -0.724684, 0, 1.0};
Point(104) = {0.039456, -0.725854, 0, 1.0};
Point(105) = {0.043733, -0.727142, 0, 1.0};
Point(106) = {0.047798, -0.728534, 0, 1.0};
Point(107) = {0.051633, -0.730018, 0, 1.0};
Point(108) = {0.055222, -0.731583, 0, 1.0};
Point(109) = {0.058550, -0.733201, 0, 1.0};
Point(110) = {0.061600, -0.734859, 0, 1.0};
Point(111) = {0.064364, -0.736544, 0, 1.0};
Point(112) = {0.066828, -0.738226, 0, 1.0};
Point(113) = {0.068980, -0.739883, 0, 1.0};
Point(114) = {0.070814, -0.741501, 0, 1.0};
Point(115) = {0.072320, -0.743025, 0, 1.0};
Point(116) = {0.073494, -0.744475, 0, 1.0};
Point(117) = {0.074333, -0.745678, 0, 1.0};
Point(118) = {0.074834, -0.746615, 0, 1.0};
Point(119) = {0.074986, -0.747716, 0, 1.0};
Point(120) = {0.074794, -0.748677, 0, 1.0};
Point(121) = {0.074260, -0.749411, 0, 1.0};
Point(122) = {0.073392, -0.749701, 0, 1.0};
Point(123) = {0.072186, -0.749895, 0, 1.0};
Point(124) = {0.070650, -0.749949, 0, 1.0};
Point(125) = {0.068783, -0.750000, 0, 1.0};
Point(126) = {0.066599, -0.749956, 0, 1.0};
Point(127) = {0.064104, -0.749868, 0, 1.0};
Point(128) = {0.061311, -0.749727, 0, 1.0};
Point(129) = {0.058232, -0.749539, 0, 1.0};
Point(130) = {0.054877, -0.749317, 0, 1.0};
Point(131) = {0.051263, -0.749055, 0, 1.0};
Point(132) = {0.047404, -0.748757, 0, 1.0};
Point(133) = {0.043319, -0.748436, 0, 1.0};
Point(134) = {0.039023, -0.748083, 0, 1.0};
Point(135) = {0.034534, -0.747706, 0, 1.0};
Point(136) = {0.029872, -0.747286, 0, 1.0};
Point(137) = {0.025058, -0.746861, 0, 1.0};
Point(138) = {0.020113, -0.746372, 0, 1.0};
Point(139) = {0.015057, -0.745865, 0, 1.0};
Point(140) = {0.009913, -0.745251, 0, 1.0};
Point(141) = {0.004702, -0.744585, 0, 1.0};
Point(142) = {-0.000552, -0.743809, 0, 1.0};
Point(143) = {-0.005829, -0.743100, 0, 1.0};
Point(144) = {-0.011106, -0.742374, 0, 1.0};
Point(145) = {-0.016362, -0.741717, 0, 1.0};
Point(146) = {-0.021575, -0.741106, 0, 1.0};
Point(147) = {-0.026721, -0.740607, 0, 1.0};
Point(148) = {-0.031779, -0.740197, 0, 1.0};
Point(149) = {-0.036728, -0.739922, 0, 1.0};
Point(150) = {-0.041547, -0.739749, 0, 1.0};
Point(151) = {-0.046216, -0.739715, 0, 1.0};
Point(152) = {-0.050714, -0.739783, 0, 1.0};
Point(153) = {-0.055020, -0.739971, 0, 1.0};
Point(154) = {-0.059118, -0.740244, 0, 1.0};
Point(155) = {-0.062989, -0.740605, 0, 1.0};
Point(156) = {-0.066616, -0.741017, 0, 1.0};
Point(157) = {-0.073076, -0.741933, 0, 1.0};
Point(158) = {-0.074936, -0.742228, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:56};
Spline(3) = {56:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:103};
Spline(6) = {103:135};
Spline(7) = {135:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
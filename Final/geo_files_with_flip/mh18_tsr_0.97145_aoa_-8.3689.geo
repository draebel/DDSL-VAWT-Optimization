SetFactory("OpenCASCADE");

Point(1) = {0.074137, 0.748211, 0, 1.0};
Point(2) = {0.073227, 0.748180, 0, 1.0};
Point(3) = {0.068513, 0.748155, 0, 1.0};
Point(4) = {0.063046, 0.748266, 0, 1.0};
Point(5) = {0.056953, 0.748492, 0, 1.0};
Point(6) = {0.050348, 0.748797, 0, 1.0};
Point(7) = {0.043341, 0.749140, 0, 1.0};
Point(8) = {0.036033, 0.749476, 0, 1.0};
Point(9) = {0.028518, 0.749761, 0, 1.0};
Point(10) = {0.020887, 0.749952, 0, 1.0};
Point(11) = {0.013239, 0.750000, 0, 1.0};
Point(12) = {0.005647, 0.749821, 0, 1.0};
Point(13) = {-0.001891, 0.749360, 0, 1.0};
Point(14) = {-0.009372, 0.748647, 0, 1.0};
Point(15) = {-0.016732, 0.747731, 0, 1.0};
Point(16) = {-0.023890, 0.746635, 0, 1.0};
Point(17) = {-0.030769, 0.745374, 0, 1.0};
Point(18) = {-0.037303, 0.743957, 0, 1.0};
Point(19) = {-0.043434, 0.742397, 0, 1.0};
Point(20) = {-0.049112, 0.740712, 0, 1.0};
Point(21) = {-0.054297, 0.738928, 0, 1.0};
Point(22) = {-0.058947, 0.737076, 0, 1.0};
Point(23) = {-0.063026, 0.735192, 0, 1.0};
Point(24) = {-0.066503, 0.733311, 0, 1.0};
Point(25) = {-0.069356, 0.731474, 0, 1.0};
Point(26) = {-0.071566, 0.729731, 0, 1.0};
Point(27) = {-0.073120, 0.728144, 0, 1.0};
Point(28) = {-0.073997, 0.726788, 0, 1.0};
Point(29) = {-0.074128, 0.726435, 0, 1.0};
Point(30) = {-0.074195, 0.726124, 0, 1.0};
Point(31) = {-0.074201, 0.725942, 0, 1.0};
Point(32) = {-0.074169, 0.725788, 0, 1.0};
Point(33) = {-0.074083, 0.725653, 0, 1.0};
Point(34) = {-0.073947, 0.725520, 0, 1.0};
Point(35) = {-0.073668, 0.725324, 0, 1.0};
Point(36) = {-0.073309, 0.725133, 0, 1.0};
Point(37) = {-0.071591, 0.724591, 0, 1.0};
Point(38) = {-0.069079, 0.724230, 0, 1.0};
Point(39) = {-0.065794, 0.724089, 0, 1.0};
Point(40) = {-0.061755, 0.724177, 0, 1.0};
Point(41) = {-0.056990, 0.724491, 0, 1.0};
Point(42) = {-0.051534, 0.725019, 0, 1.0};
Point(43) = {-0.045436, 0.725741, 0, 1.0};
Point(44) = {-0.038755, 0.726633, 0, 1.0};
Point(45) = {-0.031567, 0.727665, 0, 1.0};
Point(46) = {-0.023955, 0.728813, 0, 1.0};
Point(47) = {-0.016014, 0.730053, 0, 1.0};
Point(48) = {-0.007840, 0.731369, 0, 1.0};
Point(49) = {0.000473, 0.732744, 0, 1.0};
Point(50) = {0.008830, 0.734160, 0, 1.0};
Point(51) = {0.017133, 0.735598, 0, 1.0};
Point(52) = {0.025287, 0.737041, 0, 1.0};
Point(53) = {0.033199, 0.738469, 0, 1.0};
Point(54) = {0.040775, 0.739866, 0, 1.0};
Point(55) = {0.047927, 0.741214, 0, 1.0};
Point(56) = {0.054573, 0.742500, 0, 1.0};
Point(57) = {0.060634, 0.743709, 0, 1.0};
Point(58) = {0.066038, 0.744827, 0, 1.0};
Point(59) = {0.070719, 0.745845, 0, 1.0};
Point(60) = {0.074359, 0.746701, 0, 1.0};
Point(61) = {-0.074137, -0.748211, 0, 1.0};
Point(62) = {-0.073227, -0.748180, 0, 1.0};
Point(63) = {-0.068513, -0.748155, 0, 1.0};
Point(64) = {-0.063046, -0.748266, 0, 1.0};
Point(65) = {-0.056953, -0.748492, 0, 1.0};
Point(66) = {-0.050348, -0.748797, 0, 1.0};
Point(67) = {-0.043341, -0.749140, 0, 1.0};
Point(68) = {-0.036033, -0.749476, 0, 1.0};
Point(69) = {-0.028518, -0.749761, 0, 1.0};
Point(70) = {-0.020887, -0.749952, 0, 1.0};
Point(71) = {-0.013239, -0.750000, 0, 1.0};
Point(72) = {-0.005647, -0.749821, 0, 1.0};
Point(73) = {0.001891, -0.749360, 0, 1.0};
Point(74) = {0.009372, -0.748647, 0, 1.0};
Point(75) = {0.016732, -0.747731, 0, 1.0};
Point(76) = {0.023890, -0.746635, 0, 1.0};
Point(77) = {0.030769, -0.745374, 0, 1.0};
Point(78) = {0.037303, -0.743957, 0, 1.0};
Point(79) = {0.043434, -0.742397, 0, 1.0};
Point(80) = {0.049112, -0.740712, 0, 1.0};
Point(81) = {0.054297, -0.738928, 0, 1.0};
Point(82) = {0.058947, -0.737076, 0, 1.0};
Point(83) = {0.063026, -0.735192, 0, 1.0};
Point(84) = {0.066503, -0.733311, 0, 1.0};
Point(85) = {0.069356, -0.731474, 0, 1.0};
Point(86) = {0.071566, -0.729731, 0, 1.0};
Point(87) = {0.073120, -0.728144, 0, 1.0};
Point(88) = {0.073997, -0.726788, 0, 1.0};
Point(89) = {0.074128, -0.726435, 0, 1.0};
Point(90) = {0.074195, -0.726124, 0, 1.0};
Point(91) = {0.074201, -0.725942, 0, 1.0};
Point(92) = {0.074169, -0.725788, 0, 1.0};
Point(93) = {0.074083, -0.725653, 0, 1.0};
Point(94) = {0.073947, -0.725520, 0, 1.0};
Point(95) = {0.073668, -0.725324, 0, 1.0};
Point(96) = {0.073309, -0.725133, 0, 1.0};
Point(97) = {0.071591, -0.724591, 0, 1.0};
Point(98) = {0.069079, -0.724230, 0, 1.0};
Point(99) = {0.065794, -0.724089, 0, 1.0};
Point(100) = {0.061755, -0.724177, 0, 1.0};
Point(101) = {0.056990, -0.724491, 0, 1.0};
Point(102) = {0.051534, -0.725019, 0, 1.0};
Point(103) = {0.045436, -0.725741, 0, 1.0};
Point(104) = {0.038755, -0.726633, 0, 1.0};
Point(105) = {0.031567, -0.727665, 0, 1.0};
Point(106) = {0.023955, -0.728813, 0, 1.0};
Point(107) = {0.016014, -0.730053, 0, 1.0};
Point(108) = {0.007840, -0.731369, 0, 1.0};
Point(109) = {-0.000473, -0.732744, 0, 1.0};
Point(110) = {-0.008830, -0.734160, 0, 1.0};
Point(111) = {-0.017133, -0.735598, 0, 1.0};
Point(112) = {-0.025287, -0.737041, 0, 1.0};
Point(113) = {-0.033199, -0.738469, 0, 1.0};
Point(114) = {-0.040775, -0.739866, 0, 1.0};
Point(115) = {-0.047927, -0.741214, 0, 1.0};
Point(116) = {-0.054573, -0.742500, 0, 1.0};
Point(117) = {-0.060634, -0.743709, 0, 1.0};
Point(118) = {-0.066038, -0.744827, 0, 1.0};
Point(119) = {-0.070719, -0.745845, 0, 1.0};
Point(120) = {-0.074359, -0.746701, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:45};
Spline(3) = {45:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:105};
Spline(7) = {105:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
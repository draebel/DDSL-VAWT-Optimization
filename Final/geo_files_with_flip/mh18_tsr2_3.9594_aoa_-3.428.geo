SetFactory("OpenCASCADE");

Point(1) = {0.074892, 0.748344, 0, 1.0};
Point(2) = {0.073996, 0.748188, 0, 1.0};
Point(3) = {0.069375, 0.747249, 0, 1.0};
Point(4) = {0.064047, 0.746022, 0, 1.0};
Point(5) = {0.058129, 0.744556, 0, 1.0};
Point(6) = {0.051726, 0.742907, 0, 1.0};
Point(7) = {0.044937, 0.741138, 0, 1.0};
Point(8) = {0.037851, 0.739315, 0, 1.0};
Point(9) = {0.030553, 0.737500, 0, 1.0};
Point(10) = {0.023123, 0.735753, 0, 1.0};
Point(11) = {0.015646, 0.734142, 0, 1.0};
Point(12) = {0.008178, 0.732765, 0, 1.0};
Point(13) = {0.000704, 0.731675, 0, 1.0};
Point(14) = {-0.006764, 0.730844, 0, 1.0};
Point(15) = {-0.014156, 0.730236, 0, 1.0};
Point(16) = {-0.021386, 0.729845, 0, 1.0};
Point(17) = {-0.028378, 0.729674, 0, 1.0};
Point(18) = {-0.035064, 0.729725, 0, 1.0};
Point(19) = {-0.041384, 0.729998, 0, 1.0};
Point(20) = {-0.047287, 0.730486, 0, 1.0};
Point(21) = {-0.052727, 0.731173, 0, 1.0};
Point(22) = {-0.057657, 0.732036, 0, 1.0};
Point(23) = {-0.062036, 0.733046, 0, 1.0};
Point(24) = {-0.065823, 0.734177, 0, 1.0};
Point(25) = {-0.068992, 0.735391, 0, 1.0};
Point(26) = {-0.071512, 0.736645, 0, 1.0};
Point(27) = {-0.073357, 0.737882, 0, 1.0};
Point(28) = {-0.074493, 0.739029, 0, 1.0};
Point(29) = {-0.074693, 0.739348, 0, 1.0};
Point(30) = {-0.074822, 0.739638, 0, 1.0};
Point(31) = {-0.074866, 0.739815, 0, 1.0};
Point(32) = {-0.074865, 0.739973, 0, 1.0};
Point(33) = {-0.074810, 0.740123, 0, 1.0};
Point(34) = {-0.074703, 0.740281, 0, 1.0};
Point(35) = {-0.074470, 0.740530, 0, 1.0};
Point(36) = {-0.074158, 0.740790, 0, 1.0};
Point(37) = {-0.072587, 0.741672, 0, 1.0};
Point(38) = {-0.070202, 0.742539, 0, 1.0};
Point(39) = {-0.067015, 0.743348, 0, 1.0};
Point(40) = {-0.063043, 0.744088, 0, 1.0};
Point(41) = {-0.058315, 0.744755, 0, 1.0};
Point(42) = {-0.052866, 0.745354, 0, 1.0};
Point(43) = {-0.046749, 0.745893, 0, 1.0};
Point(44) = {-0.040027, 0.746386, 0, 1.0};
Point(45) = {-0.032779, 0.746845, 0, 1.0};
Point(46) = {-0.025094, 0.747278, 0, 1.0};
Point(47) = {-0.017067, 0.747688, 0, 1.0};
Point(48) = {-0.008797, 0.748070, 0, 1.0};
Point(49) = {-0.000378, 0.748424, 0, 1.0};
Point(50) = {0.008092, 0.748746, 0, 1.0};
Point(51) = {0.016514, 0.749036, 0, 1.0};
Point(52) = {0.024791, 0.749291, 0, 1.0};
Point(53) = {0.032827, 0.749511, 0, 1.0};
Point(54) = {0.040528, 0.749692, 0, 1.0};
Point(55) = {0.047806, 0.749834, 0, 1.0};
Point(56) = {0.054574, 0.749934, 0, 1.0};
Point(57) = {0.060754, 0.749991, 0, 1.0};
Point(58) = {0.066272, 0.750000, 0, 1.0};
Point(59) = {0.071063, 0.749960, 0, 1.0};
Point(60) = {0.074801, 0.749867, 0, 1.0};
Point(61) = {-0.074892, -0.748344, 0, 1.0};
Point(62) = {-0.073996, -0.748188, 0, 1.0};
Point(63) = {-0.069375, -0.747249, 0, 1.0};
Point(64) = {-0.064047, -0.746022, 0, 1.0};
Point(65) = {-0.058129, -0.744556, 0, 1.0};
Point(66) = {-0.051726, -0.742907, 0, 1.0};
Point(67) = {-0.044937, -0.741138, 0, 1.0};
Point(68) = {-0.037851, -0.739315, 0, 1.0};
Point(69) = {-0.030553, -0.737500, 0, 1.0};
Point(70) = {-0.023123, -0.735753, 0, 1.0};
Point(71) = {-0.015646, -0.734142, 0, 1.0};
Point(72) = {-0.008178, -0.732765, 0, 1.0};
Point(73) = {-0.000704, -0.731675, 0, 1.0};
Point(74) = {0.006764, -0.730844, 0, 1.0};
Point(75) = {0.014156, -0.730236, 0, 1.0};
Point(76) = {0.021386, -0.729845, 0, 1.0};
Point(77) = {0.028378, -0.729674, 0, 1.0};
Point(78) = {0.035064, -0.729725, 0, 1.0};
Point(79) = {0.041384, -0.729998, 0, 1.0};
Point(80) = {0.047287, -0.730486, 0, 1.0};
Point(81) = {0.052727, -0.731173, 0, 1.0};
Point(82) = {0.057657, -0.732036, 0, 1.0};
Point(83) = {0.062036, -0.733046, 0, 1.0};
Point(84) = {0.065823, -0.734177, 0, 1.0};
Point(85) = {0.068992, -0.735391, 0, 1.0};
Point(86) = {0.071512, -0.736645, 0, 1.0};
Point(87) = {0.073357, -0.737882, 0, 1.0};
Point(88) = {0.074493, -0.739029, 0, 1.0};
Point(89) = {0.074693, -0.739348, 0, 1.0};
Point(90) = {0.074822, -0.739638, 0, 1.0};
Point(91) = {0.074866, -0.739815, 0, 1.0};
Point(92) = {0.074865, -0.739973, 0, 1.0};
Point(93) = {0.074810, -0.740123, 0, 1.0};
Point(94) = {0.074703, -0.740281, 0, 1.0};
Point(95) = {0.074470, -0.740530, 0, 1.0};
Point(96) = {0.074158, -0.740790, 0, 1.0};
Point(97) = {0.072587, -0.741672, 0, 1.0};
Point(98) = {0.070202, -0.742539, 0, 1.0};
Point(99) = {0.067015, -0.743348, 0, 1.0};
Point(100) = {0.063043, -0.744088, 0, 1.0};
Point(101) = {0.058315, -0.744755, 0, 1.0};
Point(102) = {0.052866, -0.745354, 0, 1.0};
Point(103) = {0.046749, -0.745893, 0, 1.0};
Point(104) = {0.040027, -0.746386, 0, 1.0};
Point(105) = {0.032779, -0.746845, 0, 1.0};
Point(106) = {0.025094, -0.747278, 0, 1.0};
Point(107) = {0.017067, -0.747688, 0, 1.0};
Point(108) = {0.008797, -0.748070, 0, 1.0};
Point(109) = {0.000378, -0.748424, 0, 1.0};
Point(110) = {-0.008092, -0.748746, 0, 1.0};
Point(111) = {-0.016514, -0.749036, 0, 1.0};
Point(112) = {-0.024791, -0.749291, 0, 1.0};
Point(113) = {-0.032827, -0.749511, 0, 1.0};
Point(114) = {-0.040528, -0.749692, 0, 1.0};
Point(115) = {-0.047806, -0.749834, 0, 1.0};
Point(116) = {-0.054574, -0.749934, 0, 1.0};
Point(117) = {-0.060754, -0.749991, 0, 1.0};
Point(118) = {-0.066272, -0.750000, 0, 1.0};
Point(119) = {-0.071063, -0.749960, 0, 1.0};
Point(120) = {-0.074801, -0.749867, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:45};
Spline(3) = {45:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:105};
Spline(7) = {105:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
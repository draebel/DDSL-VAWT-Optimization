SetFactory("OpenCASCADE");

Point(1) = {0.074789, 0.733080, 0, 1.0};
Point(2) = {0.073485, 0.732860, 0, 1.0};
Point(3) = {0.068292, 0.731845, 0, 1.0};
Point(4) = {0.061970, 0.730555, 0, 1.0};
Point(5) = {0.058416, 0.729816, 0, 1.0};
Point(6) = {0.054621, 0.728985, 0, 1.0};
Point(7) = {0.050602, 0.728120, 0, 1.0};
Point(8) = {0.046375, 0.727177, 0, 1.0};
Point(9) = {0.041958, 0.726220, 0, 1.0};
Point(10) = {0.037371, 0.725216, 0, 1.0};
Point(11) = {0.032636, 0.724214, 0, 1.0};
Point(12) = {0.027771, 0.723179, 0, 1.0};
Point(13) = {0.022800, 0.722188, 0, 1.0};
Point(14) = {0.017743, 0.721215, 0, 1.0};
Point(15) = {0.012625, 0.720349, 0, 1.0};
Point(16) = {0.007468, 0.719559, 0, 1.0};
Point(17) = {0.002300, 0.718942, 0, 1.0};
Point(18) = {-0.002861, 0.718483, 0, 1.0};
Point(19) = {-0.007983, 0.718318, 0, 1.0};
Point(20) = {-0.013050, 0.718381, 0, 1.0};
Point(21) = {-0.018034, 0.718725, 0, 1.0};
Point(22) = {-0.022921, 0.719264, 0, 1.0};
Point(23) = {-0.027688, 0.720009, 0, 1.0};
Point(24) = {-0.032351, 0.720882, 0, 1.0};
Point(25) = {-0.036795, 0.721914, 0, 1.0};
Point(26) = {-0.041097, 0.723035, 0, 1.0};
Point(27) = {-0.045204, 0.724281, 0, 1.0};
Point(28) = {-0.049103, 0.725589, 0, 1.0};
Point(29) = {-0.052776, 0.726992, 0, 1.0};
Point(30) = {-0.056209, 0.728425, 0, 1.0};
Point(31) = {-0.059387, 0.729924, 0, 1.0};
Point(32) = {-0.062296, 0.731420, 0, 1.0};
Point(33) = {-0.064925, 0.732950, 0, 1.0};
Point(34) = {-0.067266, 0.734442, 0, 1.0};
Point(35) = {-0.069304, 0.735933, 0, 1.0};
Point(36) = {-0.071037, 0.737346, 0, 1.0};
Point(37) = {-0.072452, 0.738716, 0, 1.0};
Point(38) = {-0.073549, 0.739968, 0, 1.0};
Point(39) = {-0.074323, 0.741113, 0, 1.0};
Point(40) = {-0.074775, 0.742072, 0, 1.0};
Point(41) = {-0.074887, 0.743090, 0, 1.0};
Point(42) = {-0.074690, 0.743615, 0, 1.0};
Point(43) = {-0.074148, 0.744290, 0, 1.0};
Point(44) = {-0.073277, 0.744919, 0, 1.0};
Point(45) = {-0.072075, 0.745554, 0, 1.0};
Point(46) = {-0.070552, 0.746144, 0, 1.0};
Point(47) = {-0.068709, 0.746734, 0, 1.0};
Point(48) = {-0.066560, 0.747264, 0, 1.0};
Point(49) = {-0.064109, 0.747781, 0, 1.0};
Point(50) = {-0.061371, 0.748230, 0, 1.0};
Point(51) = {-0.058356, 0.748659, 0, 1.0};
Point(52) = {-0.055076, 0.749016, 0, 1.0};
Point(53) = {-0.051544, 0.749358, 0, 1.0};
Point(54) = {-0.047782, 0.749589, 0, 1.0};
Point(55) = {-0.043799, 0.749800, 0, 1.0};
Point(56) = {-0.039617, 0.749923, 0, 1.0};
Point(57) = {-0.035248, 0.750000, 0, 1.0};
Point(58) = {-0.030749, 0.749983, 0, 1.0};
Point(59) = {-0.026042, 0.749906, 0, 1.0};
Point(60) = {-0.021244, 0.749722, 0, 1.0};
Point(61) = {-0.016342, 0.749463, 0, 1.0};
Point(62) = {-0.011361, 0.749060, 0, 1.0};
Point(63) = {-0.006319, 0.748544, 0, 1.0};
Point(64) = {-0.001238, 0.747957, 0, 1.0};
Point(65) = {0.003840, 0.746930, 0, 1.0};
Point(66) = {0.008917, 0.745881, 0, 1.0};
Point(67) = {0.013970, 0.744784, 0, 1.0};
Point(68) = {0.018978, 0.743648, 0, 1.0};
Point(69) = {0.023921, 0.742566, 0, 1.0};
Point(70) = {0.028780, 0.741505, 0, 1.0};
Point(71) = {0.033533, 0.740510, 0, 1.0};
Point(72) = {0.038161, 0.739563, 0, 1.0};
Point(73) = {0.042646, 0.738721, 0, 1.0};
Point(74) = {0.046967, 0.737930, 0, 1.0};
Point(75) = {0.051104, 0.737246, 0, 1.0};
Point(76) = {0.055041, 0.736619, 0, 1.0};
Point(77) = {0.058762, 0.736095, 0, 1.0};
Point(78) = {0.062249, 0.735629, 0, 1.0};
Point(79) = {0.068464, 0.734962, 0, 1.0};
Point(80) = {0.073580, 0.734587, 0, 1.0};
Point(81) = {0.074870, 0.734541, 0, 1.0};
Point(82) = {-0.074789, -0.733080, 0, 1.0};
Point(83) = {-0.073485, -0.732860, 0, 1.0};
Point(84) = {-0.068292, -0.731845, 0, 1.0};
Point(85) = {-0.061970, -0.730555, 0, 1.0};
Point(86) = {-0.058416, -0.729816, 0, 1.0};
Point(87) = {-0.054621, -0.728985, 0, 1.0};
Point(88) = {-0.050602, -0.728120, 0, 1.0};
Point(89) = {-0.046375, -0.727177, 0, 1.0};
Point(90) = {-0.041958, -0.726220, 0, 1.0};
Point(91) = {-0.037371, -0.725216, 0, 1.0};
Point(92) = {-0.032636, -0.724214, 0, 1.0};
Point(93) = {-0.027771, -0.723179, 0, 1.0};
Point(94) = {-0.022800, -0.722188, 0, 1.0};
Point(95) = {-0.017743, -0.721215, 0, 1.0};
Point(96) = {-0.012625, -0.720349, 0, 1.0};
Point(97) = {-0.007468, -0.719559, 0, 1.0};
Point(98) = {-0.002300, -0.718942, 0, 1.0};
Point(99) = {0.002861, -0.718483, 0, 1.0};
Point(100) = {0.007983, -0.718318, 0, 1.0};
Point(101) = {0.013050, -0.718381, 0, 1.0};
Point(102) = {0.018034, -0.718725, 0, 1.0};
Point(103) = {0.022921, -0.719264, 0, 1.0};
Point(104) = {0.027688, -0.720009, 0, 1.0};
Point(105) = {0.032351, -0.720882, 0, 1.0};
Point(106) = {0.036795, -0.721914, 0, 1.0};
Point(107) = {0.041097, -0.723035, 0, 1.0};
Point(108) = {0.045204, -0.724281, 0, 1.0};
Point(109) = {0.049103, -0.725589, 0, 1.0};
Point(110) = {0.052776, -0.726992, 0, 1.0};
Point(111) = {0.056209, -0.728425, 0, 1.0};
Point(112) = {0.059387, -0.729924, 0, 1.0};
Point(113) = {0.062296, -0.731420, 0, 1.0};
Point(114) = {0.064925, -0.732950, 0, 1.0};
Point(115) = {0.067266, -0.734442, 0, 1.0};
Point(116) = {0.069304, -0.735933, 0, 1.0};
Point(117) = {0.071037, -0.737346, 0, 1.0};
Point(118) = {0.072452, -0.738716, 0, 1.0};
Point(119) = {0.073549, -0.739968, 0, 1.0};
Point(120) = {0.074323, -0.741113, 0, 1.0};
Point(121) = {0.074775, -0.742072, 0, 1.0};
Point(122) = {0.074887, -0.743090, 0, 1.0};
Point(123) = {0.074690, -0.743615, 0, 1.0};
Point(124) = {0.074148, -0.744290, 0, 1.0};
Point(125) = {0.073277, -0.744919, 0, 1.0};
Point(126) = {0.072075, -0.745554, 0, 1.0};
Point(127) = {0.070552, -0.746144, 0, 1.0};
Point(128) = {0.068709, -0.746734, 0, 1.0};
Point(129) = {0.066560, -0.747264, 0, 1.0};
Point(130) = {0.064109, -0.747781, 0, 1.0};
Point(131) = {0.061371, -0.748230, 0, 1.0};
Point(132) = {0.058356, -0.748659, 0, 1.0};
Point(133) = {0.055076, -0.749016, 0, 1.0};
Point(134) = {0.051544, -0.749358, 0, 1.0};
Point(135) = {0.047782, -0.749589, 0, 1.0};
Point(136) = {0.043799, -0.749800, 0, 1.0};
Point(137) = {0.039617, -0.749923, 0, 1.0};
Point(138) = {0.035248, -0.750000, 0, 1.0};
Point(139) = {0.030749, -0.749983, 0, 1.0};
Point(140) = {0.026042, -0.749906, 0, 1.0};
Point(141) = {0.021244, -0.749722, 0, 1.0};
Point(142) = {0.016342, -0.749463, 0, 1.0};
Point(143) = {0.011361, -0.749060, 0, 1.0};
Point(144) = {0.006319, -0.748544, 0, 1.0};
Point(145) = {0.001238, -0.747957, 0, 1.0};
Point(146) = {-0.003840, -0.746930, 0, 1.0};
Point(147) = {-0.008917, -0.745881, 0, 1.0};
Point(148) = {-0.013970, -0.744784, 0, 1.0};
Point(149) = {-0.018978, -0.743648, 0, 1.0};
Point(150) = {-0.023921, -0.742566, 0, 1.0};
Point(151) = {-0.028780, -0.741505, 0, 1.0};
Point(152) = {-0.033533, -0.740510, 0, 1.0};
Point(153) = {-0.038161, -0.739563, 0, 1.0};
Point(154) = {-0.042646, -0.738721, 0, 1.0};
Point(155) = {-0.046967, -0.737930, 0, 1.0};
Point(156) = {-0.051104, -0.737246, 0, 1.0};
Point(157) = {-0.055041, -0.736619, 0, 1.0};
Point(158) = {-0.058762, -0.736095, 0, 1.0};
Point(159) = {-0.062249, -0.735629, 0, 1.0};
Point(160) = {-0.068464, -0.734962, 0, 1.0};
Point(161) = {-0.073580, -0.734587, 0, 1.0};
Point(162) = {-0.074870, -0.734541, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074955, 0.740217, 0, 1.0};
Point(2) = {0.073003, 0.740583, 0, 1.0};
Point(3) = {0.068989, 0.741362, 0, 1.0};
Point(4) = {0.064974, 0.742131, 0, 1.0};
Point(5) = {0.060960, 0.742880, 0, 1.0};
Point(6) = {0.056947, 0.743613, 0, 1.0};
Point(7) = {0.052933, 0.744327, 0, 1.0};
Point(8) = {0.044908, 0.745643, 0, 1.0};
Point(9) = {0.036885, 0.746811, 0, 1.0};
Point(10) = {0.028865, 0.747811, 0, 1.0};
Point(11) = {0.020848, 0.748648, 0, 1.0};
Point(12) = {0.012834, 0.749291, 0, 1.0};
Point(13) = {0.004823, 0.749730, 0, 1.0};
Point(14) = {-0.003185, 0.749962, 0, 1.0};
Point(15) = {-0.011190, 0.750000, 0, 1.0};
Point(16) = {-0.015191, 0.749950, 0, 1.0};
Point(17) = {-0.019191, 0.749852, 0, 1.0};
Point(18) = {-0.023191, 0.749700, 0, 1.0};
Point(19) = {-0.027189, 0.749484, 0, 1.0};
Point(20) = {-0.031187, 0.749205, 0, 1.0};
Point(21) = {-0.035183, 0.748877, 0, 1.0};
Point(22) = {-0.039179, 0.748504, 0, 1.0};
Point(23) = {-0.043174, 0.748068, 0, 1.0};
Point(24) = {-0.047168, 0.747542, 0, 1.0};
Point(25) = {-0.051159, 0.746885, 0, 1.0};
Point(26) = {-0.055148, 0.746061, 0, 1.0};
Point(27) = {-0.059134, 0.745041, 0, 1.0};
Point(28) = {-0.063116, 0.743785, 0, 1.0};
Point(29) = {-0.067092, 0.742197, 0, 1.0};
Point(30) = {-0.069077, 0.741226, 0, 1.0};
Point(31) = {-0.071060, 0.740060, 0, 1.0};
Point(32) = {-0.072049, 0.739371, 0, 1.0};
Point(33) = {-0.073037, 0.738573, 0, 1.0};
Point(34) = {-0.073628, 0.738018, 0, 1.0};
Point(35) = {-0.074218, 0.737348, 0, 1.0};
Point(36) = {-0.074608, 0.736747, 0, 1.0};
Point(37) = {-0.074990, 0.735609, 0, 1.0};
Point(38) = {-0.074582, 0.735099, 0, 1.0};
Point(39) = {-0.074178, 0.734888, 0, 1.0};
Point(40) = {-0.073574, 0.734629, 0, 1.0};
Point(41) = {-0.072970, 0.734422, 0, 1.0};
Point(42) = {-0.071966, 0.734169, 0, 1.0};
Point(43) = {-0.070963, 0.734009, 0, 1.0};
Point(44) = {-0.068958, 0.733789, 0, 1.0};
Point(45) = {-0.066955, 0.733656, 0, 1.0};
Point(46) = {-0.062951, 0.733499, 0, 1.0};
Point(47) = {-0.058947, 0.733416, 0, 1.0};
Point(48) = {-0.054944, 0.733370, 0, 1.0};
Point(49) = {-0.050942, 0.733348, 0, 1.0};
Point(50) = {-0.046940, 0.733354, 0, 1.0};
Point(51) = {-0.042939, 0.733383, 0, 1.0};
Point(52) = {-0.038938, 0.733433, 0, 1.0};
Point(53) = {-0.034937, 0.733501, 0, 1.0};
Point(54) = {-0.030936, 0.733579, 0, 1.0};
Point(55) = {-0.026935, 0.733669, 0, 1.0};
Point(56) = {-0.022935, 0.733776, 0, 1.0};
Point(57) = {-0.018935, 0.733906, 0, 1.0};
Point(58) = {-0.014936, 0.734068, 0, 1.0};
Point(59) = {-0.010937, 0.734262, 0, 1.0};
Point(60) = {-0.002940, 0.734714, 0, 1.0};
Point(61) = {0.005055, 0.735253, 0, 1.0};
Point(62) = {0.013049, 0.735862, 0, 1.0};
Point(63) = {0.021043, 0.736523, 0, 1.0};
Point(64) = {0.029036, 0.737194, 0, 1.0};
Point(65) = {0.037030, 0.737822, 0, 1.0};
Point(66) = {0.045025, 0.738366, 0, 1.0};
Point(67) = {0.053022, 0.738768, 0, 1.0};
Point(68) = {0.057022, 0.738893, 0, 1.0};
Point(69) = {0.061023, 0.738961, 0, 1.0};
Point(70) = {0.065025, 0.738951, 0, 1.0};
Point(71) = {0.069028, 0.738892, 0, 1.0};
Point(72) = {0.073032, 0.738758, 0, 1.0};
Point(73) = {0.074979, 0.738695, 0, 1.0};
Point(74) = {-0.074955, -0.740217, 0, 1.0};
Point(75) = {-0.073003, -0.740583, 0, 1.0};
Point(76) = {-0.068989, -0.741362, 0, 1.0};
Point(77) = {-0.064974, -0.742131, 0, 1.0};
Point(78) = {-0.060960, -0.742880, 0, 1.0};
Point(79) = {-0.056947, -0.743613, 0, 1.0};
Point(80) = {-0.052933, -0.744327, 0, 1.0};
Point(81) = {-0.044908, -0.745643, 0, 1.0};
Point(82) = {-0.036885, -0.746811, 0, 1.0};
Point(83) = {-0.028865, -0.747811, 0, 1.0};
Point(84) = {-0.020848, -0.748648, 0, 1.0};
Point(85) = {-0.012834, -0.749291, 0, 1.0};
Point(86) = {-0.004823, -0.749730, 0, 1.0};
Point(87) = {0.003185, -0.749962, 0, 1.0};
Point(88) = {0.011190, -0.750000, 0, 1.0};
Point(89) = {0.015191, -0.749950, 0, 1.0};
Point(90) = {0.019191, -0.749852, 0, 1.0};
Point(91) = {0.023191, -0.749700, 0, 1.0};
Point(92) = {0.027189, -0.749484, 0, 1.0};
Point(93) = {0.031187, -0.749205, 0, 1.0};
Point(94) = {0.035183, -0.748877, 0, 1.0};
Point(95) = {0.039179, -0.748504, 0, 1.0};
Point(96) = {0.043174, -0.748068, 0, 1.0};
Point(97) = {0.047168, -0.747542, 0, 1.0};
Point(98) = {0.051159, -0.746885, 0, 1.0};
Point(99) = {0.055148, -0.746061, 0, 1.0};
Point(100) = {0.059134, -0.745041, 0, 1.0};
Point(101) = {0.063116, -0.743785, 0, 1.0};
Point(102) = {0.067092, -0.742197, 0, 1.0};
Point(103) = {0.069077, -0.741226, 0, 1.0};
Point(104) = {0.071060, -0.740060, 0, 1.0};
Point(105) = {0.072049, -0.739371, 0, 1.0};
Point(106) = {0.073037, -0.738573, 0, 1.0};
Point(107) = {0.073628, -0.738018, 0, 1.0};
Point(108) = {0.074218, -0.737348, 0, 1.0};
Point(109) = {0.074608, -0.736747, 0, 1.0};
Point(110) = {0.074990, -0.735609, 0, 1.0};
Point(111) = {0.074582, -0.735099, 0, 1.0};
Point(112) = {0.074178, -0.734888, 0, 1.0};
Point(113) = {0.073574, -0.734629, 0, 1.0};
Point(114) = {0.072970, -0.734422, 0, 1.0};
Point(115) = {0.071966, -0.734169, 0, 1.0};
Point(116) = {0.070963, -0.734009, 0, 1.0};
Point(117) = {0.068958, -0.733789, 0, 1.0};
Point(118) = {0.066955, -0.733656, 0, 1.0};
Point(119) = {0.062951, -0.733499, 0, 1.0};
Point(120) = {0.058947, -0.733416, 0, 1.0};
Point(121) = {0.054944, -0.733370, 0, 1.0};
Point(122) = {0.050942, -0.733348, 0, 1.0};
Point(123) = {0.046940, -0.733354, 0, 1.0};
Point(124) = {0.042939, -0.733383, 0, 1.0};
Point(125) = {0.038938, -0.733433, 0, 1.0};
Point(126) = {0.034937, -0.733501, 0, 1.0};
Point(127) = {0.030936, -0.733579, 0, 1.0};
Point(128) = {0.026935, -0.733669, 0, 1.0};
Point(129) = {0.022935, -0.733776, 0, 1.0};
Point(130) = {0.018935, -0.733906, 0, 1.0};
Point(131) = {0.014936, -0.734068, 0, 1.0};
Point(132) = {0.010937, -0.734262, 0, 1.0};
Point(133) = {0.002940, -0.734714, 0, 1.0};
Point(134) = {-0.005055, -0.735253, 0, 1.0};
Point(135) = {-0.013049, -0.735862, 0, 1.0};
Point(136) = {-0.021043, -0.736523, 0, 1.0};
Point(137) = {-0.029036, -0.737194, 0, 1.0};
Point(138) = {-0.037030, -0.737822, 0, 1.0};
Point(139) = {-0.045025, -0.738366, 0, 1.0};
Point(140) = {-0.053022, -0.738768, 0, 1.0};
Point(141) = {-0.057022, -0.738893, 0, 1.0};
Point(142) = {-0.061023, -0.738961, 0, 1.0};
Point(143) = {-0.065025, -0.738951, 0, 1.0};
Point(144) = {-0.069028, -0.738892, 0, 1.0};
Point(145) = {-0.073032, -0.738758, 0, 1.0};
Point(146) = {-0.074979, -0.738695, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
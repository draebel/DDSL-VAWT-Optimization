SetFactory("OpenCASCADE");

Point(1) = {0.074051, 0.725245, 0, 1.0};
Point(2) = {0.072029, 0.725377, 0, 1.0};
Point(3) = {0.068914, 0.725513, 0, 1.0};
Point(4) = {0.065015, 0.725650, 0, 1.0};
Point(5) = {0.060337, 0.725813, 0, 1.0};
Point(6) = {0.054878, 0.725996, 0, 1.0};
Point(7) = {0.049420, 0.726192, 0, 1.0};
Point(8) = {0.043191, 0.726464, 0, 1.0};
Point(9) = {0.036964, 0.726749, 0, 1.0};
Point(10) = {0.030740, 0.727057, 0, 1.0};
Point(11) = {0.024525, 0.727426, 0, 1.0};
Point(12) = {0.016771, 0.727979, 0, 1.0};
Point(13) = {0.009037, 0.728663, 0, 1.0};
Point(14) = {0.001319, 0.729445, 0, 1.0};
Point(15) = {-0.006382, 0.730345, 0, 1.0};
Point(16) = {-0.014073, 0.731308, 0, 1.0};
Point(17) = {-0.021747, 0.732377, 0, 1.0};
Point(18) = {-0.029408, 0.733531, 0, 1.0};
Point(19) = {-0.037058, 0.734764, 0, 1.0};
Point(20) = {-0.044692, 0.736093, 0, 1.0};
Point(21) = {-0.052297, 0.737613, 0, 1.0};
Point(22) = {-0.057738, 0.738929, 0, 1.0};
Point(23) = {-0.061638, 0.740073, 0, 1.0};
Point(24) = {-0.064538, 0.741096, 0, 1.0};
Point(25) = {-0.066744, 0.742043, 0, 1.0};
Point(26) = {-0.068477, 0.742902, 0, 1.0};
Point(27) = {-0.069857, 0.743662, 0, 1.0};
Point(28) = {-0.070934, 0.744357, 0, 1.0};
Point(29) = {-0.071765, 0.744965, 0, 1.0};
Point(30) = {-0.072384, 0.745475, 0, 1.0};
Point(31) = {-0.072809, 0.745871, 0, 1.0};
Point(32) = {-0.073086, 0.746157, 0, 1.0};
Point(33) = {-0.073352, 0.746465, 0, 1.0};
Point(34) = {-0.073587, 0.746776, 0, 1.0};
Point(35) = {-0.073813, 0.747140, 0, 1.0};
Point(36) = {-0.073984, 0.747503, 0, 1.0};
Point(37) = {-0.074103, 0.747900, 0, 1.0};
Point(38) = {-0.074145, 0.748319, 0, 1.0};
Point(39) = {-0.074124, 0.748577, 0, 1.0};
Point(40) = {-0.073987, 0.748908, 0, 1.0};
Point(41) = {-0.073718, 0.749178, 0, 1.0};
Point(42) = {-0.073368, 0.749413, 0, 1.0};
Point(43) = {-0.072996, 0.749589, 0, 1.0};
Point(44) = {-0.072598, 0.749729, 0, 1.0};
Point(45) = {-0.072207, 0.749827, 0, 1.0};
Point(46) = {-0.071619, 0.749927, 0, 1.0};
Point(47) = {-0.070844, 0.749976, 0, 1.0};
Point(48) = {-0.069805, 0.750000, 0, 1.0};
Point(49) = {-0.068530, 0.749980, 0, 1.0};
Point(50) = {-0.066941, 0.749926, 0, 1.0};
Point(51) = {-0.065009, 0.749839, 0, 1.0};
Point(52) = {-0.062593, 0.749693, 0, 1.0};
Point(53) = {-0.059504, 0.749442, 0, 1.0};
Point(54) = {-0.055470, 0.749068, 0, 1.0};
Point(55) = {-0.050610, 0.748558, 0, 1.0};
Point(56) = {-0.042909, 0.747661, 0, 1.0};
Point(57) = {-0.035220, 0.746687, 0, 1.0};
Point(58) = {-0.027541, 0.745645, 0, 1.0};
Point(59) = {-0.019869, 0.744561, 0, 1.0};
Point(60) = {-0.012205, 0.743422, 0, 1.0};
Point(61) = {-0.004550, 0.742227, 0, 1.0};
Point(62) = {0.003100, 0.740999, 0, 1.0};
Point(63) = {0.010743, 0.739729, 0, 1.0};
Point(64) = {0.018381, 0.738420, 0, 1.0};
Point(65) = {0.026010, 0.737058, 0, 1.0};
Point(66) = {0.032108, 0.735930, 0, 1.0};
Point(67) = {0.038199, 0.734766, 0, 1.0};
Point(68) = {0.044284, 0.733557, 0, 1.0};
Point(69) = {0.050364, 0.732310, 0, 1.0};
Point(70) = {0.055677, 0.731182, 0, 1.0};
Point(71) = {0.060985, 0.730015, 0, 1.0};
Point(72) = {0.065521, 0.728930, 0, 1.0};
Point(73) = {0.069297, 0.727997, 0, 1.0};
Point(74) = {0.072316, 0.727240, 0, 1.0};
Point(75) = {0.074275, 0.726699, 0, 1.0};
Point(76) = {-0.074051, -0.725245, 0, 1.0};
Point(77) = {-0.072029, -0.725377, 0, 1.0};
Point(78) = {-0.068914, -0.725513, 0, 1.0};
Point(79) = {-0.065015, -0.725650, 0, 1.0};
Point(80) = {-0.060337, -0.725813, 0, 1.0};
Point(81) = {-0.054878, -0.725996, 0, 1.0};
Point(82) = {-0.049420, -0.726192, 0, 1.0};
Point(83) = {-0.043191, -0.726464, 0, 1.0};
Point(84) = {-0.036964, -0.726749, 0, 1.0};
Point(85) = {-0.030740, -0.727057, 0, 1.0};
Point(86) = {-0.024525, -0.727426, 0, 1.0};
Point(87) = {-0.016771, -0.727979, 0, 1.0};
Point(88) = {-0.009037, -0.728663, 0, 1.0};
Point(89) = {-0.001319, -0.729445, 0, 1.0};
Point(90) = {0.006382, -0.730345, 0, 1.0};
Point(91) = {0.014073, -0.731308, 0, 1.0};
Point(92) = {0.021747, -0.732377, 0, 1.0};
Point(93) = {0.029408, -0.733531, 0, 1.0};
Point(94) = {0.037058, -0.734764, 0, 1.0};
Point(95) = {0.044692, -0.736093, 0, 1.0};
Point(96) = {0.052297, -0.737613, 0, 1.0};
Point(97) = {0.057738, -0.738929, 0, 1.0};
Point(98) = {0.061638, -0.740073, 0, 1.0};
Point(99) = {0.064538, -0.741096, 0, 1.0};
Point(100) = {0.066744, -0.742043, 0, 1.0};
Point(101) = {0.068477, -0.742902, 0, 1.0};
Point(102) = {0.069857, -0.743662, 0, 1.0};
Point(103) = {0.070934, -0.744357, 0, 1.0};
Point(104) = {0.071765, -0.744965, 0, 1.0};
Point(105) = {0.072384, -0.745475, 0, 1.0};
Point(106) = {0.072809, -0.745871, 0, 1.0};
Point(107) = {0.073086, -0.746157, 0, 1.0};
Point(108) = {0.073352, -0.746465, 0, 1.0};
Point(109) = {0.073587, -0.746776, 0, 1.0};
Point(110) = {0.073813, -0.747140, 0, 1.0};
Point(111) = {0.073984, -0.747503, 0, 1.0};
Point(112) = {0.074103, -0.747900, 0, 1.0};
Point(113) = {0.074145, -0.748319, 0, 1.0};
Point(114) = {0.074124, -0.748577, 0, 1.0};
Point(115) = {0.073987, -0.748908, 0, 1.0};
Point(116) = {0.073718, -0.749178, 0, 1.0};
Point(117) = {0.073368, -0.749413, 0, 1.0};
Point(118) = {0.072996, -0.749589, 0, 1.0};
Point(119) = {0.072598, -0.749729, 0, 1.0};
Point(120) = {0.072207, -0.749827, 0, 1.0};
Point(121) = {0.071619, -0.749927, 0, 1.0};
Point(122) = {0.070844, -0.749976, 0, 1.0};
Point(123) = {0.069805, -0.750000, 0, 1.0};
Point(124) = {0.068530, -0.749980, 0, 1.0};
Point(125) = {0.066941, -0.749926, 0, 1.0};
Point(126) = {0.065009, -0.749839, 0, 1.0};
Point(127) = {0.062593, -0.749693, 0, 1.0};
Point(128) = {0.059504, -0.749442, 0, 1.0};
Point(129) = {0.055470, -0.749068, 0, 1.0};
Point(130) = {0.050610, -0.748558, 0, 1.0};
Point(131) = {0.042909, -0.747661, 0, 1.0};
Point(132) = {0.035220, -0.746687, 0, 1.0};
Point(133) = {0.027541, -0.745645, 0, 1.0};
Point(134) = {0.019869, -0.744561, 0, 1.0};
Point(135) = {0.012205, -0.743422, 0, 1.0};
Point(136) = {0.004550, -0.742227, 0, 1.0};
Point(137) = {-0.003100, -0.740999, 0, 1.0};
Point(138) = {-0.010743, -0.739729, 0, 1.0};
Point(139) = {-0.018381, -0.738420, 0, 1.0};
Point(140) = {-0.026010, -0.737058, 0, 1.0};
Point(141) = {-0.032108, -0.735930, 0, 1.0};
Point(142) = {-0.038199, -0.734766, 0, 1.0};
Point(143) = {-0.044284, -0.733557, 0, 1.0};
Point(144) = {-0.050364, -0.732310, 0, 1.0};
Point(145) = {-0.055677, -0.731182, 0, 1.0};
Point(146) = {-0.060985, -0.730015, 0, 1.0};
Point(147) = {-0.065521, -0.728930, 0, 1.0};
Point(148) = {-0.069297, -0.727997, 0, 1.0};
Point(149) = {-0.072316, -0.727240, 0, 1.0};
Point(150) = {-0.074275, -0.726699, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:58};
Spline(3) = {58:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:94};
Spline(6) = {94:133};
Spline(7) = {133:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074973, 0.745142, 0, 1.0};
Point(2) = {0.073178, 0.744796, 0, 1.0};
Point(3) = {0.069976, 0.744189, 0, 1.0};
Point(4) = {0.066124, 0.743472, 0, 1.0};
Point(5) = {0.061662, 0.742660, 0, 1.0};
Point(6) = {0.056628, 0.741765, 0, 1.0};
Point(7) = {0.051074, 0.740807, 0, 1.0};
Point(8) = {0.045052, 0.739796, 0, 1.0};
Point(9) = {0.038617, 0.738753, 0, 1.0};
Point(10) = {0.031834, 0.737695, 0, 1.0};
Point(11) = {0.024766, 0.736636, 0, 1.0};
Point(12) = {0.017483, 0.735600, 0, 1.0};
Point(13) = {0.010051, 0.734601, 0, 1.0};
Point(14) = {0.002544, 0.733664, 0, 1.0};
Point(15) = {-0.004969, 0.732811, 0, 1.0};
Point(16) = {-0.012417, 0.732100, 0, 1.0};
Point(17) = {-0.019726, 0.731532, 0, 1.0};
Point(18) = {-0.026832, 0.731160, 0, 1.0};
Point(19) = {-0.033664, 0.730960, 0, 1.0};
Point(20) = {-0.040156, 0.730947, 0, 1.0};
Point(21) = {-0.046245, 0.731113, 0, 1.0};
Point(22) = {-0.051873, 0.731488, 0, 1.0};
Point(23) = {-0.056989, 0.732039, 0, 1.0};
Point(24) = {-0.061537, 0.732762, 0, 1.0};
Point(25) = {-0.065475, 0.733584, 0, 1.0};
Point(26) = {-0.068761, 0.734462, 0, 1.0};
Point(27) = {-0.071376, 0.735622, 0, 1.0};
Point(28) = {-0.072418, 0.736243, 0, 1.0};
Point(29) = {-0.073288, 0.736936, 0, 1.0};
Point(30) = {-0.073551, 0.737187, 0, 1.0};
Point(31) = {-0.073797, 0.737455, 0, 1.0};
Point(32) = {-0.074044, 0.737737, 0, 1.0};
Point(33) = {-0.074297, 0.738120, 0, 1.0};
Point(34) = {-0.074481, 0.738409, 0, 1.0};
Point(35) = {-0.074622, 0.738680, 0, 1.0};
Point(36) = {-0.074729, 0.738938, 0, 1.0};
Point(37) = {-0.074822, 0.739229, 0, 1.0};
Point(38) = {-0.074883, 0.739494, 0, 1.0};
Point(39) = {-0.074940, 0.739952, 0, 1.0};
Point(40) = {-0.074930, 0.740326, 0, 1.0};
Point(41) = {-0.074896, 0.740544, 0, 1.0};
Point(42) = {-0.074832, 0.740786, 0, 1.0};
Point(43) = {-0.074752, 0.740999, 0, 1.0};
Point(44) = {-0.074639, 0.741222, 0, 1.0};
Point(45) = {-0.074483, 0.741439, 0, 1.0};
Point(46) = {-0.074265, 0.741675, 0, 1.0};
Point(47) = {-0.074047, 0.741910, 0, 1.0};
Point(48) = {-0.073827, 0.742108, 0, 1.0};
Point(49) = {-0.073588, 0.742276, 0, 1.0};
Point(50) = {-0.072787, 0.742816, 0, 1.0};
Point(51) = {-0.071806, 0.743298, 0, 1.0};
Point(52) = {-0.069312, 0.744284, 0, 1.0};
Point(53) = {-0.066134, 0.745324, 0, 1.0};
Point(54) = {-0.062299, 0.746337, 0, 1.0};
Point(55) = {-0.057842, 0.747248, 0, 1.0};
Point(56) = {-0.052802, 0.748037, 0, 1.0};
Point(57) = {-0.047232, 0.748698, 0, 1.0};
Point(58) = {-0.041182, 0.749224, 0, 1.0};
Point(59) = {-0.034711, 0.749614, 0, 1.0};
Point(60) = {-0.027882, 0.749864, 0, 1.0};
Point(61) = {-0.020762, 0.749988, 0, 1.0};
Point(62) = {-0.013421, 0.750000, 0, 1.0};
Point(63) = {-0.005933, 0.749996, 0, 1.0};
Point(64) = {0.001630, 0.749948, 0, 1.0};
Point(65) = {0.009195, 0.749858, 0, 1.0};
Point(66) = {0.016692, 0.749697, 0, 1.0};
Point(67) = {0.024045, 0.749481, 0, 1.0};
Point(68) = {0.031187, 0.749220, 0, 1.0};
Point(69) = {0.038046, 0.748928, 0, 1.0};
Point(70) = {0.044557, 0.748611, 0, 1.0};
Point(71) = {0.050655, 0.748281, 0, 1.0};
Point(72) = {0.056281, 0.747950, 0, 1.0};
Point(73) = {0.061384, 0.747624, 0, 1.0};
Point(74) = {0.065908, 0.747317, 0, 1.0};
Point(75) = {0.069816, 0.747034, 0, 1.0};
Point(76) = {0.073066, 0.746789, 0, 1.0};
Point(77) = {0.074912, 0.746647, 0, 1.0};
Point(78) = {-0.074973, -0.745142, 0, 1.0};
Point(79) = {-0.073178, -0.744796, 0, 1.0};
Point(80) = {-0.069976, -0.744189, 0, 1.0};
Point(81) = {-0.066124, -0.743472, 0, 1.0};
Point(82) = {-0.061662, -0.742660, 0, 1.0};
Point(83) = {-0.056628, -0.741765, 0, 1.0};
Point(84) = {-0.051074, -0.740807, 0, 1.0};
Point(85) = {-0.045052, -0.739796, 0, 1.0};
Point(86) = {-0.038617, -0.738753, 0, 1.0};
Point(87) = {-0.031834, -0.737695, 0, 1.0};
Point(88) = {-0.024766, -0.736636, 0, 1.0};
Point(89) = {-0.017483, -0.735600, 0, 1.0};
Point(90) = {-0.010051, -0.734601, 0, 1.0};
Point(91) = {-0.002544, -0.733664, 0, 1.0};
Point(92) = {0.004969, -0.732811, 0, 1.0};
Point(93) = {0.012417, -0.732100, 0, 1.0};
Point(94) = {0.019726, -0.731532, 0, 1.0};
Point(95) = {0.026832, -0.731160, 0, 1.0};
Point(96) = {0.033664, -0.730960, 0, 1.0};
Point(97) = {0.040156, -0.730947, 0, 1.0};
Point(98) = {0.046245, -0.731113, 0, 1.0};
Point(99) = {0.051873, -0.731488, 0, 1.0};
Point(100) = {0.056989, -0.732039, 0, 1.0};
Point(101) = {0.061537, -0.732762, 0, 1.0};
Point(102) = {0.065475, -0.733584, 0, 1.0};
Point(103) = {0.068761, -0.734462, 0, 1.0};
Point(104) = {0.071376, -0.735622, 0, 1.0};
Point(105) = {0.072418, -0.736243, 0, 1.0};
Point(106) = {0.073288, -0.736936, 0, 1.0};
Point(107) = {0.073551, -0.737187, 0, 1.0};
Point(108) = {0.073797, -0.737455, 0, 1.0};
Point(109) = {0.074044, -0.737737, 0, 1.0};
Point(110) = {0.074297, -0.738120, 0, 1.0};
Point(111) = {0.074481, -0.738409, 0, 1.0};
Point(112) = {0.074622, -0.738680, 0, 1.0};
Point(113) = {0.074729, -0.738938, 0, 1.0};
Point(114) = {0.074822, -0.739229, 0, 1.0};
Point(115) = {0.074883, -0.739494, 0, 1.0};
Point(116) = {0.074940, -0.739952, 0, 1.0};
Point(117) = {0.074930, -0.740326, 0, 1.0};
Point(118) = {0.074896, -0.740544, 0, 1.0};
Point(119) = {0.074832, -0.740786, 0, 1.0};
Point(120) = {0.074752, -0.740999, 0, 1.0};
Point(121) = {0.074639, -0.741222, 0, 1.0};
Point(122) = {0.074483, -0.741439, 0, 1.0};
Point(123) = {0.074265, -0.741675, 0, 1.0};
Point(124) = {0.074047, -0.741910, 0, 1.0};
Point(125) = {0.073827, -0.742108, 0, 1.0};
Point(126) = {0.073588, -0.742276, 0, 1.0};
Point(127) = {0.072787, -0.742816, 0, 1.0};
Point(128) = {0.071806, -0.743298, 0, 1.0};
Point(129) = {0.069312, -0.744284, 0, 1.0};
Point(130) = {0.066134, -0.745324, 0, 1.0};
Point(131) = {0.062299, -0.746337, 0, 1.0};
Point(132) = {0.057842, -0.747248, 0, 1.0};
Point(133) = {0.052802, -0.748037, 0, 1.0};
Point(134) = {0.047232, -0.748698, 0, 1.0};
Point(135) = {0.041182, -0.749224, 0, 1.0};
Point(136) = {0.034711, -0.749614, 0, 1.0};
Point(137) = {0.027882, -0.749864, 0, 1.0};
Point(138) = {0.020762, -0.749988, 0, 1.0};
Point(139) = {0.013421, -0.750000, 0, 1.0};
Point(140) = {0.005933, -0.749996, 0, 1.0};
Point(141) = {-0.001630, -0.749948, 0, 1.0};
Point(142) = {-0.009195, -0.749858, 0, 1.0};
Point(143) = {-0.016692, -0.749697, 0, 1.0};
Point(144) = {-0.024045, -0.749481, 0, 1.0};
Point(145) = {-0.031187, -0.749220, 0, 1.0};
Point(146) = {-0.038046, -0.748928, 0, 1.0};
Point(147) = {-0.044557, -0.748611, 0, 1.0};
Point(148) = {-0.050655, -0.748281, 0, 1.0};
Point(149) = {-0.056281, -0.747950, 0, 1.0};
Point(150) = {-0.061384, -0.747624, 0, 1.0};
Point(151) = {-0.065908, -0.747317, 0, 1.0};
Point(152) = {-0.069816, -0.747034, 0, 1.0};
Point(153) = {-0.073066, -0.746789, 0, 1.0};
Point(154) = {-0.074912, -0.746647, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:59};
Spline(3) = {59:77};
Spline(4) = {77,1};

// Lines: second blade (splines 5-8)
Spline(5) = {78:96};
Spline(6) = {96:136};
Spline(7) = {136:154};
Spline(8) = {154,78};

// Outer domain (points 20001-4 and lines)
Point(155) = {-13.50000000, -15.00000000, 0, 1.0};
Point(156) = {-13.50000000, 15.00000000, 0, 1.0};
Point(157) = {13.50000000, 15.00000000, 0, 1.0};
Point(158) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {155, 156};
Line(12) = {156, 157};
Line(13) = {157, 158};
Line(14) = {155, 158};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.075003, 0.734578, 0, 1.0};
Point(2) = {0.073673, 0.734388, 0, 1.0};
Point(3) = {0.071913, 0.734224, 0, 1.0};
Point(4) = {0.069853, 0.733956, 0, 1.0};
Point(5) = {0.067498, 0.733739, 0, 1.0};
Point(6) = {0.064861, 0.733314, 0, 1.0};
Point(7) = {0.061954, 0.732940, 0, 1.0};
Point(8) = {0.058787, 0.732462, 0, 1.0};
Point(9) = {0.055372, 0.732136, 0, 1.0};
Point(10) = {0.051729, 0.731604, 0, 1.0};
Point(11) = {0.047870, 0.731070, 0, 1.0};
Point(12) = {0.043812, 0.730486, 0, 1.0};
Point(13) = {0.039572, 0.729797, 0, 1.0};
Point(14) = {0.035168, 0.729210, 0, 1.0};
Point(15) = {0.030621, 0.728571, 0, 1.0};
Point(16) = {0.025949, 0.727879, 0, 1.0};
Point(17) = {0.021172, 0.727085, 0, 1.0};
Point(18) = {0.016312, 0.726292, 0, 1.0};
Point(19) = {0.011385, 0.725497, 0, 1.0};
Point(20) = {0.006416, 0.724855, 0, 1.0};
Point(21) = {0.001427, 0.724061, 0, 1.0};
Point(22) = {-0.003562, 0.723266, 0, 1.0};
Point(23) = {-0.008529, 0.722471, 0, 1.0};
Point(24) = {-0.013456, 0.721779, 0, 1.0};
Point(25) = {-0.018317, 0.720985, 0, 1.0};
Point(26) = {-0.023094, 0.720192, 0, 1.0};
Point(27) = {-0.027766, 0.719433, 0, 1.0};
Point(28) = {-0.032311, 0.718522, 0, 1.0};
Point(29) = {-0.036713, 0.717660, 0, 1.0};
Point(30) = {-0.040953, 0.716953, 0, 1.0};
Point(31) = {-0.045011, 0.716532, 0, 1.0};
Point(32) = {-0.048873, 0.716366, 0, 1.0};
Point(33) = {-0.052521, 0.716601, 0, 1.0};
Point(34) = {-0.055941, 0.717142, 0, 1.0};
Point(35) = {-0.059117, 0.717982, 0, 1.0};
Point(36) = {-0.062033, 0.719086, 0, 1.0};
Point(37) = {-0.064679, 0.720215, 0, 1.0};
Point(38) = {-0.067046, 0.721813, 0, 1.0};
Point(39) = {-0.069118, 0.723558, 0, 1.0};
Point(40) = {-0.070891, 0.725387, 0, 1.0};
Point(41) = {-0.072352, 0.727259, 0, 1.0};
Point(42) = {-0.073498, 0.729146, 0, 1.0};
Point(43) = {-0.074324, 0.731036, 0, 1.0};
Point(44) = {-0.074827, 0.733080, 0, 1.0};
Point(45) = {-0.074999, 0.734377, 0, 1.0};
Point(46) = {-0.074841, 0.735352, 0, 1.0};
Point(47) = {-0.074363, 0.737236, 0, 1.0};
Point(48) = {-0.073558, 0.738801, 0, 1.0};
Point(49) = {-0.072433, 0.740213, 0, 1.0};
Point(50) = {-0.070992, 0.741596, 0, 1.0};
Point(51) = {-0.069239, 0.742948, 0, 1.0};
Point(52) = {-0.067185, 0.744195, 0, 1.0};
Point(53) = {-0.064837, 0.745453, 0, 1.0};
Point(54) = {-0.062205, 0.746601, 0, 1.0};
Point(55) = {-0.059302, 0.747716, 0, 1.0};
Point(56) = {-0.056138, 0.748739, 0, 1.0};
Point(57) = {-0.052727, 0.749540, 0, 1.0};
Point(58) = {-0.049083, 0.750000, 0, 1.0};
Point(59) = {-0.045220, 0.749881, 0, 1.0};
Point(60) = {-0.041156, 0.749477, 0, 1.0};
Point(61) = {-0.036908, 0.748764, 0, 1.0};
Point(62) = {-0.032495, 0.747990, 0, 1.0};
Point(63) = {-0.027939, 0.747230, 0, 1.0};
Point(64) = {-0.023258, 0.746468, 0, 1.0};
Point(65) = {-0.018471, 0.745683, 0, 1.0};
Point(66) = {-0.013601, 0.744876, 0, 1.0};
Point(67) = {-0.008664, 0.744084, 0, 1.0};
Point(68) = {-0.003686, 0.743221, 0, 1.0};
Point(69) = {0.001312, 0.742489, 0, 1.0};
Point(70) = {0.006310, 0.741859, 0, 1.0};
Point(71) = {0.011288, 0.741074, 0, 1.0};
Point(72) = {0.016223, 0.740546, 0, 1.0};
Point(73) = {0.021093, 0.739863, 0, 1.0};
Point(74) = {0.025878, 0.739333, 0, 1.0};
Point(75) = {0.030557, 0.738904, 0, 1.0};
Point(76) = {0.035111, 0.738373, 0, 1.0};
Point(77) = {0.039521, 0.738101, 0, 1.0};
Point(78) = {0.043767, 0.737691, 0, 1.0};
Point(79) = {0.047831, 0.737327, 0, 1.0};
Point(80) = {0.051695, 0.737011, 0, 1.0};
Point(81) = {0.055344, 0.736742, 0, 1.0};
Point(82) = {0.058761, 0.736511, 0, 1.0};
Point(83) = {0.061933, 0.736311, 0, 1.0};
Point(84) = {0.064843, 0.736318, 0, 1.0};
Point(85) = {0.067482, 0.736284, 0, 1.0};
Point(86) = {0.069839, 0.736247, 0, 1.0};
Point(87) = {0.071901, 0.736159, 0, 1.0};
Point(88) = {0.073662, 0.736118, 0, 1.0};
Point(89) = {0.074994, 0.736081, 0, 1.0};
Point(90) = {-0.075003, -0.734578, 0, 1.0};
Point(91) = {-0.073673, -0.734388, 0, 1.0};
Point(92) = {-0.071913, -0.734224, 0, 1.0};
Point(93) = {-0.069853, -0.733956, 0, 1.0};
Point(94) = {-0.067498, -0.733739, 0, 1.0};
Point(95) = {-0.064861, -0.733314, 0, 1.0};
Point(96) = {-0.061954, -0.732940, 0, 1.0};
Point(97) = {-0.058787, -0.732462, 0, 1.0};
Point(98) = {-0.055372, -0.732136, 0, 1.0};
Point(99) = {-0.051729, -0.731604, 0, 1.0};
Point(100) = {-0.047870, -0.731070, 0, 1.0};
Point(101) = {-0.043812, -0.730486, 0, 1.0};
Point(102) = {-0.039572, -0.729797, 0, 1.0};
Point(103) = {-0.035168, -0.729210, 0, 1.0};
Point(104) = {-0.030621, -0.728571, 0, 1.0};
Point(105) = {-0.025949, -0.727879, 0, 1.0};
Point(106) = {-0.021172, -0.727085, 0, 1.0};
Point(107) = {-0.016312, -0.726292, 0, 1.0};
Point(108) = {-0.011385, -0.725497, 0, 1.0};
Point(109) = {-0.006416, -0.724855, 0, 1.0};
Point(110) = {-0.001427, -0.724061, 0, 1.0};
Point(111) = {0.003562, -0.723266, 0, 1.0};
Point(112) = {0.008529, -0.722471, 0, 1.0};
Point(113) = {0.013456, -0.721779, 0, 1.0};
Point(114) = {0.018317, -0.720985, 0, 1.0};
Point(115) = {0.023094, -0.720192, 0, 1.0};
Point(116) = {0.027766, -0.719433, 0, 1.0};
Point(117) = {0.032311, -0.718522, 0, 1.0};
Point(118) = {0.036713, -0.717660, 0, 1.0};
Point(119) = {0.040953, -0.716953, 0, 1.0};
Point(120) = {0.045011, -0.716532, 0, 1.0};
Point(121) = {0.048873, -0.716366, 0, 1.0};
Point(122) = {0.052521, -0.716601, 0, 1.0};
Point(123) = {0.055941, -0.717142, 0, 1.0};
Point(124) = {0.059117, -0.717982, 0, 1.0};
Point(125) = {0.062033, -0.719086, 0, 1.0};
Point(126) = {0.064679, -0.720215, 0, 1.0};
Point(127) = {0.067046, -0.721813, 0, 1.0};
Point(128) = {0.069118, -0.723558, 0, 1.0};
Point(129) = {0.070891, -0.725387, 0, 1.0};
Point(130) = {0.072352, -0.727259, 0, 1.0};
Point(131) = {0.073498, -0.729146, 0, 1.0};
Point(132) = {0.074324, -0.731036, 0, 1.0};
Point(133) = {0.074827, -0.733080, 0, 1.0};
Point(134) = {0.074999, -0.734377, 0, 1.0};
Point(135) = {0.074841, -0.735352, 0, 1.0};
Point(136) = {0.074363, -0.737236, 0, 1.0};
Point(137) = {0.073558, -0.738801, 0, 1.0};
Point(138) = {0.072433, -0.740213, 0, 1.0};
Point(139) = {0.070992, -0.741596, 0, 1.0};
Point(140) = {0.069239, -0.742948, 0, 1.0};
Point(141) = {0.067185, -0.744195, 0, 1.0};
Point(142) = {0.064837, -0.745453, 0, 1.0};
Point(143) = {0.062205, -0.746601, 0, 1.0};
Point(144) = {0.059302, -0.747716, 0, 1.0};
Point(145) = {0.056138, -0.748739, 0, 1.0};
Point(146) = {0.052727, -0.749540, 0, 1.0};
Point(147) = {0.049083, -0.750000, 0, 1.0};
Point(148) = {0.045220, -0.749881, 0, 1.0};
Point(149) = {0.041156, -0.749477, 0, 1.0};
Point(150) = {0.036908, -0.748764, 0, 1.0};
Point(151) = {0.032495, -0.747990, 0, 1.0};
Point(152) = {0.027939, -0.747230, 0, 1.0};
Point(153) = {0.023258, -0.746468, 0, 1.0};
Point(154) = {0.018471, -0.745683, 0, 1.0};
Point(155) = {0.013601, -0.744876, 0, 1.0};
Point(156) = {0.008664, -0.744084, 0, 1.0};
Point(157) = {0.003686, -0.743221, 0, 1.0};
Point(158) = {-0.001312, -0.742489, 0, 1.0};
Point(159) = {-0.006310, -0.741859, 0, 1.0};
Point(160) = {-0.011288, -0.741074, 0, 1.0};
Point(161) = {-0.016223, -0.740546, 0, 1.0};
Point(162) = {-0.021093, -0.739863, 0, 1.0};
Point(163) = {-0.025878, -0.739333, 0, 1.0};
Point(164) = {-0.030557, -0.738904, 0, 1.0};
Point(165) = {-0.035111, -0.738373, 0, 1.0};
Point(166) = {-0.039521, -0.738101, 0, 1.0};
Point(167) = {-0.043767, -0.737691, 0, 1.0};
Point(168) = {-0.047831, -0.737327, 0, 1.0};
Point(169) = {-0.051695, -0.737011, 0, 1.0};
Point(170) = {-0.055344, -0.736742, 0, 1.0};
Point(171) = {-0.058761, -0.736511, 0, 1.0};
Point(172) = {-0.061933, -0.736311, 0, 1.0};
Point(173) = {-0.064843, -0.736318, 0, 1.0};
Point(174) = {-0.067482, -0.736284, 0, 1.0};
Point(175) = {-0.069839, -0.736247, 0, 1.0};
Point(176) = {-0.071901, -0.736159, 0, 1.0};
Point(177) = {-0.073662, -0.736118, 0, 1.0};
Point(178) = {-0.074994, -0.736081, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:61};
Spline(3) = {61:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:118};
Spline(6) = {118:150};
Spline(7) = {150:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 35 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
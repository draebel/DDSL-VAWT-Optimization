SetFactory("OpenCASCADE");

Point(1) = {0.075002, 0.747998, 0, 1.0};
Point(2) = {0.071617, 0.747155, 0, 1.0};
Point(3) = {0.067176, 0.746094, 0, 1.0};
Point(4) = {0.062091, 0.744930, 0, 1.0};
Point(5) = {0.056443, 0.743690, 0, 1.0};
Point(6) = {0.050321, 0.742409, 0, 1.0};
Point(7) = {0.043811, 0.741145, 0, 1.0};
Point(8) = {0.036976, 0.739971, 0, 1.0};
Point(9) = {0.029848, 0.738930, 0, 1.0};
Point(10) = {0.022463, 0.738043, 0, 1.0};
Point(11) = {0.014871, 0.737313, 0, 1.0};
Point(12) = {0.007130, 0.736724, 0, 1.0};
Point(13) = {-0.000671, 0.736271, 0, 1.0};
Point(14) = {-0.008452, 0.735951, 0, 1.0};
Point(15) = {-0.016132, 0.735765, 0, 1.0};
Point(16) = {-0.023628, 0.735709, 0, 1.0};
Point(17) = {-0.030861, 0.735780, 0, 1.0};
Point(18) = {-0.037759, 0.735972, 0, 1.0};
Point(19) = {-0.044246, 0.736282, 0, 1.0};
Point(20) = {-0.050255, 0.736699, 0, 1.0};
Point(21) = {-0.055722, 0.737216, 0, 1.0};
Point(22) = {-0.060591, 0.737818, 0, 1.0};
Point(23) = {-0.064810, 0.738494, 0, 1.0};
Point(24) = {-0.068329, 0.739232, 0, 1.0};
Point(25) = {-0.071117, 0.740022, 0, 1.0};
Point(26) = {-0.073158, 0.740842, 0, 1.0};
Point(27) = {-0.073902, 0.741256, 0, 1.0};
Point(28) = {-0.074516, 0.741736, 0, 1.0};
Point(29) = {-0.074776, 0.742032, 0, 1.0};
Point(30) = {-0.074884, 0.742233, 0, 1.0};
Point(31) = {-0.074904, 0.742349, 0, 1.0};
Point(32) = {-0.074871, 0.742464, 0, 1.0};
Point(33) = {-0.074738, 0.742657, 0, 1.0};
Point(34) = {-0.074440, 0.742941, 0, 1.0};
Point(35) = {-0.073754, 0.743394, 0, 1.0};
Point(36) = {-0.072975, 0.743768, 0, 1.0};
Point(37) = {-0.070779, 0.744548, 0, 1.0};
Point(38) = {-0.067799, 0.745318, 0, 1.0};
Point(39) = {-0.064055, 0.746066, 0, 1.0};
Point(40) = {-0.059589, 0.746792, 0, 1.0};
Point(41) = {-0.054455, 0.747486, 0, 1.0};
Point(42) = {-0.048719, 0.748136, 0, 1.0};
Point(43) = {-0.042447, 0.748727, 0, 1.0};
Point(44) = {-0.035713, 0.749239, 0, 1.0};
Point(45) = {-0.028594, 0.749644, 0, 1.0};
Point(46) = {-0.021148, 0.749904, 0, 1.0};
Point(47) = {-0.013414, 0.750000, 0, 1.0};
Point(48) = {-0.005434, 0.749933, 0, 1.0};
Point(49) = {0.002761, 0.749733, 0, 1.0};
Point(50) = {0.011106, 0.749470, 0, 1.0};
Point(51) = {0.019492, 0.749195, 0, 1.0};
Point(52) = {0.027805, 0.748950, 0, 1.0};
Point(53) = {0.035928, 0.748763, 0, 1.0};
Point(54) = {0.043739, 0.748654, 0, 1.0};
Point(55) = {0.051120, 0.748637, 0, 1.0};
Point(56) = {0.057952, 0.748716, 0, 1.0};
Point(57) = {0.064126, 0.748883, 0, 1.0};
Point(58) = {0.069536, 0.749125, 0, 1.0};
Point(59) = {0.074094, 0.749412, 0, 1.0};
Point(60) = {0.074927, 0.749475, 0, 1.0};
Point(61) = {-0.075002, -0.747998, 0, 1.0};
Point(62) = {-0.071617, -0.747155, 0, 1.0};
Point(63) = {-0.067176, -0.746094, 0, 1.0};
Point(64) = {-0.062091, -0.744930, 0, 1.0};
Point(65) = {-0.056443, -0.743690, 0, 1.0};
Point(66) = {-0.050321, -0.742409, 0, 1.0};
Point(67) = {-0.043811, -0.741145, 0, 1.0};
Point(68) = {-0.036976, -0.739971, 0, 1.0};
Point(69) = {-0.029848, -0.738930, 0, 1.0};
Point(70) = {-0.022463, -0.738043, 0, 1.0};
Point(71) = {-0.014871, -0.737313, 0, 1.0};
Point(72) = {-0.007130, -0.736724, 0, 1.0};
Point(73) = {0.000671, -0.736271, 0, 1.0};
Point(74) = {0.008452, -0.735951, 0, 1.0};
Point(75) = {0.016132, -0.735765, 0, 1.0};
Point(76) = {0.023628, -0.735709, 0, 1.0};
Point(77) = {0.030861, -0.735780, 0, 1.0};
Point(78) = {0.037759, -0.735972, 0, 1.0};
Point(79) = {0.044246, -0.736282, 0, 1.0};
Point(80) = {0.050255, -0.736699, 0, 1.0};
Point(81) = {0.055722, -0.737216, 0, 1.0};
Point(82) = {0.060591, -0.737818, 0, 1.0};
Point(83) = {0.064810, -0.738494, 0, 1.0};
Point(84) = {0.068329, -0.739232, 0, 1.0};
Point(85) = {0.071117, -0.740022, 0, 1.0};
Point(86) = {0.073158, -0.740842, 0, 1.0};
Point(87) = {0.073902, -0.741256, 0, 1.0};
Point(88) = {0.074516, -0.741736, 0, 1.0};
Point(89) = {0.074776, -0.742032, 0, 1.0};
Point(90) = {0.074884, -0.742233, 0, 1.0};
Point(91) = {0.074904, -0.742349, 0, 1.0};
Point(92) = {0.074871, -0.742464, 0, 1.0};
Point(93) = {0.074738, -0.742657, 0, 1.0};
Point(94) = {0.074440, -0.742941, 0, 1.0};
Point(95) = {0.073754, -0.743394, 0, 1.0};
Point(96) = {0.072975, -0.743768, 0, 1.0};
Point(97) = {0.070779, -0.744548, 0, 1.0};
Point(98) = {0.067799, -0.745318, 0, 1.0};
Point(99) = {0.064055, -0.746066, 0, 1.0};
Point(100) = {0.059589, -0.746792, 0, 1.0};
Point(101) = {0.054455, -0.747486, 0, 1.0};
Point(102) = {0.048719, -0.748136, 0, 1.0};
Point(103) = {0.042447, -0.748727, 0, 1.0};
Point(104) = {0.035713, -0.749239, 0, 1.0};
Point(105) = {0.028594, -0.749644, 0, 1.0};
Point(106) = {0.021148, -0.749904, 0, 1.0};
Point(107) = {0.013414, -0.750000, 0, 1.0};
Point(108) = {0.005434, -0.749933, 0, 1.0};
Point(109) = {-0.002761, -0.749733, 0, 1.0};
Point(110) = {-0.011106, -0.749470, 0, 1.0};
Point(111) = {-0.019492, -0.749195, 0, 1.0};
Point(112) = {-0.027805, -0.748950, 0, 1.0};
Point(113) = {-0.035928, -0.748763, 0, 1.0};
Point(114) = {-0.043739, -0.748654, 0, 1.0};
Point(115) = {-0.051120, -0.748637, 0, 1.0};
Point(116) = {-0.057952, -0.748716, 0, 1.0};
Point(117) = {-0.064126, -0.748883, 0, 1.0};
Point(118) = {-0.069536, -0.749125, 0, 1.0};
Point(119) = {-0.074094, -0.749412, 0, 1.0};
Point(120) = {-0.074927, -0.749475, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
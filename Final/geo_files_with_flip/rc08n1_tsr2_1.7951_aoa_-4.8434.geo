SetFactory("OpenCASCADE");

Point(1) = {0.074780, 0.748501, 0, 1.0};
Point(2) = {0.071197, 0.747946, 0, 1.0};
Point(3) = {0.067284, 0.747310, 0, 1.0};
Point(4) = {0.063378, 0.746644, 0, 1.0};
Point(5) = {0.059485, 0.745950, 0, 1.0};
Point(6) = {0.055601, 0.745229, 0, 1.0};
Point(7) = {0.051729, 0.744476, 0, 1.0};
Point(8) = {0.047870, 0.743693, 0, 1.0};
Point(9) = {0.043990, 0.742876, 0, 1.0};
Point(10) = {0.040098, 0.742036, 0, 1.0};
Point(11) = {0.036219, 0.741189, 0, 1.0};
Point(12) = {0.032326, 0.740348, 0, 1.0};
Point(13) = {0.028418, 0.739523, 0, 1.0};
Point(14) = {0.024510, 0.738724, 0, 1.0};
Point(15) = {0.020598, 0.737954, 0, 1.0};
Point(16) = {0.016685, 0.737217, 0, 1.0};
Point(17) = {0.012772, 0.736517, 0, 1.0};
Point(18) = {0.008852, 0.735852, 0, 1.0};
Point(19) = {0.004926, 0.735224, 0, 1.0};
Point(20) = {0.000998, 0.734638, 0, 1.0};
Point(21) = {-0.002939, 0.734097, 0, 1.0};
Point(22) = {-0.006884, 0.733604, 0, 1.0};
Point(23) = {-0.010833, 0.733156, 0, 1.0};
Point(24) = {-0.014786, 0.732757, 0, 1.0};
Point(25) = {-0.018747, 0.732399, 0, 1.0};
Point(26) = {-0.026681, 0.731816, 0, 1.0};
Point(27) = {-0.034635, 0.731420, 0, 1.0};
Point(28) = {-0.038622, 0.731301, 0, 1.0};
Point(29) = {-0.042628, 0.731246, 0, 1.0};
Point(30) = {-0.046647, 0.731260, 0, 1.0};
Point(31) = {-0.050660, 0.731351, 0, 1.0};
Point(32) = {-0.054675, 0.731525, 0, 1.0};
Point(33) = {-0.058687, 0.731788, 0, 1.0};
Point(34) = {-0.062704, 0.732184, 0, 1.0};
Point(35) = {-0.066804, 0.732800, 0, 1.0};
Point(36) = {-0.070822, 0.733788, 0, 1.0};
Point(37) = {-0.073045, 0.734707, 0, 1.0};
Point(38) = {-0.074118, 0.735429, 0, 1.0};
Point(39) = {-0.074565, 0.735939, 0, 1.0};
Point(40) = {-0.074732, 0.736396, 0, 1.0};
Point(41) = {-0.074134, 0.737214, 0, 1.0};
Point(42) = {-0.073760, 0.737382, 0, 1.0};
Point(43) = {-0.072414, 0.737631, 0, 1.0};
Point(44) = {-0.070632, 0.738105, 0, 1.0};
Point(45) = {-0.066684, 0.738744, 0, 1.0};
Point(46) = {-0.062844, 0.739337, 0, 1.0};
Point(47) = {-0.058938, 0.739931, 0, 1.0};
Point(48) = {-0.055039, 0.740513, 0, 1.0};
Point(49) = {-0.051147, 0.741071, 0, 1.0};
Point(50) = {-0.047258, 0.741610, 0, 1.0};
Point(51) = {-0.043380, 0.742133, 0, 1.0};
Point(52) = {-0.039493, 0.742642, 0, 1.0};
Point(53) = {-0.035591, 0.743141, 0, 1.0};
Point(54) = {-0.027778, 0.744091, 0, 1.0};
Point(55) = {-0.019953, 0.744970, 0, 1.0};
Point(56) = {-0.016038, 0.745379, 0, 1.0};
Point(57) = {-0.012116, 0.745767, 0, 1.0};
Point(58) = {-0.008190, 0.746132, 0, 1.0};
Point(59) = {-0.004266, 0.746469, 0, 1.0};
Point(60) = {-0.000332, 0.746779, 0, 1.0};
Point(61) = {0.003606, 0.747062, 0, 1.0};
Point(62) = {0.007550, 0.747318, 0, 1.0};
Point(63) = {0.011495, 0.747552, 0, 1.0};
Point(64) = {0.015446, 0.747766, 0, 1.0};
Point(65) = {0.019396, 0.747964, 0, 1.0};
Point(66) = {0.023345, 0.748154, 0, 1.0};
Point(67) = {0.027296, 0.748340, 0, 1.0};
Point(68) = {0.031245, 0.748530, 0, 1.0};
Point(69) = {0.035206, 0.748732, 0, 1.0};
Point(70) = {0.039180, 0.748948, 0, 1.0};
Point(71) = {0.043139, 0.749167, 0, 1.0};
Point(72) = {0.047115, 0.749383, 0, 1.0};
Point(73) = {0.051116, 0.749576, 0, 1.0};
Point(74) = {0.055109, 0.749728, 0, 1.0};
Point(75) = {0.059098, 0.749836, 0, 1.0};
Point(76) = {0.063081, 0.749905, 0, 1.0};
Point(77) = {0.067055, 0.749948, 0, 1.0};
Point(78) = {0.071028, 0.749979, 0, 1.0};
Point(79) = {0.074653, 0.750000, 0, 1.0};
Point(80) = {-0.074780, -0.748501, 0, 1.0};
Point(81) = {-0.071197, -0.747946, 0, 1.0};
Point(82) = {-0.067284, -0.747310, 0, 1.0};
Point(83) = {-0.063378, -0.746644, 0, 1.0};
Point(84) = {-0.059485, -0.745950, 0, 1.0};
Point(85) = {-0.055601, -0.745229, 0, 1.0};
Point(86) = {-0.051729, -0.744476, 0, 1.0};
Point(87) = {-0.047870, -0.743693, 0, 1.0};
Point(88) = {-0.043990, -0.742876, 0, 1.0};
Point(89) = {-0.040098, -0.742036, 0, 1.0};
Point(90) = {-0.036219, -0.741189, 0, 1.0};
Point(91) = {-0.032326, -0.740348, 0, 1.0};
Point(92) = {-0.028418, -0.739523, 0, 1.0};
Point(93) = {-0.024510, -0.738724, 0, 1.0};
Point(94) = {-0.020598, -0.737954, 0, 1.0};
Point(95) = {-0.016685, -0.737217, 0, 1.0};
Point(96) = {-0.012772, -0.736517, 0, 1.0};
Point(97) = {-0.008852, -0.735852, 0, 1.0};
Point(98) = {-0.004926, -0.735224, 0, 1.0};
Point(99) = {-0.000998, -0.734638, 0, 1.0};
Point(100) = {0.002939, -0.734097, 0, 1.0};
Point(101) = {0.006884, -0.733604, 0, 1.0};
Point(102) = {0.010833, -0.733156, 0, 1.0};
Point(103) = {0.014786, -0.732757, 0, 1.0};
Point(104) = {0.018747, -0.732399, 0, 1.0};
Point(105) = {0.026681, -0.731816, 0, 1.0};
Point(106) = {0.034635, -0.731420, 0, 1.0};
Point(107) = {0.038622, -0.731301, 0, 1.0};
Point(108) = {0.042628, -0.731246, 0, 1.0};
Point(109) = {0.046647, -0.731260, 0, 1.0};
Point(110) = {0.050660, -0.731351, 0, 1.0};
Point(111) = {0.054675, -0.731525, 0, 1.0};
Point(112) = {0.058687, -0.731788, 0, 1.0};
Point(113) = {0.062704, -0.732184, 0, 1.0};
Point(114) = {0.066804, -0.732800, 0, 1.0};
Point(115) = {0.070822, -0.733788, 0, 1.0};
Point(116) = {0.073045, -0.734707, 0, 1.0};
Point(117) = {0.074118, -0.735429, 0, 1.0};
Point(118) = {0.074565, -0.735939, 0, 1.0};
Point(119) = {0.074732, -0.736396, 0, 1.0};
Point(120) = {0.074134, -0.737214, 0, 1.0};
Point(121) = {0.073760, -0.737382, 0, 1.0};
Point(122) = {0.072414, -0.737631, 0, 1.0};
Point(123) = {0.070632, -0.738105, 0, 1.0};
Point(124) = {0.066684, -0.738744, 0, 1.0};
Point(125) = {0.062844, -0.739337, 0, 1.0};
Point(126) = {0.058938, -0.739931, 0, 1.0};
Point(127) = {0.055039, -0.740513, 0, 1.0};
Point(128) = {0.051147, -0.741071, 0, 1.0};
Point(129) = {0.047258, -0.741610, 0, 1.0};
Point(130) = {0.043380, -0.742133, 0, 1.0};
Point(131) = {0.039493, -0.742642, 0, 1.0};
Point(132) = {0.035591, -0.743141, 0, 1.0};
Point(133) = {0.027778, -0.744091, 0, 1.0};
Point(134) = {0.019953, -0.744970, 0, 1.0};
Point(135) = {0.016038, -0.745379, 0, 1.0};
Point(136) = {0.012116, -0.745767, 0, 1.0};
Point(137) = {0.008190, -0.746132, 0, 1.0};
Point(138) = {0.004266, -0.746469, 0, 1.0};
Point(139) = {0.000332, -0.746779, 0, 1.0};
Point(140) = {-0.003606, -0.747062, 0, 1.0};
Point(141) = {-0.007550, -0.747318, 0, 1.0};
Point(142) = {-0.011495, -0.747552, 0, 1.0};
Point(143) = {-0.015446, -0.747766, 0, 1.0};
Point(144) = {-0.019396, -0.747964, 0, 1.0};
Point(145) = {-0.023345, -0.748154, 0, 1.0};
Point(146) = {-0.027296, -0.748340, 0, 1.0};
Point(147) = {-0.031245, -0.748530, 0, 1.0};
Point(148) = {-0.035206, -0.748732, 0, 1.0};
Point(149) = {-0.039180, -0.748948, 0, 1.0};
Point(150) = {-0.043139, -0.749167, 0, 1.0};
Point(151) = {-0.047115, -0.749383, 0, 1.0};
Point(152) = {-0.051116, -0.749576, 0, 1.0};
Point(153) = {-0.055109, -0.749728, 0, 1.0};
Point(154) = {-0.059098, -0.749836, 0, 1.0};
Point(155) = {-0.063081, -0.749905, 0, 1.0};
Point(156) = {-0.067055, -0.749948, 0, 1.0};
Point(157) = {-0.071028, -0.749979, 0, 1.0};
Point(158) = {-0.074653, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:54};
Spline(3) = {54:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:106};
Spline(6) = {106:133};
Spline(7) = {133:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
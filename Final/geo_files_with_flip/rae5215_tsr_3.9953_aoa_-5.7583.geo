SetFactory("OpenCASCADE");

Point(1) = {0.074791, 0.748500, 0, 1.0};
Point(2) = {0.072821, 0.748002, 0, 1.0};
Point(3) = {0.068930, 0.747031, 0, 1.0};
Point(4) = {0.064422, 0.745936, 0, 1.0};
Point(5) = {0.059336, 0.744707, 0, 1.0};
Point(6) = {0.053724, 0.743372, 0, 1.0};
Point(7) = {0.047636, 0.741966, 0, 1.0};
Point(8) = {0.041130, 0.740513, 0, 1.0};
Point(9) = {0.034264, 0.739064, 0, 1.0};
Point(10) = {0.027101, 0.737676, 0, 1.0};
Point(11) = {0.019706, 0.736405, 0, 1.0};
Point(12) = {0.012151, 0.735242, 0, 1.0};
Point(13) = {0.004509, 0.734195, 0, 1.0};
Point(14) = {-0.003145, 0.733268, 0, 1.0};
Point(15) = {-0.010733, 0.732433, 0, 1.0};
Point(16) = {-0.018183, 0.731707, 0, 1.0};
Point(17) = {-0.025423, 0.731081, 0, 1.0};
Point(18) = {-0.032383, 0.730563, 0, 1.0};
Point(19) = {-0.038993, 0.730140, 0, 1.0};
Point(20) = {-0.045191, 0.729825, 0, 1.0};
Point(21) = {-0.050917, 0.729620, 0, 1.0};
Point(22) = {-0.056118, 0.729532, 0, 1.0};
Point(23) = {-0.060737, 0.729537, 0, 1.0};
Point(24) = {-0.064746, 0.729746, 0, 1.0};
Point(25) = {-0.068114, 0.730255, 0, 1.0};
Point(26) = {-0.069420, 0.730566, 0, 1.0};
Point(27) = {-0.070804, 0.731020, 0, 1.0};
Point(28) = {-0.071883, 0.731481, 0, 1.0};
Point(29) = {-0.072788, 0.732007, 0, 1.0};
Point(30) = {-0.073064, 0.732216, 0, 1.0};
Point(31) = {-0.073324, 0.732446, 0, 1.0};
Point(32) = {-0.073590, 0.732732, 0, 1.0};
Point(33) = {-0.073862, 0.733079, 0, 1.0};
Point(34) = {-0.074066, 0.733398, 0, 1.0};
Point(35) = {-0.074225, 0.733703, 0, 1.0};
Point(36) = {-0.074350, 0.733996, 0, 1.0};
Point(37) = {-0.074461, 0.734317, 0, 1.0};
Point(38) = {-0.074622, 0.735126, 0, 1.0};
Point(39) = {-0.074608, 0.735775, 0, 1.0};
Point(40) = {-0.074551, 0.735994, 0, 1.0};
Point(41) = {-0.074476, 0.736191, 0, 1.0};
Point(42) = {-0.074368, 0.736392, 0, 1.0};
Point(43) = {-0.074216, 0.736589, 0, 1.0};
Point(44) = {-0.074002, 0.736816, 0, 1.0};
Point(45) = {-0.073784, 0.737010, 0, 1.0};
Point(46) = {-0.073563, 0.737173, 0, 1.0};
Point(47) = {-0.073325, 0.737336, 0, 1.0};
Point(48) = {-0.072516, 0.737761, 0, 1.0};
Point(49) = {-0.071525, 0.738168, 0, 1.0};
Point(50) = {-0.070234, 0.738646, 0, 1.0};
Point(51) = {-0.069000, 0.739040, 0, 1.0};
Point(52) = {-0.065771, 0.739905, 0, 1.0};
Point(53) = {-0.061874, 0.740815, 0, 1.0};
Point(54) = {-0.057347, 0.741727, 0, 1.0};
Point(55) = {-0.052231, 0.742650, 0, 1.0};
Point(56) = {-0.046578, 0.743575, 0, 1.0};
Point(57) = {-0.040438, 0.744470, 0, 1.0};
Point(58) = {-0.033872, 0.745330, 0, 1.0};
Point(59) = {-0.026940, 0.746122, 0, 1.0};
Point(60) = {-0.019706, 0.746811, 0, 1.0};
Point(61) = {-0.012241, 0.747380, 0, 1.0};
Point(62) = {-0.004612, 0.747813, 0, 1.0};
Point(63) = {0.003109, 0.748073, 0, 1.0};
Point(64) = {0.010849, 0.748152, 0, 1.0};
Point(65) = {0.018527, 0.748102, 0, 1.0};
Point(66) = {0.026060, 0.747991, 0, 1.0};
Point(67) = {0.033372, 0.747911, 0, 1.0};
Point(68) = {0.040381, 0.747937, 0, 1.0};
Point(69) = {0.047022, 0.748062, 0, 1.0};
Point(70) = {0.053228, 0.748295, 0, 1.0};
Point(71) = {0.058942, 0.748610, 0, 1.0};
Point(72) = {0.064115, 0.748982, 0, 1.0};
Point(73) = {0.068694, 0.749372, 0, 1.0};
Point(74) = {0.072642, 0.749777, 0, 1.0};
Point(75) = {0.074639, 0.750000, 0, 1.0};
Point(76) = {-0.074791, -0.748500, 0, 1.0};
Point(77) = {-0.072821, -0.748002, 0, 1.0};
Point(78) = {-0.068930, -0.747031, 0, 1.0};
Point(79) = {-0.064422, -0.745936, 0, 1.0};
Point(80) = {-0.059336, -0.744707, 0, 1.0};
Point(81) = {-0.053724, -0.743372, 0, 1.0};
Point(82) = {-0.047636, -0.741966, 0, 1.0};
Point(83) = {-0.041130, -0.740513, 0, 1.0};
Point(84) = {-0.034264, -0.739064, 0, 1.0};
Point(85) = {-0.027101, -0.737676, 0, 1.0};
Point(86) = {-0.019706, -0.736405, 0, 1.0};
Point(87) = {-0.012151, -0.735242, 0, 1.0};
Point(88) = {-0.004509, -0.734195, 0, 1.0};
Point(89) = {0.003145, -0.733268, 0, 1.0};
Point(90) = {0.010733, -0.732433, 0, 1.0};
Point(91) = {0.018183, -0.731707, 0, 1.0};
Point(92) = {0.025423, -0.731081, 0, 1.0};
Point(93) = {0.032383, -0.730563, 0, 1.0};
Point(94) = {0.038993, -0.730140, 0, 1.0};
Point(95) = {0.045191, -0.729825, 0, 1.0};
Point(96) = {0.050917, -0.729620, 0, 1.0};
Point(97) = {0.056118, -0.729532, 0, 1.0};
Point(98) = {0.060737, -0.729537, 0, 1.0};
Point(99) = {0.064746, -0.729746, 0, 1.0};
Point(100) = {0.068114, -0.730255, 0, 1.0};
Point(101) = {0.069420, -0.730566, 0, 1.0};
Point(102) = {0.070804, -0.731020, 0, 1.0};
Point(103) = {0.071883, -0.731481, 0, 1.0};
Point(104) = {0.072788, -0.732007, 0, 1.0};
Point(105) = {0.073064, -0.732216, 0, 1.0};
Point(106) = {0.073324, -0.732446, 0, 1.0};
Point(107) = {0.073590, -0.732732, 0, 1.0};
Point(108) = {0.073862, -0.733079, 0, 1.0};
Point(109) = {0.074066, -0.733398, 0, 1.0};
Point(110) = {0.074225, -0.733703, 0, 1.0};
Point(111) = {0.074350, -0.733996, 0, 1.0};
Point(112) = {0.074461, -0.734317, 0, 1.0};
Point(113) = {0.074622, -0.735126, 0, 1.0};
Point(114) = {0.074608, -0.735775, 0, 1.0};
Point(115) = {0.074551, -0.735994, 0, 1.0};
Point(116) = {0.074476, -0.736191, 0, 1.0};
Point(117) = {0.074368, -0.736392, 0, 1.0};
Point(118) = {0.074216, -0.736589, 0, 1.0};
Point(119) = {0.074002, -0.736816, 0, 1.0};
Point(120) = {0.073784, -0.737010, 0, 1.0};
Point(121) = {0.073563, -0.737173, 0, 1.0};
Point(122) = {0.073325, -0.737336, 0, 1.0};
Point(123) = {0.072516, -0.737761, 0, 1.0};
Point(124) = {0.071525, -0.738168, 0, 1.0};
Point(125) = {0.070234, -0.738646, 0, 1.0};
Point(126) = {0.069000, -0.739040, 0, 1.0};
Point(127) = {0.065771, -0.739905, 0, 1.0};
Point(128) = {0.061874, -0.740815, 0, 1.0};
Point(129) = {0.057347, -0.741727, 0, 1.0};
Point(130) = {0.052231, -0.742650, 0, 1.0};
Point(131) = {0.046578, -0.743575, 0, 1.0};
Point(132) = {0.040438, -0.744470, 0, 1.0};
Point(133) = {0.033872, -0.745330, 0, 1.0};
Point(134) = {0.026940, -0.746122, 0, 1.0};
Point(135) = {0.019706, -0.746811, 0, 1.0};
Point(136) = {0.012241, -0.747380, 0, 1.0};
Point(137) = {0.004612, -0.747813, 0, 1.0};
Point(138) = {-0.003109, -0.748073, 0, 1.0};
Point(139) = {-0.010849, -0.748152, 0, 1.0};
Point(140) = {-0.018527, -0.748102, 0, 1.0};
Point(141) = {-0.026060, -0.747991, 0, 1.0};
Point(142) = {-0.033372, -0.747911, 0, 1.0};
Point(143) = {-0.040381, -0.747937, 0, 1.0};
Point(144) = {-0.047022, -0.748062, 0, 1.0};
Point(145) = {-0.053228, -0.748295, 0, 1.0};
Point(146) = {-0.058942, -0.748610, 0, 1.0};
Point(147) = {-0.064115, -0.748982, 0, 1.0};
Point(148) = {-0.068694, -0.749372, 0, 1.0};
Point(149) = {-0.072642, -0.749777, 0, 1.0};
Point(150) = {-0.074639, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:58};
Spline(3) = {58:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:93};
Spline(6) = {93:133};
Spline(7) = {133:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
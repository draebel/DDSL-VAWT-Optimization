SetFactory("OpenCASCADE");

Point(1) = {0.074629, 0.741404, 0, 1.0};
Point(2) = {0.072367, 0.741696, 0, 1.0};
Point(3) = {0.069590, 0.742110, 0, 1.0};
Point(4) = {0.066529, 0.742571, 0, 1.0};
Point(5) = {0.063191, 0.743086, 0, 1.0};
Point(6) = {0.059594, 0.743656, 0, 1.0};
Point(7) = {0.055751, 0.744306, 0, 1.0};
Point(8) = {0.051677, 0.745037, 0, 1.0};
Point(9) = {0.047391, 0.745843, 0, 1.0};
Point(10) = {0.042910, 0.746708, 0, 1.0};
Point(11) = {0.038259, 0.747573, 0, 1.0};
Point(12) = {0.033466, 0.748355, 0, 1.0};
Point(13) = {0.028554, 0.748976, 0, 1.0};
Point(14) = {0.023546, 0.749421, 0, 1.0};
Point(15) = {0.018462, 0.749725, 0, 1.0};
Point(16) = {0.013318, 0.749913, 0, 1.0};
Point(17) = {0.008139, 0.750000, 0, 1.0};
Point(18) = {0.002946, 0.749983, 0, 1.0};
Point(19) = {-0.002237, 0.749845, 0, 1.0};
Point(20) = {-0.007387, 0.749557, 0, 1.0};
Point(21) = {-0.012480, 0.749091, 0, 1.0};
Point(22) = {-0.017494, 0.748473, 0, 1.0};
Point(23) = {-0.022411, 0.747740, 0, 1.0};
Point(24) = {-0.027212, 0.746923, 0, 1.0};
Point(25) = {-0.031876, 0.746026, 0, 1.0};
Point(26) = {-0.036385, 0.745049, 0, 1.0};
Point(27) = {-0.040720, 0.744013, 0, 1.0};
Point(28) = {-0.044859, 0.742924, 0, 1.0};
Point(29) = {-0.048789, 0.741792, 0, 1.0};
Point(30) = {-0.052493, 0.740625, 0, 1.0};
Point(31) = {-0.055954, 0.739432, 0, 1.0};
Point(32) = {-0.059159, 0.738224, 0, 1.0};
Point(33) = {-0.062091, 0.737012, 0, 1.0};
Point(34) = {-0.064743, 0.735805, 0, 1.0};
Point(35) = {-0.067102, 0.734610, 0, 1.0};
Point(36) = {-0.069157, 0.733446, 0, 1.0};
Point(37) = {-0.070902, 0.732330, 0, 1.0};
Point(38) = {-0.072328, 0.731264, 0, 1.0};
Point(39) = {-0.073432, 0.730276, 0, 1.0};
Point(40) = {-0.074208, 0.729362, 0, 1.0};
Point(41) = {-0.074656, 0.728562, 0, 1.0};
Point(42) = {-0.074778, 0.727939, 0, 1.0};
Point(43) = {-0.074573, 0.727480, 0, 1.0};
Point(44) = {-0.074038, 0.727153, 0, 1.0};
Point(45) = {-0.073171, 0.726889, 0, 1.0};
Point(46) = {-0.071973, 0.726659, 0, 1.0};
Point(47) = {-0.070452, 0.726479, 0, 1.0};
Point(48) = {-0.068610, 0.726343, 0, 1.0};
Point(49) = {-0.066458, 0.726245, 0, 1.0};
Point(50) = {-0.064003, 0.726193, 0, 1.0};
Point(51) = {-0.061257, 0.726182, 0, 1.0};
Point(52) = {-0.058233, 0.726209, 0, 1.0};
Point(53) = {-0.054941, 0.726277, 0, 1.0};
Point(54) = {-0.051395, 0.726378, 0, 1.0};
Point(55) = {-0.047612, 0.726517, 0, 1.0};
Point(56) = {-0.043608, 0.726689, 0, 1.0};
Point(57) = {-0.039401, 0.726894, 0, 1.0};
Point(58) = {-0.035005, 0.727133, 0, 1.0};
Point(59) = {-0.030441, 0.727400, 0, 1.0};
Point(60) = {-0.025730, 0.727698, 0, 1.0};
Point(61) = {-0.020891, 0.728025, 0, 1.0};
Point(62) = {-0.015945, 0.728381, 0, 1.0};
Point(63) = {-0.010914, 0.728762, 0, 1.0};
Point(64) = {-0.005816, 0.729166, 0, 1.0};
Point(65) = {-0.000677, 0.729597, 0, 1.0};
Point(66) = {0.004482, 0.730051, 0, 1.0};
Point(67) = {0.009640, 0.730530, 0, 1.0};
Point(68) = {0.014773, 0.731033, 0, 1.0};
Point(69) = {0.019861, 0.731562, 0, 1.0};
Point(70) = {0.024879, 0.732119, 0, 1.0};
Point(71) = {0.029807, 0.732706, 0, 1.0};
Point(72) = {0.034622, 0.733341, 0, 1.0};
Point(73) = {0.039301, 0.734051, 0, 1.0};
Point(74) = {0.043824, 0.734852, 0, 1.0};
Point(75) = {0.048172, 0.735713, 0, 1.0};
Point(76) = {0.052330, 0.736564, 0, 1.0};
Point(77) = {0.056287, 0.737342, 0, 1.0};
Point(78) = {0.060030, 0.738002, 0, 1.0};
Point(79) = {0.063541, 0.738551, 0, 1.0};
Point(80) = {0.066803, 0.739010, 0, 1.0};
Point(81) = {0.069800, 0.739389, 0, 1.0};
Point(82) = {0.072522, 0.739691, 0, 1.0};
Point(83) = {0.074745, 0.739890, 0, 1.0};
Point(84) = {-0.074629, -0.741404, 0, 1.0};
Point(85) = {-0.072367, -0.741696, 0, 1.0};
Point(86) = {-0.069590, -0.742110, 0, 1.0};
Point(87) = {-0.066529, -0.742571, 0, 1.0};
Point(88) = {-0.063191, -0.743086, 0, 1.0};
Point(89) = {-0.059594, -0.743656, 0, 1.0};
Point(90) = {-0.055751, -0.744306, 0, 1.0};
Point(91) = {-0.051677, -0.745037, 0, 1.0};
Point(92) = {-0.047391, -0.745843, 0, 1.0};
Point(93) = {-0.042910, -0.746708, 0, 1.0};
Point(94) = {-0.038259, -0.747573, 0, 1.0};
Point(95) = {-0.033466, -0.748355, 0, 1.0};
Point(96) = {-0.028554, -0.748976, 0, 1.0};
Point(97) = {-0.023546, -0.749421, 0, 1.0};
Point(98) = {-0.018462, -0.749725, 0, 1.0};
Point(99) = {-0.013318, -0.749913, 0, 1.0};
Point(100) = {-0.008139, -0.750000, 0, 1.0};
Point(101) = {-0.002946, -0.749983, 0, 1.0};
Point(102) = {0.002237, -0.749845, 0, 1.0};
Point(103) = {0.007387, -0.749557, 0, 1.0};
Point(104) = {0.012480, -0.749091, 0, 1.0};
Point(105) = {0.017494, -0.748473, 0, 1.0};
Point(106) = {0.022411, -0.747740, 0, 1.0};
Point(107) = {0.027212, -0.746923, 0, 1.0};
Point(108) = {0.031876, -0.746026, 0, 1.0};
Point(109) = {0.036385, -0.745049, 0, 1.0};
Point(110) = {0.040720, -0.744013, 0, 1.0};
Point(111) = {0.044859, -0.742924, 0, 1.0};
Point(112) = {0.048789, -0.741792, 0, 1.0};
Point(113) = {0.052493, -0.740625, 0, 1.0};
Point(114) = {0.055954, -0.739432, 0, 1.0};
Point(115) = {0.059159, -0.738224, 0, 1.0};
Point(116) = {0.062091, -0.737012, 0, 1.0};
Point(117) = {0.064743, -0.735805, 0, 1.0};
Point(118) = {0.067102, -0.734610, 0, 1.0};
Point(119) = {0.069157, -0.733446, 0, 1.0};
Point(120) = {0.070902, -0.732330, 0, 1.0};
Point(121) = {0.072328, -0.731264, 0, 1.0};
Point(122) = {0.073432, -0.730276, 0, 1.0};
Point(123) = {0.074208, -0.729362, 0, 1.0};
Point(124) = {0.074656, -0.728562, 0, 1.0};
Point(125) = {0.074778, -0.727939, 0, 1.0};
Point(126) = {0.074573, -0.727480, 0, 1.0};
Point(127) = {0.074038, -0.727153, 0, 1.0};
Point(128) = {0.073171, -0.726889, 0, 1.0};
Point(129) = {0.071973, -0.726659, 0, 1.0};
Point(130) = {0.070452, -0.726479, 0, 1.0};
Point(131) = {0.068610, -0.726343, 0, 1.0};
Point(132) = {0.066458, -0.726245, 0, 1.0};
Point(133) = {0.064003, -0.726193, 0, 1.0};
Point(134) = {0.061257, -0.726182, 0, 1.0};
Point(135) = {0.058233, -0.726209, 0, 1.0};
Point(136) = {0.054941, -0.726277, 0, 1.0};
Point(137) = {0.051395, -0.726378, 0, 1.0};
Point(138) = {0.047612, -0.726517, 0, 1.0};
Point(139) = {0.043608, -0.726689, 0, 1.0};
Point(140) = {0.039401, -0.726894, 0, 1.0};
Point(141) = {0.035005, -0.727133, 0, 1.0};
Point(142) = {0.030441, -0.727400, 0, 1.0};
Point(143) = {0.025730, -0.727698, 0, 1.0};
Point(144) = {0.020891, -0.728025, 0, 1.0};
Point(145) = {0.015945, -0.728381, 0, 1.0};
Point(146) = {0.010914, -0.728762, 0, 1.0};
Point(147) = {0.005816, -0.729166, 0, 1.0};
Point(148) = {0.000677, -0.729597, 0, 1.0};
Point(149) = {-0.004482, -0.730051, 0, 1.0};
Point(150) = {-0.009640, -0.730530, 0, 1.0};
Point(151) = {-0.014773, -0.731033, 0, 1.0};
Point(152) = {-0.019861, -0.731562, 0, 1.0};
Point(153) = {-0.024879, -0.732119, 0, 1.0};
Point(154) = {-0.029807, -0.732706, 0, 1.0};
Point(155) = {-0.034622, -0.733341, 0, 1.0};
Point(156) = {-0.039301, -0.734051, 0, 1.0};
Point(157) = {-0.043824, -0.734852, 0, 1.0};
Point(158) = {-0.048172, -0.735713, 0, 1.0};
Point(159) = {-0.052330, -0.736564, 0, 1.0};
Point(160) = {-0.056287, -0.737342, 0, 1.0};
Point(161) = {-0.060030, -0.738002, 0, 1.0};
Point(162) = {-0.063541, -0.738551, 0, 1.0};
Point(163) = {-0.066803, -0.739010, 0, 1.0};
Point(164) = {-0.069800, -0.739389, 0, 1.0};
Point(165) = {-0.072522, -0.739691, 0, 1.0};
Point(166) = {-0.074745, -0.739890, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:108};
Spline(6) = {108:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
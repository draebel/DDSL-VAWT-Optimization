SetFactory("OpenCASCADE");

Point(1) = {0.074919, 0.741358, 0, 1.0};
Point(2) = {0.072398, 0.740485, 0, 1.0};
Point(3) = {0.068681, 0.739170, 0, 1.0};
Point(4) = {0.064965, 0.737833, 0, 1.0};
Point(5) = {0.061250, 0.736477, 0, 1.0};
Point(6) = {0.057535, 0.735111, 0, 1.0};
Point(7) = {0.053820, 0.733745, 0, 1.0};
Point(8) = {0.050105, 0.732389, 0, 1.0};
Point(9) = {0.046389, 0.731050, 0, 1.0};
Point(10) = {0.042671, 0.729738, 0, 1.0};
Point(11) = {0.038952, 0.728461, 0, 1.0};
Point(12) = {0.035230, 0.727230, 0, 1.0};
Point(13) = {0.031506, 0.726054, 0, 1.0};
Point(14) = {0.027778, 0.724944, 0, 1.0};
Point(15) = {0.024046, 0.723911, 0, 1.0};
Point(16) = {0.020309, 0.722960, 0, 1.0};
Point(17) = {0.016569, 0.722100, 0, 1.0};
Point(18) = {0.012823, 0.721334, 0, 1.0};
Point(19) = {0.009072, 0.720663, 0, 1.0};
Point(20) = {0.001557, 0.719584, 0, 1.0};
Point(21) = {-0.005974, 0.718811, 0, 1.0};
Point(22) = {-0.013519, 0.718307, 0, 1.0};
Point(23) = {-0.021077, 0.718059, 0, 1.0};
Point(24) = {-0.028649, 0.718076, 0, 1.0};
Point(25) = {-0.036236, 0.718374, 0, 1.0};
Point(26) = {-0.043839, 0.719001, 0, 1.0};
Point(27) = {-0.047649, 0.719463, 0, 1.0};
Point(28) = {-0.051465, 0.720044, 0, 1.0};
Point(29) = {-0.055287, 0.720762, 0, 1.0};
Point(30) = {-0.059119, 0.721659, 0, 1.0};
Point(31) = {-0.062965, 0.722812, 0, 1.0};
Point(32) = {-0.066831, 0.724376, 0, 1.0};
Point(33) = {-0.068778, 0.725415, 0, 1.0};
Point(34) = {-0.070739, 0.726738, 0, 1.0};
Point(35) = {-0.072730, 0.728623, 0, 1.0};
Point(36) = {-0.073958, 0.730410, 0, 1.0};
Point(37) = {-0.074475, 0.731620, 0, 1.0};
Point(38) = {-0.074899, 0.733960, 0, 1.0};
Point(39) = {-0.074681, 0.735593, 0, 1.0};
Point(40) = {-0.074283, 0.736680, 0, 1.0};
Point(41) = {-0.073219, 0.738065, 0, 1.0};
Point(42) = {-0.071400, 0.739475, 0, 1.0};
Point(43) = {-0.069560, 0.740501, 0, 1.0};
Point(44) = {-0.067713, 0.741374, 0, 1.0};
Point(45) = {-0.064001, 0.742797, 0, 1.0};
Point(46) = {-0.060275, 0.743951, 0, 1.0};
Point(47) = {-0.056540, 0.744924, 0, 1.0};
Point(48) = {-0.052798, 0.745763, 0, 1.0};
Point(49) = {-0.049051, 0.746495, 0, 1.0};
Point(50) = {-0.045298, 0.747139, 0, 1.0};
Point(51) = {-0.037782, 0.748195, 0, 1.0};
Point(52) = {-0.030251, 0.748966, 0, 1.0};
Point(53) = {-0.022708, 0.749513, 0, 1.0};
Point(54) = {-0.015155, 0.749861, 0, 1.0};
Point(55) = {-0.007591, 0.750000, 0, 1.0};
Point(56) = {-0.000016, 0.749911, 0, 1.0};
Point(57) = {0.007576, 0.749521, 0, 1.0};
Point(58) = {0.011378, 0.749191, 0, 1.0};
Point(59) = {0.015185, 0.748778, 0, 1.0};
Point(60) = {0.018996, 0.748288, 0, 1.0};
Point(61) = {0.022810, 0.747736, 0, 1.0};
Point(62) = {0.026627, 0.747138, 0, 1.0};
Point(63) = {0.030445, 0.746506, 0, 1.0};
Point(64) = {0.034265, 0.745854, 0, 1.0};
Point(65) = {0.038084, 0.745199, 0, 1.0};
Point(66) = {0.041903, 0.744550, 0, 1.0};
Point(67) = {0.045721, 0.743933, 0, 1.0};
Point(68) = {0.049536, 0.743370, 0, 1.0};
Point(69) = {0.053346, 0.742881, 0, 1.0};
Point(70) = {0.057152, 0.742491, 0, 1.0};
Point(71) = {0.060952, 0.742223, 0, 1.0};
Point(72) = {0.064743, 0.742106, 0, 1.0};
Point(73) = {0.068525, 0.742177, 0, 1.0};
Point(74) = {0.072295, 0.742484, 0, 1.0};
Point(75) = {0.074840, 0.742872, 0, 1.0};
Point(76) = {-0.074919, -0.741358, 0, 1.0};
Point(77) = {-0.072398, -0.740485, 0, 1.0};
Point(78) = {-0.068681, -0.739170, 0, 1.0};
Point(79) = {-0.064965, -0.737833, 0, 1.0};
Point(80) = {-0.061250, -0.736477, 0, 1.0};
Point(81) = {-0.057535, -0.735111, 0, 1.0};
Point(82) = {-0.053820, -0.733745, 0, 1.0};
Point(83) = {-0.050105, -0.732389, 0, 1.0};
Point(84) = {-0.046389, -0.731050, 0, 1.0};
Point(85) = {-0.042671, -0.729738, 0, 1.0};
Point(86) = {-0.038952, -0.728461, 0, 1.0};
Point(87) = {-0.035230, -0.727230, 0, 1.0};
Point(88) = {-0.031506, -0.726054, 0, 1.0};
Point(89) = {-0.027778, -0.724944, 0, 1.0};
Point(90) = {-0.024046, -0.723911, 0, 1.0};
Point(91) = {-0.020309, -0.722960, 0, 1.0};
Point(92) = {-0.016569, -0.722100, 0, 1.0};
Point(93) = {-0.012823, -0.721334, 0, 1.0};
Point(94) = {-0.009072, -0.720663, 0, 1.0};
Point(95) = {-0.001557, -0.719584, 0, 1.0};
Point(96) = {0.005974, -0.718811, 0, 1.0};
Point(97) = {0.013519, -0.718307, 0, 1.0};
Point(98) = {0.021077, -0.718059, 0, 1.0};
Point(99) = {0.028649, -0.718076, 0, 1.0};
Point(100) = {0.036236, -0.718374, 0, 1.0};
Point(101) = {0.043839, -0.719001, 0, 1.0};
Point(102) = {0.047649, -0.719463, 0, 1.0};
Point(103) = {0.051465, -0.720044, 0, 1.0};
Point(104) = {0.055287, -0.720762, 0, 1.0};
Point(105) = {0.059119, -0.721659, 0, 1.0};
Point(106) = {0.062965, -0.722812, 0, 1.0};
Point(107) = {0.066831, -0.724376, 0, 1.0};
Point(108) = {0.068778, -0.725415, 0, 1.0};
Point(109) = {0.070739, -0.726738, 0, 1.0};
Point(110) = {0.072730, -0.728623, 0, 1.0};
Point(111) = {0.073958, -0.730410, 0, 1.0};
Point(112) = {0.074475, -0.731620, 0, 1.0};
Point(113) = {0.074899, -0.733960, 0, 1.0};
Point(114) = {0.074681, -0.735593, 0, 1.0};
Point(115) = {0.074283, -0.736680, 0, 1.0};
Point(116) = {0.073219, -0.738065, 0, 1.0};
Point(117) = {0.071400, -0.739475, 0, 1.0};
Point(118) = {0.069560, -0.740501, 0, 1.0};
Point(119) = {0.067713, -0.741374, 0, 1.0};
Point(120) = {0.064001, -0.742797, 0, 1.0};
Point(121) = {0.060275, -0.743951, 0, 1.0};
Point(122) = {0.056540, -0.744924, 0, 1.0};
Point(123) = {0.052798, -0.745763, 0, 1.0};
Point(124) = {0.049051, -0.746495, 0, 1.0};
Point(125) = {0.045298, -0.747139, 0, 1.0};
Point(126) = {0.037782, -0.748195, 0, 1.0};
Point(127) = {0.030251, -0.748966, 0, 1.0};
Point(128) = {0.022708, -0.749513, 0, 1.0};
Point(129) = {0.015155, -0.749861, 0, 1.0};
Point(130) = {0.007591, -0.750000, 0, 1.0};
Point(131) = {0.000016, -0.749911, 0, 1.0};
Point(132) = {-0.007576, -0.749521, 0, 1.0};
Point(133) = {-0.011378, -0.749191, 0, 1.0};
Point(134) = {-0.015185, -0.748778, 0, 1.0};
Point(135) = {-0.018996, -0.748288, 0, 1.0};
Point(136) = {-0.022810, -0.747736, 0, 1.0};
Point(137) = {-0.026627, -0.747138, 0, 1.0};
Point(138) = {-0.030445, -0.746506, 0, 1.0};
Point(139) = {-0.034265, -0.745854, 0, 1.0};
Point(140) = {-0.038084, -0.745199, 0, 1.0};
Point(141) = {-0.041903, -0.744550, 0, 1.0};
Point(142) = {-0.045721, -0.743933, 0, 1.0};
Point(143) = {-0.049536, -0.743370, 0, 1.0};
Point(144) = {-0.053346, -0.742881, 0, 1.0};
Point(145) = {-0.057152, -0.742491, 0, 1.0};
Point(146) = {-0.060952, -0.742223, 0, 1.0};
Point(147) = {-0.064743, -0.742106, 0, 1.0};
Point(148) = {-0.068525, -0.742177, 0, 1.0};
Point(149) = {-0.072295, -0.742484, 0, 1.0};
Point(150) = {-0.074840, -0.742872, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:51};
Spline(3) = {51:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:100};
Spline(6) = {100:126};
Spline(7) = {126:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
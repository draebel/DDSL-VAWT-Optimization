SetFactory("OpenCASCADE");

Point(1) = {0.074871, 0.748504, 0, 1.0};
Point(2) = {0.074560, 0.748440, 0, 1.0};
Point(3) = {0.073669, 0.748216, 0, 1.0};
Point(4) = {0.072265, 0.747818, 0, 1.0};
Point(5) = {0.070402, 0.747270, 0, 1.0};
Point(6) = {0.068095, 0.746603, 0, 1.0};
Point(7) = {0.065355, 0.745819, 0, 1.0};
Point(8) = {0.062214, 0.744912, 0, 1.0};
Point(9) = {0.058710, 0.743892, 0, 1.0};
Point(10) = {0.054880, 0.742773, 0, 1.0};
Point(11) = {0.050765, 0.741570, 0, 1.0};
Point(12) = {0.046403, 0.740304, 0, 1.0};
Point(13) = {0.041836, 0.739001, 0, 1.0};
Point(14) = {0.037094, 0.737702, 0, 1.0};
Point(15) = {0.032193, 0.736432, 0, 1.0};
Point(16) = {0.027161, 0.735201, 0, 1.0};
Point(17) = {0.022022, 0.734041, 0, 1.0};
Point(18) = {0.016789, 0.732965, 0, 1.0};
Point(19) = {0.011498, 0.731983, 0, 1.0};
Point(20) = {0.006162, 0.731115, 0, 1.0};
Point(21) = {0.000795, 0.730359, 0, 1.0};
Point(22) = {-0.004569, 0.729726, 0, 1.0};
Point(23) = {-0.009911, 0.729222, 0, 1.0};
Point(24) = {-0.015209, 0.728836, 0, 1.0};
Point(25) = {-0.020434, 0.728577, 0, 1.0};
Point(26) = {-0.025564, 0.728439, 0, 1.0};
Point(27) = {-0.030570, 0.728414, 0, 1.0};
Point(28) = {-0.035426, 0.728501, 0, 1.0};
Point(29) = {-0.040102, 0.728694, 0, 1.0};
Point(30) = {-0.044572, 0.728988, 0, 1.0};
Point(31) = {-0.048812, 0.729378, 0, 1.0};
Point(32) = {-0.052797, 0.729859, 0, 1.0};
Point(33) = {-0.056505, 0.730424, 0, 1.0};
Point(34) = {-0.059920, 0.731066, 0, 1.0};
Point(35) = {-0.063017, 0.731774, 0, 1.0};
Point(36) = {-0.065783, 0.732542, 0, 1.0};
Point(37) = {-0.068207, 0.733355, 0, 1.0};
Point(38) = {-0.070270, 0.734202, 0, 1.0};
Point(39) = {-0.071964, 0.735070, 0, 1.0};
Point(40) = {-0.073270, 0.735935, 0, 1.0};
Point(41) = {-0.074181, 0.736801, 0, 1.0};
Point(42) = {-0.074712, 0.737642, 0, 1.0};
Point(43) = {-0.074790, 0.738363, 0, 1.0};
Point(44) = {-0.074355, 0.739049, 0, 1.0};
Point(45) = {-0.073477, 0.739781, 0, 1.0};
Point(46) = {-0.072191, 0.740467, 0, 1.0};
Point(47) = {-0.070446, 0.741084, 0, 1.0};
Point(48) = {-0.068228, 0.741660, 0, 1.0};
Point(49) = {-0.065563, 0.742220, 0, 1.0};
Point(50) = {-0.062472, 0.742764, 0, 1.0};
Point(51) = {-0.058980, 0.743293, 0, 1.0};
Point(52) = {-0.055109, 0.743807, 0, 1.0};
Point(53) = {-0.050887, 0.744307, 0, 1.0};
Point(54) = {-0.046348, 0.744792, 0, 1.0};
Point(55) = {-0.041522, 0.745258, 0, 1.0};
Point(56) = {-0.036453, 0.745697, 0, 1.0};
Point(57) = {-0.031180, 0.746091, 0, 1.0};
Point(58) = {-0.025719, 0.746395, 0, 1.0};
Point(59) = {-0.020047, 0.746610, 0, 1.0};
Point(60) = {-0.014158, 0.746785, 0, 1.0};
Point(61) = {-0.008117, 0.746984, 0, 1.0};
Point(62) = {-0.002011, 0.747212, 0, 1.0};
Point(63) = {0.004108, 0.747440, 0, 1.0};
Point(64) = {0.010207, 0.747664, 0, 1.0};
Point(65) = {0.016245, 0.747881, 0, 1.0};
Point(66) = {0.022182, 0.748094, 0, 1.0};
Point(67) = {0.027978, 0.748303, 0, 1.0};
Point(68) = {0.033591, 0.748508, 0, 1.0};
Point(69) = {0.038982, 0.748706, 0, 1.0};
Point(70) = {0.044111, 0.748895, 0, 1.0};
Point(71) = {0.048939, 0.749064, 0, 1.0};
Point(72) = {0.053449, 0.749213, 0, 1.0};
Point(73) = {0.057616, 0.749349, 0, 1.0};
Point(74) = {0.061399, 0.749486, 0, 1.0};
Point(75) = {0.064760, 0.749617, 0, 1.0};
Point(76) = {0.067665, 0.749736, 0, 1.0};
Point(77) = {0.070090, 0.749820, 0, 1.0};
Point(78) = {0.072045, 0.749866, 0, 1.0};
Point(79) = {0.073515, 0.749908, 0, 1.0};
Point(80) = {0.074441, 0.749966, 0, 1.0};
Point(81) = {0.074759, 0.750000, 0, 1.0};
Point(82) = {-0.074871, -0.748504, 0, 1.0};
Point(83) = {-0.074560, -0.748440, 0, 1.0};
Point(84) = {-0.073669, -0.748216, 0, 1.0};
Point(85) = {-0.072265, -0.747818, 0, 1.0};
Point(86) = {-0.070402, -0.747270, 0, 1.0};
Point(87) = {-0.068095, -0.746603, 0, 1.0};
Point(88) = {-0.065355, -0.745819, 0, 1.0};
Point(89) = {-0.062214, -0.744912, 0, 1.0};
Point(90) = {-0.058710, -0.743892, 0, 1.0};
Point(91) = {-0.054880, -0.742773, 0, 1.0};
Point(92) = {-0.050765, -0.741570, 0, 1.0};
Point(93) = {-0.046403, -0.740304, 0, 1.0};
Point(94) = {-0.041836, -0.739001, 0, 1.0};
Point(95) = {-0.037094, -0.737702, 0, 1.0};
Point(96) = {-0.032193, -0.736432, 0, 1.0};
Point(97) = {-0.027161, -0.735201, 0, 1.0};
Point(98) = {-0.022022, -0.734041, 0, 1.0};
Point(99) = {-0.016789, -0.732965, 0, 1.0};
Point(100) = {-0.011498, -0.731983, 0, 1.0};
Point(101) = {-0.006162, -0.731115, 0, 1.0};
Point(102) = {-0.000795, -0.730359, 0, 1.0};
Point(103) = {0.004569, -0.729726, 0, 1.0};
Point(104) = {0.009911, -0.729222, 0, 1.0};
Point(105) = {0.015209, -0.728836, 0, 1.0};
Point(106) = {0.020434, -0.728577, 0, 1.0};
Point(107) = {0.025564, -0.728439, 0, 1.0};
Point(108) = {0.030570, -0.728414, 0, 1.0};
Point(109) = {0.035426, -0.728501, 0, 1.0};
Point(110) = {0.040102, -0.728694, 0, 1.0};
Point(111) = {0.044572, -0.728988, 0, 1.0};
Point(112) = {0.048812, -0.729378, 0, 1.0};
Point(113) = {0.052797, -0.729859, 0, 1.0};
Point(114) = {0.056505, -0.730424, 0, 1.0};
Point(115) = {0.059920, -0.731066, 0, 1.0};
Point(116) = {0.063017, -0.731774, 0, 1.0};
Point(117) = {0.065783, -0.732542, 0, 1.0};
Point(118) = {0.068207, -0.733355, 0, 1.0};
Point(119) = {0.070270, -0.734202, 0, 1.0};
Point(120) = {0.071964, -0.735070, 0, 1.0};
Point(121) = {0.073270, -0.735935, 0, 1.0};
Point(122) = {0.074181, -0.736801, 0, 1.0};
Point(123) = {0.074712, -0.737642, 0, 1.0};
Point(124) = {0.074790, -0.738363, 0, 1.0};
Point(125) = {0.074355, -0.739049, 0, 1.0};
Point(126) = {0.073477, -0.739781, 0, 1.0};
Point(127) = {0.072191, -0.740467, 0, 1.0};
Point(128) = {0.070446, -0.741084, 0, 1.0};
Point(129) = {0.068228, -0.741660, 0, 1.0};
Point(130) = {0.065563, -0.742220, 0, 1.0};
Point(131) = {0.062472, -0.742764, 0, 1.0};
Point(132) = {0.058980, -0.743293, 0, 1.0};
Point(133) = {0.055109, -0.743807, 0, 1.0};
Point(134) = {0.050887, -0.744307, 0, 1.0};
Point(135) = {0.046348, -0.744792, 0, 1.0};
Point(136) = {0.041522, -0.745258, 0, 1.0};
Point(137) = {0.036453, -0.745697, 0, 1.0};
Point(138) = {0.031180, -0.746091, 0, 1.0};
Point(139) = {0.025719, -0.746395, 0, 1.0};
Point(140) = {0.020047, -0.746610, 0, 1.0};
Point(141) = {0.014158, -0.746785, 0, 1.0};
Point(142) = {0.008117, -0.746984, 0, 1.0};
Point(143) = {0.002011, -0.747212, 0, 1.0};
Point(144) = {-0.004108, -0.747440, 0, 1.0};
Point(145) = {-0.010207, -0.747664, 0, 1.0};
Point(146) = {-0.016245, -0.747881, 0, 1.0};
Point(147) = {-0.022182, -0.748094, 0, 1.0};
Point(148) = {-0.027978, -0.748303, 0, 1.0};
Point(149) = {-0.033591, -0.748508, 0, 1.0};
Point(150) = {-0.038982, -0.748706, 0, 1.0};
Point(151) = {-0.044111, -0.748895, 0, 1.0};
Point(152) = {-0.048939, -0.749064, 0, 1.0};
Point(153) = {-0.053449, -0.749213, 0, 1.0};
Point(154) = {-0.057616, -0.749349, 0, 1.0};
Point(155) = {-0.061399, -0.749486, 0, 1.0};
Point(156) = {-0.064760, -0.749617, 0, 1.0};
Point(157) = {-0.067665, -0.749736, 0, 1.0};
Point(158) = {-0.070090, -0.749820, 0, 1.0};
Point(159) = {-0.072045, -0.749866, 0, 1.0};
Point(160) = {-0.073515, -0.749908, 0, 1.0};
Point(161) = {-0.074441, -0.749966, 0, 1.0};
Point(162) = {-0.074759, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.075002, 0.733442, 0, 1.0};
Point(2) = {0.073189, 0.733931, 0, 1.0};
Point(3) = {0.068949, 0.735125, 0, 1.0};
Point(4) = {0.064032, 0.736402, 0, 1.0};
Point(5) = {0.058429, 0.737755, 0, 1.0};
Point(6) = {0.052225, 0.739215, 0, 1.0};
Point(7) = {0.045536, 0.740771, 0, 1.0};
Point(8) = {0.038477, 0.742390, 0, 1.0};
Point(9) = {0.031168, 0.744029, 0, 1.0};
Point(10) = {0.023722, 0.745632, 0, 1.0};
Point(11) = {0.016253, 0.747129, 0, 1.0};
Point(12) = {0.008862, 0.748438, 0, 1.0};
Point(13) = {0.001648, 0.749456, 0, 1.0};
Point(14) = {-0.005359, 0.749979, 0, 1.0};
Point(15) = {-0.012377, 0.750000, 0, 1.0};
Point(16) = {-0.019366, 0.749674, 0, 1.0};
Point(17) = {-0.026242, 0.749060, 0, 1.0};
Point(18) = {-0.032929, 0.748196, 0, 1.0};
Point(19) = {-0.039350, 0.747117, 0, 1.0};
Point(20) = {-0.045436, 0.745856, 0, 1.0};
Point(21) = {-0.051115, 0.744446, 0, 1.0};
Point(22) = {-0.056326, 0.742920, 0, 1.0};
Point(23) = {-0.061002, 0.741314, 0, 1.0};
Point(24) = {-0.065091, 0.739663, 0, 1.0};
Point(25) = {-0.068530, 0.738004, 0, 1.0};
Point(26) = {-0.071267, 0.736360, 0, 1.0};
Point(27) = {-0.073281, 0.734764, 0, 1.0};
Point(28) = {-0.074527, 0.733271, 0, 1.0};
Point(29) = {-0.074964, 0.732218, 0, 1.0};
Point(30) = {-0.074999, 0.731954, 0, 1.0};
Point(31) = {-0.075000, 0.731922, 0, 1.0};
Point(32) = {-0.074973, 0.731658, 0, 1.0};
Point(33) = {-0.074853, 0.731413, 0, 1.0};
Point(34) = {-0.074655, 0.731159, 0, 1.0};
Point(35) = {-0.074426, 0.730929, 0, 1.0};
Point(36) = {-0.072796, 0.729872, 0, 1.0};
Point(37) = {-0.070224, 0.728785, 0, 1.0};
Point(38) = {-0.066767, 0.727674, 0, 1.0};
Point(39) = {-0.062438, 0.726499, 0, 1.0};
Point(40) = {-0.057348, 0.725150, 0, 1.0};
Point(41) = {-0.051733, 0.723665, 0, 1.0};
Point(42) = {-0.045683, 0.722110, 0, 1.0};
Point(43) = {-0.039338, 0.720542, 0, 1.0};
Point(44) = {-0.032837, 0.718952, 0, 1.0};
Point(45) = {-0.026527, 0.717580, 0, 1.0};
Point(46) = {-0.020347, 0.716893, 0, 1.0};
Point(47) = {-0.013878, 0.716929, 0, 1.0};
Point(48) = {-0.007104, 0.717525, 0, 1.0};
Point(49) = {0.000029, 0.718600, 0, 1.0};
Point(50) = {0.007482, 0.720006, 0, 1.0};
Point(51) = {0.015183, 0.721635, 0, 1.0};
Point(52) = {0.023044, 0.723386, 0, 1.0};
Point(53) = {0.030963, 0.725157, 0, 1.0};
Point(54) = {0.038820, 0.726853, 0, 1.0};
Point(55) = {0.046476, 0.728388, 0, 1.0};
Point(56) = {0.053779, 0.729691, 0, 1.0};
Point(57) = {0.060566, 0.730711, 0, 1.0};
Point(58) = {0.066670, 0.731425, 0, 1.0};
Point(59) = {0.071927, 0.731837, 0, 1.0};
Point(60) = {0.075000, 0.731963, 0, 1.0};
Point(61) = {-0.075002, -0.733442, 0, 1.0};
Point(62) = {-0.073189, -0.733931, 0, 1.0};
Point(63) = {-0.068949, -0.735125, 0, 1.0};
Point(64) = {-0.064032, -0.736402, 0, 1.0};
Point(65) = {-0.058429, -0.737755, 0, 1.0};
Point(66) = {-0.052225, -0.739215, 0, 1.0};
Point(67) = {-0.045536, -0.740771, 0, 1.0};
Point(68) = {-0.038477, -0.742390, 0, 1.0};
Point(69) = {-0.031168, -0.744029, 0, 1.0};
Point(70) = {-0.023722, -0.745632, 0, 1.0};
Point(71) = {-0.016253, -0.747129, 0, 1.0};
Point(72) = {-0.008862, -0.748438, 0, 1.0};
Point(73) = {-0.001648, -0.749456, 0, 1.0};
Point(74) = {0.005359, -0.749979, 0, 1.0};
Point(75) = {0.012377, -0.750000, 0, 1.0};
Point(76) = {0.019366, -0.749674, 0, 1.0};
Point(77) = {0.026242, -0.749060, 0, 1.0};
Point(78) = {0.032929, -0.748196, 0, 1.0};
Point(79) = {0.039350, -0.747117, 0, 1.0};
Point(80) = {0.045436, -0.745856, 0, 1.0};
Point(81) = {0.051115, -0.744446, 0, 1.0};
Point(82) = {0.056326, -0.742920, 0, 1.0};
Point(83) = {0.061002, -0.741314, 0, 1.0};
Point(84) = {0.065091, -0.739663, 0, 1.0};
Point(85) = {0.068530, -0.738004, 0, 1.0};
Point(86) = {0.071267, -0.736360, 0, 1.0};
Point(87) = {0.073281, -0.734764, 0, 1.0};
Point(88) = {0.074527, -0.733271, 0, 1.0};
Point(89) = {0.074964, -0.732218, 0, 1.0};
Point(90) = {0.074999, -0.731954, 0, 1.0};
Point(91) = {0.075000, -0.731922, 0, 1.0};
Point(92) = {0.074973, -0.731658, 0, 1.0};
Point(93) = {0.074853, -0.731413, 0, 1.0};
Point(94) = {0.074655, -0.731159, 0, 1.0};
Point(95) = {0.074426, -0.730929, 0, 1.0};
Point(96) = {0.072796, -0.729872, 0, 1.0};
Point(97) = {0.070224, -0.728785, 0, 1.0};
Point(98) = {0.066767, -0.727674, 0, 1.0};
Point(99) = {0.062438, -0.726499, 0, 1.0};
Point(100) = {0.057348, -0.725150, 0, 1.0};
Point(101) = {0.051733, -0.723665, 0, 1.0};
Point(102) = {0.045683, -0.722110, 0, 1.0};
Point(103) = {0.039338, -0.720542, 0, 1.0};
Point(104) = {0.032837, -0.718952, 0, 1.0};
Point(105) = {0.026527, -0.717580, 0, 1.0};
Point(106) = {0.020347, -0.716893, 0, 1.0};
Point(107) = {0.013878, -0.716929, 0, 1.0};
Point(108) = {0.007104, -0.717525, 0, 1.0};
Point(109) = {-0.000029, -0.718600, 0, 1.0};
Point(110) = {-0.007482, -0.720006, 0, 1.0};
Point(111) = {-0.015183, -0.721635, 0, 1.0};
Point(112) = {-0.023044, -0.723386, 0, 1.0};
Point(113) = {-0.030963, -0.725157, 0, 1.0};
Point(114) = {-0.038820, -0.726853, 0, 1.0};
Point(115) = {-0.046476, -0.728388, 0, 1.0};
Point(116) = {-0.053779, -0.729691, 0, 1.0};
Point(117) = {-0.060566, -0.730711, 0, 1.0};
Point(118) = {-0.066670, -0.731425, 0, 1.0};
Point(119) = {-0.071927, -0.731837, 0, 1.0};
Point(120) = {-0.075000, -0.731963, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
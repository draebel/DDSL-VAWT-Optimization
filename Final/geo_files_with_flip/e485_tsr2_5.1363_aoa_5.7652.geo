SetFactory("OpenCASCADE");

Point(1) = {0.074528, 0.729649, 0, 1.0};
Point(2) = {0.073265, 0.729595, 0, 1.0};
Point(3) = {0.068953, 0.729429, 0, 1.0};
Point(4) = {0.063848, 0.729229, 0, 1.0};
Point(5) = {0.058040, 0.728979, 0, 1.0};
Point(6) = {0.051634, 0.728682, 0, 1.0};
Point(7) = {0.044734, 0.728352, 0, 1.0};
Point(8) = {0.037453, 0.728022, 0, 1.0};
Point(9) = {0.029888, 0.727733, 0, 1.0};
Point(10) = {0.022116, 0.727526, 0, 1.0};
Point(11) = {0.014213, 0.727426, 0, 1.0};
Point(12) = {0.006256, 0.727455, 0, 1.0};
Point(13) = {-0.001681, 0.727623, 0, 1.0};
Point(14) = {-0.009523, 0.727940, 0, 1.0};
Point(15) = {-0.017197, 0.728409, 0, 1.0};
Point(16) = {-0.024626, 0.729030, 0, 1.0};
Point(17) = {-0.031741, 0.729799, 0, 1.0};
Point(18) = {-0.038471, 0.730715, 0, 1.0};
Point(19) = {-0.044752, 0.731770, 0, 1.0};
Point(20) = {-0.050527, 0.732960, 0, 1.0};
Point(21) = {-0.055746, 0.734278, 0, 1.0};
Point(22) = {-0.060373, 0.735710, 0, 1.0};
Point(23) = {-0.064380, 0.737237, 0, 1.0};
Point(24) = {-0.067740, 0.738830, 0, 1.0};
Point(25) = {-0.070444, 0.740457, 0, 1.0};
Point(26) = {-0.072480, 0.742074, 0, 1.0};
Point(27) = {-0.073845, 0.743621, 0, 1.0};
Point(28) = {-0.074410, 0.744648, 0, 1.0};
Point(29) = {-0.074543, 0.745045, 0, 1.0};
Point(30) = {-0.074597, 0.745294, 0, 1.0};
Point(31) = {-0.074621, 0.745528, 0, 1.0};
Point(32) = {-0.074621, 0.745638, 0, 1.0};
Point(33) = {-0.074610, 0.745743, 0, 1.0};
Point(34) = {-0.074591, 0.745840, 0, 1.0};
Point(35) = {-0.074556, 0.745935, 0, 1.0};
Point(36) = {-0.074509, 0.746029, 0, 1.0};
Point(37) = {-0.074449, 0.746124, 0, 1.0};
Point(38) = {-0.074303, 0.746315, 0, 1.0};
Point(39) = {-0.074120, 0.746503, 0, 1.0};
Point(40) = {-0.073787, 0.746782, 0, 1.0};
Point(41) = {-0.073403, 0.747039, 0, 1.0};
Point(42) = {-0.071520, 0.747906, 0, 1.0};
Point(43) = {-0.068866, 0.748646, 0, 1.0};
Point(44) = {-0.065462, 0.749232, 0, 1.0};
Point(45) = {-0.061335, 0.749656, 0, 1.0};
Point(46) = {-0.056526, 0.749912, 0, 1.0};
Point(47) = {-0.051084, 0.750000, 0, 1.0};
Point(48) = {-0.045063, 0.749921, 0, 1.0};
Point(49) = {-0.038530, 0.749678, 0, 1.0};
Point(50) = {-0.031551, 0.749277, 0, 1.0};
Point(51) = {-0.024206, 0.748724, 0, 1.0};
Point(52) = {-0.016575, 0.748023, 0, 1.0};
Point(53) = {-0.008738, 0.747182, 0, 1.0};
Point(54) = {-0.000781, 0.746212, 0, 1.0};
Point(55) = {0.007208, 0.745118, 0, 1.0};
Point(56) = {0.015149, 0.743908, 0, 1.0};
Point(57) = {0.022961, 0.742589, 0, 1.0};
Point(58) = {0.030572, 0.741172, 0, 1.0};
Point(59) = {0.037925, 0.739676, 0, 1.0};
Point(60) = {0.044958, 0.738133, 0, 1.0};
Point(61) = {0.051613, 0.736585, 0, 1.0};
Point(62) = {0.057827, 0.735082, 0, 1.0};
Point(63) = {0.063536, 0.733687, 0, 1.0};
Point(64) = {0.068651, 0.732476, 0, 1.0};
Point(65) = {0.073053, 0.731494, 0, 1.0};
Point(66) = {0.074680, 0.731155, 0, 1.0};
Point(67) = {-0.074528, -0.729649, 0, 1.0};
Point(68) = {-0.073265, -0.729595, 0, 1.0};
Point(69) = {-0.068953, -0.729429, 0, 1.0};
Point(70) = {-0.063848, -0.729229, 0, 1.0};
Point(71) = {-0.058040, -0.728979, 0, 1.0};
Point(72) = {-0.051634, -0.728682, 0, 1.0};
Point(73) = {-0.044734, -0.728352, 0, 1.0};
Point(74) = {-0.037453, -0.728022, 0, 1.0};
Point(75) = {-0.029888, -0.727733, 0, 1.0};
Point(76) = {-0.022116, -0.727526, 0, 1.0};
Point(77) = {-0.014213, -0.727426, 0, 1.0};
Point(78) = {-0.006256, -0.727455, 0, 1.0};
Point(79) = {0.001681, -0.727623, 0, 1.0};
Point(80) = {0.009523, -0.727940, 0, 1.0};
Point(81) = {0.017197, -0.728409, 0, 1.0};
Point(82) = {0.024626, -0.729030, 0, 1.0};
Point(83) = {0.031741, -0.729799, 0, 1.0};
Point(84) = {0.038471, -0.730715, 0, 1.0};
Point(85) = {0.044752, -0.731770, 0, 1.0};
Point(86) = {0.050527, -0.732960, 0, 1.0};
Point(87) = {0.055746, -0.734278, 0, 1.0};
Point(88) = {0.060373, -0.735710, 0, 1.0};
Point(89) = {0.064380, -0.737237, 0, 1.0};
Point(90) = {0.067740, -0.738830, 0, 1.0};
Point(91) = {0.070444, -0.740457, 0, 1.0};
Point(92) = {0.072480, -0.742074, 0, 1.0};
Point(93) = {0.073845, -0.743621, 0, 1.0};
Point(94) = {0.074410, -0.744648, 0, 1.0};
Point(95) = {0.074543, -0.745045, 0, 1.0};
Point(96) = {0.074597, -0.745294, 0, 1.0};
Point(97) = {0.074621, -0.745528, 0, 1.0};
Point(98) = {0.074621, -0.745638, 0, 1.0};
Point(99) = {0.074610, -0.745743, 0, 1.0};
Point(100) = {0.074591, -0.745840, 0, 1.0};
Point(101) = {0.074556, -0.745935, 0, 1.0};
Point(102) = {0.074509, -0.746029, 0, 1.0};
Point(103) = {0.074449, -0.746124, 0, 1.0};
Point(104) = {0.074303, -0.746315, 0, 1.0};
Point(105) = {0.074120, -0.746503, 0, 1.0};
Point(106) = {0.073787, -0.746782, 0, 1.0};
Point(107) = {0.073403, -0.747039, 0, 1.0};
Point(108) = {0.071520, -0.747906, 0, 1.0};
Point(109) = {0.068866, -0.748646, 0, 1.0};
Point(110) = {0.065462, -0.749232, 0, 1.0};
Point(111) = {0.061335, -0.749656, 0, 1.0};
Point(112) = {0.056526, -0.749912, 0, 1.0};
Point(113) = {0.051084, -0.750000, 0, 1.0};
Point(114) = {0.045063, -0.749921, 0, 1.0};
Point(115) = {0.038530, -0.749678, 0, 1.0};
Point(116) = {0.031551, -0.749277, 0, 1.0};
Point(117) = {0.024206, -0.748724, 0, 1.0};
Point(118) = {0.016575, -0.748023, 0, 1.0};
Point(119) = {0.008738, -0.747182, 0, 1.0};
Point(120) = {0.000781, -0.746212, 0, 1.0};
Point(121) = {-0.007208, -0.745118, 0, 1.0};
Point(122) = {-0.015149, -0.743908, 0, 1.0};
Point(123) = {-0.022961, -0.742589, 0, 1.0};
Point(124) = {-0.030572, -0.741172, 0, 1.0};
Point(125) = {-0.037925, -0.739676, 0, 1.0};
Point(126) = {-0.044958, -0.738133, 0, 1.0};
Point(127) = {-0.051613, -0.736585, 0, 1.0};
Point(128) = {-0.057827, -0.735082, 0, 1.0};
Point(129) = {-0.063536, -0.733687, 0, 1.0};
Point(130) = {-0.068651, -0.732476, 0, 1.0};
Point(131) = {-0.073053, -0.731494, 0, 1.0};
Point(132) = {-0.074680, -0.731155, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:83};
Spline(6) = {83:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
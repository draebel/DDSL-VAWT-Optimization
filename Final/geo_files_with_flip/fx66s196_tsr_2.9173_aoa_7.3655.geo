SetFactory("OpenCASCADE");

Point(1) = {0.074154, 0.724481, 0, 1.0};
Point(2) = {0.072837, 0.724358, 0, 1.0};
Point(3) = {0.067584, 0.723727, 0, 1.0};
Point(4) = {0.061184, 0.722905, 0, 1.0};
Point(5) = {0.057586, 0.722429, 0, 1.0};
Point(6) = {0.053740, 0.721880, 0, 1.0};
Point(7) = {0.049668, 0.721312, 0, 1.0};
Point(8) = {0.045383, 0.720682, 0, 1.0};
Point(9) = {0.040908, 0.720053, 0, 1.0};
Point(10) = {0.036259, 0.719389, 0, 1.0};
Point(11) = {0.031464, 0.718737, 0, 1.0};
Point(12) = {0.026535, 0.718062, 0, 1.0};
Point(13) = {0.021505, 0.717440, 0, 1.0};
Point(14) = {0.016390, 0.716841, 0, 1.0};
Point(15) = {0.011222, 0.716353, 0, 1.0};
Point(16) = {0.006022, 0.715944, 0, 1.0};
Point(17) = {0.000822, 0.715709, 0, 1.0};
Point(18) = {-0.004358, 0.715631, 0, 1.0};
Point(19) = {-0.009479, 0.715842, 0, 1.0};
Point(20) = {-0.014527, 0.716278, 0, 1.0};
Point(21) = {-0.019473, 0.716987, 0, 1.0};
Point(22) = {-0.024307, 0.717884, 0, 1.0};
Point(23) = {-0.029006, 0.718977, 0, 1.0};
Point(24) = {-0.033592, 0.720191, 0, 1.0};
Point(25) = {-0.037948, 0.721546, 0, 1.0};
Point(26) = {-0.042157, 0.722980, 0, 1.0};
Point(27) = {-0.046161, 0.724525, 0, 1.0};
Point(28) = {-0.049953, 0.726116, 0, 1.0};
Point(29) = {-0.053513, 0.727785, 0, 1.0};
Point(30) = {-0.056832, 0.729467, 0, 1.0};
Point(31) = {-0.059891, 0.731195, 0, 1.0};
Point(32) = {-0.062682, 0.732901, 0, 1.0};
Point(33) = {-0.065192, 0.734620, 0, 1.0};
Point(34) = {-0.067417, 0.736280, 0, 1.0};
Point(35) = {-0.069340, 0.737916, 0, 1.0};
Point(36) = {-0.070964, 0.739453, 0, 1.0};
Point(37) = {-0.072274, 0.740923, 0, 1.0};
Point(38) = {-0.073277, 0.742253, 0, 1.0};
Point(39) = {-0.073965, 0.743452, 0, 1.0};
Point(40) = {-0.074344, 0.744441, 0, 1.0};
Point(41) = {-0.074381, 0.745464, 0, 1.0};
Point(42) = {-0.074146, 0.745973, 0, 1.0};
Point(43) = {-0.073557, 0.746607, 0, 1.0};
Point(44) = {-0.072641, 0.747170, 0, 1.0};
Point(45) = {-0.071396, 0.747715, 0, 1.0};
Point(46) = {-0.069834, 0.748192, 0, 1.0};
Point(47) = {-0.067953, 0.748644, 0, 1.0};
Point(48) = {-0.065771, 0.749015, 0, 1.0};
Point(49) = {-0.063288, 0.749350, 0, 1.0};
Point(50) = {-0.060524, 0.749597, 0, 1.0};
Point(51) = {-0.057486, 0.749803, 0, 1.0};
Point(52) = {-0.054189, 0.749918, 0, 1.0};
Point(53) = {-0.050641, 0.750000, 0, 1.0};
Point(54) = {-0.046872, 0.749954, 0, 1.0};
Point(55) = {-0.042884, 0.749872, 0, 1.0};
Point(56) = {-0.038704, 0.749687, 0, 1.0};
Point(57) = {-0.034342, 0.749442, 0, 1.0};
Point(58) = {-0.029856, 0.749095, 0, 1.0};
Point(59) = {-0.025168, 0.748672, 0, 1.0};
Point(60) = {-0.020396, 0.748136, 0, 1.0};
Point(61) = {-0.015526, 0.747518, 0, 1.0};
Point(62) = {-0.010588, 0.746750, 0, 1.0};
Point(63) = {-0.005598, 0.745864, 0, 1.0};
Point(64) = {-0.000574, 0.744905, 0, 1.0};
Point(65) = {0.004415, 0.743508, 0, 1.0};
Point(66) = {0.009401, 0.742088, 0, 1.0};
Point(67) = {0.014360, 0.740624, 0, 1.0};
Point(68) = {0.019271, 0.739123, 0, 1.0};
Point(69) = {0.024121, 0.737680, 0, 1.0};
Point(70) = {0.028888, 0.736265, 0, 1.0};
Point(71) = {0.033556, 0.734923, 0, 1.0};
Point(72) = {0.038101, 0.733639, 0, 1.0};
Point(73) = {0.042513, 0.732469, 0, 1.0};
Point(74) = {0.046763, 0.731363, 0, 1.0};
Point(75) = {0.050840, 0.730376, 0, 1.0};
Point(76) = {0.054720, 0.729462, 0, 1.0};
Point(77) = {0.058392, 0.728666, 0, 1.0};
Point(78) = {0.061836, 0.727945, 0, 1.0};
Point(79) = {0.067984, 0.726823, 0, 1.0};
Point(80) = {0.073059, 0.726073, 0, 1.0};
Point(81) = {0.074342, 0.725932, 0, 1.0};
Point(82) = {-0.074154, -0.724481, 0, 1.0};
Point(83) = {-0.072837, -0.724358, 0, 1.0};
Point(84) = {-0.067584, -0.723727, 0, 1.0};
Point(85) = {-0.061184, -0.722905, 0, 1.0};
Point(86) = {-0.057586, -0.722429, 0, 1.0};
Point(87) = {-0.053740, -0.721880, 0, 1.0};
Point(88) = {-0.049668, -0.721312, 0, 1.0};
Point(89) = {-0.045383, -0.720682, 0, 1.0};
Point(90) = {-0.040908, -0.720053, 0, 1.0};
Point(91) = {-0.036259, -0.719389, 0, 1.0};
Point(92) = {-0.031464, -0.718737, 0, 1.0};
Point(93) = {-0.026535, -0.718062, 0, 1.0};
Point(94) = {-0.021505, -0.717440, 0, 1.0};
Point(95) = {-0.016390, -0.716841, 0, 1.0};
Point(96) = {-0.011222, -0.716353, 0, 1.0};
Point(97) = {-0.006022, -0.715944, 0, 1.0};
Point(98) = {-0.000822, -0.715709, 0, 1.0};
Point(99) = {0.004358, -0.715631, 0, 1.0};
Point(100) = {0.009479, -0.715842, 0, 1.0};
Point(101) = {0.014527, -0.716278, 0, 1.0};
Point(102) = {0.019473, -0.716987, 0, 1.0};
Point(103) = {0.024307, -0.717884, 0, 1.0};
Point(104) = {0.029006, -0.718977, 0, 1.0};
Point(105) = {0.033592, -0.720191, 0, 1.0};
Point(106) = {0.037948, -0.721546, 0, 1.0};
Point(107) = {0.042157, -0.722980, 0, 1.0};
Point(108) = {0.046161, -0.724525, 0, 1.0};
Point(109) = {0.049953, -0.726116, 0, 1.0};
Point(110) = {0.053513, -0.727785, 0, 1.0};
Point(111) = {0.056832, -0.729467, 0, 1.0};
Point(112) = {0.059891, -0.731195, 0, 1.0};
Point(113) = {0.062682, -0.732901, 0, 1.0};
Point(114) = {0.065192, -0.734620, 0, 1.0};
Point(115) = {0.067417, -0.736280, 0, 1.0};
Point(116) = {0.069340, -0.737916, 0, 1.0};
Point(117) = {0.070964, -0.739453, 0, 1.0};
Point(118) = {0.072274, -0.740923, 0, 1.0};
Point(119) = {0.073277, -0.742253, 0, 1.0};
Point(120) = {0.073965, -0.743452, 0, 1.0};
Point(121) = {0.074344, -0.744441, 0, 1.0};
Point(122) = {0.074381, -0.745464, 0, 1.0};
Point(123) = {0.074146, -0.745973, 0, 1.0};
Point(124) = {0.073557, -0.746607, 0, 1.0};
Point(125) = {0.072641, -0.747170, 0, 1.0};
Point(126) = {0.071396, -0.747715, 0, 1.0};
Point(127) = {0.069834, -0.748192, 0, 1.0};
Point(128) = {0.067953, -0.748644, 0, 1.0};
Point(129) = {0.065771, -0.749015, 0, 1.0};
Point(130) = {0.063288, -0.749350, 0, 1.0};
Point(131) = {0.060524, -0.749597, 0, 1.0};
Point(132) = {0.057486, -0.749803, 0, 1.0};
Point(133) = {0.054189, -0.749918, 0, 1.0};
Point(134) = {0.050641, -0.750000, 0, 1.0};
Point(135) = {0.046872, -0.749954, 0, 1.0};
Point(136) = {0.042884, -0.749872, 0, 1.0};
Point(137) = {0.038704, -0.749687, 0, 1.0};
Point(138) = {0.034342, -0.749442, 0, 1.0};
Point(139) = {0.029856, -0.749095, 0, 1.0};
Point(140) = {0.025168, -0.748672, 0, 1.0};
Point(141) = {0.020396, -0.748136, 0, 1.0};
Point(142) = {0.015526, -0.747518, 0, 1.0};
Point(143) = {0.010588, -0.746750, 0, 1.0};
Point(144) = {0.005598, -0.745864, 0, 1.0};
Point(145) = {0.000574, -0.744905, 0, 1.0};
Point(146) = {-0.004415, -0.743508, 0, 1.0};
Point(147) = {-0.009401, -0.742088, 0, 1.0};
Point(148) = {-0.014360, -0.740624, 0, 1.0};
Point(149) = {-0.019271, -0.739123, 0, 1.0};
Point(150) = {-0.024121, -0.737680, 0, 1.0};
Point(151) = {-0.028888, -0.736265, 0, 1.0};
Point(152) = {-0.033556, -0.734923, 0, 1.0};
Point(153) = {-0.038101, -0.733639, 0, 1.0};
Point(154) = {-0.042513, -0.732469, 0, 1.0};
Point(155) = {-0.046763, -0.731363, 0, 1.0};
Point(156) = {-0.050840, -0.730376, 0, 1.0};
Point(157) = {-0.054720, -0.729462, 0, 1.0};
Point(158) = {-0.058392, -0.728666, 0, 1.0};
Point(159) = {-0.061836, -0.727945, 0, 1.0};
Point(160) = {-0.067984, -0.726823, 0, 1.0};
Point(161) = {-0.073059, -0.726073, 0, 1.0};
Point(162) = {-0.074342, -0.725932, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
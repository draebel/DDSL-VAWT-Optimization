SetFactory("OpenCASCADE");

Point(1) = {0.075135, 0.748215, 0, 1.0};
Point(2) = {0.071601, 0.747000, 0, 1.0};
Point(3) = {0.064682, 0.744724, 0, 1.0};
Point(4) = {0.056788, 0.742222, 0, 1.0};
Point(5) = {0.048051, 0.739571, 0, 1.0};
Point(6) = {0.038615, 0.736901, 0, 1.0};
Point(7) = {0.028636, 0.734360, 0, 1.0};
Point(8) = {0.018279, 0.732093, 0, 1.0};
Point(9) = {0.007716, 0.730219, 0, 1.0};
Point(10) = {-0.002875, 0.728825, 0, 1.0};
Point(11) = {-0.013316, 0.727964, 0, 1.0};
Point(12) = {-0.018424, 0.727742, 0, 1.0};
Point(13) = {-0.023427, 0.727662, 0, 1.0};
Point(14) = {-0.028305, 0.727722, 0, 1.0};
Point(15) = {-0.033037, 0.727921, 0, 1.0};
Point(16) = {-0.037602, 0.728255, 0, 1.0};
Point(17) = {-0.041978, 0.728719, 0, 1.0};
Point(18) = {-0.046150, 0.729309, 0, 1.0};
Point(19) = {-0.050097, 0.730020, 0, 1.0};
Point(20) = {-0.053805, 0.730841, 0, 1.0};
Point(21) = {-0.057254, 0.731757, 0, 1.0};
Point(22) = {-0.060429, 0.732743, 0, 1.0};
Point(23) = {-0.063316, 0.733783, 0, 1.0};
Point(24) = {-0.065905, 0.734872, 0, 1.0};
Point(25) = {-0.068181, 0.736027, 0, 1.0};
Point(26) = {-0.070141, 0.737274, 0, 1.0};
Point(27) = {-0.071772, 0.738619, 0, 1.0};
Point(28) = {-0.073071, 0.740034, 0, 1.0};
Point(29) = {-0.074026, 0.741440, 0, 1.0};
Point(30) = {-0.074628, 0.742739, 0, 1.0};
Point(31) = {-0.074869, 0.743845, 0, 1.0};
Point(32) = {-0.074746, 0.744731, 0, 1.0};
Point(33) = {-0.074262, 0.745424, 0, 1.0};
Point(34) = {-0.073424, 0.745986, 0, 1.0};
Point(35) = {-0.072238, 0.746481, 0, 1.0};
Point(36) = {-0.070713, 0.746945, 0, 1.0};
Point(37) = {-0.068854, 0.747387, 0, 1.0};
Point(38) = {-0.066670, 0.747799, 0, 1.0};
Point(39) = {-0.064169, 0.748174, 0, 1.0};
Point(40) = {-0.061362, 0.748512, 0, 1.0};
Point(41) = {-0.058265, 0.748819, 0, 1.0};
Point(42) = {-0.054886, 0.749100, 0, 1.0};
Point(43) = {-0.051242, 0.749354, 0, 1.0};
Point(44) = {-0.047350, 0.749577, 0, 1.0};
Point(45) = {-0.043224, 0.749760, 0, 1.0};
Point(46) = {-0.038884, 0.749898, 0, 1.0};
Point(47) = {-0.034343, 0.749981, 0, 1.0};
Point(48) = {-0.029624, 0.750000, 0, 1.0};
Point(49) = {-0.024747, 0.749948, 0, 1.0};
Point(50) = {-0.019732, 0.749824, 0, 1.0};
Point(51) = {-0.014600, 0.749637, 0, 1.0};
Point(52) = {-0.004077, 0.749120, 0, 1.0};
Point(53) = {0.006633, 0.748508, 0, 1.0};
Point(54) = {0.017342, 0.747914, 0, 1.0};
Point(55) = {0.027862, 0.747444, 0, 1.0};
Point(56) = {0.038006, 0.747183, 0, 1.0};
Point(57) = {0.047600, 0.747192, 0, 1.0};
Point(58) = {0.056475, 0.747506, 0, 1.0};
Point(59) = {0.064480, 0.748140, 0, 1.0};
Point(60) = {0.071479, 0.749074, 0, 1.0};
Point(61) = {0.075046, 0.749718, 0, 1.0};
Point(62) = {-0.075135, -0.748215, 0, 1.0};
Point(63) = {-0.071601, -0.747000, 0, 1.0};
Point(64) = {-0.064682, -0.744724, 0, 1.0};
Point(65) = {-0.056788, -0.742222, 0, 1.0};
Point(66) = {-0.048051, -0.739571, 0, 1.0};
Point(67) = {-0.038615, -0.736901, 0, 1.0};
Point(68) = {-0.028636, -0.734360, 0, 1.0};
Point(69) = {-0.018279, -0.732093, 0, 1.0};
Point(70) = {-0.007716, -0.730219, 0, 1.0};
Point(71) = {0.002875, -0.728825, 0, 1.0};
Point(72) = {0.013316, -0.727964, 0, 1.0};
Point(73) = {0.018424, -0.727742, 0, 1.0};
Point(74) = {0.023427, -0.727662, 0, 1.0};
Point(75) = {0.028305, -0.727722, 0, 1.0};
Point(76) = {0.033037, -0.727921, 0, 1.0};
Point(77) = {0.037602, -0.728255, 0, 1.0};
Point(78) = {0.041978, -0.728719, 0, 1.0};
Point(79) = {0.046150, -0.729309, 0, 1.0};
Point(80) = {0.050097, -0.730020, 0, 1.0};
Point(81) = {0.053805, -0.730841, 0, 1.0};
Point(82) = {0.057254, -0.731757, 0, 1.0};
Point(83) = {0.060429, -0.732743, 0, 1.0};
Point(84) = {0.063316, -0.733783, 0, 1.0};
Point(85) = {0.065905, -0.734872, 0, 1.0};
Point(86) = {0.068181, -0.736027, 0, 1.0};
Point(87) = {0.070141, -0.737274, 0, 1.0};
Point(88) = {0.071772, -0.738619, 0, 1.0};
Point(89) = {0.073071, -0.740034, 0, 1.0};
Point(90) = {0.074026, -0.741440, 0, 1.0};
Point(91) = {0.074628, -0.742739, 0, 1.0};
Point(92) = {0.074869, -0.743845, 0, 1.0};
Point(93) = {0.074746, -0.744731, 0, 1.0};
Point(94) = {0.074262, -0.745424, 0, 1.0};
Point(95) = {0.073424, -0.745986, 0, 1.0};
Point(96) = {0.072238, -0.746481, 0, 1.0};
Point(97) = {0.070713, -0.746945, 0, 1.0};
Point(98) = {0.068854, -0.747387, 0, 1.0};
Point(99) = {0.066670, -0.747799, 0, 1.0};
Point(100) = {0.064169, -0.748174, 0, 1.0};
Point(101) = {0.061362, -0.748512, 0, 1.0};
Point(102) = {0.058265, -0.748819, 0, 1.0};
Point(103) = {0.054886, -0.749100, 0, 1.0};
Point(104) = {0.051242, -0.749354, 0, 1.0};
Point(105) = {0.047350, -0.749577, 0, 1.0};
Point(106) = {0.043224, -0.749760, 0, 1.0};
Point(107) = {0.038884, -0.749898, 0, 1.0};
Point(108) = {0.034343, -0.749981, 0, 1.0};
Point(109) = {0.029624, -0.750000, 0, 1.0};
Point(110) = {0.024747, -0.749948, 0, 1.0};
Point(111) = {0.019732, -0.749824, 0, 1.0};
Point(112) = {0.014600, -0.749637, 0, 1.0};
Point(113) = {0.004077, -0.749120, 0, 1.0};
Point(114) = {-0.006633, -0.748508, 0, 1.0};
Point(115) = {-0.017342, -0.747914, 0, 1.0};
Point(116) = {-0.027862, -0.747444, 0, 1.0};
Point(117) = {-0.038006, -0.747183, 0, 1.0};
Point(118) = {-0.047600, -0.747192, 0, 1.0};
Point(119) = {-0.056475, -0.747506, 0, 1.0};
Point(120) = {-0.064480, -0.748140, 0, 1.0};
Point(121) = {-0.071479, -0.749074, 0, 1.0};
Point(122) = {-0.075046, -0.749718, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:47};
Spline(3) = {47:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:108};
Spline(7) = {108:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
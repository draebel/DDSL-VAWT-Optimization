SetFactory("OpenCASCADE");

Point(1) = {0.074233, 0.748530, 0, 1.0};
Point(2) = {0.069741, 0.747374, 0, 1.0};
Point(3) = {0.063597, 0.745747, 0, 1.0};
Point(4) = {0.060153, 0.744779, 0, 1.0};
Point(5) = {0.056470, 0.743790, 0, 1.0};
Point(6) = {0.052582, 0.742658, 0, 1.0};
Point(7) = {0.048485, 0.741531, 0, 1.0};
Point(8) = {0.044220, 0.740237, 0, 1.0};
Point(9) = {0.039789, 0.738912, 0, 1.0};
Point(10) = {0.035256, 0.737265, 0, 1.0};
Point(11) = {0.030582, 0.735683, 0, 1.0};
Point(12) = {0.025811, 0.734004, 0, 1.0};
Point(13) = {0.020937, 0.732426, 0, 1.0};
Point(14) = {0.015988, 0.730886, 0, 1.0};
Point(15) = {0.010982, 0.729428, 0, 1.0};
Point(16) = {0.005948, 0.728013, 0, 1.0};
Point(17) = {0.000891, 0.726746, 0, 1.0};
Point(18) = {-0.004157, 0.725564, 0, 1.0};
Point(19) = {-0.009187, 0.724540, 0, 1.0};
Point(20) = {-0.014158, 0.723589, 0, 1.0};
Point(21) = {-0.019067, 0.722807, 0, 1.0};
Point(22) = {-0.023877, 0.722100, 0, 1.0};
Point(23) = {-0.028578, 0.721547, 0, 1.0};
Point(24) = {-0.033141, 0.721066, 0, 1.0};
Point(25) = {-0.037553, 0.720729, 0, 1.0};
Point(26) = {-0.041783, 0.720461, 0, 1.0};
Point(27) = {-0.045826, 0.720329, 0, 1.0};
Point(28) = {-0.049653, 0.720269, 0, 1.0};
Point(29) = {-0.053255, 0.720327, 0, 1.0};
Point(30) = {-0.056609, 0.720449, 0, 1.0};
Point(31) = {-0.059708, 0.720696, 0, 1.0};
Point(32) = {-0.062529, 0.720986, 0, 1.0};
Point(33) = {-0.065069, 0.721384, 0, 1.0};
Point(34) = {-0.067307, 0.721830, 0, 1.0};
Point(35) = {-0.069242, 0.722366, 0, 1.0};
Point(36) = {-0.070853, 0.722925, 0, 1.0};
Point(37) = {-0.072151, 0.723601, 0, 1.0};
Point(38) = {-0.073099, 0.724192, 0, 1.0};
Point(39) = {-0.073754, 0.725093, 0, 1.0};
Point(40) = {-0.074119, 0.726343, 0, 1.0};
Point(41) = {-0.074148, 0.727645, 0, 1.0};
Point(42) = {-0.073796, 0.728701, 0, 1.0};
Point(43) = {-0.073071, 0.729551, 0, 1.0};
Point(44) = {-0.072038, 0.730588, 0, 1.0};
Point(45) = {-0.070671, 0.731607, 0, 1.0};
Point(46) = {-0.068988, 0.732703, 0, 1.0};
Point(47) = {-0.066990, 0.733804, 0, 1.0};
Point(48) = {-0.064688, 0.734950, 0, 1.0};
Point(49) = {-0.062087, 0.736079, 0, 1.0};
Point(50) = {-0.059207, 0.737250, 0, 1.0};
Point(51) = {-0.056047, 0.738380, 0, 1.0};
Point(52) = {-0.052630, 0.739523, 0, 1.0};
Point(53) = {-0.048964, 0.740622, 0, 1.0};
Point(54) = {-0.045070, 0.741717, 0, 1.0};
Point(55) = {-0.040956, 0.742739, 0, 1.0};
Point(56) = {-0.036648, 0.743751, 0, 1.0};
Point(57) = {-0.032154, 0.744670, 0, 1.0};
Point(58) = {-0.027505, 0.745563, 0, 1.0};
Point(59) = {-0.022706, 0.746342, 0, 1.0};
Point(60) = {-0.017790, 0.747079, 0, 1.0};
Point(61) = {-0.012764, 0.747674, 0, 1.0};
Point(62) = {-0.007660, 0.748217, 0, 1.0};
Point(63) = {-0.002491, 0.748615, 0, 1.0};
Point(64) = {0.002713, 0.748934, 0, 1.0};
Point(65) = {0.007939, 0.749106, 0, 1.0};
Point(66) = {0.013151, 0.749228, 0, 1.0};
Point(67) = {0.018335, 0.749255, 0, 1.0};
Point(68) = {0.023458, 0.749223, 0, 1.0};
Point(69) = {0.028513, 0.749063, 0, 1.0};
Point(70) = {0.033447, 0.748967, 0, 1.0};
Point(71) = {0.038265, 0.748765, 0, 1.0};
Point(72) = {0.042890, 0.748841, 0, 1.0};
Point(73) = {0.047346, 0.748896, 0, 1.0};
Point(74) = {0.051592, 0.749059, 0, 1.0};
Point(75) = {0.055641, 0.749153, 0, 1.0};
Point(76) = {0.059451, 0.749323, 0, 1.0};
Point(77) = {0.063026, 0.749441, 0, 1.0};
Point(78) = {0.069374, 0.749746, 0, 1.0};
Point(79) = {0.074005, 0.750000, 0, 1.0};
Point(80) = {-0.074233, -0.748530, 0, 1.0};
Point(81) = {-0.069741, -0.747374, 0, 1.0};
Point(82) = {-0.063597, -0.745747, 0, 1.0};
Point(83) = {-0.060153, -0.744779, 0, 1.0};
Point(84) = {-0.056470, -0.743790, 0, 1.0};
Point(85) = {-0.052582, -0.742658, 0, 1.0};
Point(86) = {-0.048485, -0.741531, 0, 1.0};
Point(87) = {-0.044220, -0.740237, 0, 1.0};
Point(88) = {-0.039789, -0.738912, 0, 1.0};
Point(89) = {-0.035256, -0.737265, 0, 1.0};
Point(90) = {-0.030582, -0.735683, 0, 1.0};
Point(91) = {-0.025811, -0.734004, 0, 1.0};
Point(92) = {-0.020937, -0.732426, 0, 1.0};
Point(93) = {-0.015988, -0.730886, 0, 1.0};
Point(94) = {-0.010982, -0.729428, 0, 1.0};
Point(95) = {-0.005948, -0.728013, 0, 1.0};
Point(96) = {-0.000891, -0.726746, 0, 1.0};
Point(97) = {0.004157, -0.725564, 0, 1.0};
Point(98) = {0.009187, -0.724540, 0, 1.0};
Point(99) = {0.014158, -0.723589, 0, 1.0};
Point(100) = {0.019067, -0.722807, 0, 1.0};
Point(101) = {0.023877, -0.722100, 0, 1.0};
Point(102) = {0.028578, -0.721547, 0, 1.0};
Point(103) = {0.033141, -0.721066, 0, 1.0};
Point(104) = {0.037553, -0.720729, 0, 1.0};
Point(105) = {0.041783, -0.720461, 0, 1.0};
Point(106) = {0.045826, -0.720329, 0, 1.0};
Point(107) = {0.049653, -0.720269, 0, 1.0};
Point(108) = {0.053255, -0.720327, 0, 1.0};
Point(109) = {0.056609, -0.720449, 0, 1.0};
Point(110) = {0.059708, -0.720696, 0, 1.0};
Point(111) = {0.062529, -0.720986, 0, 1.0};
Point(112) = {0.065069, -0.721384, 0, 1.0};
Point(113) = {0.067307, -0.721830, 0, 1.0};
Point(114) = {0.069242, -0.722366, 0, 1.0};
Point(115) = {0.070853, -0.722925, 0, 1.0};
Point(116) = {0.072151, -0.723601, 0, 1.0};
Point(117) = {0.073099, -0.724192, 0, 1.0};
Point(118) = {0.073754, -0.725093, 0, 1.0};
Point(119) = {0.074119, -0.726343, 0, 1.0};
Point(120) = {0.074148, -0.727645, 0, 1.0};
Point(121) = {0.073796, -0.728701, 0, 1.0};
Point(122) = {0.073071, -0.729551, 0, 1.0};
Point(123) = {0.072038, -0.730588, 0, 1.0};
Point(124) = {0.070671, -0.731607, 0, 1.0};
Point(125) = {0.068988, -0.732703, 0, 1.0};
Point(126) = {0.066990, -0.733804, 0, 1.0};
Point(127) = {0.064688, -0.734950, 0, 1.0};
Point(128) = {0.062087, -0.736079, 0, 1.0};
Point(129) = {0.059207, -0.737250, 0, 1.0};
Point(130) = {0.056047, -0.738380, 0, 1.0};
Point(131) = {0.052630, -0.739523, 0, 1.0};
Point(132) = {0.048964, -0.740622, 0, 1.0};
Point(133) = {0.045070, -0.741717, 0, 1.0};
Point(134) = {0.040956, -0.742739, 0, 1.0};
Point(135) = {0.036648, -0.743751, 0, 1.0};
Point(136) = {0.032154, -0.744670, 0, 1.0};
Point(137) = {0.027505, -0.745563, 0, 1.0};
Point(138) = {0.022706, -0.746342, 0, 1.0};
Point(139) = {0.017790, -0.747079, 0, 1.0};
Point(140) = {0.012764, -0.747674, 0, 1.0};
Point(141) = {0.007660, -0.748217, 0, 1.0};
Point(142) = {0.002491, -0.748615, 0, 1.0};
Point(143) = {-0.002713, -0.748934, 0, 1.0};
Point(144) = {-0.007939, -0.749106, 0, 1.0};
Point(145) = {-0.013151, -0.749228, 0, 1.0};
Point(146) = {-0.018335, -0.749255, 0, 1.0};
Point(147) = {-0.023458, -0.749223, 0, 1.0};
Point(148) = {-0.028513, -0.749063, 0, 1.0};
Point(149) = {-0.033447, -0.748967, 0, 1.0};
Point(150) = {-0.038265, -0.748765, 0, 1.0};
Point(151) = {-0.042890, -0.748841, 0, 1.0};
Point(152) = {-0.047346, -0.748896, 0, 1.0};
Point(153) = {-0.051592, -0.749059, 0, 1.0};
Point(154) = {-0.055641, -0.749153, 0, 1.0};
Point(155) = {-0.059451, -0.749323, 0, 1.0};
Point(156) = {-0.063026, -0.749441, 0, 1.0};
Point(157) = {-0.069374, -0.749746, 0, 1.0};
Point(158) = {-0.074005, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:56};
Spline(3) = {56:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:103};
Spline(6) = {103:135};
Spline(7) = {135:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
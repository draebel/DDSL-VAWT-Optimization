SetFactory("OpenCASCADE");

Point(1) = {0.074928, 0.748532, 0, 1.0};
Point(2) = {0.073173, 0.748081, 0, 1.0};
Point(3) = {0.070860, 0.747484, 0, 1.0};
Point(4) = {0.068374, 0.746840, 0, 1.0};
Point(5) = {0.065733, 0.746155, 0, 1.0};
Point(6) = {0.062947, 0.745433, 0, 1.0};
Point(7) = {0.060026, 0.744683, 0, 1.0};
Point(8) = {0.056975, 0.743916, 0, 1.0};
Point(9) = {0.053798, 0.743130, 0, 1.0};
Point(10) = {0.050512, 0.742330, 0, 1.0};
Point(11) = {0.047124, 0.741525, 0, 1.0};
Point(12) = {0.043642, 0.740720, 0, 1.0};
Point(13) = {0.040069, 0.739917, 0, 1.0};
Point(14) = {0.036421, 0.739119, 0, 1.0};
Point(15) = {0.032707, 0.738333, 0, 1.0};
Point(16) = {0.028935, 0.737562, 0, 1.0};
Point(17) = {0.025114, 0.736810, 0, 1.0};
Point(18) = {0.021254, 0.736079, 0, 1.0};
Point(19) = {0.017368, 0.735377, 0, 1.0};
Point(20) = {0.013463, 0.734708, 0, 1.0};
Point(21) = {0.009544, 0.734074, 0, 1.0};
Point(22) = {0.005622, 0.733473, 0, 1.0};
Point(23) = {0.001712, 0.732914, 0, 1.0};
Point(24) = {-0.002184, 0.732399, 0, 1.0};
Point(25) = {-0.006056, 0.731930, 0, 1.0};
Point(26) = {-0.009895, 0.731504, 0, 1.0};
Point(27) = {-0.013687, 0.731127, 0, 1.0};
Point(28) = {-0.017428, 0.730801, 0, 1.0};
Point(29) = {-0.021108, 0.730525, 0, 1.0};
Point(30) = {-0.024719, 0.730302, 0, 1.0};
Point(31) = {-0.028250, 0.730132, 0, 1.0};
Point(32) = {-0.031693, 0.730020, 0, 1.0};
Point(33) = {-0.035050, 0.729963, 0, 1.0};
Point(34) = {-0.038305, 0.729960, 0, 1.0};
Point(35) = {-0.041451, 0.730012, 0, 1.0};
Point(36) = {-0.044485, 0.730122, 0, 1.0};
Point(37) = {-0.047403, 0.730287, 0, 1.0};
Point(38) = {-0.050197, 0.730501, 0, 1.0};
Point(39) = {-0.052857, 0.730766, 0, 1.0};
Point(40) = {-0.055383, 0.731083, 0, 1.0};
Point(41) = {-0.057770, 0.731447, 0, 1.0};
Point(42) = {-0.060015, 0.731853, 0, 1.0};
Point(43) = {-0.062105, 0.732301, 0, 1.0};
Point(44) = {-0.064044, 0.732792, 0, 1.0};
Point(45) = {-0.065831, 0.733319, 0, 1.0};
Point(46) = {-0.067463, 0.733875, 0, 1.0};
Point(47) = {-0.068932, 0.734455, 0, 1.0};
Point(48) = {-0.070237, 0.735061, 0, 1.0};
Point(49) = {-0.071385, 0.735685, 0, 1.0};
Point(50) = {-0.072370, 0.736313, 0, 1.0};
Point(51) = {-0.073186, 0.736940, 0, 1.0};
Point(52) = {-0.073833, 0.737562, 0, 1.0};
Point(53) = {-0.074320, 0.738171, 0, 1.0};
Point(54) = {-0.074644, 0.738743, 0, 1.0};
Point(55) = {-0.074796, 0.739253, 0, 1.0};
Point(56) = {-0.074721, 0.739661, 0, 1.0};
Point(57) = {-0.074375, 0.740015, 0, 1.0};
Point(58) = {-0.073781, 0.740374, 0, 1.0};
Point(59) = {-0.072960, 0.740727, 0, 1.0};
Point(60) = {-0.071920, 0.741069, 0, 1.0};
Point(61) = {-0.070665, 0.741395, 0, 1.0};
Point(62) = {-0.069197, 0.741706, 0, 1.0};
Point(63) = {-0.067516, 0.741998, 0, 1.0};
Point(64) = {-0.065629, 0.742272, 0, 1.0};
Point(65) = {-0.063537, 0.742530, 0, 1.0};
Point(66) = {-0.061245, 0.742770, 0, 1.0};
Point(67) = {-0.058758, 0.742994, 0, 1.0};
Point(68) = {-0.056080, 0.743204, 0, 1.0};
Point(69) = {-0.053219, 0.743399, 0, 1.0};
Point(70) = {-0.050183, 0.743584, 0, 1.0};
Point(71) = {-0.046977, 0.743756, 0, 1.0};
Point(72) = {-0.043611, 0.743922, 0, 1.0};
Point(73) = {-0.040094, 0.744081, 0, 1.0};
Point(74) = {-0.036435, 0.744236, 0, 1.0};
Point(75) = {-0.032645, 0.744388, 0, 1.0};
Point(76) = {-0.028735, 0.744539, 0, 1.0};
Point(77) = {-0.024718, 0.744691, 0, 1.0};
Point(78) = {-0.020604, 0.744846, 0, 1.0};
Point(79) = {-0.016409, 0.745005, 0, 1.0};
Point(80) = {-0.012143, 0.745170, 0, 1.0};
Point(81) = {-0.007821, 0.745338, 0, 1.0};
Point(82) = {-0.003457, 0.745515, 0, 1.0};
Point(83) = {0.000938, 0.745696, 0, 1.0};
Point(84) = {0.005347, 0.745885, 0, 1.0};
Point(85) = {0.009760, 0.746078, 0, 1.0};
Point(86) = {0.014159, 0.746280, 0, 1.0};
Point(87) = {0.018533, 0.746486, 0, 1.0};
Point(88) = {0.022869, 0.746699, 0, 1.0};
Point(89) = {0.027153, 0.746916, 0, 1.0};
Point(90) = {0.031370, 0.747138, 0, 1.0};
Point(91) = {0.035509, 0.747364, 0, 1.0};
Point(92) = {0.039558, 0.747595, 0, 1.0};
Point(93) = {0.043500, 0.747825, 0, 1.0};
Point(94) = {0.047327, 0.748057, 0, 1.0};
Point(95) = {0.051026, 0.748287, 0, 1.0};
Point(96) = {0.054586, 0.748515, 0, 1.0};
Point(97) = {0.057997, 0.748742, 0, 1.0};
Point(98) = {0.061249, 0.748965, 0, 1.0};
Point(99) = {0.064331, 0.749185, 0, 1.0};
Point(100) = {0.067230, 0.749401, 0, 1.0};
Point(101) = {0.069941, 0.749609, 0, 1.0};
Point(102) = {0.072449, 0.749808, 0, 1.0};
Point(103) = {0.074819, 0.750000, 0, 1.0};
Point(104) = {-0.074928, -0.748532, 0, 1.0};
Point(105) = {-0.073173, -0.748081, 0, 1.0};
Point(106) = {-0.070860, -0.747484, 0, 1.0};
Point(107) = {-0.068374, -0.746840, 0, 1.0};
Point(108) = {-0.065733, -0.746155, 0, 1.0};
Point(109) = {-0.062947, -0.745433, 0, 1.0};
Point(110) = {-0.060026, -0.744683, 0, 1.0};
Point(111) = {-0.056975, -0.743916, 0, 1.0};
Point(112) = {-0.053798, -0.743130, 0, 1.0};
Point(113) = {-0.050512, -0.742330, 0, 1.0};
Point(114) = {-0.047124, -0.741525, 0, 1.0};
Point(115) = {-0.043642, -0.740720, 0, 1.0};
Point(116) = {-0.040069, -0.739917, 0, 1.0};
Point(117) = {-0.036421, -0.739119, 0, 1.0};
Point(118) = {-0.032707, -0.738333, 0, 1.0};
Point(119) = {-0.028935, -0.737562, 0, 1.0};
Point(120) = {-0.025114, -0.736810, 0, 1.0};
Point(121) = {-0.021254, -0.736079, 0, 1.0};
Point(122) = {-0.017368, -0.735377, 0, 1.0};
Point(123) = {-0.013463, -0.734708, 0, 1.0};
Point(124) = {-0.009544, -0.734074, 0, 1.0};
Point(125) = {-0.005622, -0.733473, 0, 1.0};
Point(126) = {-0.001712, -0.732914, 0, 1.0};
Point(127) = {0.002184, -0.732399, 0, 1.0};
Point(128) = {0.006056, -0.731930, 0, 1.0};
Point(129) = {0.009895, -0.731504, 0, 1.0};
Point(130) = {0.013687, -0.731127, 0, 1.0};
Point(131) = {0.017428, -0.730801, 0, 1.0};
Point(132) = {0.021108, -0.730525, 0, 1.0};
Point(133) = {0.024719, -0.730302, 0, 1.0};
Point(134) = {0.028250, -0.730132, 0, 1.0};
Point(135) = {0.031693, -0.730020, 0, 1.0};
Point(136) = {0.035050, -0.729963, 0, 1.0};
Point(137) = {0.038305, -0.729960, 0, 1.0};
Point(138) = {0.041451, -0.730012, 0, 1.0};
Point(139) = {0.044485, -0.730122, 0, 1.0};
Point(140) = {0.047403, -0.730287, 0, 1.0};
Point(141) = {0.050197, -0.730501, 0, 1.0};
Point(142) = {0.052857, -0.730766, 0, 1.0};
Point(143) = {0.055383, -0.731083, 0, 1.0};
Point(144) = {0.057770, -0.731447, 0, 1.0};
Point(145) = {0.060015, -0.731853, 0, 1.0};
Point(146) = {0.062105, -0.732301, 0, 1.0};
Point(147) = {0.064044, -0.732792, 0, 1.0};
Point(148) = {0.065831, -0.733319, 0, 1.0};
Point(149) = {0.067463, -0.733875, 0, 1.0};
Point(150) = {0.068932, -0.734455, 0, 1.0};
Point(151) = {0.070237, -0.735061, 0, 1.0};
Point(152) = {0.071385, -0.735685, 0, 1.0};
Point(153) = {0.072370, -0.736313, 0, 1.0};
Point(154) = {0.073186, -0.736940, 0, 1.0};
Point(155) = {0.073833, -0.737562, 0, 1.0};
Point(156) = {0.074320, -0.738171, 0, 1.0};
Point(157) = {0.074644, -0.738743, 0, 1.0};
Point(158) = {0.074796, -0.739253, 0, 1.0};
Point(159) = {0.074721, -0.739661, 0, 1.0};
Point(160) = {0.074375, -0.740015, 0, 1.0};
Point(161) = {0.073781, -0.740374, 0, 1.0};
Point(162) = {0.072960, -0.740727, 0, 1.0};
Point(163) = {0.071920, -0.741069, 0, 1.0};
Point(164) = {0.070665, -0.741395, 0, 1.0};
Point(165) = {0.069197, -0.741706, 0, 1.0};
Point(166) = {0.067516, -0.741998, 0, 1.0};
Point(167) = {0.065629, -0.742272, 0, 1.0};
Point(168) = {0.063537, -0.742530, 0, 1.0};
Point(169) = {0.061245, -0.742770, 0, 1.0};
Point(170) = {0.058758, -0.742994, 0, 1.0};
Point(171) = {0.056080, -0.743204, 0, 1.0};
Point(172) = {0.053219, -0.743399, 0, 1.0};
Point(173) = {0.050183, -0.743584, 0, 1.0};
Point(174) = {0.046977, -0.743756, 0, 1.0};
Point(175) = {0.043611, -0.743922, 0, 1.0};
Point(176) = {0.040094, -0.744081, 0, 1.0};
Point(177) = {0.036435, -0.744236, 0, 1.0};
Point(178) = {0.032645, -0.744388, 0, 1.0};
Point(179) = {0.028735, -0.744539, 0, 1.0};
Point(180) = {0.024718, -0.744691, 0, 1.0};
Point(181) = {0.020604, -0.744846, 0, 1.0};
Point(182) = {0.016409, -0.745005, 0, 1.0};
Point(183) = {0.012143, -0.745170, 0, 1.0};
Point(184) = {0.007821, -0.745338, 0, 1.0};
Point(185) = {0.003457, -0.745515, 0, 1.0};
Point(186) = {-0.000938, -0.745696, 0, 1.0};
Point(187) = {-0.005347, -0.745885, 0, 1.0};
Point(188) = {-0.009760, -0.746078, 0, 1.0};
Point(189) = {-0.014159, -0.746280, 0, 1.0};
Point(190) = {-0.018533, -0.746486, 0, 1.0};
Point(191) = {-0.022869, -0.746699, 0, 1.0};
Point(192) = {-0.027153, -0.746916, 0, 1.0};
Point(193) = {-0.031370, -0.747138, 0, 1.0};
Point(194) = {-0.035509, -0.747364, 0, 1.0};
Point(195) = {-0.039558, -0.747595, 0, 1.0};
Point(196) = {-0.043500, -0.747825, 0, 1.0};
Point(197) = {-0.047327, -0.748057, 0, 1.0};
Point(198) = {-0.051026, -0.748287, 0, 1.0};
Point(199) = {-0.054586, -0.748515, 0, 1.0};
Point(200) = {-0.057997, -0.748742, 0, 1.0};
Point(201) = {-0.061249, -0.748965, 0, 1.0};
Point(202) = {-0.064331, -0.749185, 0, 1.0};
Point(203) = {-0.067230, -0.749401, 0, 1.0};
Point(204) = {-0.069941, -0.749609, 0, 1.0};
Point(205) = {-0.072449, -0.749808, 0, 1.0};
Point(206) = {-0.074819, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:32};
Spline(2) = {32:74};
Spline(3) = {74:103};
Spline(4) = {103,1};

// Lines: second blade (splines 5-8)
Spline(5) = {104:135};
Spline(6) = {135:177};
Spline(7) = {177:206};
Spline(8) = {206,104};

// Outer domain (points 20001-4 and lines)
Point(207) = {-13.50000000, -15.00000000, 0, 1.0};
Point(208) = {-13.50000000, 15.00000000, 0, 1.0};
Point(209) = {13.50000000, 15.00000000, 0, 1.0};
Point(210) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {207, 208};
Line(12) = {208, 209};
Line(13) = {209, 210};
Line(14) = {207, 210};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
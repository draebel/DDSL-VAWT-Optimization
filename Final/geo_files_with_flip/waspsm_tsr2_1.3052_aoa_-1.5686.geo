SetFactory("OpenCASCADE");

Point(1) = {0.075001, 0.748497, 0, 1.0};
Point(2) = {0.073209, 0.748186, 0, 1.0};
Point(3) = {0.070685, 0.747766, 0, 1.0};
Point(4) = {0.067665, 0.747203, 0, 1.0};
Point(5) = {0.064174, 0.746524, 0, 1.0};
Point(6) = {0.060249, 0.745774, 0, 1.0};
Point(7) = {0.055929, 0.744976, 0, 1.0};
Point(8) = {0.051259, 0.744151, 0, 1.0};
Point(9) = {0.046282, 0.743305, 0, 1.0};
Point(10) = {0.041044, 0.742445, 0, 1.0};
Point(11) = {0.035590, 0.741581, 0, 1.0};
Point(12) = {0.029965, 0.740728, 0, 1.0};
Point(13) = {0.024215, 0.739898, 0, 1.0};
Point(14) = {0.018386, 0.739105, 0, 1.0};
Point(15) = {0.012517, 0.738363, 0, 1.0};
Point(16) = {0.006652, 0.737680, 0, 1.0};
Point(17) = {0.000791, 0.737058, 0, 1.0};
Point(18) = {-0.005066, 0.736500, 0, 1.0};
Point(19) = {-0.010875, 0.736019, 0, 1.0};
Point(20) = {-0.016615, 0.735623, 0, 1.0};
Point(21) = {-0.022253, 0.735326, 0, 1.0};
Point(22) = {-0.027760, 0.735140, 0, 1.0};
Point(23) = {-0.033107, 0.735078, 0, 1.0};
Point(24) = {-0.038261, 0.735146, 0, 1.0};
Point(25) = {-0.043190, 0.735353, 0, 1.0};
Point(26) = {-0.047868, 0.735699, 0, 1.0};
Point(27) = {-0.052260, 0.736183, 0, 1.0};
Point(28) = {-0.056338, 0.736799, 0, 1.0};
Point(29) = {-0.060073, 0.737550, 0, 1.0};
Point(30) = {-0.063441, 0.738436, 0, 1.0};
Point(31) = {-0.066423, 0.739442, 0, 1.0};
Point(32) = {-0.068994, 0.740525, 0, 1.0};
Point(33) = {-0.071137, 0.741632, 0, 1.0};
Point(34) = {-0.072846, 0.742733, 0, 1.0};
Point(35) = {-0.074086, 0.743801, 0, 1.0};
Point(36) = {-0.074803, 0.744801, 0, 1.0};
Point(37) = {-0.074972, 0.745467, 0, 1.0};
Point(38) = {-0.074838, 0.746071, 0, 1.0};
Point(39) = {-0.074168, 0.746800, 0, 1.0};
Point(40) = {-0.072974, 0.747409, 0, 1.0};
Point(41) = {-0.071309, 0.747910, 0, 1.0};
Point(42) = {-0.069207, 0.748318, 0, 1.0};
Point(43) = {-0.066676, 0.748655, 0, 1.0};
Point(44) = {-0.063729, 0.748921, 0, 1.0};
Point(45) = {-0.060390, 0.749124, 0, 1.0};
Point(46) = {-0.056679, 0.749272, 0, 1.0};
Point(47) = {-0.052621, 0.749371, 0, 1.0};
Point(48) = {-0.048244, 0.749426, 0, 1.0};
Point(49) = {-0.043576, 0.749447, 0, 1.0};
Point(50) = {-0.038652, 0.749439, 0, 1.0};
Point(51) = {-0.033500, 0.749408, 0, 1.0};
Point(52) = {-0.028149, 0.749362, 0, 1.0};
Point(53) = {-0.022636, 0.749301, 0, 1.0};
Point(54) = {-0.016987, 0.749232, 0, 1.0};
Point(55) = {-0.011234, 0.749155, 0, 1.0};
Point(56) = {-0.005411, 0.749077, 0, 1.0};
Point(57) = {0.000463, 0.749004, 0, 1.0};
Point(58) = {0.006343, 0.748942, 0, 1.0};
Point(59) = {0.012229, 0.748899, 0, 1.0};
Point(60) = {0.018118, 0.748878, 0, 1.0};
Point(61) = {0.023969, 0.748883, 0, 1.0};
Point(62) = {0.029740, 0.748914, 0, 1.0};
Point(63) = {0.035387, 0.748966, 0, 1.0};
Point(64) = {0.040864, 0.749033, 0, 1.0};
Point(65) = {0.046123, 0.749114, 0, 1.0};
Point(66) = {0.051120, 0.749210, 0, 1.0};
Point(67) = {0.055810, 0.749321, 0, 1.0};
Point(68) = {0.060149, 0.749445, 0, 1.0};
Point(69) = {0.064090, 0.749574, 0, 1.0};
Point(70) = {0.067596, 0.749702, 0, 1.0};
Point(71) = {0.070628, 0.749836, 0, 1.0};
Point(72) = {0.073161, 0.749954, 0, 1.0};
Point(73) = {0.074960, 0.750000, 0, 1.0};
Point(74) = {-0.075001, -0.748497, 0, 1.0};
Point(75) = {-0.073209, -0.748186, 0, 1.0};
Point(76) = {-0.070685, -0.747766, 0, 1.0};
Point(77) = {-0.067665, -0.747203, 0, 1.0};
Point(78) = {-0.064174, -0.746524, 0, 1.0};
Point(79) = {-0.060249, -0.745774, 0, 1.0};
Point(80) = {-0.055929, -0.744976, 0, 1.0};
Point(81) = {-0.051259, -0.744151, 0, 1.0};
Point(82) = {-0.046282, -0.743305, 0, 1.0};
Point(83) = {-0.041044, -0.742445, 0, 1.0};
Point(84) = {-0.035590, -0.741581, 0, 1.0};
Point(85) = {-0.029965, -0.740728, 0, 1.0};
Point(86) = {-0.024215, -0.739898, 0, 1.0};
Point(87) = {-0.018386, -0.739105, 0, 1.0};
Point(88) = {-0.012517, -0.738363, 0, 1.0};
Point(89) = {-0.006652, -0.737680, 0, 1.0};
Point(90) = {-0.000791, -0.737058, 0, 1.0};
Point(91) = {0.005066, -0.736500, 0, 1.0};
Point(92) = {0.010875, -0.736019, 0, 1.0};
Point(93) = {0.016615, -0.735623, 0, 1.0};
Point(94) = {0.022253, -0.735326, 0, 1.0};
Point(95) = {0.027760, -0.735140, 0, 1.0};
Point(96) = {0.033107, -0.735078, 0, 1.0};
Point(97) = {0.038261, -0.735146, 0, 1.0};
Point(98) = {0.043190, -0.735353, 0, 1.0};
Point(99) = {0.047868, -0.735699, 0, 1.0};
Point(100) = {0.052260, -0.736183, 0, 1.0};
Point(101) = {0.056338, -0.736799, 0, 1.0};
Point(102) = {0.060073, -0.737550, 0, 1.0};
Point(103) = {0.063441, -0.738436, 0, 1.0};
Point(104) = {0.066423, -0.739442, 0, 1.0};
Point(105) = {0.068994, -0.740525, 0, 1.0};
Point(106) = {0.071137, -0.741632, 0, 1.0};
Point(107) = {0.072846, -0.742733, 0, 1.0};
Point(108) = {0.074086, -0.743801, 0, 1.0};
Point(109) = {0.074803, -0.744801, 0, 1.0};
Point(110) = {0.074972, -0.745467, 0, 1.0};
Point(111) = {0.074838, -0.746071, 0, 1.0};
Point(112) = {0.074168, -0.746800, 0, 1.0};
Point(113) = {0.072974, -0.747409, 0, 1.0};
Point(114) = {0.071309, -0.747910, 0, 1.0};
Point(115) = {0.069207, -0.748318, 0, 1.0};
Point(116) = {0.066676, -0.748655, 0, 1.0};
Point(117) = {0.063729, -0.748921, 0, 1.0};
Point(118) = {0.060390, -0.749124, 0, 1.0};
Point(119) = {0.056679, -0.749272, 0, 1.0};
Point(120) = {0.052621, -0.749371, 0, 1.0};
Point(121) = {0.048244, -0.749426, 0, 1.0};
Point(122) = {0.043576, -0.749447, 0, 1.0};
Point(123) = {0.038652, -0.749439, 0, 1.0};
Point(124) = {0.033500, -0.749408, 0, 1.0};
Point(125) = {0.028149, -0.749362, 0, 1.0};
Point(126) = {0.022636, -0.749301, 0, 1.0};
Point(127) = {0.016987, -0.749232, 0, 1.0};
Point(128) = {0.011234, -0.749155, 0, 1.0};
Point(129) = {0.005411, -0.749077, 0, 1.0};
Point(130) = {-0.000463, -0.749004, 0, 1.0};
Point(131) = {-0.006343, -0.748942, 0, 1.0};
Point(132) = {-0.012229, -0.748899, 0, 1.0};
Point(133) = {-0.018118, -0.748878, 0, 1.0};
Point(134) = {-0.023969, -0.748883, 0, 1.0};
Point(135) = {-0.029740, -0.748914, 0, 1.0};
Point(136) = {-0.035387, -0.748966, 0, 1.0};
Point(137) = {-0.040864, -0.749033, 0, 1.0};
Point(138) = {-0.046123, -0.749114, 0, 1.0};
Point(139) = {-0.051120, -0.749210, 0, 1.0};
Point(140) = {-0.055810, -0.749321, 0, 1.0};
Point(141) = {-0.060149, -0.749445, 0, 1.0};
Point(142) = {-0.064090, -0.749574, 0, 1.0};
Point(143) = {-0.067596, -0.749702, 0, 1.0};
Point(144) = {-0.070628, -0.749836, 0, 1.0};
Point(145) = {-0.073161, -0.749954, 0, 1.0};
Point(146) = {-0.074960, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:23};
Spline(2) = {23:51};
Spline(3) = {51:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:96};
Spline(6) = {96:124};
Spline(7) = {124:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
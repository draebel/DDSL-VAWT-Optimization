SetFactory("OpenCASCADE");

Point(1) = {0.074578, 0.732214, 0, 1.0};
Point(2) = {0.074426, 0.732224, 0, 1.0};
Point(3) = {0.070420, 0.731671, 0, 1.0};
Point(4) = {0.066417, 0.731148, 0, 1.0};
Point(5) = {0.062415, 0.730633, 0, 1.0};
Point(6) = {0.058415, 0.730139, 0, 1.0};
Point(7) = {0.054415, 0.729645, 0, 1.0};
Point(8) = {0.050415, 0.729154, 0, 1.0};
Point(9) = {0.042422, 0.728257, 0, 1.0};
Point(10) = {0.034437, 0.727447, 0, 1.0};
Point(11) = {0.026467, 0.726816, 0, 1.0};
Point(12) = {0.018511, 0.726348, 0, 1.0};
Point(13) = {0.010573, 0.726092, 0, 1.0};
Point(14) = {0.002655, 0.726063, 0, 1.0};
Point(15) = {-0.005243, 0.726270, 0, 1.0};
Point(16) = {-0.013122, 0.726698, 0, 1.0};
Point(17) = {-0.017055, 0.726991, 0, 1.0};
Point(18) = {-0.020983, 0.727340, 0, 1.0};
Point(19) = {-0.024905, 0.727753, 0, 1.0};
Point(20) = {-0.028821, 0.728239, 0, 1.0};
Point(21) = {-0.032732, 0.728792, 0, 1.0};
Point(22) = {-0.036637, 0.729409, 0, 1.0};
Point(23) = {-0.040536, 0.730092, 0, 1.0};
Point(24) = {-0.044427, 0.730867, 0, 1.0};
Point(25) = {-0.048309, 0.731749, 0, 1.0};
Point(26) = {-0.052181, 0.732750, 0, 1.0};
Point(27) = {-0.056041, 0.733890, 0, 1.0};
Point(28) = {-0.059884, 0.735223, 0, 1.0};
Point(29) = {-0.063706, 0.736808, 0, 1.0};
Point(30) = {-0.067496, 0.738769, 0, 1.0};
Point(31) = {-0.069373, 0.739951, 0, 1.0};
Point(32) = {-0.071233, 0.741341, 0, 1.0};
Point(33) = {-0.072152, 0.742153, 0, 1.0};
Point(34) = {-0.073061, 0.743100, 0, 1.0};
Point(35) = {-0.073597, 0.743768, 0, 1.0};
Point(36) = {-0.074118, 0.744612, 0, 1.0};
Point(37) = {-0.074448, 0.745377, 0, 1.0};
Point(38) = {-0.074725, 0.746762, 0, 1.0};
Point(39) = {-0.074265, 0.747514, 0, 1.0};
Point(40) = {-0.073841, 0.747844, 0, 1.0};
Point(41) = {-0.073215, 0.748219, 0, 1.0};
Point(42) = {-0.072596, 0.748514, 0, 1.0};
Point(43) = {-0.071574, 0.748885, 0, 1.0};
Point(44) = {-0.070563, 0.749136, 0, 1.0};
Point(45) = {-0.068554, 0.749484, 0, 1.0};
Point(46) = {-0.066557, 0.749696, 0, 1.0};
Point(47) = {-0.062580, 0.749924, 0, 1.0};
Point(48) = {-0.058615, 0.750000, 0, 1.0};
Point(49) = {-0.054659, 0.749986, 0, 1.0};
Point(50) = {-0.050708, 0.749904, 0, 1.0};
Point(51) = {-0.046763, 0.749756, 0, 1.0};
Point(52) = {-0.042822, 0.749556, 0, 1.0};
Point(53) = {-0.038885, 0.749317, 0, 1.0};
Point(54) = {-0.034950, 0.749046, 0, 1.0};
Point(55) = {-0.031018, 0.748746, 0, 1.0};
Point(56) = {-0.027087, 0.748429, 0, 1.0};
Point(57) = {-0.023158, 0.748098, 0, 1.0};
Point(58) = {-0.019230, 0.747750, 0, 1.0};
Point(59) = {-0.015307, 0.747345, 0, 1.0};
Point(60) = {-0.011389, 0.746874, 0, 1.0};
Point(61) = {-0.003567, 0.745785, 0, 1.0};
Point(62) = {0.004241, 0.744527, 0, 1.0};
Point(63) = {0.012039, 0.743164, 0, 1.0};
Point(64) = {0.019832, 0.741732, 0, 1.0};
Point(65) = {0.027624, 0.740289, 0, 1.0};
Point(66) = {0.035418, 0.738872, 0, 1.0};
Point(67) = {0.043217, 0.737509, 0, 1.0};
Point(68) = {0.051024, 0.736245, 0, 1.0};
Point(69) = {0.054932, 0.735673, 0, 1.0};
Point(70) = {0.058846, 0.735157, 0, 1.0};
Point(71) = {0.062766, 0.734720, 0, 1.0};
Point(72) = {0.066691, 0.734332, 0, 1.0};
Point(73) = {0.070622, 0.734022, 0, 1.0};
Point(74) = {0.074553, 0.733706, 0, 1.0};
Point(75) = {0.074705, 0.733695, 0, 1.0};
Point(76) = {-0.074578, -0.732214, 0, 1.0};
Point(77) = {-0.074426, -0.732224, 0, 1.0};
Point(78) = {-0.070420, -0.731671, 0, 1.0};
Point(79) = {-0.066417, -0.731148, 0, 1.0};
Point(80) = {-0.062415, -0.730633, 0, 1.0};
Point(81) = {-0.058415, -0.730139, 0, 1.0};
Point(82) = {-0.054415, -0.729645, 0, 1.0};
Point(83) = {-0.050415, -0.729154, 0, 1.0};
Point(84) = {-0.042422, -0.728257, 0, 1.0};
Point(85) = {-0.034437, -0.727447, 0, 1.0};
Point(86) = {-0.026467, -0.726816, 0, 1.0};
Point(87) = {-0.018511, -0.726348, 0, 1.0};
Point(88) = {-0.010573, -0.726092, 0, 1.0};
Point(89) = {-0.002655, -0.726063, 0, 1.0};
Point(90) = {0.005243, -0.726270, 0, 1.0};
Point(91) = {0.013122, -0.726698, 0, 1.0};
Point(92) = {0.017055, -0.726991, 0, 1.0};
Point(93) = {0.020983, -0.727340, 0, 1.0};
Point(94) = {0.024905, -0.727753, 0, 1.0};
Point(95) = {0.028821, -0.728239, 0, 1.0};
Point(96) = {0.032732, -0.728792, 0, 1.0};
Point(97) = {0.036637, -0.729409, 0, 1.0};
Point(98) = {0.040536, -0.730092, 0, 1.0};
Point(99) = {0.044427, -0.730867, 0, 1.0};
Point(100) = {0.048309, -0.731749, 0, 1.0};
Point(101) = {0.052181, -0.732750, 0, 1.0};
Point(102) = {0.056041, -0.733890, 0, 1.0};
Point(103) = {0.059884, -0.735223, 0, 1.0};
Point(104) = {0.063706, -0.736808, 0, 1.0};
Point(105) = {0.067496, -0.738769, 0, 1.0};
Point(106) = {0.069373, -0.739951, 0, 1.0};
Point(107) = {0.071233, -0.741341, 0, 1.0};
Point(108) = {0.072152, -0.742153, 0, 1.0};
Point(109) = {0.073061, -0.743100, 0, 1.0};
Point(110) = {0.073597, -0.743768, 0, 1.0};
Point(111) = {0.074118, -0.744612, 0, 1.0};
Point(112) = {0.074448, -0.745377, 0, 1.0};
Point(113) = {0.074725, -0.746762, 0, 1.0};
Point(114) = {0.074265, -0.747514, 0, 1.0};
Point(115) = {0.073841, -0.747844, 0, 1.0};
Point(116) = {0.073215, -0.748219, 0, 1.0};
Point(117) = {0.072596, -0.748514, 0, 1.0};
Point(118) = {0.071574, -0.748885, 0, 1.0};
Point(119) = {0.070563, -0.749136, 0, 1.0};
Point(120) = {0.068554, -0.749484, 0, 1.0};
Point(121) = {0.066557, -0.749696, 0, 1.0};
Point(122) = {0.062580, -0.749924, 0, 1.0};
Point(123) = {0.058615, -0.750000, 0, 1.0};
Point(124) = {0.054659, -0.749986, 0, 1.0};
Point(125) = {0.050708, -0.749904, 0, 1.0};
Point(126) = {0.046763, -0.749756, 0, 1.0};
Point(127) = {0.042822, -0.749556, 0, 1.0};
Point(128) = {0.038885, -0.749317, 0, 1.0};
Point(129) = {0.034950, -0.749046, 0, 1.0};
Point(130) = {0.031018, -0.748746, 0, 1.0};
Point(131) = {0.027087, -0.748429, 0, 1.0};
Point(132) = {0.023158, -0.748098, 0, 1.0};
Point(133) = {0.019230, -0.747750, 0, 1.0};
Point(134) = {0.015307, -0.747345, 0, 1.0};
Point(135) = {0.011389, -0.746874, 0, 1.0};
Point(136) = {0.003567, -0.745785, 0, 1.0};
Point(137) = {-0.004241, -0.744527, 0, 1.0};
Point(138) = {-0.012039, -0.743164, 0, 1.0};
Point(139) = {-0.019832, -0.741732, 0, 1.0};
Point(140) = {-0.027624, -0.740289, 0, 1.0};
Point(141) = {-0.035418, -0.738872, 0, 1.0};
Point(142) = {-0.043217, -0.737509, 0, 1.0};
Point(143) = {-0.051024, -0.736245, 0, 1.0};
Point(144) = {-0.054932, -0.735673, 0, 1.0};
Point(145) = {-0.058846, -0.735157, 0, 1.0};
Point(146) = {-0.062766, -0.734720, 0, 1.0};
Point(147) = {-0.066691, -0.734332, 0, 1.0};
Point(148) = {-0.070622, -0.734022, 0, 1.0};
Point(149) = {-0.074553, -0.733706, 0, 1.0};
Point(150) = {-0.074705, -0.733695, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:97};
Spline(6) = {97:130};
Spline(7) = {130:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
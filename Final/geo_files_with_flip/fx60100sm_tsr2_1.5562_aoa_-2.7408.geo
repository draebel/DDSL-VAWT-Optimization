SetFactory("OpenCASCADE");

Point(1) = {0.075058, 0.747956, 0, 1.0};
Point(2) = {0.074019, 0.747725, 0, 1.0};
Point(3) = {0.066928, 0.746023, 0, 1.0};
Point(4) = {0.058839, 0.744174, 0, 1.0};
Point(5) = {0.049887, 0.742267, 0, 1.0};
Point(6) = {0.040221, 0.740394, 0, 1.0};
Point(7) = {0.030006, 0.738634, 0, 1.0};
Point(8) = {0.019413, 0.737051, 0, 1.0};
Point(9) = {0.008625, 0.735703, 0, 1.0};
Point(10) = {-0.002177, 0.734632, 0, 1.0};
Point(11) = {-0.012809, 0.733882, 0, 1.0};
Point(12) = {-0.018005, 0.733640, 0, 1.0};
Point(13) = {-0.023090, 0.733492, 0, 1.0};
Point(14) = {-0.028043, 0.733439, 0, 1.0};
Point(15) = {-0.032845, 0.733484, 0, 1.0};
Point(16) = {-0.037473, 0.733623, 0, 1.0};
Point(17) = {-0.041907, 0.733855, 0, 1.0};
Point(18) = {-0.046128, 0.734178, 0, 1.0};
Point(19) = {-0.050119, 0.734586, 0, 1.0};
Point(20) = {-0.053862, 0.735073, 0, 1.0};
Point(21) = {-0.057342, 0.735634, 0, 1.0};
Point(22) = {-0.060540, 0.736257, 0, 1.0};
Point(23) = {-0.063446, 0.736940, 0, 1.0};
Point(24) = {-0.066048, 0.737680, 0, 1.0};
Point(25) = {-0.068331, 0.738480, 0, 1.0};
Point(26) = {-0.070290, 0.739351, 0, 1.0};
Point(27) = {-0.071913, 0.740281, 0, 1.0};
Point(28) = {-0.073195, 0.741244, 0, 1.0};
Point(29) = {-0.074126, 0.742184, 0, 1.0};
Point(30) = {-0.074701, 0.743045, 0, 1.0};
Point(31) = {-0.074914, 0.743778, 0, 1.0};
Point(32) = {-0.074765, 0.744380, 0, 1.0};
Point(33) = {-0.074255, 0.744882, 0, 1.0};
Point(34) = {-0.073391, 0.745336, 0, 1.0};
Point(35) = {-0.072177, 0.745793, 0, 1.0};
Point(36) = {-0.070622, 0.746273, 0, 1.0};
Point(37) = {-0.068728, 0.746775, 0, 1.0};
Point(38) = {-0.066507, 0.747275, 0, 1.0};
Point(39) = {-0.063964, 0.747753, 0, 1.0};
Point(40) = {-0.061111, 0.748192, 0, 1.0};
Point(41) = {-0.057962, 0.748592, 0, 1.0};
Point(42) = {-0.054527, 0.748950, 0, 1.0};
Point(43) = {-0.050822, 0.749265, 0, 1.0};
Point(44) = {-0.046863, 0.749531, 0, 1.0};
Point(45) = {-0.042667, 0.749745, 0, 1.0};
Point(46) = {-0.038253, 0.749898, 0, 1.0};
Point(47) = {-0.033635, 0.749985, 0, 1.0};
Point(48) = {-0.028836, 0.750000, 0, 1.0};
Point(49) = {-0.023878, 0.749943, 0, 1.0};
Point(50) = {-0.018779, 0.749818, 0, 1.0};
Point(51) = {-0.013564, 0.749640, 0, 1.0};
Point(52) = {-0.002873, 0.749174, 0, 1.0};
Point(53) = {0.008005, 0.748655, 0, 1.0};
Point(54) = {0.018880, 0.748185, 0, 1.0};
Point(55) = {0.029565, 0.747848, 0, 1.0};
Point(56) = {0.039871, 0.747711, 0, 1.0};
Point(57) = {0.049622, 0.747806, 0, 1.0};
Point(58) = {0.058650, 0.748135, 0, 1.0};
Point(59) = {0.066801, 0.748668, 0, 1.0};
Point(60) = {0.073942, 0.749344, 0, 1.0};
Point(61) = {0.074986, 0.749461, 0, 1.0};
Point(62) = {-0.075058, -0.747956, 0, 1.0};
Point(63) = {-0.074019, -0.747725, 0, 1.0};
Point(64) = {-0.066928, -0.746023, 0, 1.0};
Point(65) = {-0.058839, -0.744174, 0, 1.0};
Point(66) = {-0.049887, -0.742267, 0, 1.0};
Point(67) = {-0.040221, -0.740394, 0, 1.0};
Point(68) = {-0.030006, -0.738634, 0, 1.0};
Point(69) = {-0.019413, -0.737051, 0, 1.0};
Point(70) = {-0.008625, -0.735703, 0, 1.0};
Point(71) = {0.002177, -0.734632, 0, 1.0};
Point(72) = {0.012809, -0.733882, 0, 1.0};
Point(73) = {0.018005, -0.733640, 0, 1.0};
Point(74) = {0.023090, -0.733492, 0, 1.0};
Point(75) = {0.028043, -0.733439, 0, 1.0};
Point(76) = {0.032845, -0.733484, 0, 1.0};
Point(77) = {0.037473, -0.733623, 0, 1.0};
Point(78) = {0.041907, -0.733855, 0, 1.0};
Point(79) = {0.046128, -0.734178, 0, 1.0};
Point(80) = {0.050119, -0.734586, 0, 1.0};
Point(81) = {0.053862, -0.735073, 0, 1.0};
Point(82) = {0.057342, -0.735634, 0, 1.0};
Point(83) = {0.060540, -0.736257, 0, 1.0};
Point(84) = {0.063446, -0.736940, 0, 1.0};
Point(85) = {0.066048, -0.737680, 0, 1.0};
Point(86) = {0.068331, -0.738480, 0, 1.0};
Point(87) = {0.070290, -0.739351, 0, 1.0};
Point(88) = {0.071913, -0.740281, 0, 1.0};
Point(89) = {0.073195, -0.741244, 0, 1.0};
Point(90) = {0.074126, -0.742184, 0, 1.0};
Point(91) = {0.074701, -0.743045, 0, 1.0};
Point(92) = {0.074914, -0.743778, 0, 1.0};
Point(93) = {0.074765, -0.744380, 0, 1.0};
Point(94) = {0.074255, -0.744882, 0, 1.0};
Point(95) = {0.073391, -0.745336, 0, 1.0};
Point(96) = {0.072177, -0.745793, 0, 1.0};
Point(97) = {0.070622, -0.746273, 0, 1.0};
Point(98) = {0.068728, -0.746775, 0, 1.0};
Point(99) = {0.066507, -0.747275, 0, 1.0};
Point(100) = {0.063964, -0.747753, 0, 1.0};
Point(101) = {0.061111, -0.748192, 0, 1.0};
Point(102) = {0.057962, -0.748592, 0, 1.0};
Point(103) = {0.054527, -0.748950, 0, 1.0};
Point(104) = {0.050822, -0.749265, 0, 1.0};
Point(105) = {0.046863, -0.749531, 0, 1.0};
Point(106) = {0.042667, -0.749745, 0, 1.0};
Point(107) = {0.038253, -0.749898, 0, 1.0};
Point(108) = {0.033635, -0.749985, 0, 1.0};
Point(109) = {0.028836, -0.750000, 0, 1.0};
Point(110) = {0.023878, -0.749943, 0, 1.0};
Point(111) = {0.018779, -0.749818, 0, 1.0};
Point(112) = {0.013564, -0.749640, 0, 1.0};
Point(113) = {0.002873, -0.749174, 0, 1.0};
Point(114) = {-0.008005, -0.748655, 0, 1.0};
Point(115) = {-0.018880, -0.748185, 0, 1.0};
Point(116) = {-0.029565, -0.747848, 0, 1.0};
Point(117) = {-0.039871, -0.747711, 0, 1.0};
Point(118) = {-0.049622, -0.747806, 0, 1.0};
Point(119) = {-0.058650, -0.748135, 0, 1.0};
Point(120) = {-0.066801, -0.748668, 0, 1.0};
Point(121) = {-0.073942, -0.749344, 0, 1.0};
Point(122) = {-0.074986, -0.749461, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:15};
Spline(2) = {15:47};
Spline(3) = {47:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:76};
Spline(6) = {76:108};
Spline(7) = {108:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073682, 0.720447, 0, 1.0};
Point(2) = {0.072352, 0.720405, 0, 1.0};
Point(3) = {0.067111, 0.720160, 0, 1.0};
Point(4) = {0.060734, 0.719870, 0, 1.0};
Point(5) = {0.057150, 0.719705, 0, 1.0};
Point(6) = {0.053322, 0.719514, 0, 1.0};
Point(7) = {0.049269, 0.719316, 0, 1.0};
Point(8) = {0.045004, 0.719092, 0, 1.0};
Point(9) = {0.040547, 0.718859, 0, 1.0};
Point(10) = {0.035918, 0.718615, 0, 1.0};
Point(11) = {0.031138, 0.718359, 0, 1.0};
Point(12) = {0.026227, 0.718100, 0, 1.0};
Point(13) = {0.021209, 0.717855, 0, 1.0};
Point(14) = {0.016104, 0.717614, 0, 1.0};
Point(15) = {0.010937, 0.717412, 0, 1.0};
Point(16) = {0.005734, 0.717256, 0, 1.0};
Point(17) = {0.000527, 0.717201, 0, 1.0};
Point(18) = {-0.004667, 0.717225, 0, 1.0};
Point(19) = {-0.009815, 0.717395, 0, 1.0};
Point(20) = {-0.014890, 0.717739, 0, 1.0};
Point(21) = {-0.019857, 0.718321, 0, 1.0};
Point(22) = {-0.024705, 0.719093, 0, 1.0};
Point(23) = {-0.029409, 0.720070, 0, 1.0};
Point(24) = {-0.033990, 0.721191, 0, 1.0};
Point(25) = {-0.038332, 0.722471, 0, 1.0};
Point(26) = {-0.042510, 0.723898, 0, 1.0};
Point(27) = {-0.046475, 0.725459, 0, 1.0};
Point(28) = {-0.050219, 0.727110, 0, 1.0};
Point(29) = {-0.053725, 0.728836, 0, 1.0};
Point(30) = {-0.056985, 0.730602, 0, 1.0};
Point(31) = {-0.059984, 0.732397, 0, 1.0};
Point(32) = {-0.062712, 0.734192, 0, 1.0};
Point(33) = {-0.065159, 0.735976, 0, 1.0};
Point(34) = {-0.067320, 0.737718, 0, 1.0};
Point(35) = {-0.069183, 0.739406, 0, 1.0};
Point(36) = {-0.070748, 0.741005, 0, 1.0};
Point(37) = {-0.072005, 0.742502, 0, 1.0};
Point(38) = {-0.072958, 0.743863, 0, 1.0};
Point(39) = {-0.073606, 0.745052, 0, 1.0};
Point(40) = {-0.073949, 0.746052, 0, 1.0};
Point(41) = {-0.073967, 0.746958, 0, 1.0};
Point(42) = {-0.073711, 0.747468, 0, 1.0};
Point(43) = {-0.073112, 0.747997, 0, 1.0};
Point(44) = {-0.072183, 0.748487, 0, 1.0};
Point(45) = {-0.070931, 0.748908, 0, 1.0};
Point(46) = {-0.069361, 0.749272, 0, 1.0};
Point(47) = {-0.067480, 0.749562, 0, 1.0};
Point(48) = {-0.065296, 0.749788, 0, 1.0};
Point(49) = {-0.062819, 0.749929, 0, 1.0};
Point(50) = {-0.060060, 0.750000, 0, 1.0};
Point(51) = {-0.057035, 0.749981, 0, 1.0};
Point(52) = {-0.053751, 0.749888, 0, 1.0};
Point(53) = {-0.050226, 0.749697, 0, 1.0};
Point(54) = {-0.046475, 0.749429, 0, 1.0};
Point(55) = {-0.042517, 0.749056, 0, 1.0};
Point(56) = {-0.038366, 0.748603, 0, 1.0};
Point(57) = {-0.034044, 0.748035, 0, 1.0};
Point(58) = {-0.029602, 0.747352, 0, 1.0};
Point(59) = {-0.024978, 0.746491, 0, 1.0};
Point(60) = {-0.020268, 0.745547, 0, 1.0};
Point(61) = {-0.015471, 0.744474, 0, 1.0};
Point(62) = {-0.010604, 0.743297, 0, 1.0};
Point(63) = {-0.005695, 0.741958, 0, 1.0};
Point(64) = {-0.000758, 0.740534, 0, 1.0};
Point(65) = {0.004191, 0.739047, 0, 1.0};
Point(66) = {0.009143, 0.737579, 0, 1.0};
Point(67) = {0.014073, 0.736113, 0, 1.0};
Point(68) = {0.018969, 0.734696, 0, 1.0};
Point(69) = {0.023800, 0.733303, 0, 1.0};
Point(70) = {0.028555, 0.731982, 0, 1.0};
Point(71) = {0.033212, 0.730721, 0, 1.0};
Point(72) = {0.037751, 0.729542, 0, 1.0};
Point(73) = {0.042153, 0.728433, 0, 1.0};
Point(74) = {0.046398, 0.727404, 0, 1.0};
Point(75) = {0.050466, 0.726454, 0, 1.0};
Point(76) = {0.054343, 0.725600, 0, 1.0};
Point(77) = {0.058008, 0.724820, 0, 1.0};
Point(78) = {0.061450, 0.724138, 0, 1.0};
Point(79) = {0.067587, 0.722997, 0, 1.0};
Point(80) = {0.072645, 0.722150, 0, 1.0};
Point(81) = {0.073933, 0.721945, 0, 1.0};
Point(82) = {-0.073682, -0.720447, 0, 1.0};
Point(83) = {-0.072352, -0.720405, 0, 1.0};
Point(84) = {-0.067111, -0.720160, 0, 1.0};
Point(85) = {-0.060734, -0.719870, 0, 1.0};
Point(86) = {-0.057150, -0.719705, 0, 1.0};
Point(87) = {-0.053322, -0.719514, 0, 1.0};
Point(88) = {-0.049269, -0.719316, 0, 1.0};
Point(89) = {-0.045004, -0.719092, 0, 1.0};
Point(90) = {-0.040547, -0.718859, 0, 1.0};
Point(91) = {-0.035918, -0.718615, 0, 1.0};
Point(92) = {-0.031138, -0.718359, 0, 1.0};
Point(93) = {-0.026227, -0.718100, 0, 1.0};
Point(94) = {-0.021209, -0.717855, 0, 1.0};
Point(95) = {-0.016104, -0.717614, 0, 1.0};
Point(96) = {-0.010937, -0.717412, 0, 1.0};
Point(97) = {-0.005734, -0.717256, 0, 1.0};
Point(98) = {-0.000527, -0.717201, 0, 1.0};
Point(99) = {0.004667, -0.717225, 0, 1.0};
Point(100) = {0.009815, -0.717395, 0, 1.0};
Point(101) = {0.014890, -0.717739, 0, 1.0};
Point(102) = {0.019857, -0.718321, 0, 1.0};
Point(103) = {0.024705, -0.719093, 0, 1.0};
Point(104) = {0.029409, -0.720070, 0, 1.0};
Point(105) = {0.033990, -0.721191, 0, 1.0};
Point(106) = {0.038332, -0.722471, 0, 1.0};
Point(107) = {0.042510, -0.723898, 0, 1.0};
Point(108) = {0.046475, -0.725459, 0, 1.0};
Point(109) = {0.050219, -0.727110, 0, 1.0};
Point(110) = {0.053725, -0.728836, 0, 1.0};
Point(111) = {0.056985, -0.730602, 0, 1.0};
Point(112) = {0.059984, -0.732397, 0, 1.0};
Point(113) = {0.062712, -0.734192, 0, 1.0};
Point(114) = {0.065159, -0.735976, 0, 1.0};
Point(115) = {0.067320, -0.737718, 0, 1.0};
Point(116) = {0.069183, -0.739406, 0, 1.0};
Point(117) = {0.070748, -0.741005, 0, 1.0};
Point(118) = {0.072005, -0.742502, 0, 1.0};
Point(119) = {0.072958, -0.743863, 0, 1.0};
Point(120) = {0.073606, -0.745052, 0, 1.0};
Point(121) = {0.073949, -0.746052, 0, 1.0};
Point(122) = {0.073967, -0.746958, 0, 1.0};
Point(123) = {0.073711, -0.747468, 0, 1.0};
Point(124) = {0.073112, -0.747997, 0, 1.0};
Point(125) = {0.072183, -0.748487, 0, 1.0};
Point(126) = {0.070931, -0.748908, 0, 1.0};
Point(127) = {0.069361, -0.749272, 0, 1.0};
Point(128) = {0.067480, -0.749562, 0, 1.0};
Point(129) = {0.065296, -0.749788, 0, 1.0};
Point(130) = {0.062819, -0.749929, 0, 1.0};
Point(131) = {0.060060, -0.750000, 0, 1.0};
Point(132) = {0.057035, -0.749981, 0, 1.0};
Point(133) = {0.053751, -0.749888, 0, 1.0};
Point(134) = {0.050226, -0.749697, 0, 1.0};
Point(135) = {0.046475, -0.749429, 0, 1.0};
Point(136) = {0.042517, -0.749056, 0, 1.0};
Point(137) = {0.038366, -0.748603, 0, 1.0};
Point(138) = {0.034044, -0.748035, 0, 1.0};
Point(139) = {0.029602, -0.747352, 0, 1.0};
Point(140) = {0.024978, -0.746491, 0, 1.0};
Point(141) = {0.020268, -0.745547, 0, 1.0};
Point(142) = {0.015471, -0.744474, 0, 1.0};
Point(143) = {0.010604, -0.743297, 0, 1.0};
Point(144) = {0.005695, -0.741958, 0, 1.0};
Point(145) = {0.000758, -0.740534, 0, 1.0};
Point(146) = {-0.004191, -0.739047, 0, 1.0};
Point(147) = {-0.009143, -0.737579, 0, 1.0};
Point(148) = {-0.014073, -0.736113, 0, 1.0};
Point(149) = {-0.018969, -0.734696, 0, 1.0};
Point(150) = {-0.023800, -0.733303, 0, 1.0};
Point(151) = {-0.028555, -0.731982, 0, 1.0};
Point(152) = {-0.033212, -0.730721, 0, 1.0};
Point(153) = {-0.037751, -0.729542, 0, 1.0};
Point(154) = {-0.042153, -0.728433, 0, 1.0};
Point(155) = {-0.046398, -0.727404, 0, 1.0};
Point(156) = {-0.050466, -0.726454, 0, 1.0};
Point(157) = {-0.054343, -0.725600, 0, 1.0};
Point(158) = {-0.058008, -0.724820, 0, 1.0};
Point(159) = {-0.061450, -0.724138, 0, 1.0};
Point(160) = {-0.067587, -0.722997, 0, 1.0};
Point(161) = {-0.072645, -0.722150, 0, 1.0};
Point(162) = {-0.073933, -0.721945, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
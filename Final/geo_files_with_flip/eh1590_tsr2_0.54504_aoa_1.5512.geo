SetFactory("OpenCASCADE");

Point(1) = {0.074952, 0.741512, 0, 1.0};
Point(2) = {0.072497, 0.741367, 0, 1.0};
Point(3) = {0.069667, 0.741193, 0, 1.0};
Point(4) = {0.066580, 0.740996, 0, 1.0};
Point(5) = {0.063249, 0.740774, 0, 1.0};
Point(6) = {0.059687, 0.740529, 0, 1.0};
Point(7) = {0.055909, 0.740261, 0, 1.0};
Point(8) = {0.051928, 0.739971, 0, 1.0};
Point(9) = {0.047761, 0.739662, 0, 1.0};
Point(10) = {0.043425, 0.739334, 0, 1.0};
Point(11) = {0.038936, 0.738992, 0, 1.0};
Point(12) = {0.034312, 0.738637, 0, 1.0};
Point(13) = {0.029572, 0.738273, 0, 1.0};
Point(14) = {0.024734, 0.737906, 0, 1.0};
Point(15) = {0.019818, 0.737539, 0, 1.0};
Point(16) = {0.014842, 0.737180, 0, 1.0};
Point(17) = {0.009827, 0.736835, 0, 1.0};
Point(18) = {0.004793, 0.736512, 0, 1.0};
Point(19) = {-0.000240, 0.736218, 0, 1.0};
Point(20) = {-0.005252, 0.735961, 0, 1.0};
Point(21) = {-0.010224, 0.735751, 0, 1.0};
Point(22) = {-0.015135, 0.735594, 0, 1.0};
Point(23) = {-0.019965, 0.735500, 0, 1.0};
Point(24) = {-0.024696, 0.735476, 0, 1.0};
Point(25) = {-0.029309, 0.735527, 0, 1.0};
Point(26) = {-0.033785, 0.735660, 0, 1.0};
Point(27) = {-0.038107, 0.735878, 0, 1.0};
Point(28) = {-0.042257, 0.736182, 0, 1.0};
Point(29) = {-0.046219, 0.736573, 0, 1.0};
Point(30) = {-0.049978, 0.737048, 0, 1.0};
Point(31) = {-0.053518, 0.737602, 0, 1.0};
Point(32) = {-0.056826, 0.738230, 0, 1.0};
Point(33) = {-0.059888, 0.738922, 0, 1.0};
Point(34) = {-0.062694, 0.739669, 0, 1.0};
Point(35) = {-0.065232, 0.740458, 0, 1.0};
Point(36) = {-0.067492, 0.741276, 0, 1.0};
Point(37) = {-0.069466, 0.742110, 0, 1.0};
Point(38) = {-0.071147, 0.742944, 0, 1.0};
Point(39) = {-0.072528, 0.743757, 0, 1.0};
Point(40) = {-0.073604, 0.744521, 0, 1.0};
Point(41) = {-0.074372, 0.745209, 0, 1.0};
Point(42) = {-0.074829, 0.745807, 0, 1.0};
Point(43) = {-0.074973, 0.746323, 0, 1.0};
Point(44) = {-0.074802, 0.746786, 0, 1.0};
Point(45) = {-0.074317, 0.747225, 0, 1.0};
Point(46) = {-0.073519, 0.747657, 0, 1.0};
Point(47) = {-0.072411, 0.748073, 0, 1.0};
Point(48) = {-0.070998, 0.748460, 0, 1.0};
Point(49) = {-0.069285, 0.748801, 0, 1.0};
Point(50) = {-0.067281, 0.749093, 0, 1.0};
Point(51) = {-0.064991, 0.749337, 0, 1.0};
Point(52) = {-0.062427, 0.749535, 0, 1.0};
Point(53) = {-0.059597, 0.749692, 0, 1.0};
Point(54) = {-0.056512, 0.749812, 0, 1.0};
Point(55) = {-0.053185, 0.749899, 0, 1.0};
Point(56) = {-0.049628, 0.749957, 0, 1.0};
Point(57) = {-0.045856, 0.749990, 0, 1.0};
Point(58) = {-0.041883, 0.750000, 0, 1.0};
Point(59) = {-0.037725, 0.749990, 0, 1.0};
Point(60) = {-0.033398, 0.749960, 0, 1.0};
Point(61) = {-0.028920, 0.749911, 0, 1.0};
Point(62) = {-0.024307, 0.749844, 0, 1.0};
Point(63) = {-0.019579, 0.749756, 0, 1.0};
Point(64) = {-0.014754, 0.749647, 0, 1.0};
Point(65) = {-0.009851, 0.749515, 0, 1.0};
Point(66) = {-0.004890, 0.749359, 0, 1.0};
Point(67) = {0.000111, 0.749175, 0, 1.0};
Point(68) = {0.005130, 0.748964, 0, 1.0};
Point(69) = {0.010149, 0.748723, 0, 1.0};
Point(70) = {0.015147, 0.748453, 0, 1.0};
Point(71) = {0.020105, 0.748154, 0, 1.0};
Point(72) = {0.025003, 0.747827, 0, 1.0};
Point(73) = {0.029821, 0.747476, 0, 1.0};
Point(74) = {0.034542, 0.747103, 0, 1.0};
Point(75) = {0.039145, 0.746712, 0, 1.0};
Point(76) = {0.043614, 0.746308, 0, 1.0};
Point(77) = {0.047930, 0.745896, 0, 1.0};
Point(78) = {0.052077, 0.745482, 0, 1.0};
Point(79) = {0.056039, 0.745072, 0, 1.0};
Point(80) = {0.059800, 0.744672, 0, 1.0};
Point(81) = {0.063344, 0.744286, 0, 1.0};
Point(82) = {0.066659, 0.743922, 0, 1.0};
Point(83) = {0.069731, 0.743583, 0, 1.0};
Point(84) = {0.072549, 0.743272, 0, 1.0};
Point(85) = {0.074993, 0.743004, 0, 1.0};
Point(86) = {-0.074952, -0.741512, 0, 1.0};
Point(87) = {-0.072497, -0.741367, 0, 1.0};
Point(88) = {-0.069667, -0.741193, 0, 1.0};
Point(89) = {-0.066580, -0.740996, 0, 1.0};
Point(90) = {-0.063249, -0.740774, 0, 1.0};
Point(91) = {-0.059687, -0.740529, 0, 1.0};
Point(92) = {-0.055909, -0.740261, 0, 1.0};
Point(93) = {-0.051928, -0.739971, 0, 1.0};
Point(94) = {-0.047761, -0.739662, 0, 1.0};
Point(95) = {-0.043425, -0.739334, 0, 1.0};
Point(96) = {-0.038936, -0.738992, 0, 1.0};
Point(97) = {-0.034312, -0.738637, 0, 1.0};
Point(98) = {-0.029572, -0.738273, 0, 1.0};
Point(99) = {-0.024734, -0.737906, 0, 1.0};
Point(100) = {-0.019818, -0.737539, 0, 1.0};
Point(101) = {-0.014842, -0.737180, 0, 1.0};
Point(102) = {-0.009827, -0.736835, 0, 1.0};
Point(103) = {-0.004793, -0.736512, 0, 1.0};
Point(104) = {0.000240, -0.736218, 0, 1.0};
Point(105) = {0.005252, -0.735961, 0, 1.0};
Point(106) = {0.010224, -0.735751, 0, 1.0};
Point(107) = {0.015135, -0.735594, 0, 1.0};
Point(108) = {0.019965, -0.735500, 0, 1.0};
Point(109) = {0.024696, -0.735476, 0, 1.0};
Point(110) = {0.029309, -0.735527, 0, 1.0};
Point(111) = {0.033785, -0.735660, 0, 1.0};
Point(112) = {0.038107, -0.735878, 0, 1.0};
Point(113) = {0.042257, -0.736182, 0, 1.0};
Point(114) = {0.046219, -0.736573, 0, 1.0};
Point(115) = {0.049978, -0.737048, 0, 1.0};
Point(116) = {0.053518, -0.737602, 0, 1.0};
Point(117) = {0.056826, -0.738230, 0, 1.0};
Point(118) = {0.059888, -0.738922, 0, 1.0};
Point(119) = {0.062694, -0.739669, 0, 1.0};
Point(120) = {0.065232, -0.740458, 0, 1.0};
Point(121) = {0.067492, -0.741276, 0, 1.0};
Point(122) = {0.069466, -0.742110, 0, 1.0};
Point(123) = {0.071147, -0.742944, 0, 1.0};
Point(124) = {0.072528, -0.743757, 0, 1.0};
Point(125) = {0.073604, -0.744521, 0, 1.0};
Point(126) = {0.074372, -0.745209, 0, 1.0};
Point(127) = {0.074829, -0.745807, 0, 1.0};
Point(128) = {0.074973, -0.746323, 0, 1.0};
Point(129) = {0.074802, -0.746786, 0, 1.0};
Point(130) = {0.074317, -0.747225, 0, 1.0};
Point(131) = {0.073519, -0.747657, 0, 1.0};
Point(132) = {0.072411, -0.748073, 0, 1.0};
Point(133) = {0.070998, -0.748460, 0, 1.0};
Point(134) = {0.069285, -0.748801, 0, 1.0};
Point(135) = {0.067281, -0.749093, 0, 1.0};
Point(136) = {0.064991, -0.749337, 0, 1.0};
Point(137) = {0.062427, -0.749535, 0, 1.0};
Point(138) = {0.059597, -0.749692, 0, 1.0};
Point(139) = {0.056512, -0.749812, 0, 1.0};
Point(140) = {0.053185, -0.749899, 0, 1.0};
Point(141) = {0.049628, -0.749957, 0, 1.0};
Point(142) = {0.045856, -0.749990, 0, 1.0};
Point(143) = {0.041883, -0.750000, 0, 1.0};
Point(144) = {0.037725, -0.749990, 0, 1.0};
Point(145) = {0.033398, -0.749960, 0, 1.0};
Point(146) = {0.028920, -0.749911, 0, 1.0};
Point(147) = {0.024307, -0.749844, 0, 1.0};
Point(148) = {0.019579, -0.749756, 0, 1.0};
Point(149) = {0.014754, -0.749647, 0, 1.0};
Point(150) = {0.009851, -0.749515, 0, 1.0};
Point(151) = {0.004890, -0.749359, 0, 1.0};
Point(152) = {-0.000111, -0.749175, 0, 1.0};
Point(153) = {-0.005130, -0.748964, 0, 1.0};
Point(154) = {-0.010149, -0.748723, 0, 1.0};
Point(155) = {-0.015147, -0.748453, 0, 1.0};
Point(156) = {-0.020105, -0.748154, 0, 1.0};
Point(157) = {-0.025003, -0.747827, 0, 1.0};
Point(158) = {-0.029821, -0.747476, 0, 1.0};
Point(159) = {-0.034542, -0.747103, 0, 1.0};
Point(160) = {-0.039145, -0.746712, 0, 1.0};
Point(161) = {-0.043614, -0.746308, 0, 1.0};
Point(162) = {-0.047930, -0.745896, 0, 1.0};
Point(163) = {-0.052077, -0.745482, 0, 1.0};
Point(164) = {-0.056039, -0.745072, 0, 1.0};
Point(165) = {-0.059800, -0.744672, 0, 1.0};
Point(166) = {-0.063344, -0.744286, 0, 1.0};
Point(167) = {-0.066659, -0.743922, 0, 1.0};
Point(168) = {-0.069731, -0.743583, 0, 1.0};
Point(169) = {-0.072549, -0.743272, 0, 1.0};
Point(170) = {-0.074993, -0.743004, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:60};
Spline(3) = {60:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:145};
Spline(7) = {145:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074496, 0.733703, 0, 1.0};
Point(2) = {0.073115, 0.733544, 0, 1.0};
Point(3) = {0.070321, 0.733207, 0, 1.0};
Point(4) = {0.067241, 0.732839, 0, 1.0};
Point(5) = {0.063885, 0.732444, 0, 1.0};
Point(6) = {0.060268, 0.732016, 0, 1.0};
Point(7) = {0.056407, 0.731547, 0, 1.0};
Point(8) = {0.052316, 0.731035, 0, 1.0};
Point(9) = {0.048014, 0.730489, 0, 1.0};
Point(10) = {0.043520, 0.729934, 0, 1.0};
Point(11) = {0.038857, 0.729417, 0, 1.0};
Point(12) = {0.034054, 0.729002, 0, 1.0};
Point(13) = {0.029131, 0.728721, 0, 1.0};
Point(14) = {0.024110, 0.728576, 0, 1.0};
Point(15) = {0.019011, 0.728540, 0, 1.0};
Point(16) = {0.013852, 0.728603, 0, 1.0};
Point(17) = {0.008658, 0.728764, 0, 1.0};
Point(18) = {0.003452, 0.729035, 0, 1.0};
Point(19) = {-0.001743, 0.729425, 0, 1.0};
Point(20) = {-0.006905, 0.729933, 0, 1.0};
Point(21) = {-0.012015, 0.730549, 0, 1.0};
Point(22) = {-0.017048, 0.731257, 0, 1.0};
Point(23) = {-0.021985, 0.732041, 0, 1.0};
Point(24) = {-0.026806, 0.732898, 0, 1.0};
Point(25) = {-0.031491, 0.733815, 0, 1.0};
Point(26) = {-0.036020, 0.734785, 0, 1.0};
Point(27) = {-0.040374, 0.735800, 0, 1.0};
Point(28) = {-0.044533, 0.736850, 0, 1.0};
Point(29) = {-0.048482, 0.737926, 0, 1.0};
Point(30) = {-0.052203, 0.739022, 0, 1.0};
Point(31) = {-0.055682, 0.740127, 0, 1.0};
Point(32) = {-0.058904, 0.741228, 0, 1.0};
Point(33) = {-0.061854, 0.742314, 0, 1.0};
Point(34) = {-0.064523, 0.743377, 0, 1.0};
Point(35) = {-0.066899, 0.744404, 0, 1.0};
Point(36) = {-0.068971, 0.745379, 0, 1.0};
Point(37) = {-0.070733, 0.746290, 0, 1.0};
Point(38) = {-0.072177, 0.747117, 0, 1.0};
Point(39) = {-0.073302, 0.747833, 0, 1.0};
Point(40) = {-0.074099, 0.748445, 0, 1.0};
Point(41) = {-0.074567, 0.748959, 0, 1.0};
Point(42) = {-0.074701, 0.749368, 0, 1.0};
Point(43) = {-0.074503, 0.749676, 0, 1.0};
Point(44) = {-0.073971, 0.749877, 0, 1.0};
Point(45) = {-0.073109, 0.749980, 0, 1.0};
Point(46) = {-0.071919, 0.750000, 0, 1.0};
Point(47) = {-0.070408, 0.749932, 0, 1.0};
Point(48) = {-0.068576, 0.749794, 0, 1.0};
Point(49) = {-0.066434, 0.749595, 0, 1.0};
Point(50) = {-0.063989, 0.749343, 0, 1.0};
Point(51) = {-0.061252, 0.749042, 0, 1.0};
Point(52) = {-0.058235, 0.748702, 0, 1.0};
Point(53) = {-0.054949, 0.748323, 0, 1.0};
Point(54) = {-0.051407, 0.747911, 0, 1.0};
Point(55) = {-0.047627, 0.747471, 0, 1.0};
Point(56) = {-0.043624, 0.747007, 0, 1.0};
Point(57) = {-0.039414, 0.746523, 0, 1.0};
Point(58) = {-0.035014, 0.746022, 0, 1.0};
Point(59) = {-0.030444, 0.745509, 0, 1.0};
Point(60) = {-0.025724, 0.744986, 0, 1.0};
Point(61) = {-0.020874, 0.744457, 0, 1.0};
Point(62) = {-0.015914, 0.743925, 0, 1.0};
Point(63) = {-0.010865, 0.743395, 0, 1.0};
Point(64) = {-0.005748, 0.742867, 0, 1.0};
Point(65) = {-0.000587, 0.742346, 0, 1.0};
Point(66) = {0.004598, 0.741830, 0, 1.0};
Point(67) = {0.009782, 0.741318, 0, 1.0};
Point(68) = {0.014944, 0.740808, 0, 1.0};
Point(69) = {0.020064, 0.740304, 0, 1.0};
Point(70) = {0.025116, 0.739813, 0, 1.0};
Point(71) = {0.030082, 0.739345, 0, 1.0};
Point(72) = {0.034940, 0.738904, 0, 1.0};
Point(73) = {0.039668, 0.738473, 0, 1.0};
Point(74) = {0.044244, 0.738025, 0, 1.0};
Point(75) = {0.048646, 0.737546, 0, 1.0};
Point(76) = {0.052855, 0.737056, 0, 1.0};
Point(77) = {0.056859, 0.736593, 0, 1.0};
Point(78) = {0.060643, 0.736195, 0, 1.0};
Point(79) = {0.064191, 0.735870, 0, 1.0};
Point(80) = {0.067489, 0.735611, 0, 1.0};
Point(81) = {0.070518, 0.735411, 0, 1.0};
Point(82) = {0.073268, 0.735262, 0, 1.0};
Point(83) = {0.074631, 0.735205, 0, 1.0};
Point(84) = {-0.074496, -0.733703, 0, 1.0};
Point(85) = {-0.073115, -0.733544, 0, 1.0};
Point(86) = {-0.070321, -0.733207, 0, 1.0};
Point(87) = {-0.067241, -0.732839, 0, 1.0};
Point(88) = {-0.063885, -0.732444, 0, 1.0};
Point(89) = {-0.060268, -0.732016, 0, 1.0};
Point(90) = {-0.056407, -0.731547, 0, 1.0};
Point(91) = {-0.052316, -0.731035, 0, 1.0};
Point(92) = {-0.048014, -0.730489, 0, 1.0};
Point(93) = {-0.043520, -0.729934, 0, 1.0};
Point(94) = {-0.038857, -0.729417, 0, 1.0};
Point(95) = {-0.034054, -0.729002, 0, 1.0};
Point(96) = {-0.029131, -0.728721, 0, 1.0};
Point(97) = {-0.024110, -0.728576, 0, 1.0};
Point(98) = {-0.019011, -0.728540, 0, 1.0};
Point(99) = {-0.013852, -0.728603, 0, 1.0};
Point(100) = {-0.008658, -0.728764, 0, 1.0};
Point(101) = {-0.003452, -0.729035, 0, 1.0};
Point(102) = {0.001743, -0.729425, 0, 1.0};
Point(103) = {0.006905, -0.729933, 0, 1.0};
Point(104) = {0.012015, -0.730549, 0, 1.0};
Point(105) = {0.017048, -0.731257, 0, 1.0};
Point(106) = {0.021985, -0.732041, 0, 1.0};
Point(107) = {0.026806, -0.732898, 0, 1.0};
Point(108) = {0.031491, -0.733815, 0, 1.0};
Point(109) = {0.036020, -0.734785, 0, 1.0};
Point(110) = {0.040374, -0.735800, 0, 1.0};
Point(111) = {0.044533, -0.736850, 0, 1.0};
Point(112) = {0.048482, -0.737926, 0, 1.0};
Point(113) = {0.052203, -0.739022, 0, 1.0};
Point(114) = {0.055682, -0.740127, 0, 1.0};
Point(115) = {0.058904, -0.741228, 0, 1.0};
Point(116) = {0.061854, -0.742314, 0, 1.0};
Point(117) = {0.064523, -0.743377, 0, 1.0};
Point(118) = {0.066899, -0.744404, 0, 1.0};
Point(119) = {0.068971, -0.745379, 0, 1.0};
Point(120) = {0.070733, -0.746290, 0, 1.0};
Point(121) = {0.072177, -0.747117, 0, 1.0};
Point(122) = {0.073302, -0.747833, 0, 1.0};
Point(123) = {0.074099, -0.748445, 0, 1.0};
Point(124) = {0.074567, -0.748959, 0, 1.0};
Point(125) = {0.074701, -0.749368, 0, 1.0};
Point(126) = {0.074503, -0.749676, 0, 1.0};
Point(127) = {0.073971, -0.749877, 0, 1.0};
Point(128) = {0.073109, -0.749980, 0, 1.0};
Point(129) = {0.071919, -0.750000, 0, 1.0};
Point(130) = {0.070408, -0.749932, 0, 1.0};
Point(131) = {0.068576, -0.749794, 0, 1.0};
Point(132) = {0.066434, -0.749595, 0, 1.0};
Point(133) = {0.063989, -0.749343, 0, 1.0};
Point(134) = {0.061252, -0.749042, 0, 1.0};
Point(135) = {0.058235, -0.748702, 0, 1.0};
Point(136) = {0.054949, -0.748323, 0, 1.0};
Point(137) = {0.051407, -0.747911, 0, 1.0};
Point(138) = {0.047627, -0.747471, 0, 1.0};
Point(139) = {0.043624, -0.747007, 0, 1.0};
Point(140) = {0.039414, -0.746523, 0, 1.0};
Point(141) = {0.035014, -0.746022, 0, 1.0};
Point(142) = {0.030444, -0.745509, 0, 1.0};
Point(143) = {0.025724, -0.744986, 0, 1.0};
Point(144) = {0.020874, -0.744457, 0, 1.0};
Point(145) = {0.015914, -0.743925, 0, 1.0};
Point(146) = {0.010865, -0.743395, 0, 1.0};
Point(147) = {0.005748, -0.742867, 0, 1.0};
Point(148) = {0.000587, -0.742346, 0, 1.0};
Point(149) = {-0.004598, -0.741830, 0, 1.0};
Point(150) = {-0.009782, -0.741318, 0, 1.0};
Point(151) = {-0.014944, -0.740808, 0, 1.0};
Point(152) = {-0.020064, -0.740304, 0, 1.0};
Point(153) = {-0.025116, -0.739813, 0, 1.0};
Point(154) = {-0.030082, -0.739345, 0, 1.0};
Point(155) = {-0.034940, -0.738904, 0, 1.0};
Point(156) = {-0.039668, -0.738473, 0, 1.0};
Point(157) = {-0.044244, -0.738025, 0, 1.0};
Point(158) = {-0.048646, -0.737546, 0, 1.0};
Point(159) = {-0.052855, -0.737056, 0, 1.0};
Point(160) = {-0.056859, -0.736593, 0, 1.0};
Point(161) = {-0.060643, -0.736195, 0, 1.0};
Point(162) = {-0.064191, -0.735870, 0, 1.0};
Point(163) = {-0.067489, -0.735611, 0, 1.0};
Point(164) = {-0.070518, -0.735411, 0, 1.0};
Point(165) = {-0.073268, -0.735262, 0, 1.0};
Point(166) = {-0.074631, -0.735205, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:108};
Spline(6) = {108:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
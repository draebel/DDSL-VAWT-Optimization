SetFactory("OpenCASCADE");

Point(1) = {0.074799, 0.748502, 0, 1.0};
Point(2) = {0.073476, 0.748071, 0, 1.0};
Point(3) = {0.070804, 0.747188, 0, 1.0};
Point(4) = {0.067858, 0.746218, 0, 1.0};
Point(5) = {0.064647, 0.745166, 0, 1.0};
Point(6) = {0.061187, 0.744030, 0, 1.0};
Point(7) = {0.057495, 0.742807, 0, 1.0};
Point(8) = {0.053586, 0.741495, 0, 1.0};
Point(9) = {0.049478, 0.740108, 0, 1.0};
Point(10) = {0.045182, 0.738673, 0, 1.0};
Point(11) = {0.040714, 0.737244, 0, 1.0};
Point(12) = {0.036088, 0.735886, 0, 1.0};
Point(13) = {0.031318, 0.734636, 0, 1.0};
Point(14) = {0.026426, 0.733499, 0, 1.0};
Point(15) = {0.021435, 0.732454, 0, 1.0};
Point(16) = {0.016365, 0.731495, 0, 1.0};
Point(17) = {0.011243, 0.730625, 0, 1.0};
Point(18) = {0.006086, 0.729859, 0, 1.0};
Point(19) = {0.000916, 0.729213, 0, 1.0};
Point(20) = {-0.004245, 0.728689, 0, 1.0};
Point(21) = {-0.009375, 0.728281, 0, 1.0};
Point(22) = {-0.014448, 0.727978, 0, 1.0};
Point(23) = {-0.019443, 0.727769, 0, 1.0};
Point(24) = {-0.024338, 0.727655, 0, 1.0};
Point(25) = {-0.029112, 0.727626, 0, 1.0};
Point(26) = {-0.033743, 0.727680, 0, 1.0};
Point(27) = {-0.038212, 0.727813, 0, 1.0};
Point(28) = {-0.042497, 0.728019, 0, 1.0};
Point(29) = {-0.046580, 0.728292, 0, 1.0};
Point(30) = {-0.050445, 0.728630, 0, 1.0};
Point(31) = {-0.054074, 0.729024, 0, 1.0};
Point(32) = {-0.057450, 0.729465, 0, 1.0};
Point(33) = {-0.060557, 0.729946, 0, 1.0};
Point(34) = {-0.063383, 0.730459, 0, 1.0};
Point(35) = {-0.065915, 0.730995, 0, 1.0};
Point(36) = {-0.068139, 0.731541, 0, 1.0};
Point(37) = {-0.070048, 0.732085, 0, 1.0};
Point(38) = {-0.071627, 0.732609, 0, 1.0};
Point(39) = {-0.072870, 0.733089, 0, 1.0};
Point(40) = {-0.073774, 0.733531, 0, 1.0};
Point(41) = {-0.074334, 0.733942, 0, 1.0};
Point(42) = {-0.074546, 0.734316, 0, 1.0};
Point(43) = {-0.074413, 0.734658, 0, 1.0};
Point(44) = {-0.073931, 0.734959, 0, 1.0};
Point(45) = {-0.073107, 0.735231, 0, 1.0};
Point(46) = {-0.071945, 0.735487, 0, 1.0};
Point(47) = {-0.070449, 0.735719, 0, 1.0};
Point(48) = {-0.068626, 0.735946, 0, 1.0};
Point(49) = {-0.066488, 0.736176, 0, 1.0};
Point(50) = {-0.064041, 0.736413, 0, 1.0};
Point(51) = {-0.061299, 0.736660, 0, 1.0};
Point(52) = {-0.058274, 0.736923, 0, 1.0};
Point(53) = {-0.054978, 0.737203, 0, 1.0};
Point(54) = {-0.051425, 0.737501, 0, 1.0};
Point(55) = {-0.047633, 0.737817, 0, 1.0};
Point(56) = {-0.043617, 0.738155, 0, 1.0};
Point(57) = {-0.039394, 0.738514, 0, 1.0};
Point(58) = {-0.034982, 0.738894, 0, 1.0};
Point(59) = {-0.030401, 0.739296, 0, 1.0};
Point(60) = {-0.025671, 0.739718, 0, 1.0};
Point(61) = {-0.020812, 0.740160, 0, 1.0};
Point(62) = {-0.015845, 0.740621, 0, 1.0};
Point(63) = {-0.010791, 0.741101, 0, 1.0};
Point(64) = {-0.005671, 0.741596, 0, 1.0};
Point(65) = {-0.000508, 0.742107, 0, 1.0};
Point(66) = {0.004675, 0.742628, 0, 1.0};
Point(67) = {0.009858, 0.743153, 0, 1.0};
Point(68) = {0.015019, 0.743675, 0, 1.0};
Point(69) = {0.020137, 0.744194, 0, 1.0};
Point(70) = {0.025187, 0.744714, 0, 1.0};
Point(71) = {0.030147, 0.745238, 0, 1.0};
Point(72) = {0.034996, 0.745767, 0, 1.0};
Point(73) = {0.039716, 0.746281, 0, 1.0};
Point(74) = {0.044290, 0.746747, 0, 1.0};
Point(75) = {0.048700, 0.747150, 0, 1.0};
Point(76) = {0.052923, 0.747503, 0, 1.0};
Point(77) = {0.056939, 0.747842, 0, 1.0};
Point(78) = {0.060726, 0.748201, 0, 1.0};
Point(79) = {0.064269, 0.748585, 0, 1.0};
Point(80) = {0.067553, 0.748984, 0, 1.0};
Point(81) = {0.070561, 0.749387, 0, 1.0};
Point(82) = {0.073287, 0.749786, 0, 1.0};
Point(83) = {0.074634, 0.750000, 0, 1.0};
Point(84) = {-0.074799, -0.748502, 0, 1.0};
Point(85) = {-0.073476, -0.748071, 0, 1.0};
Point(86) = {-0.070804, -0.747188, 0, 1.0};
Point(87) = {-0.067858, -0.746218, 0, 1.0};
Point(88) = {-0.064647, -0.745166, 0, 1.0};
Point(89) = {-0.061187, -0.744030, 0, 1.0};
Point(90) = {-0.057495, -0.742807, 0, 1.0};
Point(91) = {-0.053586, -0.741495, 0, 1.0};
Point(92) = {-0.049478, -0.740108, 0, 1.0};
Point(93) = {-0.045182, -0.738673, 0, 1.0};
Point(94) = {-0.040714, -0.737244, 0, 1.0};
Point(95) = {-0.036088, -0.735886, 0, 1.0};
Point(96) = {-0.031318, -0.734636, 0, 1.0};
Point(97) = {-0.026426, -0.733499, 0, 1.0};
Point(98) = {-0.021435, -0.732454, 0, 1.0};
Point(99) = {-0.016365, -0.731495, 0, 1.0};
Point(100) = {-0.011243, -0.730625, 0, 1.0};
Point(101) = {-0.006086, -0.729859, 0, 1.0};
Point(102) = {-0.000916, -0.729213, 0, 1.0};
Point(103) = {0.004245, -0.728689, 0, 1.0};
Point(104) = {0.009375, -0.728281, 0, 1.0};
Point(105) = {0.014448, -0.727978, 0, 1.0};
Point(106) = {0.019443, -0.727769, 0, 1.0};
Point(107) = {0.024338, -0.727655, 0, 1.0};
Point(108) = {0.029112, -0.727626, 0, 1.0};
Point(109) = {0.033743, -0.727680, 0, 1.0};
Point(110) = {0.038212, -0.727813, 0, 1.0};
Point(111) = {0.042497, -0.728019, 0, 1.0};
Point(112) = {0.046580, -0.728292, 0, 1.0};
Point(113) = {0.050445, -0.728630, 0, 1.0};
Point(114) = {0.054074, -0.729024, 0, 1.0};
Point(115) = {0.057450, -0.729465, 0, 1.0};
Point(116) = {0.060557, -0.729946, 0, 1.0};
Point(117) = {0.063383, -0.730459, 0, 1.0};
Point(118) = {0.065915, -0.730995, 0, 1.0};
Point(119) = {0.068139, -0.731541, 0, 1.0};
Point(120) = {0.070048, -0.732085, 0, 1.0};
Point(121) = {0.071627, -0.732609, 0, 1.0};
Point(122) = {0.072870, -0.733089, 0, 1.0};
Point(123) = {0.073774, -0.733531, 0, 1.0};
Point(124) = {0.074334, -0.733942, 0, 1.0};
Point(125) = {0.074546, -0.734316, 0, 1.0};
Point(126) = {0.074413, -0.734658, 0, 1.0};
Point(127) = {0.073931, -0.734959, 0, 1.0};
Point(128) = {0.073107, -0.735231, 0, 1.0};
Point(129) = {0.071945, -0.735487, 0, 1.0};
Point(130) = {0.070449, -0.735719, 0, 1.0};
Point(131) = {0.068626, -0.735946, 0, 1.0};
Point(132) = {0.066488, -0.736176, 0, 1.0};
Point(133) = {0.064041, -0.736413, 0, 1.0};
Point(134) = {0.061299, -0.736660, 0, 1.0};
Point(135) = {0.058274, -0.736923, 0, 1.0};
Point(136) = {0.054978, -0.737203, 0, 1.0};
Point(137) = {0.051425, -0.737501, 0, 1.0};
Point(138) = {0.047633, -0.737817, 0, 1.0};
Point(139) = {0.043617, -0.738155, 0, 1.0};
Point(140) = {0.039394, -0.738514, 0, 1.0};
Point(141) = {0.034982, -0.738894, 0, 1.0};
Point(142) = {0.030401, -0.739296, 0, 1.0};
Point(143) = {0.025671, -0.739718, 0, 1.0};
Point(144) = {0.020812, -0.740160, 0, 1.0};
Point(145) = {0.015845, -0.740621, 0, 1.0};
Point(146) = {0.010791, -0.741101, 0, 1.0};
Point(147) = {0.005671, -0.741596, 0, 1.0};
Point(148) = {0.000508, -0.742107, 0, 1.0};
Point(149) = {-0.004675, -0.742628, 0, 1.0};
Point(150) = {-0.009858, -0.743153, 0, 1.0};
Point(151) = {-0.015019, -0.743675, 0, 1.0};
Point(152) = {-0.020137, -0.744194, 0, 1.0};
Point(153) = {-0.025187, -0.744714, 0, 1.0};
Point(154) = {-0.030147, -0.745238, 0, 1.0};
Point(155) = {-0.034996, -0.745767, 0, 1.0};
Point(156) = {-0.039716, -0.746281, 0, 1.0};
Point(157) = {-0.044290, -0.746747, 0, 1.0};
Point(158) = {-0.048700, -0.747150, 0, 1.0};
Point(159) = {-0.052923, -0.747503, 0, 1.0};
Point(160) = {-0.056939, -0.747842, 0, 1.0};
Point(161) = {-0.060726, -0.748201, 0, 1.0};
Point(162) = {-0.064269, -0.748585, 0, 1.0};
Point(163) = {-0.067553, -0.748984, 0, 1.0};
Point(164) = {-0.070561, -0.749387, 0, 1.0};
Point(165) = {-0.073287, -0.749786, 0, 1.0};
Point(166) = {-0.074634, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:108};
Spline(6) = {108:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
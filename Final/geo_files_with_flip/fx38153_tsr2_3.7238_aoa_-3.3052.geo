SetFactory("OpenCASCADE");

Point(1) = {0.074743, 0.741315, 0, 1.0};
Point(2) = {0.072992, 0.741819, 0, 1.0};
Point(3) = {0.070526, 0.742520, 0, 1.0};
Point(4) = {0.067776, 0.743290, 0, 1.0};
Point(5) = {0.064710, 0.744115, 0, 1.0};
Point(6) = {0.061445, 0.744965, 0, 1.0};
Point(7) = {0.057889, 0.745804, 0, 1.0};
Point(8) = {0.054117, 0.746585, 0, 1.0};
Point(9) = {0.050105, 0.747304, 0, 1.0};
Point(10) = {0.045900, 0.747932, 0, 1.0};
Point(11) = {0.041518, 0.748482, 0, 1.0};
Point(12) = {0.036982, 0.748941, 0, 1.0};
Point(13) = {0.032290, 0.749321, 0, 1.0};
Point(14) = {0.027484, 0.749600, 0, 1.0};
Point(15) = {0.022561, 0.749813, 0, 1.0};
Point(16) = {0.017561, 0.749935, 0, 1.0};
Point(17) = {0.012507, 0.750000, 0, 1.0};
Point(18) = {0.007418, 0.749974, 0, 1.0};
Point(19) = {0.002291, 0.749891, 0, 1.0};
Point(20) = {-0.002810, 0.749717, 0, 1.0};
Point(21) = {-0.007908, 0.749491, 0, 1.0};
Point(22) = {-0.012942, 0.749168, 0, 1.0};
Point(23) = {-0.017911, 0.748805, 0, 1.0};
Point(24) = {-0.022775, 0.748338, 0, 1.0};
Point(25) = {-0.027556, 0.747829, 0, 1.0};
Point(26) = {-0.032172, 0.747218, 0, 1.0};
Point(27) = {-0.036664, 0.746567, 0, 1.0};
Point(28) = {-0.040970, 0.745815, 0, 1.0};
Point(29) = {-0.045095, 0.745037, 0, 1.0};
Point(30) = {-0.048997, 0.744165, 0, 1.0};
Point(31) = {-0.052690, 0.743283, 0, 1.0};
Point(32) = {-0.056142, 0.742305, 0, 1.0};
Point(33) = {-0.059332, 0.741330, 0, 1.0};
Point(34) = {-0.062257, 0.740256, 0, 1.0};
Point(35) = {-0.064902, 0.739195, 0, 1.0};
Point(36) = {-0.067240, 0.738035, 0, 1.0};
Point(37) = {-0.069300, 0.736920, 0, 1.0};
Point(38) = {-0.071034, 0.735715, 0, 1.0};
Point(39) = {-0.072456, 0.734631, 0, 1.0};
Point(40) = {-0.073549, 0.733447, 0, 1.0};
Point(41) = {-0.074338, 0.732516, 0, 1.0};
Point(42) = {-0.074774, 0.731389, 0, 1.0};
Point(43) = {-0.074875, 0.730373, 0, 1.0};
Point(44) = {-0.074694, 0.730000, 0, 1.0};
Point(45) = {-0.074170, 0.729601, 0, 1.0};
Point(46) = {-0.073295, 0.729039, 0, 1.0};
Point(47) = {-0.072108, 0.728610, 0, 1.0};
Point(48) = {-0.070592, 0.728069, 0, 1.0};
Point(49) = {-0.068764, 0.727653, 0, 1.0};
Point(50) = {-0.066613, 0.727173, 0, 1.0};
Point(51) = {-0.064185, 0.726783, 0, 1.0};
Point(52) = {-0.061454, 0.726351, 0, 1.0};
Point(53) = {-0.058447, 0.726019, 0, 1.0};
Point(54) = {-0.055181, 0.725661, 0, 1.0};
Point(55) = {-0.051657, 0.725397, 0, 1.0};
Point(56) = {-0.047898, 0.725127, 0, 1.0};
Point(57) = {-0.043934, 0.724941, 0, 1.0};
Point(58) = {-0.039755, 0.724773, 0, 1.0};
Point(59) = {-0.035401, 0.724685, 0, 1.0};
Point(60) = {-0.030866, 0.724610, 0, 1.0};
Point(61) = {-0.026216, 0.724623, 0, 1.0};
Point(62) = {-0.021408, 0.724663, 0, 1.0};
Point(63) = {-0.016525, 0.724798, 0, 1.0};
Point(64) = {-0.011544, 0.724971, 0, 1.0};
Point(65) = {-0.006508, 0.725234, 0, 1.0};
Point(66) = {-0.001414, 0.725539, 0, 1.0};
Point(67) = {0.003674, 0.725941, 0, 1.0};
Point(68) = {0.008779, 0.726400, 0, 1.0};
Point(69) = {0.013839, 0.726949, 0, 1.0};
Point(70) = {0.018854, 0.727558, 0, 1.0};
Point(71) = {0.023805, 0.728275, 0, 1.0};
Point(72) = {0.028669, 0.729087, 0, 1.0};
Point(73) = {0.033405, 0.730027, 0, 1.0};
Point(74) = {0.038014, 0.731073, 0, 1.0};
Point(75) = {0.042457, 0.732230, 0, 1.0};
Point(76) = {0.046738, 0.733426, 0, 1.0};
Point(77) = {0.050838, 0.734617, 0, 1.0};
Point(78) = {0.054743, 0.735738, 0, 1.0};
Point(79) = {0.058411, 0.736761, 0, 1.0};
Point(80) = {0.061868, 0.737634, 0, 1.0};
Point(81) = {0.065043, 0.738361, 0, 1.0};
Point(82) = {0.068027, 0.738943, 0, 1.0};
Point(83) = {0.070708, 0.739377, 0, 1.0};
Point(84) = {0.073116, 0.739670, 0, 1.0};
Point(85) = {0.074830, 0.739807, 0, 1.0};
Point(86) = {-0.074743, -0.741315, 0, 1.0};
Point(87) = {-0.072992, -0.741819, 0, 1.0};
Point(88) = {-0.070526, -0.742520, 0, 1.0};
Point(89) = {-0.067776, -0.743290, 0, 1.0};
Point(90) = {-0.064710, -0.744115, 0, 1.0};
Point(91) = {-0.061445, -0.744965, 0, 1.0};
Point(92) = {-0.057889, -0.745804, 0, 1.0};
Point(93) = {-0.054117, -0.746585, 0, 1.0};
Point(94) = {-0.050105, -0.747304, 0, 1.0};
Point(95) = {-0.045900, -0.747932, 0, 1.0};
Point(96) = {-0.041518, -0.748482, 0, 1.0};
Point(97) = {-0.036982, -0.748941, 0, 1.0};
Point(98) = {-0.032290, -0.749321, 0, 1.0};
Point(99) = {-0.027484, -0.749600, 0, 1.0};
Point(100) = {-0.022561, -0.749813, 0, 1.0};
Point(101) = {-0.017561, -0.749935, 0, 1.0};
Point(102) = {-0.012507, -0.750000, 0, 1.0};
Point(103) = {-0.007418, -0.749974, 0, 1.0};
Point(104) = {-0.002291, -0.749891, 0, 1.0};
Point(105) = {0.002810, -0.749717, 0, 1.0};
Point(106) = {0.007908, -0.749491, 0, 1.0};
Point(107) = {0.012942, -0.749168, 0, 1.0};
Point(108) = {0.017911, -0.748805, 0, 1.0};
Point(109) = {0.022775, -0.748338, 0, 1.0};
Point(110) = {0.027556, -0.747829, 0, 1.0};
Point(111) = {0.032172, -0.747218, 0, 1.0};
Point(112) = {0.036664, -0.746567, 0, 1.0};
Point(113) = {0.040970, -0.745815, 0, 1.0};
Point(114) = {0.045095, -0.745037, 0, 1.0};
Point(115) = {0.048997, -0.744165, 0, 1.0};
Point(116) = {0.052690, -0.743283, 0, 1.0};
Point(117) = {0.056142, -0.742305, 0, 1.0};
Point(118) = {0.059332, -0.741330, 0, 1.0};
Point(119) = {0.062257, -0.740256, 0, 1.0};
Point(120) = {0.064902, -0.739195, 0, 1.0};
Point(121) = {0.067240, -0.738035, 0, 1.0};
Point(122) = {0.069300, -0.736920, 0, 1.0};
Point(123) = {0.071034, -0.735715, 0, 1.0};
Point(124) = {0.072456, -0.734631, 0, 1.0};
Point(125) = {0.073549, -0.733447, 0, 1.0};
Point(126) = {0.074338, -0.732516, 0, 1.0};
Point(127) = {0.074774, -0.731389, 0, 1.0};
Point(128) = {0.074875, -0.730373, 0, 1.0};
Point(129) = {0.074694, -0.730000, 0, 1.0};
Point(130) = {0.074170, -0.729601, 0, 1.0};
Point(131) = {0.073295, -0.729039, 0, 1.0};
Point(132) = {0.072108, -0.728610, 0, 1.0};
Point(133) = {0.070592, -0.728069, 0, 1.0};
Point(134) = {0.068764, -0.727653, 0, 1.0};
Point(135) = {0.066613, -0.727173, 0, 1.0};
Point(136) = {0.064185, -0.726783, 0, 1.0};
Point(137) = {0.061454, -0.726351, 0, 1.0};
Point(138) = {0.058447, -0.726019, 0, 1.0};
Point(139) = {0.055181, -0.725661, 0, 1.0};
Point(140) = {0.051657, -0.725397, 0, 1.0};
Point(141) = {0.047898, -0.725127, 0, 1.0};
Point(142) = {0.043934, -0.724941, 0, 1.0};
Point(143) = {0.039755, -0.724773, 0, 1.0};
Point(144) = {0.035401, -0.724685, 0, 1.0};
Point(145) = {0.030866, -0.724610, 0, 1.0};
Point(146) = {0.026216, -0.724623, 0, 1.0};
Point(147) = {0.021408, -0.724663, 0, 1.0};
Point(148) = {0.016525, -0.724798, 0, 1.0};
Point(149) = {0.011544, -0.724971, 0, 1.0};
Point(150) = {0.006508, -0.725234, 0, 1.0};
Point(151) = {0.001414, -0.725539, 0, 1.0};
Point(152) = {-0.003674, -0.725941, 0, 1.0};
Point(153) = {-0.008779, -0.726400, 0, 1.0};
Point(154) = {-0.013839, -0.726949, 0, 1.0};
Point(155) = {-0.018854, -0.727558, 0, 1.0};
Point(156) = {-0.023805, -0.728275, 0, 1.0};
Point(157) = {-0.028669, -0.729087, 0, 1.0};
Point(158) = {-0.033405, -0.730027, 0, 1.0};
Point(159) = {-0.038014, -0.731073, 0, 1.0};
Point(160) = {-0.042457, -0.732230, 0, 1.0};
Point(161) = {-0.046738, -0.733426, 0, 1.0};
Point(162) = {-0.050838, -0.734617, 0, 1.0};
Point(163) = {-0.054743, -0.735738, 0, 1.0};
Point(164) = {-0.058411, -0.736761, 0, 1.0};
Point(165) = {-0.061868, -0.737634, 0, 1.0};
Point(166) = {-0.065043, -0.738361, 0, 1.0};
Point(167) = {-0.068027, -0.738943, 0, 1.0};
Point(168) = {-0.070708, -0.739377, 0, 1.0};
Point(169) = {-0.073116, -0.739670, 0, 1.0};
Point(170) = {-0.074830, -0.739807, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:60};
Spline(3) = {60:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:145};
Spline(7) = {145:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
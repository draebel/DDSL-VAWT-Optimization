SetFactory("OpenCASCADE");

Point(1) = {0.075032, 0.733536, 0, 1.0};
Point(2) = {0.074282, 0.733299, 0, 1.0};
Point(3) = {0.070249, 0.732109, 0, 1.0};
Point(4) = {0.065437, 0.730779, 0, 1.0};
Point(5) = {0.059936, 0.729320, 0, 1.0};
Point(6) = {0.053838, 0.727756, 0, 1.0};
Point(7) = {0.047238, 0.726124, 0, 1.0};
Point(8) = {0.040229, 0.724466, 0, 1.0};
Point(9) = {0.032904, 0.722831, 0, 1.0};
Point(10) = {0.025351, 0.721267, 0, 1.0};
Point(11) = {0.017654, 0.719823, 0, 1.0};
Point(12) = {0.009891, 0.718544, 0, 1.0};
Point(13) = {0.002137, 0.717472, 0, 1.0};
Point(14) = {-0.005537, 0.716643, 0, 1.0};
Point(15) = {-0.013066, 0.716091, 0, 1.0};
Point(16) = {-0.020397, 0.715855, 0, 1.0};
Point(17) = {-0.027512, 0.715929, 0, 1.0};
Point(18) = {-0.034340, 0.716297, 0, 1.0};
Point(19) = {-0.040845, 0.716945, 0, 1.0};
Point(20) = {-0.046961, 0.717834, 0, 1.0};
Point(21) = {-0.052623, 0.718940, 0, 1.0};
Point(22) = {-0.057767, 0.720239, 0, 1.0};
Point(23) = {-0.062342, 0.721706, 0, 1.0};
Point(24) = {-0.066292, 0.723312, 0, 1.0};
Point(25) = {-0.069579, 0.725027, 0, 1.0};
Point(26) = {-0.072152, 0.726806, 0, 1.0};
Point(27) = {-0.073968, 0.728600, 0, 1.0};
Point(28) = {-0.074688, 0.729713, 0, 1.0};
Point(29) = {-0.074861, 0.730132, 0, 1.0};
Point(30) = {-0.074914, 0.730313, 0, 1.0};
Point(31) = {-0.074955, 0.730536, 0, 1.0};
Point(32) = {-0.074946, 0.730955, 0, 1.0};
Point(33) = {-0.074863, 0.731415, 0, 1.0};
Point(34) = {-0.074641, 0.732139, 0, 1.0};
Point(35) = {-0.073492, 0.734473, 0, 1.0};
Point(36) = {-0.071823, 0.737274, 0, 1.0};
Point(37) = {-0.069893, 0.740170, 0, 1.0};
Point(38) = {-0.067663, 0.742971, 0, 1.0};
Point(39) = {-0.065184, 0.745419, 0, 1.0};
Point(40) = {-0.062269, 0.747220, 0, 1.0};
Point(41) = {-0.058583, 0.748492, 0, 1.0};
Point(42) = {-0.054206, 0.749377, 0, 1.0};
Point(43) = {-0.049192, 0.749879, 0, 1.0};
Point(44) = {-0.043576, 0.750000, 0, 1.0};
Point(45) = {-0.037390, 0.749746, 0, 1.0};
Point(46) = {-0.030667, 0.749135, 0, 1.0};
Point(47) = {-0.023444, 0.748198, 0, 1.0};
Point(48) = {-0.015767, 0.746978, 0, 1.0};
Point(49) = {-0.007689, 0.745533, 0, 1.0};
Point(50) = {0.000720, 0.743932, 0, 1.0};
Point(51) = {0.009379, 0.742253, 0, 1.0};
Point(52) = {0.018185, 0.740581, 0, 1.0};
Point(53) = {0.027019, 0.739002, 0, 1.0};
Point(54) = {0.035741, 0.737595, 0, 1.0};
Point(55) = {0.044198, 0.736431, 0, 1.0};
Point(56) = {0.052219, 0.735561, 0, 1.0};
Point(57) = {0.059627, 0.735014, 0, 1.0};
Point(58) = {0.066246, 0.734791, 0, 1.0};
Point(59) = {0.071905, 0.734868, 0, 1.0};
Point(60) = {0.074979, 0.735059, 0, 1.0};
Point(61) = {-0.075032, -0.733536, 0, 1.0};
Point(62) = {-0.074282, -0.733299, 0, 1.0};
Point(63) = {-0.070249, -0.732109, 0, 1.0};
Point(64) = {-0.065437, -0.730779, 0, 1.0};
Point(65) = {-0.059936, -0.729320, 0, 1.0};
Point(66) = {-0.053838, -0.727756, 0, 1.0};
Point(67) = {-0.047238, -0.726124, 0, 1.0};
Point(68) = {-0.040229, -0.724466, 0, 1.0};
Point(69) = {-0.032904, -0.722831, 0, 1.0};
Point(70) = {-0.025351, -0.721267, 0, 1.0};
Point(71) = {-0.017654, -0.719823, 0, 1.0};
Point(72) = {-0.009891, -0.718544, 0, 1.0};
Point(73) = {-0.002137, -0.717472, 0, 1.0};
Point(74) = {0.005537, -0.716643, 0, 1.0};
Point(75) = {0.013066, -0.716091, 0, 1.0};
Point(76) = {0.020397, -0.715855, 0, 1.0};
Point(77) = {0.027512, -0.715929, 0, 1.0};
Point(78) = {0.034340, -0.716297, 0, 1.0};
Point(79) = {0.040845, -0.716945, 0, 1.0};
Point(80) = {0.046961, -0.717834, 0, 1.0};
Point(81) = {0.052623, -0.718940, 0, 1.0};
Point(82) = {0.057767, -0.720239, 0, 1.0};
Point(83) = {0.062342, -0.721706, 0, 1.0};
Point(84) = {0.066292, -0.723312, 0, 1.0};
Point(85) = {0.069579, -0.725027, 0, 1.0};
Point(86) = {0.072152, -0.726806, 0, 1.0};
Point(87) = {0.073968, -0.728600, 0, 1.0};
Point(88) = {0.074688, -0.729713, 0, 1.0};
Point(89) = {0.074861, -0.730132, 0, 1.0};
Point(90) = {0.074914, -0.730313, 0, 1.0};
Point(91) = {0.074955, -0.730536, 0, 1.0};
Point(92) = {0.074946, -0.730955, 0, 1.0};
Point(93) = {0.074863, -0.731415, 0, 1.0};
Point(94) = {0.074641, -0.732139, 0, 1.0};
Point(95) = {0.073492, -0.734473, 0, 1.0};
Point(96) = {0.071823, -0.737274, 0, 1.0};
Point(97) = {0.069893, -0.740170, 0, 1.0};
Point(98) = {0.067663, -0.742971, 0, 1.0};
Point(99) = {0.065184, -0.745419, 0, 1.0};
Point(100) = {0.062269, -0.747220, 0, 1.0};
Point(101) = {0.058583, -0.748492, 0, 1.0};
Point(102) = {0.054206, -0.749377, 0, 1.0};
Point(103) = {0.049192, -0.749879, 0, 1.0};
Point(104) = {0.043576, -0.750000, 0, 1.0};
Point(105) = {0.037390, -0.749746, 0, 1.0};
Point(106) = {0.030667, -0.749135, 0, 1.0};
Point(107) = {0.023444, -0.748198, 0, 1.0};
Point(108) = {0.015767, -0.746978, 0, 1.0};
Point(109) = {0.007689, -0.745533, 0, 1.0};
Point(110) = {-0.000720, -0.743932, 0, 1.0};
Point(111) = {-0.009379, -0.742253, 0, 1.0};
Point(112) = {-0.018185, -0.740581, 0, 1.0};
Point(113) = {-0.027019, -0.739002, 0, 1.0};
Point(114) = {-0.035741, -0.737595, 0, 1.0};
Point(115) = {-0.044198, -0.736431, 0, 1.0};
Point(116) = {-0.052219, -0.735561, 0, 1.0};
Point(117) = {-0.059627, -0.735014, 0, 1.0};
Point(118) = {-0.066246, -0.734791, 0, 1.0};
Point(119) = {-0.071905, -0.734868, 0, 1.0};
Point(120) = {-0.074979, -0.735059, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:45};
Spline(3) = {45:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:105};
Spline(7) = {105:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 35 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
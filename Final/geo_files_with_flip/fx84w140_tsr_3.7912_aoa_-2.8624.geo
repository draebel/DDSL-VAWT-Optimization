SetFactory("OpenCASCADE");

Point(1) = {0.074991, 0.747960, 0, 1.0};
Point(2) = {0.073014, 0.747390, 0, 1.0};
Point(3) = {0.070310, 0.746585, 0, 1.0};
Point(4) = {0.067330, 0.745674, 0, 1.0};
Point(5) = {0.064083, 0.744658, 0, 1.0};
Point(6) = {0.060586, 0.743554, 0, 1.0};
Point(7) = {0.056852, 0.742369, 0, 1.0};
Point(8) = {0.052898, 0.741120, 0, 1.0};
Point(9) = {0.048740, 0.739827, 0, 1.0};
Point(10) = {0.044392, 0.738503, 0, 1.0};
Point(11) = {0.039875, 0.737171, 0, 1.0};
Point(12) = {0.035208, 0.735853, 0, 1.0};
Point(13) = {0.030410, 0.734567, 0, 1.0};
Point(14) = {0.025498, 0.733336, 0, 1.0};
Point(15) = {0.020496, 0.732179, 0, 1.0};
Point(16) = {0.015421, 0.731108, 0, 1.0};
Point(17) = {0.010298, 0.730148, 0, 1.0};
Point(18) = {0.005147, 0.729306, 0, 1.0};
Point(19) = {-0.000011, 0.728594, 0, 1.0};
Point(20) = {-0.005154, 0.728029, 0, 1.0};
Point(21) = {-0.010261, 0.727605, 0, 1.0};
Point(22) = {-0.015308, 0.727334, 0, 1.0};
Point(23) = {-0.020274, 0.727217, 0, 1.0};
Point(24) = {-0.025139, 0.727247, 0, 1.0};
Point(25) = {-0.029881, 0.727431, 0, 1.0};
Point(26) = {-0.034481, 0.727753, 0, 1.0};
Point(27) = {-0.038917, 0.728205, 0, 1.0};
Point(28) = {-0.043169, 0.728782, 0, 1.0};
Point(29) = {-0.047219, 0.729459, 0, 1.0};
Point(30) = {-0.051051, 0.730235, 0, 1.0};
Point(31) = {-0.054647, 0.731098, 0, 1.0};
Point(32) = {-0.057991, 0.732037, 0, 1.0};
Point(33) = {-0.061066, 0.733036, 0, 1.0};
Point(34) = {-0.063863, 0.734071, 0, 1.0};
Point(35) = {-0.066366, 0.735131, 0, 1.0};
Point(36) = {-0.068564, 0.736201, 0, 1.0};
Point(37) = {-0.070448, 0.737266, 0, 1.0};
Point(38) = {-0.072008, 0.738316, 0, 1.0};
Point(39) = {-0.073239, 0.739331, 0, 1.0};
Point(40) = {-0.074135, 0.740322, 0, 1.0};
Point(41) = {-0.074692, 0.741272, 0, 1.0};
Point(42) = {-0.074906, 0.742157, 0, 1.0};
Point(43) = {-0.074777, 0.742972, 0, 1.0};
Point(44) = {-0.074304, 0.743714, 0, 1.0};
Point(45) = {-0.073492, 0.744402, 0, 1.0};
Point(46) = {-0.072344, 0.745040, 0, 1.0};
Point(47) = {-0.070866, 0.745611, 0, 1.0};
Point(48) = {-0.069060, 0.746123, 0, 1.0};
Point(49) = {-0.066939, 0.746580, 0, 1.0};
Point(50) = {-0.064509, 0.746988, 0, 1.0};
Point(51) = {-0.061782, 0.747350, 0, 1.0};
Point(52) = {-0.058773, 0.747672, 0, 1.0};
Point(53) = {-0.055490, 0.747960, 0, 1.0};
Point(54) = {-0.051950, 0.748219, 0, 1.0};
Point(55) = {-0.048169, 0.748453, 0, 1.0};
Point(56) = {-0.044163, 0.748666, 0, 1.0};
Point(57) = {-0.039950, 0.748862, 0, 1.0};
Point(58) = {-0.035545, 0.749044, 0, 1.0};
Point(59) = {-0.030970, 0.749214, 0, 1.0};
Point(60) = {-0.026245, 0.749371, 0, 1.0};
Point(61) = {-0.021389, 0.749515, 0, 1.0};
Point(62) = {-0.016423, 0.749643, 0, 1.0};
Point(63) = {-0.011369, 0.749756, 0, 1.0};
Point(64) = {-0.006245, 0.749850, 0, 1.0};
Point(65) = {-0.001077, 0.749923, 0, 1.0};
Point(66) = {0.004113, 0.749973, 0, 1.0};
Point(67) = {0.009306, 0.749999, 0, 1.0};
Point(68) = {0.014477, 0.750000, 0, 1.0};
Point(69) = {0.019606, 0.749977, 0, 1.0};
Point(70) = {0.024669, 0.749930, 0, 1.0};
Point(71) = {0.029645, 0.749864, 0, 1.0};
Point(72) = {0.034512, 0.749782, 0, 1.0};
Point(73) = {0.039249, 0.749689, 0, 1.0};
Point(74) = {0.043838, 0.749591, 0, 1.0};
Point(75) = {0.048256, 0.749494, 0, 1.0};
Point(76) = {0.052484, 0.749408, 0, 1.0};
Point(77) = {0.056504, 0.749336, 0, 1.0};
Point(78) = {0.060299, 0.749285, 0, 1.0};
Point(79) = {0.063853, 0.749259, 0, 1.0};
Point(80) = {0.067150, 0.749262, 0, 1.0};
Point(81) = {0.070174, 0.749296, 0, 1.0};
Point(82) = {0.072916, 0.749355, 0, 1.0};
Point(83) = {0.074918, 0.749422, 0, 1.0};
Point(84) = {-0.074991, -0.747960, 0, 1.0};
Point(85) = {-0.073014, -0.747390, 0, 1.0};
Point(86) = {-0.070310, -0.746585, 0, 1.0};
Point(87) = {-0.067330, -0.745674, 0, 1.0};
Point(88) = {-0.064083, -0.744658, 0, 1.0};
Point(89) = {-0.060586, -0.743554, 0, 1.0};
Point(90) = {-0.056852, -0.742369, 0, 1.0};
Point(91) = {-0.052898, -0.741120, 0, 1.0};
Point(92) = {-0.048740, -0.739827, 0, 1.0};
Point(93) = {-0.044392, -0.738503, 0, 1.0};
Point(94) = {-0.039875, -0.737171, 0, 1.0};
Point(95) = {-0.035208, -0.735853, 0, 1.0};
Point(96) = {-0.030410, -0.734567, 0, 1.0};
Point(97) = {-0.025498, -0.733336, 0, 1.0};
Point(98) = {-0.020496, -0.732179, 0, 1.0};
Point(99) = {-0.015421, -0.731108, 0, 1.0};
Point(100) = {-0.010298, -0.730148, 0, 1.0};
Point(101) = {-0.005147, -0.729306, 0, 1.0};
Point(102) = {0.000011, -0.728594, 0, 1.0};
Point(103) = {0.005154, -0.728029, 0, 1.0};
Point(104) = {0.010261, -0.727605, 0, 1.0};
Point(105) = {0.015308, -0.727334, 0, 1.0};
Point(106) = {0.020274, -0.727217, 0, 1.0};
Point(107) = {0.025139, -0.727247, 0, 1.0};
Point(108) = {0.029881, -0.727431, 0, 1.0};
Point(109) = {0.034481, -0.727753, 0, 1.0};
Point(110) = {0.038917, -0.728205, 0, 1.0};
Point(111) = {0.043169, -0.728782, 0, 1.0};
Point(112) = {0.047219, -0.729459, 0, 1.0};
Point(113) = {0.051051, -0.730235, 0, 1.0};
Point(114) = {0.054647, -0.731098, 0, 1.0};
Point(115) = {0.057991, -0.732037, 0, 1.0};
Point(116) = {0.061066, -0.733036, 0, 1.0};
Point(117) = {0.063863, -0.734071, 0, 1.0};
Point(118) = {0.066366, -0.735131, 0, 1.0};
Point(119) = {0.068564, -0.736201, 0, 1.0};
Point(120) = {0.070448, -0.737266, 0, 1.0};
Point(121) = {0.072008, -0.738316, 0, 1.0};
Point(122) = {0.073239, -0.739331, 0, 1.0};
Point(123) = {0.074135, -0.740322, 0, 1.0};
Point(124) = {0.074692, -0.741272, 0, 1.0};
Point(125) = {0.074906, -0.742157, 0, 1.0};
Point(126) = {0.074777, -0.742972, 0, 1.0};
Point(127) = {0.074304, -0.743714, 0, 1.0};
Point(128) = {0.073492, -0.744402, 0, 1.0};
Point(129) = {0.072344, -0.745040, 0, 1.0};
Point(130) = {0.070866, -0.745611, 0, 1.0};
Point(131) = {0.069060, -0.746123, 0, 1.0};
Point(132) = {0.066939, -0.746580, 0, 1.0};
Point(133) = {0.064509, -0.746988, 0, 1.0};
Point(134) = {0.061782, -0.747350, 0, 1.0};
Point(135) = {0.058773, -0.747672, 0, 1.0};
Point(136) = {0.055490, -0.747960, 0, 1.0};
Point(137) = {0.051950, -0.748219, 0, 1.0};
Point(138) = {0.048169, -0.748453, 0, 1.0};
Point(139) = {0.044163, -0.748666, 0, 1.0};
Point(140) = {0.039950, -0.748862, 0, 1.0};
Point(141) = {0.035545, -0.749044, 0, 1.0};
Point(142) = {0.030970, -0.749214, 0, 1.0};
Point(143) = {0.026245, -0.749371, 0, 1.0};
Point(144) = {0.021389, -0.749515, 0, 1.0};
Point(145) = {0.016423, -0.749643, 0, 1.0};
Point(146) = {0.011369, -0.749756, 0, 1.0};
Point(147) = {0.006245, -0.749850, 0, 1.0};
Point(148) = {0.001077, -0.749923, 0, 1.0};
Point(149) = {-0.004113, -0.749973, 0, 1.0};
Point(150) = {-0.009306, -0.749999, 0, 1.0};
Point(151) = {-0.014477, -0.750000, 0, 1.0};
Point(152) = {-0.019606, -0.749977, 0, 1.0};
Point(153) = {-0.024669, -0.749930, 0, 1.0};
Point(154) = {-0.029645, -0.749864, 0, 1.0};
Point(155) = {-0.034512, -0.749782, 0, 1.0};
Point(156) = {-0.039249, -0.749689, 0, 1.0};
Point(157) = {-0.043838, -0.749591, 0, 1.0};
Point(158) = {-0.048256, -0.749494, 0, 1.0};
Point(159) = {-0.052484, -0.749408, 0, 1.0};
Point(160) = {-0.056504, -0.749336, 0, 1.0};
Point(161) = {-0.060299, -0.749285, 0, 1.0};
Point(162) = {-0.063853, -0.749259, 0, 1.0};
Point(163) = {-0.067150, -0.749262, 0, 1.0};
Point(164) = {-0.070174, -0.749296, 0, 1.0};
Point(165) = {-0.072916, -0.749355, 0, 1.0};
Point(166) = {-0.074918, -0.749422, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
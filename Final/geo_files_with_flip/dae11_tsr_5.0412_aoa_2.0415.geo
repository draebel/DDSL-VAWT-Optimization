SetFactory("OpenCASCADE");

Point(1) = {0.074869, 0.740154, 0, 1.0};
Point(2) = {0.073334, 0.739899, 0, 1.0};
Point(3) = {0.068343, 0.738915, 0, 1.0};
Point(4) = {0.063451, 0.737866, 0, 1.0};
Point(5) = {0.058559, 0.736742, 0, 1.0};
Point(6) = {0.053637, 0.735551, 0, 1.0};
Point(7) = {0.048671, 0.734303, 0, 1.0};
Point(8) = {0.043652, 0.733012, 0, 1.0};
Point(9) = {0.038599, 0.731699, 0, 1.0};
Point(10) = {0.033632, 0.730423, 0, 1.0};
Point(11) = {0.028772, 0.729224, 0, 1.0};
Point(12) = {0.024016, 0.728134, 0, 1.0};
Point(13) = {0.019342, 0.727182, 0, 1.0};
Point(14) = {0.014714, 0.726388, 0, 1.0};
Point(15) = {0.010089, 0.725754, 0, 1.0};
Point(16) = {0.005441, 0.725273, 0, 1.0};
Point(17) = {0.000767, 0.724936, 0, 1.0};
Point(18) = {-0.003922, 0.724744, 0, 1.0};
Point(19) = {-0.008617, 0.724697, 0, 1.0};
Point(20) = {-0.013315, 0.724797, 0, 1.0};
Point(21) = {-0.018012, 0.725040, 0, 1.0};
Point(22) = {-0.022694, 0.725424, 0, 1.0};
Point(23) = {-0.027350, 0.725952, 0, 1.0};
Point(24) = {-0.031972, 0.726626, 0, 1.0};
Point(25) = {-0.036550, 0.727448, 0, 1.0};
Point(26) = {-0.041067, 0.728422, 0, 1.0};
Point(27) = {-0.045503, 0.729551, 0, 1.0};
Point(28) = {-0.049827, 0.730839, 0, 1.0};
Point(29) = {-0.054007, 0.732284, 0, 1.0};
Point(30) = {-0.057996, 0.733884, 0, 1.0};
Point(31) = {-0.061736, 0.735626, 0, 1.0};
Point(32) = {-0.065152, 0.737489, 0, 1.0};
Point(33) = {-0.068142, 0.739417, 0, 1.0};
Point(34) = {-0.070597, 0.741322, 0, 1.0};
Point(35) = {-0.072453, 0.743099, 0, 1.0};
Point(36) = {-0.073724, 0.744663, 0, 1.0};
Point(37) = {-0.074487, 0.745962, 0, 1.0};
Point(38) = {-0.074860, 0.746999, 0, 1.0};
Point(39) = {-0.074952, 0.747834, 0, 1.0};
Point(40) = {-0.074853, 0.748394, 0, 1.0};
Point(41) = {-0.074590, 0.748860, 0, 1.0};
Point(42) = {-0.074189, 0.749228, 0, 1.0};
Point(43) = {-0.073585, 0.749515, 0, 1.0};
Point(44) = {-0.072601, 0.749751, 0, 1.0};
Point(45) = {-0.070903, 0.749934, 0, 1.0};
Point(46) = {-0.068171, 0.750000, 0, 1.0};
Point(47) = {-0.064383, 0.749894, 0, 1.0};
Point(48) = {-0.059910, 0.749636, 0, 1.0};
Point(49) = {-0.055075, 0.749275, 0, 1.0};
Point(50) = {-0.050062, 0.748846, 0, 1.0};
Point(51) = {-0.044950, 0.748376, 0, 1.0};
Point(52) = {-0.039782, 0.747882, 0, 1.0};
Point(53) = {-0.034578, 0.747376, 0, 1.0};
Point(54) = {-0.029351, 0.746865, 0, 1.0};
Point(55) = {-0.024122, 0.746356, 0, 1.0};
Point(56) = {-0.018907, 0.745855, 0, 1.0};
Point(57) = {-0.013705, 0.745367, 0, 1.0};
Point(58) = {-0.008515, 0.744894, 0, 1.0};
Point(59) = {-0.003336, 0.744440, 0, 1.0};
Point(60) = {0.001832, 0.744008, 0, 1.0};
Point(61) = {0.006988, 0.743600, 0, 1.0};
Point(62) = {0.012133, 0.743225, 0, 1.0};
Point(63) = {0.017271, 0.742883, 0, 1.0};
Point(64) = {0.022403, 0.742577, 0, 1.0};
Point(65) = {0.027532, 0.742309, 0, 1.0};
Point(66) = {0.032659, 0.742079, 0, 1.0};
Point(67) = {0.037786, 0.741885, 0, 1.0};
Point(68) = {0.042911, 0.741728, 0, 1.0};
Point(69) = {0.048032, 0.741607, 0, 1.0};
Point(70) = {0.053145, 0.741525, 0, 1.0};
Point(71) = {0.058250, 0.741484, 0, 1.0};
Point(72) = {0.063355, 0.741487, 0, 1.0};
Point(73) = {0.068495, 0.741535, 0, 1.0};
Point(74) = {0.073623, 0.741630, 0, 1.0};
Point(75) = {0.074923, 0.741661, 0, 1.0};
Point(76) = {-0.074869, -0.740154, 0, 1.0};
Point(77) = {-0.073334, -0.739899, 0, 1.0};
Point(78) = {-0.068343, -0.738915, 0, 1.0};
Point(79) = {-0.063451, -0.737866, 0, 1.0};
Point(80) = {-0.058559, -0.736742, 0, 1.0};
Point(81) = {-0.053637, -0.735551, 0, 1.0};
Point(82) = {-0.048671, -0.734303, 0, 1.0};
Point(83) = {-0.043652, -0.733012, 0, 1.0};
Point(84) = {-0.038599, -0.731699, 0, 1.0};
Point(85) = {-0.033632, -0.730423, 0, 1.0};
Point(86) = {-0.028772, -0.729224, 0, 1.0};
Point(87) = {-0.024016, -0.728134, 0, 1.0};
Point(88) = {-0.019342, -0.727182, 0, 1.0};
Point(89) = {-0.014714, -0.726388, 0, 1.0};
Point(90) = {-0.010089, -0.725754, 0, 1.0};
Point(91) = {-0.005441, -0.725273, 0, 1.0};
Point(92) = {-0.000767, -0.724936, 0, 1.0};
Point(93) = {0.003922, -0.724744, 0, 1.0};
Point(94) = {0.008617, -0.724697, 0, 1.0};
Point(95) = {0.013315, -0.724797, 0, 1.0};
Point(96) = {0.018012, -0.725040, 0, 1.0};
Point(97) = {0.022694, -0.725424, 0, 1.0};
Point(98) = {0.027350, -0.725952, 0, 1.0};
Point(99) = {0.031972, -0.726626, 0, 1.0};
Point(100) = {0.036550, -0.727448, 0, 1.0};
Point(101) = {0.041067, -0.728422, 0, 1.0};
Point(102) = {0.045503, -0.729551, 0, 1.0};
Point(103) = {0.049827, -0.730839, 0, 1.0};
Point(104) = {0.054007, -0.732284, 0, 1.0};
Point(105) = {0.057996, -0.733884, 0, 1.0};
Point(106) = {0.061736, -0.735626, 0, 1.0};
Point(107) = {0.065152, -0.737489, 0, 1.0};
Point(108) = {0.068142, -0.739417, 0, 1.0};
Point(109) = {0.070597, -0.741322, 0, 1.0};
Point(110) = {0.072453, -0.743099, 0, 1.0};
Point(111) = {0.073724, -0.744663, 0, 1.0};
Point(112) = {0.074487, -0.745962, 0, 1.0};
Point(113) = {0.074860, -0.746999, 0, 1.0};
Point(114) = {0.074952, -0.747834, 0, 1.0};
Point(115) = {0.074853, -0.748394, 0, 1.0};
Point(116) = {0.074590, -0.748860, 0, 1.0};
Point(117) = {0.074189, -0.749228, 0, 1.0};
Point(118) = {0.073585, -0.749515, 0, 1.0};
Point(119) = {0.072601, -0.749751, 0, 1.0};
Point(120) = {0.070903, -0.749934, 0, 1.0};
Point(121) = {0.068171, -0.750000, 0, 1.0};
Point(122) = {0.064383, -0.749894, 0, 1.0};
Point(123) = {0.059910, -0.749636, 0, 1.0};
Point(124) = {0.055075, -0.749275, 0, 1.0};
Point(125) = {0.050062, -0.748846, 0, 1.0};
Point(126) = {0.044950, -0.748376, 0, 1.0};
Point(127) = {0.039782, -0.747882, 0, 1.0};
Point(128) = {0.034578, -0.747376, 0, 1.0};
Point(129) = {0.029351, -0.746865, 0, 1.0};
Point(130) = {0.024122, -0.746356, 0, 1.0};
Point(131) = {0.018907, -0.745855, 0, 1.0};
Point(132) = {0.013705, -0.745367, 0, 1.0};
Point(133) = {0.008515, -0.744894, 0, 1.0};
Point(134) = {0.003336, -0.744440, 0, 1.0};
Point(135) = {-0.001832, -0.744008, 0, 1.0};
Point(136) = {-0.006988, -0.743600, 0, 1.0};
Point(137) = {-0.012133, -0.743225, 0, 1.0};
Point(138) = {-0.017271, -0.742883, 0, 1.0};
Point(139) = {-0.022403, -0.742577, 0, 1.0};
Point(140) = {-0.027532, -0.742309, 0, 1.0};
Point(141) = {-0.032659, -0.742079, 0, 1.0};
Point(142) = {-0.037786, -0.741885, 0, 1.0};
Point(143) = {-0.042911, -0.741728, 0, 1.0};
Point(144) = {-0.048032, -0.741607, 0, 1.0};
Point(145) = {-0.053145, -0.741525, 0, 1.0};
Point(146) = {-0.058250, -0.741484, 0, 1.0};
Point(147) = {-0.063355, -0.741487, 0, 1.0};
Point(148) = {-0.068495, -0.741535, 0, 1.0};
Point(149) = {-0.073623, -0.741630, 0, 1.0};
Point(150) = {-0.074923, -0.741661, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:53};
Spline(3) = {53:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:100};
Spline(6) = {100:128};
Spline(7) = {128:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
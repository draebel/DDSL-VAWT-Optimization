SetFactory("OpenCASCADE");

Point(1) = {0.073814, 0.724209, 0, 1.0};
Point(2) = {0.072753, 0.724177, 0, 1.0};
Point(3) = {0.069246, 0.724010, 0, 1.0};
Point(4) = {0.065470, 0.723843, 0, 1.0};
Point(5) = {0.061441, 0.723683, 0, 1.0};
Point(6) = {0.057177, 0.723531, 0, 1.0};
Point(7) = {0.052699, 0.723403, 0, 1.0};
Point(8) = {0.048023, 0.723304, 0, 1.0};
Point(9) = {0.043174, 0.723254, 0, 1.0};
Point(10) = {0.038174, 0.723251, 0, 1.0};
Point(11) = {0.033046, 0.723313, 0, 1.0};
Point(12) = {0.027810, 0.723431, 0, 1.0};
Point(13) = {0.022493, 0.723622, 0, 1.0};
Point(14) = {0.017111, 0.723872, 0, 1.0};
Point(15) = {0.011694, 0.724195, 0, 1.0};
Point(16) = {0.006261, 0.724567, 0, 1.0};
Point(17) = {0.000839, 0.725018, 0, 1.0};
Point(18) = {-0.004553, 0.725519, 0, 1.0};
Point(19) = {-0.009886, 0.726112, 0, 1.0};
Point(20) = {-0.015139, 0.726764, 0, 1.0};
Point(21) = {-0.020287, 0.727506, 0, 1.0};
Point(22) = {-0.025312, 0.728299, 0, 1.0};
Point(23) = {-0.030186, 0.729184, 0, 1.0};
Point(24) = {-0.034898, 0.730108, 0, 1.0};
Point(25) = {-0.039416, 0.731125, 0, 1.0};
Point(26) = {-0.043730, 0.732166, 0, 1.0};
Point(27) = {-0.047814, 0.733290, 0, 1.0};
Point(28) = {-0.051661, 0.734420, 0, 1.0};
Point(29) = {-0.055245, 0.735621, 0, 1.0};
Point(30) = {-0.058562, 0.736793, 0, 1.0};
Point(31) = {-0.061583, 0.738030, 0, 1.0};
Point(32) = {-0.064315, 0.739215, 0, 1.0};
Point(33) = {-0.066725, 0.740483, 0, 1.0};
Point(34) = {-0.068822, 0.741672, 0, 1.0};
Point(35) = {-0.070585, 0.742886, 0, 1.0};
Point(36) = {-0.072012, 0.744060, 0, 1.0};
Point(37) = {-0.073096, 0.745208, 0, 1.0};
Point(38) = {-0.073827, 0.746369, 0, 1.0};
Point(39) = {-0.074223, 0.747381, 0, 1.0};
Point(40) = {-0.074265, 0.748350, 0, 1.0};
Point(41) = {-0.074043, 0.748654, 0, 1.0};
Point(42) = {-0.073460, 0.748968, 0, 1.0};
Point(43) = {-0.072524, 0.749264, 0, 1.0};
Point(44) = {-0.071238, 0.749550, 0, 1.0};
Point(45) = {-0.069612, 0.749786, 0, 1.0};
Point(46) = {-0.067661, 0.749904, 0, 1.0};
Point(47) = {-0.065383, 0.750000, 0, 1.0};
Point(48) = {-0.062803, 0.749943, 0, 1.0};
Point(49) = {-0.059915, 0.749866, 0, 1.0};
Point(50) = {-0.056749, 0.749648, 0, 1.0};
Point(51) = {-0.053304, 0.749382, 0, 1.0};
Point(52) = {-0.049608, 0.748979, 0, 1.0};
Point(53) = {-0.045667, 0.748517, 0, 1.0};
Point(54) = {-0.041508, 0.747925, 0, 1.0};
Point(55) = {-0.037140, 0.747268, 0, 1.0};
Point(56) = {-0.032589, 0.746482, 0, 1.0};
Point(57) = {-0.027868, 0.745625, 0, 1.0};
Point(58) = {-0.023007, 0.744646, 0, 1.0};
Point(59) = {-0.018018, 0.743598, 0, 1.0};
Point(60) = {-0.012928, 0.742448, 0, 1.0};
Point(61) = {-0.007752, 0.741248, 0, 1.0};
Point(62) = {-0.002513, 0.739986, 0, 1.0};
Point(63) = {0.002770, 0.738715, 0, 1.0};
Point(64) = {0.008073, 0.737420, 0, 1.0};
Point(65) = {0.013379, 0.736147, 0, 1.0};
Point(66) = {0.018663, 0.734883, 0, 1.0};
Point(67) = {0.023910, 0.733676, 0, 1.0};
Point(68) = {0.029092, 0.732522, 0, 1.0};
Point(69) = {0.034195, 0.731462, 0, 1.0};
Point(70) = {0.039193, 0.730477, 0, 1.0};
Point(71) = {0.044066, 0.729584, 0, 1.0};
Point(72) = {0.048793, 0.728770, 0, 1.0};
Point(73) = {0.053354, 0.728053, 0, 1.0};
Point(74) = {0.057726, 0.727423, 0, 1.0};
Point(75) = {0.061894, 0.726892, 0, 1.0};
Point(76) = {0.065837, 0.726449, 0, 1.0};
Point(77) = {0.069539, 0.726084, 0, 1.0};
Point(78) = {0.072980, 0.725790, 0, 1.0};
Point(79) = {0.074026, 0.725711, 0, 1.0};
Point(80) = {-0.073814, -0.724209, 0, 1.0};
Point(81) = {-0.072753, -0.724177, 0, 1.0};
Point(82) = {-0.069246, -0.724010, 0, 1.0};
Point(83) = {-0.065470, -0.723843, 0, 1.0};
Point(84) = {-0.061441, -0.723683, 0, 1.0};
Point(85) = {-0.057177, -0.723531, 0, 1.0};
Point(86) = {-0.052699, -0.723403, 0, 1.0};
Point(87) = {-0.048023, -0.723304, 0, 1.0};
Point(88) = {-0.043174, -0.723254, 0, 1.0};
Point(89) = {-0.038174, -0.723251, 0, 1.0};
Point(90) = {-0.033046, -0.723313, 0, 1.0};
Point(91) = {-0.027810, -0.723431, 0, 1.0};
Point(92) = {-0.022493, -0.723622, 0, 1.0};
Point(93) = {-0.017111, -0.723872, 0, 1.0};
Point(94) = {-0.011694, -0.724195, 0, 1.0};
Point(95) = {-0.006261, -0.724567, 0, 1.0};
Point(96) = {-0.000839, -0.725018, 0, 1.0};
Point(97) = {0.004553, -0.725519, 0, 1.0};
Point(98) = {0.009886, -0.726112, 0, 1.0};
Point(99) = {0.015139, -0.726764, 0, 1.0};
Point(100) = {0.020287, -0.727506, 0, 1.0};
Point(101) = {0.025312, -0.728299, 0, 1.0};
Point(102) = {0.030186, -0.729184, 0, 1.0};
Point(103) = {0.034898, -0.730108, 0, 1.0};
Point(104) = {0.039416, -0.731125, 0, 1.0};
Point(105) = {0.043730, -0.732166, 0, 1.0};
Point(106) = {0.047814, -0.733290, 0, 1.0};
Point(107) = {0.051661, -0.734420, 0, 1.0};
Point(108) = {0.055245, -0.735621, 0, 1.0};
Point(109) = {0.058562, -0.736793, 0, 1.0};
Point(110) = {0.061583, -0.738030, 0, 1.0};
Point(111) = {0.064315, -0.739215, 0, 1.0};
Point(112) = {0.066725, -0.740483, 0, 1.0};
Point(113) = {0.068822, -0.741672, 0, 1.0};
Point(114) = {0.070585, -0.742886, 0, 1.0};
Point(115) = {0.072012, -0.744060, 0, 1.0};
Point(116) = {0.073096, -0.745208, 0, 1.0};
Point(117) = {0.073827, -0.746369, 0, 1.0};
Point(118) = {0.074223, -0.747381, 0, 1.0};
Point(119) = {0.074265, -0.748350, 0, 1.0};
Point(120) = {0.074043, -0.748654, 0, 1.0};
Point(121) = {0.073460, -0.748968, 0, 1.0};
Point(122) = {0.072524, -0.749264, 0, 1.0};
Point(123) = {0.071238, -0.749550, 0, 1.0};
Point(124) = {0.069612, -0.749786, 0, 1.0};
Point(125) = {0.067661, -0.749904, 0, 1.0};
Point(126) = {0.065383, -0.750000, 0, 1.0};
Point(127) = {0.062803, -0.749943, 0, 1.0};
Point(128) = {0.059915, -0.749866, 0, 1.0};
Point(129) = {0.056749, -0.749648, 0, 1.0};
Point(130) = {0.053304, -0.749382, 0, 1.0};
Point(131) = {0.049608, -0.748979, 0, 1.0};
Point(132) = {0.045667, -0.748517, 0, 1.0};
Point(133) = {0.041508, -0.747925, 0, 1.0};
Point(134) = {0.037140, -0.747268, 0, 1.0};
Point(135) = {0.032589, -0.746482, 0, 1.0};
Point(136) = {0.027868, -0.745625, 0, 1.0};
Point(137) = {0.023007, -0.744646, 0, 1.0};
Point(138) = {0.018018, -0.743598, 0, 1.0};
Point(139) = {0.012928, -0.742448, 0, 1.0};
Point(140) = {0.007752, -0.741248, 0, 1.0};
Point(141) = {0.002513, -0.739986, 0, 1.0};
Point(142) = {-0.002770, -0.738715, 0, 1.0};
Point(143) = {-0.008073, -0.737420, 0, 1.0};
Point(144) = {-0.013379, -0.736147, 0, 1.0};
Point(145) = {-0.018663, -0.734883, 0, 1.0};
Point(146) = {-0.023910, -0.733676, 0, 1.0};
Point(147) = {-0.029092, -0.732522, 0, 1.0};
Point(148) = {-0.034195, -0.731462, 0, 1.0};
Point(149) = {-0.039193, -0.730477, 0, 1.0};
Point(150) = {-0.044066, -0.729584, 0, 1.0};
Point(151) = {-0.048793, -0.728770, 0, 1.0};
Point(152) = {-0.053354, -0.728053, 0, 1.0};
Point(153) = {-0.057726, -0.727423, 0, 1.0};
Point(154) = {-0.061894, -0.726892, 0, 1.0};
Point(155) = {-0.065837, -0.726449, 0, 1.0};
Point(156) = {-0.069539, -0.726084, 0, 1.0};
Point(157) = {-0.072980, -0.725790, 0, 1.0};
Point(158) = {-0.074026, -0.725711, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:24};
Spline(2) = {24:56};
Spline(3) = {56:79};
Spline(4) = {79,1};

// Lines: second blade (splines 5-8)
Spline(5) = {80:103};
Spline(6) = {103:135};
Spline(7) = {135:158};
Spline(8) = {158,80};

// Outer domain (points 20001-4 and lines)
Point(159) = {-13.50000000, -15.00000000, 0, 1.0};
Point(160) = {-13.50000000, 15.00000000, 0, 1.0};
Point(161) = {13.50000000, 15.00000000, 0, 1.0};
Point(162) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {159, 160};
Line(12) = {160, 161};
Line(13) = {161, 162};
Line(14) = {159, 162};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074514, 0.748483, 0, 1.0};
Point(2) = {0.072909, 0.747957, 0, 1.0};
Point(3) = {0.068935, 0.746730, 0, 1.0};
Point(4) = {0.064178, 0.745306, 0, 1.0};
Point(5) = {0.058721, 0.743675, 0, 1.0};
Point(6) = {0.052651, 0.741851, 0, 1.0};
Point(7) = {0.046066, 0.739854, 0, 1.0};
Point(8) = {0.039066, 0.737721, 0, 1.0};
Point(9) = {0.031753, 0.735490, 0, 1.0};
Point(10) = {0.024225, 0.733213, 0, 1.0};
Point(11) = {0.016579, 0.730941, 0, 1.0};
Point(12) = {0.008910, 0.728731, 0, 1.0};
Point(13) = {0.001298, 0.726640, 0, 1.0};
Point(14) = {-0.006179, 0.724724, 0, 1.0};
Point(15) = {-0.013450, 0.723035, 0, 1.0};
Point(16) = {-0.020456, 0.721624, 0, 1.0};
Point(17) = {-0.027142, 0.720541, 0, 1.0};
Point(18) = {-0.033494, 0.719833, 0, 1.0};
Point(19) = {-0.039508, 0.719503, 0, 1.0};
Point(20) = {-0.045163, 0.719522, 0, 1.0};
Point(21) = {-0.050430, 0.719861, 0, 1.0};
Point(22) = {-0.055268, 0.720479, 0, 1.0};
Point(23) = {-0.059637, 0.721340, 0, 1.0};
Point(24) = {-0.063496, 0.722409, 0, 1.0};
Point(25) = {-0.066812, 0.723641, 0, 1.0};
Point(26) = {-0.069551, 0.724998, 0, 1.0};
Point(27) = {-0.071694, 0.726430, 0, 1.0};
Point(28) = {-0.073223, 0.727872, 0, 1.0};
Point(29) = {-0.074120, 0.729242, 0, 1.0};
Point(30) = {-0.074282, 0.729683, 0, 1.0};
Point(31) = {-0.074352, 0.730036, 0, 1.0};
Point(32) = {-0.074367, 0.730255, 0, 1.0};
Point(33) = {-0.074353, 0.730460, 0, 1.0};
Point(34) = {-0.074336, 0.730555, 0, 1.0};
Point(35) = {-0.074308, 0.730644, 0, 1.0};
Point(36) = {-0.074271, 0.730725, 0, 1.0};
Point(37) = {-0.074218, 0.730799, 0, 1.0};
Point(38) = {-0.074149, 0.730873, 0, 1.0};
Point(39) = {-0.074066, 0.730946, 0, 1.0};
Point(40) = {-0.073864, 0.731089, 0, 1.0};
Point(41) = {-0.073618, 0.731230, 0, 1.0};
Point(42) = {-0.073171, 0.731438, 0, 1.0};
Point(43) = {-0.071901, 0.731896, 0, 1.0};
Point(44) = {-0.069140, 0.732598, 0, 1.0};
Point(45) = {-0.065437, 0.733315, 0, 1.0};
Point(46) = {-0.060840, 0.734085, 0, 1.0};
Point(47) = {-0.055430, 0.734951, 0, 1.0};
Point(48) = {-0.049316, 0.735925, 0, 1.0};
Point(49) = {-0.042604, 0.736995, 0, 1.0};
Point(50) = {-0.035397, 0.738136, 0, 1.0};
Point(51) = {-0.027787, 0.739316, 0, 1.0};
Point(52) = {-0.019859, 0.740513, 0, 1.0};
Point(53) = {-0.011705, 0.741706, 0, 1.0};
Point(54) = {-0.003415, 0.742882, 0, 1.0};
Point(55) = {0.004914, 0.744020, 0, 1.0};
Point(56) = {0.013189, 0.745107, 0, 1.0};
Point(57) = {0.021316, 0.746124, 0, 1.0};
Point(58) = {0.029203, 0.747055, 0, 1.0};
Point(59) = {0.036759, 0.747881, 0, 1.0};
Point(60) = {0.043899, 0.748585, 0, 1.0};
Point(61) = {0.050543, 0.749123, 0, 1.0};
Point(62) = {0.056679, 0.749445, 0, 1.0};
Point(63) = {0.062342, 0.749605, 0, 1.0};
Point(64) = {0.067466, 0.749726, 0, 1.0};
Point(65) = {0.071916, 0.749874, 0, 1.0};
Point(66) = {0.074314, 0.750000, 0, 1.0};
Point(67) = {-0.074514, -0.748483, 0, 1.0};
Point(68) = {-0.072909, -0.747957, 0, 1.0};
Point(69) = {-0.068935, -0.746730, 0, 1.0};
Point(70) = {-0.064178, -0.745306, 0, 1.0};
Point(71) = {-0.058721, -0.743675, 0, 1.0};
Point(72) = {-0.052651, -0.741851, 0, 1.0};
Point(73) = {-0.046066, -0.739854, 0, 1.0};
Point(74) = {-0.039066, -0.737721, 0, 1.0};
Point(75) = {-0.031753, -0.735490, 0, 1.0};
Point(76) = {-0.024225, -0.733213, 0, 1.0};
Point(77) = {-0.016579, -0.730941, 0, 1.0};
Point(78) = {-0.008910, -0.728731, 0, 1.0};
Point(79) = {-0.001298, -0.726640, 0, 1.0};
Point(80) = {0.006179, -0.724724, 0, 1.0};
Point(81) = {0.013450, -0.723035, 0, 1.0};
Point(82) = {0.020456, -0.721624, 0, 1.0};
Point(83) = {0.027142, -0.720541, 0, 1.0};
Point(84) = {0.033494, -0.719833, 0, 1.0};
Point(85) = {0.039508, -0.719503, 0, 1.0};
Point(86) = {0.045163, -0.719522, 0, 1.0};
Point(87) = {0.050430, -0.719861, 0, 1.0};
Point(88) = {0.055268, -0.720479, 0, 1.0};
Point(89) = {0.059637, -0.721340, 0, 1.0};
Point(90) = {0.063496, -0.722409, 0, 1.0};
Point(91) = {0.066812, -0.723641, 0, 1.0};
Point(92) = {0.069551, -0.724998, 0, 1.0};
Point(93) = {0.071694, -0.726430, 0, 1.0};
Point(94) = {0.073223, -0.727872, 0, 1.0};
Point(95) = {0.074120, -0.729242, 0, 1.0};
Point(96) = {0.074282, -0.729683, 0, 1.0};
Point(97) = {0.074352, -0.730036, 0, 1.0};
Point(98) = {0.074367, -0.730255, 0, 1.0};
Point(99) = {0.074353, -0.730460, 0, 1.0};
Point(100) = {0.074336, -0.730555, 0, 1.0};
Point(101) = {0.074308, -0.730644, 0, 1.0};
Point(102) = {0.074271, -0.730725, 0, 1.0};
Point(103) = {0.074218, -0.730799, 0, 1.0};
Point(104) = {0.074149, -0.730873, 0, 1.0};
Point(105) = {0.074066, -0.730946, 0, 1.0};
Point(106) = {0.073864, -0.731089, 0, 1.0};
Point(107) = {0.073618, -0.731230, 0, 1.0};
Point(108) = {0.073171, -0.731438, 0, 1.0};
Point(109) = {0.071901, -0.731896, 0, 1.0};
Point(110) = {0.069140, -0.732598, 0, 1.0};
Point(111) = {0.065437, -0.733315, 0, 1.0};
Point(112) = {0.060840, -0.734085, 0, 1.0};
Point(113) = {0.055430, -0.734951, 0, 1.0};
Point(114) = {0.049316, -0.735925, 0, 1.0};
Point(115) = {0.042604, -0.736995, 0, 1.0};
Point(116) = {0.035397, -0.738136, 0, 1.0};
Point(117) = {0.027787, -0.739316, 0, 1.0};
Point(118) = {0.019859, -0.740513, 0, 1.0};
Point(119) = {0.011705, -0.741706, 0, 1.0};
Point(120) = {0.003415, -0.742882, 0, 1.0};
Point(121) = {-0.004914, -0.744020, 0, 1.0};
Point(122) = {-0.013189, -0.745107, 0, 1.0};
Point(123) = {-0.021316, -0.746124, 0, 1.0};
Point(124) = {-0.029203, -0.747055, 0, 1.0};
Point(125) = {-0.036759, -0.747881, 0, 1.0};
Point(126) = {-0.043899, -0.748585, 0, 1.0};
Point(127) = {-0.050543, -0.749123, 0, 1.0};
Point(128) = {-0.056679, -0.749445, 0, 1.0};
Point(129) = {-0.062342, -0.749605, 0, 1.0};
Point(130) = {-0.067466, -0.749726, 0, 1.0};
Point(131) = {-0.071916, -0.749874, 0, 1.0};
Point(132) = {-0.074314, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
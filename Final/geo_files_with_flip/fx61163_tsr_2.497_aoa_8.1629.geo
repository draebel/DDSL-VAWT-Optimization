SetFactory("OpenCASCADE");

Point(1) = {0.073856, 0.722704, 0, 1.0};
Point(2) = {0.072875, 0.722647, 0, 1.0};
Point(3) = {0.070061, 0.722471, 0, 1.0};
Point(4) = {0.066927, 0.722301, 0, 1.0};
Point(5) = {0.063587, 0.722122, 0, 1.0};
Point(6) = {0.059946, 0.721942, 0, 1.0};
Point(7) = {0.056079, 0.721758, 0, 1.0};
Point(8) = {0.051960, 0.721564, 0, 1.0};
Point(9) = {0.047635, 0.721363, 0, 1.0};
Point(10) = {0.043122, 0.721152, 0, 1.0};
Point(11) = {0.038444, 0.720940, 0, 1.0};
Point(12) = {0.033601, 0.720728, 0, 1.0};
Point(13) = {0.028636, 0.720525, 0, 1.0};
Point(14) = {0.023547, 0.720331, 0, 1.0};
Point(15) = {0.018377, 0.720151, 0, 1.0};
Point(16) = {0.013149, 0.719991, 0, 1.0};
Point(17) = {0.007888, 0.719888, 0, 1.0};
Point(18) = {0.002598, 0.719877, 0, 1.0};
Point(19) = {-0.002651, 0.720004, 0, 1.0};
Point(20) = {-0.007877, 0.720287, 0, 1.0};
Point(21) = {-0.013020, 0.720731, 0, 1.0};
Point(22) = {-0.018079, 0.721313, 0, 1.0};
Point(23) = {-0.023016, 0.722030, 0, 1.0};
Point(24) = {-0.027854, 0.722866, 0, 1.0};
Point(25) = {-0.032509, 0.723824, 0, 1.0};
Point(26) = {-0.037025, 0.724893, 0, 1.0};
Point(27) = {-0.041336, 0.726076, 0, 1.0};
Point(28) = {-0.045451, 0.727347, 0, 1.0};
Point(29) = {-0.049325, 0.728707, 0, 1.0};
Point(30) = {-0.052985, 0.730124, 0, 1.0};
Point(31) = {-0.056388, 0.731598, 0, 1.0};
Point(32) = {-0.059518, 0.733098, 0, 1.0};
Point(33) = {-0.062377, 0.734633, 0, 1.0};
Point(34) = {-0.064945, 0.736171, 0, 1.0};
Point(35) = {-0.067202, 0.737718, 0, 1.0};
Point(36) = {-0.069175, 0.739218, 0, 1.0};
Point(37) = {-0.070821, 0.740701, 0, 1.0};
Point(38) = {-0.072148, 0.742120, 0, 1.0};
Point(39) = {-0.073159, 0.743420, 0, 1.0};
Point(40) = {-0.073853, 0.744635, 0, 1.0};
Point(41) = {-0.074207, 0.745764, 0, 1.0};
Point(42) = {-0.074240, 0.746682, 0, 1.0};
Point(43) = {-0.074023, 0.747051, 0, 1.0};
Point(44) = {-0.073446, 0.747471, 0, 1.0};
Point(45) = {-0.072516, 0.747898, 0, 1.0};
Point(46) = {-0.071260, 0.748307, 0, 1.0};
Point(47) = {-0.069674, 0.748699, 0, 1.0};
Point(48) = {-0.067769, 0.749024, 0, 1.0};
Point(49) = {-0.065537, 0.749326, 0, 1.0};
Point(50) = {-0.063023, 0.749569, 0, 1.0};
Point(51) = {-0.060206, 0.749768, 0, 1.0};
Point(52) = {-0.057108, 0.749901, 0, 1.0};
Point(53) = {-0.053750, 0.749988, 0, 1.0};
Point(54) = {-0.050134, 0.750000, 0, 1.0};
Point(55) = {-0.046278, 0.749950, 0, 1.0};
Point(56) = {-0.042228, 0.749823, 0, 1.0};
Point(57) = {-0.037960, 0.749617, 0, 1.0};
Point(58) = {-0.033521, 0.749316, 0, 1.0};
Point(59) = {-0.028909, 0.748927, 0, 1.0};
Point(60) = {-0.024186, 0.748437, 0, 1.0};
Point(61) = {-0.019312, 0.747854, 0, 1.0};
Point(62) = {-0.014370, 0.747171, 0, 1.0};
Point(63) = {-0.009340, 0.746385, 0, 1.0};
Point(64) = {-0.004264, 0.745478, 0, 1.0};
Point(65) = {0.000856, 0.744451, 0, 1.0};
Point(66) = {0.005959, 0.743310, 0, 1.0};
Point(67) = {0.011069, 0.742060, 0, 1.0};
Point(68) = {0.016120, 0.740698, 0, 1.0};
Point(69) = {0.021110, 0.739209, 0, 1.0};
Point(70) = {0.026025, 0.737606, 0, 1.0};
Point(71) = {0.030847, 0.735941, 0, 1.0};
Point(72) = {0.035547, 0.734289, 0, 1.0};
Point(73) = {0.040134, 0.732724, 0, 1.0};
Point(74) = {0.044574, 0.731275, 0, 1.0};
Point(75) = {0.048867, 0.729953, 0, 1.0};
Point(76) = {0.052992, 0.728756, 0, 1.0};
Point(77) = {0.056930, 0.727689, 0, 1.0};
Point(78) = {0.060637, 0.726757, 0, 1.0};
Point(79) = {0.064137, 0.725958, 0, 1.0};
Point(80) = {0.067356, 0.725295, 0, 1.0};
Point(81) = {0.070388, 0.724752, 0, 1.0};
Point(82) = {0.073117, 0.724336, 0, 1.0};
Point(83) = {0.074072, 0.724210, 0, 1.0};
Point(84) = {-0.073856, -0.722704, 0, 1.0};
Point(85) = {-0.072875, -0.722647, 0, 1.0};
Point(86) = {-0.070061, -0.722471, 0, 1.0};
Point(87) = {-0.066927, -0.722301, 0, 1.0};
Point(88) = {-0.063587, -0.722122, 0, 1.0};
Point(89) = {-0.059946, -0.721942, 0, 1.0};
Point(90) = {-0.056079, -0.721758, 0, 1.0};
Point(91) = {-0.051960, -0.721564, 0, 1.0};
Point(92) = {-0.047635, -0.721363, 0, 1.0};
Point(93) = {-0.043122, -0.721152, 0, 1.0};
Point(94) = {-0.038444, -0.720940, 0, 1.0};
Point(95) = {-0.033601, -0.720728, 0, 1.0};
Point(96) = {-0.028636, -0.720525, 0, 1.0};
Point(97) = {-0.023547, -0.720331, 0, 1.0};
Point(98) = {-0.018377, -0.720151, 0, 1.0};
Point(99) = {-0.013149, -0.719991, 0, 1.0};
Point(100) = {-0.007888, -0.719888, 0, 1.0};
Point(101) = {-0.002598, -0.719877, 0, 1.0};
Point(102) = {0.002651, -0.720004, 0, 1.0};
Point(103) = {0.007877, -0.720287, 0, 1.0};
Point(104) = {0.013020, -0.720731, 0, 1.0};
Point(105) = {0.018079, -0.721313, 0, 1.0};
Point(106) = {0.023016, -0.722030, 0, 1.0};
Point(107) = {0.027854, -0.722866, 0, 1.0};
Point(108) = {0.032509, -0.723824, 0, 1.0};
Point(109) = {0.037025, -0.724893, 0, 1.0};
Point(110) = {0.041336, -0.726076, 0, 1.0};
Point(111) = {0.045451, -0.727347, 0, 1.0};
Point(112) = {0.049325, -0.728707, 0, 1.0};
Point(113) = {0.052985, -0.730124, 0, 1.0};
Point(114) = {0.056388, -0.731598, 0, 1.0};
Point(115) = {0.059518, -0.733098, 0, 1.0};
Point(116) = {0.062377, -0.734633, 0, 1.0};
Point(117) = {0.064945, -0.736171, 0, 1.0};
Point(118) = {0.067202, -0.737718, 0, 1.0};
Point(119) = {0.069175, -0.739218, 0, 1.0};
Point(120) = {0.070821, -0.740701, 0, 1.0};
Point(121) = {0.072148, -0.742120, 0, 1.0};
Point(122) = {0.073159, -0.743420, 0, 1.0};
Point(123) = {0.073853, -0.744635, 0, 1.0};
Point(124) = {0.074207, -0.745764, 0, 1.0};
Point(125) = {0.074240, -0.746682, 0, 1.0};
Point(126) = {0.074023, -0.747051, 0, 1.0};
Point(127) = {0.073446, -0.747471, 0, 1.0};
Point(128) = {0.072516, -0.747898, 0, 1.0};
Point(129) = {0.071260, -0.748307, 0, 1.0};
Point(130) = {0.069674, -0.748699, 0, 1.0};
Point(131) = {0.067769, -0.749024, 0, 1.0};
Point(132) = {0.065537, -0.749326, 0, 1.0};
Point(133) = {0.063023, -0.749569, 0, 1.0};
Point(134) = {0.060206, -0.749768, 0, 1.0};
Point(135) = {0.057108, -0.749901, 0, 1.0};
Point(136) = {0.053750, -0.749988, 0, 1.0};
Point(137) = {0.050134, -0.750000, 0, 1.0};
Point(138) = {0.046278, -0.749950, 0, 1.0};
Point(139) = {0.042228, -0.749823, 0, 1.0};
Point(140) = {0.037960, -0.749617, 0, 1.0};
Point(141) = {0.033521, -0.749316, 0, 1.0};
Point(142) = {0.028909, -0.748927, 0, 1.0};
Point(143) = {0.024186, -0.748437, 0, 1.0};
Point(144) = {0.019312, -0.747854, 0, 1.0};
Point(145) = {0.014370, -0.747171, 0, 1.0};
Point(146) = {0.009340, -0.746385, 0, 1.0};
Point(147) = {0.004264, -0.745478, 0, 1.0};
Point(148) = {-0.000856, -0.744451, 0, 1.0};
Point(149) = {-0.005959, -0.743310, 0, 1.0};
Point(150) = {-0.011069, -0.742060, 0, 1.0};
Point(151) = {-0.016120, -0.740698, 0, 1.0};
Point(152) = {-0.021110, -0.739209, 0, 1.0};
Point(153) = {-0.026025, -0.737606, 0, 1.0};
Point(154) = {-0.030847, -0.735941, 0, 1.0};
Point(155) = {-0.035547, -0.734289, 0, 1.0};
Point(156) = {-0.040134, -0.732724, 0, 1.0};
Point(157) = {-0.044574, -0.731275, 0, 1.0};
Point(158) = {-0.048867, -0.729953, 0, 1.0};
Point(159) = {-0.052992, -0.728756, 0, 1.0};
Point(160) = {-0.056930, -0.727689, 0, 1.0};
Point(161) = {-0.060637, -0.726757, 0, 1.0};
Point(162) = {-0.064137, -0.725958, 0, 1.0};
Point(163) = {-0.067356, -0.725295, 0, 1.0};
Point(164) = {-0.070388, -0.724752, 0, 1.0};
Point(165) = {-0.073117, -0.724336, 0, 1.0};
Point(166) = {-0.074072, -0.724210, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
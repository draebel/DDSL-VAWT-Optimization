SetFactory("OpenCASCADE");

Point(1) = {0.074978, 0.743489, 0, 1.0};
Point(2) = {0.072196, 0.743343, 0, 1.0};
Point(3) = {0.069060, 0.743171, 0, 1.0};
Point(4) = {0.065674, 0.742981, 0, 1.0};
Point(5) = {0.062056, 0.742773, 0, 1.0};
Point(6) = {0.058217, 0.742542, 0, 1.0};
Point(7) = {0.054173, 0.742297, 0, 1.0};
Point(8) = {0.049939, 0.742035, 0, 1.0};
Point(9) = {0.045535, 0.741762, 0, 1.0};
Point(10) = {0.040974, 0.741476, 0, 1.0};
Point(11) = {0.036276, 0.741183, 0, 1.0};
Point(12) = {0.031461, 0.740885, 0, 1.0};
Point(13) = {0.026547, 0.740582, 0, 1.0};
Point(14) = {0.021551, 0.740283, 0, 1.0};
Point(15) = {0.016497, 0.739991, 0, 1.0};
Point(16) = {0.011403, 0.739710, 0, 1.0};
Point(17) = {0.006287, 0.739446, 0, 1.0};
Point(18) = {0.001173, 0.739207, 0, 1.0};
Point(19) = {-0.003922, 0.738998, 0, 1.0};
Point(20) = {-0.008974, 0.738821, 0, 1.0};
Point(21) = {-0.013965, 0.738686, 0, 1.0};
Point(22) = {-0.018878, 0.738600, 0, 1.0};
Point(23) = {-0.023762, 0.738568, 0, 1.0};
Point(24) = {-0.028381, 0.738591, 0, 1.0};
Point(25) = {-0.032936, 0.738676, 0, 1.0};
Point(26) = {-0.037334, 0.738824, 0, 1.0};
Point(27) = {-0.041560, 0.739038, 0, 1.0};
Point(28) = {-0.045596, 0.739317, 0, 1.0};
Point(29) = {-0.049425, 0.739661, 0, 1.0};
Point(30) = {-0.053083, 0.740065, 0, 1.0};
Point(31) = {-0.056410, 0.740522, 0, 1.0};
Point(32) = {-0.059535, 0.741032, 0, 1.0};
Point(33) = {-0.062400, 0.741584, 0, 1.0};
Point(34) = {-0.064993, 0.742170, 0, 1.0};
Point(35) = {-0.067305, 0.742782, 0, 1.0};
Point(36) = {-0.069326, 0.743408, 0, 1.0};
Point(37) = {-0.071048, 0.744036, 0, 1.0};
Point(38) = {-0.072465, 0.744654, 0, 1.0};
Point(39) = {-0.073570, 0.745236, 0, 1.0};
Point(40) = {-0.074363, 0.745765, 0, 1.0};
Point(41) = {-0.074836, 0.746228, 0, 1.0};
Point(42) = {-0.074991, 0.746634, 0, 1.0};
Point(43) = {-0.074824, 0.747005, 0, 1.0};
Point(44) = {-0.074338, 0.747363, 0, 1.0};
Point(45) = {-0.073531, 0.747720, 0, 1.0};
Point(46) = {-0.072410, 0.748073, 0, 1.0};
Point(47) = {-0.070979, 0.748405, 0, 1.0};
Point(48) = {-0.069242, 0.748705, 0, 1.0};
Point(49) = {-0.067207, 0.748972, 0, 1.0};
Point(50) = {-0.064882, 0.749204, 0, 1.0};
Point(51) = {-0.062276, 0.749399, 0, 1.0};
Point(52) = {-0.059400, 0.749561, 0, 1.0};
Point(53) = {-0.056264, 0.749696, 0, 1.0};
Point(54) = {-0.052929, 0.749801, 0, 1.0};
Point(55) = {-0.049263, 0.749884, 0, 1.0};
Point(56) = {-0.045427, 0.749944, 0, 1.0};
Point(57) = {-0.041386, 0.749981, 0, 1.0};
Point(58) = {-0.037157, 0.750000, 0, 1.0};
Point(59) = {-0.032757, 0.750000, 0, 1.0};
Point(60) = {-0.028201, 0.749983, 0, 1.0};
Point(61) = {-0.023582, 0.749946, 0, 1.0};
Point(62) = {-0.018699, 0.749891, 0, 1.0};
Point(63) = {-0.013789, 0.749816, 0, 1.0};
Point(64) = {-0.008801, 0.749723, 0, 1.0};
Point(65) = {-0.003753, 0.749607, 0, 1.0};
Point(66) = {0.001336, 0.749469, 0, 1.0};
Point(67) = {0.006443, 0.749308, 0, 1.0};
Point(68) = {0.011552, 0.749125, 0, 1.0};
Point(69) = {0.016639, 0.748917, 0, 1.0};
Point(70) = {0.021685, 0.748689, 0, 1.0};
Point(71) = {0.026672, 0.748440, 0, 1.0};
Point(72) = {0.031577, 0.748172, 0, 1.0};
Point(73) = {0.036383, 0.747888, 0, 1.0};
Point(74) = {0.041071, 0.747590, 0, 1.0};
Point(75) = {0.045623, 0.747284, 0, 1.0};
Point(76) = {0.050018, 0.746973, 0, 1.0};
Point(77) = {0.054242, 0.746659, 0, 1.0};
Point(78) = {0.058277, 0.746350, 0, 1.0};
Point(79) = {0.062107, 0.746023, 0, 1.0};
Point(80) = {0.065718, 0.745760, 0, 1.0};
Point(81) = {0.069097, 0.745487, 0, 1.0};
Point(82) = {0.072226, 0.745232, 0, 1.0};
Point(83) = {0.075003, 0.745009, 0, 1.0};
Point(84) = {-0.074978, -0.743489, 0, 1.0};
Point(85) = {-0.072196, -0.743343, 0, 1.0};
Point(86) = {-0.069060, -0.743171, 0, 1.0};
Point(87) = {-0.065674, -0.742981, 0, 1.0};
Point(88) = {-0.062056, -0.742773, 0, 1.0};
Point(89) = {-0.058217, -0.742542, 0, 1.0};
Point(90) = {-0.054173, -0.742297, 0, 1.0};
Point(91) = {-0.049939, -0.742035, 0, 1.0};
Point(92) = {-0.045535, -0.741762, 0, 1.0};
Point(93) = {-0.040974, -0.741476, 0, 1.0};
Point(94) = {-0.036276, -0.741183, 0, 1.0};
Point(95) = {-0.031461, -0.740885, 0, 1.0};
Point(96) = {-0.026547, -0.740582, 0, 1.0};
Point(97) = {-0.021551, -0.740283, 0, 1.0};
Point(98) = {-0.016497, -0.739991, 0, 1.0};
Point(99) = {-0.011403, -0.739710, 0, 1.0};
Point(100) = {-0.006287, -0.739446, 0, 1.0};
Point(101) = {-0.001173, -0.739207, 0, 1.0};
Point(102) = {0.003922, -0.738998, 0, 1.0};
Point(103) = {0.008974, -0.738821, 0, 1.0};
Point(104) = {0.013965, -0.738686, 0, 1.0};
Point(105) = {0.018878, -0.738600, 0, 1.0};
Point(106) = {0.023762, -0.738568, 0, 1.0};
Point(107) = {0.028381, -0.738591, 0, 1.0};
Point(108) = {0.032936, -0.738676, 0, 1.0};
Point(109) = {0.037334, -0.738824, 0, 1.0};
Point(110) = {0.041560, -0.739038, 0, 1.0};
Point(111) = {0.045596, -0.739317, 0, 1.0};
Point(112) = {0.049425, -0.739661, 0, 1.0};
Point(113) = {0.053083, -0.740065, 0, 1.0};
Point(114) = {0.056410, -0.740522, 0, 1.0};
Point(115) = {0.059535, -0.741032, 0, 1.0};
Point(116) = {0.062400, -0.741584, 0, 1.0};
Point(117) = {0.064993, -0.742170, 0, 1.0};
Point(118) = {0.067305, -0.742782, 0, 1.0};
Point(119) = {0.069326, -0.743408, 0, 1.0};
Point(120) = {0.071048, -0.744036, 0, 1.0};
Point(121) = {0.072465, -0.744654, 0, 1.0};
Point(122) = {0.073570, -0.745236, 0, 1.0};
Point(123) = {0.074363, -0.745765, 0, 1.0};
Point(124) = {0.074836, -0.746228, 0, 1.0};
Point(125) = {0.074991, -0.746634, 0, 1.0};
Point(126) = {0.074824, -0.747005, 0, 1.0};
Point(127) = {0.074338, -0.747363, 0, 1.0};
Point(128) = {0.073531, -0.747720, 0, 1.0};
Point(129) = {0.072410, -0.748073, 0, 1.0};
Point(130) = {0.070979, -0.748405, 0, 1.0};
Point(131) = {0.069242, -0.748705, 0, 1.0};
Point(132) = {0.067207, -0.748972, 0, 1.0};
Point(133) = {0.064882, -0.749204, 0, 1.0};
Point(134) = {0.062276, -0.749399, 0, 1.0};
Point(135) = {0.059400, -0.749561, 0, 1.0};
Point(136) = {0.056264, -0.749696, 0, 1.0};
Point(137) = {0.052929, -0.749801, 0, 1.0};
Point(138) = {0.049263, -0.749884, 0, 1.0};
Point(139) = {0.045427, -0.749944, 0, 1.0};
Point(140) = {0.041386, -0.749981, 0, 1.0};
Point(141) = {0.037157, -0.750000, 0, 1.0};
Point(142) = {0.032757, -0.750000, 0, 1.0};
Point(143) = {0.028201, -0.749983, 0, 1.0};
Point(144) = {0.023582, -0.749946, 0, 1.0};
Point(145) = {0.018699, -0.749891, 0, 1.0};
Point(146) = {0.013789, -0.749816, 0, 1.0};
Point(147) = {0.008801, -0.749723, 0, 1.0};
Point(148) = {0.003753, -0.749607, 0, 1.0};
Point(149) = {-0.001336, -0.749469, 0, 1.0};
Point(150) = {-0.006443, -0.749308, 0, 1.0};
Point(151) = {-0.011552, -0.749125, 0, 1.0};
Point(152) = {-0.016639, -0.748917, 0, 1.0};
Point(153) = {-0.021685, -0.748689, 0, 1.0};
Point(154) = {-0.026672, -0.748440, 0, 1.0};
Point(155) = {-0.031577, -0.748172, 0, 1.0};
Point(156) = {-0.036383, -0.747888, 0, 1.0};
Point(157) = {-0.041071, -0.747590, 0, 1.0};
Point(158) = {-0.045623, -0.747284, 0, 1.0};
Point(159) = {-0.050018, -0.746973, 0, 1.0};
Point(160) = {-0.054242, -0.746659, 0, 1.0};
Point(161) = {-0.058277, -0.746350, 0, 1.0};
Point(162) = {-0.062107, -0.746023, 0, 1.0};
Point(163) = {-0.065718, -0.745760, 0, 1.0};
Point(164) = {-0.069097, -0.745487, 0, 1.0};
Point(165) = {-0.072226, -0.745232, 0, 1.0};
Point(166) = {-0.075003, -0.745009, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:59};
Spline(3) = {59:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:108};
Spline(6) = {108:142};
Spline(7) = {142:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
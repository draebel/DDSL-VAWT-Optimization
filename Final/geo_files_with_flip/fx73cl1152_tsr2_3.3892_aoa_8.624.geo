SetFactory("OpenCASCADE");

Point(1) = {0.073824, 0.721340, 0, 1.0};
Point(2) = {0.071707, 0.721238, 0, 1.0};
Point(3) = {0.068914, 0.721095, 0, 1.0};
Point(4) = {0.065835, 0.720937, 0, 1.0};
Point(5) = {0.062480, 0.720759, 0, 1.0};
Point(6) = {0.058863, 0.720564, 0, 1.0};
Point(7) = {0.055002, 0.720359, 0, 1.0};
Point(8) = {0.050914, 0.720142, 0, 1.0};
Point(9) = {0.046614, 0.719905, 0, 1.0};
Point(10) = {0.042119, 0.719651, 0, 1.0};
Point(11) = {0.037450, 0.719379, 0, 1.0};
Point(12) = {0.032629, 0.719097, 0, 1.0};
Point(13) = {0.027674, 0.718803, 0, 1.0};
Point(14) = {0.022608, 0.718503, 0, 1.0};
Point(15) = {0.017454, 0.718204, 0, 1.0};
Point(16) = {0.012232, 0.717914, 0, 1.0};
Point(17) = {0.006969, 0.717642, 0, 1.0};
Point(18) = {0.001689, 0.717402, 0, 1.0};
Point(19) = {-0.003584, 0.717208, 0, 1.0};
Point(20) = {-0.008825, 0.717076, 0, 1.0};
Point(21) = {-0.014011, 0.717022, 0, 1.0};
Point(22) = {-0.019113, 0.717069, 0, 1.0};
Point(23) = {-0.024104, 0.717264, 0, 1.0};
Point(24) = {-0.028953, 0.717665, 0, 1.0};
Point(25) = {-0.033634, 0.718308, 0, 1.0};
Point(26) = {-0.038129, 0.719187, 0, 1.0};
Point(27) = {-0.042421, 0.720268, 0, 1.0};
Point(28) = {-0.046491, 0.721546, 0, 1.0};
Point(29) = {-0.050321, 0.723031, 0, 1.0};
Point(30) = {-0.053897, 0.724702, 0, 1.0};
Point(31) = {-0.057210, 0.726513, 0, 1.0};
Point(32) = {-0.060250, 0.728416, 0, 1.0};
Point(33) = {-0.063008, 0.730375, 0, 1.0};
Point(34) = {-0.065475, 0.732375, 0, 1.0};
Point(35) = {-0.067645, 0.734385, 0, 1.0};
Point(36) = {-0.069511, 0.736353, 0, 1.0};
Point(37) = {-0.071071, 0.738259, 0, 1.0};
Point(38) = {-0.072316, 0.740084, 0, 1.0};
Point(39) = {-0.073246, 0.741809, 0, 1.0};
Point(40) = {-0.073863, 0.743375, 0, 1.0};
Point(41) = {-0.074169, 0.744750, 0, 1.0};
Point(42) = {-0.074152, 0.745995, 0, 1.0};
Point(43) = {-0.073805, 0.747155, 0, 1.0};
Point(44) = {-0.073128, 0.748221, 0, 1.0};
Point(45) = {-0.072143, 0.749082, 0, 1.0};
Point(46) = {-0.070864, 0.749658, 0, 1.0};
Point(47) = {-0.069298, 0.749950, 0, 1.0};
Point(48) = {-0.067442, 0.750000, 0, 1.0};
Point(49) = {-0.065297, 0.749867, 0, 1.0};
Point(50) = {-0.062868, 0.749565, 0, 1.0};
Point(51) = {-0.060164, 0.749127, 0, 1.0};
Point(52) = {-0.057194, 0.748566, 0, 1.0};
Point(53) = {-0.053968, 0.747891, 0, 1.0};
Point(54) = {-0.050500, 0.747103, 0, 1.0};
Point(55) = {-0.046809, 0.746192, 0, 1.0};
Point(56) = {-0.042905, 0.745192, 0, 1.0};
Point(57) = {-0.038803, 0.744122, 0, 1.0};
Point(58) = {-0.034517, 0.743002, 0, 1.0};
Point(59) = {-0.030063, 0.741857, 0, 1.0};
Point(60) = {-0.025461, 0.740689, 0, 1.0};
Point(61) = {-0.020730, 0.739510, 0, 1.0};
Point(62) = {-0.015889, 0.738323, 0, 1.0};
Point(63) = {-0.010958, 0.737149, 0, 1.0};
Point(64) = {-0.005955, 0.735997, 0, 1.0};
Point(65) = {-0.000905, 0.734872, 0, 1.0};
Point(66) = {0.004172, 0.733773, 0, 1.0};
Point(67) = {0.009254, 0.732707, 0, 1.0};
Point(68) = {0.014320, 0.731679, 0, 1.0};
Point(69) = {0.019348, 0.730697, 0, 1.0};
Point(70) = {0.024316, 0.729766, 0, 1.0};
Point(71) = {0.029204, 0.728890, 0, 1.0};
Point(72) = {0.033990, 0.728071, 0, 1.0};
Point(73) = {0.038652, 0.727303, 0, 1.0};
Point(74) = {0.043172, 0.726592, 0, 1.0};
Point(75) = {0.047530, 0.725942, 0, 1.0};
Point(76) = {0.051705, 0.725360, 0, 1.0};
Point(77) = {0.055682, 0.724837, 0, 1.0};
Point(78) = {0.059440, 0.724368, 0, 1.0};
Point(79) = {0.062964, 0.723954, 0, 1.0};
Point(80) = {0.066238, 0.723590, 0, 1.0};
Point(81) = {0.069246, 0.723282, 0, 1.0};
Point(82) = {0.071978, 0.723023, 0, 1.0};
Point(83) = {0.074052, 0.722846, 0, 1.0};
Point(84) = {-0.073824, -0.721340, 0, 1.0};
Point(85) = {-0.071707, -0.721238, 0, 1.0};
Point(86) = {-0.068914, -0.721095, 0, 1.0};
Point(87) = {-0.065835, -0.720937, 0, 1.0};
Point(88) = {-0.062480, -0.720759, 0, 1.0};
Point(89) = {-0.058863, -0.720564, 0, 1.0};
Point(90) = {-0.055002, -0.720359, 0, 1.0};
Point(91) = {-0.050914, -0.720142, 0, 1.0};
Point(92) = {-0.046614, -0.719905, 0, 1.0};
Point(93) = {-0.042119, -0.719651, 0, 1.0};
Point(94) = {-0.037450, -0.719379, 0, 1.0};
Point(95) = {-0.032629, -0.719097, 0, 1.0};
Point(96) = {-0.027674, -0.718803, 0, 1.0};
Point(97) = {-0.022608, -0.718503, 0, 1.0};
Point(98) = {-0.017454, -0.718204, 0, 1.0};
Point(99) = {-0.012232, -0.717914, 0, 1.0};
Point(100) = {-0.006969, -0.717642, 0, 1.0};
Point(101) = {-0.001689, -0.717402, 0, 1.0};
Point(102) = {0.003584, -0.717208, 0, 1.0};
Point(103) = {0.008825, -0.717076, 0, 1.0};
Point(104) = {0.014011, -0.717022, 0, 1.0};
Point(105) = {0.019113, -0.717069, 0, 1.0};
Point(106) = {0.024104, -0.717264, 0, 1.0};
Point(107) = {0.028953, -0.717665, 0, 1.0};
Point(108) = {0.033634, -0.718308, 0, 1.0};
Point(109) = {0.038129, -0.719187, 0, 1.0};
Point(110) = {0.042421, -0.720268, 0, 1.0};
Point(111) = {0.046491, -0.721546, 0, 1.0};
Point(112) = {0.050321, -0.723031, 0, 1.0};
Point(113) = {0.053897, -0.724702, 0, 1.0};
Point(114) = {0.057210, -0.726513, 0, 1.0};
Point(115) = {0.060250, -0.728416, 0, 1.0};
Point(116) = {0.063008, -0.730375, 0, 1.0};
Point(117) = {0.065475, -0.732375, 0, 1.0};
Point(118) = {0.067645, -0.734385, 0, 1.0};
Point(119) = {0.069511, -0.736353, 0, 1.0};
Point(120) = {0.071071, -0.738259, 0, 1.0};
Point(121) = {0.072316, -0.740084, 0, 1.0};
Point(122) = {0.073246, -0.741809, 0, 1.0};
Point(123) = {0.073863, -0.743375, 0, 1.0};
Point(124) = {0.074169, -0.744750, 0, 1.0};
Point(125) = {0.074152, -0.745995, 0, 1.0};
Point(126) = {0.073805, -0.747155, 0, 1.0};
Point(127) = {0.073128, -0.748221, 0, 1.0};
Point(128) = {0.072143, -0.749082, 0, 1.0};
Point(129) = {0.070864, -0.749658, 0, 1.0};
Point(130) = {0.069298, -0.749950, 0, 1.0};
Point(131) = {0.067442, -0.750000, 0, 1.0};
Point(132) = {0.065297, -0.749867, 0, 1.0};
Point(133) = {0.062868, -0.749565, 0, 1.0};
Point(134) = {0.060164, -0.749127, 0, 1.0};
Point(135) = {0.057194, -0.748566, 0, 1.0};
Point(136) = {0.053968, -0.747891, 0, 1.0};
Point(137) = {0.050500, -0.747103, 0, 1.0};
Point(138) = {0.046809, -0.746192, 0, 1.0};
Point(139) = {0.042905, -0.745192, 0, 1.0};
Point(140) = {0.038803, -0.744122, 0, 1.0};
Point(141) = {0.034517, -0.743002, 0, 1.0};
Point(142) = {0.030063, -0.741857, 0, 1.0};
Point(143) = {0.025461, -0.740689, 0, 1.0};
Point(144) = {0.020730, -0.739510, 0, 1.0};
Point(145) = {0.015889, -0.738323, 0, 1.0};
Point(146) = {0.010958, -0.737149, 0, 1.0};
Point(147) = {0.005955, -0.735997, 0, 1.0};
Point(148) = {0.000905, -0.734872, 0, 1.0};
Point(149) = {-0.004172, -0.733773, 0, 1.0};
Point(150) = {-0.009254, -0.732707, 0, 1.0};
Point(151) = {-0.014320, -0.731679, 0, 1.0};
Point(152) = {-0.019348, -0.730697, 0, 1.0};
Point(153) = {-0.024316, -0.729766, 0, 1.0};
Point(154) = {-0.029204, -0.728890, 0, 1.0};
Point(155) = {-0.033990, -0.728071, 0, 1.0};
Point(156) = {-0.038652, -0.727303, 0, 1.0};
Point(157) = {-0.043172, -0.726592, 0, 1.0};
Point(158) = {-0.047530, -0.725942, 0, 1.0};
Point(159) = {-0.051705, -0.725360, 0, 1.0};
Point(160) = {-0.055682, -0.724837, 0, 1.0};
Point(161) = {-0.059440, -0.724368, 0, 1.0};
Point(162) = {-0.062964, -0.723954, 0, 1.0};
Point(163) = {-0.066238, -0.723590, 0, 1.0};
Point(164) = {-0.069246, -0.723282, 0, 1.0};
Point(165) = {-0.071978, -0.723023, 0, 1.0};
Point(166) = {-0.074052, -0.722846, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
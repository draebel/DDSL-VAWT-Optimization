SetFactory("OpenCASCADE");

Point(1) = {0.074933, 0.730386, 0, 1.0};
Point(2) = {0.072331, 0.731206, 0, 1.0};
Point(3) = {0.068171, 0.732540, 0, 1.0};
Point(4) = {0.063314, 0.734109, 0, 1.0};
Point(5) = {0.057876, 0.735878, 0, 1.0};
Point(6) = {0.051969, 0.737788, 0, 1.0};
Point(7) = {0.045695, 0.739761, 0, 1.0};
Point(8) = {0.039145, 0.741706, 0, 1.0};
Point(9) = {0.032368, 0.743488, 0, 1.0};
Point(10) = {0.025322, 0.745080, 0, 1.0};
Point(11) = {0.018083, 0.746492, 0, 1.0};
Point(12) = {0.010726, 0.747697, 0, 1.0};
Point(13) = {0.003318, 0.748634, 0, 1.0};
Point(14) = {-0.004153, 0.749299, 0, 1.0};
Point(15) = {-0.011616, 0.749739, 0, 1.0};
Point(16) = {-0.018986, 0.749969, 0, 1.0};
Point(17) = {-0.026178, 0.750000, 0, 1.0};
Point(18) = {-0.033110, 0.749834, 0, 1.0};
Point(19) = {-0.039710, 0.749480, 0, 1.0};
Point(20) = {-0.045904, 0.748942, 0, 1.0};
Point(21) = {-0.051632, 0.748231, 0, 1.0};
Point(22) = {-0.056831, 0.747358, 0, 1.0};
Point(23) = {-0.061454, 0.746341, 0, 1.0};
Point(24) = {-0.065450, 0.745197, 0, 1.0};
Point(25) = {-0.068785, 0.743952, 0, 1.0};
Point(26) = {-0.071416, 0.742631, 0, 1.0};
Point(27) = {-0.073335, 0.741267, 0, 1.0};
Point(28) = {-0.074493, 0.739929, 0, 1.0};
Point(29) = {-0.074693, 0.739524, 0, 1.0};
Point(30) = {-0.074794, 0.739213, 0, 1.0};
Point(31) = {-0.074832, 0.738919, 0, 1.0};
Point(32) = {-0.074804, 0.738699, 0, 1.0};
Point(33) = {-0.074786, 0.738623, 0, 1.0};
Point(34) = {-0.074676, 0.738308, 0, 1.0};
Point(35) = {-0.074107, 0.737375, 0, 1.0};
Point(36) = {-0.072635, 0.735940, 0, 1.0};
Point(37) = {-0.070417, 0.734465, 0, 1.0};
Point(38) = {-0.067495, 0.733016, 0, 1.0};
Point(39) = {-0.063871, 0.731623, 0, 1.0};
Point(40) = {-0.059587, 0.730322, 0, 1.0};
Point(41) = {-0.054661, 0.729129, 0, 1.0};
Point(42) = {-0.049148, 0.728064, 0, 1.0};
Point(43) = {-0.043081, 0.727137, 0, 1.0};
Point(44) = {-0.036527, 0.726356, 0, 1.0};
Point(45) = {-0.029539, 0.725725, 0, 1.0};
Point(46) = {-0.022195, 0.725245, 0, 1.0};
Point(47) = {-0.014560, 0.724914, 0, 1.0};
Point(48) = {-0.006723, 0.724731, 0, 1.0};
Point(49) = {0.001240, 0.724693, 0, 1.0};
Point(50) = {0.009232, 0.724801, 0, 1.0};
Point(51) = {0.017183, 0.725085, 0, 1.0};
Point(52) = {0.025077, 0.725513, 0, 1.0};
Point(53) = {0.032816, 0.726022, 0, 1.0};
Point(54) = {0.040301, 0.726582, 0, 1.0};
Point(55) = {0.047433, 0.727202, 0, 1.0};
Point(56) = {0.054212, 0.727832, 0, 1.0};
Point(57) = {0.060522, 0.728357, 0, 1.0};
Point(58) = {0.066217, 0.728721, 0, 1.0};
Point(59) = {0.071145, 0.728902, 0, 1.0};
Point(60) = {0.074835, 0.728920, 0, 1.0};
Point(61) = {-0.074933, -0.730386, 0, 1.0};
Point(62) = {-0.072331, -0.731206, 0, 1.0};
Point(63) = {-0.068171, -0.732540, 0, 1.0};
Point(64) = {-0.063314, -0.734109, 0, 1.0};
Point(65) = {-0.057876, -0.735878, 0, 1.0};
Point(66) = {-0.051969, -0.737788, 0, 1.0};
Point(67) = {-0.045695, -0.739761, 0, 1.0};
Point(68) = {-0.039145, -0.741706, 0, 1.0};
Point(69) = {-0.032368, -0.743488, 0, 1.0};
Point(70) = {-0.025322, -0.745080, 0, 1.0};
Point(71) = {-0.018083, -0.746492, 0, 1.0};
Point(72) = {-0.010726, -0.747697, 0, 1.0};
Point(73) = {-0.003318, -0.748634, 0, 1.0};
Point(74) = {0.004153, -0.749299, 0, 1.0};
Point(75) = {0.011616, -0.749739, 0, 1.0};
Point(76) = {0.018986, -0.749969, 0, 1.0};
Point(77) = {0.026178, -0.750000, 0, 1.0};
Point(78) = {0.033110, -0.749834, 0, 1.0};
Point(79) = {0.039710, -0.749480, 0, 1.0};
Point(80) = {0.045904, -0.748942, 0, 1.0};
Point(81) = {0.051632, -0.748231, 0, 1.0};
Point(82) = {0.056831, -0.747358, 0, 1.0};
Point(83) = {0.061454, -0.746341, 0, 1.0};
Point(84) = {0.065450, -0.745197, 0, 1.0};
Point(85) = {0.068785, -0.743952, 0, 1.0};
Point(86) = {0.071416, -0.742631, 0, 1.0};
Point(87) = {0.073335, -0.741267, 0, 1.0};
Point(88) = {0.074493, -0.739929, 0, 1.0};
Point(89) = {0.074693, -0.739524, 0, 1.0};
Point(90) = {0.074794, -0.739213, 0, 1.0};
Point(91) = {0.074832, -0.738919, 0, 1.0};
Point(92) = {0.074804, -0.738699, 0, 1.0};
Point(93) = {0.074786, -0.738623, 0, 1.0};
Point(94) = {0.074676, -0.738308, 0, 1.0};
Point(95) = {0.074107, -0.737375, 0, 1.0};
Point(96) = {0.072635, -0.735940, 0, 1.0};
Point(97) = {0.070417, -0.734465, 0, 1.0};
Point(98) = {0.067495, -0.733016, 0, 1.0};
Point(99) = {0.063871, -0.731623, 0, 1.0};
Point(100) = {0.059587, -0.730322, 0, 1.0};
Point(101) = {0.054661, -0.729129, 0, 1.0};
Point(102) = {0.049148, -0.728064, 0, 1.0};
Point(103) = {0.043081, -0.727137, 0, 1.0};
Point(104) = {0.036527, -0.726356, 0, 1.0};
Point(105) = {0.029539, -0.725725, 0, 1.0};
Point(106) = {0.022195, -0.725245, 0, 1.0};
Point(107) = {0.014560, -0.724914, 0, 1.0};
Point(108) = {0.006723, -0.724731, 0, 1.0};
Point(109) = {-0.001240, -0.724693, 0, 1.0};
Point(110) = {-0.009232, -0.724801, 0, 1.0};
Point(111) = {-0.017183, -0.725085, 0, 1.0};
Point(112) = {-0.025077, -0.725513, 0, 1.0};
Point(113) = {-0.032816, -0.726022, 0, 1.0};
Point(114) = {-0.040301, -0.726582, 0, 1.0};
Point(115) = {-0.047433, -0.727202, 0, 1.0};
Point(116) = {-0.054212, -0.727832, 0, 1.0};
Point(117) = {-0.060522, -0.728357, 0, 1.0};
Point(118) = {-0.066217, -0.728721, 0, 1.0};
Point(119) = {-0.071145, -0.728902, 0, 1.0};
Point(120) = {-0.074835, -0.728920, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
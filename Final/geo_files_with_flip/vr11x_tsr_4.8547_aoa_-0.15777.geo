SetFactory("OpenCASCADE");

Point(1) = {0.075002, 0.744763, 0, 1.0};
Point(2) = {0.074060, 0.744688, 0, 1.0};
Point(3) = {0.071756, 0.744190, 0, 1.0};
Point(4) = {0.068685, 0.743505, 0, 1.0};
Point(5) = {0.064845, 0.742665, 0, 1.0};
Point(6) = {0.060238, 0.741612, 0, 1.0};
Point(7) = {0.054863, 0.740455, 0, 1.0};
Point(8) = {0.049488, 0.739117, 0, 1.0};
Point(9) = {0.043346, 0.737682, 0, 1.0};
Point(10) = {0.037202, 0.736553, 0, 1.0};
Point(11) = {0.031057, 0.735723, 0, 1.0};
Point(12) = {0.024912, 0.735156, 0, 1.0};
Point(13) = {0.017231, 0.734518, 0, 1.0};
Point(14) = {0.009548, 0.734056, 0, 1.0};
Point(15) = {0.001866, 0.733617, 0, 1.0};
Point(16) = {-0.005816, 0.733321, 0, 1.0};
Point(17) = {-0.013499, 0.733135, 0, 1.0};
Point(18) = {-0.021183, 0.733070, 0, 1.0};
Point(19) = {-0.028866, 0.733138, 0, 1.0};
Point(20) = {-0.036550, 0.733292, 0, 1.0};
Point(21) = {-0.044235, 0.733678, 0, 1.0};
Point(22) = {-0.051920, 0.734294, 0, 1.0};
Point(23) = {-0.059606, 0.735315, 0, 1.0};
Point(24) = {-0.063450, 0.736272, 0, 1.0};
Point(25) = {-0.067296, 0.737676, 0, 1.0};
Point(26) = {-0.071143, 0.739755, 0, 1.0};
Point(27) = {-0.073069, 0.741332, 0, 1.0};
Point(28) = {-0.073839, 0.742083, 0, 1.0};
Point(29) = {-0.074225, 0.742589, 0, 1.0};
Point(30) = {-0.074688, 0.743433, 0, 1.0};
Point(31) = {-0.075000, 0.745046, 0, 1.0};
Point(32) = {-0.074694, 0.745738, 0, 1.0};
Point(33) = {-0.074234, 0.746078, 0, 1.0};
Point(34) = {-0.073851, 0.746248, 0, 1.0};
Point(35) = {-0.073083, 0.746496, 0, 1.0};
Point(36) = {-0.071163, 0.746947, 0, 1.0};
Point(37) = {-0.067323, 0.747526, 0, 1.0};
Point(38) = {-0.063483, 0.747982, 0, 1.0};
Point(39) = {-0.059642, 0.748331, 0, 1.0};
Point(40) = {-0.051960, 0.748874, 0, 1.0};
Point(41) = {-0.044278, 0.749267, 0, 1.0};
Point(42) = {-0.036595, 0.749585, 0, 1.0};
Point(43) = {-0.028912, 0.749783, 0, 1.0};
Point(44) = {-0.021229, 0.749927, 0, 1.0};
Point(45) = {-0.013546, 0.749994, 0, 1.0};
Point(46) = {-0.005862, 0.750000, 0, 1.0};
Point(47) = {0.001821, 0.749921, 0, 1.0};
Point(48) = {0.009505, 0.749766, 0, 1.0};
Point(49) = {0.017189, 0.749556, 0, 1.0};
Point(50) = {0.024873, 0.749316, 0, 1.0};
Point(51) = {0.031021, 0.749103, 0, 1.0};
Point(52) = {0.037168, 0.748858, 0, 1.0};
Point(53) = {0.043316, 0.748576, 0, 1.0};
Point(54) = {0.049463, 0.748293, 0, 1.0};
Point(55) = {0.054842, 0.748000, 0, 1.0};
Point(56) = {0.060222, 0.747662, 0, 1.0};
Point(57) = {0.064833, 0.747290, 0, 1.0};
Point(58) = {0.068675, 0.746978, 0, 1.0};
Point(59) = {0.071749, 0.746679, 0, 1.0};
Point(60) = {0.074055, 0.746394, 0, 1.0};
Point(61) = {0.074998, 0.746258, 0, 1.0};
Point(62) = {-0.075002, -0.744763, 0, 1.0};
Point(63) = {-0.074060, -0.744688, 0, 1.0};
Point(64) = {-0.071756, -0.744190, 0, 1.0};
Point(65) = {-0.068685, -0.743505, 0, 1.0};
Point(66) = {-0.064845, -0.742665, 0, 1.0};
Point(67) = {-0.060238, -0.741612, 0, 1.0};
Point(68) = {-0.054863, -0.740455, 0, 1.0};
Point(69) = {-0.049488, -0.739117, 0, 1.0};
Point(70) = {-0.043346, -0.737682, 0, 1.0};
Point(71) = {-0.037202, -0.736553, 0, 1.0};
Point(72) = {-0.031057, -0.735723, 0, 1.0};
Point(73) = {-0.024912, -0.735156, 0, 1.0};
Point(74) = {-0.017231, -0.734518, 0, 1.0};
Point(75) = {-0.009548, -0.734056, 0, 1.0};
Point(76) = {-0.001866, -0.733617, 0, 1.0};
Point(77) = {0.005816, -0.733321, 0, 1.0};
Point(78) = {0.013499, -0.733135, 0, 1.0};
Point(79) = {0.021183, -0.733070, 0, 1.0};
Point(80) = {0.028866, -0.733138, 0, 1.0};
Point(81) = {0.036550, -0.733292, 0, 1.0};
Point(82) = {0.044235, -0.733678, 0, 1.0};
Point(83) = {0.051920, -0.734294, 0, 1.0};
Point(84) = {0.059606, -0.735315, 0, 1.0};
Point(85) = {0.063450, -0.736272, 0, 1.0};
Point(86) = {0.067296, -0.737676, 0, 1.0};
Point(87) = {0.071143, -0.739755, 0, 1.0};
Point(88) = {0.073069, -0.741332, 0, 1.0};
Point(89) = {0.073839, -0.742083, 0, 1.0};
Point(90) = {0.074225, -0.742589, 0, 1.0};
Point(91) = {0.074688, -0.743433, 0, 1.0};
Point(92) = {0.075000, -0.745046, 0, 1.0};
Point(93) = {0.074694, -0.745738, 0, 1.0};
Point(94) = {0.074234, -0.746078, 0, 1.0};
Point(95) = {0.073851, -0.746248, 0, 1.0};
Point(96) = {0.073083, -0.746496, 0, 1.0};
Point(97) = {0.071163, -0.746947, 0, 1.0};
Point(98) = {0.067323, -0.747526, 0, 1.0};
Point(99) = {0.063483, -0.747982, 0, 1.0};
Point(100) = {0.059642, -0.748331, 0, 1.0};
Point(101) = {0.051960, -0.748874, 0, 1.0};
Point(102) = {0.044278, -0.749267, 0, 1.0};
Point(103) = {0.036595, -0.749585, 0, 1.0};
Point(104) = {0.028912, -0.749783, 0, 1.0};
Point(105) = {0.021229, -0.749927, 0, 1.0};
Point(106) = {0.013546, -0.749994, 0, 1.0};
Point(107) = {0.005862, -0.750000, 0, 1.0};
Point(108) = {-0.001821, -0.749921, 0, 1.0};
Point(109) = {-0.009505, -0.749766, 0, 1.0};
Point(110) = {-0.017189, -0.749556, 0, 1.0};
Point(111) = {-0.024873, -0.749316, 0, 1.0};
Point(112) = {-0.031021, -0.749103, 0, 1.0};
Point(113) = {-0.037168, -0.748858, 0, 1.0};
Point(114) = {-0.043316, -0.748576, 0, 1.0};
Point(115) = {-0.049463, -0.748293, 0, 1.0};
Point(116) = {-0.054842, -0.748000, 0, 1.0};
Point(117) = {-0.060222, -0.747662, 0, 1.0};
Point(118) = {-0.064833, -0.747290, 0, 1.0};
Point(119) = {-0.068675, -0.746978, 0, 1.0};
Point(120) = {-0.071749, -0.746679, 0, 1.0};
Point(121) = {-0.074055, -0.746394, 0, 1.0};
Point(122) = {-0.074998, -0.746258, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
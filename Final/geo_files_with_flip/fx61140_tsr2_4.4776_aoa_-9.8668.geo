SetFactory("OpenCASCADE");

Point(1) = {0.074444, 0.748527, 0, 1.0};
Point(2) = {0.072956, 0.747968, 0, 1.0};
Point(3) = {0.070013, 0.746866, 0, 1.0};
Point(4) = {0.066803, 0.745687, 0, 1.0};
Point(5) = {0.063339, 0.744438, 0, 1.0};
Point(6) = {0.059639, 0.743125, 0, 1.0};
Point(7) = {0.055717, 0.741750, 0, 1.0};
Point(8) = {0.051590, 0.740323, 0, 1.0};
Point(9) = {0.047274, 0.738850, 0, 1.0};
Point(10) = {0.042789, 0.737336, 0, 1.0};
Point(11) = {0.038154, 0.735794, 0, 1.0};
Point(12) = {0.033388, 0.734233, 0, 1.0};
Point(13) = {0.028510, 0.732661, 0, 1.0};
Point(14) = {0.023541, 0.731091, 0, 1.0};
Point(15) = {0.018499, 0.729531, 0, 1.0};
Point(16) = {0.013408, 0.728001, 0, 1.0};
Point(17) = {0.008287, 0.726514, 0, 1.0};
Point(18) = {0.003155, 0.725082, 0, 1.0};
Point(19) = {-0.001966, 0.723727, 0, 1.0};
Point(20) = {-0.007060, 0.722471, 0, 1.0};
Point(21) = {-0.012105, 0.721335, 0, 1.0};
Point(22) = {-0.017084, 0.720344, 0, 1.0};
Point(23) = {-0.021977, 0.719508, 0, 1.0};
Point(24) = {-0.026763, 0.718838, 0, 1.0};
Point(25) = {-0.031423, 0.718331, 0, 1.0};
Point(26) = {-0.035938, 0.717998, 0, 1.0};
Point(27) = {-0.040283, 0.717828, 0, 1.0};
Point(28) = {-0.044444, 0.717828, 0, 1.0};
Point(29) = {-0.048398, 0.717973, 0, 1.0};
Point(30) = {-0.052129, 0.718262, 0, 1.0};
Point(31) = {-0.055615, 0.718662, 0, 1.0};
Point(32) = {-0.058838, 0.719173, 0, 1.0};
Point(33) = {-0.061784, 0.719766, 0, 1.0};
Point(34) = {-0.064440, 0.720443, 0, 1.0};
Point(35) = {-0.066789, 0.721176, 0, 1.0};
Point(36) = {-0.068824, 0.721967, 0, 1.0};
Point(37) = {-0.070527, 0.722780, 0, 1.0};
Point(38) = {-0.071890, 0.723589, 0, 1.0};
Point(39) = {-0.072909, 0.724409, 0, 1.0};
Point(40) = {-0.073580, 0.725227, 0, 1.0};
Point(41) = {-0.073891, 0.726002, 0, 1.0};
Point(42) = {-0.073775, 0.726348, 0, 1.0};
Point(43) = {-0.073344, 0.726905, 0, 1.0};
Point(44) = {-0.072579, 0.727553, 0, 1.0};
Point(45) = {-0.071481, 0.728267, 0, 1.0};
Point(46) = {-0.070058, 0.729061, 0, 1.0};
Point(47) = {-0.068306, 0.729899, 0, 1.0};
Point(48) = {-0.066239, 0.730785, 0, 1.0};
Point(49) = {-0.063863, 0.731717, 0, 1.0};
Point(50) = {-0.061188, 0.732688, 0, 1.0};
Point(51) = {-0.058228, 0.733689, 0, 1.0};
Point(52) = {-0.054990, 0.734709, 0, 1.0};
Point(53) = {-0.051489, 0.735744, 0, 1.0};
Point(54) = {-0.047741, 0.736783, 0, 1.0};
Point(55) = {-0.043760, 0.737818, 0, 1.0};
Point(56) = {-0.039563, 0.738844, 0, 1.0};
Point(57) = {-0.035166, 0.739852, 0, 1.0};
Point(58) = {-0.030588, 0.740831, 0, 1.0};
Point(59) = {-0.025850, 0.741777, 0, 1.0};
Point(60) = {-0.020968, 0.742675, 0, 1.0};
Point(61) = {-0.015964, 0.743521, 0, 1.0};
Point(62) = {-0.010858, 0.744302, 0, 1.0};
Point(63) = {-0.005669, 0.745015, 0, 1.0};
Point(64) = {-0.000420, 0.745637, 0, 1.0};
Point(65) = {0.004867, 0.746175, 0, 1.0};
Point(66) = {0.010170, 0.746617, 0, 1.0};
Point(67) = {0.015466, 0.746969, 0, 1.0};
Point(68) = {0.020737, 0.747211, 0, 1.0};
Point(69) = {0.025956, 0.747342, 0, 1.0};
Point(70) = {0.031102, 0.747373, 0, 1.0};
Point(71) = {0.036144, 0.747352, 0, 1.0};
Point(72) = {0.041051, 0.747327, 0, 1.0};
Point(73) = {0.045795, 0.747356, 0, 1.0};
Point(74) = {0.050349, 0.747457, 0, 1.0};
Point(75) = {0.054691, 0.747646, 0, 1.0};
Point(76) = {0.058806, 0.747914, 0, 1.0};
Point(77) = {0.062674, 0.748266, 0, 1.0};
Point(78) = {0.066281, 0.748686, 0, 1.0};
Point(79) = {0.069613, 0.749169, 0, 1.0};
Point(80) = {0.072656, 0.749696, 0, 1.0};
Point(81) = {0.074187, 0.750000, 0, 1.0};
Point(82) = {-0.074444, -0.748527, 0, 1.0};
Point(83) = {-0.072956, -0.747968, 0, 1.0};
Point(84) = {-0.070013, -0.746866, 0, 1.0};
Point(85) = {-0.066803, -0.745687, 0, 1.0};
Point(86) = {-0.063339, -0.744438, 0, 1.0};
Point(87) = {-0.059639, -0.743125, 0, 1.0};
Point(88) = {-0.055717, -0.741750, 0, 1.0};
Point(89) = {-0.051590, -0.740323, 0, 1.0};
Point(90) = {-0.047274, -0.738850, 0, 1.0};
Point(91) = {-0.042789, -0.737336, 0, 1.0};
Point(92) = {-0.038154, -0.735794, 0, 1.0};
Point(93) = {-0.033388, -0.734233, 0, 1.0};
Point(94) = {-0.028510, -0.732661, 0, 1.0};
Point(95) = {-0.023541, -0.731091, 0, 1.0};
Point(96) = {-0.018499, -0.729531, 0, 1.0};
Point(97) = {-0.013408, -0.728001, 0, 1.0};
Point(98) = {-0.008287, -0.726514, 0, 1.0};
Point(99) = {-0.003155, -0.725082, 0, 1.0};
Point(100) = {0.001966, -0.723727, 0, 1.0};
Point(101) = {0.007060, -0.722471, 0, 1.0};
Point(102) = {0.012105, -0.721335, 0, 1.0};
Point(103) = {0.017084, -0.720344, 0, 1.0};
Point(104) = {0.021977, -0.719508, 0, 1.0};
Point(105) = {0.026763, -0.718838, 0, 1.0};
Point(106) = {0.031423, -0.718331, 0, 1.0};
Point(107) = {0.035938, -0.717998, 0, 1.0};
Point(108) = {0.040283, -0.717828, 0, 1.0};
Point(109) = {0.044444, -0.717828, 0, 1.0};
Point(110) = {0.048398, -0.717973, 0, 1.0};
Point(111) = {0.052129, -0.718262, 0, 1.0};
Point(112) = {0.055615, -0.718662, 0, 1.0};
Point(113) = {0.058838, -0.719173, 0, 1.0};
Point(114) = {0.061784, -0.719766, 0, 1.0};
Point(115) = {0.064440, -0.720443, 0, 1.0};
Point(116) = {0.066789, -0.721176, 0, 1.0};
Point(117) = {0.068824, -0.721967, 0, 1.0};
Point(118) = {0.070527, -0.722780, 0, 1.0};
Point(119) = {0.071890, -0.723589, 0, 1.0};
Point(120) = {0.072909, -0.724409, 0, 1.0};
Point(121) = {0.073580, -0.725227, 0, 1.0};
Point(122) = {0.073891, -0.726002, 0, 1.0};
Point(123) = {0.073775, -0.726348, 0, 1.0};
Point(124) = {0.073344, -0.726905, 0, 1.0};
Point(125) = {0.072579, -0.727553, 0, 1.0};
Point(126) = {0.071481, -0.728267, 0, 1.0};
Point(127) = {0.070058, -0.729061, 0, 1.0};
Point(128) = {0.068306, -0.729899, 0, 1.0};
Point(129) = {0.066239, -0.730785, 0, 1.0};
Point(130) = {0.063863, -0.731717, 0, 1.0};
Point(131) = {0.061188, -0.732688, 0, 1.0};
Point(132) = {0.058228, -0.733689, 0, 1.0};
Point(133) = {0.054990, -0.734709, 0, 1.0};
Point(134) = {0.051489, -0.735744, 0, 1.0};
Point(135) = {0.047741, -0.736783, 0, 1.0};
Point(136) = {0.043760, -0.737818, 0, 1.0};
Point(137) = {0.039563, -0.738844, 0, 1.0};
Point(138) = {0.035166, -0.739852, 0, 1.0};
Point(139) = {0.030588, -0.740831, 0, 1.0};
Point(140) = {0.025850, -0.741777, 0, 1.0};
Point(141) = {0.020968, -0.742675, 0, 1.0};
Point(142) = {0.015964, -0.743521, 0, 1.0};
Point(143) = {0.010858, -0.744302, 0, 1.0};
Point(144) = {0.005669, -0.745015, 0, 1.0};
Point(145) = {0.000420, -0.745637, 0, 1.0};
Point(146) = {-0.004867, -0.746175, 0, 1.0};
Point(147) = {-0.010170, -0.746617, 0, 1.0};
Point(148) = {-0.015466, -0.746969, 0, 1.0};
Point(149) = {-0.020737, -0.747211, 0, 1.0};
Point(150) = {-0.025956, -0.747342, 0, 1.0};
Point(151) = {-0.031102, -0.747373, 0, 1.0};
Point(152) = {-0.036144, -0.747352, 0, 1.0};
Point(153) = {-0.041051, -0.747327, 0, 1.0};
Point(154) = {-0.045795, -0.747356, 0, 1.0};
Point(155) = {-0.050349, -0.747457, 0, 1.0};
Point(156) = {-0.054691, -0.747646, 0, 1.0};
Point(157) = {-0.058806, -0.747914, 0, 1.0};
Point(158) = {-0.062674, -0.748266, 0, 1.0};
Point(159) = {-0.066281, -0.748686, 0, 1.0};
Point(160) = {-0.069613, -0.749169, 0, 1.0};
Point(161) = {-0.072656, -0.749696, 0, 1.0};
Point(162) = {-0.074187, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073531, 0.721335, 0, 1.0};
Point(2) = {0.071671, 0.721241, 0, 1.0};
Point(3) = {0.068490, 0.721094, 0, 1.0};
Point(4) = {0.065101, 0.720952, 0, 1.0};
Point(5) = {0.061407, 0.720808, 0, 1.0};
Point(6) = {0.057488, 0.720692, 0, 1.0};
Point(7) = {0.053314, 0.720572, 0, 1.0};
Point(8) = {0.048936, 0.720472, 0, 1.0};
Point(9) = {0.044363, 0.720351, 0, 1.0};
Point(10) = {0.039630, 0.720264, 0, 1.0};
Point(11) = {0.034724, 0.720147, 0, 1.0};
Point(12) = {0.029701, 0.720084, 0, 1.0};
Point(13) = {0.024547, 0.719997, 0, 1.0};
Point(14) = {0.019316, 0.719952, 0, 1.0};
Point(15) = {0.014022, 0.719899, 0, 1.0};
Point(16) = {0.008701, 0.719940, 0, 1.0};
Point(17) = {0.003333, 0.719955, 0, 1.0};
Point(18) = {-0.001991, 0.720115, 0, 1.0};
Point(19) = {-0.007315, 0.720273, 0, 1.0};
Point(20) = {-0.012536, 0.720682, 0, 1.0};
Point(21) = {-0.017690, 0.721110, 0, 1.0};
Point(22) = {-0.022693, 0.721828, 0, 1.0};
Point(23) = {-0.027631, 0.722532, 0, 1.0};
Point(24) = {-0.032320, 0.723541, 0, 1.0};
Point(25) = {-0.036911, 0.724480, 0, 1.0};
Point(26) = {-0.041258, 0.725752, 0, 1.0};
Point(27) = {-0.045440, 0.726887, 0, 1.0};
Point(28) = {-0.049332, 0.728384, 0, 1.0};
Point(29) = {-0.053051, 0.729662, 0, 1.0};
Point(30) = {-0.056452, 0.731346, 0, 1.0};
Point(31) = {-0.059632, 0.732701, 0, 1.0};
Point(32) = {-0.062466, 0.734530, 0, 1.0};
Point(33) = {-0.065075, 0.735922, 0, 1.0};
Point(34) = {-0.067273, 0.737911, 0, 1.0};
Point(35) = {-0.069235, 0.739535, 0, 1.0};
Point(36) = {-0.070858, 0.741188, 0, 1.0};
Point(37) = {-0.072155, 0.742789, 0, 1.0};
Point(38) = {-0.073136, 0.744257, 0, 1.0};
Point(39) = {-0.073791, 0.745673, 0, 1.0};
Point(40) = {-0.074059, 0.747273, 0, 1.0};
Point(41) = {-0.074055, 0.748338, 0, 1.0};
Point(42) = {-0.073841, 0.748631, 0, 1.0};
Point(43) = {-0.073279, 0.748869, 0, 1.0};
Point(44) = {-0.072342, 0.749210, 0, 1.0};
Point(45) = {-0.071087, 0.749452, 0, 1.0};
Point(46) = {-0.069485, 0.749754, 0, 1.0};
Point(47) = {-0.067596, 0.749761, 0, 1.0};
Point(48) = {-0.065341, 0.749968, 0, 1.0};
Point(49) = {-0.062832, 0.749915, 0, 1.0};
Point(50) = {-0.059987, 0.750000, 0, 1.0};
Point(51) = {-0.056904, 0.749724, 0, 1.0};
Point(52) = {-0.053510, 0.749701, 0, 1.0};
Point(53) = {-0.049908, 0.749273, 0, 1.0};
Point(54) = {-0.046023, 0.749036, 0, 1.0};
Point(55) = {-0.041984, 0.748454, 0, 1.0};
Point(56) = {-0.037692, 0.748007, 0, 1.0};
Point(57) = {-0.033263, 0.747248, 0, 1.0};
Point(58) = {-0.028628, 0.746583, 0, 1.0};
Point(59) = {-0.023926, 0.745654, 0, 1.0};
Point(60) = {-0.019015, 0.744780, 0, 1.0};
Point(61) = {-0.014073, 0.743682, 0, 1.0};
Point(62) = {-0.009019, 0.742629, 0, 1.0};
Point(63) = {-0.003932, 0.741383, 0, 1.0};
Point(64) = {0.001222, 0.740167, 0, 1.0};
Point(65) = {0.006351, 0.738788, 0, 1.0};
Point(66) = {0.011503, 0.737430, 0, 1.0};
Point(67) = {0.016592, 0.735934, 0, 1.0};
Point(68) = {0.021645, 0.734487, 0, 1.0};
Point(69) = {0.026631, 0.732996, 0, 1.0};
Point(70) = {0.031550, 0.731621, 0, 1.0};
Point(71) = {0.036348, 0.730279, 0, 1.0};
Point(72) = {0.041041, 0.729073, 0, 1.0};
Point(73) = {0.045577, 0.727922, 0, 1.0};
Point(74) = {0.049968, 0.726913, 0, 1.0};
Point(75) = {0.054180, 0.725974, 0, 1.0};
Point(76) = {0.058206, 0.725174, 0, 1.0};
Point(77) = {0.061992, 0.724463, 0, 1.0};
Point(78) = {0.065571, 0.723887, 0, 1.0};
Point(79) = {0.068859, 0.723399, 0, 1.0};
Point(80) = {0.071957, 0.723022, 0, 1.0};
Point(81) = {0.073771, 0.722829, 0, 1.0};
Point(82) = {-0.073531, -0.721335, 0, 1.0};
Point(83) = {-0.071671, -0.721241, 0, 1.0};
Point(84) = {-0.068490, -0.721094, 0, 1.0};
Point(85) = {-0.065101, -0.720952, 0, 1.0};
Point(86) = {-0.061407, -0.720808, 0, 1.0};
Point(87) = {-0.057488, -0.720692, 0, 1.0};
Point(88) = {-0.053314, -0.720572, 0, 1.0};
Point(89) = {-0.048936, -0.720472, 0, 1.0};
Point(90) = {-0.044363, -0.720351, 0, 1.0};
Point(91) = {-0.039630, -0.720264, 0, 1.0};
Point(92) = {-0.034724, -0.720147, 0, 1.0};
Point(93) = {-0.029701, -0.720084, 0, 1.0};
Point(94) = {-0.024547, -0.719997, 0, 1.0};
Point(95) = {-0.019316, -0.719952, 0, 1.0};
Point(96) = {-0.014022, -0.719899, 0, 1.0};
Point(97) = {-0.008701, -0.719940, 0, 1.0};
Point(98) = {-0.003333, -0.719955, 0, 1.0};
Point(99) = {0.001991, -0.720115, 0, 1.0};
Point(100) = {0.007315, -0.720273, 0, 1.0};
Point(101) = {0.012536, -0.720682, 0, 1.0};
Point(102) = {0.017690, -0.721110, 0, 1.0};
Point(103) = {0.022693, -0.721828, 0, 1.0};
Point(104) = {0.027631, -0.722532, 0, 1.0};
Point(105) = {0.032320, -0.723541, 0, 1.0};
Point(106) = {0.036911, -0.724480, 0, 1.0};
Point(107) = {0.041258, -0.725752, 0, 1.0};
Point(108) = {0.045440, -0.726887, 0, 1.0};
Point(109) = {0.049332, -0.728384, 0, 1.0};
Point(110) = {0.053051, -0.729662, 0, 1.0};
Point(111) = {0.056452, -0.731346, 0, 1.0};
Point(112) = {0.059632, -0.732701, 0, 1.0};
Point(113) = {0.062466, -0.734530, 0, 1.0};
Point(114) = {0.065075, -0.735922, 0, 1.0};
Point(115) = {0.067273, -0.737911, 0, 1.0};
Point(116) = {0.069235, -0.739535, 0, 1.0};
Point(117) = {0.070858, -0.741188, 0, 1.0};
Point(118) = {0.072155, -0.742789, 0, 1.0};
Point(119) = {0.073136, -0.744257, 0, 1.0};
Point(120) = {0.073791, -0.745673, 0, 1.0};
Point(121) = {0.074059, -0.747273, 0, 1.0};
Point(122) = {0.074055, -0.748338, 0, 1.0};
Point(123) = {0.073841, -0.748631, 0, 1.0};
Point(124) = {0.073279, -0.748869, 0, 1.0};
Point(125) = {0.072342, -0.749210, 0, 1.0};
Point(126) = {0.071087, -0.749452, 0, 1.0};
Point(127) = {0.069485, -0.749754, 0, 1.0};
Point(128) = {0.067596, -0.749761, 0, 1.0};
Point(129) = {0.065341, -0.749968, 0, 1.0};
Point(130) = {0.062832, -0.749915, 0, 1.0};
Point(131) = {0.059987, -0.750000, 0, 1.0};
Point(132) = {0.056904, -0.749724, 0, 1.0};
Point(133) = {0.053510, -0.749701, 0, 1.0};
Point(134) = {0.049908, -0.749273, 0, 1.0};
Point(135) = {0.046023, -0.749036, 0, 1.0};
Point(136) = {0.041984, -0.748454, 0, 1.0};
Point(137) = {0.037692, -0.748007, 0, 1.0};
Point(138) = {0.033263, -0.747248, 0, 1.0};
Point(139) = {0.028628, -0.746583, 0, 1.0};
Point(140) = {0.023926, -0.745654, 0, 1.0};
Point(141) = {0.019015, -0.744780, 0, 1.0};
Point(142) = {0.014073, -0.743682, 0, 1.0};
Point(143) = {0.009019, -0.742629, 0, 1.0};
Point(144) = {0.003932, -0.741383, 0, 1.0};
Point(145) = {-0.001222, -0.740167, 0, 1.0};
Point(146) = {-0.006351, -0.738788, 0, 1.0};
Point(147) = {-0.011503, -0.737430, 0, 1.0};
Point(148) = {-0.016592, -0.735934, 0, 1.0};
Point(149) = {-0.021645, -0.734487, 0, 1.0};
Point(150) = {-0.026631, -0.732996, 0, 1.0};
Point(151) = {-0.031550, -0.731621, 0, 1.0};
Point(152) = {-0.036348, -0.730279, 0, 1.0};
Point(153) = {-0.041041, -0.729073, 0, 1.0};
Point(154) = {-0.045577, -0.727922, 0, 1.0};
Point(155) = {-0.049968, -0.726913, 0, 1.0};
Point(156) = {-0.054180, -0.725974, 0, 1.0};
Point(157) = {-0.058206, -0.725174, 0, 1.0};
Point(158) = {-0.061992, -0.724463, 0, 1.0};
Point(159) = {-0.065571, -0.723887, 0, 1.0};
Point(160) = {-0.068859, -0.723399, 0, 1.0};
Point(161) = {-0.071957, -0.723022, 0, 1.0};
Point(162) = {-0.073771, -0.722829, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.075012, 0.724109, 0, 1.0};
Point(2) = {0.073294, 0.724846, 0, 1.0};
Point(3) = {0.070637, 0.725976, 0, 1.0};
Point(4) = {0.067707, 0.727213, 0, 1.0};
Point(5) = {0.064515, 0.728562, 0, 1.0};
Point(6) = {0.061075, 0.730016, 0, 1.0};
Point(7) = {0.057403, 0.731576, 0, 1.0};
Point(8) = {0.053516, 0.733232, 0, 1.0};
Point(9) = {0.049427, 0.734969, 0, 1.0};
Point(10) = {0.045151, 0.736744, 0, 1.0};
Point(11) = {0.040703, 0.738507, 0, 1.0};
Point(12) = {0.036100, 0.740210, 0, 1.0};
Point(13) = {0.031358, 0.741814, 0, 1.0};
Point(14) = {0.026494, 0.743293, 0, 1.0};
Point(15) = {0.021530, 0.744630, 0, 1.0};
Point(16) = {0.016485, 0.745817, 0, 1.0};
Point(17) = {0.011383, 0.746853, 0, 1.0};
Point(18) = {0.006246, 0.747740, 0, 1.0};
Point(19) = {0.001096, 0.748479, 0, 1.0};
Point(20) = {-0.004044, 0.749073, 0, 1.0};
Point(21) = {-0.009154, 0.749523, 0, 1.0};
Point(22) = {-0.014209, 0.749826, 0, 1.0};
Point(23) = {-0.019188, 0.749985, 0, 1.0};
Point(24) = {-0.024070, 0.750000, 0, 1.0};
Point(25) = {-0.028833, 0.749871, 0, 1.0};
Point(26) = {-0.033460, 0.749600, 0, 1.0};
Point(27) = {-0.037927, 0.749193, 0, 1.0};
Point(28) = {-0.042215, 0.748654, 0, 1.0};
Point(29) = {-0.046307, 0.747987, 0, 1.0};
Point(30) = {-0.050184, 0.747203, 0, 1.0};
Point(31) = {-0.053830, 0.746306, 0, 1.0};
Point(32) = {-0.057228, 0.745305, 0, 1.0};
Point(33) = {-0.060362, 0.744212, 0, 1.0};
Point(34) = {-0.063221, 0.743039, 0, 1.0};
Point(35) = {-0.065790, 0.741805, 0, 1.0};
Point(36) = {-0.068054, 0.740536, 0, 1.0};
Point(37) = {-0.070005, 0.739256, 0, 1.0};
Point(38) = {-0.071629, 0.737992, 0, 1.0};
Point(39) = {-0.072921, 0.736772, 0, 1.0};
Point(40) = {-0.073871, 0.735637, 0, 1.0};
Point(41) = {-0.074471, 0.734624, 0, 1.0};
Point(42) = {-0.074713, 0.733811, 0, 1.0};
Point(43) = {-0.074606, 0.733094, 0, 1.0};
Point(44) = {-0.074148, 0.732475, 0, 1.0};
Point(45) = {-0.073345, 0.731942, 0, 1.0};
Point(46) = {-0.072200, 0.731487, 0, 1.0};
Point(47) = {-0.070717, 0.731136, 0, 1.0};
Point(48) = {-0.068900, 0.730887, 0, 1.0};
Point(49) = {-0.066761, 0.730731, 0, 1.0};
Point(50) = {-0.064307, 0.730652, 0, 1.0};
Point(51) = {-0.061553, 0.730635, 0, 1.0};
Point(52) = {-0.058513, 0.730655, 0, 1.0};
Point(53) = {-0.055198, 0.730698, 0, 1.0};
Point(54) = {-0.051626, 0.730756, 0, 1.0};
Point(55) = {-0.047812, 0.730817, 0, 1.0};
Point(56) = {-0.043774, 0.730873, 0, 1.0};
Point(57) = {-0.039530, 0.730916, 0, 1.0};
Point(58) = {-0.035096, 0.730937, 0, 1.0};
Point(59) = {-0.030494, 0.730930, 0, 1.0};
Point(60) = {-0.025745, 0.730892, 0, 1.0};
Point(61) = {-0.020869, 0.730817, 0, 1.0};
Point(62) = {-0.015885, 0.730705, 0, 1.0};
Point(63) = {-0.010818, 0.730556, 0, 1.0};
Point(64) = {-0.005684, 0.730369, 0, 1.0};
Point(65) = {-0.000511, 0.730148, 0, 1.0};
Point(66) = {0.004681, 0.729893, 0, 1.0};
Point(67) = {0.009871, 0.729609, 0, 1.0};
Point(68) = {0.015037, 0.729298, 0, 1.0};
Point(69) = {0.020157, 0.728965, 0, 1.0};
Point(70) = {0.025207, 0.728617, 0, 1.0};
Point(71) = {0.030169, 0.728256, 0, 1.0};
Point(72) = {0.035020, 0.727888, 0, 1.0};
Point(73) = {0.039739, 0.727514, 0, 1.0};
Point(74) = {0.044308, 0.727133, 0, 1.0};
Point(75) = {0.048705, 0.726730, 0, 1.0};
Point(76) = {0.052907, 0.726298, 0, 1.0};
Point(77) = {0.056900, 0.725831, 0, 1.0};
Point(78) = {0.060664, 0.725326, 0, 1.0};
Point(79) = {0.064184, 0.724786, 0, 1.0};
Point(80) = {0.067445, 0.724217, 0, 1.0};
Point(81) = {0.070431, 0.723627, 0, 1.0};
Point(82) = {0.073134, 0.723030, 0, 1.0};
Point(83) = {0.074881, 0.722623, 0, 1.0};
Point(84) = {-0.075012, -0.724109, 0, 1.0};
Point(85) = {-0.073294, -0.724846, 0, 1.0};
Point(86) = {-0.070637, -0.725976, 0, 1.0};
Point(87) = {-0.067707, -0.727213, 0, 1.0};
Point(88) = {-0.064515, -0.728562, 0, 1.0};
Point(89) = {-0.061075, -0.730016, 0, 1.0};
Point(90) = {-0.057403, -0.731576, 0, 1.0};
Point(91) = {-0.053516, -0.733232, 0, 1.0};
Point(92) = {-0.049427, -0.734969, 0, 1.0};
Point(93) = {-0.045151, -0.736744, 0, 1.0};
Point(94) = {-0.040703, -0.738507, 0, 1.0};
Point(95) = {-0.036100, -0.740210, 0, 1.0};
Point(96) = {-0.031358, -0.741814, 0, 1.0};
Point(97) = {-0.026494, -0.743293, 0, 1.0};
Point(98) = {-0.021530, -0.744630, 0, 1.0};
Point(99) = {-0.016485, -0.745817, 0, 1.0};
Point(100) = {-0.011383, -0.746853, 0, 1.0};
Point(101) = {-0.006246, -0.747740, 0, 1.0};
Point(102) = {-0.001096, -0.748479, 0, 1.0};
Point(103) = {0.004044, -0.749073, 0, 1.0};
Point(104) = {0.009154, -0.749523, 0, 1.0};
Point(105) = {0.014209, -0.749826, 0, 1.0};
Point(106) = {0.019188, -0.749985, 0, 1.0};
Point(107) = {0.024070, -0.750000, 0, 1.0};
Point(108) = {0.028833, -0.749871, 0, 1.0};
Point(109) = {0.033460, -0.749600, 0, 1.0};
Point(110) = {0.037927, -0.749193, 0, 1.0};
Point(111) = {0.042215, -0.748654, 0, 1.0};
Point(112) = {0.046307, -0.747987, 0, 1.0};
Point(113) = {0.050184, -0.747203, 0, 1.0};
Point(114) = {0.053830, -0.746306, 0, 1.0};
Point(115) = {0.057228, -0.745305, 0, 1.0};
Point(116) = {0.060362, -0.744212, 0, 1.0};
Point(117) = {0.063221, -0.743039, 0, 1.0};
Point(118) = {0.065790, -0.741805, 0, 1.0};
Point(119) = {0.068054, -0.740536, 0, 1.0};
Point(120) = {0.070005, -0.739256, 0, 1.0};
Point(121) = {0.071629, -0.737992, 0, 1.0};
Point(122) = {0.072921, -0.736772, 0, 1.0};
Point(123) = {0.073871, -0.735637, 0, 1.0};
Point(124) = {0.074471, -0.734624, 0, 1.0};
Point(125) = {0.074713, -0.733811, 0, 1.0};
Point(126) = {0.074606, -0.733094, 0, 1.0};
Point(127) = {0.074148, -0.732475, 0, 1.0};
Point(128) = {0.073345, -0.731942, 0, 1.0};
Point(129) = {0.072200, -0.731487, 0, 1.0};
Point(130) = {0.070717, -0.731136, 0, 1.0};
Point(131) = {0.068900, -0.730887, 0, 1.0};
Point(132) = {0.066761, -0.730731, 0, 1.0};
Point(133) = {0.064307, -0.730652, 0, 1.0};
Point(134) = {0.061553, -0.730635, 0, 1.0};
Point(135) = {0.058513, -0.730655, 0, 1.0};
Point(136) = {0.055198, -0.730698, 0, 1.0};
Point(137) = {0.051626, -0.730756, 0, 1.0};
Point(138) = {0.047812, -0.730817, 0, 1.0};
Point(139) = {0.043774, -0.730873, 0, 1.0};
Point(140) = {0.039530, -0.730916, 0, 1.0};
Point(141) = {0.035096, -0.730937, 0, 1.0};
Point(142) = {0.030494, -0.730930, 0, 1.0};
Point(143) = {0.025745, -0.730892, 0, 1.0};
Point(144) = {0.020869, -0.730817, 0, 1.0};
Point(145) = {0.015885, -0.730705, 0, 1.0};
Point(146) = {0.010818, -0.730556, 0, 1.0};
Point(147) = {0.005684, -0.730369, 0, 1.0};
Point(148) = {0.000511, -0.730148, 0, 1.0};
Point(149) = {-0.004681, -0.729893, 0, 1.0};
Point(150) = {-0.009871, -0.729609, 0, 1.0};
Point(151) = {-0.015037, -0.729298, 0, 1.0};
Point(152) = {-0.020157, -0.728965, 0, 1.0};
Point(153) = {-0.025207, -0.728617, 0, 1.0};
Point(154) = {-0.030169, -0.728256, 0, 1.0};
Point(155) = {-0.035020, -0.727888, 0, 1.0};
Point(156) = {-0.039739, -0.727514, 0, 1.0};
Point(157) = {-0.044308, -0.727133, 0, 1.0};
Point(158) = {-0.048705, -0.726730, 0, 1.0};
Point(159) = {-0.052907, -0.726298, 0, 1.0};
Point(160) = {-0.056900, -0.725831, 0, 1.0};
Point(161) = {-0.060664, -0.725326, 0, 1.0};
Point(162) = {-0.064184, -0.724786, 0, 1.0};
Point(163) = {-0.067445, -0.724217, 0, 1.0};
Point(164) = {-0.070431, -0.723627, 0, 1.0};
Point(165) = {-0.073134, -0.723030, 0, 1.0};
Point(166) = {-0.074881, -0.722623, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
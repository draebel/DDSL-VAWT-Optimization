SetFactory("OpenCASCADE");

Point(1) = {0.074772, 0.748197, 0, 1.0};
Point(2) = {0.074176, 0.748081, 0, 1.0};
Point(3) = {0.071900, 0.747584, 0, 1.0};
Point(4) = {0.068873, 0.746834, 0, 1.0};
Point(5) = {0.065093, 0.745845, 0, 1.0};
Point(6) = {0.060558, 0.744660, 0, 1.0};
Point(7) = {0.055268, 0.743264, 0, 1.0};
Point(8) = {0.049976, 0.741888, 0, 1.0};
Point(9) = {0.043923, 0.740385, 0, 1.0};
Point(10) = {0.037867, 0.738900, 0, 1.0};
Point(11) = {0.031809, 0.737449, 0, 1.0};
Point(12) = {0.025743, 0.736086, 0, 1.0};
Point(13) = {0.018150, 0.734515, 0, 1.0};
Point(14) = {0.010539, 0.733134, 0, 1.0};
Point(15) = {0.002917, 0.731895, 0, 1.0};
Point(16) = {-0.004720, 0.730826, 0, 1.0};
Point(17) = {-0.012365, 0.729848, 0, 1.0};
Point(18) = {-0.020024, 0.729024, 0, 1.0};
Point(19) = {-0.027692, 0.728323, 0, 1.0};
Point(20) = {-0.035371, 0.727736, 0, 1.0};
Point(21) = {-0.043062, 0.727288, 0, 1.0};
Point(22) = {-0.050777, 0.727116, 0, 1.0};
Point(23) = {-0.056359, 0.727314, 0, 1.0};
Point(24) = {-0.060415, 0.727736, 0, 1.0};
Point(25) = {-0.063477, 0.728291, 0, 1.0};
Point(26) = {-0.065853, 0.728951, 0, 1.0};
Point(27) = {-0.067751, 0.729630, 0, 1.0};
Point(28) = {-0.069284, 0.730277, 0, 1.0};
Point(29) = {-0.070507, 0.730924, 0, 1.0};
Point(30) = {-0.071471, 0.731524, 0, 1.0};
Point(31) = {-0.072204, 0.732051, 0, 1.0};
Point(32) = {-0.072720, 0.732476, 0, 1.0};
Point(33) = {-0.073065, 0.732794, 0, 1.0};
Point(34) = {-0.073404, 0.733144, 0, 1.0};
Point(35) = {-0.073714, 0.733510, 0, 1.0};
Point(36) = {-0.074030, 0.733950, 0, 1.0};
Point(37) = {-0.074294, 0.734408, 0, 1.0};
Point(38) = {-0.074516, 0.734927, 0, 1.0};
Point(39) = {-0.074671, 0.735501, 0, 1.0};
Point(40) = {-0.074722, 0.735868, 0, 1.0};
Point(41) = {-0.074670, 0.736259, 0, 1.0};
Point(42) = {-0.074477, 0.736616, 0, 1.0};
Point(43) = {-0.074197, 0.736957, 0, 1.0};
Point(44) = {-0.073882, 0.737239, 0, 1.0};
Point(45) = {-0.073532, 0.737491, 0, 1.0};
Point(46) = {-0.073179, 0.737694, 0, 1.0};
Point(47) = {-0.072637, 0.737950, 0, 1.0};
Point(48) = {-0.071901, 0.738199, 0, 1.0};
Point(49) = {-0.070905, 0.738486, 0, 1.0};
Point(50) = {-0.069671, 0.738786, 0, 1.0};
Point(51) = {-0.068126, 0.739128, 0, 1.0};
Point(52) = {-0.066241, 0.739523, 0, 1.0};
Point(53) = {-0.063876, 0.739975, 0, 1.0};
Point(54) = {-0.060836, 0.740485, 0, 1.0};
Point(55) = {-0.056855, 0.741099, 0, 1.0};
Point(56) = {-0.052044, 0.741778, 0, 1.0};
Point(57) = {-0.044399, 0.742755, 0, 1.0};
Point(58) = {-0.036746, 0.743648, 0, 1.0};
Point(59) = {-0.029087, 0.744465, 0, 1.0};
Point(60) = {-0.021424, 0.745235, 0, 1.0};
Point(61) = {-0.013756, 0.745944, 0, 1.0};
Point(62) = {-0.006083, 0.746592, 0, 1.0};
Point(63) = {0.001594, 0.747201, 0, 1.0};
Point(64) = {0.009275, 0.747764, 0, 1.0};
Point(65) = {0.016960, 0.748284, 0, 1.0};
Point(66) = {0.024649, 0.748749, 0, 1.0};
Point(67) = {0.030805, 0.749072, 0, 1.0};
Point(68) = {0.036964, 0.749357, 0, 1.0};
Point(69) = {0.043127, 0.749593, 0, 1.0};
Point(70) = {0.049294, 0.749787, 0, 1.0};
Point(71) = {0.054693, 0.749915, 0, 1.0};
Point(72) = {0.060097, 0.750000, 0, 1.0};
Point(73) = {0.064736, 0.749978, 0, 1.0};
Point(74) = {0.068605, 0.749929, 0, 1.0};
Point(75) = {0.071702, 0.749877, 0, 1.0};
Point(76) = {0.074030, 0.749771, 0, 1.0};
Point(77) = {0.074640, 0.749731, 0, 1.0};
Point(78) = {-0.074772, -0.748197, 0, 1.0};
Point(79) = {-0.074176, -0.748081, 0, 1.0};
Point(80) = {-0.071900, -0.747584, 0, 1.0};
Point(81) = {-0.068873, -0.746834, 0, 1.0};
Point(82) = {-0.065093, -0.745845, 0, 1.0};
Point(83) = {-0.060558, -0.744660, 0, 1.0};
Point(84) = {-0.055268, -0.743264, 0, 1.0};
Point(85) = {-0.049976, -0.741888, 0, 1.0};
Point(86) = {-0.043923, -0.740385, 0, 1.0};
Point(87) = {-0.037867, -0.738900, 0, 1.0};
Point(88) = {-0.031809, -0.737449, 0, 1.0};
Point(89) = {-0.025743, -0.736086, 0, 1.0};
Point(90) = {-0.018150, -0.734515, 0, 1.0};
Point(91) = {-0.010539, -0.733134, 0, 1.0};
Point(92) = {-0.002917, -0.731895, 0, 1.0};
Point(93) = {0.004720, -0.730826, 0, 1.0};
Point(94) = {0.012365, -0.729848, 0, 1.0};
Point(95) = {0.020024, -0.729024, 0, 1.0};
Point(96) = {0.027692, -0.728323, 0, 1.0};
Point(97) = {0.035371, -0.727736, 0, 1.0};
Point(98) = {0.043062, -0.727288, 0, 1.0};
Point(99) = {0.050777, -0.727116, 0, 1.0};
Point(100) = {0.056359, -0.727314, 0, 1.0};
Point(101) = {0.060415, -0.727736, 0, 1.0};
Point(102) = {0.063477, -0.728291, 0, 1.0};
Point(103) = {0.065853, -0.728951, 0, 1.0};
Point(104) = {0.067751, -0.729630, 0, 1.0};
Point(105) = {0.069284, -0.730277, 0, 1.0};
Point(106) = {0.070507, -0.730924, 0, 1.0};
Point(107) = {0.071471, -0.731524, 0, 1.0};
Point(108) = {0.072204, -0.732051, 0, 1.0};
Point(109) = {0.072720, -0.732476, 0, 1.0};
Point(110) = {0.073065, -0.732794, 0, 1.0};
Point(111) = {0.073404, -0.733144, 0, 1.0};
Point(112) = {0.073714, -0.733510, 0, 1.0};
Point(113) = {0.074030, -0.733950, 0, 1.0};
Point(114) = {0.074294, -0.734408, 0, 1.0};
Point(115) = {0.074516, -0.734927, 0, 1.0};
Point(116) = {0.074671, -0.735501, 0, 1.0};
Point(117) = {0.074722, -0.735868, 0, 1.0};
Point(118) = {0.074670, -0.736259, 0, 1.0};
Point(119) = {0.074477, -0.736616, 0, 1.0};
Point(120) = {0.074197, -0.736957, 0, 1.0};
Point(121) = {0.073882, -0.737239, 0, 1.0};
Point(122) = {0.073532, -0.737491, 0, 1.0};
Point(123) = {0.073179, -0.737694, 0, 1.0};
Point(124) = {0.072637, -0.737950, 0, 1.0};
Point(125) = {0.071901, -0.738199, 0, 1.0};
Point(126) = {0.070905, -0.738486, 0, 1.0};
Point(127) = {0.069671, -0.738786, 0, 1.0};
Point(128) = {0.068126, -0.739128, 0, 1.0};
Point(129) = {0.066241, -0.739523, 0, 1.0};
Point(130) = {0.063876, -0.739975, 0, 1.0};
Point(131) = {0.060836, -0.740485, 0, 1.0};
Point(132) = {0.056855, -0.741099, 0, 1.0};
Point(133) = {0.052044, -0.741778, 0, 1.0};
Point(134) = {0.044399, -0.742755, 0, 1.0};
Point(135) = {0.036746, -0.743648, 0, 1.0};
Point(136) = {0.029087, -0.744465, 0, 1.0};
Point(137) = {0.021424, -0.745235, 0, 1.0};
Point(138) = {0.013756, -0.745944, 0, 1.0};
Point(139) = {0.006083, -0.746592, 0, 1.0};
Point(140) = {-0.001594, -0.747201, 0, 1.0};
Point(141) = {-0.009275, -0.747764, 0, 1.0};
Point(142) = {-0.016960, -0.748284, 0, 1.0};
Point(143) = {-0.024649, -0.748749, 0, 1.0};
Point(144) = {-0.030805, -0.749072, 0, 1.0};
Point(145) = {-0.036964, -0.749357, 0, 1.0};
Point(146) = {-0.043127, -0.749593, 0, 1.0};
Point(147) = {-0.049294, -0.749787, 0, 1.0};
Point(148) = {-0.054693, -0.749915, 0, 1.0};
Point(149) = {-0.060097, -0.750000, 0, 1.0};
Point(150) = {-0.064736, -0.749978, 0, 1.0};
Point(151) = {-0.068605, -0.749929, 0, 1.0};
Point(152) = {-0.071702, -0.749877, 0, 1.0};
Point(153) = {-0.074030, -0.749771, 0, 1.0};
Point(154) = {-0.074640, -0.749731, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:59};
Spline(3) = {59:77};
Spline(4) = {77,1};

// Lines: second blade (splines 5-8)
Spline(5) = {78:97};
Spline(6) = {97:136};
Spline(7) = {136:154};
Spline(8) = {154,78};

// Outer domain (points 20001-4 and lines)
Point(155) = {-13.50000000, -15.00000000, 0, 1.0};
Point(156) = {-13.50000000, 15.00000000, 0, 1.0};
Point(157) = {13.50000000, 15.00000000, 0, 1.0};
Point(158) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {155, 156};
Line(12) = {156, 157};
Line(13) = {157, 158};
Line(14) = {155, 158};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
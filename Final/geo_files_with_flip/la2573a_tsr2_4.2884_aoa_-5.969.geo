SetFactory("OpenCASCADE");

Point(1) = {0.074637, 0.748180, 0, 1.0};
Point(2) = {0.072422, 0.747802, 0, 1.0};
Point(3) = {0.069678, 0.747306, 0, 1.0};
Point(4) = {0.066714, 0.746741, 0, 1.0};
Point(5) = {0.063540, 0.746106, 0, 1.0};
Point(6) = {0.060169, 0.745399, 0, 1.0};
Point(7) = {0.056612, 0.744618, 0, 1.0};
Point(8) = {0.052882, 0.743764, 0, 1.0};
Point(9) = {0.048992, 0.742838, 0, 1.0};
Point(10) = {0.044957, 0.741839, 0, 1.0};
Point(11) = {0.040791, 0.740771, 0, 1.0};
Point(12) = {0.036509, 0.739634, 0, 1.0};
Point(13) = {0.032125, 0.738434, 0, 1.0};
Point(14) = {0.027655, 0.737173, 0, 1.0};
Point(15) = {0.023116, 0.735857, 0, 1.0};
Point(16) = {0.018522, 0.734494, 0, 1.0};
Point(17) = {0.013889, 0.733091, 0, 1.0};
Point(18) = {0.009234, 0.731656, 0, 1.0};
Point(19) = {0.004572, 0.730199, 0, 1.0};
Point(20) = {-0.000081, 0.728732, 0, 1.0};
Point(21) = {-0.004709, 0.727269, 0, 1.0};
Point(22) = {-0.009299, 0.725842, 0, 1.0};
Point(23) = {-0.013842, 0.724521, 0, 1.0};
Point(24) = {-0.018329, 0.723379, 0, 1.0};
Point(25) = {-0.022750, 0.722473, 0, 1.0};
Point(26) = {-0.027088, 0.721804, 0, 1.0};
Point(27) = {-0.031326, 0.721351, 0, 1.0};
Point(28) = {-0.035447, 0.721099, 0, 1.0};
Point(29) = {-0.039436, 0.721032, 0, 1.0};
Point(30) = {-0.043276, 0.721130, 0, 1.0};
Point(31) = {-0.046952, 0.721377, 0, 1.0};
Point(32) = {-0.050449, 0.721757, 0, 1.0};
Point(33) = {-0.053753, 0.722255, 0, 1.0};
Point(34) = {-0.056852, 0.722856, 0, 1.0};
Point(35) = {-0.059733, 0.723547, 0, 1.0};
Point(36) = {-0.062386, 0.724309, 0, 1.0};
Point(37) = {-0.064797, 0.725125, 0, 1.0};
Point(38) = {-0.066960, 0.725983, 0, 1.0};
Point(39) = {-0.068864, 0.726871, 0, 1.0};
Point(40) = {-0.070502, 0.727780, 0, 1.0};
Point(41) = {-0.071869, 0.728705, 0, 1.0};
Point(42) = {-0.072964, 0.729680, 0, 1.0};
Point(43) = {-0.073785, 0.730729, 0, 1.0};
Point(44) = {-0.074327, 0.731819, 0, 1.0};
Point(45) = {-0.074593, 0.733000, 0, 1.0};
Point(46) = {-0.074577, 0.734209, 0, 1.0};
Point(47) = {-0.074267, 0.735335, 0, 1.0};
Point(48) = {-0.073663, 0.736366, 0, 1.0};
Point(49) = {-0.072759, 0.737210, 0, 1.0};
Point(50) = {-0.071553, 0.737830, 0, 1.0};
Point(51) = {-0.070058, 0.738297, 0, 1.0};
Point(52) = {-0.068290, 0.738708, 0, 1.0};
Point(53) = {-0.066258, 0.739095, 0, 1.0};
Point(54) = {-0.063971, 0.739474, 0, 1.0};
Point(55) = {-0.061438, 0.739852, 0, 1.0};
Point(56) = {-0.058669, 0.740234, 0, 1.0};
Point(57) = {-0.055674, 0.740623, 0, 1.0};
Point(58) = {-0.052463, 0.741022, 0, 1.0};
Point(59) = {-0.049049, 0.741432, 0, 1.0};
Point(60) = {-0.045443, 0.741852, 0, 1.0};
Point(61) = {-0.041658, 0.742283, 0, 1.0};
Point(62) = {-0.037708, 0.742723, 0, 1.0};
Point(63) = {-0.033607, 0.743171, 0, 1.0};
Point(64) = {-0.029369, 0.743627, 0, 1.0};
Point(65) = {-0.025009, 0.744087, 0, 1.0};
Point(66) = {-0.020543, 0.744550, 0, 1.0};
Point(67) = {-0.015985, 0.745013, 0, 1.0};
Point(68) = {-0.011352, 0.745474, 0, 1.0};
Point(69) = {-0.006660, 0.745930, 0, 1.0};
Point(70) = {-0.001926, 0.746378, 0, 1.0};
Point(71) = {0.002835, 0.746815, 0, 1.0};
Point(72) = {0.007605, 0.747238, 0, 1.0};
Point(73) = {0.012367, 0.747645, 0, 1.0};
Point(74) = {0.017106, 0.748032, 0, 1.0};
Point(75) = {0.021805, 0.748395, 0, 1.0};
Point(76) = {0.026446, 0.748733, 0, 1.0};
Point(77) = {0.031015, 0.749042, 0, 1.0};
Point(78) = {0.035496, 0.749318, 0, 1.0};
Point(79) = {0.039872, 0.749558, 0, 1.0};
Point(80) = {0.044129, 0.749757, 0, 1.0};
Point(81) = {0.048253, 0.749909, 0, 1.0};
Point(82) = {0.052230, 0.750000, 0, 1.0};
Point(83) = {0.056049, 0.749999, 0, 1.0};
Point(84) = {0.059693, 0.749954, 0, 1.0};
Point(85) = {0.063145, 0.749888, 0, 1.0};
Point(86) = {0.066392, 0.749817, 0, 1.0};
Point(87) = {0.069423, 0.749750, 0, 1.0};
Point(88) = {0.072224, 0.749693, 0, 1.0};
Point(89) = {0.074483, 0.749655, 0, 1.0};
Point(90) = {-0.074637, -0.748180, 0, 1.0};
Point(91) = {-0.072422, -0.747802, 0, 1.0};
Point(92) = {-0.069678, -0.747306, 0, 1.0};
Point(93) = {-0.066714, -0.746741, 0, 1.0};
Point(94) = {-0.063540, -0.746106, 0, 1.0};
Point(95) = {-0.060169, -0.745399, 0, 1.0};
Point(96) = {-0.056612, -0.744618, 0, 1.0};
Point(97) = {-0.052882, -0.743764, 0, 1.0};
Point(98) = {-0.048992, -0.742838, 0, 1.0};
Point(99) = {-0.044957, -0.741839, 0, 1.0};
Point(100) = {-0.040791, -0.740771, 0, 1.0};
Point(101) = {-0.036509, -0.739634, 0, 1.0};
Point(102) = {-0.032125, -0.738434, 0, 1.0};
Point(103) = {-0.027655, -0.737173, 0, 1.0};
Point(104) = {-0.023116, -0.735857, 0, 1.0};
Point(105) = {-0.018522, -0.734494, 0, 1.0};
Point(106) = {-0.013889, -0.733091, 0, 1.0};
Point(107) = {-0.009234, -0.731656, 0, 1.0};
Point(108) = {-0.004572, -0.730199, 0, 1.0};
Point(109) = {0.000081, -0.728732, 0, 1.0};
Point(110) = {0.004709, -0.727269, 0, 1.0};
Point(111) = {0.009299, -0.725842, 0, 1.0};
Point(112) = {0.013842, -0.724521, 0, 1.0};
Point(113) = {0.018329, -0.723379, 0, 1.0};
Point(114) = {0.022750, -0.722473, 0, 1.0};
Point(115) = {0.027088, -0.721804, 0, 1.0};
Point(116) = {0.031326, -0.721351, 0, 1.0};
Point(117) = {0.035447, -0.721099, 0, 1.0};
Point(118) = {0.039436, -0.721032, 0, 1.0};
Point(119) = {0.043276, -0.721130, 0, 1.0};
Point(120) = {0.046952, -0.721377, 0, 1.0};
Point(121) = {0.050449, -0.721757, 0, 1.0};
Point(122) = {0.053753, -0.722255, 0, 1.0};
Point(123) = {0.056852, -0.722856, 0, 1.0};
Point(124) = {0.059733, -0.723547, 0, 1.0};
Point(125) = {0.062386, -0.724309, 0, 1.0};
Point(126) = {0.064797, -0.725125, 0, 1.0};
Point(127) = {0.066960, -0.725983, 0, 1.0};
Point(128) = {0.068864, -0.726871, 0, 1.0};
Point(129) = {0.070502, -0.727780, 0, 1.0};
Point(130) = {0.071869, -0.728705, 0, 1.0};
Point(131) = {0.072964, -0.729680, 0, 1.0};
Point(132) = {0.073785, -0.730729, 0, 1.0};
Point(133) = {0.074327, -0.731819, 0, 1.0};
Point(134) = {0.074593, -0.733000, 0, 1.0};
Point(135) = {0.074577, -0.734209, 0, 1.0};
Point(136) = {0.074267, -0.735335, 0, 1.0};
Point(137) = {0.073663, -0.736366, 0, 1.0};
Point(138) = {0.072759, -0.737210, 0, 1.0};
Point(139) = {0.071553, -0.737830, 0, 1.0};
Point(140) = {0.070058, -0.738297, 0, 1.0};
Point(141) = {0.068290, -0.738708, 0, 1.0};
Point(142) = {0.066258, -0.739095, 0, 1.0};
Point(143) = {0.063971, -0.739474, 0, 1.0};
Point(144) = {0.061438, -0.739852, 0, 1.0};
Point(145) = {0.058669, -0.740234, 0, 1.0};
Point(146) = {0.055674, -0.740623, 0, 1.0};
Point(147) = {0.052463, -0.741022, 0, 1.0};
Point(148) = {0.049049, -0.741432, 0, 1.0};
Point(149) = {0.045443, -0.741852, 0, 1.0};
Point(150) = {0.041658, -0.742283, 0, 1.0};
Point(151) = {0.037708, -0.742723, 0, 1.0};
Point(152) = {0.033607, -0.743171, 0, 1.0};
Point(153) = {0.029369, -0.743627, 0, 1.0};
Point(154) = {0.025009, -0.744087, 0, 1.0};
Point(155) = {0.020543, -0.744550, 0, 1.0};
Point(156) = {0.015985, -0.745013, 0, 1.0};
Point(157) = {0.011352, -0.745474, 0, 1.0};
Point(158) = {0.006660, -0.745930, 0, 1.0};
Point(159) = {0.001926, -0.746378, 0, 1.0};
Point(160) = {-0.002835, -0.746815, 0, 1.0};
Point(161) = {-0.007605, -0.747238, 0, 1.0};
Point(162) = {-0.012367, -0.747645, 0, 1.0};
Point(163) = {-0.017106, -0.748032, 0, 1.0};
Point(164) = {-0.021805, -0.748395, 0, 1.0};
Point(165) = {-0.026446, -0.748733, 0, 1.0};
Point(166) = {-0.031015, -0.749042, 0, 1.0};
Point(167) = {-0.035496, -0.749318, 0, 1.0};
Point(168) = {-0.039872, -0.749558, 0, 1.0};
Point(169) = {-0.044129, -0.749757, 0, 1.0};
Point(170) = {-0.048253, -0.749909, 0, 1.0};
Point(171) = {-0.052230, -0.750000, 0, 1.0};
Point(172) = {-0.056049, -0.749999, 0, 1.0};
Point(173) = {-0.059693, -0.749954, 0, 1.0};
Point(174) = {-0.063145, -0.749888, 0, 1.0};
Point(175) = {-0.066392, -0.749817, 0, 1.0};
Point(176) = {-0.069423, -0.749750, 0, 1.0};
Point(177) = {-0.072224, -0.749693, 0, 1.0};
Point(178) = {-0.074483, -0.749655, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:62};
Spline(3) = {62:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:116};
Spline(6) = {116:151};
Spline(7) = {151:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074914, 0.744290, 0, 1.0};
Point(2) = {0.071900, 0.743756, 0, 1.0};
Point(3) = {0.068799, 0.743225, 0, 1.0};
Point(4) = {0.065697, 0.742719, 0, 1.0};
Point(5) = {0.062593, 0.742242, 0, 1.0};
Point(6) = {0.059487, 0.741793, 0, 1.0};
Point(7) = {0.056380, 0.741372, 0, 1.0};
Point(8) = {0.053271, 0.740975, 0, 1.0};
Point(9) = {0.050161, 0.740602, 0, 1.0};
Point(10) = {0.047049, 0.740249, 0, 1.0};
Point(11) = {0.043937, 0.739910, 0, 1.0};
Point(12) = {0.040825, 0.739579, 0, 1.0};
Point(13) = {0.037712, 0.739247, 0, 1.0};
Point(14) = {0.034600, 0.738909, 0, 1.0};
Point(15) = {0.031488, 0.738558, 0, 1.0};
Point(16) = {0.028377, 0.738197, 0, 1.0};
Point(17) = {0.025267, 0.737832, 0, 1.0};
Point(18) = {0.022156, 0.737467, 0, 1.0};
Point(19) = {0.019045, 0.737107, 0, 1.0};
Point(20) = {0.015934, 0.736756, 0, 1.0};
Point(21) = {0.012822, 0.736408, 0, 1.0};
Point(22) = {0.009711, 0.736056, 0, 1.0};
Point(23) = {0.006600, 0.735691, 0, 1.0};
Point(24) = {0.003490, 0.735308, 0, 1.0};
Point(25) = {0.000382, 0.734901, 0, 1.0};
Point(26) = {-0.002725, 0.734486, 0, 1.0};
Point(27) = {-0.005834, 0.734083, 0, 1.0};
Point(28) = {-0.008944, 0.733711, 0, 1.0};
Point(29) = {-0.012057, 0.733391, 0, 1.0};
Point(30) = {-0.015174, 0.733134, 0, 1.0};
Point(31) = {-0.018294, 0.732913, 0, 1.0};
Point(32) = {-0.021413, 0.732692, 0, 1.0};
Point(33) = {-0.024530, 0.732432, 0, 1.0};
Point(34) = {-0.027642, 0.732095, 0, 1.0};
Point(35) = {-0.030748, 0.731644, 0, 1.0};
Point(36) = {-0.033845, 0.731059, 0, 1.0};
Point(37) = {-0.036948, 0.730567, 0, 1.0};
Point(38) = {-0.040065, 0.730309, 0, 1.0};
Point(39) = {-0.043188, 0.730151, 0, 1.0};
Point(40) = {-0.046310, 0.729971, 0, 1.0};
Point(41) = {-0.049431, 0.729788, 0, 1.0};
Point(42) = {-0.052556, 0.729662, 0, 1.0};
Point(43) = {-0.055686, 0.729624, 0, 1.0};
Point(44) = {-0.058821, 0.729671, 0, 1.0};
Point(45) = {-0.061963, 0.729832, 0, 1.0};
Point(46) = {-0.065122, 0.730285, 0, 1.0};
Point(47) = {-0.066707, 0.730595, 0, 1.0};
Point(48) = {-0.068292, 0.730919, 0, 1.0};
Point(49) = {-0.069884, 0.731361, 0, 1.0};
Point(50) = {-0.071495, 0.732119, 0, 1.0};
Point(51) = {-0.072802, 0.733024, 0, 1.0};
Point(52) = {-0.073458, 0.733522, 0, 1.0};
Point(53) = {-0.074114, 0.734030, 0, 1.0};
Point(54) = {-0.074455, 0.734483, 0, 1.0};
Point(55) = {-0.074634, 0.734874, 0, 1.0};
Point(56) = {-0.074731, 0.735179, 0, 1.0};
Point(57) = {-0.074869, 0.736183, 0, 1.0};
Point(58) = {-0.074834, 0.736920, 0, 1.0};
Point(59) = {-0.074776, 0.737255, 0, 1.0};
Point(60) = {-0.074645, 0.737692, 0, 1.0};
Point(61) = {-0.074363, 0.738223, 0, 1.0};
Point(62) = {-0.073771, 0.738797, 0, 1.0};
Point(63) = {-0.073171, 0.739257, 0, 1.0};
Point(64) = {-0.071970, 0.740131, 0, 1.0};
Point(65) = {-0.070455, 0.740991, 0, 1.0};
Point(66) = {-0.068924, 0.741578, 0, 1.0};
Point(67) = {-0.067385, 0.742042, 0, 1.0};
Point(68) = {-0.065846, 0.742489, 0, 1.0};
Point(69) = {-0.062768, 0.743406, 0, 1.0};
Point(70) = {-0.059689, 0.744316, 0, 1.0};
Point(71) = {-0.056606, 0.745137, 0, 1.0};
Point(72) = {-0.053516, 0.745862, 0, 1.0};
Point(73) = {-0.050422, 0.746508, 0, 1.0};
Point(74) = {-0.047324, 0.747082, 0, 1.0};
Point(75) = {-0.044221, 0.747577, 0, 1.0};
Point(76) = {-0.041114, 0.747996, 0, 1.0};
Point(77) = {-0.038006, 0.748404, 0, 1.0};
Point(78) = {-0.034902, 0.748881, 0, 1.0};
Point(79) = {-0.031799, 0.749373, 0, 1.0};
Point(80) = {-0.028687, 0.749719, 0, 1.0};
Point(81) = {-0.025566, 0.749919, 0, 1.0};
Point(82) = {-0.022439, 0.750000, 0, 1.0};
Point(83) = {-0.019306, 0.749990, 0, 1.0};
Point(84) = {-0.016169, 0.749915, 0, 1.0};
Point(85) = {-0.013030, 0.749802, 0, 1.0};
Point(86) = {-0.009890, 0.749673, 0, 1.0};
Point(87) = {-0.006750, 0.749538, 0, 1.0};
Point(88) = {-0.003610, 0.749399, 0, 1.0};
Point(89) = {-0.000469, 0.749259, 0, 1.0};
Point(90) = {0.002671, 0.749122, 0, 1.0};
Point(91) = {0.005812, 0.748989, 0, 1.0};
Point(92) = {0.008952, 0.748859, 0, 1.0};
Point(93) = {0.012092, 0.748729, 0, 1.0};
Point(94) = {0.015232, 0.748596, 0, 1.0};
Point(95) = {0.018372, 0.748457, 0, 1.0};
Point(96) = {0.021513, 0.748309, 0, 1.0};
Point(97) = {0.024655, 0.748154, 0, 1.0};
Point(98) = {0.027797, 0.747994, 0, 1.0};
Point(99) = {0.030939, 0.747831, 0, 1.0};
Point(100) = {0.034081, 0.747667, 0, 1.0};
Point(101) = {0.037222, 0.747504, 0, 1.0};
Point(102) = {0.040364, 0.747343, 0, 1.0};
Point(103) = {0.043506, 0.747186, 0, 1.0};
Point(104) = {0.046647, 0.747035, 0, 1.0};
Point(105) = {0.049788, 0.746891, 0, 1.0};
Point(106) = {0.052928, 0.746755, 0, 1.0};
Point(107) = {0.056068, 0.746624, 0, 1.0};
Point(108) = {0.059208, 0.746494, 0, 1.0};
Point(109) = {0.062348, 0.746362, 0, 1.0};
Point(110) = {0.065489, 0.746224, 0, 1.0};
Point(111) = {0.068630, 0.746078, 0, 1.0};
Point(112) = {0.071771, 0.745924, 0, 1.0};
Point(113) = {0.074826, 0.745769, 0, 1.0};
Point(114) = {-0.074914, -0.744290, 0, 1.0};
Point(115) = {-0.071900, -0.743756, 0, 1.0};
Point(116) = {-0.068799, -0.743225, 0, 1.0};
Point(117) = {-0.065697, -0.742719, 0, 1.0};
Point(118) = {-0.062593, -0.742242, 0, 1.0};
Point(119) = {-0.059487, -0.741793, 0, 1.0};
Point(120) = {-0.056380, -0.741372, 0, 1.0};
Point(121) = {-0.053271, -0.740975, 0, 1.0};
Point(122) = {-0.050161, -0.740602, 0, 1.0};
Point(123) = {-0.047049, -0.740249, 0, 1.0};
Point(124) = {-0.043937, -0.739910, 0, 1.0};
Point(125) = {-0.040825, -0.739579, 0, 1.0};
Point(126) = {-0.037712, -0.739247, 0, 1.0};
Point(127) = {-0.034600, -0.738909, 0, 1.0};
Point(128) = {-0.031488, -0.738558, 0, 1.0};
Point(129) = {-0.028377, -0.738197, 0, 1.0};
Point(130) = {-0.025267, -0.737832, 0, 1.0};
Point(131) = {-0.022156, -0.737467, 0, 1.0};
Point(132) = {-0.019045, -0.737107, 0, 1.0};
Point(133) = {-0.015934, -0.736756, 0, 1.0};
Point(134) = {-0.012822, -0.736408, 0, 1.0};
Point(135) = {-0.009711, -0.736056, 0, 1.0};
Point(136) = {-0.006600, -0.735691, 0, 1.0};
Point(137) = {-0.003490, -0.735308, 0, 1.0};
Point(138) = {-0.000382, -0.734901, 0, 1.0};
Point(139) = {0.002725, -0.734486, 0, 1.0};
Point(140) = {0.005834, -0.734083, 0, 1.0};
Point(141) = {0.008944, -0.733711, 0, 1.0};
Point(142) = {0.012057, -0.733391, 0, 1.0};
Point(143) = {0.015174, -0.733134, 0, 1.0};
Point(144) = {0.018294, -0.732913, 0, 1.0};
Point(145) = {0.021413, -0.732692, 0, 1.0};
Point(146) = {0.024530, -0.732432, 0, 1.0};
Point(147) = {0.027642, -0.732095, 0, 1.0};
Point(148) = {0.030748, -0.731644, 0, 1.0};
Point(149) = {0.033845, -0.731059, 0, 1.0};
Point(150) = {0.036948, -0.730567, 0, 1.0};
Point(151) = {0.040065, -0.730309, 0, 1.0};
Point(152) = {0.043188, -0.730151, 0, 1.0};
Point(153) = {0.046310, -0.729971, 0, 1.0};
Point(154) = {0.049431, -0.729788, 0, 1.0};
Point(155) = {0.052556, -0.729662, 0, 1.0};
Point(156) = {0.055686, -0.729624, 0, 1.0};
Point(157) = {0.058821, -0.729671, 0, 1.0};
Point(158) = {0.061963, -0.729832, 0, 1.0};
Point(159) = {0.065122, -0.730285, 0, 1.0};
Point(160) = {0.066707, -0.730595, 0, 1.0};
Point(161) = {0.068292, -0.730919, 0, 1.0};
Point(162) = {0.069884, -0.731361, 0, 1.0};
Point(163) = {0.071495, -0.732119, 0, 1.0};
Point(164) = {0.072802, -0.733024, 0, 1.0};
Point(165) = {0.073458, -0.733522, 0, 1.0};
Point(166) = {0.074114, -0.734030, 0, 1.0};
Point(167) = {0.074455, -0.734483, 0, 1.0};
Point(168) = {0.074634, -0.734874, 0, 1.0};
Point(169) = {0.074731, -0.735179, 0, 1.0};
Point(170) = {0.074869, -0.736183, 0, 1.0};
Point(171) = {0.074834, -0.736920, 0, 1.0};
Point(172) = {0.074776, -0.737255, 0, 1.0};
Point(173) = {0.074645, -0.737692, 0, 1.0};
Point(174) = {0.074363, -0.738223, 0, 1.0};
Point(175) = {0.073771, -0.738797, 0, 1.0};
Point(176) = {0.073171, -0.739257, 0, 1.0};
Point(177) = {0.071970, -0.740131, 0, 1.0};
Point(178) = {0.070455, -0.740991, 0, 1.0};
Point(179) = {0.068924, -0.741578, 0, 1.0};
Point(180) = {0.067385, -0.742042, 0, 1.0};
Point(181) = {0.065846, -0.742489, 0, 1.0};
Point(182) = {0.062768, -0.743406, 0, 1.0};
Point(183) = {0.059689, -0.744316, 0, 1.0};
Point(184) = {0.056606, -0.745137, 0, 1.0};
Point(185) = {0.053516, -0.745862, 0, 1.0};
Point(186) = {0.050422, -0.746508, 0, 1.0};
Point(187) = {0.047324, -0.747082, 0, 1.0};
Point(188) = {0.044221, -0.747577, 0, 1.0};
Point(189) = {0.041114, -0.747996, 0, 1.0};
Point(190) = {0.038006, -0.748404, 0, 1.0};
Point(191) = {0.034902, -0.748881, 0, 1.0};
Point(192) = {0.031799, -0.749373, 0, 1.0};
Point(193) = {0.028687, -0.749719, 0, 1.0};
Point(194) = {0.025566, -0.749919, 0, 1.0};
Point(195) = {0.022439, -0.750000, 0, 1.0};
Point(196) = {0.019306, -0.749990, 0, 1.0};
Point(197) = {0.016169, -0.749915, 0, 1.0};
Point(198) = {0.013030, -0.749802, 0, 1.0};
Point(199) = {0.009890, -0.749673, 0, 1.0};
Point(200) = {0.006750, -0.749538, 0, 1.0};
Point(201) = {0.003610, -0.749399, 0, 1.0};
Point(202) = {0.000469, -0.749259, 0, 1.0};
Point(203) = {-0.002671, -0.749122, 0, 1.0};
Point(204) = {-0.005812, -0.748989, 0, 1.0};
Point(205) = {-0.008952, -0.748859, 0, 1.0};
Point(206) = {-0.012092, -0.748729, 0, 1.0};
Point(207) = {-0.015232, -0.748596, 0, 1.0};
Point(208) = {-0.018372, -0.748457, 0, 1.0};
Point(209) = {-0.021513, -0.748309, 0, 1.0};
Point(210) = {-0.024655, -0.748154, 0, 1.0};
Point(211) = {-0.027797, -0.747994, 0, 1.0};
Point(212) = {-0.030939, -0.747831, 0, 1.0};
Point(213) = {-0.034081, -0.747667, 0, 1.0};
Point(214) = {-0.037222, -0.747504, 0, 1.0};
Point(215) = {-0.040364, -0.747343, 0, 1.0};
Point(216) = {-0.043506, -0.747186, 0, 1.0};
Point(217) = {-0.046647, -0.747035, 0, 1.0};
Point(218) = {-0.049788, -0.746891, 0, 1.0};
Point(219) = {-0.052928, -0.746755, 0, 1.0};
Point(220) = {-0.056068, -0.746624, 0, 1.0};
Point(221) = {-0.059208, -0.746494, 0, 1.0};
Point(222) = {-0.062348, -0.746362, 0, 1.0};
Point(223) = {-0.065489, -0.746224, 0, 1.0};
Point(224) = {-0.068630, -0.746078, 0, 1.0};
Point(225) = {-0.071771, -0.745924, 0, 1.0};
Point(226) = {-0.074826, -0.745769, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:36};
Spline(2) = {36:78};
Spline(3) = {78:113};
Spline(4) = {113,1};

// Lines: second blade (splines 5-8)
Spline(5) = {114:149};
Spline(6) = {149:191};
Spline(7) = {191:226};
Spline(8) = {226,114};

// Outer domain (points 20001-4 and lines)
Point(227) = {-13.50000000, -15.00000000, 0, 1.0};
Point(228) = {-13.50000000, 15.00000000, 0, 1.0};
Point(229) = {13.50000000, 15.00000000, 0, 1.0};
Point(230) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {227, 228};
Line(12) = {228, 229};
Line(13) = {229, 230};
Line(14) = {227, 230};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.075018, 0.742513, 0, 1.0};
Point(2) = {0.073913, 0.742270, 0, 1.0};
Point(3) = {0.069430, 0.741265, 0, 1.0};
Point(4) = {0.064324, 0.740173, 0, 1.0};
Point(5) = {0.058679, 0.739035, 0, 1.0};
Point(6) = {0.052585, 0.737896, 0, 1.0};
Point(7) = {0.046127, 0.736834, 0, 1.0};
Point(8) = {0.039339, 0.735942, 0, 1.0};
Point(9) = {0.032205, 0.735252, 0, 1.0};
Point(10) = {0.024756, 0.734724, 0, 1.0};
Point(11) = {0.017077, 0.734346, 0, 1.0};
Point(12) = {0.009246, 0.734111, 0, 1.0};
Point(13) = {0.001346, 0.734021, 0, 1.0};
Point(14) = {-0.006541, 0.734067, 0, 1.0};
Point(15) = {-0.014332, 0.734251, 0, 1.0};
Point(16) = {-0.021949, 0.734565, 0, 1.0};
Point(17) = {-0.029311, 0.735004, 0, 1.0};
Point(18) = {-0.036343, 0.735556, 0, 1.0};
Point(19) = {-0.042972, 0.736213, 0, 1.0};
Point(20) = {-0.049131, 0.736962, 0, 1.0};
Point(21) = {-0.054754, 0.737791, 0, 1.0};
Point(22) = {-0.059785, 0.738679, 0, 1.0};
Point(23) = {-0.064172, 0.739613, 0, 1.0};
Point(24) = {-0.067874, 0.740567, 0, 1.0};
Point(25) = {-0.070842, 0.741518, 0, 1.0};
Point(26) = {-0.073050, 0.742435, 0, 1.0};
Point(27) = {-0.073857, 0.742866, 0, 1.0};
Point(28) = {-0.074547, 0.743360, 0, 1.0};
Point(29) = {-0.074843, 0.743652, 0, 1.0};
Point(30) = {-0.074971, 0.743843, 0, 1.0};
Point(31) = {-0.074998, 0.743953, 0, 1.0};
Point(32) = {-0.074968, 0.744062, 0, 1.0};
Point(33) = {-0.074835, 0.744248, 0, 1.0};
Point(34) = {-0.074532, 0.744532, 0, 1.0};
Point(35) = {-0.073832, 0.745005, 0, 1.0};
Point(36) = {-0.073014, 0.745413, 0, 1.0};
Point(37) = {-0.070805, 0.746258, 0, 1.0};
Point(38) = {-0.067857, 0.747105, 0, 1.0};
Point(39) = {-0.064208, 0.747914, 0, 1.0};
Point(40) = {-0.059909, 0.748650, 0, 1.0};
Point(41) = {-0.055007, 0.749267, 0, 1.0};
Point(42) = {-0.049540, 0.749710, 0, 1.0};
Point(43) = {-0.043509, 0.749949, 0, 1.0};
Point(44) = {-0.036944, 0.750000, 0, 1.0};
Point(45) = {-0.029891, 0.749869, 0, 1.0};
Point(46) = {-0.022410, 0.749572, 0, 1.0};
Point(47) = {-0.014560, 0.749126, 0, 1.0};
Point(48) = {-0.006410, 0.748557, 0, 1.0};
Point(49) = {0.001965, 0.747892, 0, 1.0};
Point(50) = {0.010482, 0.747173, 0, 1.0};
Point(51) = {0.019050, 0.746433, 0, 1.0};
Point(52) = {0.027568, 0.745718, 0, 1.0};
Point(53) = {0.035934, 0.745068, 0, 1.0};
Point(54) = {0.044030, 0.744519, 0, 1.0};
Point(55) = {0.051733, 0.744105, 0, 1.0};
Point(56) = {0.058919, 0.743849, 0, 1.0};
Point(57) = {0.065462, 0.743762, 0, 1.0};
Point(58) = {0.071242, 0.743844, 0, 1.0};
Point(59) = {0.075006, 0.744005, 0, 1.0};
Point(60) = {-0.075018, -0.742513, 0, 1.0};
Point(61) = {-0.073913, -0.742270, 0, 1.0};
Point(62) = {-0.069430, -0.741265, 0, 1.0};
Point(63) = {-0.064324, -0.740173, 0, 1.0};
Point(64) = {-0.058679, -0.739035, 0, 1.0};
Point(65) = {-0.052585, -0.737896, 0, 1.0};
Point(66) = {-0.046127, -0.736834, 0, 1.0};
Point(67) = {-0.039339, -0.735942, 0, 1.0};
Point(68) = {-0.032205, -0.735252, 0, 1.0};
Point(69) = {-0.024756, -0.734724, 0, 1.0};
Point(70) = {-0.017077, -0.734346, 0, 1.0};
Point(71) = {-0.009246, -0.734111, 0, 1.0};
Point(72) = {-0.001346, -0.734021, 0, 1.0};
Point(73) = {0.006541, -0.734067, 0, 1.0};
Point(74) = {0.014332, -0.734251, 0, 1.0};
Point(75) = {0.021949, -0.734565, 0, 1.0};
Point(76) = {0.029311, -0.735004, 0, 1.0};
Point(77) = {0.036343, -0.735556, 0, 1.0};
Point(78) = {0.042972, -0.736213, 0, 1.0};
Point(79) = {0.049131, -0.736962, 0, 1.0};
Point(80) = {0.054754, -0.737791, 0, 1.0};
Point(81) = {0.059785, -0.738679, 0, 1.0};
Point(82) = {0.064172, -0.739613, 0, 1.0};
Point(83) = {0.067874, -0.740567, 0, 1.0};
Point(84) = {0.070842, -0.741518, 0, 1.0};
Point(85) = {0.073050, -0.742435, 0, 1.0};
Point(86) = {0.073857, -0.742866, 0, 1.0};
Point(87) = {0.074547, -0.743360, 0, 1.0};
Point(88) = {0.074843, -0.743652, 0, 1.0};
Point(89) = {0.074971, -0.743843, 0, 1.0};
Point(90) = {0.074998, -0.743953, 0, 1.0};
Point(91) = {0.074968, -0.744062, 0, 1.0};
Point(92) = {0.074835, -0.744248, 0, 1.0};
Point(93) = {0.074532, -0.744532, 0, 1.0};
Point(94) = {0.073832, -0.745005, 0, 1.0};
Point(95) = {0.073014, -0.745413, 0, 1.0};
Point(96) = {0.070805, -0.746258, 0, 1.0};
Point(97) = {0.067857, -0.747105, 0, 1.0};
Point(98) = {0.064208, -0.747914, 0, 1.0};
Point(99) = {0.059909, -0.748650, 0, 1.0};
Point(100) = {0.055007, -0.749267, 0, 1.0};
Point(101) = {0.049540, -0.749710, 0, 1.0};
Point(102) = {0.043509, -0.749949, 0, 1.0};
Point(103) = {0.036944, -0.750000, 0, 1.0};
Point(104) = {0.029891, -0.749869, 0, 1.0};
Point(105) = {0.022410, -0.749572, 0, 1.0};
Point(106) = {0.014560, -0.749126, 0, 1.0};
Point(107) = {0.006410, -0.748557, 0, 1.0};
Point(108) = {-0.001965, -0.747892, 0, 1.0};
Point(109) = {-0.010482, -0.747173, 0, 1.0};
Point(110) = {-0.019050, -0.746433, 0, 1.0};
Point(111) = {-0.027568, -0.745718, 0, 1.0};
Point(112) = {-0.035934, -0.745068, 0, 1.0};
Point(113) = {-0.044030, -0.744519, 0, 1.0};
Point(114) = {-0.051733, -0.744105, 0, 1.0};
Point(115) = {-0.058919, -0.743849, 0, 1.0};
Point(116) = {-0.065462, -0.743762, 0, 1.0};
Point(117) = {-0.071242, -0.743844, 0, 1.0};
Point(118) = {-0.075006, -0.744005, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:45};
Spline(3) = {45:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:77};
Spline(6) = {77:104};
Spline(7) = {104:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074237, 0.727366, 0, 1.0};
Point(2) = {0.073803, 0.727317, 0, 1.0};
Point(3) = {0.070275, 0.726886, 0, 1.0};
Point(4) = {0.066083, 0.726350, 0, 1.0};
Point(5) = {0.061328, 0.725786, 0, 1.0};
Point(6) = {0.056098, 0.725287, 0, 1.0};
Point(7) = {0.050414, 0.724962, 0, 1.0};
Point(8) = {0.044247, 0.724843, 0, 1.0};
Point(9) = {0.037622, 0.724893, 0, 1.0};
Point(10) = {0.030617, 0.725093, 0, 1.0};
Point(11) = {0.023306, 0.725441, 0, 1.0};
Point(12) = {0.015766, 0.725926, 0, 1.0};
Point(13) = {0.008084, 0.726545, 0, 1.0};
Point(14) = {0.000343, 0.727293, 0, 1.0};
Point(15) = {-0.007375, 0.728166, 0, 1.0};
Point(16) = {-0.014985, 0.729155, 0, 1.0};
Point(17) = {-0.022408, 0.730255, 0, 1.0};
Point(18) = {-0.029566, 0.731457, 0, 1.0};
Point(19) = {-0.036385, 0.732751, 0, 1.0};
Point(20) = {-0.042795, 0.734126, 0, 1.0};
Point(21) = {-0.048734, 0.735570, 0, 1.0};
Point(22) = {-0.054146, 0.737071, 0, 1.0};
Point(23) = {-0.058981, 0.738611, 0, 1.0};
Point(24) = {-0.063202, 0.740170, 0, 1.0};
Point(25) = {-0.066773, 0.741727, 0, 1.0};
Point(26) = {-0.069672, 0.743253, 0, 1.0};
Point(27) = {-0.071882, 0.744715, 0, 1.0};
Point(28) = {-0.073398, 0.746067, 0, 1.0};
Point(29) = {-0.074162, 0.747141, 0, 1.0};
Point(30) = {-0.074285, 0.747457, 0, 1.0};
Point(31) = {-0.074347, 0.747741, 0, 1.0};
Point(32) = {-0.074352, 0.747909, 0, 1.0};
Point(33) = {-0.074320, 0.748051, 0, 1.0};
Point(34) = {-0.074237, 0.748177, 0, 1.0};
Point(35) = {-0.074102, 0.748300, 0, 1.0};
Point(36) = {-0.073827, 0.748484, 0, 1.0};
Point(37) = {-0.073470, 0.748666, 0, 1.0};
Point(38) = {-0.071543, 0.749253, 0, 1.0};
Point(39) = {-0.068945, 0.749662, 0, 1.0};
Point(40) = {-0.065583, 0.749915, 0, 1.0};
Point(41) = {-0.061483, 0.750000, 0, 1.0};
Point(42) = {-0.056680, 0.749920, 0, 1.0};
Point(43) = {-0.051223, 0.749687, 0, 1.0};
Point(44) = {-0.045178, 0.749309, 0, 1.0};
Point(45) = {-0.038614, 0.748793, 0, 1.0};
Point(46) = {-0.031608, 0.748144, 0, 1.0};
Point(47) = {-0.024236, 0.747363, 0, 1.0};
Point(48) = {-0.016570, 0.746462, 0, 1.0};
Point(49) = {-0.008695, 0.745456, 0, 1.0};
Point(50) = {-0.000701, 0.744365, 0, 1.0};
Point(51) = {0.007321, 0.743200, 0, 1.0};
Point(52) = {0.015279, 0.741978, 0, 1.0};
Point(53) = {0.023081, 0.740709, 0, 1.0};
Point(54) = {0.030635, 0.739406, 0, 1.0};
Point(55) = {0.037856, 0.738077, 0, 1.0};
Point(56) = {0.044661, 0.736734, 0, 1.0};
Point(57) = {0.050966, 0.735366, 0, 1.0};
Point(58) = {0.056744, 0.733948, 0, 1.0};
Point(59) = {0.062001, 0.732534, 0, 1.0};
Point(60) = {0.066670, 0.731204, 0, 1.0};
Point(61) = {0.070695, 0.729982, 0, 1.0};
Point(62) = {0.074052, 0.728939, 0, 1.0};
Point(63) = {0.074431, 0.728833, 0, 1.0};
Point(64) = {-0.074237, -0.727366, 0, 1.0};
Point(65) = {-0.073803, -0.727317, 0, 1.0};
Point(66) = {-0.070275, -0.726886, 0, 1.0};
Point(67) = {-0.066083, -0.726350, 0, 1.0};
Point(68) = {-0.061328, -0.725786, 0, 1.0};
Point(69) = {-0.056098, -0.725287, 0, 1.0};
Point(70) = {-0.050414, -0.724962, 0, 1.0};
Point(71) = {-0.044247, -0.724843, 0, 1.0};
Point(72) = {-0.037622, -0.724893, 0, 1.0};
Point(73) = {-0.030617, -0.725093, 0, 1.0};
Point(74) = {-0.023306, -0.725441, 0, 1.0};
Point(75) = {-0.015766, -0.725926, 0, 1.0};
Point(76) = {-0.008084, -0.726545, 0, 1.0};
Point(77) = {-0.000343, -0.727293, 0, 1.0};
Point(78) = {0.007375, -0.728166, 0, 1.0};
Point(79) = {0.014985, -0.729155, 0, 1.0};
Point(80) = {0.022408, -0.730255, 0, 1.0};
Point(81) = {0.029566, -0.731457, 0, 1.0};
Point(82) = {0.036385, -0.732751, 0, 1.0};
Point(83) = {0.042795, -0.734126, 0, 1.0};
Point(84) = {0.048734, -0.735570, 0, 1.0};
Point(85) = {0.054146, -0.737071, 0, 1.0};
Point(86) = {0.058981, -0.738611, 0, 1.0};
Point(87) = {0.063202, -0.740170, 0, 1.0};
Point(88) = {0.066773, -0.741727, 0, 1.0};
Point(89) = {0.069672, -0.743253, 0, 1.0};
Point(90) = {0.071882, -0.744715, 0, 1.0};
Point(91) = {0.073398, -0.746067, 0, 1.0};
Point(92) = {0.074162, -0.747141, 0, 1.0};
Point(93) = {0.074285, -0.747457, 0, 1.0};
Point(94) = {0.074347, -0.747741, 0, 1.0};
Point(95) = {0.074352, -0.747909, 0, 1.0};
Point(96) = {0.074320, -0.748051, 0, 1.0};
Point(97) = {0.074237, -0.748177, 0, 1.0};
Point(98) = {0.074102, -0.748300, 0, 1.0};
Point(99) = {0.073827, -0.748484, 0, 1.0};
Point(100) = {0.073470, -0.748666, 0, 1.0};
Point(101) = {0.071543, -0.749253, 0, 1.0};
Point(102) = {0.068945, -0.749662, 0, 1.0};
Point(103) = {0.065583, -0.749915, 0, 1.0};
Point(104) = {0.061483, -0.750000, 0, 1.0};
Point(105) = {0.056680, -0.749920, 0, 1.0};
Point(106) = {0.051223, -0.749687, 0, 1.0};
Point(107) = {0.045178, -0.749309, 0, 1.0};
Point(108) = {0.038614, -0.748793, 0, 1.0};
Point(109) = {0.031608, -0.748144, 0, 1.0};
Point(110) = {0.024236, -0.747363, 0, 1.0};
Point(111) = {0.016570, -0.746462, 0, 1.0};
Point(112) = {0.008695, -0.745456, 0, 1.0};
Point(113) = {0.000701, -0.744365, 0, 1.0};
Point(114) = {-0.007321, -0.743200, 0, 1.0};
Point(115) = {-0.015279, -0.741978, 0, 1.0};
Point(116) = {-0.023081, -0.740709, 0, 1.0};
Point(117) = {-0.030635, -0.739406, 0, 1.0};
Point(118) = {-0.037856, -0.738077, 0, 1.0};
Point(119) = {-0.044661, -0.736734, 0, 1.0};
Point(120) = {-0.050966, -0.735366, 0, 1.0};
Point(121) = {-0.056744, -0.733948, 0, 1.0};
Point(122) = {-0.062001, -0.732534, 0, 1.0};
Point(123) = {-0.066670, -0.731204, 0, 1.0};
Point(124) = {-0.070695, -0.729982, 0, 1.0};
Point(125) = {-0.074052, -0.728939, 0, 1.0};
Point(126) = {-0.074431, -0.728833, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:46};
Spline(3) = {46:63};
Spline(4) = {63,1};

// Lines: second blade (splines 5-8)
Spline(5) = {64:82};
Spline(6) = {82:109};
Spline(7) = {109:126};
Spline(8) = {126,64};

// Outer domain (points 20001-4 and lines)
Point(127) = {-13.50000000, -15.00000000, 0, 1.0};
Point(128) = {-13.50000000, 15.00000000, 0, 1.0};
Point(129) = {13.50000000, 15.00000000, 0, 1.0};
Point(130) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {127, 128};
Line(12) = {128, 129};
Line(13) = {129, 130};
Line(14) = {127, 130};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
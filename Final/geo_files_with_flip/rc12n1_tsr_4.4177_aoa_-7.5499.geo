SetFactory("OpenCASCADE");

Point(1) = {0.074428, 0.748486, 0, 1.0};
Point(2) = {0.071700, 0.747858, 0, 1.0};
Point(3) = {0.067919, 0.746951, 0, 1.0};
Point(4) = {0.064140, 0.746008, 0, 1.0};
Point(5) = {0.060372, 0.745033, 0, 1.0};
Point(6) = {0.056622, 0.744033, 0, 1.0};
Point(7) = {0.052887, 0.743007, 0, 1.0};
Point(8) = {0.049168, 0.741957, 0, 1.0};
Point(9) = {0.045468, 0.740879, 0, 1.0};
Point(10) = {0.041739, 0.739763, 0, 1.0};
Point(11) = {0.037992, 0.738618, 0, 1.0};
Point(12) = {0.034262, 0.737471, 0, 1.0};
Point(13) = {0.030514, 0.736322, 0, 1.0};
Point(14) = {0.026745, 0.735188, 0, 1.0};
Point(15) = {0.022976, 0.734086, 0, 1.0};
Point(16) = {0.019197, 0.733020, 0, 1.0};
Point(17) = {0.015416, 0.731998, 0, 1.0};
Point(18) = {0.011632, 0.731023, 0, 1.0};
Point(19) = {0.007837, 0.730094, 0, 1.0};
Point(20) = {0.004035, 0.729219, 0, 1.0};
Point(21) = {0.000223, 0.728401, 0, 1.0};
Point(22) = {-0.003604, 0.727643, 0, 1.0};
Point(23) = {-0.007446, 0.726949, 0, 1.0};
Point(24) = {-0.011294, 0.726319, 0, 1.0};
Point(25) = {-0.015151, 0.725751, 0, 1.0};
Point(26) = {-0.019021, 0.725241, 0, 1.0};
Point(27) = {-0.026787, 0.724395, 0, 1.0};
Point(28) = {-0.034592, 0.723792, 0, 1.0};
Point(29) = {-0.038511, 0.723595, 0, 1.0};
Point(30) = {-0.042462, 0.723474, 0, 1.0};
Point(31) = {-0.046434, 0.723441, 0, 1.0};
Point(32) = {-0.050402, 0.723509, 0, 1.0};
Point(33) = {-0.054374, 0.723684, 0, 1.0};
Point(34) = {-0.058351, 0.723985, 0, 1.0};
Point(35) = {-0.062336, 0.724443, 0, 1.0};
Point(36) = {-0.066449, 0.725156, 0, 1.0};
Point(37) = {-0.070449, 0.726274, 0, 1.0};
Point(38) = {-0.072788, 0.727404, 0, 1.0};
Point(39) = {-0.073807, 0.728266, 0, 1.0};
Point(40) = {-0.074350, 0.729371, 0, 1.0};
Point(41) = {-0.074358, 0.729462, 0, 1.0};
Point(42) = {-0.073747, 0.730843, 0, 1.0};
Point(43) = {-0.073408, 0.731139, 0, 1.0};
Point(44) = {-0.072076, 0.731927, 0, 1.0};
Point(45) = {-0.070453, 0.732610, 0, 1.0};
Point(46) = {-0.066660, 0.733858, 0, 1.0};
Point(47) = {-0.063005, 0.734895, 0, 1.0};
Point(48) = {-0.059249, 0.735890, 0, 1.0};
Point(49) = {-0.055496, 0.736829, 0, 1.0};
Point(50) = {-0.051750, 0.737722, 0, 1.0};
Point(51) = {-0.048007, 0.738573, 0, 1.0};
Point(52) = {-0.044276, 0.739383, 0, 1.0};
Point(53) = {-0.040531, 0.740161, 0, 1.0};
Point(54) = {-0.036760, 0.740913, 0, 1.0};
Point(55) = {-0.029199, 0.742323, 0, 1.0};
Point(56) = {-0.021614, 0.743602, 0, 1.0};
Point(57) = {-0.017813, 0.744188, 0, 1.0};
Point(58) = {-0.014000, 0.744737, 0, 1.0};
Point(59) = {-0.010183, 0.745245, 0, 1.0};
Point(60) = {-0.006361, 0.745707, 0, 1.0};
Point(61) = {-0.002526, 0.746124, 0, 1.0};
Point(62) = {0.001321, 0.746497, 0, 1.0};
Point(63) = {0.005176, 0.746828, 0, 1.0};
Point(64) = {0.009038, 0.747123, 0, 1.0};
Point(65) = {0.012906, 0.747388, 0, 1.0};
Point(66) = {0.016777, 0.747625, 0, 1.0};
Point(67) = {0.020646, 0.747842, 0, 1.0};
Point(68) = {0.024520, 0.748048, 0, 1.0};
Point(69) = {0.028394, 0.748254, 0, 1.0};
Point(70) = {0.032283, 0.748469, 0, 1.0};
Point(71) = {0.036190, 0.748699, 0, 1.0};
Point(72) = {0.040079, 0.748939, 0, 1.0};
Point(73) = {0.043988, 0.749176, 0, 1.0};
Point(74) = {0.047934, 0.749396, 0, 1.0};
Point(75) = {0.051869, 0.749574, 0, 1.0};
Point(76) = {0.055799, 0.749708, 0, 1.0};
Point(77) = {0.059721, 0.749798, 0, 1.0};
Point(78) = {0.063631, 0.749863, 0, 1.0};
Point(79) = {0.067537, 0.749921, 0, 1.0};
Point(80) = {0.071442, 0.749975, 0, 1.0};
Point(81) = {0.074228, 0.750000, 0, 1.0};
Point(82) = {-0.074428, -0.748486, 0, 1.0};
Point(83) = {-0.071700, -0.747858, 0, 1.0};
Point(84) = {-0.067919, -0.746951, 0, 1.0};
Point(85) = {-0.064140, -0.746008, 0, 1.0};
Point(86) = {-0.060372, -0.745033, 0, 1.0};
Point(87) = {-0.056622, -0.744033, 0, 1.0};
Point(88) = {-0.052887, -0.743007, 0, 1.0};
Point(89) = {-0.049168, -0.741957, 0, 1.0};
Point(90) = {-0.045468, -0.740879, 0, 1.0};
Point(91) = {-0.041739, -0.739763, 0, 1.0};
Point(92) = {-0.037992, -0.738618, 0, 1.0};
Point(93) = {-0.034262, -0.737471, 0, 1.0};
Point(94) = {-0.030514, -0.736322, 0, 1.0};
Point(95) = {-0.026745, -0.735188, 0, 1.0};
Point(96) = {-0.022976, -0.734086, 0, 1.0};
Point(97) = {-0.019197, -0.733020, 0, 1.0};
Point(98) = {-0.015416, -0.731998, 0, 1.0};
Point(99) = {-0.011632, -0.731023, 0, 1.0};
Point(100) = {-0.007837, -0.730094, 0, 1.0};
Point(101) = {-0.004035, -0.729219, 0, 1.0};
Point(102) = {-0.000223, -0.728401, 0, 1.0};
Point(103) = {0.003604, -0.727643, 0, 1.0};
Point(104) = {0.007446, -0.726949, 0, 1.0};
Point(105) = {0.011294, -0.726319, 0, 1.0};
Point(106) = {0.015151, -0.725751, 0, 1.0};
Point(107) = {0.019021, -0.725241, 0, 1.0};
Point(108) = {0.026787, -0.724395, 0, 1.0};
Point(109) = {0.034592, -0.723792, 0, 1.0};
Point(110) = {0.038511, -0.723595, 0, 1.0};
Point(111) = {0.042462, -0.723474, 0, 1.0};
Point(112) = {0.046434, -0.723441, 0, 1.0};
Point(113) = {0.050402, -0.723509, 0, 1.0};
Point(114) = {0.054374, -0.723684, 0, 1.0};
Point(115) = {0.058351, -0.723985, 0, 1.0};
Point(116) = {0.062336, -0.724443, 0, 1.0};
Point(117) = {0.066449, -0.725156, 0, 1.0};
Point(118) = {0.070449, -0.726274, 0, 1.0};
Point(119) = {0.072788, -0.727404, 0, 1.0};
Point(120) = {0.073807, -0.728266, 0, 1.0};
Point(121) = {0.074350, -0.729371, 0, 1.0};
Point(122) = {0.074358, -0.729462, 0, 1.0};
Point(123) = {0.073747, -0.730843, 0, 1.0};
Point(124) = {0.073408, -0.731139, 0, 1.0};
Point(125) = {0.072076, -0.731927, 0, 1.0};
Point(126) = {0.070453, -0.732610, 0, 1.0};
Point(127) = {0.066660, -0.733858, 0, 1.0};
Point(128) = {0.063005, -0.734895, 0, 1.0};
Point(129) = {0.059249, -0.735890, 0, 1.0};
Point(130) = {0.055496, -0.736829, 0, 1.0};
Point(131) = {0.051750, -0.737722, 0, 1.0};
Point(132) = {0.048007, -0.738573, 0, 1.0};
Point(133) = {0.044276, -0.739383, 0, 1.0};
Point(134) = {0.040531, -0.740161, 0, 1.0};
Point(135) = {0.036760, -0.740913, 0, 1.0};
Point(136) = {0.029199, -0.742323, 0, 1.0};
Point(137) = {0.021614, -0.743602, 0, 1.0};
Point(138) = {0.017813, -0.744188, 0, 1.0};
Point(139) = {0.014000, -0.744737, 0, 1.0};
Point(140) = {0.010183, -0.745245, 0, 1.0};
Point(141) = {0.006361, -0.745707, 0, 1.0};
Point(142) = {0.002526, -0.746124, 0, 1.0};
Point(143) = {-0.001321, -0.746497, 0, 1.0};
Point(144) = {-0.005176, -0.746828, 0, 1.0};
Point(145) = {-0.009038, -0.747123, 0, 1.0};
Point(146) = {-0.012906, -0.747388, 0, 1.0};
Point(147) = {-0.016777, -0.747625, 0, 1.0};
Point(148) = {-0.020646, -0.747842, 0, 1.0};
Point(149) = {-0.024520, -0.748048, 0, 1.0};
Point(150) = {-0.028394, -0.748254, 0, 1.0};
Point(151) = {-0.032283, -0.748469, 0, 1.0};
Point(152) = {-0.036190, -0.748699, 0, 1.0};
Point(153) = {-0.040079, -0.748939, 0, 1.0};
Point(154) = {-0.043988, -0.749176, 0, 1.0};
Point(155) = {-0.047934, -0.749396, 0, 1.0};
Point(156) = {-0.051869, -0.749574, 0, 1.0};
Point(157) = {-0.055799, -0.749708, 0, 1.0};
Point(158) = {-0.059721, -0.749798, 0, 1.0};
Point(159) = {-0.063631, -0.749863, 0, 1.0};
Point(160) = {-0.067537, -0.749921, 0, 1.0};
Point(161) = {-0.071442, -0.749975, 0, 1.0};
Point(162) = {-0.074228, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:55};
Spline(3) = {55:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:109};
Spline(6) = {109:136};
Spline(7) = {136:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074613, 0.733221, 0, 1.0};
Point(2) = {0.072780, 0.733225, 0, 1.0};
Point(3) = {0.069529, 0.733200, 0, 1.0};
Point(4) = {0.065999, 0.733154, 0, 1.0};
Point(5) = {0.062166, 0.733098, 0, 1.0};
Point(6) = {0.058004, 0.732922, 0, 1.0};
Point(7) = {0.053703, 0.732448, 0, 1.0};
Point(8) = {0.049518, 0.731854, 0, 1.0};
Point(9) = {0.045407, 0.731455, 0, 1.0};
Point(10) = {0.041189, 0.731241, 0, 1.0};
Point(11) = {0.036811, 0.731138, 0, 1.0};
Point(12) = {0.032299, 0.731111, 0, 1.0};
Point(13) = {0.027672, 0.731147, 0, 1.0};
Point(14) = {0.022952, 0.731236, 0, 1.0};
Point(15) = {0.018157, 0.731378, 0, 1.0};
Point(16) = {0.013310, 0.731567, 0, 1.0};
Point(17) = {0.008425, 0.731799, 0, 1.0};
Point(18) = {0.003526, 0.732072, 0, 1.0};
Point(19) = {-0.001370, 0.732386, 0, 1.0};
Point(20) = {-0.006241, 0.732737, 0, 1.0};
Point(21) = {-0.011068, 0.733123, 0, 1.0};
Point(22) = {-0.015831, 0.733546, 0, 1.0};
Point(23) = {-0.020514, 0.734001, 0, 1.0};
Point(24) = {-0.025097, 0.734489, 0, 1.0};
Point(25) = {-0.029561, 0.735007, 0, 1.0};
Point(26) = {-0.033893, 0.735553, 0, 1.0};
Point(27) = {-0.038074, 0.736126, 0, 1.0};
Point(28) = {-0.042086, 0.736724, 0, 1.0};
Point(29) = {-0.045917, 0.737342, 0, 1.0};
Point(30) = {-0.049549, 0.737981, 0, 1.0};
Point(31) = {-0.052969, 0.738639, 0, 1.0};
Point(32) = {-0.056164, 0.739315, 0, 1.0};
Point(33) = {-0.059126, 0.740011, 0, 1.0};
Point(34) = {-0.061846, 0.740723, 0, 1.0};
Point(35) = {-0.064316, 0.741447, 0, 1.0};
Point(36) = {-0.066532, 0.742181, 0, 1.0};
Point(37) = {-0.068487, 0.742918, 0, 1.0};
Point(38) = {-0.070176, 0.743654, 0, 1.0};
Point(39) = {-0.071598, 0.744386, 0, 1.0};
Point(40) = {-0.072751, 0.745102, 0, 1.0};
Point(41) = {-0.073634, 0.745804, 0, 1.0};
Point(42) = {-0.074261, 0.746473, 0, 1.0};
Point(43) = {-0.074631, 0.747065, 0, 1.0};
Point(44) = {-0.074704, 0.747559, 0, 1.0};
Point(45) = {-0.074417, 0.747962, 0, 1.0};
Point(46) = {-0.073783, 0.748341, 0, 1.0};
Point(47) = {-0.072841, 0.748706, 0, 1.0};
Point(48) = {-0.071589, 0.749026, 0, 1.0};
Point(49) = {-0.070047, 0.749313, 0, 1.0};
Point(50) = {-0.068218, 0.749553, 0, 1.0};
Point(51) = {-0.066109, 0.749745, 0, 1.0};
Point(52) = {-0.063727, 0.749885, 0, 1.0};
Point(53) = {-0.061079, 0.749970, 0, 1.0};
Point(54) = {-0.058173, 0.750000, 0, 1.0};
Point(55) = {-0.055018, 0.749975, 0, 1.0};
Point(56) = {-0.051624, 0.749894, 0, 1.0};
Point(57) = {-0.048002, 0.749759, 0, 1.0};
Point(58) = {-0.044165, 0.749572, 0, 1.0};
Point(59) = {-0.040126, 0.749333, 0, 1.0};
Point(60) = {-0.035900, 0.749048, 0, 1.0};
Point(61) = {-0.031502, 0.748716, 0, 1.0};
Point(62) = {-0.026947, 0.748344, 0, 1.0};
Point(63) = {-0.022255, 0.747936, 0, 1.0};
Point(64) = {-0.017444, 0.747494, 0, 1.0};
Point(65) = {-0.012535, 0.747023, 0, 1.0};
Point(66) = {-0.007545, 0.746524, 0, 1.0};
Point(67) = {-0.002495, 0.746002, 0, 1.0};
Point(68) = {0.002591, 0.745464, 0, 1.0};
Point(69) = {0.007693, 0.744912, 0, 1.0};
Point(70) = {0.012790, 0.744350, 0, 1.0};
Point(71) = {0.017857, 0.743778, 0, 1.0};
Point(72) = {0.022869, 0.743201, 0, 1.0};
Point(73) = {0.027806, 0.742621, 0, 1.0};
Point(74) = {0.032646, 0.742036, 0, 1.0};
Point(75) = {0.037367, 0.741446, 0, 1.0};
Point(76) = {0.041944, 0.740854, 0, 1.0};
Point(77) = {0.046362, 0.740251, 0, 1.0};
Point(78) = {0.050598, 0.739642, 0, 1.0};
Point(79) = {0.054636, 0.739012, 0, 1.0};
Point(80) = {0.058449, 0.738344, 0, 1.0};
Point(81) = {0.062064, 0.737603, 0, 1.0};
Point(82) = {0.065538, 0.736786, 0, 1.0};
Point(83) = {0.068894, 0.735991, 0, 1.0};
Point(84) = {0.072090, 0.735281, 0, 1.0};
Point(85) = {0.074748, 0.734742, 0, 1.0};
Point(86) = {-0.074613, -0.733221, 0, 1.0};
Point(87) = {-0.072780, -0.733225, 0, 1.0};
Point(88) = {-0.069529, -0.733200, 0, 1.0};
Point(89) = {-0.065999, -0.733154, 0, 1.0};
Point(90) = {-0.062166, -0.733098, 0, 1.0};
Point(91) = {-0.058004, -0.732922, 0, 1.0};
Point(92) = {-0.053703, -0.732448, 0, 1.0};
Point(93) = {-0.049518, -0.731854, 0, 1.0};
Point(94) = {-0.045407, -0.731455, 0, 1.0};
Point(95) = {-0.041189, -0.731241, 0, 1.0};
Point(96) = {-0.036811, -0.731138, 0, 1.0};
Point(97) = {-0.032299, -0.731111, 0, 1.0};
Point(98) = {-0.027672, -0.731147, 0, 1.0};
Point(99) = {-0.022952, -0.731236, 0, 1.0};
Point(100) = {-0.018157, -0.731378, 0, 1.0};
Point(101) = {-0.013310, -0.731567, 0, 1.0};
Point(102) = {-0.008425, -0.731799, 0, 1.0};
Point(103) = {-0.003526, -0.732072, 0, 1.0};
Point(104) = {0.001370, -0.732386, 0, 1.0};
Point(105) = {0.006241, -0.732737, 0, 1.0};
Point(106) = {0.011068, -0.733123, 0, 1.0};
Point(107) = {0.015831, -0.733546, 0, 1.0};
Point(108) = {0.020514, -0.734001, 0, 1.0};
Point(109) = {0.025097, -0.734489, 0, 1.0};
Point(110) = {0.029561, -0.735007, 0, 1.0};
Point(111) = {0.033893, -0.735553, 0, 1.0};
Point(112) = {0.038074, -0.736126, 0, 1.0};
Point(113) = {0.042086, -0.736724, 0, 1.0};
Point(114) = {0.045917, -0.737342, 0, 1.0};
Point(115) = {0.049549, -0.737981, 0, 1.0};
Point(116) = {0.052969, -0.738639, 0, 1.0};
Point(117) = {0.056164, -0.739315, 0, 1.0};
Point(118) = {0.059126, -0.740011, 0, 1.0};
Point(119) = {0.061846, -0.740723, 0, 1.0};
Point(120) = {0.064316, -0.741447, 0, 1.0};
Point(121) = {0.066532, -0.742181, 0, 1.0};
Point(122) = {0.068487, -0.742918, 0, 1.0};
Point(123) = {0.070176, -0.743654, 0, 1.0};
Point(124) = {0.071598, -0.744386, 0, 1.0};
Point(125) = {0.072751, -0.745102, 0, 1.0};
Point(126) = {0.073634, -0.745804, 0, 1.0};
Point(127) = {0.074261, -0.746473, 0, 1.0};
Point(128) = {0.074631, -0.747065, 0, 1.0};
Point(129) = {0.074704, -0.747559, 0, 1.0};
Point(130) = {0.074417, -0.747962, 0, 1.0};
Point(131) = {0.073783, -0.748341, 0, 1.0};
Point(132) = {0.072841, -0.748706, 0, 1.0};
Point(133) = {0.071589, -0.749026, 0, 1.0};
Point(134) = {0.070047, -0.749313, 0, 1.0};
Point(135) = {0.068218, -0.749553, 0, 1.0};
Point(136) = {0.066109, -0.749745, 0, 1.0};
Point(137) = {0.063727, -0.749885, 0, 1.0};
Point(138) = {0.061079, -0.749970, 0, 1.0};
Point(139) = {0.058173, -0.750000, 0, 1.0};
Point(140) = {0.055018, -0.749975, 0, 1.0};
Point(141) = {0.051624, -0.749894, 0, 1.0};
Point(142) = {0.048002, -0.749759, 0, 1.0};
Point(143) = {0.044165, -0.749572, 0, 1.0};
Point(144) = {0.040126, -0.749333, 0, 1.0};
Point(145) = {0.035900, -0.749048, 0, 1.0};
Point(146) = {0.031502, -0.748716, 0, 1.0};
Point(147) = {0.026947, -0.748344, 0, 1.0};
Point(148) = {0.022255, -0.747936, 0, 1.0};
Point(149) = {0.017444, -0.747494, 0, 1.0};
Point(150) = {0.012535, -0.747023, 0, 1.0};
Point(151) = {0.007545, -0.746524, 0, 1.0};
Point(152) = {0.002495, -0.746002, 0, 1.0};
Point(153) = {-0.002591, -0.745464, 0, 1.0};
Point(154) = {-0.007693, -0.744912, 0, 1.0};
Point(155) = {-0.012790, -0.744350, 0, 1.0};
Point(156) = {-0.017857, -0.743778, 0, 1.0};
Point(157) = {-0.022869, -0.743201, 0, 1.0};
Point(158) = {-0.027806, -0.742621, 0, 1.0};
Point(159) = {-0.032646, -0.742036, 0, 1.0};
Point(160) = {-0.037367, -0.741446, 0, 1.0};
Point(161) = {-0.041944, -0.740854, 0, 1.0};
Point(162) = {-0.046362, -0.740251, 0, 1.0};
Point(163) = {-0.050598, -0.739642, 0, 1.0};
Point(164) = {-0.054636, -0.739012, 0, 1.0};
Point(165) = {-0.058449, -0.738344, 0, 1.0};
Point(166) = {-0.062064, -0.737603, 0, 1.0};
Point(167) = {-0.065538, -0.736786, 0, 1.0};
Point(168) = {-0.068894, -0.735991, 0, 1.0};
Point(169) = {-0.072090, -0.735281, 0, 1.0};
Point(170) = {-0.074748, -0.734742, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:61};
Spline(3) = {61:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:146};
Spline(7) = {146:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074948, 0.736611, 0, 1.0};
Point(2) = {0.072608, 0.736404, 0, 1.0};
Point(3) = {0.067500, 0.735955, 0, 1.0};
Point(4) = {0.061284, 0.735422, 0, 1.0};
Point(5) = {0.057792, 0.735129, 0, 1.0};
Point(6) = {0.054063, 0.734821, 0, 1.0};
Point(7) = {0.050115, 0.734495, 0, 1.0};
Point(8) = {0.045964, 0.734162, 0, 1.0};
Point(9) = {0.041626, 0.733825, 0, 1.0};
Point(10) = {0.037121, 0.733486, 0, 1.0};
Point(11) = {0.032470, 0.733153, 0, 1.0};
Point(12) = {0.027691, 0.732833, 0, 1.0};
Point(13) = {0.022806, 0.732533, 0, 1.0};
Point(14) = {0.017835, 0.732242, 0, 1.0};
Point(15) = {0.012798, 0.731975, 0, 1.0};
Point(16) = {0.007720, 0.731745, 0, 1.0};
Point(17) = {0.002620, 0.731523, 0, 1.0};
Point(18) = {-0.002478, 0.731352, 0, 1.0};
Point(19) = {-0.007554, 0.731200, 0, 1.0};
Point(20) = {-0.012586, 0.731093, 0, 1.0};
Point(21) = {-0.017550, 0.731023, 0, 1.0};
Point(22) = {-0.022428, 0.731008, 0, 1.0};
Point(23) = {-0.027196, 0.731027, 0, 1.0};
Point(24) = {-0.031836, 0.731088, 0, 1.0};
Point(25) = {-0.036328, 0.731201, 0, 1.0};
Point(26) = {-0.040653, 0.731340, 0, 1.0};
Point(27) = {-0.044789, 0.731539, 0, 1.0};
Point(28) = {-0.048720, 0.731804, 0, 1.0};
Point(29) = {-0.052431, 0.732105, 0, 1.0};
Point(30) = {-0.055905, 0.732480, 0, 1.0};
Point(31) = {-0.059126, 0.732896, 0, 1.0};
Point(32) = {-0.062080, 0.733371, 0, 1.0};
Point(33) = {-0.064757, 0.733890, 0, 1.0};
Point(34) = {-0.067143, 0.734495, 0, 1.0};
Point(35) = {-0.069227, 0.735137, 0, 1.0};
Point(36) = {-0.070995, 0.736102, 0, 1.0};
Point(37) = {-0.072442, 0.737187, 0, 1.0};
Point(38) = {-0.073568, 0.738300, 0, 1.0};
Point(39) = {-0.074366, 0.739429, 0, 1.0};
Point(40) = {-0.074835, 0.740523, 0, 1.0};
Point(41) = {-0.074969, 0.741639, 0, 1.0};
Point(42) = {-0.074771, 0.742746, 0, 1.0};
Point(43) = {-0.074241, 0.743811, 0, 1.0};
Point(44) = {-0.073380, 0.744893, 0, 1.0};
Point(45) = {-0.072192, 0.745940, 0, 1.0};
Point(46) = {-0.070686, 0.746940, 0, 1.0};
Point(47) = {-0.068865, 0.747803, 0, 1.0};
Point(48) = {-0.066748, 0.748325, 0, 1.0};
Point(49) = {-0.064331, 0.748793, 0, 1.0};
Point(50) = {-0.061629, 0.749158, 0, 1.0};
Point(51) = {-0.058653, 0.749464, 0, 1.0};
Point(52) = {-0.055413, 0.749695, 0, 1.0};
Point(53) = {-0.051924, 0.749872, 0, 1.0};
Point(54) = {-0.048202, 0.749960, 0, 1.0};
Point(55) = {-0.044261, 0.750000, 0, 1.0};
Point(56) = {-0.040121, 0.749963, 0, 1.0};
Point(57) = {-0.035795, 0.749855, 0, 1.0};
Point(58) = {-0.031304, 0.749711, 0, 1.0};
Point(59) = {-0.026669, 0.749507, 0, 1.0};
Point(60) = {-0.021906, 0.749254, 0, 1.0};
Point(61) = {-0.017038, 0.748961, 0, 1.0};
Point(62) = {-0.012086, 0.748607, 0, 1.0};
Point(63) = {-0.007068, 0.748213, 0, 1.0};
Point(64) = {-0.002009, 0.747771, 0, 1.0};
Point(65) = {0.003071, 0.747310, 0, 1.0};
Point(66) = {0.008150, 0.746797, 0, 1.0};
Point(67) = {0.013207, 0.746278, 0, 1.0};
Point(68) = {0.018220, 0.745723, 0, 1.0};
Point(69) = {0.023166, 0.745149, 0, 1.0};
Point(70) = {0.028027, 0.744571, 0, 1.0};
Point(71) = {0.032779, 0.743979, 0, 1.0};
Point(72) = {0.037403, 0.743381, 0, 1.0};
Point(73) = {0.041882, 0.742786, 0, 1.0};
Point(74) = {0.046193, 0.742202, 0, 1.0};
Point(75) = {0.050319, 0.741632, 0, 1.0};
Point(76) = {0.054242, 0.741081, 0, 1.0};
Point(77) = {0.057947, 0.740561, 0, 1.0};
Point(78) = {0.061417, 0.740069, 0, 1.0};
Point(79) = {0.067592, 0.739182, 0, 1.0};
Point(80) = {0.072666, 0.738442, 0, 1.0};
Point(81) = {0.074991, 0.738101, 0, 1.0};
Point(82) = {-0.074948, -0.736611, 0, 1.0};
Point(83) = {-0.072608, -0.736404, 0, 1.0};
Point(84) = {-0.067500, -0.735955, 0, 1.0};
Point(85) = {-0.061284, -0.735422, 0, 1.0};
Point(86) = {-0.057792, -0.735129, 0, 1.0};
Point(87) = {-0.054063, -0.734821, 0, 1.0};
Point(88) = {-0.050115, -0.734495, 0, 1.0};
Point(89) = {-0.045964, -0.734162, 0, 1.0};
Point(90) = {-0.041626, -0.733825, 0, 1.0};
Point(91) = {-0.037121, -0.733486, 0, 1.0};
Point(92) = {-0.032470, -0.733153, 0, 1.0};
Point(93) = {-0.027691, -0.732833, 0, 1.0};
Point(94) = {-0.022806, -0.732533, 0, 1.0};
Point(95) = {-0.017835, -0.732242, 0, 1.0};
Point(96) = {-0.012798, -0.731975, 0, 1.0};
Point(97) = {-0.007720, -0.731745, 0, 1.0};
Point(98) = {-0.002620, -0.731523, 0, 1.0};
Point(99) = {0.002478, -0.731352, 0, 1.0};
Point(100) = {0.007554, -0.731200, 0, 1.0};
Point(101) = {0.012586, -0.731093, 0, 1.0};
Point(102) = {0.017550, -0.731023, 0, 1.0};
Point(103) = {0.022428, -0.731008, 0, 1.0};
Point(104) = {0.027196, -0.731027, 0, 1.0};
Point(105) = {0.031836, -0.731088, 0, 1.0};
Point(106) = {0.036328, -0.731201, 0, 1.0};
Point(107) = {0.040653, -0.731340, 0, 1.0};
Point(108) = {0.044789, -0.731539, 0, 1.0};
Point(109) = {0.048720, -0.731804, 0, 1.0};
Point(110) = {0.052431, -0.732105, 0, 1.0};
Point(111) = {0.055905, -0.732480, 0, 1.0};
Point(112) = {0.059126, -0.732896, 0, 1.0};
Point(113) = {0.062080, -0.733371, 0, 1.0};
Point(114) = {0.064757, -0.733890, 0, 1.0};
Point(115) = {0.067143, -0.734495, 0, 1.0};
Point(116) = {0.069227, -0.735137, 0, 1.0};
Point(117) = {0.070995, -0.736102, 0, 1.0};
Point(118) = {0.072442, -0.737187, 0, 1.0};
Point(119) = {0.073568, -0.738300, 0, 1.0};
Point(120) = {0.074366, -0.739429, 0, 1.0};
Point(121) = {0.074835, -0.740523, 0, 1.0};
Point(122) = {0.074969, -0.741639, 0, 1.0};
Point(123) = {0.074771, -0.742746, 0, 1.0};
Point(124) = {0.074241, -0.743811, 0, 1.0};
Point(125) = {0.073380, -0.744893, 0, 1.0};
Point(126) = {0.072192, -0.745940, 0, 1.0};
Point(127) = {0.070686, -0.746940, 0, 1.0};
Point(128) = {0.068865, -0.747803, 0, 1.0};
Point(129) = {0.066748, -0.748325, 0, 1.0};
Point(130) = {0.064331, -0.748793, 0, 1.0};
Point(131) = {0.061629, -0.749158, 0, 1.0};
Point(132) = {0.058653, -0.749464, 0, 1.0};
Point(133) = {0.055413, -0.749695, 0, 1.0};
Point(134) = {0.051924, -0.749872, 0, 1.0};
Point(135) = {0.048202, -0.749960, 0, 1.0};
Point(136) = {0.044261, -0.750000, 0, 1.0};
Point(137) = {0.040121, -0.749963, 0, 1.0};
Point(138) = {0.035795, -0.749855, 0, 1.0};
Point(139) = {0.031304, -0.749711, 0, 1.0};
Point(140) = {0.026669, -0.749507, 0, 1.0};
Point(141) = {0.021906, -0.749254, 0, 1.0};
Point(142) = {0.017038, -0.748961, 0, 1.0};
Point(143) = {0.012086, -0.748607, 0, 1.0};
Point(144) = {0.007068, -0.748213, 0, 1.0};
Point(145) = {0.002009, -0.747771, 0, 1.0};
Point(146) = {-0.003071, -0.747310, 0, 1.0};
Point(147) = {-0.008150, -0.746797, 0, 1.0};
Point(148) = {-0.013207, -0.746278, 0, 1.0};
Point(149) = {-0.018220, -0.745723, 0, 1.0};
Point(150) = {-0.023166, -0.745149, 0, 1.0};
Point(151) = {-0.028027, -0.744571, 0, 1.0};
Point(152) = {-0.032779, -0.743979, 0, 1.0};
Point(153) = {-0.037403, -0.743381, 0, 1.0};
Point(154) = {-0.041882, -0.742786, 0, 1.0};
Point(155) = {-0.046193, -0.742202, 0, 1.0};
Point(156) = {-0.050319, -0.741632, 0, 1.0};
Point(157) = {-0.054242, -0.741081, 0, 1.0};
Point(158) = {-0.057947, -0.740561, 0, 1.0};
Point(159) = {-0.061417, -0.740069, 0, 1.0};
Point(160) = {-0.067592, -0.739182, 0, 1.0};
Point(161) = {-0.072666, -0.738442, 0, 1.0};
Point(162) = {-0.074991, -0.738101, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:58};
Spline(3) = {58:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:139};
Spline(7) = {139:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
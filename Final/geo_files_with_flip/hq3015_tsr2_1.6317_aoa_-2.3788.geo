SetFactory("OpenCASCADE");

Point(1) = {0.075001, 0.745006, 0, 1.0};
Point(2) = {0.073936, 0.744735, 0, 1.0};
Point(3) = {0.070060, 0.743628, 0, 1.0};
Point(4) = {0.066182, 0.742556, 0, 1.0};
Point(5) = {0.062304, 0.741470, 0, 1.0};
Point(6) = {0.058427, 0.740392, 0, 1.0};
Point(7) = {0.054549, 0.739308, 0, 1.0};
Point(8) = {0.050672, 0.738229, 0, 1.0};
Point(9) = {0.042913, 0.736151, 0, 1.0};
Point(10) = {0.035149, 0.734198, 0, 1.0};
Point(11) = {0.027379, 0.732413, 0, 1.0};
Point(12) = {0.019601, 0.730803, 0, 1.0};
Point(13) = {0.011813, 0.729421, 0, 1.0};
Point(14) = {0.004015, 0.728289, 0, 1.0};
Point(15) = {-0.003793, 0.727417, 0, 1.0};
Point(16) = {-0.011613, 0.726799, 0, 1.0};
Point(17) = {-0.015526, 0.726580, 0, 1.0};
Point(18) = {-0.019442, 0.726426, 0, 1.0};
Point(19) = {-0.023361, 0.726347, 0, 1.0};
Point(20) = {-0.027284, 0.726345, 0, 1.0};
Point(21) = {-0.031209, 0.726415, 0, 1.0};
Point(22) = {-0.035137, 0.726551, 0, 1.0};
Point(23) = {-0.039068, 0.726761, 0, 1.0};
Point(24) = {-0.043004, 0.727071, 0, 1.0};
Point(25) = {-0.046944, 0.727504, 0, 1.0};
Point(26) = {-0.050890, 0.728071, 0, 1.0};
Point(27) = {-0.054843, 0.728793, 0, 1.0};
Point(28) = {-0.058804, 0.729726, 0, 1.0};
Point(29) = {-0.062777, 0.730937, 0, 1.0};
Point(30) = {-0.066766, 0.732560, 0, 1.0};
Point(31) = {-0.068771, 0.733593, 0, 1.0};
Point(32) = {-0.070784, 0.734859, 0, 1.0};
Point(33) = {-0.071797, 0.735623, 0, 1.0};
Point(34) = {-0.072816, 0.736543, 0, 1.0};
Point(35) = {-0.073432, 0.737209, 0, 1.0};
Point(36) = {-0.074056, 0.738070, 0, 1.0};
Point(37) = {-0.074481, 0.738868, 0, 1.0};
Point(38) = {-0.074935, 0.740360, 0, 1.0};
Point(39) = {-0.074583, 0.741319, 0, 1.0};
Point(40) = {-0.074210, 0.741779, 0, 1.0};
Point(41) = {-0.073644, 0.742322, 0, 1.0};
Point(42) = {-0.073074, 0.742764, 0, 1.0};
Point(43) = {-0.072118, 0.743359, 0, 1.0};
Point(44) = {-0.071156, 0.743815, 0, 1.0};
Point(45) = {-0.069225, 0.744543, 0, 1.0};
Point(46) = {-0.067288, 0.745112, 0, 1.0};
Point(47) = {-0.063403, 0.746009, 0, 1.0};
Point(48) = {-0.059510, 0.746717, 0, 1.0};
Point(49) = {-0.055612, 0.747308, 0, 1.0};
Point(50) = {-0.051710, 0.747806, 0, 1.0};
Point(51) = {-0.047805, 0.748221, 0, 1.0};
Point(52) = {-0.043897, 0.748569, 0, 1.0};
Point(53) = {-0.039987, 0.748866, 0, 1.0};
Point(54) = {-0.036075, 0.749124, 0, 1.0};
Point(55) = {-0.032162, 0.749346, 0, 1.0};
Point(56) = {-0.028248, 0.749550, 0, 1.0};
Point(57) = {-0.024333, 0.749736, 0, 1.0};
Point(58) = {-0.020417, 0.749894, 0, 1.0};
Point(59) = {-0.016498, 0.749983, 0, 1.0};
Point(60) = {-0.012577, 0.750000, 0, 1.0};
Point(61) = {-0.004727, 0.749885, 0, 1.0};
Point(62) = {0.003130, 0.749586, 0, 1.0};
Point(63) = {0.010994, 0.749148, 0, 1.0};
Point(64) = {0.018861, 0.748600, 0, 1.0};
Point(65) = {0.026732, 0.747990, 0, 1.0};
Point(66) = {0.034602, 0.747383, 0, 1.0};
Point(67) = {0.042470, 0.746824, 0, 1.0};
Point(68) = {0.050333, 0.746378, 0, 1.0};
Point(69) = {0.054262, 0.746228, 0, 1.0};
Point(70) = {0.058188, 0.746137, 0, 1.0};
Point(71) = {0.062111, 0.746129, 0, 1.0};
Point(72) = {0.066032, 0.746174, 0, 1.0};
Point(73) = {0.069949, 0.746302, 0, 1.0};
Point(74) = {0.073866, 0.746422, 0, 1.0};
Point(75) = {0.074940, 0.746465, 0, 1.0};
Point(76) = {-0.075001, -0.745006, 0, 1.0};
Point(77) = {-0.073936, -0.744735, 0, 1.0};
Point(78) = {-0.070060, -0.743628, 0, 1.0};
Point(79) = {-0.066182, -0.742556, 0, 1.0};
Point(80) = {-0.062304, -0.741470, 0, 1.0};
Point(81) = {-0.058427, -0.740392, 0, 1.0};
Point(82) = {-0.054549, -0.739308, 0, 1.0};
Point(83) = {-0.050672, -0.738229, 0, 1.0};
Point(84) = {-0.042913, -0.736151, 0, 1.0};
Point(85) = {-0.035149, -0.734198, 0, 1.0};
Point(86) = {-0.027379, -0.732413, 0, 1.0};
Point(87) = {-0.019601, -0.730803, 0, 1.0};
Point(88) = {-0.011813, -0.729421, 0, 1.0};
Point(89) = {-0.004015, -0.728289, 0, 1.0};
Point(90) = {0.003793, -0.727417, 0, 1.0};
Point(91) = {0.011613, -0.726799, 0, 1.0};
Point(92) = {0.015526, -0.726580, 0, 1.0};
Point(93) = {0.019442, -0.726426, 0, 1.0};
Point(94) = {0.023361, -0.726347, 0, 1.0};
Point(95) = {0.027284, -0.726345, 0, 1.0};
Point(96) = {0.031209, -0.726415, 0, 1.0};
Point(97) = {0.035137, -0.726551, 0, 1.0};
Point(98) = {0.039068, -0.726761, 0, 1.0};
Point(99) = {0.043004, -0.727071, 0, 1.0};
Point(100) = {0.046944, -0.727504, 0, 1.0};
Point(101) = {0.050890, -0.728071, 0, 1.0};
Point(102) = {0.054843, -0.728793, 0, 1.0};
Point(103) = {0.058804, -0.729726, 0, 1.0};
Point(104) = {0.062777, -0.730937, 0, 1.0};
Point(105) = {0.066766, -0.732560, 0, 1.0};
Point(106) = {0.068771, -0.733593, 0, 1.0};
Point(107) = {0.070784, -0.734859, 0, 1.0};
Point(108) = {0.071797, -0.735623, 0, 1.0};
Point(109) = {0.072816, -0.736543, 0, 1.0};
Point(110) = {0.073432, -0.737209, 0, 1.0};
Point(111) = {0.074056, -0.738070, 0, 1.0};
Point(112) = {0.074481, -0.738868, 0, 1.0};
Point(113) = {0.074935, -0.740360, 0, 1.0};
Point(114) = {0.074583, -0.741319, 0, 1.0};
Point(115) = {0.074210, -0.741779, 0, 1.0};
Point(116) = {0.073644, -0.742322, 0, 1.0};
Point(117) = {0.073074, -0.742764, 0, 1.0};
Point(118) = {0.072118, -0.743359, 0, 1.0};
Point(119) = {0.071156, -0.743815, 0, 1.0};
Point(120) = {0.069225, -0.744543, 0, 1.0};
Point(121) = {0.067288, -0.745112, 0, 1.0};
Point(122) = {0.063403, -0.746009, 0, 1.0};
Point(123) = {0.059510, -0.746717, 0, 1.0};
Point(124) = {0.055612, -0.747308, 0, 1.0};
Point(125) = {0.051710, -0.747806, 0, 1.0};
Point(126) = {0.047805, -0.748221, 0, 1.0};
Point(127) = {0.043897, -0.748569, 0, 1.0};
Point(128) = {0.039987, -0.748866, 0, 1.0};
Point(129) = {0.036075, -0.749124, 0, 1.0};
Point(130) = {0.032162, -0.749346, 0, 1.0};
Point(131) = {0.028248, -0.749550, 0, 1.0};
Point(132) = {0.024333, -0.749736, 0, 1.0};
Point(133) = {0.020417, -0.749894, 0, 1.0};
Point(134) = {0.016498, -0.749983, 0, 1.0};
Point(135) = {0.012577, -0.750000, 0, 1.0};
Point(136) = {0.004727, -0.749885, 0, 1.0};
Point(137) = {-0.003130, -0.749586, 0, 1.0};
Point(138) = {-0.010994, -0.749148, 0, 1.0};
Point(139) = {-0.018861, -0.748600, 0, 1.0};
Point(140) = {-0.026732, -0.747990, 0, 1.0};
Point(141) = {-0.034602, -0.747383, 0, 1.0};
Point(142) = {-0.042470, -0.746824, 0, 1.0};
Point(143) = {-0.050333, -0.746378, 0, 1.0};
Point(144) = {-0.054262, -0.746228, 0, 1.0};
Point(145) = {-0.058188, -0.746137, 0, 1.0};
Point(146) = {-0.062111, -0.746129, 0, 1.0};
Point(147) = {-0.066032, -0.746174, 0, 1.0};
Point(148) = {-0.069949, -0.746302, 0, 1.0};
Point(149) = {-0.073866, -0.746422, 0, 1.0};
Point(150) = {-0.074940, -0.746465, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:97};
Spline(6) = {97:130};
Spline(7) = {130:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073495, 0.741915, 0, 1.0};
Point(2) = {0.071116, 0.742497, 0, 1.0};
Point(3) = {0.066956, 0.743494, 0, 1.0};
Point(4) = {0.062210, 0.744510, 0, 1.0};
Point(5) = {0.056876, 0.745515, 0, 1.0};
Point(6) = {0.051039, 0.746523, 0, 1.0};
Point(7) = {0.044809, 0.747501, 0, 1.0};
Point(8) = {0.038284, 0.748397, 0, 1.0};
Point(9) = {0.031558, 0.749155, 0, 1.0};
Point(10) = {0.024716, 0.749713, 0, 1.0};
Point(11) = {0.017836, 0.750000, 0, 1.0};
Point(12) = {0.010961, 0.749933, 0, 1.0};
Point(13) = {0.004099, 0.749459, 0, 1.0};
Point(14) = {-0.002760, 0.748556, 0, 1.0};
Point(15) = {-0.009638, 0.747270, 0, 1.0};
Point(16) = {-0.016481, 0.745677, 0, 1.0};
Point(17) = {-0.023221, 0.743827, 0, 1.0};
Point(18) = {-0.029783, 0.741761, 0, 1.0};
Point(19) = {-0.036104, 0.739518, 0, 1.0};
Point(20) = {-0.042113, 0.737136, 0, 1.0};
Point(21) = {-0.047751, 0.734655, 0, 1.0};
Point(22) = {-0.052956, 0.732114, 0, 1.0};
Point(23) = {-0.057676, 0.729553, 0, 1.0};
Point(24) = {-0.061861, 0.727013, 0, 1.0};
Point(25) = {-0.065467, 0.724532, 0, 1.0};
Point(26) = {-0.068459, 0.722151, 0, 1.0};
Point(27) = {-0.070806, 0.719909, 0, 1.0};
Point(28) = {-0.072505, 0.717844, 0, 1.0};
Point(29) = {-0.073551, 0.716029, 0, 1.0};
Point(30) = {-0.073949, 0.714548, 0, 1.0};
Point(31) = {-0.073947, 0.714250, 0, 1.0};
Point(32) = {-0.073903, 0.713991, 0, 1.0};
Point(33) = {-0.073863, 0.713879, 0, 1.0};
Point(34) = {-0.073809, 0.713784, 0, 1.0};
Point(35) = {-0.073733, 0.713702, 0, 1.0};
Point(36) = {-0.073634, 0.713626, 0, 1.0};
Point(37) = {-0.073379, 0.713484, 0, 1.0};
Point(38) = {-0.072234, 0.713147, 0, 1.0};
Point(39) = {-0.069896, 0.712959, 0, 1.0};
Point(40) = {-0.066580, 0.713041, 0, 1.0};
Point(41) = {-0.062338, 0.713274, 0, 1.0};
Point(42) = {-0.057311, 0.713612, 0, 1.0};
Point(43) = {-0.051585, 0.714051, 0, 1.0};
Point(44) = {-0.045278, 0.714586, 0, 1.0};
Point(45) = {-0.038480, 0.715222, 0, 1.0};
Point(46) = {-0.031303, 0.715967, 0, 1.0};
Point(47) = {-0.023842, 0.716834, 0, 1.0};
Point(48) = {-0.016208, 0.717840, 0, 1.0};
Point(49) = {-0.008501, 0.719010, 0, 1.0};
Point(50) = {-0.000831, 0.720401, 0, 1.0};
Point(51) = {0.006786, 0.722108, 0, 1.0};
Point(52) = {0.014379, 0.724119, 0, 1.0};
Point(53) = {0.021947, 0.726391, 0, 1.0};
Point(54) = {0.029496, 0.728844, 0, 1.0};
Point(55) = {0.036995, 0.731357, 0, 1.0};
Point(56) = {0.044381, 0.733796, 0, 1.0};
Point(57) = {0.051559, 0.736003, 0, 1.0};
Point(58) = {0.058355, 0.737832, 0, 1.0};
Point(59) = {0.064554, 0.739184, 0, 1.0};
Point(60) = {0.069904, 0.740047, 0, 1.0};
Point(61) = {0.073744, 0.740472, 0, 1.0};
Point(62) = {-0.073495, -0.741915, 0, 1.0};
Point(63) = {-0.071116, -0.742497, 0, 1.0};
Point(64) = {-0.066956, -0.743494, 0, 1.0};
Point(65) = {-0.062210, -0.744510, 0, 1.0};
Point(66) = {-0.056876, -0.745515, 0, 1.0};
Point(67) = {-0.051039, -0.746523, 0, 1.0};
Point(68) = {-0.044809, -0.747501, 0, 1.0};
Point(69) = {-0.038284, -0.748397, 0, 1.0};
Point(70) = {-0.031558, -0.749155, 0, 1.0};
Point(71) = {-0.024716, -0.749713, 0, 1.0};
Point(72) = {-0.017836, -0.750000, 0, 1.0};
Point(73) = {-0.010961, -0.749933, 0, 1.0};
Point(74) = {-0.004099, -0.749459, 0, 1.0};
Point(75) = {0.002760, -0.748556, 0, 1.0};
Point(76) = {0.009638, -0.747270, 0, 1.0};
Point(77) = {0.016481, -0.745677, 0, 1.0};
Point(78) = {0.023221, -0.743827, 0, 1.0};
Point(79) = {0.029783, -0.741761, 0, 1.0};
Point(80) = {0.036104, -0.739518, 0, 1.0};
Point(81) = {0.042113, -0.737136, 0, 1.0};
Point(82) = {0.047751, -0.734655, 0, 1.0};
Point(83) = {0.052956, -0.732114, 0, 1.0};
Point(84) = {0.057676, -0.729553, 0, 1.0};
Point(85) = {0.061861, -0.727013, 0, 1.0};
Point(86) = {0.065467, -0.724532, 0, 1.0};
Point(87) = {0.068459, -0.722151, 0, 1.0};
Point(88) = {0.070806, -0.719909, 0, 1.0};
Point(89) = {0.072505, -0.717844, 0, 1.0};
Point(90) = {0.073551, -0.716029, 0, 1.0};
Point(91) = {0.073949, -0.714548, 0, 1.0};
Point(92) = {0.073947, -0.714250, 0, 1.0};
Point(93) = {0.073903, -0.713991, 0, 1.0};
Point(94) = {0.073863, -0.713879, 0, 1.0};
Point(95) = {0.073809, -0.713784, 0, 1.0};
Point(96) = {0.073733, -0.713702, 0, 1.0};
Point(97) = {0.073634, -0.713626, 0, 1.0};
Point(98) = {0.073379, -0.713484, 0, 1.0};
Point(99) = {0.072234, -0.713147, 0, 1.0};
Point(100) = {0.069896, -0.712959, 0, 1.0};
Point(101) = {0.066580, -0.713041, 0, 1.0};
Point(102) = {0.062338, -0.713274, 0, 1.0};
Point(103) = {0.057311, -0.713612, 0, 1.0};
Point(104) = {0.051585, -0.714051, 0, 1.0};
Point(105) = {0.045278, -0.714586, 0, 1.0};
Point(106) = {0.038480, -0.715222, 0, 1.0};
Point(107) = {0.031303, -0.715967, 0, 1.0};
Point(108) = {0.023842, -0.716834, 0, 1.0};
Point(109) = {0.016208, -0.717840, 0, 1.0};
Point(110) = {0.008501, -0.719010, 0, 1.0};
Point(111) = {0.000831, -0.720401, 0, 1.0};
Point(112) = {-0.006786, -0.722108, 0, 1.0};
Point(113) = {-0.014379, -0.724119, 0, 1.0};
Point(114) = {-0.021947, -0.726391, 0, 1.0};
Point(115) = {-0.029496, -0.728844, 0, 1.0};
Point(116) = {-0.036995, -0.731357, 0, 1.0};
Point(117) = {-0.044381, -0.733796, 0, 1.0};
Point(118) = {-0.051559, -0.736003, 0, 1.0};
Point(119) = {-0.058355, -0.737832, 0, 1.0};
Point(120) = {-0.064554, -0.739184, 0, 1.0};
Point(121) = {-0.069904, -0.740047, 0, 1.0};
Point(122) = {-0.073744, -0.740472, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:80};
Spline(6) = {80:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
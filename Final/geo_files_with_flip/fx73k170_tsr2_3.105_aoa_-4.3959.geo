SetFactory("OpenCASCADE");

Point(1) = {0.074940, 0.747840, 0, 1.0};
Point(2) = {0.073596, 0.747389, 0, 1.0};
Point(3) = {0.071233, 0.746578, 0, 1.0};
Point(4) = {0.068588, 0.745658, 0, 1.0};
Point(5) = {0.065674, 0.744611, 0, 1.0};
Point(6) = {0.062502, 0.743432, 0, 1.0};
Point(7) = {0.059088, 0.742115, 0, 1.0};
Point(8) = {0.055446, 0.740666, 0, 1.0};
Point(9) = {0.051592, 0.739093, 0, 1.0};
Point(10) = {0.047542, 0.737413, 0, 1.0};
Point(11) = {0.043309, 0.735662, 0, 1.0};
Point(12) = {0.038909, 0.733897, 0, 1.0};
Point(13) = {0.034357, 0.732181, 0, 1.0};
Point(14) = {0.029668, 0.730580, 0, 1.0};
Point(15) = {0.024860, 0.729117, 0, 1.0};
Point(16) = {0.019955, 0.727780, 0, 1.0};
Point(17) = {0.014972, 0.726584, 0, 1.0};
Point(18) = {0.009935, 0.725538, 0, 1.0};
Point(19) = {0.004862, 0.724670, 0, 1.0};
Point(20) = {-0.000224, 0.723985, 0, 1.0};
Point(21) = {-0.005302, 0.723468, 0, 1.0};
Point(22) = {-0.010350, 0.723119, 0, 1.0};
Point(23) = {-0.015343, 0.722929, 0, 1.0};
Point(24) = {-0.020260, 0.722887, 0, 1.0};
Point(25) = {-0.025080, 0.722988, 0, 1.0};
Point(26) = {-0.029783, 0.723228, 0, 1.0};
Point(27) = {-0.034347, 0.723599, 0, 1.0};
Point(28) = {-0.038753, 0.724093, 0, 1.0};
Point(29) = {-0.042978, 0.724700, 0, 1.0};
Point(30) = {-0.047008, 0.725411, 0, 1.0};
Point(31) = {-0.050823, 0.726214, 0, 1.0};
Point(32) = {-0.054407, 0.727102, 0, 1.0};
Point(33) = {-0.057743, 0.728062, 0, 1.0};
Point(34) = {-0.060816, 0.729084, 0, 1.0};
Point(35) = {-0.063614, 0.730155, 0, 1.0};
Point(36) = {-0.066124, 0.731259, 0, 1.0};
Point(37) = {-0.068332, 0.732384, 0, 1.0};
Point(38) = {-0.070231, 0.733509, 0, 1.0};
Point(39) = {-0.071807, 0.734613, 0, 1.0};
Point(40) = {-0.073056, 0.735672, 0, 1.0};
Point(41) = {-0.073973, 0.736698, 0, 1.0};
Point(42) = {-0.074550, 0.737644, 0, 1.0};
Point(43) = {-0.074779, 0.738439, 0, 1.0};
Point(44) = {-0.074661, 0.739088, 0, 1.0};
Point(45) = {-0.074200, 0.739650, 0, 1.0};
Point(46) = {-0.073407, 0.740233, 0, 1.0};
Point(47) = {-0.072287, 0.740861, 0, 1.0};
Point(48) = {-0.070845, 0.741500, 0, 1.0};
Point(49) = {-0.069083, 0.742148, 0, 1.0};
Point(50) = {-0.067011, 0.742797, 0, 1.0};
Point(51) = {-0.064636, 0.743448, 0, 1.0};
Point(52) = {-0.061970, 0.744095, 0, 1.0};
Point(53) = {-0.059025, 0.744731, 0, 1.0};
Point(54) = {-0.055810, 0.745356, 0, 1.0};
Point(55) = {-0.052340, 0.745960, 0, 1.0};
Point(56) = {-0.048632, 0.746542, 0, 1.0};
Point(57) = {-0.044700, 0.747096, 0, 1.0};
Point(58) = {-0.040561, 0.747619, 0, 1.0};
Point(59) = {-0.036231, 0.748104, 0, 1.0};
Point(60) = {-0.031729, 0.748548, 0, 1.0};
Point(61) = {-0.027076, 0.748945, 0, 1.0};
Point(62) = {-0.022290, 0.749292, 0, 1.0};
Point(63) = {-0.017391, 0.749579, 0, 1.0};
Point(64) = {-0.012401, 0.749802, 0, 1.0};
Point(65) = {-0.007337, 0.749948, 0, 1.0};
Point(66) = {-0.002224, 0.750000, 0, 1.0};
Point(67) = {0.002919, 0.749952, 0, 1.0};
Point(68) = {0.008071, 0.749793, 0, 1.0};
Point(69) = {0.013208, 0.749525, 0, 1.0};
Point(70) = {0.018310, 0.749180, 0, 1.0};
Point(71) = {0.023346, 0.748805, 0, 1.0};
Point(72) = {0.028294, 0.748453, 0, 1.0};
Point(73) = {0.033129, 0.748158, 0, 1.0};
Point(74) = {0.037830, 0.747930, 0, 1.0};
Point(75) = {0.042378, 0.747777, 0, 1.0};
Point(76) = {0.046752, 0.747695, 0, 1.0};
Point(77) = {0.050932, 0.747685, 0, 1.0};
Point(78) = {0.054902, 0.747742, 0, 1.0};
Point(79) = {0.058646, 0.747863, 0, 1.0};
Point(80) = {0.062148, 0.748043, 0, 1.0};
Point(81) = {0.065393, 0.748273, 0, 1.0};
Point(82) = {0.068366, 0.748541, 0, 1.0};
Point(83) = {0.071059, 0.748838, 0, 1.0};
Point(84) = {0.073461, 0.749145, 0, 1.0};
Point(85) = {0.074825, 0.749340, 0, 1.0};
Point(86) = {-0.074940, -0.747840, 0, 1.0};
Point(87) = {-0.073596, -0.747389, 0, 1.0};
Point(88) = {-0.071233, -0.746578, 0, 1.0};
Point(89) = {-0.068588, -0.745658, 0, 1.0};
Point(90) = {-0.065674, -0.744611, 0, 1.0};
Point(91) = {-0.062502, -0.743432, 0, 1.0};
Point(92) = {-0.059088, -0.742115, 0, 1.0};
Point(93) = {-0.055446, -0.740666, 0, 1.0};
Point(94) = {-0.051592, -0.739093, 0, 1.0};
Point(95) = {-0.047542, -0.737413, 0, 1.0};
Point(96) = {-0.043309, -0.735662, 0, 1.0};
Point(97) = {-0.038909, -0.733897, 0, 1.0};
Point(98) = {-0.034357, -0.732181, 0, 1.0};
Point(99) = {-0.029668, -0.730580, 0, 1.0};
Point(100) = {-0.024860, -0.729117, 0, 1.0};
Point(101) = {-0.019955, -0.727780, 0, 1.0};
Point(102) = {-0.014972, -0.726584, 0, 1.0};
Point(103) = {-0.009935, -0.725538, 0, 1.0};
Point(104) = {-0.004862, -0.724670, 0, 1.0};
Point(105) = {0.000224, -0.723985, 0, 1.0};
Point(106) = {0.005302, -0.723468, 0, 1.0};
Point(107) = {0.010350, -0.723119, 0, 1.0};
Point(108) = {0.015343, -0.722929, 0, 1.0};
Point(109) = {0.020260, -0.722887, 0, 1.0};
Point(110) = {0.025080, -0.722988, 0, 1.0};
Point(111) = {0.029783, -0.723228, 0, 1.0};
Point(112) = {0.034347, -0.723599, 0, 1.0};
Point(113) = {0.038753, -0.724093, 0, 1.0};
Point(114) = {0.042978, -0.724700, 0, 1.0};
Point(115) = {0.047008, -0.725411, 0, 1.0};
Point(116) = {0.050823, -0.726214, 0, 1.0};
Point(117) = {0.054407, -0.727102, 0, 1.0};
Point(118) = {0.057743, -0.728062, 0, 1.0};
Point(119) = {0.060816, -0.729084, 0, 1.0};
Point(120) = {0.063614, -0.730155, 0, 1.0};
Point(121) = {0.066124, -0.731259, 0, 1.0};
Point(122) = {0.068332, -0.732384, 0, 1.0};
Point(123) = {0.070231, -0.733509, 0, 1.0};
Point(124) = {0.071807, -0.734613, 0, 1.0};
Point(125) = {0.073056, -0.735672, 0, 1.0};
Point(126) = {0.073973, -0.736698, 0, 1.0};
Point(127) = {0.074550, -0.737644, 0, 1.0};
Point(128) = {0.074779, -0.738439, 0, 1.0};
Point(129) = {0.074661, -0.739088, 0, 1.0};
Point(130) = {0.074200, -0.739650, 0, 1.0};
Point(131) = {0.073407, -0.740233, 0, 1.0};
Point(132) = {0.072287, -0.740861, 0, 1.0};
Point(133) = {0.070845, -0.741500, 0, 1.0};
Point(134) = {0.069083, -0.742148, 0, 1.0};
Point(135) = {0.067011, -0.742797, 0, 1.0};
Point(136) = {0.064636, -0.743448, 0, 1.0};
Point(137) = {0.061970, -0.744095, 0, 1.0};
Point(138) = {0.059025, -0.744731, 0, 1.0};
Point(139) = {0.055810, -0.745356, 0, 1.0};
Point(140) = {0.052340, -0.745960, 0, 1.0};
Point(141) = {0.048632, -0.746542, 0, 1.0};
Point(142) = {0.044700, -0.747096, 0, 1.0};
Point(143) = {0.040561, -0.747619, 0, 1.0};
Point(144) = {0.036231, -0.748104, 0, 1.0};
Point(145) = {0.031729, -0.748548, 0, 1.0};
Point(146) = {0.027076, -0.748945, 0, 1.0};
Point(147) = {0.022290, -0.749292, 0, 1.0};
Point(148) = {0.017391, -0.749579, 0, 1.0};
Point(149) = {0.012401, -0.749802, 0, 1.0};
Point(150) = {0.007337, -0.749948, 0, 1.0};
Point(151) = {0.002224, -0.750000, 0, 1.0};
Point(152) = {-0.002919, -0.749952, 0, 1.0};
Point(153) = {-0.008071, -0.749793, 0, 1.0};
Point(154) = {-0.013208, -0.749525, 0, 1.0};
Point(155) = {-0.018310, -0.749180, 0, 1.0};
Point(156) = {-0.023346, -0.748805, 0, 1.0};
Point(157) = {-0.028294, -0.748453, 0, 1.0};
Point(158) = {-0.033129, -0.748158, 0, 1.0};
Point(159) = {-0.037830, -0.747930, 0, 1.0};
Point(160) = {-0.042378, -0.747777, 0, 1.0};
Point(161) = {-0.046752, -0.747695, 0, 1.0};
Point(162) = {-0.050932, -0.747685, 0, 1.0};
Point(163) = {-0.054902, -0.747742, 0, 1.0};
Point(164) = {-0.058646, -0.747863, 0, 1.0};
Point(165) = {-0.062148, -0.748043, 0, 1.0};
Point(166) = {-0.065393, -0.748273, 0, 1.0};
Point(167) = {-0.068366, -0.748541, 0, 1.0};
Point(168) = {-0.071059, -0.748838, 0, 1.0};
Point(169) = {-0.073461, -0.749145, 0, 1.0};
Point(170) = {-0.074825, -0.749340, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
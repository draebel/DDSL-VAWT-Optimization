SetFactory("OpenCASCADE");

Point(1) = {0.074270, 0.748084, 0, 1.0};
Point(2) = {0.072701, 0.747421, 0, 1.0};
Point(3) = {0.069073, 0.745900, 0, 1.0};
Point(4) = {0.065442, 0.744394, 0, 1.0};
Point(5) = {0.061809, 0.742903, 0, 1.0};
Point(6) = {0.058177, 0.741412, 0, 1.0};
Point(7) = {0.054544, 0.739922, 0, 1.0};
Point(8) = {0.050912, 0.738431, 0, 1.0};
Point(9) = {0.047279, 0.736940, 0, 1.0};
Point(10) = {0.043644, 0.735464, 0, 1.0};
Point(11) = {0.040008, 0.734003, 0, 1.0};
Point(12) = {0.036369, 0.732558, 0, 1.0};
Point(13) = {0.032726, 0.731142, 0, 1.0};
Point(14) = {0.029078, 0.729757, 0, 1.0};
Point(15) = {0.025427, 0.728402, 0, 1.0};
Point(16) = {0.021771, 0.727076, 0, 1.0};
Point(17) = {0.018109, 0.725797, 0, 1.0};
Point(18) = {0.014441, 0.724562, 0, 1.0};
Point(19) = {0.010766, 0.723372, 0, 1.0};
Point(20) = {0.007085, 0.722228, 0, 1.0};
Point(21) = {0.003398, 0.721129, 0, 1.0};
Point(22) = {-0.000298, 0.720090, 0, 1.0};
Point(23) = {-0.004002, 0.719112, 0, 1.0};
Point(24) = {-0.007715, 0.718194, 0, 1.0};
Point(25) = {-0.011438, 0.717351, 0, 1.0};
Point(26) = {-0.015172, 0.716583, 0, 1.0};
Point(27) = {-0.018916, 0.715891, 0, 1.0};
Point(28) = {-0.022671, 0.715274, 0, 1.0};
Point(29) = {-0.026438, 0.714748, 0, 1.0};
Point(30) = {-0.030220, 0.714327, 0, 1.0};
Point(31) = {-0.034017, 0.714011, 0, 1.0};
Point(32) = {-0.037829, 0.713801, 0, 1.0};
Point(33) = {-0.041657, 0.713712, 0, 1.0};
Point(34) = {-0.045504, 0.713758, 0, 1.0};
Point(35) = {-0.049373, 0.713955, 0, 1.0};
Point(36) = {-0.053264, 0.714318, 0, 1.0};
Point(37) = {-0.057187, 0.714906, 0, 1.0};
Point(38) = {-0.061155, 0.715812, 0, 1.0};
Point(39) = {-0.065194, 0.717229, 0, 1.0};
Point(40) = {-0.067257, 0.718247, 0, 1.0};
Point(41) = {-0.069374, 0.719656, 0, 1.0};
Point(42) = {-0.071588, 0.721759, 0, 1.0};
Point(43) = {-0.073013, 0.723711, 0, 1.0};
Point(44) = {-0.073648, 0.724959, 0, 1.0};
Point(45) = {-0.074278, 0.727267, 0, 1.0};
Point(46) = {-0.074202, 0.728922, 0, 1.0};
Point(47) = {-0.073898, 0.730040, 0, 1.0};
Point(48) = {-0.072953, 0.731524, 0, 1.0};
Point(49) = {-0.071252, 0.733098, 0, 1.0};
Point(50) = {-0.069503, 0.734326, 0, 1.0};
Point(51) = {-0.067729, 0.735373, 0, 1.0};
Point(52) = {-0.064134, 0.737135, 0, 1.0};
Point(53) = {-0.060502, 0.738626, 0, 1.0};
Point(54) = {-0.056842, 0.739921, 0, 1.0};
Point(55) = {-0.053163, 0.741080, 0, 1.0};
Point(56) = {-0.049467, 0.742119, 0, 1.0};
Point(57) = {-0.045761, 0.743082, 0, 1.0};
Point(58) = {-0.042044, 0.743970, 0, 1.0};
Point(59) = {-0.038317, 0.744783, 0, 1.0};
Point(60) = {-0.034581, 0.745535, 0, 1.0};
Point(61) = {-0.030837, 0.746228, 0, 1.0};
Point(62) = {-0.027084, 0.746860, 0, 1.0};
Point(63) = {-0.023323, 0.747431, 0, 1.0};
Point(64) = {-0.019556, 0.747958, 0, 1.0};
Point(65) = {-0.015782, 0.748439, 0, 1.0};
Point(66) = {-0.012000, 0.748860, 0, 1.0};
Point(67) = {-0.008210, 0.749220, 0, 1.0};
Point(68) = {-0.004411, 0.749521, 0, 1.0};
Point(69) = {-0.000603, 0.749761, 0, 1.0};
Point(70) = {0.003215, 0.749926, 0, 1.0};
Point(71) = {0.007045, 0.750000, 0, 1.0};
Point(72) = {0.010886, 0.749999, 0, 1.0};
Point(73) = {0.014736, 0.749938, 0, 1.0};
Point(74) = {0.018594, 0.749816, 0, 1.0};
Point(75) = {0.022460, 0.749634, 0, 1.0};
Point(76) = {0.026335, 0.749392, 0, 1.0};
Point(77) = {0.030214, 0.749120, 0, 1.0};
Point(78) = {0.034095, 0.748833, 0, 1.0};
Point(79) = {0.037976, 0.748545, 0, 1.0};
Point(80) = {0.041857, 0.748258, 0, 1.0};
Point(81) = {0.045738, 0.747971, 0, 1.0};
Point(82) = {0.049610, 0.747744, 0, 1.0};
Point(83) = {0.053477, 0.747562, 0, 1.0};
Point(84) = {0.057330, 0.747470, 0, 1.0};
Point(85) = {0.061165, 0.747515, 0, 1.0};
Point(86) = {0.064966, 0.747800, 0, 1.0};
Point(87) = {0.068736, 0.748311, 0, 1.0};
Point(88) = {0.072463, 0.749124, 0, 1.0};
Point(89) = {0.074061, 0.749582, 0, 1.0};
Point(90) = {-0.074270, -0.748084, 0, 1.0};
Point(91) = {-0.072701, -0.747421, 0, 1.0};
Point(92) = {-0.069073, -0.745900, 0, 1.0};
Point(93) = {-0.065442, -0.744394, 0, 1.0};
Point(94) = {-0.061809, -0.742903, 0, 1.0};
Point(95) = {-0.058177, -0.741412, 0, 1.0};
Point(96) = {-0.054544, -0.739922, 0, 1.0};
Point(97) = {-0.050912, -0.738431, 0, 1.0};
Point(98) = {-0.047279, -0.736940, 0, 1.0};
Point(99) = {-0.043644, -0.735464, 0, 1.0};
Point(100) = {-0.040008, -0.734003, 0, 1.0};
Point(101) = {-0.036369, -0.732558, 0, 1.0};
Point(102) = {-0.032726, -0.731142, 0, 1.0};
Point(103) = {-0.029078, -0.729757, 0, 1.0};
Point(104) = {-0.025427, -0.728402, 0, 1.0};
Point(105) = {-0.021771, -0.727076, 0, 1.0};
Point(106) = {-0.018109, -0.725797, 0, 1.0};
Point(107) = {-0.014441, -0.724562, 0, 1.0};
Point(108) = {-0.010766, -0.723372, 0, 1.0};
Point(109) = {-0.007085, -0.722228, 0, 1.0};
Point(110) = {-0.003398, -0.721129, 0, 1.0};
Point(111) = {0.000298, -0.720090, 0, 1.0};
Point(112) = {0.004002, -0.719112, 0, 1.0};
Point(113) = {0.007715, -0.718194, 0, 1.0};
Point(114) = {0.011438, -0.717351, 0, 1.0};
Point(115) = {0.015172, -0.716583, 0, 1.0};
Point(116) = {0.018916, -0.715891, 0, 1.0};
Point(117) = {0.022671, -0.715274, 0, 1.0};
Point(118) = {0.026438, -0.714748, 0, 1.0};
Point(119) = {0.030220, -0.714327, 0, 1.0};
Point(120) = {0.034017, -0.714011, 0, 1.0};
Point(121) = {0.037829, -0.713801, 0, 1.0};
Point(122) = {0.041657, -0.713712, 0, 1.0};
Point(123) = {0.045504, -0.713758, 0, 1.0};
Point(124) = {0.049373, -0.713955, 0, 1.0};
Point(125) = {0.053264, -0.714318, 0, 1.0};
Point(126) = {0.057187, -0.714906, 0, 1.0};
Point(127) = {0.061155, -0.715812, 0, 1.0};
Point(128) = {0.065194, -0.717229, 0, 1.0};
Point(129) = {0.067257, -0.718247, 0, 1.0};
Point(130) = {0.069374, -0.719656, 0, 1.0};
Point(131) = {0.071588, -0.721759, 0, 1.0};
Point(132) = {0.073013, -0.723711, 0, 1.0};
Point(133) = {0.073648, -0.724959, 0, 1.0};
Point(134) = {0.074278, -0.727267, 0, 1.0};
Point(135) = {0.074202, -0.728922, 0, 1.0};
Point(136) = {0.073898, -0.730040, 0, 1.0};
Point(137) = {0.072953, -0.731524, 0, 1.0};
Point(138) = {0.071252, -0.733098, 0, 1.0};
Point(139) = {0.069503, -0.734326, 0, 1.0};
Point(140) = {0.067729, -0.735373, 0, 1.0};
Point(141) = {0.064134, -0.737135, 0, 1.0};
Point(142) = {0.060502, -0.738626, 0, 1.0};
Point(143) = {0.056842, -0.739921, 0, 1.0};
Point(144) = {0.053163, -0.741080, 0, 1.0};
Point(145) = {0.049467, -0.742119, 0, 1.0};
Point(146) = {0.045761, -0.743082, 0, 1.0};
Point(147) = {0.042044, -0.743970, 0, 1.0};
Point(148) = {0.038317, -0.744783, 0, 1.0};
Point(149) = {0.034581, -0.745535, 0, 1.0};
Point(150) = {0.030837, -0.746228, 0, 1.0};
Point(151) = {0.027084, -0.746860, 0, 1.0};
Point(152) = {0.023323, -0.747431, 0, 1.0};
Point(153) = {0.019556, -0.747958, 0, 1.0};
Point(154) = {0.015782, -0.748439, 0, 1.0};
Point(155) = {0.012000, -0.748860, 0, 1.0};
Point(156) = {0.008210, -0.749220, 0, 1.0};
Point(157) = {0.004411, -0.749521, 0, 1.0};
Point(158) = {0.000603, -0.749761, 0, 1.0};
Point(159) = {-0.003215, -0.749926, 0, 1.0};
Point(160) = {-0.007045, -0.750000, 0, 1.0};
Point(161) = {-0.010886, -0.749999, 0, 1.0};
Point(162) = {-0.014736, -0.749938, 0, 1.0};
Point(163) = {-0.018594, -0.749816, 0, 1.0};
Point(164) = {-0.022460, -0.749634, 0, 1.0};
Point(165) = {-0.026335, -0.749392, 0, 1.0};
Point(166) = {-0.030214, -0.749120, 0, 1.0};
Point(167) = {-0.034095, -0.748833, 0, 1.0};
Point(168) = {-0.037976, -0.748545, 0, 1.0};
Point(169) = {-0.041857, -0.748258, 0, 1.0};
Point(170) = {-0.045738, -0.747971, 0, 1.0};
Point(171) = {-0.049610, -0.747744, 0, 1.0};
Point(172) = {-0.053477, -0.747562, 0, 1.0};
Point(173) = {-0.057330, -0.747470, 0, 1.0};
Point(174) = {-0.061165, -0.747515, 0, 1.0};
Point(175) = {-0.064966, -0.747800, 0, 1.0};
Point(176) = {-0.068736, -0.748311, 0, 1.0};
Point(177) = {-0.072463, -0.749124, 0, 1.0};
Point(178) = {-0.074061, -0.749582, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:31};
Spline(2) = {31:59};
Spline(3) = {59:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:120};
Spline(6) = {120:148};
Spline(7) = {148:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
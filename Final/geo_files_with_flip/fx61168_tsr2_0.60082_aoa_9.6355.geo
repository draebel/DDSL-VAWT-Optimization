SetFactory("OpenCASCADE");

Point(1) = {0.073488, 0.719607, 0, 1.0};
Point(2) = {0.073323, 0.719593, 0, 1.0};
Point(3) = {0.070810, 0.719411, 0, 1.0};
Point(4) = {0.068012, 0.719238, 0, 1.0};
Point(5) = {0.064897, 0.719081, 0, 1.0};
Point(6) = {0.061579, 0.718924, 0, 1.0};
Point(7) = {0.057965, 0.718776, 0, 1.0};
Point(8) = {0.054126, 0.718631, 0, 1.0};
Point(9) = {0.050040, 0.718490, 0, 1.0};
Point(10) = {0.045751, 0.718352, 0, 1.0};
Point(11) = {0.041276, 0.718211, 0, 1.0};
Point(12) = {0.036639, 0.718081, 0, 1.0};
Point(13) = {0.031841, 0.717962, 0, 1.0};
Point(14) = {0.026922, 0.717861, 0, 1.0};
Point(15) = {0.021882, 0.717776, 0, 1.0};
Point(16) = {0.016764, 0.717717, 0, 1.0};
Point(17) = {0.011590, 0.717682, 0, 1.0};
Point(18) = {0.006386, 0.717712, 0, 1.0};
Point(19) = {0.001156, 0.717839, 0, 1.0};
Point(20) = {-0.004028, 0.718107, 0, 1.0};
Point(21) = {-0.009186, 0.718531, 0, 1.0};
Point(22) = {-0.014256, 0.719119, 0, 1.0};
Point(23) = {-0.019240, 0.719842, 0, 1.0};
Point(24) = {-0.024099, 0.720699, 0, 1.0};
Point(25) = {-0.028856, 0.721673, 0, 1.0};
Point(26) = {-0.033429, 0.722770, 0, 1.0};
Point(27) = {-0.037860, 0.723975, 0, 1.0};
Point(28) = {-0.042086, 0.725291, 0, 1.0};
Point(29) = {-0.046116, 0.726691, 0, 1.0};
Point(30) = {-0.049904, 0.728174, 0, 1.0};
Point(31) = {-0.053479, 0.729712, 0, 1.0};
Point(32) = {-0.056798, 0.731304, 0, 1.0};
Point(33) = {-0.059846, 0.732913, 0, 1.0};
Point(34) = {-0.062625, 0.734554, 0, 1.0};
Point(35) = {-0.065116, 0.736193, 0, 1.0};
Point(36) = {-0.067298, 0.737835, 0, 1.0};
Point(37) = {-0.069198, 0.739444, 0, 1.0};
Point(38) = {-0.070778, 0.741010, 0, 1.0};
Point(39) = {-0.072048, 0.742479, 0, 1.0};
Point(40) = {-0.073004, 0.743849, 0, 1.0};
Point(41) = {-0.073649, 0.745128, 0, 1.0};
Point(42) = {-0.073960, 0.746317, 0, 1.0};
Point(43) = {-0.073942, 0.747385, 0, 1.0};
Point(44) = {-0.073725, 0.747699, 0, 1.0};
Point(45) = {-0.073139, 0.748133, 0, 1.0};
Point(46) = {-0.072209, 0.748534, 0, 1.0};
Point(47) = {-0.070958, 0.748894, 0, 1.0};
Point(48) = {-0.069384, 0.749223, 0, 1.0};
Point(49) = {-0.067493, 0.749488, 0, 1.0};
Point(50) = {-0.065283, 0.749706, 0, 1.0};
Point(51) = {-0.062795, 0.749863, 0, 1.0};
Point(52) = {-0.060008, 0.749966, 0, 1.0};
Point(53) = {-0.056945, 0.750000, 0, 1.0};
Point(54) = {-0.053627, 0.749978, 0, 1.0};
Point(55) = {-0.050054, 0.749883, 0, 1.0};
Point(56) = {-0.046246, 0.749715, 0, 1.0};
Point(57) = {-0.042245, 0.749491, 0, 1.0};
Point(58) = {-0.038032, 0.749170, 0, 1.0};
Point(59) = {-0.033654, 0.748749, 0, 1.0};
Point(60) = {-0.029109, 0.748213, 0, 1.0};
Point(61) = {-0.024458, 0.747577, 0, 1.0};
Point(62) = {-0.019662, 0.746833, 0, 1.0};
Point(63) = {-0.014796, 0.746017, 0, 1.0};
Point(64) = {-0.009847, 0.745088, 0, 1.0};
Point(65) = {-0.004854, 0.744049, 0, 1.0};
Point(66) = {0.000178, 0.742885, 0, 1.0};
Point(67) = {0.005193, 0.741615, 0, 1.0};
Point(68) = {0.010211, 0.740240, 0, 1.0};
Point(69) = {0.015168, 0.738758, 0, 1.0};
Point(70) = {0.020064, 0.737155, 0, 1.0};
Point(71) = {0.024882, 0.735444, 0, 1.0};
Point(72) = {0.029607, 0.733679, 0, 1.0};
Point(73) = {0.034213, 0.731934, 0, 1.0};
Point(74) = {0.038710, 0.730281, 0, 1.0};
Point(75) = {0.043066, 0.728753, 0, 1.0};
Point(76) = {0.047280, 0.727357, 0, 1.0};
Point(77) = {0.051331, 0.726094, 0, 1.0};
Point(78) = {0.055202, 0.724966, 0, 1.0};
Point(79) = {0.058848, 0.723980, 0, 1.0};
Point(80) = {0.062294, 0.723132, 0, 1.0};
Point(81) = {0.065465, 0.722427, 0, 1.0};
Point(82) = {0.068454, 0.721846, 0, 1.0};
Point(83) = {0.071148, 0.721400, 0, 1.0};
Point(84) = {0.073575, 0.721077, 0, 1.0};
Point(85) = {0.073735, 0.721057, 0, 1.0};
Point(86) = {-0.073488, -0.719607, 0, 1.0};
Point(87) = {-0.073323, -0.719593, 0, 1.0};
Point(88) = {-0.070810, -0.719411, 0, 1.0};
Point(89) = {-0.068012, -0.719238, 0, 1.0};
Point(90) = {-0.064897, -0.719081, 0, 1.0};
Point(91) = {-0.061579, -0.718924, 0, 1.0};
Point(92) = {-0.057965, -0.718776, 0, 1.0};
Point(93) = {-0.054126, -0.718631, 0, 1.0};
Point(94) = {-0.050040, -0.718490, 0, 1.0};
Point(95) = {-0.045751, -0.718352, 0, 1.0};
Point(96) = {-0.041276, -0.718211, 0, 1.0};
Point(97) = {-0.036639, -0.718081, 0, 1.0};
Point(98) = {-0.031841, -0.717962, 0, 1.0};
Point(99) = {-0.026922, -0.717861, 0, 1.0};
Point(100) = {-0.021882, -0.717776, 0, 1.0};
Point(101) = {-0.016764, -0.717717, 0, 1.0};
Point(102) = {-0.011590, -0.717682, 0, 1.0};
Point(103) = {-0.006386, -0.717712, 0, 1.0};
Point(104) = {-0.001156, -0.717839, 0, 1.0};
Point(105) = {0.004028, -0.718107, 0, 1.0};
Point(106) = {0.009186, -0.718531, 0, 1.0};
Point(107) = {0.014256, -0.719119, 0, 1.0};
Point(108) = {0.019240, -0.719842, 0, 1.0};
Point(109) = {0.024099, -0.720699, 0, 1.0};
Point(110) = {0.028856, -0.721673, 0, 1.0};
Point(111) = {0.033429, -0.722770, 0, 1.0};
Point(112) = {0.037860, -0.723975, 0, 1.0};
Point(113) = {0.042086, -0.725291, 0, 1.0};
Point(114) = {0.046116, -0.726691, 0, 1.0};
Point(115) = {0.049904, -0.728174, 0, 1.0};
Point(116) = {0.053479, -0.729712, 0, 1.0};
Point(117) = {0.056798, -0.731304, 0, 1.0};
Point(118) = {0.059846, -0.732913, 0, 1.0};
Point(119) = {0.062625, -0.734554, 0, 1.0};
Point(120) = {0.065116, -0.736193, 0, 1.0};
Point(121) = {0.067298, -0.737835, 0, 1.0};
Point(122) = {0.069198, -0.739444, 0, 1.0};
Point(123) = {0.070778, -0.741010, 0, 1.0};
Point(124) = {0.072048, -0.742479, 0, 1.0};
Point(125) = {0.073004, -0.743849, 0, 1.0};
Point(126) = {0.073649, -0.745128, 0, 1.0};
Point(127) = {0.073960, -0.746317, 0, 1.0};
Point(128) = {0.073942, -0.747385, 0, 1.0};
Point(129) = {0.073725, -0.747699, 0, 1.0};
Point(130) = {0.073139, -0.748133, 0, 1.0};
Point(131) = {0.072209, -0.748534, 0, 1.0};
Point(132) = {0.070958, -0.748894, 0, 1.0};
Point(133) = {0.069384, -0.749223, 0, 1.0};
Point(134) = {0.067493, -0.749488, 0, 1.0};
Point(135) = {0.065283, -0.749706, 0, 1.0};
Point(136) = {0.062795, -0.749863, 0, 1.0};
Point(137) = {0.060008, -0.749966, 0, 1.0};
Point(138) = {0.056945, -0.750000, 0, 1.0};
Point(139) = {0.053627, -0.749978, 0, 1.0};
Point(140) = {0.050054, -0.749883, 0, 1.0};
Point(141) = {0.046246, -0.749715, 0, 1.0};
Point(142) = {0.042245, -0.749491, 0, 1.0};
Point(143) = {0.038032, -0.749170, 0, 1.0};
Point(144) = {0.033654, -0.748749, 0, 1.0};
Point(145) = {0.029109, -0.748213, 0, 1.0};
Point(146) = {0.024458, -0.747577, 0, 1.0};
Point(147) = {0.019662, -0.746833, 0, 1.0};
Point(148) = {0.014796, -0.746017, 0, 1.0};
Point(149) = {0.009847, -0.745088, 0, 1.0};
Point(150) = {0.004854, -0.744049, 0, 1.0};
Point(151) = {-0.000178, -0.742885, 0, 1.0};
Point(152) = {-0.005193, -0.741615, 0, 1.0};
Point(153) = {-0.010211, -0.740240, 0, 1.0};
Point(154) = {-0.015168, -0.738758, 0, 1.0};
Point(155) = {-0.020064, -0.737155, 0, 1.0};
Point(156) = {-0.024882, -0.735444, 0, 1.0};
Point(157) = {-0.029607, -0.733679, 0, 1.0};
Point(158) = {-0.034213, -0.731934, 0, 1.0};
Point(159) = {-0.038710, -0.730281, 0, 1.0};
Point(160) = {-0.043066, -0.728753, 0, 1.0};
Point(161) = {-0.047280, -0.727357, 0, 1.0};
Point(162) = {-0.051331, -0.726094, 0, 1.0};
Point(163) = {-0.055202, -0.724966, 0, 1.0};
Point(164) = {-0.058848, -0.723980, 0, 1.0};
Point(165) = {-0.062294, -0.723132, 0, 1.0};
Point(166) = {-0.065465, -0.722427, 0, 1.0};
Point(167) = {-0.068454, -0.721846, 0, 1.0};
Point(168) = {-0.071148, -0.721400, 0, 1.0};
Point(169) = {-0.073575, -0.721077, 0, 1.0};
Point(170) = {-0.073735, -0.721057, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
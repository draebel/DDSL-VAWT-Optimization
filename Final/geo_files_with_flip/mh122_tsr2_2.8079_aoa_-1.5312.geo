SetFactory("OpenCASCADE");

Point(1) = {0.075034, 0.747000, 0, 1.0};
Point(2) = {0.071849, 0.746130, 0, 1.0};
Point(3) = {0.067477, 0.745008, 0, 1.0};
Point(4) = {0.062471, 0.743783, 0, 1.0};
Point(5) = {0.056915, 0.742482, 0, 1.0};
Point(6) = {0.050899, 0.741146, 0, 1.0};
Point(7) = {0.044516, 0.739836, 0, 1.0};
Point(8) = {0.037826, 0.738636, 0, 1.0};
Point(9) = {0.030856, 0.737599, 0, 1.0};
Point(10) = {0.023636, 0.736753, 0, 1.0};
Point(11) = {0.016198, 0.736101, 0, 1.0};
Point(12) = {0.008599, 0.735622, 0, 1.0};
Point(13) = {0.000919, 0.735304, 0, 1.0};
Point(14) = {-0.006761, 0.735145, 0, 1.0};
Point(15) = {-0.014361, 0.735140, 0, 1.0};
Point(16) = {-0.021803, 0.735284, 0, 1.0};
Point(17) = {-0.029010, 0.735571, 0, 1.0};
Point(18) = {-0.035907, 0.735994, 0, 1.0};
Point(19) = {-0.042423, 0.736543, 0, 1.0};
Point(20) = {-0.048492, 0.737208, 0, 1.0};
Point(21) = {-0.054050, 0.737973, 0, 1.0};
Point(22) = {-0.059040, 0.738827, 0, 1.0};
Point(23) = {-0.063409, 0.739750, 0, 1.0};
Point(24) = {-0.067109, 0.740731, 0, 1.0};
Point(25) = {-0.070109, 0.741759, 0, 1.0};
Point(26) = {-0.072393, 0.742814, 0, 1.0};
Point(27) = {-0.073959, 0.743861, 0, 1.0};
Point(28) = {-0.074661, 0.744595, 0, 1.0};
Point(29) = {-0.074833, 0.744870, 0, 1.0};
Point(30) = {-0.074940, 0.745121, 0, 1.0};
Point(31) = {-0.074973, 0.745272, 0, 1.0};
Point(32) = {-0.074965, 0.745402, 0, 1.0};
Point(33) = {-0.074906, 0.745520, 0, 1.0};
Point(34) = {-0.074796, 0.745643, 0, 1.0};
Point(35) = {-0.074560, 0.745829, 0, 1.0};
Point(36) = {-0.074248, 0.746019, 0, 1.0};
Point(37) = {-0.073915, 0.746189, 0, 1.0};
Point(38) = {-0.072088, 0.746831, 0, 1.0};
Point(39) = {-0.069427, 0.747419, 0, 1.0};
Point(40) = {-0.065948, 0.747956, 0, 1.0};
Point(41) = {-0.061699, 0.748450, 0, 1.0};
Point(42) = {-0.056737, 0.748896, 0, 1.0};
Point(43) = {-0.051127, 0.749287, 0, 1.0};
Point(44) = {-0.044937, 0.749613, 0, 1.0};
Point(45) = {-0.038243, 0.749860, 0, 1.0};
Point(46) = {-0.031127, 0.750000, 0, 1.0};
Point(47) = {-0.023642, 0.749992, 0, 1.0};
Point(48) = {-0.015818, 0.749830, 0, 1.0};
Point(49) = {-0.007701, 0.749534, 0, 1.0};
Point(50) = {0.000659, 0.749140, 0, 1.0};
Point(51) = {0.009185, 0.748710, 0, 1.0};
Point(52) = {0.017767, 0.748297, 0, 1.0};
Point(53) = {0.026288, 0.747939, 0, 1.0};
Point(54) = {0.034625, 0.747668, 0, 1.0};
Point(55) = {0.042655, 0.747504, 0, 1.0};
Point(56) = {0.050251, 0.747460, 0, 1.0};
Point(57) = {0.057292, 0.747539, 0, 1.0};
Point(58) = {0.063660, 0.747733, 0, 1.0};
Point(59) = {0.069247, 0.748024, 0, 1.0};
Point(60) = {0.073956, 0.748384, 0, 1.0};
Point(61) = {0.074995, 0.748482, 0, 1.0};
Point(62) = {-0.075034, -0.747000, 0, 1.0};
Point(63) = {-0.071849, -0.746130, 0, 1.0};
Point(64) = {-0.067477, -0.745008, 0, 1.0};
Point(65) = {-0.062471, -0.743783, 0, 1.0};
Point(66) = {-0.056915, -0.742482, 0, 1.0};
Point(67) = {-0.050899, -0.741146, 0, 1.0};
Point(68) = {-0.044516, -0.739836, 0, 1.0};
Point(69) = {-0.037826, -0.738636, 0, 1.0};
Point(70) = {-0.030856, -0.737599, 0, 1.0};
Point(71) = {-0.023636, -0.736753, 0, 1.0};
Point(72) = {-0.016198, -0.736101, 0, 1.0};
Point(73) = {-0.008599, -0.735622, 0, 1.0};
Point(74) = {-0.000919, -0.735304, 0, 1.0};
Point(75) = {0.006761, -0.735145, 0, 1.0};
Point(76) = {0.014361, -0.735140, 0, 1.0};
Point(77) = {0.021803, -0.735284, 0, 1.0};
Point(78) = {0.029010, -0.735571, 0, 1.0};
Point(79) = {0.035907, -0.735994, 0, 1.0};
Point(80) = {0.042423, -0.736543, 0, 1.0};
Point(81) = {0.048492, -0.737208, 0, 1.0};
Point(82) = {0.054050, -0.737973, 0, 1.0};
Point(83) = {0.059040, -0.738827, 0, 1.0};
Point(84) = {0.063409, -0.739750, 0, 1.0};
Point(85) = {0.067109, -0.740731, 0, 1.0};
Point(86) = {0.070109, -0.741759, 0, 1.0};
Point(87) = {0.072393, -0.742814, 0, 1.0};
Point(88) = {0.073959, -0.743861, 0, 1.0};
Point(89) = {0.074661, -0.744595, 0, 1.0};
Point(90) = {0.074833, -0.744870, 0, 1.0};
Point(91) = {0.074940, -0.745121, 0, 1.0};
Point(92) = {0.074973, -0.745272, 0, 1.0};
Point(93) = {0.074965, -0.745402, 0, 1.0};
Point(94) = {0.074906, -0.745520, 0, 1.0};
Point(95) = {0.074796, -0.745643, 0, 1.0};
Point(96) = {0.074560, -0.745829, 0, 1.0};
Point(97) = {0.074248, -0.746019, 0, 1.0};
Point(98) = {0.073915, -0.746189, 0, 1.0};
Point(99) = {0.072088, -0.746831, 0, 1.0};
Point(100) = {0.069427, -0.747419, 0, 1.0};
Point(101) = {0.065948, -0.747956, 0, 1.0};
Point(102) = {0.061699, -0.748450, 0, 1.0};
Point(103) = {0.056737, -0.748896, 0, 1.0};
Point(104) = {0.051127, -0.749287, 0, 1.0};
Point(105) = {0.044937, -0.749613, 0, 1.0};
Point(106) = {0.038243, -0.749860, 0, 1.0};
Point(107) = {0.031127, -0.750000, 0, 1.0};
Point(108) = {0.023642, -0.749992, 0, 1.0};
Point(109) = {0.015818, -0.749830, 0, 1.0};
Point(110) = {0.007701, -0.749534, 0, 1.0};
Point(111) = {-0.000659, -0.749140, 0, 1.0};
Point(112) = {-0.009185, -0.748710, 0, 1.0};
Point(113) = {-0.017767, -0.748297, 0, 1.0};
Point(114) = {-0.026288, -0.747939, 0, 1.0};
Point(115) = {-0.034625, -0.747668, 0, 1.0};
Point(116) = {-0.042655, -0.747504, 0, 1.0};
Point(117) = {-0.050251, -0.747460, 0, 1.0};
Point(118) = {-0.057292, -0.747539, 0, 1.0};
Point(119) = {-0.063660, -0.747733, 0, 1.0};
Point(120) = {-0.069247, -0.748024, 0, 1.0};
Point(121) = {-0.073956, -0.748384, 0, 1.0};
Point(122) = {-0.074995, -0.748482, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:46};
Spline(3) = {46:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:79};
Spline(6) = {79:107};
Spline(7) = {107:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073901, 0.748853, 0, 1.0};
Point(2) = {0.069416, 0.749245, 0, 1.0};
Point(3) = {0.061568, 0.749718, 0, 1.0};
Point(4) = {0.053755, 0.749990, 0, 1.0};
Point(5) = {0.045984, 0.750000, 0, 1.0};
Point(6) = {0.038247, 0.749809, 0, 1.0};
Point(7) = {0.030541, 0.749422, 0, 1.0};
Point(8) = {0.022864, 0.748869, 0, 1.0};
Point(9) = {0.015211, 0.748165, 0, 1.0};
Point(10) = {0.007578, 0.747341, 0, 1.0};
Point(11) = {-0.000033, 0.746380, 0, 1.0};
Point(12) = {-0.007618, 0.745269, 0, 1.0};
Point(13) = {-0.015181, 0.744021, 0, 1.0};
Point(14) = {-0.022722, 0.742638, 0, 1.0};
Point(15) = {-0.030238, 0.741103, 0, 1.0};
Point(16) = {-0.037729, 0.739417, 0, 1.0};
Point(17) = {-0.045192, 0.737566, 0, 1.0};
Point(18) = {-0.048164, 0.736742, 0, 1.0};
Point(19) = {-0.051135, 0.735916, 0, 1.0};
Point(20) = {-0.054098, 0.735036, 0, 1.0};
Point(21) = {-0.057051, 0.734097, 0, 1.0};
Point(22) = {-0.059996, 0.733115, 0, 1.0};
Point(23) = {-0.062932, 0.732072, 0, 1.0};
Point(24) = {-0.065842, 0.730877, 0, 1.0};
Point(25) = {-0.068718, 0.729473, 0, 1.0};
Point(26) = {-0.071550, 0.727799, 0, 1.0};
Point(27) = {-0.072902, 0.726578, 0, 1.0};
Point(28) = {-0.073229, 0.726204, 0, 1.0};
Point(29) = {-0.073541, 0.725741, 0, 1.0};
Point(30) = {-0.073838, 0.725187, 0, 1.0};
Point(31) = {-0.074070, 0.724238, 0, 1.0};
Point(32) = {-0.073449, 0.722827, 0, 1.0};
Point(33) = {-0.072992, 0.722415, 0, 1.0};
Point(34) = {-0.072565, 0.722183, 0, 1.0};
Point(35) = {-0.072148, 0.722004, 0, 1.0};
Point(36) = {-0.070522, 0.721566, 0, 1.0};
Point(37) = {-0.067347, 0.721160, 0, 1.0};
Point(38) = {-0.064207, 0.720964, 0, 1.0};
Point(39) = {-0.061094, 0.720929, 0, 1.0};
Point(40) = {-0.057999, 0.721006, 0, 1.0};
Point(41) = {-0.054923, 0.721199, 0, 1.0};
Point(42) = {-0.051849, 0.721402, 0, 1.0};
Point(43) = {-0.048781, 0.721643, 0, 1.0};
Point(44) = {-0.045722, 0.721936, 0, 1.0};
Point(45) = {-0.042663, 0.722229, 0, 1.0};
Point(46) = {-0.035040, 0.723116, 0, 1.0};
Point(47) = {-0.027442, 0.724150, 0, 1.0};
Point(48) = {-0.019861, 0.725290, 0, 1.0};
Point(49) = {-0.012300, 0.726550, 0, 1.0};
Point(50) = {-0.004756, 0.727919, 0, 1.0};
Point(51) = {0.002767, 0.729409, 0, 1.0};
Point(52) = {0.010273, 0.731004, 0, 1.0};
Point(53) = {0.017761, 0.732705, 0, 1.0};
Point(54) = {0.025232, 0.734511, 0, 1.0};
Point(55) = {0.032683, 0.736437, 0, 1.0};
Point(56) = {0.040129, 0.738396, 0, 1.0};
Point(57) = {0.047570, 0.740384, 0, 1.0};
Point(58) = {0.055014, 0.742358, 0, 1.0};
Point(59) = {0.062457, 0.744330, 0, 1.0};
Point(60) = {0.069908, 0.746257, 0, 1.0};
Point(61) = {0.074144, 0.747322, 0, 1.0};
Point(62) = {-0.073901, -0.748853, 0, 1.0};
Point(63) = {-0.069416, -0.749245, 0, 1.0};
Point(64) = {-0.061568, -0.749718, 0, 1.0};
Point(65) = {-0.053755, -0.749990, 0, 1.0};
Point(66) = {-0.045984, -0.750000, 0, 1.0};
Point(67) = {-0.038247, -0.749809, 0, 1.0};
Point(68) = {-0.030541, -0.749422, 0, 1.0};
Point(69) = {-0.022864, -0.748869, 0, 1.0};
Point(70) = {-0.015211, -0.748165, 0, 1.0};
Point(71) = {-0.007578, -0.747341, 0, 1.0};
Point(72) = {0.000033, -0.746380, 0, 1.0};
Point(73) = {0.007618, -0.745269, 0, 1.0};
Point(74) = {0.015181, -0.744021, 0, 1.0};
Point(75) = {0.022722, -0.742638, 0, 1.0};
Point(76) = {0.030238, -0.741103, 0, 1.0};
Point(77) = {0.037729, -0.739417, 0, 1.0};
Point(78) = {0.045192, -0.737566, 0, 1.0};
Point(79) = {0.048164, -0.736742, 0, 1.0};
Point(80) = {0.051135, -0.735916, 0, 1.0};
Point(81) = {0.054098, -0.735036, 0, 1.0};
Point(82) = {0.057051, -0.734097, 0, 1.0};
Point(83) = {0.059996, -0.733115, 0, 1.0};
Point(84) = {0.062932, -0.732072, 0, 1.0};
Point(85) = {0.065842, -0.730877, 0, 1.0};
Point(86) = {0.068718, -0.729473, 0, 1.0};
Point(87) = {0.071550, -0.727799, 0, 1.0};
Point(88) = {0.072902, -0.726578, 0, 1.0};
Point(89) = {0.073229, -0.726204, 0, 1.0};
Point(90) = {0.073541, -0.725741, 0, 1.0};
Point(91) = {0.073838, -0.725187, 0, 1.0};
Point(92) = {0.074070, -0.724238, 0, 1.0};
Point(93) = {0.073449, -0.722827, 0, 1.0};
Point(94) = {0.072992, -0.722415, 0, 1.0};
Point(95) = {0.072565, -0.722183, 0, 1.0};
Point(96) = {0.072148, -0.722004, 0, 1.0};
Point(97) = {0.070522, -0.721566, 0, 1.0};
Point(98) = {0.067347, -0.721160, 0, 1.0};
Point(99) = {0.064207, -0.720964, 0, 1.0};
Point(100) = {0.061094, -0.720929, 0, 1.0};
Point(101) = {0.057999, -0.721006, 0, 1.0};
Point(102) = {0.054923, -0.721199, 0, 1.0};
Point(103) = {0.051849, -0.721402, 0, 1.0};
Point(104) = {0.048781, -0.721643, 0, 1.0};
Point(105) = {0.045722, -0.721936, 0, 1.0};
Point(106) = {0.042663, -0.722229, 0, 1.0};
Point(107) = {0.035040, -0.723116, 0, 1.0};
Point(108) = {0.027442, -0.724150, 0, 1.0};
Point(109) = {0.019861, -0.725290, 0, 1.0};
Point(110) = {0.012300, -0.726550, 0, 1.0};
Point(111) = {0.004756, -0.727919, 0, 1.0};
Point(112) = {-0.002767, -0.729409, 0, 1.0};
Point(113) = {-0.010273, -0.731004, 0, 1.0};
Point(114) = {-0.017761, -0.732705, 0, 1.0};
Point(115) = {-0.025232, -0.734511, 0, 1.0};
Point(116) = {-0.032683, -0.736437, 0, 1.0};
Point(117) = {-0.040129, -0.738396, 0, 1.0};
Point(118) = {-0.047570, -0.740384, 0, 1.0};
Point(119) = {-0.055014, -0.742358, 0, 1.0};
Point(120) = {-0.062457, -0.744330, 0, 1.0};
Point(121) = {-0.069908, -0.746257, 0, 1.0};
Point(122) = {-0.074144, -0.747322, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:47};
Spline(3) = {47:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:77};
Spline(6) = {77:108};
Spline(7) = {108:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074027, 0.724800, 0, 1.0};
Point(2) = {0.072617, 0.724642, 0, 1.0};
Point(3) = {0.070136, 0.724348, 0, 1.0};
Point(4) = {0.067357, 0.724006, 0, 1.0};
Point(5) = {0.064288, 0.723596, 0, 1.0};
Point(6) = {0.060939, 0.723113, 0, 1.0};
Point(7) = {0.057323, 0.722545, 0, 1.0};
Point(8) = {0.053458, 0.721896, 0, 1.0};
Point(9) = {0.049359, 0.721171, 0, 1.0};
Point(10) = {0.045046, 0.720382, 0, 1.0};
Point(11) = {0.040539, 0.719563, 0, 1.0};
Point(12) = {0.035866, 0.718765, 0, 1.0};
Point(13) = {0.031054, 0.718047, 0, 1.0};
Point(14) = {0.026133, 0.717471, 0, 1.0};
Point(15) = {0.021124, 0.717054, 0, 1.0};
Point(16) = {0.016048, 0.716781, 0, 1.0};
Point(17) = {0.010925, 0.716662, 0, 1.0};
Point(18) = {0.005781, 0.716702, 0, 1.0};
Point(19) = {0.000639, 0.716923, 0, 1.0};
Point(20) = {-0.004478, 0.717325, 0, 1.0};
Point(21) = {-0.009550, 0.717890, 0, 1.0};
Point(22) = {-0.014558, 0.718613, 0, 1.0};
Point(23) = {-0.019479, 0.719479, 0, 1.0};
Point(24) = {-0.024295, 0.720475, 0, 1.0};
Point(25) = {-0.028986, 0.721590, 0, 1.0};
Point(26) = {-0.033531, 0.722816, 0, 1.0};
Point(27) = {-0.037915, 0.724140, 0, 1.0};
Point(28) = {-0.042118, 0.725552, 0, 1.0};
Point(29) = {-0.046120, 0.727036, 0, 1.0};
Point(30) = {-0.049909, 0.728580, 0, 1.0};
Point(31) = {-0.053469, 0.730170, 0, 1.0};
Point(32) = {-0.056786, 0.731793, 0, 1.0};
Point(33) = {-0.059845, 0.733435, 0, 1.0};
Point(34) = {-0.062633, 0.735082, 0, 1.0};
Point(35) = {-0.065143, 0.736719, 0, 1.0};
Point(36) = {-0.067363, 0.738326, 0, 1.0};
Point(37) = {-0.069285, 0.739892, 0, 1.0};
Point(38) = {-0.070904, 0.741392, 0, 1.0};
Point(39) = {-0.072212, 0.742803, 0, 1.0};
Point(40) = {-0.073210, 0.744102, 0, 1.0};
Point(41) = {-0.073889, 0.745298, 0, 1.0};
Point(42) = {-0.074254, 0.746345, 0, 1.0};
Point(43) = {-0.074311, 0.747170, 0, 1.0};
Point(44) = {-0.074058, 0.747779, 0, 1.0};
Point(45) = {-0.073489, 0.748231, 0, 1.0};
Point(46) = {-0.072591, 0.748634, 0, 1.0};
Point(47) = {-0.071364, 0.749012, 0, 1.0};
Point(48) = {-0.069820, 0.749333, 0, 1.0};
Point(49) = {-0.067960, 0.749594, 0, 1.0};
Point(50) = {-0.065798, 0.749793, 0, 1.0};
Point(51) = {-0.063339, 0.749928, 0, 1.0};
Point(52) = {-0.060597, 0.749999, 0, 1.0};
Point(53) = {-0.057584, 0.750000, 0, 1.0};
Point(54) = {-0.054310, 0.749933, 0, 1.0};
Point(55) = {-0.050791, 0.749792, 0, 1.0};
Point(56) = {-0.047043, 0.749580, 0, 1.0};
Point(57) = {-0.043082, 0.749292, 0, 1.0};
Point(58) = {-0.038926, 0.748930, 0, 1.0};
Point(59) = {-0.034591, 0.748492, 0, 1.0};
Point(60) = {-0.030097, 0.747977, 0, 1.0};
Point(61) = {-0.025465, 0.747384, 0, 1.0};
Point(62) = {-0.020713, 0.746715, 0, 1.0};
Point(63) = {-0.015864, 0.745963, 0, 1.0};
Point(64) = {-0.010939, 0.745129, 0, 1.0};
Point(65) = {-0.005958, 0.744204, 0, 1.0};
Point(66) = {-0.000949, 0.743177, 0, 1.0};
Point(67) = {0.004068, 0.742046, 0, 1.0};
Point(68) = {0.009071, 0.740805, 0, 1.0};
Point(69) = {0.014037, 0.739460, 0, 1.0};
Point(70) = {0.018951, 0.738047, 0, 1.0};
Point(71) = {0.023795, 0.736619, 0, 1.0};
Point(72) = {0.028557, 0.735232, 0, 1.0};
Point(73) = {0.033222, 0.733924, 0, 1.0};
Point(74) = {0.037769, 0.732711, 0, 1.0};
Point(75) = {0.042182, 0.731602, 0, 1.0};
Point(76) = {0.046441, 0.730600, 0, 1.0};
Point(77) = {0.050524, 0.729709, 0, 1.0};
Point(78) = {0.054418, 0.728928, 0, 1.0};
Point(79) = {0.058103, 0.728257, 0, 1.0};
Point(80) = {0.061564, 0.727694, 0, 1.0};
Point(81) = {0.064785, 0.727236, 0, 1.0};
Point(82) = {0.067748, 0.726871, 0, 1.0};
Point(83) = {0.070443, 0.726593, 0, 1.0};
Point(84) = {0.072855, 0.726387, 0, 1.0};
Point(85) = {0.074230, 0.726290, 0, 1.0};
Point(86) = {-0.074027, -0.724800, 0, 1.0};
Point(87) = {-0.072617, -0.724642, 0, 1.0};
Point(88) = {-0.070136, -0.724348, 0, 1.0};
Point(89) = {-0.067357, -0.724006, 0, 1.0};
Point(90) = {-0.064288, -0.723596, 0, 1.0};
Point(91) = {-0.060939, -0.723113, 0, 1.0};
Point(92) = {-0.057323, -0.722545, 0, 1.0};
Point(93) = {-0.053458, -0.721896, 0, 1.0};
Point(94) = {-0.049359, -0.721171, 0, 1.0};
Point(95) = {-0.045046, -0.720382, 0, 1.0};
Point(96) = {-0.040539, -0.719563, 0, 1.0};
Point(97) = {-0.035866, -0.718765, 0, 1.0};
Point(98) = {-0.031054, -0.718047, 0, 1.0};
Point(99) = {-0.026133, -0.717471, 0, 1.0};
Point(100) = {-0.021124, -0.717054, 0, 1.0};
Point(101) = {-0.016048, -0.716781, 0, 1.0};
Point(102) = {-0.010925, -0.716662, 0, 1.0};
Point(103) = {-0.005781, -0.716702, 0, 1.0};
Point(104) = {-0.000639, -0.716923, 0, 1.0};
Point(105) = {0.004478, -0.717325, 0, 1.0};
Point(106) = {0.009550, -0.717890, 0, 1.0};
Point(107) = {0.014558, -0.718613, 0, 1.0};
Point(108) = {0.019479, -0.719479, 0, 1.0};
Point(109) = {0.024295, -0.720475, 0, 1.0};
Point(110) = {0.028986, -0.721590, 0, 1.0};
Point(111) = {0.033531, -0.722816, 0, 1.0};
Point(112) = {0.037915, -0.724140, 0, 1.0};
Point(113) = {0.042118, -0.725552, 0, 1.0};
Point(114) = {0.046120, -0.727036, 0, 1.0};
Point(115) = {0.049909, -0.728580, 0, 1.0};
Point(116) = {0.053469, -0.730170, 0, 1.0};
Point(117) = {0.056786, -0.731793, 0, 1.0};
Point(118) = {0.059845, -0.733435, 0, 1.0};
Point(119) = {0.062633, -0.735082, 0, 1.0};
Point(120) = {0.065143, -0.736719, 0, 1.0};
Point(121) = {0.067363, -0.738326, 0, 1.0};
Point(122) = {0.069285, -0.739892, 0, 1.0};
Point(123) = {0.070904, -0.741392, 0, 1.0};
Point(124) = {0.072212, -0.742803, 0, 1.0};
Point(125) = {0.073210, -0.744102, 0, 1.0};
Point(126) = {0.073889, -0.745298, 0, 1.0};
Point(127) = {0.074254, -0.746345, 0, 1.0};
Point(128) = {0.074311, -0.747170, 0, 1.0};
Point(129) = {0.074058, -0.747779, 0, 1.0};
Point(130) = {0.073489, -0.748231, 0, 1.0};
Point(131) = {0.072591, -0.748634, 0, 1.0};
Point(132) = {0.071364, -0.749012, 0, 1.0};
Point(133) = {0.069820, -0.749333, 0, 1.0};
Point(134) = {0.067960, -0.749594, 0, 1.0};
Point(135) = {0.065798, -0.749793, 0, 1.0};
Point(136) = {0.063339, -0.749928, 0, 1.0};
Point(137) = {0.060597, -0.749999, 0, 1.0};
Point(138) = {0.057584, -0.750000, 0, 1.0};
Point(139) = {0.054310, -0.749933, 0, 1.0};
Point(140) = {0.050791, -0.749792, 0, 1.0};
Point(141) = {0.047043, -0.749580, 0, 1.0};
Point(142) = {0.043082, -0.749292, 0, 1.0};
Point(143) = {0.038926, -0.748930, 0, 1.0};
Point(144) = {0.034591, -0.748492, 0, 1.0};
Point(145) = {0.030097, -0.747977, 0, 1.0};
Point(146) = {0.025465, -0.747384, 0, 1.0};
Point(147) = {0.020713, -0.746715, 0, 1.0};
Point(148) = {0.015864, -0.745963, 0, 1.0};
Point(149) = {0.010939, -0.745129, 0, 1.0};
Point(150) = {0.005958, -0.744204, 0, 1.0};
Point(151) = {0.000949, -0.743177, 0, 1.0};
Point(152) = {-0.004068, -0.742046, 0, 1.0};
Point(153) = {-0.009071, -0.740805, 0, 1.0};
Point(154) = {-0.014037, -0.739460, 0, 1.0};
Point(155) = {-0.018951, -0.738047, 0, 1.0};
Point(156) = {-0.023795, -0.736619, 0, 1.0};
Point(157) = {-0.028557, -0.735232, 0, 1.0};
Point(158) = {-0.033222, -0.733924, 0, 1.0};
Point(159) = {-0.037769, -0.732711, 0, 1.0};
Point(160) = {-0.042182, -0.731602, 0, 1.0};
Point(161) = {-0.046441, -0.730600, 0, 1.0};
Point(162) = {-0.050524, -0.729709, 0, 1.0};
Point(163) = {-0.054418, -0.728928, 0, 1.0};
Point(164) = {-0.058103, -0.728257, 0, 1.0};
Point(165) = {-0.061564, -0.727694, 0, 1.0};
Point(166) = {-0.064785, -0.727236, 0, 1.0};
Point(167) = {-0.067748, -0.726871, 0, 1.0};
Point(168) = {-0.070443, -0.726593, 0, 1.0};
Point(169) = {-0.072855, -0.726387, 0, 1.0};
Point(170) = {-0.074230, -0.726290, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:111};
Spline(6) = {111:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
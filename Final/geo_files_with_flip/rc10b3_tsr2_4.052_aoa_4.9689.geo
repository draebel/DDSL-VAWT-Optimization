SetFactory("OpenCASCADE");

Point(1) = {0.074652, 0.733716, 0, 1.0};
Point(2) = {0.073442, 0.733665, 0, 1.0};
Point(3) = {0.068488, 0.733399, 0, 1.0};
Point(4) = {0.063487, 0.733044, 0, 1.0};
Point(5) = {0.058322, 0.732672, 0, 1.0};
Point(6) = {0.052954, 0.732294, 0, 1.0};
Point(7) = {0.047336, 0.731924, 0, 1.0};
Point(8) = {0.041418, 0.731578, 0, 1.0};
Point(9) = {0.035295, 0.731281, 0, 1.0};
Point(10) = {0.029173, 0.731056, 0, 1.0};
Point(11) = {0.023148, 0.730911, 0, 1.0};
Point(12) = {0.017233, 0.730850, 0, 1.0};
Point(13) = {0.011371, 0.730872, 0, 1.0};
Point(14) = {0.005524, 0.730978, 0, 1.0};
Point(15) = {-0.000323, 0.731169, 0, 1.0};
Point(16) = {-0.006179, 0.731444, 0, 1.0};
Point(17) = {-0.012028, 0.731799, 0, 1.0};
Point(18) = {-0.017838, 0.732235, 0, 1.0};
Point(19) = {-0.023560, 0.732749, 0, 1.0};
Point(20) = {-0.029142, 0.733335, 0, 1.0};
Point(21) = {-0.034539, 0.733992, 0, 1.0};
Point(22) = {-0.039728, 0.734724, 0, 1.0};
Point(23) = {-0.044695, 0.735528, 0, 1.0};
Point(24) = {-0.049422, 0.736406, 0, 1.0};
Point(25) = {-0.053885, 0.737368, 0, 1.0};
Point(26) = {-0.058069, 0.738398, 0, 1.0};
Point(27) = {-0.061952, 0.739521, 0, 1.0};
Point(28) = {-0.065514, 0.740727, 0, 1.0};
Point(29) = {-0.068692, 0.742023, 0, 1.0};
Point(30) = {-0.071367, 0.743383, 0, 1.0};
Point(31) = {-0.073271, 0.744724, 0, 1.0};
Point(32) = {-0.074364, 0.746044, 0, 1.0};
Point(33) = {-0.074718, 0.747472, 0, 1.0};
Point(34) = {-0.074142, 0.748602, 0, 1.0};
Point(35) = {-0.072881, 0.749210, 0, 1.0};
Point(36) = {-0.070824, 0.749631, 0, 1.0};
Point(37) = {-0.068007, 0.749897, 0, 1.0};
Point(38) = {-0.064708, 0.750000, 0, 1.0};
Point(39) = {-0.061043, 0.749985, 0, 1.0};
Point(40) = {-0.057070, 0.749888, 0, 1.0};
Point(41) = {-0.052811, 0.749726, 0, 1.0};
Point(42) = {-0.048282, 0.749519, 0, 1.0};
Point(43) = {-0.043500, 0.749267, 0, 1.0};
Point(44) = {-0.038489, 0.748981, 0, 1.0};
Point(45) = {-0.033264, 0.748661, 0, 1.0};
Point(46) = {-0.027840, 0.748308, 0, 1.0};
Point(47) = {-0.022241, 0.747921, 0, 1.0};
Point(48) = {-0.016511, 0.747503, 0, 1.0};
Point(49) = {-0.010702, 0.747054, 0, 1.0};
Point(50) = {-0.004863, 0.746577, 0, 1.0};
Point(51) = {0.000973, 0.746074, 0, 1.0};
Point(52) = {0.006790, 0.745547, 0, 1.0};
Point(53) = {0.012599, 0.744991, 0, 1.0};
Point(54) = {0.018411, 0.744404, 0, 1.0};
Point(55) = {0.024266, 0.743778, 0, 1.0};
Point(56) = {0.030220, 0.743098, 0, 1.0};
Point(57) = {0.036258, 0.742357, 0, 1.0};
Point(58) = {0.042286, 0.741554, 0, 1.0};
Point(59) = {0.048100, 0.740706, 0, 1.0};
Point(60) = {0.053608, 0.739820, 0, 1.0};
Point(61) = {0.058862, 0.738880, 0, 1.0};
Point(62) = {0.063907, 0.737879, 0, 1.0};
Point(63) = {0.068784, 0.736802, 0, 1.0};
Point(64) = {0.073606, 0.735553, 0, 1.0};
Point(65) = {0.074783, 0.735225, 0, 1.0};
Point(66) = {-0.074652, -0.733716, 0, 1.0};
Point(67) = {-0.073442, -0.733665, 0, 1.0};
Point(68) = {-0.068488, -0.733399, 0, 1.0};
Point(69) = {-0.063487, -0.733044, 0, 1.0};
Point(70) = {-0.058322, -0.732672, 0, 1.0};
Point(71) = {-0.052954, -0.732294, 0, 1.0};
Point(72) = {-0.047336, -0.731924, 0, 1.0};
Point(73) = {-0.041418, -0.731578, 0, 1.0};
Point(74) = {-0.035295, -0.731281, 0, 1.0};
Point(75) = {-0.029173, -0.731056, 0, 1.0};
Point(76) = {-0.023148, -0.730911, 0, 1.0};
Point(77) = {-0.017233, -0.730850, 0, 1.0};
Point(78) = {-0.011371, -0.730872, 0, 1.0};
Point(79) = {-0.005524, -0.730978, 0, 1.0};
Point(80) = {0.000323, -0.731169, 0, 1.0};
Point(81) = {0.006179, -0.731444, 0, 1.0};
Point(82) = {0.012028, -0.731799, 0, 1.0};
Point(83) = {0.017838, -0.732235, 0, 1.0};
Point(84) = {0.023560, -0.732749, 0, 1.0};
Point(85) = {0.029142, -0.733335, 0, 1.0};
Point(86) = {0.034539, -0.733992, 0, 1.0};
Point(87) = {0.039728, -0.734724, 0, 1.0};
Point(88) = {0.044695, -0.735528, 0, 1.0};
Point(89) = {0.049422, -0.736406, 0, 1.0};
Point(90) = {0.053885, -0.737368, 0, 1.0};
Point(91) = {0.058069, -0.738398, 0, 1.0};
Point(92) = {0.061952, -0.739521, 0, 1.0};
Point(93) = {0.065514, -0.740727, 0, 1.0};
Point(94) = {0.068692, -0.742023, 0, 1.0};
Point(95) = {0.071367, -0.743383, 0, 1.0};
Point(96) = {0.073271, -0.744724, 0, 1.0};
Point(97) = {0.074364, -0.746044, 0, 1.0};
Point(98) = {0.074718, -0.747472, 0, 1.0};
Point(99) = {0.074142, -0.748602, 0, 1.0};
Point(100) = {0.072881, -0.749210, 0, 1.0};
Point(101) = {0.070824, -0.749631, 0, 1.0};
Point(102) = {0.068007, -0.749897, 0, 1.0};
Point(103) = {0.064708, -0.750000, 0, 1.0};
Point(104) = {0.061043, -0.749985, 0, 1.0};
Point(105) = {0.057070, -0.749888, 0, 1.0};
Point(106) = {0.052811, -0.749726, 0, 1.0};
Point(107) = {0.048282, -0.749519, 0, 1.0};
Point(108) = {0.043500, -0.749267, 0, 1.0};
Point(109) = {0.038489, -0.748981, 0, 1.0};
Point(110) = {0.033264, -0.748661, 0, 1.0};
Point(111) = {0.027840, -0.748308, 0, 1.0};
Point(112) = {0.022241, -0.747921, 0, 1.0};
Point(113) = {0.016511, -0.747503, 0, 1.0};
Point(114) = {0.010702, -0.747054, 0, 1.0};
Point(115) = {0.004863, -0.746577, 0, 1.0};
Point(116) = {-0.000973, -0.746074, 0, 1.0};
Point(117) = {-0.006790, -0.745547, 0, 1.0};
Point(118) = {-0.012599, -0.744991, 0, 1.0};
Point(119) = {-0.018411, -0.744404, 0, 1.0};
Point(120) = {-0.024266, -0.743778, 0, 1.0};
Point(121) = {-0.030220, -0.743098, 0, 1.0};
Point(122) = {-0.036258, -0.742357, 0, 1.0};
Point(123) = {-0.042286, -0.741554, 0, 1.0};
Point(124) = {-0.048100, -0.740706, 0, 1.0};
Point(125) = {-0.053608, -0.739820, 0, 1.0};
Point(126) = {-0.058862, -0.738880, 0, 1.0};
Point(127) = {-0.063907, -0.737879, 0, 1.0};
Point(128) = {-0.068784, -0.736802, 0, 1.0};
Point(129) = {-0.073606, -0.735553, 0, 1.0};
Point(130) = {-0.074783, -0.735225, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:45};
Spline(3) = {45:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:86};
Spline(6) = {86:110};
Spline(7) = {110:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
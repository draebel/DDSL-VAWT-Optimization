SetFactory("OpenCASCADE");

Point(1) = {0.074812, 0.746718, 0, 1.0};
Point(2) = {0.074392, 0.746597, 0, 1.0};
Point(3) = {0.070415, 0.745181, 0, 1.0};
Point(4) = {0.065765, 0.743631, 0, 1.0};
Point(5) = {0.060447, 0.741966, 0, 1.0};
Point(6) = {0.054526, 0.740170, 0, 1.0};
Point(7) = {0.048105, 0.738259, 0, 1.0};
Point(8) = {0.041287, 0.736269, 0, 1.0};
Point(9) = {0.034176, 0.734251, 0, 1.0};
Point(10) = {0.026871, 0.732266, 0, 1.0};
Point(11) = {0.019469, 0.730384, 0, 1.0};
Point(12) = {0.012058, 0.728709, 0, 1.0};
Point(13) = {0.004638, 0.727353, 0, 1.0};
Point(14) = {-0.002847, 0.726327, 0, 1.0};
Point(15) = {-0.010365, 0.725551, 0, 1.0};
Point(16) = {-0.017823, 0.724982, 0, 1.0};
Point(17) = {-0.025132, 0.724604, 0, 1.0};
Point(18) = {-0.032199, 0.724404, 0, 1.0};
Point(19) = {-0.038939, 0.724372, 0, 1.0};
Point(20) = {-0.045265, 0.724499, 0, 1.0};
Point(21) = {-0.051090, 0.724781, 0, 1.0};
Point(22) = {-0.056329, 0.725216, 0, 1.0};
Point(23) = {-0.060889, 0.725836, 0, 1.0};
Point(24) = {-0.064745, 0.726716, 0, 1.0};
Point(25) = {-0.067962, 0.727865, 0, 1.0};
Point(26) = {-0.070574, 0.729202, 0, 1.0};
Point(27) = {-0.072561, 0.730641, 0, 1.0};
Point(28) = {-0.073910, 0.732103, 0, 1.0};
Point(29) = {-0.074584, 0.733471, 0, 1.0};
Point(30) = {-0.074637, 0.733748, 0, 1.0};
Point(31) = {-0.074653, 0.734041, 0, 1.0};
Point(32) = {-0.074607, 0.734300, 0, 1.0};
Point(33) = {-0.074478, 0.734545, 0, 1.0};
Point(34) = {-0.074266, 0.734797, 0, 1.0};
Point(35) = {-0.073211, 0.735638, 0, 1.0};
Point(36) = {-0.071053, 0.736795, 0, 1.0};
Point(37) = {-0.068047, 0.738016, 0, 1.0};
Point(38) = {-0.064255, 0.739291, 0, 1.0};
Point(39) = {-0.059734, 0.740603, 0, 1.0};
Point(40) = {-0.054555, 0.741937, 0, 1.0};
Point(41) = {-0.048787, 0.743269, 0, 1.0};
Point(42) = {-0.042511, 0.744577, 0, 1.0};
Point(43) = {-0.035807, 0.745834, 0, 1.0};
Point(44) = {-0.028760, 0.747007, 0, 1.0};
Point(45) = {-0.021459, 0.748063, 0, 1.0};
Point(46) = {-0.013990, 0.748956, 0, 1.0};
Point(47) = {-0.006444, 0.749638, 0, 1.0};
Point(48) = {0.001090, 0.750000, 0, 1.0};
Point(49) = {0.008683, 0.749894, 0, 1.0};
Point(50) = {0.016524, 0.749396, 0, 1.0};
Point(51) = {0.024604, 0.748767, 0, 1.0};
Point(52) = {0.032748, 0.748175, 0, 1.0};
Point(53) = {0.040779, 0.747702, 0, 1.0};
Point(54) = {0.048522, 0.747402, 0, 1.0};
Point(55) = {0.055804, 0.747292, 0, 1.0};
Point(56) = {0.062466, 0.747381, 0, 1.0};
Point(57) = {0.068352, 0.747648, 0, 1.0};
Point(58) = {0.073314, 0.748047, 0, 1.0};
Point(59) = {0.074667, 0.748187, 0, 1.0};
Point(60) = {-0.074812, -0.746718, 0, 1.0};
Point(61) = {-0.074392, -0.746597, 0, 1.0};
Point(62) = {-0.070415, -0.745181, 0, 1.0};
Point(63) = {-0.065765, -0.743631, 0, 1.0};
Point(64) = {-0.060447, -0.741966, 0, 1.0};
Point(65) = {-0.054526, -0.740170, 0, 1.0};
Point(66) = {-0.048105, -0.738259, 0, 1.0};
Point(67) = {-0.041287, -0.736269, 0, 1.0};
Point(68) = {-0.034176, -0.734251, 0, 1.0};
Point(69) = {-0.026871, -0.732266, 0, 1.0};
Point(70) = {-0.019469, -0.730384, 0, 1.0};
Point(71) = {-0.012058, -0.728709, 0, 1.0};
Point(72) = {-0.004638, -0.727353, 0, 1.0};
Point(73) = {0.002847, -0.726327, 0, 1.0};
Point(74) = {0.010365, -0.725551, 0, 1.0};
Point(75) = {0.017823, -0.724982, 0, 1.0};
Point(76) = {0.025132, -0.724604, 0, 1.0};
Point(77) = {0.032199, -0.724404, 0, 1.0};
Point(78) = {0.038939, -0.724372, 0, 1.0};
Point(79) = {0.045265, -0.724499, 0, 1.0};
Point(80) = {0.051090, -0.724781, 0, 1.0};
Point(81) = {0.056329, -0.725216, 0, 1.0};
Point(82) = {0.060889, -0.725836, 0, 1.0};
Point(83) = {0.064745, -0.726716, 0, 1.0};
Point(84) = {0.067962, -0.727865, 0, 1.0};
Point(85) = {0.070574, -0.729202, 0, 1.0};
Point(86) = {0.072561, -0.730641, 0, 1.0};
Point(87) = {0.073910, -0.732103, 0, 1.0};
Point(88) = {0.074584, -0.733471, 0, 1.0};
Point(89) = {0.074637, -0.733748, 0, 1.0};
Point(90) = {0.074653, -0.734041, 0, 1.0};
Point(91) = {0.074607, -0.734300, 0, 1.0};
Point(92) = {0.074478, -0.734545, 0, 1.0};
Point(93) = {0.074266, -0.734797, 0, 1.0};
Point(94) = {0.073211, -0.735638, 0, 1.0};
Point(95) = {0.071053, -0.736795, 0, 1.0};
Point(96) = {0.068047, -0.738016, 0, 1.0};
Point(97) = {0.064255, -0.739291, 0, 1.0};
Point(98) = {0.059734, -0.740603, 0, 1.0};
Point(99) = {0.054555, -0.741937, 0, 1.0};
Point(100) = {0.048787, -0.743269, 0, 1.0};
Point(101) = {0.042511, -0.744577, 0, 1.0};
Point(102) = {0.035807, -0.745834, 0, 1.0};
Point(103) = {0.028760, -0.747007, 0, 1.0};
Point(104) = {0.021459, -0.748063, 0, 1.0};
Point(105) = {0.013990, -0.748956, 0, 1.0};
Point(106) = {0.006444, -0.749638, 0, 1.0};
Point(107) = {-0.001090, -0.750000, 0, 1.0};
Point(108) = {-0.008683, -0.749894, 0, 1.0};
Point(109) = {-0.016524, -0.749396, 0, 1.0};
Point(110) = {-0.024604, -0.748767, 0, 1.0};
Point(111) = {-0.032748, -0.748175, 0, 1.0};
Point(112) = {-0.040779, -0.747702, 0, 1.0};
Point(113) = {-0.048522, -0.747402, 0, 1.0};
Point(114) = {-0.055804, -0.747292, 0, 1.0};
Point(115) = {-0.062466, -0.747381, 0, 1.0};
Point(116) = {-0.068352, -0.747648, 0, 1.0};
Point(117) = {-0.073314, -0.748047, 0, 1.0};
Point(118) = {-0.074667, -0.748187, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:43};
Spline(3) = {43:59};
Spline(4) = {59,1};

// Lines: second blade (splines 5-8)
Spline(5) = {60:77};
Spline(6) = {77:102};
Spline(7) = {102:118};
Spline(8) = {118,60};

// Outer domain (points 20001-4 and lines)
Point(119) = {-13.50000000, -15.00000000, 0, 1.0};
Point(120) = {-13.50000000, 15.00000000, 0, 1.0};
Point(121) = {13.50000000, 15.00000000, 0, 1.0};
Point(122) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {119, 120};
Line(12) = {120, 121};
Line(13) = {121, 122};
Line(14) = {119, 122};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074320, 0.729717, 0, 1.0};
Point(2) = {0.074245, 0.729711, 0, 1.0};
Point(3) = {0.069222, 0.729355, 0, 1.0};
Point(4) = {0.063514, 0.728936, 0, 1.0};
Point(5) = {0.057212, 0.728466, 0, 1.0};
Point(6) = {0.050414, 0.727966, 0, 1.0};
Point(7) = {0.043220, 0.727459, 0, 1.0};
Point(8) = {0.035734, 0.726981, 0, 1.0};
Point(9) = {0.028055, 0.726576, 0, 1.0};
Point(10) = {0.020273, 0.726291, 0, 1.0};
Point(11) = {0.012459, 0.726177, 0, 1.0};
Point(12) = {0.004671, 0.726273, 0, 1.0};
Point(13) = {-0.003040, 0.726599, 0, 1.0};
Point(14) = {-0.010631, 0.727162, 0, 1.0};
Point(15) = {-0.018049, 0.727947, 0, 1.0};
Point(16) = {-0.025233, 0.728939, 0, 1.0};
Point(17) = {-0.032120, 0.730121, 0, 1.0};
Point(18) = {-0.038654, 0.731474, 0, 1.0};
Point(19) = {-0.044780, 0.732973, 0, 1.0};
Point(20) = {-0.050440, 0.734592, 0, 1.0};
Point(21) = {-0.055588, 0.736305, 0, 1.0};
Point(22) = {-0.060184, 0.738083, 0, 1.0};
Point(23) = {-0.064193, 0.739888, 0, 1.0};
Point(24) = {-0.067585, 0.741680, 0, 1.0};
Point(25) = {-0.070333, 0.743413, 0, 1.0};
Point(26) = {-0.072415, 0.745035, 0, 1.0};
Point(27) = {-0.073809, 0.746488, 0, 1.0};
Point(28) = {-0.074285, 0.747203, 0, 1.0};
Point(29) = {-0.074449, 0.747545, 0, 1.0};
Point(30) = {-0.074546, 0.747853, 0, 1.0};
Point(31) = {-0.074570, 0.748036, 0, 1.0};
Point(32) = {-0.074553, 0.748192, 0, 1.0};
Point(33) = {-0.074485, 0.748334, 0, 1.0};
Point(34) = {-0.074367, 0.748476, 0, 1.0};
Point(35) = {-0.074122, 0.748685, 0, 1.0};
Point(36) = {-0.073801, 0.748885, 0, 1.0};
Point(37) = {-0.073198, 0.749163, 0, 1.0};
Point(38) = {-0.071251, 0.749675, 0, 1.0};
Point(39) = {-0.068529, 0.749966, 0, 1.0};
Point(40) = {-0.065036, 0.750000, 0, 1.0};
Point(41) = {-0.060771, 0.749767, 0, 1.0};
Point(42) = {-0.055744, 0.749279, 0, 1.0};
Point(43) = {-0.049984, 0.748566, 0, 1.0};
Point(44) = {-0.043546, 0.747663, 0, 1.0};
Point(45) = {-0.036493, 0.746599, 0, 1.0};
Point(46) = {-0.028902, 0.745407, 0, 1.0};
Point(47) = {-0.020858, 0.744119, 0, 1.0};
Point(48) = {-0.012451, 0.742766, 0, 1.0};
Point(49) = {-0.003780, 0.741380, 0, 1.0};
Point(50) = {0.005053, 0.739994, 0, 1.0};
Point(51) = {0.013939, 0.738638, 0, 1.0};
Point(52) = {0.022765, 0.737341, 0, 1.0};
Point(53) = {0.031417, 0.736127, 0, 1.0};
Point(54) = {0.039780, 0.735015, 0, 1.0};
Point(55) = {0.047742, 0.734018, 0, 1.0};
Point(56) = {0.055197, 0.733145, 0, 1.0};
Point(57) = {0.062047, 0.732401, 0, 1.0};
Point(58) = {0.068199, 0.731786, 0, 1.0};
Point(59) = {0.073571, 0.731298, 0, 1.0};
Point(60) = {0.074484, 0.731216, 0, 1.0};
Point(61) = {-0.074320, -0.729717, 0, 1.0};
Point(62) = {-0.074245, -0.729711, 0, 1.0};
Point(63) = {-0.069222, -0.729355, 0, 1.0};
Point(64) = {-0.063514, -0.728936, 0, 1.0};
Point(65) = {-0.057212, -0.728466, 0, 1.0};
Point(66) = {-0.050414, -0.727966, 0, 1.0};
Point(67) = {-0.043220, -0.727459, 0, 1.0};
Point(68) = {-0.035734, -0.726981, 0, 1.0};
Point(69) = {-0.028055, -0.726576, 0, 1.0};
Point(70) = {-0.020273, -0.726291, 0, 1.0};
Point(71) = {-0.012459, -0.726177, 0, 1.0};
Point(72) = {-0.004671, -0.726273, 0, 1.0};
Point(73) = {0.003040, -0.726599, 0, 1.0};
Point(74) = {0.010631, -0.727162, 0, 1.0};
Point(75) = {0.018049, -0.727947, 0, 1.0};
Point(76) = {0.025233, -0.728939, 0, 1.0};
Point(77) = {0.032120, -0.730121, 0, 1.0};
Point(78) = {0.038654, -0.731474, 0, 1.0};
Point(79) = {0.044780, -0.732973, 0, 1.0};
Point(80) = {0.050440, -0.734592, 0, 1.0};
Point(81) = {0.055588, -0.736305, 0, 1.0};
Point(82) = {0.060184, -0.738083, 0, 1.0};
Point(83) = {0.064193, -0.739888, 0, 1.0};
Point(84) = {0.067585, -0.741680, 0, 1.0};
Point(85) = {0.070333, -0.743413, 0, 1.0};
Point(86) = {0.072415, -0.745035, 0, 1.0};
Point(87) = {0.073809, -0.746488, 0, 1.0};
Point(88) = {0.074285, -0.747203, 0, 1.0};
Point(89) = {0.074449, -0.747545, 0, 1.0};
Point(90) = {0.074546, -0.747853, 0, 1.0};
Point(91) = {0.074570, -0.748036, 0, 1.0};
Point(92) = {0.074553, -0.748192, 0, 1.0};
Point(93) = {0.074485, -0.748334, 0, 1.0};
Point(94) = {0.074367, -0.748476, 0, 1.0};
Point(95) = {0.074122, -0.748685, 0, 1.0};
Point(96) = {0.073801, -0.748885, 0, 1.0};
Point(97) = {0.073198, -0.749163, 0, 1.0};
Point(98) = {0.071251, -0.749675, 0, 1.0};
Point(99) = {0.068529, -0.749966, 0, 1.0};
Point(100) = {0.065036, -0.750000, 0, 1.0};
Point(101) = {0.060771, -0.749767, 0, 1.0};
Point(102) = {0.055744, -0.749279, 0, 1.0};
Point(103) = {0.049984, -0.748566, 0, 1.0};
Point(104) = {0.043546, -0.747663, 0, 1.0};
Point(105) = {0.036493, -0.746599, 0, 1.0};
Point(106) = {0.028902, -0.745407, 0, 1.0};
Point(107) = {0.020858, -0.744119, 0, 1.0};
Point(108) = {0.012451, -0.742766, 0, 1.0};
Point(109) = {0.003780, -0.741380, 0, 1.0};
Point(110) = {-0.005053, -0.739994, 0, 1.0};
Point(111) = {-0.013939, -0.738638, 0, 1.0};
Point(112) = {-0.022765, -0.737341, 0, 1.0};
Point(113) = {-0.031417, -0.736127, 0, 1.0};
Point(114) = {-0.039780, -0.735015, 0, 1.0};
Point(115) = {-0.047742, -0.734018, 0, 1.0};
Point(116) = {-0.055197, -0.733145, 0, 1.0};
Point(117) = {-0.062047, -0.732401, 0, 1.0};
Point(118) = {-0.068199, -0.731786, 0, 1.0};
Point(119) = {-0.073571, -0.731298, 0, 1.0};
Point(120) = {-0.074484, -0.731216, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:45};
Spline(3) = {45:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:105};
Spline(7) = {105:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
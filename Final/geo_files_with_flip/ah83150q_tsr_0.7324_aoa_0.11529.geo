SetFactory("OpenCASCADE");

Point(1) = {0.075003, 0.732945, 0, 1.0};
Point(2) = {0.074320, 0.733082, 0, 1.0};
Point(3) = {0.071556, 0.733654, 0, 1.0};
Point(4) = {0.068508, 0.734310, 0, 1.0};
Point(5) = {0.065188, 0.735050, 0, 1.0};
Point(6) = {0.061609, 0.735870, 0, 1.0};
Point(7) = {0.057789, 0.736769, 0, 1.0};
Point(8) = {0.053744, 0.737752, 0, 1.0};
Point(9) = {0.049491, 0.738818, 0, 1.0};
Point(10) = {0.045046, 0.739957, 0, 1.0};
Point(11) = {0.040429, 0.741154, 0, 1.0};
Point(12) = {0.035663, 0.742396, 0, 1.0};
Point(13) = {0.030765, 0.743665, 0, 1.0};
Point(14) = {0.025757, 0.744930, 0, 1.0};
Point(15) = {0.020660, 0.746136, 0, 1.0};
Point(16) = {0.015495, 0.747218, 0, 1.0};
Point(17) = {0.010286, 0.748135, 0, 1.0};
Point(18) = {0.005054, 0.748865, 0, 1.0};
Point(19) = {-0.000178, 0.749407, 0, 1.0};
Point(20) = {-0.005388, 0.749771, 0, 1.0};
Point(21) = {-0.010555, 0.749963, 0, 1.0};
Point(22) = {-0.015654, 0.750000, 0, 1.0};
Point(23) = {-0.020665, 0.749893, 0, 1.0};
Point(24) = {-0.025566, 0.749647, 0, 1.0};
Point(25) = {-0.030336, 0.749268, 0, 1.0};
Point(26) = {-0.034956, 0.748763, 0, 1.0};
Point(27) = {-0.039404, 0.748139, 0, 1.0};
Point(28) = {-0.043661, 0.747400, 0, 1.0};
Point(29) = {-0.047710, 0.746555, 0, 1.0};
Point(30) = {-0.051534, 0.745617, 0, 1.0};
Point(31) = {-0.055116, 0.744598, 0, 1.0};
Point(32) = {-0.058441, 0.743518, 0, 1.0};
Point(33) = {-0.061492, 0.742388, 0, 1.0};
Point(34) = {-0.064259, 0.741197, 0, 1.0};
Point(35) = {-0.066731, 0.739950, 0, 1.0};
Point(36) = {-0.068894, 0.738669, 0, 1.0};
Point(37) = {-0.070742, 0.737389, 0, 1.0};
Point(38) = {-0.072263, 0.736131, 0, 1.0};
Point(39) = {-0.073455, 0.734889, 0, 1.0};
Point(40) = {-0.074311, 0.733625, 0, 1.0};
Point(41) = {-0.074827, 0.732436, 0, 1.0};
Point(42) = {-0.075000, 0.731502, 0, 1.0};
Point(43) = {-0.074830, 0.730871, 0, 1.0};
Point(44) = {-0.074317, 0.730473, 0, 1.0};
Point(45) = {-0.073465, 0.730120, 0, 1.0};
Point(46) = {-0.072276, 0.729727, 0, 1.0};
Point(47) = {-0.070758, 0.729346, 0, 1.0};
Point(48) = {-0.068914, 0.728979, 0, 1.0};
Point(49) = {-0.066754, 0.728627, 0, 1.0};
Point(50) = {-0.064285, 0.728294, 0, 1.0};
Point(51) = {-0.061521, 0.727980, 0, 1.0};
Point(52) = {-0.058472, 0.727690, 0, 1.0};
Point(53) = {-0.055151, 0.727425, 0, 1.0};
Point(54) = {-0.051571, 0.727176, 0, 1.0};
Point(55) = {-0.047750, 0.726950, 0, 1.0};
Point(56) = {-0.043703, 0.726752, 0, 1.0};
Point(57) = {-0.039448, 0.726572, 0, 1.0};
Point(58) = {-0.035001, 0.726409, 0, 1.0};
Point(59) = {-0.030382, 0.726267, 0, 1.0};
Point(60) = {-0.025613, 0.726147, 0, 1.0};
Point(61) = {-0.020713, 0.726056, 0, 1.0};
Point(62) = {-0.015703, 0.725993, 0, 1.0};
Point(63) = {-0.010604, 0.725952, 0, 1.0};
Point(64) = {-0.005436, 0.725932, 0, 1.0};
Point(65) = {-0.000225, 0.725933, 0, 1.0};
Point(66) = {0.005008, 0.725962, 0, 1.0};
Point(67) = {0.010241, 0.726025, 0, 1.0};
Point(68) = {0.015452, 0.726119, 0, 1.0};
Point(69) = {0.020620, 0.726248, 0, 1.0};
Point(70) = {0.025719, 0.726425, 0, 1.0};
Point(71) = {0.030731, 0.726664, 0, 1.0};
Point(72) = {0.035632, 0.726981, 0, 1.0};
Point(73) = {0.040402, 0.727384, 0, 1.0};
Point(74) = {0.045021, 0.727890, 0, 1.0};
Point(75) = {0.049470, 0.728502, 0, 1.0};
Point(76) = {0.053727, 0.729184, 0, 1.0};
Point(77) = {0.057775, 0.729849, 0, 1.0};
Point(78) = {0.061598, 0.730427, 0, 1.0};
Point(79) = {0.065179, 0.730871, 0, 1.0};
Point(80) = {0.068502, 0.731170, 0, 1.0};
Point(81) = {0.071551, 0.731345, 0, 1.0};
Point(82) = {0.074317, 0.731424, 0, 1.0};
Point(83) = {0.075000, 0.731432, 0, 1.0};
Point(84) = {-0.075003, -0.732945, 0, 1.0};
Point(85) = {-0.074320, -0.733082, 0, 1.0};
Point(86) = {-0.071556, -0.733654, 0, 1.0};
Point(87) = {-0.068508, -0.734310, 0, 1.0};
Point(88) = {-0.065188, -0.735050, 0, 1.0};
Point(89) = {-0.061609, -0.735870, 0, 1.0};
Point(90) = {-0.057789, -0.736769, 0, 1.0};
Point(91) = {-0.053744, -0.737752, 0, 1.0};
Point(92) = {-0.049491, -0.738818, 0, 1.0};
Point(93) = {-0.045046, -0.739957, 0, 1.0};
Point(94) = {-0.040429, -0.741154, 0, 1.0};
Point(95) = {-0.035663, -0.742396, 0, 1.0};
Point(96) = {-0.030765, -0.743665, 0, 1.0};
Point(97) = {-0.025757, -0.744930, 0, 1.0};
Point(98) = {-0.020660, -0.746136, 0, 1.0};
Point(99) = {-0.015495, -0.747218, 0, 1.0};
Point(100) = {-0.010286, -0.748135, 0, 1.0};
Point(101) = {-0.005054, -0.748865, 0, 1.0};
Point(102) = {0.000178, -0.749407, 0, 1.0};
Point(103) = {0.005388, -0.749771, 0, 1.0};
Point(104) = {0.010555, -0.749963, 0, 1.0};
Point(105) = {0.015654, -0.750000, 0, 1.0};
Point(106) = {0.020665, -0.749893, 0, 1.0};
Point(107) = {0.025566, -0.749647, 0, 1.0};
Point(108) = {0.030336, -0.749268, 0, 1.0};
Point(109) = {0.034956, -0.748763, 0, 1.0};
Point(110) = {0.039404, -0.748139, 0, 1.0};
Point(111) = {0.043661, -0.747400, 0, 1.0};
Point(112) = {0.047710, -0.746555, 0, 1.0};
Point(113) = {0.051534, -0.745617, 0, 1.0};
Point(114) = {0.055116, -0.744598, 0, 1.0};
Point(115) = {0.058441, -0.743518, 0, 1.0};
Point(116) = {0.061492, -0.742388, 0, 1.0};
Point(117) = {0.064259, -0.741197, 0, 1.0};
Point(118) = {0.066731, -0.739950, 0, 1.0};
Point(119) = {0.068894, -0.738669, 0, 1.0};
Point(120) = {0.070742, -0.737389, 0, 1.0};
Point(121) = {0.072263, -0.736131, 0, 1.0};
Point(122) = {0.073455, -0.734889, 0, 1.0};
Point(123) = {0.074311, -0.733625, 0, 1.0};
Point(124) = {0.074827, -0.732436, 0, 1.0};
Point(125) = {0.075000, -0.731502, 0, 1.0};
Point(126) = {0.074830, -0.730871, 0, 1.0};
Point(127) = {0.074317, -0.730473, 0, 1.0};
Point(128) = {0.073465, -0.730120, 0, 1.0};
Point(129) = {0.072276, -0.729727, 0, 1.0};
Point(130) = {0.070758, -0.729346, 0, 1.0};
Point(131) = {0.068914, -0.728979, 0, 1.0};
Point(132) = {0.066754, -0.728627, 0, 1.0};
Point(133) = {0.064285, -0.728294, 0, 1.0};
Point(134) = {0.061521, -0.727980, 0, 1.0};
Point(135) = {0.058472, -0.727690, 0, 1.0};
Point(136) = {0.055151, -0.727425, 0, 1.0};
Point(137) = {0.051571, -0.727176, 0, 1.0};
Point(138) = {0.047750, -0.726950, 0, 1.0};
Point(139) = {0.043703, -0.726752, 0, 1.0};
Point(140) = {0.039448, -0.726572, 0, 1.0};
Point(141) = {0.035001, -0.726409, 0, 1.0};
Point(142) = {0.030382, -0.726267, 0, 1.0};
Point(143) = {0.025613, -0.726147, 0, 1.0};
Point(144) = {0.020713, -0.726056, 0, 1.0};
Point(145) = {0.015703, -0.725993, 0, 1.0};
Point(146) = {0.010604, -0.725952, 0, 1.0};
Point(147) = {0.005436, -0.725932, 0, 1.0};
Point(148) = {0.000225, -0.725933, 0, 1.0};
Point(149) = {-0.005008, -0.725962, 0, 1.0};
Point(150) = {-0.010241, -0.726025, 0, 1.0};
Point(151) = {-0.015452, -0.726119, 0, 1.0};
Point(152) = {-0.020620, -0.726248, 0, 1.0};
Point(153) = {-0.025719, -0.726425, 0, 1.0};
Point(154) = {-0.030731, -0.726664, 0, 1.0};
Point(155) = {-0.035632, -0.726981, 0, 1.0};
Point(156) = {-0.040402, -0.727384, 0, 1.0};
Point(157) = {-0.045021, -0.727890, 0, 1.0};
Point(158) = {-0.049470, -0.728502, 0, 1.0};
Point(159) = {-0.053727, -0.729184, 0, 1.0};
Point(160) = {-0.057775, -0.729849, 0, 1.0};
Point(161) = {-0.061598, -0.730427, 0, 1.0};
Point(162) = {-0.065179, -0.730871, 0, 1.0};
Point(163) = {-0.068502, -0.731170, 0, 1.0};
Point(164) = {-0.071551, -0.731345, 0, 1.0};
Point(165) = {-0.074317, -0.731424, 0, 1.0};
Point(166) = {-0.075000, -0.731432, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
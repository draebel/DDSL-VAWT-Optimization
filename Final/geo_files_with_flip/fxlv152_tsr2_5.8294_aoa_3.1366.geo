SetFactory("OpenCASCADE");

Point(1) = {0.074928, 0.733104, 0, 1.0};
Point(2) = {0.072579, 0.733405, 0, 1.0};
Point(3) = {0.069864, 0.733839, 0, 1.0};
Point(4) = {0.066839, 0.734354, 0, 1.0};
Point(5) = {0.063616, 0.734942, 0, 1.0};
Point(6) = {0.060107, 0.735547, 0, 1.0};
Point(7) = {0.056366, 0.736259, 0, 1.0};
Point(8) = {0.052392, 0.737047, 0, 1.0};
Point(9) = {0.048221, 0.737910, 0, 1.0};
Point(10) = {0.043864, 0.738750, 0, 1.0};
Point(11) = {0.039353, 0.739727, 0, 1.0};
Point(12) = {0.034685, 0.740775, 0, 1.0};
Point(13) = {0.029891, 0.741767, 0, 1.0};
Point(14) = {0.024981, 0.742860, 0, 1.0};
Point(15) = {0.019989, 0.743957, 0, 1.0};
Point(16) = {0.014935, 0.744995, 0, 1.0};
Point(17) = {0.009840, 0.746035, 0, 1.0};
Point(18) = {0.004699, 0.746982, 0, 1.0};
Point(19) = {-0.000433, 0.747739, 0, 1.0};
Point(20) = {-0.005567, 0.748432, 0, 1.0};
Point(21) = {-0.010649, 0.748996, 0, 1.0};
Point(22) = {-0.015676, 0.749430, 0, 1.0};
Point(23) = {-0.020610, 0.749700, 0, 1.0};
Point(24) = {-0.025470, 0.749872, 0, 1.0};
Point(25) = {-0.030171, 0.749971, 0, 1.0};
Point(26) = {-0.034754, 0.750000, 0, 1.0};
Point(27) = {-0.039163, 0.749861, 0, 1.0};
Point(28) = {-0.043393, 0.749681, 0, 1.0};
Point(29) = {-0.047406, 0.749362, 0, 1.0};
Point(30) = {-0.051219, 0.749001, 0, 1.0};
Point(31) = {-0.054792, 0.748594, 0, 1.0};
Point(32) = {-0.058103, 0.748110, 0, 1.0};
Point(33) = {-0.061158, 0.747548, 0, 1.0};
Point(34) = {-0.063932, 0.746908, 0, 1.0};
Point(35) = {-0.066402, 0.746251, 0, 1.0};
Point(36) = {-0.068593, 0.745483, 0, 1.0};
Point(37) = {-0.070462, 0.744698, 0, 1.0};
Point(38) = {-0.071915, 0.743859, 0, 1.0};
Point(39) = {-0.073232, 0.743012, 0, 1.0};
Point(40) = {-0.074141, 0.741984, 0, 1.0};
Point(41) = {-0.074688, 0.741253, 0, 1.0};
Point(42) = {-0.074888, 0.740567, 0, 1.0};
Point(43) = {-0.074765, 0.739863, 0, 1.0};
Point(44) = {-0.074301, 0.739077, 0, 1.0};
Point(45) = {-0.073509, 0.737956, 0, 1.0};
Point(46) = {-0.072292, 0.736970, 0, 1.0};
Point(47) = {-0.070939, 0.735977, 0, 1.0};
Point(48) = {-0.069168, 0.734992, 0, 1.0};
Point(49) = {-0.067074, 0.733990, 0, 1.0};
Point(50) = {-0.064690, 0.733067, 0, 1.0};
Point(51) = {-0.062003, 0.732127, 0, 1.0};
Point(52) = {-0.059028, 0.731235, 0, 1.0};
Point(53) = {-0.055789, 0.730392, 0, 1.0};
Point(54) = {-0.052283, 0.729598, 0, 1.0};
Point(55) = {-0.048531, 0.728821, 0, 1.0};
Point(56) = {-0.044577, 0.728066, 0, 1.0};
Point(57) = {-0.040392, 0.727425, 0, 1.0};
Point(58) = {-0.036025, 0.726805, 0, 1.0};
Point(59) = {-0.031466, 0.726333, 0, 1.0};
Point(60) = {-0.026782, 0.725918, 0, 1.0};
Point(61) = {-0.021933, 0.725557, 0, 1.0};
Point(62) = {-0.016999, 0.725287, 0, 1.0};
Point(63) = {-0.011955, 0.725169, 0, 1.0};
Point(64) = {-0.006842, 0.725174, 0, 1.0};
Point(65) = {-0.001662, 0.725302, 0, 1.0};
Point(66) = {0.003521, 0.725494, 0, 1.0};
Point(67) = {0.008735, 0.725874, 0, 1.0};
Point(68) = {0.013914, 0.726350, 0, 1.0};
Point(69) = {0.019051, 0.726830, 0, 1.0};
Point(70) = {0.024133, 0.727375, 0, 1.0};
Point(71) = {0.029133, 0.727925, 0, 1.0};
Point(72) = {0.034006, 0.728387, 0, 1.0};
Point(73) = {0.038761, 0.728919, 0, 1.0};
Point(74) = {0.043352, 0.729397, 0, 1.0};
Point(75) = {0.047774, 0.729756, 0, 1.0};
Point(76) = {0.052014, 0.730158, 0, 1.0};
Point(77) = {0.056051, 0.730507, 0, 1.0};
Point(78) = {0.059847, 0.730806, 0, 1.0};
Point(79) = {0.063401, 0.731024, 0, 1.0};
Point(80) = {0.066669, 0.731257, 0, 1.0};
Point(81) = {0.069733, 0.731437, 0, 1.0};
Point(82) = {0.072479, 0.731572, 0, 1.0};
Point(83) = {0.074847, 0.731626, 0, 1.0};
Point(84) = {-0.074928, -0.733104, 0, 1.0};
Point(85) = {-0.072579, -0.733405, 0, 1.0};
Point(86) = {-0.069864, -0.733839, 0, 1.0};
Point(87) = {-0.066839, -0.734354, 0, 1.0};
Point(88) = {-0.063616, -0.734942, 0, 1.0};
Point(89) = {-0.060107, -0.735547, 0, 1.0};
Point(90) = {-0.056366, -0.736259, 0, 1.0};
Point(91) = {-0.052392, -0.737047, 0, 1.0};
Point(92) = {-0.048221, -0.737910, 0, 1.0};
Point(93) = {-0.043864, -0.738750, 0, 1.0};
Point(94) = {-0.039353, -0.739727, 0, 1.0};
Point(95) = {-0.034685, -0.740775, 0, 1.0};
Point(96) = {-0.029891, -0.741767, 0, 1.0};
Point(97) = {-0.024981, -0.742860, 0, 1.0};
Point(98) = {-0.019989, -0.743957, 0, 1.0};
Point(99) = {-0.014935, -0.744995, 0, 1.0};
Point(100) = {-0.009840, -0.746035, 0, 1.0};
Point(101) = {-0.004699, -0.746982, 0, 1.0};
Point(102) = {0.000433, -0.747739, 0, 1.0};
Point(103) = {0.005567, -0.748432, 0, 1.0};
Point(104) = {0.010649, -0.748996, 0, 1.0};
Point(105) = {0.015676, -0.749430, 0, 1.0};
Point(106) = {0.020610, -0.749700, 0, 1.0};
Point(107) = {0.025470, -0.749872, 0, 1.0};
Point(108) = {0.030171, -0.749971, 0, 1.0};
Point(109) = {0.034754, -0.750000, 0, 1.0};
Point(110) = {0.039163, -0.749861, 0, 1.0};
Point(111) = {0.043393, -0.749681, 0, 1.0};
Point(112) = {0.047406, -0.749362, 0, 1.0};
Point(113) = {0.051219, -0.749001, 0, 1.0};
Point(114) = {0.054792, -0.748594, 0, 1.0};
Point(115) = {0.058103, -0.748110, 0, 1.0};
Point(116) = {0.061158, -0.747548, 0, 1.0};
Point(117) = {0.063932, -0.746908, 0, 1.0};
Point(118) = {0.066402, -0.746251, 0, 1.0};
Point(119) = {0.068593, -0.745483, 0, 1.0};
Point(120) = {0.070462, -0.744698, 0, 1.0};
Point(121) = {0.071915, -0.743859, 0, 1.0};
Point(122) = {0.073232, -0.743012, 0, 1.0};
Point(123) = {0.074141, -0.741984, 0, 1.0};
Point(124) = {0.074688, -0.741253, 0, 1.0};
Point(125) = {0.074888, -0.740567, 0, 1.0};
Point(126) = {0.074765, -0.739863, 0, 1.0};
Point(127) = {0.074301, -0.739077, 0, 1.0};
Point(128) = {0.073509, -0.737956, 0, 1.0};
Point(129) = {0.072292, -0.736970, 0, 1.0};
Point(130) = {0.070939, -0.735977, 0, 1.0};
Point(131) = {0.069168, -0.734992, 0, 1.0};
Point(132) = {0.067074, -0.733990, 0, 1.0};
Point(133) = {0.064690, -0.733067, 0, 1.0};
Point(134) = {0.062003, -0.732127, 0, 1.0};
Point(135) = {0.059028, -0.731235, 0, 1.0};
Point(136) = {0.055789, -0.730392, 0, 1.0};
Point(137) = {0.052283, -0.729598, 0, 1.0};
Point(138) = {0.048531, -0.728821, 0, 1.0};
Point(139) = {0.044577, -0.728066, 0, 1.0};
Point(140) = {0.040392, -0.727425, 0, 1.0};
Point(141) = {0.036025, -0.726805, 0, 1.0};
Point(142) = {0.031466, -0.726333, 0, 1.0};
Point(143) = {0.026782, -0.725918, 0, 1.0};
Point(144) = {0.021933, -0.725557, 0, 1.0};
Point(145) = {0.016999, -0.725287, 0, 1.0};
Point(146) = {0.011955, -0.725169, 0, 1.0};
Point(147) = {0.006842, -0.725174, 0, 1.0};
Point(148) = {0.001662, -0.725302, 0, 1.0};
Point(149) = {-0.003521, -0.725494, 0, 1.0};
Point(150) = {-0.008735, -0.725874, 0, 1.0};
Point(151) = {-0.013914, -0.726350, 0, 1.0};
Point(152) = {-0.019051, -0.726830, 0, 1.0};
Point(153) = {-0.024133, -0.727375, 0, 1.0};
Point(154) = {-0.029133, -0.727925, 0, 1.0};
Point(155) = {-0.034006, -0.728387, 0, 1.0};
Point(156) = {-0.038761, -0.728919, 0, 1.0};
Point(157) = {-0.043352, -0.729397, 0, 1.0};
Point(158) = {-0.047774, -0.729756, 0, 1.0};
Point(159) = {-0.052014, -0.730158, 0, 1.0};
Point(160) = {-0.056051, -0.730507, 0, 1.0};
Point(161) = {-0.059847, -0.730806, 0, 1.0};
Point(162) = {-0.063401, -0.731024, 0, 1.0};
Point(163) = {-0.066669, -0.731257, 0, 1.0};
Point(164) = {-0.069733, -0.731437, 0, 1.0};
Point(165) = {-0.072479, -0.731572, 0, 1.0};
Point(166) = {-0.074847, -0.731626, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074585, 0.731842, 0, 1.0};
Point(2) = {0.071249, 0.731804, 0, 1.0};
Point(3) = {0.066762, 0.731771, 0, 1.0};
Point(4) = {0.061422, 0.731714, 0, 1.0};
Point(5) = {0.055324, 0.731590, 0, 1.0};
Point(6) = {0.048574, 0.731381, 0, 1.0};
Point(7) = {0.041285, 0.731083, 0, 1.0};
Point(8) = {0.033583, 0.730701, 0, 1.0};
Point(9) = {0.025587, 0.730254, 0, 1.0};
Point(10) = {0.017423, 0.729766, 0, 1.0};
Point(11) = {0.009208, 0.729277, 0, 1.0};
Point(12) = {0.001053, 0.728823, 0, 1.0};
Point(13) = {-0.006943, 0.728454, 0, 1.0};
Point(14) = {-0.014685, 0.728212, 0, 1.0};
Point(15) = {-0.022096, 0.728141, 0, 1.0};
Point(16) = {-0.029107, 0.728287, 0, 1.0};
Point(17) = {-0.035657, 0.728696, 0, 1.0};
Point(18) = {-0.041732, 0.729424, 0, 1.0};
Point(19) = {-0.047355, 0.730469, 0, 1.0};
Point(20) = {-0.052520, 0.731787, 0, 1.0};
Point(21) = {-0.057212, 0.733333, 0, 1.0};
Point(22) = {-0.061402, 0.735052, 0, 1.0};
Point(23) = {-0.065059, 0.736891, 0, 1.0};
Point(24) = {-0.068156, 0.738804, 0, 1.0};
Point(25) = {-0.070669, 0.740734, 0, 1.0};
Point(26) = {-0.072581, 0.742629, 0, 1.0};
Point(27) = {-0.073878, 0.744421, 0, 1.0};
Point(28) = {-0.074555, 0.746029, 0, 1.0};
Point(29) = {-0.074630, 0.746426, 0, 1.0};
Point(30) = {-0.074658, 0.746822, 0, 1.0};
Point(31) = {-0.074642, 0.747067, 0, 1.0};
Point(32) = {-0.074601, 0.747294, 0, 1.0};
Point(33) = {-0.074570, 0.747399, 0, 1.0};
Point(34) = {-0.074531, 0.747496, 0, 1.0};
Point(35) = {-0.074482, 0.747584, 0, 1.0};
Point(36) = {-0.074416, 0.747665, 0, 1.0};
Point(37) = {-0.074337, 0.747744, 0, 1.0};
Point(38) = {-0.074245, 0.747819, 0, 1.0};
Point(39) = {-0.074025, 0.747968, 0, 1.0};
Point(40) = {-0.073762, 0.748111, 0, 1.0};
Point(41) = {-0.073295, 0.748315, 0, 1.0};
Point(42) = {-0.071838, 0.748769, 0, 1.0};
Point(43) = {-0.069071, 0.749280, 0, 1.0};
Point(44) = {-0.065468, 0.749646, 0, 1.0};
Point(45) = {-0.061073, 0.749873, 0, 1.0};
Point(46) = {-0.055926, 0.749982, 0, 1.0};
Point(47) = {-0.050099, 0.750000, 0, 1.0};
Point(48) = {-0.043685, 0.749944, 0, 1.0};
Point(49) = {-0.036780, 0.749809, 0, 1.0};
Point(50) = {-0.029480, 0.749588, 0, 1.0};
Point(51) = {-0.021874, 0.749267, 0, 1.0};
Point(52) = {-0.014042, 0.748839, 0, 1.0};
Point(53) = {-0.006069, 0.748302, 0, 1.0};
Point(54) = {0.001957, 0.747657, 0, 1.0};
Point(55) = {0.009949, 0.746905, 0, 1.0};
Point(56) = {0.017821, 0.746055, 0, 1.0};
Point(57) = {0.025485, 0.745110, 0, 1.0};
Point(58) = {0.032861, 0.744075, 0, 1.0};
Point(59) = {0.039864, 0.742953, 0, 1.0};
Point(60) = {0.046417, 0.741748, 0, 1.0};
Point(61) = {0.052436, 0.740435, 0, 1.0};
Point(62) = {0.057917, 0.738952, 0, 1.0};
Point(63) = {0.062951, 0.737340, 0, 1.0};
Point(64) = {0.067546, 0.735765, 0, 1.0};
Point(65) = {0.071603, 0.734374, 0, 1.0};
Point(66) = {0.074730, 0.733320, 0, 1.0};
Point(67) = {-0.074585, -0.731842, 0, 1.0};
Point(68) = {-0.071249, -0.731804, 0, 1.0};
Point(69) = {-0.066762, -0.731771, 0, 1.0};
Point(70) = {-0.061422, -0.731714, 0, 1.0};
Point(71) = {-0.055324, -0.731590, 0, 1.0};
Point(72) = {-0.048574, -0.731381, 0, 1.0};
Point(73) = {-0.041285, -0.731083, 0, 1.0};
Point(74) = {-0.033583, -0.730701, 0, 1.0};
Point(75) = {-0.025587, -0.730254, 0, 1.0};
Point(76) = {-0.017423, -0.729766, 0, 1.0};
Point(77) = {-0.009208, -0.729277, 0, 1.0};
Point(78) = {-0.001053, -0.728823, 0, 1.0};
Point(79) = {0.006943, -0.728454, 0, 1.0};
Point(80) = {0.014685, -0.728212, 0, 1.0};
Point(81) = {0.022096, -0.728141, 0, 1.0};
Point(82) = {0.029107, -0.728287, 0, 1.0};
Point(83) = {0.035657, -0.728696, 0, 1.0};
Point(84) = {0.041732, -0.729424, 0, 1.0};
Point(85) = {0.047355, -0.730469, 0, 1.0};
Point(86) = {0.052520, -0.731787, 0, 1.0};
Point(87) = {0.057212, -0.733333, 0, 1.0};
Point(88) = {0.061402, -0.735052, 0, 1.0};
Point(89) = {0.065059, -0.736891, 0, 1.0};
Point(90) = {0.068156, -0.738804, 0, 1.0};
Point(91) = {0.070669, -0.740734, 0, 1.0};
Point(92) = {0.072581, -0.742629, 0, 1.0};
Point(93) = {0.073878, -0.744421, 0, 1.0};
Point(94) = {0.074555, -0.746029, 0, 1.0};
Point(95) = {0.074630, -0.746426, 0, 1.0};
Point(96) = {0.074658, -0.746822, 0, 1.0};
Point(97) = {0.074642, -0.747067, 0, 1.0};
Point(98) = {0.074601, -0.747294, 0, 1.0};
Point(99) = {0.074570, -0.747399, 0, 1.0};
Point(100) = {0.074531, -0.747496, 0, 1.0};
Point(101) = {0.074482, -0.747584, 0, 1.0};
Point(102) = {0.074416, -0.747665, 0, 1.0};
Point(103) = {0.074337, -0.747744, 0, 1.0};
Point(104) = {0.074245, -0.747819, 0, 1.0};
Point(105) = {0.074025, -0.747968, 0, 1.0};
Point(106) = {0.073762, -0.748111, 0, 1.0};
Point(107) = {0.073295, -0.748315, 0, 1.0};
Point(108) = {0.071838, -0.748769, 0, 1.0};
Point(109) = {0.069071, -0.749280, 0, 1.0};
Point(110) = {0.065468, -0.749646, 0, 1.0};
Point(111) = {0.061073, -0.749873, 0, 1.0};
Point(112) = {0.055926, -0.749982, 0, 1.0};
Point(113) = {0.050099, -0.750000, 0, 1.0};
Point(114) = {0.043685, -0.749944, 0, 1.0};
Point(115) = {0.036780, -0.749809, 0, 1.0};
Point(116) = {0.029480, -0.749588, 0, 1.0};
Point(117) = {0.021874, -0.749267, 0, 1.0};
Point(118) = {0.014042, -0.748839, 0, 1.0};
Point(119) = {0.006069, -0.748302, 0, 1.0};
Point(120) = {-0.001957, -0.747657, 0, 1.0};
Point(121) = {-0.009949, -0.746905, 0, 1.0};
Point(122) = {-0.017821, -0.746055, 0, 1.0};
Point(123) = {-0.025485, -0.745110, 0, 1.0};
Point(124) = {-0.032861, -0.744075, 0, 1.0};
Point(125) = {-0.039864, -0.742953, 0, 1.0};
Point(126) = {-0.046417, -0.741748, 0, 1.0};
Point(127) = {-0.052436, -0.740435, 0, 1.0};
Point(128) = {-0.057917, -0.738952, 0, 1.0};
Point(129) = {-0.062951, -0.737340, 0, 1.0};
Point(130) = {-0.067546, -0.735765, 0, 1.0};
Point(131) = {-0.071603, -0.734374, 0, 1.0};
Point(132) = {-0.074730, -0.733320, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:83};
Spline(6) = {83:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
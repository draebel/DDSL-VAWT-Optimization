SetFactory("OpenCASCADE");

Point(1) = {0.074108, 0.726055, 0, 1.0};
Point(2) = {0.070217, 0.726215, 0, 1.0};
Point(3) = {0.064257, 0.726417, 0, 1.0};
Point(4) = {0.057652, 0.726589, 0, 1.0};
Point(5) = {0.050516, 0.726729, 0, 1.0};
Point(6) = {0.042962, 0.726861, 0, 1.0};
Point(7) = {0.035093, 0.727011, 0, 1.0};
Point(8) = {0.027010, 0.727208, 0, 1.0};
Point(9) = {0.018806, 0.727481, 0, 1.0};
Point(10) = {0.010569, 0.727863, 0, 1.0};
Point(11) = {0.002372, 0.728376, 0, 1.0};
Point(12) = {-0.005712, 0.729036, 0, 1.0};
Point(13) = {-0.013619, 0.729848, 0, 1.0};
Point(14) = {-0.021283, 0.730813, 0, 1.0};
Point(15) = {-0.028644, 0.731919, 0, 1.0};
Point(16) = {-0.035638, 0.733149, 0, 1.0};
Point(17) = {-0.042198, 0.734484, 0, 1.0};
Point(18) = {-0.048263, 0.735909, 0, 1.0};
Point(19) = {-0.053783, 0.737406, 0, 1.0};
Point(20) = {-0.058710, 0.738952, 0, 1.0};
Point(21) = {-0.063002, 0.740522, 0, 1.0};
Point(22) = {-0.066627, 0.742090, 0, 1.0};
Point(23) = {-0.069562, 0.743628, 0, 1.0};
Point(24) = {-0.071790, 0.745098, 0, 1.0};
Point(25) = {-0.073310, 0.746455, 0, 1.0};
Point(26) = {-0.074023, 0.747425, 0, 1.0};
Point(27) = {-0.074163, 0.747741, 0, 1.0};
Point(28) = {-0.074239, 0.748024, 0, 1.0};
Point(29) = {-0.074253, 0.748191, 0, 1.0};
Point(30) = {-0.074228, 0.748332, 0, 1.0};
Point(31) = {-0.074151, 0.748458, 0, 1.0};
Point(32) = {-0.074024, 0.748581, 0, 1.0};
Point(33) = {-0.073760, 0.748764, 0, 1.0};
Point(34) = {-0.073417, 0.748943, 0, 1.0};
Point(35) = {-0.073171, 0.749050, 0, 1.0};
Point(36) = {-0.071341, 0.749540, 0, 1.0};
Point(37) = {-0.068707, 0.749866, 0, 1.0};
Point(38) = {-0.065305, 0.750000, 0, 1.0};
Point(39) = {-0.061165, 0.749919, 0, 1.0};
Point(40) = {-0.056313, 0.749606, 0, 1.0};
Point(41) = {-0.050769, 0.749061, 0, 1.0};
Point(42) = {-0.044573, 0.748312, 0, 1.0};
Point(43) = {-0.037788, 0.747382, 0, 1.0};
Point(44) = {-0.030486, 0.746298, 0, 1.0};
Point(45) = {-0.022751, 0.745079, 0, 1.0};
Point(46) = {-0.014665, 0.743746, 0, 1.0};
Point(47) = {-0.006318, 0.742320, 0, 1.0};
Point(48) = {0.002199, 0.740826, 0, 1.0};
Point(49) = {0.010790, 0.739286, 0, 1.0};
Point(50) = {0.019359, 0.737727, 0, 1.0};
Point(51) = {0.027806, 0.736169, 0, 1.0};
Point(52) = {0.036038, 0.734635, 0, 1.0};
Point(53) = {0.043964, 0.733147, 0, 1.0};
Point(54) = {0.051493, 0.731735, 0, 1.0};
Point(55) = {0.058532, 0.730421, 0, 1.0};
Point(56) = {0.064995, 0.729228, 0, 1.0};
Point(57) = {0.070796, 0.728172, 0, 1.0};
Point(58) = {0.074320, 0.727542, 0, 1.0};
Point(59) = {-0.074108, -0.726055, 0, 1.0};
Point(60) = {-0.070217, -0.726215, 0, 1.0};
Point(61) = {-0.064257, -0.726417, 0, 1.0};
Point(62) = {-0.057652, -0.726589, 0, 1.0};
Point(63) = {-0.050516, -0.726729, 0, 1.0};
Point(64) = {-0.042962, -0.726861, 0, 1.0};
Point(65) = {-0.035093, -0.727011, 0, 1.0};
Point(66) = {-0.027010, -0.727208, 0, 1.0};
Point(67) = {-0.018806, -0.727481, 0, 1.0};
Point(68) = {-0.010569, -0.727863, 0, 1.0};
Point(69) = {-0.002372, -0.728376, 0, 1.0};
Point(70) = {0.005712, -0.729036, 0, 1.0};
Point(71) = {0.013619, -0.729848, 0, 1.0};
Point(72) = {0.021283, -0.730813, 0, 1.0};
Point(73) = {0.028644, -0.731919, 0, 1.0};
Point(74) = {0.035638, -0.733149, 0, 1.0};
Point(75) = {0.042198, -0.734484, 0, 1.0};
Point(76) = {0.048263, -0.735909, 0, 1.0};
Point(77) = {0.053783, -0.737406, 0, 1.0};
Point(78) = {0.058710, -0.738952, 0, 1.0};
Point(79) = {0.063002, -0.740522, 0, 1.0};
Point(80) = {0.066627, -0.742090, 0, 1.0};
Point(81) = {0.069562, -0.743628, 0, 1.0};
Point(82) = {0.071790, -0.745098, 0, 1.0};
Point(83) = {0.073310, -0.746455, 0, 1.0};
Point(84) = {0.074023, -0.747425, 0, 1.0};
Point(85) = {0.074163, -0.747741, 0, 1.0};
Point(86) = {0.074239, -0.748024, 0, 1.0};
Point(87) = {0.074253, -0.748191, 0, 1.0};
Point(88) = {0.074228, -0.748332, 0, 1.0};
Point(89) = {0.074151, -0.748458, 0, 1.0};
Point(90) = {0.074024, -0.748581, 0, 1.0};
Point(91) = {0.073760, -0.748764, 0, 1.0};
Point(92) = {0.073417, -0.748943, 0, 1.0};
Point(93) = {0.073171, -0.749050, 0, 1.0};
Point(94) = {0.071341, -0.749540, 0, 1.0};
Point(95) = {0.068707, -0.749866, 0, 1.0};
Point(96) = {0.065305, -0.750000, 0, 1.0};
Point(97) = {0.061165, -0.749919, 0, 1.0};
Point(98) = {0.056313, -0.749606, 0, 1.0};
Point(99) = {0.050769, -0.749061, 0, 1.0};
Point(100) = {0.044573, -0.748312, 0, 1.0};
Point(101) = {0.037788, -0.747382, 0, 1.0};
Point(102) = {0.030486, -0.746298, 0, 1.0};
Point(103) = {0.022751, -0.745079, 0, 1.0};
Point(104) = {0.014665, -0.743746, 0, 1.0};
Point(105) = {0.006318, -0.742320, 0, 1.0};
Point(106) = {-0.002199, -0.740826, 0, 1.0};
Point(107) = {-0.010790, -0.739286, 0, 1.0};
Point(108) = {-0.019359, -0.737727, 0, 1.0};
Point(109) = {-0.027806, -0.736169, 0, 1.0};
Point(110) = {-0.036038, -0.734635, 0, 1.0};
Point(111) = {-0.043964, -0.733147, 0, 1.0};
Point(112) = {-0.051493, -0.731735, 0, 1.0};
Point(113) = {-0.058532, -0.730421, 0, 1.0};
Point(114) = {-0.064995, -0.729228, 0, 1.0};
Point(115) = {-0.070796, -0.728172, 0, 1.0};
Point(116) = {-0.074320, -0.727542, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:44};
Spline(3) = {44:58};
Spline(4) = {58,1};

// Lines: second blade (splines 5-8)
Spline(5) = {59:74};
Spline(6) = {74:102};
Spline(7) = {102:116};
Spline(8) = {116,59};

// Outer domain (points 20001-4 and lines)
Point(117) = {-13.50000000, -15.00000000, 0, 1.0};
Point(118) = {-13.50000000, 15.00000000, 0, 1.0};
Point(119) = {13.50000000, 15.00000000, 0, 1.0};
Point(120) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {117, 118};
Line(12) = {118, 119};
Line(13) = {119, 120};
Line(14) = {117, 120};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
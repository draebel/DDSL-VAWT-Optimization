SetFactory("OpenCASCADE");

Point(1) = {0.075013, 0.729642, 0, 1.0};
Point(2) = {0.074052, 0.729866, 0, 1.0};
Point(3) = {0.068923, 0.731222, 0, 1.0};
Point(4) = {0.062681, 0.732922, 0, 1.0};
Point(5) = {0.059174, 0.733899, 0, 1.0};
Point(6) = {0.055430, 0.734961, 0, 1.0};
Point(7) = {0.051465, 0.736088, 0, 1.0};
Point(8) = {0.047297, 0.737284, 0, 1.0};
Point(9) = {0.042940, 0.738519, 0, 1.0};
Point(10) = {0.038416, 0.739787, 0, 1.0};
Point(11) = {0.033743, 0.741067, 0, 1.0};
Point(12) = {0.028942, 0.742357, 0, 1.0};
Point(13) = {0.024033, 0.743618, 0, 1.0};
Point(14) = {0.019036, 0.744859, 0, 1.0};
Point(15) = {0.013972, 0.746023, 0, 1.0};
Point(16) = {0.008864, 0.747125, 0, 1.0};
Point(17) = {0.003734, 0.748095, 0, 1.0};
Point(18) = {-0.001398, 0.748939, 0, 1.0};
Point(19) = {-0.006509, 0.749566, 0, 1.0};
Point(20) = {-0.011580, 0.749960, 0, 1.0};
Point(21) = {-0.016586, 0.750000, 0, 1.0};
Point(22) = {-0.021508, 0.749800, 0, 1.0};
Point(23) = {-0.026324, 0.749379, 0, 1.0};
Point(24) = {-0.031043, 0.748797, 0, 1.0};
Point(25) = {-0.035553, 0.748049, 0, 1.0};
Point(26) = {-0.039927, 0.747180, 0, 1.0};
Point(27) = {-0.044114, 0.746181, 0, 1.0};
Point(28) = {-0.048097, 0.745089, 0, 1.0};
Point(29) = {-0.051859, 0.743899, 0, 1.0};
Point(30) = {-0.055385, 0.742643, 0, 1.0};
Point(31) = {-0.058659, 0.741324, 0, 1.0};
Point(32) = {-0.061663, 0.739967, 0, 1.0};
Point(33) = {-0.064390, 0.738580, 0, 1.0};
Point(34) = {-0.066827, 0.737191, 0, 1.0};
Point(35) = {-0.068960, 0.735810, 0, 1.0};
Point(36) = {-0.070783, 0.734469, 0, 1.0};
Point(37) = {-0.072288, 0.733180, 0, 1.0};
Point(38) = {-0.073462, 0.731974, 0, 1.0};
Point(39) = {-0.074309, 0.730889, 0, 1.0};
Point(40) = {-0.074821, 0.729947, 0, 1.0};
Point(41) = {-0.074997, 0.728973, 0, 1.0};
Point(42) = {-0.074834, 0.728415, 0, 1.0};
Point(43) = {-0.074335, 0.727735, 0, 1.0};
Point(44) = {-0.073503, 0.727057, 0, 1.0};
Point(45) = {-0.072341, 0.726375, 0, 1.0};
Point(46) = {-0.070856, 0.725693, 0, 1.0};
Point(47) = {-0.069049, 0.725012, 0, 1.0};
Point(48) = {-0.066934, 0.724344, 0, 1.0};
Point(49) = {-0.064514, 0.723689, 0, 1.0};
Point(50) = {-0.061804, 0.723056, 0, 1.0};
Point(51) = {-0.058815, 0.722453, 0, 1.0};
Point(52) = {-0.055558, 0.721881, 0, 1.0};
Point(53) = {-0.052047, 0.721350, 0, 1.0};
Point(54) = {-0.048298, 0.720859, 0, 1.0};
Point(55) = {-0.044328, 0.720422, 0, 1.0};
Point(56) = {-0.040153, 0.720035, 0, 1.0};
Point(57) = {-0.035788, 0.719719, 0, 1.0};
Point(58) = {-0.031287, 0.719463, 0, 1.0};
Point(59) = {-0.026574, 0.719297, 0, 1.0};
Point(60) = {-0.021763, 0.719210, 0, 1.0};
Point(61) = {-0.016842, 0.719249, 0, 1.0};
Point(62) = {-0.011834, 0.719423, 0, 1.0};
Point(63) = {-0.006756, 0.719839, 0, 1.0};
Point(64) = {-0.001635, 0.720386, 0, 1.0};
Point(65) = {0.003509, 0.721047, 0, 1.0};
Point(66) = {0.008653, 0.721738, 0, 1.0};
Point(67) = {0.013776, 0.722472, 0, 1.0};
Point(68) = {0.018856, 0.723186, 0, 1.0};
Point(69) = {0.023869, 0.723897, 0, 1.0};
Point(70) = {0.028794, 0.724564, 0, 1.0};
Point(71) = {0.033611, 0.725198, 0, 1.0};
Point(72) = {0.038299, 0.725775, 0, 1.0};
Point(73) = {0.042839, 0.726296, 0, 1.0};
Point(74) = {0.047209, 0.726756, 0, 1.0};
Point(75) = {0.051391, 0.727153, 0, 1.0};
Point(76) = {0.055368, 0.727480, 0, 1.0};
Point(77) = {0.059123, 0.727750, 0, 1.0};
Point(78) = {0.062640, 0.727954, 0, 1.0};
Point(79) = {0.068898, 0.728175, 0, 1.0};
Point(80) = {0.074038, 0.728186, 0, 1.0};
Point(81) = {0.075001, 0.728157, 0, 1.0};
Point(82) = {-0.075013, -0.729642, 0, 1.0};
Point(83) = {-0.074052, -0.729866, 0, 1.0};
Point(84) = {-0.068923, -0.731222, 0, 1.0};
Point(85) = {-0.062681, -0.732922, 0, 1.0};
Point(86) = {-0.059174, -0.733899, 0, 1.0};
Point(87) = {-0.055430, -0.734961, 0, 1.0};
Point(88) = {-0.051465, -0.736088, 0, 1.0};
Point(89) = {-0.047297, -0.737284, 0, 1.0};
Point(90) = {-0.042940, -0.738519, 0, 1.0};
Point(91) = {-0.038416, -0.739787, 0, 1.0};
Point(92) = {-0.033743, -0.741067, 0, 1.0};
Point(93) = {-0.028942, -0.742357, 0, 1.0};
Point(94) = {-0.024033, -0.743618, 0, 1.0};
Point(95) = {-0.019036, -0.744859, 0, 1.0};
Point(96) = {-0.013972, -0.746023, 0, 1.0};
Point(97) = {-0.008864, -0.747125, 0, 1.0};
Point(98) = {-0.003734, -0.748095, 0, 1.0};
Point(99) = {0.001398, -0.748939, 0, 1.0};
Point(100) = {0.006509, -0.749566, 0, 1.0};
Point(101) = {0.011580, -0.749960, 0, 1.0};
Point(102) = {0.016586, -0.750000, 0, 1.0};
Point(103) = {0.021508, -0.749800, 0, 1.0};
Point(104) = {0.026324, -0.749379, 0, 1.0};
Point(105) = {0.031043, -0.748797, 0, 1.0};
Point(106) = {0.035553, -0.748049, 0, 1.0};
Point(107) = {0.039927, -0.747180, 0, 1.0};
Point(108) = {0.044114, -0.746181, 0, 1.0};
Point(109) = {0.048097, -0.745089, 0, 1.0};
Point(110) = {0.051859, -0.743899, 0, 1.0};
Point(111) = {0.055385, -0.742643, 0, 1.0};
Point(112) = {0.058659, -0.741324, 0, 1.0};
Point(113) = {0.061663, -0.739967, 0, 1.0};
Point(114) = {0.064390, -0.738580, 0, 1.0};
Point(115) = {0.066827, -0.737191, 0, 1.0};
Point(116) = {0.068960, -0.735810, 0, 1.0};
Point(117) = {0.070783, -0.734469, 0, 1.0};
Point(118) = {0.072288, -0.733180, 0, 1.0};
Point(119) = {0.073462, -0.731974, 0, 1.0};
Point(120) = {0.074309, -0.730889, 0, 1.0};
Point(121) = {0.074821, -0.729947, 0, 1.0};
Point(122) = {0.074997, -0.728973, 0, 1.0};
Point(123) = {0.074834, -0.728415, 0, 1.0};
Point(124) = {0.074335, -0.727735, 0, 1.0};
Point(125) = {0.073503, -0.727057, 0, 1.0};
Point(126) = {0.072341, -0.726375, 0, 1.0};
Point(127) = {0.070856, -0.725693, 0, 1.0};
Point(128) = {0.069049, -0.725012, 0, 1.0};
Point(129) = {0.066934, -0.724344, 0, 1.0};
Point(130) = {0.064514, -0.723689, 0, 1.0};
Point(131) = {0.061804, -0.723056, 0, 1.0};
Point(132) = {0.058815, -0.722453, 0, 1.0};
Point(133) = {0.055558, -0.721881, 0, 1.0};
Point(134) = {0.052047, -0.721350, 0, 1.0};
Point(135) = {0.048298, -0.720859, 0, 1.0};
Point(136) = {0.044328, -0.720422, 0, 1.0};
Point(137) = {0.040153, -0.720035, 0, 1.0};
Point(138) = {0.035788, -0.719719, 0, 1.0};
Point(139) = {0.031287, -0.719463, 0, 1.0};
Point(140) = {0.026574, -0.719297, 0, 1.0};
Point(141) = {0.021763, -0.719210, 0, 1.0};
Point(142) = {0.016842, -0.719249, 0, 1.0};
Point(143) = {0.011834, -0.719423, 0, 1.0};
Point(144) = {0.006756, -0.719839, 0, 1.0};
Point(145) = {0.001635, -0.720386, 0, 1.0};
Point(146) = {-0.003509, -0.721047, 0, 1.0};
Point(147) = {-0.008653, -0.721738, 0, 1.0};
Point(148) = {-0.013776, -0.722472, 0, 1.0};
Point(149) = {-0.018856, -0.723186, 0, 1.0};
Point(150) = {-0.023869, -0.723897, 0, 1.0};
Point(151) = {-0.028794, -0.724564, 0, 1.0};
Point(152) = {-0.033611, -0.725198, 0, 1.0};
Point(153) = {-0.038299, -0.725775, 0, 1.0};
Point(154) = {-0.042839, -0.726296, 0, 1.0};
Point(155) = {-0.047209, -0.726756, 0, 1.0};
Point(156) = {-0.051391, -0.727153, 0, 1.0};
Point(157) = {-0.055368, -0.727480, 0, 1.0};
Point(158) = {-0.059123, -0.727750, 0, 1.0};
Point(159) = {-0.062640, -0.727954, 0, 1.0};
Point(160) = {-0.068898, -0.728175, 0, 1.0};
Point(161) = {-0.074038, -0.728186, 0, 1.0};
Point(162) = {-0.075001, -0.728157, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074352, 0.728410, 0, 1.0};
Point(2) = {0.072035, 0.728318, 0, 1.0};
Point(3) = {0.068896, 0.728203, 0, 1.0};
Point(4) = {0.065663, 0.728096, 0, 1.0};
Point(5) = {0.062401, 0.728003, 0, 1.0};
Point(6) = {0.059126, 0.727924, 0, 1.0};
Point(7) = {0.055843, 0.727861, 0, 1.0};
Point(8) = {0.052555, 0.727812, 0, 1.0};
Point(9) = {0.049263, 0.727776, 0, 1.0};
Point(10) = {0.045970, 0.727755, 0, 1.0};
Point(11) = {0.042679, 0.727748, 0, 1.0};
Point(12) = {0.039391, 0.727755, 0, 1.0};
Point(13) = {0.036108, 0.727778, 0, 1.0};
Point(14) = {0.032829, 0.727819, 0, 1.0};
Point(15) = {0.029554, 0.727878, 0, 1.0};
Point(16) = {0.026280, 0.727956, 0, 1.0};
Point(17) = {0.023006, 0.728054, 0, 1.0};
Point(18) = {0.019731, 0.728172, 0, 1.0};
Point(19) = {0.016455, 0.728310, 0, 1.0};
Point(20) = {0.013176, 0.728467, 0, 1.0};
Point(21) = {0.009900, 0.728643, 0, 1.0};
Point(22) = {0.006627, 0.728838, 0, 1.0};
Point(23) = {0.003362, 0.729053, 0, 1.0};
Point(24) = {0.000109, 0.729290, 0, 1.0};
Point(25) = {-0.003132, 0.729549, 0, 1.0};
Point(26) = {-0.006358, 0.729833, 0, 1.0};
Point(27) = {-0.009575, 0.730145, 0, 1.0};
Point(28) = {-0.012781, 0.730485, 0, 1.0};
Point(29) = {-0.015987, 0.730856, 0, 1.0};
Point(30) = {-0.019189, 0.731256, 0, 1.0};
Point(31) = {-0.022385, 0.731685, 0, 1.0};
Point(32) = {-0.025575, 0.732142, 0, 1.0};
Point(33) = {-0.028757, 0.732629, 0, 1.0};
Point(34) = {-0.031928, 0.733145, 0, 1.0};
Point(35) = {-0.035085, 0.733691, 0, 1.0};
Point(36) = {-0.038223, 0.734268, 0, 1.0};
Point(37) = {-0.041337, 0.734875, 0, 1.0};
Point(38) = {-0.044418, 0.735513, 0, 1.0};
Point(39) = {-0.047459, 0.736187, 0, 1.0};
Point(40) = {-0.050456, 0.736899, 0, 1.0};
Point(41) = {-0.053409, 0.737652, 0, 1.0};
Point(42) = {-0.056300, 0.738444, 0, 1.0};
Point(43) = {-0.059099, 0.739271, 0, 1.0};
Point(44) = {-0.061762, 0.740125, 0, 1.0};
Point(45) = {-0.064231, 0.740992, 0, 1.0};
Point(46) = {-0.066443, 0.741853, 0, 1.0};
Point(47) = {-0.068329, 0.742669, 0, 1.0};
Point(48) = {-0.069856, 0.743407, 0, 1.0};
Point(49) = {-0.071048, 0.744049, 0, 1.0};
Point(50) = {-0.071963, 0.744600, 0, 1.0};
Point(51) = {-0.072670, 0.745075, 0, 1.0};
Point(52) = {-0.073217, 0.745493, 0, 1.0};
Point(53) = {-0.073643, 0.745867, 0, 1.0};
Point(54) = {-0.073971, 0.746209, 0, 1.0};
Point(55) = {-0.074211, 0.746527, 0, 1.0};
Point(56) = {-0.074370, 0.746824, 0, 1.0};
Point(57) = {-0.074449, 0.747102, 0, 1.0};
Point(58) = {-0.074449, 0.747357, 0, 1.0};
Point(59) = {-0.074370, 0.747601, 0, 1.0};
Point(60) = {-0.074206, 0.747843, 0, 1.0};
Point(61) = {-0.073953, 0.748073, 0, 1.0};
Point(62) = {-0.073610, 0.748291, 0, 1.0};
Point(63) = {-0.073174, 0.748501, 0, 1.0};
Point(64) = {-0.072631, 0.748709, 0, 1.0};
Point(65) = {-0.071956, 0.748918, 0, 1.0};
Point(66) = {-0.071108, 0.749131, 0, 1.0};
Point(67) = {-0.070033, 0.749349, 0, 1.0};
Point(68) = {-0.068663, 0.749563, 0, 1.0};
Point(69) = {-0.066941, 0.749756, 0, 1.0};
Point(70) = {-0.064853, 0.749905, 0, 1.0};
Point(71) = {-0.062432, 0.749988, 0, 1.0};
Point(72) = {-0.059745, 0.750000, 0, 1.0};
Point(73) = {-0.056857, 0.749947, 0, 1.0};
Point(74) = {-0.053833, 0.749843, 0, 1.0};
Point(75) = {-0.050728, 0.749697, 0, 1.0};
Point(76) = {-0.047572, 0.749516, 0, 1.0};
Point(77) = {-0.044388, 0.749306, 0, 1.0};
Point(78) = {-0.041183, 0.749068, 0, 1.0};
Point(79) = {-0.037961, 0.748805, 0, 1.0};
Point(80) = {-0.034724, 0.748519, 0, 1.0};
Point(81) = {-0.031477, 0.748211, 0, 1.0};
Point(82) = {-0.028222, 0.747884, 0, 1.0};
Point(83) = {-0.024964, 0.747540, 0, 1.0};
Point(84) = {-0.021704, 0.747177, 0, 1.0};
Point(85) = {-0.018446, 0.746798, 0, 1.0};
Point(86) = {-0.015187, 0.746401, 0, 1.0};
Point(87) = {-0.011931, 0.745988, 0, 1.0};
Point(88) = {-0.008675, 0.745557, 0, 1.0};
Point(89) = {-0.005420, 0.745111, 0, 1.0};
Point(90) = {-0.002164, 0.744647, 0, 1.0};
Point(91) = {0.001095, 0.744168, 0, 1.0};
Point(92) = {0.004357, 0.743673, 0, 1.0};
Point(93) = {0.007623, 0.743163, 0, 1.0};
Point(94) = {0.010892, 0.742639, 0, 1.0};
Point(95) = {0.014165, 0.742101, 0, 1.0};
Point(96) = {0.017437, 0.741553, 0, 1.0};
Point(97) = {0.020709, 0.740993, 0, 1.0};
Point(98) = {0.023977, 0.740423, 0, 1.0};
Point(99) = {0.027239, 0.739842, 0, 1.0};
Point(100) = {0.030494, 0.739251, 0, 1.0};
Point(101) = {0.033742, 0.738647, 0, 1.0};
Point(102) = {0.036985, 0.738031, 0, 1.0};
Point(103) = {0.040224, 0.737401, 0, 1.0};
Point(104) = {0.043461, 0.736757, 0, 1.0};
Point(105) = {0.046696, 0.736099, 0, 1.0};
Point(106) = {0.049931, 0.735428, 0, 1.0};
Point(107) = {0.053163, 0.734745, 0, 1.0};
Point(108) = {0.056390, 0.734049, 0, 1.0};
Point(109) = {0.059609, 0.733343, 0, 1.0};
Point(110) = {0.062816, 0.732625, 0, 1.0};
Point(111) = {0.066006, 0.731896, 0, 1.0};
Point(112) = {0.069163, 0.731159, 0, 1.0};
Point(113) = {0.072224, 0.730431, 0, 1.0};
Point(114) = {0.074531, 0.729881, 0, 1.0};
Point(115) = {-0.074352, -0.728410, 0, 1.0};
Point(116) = {-0.072035, -0.728318, 0, 1.0};
Point(117) = {-0.068896, -0.728203, 0, 1.0};
Point(118) = {-0.065663, -0.728096, 0, 1.0};
Point(119) = {-0.062401, -0.728003, 0, 1.0};
Point(120) = {-0.059126, -0.727924, 0, 1.0};
Point(121) = {-0.055843, -0.727861, 0, 1.0};
Point(122) = {-0.052555, -0.727812, 0, 1.0};
Point(123) = {-0.049263, -0.727776, 0, 1.0};
Point(124) = {-0.045970, -0.727755, 0, 1.0};
Point(125) = {-0.042679, -0.727748, 0, 1.0};
Point(126) = {-0.039391, -0.727755, 0, 1.0};
Point(127) = {-0.036108, -0.727778, 0, 1.0};
Point(128) = {-0.032829, -0.727819, 0, 1.0};
Point(129) = {-0.029554, -0.727878, 0, 1.0};
Point(130) = {-0.026280, -0.727956, 0, 1.0};
Point(131) = {-0.023006, -0.728054, 0, 1.0};
Point(132) = {-0.019731, -0.728172, 0, 1.0};
Point(133) = {-0.016455, -0.728310, 0, 1.0};
Point(134) = {-0.013176, -0.728467, 0, 1.0};
Point(135) = {-0.009900, -0.728643, 0, 1.0};
Point(136) = {-0.006627, -0.728838, 0, 1.0};
Point(137) = {-0.003362, -0.729053, 0, 1.0};
Point(138) = {-0.000109, -0.729290, 0, 1.0};
Point(139) = {0.003132, -0.729549, 0, 1.0};
Point(140) = {0.006358, -0.729833, 0, 1.0};
Point(141) = {0.009575, -0.730145, 0, 1.0};
Point(142) = {0.012781, -0.730485, 0, 1.0};
Point(143) = {0.015987, -0.730856, 0, 1.0};
Point(144) = {0.019189, -0.731256, 0, 1.0};
Point(145) = {0.022385, -0.731685, 0, 1.0};
Point(146) = {0.025575, -0.732142, 0, 1.0};
Point(147) = {0.028757, -0.732629, 0, 1.0};
Point(148) = {0.031928, -0.733145, 0, 1.0};
Point(149) = {0.035085, -0.733691, 0, 1.0};
Point(150) = {0.038223, -0.734268, 0, 1.0};
Point(151) = {0.041337, -0.734875, 0, 1.0};
Point(152) = {0.044418, -0.735513, 0, 1.0};
Point(153) = {0.047459, -0.736187, 0, 1.0};
Point(154) = {0.050456, -0.736899, 0, 1.0};
Point(155) = {0.053409, -0.737652, 0, 1.0};
Point(156) = {0.056300, -0.738444, 0, 1.0};
Point(157) = {0.059099, -0.739271, 0, 1.0};
Point(158) = {0.061762, -0.740125, 0, 1.0};
Point(159) = {0.064231, -0.740992, 0, 1.0};
Point(160) = {0.066443, -0.741853, 0, 1.0};
Point(161) = {0.068329, -0.742669, 0, 1.0};
Point(162) = {0.069856, -0.743407, 0, 1.0};
Point(163) = {0.071048, -0.744049, 0, 1.0};
Point(164) = {0.071963, -0.744600, 0, 1.0};
Point(165) = {0.072670, -0.745075, 0, 1.0};
Point(166) = {0.073217, -0.745493, 0, 1.0};
Point(167) = {0.073643, -0.745867, 0, 1.0};
Point(168) = {0.073971, -0.746209, 0, 1.0};
Point(169) = {0.074211, -0.746527, 0, 1.0};
Point(170) = {0.074370, -0.746824, 0, 1.0};
Point(171) = {0.074449, -0.747102, 0, 1.0};
Point(172) = {0.074449, -0.747357, 0, 1.0};
Point(173) = {0.074370, -0.747601, 0, 1.0};
Point(174) = {0.074206, -0.747843, 0, 1.0};
Point(175) = {0.073953, -0.748073, 0, 1.0};
Point(176) = {0.073610, -0.748291, 0, 1.0};
Point(177) = {0.073174, -0.748501, 0, 1.0};
Point(178) = {0.072631, -0.748709, 0, 1.0};
Point(179) = {0.071956, -0.748918, 0, 1.0};
Point(180) = {0.071108, -0.749131, 0, 1.0};
Point(181) = {0.070033, -0.749349, 0, 1.0};
Point(182) = {0.068663, -0.749563, 0, 1.0};
Point(183) = {0.066941, -0.749756, 0, 1.0};
Point(184) = {0.064853, -0.749905, 0, 1.0};
Point(185) = {0.062432, -0.749988, 0, 1.0};
Point(186) = {0.059745, -0.750000, 0, 1.0};
Point(187) = {0.056857, -0.749947, 0, 1.0};
Point(188) = {0.053833, -0.749843, 0, 1.0};
Point(189) = {0.050728, -0.749697, 0, 1.0};
Point(190) = {0.047572, -0.749516, 0, 1.0};
Point(191) = {0.044388, -0.749306, 0, 1.0};
Point(192) = {0.041183, -0.749068, 0, 1.0};
Point(193) = {0.037961, -0.748805, 0, 1.0};
Point(194) = {0.034724, -0.748519, 0, 1.0};
Point(195) = {0.031477, -0.748211, 0, 1.0};
Point(196) = {0.028222, -0.747884, 0, 1.0};
Point(197) = {0.024964, -0.747540, 0, 1.0};
Point(198) = {0.021704, -0.747177, 0, 1.0};
Point(199) = {0.018446, -0.746798, 0, 1.0};
Point(200) = {0.015187, -0.746401, 0, 1.0};
Point(201) = {0.011931, -0.745988, 0, 1.0};
Point(202) = {0.008675, -0.745557, 0, 1.0};
Point(203) = {0.005420, -0.745111, 0, 1.0};
Point(204) = {0.002164, -0.744647, 0, 1.0};
Point(205) = {-0.001095, -0.744168, 0, 1.0};
Point(206) = {-0.004357, -0.743673, 0, 1.0};
Point(207) = {-0.007623, -0.743163, 0, 1.0};
Point(208) = {-0.010892, -0.742639, 0, 1.0};
Point(209) = {-0.014165, -0.742101, 0, 1.0};
Point(210) = {-0.017437, -0.741553, 0, 1.0};
Point(211) = {-0.020709, -0.740993, 0, 1.0};
Point(212) = {-0.023977, -0.740423, 0, 1.0};
Point(213) = {-0.027239, -0.739842, 0, 1.0};
Point(214) = {-0.030494, -0.739251, 0, 1.0};
Point(215) = {-0.033742, -0.738647, 0, 1.0};
Point(216) = {-0.036985, -0.738031, 0, 1.0};
Point(217) = {-0.040224, -0.737401, 0, 1.0};
Point(218) = {-0.043461, -0.736757, 0, 1.0};
Point(219) = {-0.046696, -0.736099, 0, 1.0};
Point(220) = {-0.049931, -0.735428, 0, 1.0};
Point(221) = {-0.053163, -0.734745, 0, 1.0};
Point(222) = {-0.056390, -0.734049, 0, 1.0};
Point(223) = {-0.059609, -0.733343, 0, 1.0};
Point(224) = {-0.062816, -0.732625, 0, 1.0};
Point(225) = {-0.066006, -0.731896, 0, 1.0};
Point(226) = {-0.069163, -0.731159, 0, 1.0};
Point(227) = {-0.072224, -0.730431, 0, 1.0};
Point(228) = {-0.074531, -0.729881, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:35};
Spline(2) = {35:81};
Spline(3) = {81:114};
Spline(4) = {114,1};

// Lines: second blade (splines 5-8)
Spline(5) = {115:149};
Spline(6) = {149:195};
Spline(7) = {195:228};
Spline(8) = {228,115};

// Outer domain (points 20001-4 and lines)
Point(229) = {-13.50000000, -15.00000000, 0, 1.0};
Point(230) = {-13.50000000, 15.00000000, 0, 1.0};
Point(231) = {13.50000000, 15.00000000, 0, 1.0};
Point(232) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {229, 230};
Line(12) = {230, 231};
Line(13) = {231, 232};
Line(14) = {229, 232};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
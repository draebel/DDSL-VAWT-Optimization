SetFactory("OpenCASCADE");

Point(1) = {0.074984, 0.736698, 0, 1.0};
Point(2) = {0.073557, 0.736445, 0, 1.0};
Point(3) = {0.069365, 0.735664, 0, 1.0};
Point(4) = {0.064365, 0.734749, 0, 1.0};
Point(5) = {0.058644, 0.733696, 0, 1.0};
Point(6) = {0.052299, 0.732514, 0, 1.0};
Point(7) = {0.045437, 0.731217, 0, 1.0};
Point(8) = {0.038170, 0.729835, 0, 1.0};
Point(9) = {0.030609, 0.728402, 0, 1.0};
Point(10) = {0.022865, 0.726964, 0, 1.0};
Point(11) = {0.015048, 0.725572, 0, 1.0};
Point(12) = {0.007256, 0.724285, 0, 1.0};
Point(13) = {-0.000416, 0.723159, 0, 1.0};
Point(14) = {-0.007884, 0.722260, 0, 1.0};
Point(15) = {-0.015075, 0.721674, 0, 1.0};
Point(16) = {-0.021986, 0.721487, 0, 1.0};
Point(17) = {-0.028657, 0.721703, 0, 1.0};
Point(18) = {-0.035080, 0.722267, 0, 1.0};
Point(19) = {-0.041211, 0.723122, 0, 1.0};
Point(20) = {-0.046984, 0.724224, 0, 1.0};
Point(21) = {-0.052339, 0.725541, 0, 1.0};
Point(22) = {-0.057225, 0.727041, 0, 1.0};
Point(23) = {-0.061594, 0.728688, 0, 1.0};
Point(24) = {-0.065401, 0.730447, 0, 1.0};
Point(25) = {-0.068615, 0.732280, 0, 1.0};
Point(26) = {-0.071204, 0.734137, 0, 1.0};
Point(27) = {-0.073144, 0.735967, 0, 1.0};
Point(28) = {-0.074411, 0.737702, 0, 1.0};
Point(29) = {-0.074804, 0.738563, 0, 1.0};
Point(30) = {-0.074933, 0.739014, 0, 1.0};
Point(31) = {-0.074981, 0.739298, 0, 1.0};
Point(32) = {-0.074997, 0.739567, 0, 1.0};
Point(33) = {-0.074993, 0.739694, 0, 1.0};
Point(34) = {-0.074978, 0.739814, 0, 1.0};
Point(35) = {-0.074950, 0.739928, 0, 1.0};
Point(36) = {-0.074907, 0.740037, 0, 1.0};
Point(37) = {-0.074848, 0.740148, 0, 1.0};
Point(38) = {-0.074777, 0.740260, 0, 1.0};
Point(39) = {-0.074601, 0.740487, 0, 1.0};
Point(40) = {-0.074384, 0.740717, 0, 1.0};
Point(41) = {-0.073986, 0.741068, 0, 1.0};
Point(42) = {-0.073217, 0.741620, 0, 1.0};
Point(43) = {-0.070947, 0.742809, 0, 1.0};
Point(44) = {-0.067885, 0.743967, 0, 1.0};
Point(45) = {-0.064077, 0.745071, 0, 1.0};
Point(46) = {-0.059570, 0.746101, 0, 1.0};
Point(47) = {-0.054424, 0.747050, 0, 1.0};
Point(48) = {-0.048706, 0.747901, 0, 1.0};
Point(49) = {-0.042495, 0.748641, 0, 1.0};
Point(50) = {-0.035870, 0.749245, 0, 1.0};
Point(51) = {-0.028915, 0.749693, 0, 1.0};
Point(52) = {-0.021716, 0.749956, 0, 1.0};
Point(53) = {-0.014361, 0.750000, 0, 1.0};
Point(54) = {-0.006944, 0.749759, 0, 1.0};
Point(55) = {0.000522, 0.749132, 0, 1.0};
Point(56) = {0.008109, 0.748095, 0, 1.0};
Point(57) = {0.015875, 0.746744, 0, 1.0};
Point(58) = {0.023791, 0.745242, 0, 1.0};
Point(59) = {0.031739, 0.743729, 0, 1.0};
Point(60) = {0.039582, 0.742295, 0, 1.0};
Point(61) = {0.047175, 0.741025, 0, 1.0};
Point(62) = {0.054362, 0.739966, 0, 1.0};
Point(63) = {0.060984, 0.739155, 0, 1.0};
Point(64) = {0.066890, 0.738598, 0, 1.0};
Point(65) = {0.071936, 0.738277, 0, 1.0};
Point(66) = {0.074996, 0.738167, 0, 1.0};
Point(67) = {-0.074984, -0.736698, 0, 1.0};
Point(68) = {-0.073557, -0.736445, 0, 1.0};
Point(69) = {-0.069365, -0.735664, 0, 1.0};
Point(70) = {-0.064365, -0.734749, 0, 1.0};
Point(71) = {-0.058644, -0.733696, 0, 1.0};
Point(72) = {-0.052299, -0.732514, 0, 1.0};
Point(73) = {-0.045437, -0.731217, 0, 1.0};
Point(74) = {-0.038170, -0.729835, 0, 1.0};
Point(75) = {-0.030609, -0.728402, 0, 1.0};
Point(76) = {-0.022865, -0.726964, 0, 1.0};
Point(77) = {-0.015048, -0.725572, 0, 1.0};
Point(78) = {-0.007256, -0.724285, 0, 1.0};
Point(79) = {0.000416, -0.723159, 0, 1.0};
Point(80) = {0.007884, -0.722260, 0, 1.0};
Point(81) = {0.015075, -0.721674, 0, 1.0};
Point(82) = {0.021986, -0.721487, 0, 1.0};
Point(83) = {0.028657, -0.721703, 0, 1.0};
Point(84) = {0.035080, -0.722267, 0, 1.0};
Point(85) = {0.041211, -0.723122, 0, 1.0};
Point(86) = {0.046984, -0.724224, 0, 1.0};
Point(87) = {0.052339, -0.725541, 0, 1.0};
Point(88) = {0.057225, -0.727041, 0, 1.0};
Point(89) = {0.061594, -0.728688, 0, 1.0};
Point(90) = {0.065401, -0.730447, 0, 1.0};
Point(91) = {0.068615, -0.732280, 0, 1.0};
Point(92) = {0.071204, -0.734137, 0, 1.0};
Point(93) = {0.073144, -0.735967, 0, 1.0};
Point(94) = {0.074411, -0.737702, 0, 1.0};
Point(95) = {0.074804, -0.738563, 0, 1.0};
Point(96) = {0.074933, -0.739014, 0, 1.0};
Point(97) = {0.074981, -0.739298, 0, 1.0};
Point(98) = {0.074997, -0.739567, 0, 1.0};
Point(99) = {0.074993, -0.739694, 0, 1.0};
Point(100) = {0.074978, -0.739814, 0, 1.0};
Point(101) = {0.074950, -0.739928, 0, 1.0};
Point(102) = {0.074907, -0.740037, 0, 1.0};
Point(103) = {0.074848, -0.740148, 0, 1.0};
Point(104) = {0.074777, -0.740260, 0, 1.0};
Point(105) = {0.074601, -0.740487, 0, 1.0};
Point(106) = {0.074384, -0.740717, 0, 1.0};
Point(107) = {0.073986, -0.741068, 0, 1.0};
Point(108) = {0.073217, -0.741620, 0, 1.0};
Point(109) = {0.070947, -0.742809, 0, 1.0};
Point(110) = {0.067885, -0.743967, 0, 1.0};
Point(111) = {0.064077, -0.745071, 0, 1.0};
Point(112) = {0.059570, -0.746101, 0, 1.0};
Point(113) = {0.054424, -0.747050, 0, 1.0};
Point(114) = {0.048706, -0.747901, 0, 1.0};
Point(115) = {0.042495, -0.748641, 0, 1.0};
Point(116) = {0.035870, -0.749245, 0, 1.0};
Point(117) = {0.028915, -0.749693, 0, 1.0};
Point(118) = {0.021716, -0.749956, 0, 1.0};
Point(119) = {0.014361, -0.750000, 0, 1.0};
Point(120) = {0.006944, -0.749759, 0, 1.0};
Point(121) = {-0.000522, -0.749132, 0, 1.0};
Point(122) = {-0.008109, -0.748095, 0, 1.0};
Point(123) = {-0.015875, -0.746744, 0, 1.0};
Point(124) = {-0.023791, -0.745242, 0, 1.0};
Point(125) = {-0.031739, -0.743729, 0, 1.0};
Point(126) = {-0.039582, -0.742295, 0, 1.0};
Point(127) = {-0.047175, -0.741025, 0, 1.0};
Point(128) = {-0.054362, -0.739966, 0, 1.0};
Point(129) = {-0.060984, -0.739155, 0, 1.0};
Point(130) = {-0.066890, -0.738598, 0, 1.0};
Point(131) = {-0.071936, -0.738277, 0, 1.0};
Point(132) = {-0.074996, -0.738167, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074768, 0.735119, 0, 1.0};
Point(2) = {0.072734, 0.735005, 0, 1.0};
Point(3) = {0.068713, 0.734795, 0, 1.0};
Point(4) = {0.064690, 0.734565, 0, 1.0};
Point(5) = {0.060667, 0.734329, 0, 1.0};
Point(6) = {0.056643, 0.734078, 0, 1.0};
Point(7) = {0.052618, 0.733815, 0, 1.0};
Point(8) = {0.044569, 0.733306, 0, 1.0};
Point(9) = {0.036523, 0.732843, 0, 1.0};
Point(10) = {0.028483, 0.732461, 0, 1.0};
Point(11) = {0.020448, 0.732168, 0, 1.0};
Point(12) = {0.012422, 0.732004, 0, 1.0};
Point(13) = {0.004405, 0.731988, 0, 1.0};
Point(14) = {-0.003601, 0.732129, 0, 1.0};
Point(15) = {-0.011598, 0.732425, 0, 1.0};
Point(16) = {-0.015592, 0.732629, 0, 1.0};
Point(17) = {-0.019584, 0.732875, 0, 1.0};
Point(18) = {-0.023573, 0.733168, 0, 1.0};
Point(19) = {-0.027559, 0.733510, 0, 1.0};
Point(20) = {-0.031541, 0.733896, 0, 1.0};
Point(21) = {-0.035522, 0.734318, 0, 1.0};
Point(22) = {-0.039500, 0.734774, 0, 1.0};
Point(23) = {-0.043475, 0.735274, 0, 1.0};
Point(24) = {-0.047446, 0.735841, 0, 1.0};
Point(25) = {-0.051411, 0.736502, 0, 1.0};
Point(26) = {-0.055368, 0.737280, 0, 1.0};
Point(27) = {-0.059317, 0.738192, 0, 1.0};
Point(28) = {-0.063255, 0.739270, 0, 1.0};
Point(29) = {-0.067177, 0.740589, 0, 1.0};
Point(30) = {-0.069130, 0.741382, 0, 1.0};
Point(31) = {-0.071072, 0.742328, 0, 1.0};
Point(32) = {-0.072038, 0.742888, 0, 1.0};
Point(33) = {-0.072997, 0.743548, 0, 1.0};
Point(34) = {-0.073568, 0.744010, 0, 1.0};
Point(35) = {-0.074133, 0.744565, 0, 1.0};
Point(36) = {-0.074502, 0.745049, 0, 1.0};
Point(37) = {-0.074842, 0.745985, 0, 1.0};
Point(38) = {-0.074396, 0.746693, 0, 1.0};
Point(39) = {-0.073974, 0.747020, 0, 1.0};
Point(40) = {-0.073349, 0.747390, 0, 1.0};
Point(41) = {-0.072729, 0.747680, 0, 1.0};
Point(42) = {-0.071702, 0.748065, 0, 1.0};
Point(43) = {-0.070681, 0.748352, 0, 1.0};
Point(44) = {-0.068649, 0.748784, 0, 1.0};
Point(45) = {-0.066625, 0.749094, 0, 1.0};
Point(46) = {-0.062589, 0.749521, 0, 1.0};
Point(47) = {-0.058565, 0.749782, 0, 1.0};
Point(48) = {-0.054547, 0.749935, 0, 1.0};
Point(49) = {-0.050535, 0.750000, 0, 1.0};
Point(50) = {-0.046528, 0.749990, 0, 1.0};
Point(51) = {-0.042525, 0.749918, 0, 1.0};
Point(52) = {-0.038524, 0.749801, 0, 1.0};
Point(53) = {-0.034526, 0.749650, 0, 1.0};
Point(54) = {-0.030530, 0.749477, 0, 1.0};
Point(55) = {-0.026535, 0.749279, 0, 1.0};
Point(56) = {-0.022542, 0.749047, 0, 1.0};
Point(57) = {-0.018552, 0.748775, 0, 1.0};
Point(58) = {-0.014564, 0.748463, 0, 1.0};
Point(59) = {-0.010579, 0.748118, 0, 1.0};
Point(60) = {-0.002614, 0.747333, 0, 1.0};
Point(61) = {0.005343, 0.746427, 0, 1.0};
Point(62) = {0.013292, 0.745400, 0, 1.0};
Point(63) = {0.021234, 0.744265, 0, 1.0};
Point(64) = {0.029171, 0.743054, 0, 1.0};
Point(65) = {0.037105, 0.741811, 0, 1.0};
Point(66) = {0.045040, 0.740562, 0, 1.0};
Point(67) = {0.052977, 0.739354, 0, 1.0};
Point(68) = {0.056948, 0.738781, 0, 1.0};
Point(69) = {0.060920, 0.738239, 0, 1.0};
Point(70) = {0.064896, 0.737739, 0, 1.0};
Point(71) = {0.068873, 0.737264, 0, 1.0};
Point(72) = {0.072853, 0.736833, 0, 1.0};
Point(73) = {0.074865, 0.736612, 0, 1.0};
Point(74) = {-0.074768, -0.735119, 0, 1.0};
Point(75) = {-0.072734, -0.735005, 0, 1.0};
Point(76) = {-0.068713, -0.734795, 0, 1.0};
Point(77) = {-0.064690, -0.734565, 0, 1.0};
Point(78) = {-0.060667, -0.734329, 0, 1.0};
Point(79) = {-0.056643, -0.734078, 0, 1.0};
Point(80) = {-0.052618, -0.733815, 0, 1.0};
Point(81) = {-0.044569, -0.733306, 0, 1.0};
Point(82) = {-0.036523, -0.732843, 0, 1.0};
Point(83) = {-0.028483, -0.732461, 0, 1.0};
Point(84) = {-0.020448, -0.732168, 0, 1.0};
Point(85) = {-0.012422, -0.732004, 0, 1.0};
Point(86) = {-0.004405, -0.731988, 0, 1.0};
Point(87) = {0.003601, -0.732129, 0, 1.0};
Point(88) = {0.011598, -0.732425, 0, 1.0};
Point(89) = {0.015592, -0.732629, 0, 1.0};
Point(90) = {0.019584, -0.732875, 0, 1.0};
Point(91) = {0.023573, -0.733168, 0, 1.0};
Point(92) = {0.027559, -0.733510, 0, 1.0};
Point(93) = {0.031541, -0.733896, 0, 1.0};
Point(94) = {0.035522, -0.734318, 0, 1.0};
Point(95) = {0.039500, -0.734774, 0, 1.0};
Point(96) = {0.043475, -0.735274, 0, 1.0};
Point(97) = {0.047446, -0.735841, 0, 1.0};
Point(98) = {0.051411, -0.736502, 0, 1.0};
Point(99) = {0.055368, -0.737280, 0, 1.0};
Point(100) = {0.059317, -0.738192, 0, 1.0};
Point(101) = {0.063255, -0.739270, 0, 1.0};
Point(102) = {0.067177, -0.740589, 0, 1.0};
Point(103) = {0.069130, -0.741382, 0, 1.0};
Point(104) = {0.071072, -0.742328, 0, 1.0};
Point(105) = {0.072038, -0.742888, 0, 1.0};
Point(106) = {0.072997, -0.743548, 0, 1.0};
Point(107) = {0.073568, -0.744010, 0, 1.0};
Point(108) = {0.074133, -0.744565, 0, 1.0};
Point(109) = {0.074502, -0.745049, 0, 1.0};
Point(110) = {0.074842, -0.745985, 0, 1.0};
Point(111) = {0.074396, -0.746693, 0, 1.0};
Point(112) = {0.073974, -0.747020, 0, 1.0};
Point(113) = {0.073349, -0.747390, 0, 1.0};
Point(114) = {0.072729, -0.747680, 0, 1.0};
Point(115) = {0.071702, -0.748065, 0, 1.0};
Point(116) = {0.070681, -0.748352, 0, 1.0};
Point(117) = {0.068649, -0.748784, 0, 1.0};
Point(118) = {0.066625, -0.749094, 0, 1.0};
Point(119) = {0.062589, -0.749521, 0, 1.0};
Point(120) = {0.058565, -0.749782, 0, 1.0};
Point(121) = {0.054547, -0.749935, 0, 1.0};
Point(122) = {0.050535, -0.750000, 0, 1.0};
Point(123) = {0.046528, -0.749990, 0, 1.0};
Point(124) = {0.042525, -0.749918, 0, 1.0};
Point(125) = {0.038524, -0.749801, 0, 1.0};
Point(126) = {0.034526, -0.749650, 0, 1.0};
Point(127) = {0.030530, -0.749477, 0, 1.0};
Point(128) = {0.026535, -0.749279, 0, 1.0};
Point(129) = {0.022542, -0.749047, 0, 1.0};
Point(130) = {0.018552, -0.748775, 0, 1.0};
Point(131) = {0.014564, -0.748463, 0, 1.0};
Point(132) = {0.010579, -0.748118, 0, 1.0};
Point(133) = {0.002614, -0.747333, 0, 1.0};
Point(134) = {-0.005343, -0.746427, 0, 1.0};
Point(135) = {-0.013292, -0.745400, 0, 1.0};
Point(136) = {-0.021234, -0.744265, 0, 1.0};
Point(137) = {-0.029171, -0.743054, 0, 1.0};
Point(138) = {-0.037105, -0.741811, 0, 1.0};
Point(139) = {-0.045040, -0.740562, 0, 1.0};
Point(140) = {-0.052977, -0.739354, 0, 1.0};
Point(141) = {-0.056948, -0.738781, 0, 1.0};
Point(142) = {-0.060920, -0.738239, 0, 1.0};
Point(143) = {-0.064896, -0.737739, 0, 1.0};
Point(144) = {-0.068873, -0.737264, 0, 1.0};
Point(145) = {-0.072853, -0.736833, 0, 1.0};
Point(146) = {-0.074865, -0.736612, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074952, 0.747557, 0, 1.0};
Point(2) = {0.074014, 0.747441, 0, 1.0};
Point(3) = {0.071734, 0.746843, 0, 1.0};
Point(4) = {0.068696, 0.746025, 0, 1.0};
Point(5) = {0.064897, 0.745018, 0, 1.0};
Point(6) = {0.060340, 0.743766, 0, 1.0};
Point(7) = {0.055020, 0.742376, 0, 1.0};
Point(8) = {0.049709, 0.740805, 0, 1.0};
Point(9) = {0.043634, 0.739104, 0, 1.0};
Point(10) = {0.037546, 0.737707, 0, 1.0};
Point(11) = {0.031443, 0.736611, 0, 1.0};
Point(12) = {0.025328, 0.735776, 0, 1.0};
Point(13) = {0.017682, 0.734805, 0, 1.0};
Point(14) = {0.010027, 0.734009, 0, 1.0};
Point(15) = {0.002371, 0.733235, 0, 1.0};
Point(16) = {-0.005291, 0.732604, 0, 1.0};
Point(17) = {-0.012959, 0.732084, 0, 1.0};
Point(18) = {-0.020632, 0.731684, 0, 1.0};
Point(19) = {-0.028311, 0.731417, 0, 1.0};
Point(20) = {-0.035994, 0.731236, 0, 1.0};
Point(21) = {-0.043688, 0.731287, 0, 1.0};
Point(22) = {-0.051393, 0.731568, 0, 1.0};
Point(23) = {-0.059116, 0.732253, 0, 1.0};
Point(24) = {-0.062999, 0.733042, 0, 1.0};
Point(25) = {-0.066902, 0.734276, 0, 1.0};
Point(26) = {-0.070836, 0.736186, 0, 1.0};
Point(27) = {-0.072828, 0.737678, 0, 1.0};
Point(28) = {-0.073631, 0.738395, 0, 1.0};
Point(29) = {-0.074038, 0.738884, 0, 1.0};
Point(30) = {-0.074538, 0.739707, 0, 1.0};
Point(31) = {-0.074919, 0.741304, 0, 1.0};
Point(32) = {-0.074645, 0.742009, 0, 1.0};
Point(33) = {-0.074200, 0.742368, 0, 1.0};
Point(34) = {-0.073824, 0.742555, 0, 1.0};
Point(35) = {-0.073068, 0.742836, 0, 1.0};
Point(36) = {-0.071169, 0.743370, 0, 1.0};
Point(37) = {-0.067358, 0.744116, 0, 1.0};
Point(38) = {-0.063541, 0.744739, 0, 1.0};
Point(39) = {-0.059719, 0.745255, 0, 1.0};
Point(40) = {-0.052068, 0.746133, 0, 1.0};
Point(41) = {-0.044410, 0.746860, 0, 1.0};
Point(42) = {-0.036749, 0.747512, 0, 1.0};
Point(43) = {-0.029082, 0.748045, 0, 1.0};
Point(44) = {-0.021413, 0.748523, 0, 1.0};
Point(45) = {-0.013740, 0.748925, 0, 1.0};
Point(46) = {-0.006064, 0.749266, 0, 1.0};
Point(47) = {0.001616, 0.749522, 0, 1.0};
Point(48) = {0.009299, 0.749701, 0, 1.0};
Point(49) = {0.016985, 0.749827, 0, 1.0};
Point(50) = {0.024673, 0.749922, 0, 1.0};
Point(51) = {0.030823, 0.749976, 0, 1.0};
Point(52) = {0.036976, 0.750000, 0, 1.0};
Point(53) = {0.043130, 0.749985, 0, 1.0};
Point(54) = {0.049284, 0.749971, 0, 1.0};
Point(55) = {0.054670, 0.749913, 0, 1.0};
Point(56) = {0.060059, 0.749809, 0, 1.0};
Point(57) = {0.064682, 0.749639, 0, 1.0};
Point(58) = {0.068535, 0.749494, 0, 1.0};
Point(59) = {0.071619, 0.749330, 0, 1.0};
Point(60) = {0.073935, 0.749145, 0, 1.0};
Point(61) = {0.074882, 0.749051, 0, 1.0};
Point(62) = {-0.074952, -0.747557, 0, 1.0};
Point(63) = {-0.074014, -0.747441, 0, 1.0};
Point(64) = {-0.071734, -0.746843, 0, 1.0};
Point(65) = {-0.068696, -0.746025, 0, 1.0};
Point(66) = {-0.064897, -0.745018, 0, 1.0};
Point(67) = {-0.060340, -0.743766, 0, 1.0};
Point(68) = {-0.055020, -0.742376, 0, 1.0};
Point(69) = {-0.049709, -0.740805, 0, 1.0};
Point(70) = {-0.043634, -0.739104, 0, 1.0};
Point(71) = {-0.037546, -0.737707, 0, 1.0};
Point(72) = {-0.031443, -0.736611, 0, 1.0};
Point(73) = {-0.025328, -0.735776, 0, 1.0};
Point(74) = {-0.017682, -0.734805, 0, 1.0};
Point(75) = {-0.010027, -0.734009, 0, 1.0};
Point(76) = {-0.002371, -0.733235, 0, 1.0};
Point(77) = {0.005291, -0.732604, 0, 1.0};
Point(78) = {0.012959, -0.732084, 0, 1.0};
Point(79) = {0.020632, -0.731684, 0, 1.0};
Point(80) = {0.028311, -0.731417, 0, 1.0};
Point(81) = {0.035994, -0.731236, 0, 1.0};
Point(82) = {0.043688, -0.731287, 0, 1.0};
Point(83) = {0.051393, -0.731568, 0, 1.0};
Point(84) = {0.059116, -0.732253, 0, 1.0};
Point(85) = {0.062999, -0.733042, 0, 1.0};
Point(86) = {0.066902, -0.734276, 0, 1.0};
Point(87) = {0.070836, -0.736186, 0, 1.0};
Point(88) = {0.072828, -0.737678, 0, 1.0};
Point(89) = {0.073631, -0.738395, 0, 1.0};
Point(90) = {0.074038, -0.738884, 0, 1.0};
Point(91) = {0.074538, -0.739707, 0, 1.0};
Point(92) = {0.074919, -0.741304, 0, 1.0};
Point(93) = {0.074645, -0.742009, 0, 1.0};
Point(94) = {0.074200, -0.742368, 0, 1.0};
Point(95) = {0.073824, -0.742555, 0, 1.0};
Point(96) = {0.073068, -0.742836, 0, 1.0};
Point(97) = {0.071169, -0.743370, 0, 1.0};
Point(98) = {0.067358, -0.744116, 0, 1.0};
Point(99) = {0.063541, -0.744739, 0, 1.0};
Point(100) = {0.059719, -0.745255, 0, 1.0};
Point(101) = {0.052068, -0.746133, 0, 1.0};
Point(102) = {0.044410, -0.746860, 0, 1.0};
Point(103) = {0.036749, -0.747512, 0, 1.0};
Point(104) = {0.029082, -0.748045, 0, 1.0};
Point(105) = {0.021413, -0.748523, 0, 1.0};
Point(106) = {0.013740, -0.748925, 0, 1.0};
Point(107) = {0.006064, -0.749266, 0, 1.0};
Point(108) = {-0.001616, -0.749522, 0, 1.0};
Point(109) = {-0.009299, -0.749701, 0, 1.0};
Point(110) = {-0.016985, -0.749827, 0, 1.0};
Point(111) = {-0.024673, -0.749922, 0, 1.0};
Point(112) = {-0.030823, -0.749976, 0, 1.0};
Point(113) = {-0.036976, -0.750000, 0, 1.0};
Point(114) = {-0.043130, -0.749985, 0, 1.0};
Point(115) = {-0.049284, -0.749971, 0, 1.0};
Point(116) = {-0.054670, -0.749913, 0, 1.0};
Point(117) = {-0.060059, -0.749809, 0, 1.0};
Point(118) = {-0.064682, -0.749639, 0, 1.0};
Point(119) = {-0.068535, -0.749494, 0, 1.0};
Point(120) = {-0.071619, -0.749330, 0, 1.0};
Point(121) = {-0.073935, -0.749145, 0, 1.0};
Point(122) = {-0.074882, -0.749051, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:20};
Spline(2) = {20:43};
Spline(3) = {43:61};
Spline(4) = {61,1};

// Lines: second blade (splines 5-8)
Spline(5) = {62:81};
Spline(6) = {81:104};
Spline(7) = {104:122};
Spline(8) = {122,62};

// Outer domain (points 20001-4 and lines)
Point(123) = {-13.50000000, -15.00000000, 0, 1.0};
Point(124) = {-13.50000000, 15.00000000, 0, 1.0};
Point(125) = {13.50000000, 15.00000000, 0, 1.0};
Point(126) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {123, 124};
Line(12) = {124, 125};
Line(13) = {125, 126};
Line(14) = {123, 126};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
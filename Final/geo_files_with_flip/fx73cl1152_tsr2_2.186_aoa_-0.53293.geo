SetFactory("OpenCASCADE");

Point(1) = {0.075017, 0.743889, 0, 1.0};
Point(2) = {0.072943, 0.743450, 0, 1.0};
Point(3) = {0.070209, 0.742865, 0, 1.0};
Point(4) = {0.067195, 0.742219, 0, 1.0};
Point(5) = {0.063910, 0.741510, 0, 1.0};
Point(6) = {0.060370, 0.740741, 0, 1.0};
Point(7) = {0.056592, 0.739924, 0, 1.0};
Point(8) = {0.052590, 0.739059, 0, 1.0};
Point(9) = {0.048383, 0.738142, 0, 1.0};
Point(10) = {0.043985, 0.737175, 0, 1.0};
Point(11) = {0.039419, 0.736164, 0, 1.0};
Point(12) = {0.034704, 0.735118, 0, 1.0};
Point(13) = {0.029859, 0.734039, 0, 1.0};
Point(14) = {0.024905, 0.732937, 0, 1.0};
Point(15) = {0.019864, 0.731821, 0, 1.0};
Point(16) = {0.014755, 0.730704, 0, 1.0};
Point(17) = {0.009603, 0.729598, 0, 1.0};
Point(18) = {0.004428, 0.728521, 0, 1.0};
Point(19) = {-0.000747, 0.727490, 0, 1.0};
Point(20) = {-0.005900, 0.726526, 0, 1.0};
Point(21) = {-0.011011, 0.725647, 0, 1.0};
Point(22) = {-0.016056, 0.724882, 0, 1.0};
Point(23) = {-0.021014, 0.724280, 0, 1.0};
Point(24) = {-0.025866, 0.723905, 0, 1.0};
Point(25) = {-0.030589, 0.723794, 0, 1.0};
Point(26) = {-0.035166, 0.723947, 0, 1.0};
Point(27) = {-0.039576, 0.724330, 0, 1.0};
Point(28) = {-0.043798, 0.724944, 0, 1.0};
Point(29) = {-0.047815, 0.725801, 0, 1.0};
Point(30) = {-0.051612, 0.726882, 0, 1.0};
Point(31) = {-0.055170, 0.728143, 0, 1.0};
Point(32) = {-0.058475, 0.729537, 0, 1.0};
Point(33) = {-0.061509, 0.731033, 0, 1.0};
Point(34) = {-0.064263, 0.732615, 0, 1.0};
Point(35) = {-0.066725, 0.734254, 0, 1.0};
Point(36) = {-0.068881, 0.735900, 0, 1.0};
Point(37) = {-0.070724, 0.737533, 0, 1.0};
Point(38) = {-0.072243, 0.739136, 0, 1.0};
Point(39) = {-0.073436, 0.740692, 0, 1.0};
Point(40) = {-0.074295, 0.742139, 0, 1.0};
Point(41) = {-0.074816, 0.743449, 0, 1.0};
Point(42) = {-0.074997, 0.744681, 0, 1.0};
Point(43) = {-0.074838, 0.745881, 0, 1.0};
Point(44) = {-0.074340, 0.747041, 0, 1.0};
Point(45) = {-0.073504, 0.748048, 0, 1.0};
Point(46) = {-0.072334, 0.748820, 0, 1.0};
Point(47) = {-0.070834, 0.749357, 0, 1.0};
Point(48) = {-0.069009, 0.749702, 0, 1.0};
Point(49) = {-0.066871, 0.749912, 0, 1.0};
Point(50) = {-0.064425, 0.750000, 0, 1.0};
Point(51) = {-0.061685, 0.749999, 0, 1.0};
Point(52) = {-0.058664, 0.749917, 0, 1.0};
Point(53) = {-0.055371, 0.749764, 0, 1.0};
Point(54) = {-0.051822, 0.749539, 0, 1.0};
Point(55) = {-0.048033, 0.749227, 0, 1.0};
Point(56) = {-0.044020, 0.748860, 0, 1.0};
Point(57) = {-0.039801, 0.748456, 0, 1.0};
Point(58) = {-0.035390, 0.748033, 0, 1.0};
Point(59) = {-0.030811, 0.747611, 0, 1.0};
Point(60) = {-0.026082, 0.747190, 0, 1.0};
Point(61) = {-0.021223, 0.746779, 0, 1.0};
Point(62) = {-0.016256, 0.746378, 0, 1.0};
Point(63) = {-0.011201, 0.746003, 0, 1.0};
Point(64) = {-0.006078, 0.745663, 0, 1.0};
Point(65) = {-0.000913, 0.745355, 0, 1.0};
Point(66) = {0.004274, 0.745079, 0, 1.0};
Point(67) = {0.009461, 0.744835, 0, 1.0};
Point(68) = {0.014626, 0.744626, 0, 1.0};
Point(69) = {0.019747, 0.744457, 0, 1.0};
Point(70) = {0.024799, 0.744328, 0, 1.0};
Point(71) = {0.029764, 0.744241, 0, 1.0};
Point(72) = {0.034620, 0.744194, 0, 1.0};
Point(73) = {0.039345, 0.744178, 0, 1.0};
Point(74) = {0.043920, 0.744195, 0, 1.0};
Point(75) = {0.048326, 0.744247, 0, 1.0};
Point(76) = {0.052541, 0.744337, 0, 1.0};
Point(77) = {0.056549, 0.744453, 0, 1.0};
Point(78) = {0.060334, 0.744589, 0, 1.0};
Point(79) = {0.063880, 0.744740, 0, 1.0};
Point(80) = {0.067170, 0.744903, 0, 1.0};
Point(81) = {0.070188, 0.745077, 0, 1.0};
Point(82) = {0.072926, 0.745256, 0, 1.0};
Point(83) = {0.075003, 0.745411, 0, 1.0};
Point(84) = {-0.075017, -0.743889, 0, 1.0};
Point(85) = {-0.072943, -0.743450, 0, 1.0};
Point(86) = {-0.070209, -0.742865, 0, 1.0};
Point(87) = {-0.067195, -0.742219, 0, 1.0};
Point(88) = {-0.063910, -0.741510, 0, 1.0};
Point(89) = {-0.060370, -0.740741, 0, 1.0};
Point(90) = {-0.056592, -0.739924, 0, 1.0};
Point(91) = {-0.052590, -0.739059, 0, 1.0};
Point(92) = {-0.048383, -0.738142, 0, 1.0};
Point(93) = {-0.043985, -0.737175, 0, 1.0};
Point(94) = {-0.039419, -0.736164, 0, 1.0};
Point(95) = {-0.034704, -0.735118, 0, 1.0};
Point(96) = {-0.029859, -0.734039, 0, 1.0};
Point(97) = {-0.024905, -0.732937, 0, 1.0};
Point(98) = {-0.019864, -0.731821, 0, 1.0};
Point(99) = {-0.014755, -0.730704, 0, 1.0};
Point(100) = {-0.009603, -0.729598, 0, 1.0};
Point(101) = {-0.004428, -0.728521, 0, 1.0};
Point(102) = {0.000747, -0.727490, 0, 1.0};
Point(103) = {0.005900, -0.726526, 0, 1.0};
Point(104) = {0.011011, -0.725647, 0, 1.0};
Point(105) = {0.016056, -0.724882, 0, 1.0};
Point(106) = {0.021014, -0.724280, 0, 1.0};
Point(107) = {0.025866, -0.723905, 0, 1.0};
Point(108) = {0.030589, -0.723794, 0, 1.0};
Point(109) = {0.035166, -0.723947, 0, 1.0};
Point(110) = {0.039576, -0.724330, 0, 1.0};
Point(111) = {0.043798, -0.724944, 0, 1.0};
Point(112) = {0.047815, -0.725801, 0, 1.0};
Point(113) = {0.051612, -0.726882, 0, 1.0};
Point(114) = {0.055170, -0.728143, 0, 1.0};
Point(115) = {0.058475, -0.729537, 0, 1.0};
Point(116) = {0.061509, -0.731033, 0, 1.0};
Point(117) = {0.064263, -0.732615, 0, 1.0};
Point(118) = {0.066725, -0.734254, 0, 1.0};
Point(119) = {0.068881, -0.735900, 0, 1.0};
Point(120) = {0.070724, -0.737533, 0, 1.0};
Point(121) = {0.072243, -0.739136, 0, 1.0};
Point(122) = {0.073436, -0.740692, 0, 1.0};
Point(123) = {0.074295, -0.742139, 0, 1.0};
Point(124) = {0.074816, -0.743449, 0, 1.0};
Point(125) = {0.074997, -0.744681, 0, 1.0};
Point(126) = {0.074838, -0.745881, 0, 1.0};
Point(127) = {0.074340, -0.747041, 0, 1.0};
Point(128) = {0.073504, -0.748048, 0, 1.0};
Point(129) = {0.072334, -0.748820, 0, 1.0};
Point(130) = {0.070834, -0.749357, 0, 1.0};
Point(131) = {0.069009, -0.749702, 0, 1.0};
Point(132) = {0.066871, -0.749912, 0, 1.0};
Point(133) = {0.064425, -0.750000, 0, 1.0};
Point(134) = {0.061685, -0.749999, 0, 1.0};
Point(135) = {0.058664, -0.749917, 0, 1.0};
Point(136) = {0.055371, -0.749764, 0, 1.0};
Point(137) = {0.051822, -0.749539, 0, 1.0};
Point(138) = {0.048033, -0.749227, 0, 1.0};
Point(139) = {0.044020, -0.748860, 0, 1.0};
Point(140) = {0.039801, -0.748456, 0, 1.0};
Point(141) = {0.035390, -0.748033, 0, 1.0};
Point(142) = {0.030811, -0.747611, 0, 1.0};
Point(143) = {0.026082, -0.747190, 0, 1.0};
Point(144) = {0.021223, -0.746779, 0, 1.0};
Point(145) = {0.016256, -0.746378, 0, 1.0};
Point(146) = {0.011201, -0.746003, 0, 1.0};
Point(147) = {0.006078, -0.745663, 0, 1.0};
Point(148) = {0.000913, -0.745355, 0, 1.0};
Point(149) = {-0.004274, -0.745079, 0, 1.0};
Point(150) = {-0.009461, -0.744835, 0, 1.0};
Point(151) = {-0.014626, -0.744626, 0, 1.0};
Point(152) = {-0.019747, -0.744457, 0, 1.0};
Point(153) = {-0.024799, -0.744328, 0, 1.0};
Point(154) = {-0.029764, -0.744241, 0, 1.0};
Point(155) = {-0.034620, -0.744194, 0, 1.0};
Point(156) = {-0.039345, -0.744178, 0, 1.0};
Point(157) = {-0.043920, -0.744195, 0, 1.0};
Point(158) = {-0.048326, -0.744247, 0, 1.0};
Point(159) = {-0.052541, -0.744337, 0, 1.0};
Point(160) = {-0.056549, -0.744453, 0, 1.0};
Point(161) = {-0.060334, -0.744589, 0, 1.0};
Point(162) = {-0.063880, -0.744740, 0, 1.0};
Point(163) = {-0.067170, -0.744903, 0, 1.0};
Point(164) = {-0.070188, -0.745077, 0, 1.0};
Point(165) = {-0.072926, -0.745256, 0, 1.0};
Point(166) = {-0.075003, -0.745411, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
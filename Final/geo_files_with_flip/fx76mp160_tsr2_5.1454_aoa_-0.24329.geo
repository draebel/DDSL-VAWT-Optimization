SetFactory("OpenCASCADE");

Point(1) = {0.075011, 0.742336, 0, 1.0};
Point(2) = {0.074224, 0.742076, 0, 1.0};
Point(3) = {0.071800, 0.741298, 0, 1.0};
Point(4) = {0.069085, 0.740396, 0, 1.0};
Point(5) = {0.066092, 0.739425, 0, 1.0};
Point(6) = {0.062831, 0.738325, 0, 1.0};
Point(7) = {0.059317, 0.737167, 0, 1.0};
Point(8) = {0.055565, 0.735883, 0, 1.0};
Point(9) = {0.051592, 0.734551, 0, 1.0};
Point(10) = {0.047415, 0.733109, 0, 1.0};
Point(11) = {0.043049, 0.731657, 0, 1.0};
Point(12) = {0.038515, 0.730188, 0, 1.0};
Point(13) = {0.033832, 0.728819, 0, 1.0};
Point(14) = {0.029020, 0.727562, 0, 1.0};
Point(15) = {0.024099, 0.726473, 0, 1.0};
Point(16) = {0.019091, 0.725510, 0, 1.0};
Point(17) = {0.014014, 0.724728, 0, 1.0};
Point(18) = {0.008894, 0.724071, 0, 1.0};
Point(19) = {0.003752, 0.723590, 0, 1.0};
Point(20) = {-0.001391, 0.723200, 0, 1.0};
Point(21) = {-0.006513, 0.722975, 0, 1.0};
Point(22) = {-0.011592, 0.722851, 0, 1.0};
Point(23) = {-0.016605, 0.722896, 0, 1.0};
Point(24) = {-0.021531, 0.723031, 0, 1.0};
Point(25) = {-0.026350, 0.723336, 0, 1.0};
Point(26) = {-0.031040, 0.723728, 0, 1.0};
Point(27) = {-0.035582, 0.724294, 0, 1.0};
Point(28) = {-0.039957, 0.724943, 0, 1.0};
Point(29) = {-0.044144, 0.725760, 0, 1.0};
Point(30) = {-0.048127, 0.726656, 0, 1.0};
Point(31) = {-0.051888, 0.727722, 0, 1.0};
Point(32) = {-0.055412, 0.728861, 0, 1.0};
Point(33) = {-0.058684, 0.730148, 0, 1.0};
Point(34) = {-0.061686, 0.731479, 0, 1.0};
Point(35) = {-0.064411, 0.732924, 0, 1.0};
Point(36) = {-0.066845, 0.734384, 0, 1.0};
Point(37) = {-0.068975, 0.735944, 0, 1.0};
Point(38) = {-0.070796, 0.737467, 0, 1.0};
Point(39) = {-0.072296, 0.739039, 0, 1.0};
Point(40) = {-0.073471, 0.740514, 0, 1.0};
Point(41) = {-0.074315, 0.741941, 0, 1.0};
Point(42) = {-0.074826, 0.743186, 0, 1.0};
Point(43) = {-0.074999, 0.744438, 0, 1.0};
Point(44) = {-0.074835, 0.745330, 0, 1.0};
Point(45) = {-0.074334, 0.746217, 0, 1.0};
Point(46) = {-0.073499, 0.747114, 0, 1.0};
Point(47) = {-0.072333, 0.747790, 0, 1.0};
Point(48) = {-0.070843, 0.748458, 0, 1.0};
Point(49) = {-0.069030, 0.748898, 0, 1.0};
Point(50) = {-0.066908, 0.749347, 0, 1.0};
Point(51) = {-0.064482, 0.749594, 0, 1.0};
Point(52) = {-0.061765, 0.749859, 0, 1.0};
Point(53) = {-0.058768, 0.749925, 0, 1.0};
Point(54) = {-0.055502, 0.750000, 0, 1.0};
Point(55) = {-0.051982, 0.749895, 0, 1.0};
Point(56) = {-0.048225, 0.749841, 0, 1.0};
Point(57) = {-0.044245, 0.749625, 0, 1.0};
Point(58) = {-0.040061, 0.749480, 0, 1.0};
Point(59) = {-0.035688, 0.749197, 0, 1.0};
Point(60) = {-0.031147, 0.748996, 0, 1.0};
Point(61) = {-0.026457, 0.748666, 0, 1.0};
Point(62) = {-0.021639, 0.748434, 0, 1.0};
Point(63) = {-0.016712, 0.748090, 0, 1.0};
Point(64) = {-0.011698, 0.747845, 0, 1.0};
Point(65) = {-0.006617, 0.747498, 0, 1.0};
Point(66) = {-0.001493, 0.747250, 0, 1.0};
Point(67) = {0.003653, 0.746895, 0, 1.0};
Point(68) = {0.008799, 0.746642, 0, 1.0};
Point(69) = {0.013923, 0.746281, 0, 1.0};
Point(70) = {0.019004, 0.746004, 0, 1.0};
Point(71) = {0.024018, 0.745616, 0, 1.0};
Point(72) = {0.028945, 0.745291, 0, 1.0};
Point(73) = {0.033764, 0.744854, 0, 1.0};
Point(74) = {0.038454, 0.744485, 0, 1.0};
Point(75) = {0.042996, 0.744034, 0, 1.0};
Point(76) = {0.047370, 0.743719, 0, 1.0};
Point(77) = {0.051555, 0.743383, 0, 1.0};
Point(78) = {0.055534, 0.743236, 0, 1.0};
Point(79) = {0.059292, 0.743081, 0, 1.0};
Point(80) = {0.062811, 0.743119, 0, 1.0};
Point(81) = {0.066077, 0.743146, 0, 1.0};
Point(82) = {0.069073, 0.743342, 0, 1.0};
Point(83) = {0.071791, 0.743500, 0, 1.0};
Point(84) = {0.074217, 0.743798, 0, 1.0};
Point(85) = {0.075004, 0.743870, 0, 1.0};
Point(86) = {-0.075011, -0.742336, 0, 1.0};
Point(87) = {-0.074224, -0.742076, 0, 1.0};
Point(88) = {-0.071800, -0.741298, 0, 1.0};
Point(89) = {-0.069085, -0.740396, 0, 1.0};
Point(90) = {-0.066092, -0.739425, 0, 1.0};
Point(91) = {-0.062831, -0.738325, 0, 1.0};
Point(92) = {-0.059317, -0.737167, 0, 1.0};
Point(93) = {-0.055565, -0.735883, 0, 1.0};
Point(94) = {-0.051592, -0.734551, 0, 1.0};
Point(95) = {-0.047415, -0.733109, 0, 1.0};
Point(96) = {-0.043049, -0.731657, 0, 1.0};
Point(97) = {-0.038515, -0.730188, 0, 1.0};
Point(98) = {-0.033832, -0.728819, 0, 1.0};
Point(99) = {-0.029020, -0.727562, 0, 1.0};
Point(100) = {-0.024099, -0.726473, 0, 1.0};
Point(101) = {-0.019091, -0.725510, 0, 1.0};
Point(102) = {-0.014014, -0.724728, 0, 1.0};
Point(103) = {-0.008894, -0.724071, 0, 1.0};
Point(104) = {-0.003752, -0.723590, 0, 1.0};
Point(105) = {0.001391, -0.723200, 0, 1.0};
Point(106) = {0.006513, -0.722975, 0, 1.0};
Point(107) = {0.011592, -0.722851, 0, 1.0};
Point(108) = {0.016605, -0.722896, 0, 1.0};
Point(109) = {0.021531, -0.723031, 0, 1.0};
Point(110) = {0.026350, -0.723336, 0, 1.0};
Point(111) = {0.031040, -0.723728, 0, 1.0};
Point(112) = {0.035582, -0.724294, 0, 1.0};
Point(113) = {0.039957, -0.724943, 0, 1.0};
Point(114) = {0.044144, -0.725760, 0, 1.0};
Point(115) = {0.048127, -0.726656, 0, 1.0};
Point(116) = {0.051888, -0.727722, 0, 1.0};
Point(117) = {0.055412, -0.728861, 0, 1.0};
Point(118) = {0.058684, -0.730148, 0, 1.0};
Point(119) = {0.061686, -0.731479, 0, 1.0};
Point(120) = {0.064411, -0.732924, 0, 1.0};
Point(121) = {0.066845, -0.734384, 0, 1.0};
Point(122) = {0.068975, -0.735944, 0, 1.0};
Point(123) = {0.070796, -0.737467, 0, 1.0};
Point(124) = {0.072296, -0.739039, 0, 1.0};
Point(125) = {0.073471, -0.740514, 0, 1.0};
Point(126) = {0.074315, -0.741941, 0, 1.0};
Point(127) = {0.074826, -0.743186, 0, 1.0};
Point(128) = {0.074999, -0.744438, 0, 1.0};
Point(129) = {0.074835, -0.745330, 0, 1.0};
Point(130) = {0.074334, -0.746217, 0, 1.0};
Point(131) = {0.073499, -0.747114, 0, 1.0};
Point(132) = {0.072333, -0.747790, 0, 1.0};
Point(133) = {0.070843, -0.748458, 0, 1.0};
Point(134) = {0.069030, -0.748898, 0, 1.0};
Point(135) = {0.066908, -0.749347, 0, 1.0};
Point(136) = {0.064482, -0.749594, 0, 1.0};
Point(137) = {0.061765, -0.749859, 0, 1.0};
Point(138) = {0.058768, -0.749925, 0, 1.0};
Point(139) = {0.055502, -0.750000, 0, 1.0};
Point(140) = {0.051982, -0.749895, 0, 1.0};
Point(141) = {0.048225, -0.749841, 0, 1.0};
Point(142) = {0.044245, -0.749625, 0, 1.0};
Point(143) = {0.040061, -0.749480, 0, 1.0};
Point(144) = {0.035688, -0.749197, 0, 1.0};
Point(145) = {0.031147, -0.748996, 0, 1.0};
Point(146) = {0.026457, -0.748666, 0, 1.0};
Point(147) = {0.021639, -0.748434, 0, 1.0};
Point(148) = {0.016712, -0.748090, 0, 1.0};
Point(149) = {0.011698, -0.747845, 0, 1.0};
Point(150) = {0.006617, -0.747498, 0, 1.0};
Point(151) = {0.001493, -0.747250, 0, 1.0};
Point(152) = {-0.003653, -0.746895, 0, 1.0};
Point(153) = {-0.008799, -0.746642, 0, 1.0};
Point(154) = {-0.013923, -0.746281, 0, 1.0};
Point(155) = {-0.019004, -0.746004, 0, 1.0};
Point(156) = {-0.024018, -0.745616, 0, 1.0};
Point(157) = {-0.028945, -0.745291, 0, 1.0};
Point(158) = {-0.033764, -0.744854, 0, 1.0};
Point(159) = {-0.038454, -0.744485, 0, 1.0};
Point(160) = {-0.042996, -0.744034, 0, 1.0};
Point(161) = {-0.047370, -0.743719, 0, 1.0};
Point(162) = {-0.051555, -0.743383, 0, 1.0};
Point(163) = {-0.055534, -0.743236, 0, 1.0};
Point(164) = {-0.059292, -0.743081, 0, 1.0};
Point(165) = {-0.062811, -0.743119, 0, 1.0};
Point(166) = {-0.066077, -0.743146, 0, 1.0};
Point(167) = {-0.069073, -0.743342, 0, 1.0};
Point(168) = {-0.071791, -0.743500, 0, 1.0};
Point(169) = {-0.074217, -0.743798, 0, 1.0};
Point(170) = {-0.075004, -0.743870, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
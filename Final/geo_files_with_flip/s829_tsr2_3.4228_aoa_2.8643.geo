SetFactory("OpenCASCADE");

Point(1) = {0.074865, 0.733825, 0, 1.0};
Point(2) = {0.071203, 0.733249, 0, 1.0};
Point(3) = {0.066543, 0.732394, 0, 1.0};
Point(4) = {0.061242, 0.731352, 0, 1.0};
Point(5) = {0.055399, 0.730170, 0, 1.0};
Point(6) = {0.049138, 0.728892, 0, 1.0};
Point(7) = {0.042583, 0.727600, 0, 1.0};
Point(8) = {0.035834, 0.726401, 0, 1.0};
Point(9) = {0.028943, 0.725413, 0, 1.0};
Point(10) = {0.021922, 0.724728, 0, 1.0};
Point(11) = {0.014742, 0.724405, 0, 1.0};
Point(12) = {0.007365, 0.724394, 0, 1.0};
Point(13) = {-0.000139, 0.724625, 0, 1.0};
Point(14) = {-0.007684, 0.725064, 0, 1.0};
Point(15) = {-0.015187, 0.725688, 0, 1.0};
Point(16) = {-0.022561, 0.726478, 0, 1.0};
Point(17) = {-0.029725, 0.727412, 0, 1.0};
Point(18) = {-0.036597, 0.728473, 0, 1.0};
Point(19) = {-0.043098, 0.729642, 0, 1.0};
Point(20) = {-0.049154, 0.730901, 0, 1.0};
Point(21) = {-0.054698, 0.732232, 0, 1.0};
Point(22) = {-0.059666, 0.733615, 0, 1.0};
Point(23) = {-0.064002, 0.735031, 0, 1.0};
Point(24) = {-0.067660, 0.736460, 0, 1.0};
Point(25) = {-0.070593, 0.737887, 0, 1.0};
Point(26) = {-0.072793, 0.739288, 0, 1.0};
Point(27) = {-0.074220, 0.740615, 0, 1.0};
Point(28) = {-0.074828, 0.741632, 0, 1.0};
Point(29) = {-0.074880, 0.741807, 0, 1.0};
Point(30) = {-0.074899, 0.741899, 0, 1.0};
Point(31) = {-0.074906, 0.742139, 0, 1.0};
Point(32) = {-0.074825, 0.742368, 0, 1.0};
Point(33) = {-0.074674, 0.742610, 0, 1.0};
Point(34) = {-0.074545, 0.742771, 0, 1.0};
Point(35) = {-0.073254, 0.743813, 0, 1.0};
Point(36) = {-0.071168, 0.744840, 0, 1.0};
Point(37) = {-0.068291, 0.745812, 0, 1.0};
Point(38) = {-0.064670, 0.746706, 0, 1.0};
Point(39) = {-0.060327, 0.747506, 0, 1.0};
Point(40) = {-0.055317, 0.748208, 0, 1.0};
Point(41) = {-0.049693, 0.748803, 0, 1.0};
Point(42) = {-0.043519, 0.749284, 0, 1.0};
Point(43) = {-0.036867, 0.749647, 0, 1.0};
Point(44) = {-0.029811, 0.749888, 0, 1.0};
Point(45) = {-0.022435, 0.750000, 0, 1.0};
Point(46) = {-0.014822, 0.749981, 0, 1.0};
Point(47) = {-0.007064, 0.749825, 0, 1.0};
Point(48) = {0.000753, 0.749527, 0, 1.0};
Point(49) = {0.008536, 0.749080, 0, 1.0};
Point(50) = {0.016199, 0.748477, 0, 1.0};
Point(51) = {0.023649, 0.747701, 0, 1.0};
Point(52) = {0.030813, 0.746711, 0, 1.0};
Point(53) = {0.037676, 0.745482, 0, 1.0};
Point(54) = {0.044236, 0.744033, 0, 1.0};
Point(55) = {0.050487, 0.742422, 0, 1.0};
Point(56) = {0.056403, 0.740740, 0, 1.0};
Point(57) = {0.061928, 0.739088, 0, 1.0};
Point(58) = {0.066977, 0.737569, 0, 1.0};
Point(59) = {0.071448, 0.736272, 0, 1.0};
Point(60) = {0.074942, 0.735349, 0, 1.0};
Point(61) = {-0.074865, -0.733825, 0, 1.0};
Point(62) = {-0.071203, -0.733249, 0, 1.0};
Point(63) = {-0.066543, -0.732394, 0, 1.0};
Point(64) = {-0.061242, -0.731352, 0, 1.0};
Point(65) = {-0.055399, -0.730170, 0, 1.0};
Point(66) = {-0.049138, -0.728892, 0, 1.0};
Point(67) = {-0.042583, -0.727600, 0, 1.0};
Point(68) = {-0.035834, -0.726401, 0, 1.0};
Point(69) = {-0.028943, -0.725413, 0, 1.0};
Point(70) = {-0.021922, -0.724728, 0, 1.0};
Point(71) = {-0.014742, -0.724405, 0, 1.0};
Point(72) = {-0.007365, -0.724394, 0, 1.0};
Point(73) = {0.000139, -0.724625, 0, 1.0};
Point(74) = {0.007684, -0.725064, 0, 1.0};
Point(75) = {0.015187, -0.725688, 0, 1.0};
Point(76) = {0.022561, -0.726478, 0, 1.0};
Point(77) = {0.029725, -0.727412, 0, 1.0};
Point(78) = {0.036597, -0.728473, 0, 1.0};
Point(79) = {0.043098, -0.729642, 0, 1.0};
Point(80) = {0.049154, -0.730901, 0, 1.0};
Point(81) = {0.054698, -0.732232, 0, 1.0};
Point(82) = {0.059666, -0.733615, 0, 1.0};
Point(83) = {0.064002, -0.735031, 0, 1.0};
Point(84) = {0.067660, -0.736460, 0, 1.0};
Point(85) = {0.070593, -0.737887, 0, 1.0};
Point(86) = {0.072793, -0.739288, 0, 1.0};
Point(87) = {0.074220, -0.740615, 0, 1.0};
Point(88) = {0.074828, -0.741632, 0, 1.0};
Point(89) = {0.074880, -0.741807, 0, 1.0};
Point(90) = {0.074899, -0.741899, 0, 1.0};
Point(91) = {0.074906, -0.742139, 0, 1.0};
Point(92) = {0.074825, -0.742368, 0, 1.0};
Point(93) = {0.074674, -0.742610, 0, 1.0};
Point(94) = {0.074545, -0.742771, 0, 1.0};
Point(95) = {0.073254, -0.743813, 0, 1.0};
Point(96) = {0.071168, -0.744840, 0, 1.0};
Point(97) = {0.068291, -0.745812, 0, 1.0};
Point(98) = {0.064670, -0.746706, 0, 1.0};
Point(99) = {0.060327, -0.747506, 0, 1.0};
Point(100) = {0.055317, -0.748208, 0, 1.0};
Point(101) = {0.049693, -0.748803, 0, 1.0};
Point(102) = {0.043519, -0.749284, 0, 1.0};
Point(103) = {0.036867, -0.749647, 0, 1.0};
Point(104) = {0.029811, -0.749888, 0, 1.0};
Point(105) = {0.022435, -0.750000, 0, 1.0};
Point(106) = {0.014822, -0.749981, 0, 1.0};
Point(107) = {0.007064, -0.749825, 0, 1.0};
Point(108) = {-0.000753, -0.749527, 0, 1.0};
Point(109) = {-0.008536, -0.749080, 0, 1.0};
Point(110) = {-0.016199, -0.748477, 0, 1.0};
Point(111) = {-0.023649, -0.747701, 0, 1.0};
Point(112) = {-0.030813, -0.746711, 0, 1.0};
Point(113) = {-0.037676, -0.745482, 0, 1.0};
Point(114) = {-0.044236, -0.744033, 0, 1.0};
Point(115) = {-0.050487, -0.742422, 0, 1.0};
Point(116) = {-0.056403, -0.740740, 0, 1.0};
Point(117) = {-0.061928, -0.739088, 0, 1.0};
Point(118) = {-0.066977, -0.737569, 0, 1.0};
Point(119) = {-0.071448, -0.736272, 0, 1.0};
Point(120) = {-0.074942, -0.735349, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:78};
Spline(6) = {78:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
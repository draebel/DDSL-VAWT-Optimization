SetFactory("OpenCASCADE");

Point(1) = {0.074898, 0.744515, 0, 1.0};
Point(2) = {0.074209, 0.744615, 0, 1.0};
Point(3) = {0.069691, 0.745216, 0, 1.0};
Point(4) = {0.064022, 0.745876, 0, 1.0};
Point(5) = {0.057294, 0.746583, 0, 1.0};
Point(6) = {0.049627, 0.747321, 0, 1.0};
Point(7) = {0.041151, 0.748059, 0, 1.0};
Point(8) = {0.032011, 0.748755, 0, 1.0};
Point(9) = {0.022367, 0.749347, 0, 1.0};
Point(10) = {0.012385, 0.749780, 0, 1.0};
Point(11) = {0.002239, 0.750000, 0, 1.0};
Point(12) = {-0.007898, 0.749976, 0, 1.0};
Point(13) = {-0.017852, 0.749704, 0, 1.0};
Point(14) = {-0.022707, 0.749479, 0, 1.0};
Point(15) = {-0.027453, 0.749198, 0, 1.0};
Point(16) = {-0.032069, 0.748858, 0, 1.0};
Point(17) = {-0.036536, 0.748459, 0, 1.0};
Point(18) = {-0.040835, 0.747997, 0, 1.0};
Point(19) = {-0.044945, 0.747472, 0, 1.0};
Point(20) = {-0.048851, 0.746890, 0, 1.0};
Point(21) = {-0.052536, 0.746258, 0, 1.0};
Point(22) = {-0.055984, 0.745583, 0, 1.0};
Point(23) = {-0.059181, 0.744877, 0, 1.0};
Point(24) = {-0.062112, 0.744143, 0, 1.0};
Point(25) = {-0.064766, 0.743385, 0, 1.0};
Point(26) = {-0.067133, 0.742606, 0, 1.0};
Point(27) = {-0.069199, 0.741808, 0, 1.0};
Point(28) = {-0.070958, 0.741001, 0, 1.0};
Point(29) = {-0.072401, 0.740205, 0, 1.0};
Point(30) = {-0.073525, 0.739440, 0, 1.0};
Point(31) = {-0.074325, 0.738732, 0, 1.0};
Point(32) = {-0.074799, 0.738089, 0, 1.0};
Point(33) = {-0.074942, 0.737514, 0, 1.0};
Point(34) = {-0.074756, 0.736994, 0, 1.0};
Point(35) = {-0.074238, 0.736517, 0, 1.0};
Point(36) = {-0.073393, 0.736089, 0, 1.0};
Point(37) = {-0.072225, 0.735724, 0, 1.0};
Point(38) = {-0.070740, 0.735441, 0, 1.0};
Point(39) = {-0.068941, 0.735244, 0, 1.0};
Point(40) = {-0.066839, 0.735123, 0, 1.0};
Point(41) = {-0.064439, 0.735056, 0, 1.0};
Point(42) = {-0.061754, 0.735028, 0, 1.0};
Point(43) = {-0.058795, 0.735035, 0, 1.0};
Point(44) = {-0.055572, 0.735092, 0, 1.0};
Point(45) = {-0.052102, 0.735208, 0, 1.0};
Point(46) = {-0.048399, 0.735387, 0, 1.0};
Point(47) = {-0.044480, 0.735622, 0, 1.0};
Point(48) = {-0.040360, 0.735891, 0, 1.0};
Point(49) = {-0.036054, 0.736173, 0, 1.0};
Point(50) = {-0.031582, 0.736459, 0, 1.0};
Point(51) = {-0.026964, 0.736746, 0, 1.0};
Point(52) = {-0.022219, 0.737038, 0, 1.0};
Point(53) = {-0.017367, 0.737336, 0, 1.0};
Point(54) = {-0.007426, 0.737942, 0, 1.0};
Point(55) = {0.002688, 0.738555, 0, 1.0};
Point(56) = {0.012802, 0.739162, 0, 1.0};
Point(57) = {0.022744, 0.739755, 0, 1.0};
Point(58) = {0.032342, 0.740326, 0, 1.0};
Point(59) = {0.041433, 0.740873, 0, 1.0};
Point(60) = {0.049860, 0.741381, 0, 1.0};
Point(61) = {0.057480, 0.741843, 0, 1.0};
Point(62) = {0.064164, 0.742251, 0, 1.0};
Point(63) = {0.069793, 0.742617, 0, 1.0};
Point(64) = {0.074274, 0.742959, 0, 1.0};
Point(65) = {0.074957, 0.743014, 0, 1.0};
Point(66) = {-0.074898, -0.744515, 0, 1.0};
Point(67) = {-0.074209, -0.744615, 0, 1.0};
Point(68) = {-0.069691, -0.745216, 0, 1.0};
Point(69) = {-0.064022, -0.745876, 0, 1.0};
Point(70) = {-0.057294, -0.746583, 0, 1.0};
Point(71) = {-0.049627, -0.747321, 0, 1.0};
Point(72) = {-0.041151, -0.748059, 0, 1.0};
Point(73) = {-0.032011, -0.748755, 0, 1.0};
Point(74) = {-0.022367, -0.749347, 0, 1.0};
Point(75) = {-0.012385, -0.749780, 0, 1.0};
Point(76) = {-0.002239, -0.750000, 0, 1.0};
Point(77) = {0.007898, -0.749976, 0, 1.0};
Point(78) = {0.017852, -0.749704, 0, 1.0};
Point(79) = {0.022707, -0.749479, 0, 1.0};
Point(80) = {0.027453, -0.749198, 0, 1.0};
Point(81) = {0.032069, -0.748858, 0, 1.0};
Point(82) = {0.036536, -0.748459, 0, 1.0};
Point(83) = {0.040835, -0.747997, 0, 1.0};
Point(84) = {0.044945, -0.747472, 0, 1.0};
Point(85) = {0.048851, -0.746890, 0, 1.0};
Point(86) = {0.052536, -0.746258, 0, 1.0};
Point(87) = {0.055984, -0.745583, 0, 1.0};
Point(88) = {0.059181, -0.744877, 0, 1.0};
Point(89) = {0.062112, -0.744143, 0, 1.0};
Point(90) = {0.064766, -0.743385, 0, 1.0};
Point(91) = {0.067133, -0.742606, 0, 1.0};
Point(92) = {0.069199, -0.741808, 0, 1.0};
Point(93) = {0.070958, -0.741001, 0, 1.0};
Point(94) = {0.072401, -0.740205, 0, 1.0};
Point(95) = {0.073525, -0.739440, 0, 1.0};
Point(96) = {0.074325, -0.738732, 0, 1.0};
Point(97) = {0.074799, -0.738089, 0, 1.0};
Point(98) = {0.074942, -0.737514, 0, 1.0};
Point(99) = {0.074756, -0.736994, 0, 1.0};
Point(100) = {0.074238, -0.736517, 0, 1.0};
Point(101) = {0.073393, -0.736089, 0, 1.0};
Point(102) = {0.072225, -0.735724, 0, 1.0};
Point(103) = {0.070740, -0.735441, 0, 1.0};
Point(104) = {0.068941, -0.735244, 0, 1.0};
Point(105) = {0.066839, -0.735123, 0, 1.0};
Point(106) = {0.064439, -0.735056, 0, 1.0};
Point(107) = {0.061754, -0.735028, 0, 1.0};
Point(108) = {0.058795, -0.735035, 0, 1.0};
Point(109) = {0.055572, -0.735092, 0, 1.0};
Point(110) = {0.052102, -0.735208, 0, 1.0};
Point(111) = {0.048399, -0.735387, 0, 1.0};
Point(112) = {0.044480, -0.735622, 0, 1.0};
Point(113) = {0.040360, -0.735891, 0, 1.0};
Point(114) = {0.036054, -0.736173, 0, 1.0};
Point(115) = {0.031582, -0.736459, 0, 1.0};
Point(116) = {0.026964, -0.736746, 0, 1.0};
Point(117) = {0.022219, -0.737038, 0, 1.0};
Point(118) = {0.017367, -0.737336, 0, 1.0};
Point(119) = {0.007426, -0.737942, 0, 1.0};
Point(120) = {-0.002688, -0.738555, 0, 1.0};
Point(121) = {-0.012802, -0.739162, 0, 1.0};
Point(122) = {-0.022744, -0.739755, 0, 1.0};
Point(123) = {-0.032342, -0.740326, 0, 1.0};
Point(124) = {-0.041433, -0.740873, 0, 1.0};
Point(125) = {-0.049860, -0.741381, 0, 1.0};
Point(126) = {-0.057480, -0.741843, 0, 1.0};
Point(127) = {-0.064164, -0.742251, 0, 1.0};
Point(128) = {-0.069793, -0.742617, 0, 1.0};
Point(129) = {-0.074274, -0.742959, 0, 1.0};
Point(130) = {-0.074957, -0.743014, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:16};
Spline(2) = {16:49};
Spline(3) = {49:65};
Spline(4) = {65,1};

// Lines: second blade (splines 5-8)
Spline(5) = {66:81};
Spline(6) = {81:114};
Spline(7) = {114:130};
Spline(8) = {130,66};

// Outer domain (points 20001-4 and lines)
Point(131) = {-13.50000000, -15.00000000, 0, 1.0};
Point(132) = {-13.50000000, 15.00000000, 0, 1.0};
Point(133) = {13.50000000, 15.00000000, 0, 1.0};
Point(134) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {131, 132};
Line(12) = {132, 133};
Line(13) = {133, 134};
Line(14) = {131, 134};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
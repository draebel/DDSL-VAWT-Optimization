SetFactory("OpenCASCADE");

Point(1) = {0.074889, 0.742824, 0, 1.0};
Point(2) = {0.072628, 0.743241, 0, 1.0};
Point(3) = {0.069326, 0.743787, 0, 1.0};
Point(4) = {0.065633, 0.744333, 0, 1.0};
Point(5) = {0.061575, 0.744885, 0, 1.0};
Point(6) = {0.057181, 0.745443, 0, 1.0};
Point(7) = {0.052483, 0.745999, 0, 1.0};
Point(8) = {0.047511, 0.746553, 0, 1.0};
Point(9) = {0.042299, 0.747098, 0, 1.0};
Point(10) = {0.036886, 0.747627, 0, 1.0};
Point(11) = {0.031309, 0.748132, 0, 1.0};
Point(12) = {0.025606, 0.748606, 0, 1.0};
Point(13) = {0.019816, 0.749039, 0, 1.0};
Point(14) = {0.013980, 0.749414, 0, 1.0};
Point(15) = {0.008138, 0.749719, 0, 1.0};
Point(16) = {0.002313, 0.749917, 0, 1.0};
Point(17) = {-0.003492, 0.750000, 0, 1.0};
Point(18) = {-0.009252, 0.749994, 0, 1.0};
Point(19) = {-0.014936, 0.749897, 0, 1.0};
Point(20) = {-0.020507, 0.749717, 0, 1.0};
Point(21) = {-0.025934, 0.749453, 0, 1.0};
Point(22) = {-0.031185, 0.749107, 0, 1.0};
Point(23) = {-0.036227, 0.748677, 0, 1.0};
Point(24) = {-0.041038, 0.748161, 0, 1.0};
Point(25) = {-0.045595, 0.747560, 0, 1.0};
Point(26) = {-0.049882, 0.746880, 0, 1.0};
Point(27) = {-0.053878, 0.746132, 0, 1.0};
Point(28) = {-0.057564, 0.745323, 0, 1.0};
Point(29) = {-0.060919, 0.744464, 0, 1.0};
Point(30) = {-0.063929, 0.743562, 0, 1.0};
Point(31) = {-0.066579, 0.742626, 0, 1.0};
Point(32) = {-0.068851, 0.741664, 0, 1.0};
Point(33) = {-0.070735, 0.740683, 0, 1.0};
Point(34) = {-0.072229, 0.739659, 0, 1.0};
Point(35) = {-0.073374, 0.738595, 0, 1.0};
Point(36) = {-0.074210, 0.737552, 0, 1.0};
Point(37) = {-0.074739, 0.736582, 0, 1.0};
Point(38) = {-0.074963, 0.735743, 0, 1.0};
Point(39) = {-0.074901, 0.735126, 0, 1.0};
Point(40) = {-0.074384, 0.734843, 0, 1.0};
Point(41) = {-0.073273, 0.734802, 0, 1.0};
Point(42) = {-0.071634, 0.734900, 0, 1.0};
Point(43) = {-0.069492, 0.735141, 0, 1.0};
Point(44) = {-0.066864, 0.735538, 0, 1.0};
Point(45) = {-0.063736, 0.736106, 0, 1.0};
Point(46) = {-0.060080, 0.736811, 0, 1.0};
Point(47) = {-0.055913, 0.737631, 0, 1.0};
Point(48) = {-0.051255, 0.738529, 0, 1.0};
Point(49) = {-0.046124, 0.739481, 0, 1.0};
Point(50) = {-0.040550, 0.740455, 0, 1.0};
Point(51) = {-0.034570, 0.741425, 0, 1.0};
Point(52) = {-0.028222, 0.742360, 0, 1.0};
Point(53) = {-0.021548, 0.743235, 0, 1.0};
Point(54) = {-0.014594, 0.744015, 0, 1.0};
Point(55) = {-0.007415, 0.744675, 0, 1.0};
Point(56) = {-0.000064, 0.745173, 0, 1.0};
Point(57) = {0.007397, 0.745471, 0, 1.0};
Point(58) = {0.014876, 0.745474, 0, 1.0};
Point(59) = {0.022230, 0.745144, 0, 1.0};
Point(60) = {0.029143, 0.744630, 0, 1.0};
Point(61) = {0.035561, 0.744104, 0, 1.0};
Point(62) = {0.041680, 0.743662, 0, 1.0};
Point(63) = {0.047489, 0.743265, 0, 1.0};
Point(64) = {0.052971, 0.742896, 0, 1.0};
Point(65) = {0.058099, 0.742554, 0, 1.0};
Point(66) = {0.062848, 0.742230, 0, 1.0};
Point(67) = {0.067187, 0.741924, 0, 1.0};
Point(68) = {0.071092, 0.741634, 0, 1.0};
Point(69) = {0.074530, 0.741358, 0, 1.0};
Point(70) = {0.074935, 0.741324, 0, 1.0};
Point(71) = {-0.074889, -0.742824, 0, 1.0};
Point(72) = {-0.072628, -0.743241, 0, 1.0};
Point(73) = {-0.069326, -0.743787, 0, 1.0};
Point(74) = {-0.065633, -0.744333, 0, 1.0};
Point(75) = {-0.061575, -0.744885, 0, 1.0};
Point(76) = {-0.057181, -0.745443, 0, 1.0};
Point(77) = {-0.052483, -0.745999, 0, 1.0};
Point(78) = {-0.047511, -0.746553, 0, 1.0};
Point(79) = {-0.042299, -0.747098, 0, 1.0};
Point(80) = {-0.036886, -0.747627, 0, 1.0};
Point(81) = {-0.031309, -0.748132, 0, 1.0};
Point(82) = {-0.025606, -0.748606, 0, 1.0};
Point(83) = {-0.019816, -0.749039, 0, 1.0};
Point(84) = {-0.013980, -0.749414, 0, 1.0};
Point(85) = {-0.008138, -0.749719, 0, 1.0};
Point(86) = {-0.002313, -0.749917, 0, 1.0};
Point(87) = {0.003492, -0.750000, 0, 1.0};
Point(88) = {0.009252, -0.749994, 0, 1.0};
Point(89) = {0.014936, -0.749897, 0, 1.0};
Point(90) = {0.020507, -0.749717, 0, 1.0};
Point(91) = {0.025934, -0.749453, 0, 1.0};
Point(92) = {0.031185, -0.749107, 0, 1.0};
Point(93) = {0.036227, -0.748677, 0, 1.0};
Point(94) = {0.041038, -0.748161, 0, 1.0};
Point(95) = {0.045595, -0.747560, 0, 1.0};
Point(96) = {0.049882, -0.746880, 0, 1.0};
Point(97) = {0.053878, -0.746132, 0, 1.0};
Point(98) = {0.057564, -0.745323, 0, 1.0};
Point(99) = {0.060919, -0.744464, 0, 1.0};
Point(100) = {0.063929, -0.743562, 0, 1.0};
Point(101) = {0.066579, -0.742626, 0, 1.0};
Point(102) = {0.068851, -0.741664, 0, 1.0};
Point(103) = {0.070735, -0.740683, 0, 1.0};
Point(104) = {0.072229, -0.739659, 0, 1.0};
Point(105) = {0.073374, -0.738595, 0, 1.0};
Point(106) = {0.074210, -0.737552, 0, 1.0};
Point(107) = {0.074739, -0.736582, 0, 1.0};
Point(108) = {0.074963, -0.735743, 0, 1.0};
Point(109) = {0.074901, -0.735126, 0, 1.0};
Point(110) = {0.074384, -0.734843, 0, 1.0};
Point(111) = {0.073273, -0.734802, 0, 1.0};
Point(112) = {0.071634, -0.734900, 0, 1.0};
Point(113) = {0.069492, -0.735141, 0, 1.0};
Point(114) = {0.066864, -0.735538, 0, 1.0};
Point(115) = {0.063736, -0.736106, 0, 1.0};
Point(116) = {0.060080, -0.736811, 0, 1.0};
Point(117) = {0.055913, -0.737631, 0, 1.0};
Point(118) = {0.051255, -0.738529, 0, 1.0};
Point(119) = {0.046124, -0.739481, 0, 1.0};
Point(120) = {0.040550, -0.740455, 0, 1.0};
Point(121) = {0.034570, -0.741425, 0, 1.0};
Point(122) = {0.028222, -0.742360, 0, 1.0};
Point(123) = {0.021548, -0.743235, 0, 1.0};
Point(124) = {0.014594, -0.744015, 0, 1.0};
Point(125) = {0.007415, -0.744675, 0, 1.0};
Point(126) = {0.000064, -0.745173, 0, 1.0};
Point(127) = {-0.007397, -0.745471, 0, 1.0};
Point(128) = {-0.014876, -0.745474, 0, 1.0};
Point(129) = {-0.022230, -0.745144, 0, 1.0};
Point(130) = {-0.029143, -0.744630, 0, 1.0};
Point(131) = {-0.035561, -0.744104, 0, 1.0};
Point(132) = {-0.041680, -0.743662, 0, 1.0};
Point(133) = {-0.047489, -0.743265, 0, 1.0};
Point(134) = {-0.052971, -0.742896, 0, 1.0};
Point(135) = {-0.058099, -0.742554, 0, 1.0};
Point(136) = {-0.062848, -0.742230, 0, 1.0};
Point(137) = {-0.067187, -0.741924, 0, 1.0};
Point(138) = {-0.071092, -0.741634, 0, 1.0};
Point(139) = {-0.074530, -0.741358, 0, 1.0};
Point(140) = {-0.074935, -0.741324, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:23};
Spline(2) = {23:51};
Spline(3) = {51:70};
Spline(4) = {70,1};

// Lines: second blade (splines 5-8)
Spline(5) = {71:93};
Spline(6) = {93:121};
Spline(7) = {121:140};
Spline(8) = {140,71};

// Outer domain (points 20001-4 and lines)
Point(141) = {-13.50000000, -15.00000000, 0, 1.0};
Point(142) = {-13.50000000, 15.00000000, 0, 1.0};
Point(143) = {13.50000000, 15.00000000, 0, 1.0};
Point(144) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {141, 142};
Line(12) = {142, 143};
Line(13) = {143, 144};
Line(14) = {141, 144};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074561, 0.746784, 0, 1.0};
Point(2) = {0.072258, 0.746229, 0, 1.0};
Point(3) = {0.068004, 0.745244, 0, 1.0};
Point(4) = {0.062939, 0.744070, 0, 1.0};
Point(5) = {0.057153, 0.742691, 0, 1.0};
Point(6) = {0.050742, 0.741119, 0, 1.0};
Point(7) = {0.043816, 0.739369, 0, 1.0};
Point(8) = {0.036480, 0.737473, 0, 1.0};
Point(9) = {0.028847, 0.735469, 0, 1.0};
Point(10) = {0.021023, 0.733403, 0, 1.0};
Point(11) = {0.013110, 0.731330, 0, 1.0};
Point(12) = {0.005209, 0.729304, 0, 1.0};
Point(13) = {-0.002596, 0.727383, 0, 1.0};
Point(14) = {-0.010220, 0.725622, 0, 1.0};
Point(15) = {-0.017596, 0.724075, 0, 1.0};
Point(16) = {-0.024661, 0.722788, 0, 1.0};
Point(17) = {-0.031361, 0.721810, 0, 1.0};
Point(18) = {-0.037676, 0.721181, 0, 1.0};
Point(19) = {-0.043592, 0.720906, 0, 1.0};
Point(20) = {-0.049088, 0.720968, 0, 1.0};
Point(21) = {-0.054144, 0.721337, 0, 1.0};
Point(22) = {-0.058721, 0.721974, 0, 1.0};
Point(23) = {-0.062783, 0.722838, 0, 1.0};
Point(24) = {-0.066292, 0.723892, 0, 1.0};
Point(25) = {-0.069214, 0.725093, 0, 1.0};
Point(26) = {-0.071522, 0.726395, 0, 1.0};
Point(27) = {-0.073193, 0.727737, 0, 1.0};
Point(28) = {-0.074198, 0.729043, 0, 1.0};
Point(29) = {-0.074309, 0.729277, 0, 1.0};
Point(30) = {-0.074434, 0.729636, 0, 1.0};
Point(31) = {-0.074483, 0.729864, 0, 1.0};
Point(32) = {-0.074503, 0.730080, 0, 1.0};
Point(33) = {-0.074499, 0.730183, 0, 1.0};
Point(34) = {-0.074487, 0.730280, 0, 1.0};
Point(35) = {-0.074463, 0.730371, 0, 1.0};
Point(36) = {-0.074422, 0.730459, 0, 1.0};
Point(37) = {-0.074366, 0.730547, 0, 1.0};
Point(38) = {-0.074298, 0.730637, 0, 1.0};
Point(39) = {-0.074127, 0.730820, 0, 1.0};
Point(40) = {-0.073915, 0.731009, 0, 1.0};
Point(41) = {-0.073523, 0.731299, 0, 1.0};
Point(42) = {-0.072057, 0.732128, 0, 1.0};
Point(43) = {-0.069466, 0.733207, 0, 1.0};
Point(44) = {-0.066039, 0.734329, 0, 1.0};
Point(45) = {-0.061816, 0.735493, 0, 1.0};
Point(46) = {-0.056843, 0.736703, 0, 1.0};
Point(47) = {-0.051190, 0.737975, 0, 1.0};
Point(48) = {-0.044955, 0.739300, 0, 1.0};
Point(49) = {-0.038228, 0.740653, 0, 1.0};
Point(50) = {-0.031099, 0.742006, 0, 1.0};
Point(51) = {-0.023651, 0.743323, 0, 1.0};
Point(52) = {-0.015968, 0.744620, 0, 1.0};
Point(53) = {-0.008115, 0.745754, 0, 1.0};
Point(54) = {-0.000191, 0.746826, 0, 1.0};
Point(55) = {0.007722, 0.747780, 0, 1.0};
Point(56) = {0.015541, 0.748595, 0, 1.0};
Point(57) = {0.023180, 0.749255, 0, 1.0};
Point(58) = {0.030558, 0.749737, 0, 1.0};
Point(59) = {0.037593, 0.750000, 0, 1.0};
Point(60) = {0.044278, 0.749980, 0, 1.0};
Point(61) = {0.050669, 0.749719, 0, 1.0};
Point(62) = {0.056735, 0.749349, 0, 1.0};
Point(63) = {0.062364, 0.748970, 0, 1.0};
Point(64) = {0.067436, 0.748640, 0, 1.0};
Point(65) = {0.071825, 0.748392, 0, 1.0};
Point(66) = {0.074385, 0.748271, 0, 1.0};
Point(67) = {-0.074561, -0.746784, 0, 1.0};
Point(68) = {-0.072258, -0.746229, 0, 1.0};
Point(69) = {-0.068004, -0.745244, 0, 1.0};
Point(70) = {-0.062939, -0.744070, 0, 1.0};
Point(71) = {-0.057153, -0.742691, 0, 1.0};
Point(72) = {-0.050742, -0.741119, 0, 1.0};
Point(73) = {-0.043816, -0.739369, 0, 1.0};
Point(74) = {-0.036480, -0.737473, 0, 1.0};
Point(75) = {-0.028847, -0.735469, 0, 1.0};
Point(76) = {-0.021023, -0.733403, 0, 1.0};
Point(77) = {-0.013110, -0.731330, 0, 1.0};
Point(78) = {-0.005209, -0.729304, 0, 1.0};
Point(79) = {0.002596, -0.727383, 0, 1.0};
Point(80) = {0.010220, -0.725622, 0, 1.0};
Point(81) = {0.017596, -0.724075, 0, 1.0};
Point(82) = {0.024661, -0.722788, 0, 1.0};
Point(83) = {0.031361, -0.721810, 0, 1.0};
Point(84) = {0.037676, -0.721181, 0, 1.0};
Point(85) = {0.043592, -0.720906, 0, 1.0};
Point(86) = {0.049088, -0.720968, 0, 1.0};
Point(87) = {0.054144, -0.721337, 0, 1.0};
Point(88) = {0.058721, -0.721974, 0, 1.0};
Point(89) = {0.062783, -0.722838, 0, 1.0};
Point(90) = {0.066292, -0.723892, 0, 1.0};
Point(91) = {0.069214, -0.725093, 0, 1.0};
Point(92) = {0.071522, -0.726395, 0, 1.0};
Point(93) = {0.073193, -0.727737, 0, 1.0};
Point(94) = {0.074198, -0.729043, 0, 1.0};
Point(95) = {0.074309, -0.729277, 0, 1.0};
Point(96) = {0.074434, -0.729636, 0, 1.0};
Point(97) = {0.074483, -0.729864, 0, 1.0};
Point(98) = {0.074503, -0.730080, 0, 1.0};
Point(99) = {0.074499, -0.730183, 0, 1.0};
Point(100) = {0.074487, -0.730280, 0, 1.0};
Point(101) = {0.074463, -0.730371, 0, 1.0};
Point(102) = {0.074422, -0.730459, 0, 1.0};
Point(103) = {0.074366, -0.730547, 0, 1.0};
Point(104) = {0.074298, -0.730637, 0, 1.0};
Point(105) = {0.074127, -0.730820, 0, 1.0};
Point(106) = {0.073915, -0.731009, 0, 1.0};
Point(107) = {0.073523, -0.731299, 0, 1.0};
Point(108) = {0.072057, -0.732128, 0, 1.0};
Point(109) = {0.069466, -0.733207, 0, 1.0};
Point(110) = {0.066039, -0.734329, 0, 1.0};
Point(111) = {0.061816, -0.735493, 0, 1.0};
Point(112) = {0.056843, -0.736703, 0, 1.0};
Point(113) = {0.051190, -0.737975, 0, 1.0};
Point(114) = {0.044955, -0.739300, 0, 1.0};
Point(115) = {0.038228, -0.740653, 0, 1.0};
Point(116) = {0.031099, -0.742006, 0, 1.0};
Point(117) = {0.023651, -0.743323, 0, 1.0};
Point(118) = {0.015968, -0.744620, 0, 1.0};
Point(119) = {0.008115, -0.745754, 0, 1.0};
Point(120) = {0.000191, -0.746826, 0, 1.0};
Point(121) = {-0.007722, -0.747780, 0, 1.0};
Point(122) = {-0.015541, -0.748595, 0, 1.0};
Point(123) = {-0.023180, -0.749255, 0, 1.0};
Point(124) = {-0.030558, -0.749737, 0, 1.0};
Point(125) = {-0.037593, -0.750000, 0, 1.0};
Point(126) = {-0.044278, -0.749980, 0, 1.0};
Point(127) = {-0.050669, -0.749719, 0, 1.0};
Point(128) = {-0.056735, -0.749349, 0, 1.0};
Point(129) = {-0.062364, -0.748970, 0, 1.0};
Point(130) = {-0.067436, -0.748640, 0, 1.0};
Point(131) = {-0.071825, -0.748392, 0, 1.0};
Point(132) = {-0.074385, -0.748271, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:49};
Spline(3) = {49:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:83};
Spline(6) = {83:115};
Spline(7) = {115:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
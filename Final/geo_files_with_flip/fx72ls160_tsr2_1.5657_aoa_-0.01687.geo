SetFactory("OpenCASCADE");

Point(1) = {0.075001, 0.744744, 0, 1.0};
Point(2) = {0.074957, 0.744729, 0, 1.0};
Point(3) = {0.072518, 0.743894, 0, 1.0};
Point(4) = {0.069786, 0.742960, 0, 1.0};
Point(5) = {0.066774, 0.741927, 0, 1.0};
Point(6) = {0.063492, 0.740800, 0, 1.0};
Point(7) = {0.059956, 0.739582, 0, 1.0};
Point(8) = {0.056180, 0.738286, 0, 1.0};
Point(9) = {0.052182, 0.736915, 0, 1.0};
Point(10) = {0.047979, 0.735470, 0, 1.0};
Point(11) = {0.043585, 0.733953, 0, 1.0};
Point(12) = {0.039023, 0.732370, 0, 1.0};
Point(13) = {0.034311, 0.730747, 0, 1.0};
Point(14) = {0.029471, 0.729111, 0, 1.0};
Point(15) = {0.024521, 0.727501, 0, 1.0};
Point(16) = {0.019484, 0.725983, 0, 1.0};
Point(17) = {0.014379, 0.724649, 0, 1.0};
Point(18) = {0.009231, 0.723571, 0, 1.0};
Point(19) = {0.004061, 0.722773, 0, 1.0};
Point(20) = {-0.001109, 0.722235, 0, 1.0};
Point(21) = {-0.006257, 0.721946, 0, 1.0};
Point(22) = {-0.011362, 0.721906, 0, 1.0};
Point(23) = {-0.016399, 0.722110, 0, 1.0};
Point(24) = {-0.021350, 0.722529, 0, 1.0};
Point(25) = {-0.026191, 0.723124, 0, 1.0};
Point(26) = {-0.030903, 0.723878, 0, 1.0};
Point(27) = {-0.035466, 0.724781, 0, 1.0};
Point(28) = {-0.039860, 0.725816, 0, 1.0};
Point(29) = {-0.044065, 0.726969, 0, 1.0};
Point(30) = {-0.048064, 0.728226, 0, 1.0};
Point(31) = {-0.051840, 0.729571, 0, 1.0};
Point(32) = {-0.055377, 0.730994, 0, 1.0};
Point(33) = {-0.058660, 0.732478, 0, 1.0};
Point(34) = {-0.061672, 0.734007, 0, 1.0};
Point(35) = {-0.064405, 0.735558, 0, 1.0};
Point(36) = {-0.066845, 0.737124, 0, 1.0};
Point(37) = {-0.068980, 0.738698, 0, 1.0};
Point(38) = {-0.070803, 0.740242, 0, 1.0};
Point(39) = {-0.072304, 0.741737, 0, 1.0};
Point(40) = {-0.073479, 0.743141, 0, 1.0};
Point(41) = {-0.074322, 0.744613, 0, 1.0};
Point(42) = {-0.074830, 0.746164, 0, 1.0};
Point(43) = {-0.075000, 0.747482, 0, 1.0};
Point(44) = {-0.074831, 0.748404, 0, 1.0};
Point(45) = {-0.074324, 0.748889, 0, 1.0};
Point(46) = {-0.073481, 0.749215, 0, 1.0};
Point(47) = {-0.072306, 0.749559, 0, 1.0};
Point(48) = {-0.070806, 0.749808, 0, 1.0};
Point(49) = {-0.068983, 0.749955, 0, 1.0};
Point(50) = {-0.066849, 0.750000, 0, 1.0};
Point(51) = {-0.064409, 0.749964, 0, 1.0};
Point(52) = {-0.061677, 0.749877, 0, 1.0};
Point(53) = {-0.058665, 0.749738, 0, 1.0};
Point(54) = {-0.055383, 0.749572, 0, 1.0};
Point(55) = {-0.051846, 0.749380, 0, 1.0};
Point(56) = {-0.048070, 0.749156, 0, 1.0};
Point(57) = {-0.044071, 0.748921, 0, 1.0};
Point(58) = {-0.039867, 0.748672, 0, 1.0};
Point(59) = {-0.035473, 0.748414, 0, 1.0};
Point(60) = {-0.030910, 0.748159, 0, 1.0};
Point(61) = {-0.026198, 0.747906, 0, 1.0};
Point(62) = {-0.021357, 0.747661, 0, 1.0};
Point(63) = {-0.016407, 0.747427, 0, 1.0};
Point(64) = {-0.011369, 0.747204, 0, 1.0};
Point(65) = {-0.006264, 0.746995, 0, 1.0};
Point(66) = {-0.001116, 0.746803, 0, 1.0};
Point(67) = {0.004054, 0.746631, 0, 1.0};
Point(68) = {0.009225, 0.746481, 0, 1.0};
Point(69) = {0.014373, 0.746353, 0, 1.0};
Point(70) = {0.019478, 0.746247, 0, 1.0};
Point(71) = {0.024515, 0.746158, 0, 1.0};
Point(72) = {0.029466, 0.746093, 0, 1.0};
Point(73) = {0.034307, 0.746045, 0, 1.0};
Point(74) = {0.039019, 0.746017, 0, 1.0};
Point(75) = {0.043582, 0.746001, 0, 1.0};
Point(76) = {0.047975, 0.745985, 0, 1.0};
Point(77) = {0.052180, 0.745959, 0, 1.0};
Point(78) = {0.056178, 0.745929, 0, 1.0};
Point(79) = {0.059954, 0.745904, 0, 1.0};
Point(80) = {0.063491, 0.745896, 0, 1.0};
Point(81) = {0.066773, 0.745916, 0, 1.0};
Point(82) = {0.069785, 0.745972, 0, 1.0};
Point(83) = {0.072517, 0.746077, 0, 1.0};
Point(84) = {0.074956, 0.746235, 0, 1.0};
Point(85) = {0.075000, 0.746237, 0, 1.0};
Point(86) = {-0.075001, -0.744744, 0, 1.0};
Point(87) = {-0.074957, -0.744729, 0, 1.0};
Point(88) = {-0.072518, -0.743894, 0, 1.0};
Point(89) = {-0.069786, -0.742960, 0, 1.0};
Point(90) = {-0.066774, -0.741927, 0, 1.0};
Point(91) = {-0.063492, -0.740800, 0, 1.0};
Point(92) = {-0.059956, -0.739582, 0, 1.0};
Point(93) = {-0.056180, -0.738286, 0, 1.0};
Point(94) = {-0.052182, -0.736915, 0, 1.0};
Point(95) = {-0.047979, -0.735470, 0, 1.0};
Point(96) = {-0.043585, -0.733953, 0, 1.0};
Point(97) = {-0.039023, -0.732370, 0, 1.0};
Point(98) = {-0.034311, -0.730747, 0, 1.0};
Point(99) = {-0.029471, -0.729111, 0, 1.0};
Point(100) = {-0.024521, -0.727501, 0, 1.0};
Point(101) = {-0.019484, -0.725983, 0, 1.0};
Point(102) = {-0.014379, -0.724649, 0, 1.0};
Point(103) = {-0.009231, -0.723571, 0, 1.0};
Point(104) = {-0.004061, -0.722773, 0, 1.0};
Point(105) = {0.001109, -0.722235, 0, 1.0};
Point(106) = {0.006257, -0.721946, 0, 1.0};
Point(107) = {0.011362, -0.721906, 0, 1.0};
Point(108) = {0.016399, -0.722110, 0, 1.0};
Point(109) = {0.021350, -0.722529, 0, 1.0};
Point(110) = {0.026191, -0.723124, 0, 1.0};
Point(111) = {0.030903, -0.723878, 0, 1.0};
Point(112) = {0.035466, -0.724781, 0, 1.0};
Point(113) = {0.039860, -0.725816, 0, 1.0};
Point(114) = {0.044065, -0.726969, 0, 1.0};
Point(115) = {0.048064, -0.728226, 0, 1.0};
Point(116) = {0.051840, -0.729571, 0, 1.0};
Point(117) = {0.055377, -0.730994, 0, 1.0};
Point(118) = {0.058660, -0.732478, 0, 1.0};
Point(119) = {0.061672, -0.734007, 0, 1.0};
Point(120) = {0.064405, -0.735558, 0, 1.0};
Point(121) = {0.066845, -0.737124, 0, 1.0};
Point(122) = {0.068980, -0.738698, 0, 1.0};
Point(123) = {0.070803, -0.740242, 0, 1.0};
Point(124) = {0.072304, -0.741737, 0, 1.0};
Point(125) = {0.073479, -0.743141, 0, 1.0};
Point(126) = {0.074322, -0.744613, 0, 1.0};
Point(127) = {0.074830, -0.746164, 0, 1.0};
Point(128) = {0.075000, -0.747482, 0, 1.0};
Point(129) = {0.074831, -0.748404, 0, 1.0};
Point(130) = {0.074324, -0.748889, 0, 1.0};
Point(131) = {0.073481, -0.749215, 0, 1.0};
Point(132) = {0.072306, -0.749559, 0, 1.0};
Point(133) = {0.070806, -0.749808, 0, 1.0};
Point(134) = {0.068983, -0.749955, 0, 1.0};
Point(135) = {0.066849, -0.750000, 0, 1.0};
Point(136) = {0.064409, -0.749964, 0, 1.0};
Point(137) = {0.061677, -0.749877, 0, 1.0};
Point(138) = {0.058665, -0.749738, 0, 1.0};
Point(139) = {0.055383, -0.749572, 0, 1.0};
Point(140) = {0.051846, -0.749380, 0, 1.0};
Point(141) = {0.048070, -0.749156, 0, 1.0};
Point(142) = {0.044071, -0.748921, 0, 1.0};
Point(143) = {0.039867, -0.748672, 0, 1.0};
Point(144) = {0.035473, -0.748414, 0, 1.0};
Point(145) = {0.030910, -0.748159, 0, 1.0};
Point(146) = {0.026198, -0.747906, 0, 1.0};
Point(147) = {0.021357, -0.747661, 0, 1.0};
Point(148) = {0.016407, -0.747427, 0, 1.0};
Point(149) = {0.011369, -0.747204, 0, 1.0};
Point(150) = {0.006264, -0.746995, 0, 1.0};
Point(151) = {0.001116, -0.746803, 0, 1.0};
Point(152) = {-0.004054, -0.746631, 0, 1.0};
Point(153) = {-0.009225, -0.746481, 0, 1.0};
Point(154) = {-0.014373, -0.746353, 0, 1.0};
Point(155) = {-0.019478, -0.746247, 0, 1.0};
Point(156) = {-0.024515, -0.746158, 0, 1.0};
Point(157) = {-0.029466, -0.746093, 0, 1.0};
Point(158) = {-0.034307, -0.746045, 0, 1.0};
Point(159) = {-0.039019, -0.746017, 0, 1.0};
Point(160) = {-0.043582, -0.746001, 0, 1.0};
Point(161) = {-0.047975, -0.745985, 0, 1.0};
Point(162) = {-0.052180, -0.745959, 0, 1.0};
Point(163) = {-0.056178, -0.745929, 0, 1.0};
Point(164) = {-0.059954, -0.745904, 0, 1.0};
Point(165) = {-0.063491, -0.745896, 0, 1.0};
Point(166) = {-0.066773, -0.745916, 0, 1.0};
Point(167) = {-0.069785, -0.745972, 0, 1.0};
Point(168) = {-0.072517, -0.746077, 0, 1.0};
Point(169) = {-0.074956, -0.746235, 0, 1.0};
Point(170) = {-0.075000, -0.746237, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:59};
Spline(3) = {59:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:144};
Spline(7) = {144:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
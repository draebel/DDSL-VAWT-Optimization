SetFactory("OpenCASCADE");

Point(1) = {0.074386, 0.748145, 0, 1.0};
Point(2) = {0.073567, 0.747742, 0, 1.0};
Point(3) = {0.071917, 0.746819, 0, 1.0};
Point(4) = {0.069983, 0.745747, 0, 1.0};
Point(5) = {0.067770, 0.744543, 0, 1.0};
Point(6) = {0.065287, 0.743222, 0, 1.0};
Point(7) = {0.062545, 0.741797, 0, 1.0};
Point(8) = {0.059552, 0.740281, 0, 1.0};
Point(9) = {0.056321, 0.738687, 0, 1.0};
Point(10) = {0.052867, 0.737019, 0, 1.0};
Point(11) = {0.049205, 0.735284, 0, 1.0};
Point(12) = {0.045350, 0.733488, 0, 1.0};
Point(13) = {0.041316, 0.731648, 0, 1.0};
Point(14) = {0.037120, 0.729784, 0, 1.0};
Point(15) = {0.032778, 0.727918, 0, 1.0};
Point(16) = {0.028307, 0.726070, 0, 1.0};
Point(17) = {0.023723, 0.724262, 0, 1.0};
Point(18) = {0.019046, 0.722514, 0, 1.0};
Point(19) = {0.014290, 0.720846, 0, 1.0};
Point(20) = {0.009478, 0.719274, 0, 1.0};
Point(21) = {0.004626, 0.717827, 0, 1.0};
Point(22) = {-0.000246, 0.716521, 0, 1.0};
Point(23) = {-0.005119, 0.715369, 0, 1.0};
Point(24) = {-0.009973, 0.714375, 0, 1.0};
Point(25) = {-0.014785, 0.713550, 0, 1.0};
Point(26) = {-0.019538, 0.712904, 0, 1.0};
Point(27) = {-0.024212, 0.712445, 0, 1.0};
Point(28) = {-0.028787, 0.712181, 0, 1.0};
Point(29) = {-0.033244, 0.712112, 0, 1.0};
Point(30) = {-0.037565, 0.712240, 0, 1.0};
Point(31) = {-0.041728, 0.712559, 0, 1.0};
Point(32) = {-0.045716, 0.713057, 0, 1.0};
Point(33) = {-0.049510, 0.713721, 0, 1.0};
Point(34) = {-0.053091, 0.714527, 0, 1.0};
Point(35) = {-0.056440, 0.715460, 0, 1.0};
Point(36) = {-0.059542, 0.716503, 0, 1.0};
Point(37) = {-0.062381, 0.717632, 0, 1.0};
Point(38) = {-0.064945, 0.718830, 0, 1.0};
Point(39) = {-0.067216, 0.720077, 0, 1.0};
Point(40) = {-0.069189, 0.721362, 0, 1.0};
Point(41) = {-0.070851, 0.722685, 0, 1.0};
Point(42) = {-0.072195, 0.724014, 0, 1.0};
Point(43) = {-0.073208, 0.725308, 0, 1.0};
Point(44) = {-0.073884, 0.726533, 0, 1.0};
Point(45) = {-0.074216, 0.727678, 0, 1.0};
Point(46) = {-0.074215, 0.728807, 0, 1.0};
Point(47) = {-0.073890, 0.729989, 0, 1.0};
Point(48) = {-0.073250, 0.731254, 0, 1.0};
Point(49) = {-0.072292, 0.732580, 0, 1.0};
Point(50) = {-0.071014, 0.733890, 0, 1.0};
Point(51) = {-0.069413, 0.735150, 0, 1.0};
Point(52) = {-0.067498, 0.736353, 0, 1.0};
Point(53) = {-0.065277, 0.737506, 0, 1.0};
Point(54) = {-0.062763, 0.738613, 0, 1.0};
Point(55) = {-0.059968, 0.739670, 0, 1.0};
Point(56) = {-0.056902, 0.740682, 0, 1.0};
Point(57) = {-0.053580, 0.741654, 0, 1.0};
Point(58) = {-0.050019, 0.742589, 0, 1.0};
Point(59) = {-0.046235, 0.743484, 0, 1.0};
Point(60) = {-0.042242, 0.744335, 0, 1.0};
Point(61) = {-0.038057, 0.745140, 0, 1.0};
Point(62) = {-0.033699, 0.745895, 0, 1.0};
Point(63) = {-0.029187, 0.746592, 0, 1.0};
Point(64) = {-0.024540, 0.747232, 0, 1.0};
Point(65) = {-0.019777, 0.747812, 0, 1.0};
Point(66) = {-0.014921, 0.748332, 0, 1.0};
Point(67) = {-0.009988, 0.748788, 0, 1.0};
Point(68) = {-0.005004, 0.749173, 0, 1.0};
Point(69) = {0.000014, 0.749480, 0, 1.0};
Point(70) = {0.005043, 0.749710, 0, 1.0};
Point(71) = {0.010061, 0.749868, 0, 1.0};
Point(72) = {0.015046, 0.749962, 0, 1.0};
Point(73) = {0.019973, 0.750000, 0, 1.0};
Point(74) = {0.024821, 0.749994, 0, 1.0};
Point(75) = {0.029566, 0.749960, 0, 1.0};
Point(76) = {0.034187, 0.749909, 0, 1.0};
Point(77) = {0.038663, 0.749853, 0, 1.0};
Point(78) = {0.042973, 0.749799, 0, 1.0};
Point(79) = {0.047096, 0.749754, 0, 1.0};
Point(80) = {0.051016, 0.749724, 0, 1.0};
Point(81) = {0.054714, 0.749714, 0, 1.0};
Point(82) = {0.058177, 0.749721, 0, 1.0};
Point(83) = {0.061389, 0.749731, 0, 1.0};
Point(84) = {0.064339, 0.749729, 0, 1.0};
Point(85) = {0.067016, 0.749712, 0, 1.0};
Point(86) = {0.069409, 0.749687, 0, 1.0};
Point(87) = {0.071502, 0.749666, 0, 1.0};
Point(88) = {0.073289, 0.749654, 0, 1.0};
Point(89) = {0.074166, 0.749649, 0, 1.0};
Point(90) = {-0.074386, -0.748145, 0, 1.0};
Point(91) = {-0.073567, -0.747742, 0, 1.0};
Point(92) = {-0.071917, -0.746819, 0, 1.0};
Point(93) = {-0.069983, -0.745747, 0, 1.0};
Point(94) = {-0.067770, -0.744543, 0, 1.0};
Point(95) = {-0.065287, -0.743222, 0, 1.0};
Point(96) = {-0.062545, -0.741797, 0, 1.0};
Point(97) = {-0.059552, -0.740281, 0, 1.0};
Point(98) = {-0.056321, -0.738687, 0, 1.0};
Point(99) = {-0.052867, -0.737019, 0, 1.0};
Point(100) = {-0.049205, -0.735284, 0, 1.0};
Point(101) = {-0.045350, -0.733488, 0, 1.0};
Point(102) = {-0.041316, -0.731648, 0, 1.0};
Point(103) = {-0.037120, -0.729784, 0, 1.0};
Point(104) = {-0.032778, -0.727918, 0, 1.0};
Point(105) = {-0.028307, -0.726070, 0, 1.0};
Point(106) = {-0.023723, -0.724262, 0, 1.0};
Point(107) = {-0.019046, -0.722514, 0, 1.0};
Point(108) = {-0.014290, -0.720846, 0, 1.0};
Point(109) = {-0.009478, -0.719274, 0, 1.0};
Point(110) = {-0.004626, -0.717827, 0, 1.0};
Point(111) = {0.000246, -0.716521, 0, 1.0};
Point(112) = {0.005119, -0.715369, 0, 1.0};
Point(113) = {0.009973, -0.714375, 0, 1.0};
Point(114) = {0.014785, -0.713550, 0, 1.0};
Point(115) = {0.019538, -0.712904, 0, 1.0};
Point(116) = {0.024212, -0.712445, 0, 1.0};
Point(117) = {0.028787, -0.712181, 0, 1.0};
Point(118) = {0.033244, -0.712112, 0, 1.0};
Point(119) = {0.037565, -0.712240, 0, 1.0};
Point(120) = {0.041728, -0.712559, 0, 1.0};
Point(121) = {0.045716, -0.713057, 0, 1.0};
Point(122) = {0.049510, -0.713721, 0, 1.0};
Point(123) = {0.053091, -0.714527, 0, 1.0};
Point(124) = {0.056440, -0.715460, 0, 1.0};
Point(125) = {0.059542, -0.716503, 0, 1.0};
Point(126) = {0.062381, -0.717632, 0, 1.0};
Point(127) = {0.064945, -0.718830, 0, 1.0};
Point(128) = {0.067216, -0.720077, 0, 1.0};
Point(129) = {0.069189, -0.721362, 0, 1.0};
Point(130) = {0.070851, -0.722685, 0, 1.0};
Point(131) = {0.072195, -0.724014, 0, 1.0};
Point(132) = {0.073208, -0.725308, 0, 1.0};
Point(133) = {0.073884, -0.726533, 0, 1.0};
Point(134) = {0.074216, -0.727678, 0, 1.0};
Point(135) = {0.074215, -0.728807, 0, 1.0};
Point(136) = {0.073890, -0.729989, 0, 1.0};
Point(137) = {0.073250, -0.731254, 0, 1.0};
Point(138) = {0.072292, -0.732580, 0, 1.0};
Point(139) = {0.071014, -0.733890, 0, 1.0};
Point(140) = {0.069413, -0.735150, 0, 1.0};
Point(141) = {0.067498, -0.736353, 0, 1.0};
Point(142) = {0.065277, -0.737506, 0, 1.0};
Point(143) = {0.062763, -0.738613, 0, 1.0};
Point(144) = {0.059968, -0.739670, 0, 1.0};
Point(145) = {0.056902, -0.740682, 0, 1.0};
Point(146) = {0.053580, -0.741654, 0, 1.0};
Point(147) = {0.050019, -0.742589, 0, 1.0};
Point(148) = {0.046235, -0.743484, 0, 1.0};
Point(149) = {0.042242, -0.744335, 0, 1.0};
Point(150) = {0.038057, -0.745140, 0, 1.0};
Point(151) = {0.033699, -0.745895, 0, 1.0};
Point(152) = {0.029187, -0.746592, 0, 1.0};
Point(153) = {0.024540, -0.747232, 0, 1.0};
Point(154) = {0.019777, -0.747812, 0, 1.0};
Point(155) = {0.014921, -0.748332, 0, 1.0};
Point(156) = {0.009988, -0.748788, 0, 1.0};
Point(157) = {0.005004, -0.749173, 0, 1.0};
Point(158) = {-0.000014, -0.749480, 0, 1.0};
Point(159) = {-0.005043, -0.749710, 0, 1.0};
Point(160) = {-0.010061, -0.749868, 0, 1.0};
Point(161) = {-0.015046, -0.749962, 0, 1.0};
Point(162) = {-0.019973, -0.750000, 0, 1.0};
Point(163) = {-0.024821, -0.749994, 0, 1.0};
Point(164) = {-0.029566, -0.749960, 0, 1.0};
Point(165) = {-0.034187, -0.749909, 0, 1.0};
Point(166) = {-0.038663, -0.749853, 0, 1.0};
Point(167) = {-0.042973, -0.749799, 0, 1.0};
Point(168) = {-0.047096, -0.749754, 0, 1.0};
Point(169) = {-0.051016, -0.749724, 0, 1.0};
Point(170) = {-0.054714, -0.749714, 0, 1.0};
Point(171) = {-0.058177, -0.749721, 0, 1.0};
Point(172) = {-0.061389, -0.749731, 0, 1.0};
Point(173) = {-0.064339, -0.749729, 0, 1.0};
Point(174) = {-0.067016, -0.749712, 0, 1.0};
Point(175) = {-0.069409, -0.749687, 0, 1.0};
Point(176) = {-0.071502, -0.749666, 0, 1.0};
Point(177) = {-0.073289, -0.749654, 0, 1.0};
Point(178) = {-0.074166, -0.749649, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:29};
Spline(2) = {29:61};
Spline(3) = {61:89};
Spline(4) = {89,1};

// Lines: second blade (splines 5-8)
Spline(5) = {90:118};
Spline(6) = {118:150};
Spline(7) = {150:178};
Spline(8) = {178,90};

// Outer domain (points 20001-4 and lines)
Point(179) = {-13.50000000, -15.00000000, 0, 1.0};
Point(180) = {-13.50000000, 15.00000000, 0, 1.0};
Point(181) = {13.50000000, 15.00000000, 0, 1.0};
Point(182) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {179, 180};
Line(12) = {180, 181};
Line(13) = {181, 182};
Line(14) = {179, 182};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 35 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074701, 0.748540, 0, 1.0};
Point(2) = {0.071362, 0.747422, 0, 1.0};
Point(3) = {0.066980, 0.746009, 0, 1.0};
Point(4) = {0.061946, 0.744440, 0, 1.0};
Point(5) = {0.056338, 0.742738, 0, 1.0};
Point(6) = {0.050239, 0.740939, 0, 1.0};
Point(7) = {0.043734, 0.739083, 0, 1.0};
Point(8) = {0.036912, 0.737223, 0, 1.0};
Point(9) = {0.029857, 0.735424, 0, 1.0};
Point(10) = {0.022622, 0.733763, 0, 1.0};
Point(11) = {0.015237, 0.732286, 0, 1.0};
Point(12) = {0.007738, 0.731009, 0, 1.0};
Point(13) = {0.000166, 0.729938, 0, 1.0};
Point(14) = {-0.007418, 0.729048, 0, 1.0};
Point(15) = {-0.014929, 0.728335, 0, 1.0};
Point(16) = {-0.022289, 0.727795, 0, 1.0};
Point(17) = {-0.029420, 0.727425, 0, 1.0};
Point(18) = {-0.036245, 0.727223, 0, 1.0};
Point(19) = {-0.042693, 0.727184, 0, 1.0};
Point(20) = {-0.048698, 0.727302, 0, 1.0};
Point(21) = {-0.054195, 0.727568, 0, 1.0};
Point(22) = {-0.059125, 0.727971, 0, 1.0};
Point(23) = {-0.063435, 0.728499, 0, 1.0};
Point(24) = {-0.067078, 0.729137, 0, 1.0};
Point(25) = {-0.070018, 0.729876, 0, 1.0};
Point(26) = {-0.072235, 0.730692, 0, 1.0};
Point(27) = {-0.073414, 0.731333, 0, 1.0};
Point(28) = {-0.074045, 0.731841, 0, 1.0};
Point(29) = {-0.074316, 0.732161, 0, 1.0};
Point(30) = {-0.074430, 0.732382, 0, 1.0};
Point(31) = {-0.074454, 0.732514, 0, 1.0};
Point(32) = {-0.074422, 0.732646, 0, 1.0};
Point(33) = {-0.074292, 0.732870, 0, 1.0};
Point(34) = {-0.073995, 0.733197, 0, 1.0};
Point(35) = {-0.073308, 0.733725, 0, 1.0};
Point(36) = {-0.072940, 0.733950, 0, 1.0};
Point(37) = {-0.070941, 0.734904, 0, 1.0};
Point(38) = {-0.068146, 0.735898, 0, 1.0};
Point(39) = {-0.064576, 0.736910, 0, 1.0};
Point(40) = {-0.060268, 0.737943, 0, 1.0};
Point(41) = {-0.055275, 0.738987, 0, 1.0};
Point(42) = {-0.049662, 0.740027, 0, 1.0};
Point(43) = {-0.043495, 0.741042, 0, 1.0};
Point(44) = {-0.036847, 0.742009, 0, 1.0};
Point(45) = {-0.029796, 0.742894, 0, 1.0};
Point(46) = {-0.022395, 0.743656, 0, 1.0};
Point(47) = {-0.014682, 0.744271, 0, 1.0};
Point(48) = {-0.006695, 0.744736, 0, 1.0};
Point(49) = {0.001532, 0.745083, 0, 1.0};
Point(50) = {0.009930, 0.745378, 0, 1.0};
Point(51) = {0.018385, 0.745672, 0, 1.0};
Point(52) = {0.026779, 0.745995, 0, 1.0};
Point(53) = {0.034987, 0.746371, 0, 1.0};
Point(54) = {0.042887, 0.746813, 0, 1.0};
Point(55) = {0.050353, 0.747327, 0, 1.0};
Point(56) = {0.057265, 0.747908, 0, 1.0};
Point(57) = {0.063507, 0.748540, 0, 1.0};
Point(58) = {0.068977, 0.749199, 0, 1.0};
Point(59) = {0.073581, 0.749853, 0, 1.0};
Point(60) = {0.074524, 0.750000, 0, 1.0};
Point(61) = {-0.074701, -0.748540, 0, 1.0};
Point(62) = {-0.071362, -0.747422, 0, 1.0};
Point(63) = {-0.066980, -0.746009, 0, 1.0};
Point(64) = {-0.061946, -0.744440, 0, 1.0};
Point(65) = {-0.056338, -0.742738, 0, 1.0};
Point(66) = {-0.050239, -0.740939, 0, 1.0};
Point(67) = {-0.043734, -0.739083, 0, 1.0};
Point(68) = {-0.036912, -0.737223, 0, 1.0};
Point(69) = {-0.029857, -0.735424, 0, 1.0};
Point(70) = {-0.022622, -0.733763, 0, 1.0};
Point(71) = {-0.015237, -0.732286, 0, 1.0};
Point(72) = {-0.007738, -0.731009, 0, 1.0};
Point(73) = {-0.000166, -0.729938, 0, 1.0};
Point(74) = {0.007418, -0.729048, 0, 1.0};
Point(75) = {0.014929, -0.728335, 0, 1.0};
Point(76) = {0.022289, -0.727795, 0, 1.0};
Point(77) = {0.029420, -0.727425, 0, 1.0};
Point(78) = {0.036245, -0.727223, 0, 1.0};
Point(79) = {0.042693, -0.727184, 0, 1.0};
Point(80) = {0.048698, -0.727302, 0, 1.0};
Point(81) = {0.054195, -0.727568, 0, 1.0};
Point(82) = {0.059125, -0.727971, 0, 1.0};
Point(83) = {0.063435, -0.728499, 0, 1.0};
Point(84) = {0.067078, -0.729137, 0, 1.0};
Point(85) = {0.070018, -0.729876, 0, 1.0};
Point(86) = {0.072235, -0.730692, 0, 1.0};
Point(87) = {0.073414, -0.731333, 0, 1.0};
Point(88) = {0.074045, -0.731841, 0, 1.0};
Point(89) = {0.074316, -0.732161, 0, 1.0};
Point(90) = {0.074430, -0.732382, 0, 1.0};
Point(91) = {0.074454, -0.732514, 0, 1.0};
Point(92) = {0.074422, -0.732646, 0, 1.0};
Point(93) = {0.074292, -0.732870, 0, 1.0};
Point(94) = {0.073995, -0.733197, 0, 1.0};
Point(95) = {0.073308, -0.733725, 0, 1.0};
Point(96) = {0.072940, -0.733950, 0, 1.0};
Point(97) = {0.070941, -0.734904, 0, 1.0};
Point(98) = {0.068146, -0.735898, 0, 1.0};
Point(99) = {0.064576, -0.736910, 0, 1.0};
Point(100) = {0.060268, -0.737943, 0, 1.0};
Point(101) = {0.055275, -0.738987, 0, 1.0};
Point(102) = {0.049662, -0.740027, 0, 1.0};
Point(103) = {0.043495, -0.741042, 0, 1.0};
Point(104) = {0.036847, -0.742009, 0, 1.0};
Point(105) = {0.029796, -0.742894, 0, 1.0};
Point(106) = {0.022395, -0.743656, 0, 1.0};
Point(107) = {0.014682, -0.744271, 0, 1.0};
Point(108) = {0.006695, -0.744736, 0, 1.0};
Point(109) = {-0.001532, -0.745083, 0, 1.0};
Point(110) = {-0.009930, -0.745378, 0, 1.0};
Point(111) = {-0.018385, -0.745672, 0, 1.0};
Point(112) = {-0.026779, -0.745995, 0, 1.0};
Point(113) = {-0.034987, -0.746371, 0, 1.0};
Point(114) = {-0.042887, -0.746813, 0, 1.0};
Point(115) = {-0.050353, -0.747327, 0, 1.0};
Point(116) = {-0.057265, -0.747908, 0, 1.0};
Point(117) = {-0.063507, -0.748540, 0, 1.0};
Point(118) = {-0.068977, -0.749199, 0, 1.0};
Point(119) = {-0.073581, -0.749853, 0, 1.0};
Point(120) = {-0.074524, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:17};
Spline(2) = {17:44};
Spline(3) = {44:60};
Spline(4) = {60,1};

// Lines: second blade (splines 5-8)
Spline(5) = {61:77};
Spline(6) = {77:104};
Spline(7) = {104:120};
Spline(8) = {120,61};

// Outer domain (points 20001-4 and lines)
Point(121) = {-13.50000000, -15.00000000, 0, 1.0};
Point(122) = {-13.50000000, 15.00000000, 0, 1.0};
Point(123) = {13.50000000, 15.00000000, 0, 1.0};
Point(124) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {121, 122};
Line(12) = {122, 123};
Line(13) = {123, 124};
Line(14) = {121, 124};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074445, 0.744093, 0, 1.0};
Point(2) = {0.074294, 0.744087, 0, 1.0};
Point(3) = {0.070274, 0.744655, 0, 1.0};
Point(4) = {0.066259, 0.745185, 0, 1.0};
Point(5) = {0.062242, 0.745719, 0, 1.0};
Point(6) = {0.058228, 0.746236, 0, 1.0};
Point(7) = {0.054214, 0.746746, 0, 1.0};
Point(8) = {0.050202, 0.747236, 0, 1.0};
Point(9) = {0.042189, 0.748114, 0, 1.0};
Point(10) = {0.034190, 0.748853, 0, 1.0};
Point(11) = {0.026207, 0.749424, 0, 1.0};
Point(12) = {0.018241, 0.749822, 0, 1.0};
Point(13) = {0.010298, 0.750000, 0, 1.0};
Point(14) = {0.002378, 0.749937, 0, 1.0};
Point(15) = {-0.005517, 0.749624, 0, 1.0};
Point(16) = {-0.013388, 0.749075, 0, 1.0};
Point(17) = {-0.017315, 0.748717, 0, 1.0};
Point(18) = {-0.021237, 0.748303, 0, 1.0};
Point(19) = {-0.025152, 0.747827, 0, 1.0};
Point(20) = {-0.029060, 0.747269, 0, 1.0};
Point(21) = {-0.032960, 0.746640, 0, 1.0};
Point(22) = {-0.036854, 0.745952, 0, 1.0};
Point(23) = {-0.040743, 0.745214, 0, 1.0};
Point(24) = {-0.044625, 0.744402, 0, 1.0};
Point(25) = {-0.048497, 0.743484, 0, 1.0};
Point(26) = {-0.052353, 0.742411, 0, 1.0};
Point(27) = {-0.056190, 0.741144, 0, 1.0};
Point(28) = {-0.060004, 0.739655, 0, 1.0};
Point(29) = {-0.063791, 0.737892, 0, 1.0};
Point(30) = {-0.067540, 0.735744, 0, 1.0};
Point(31) = {-0.069394, 0.734464, 0, 1.0};
Point(32) = {-0.071225, 0.732952, 0, 1.0};
Point(33) = {-0.072127, 0.732067, 0, 1.0};
Point(34) = {-0.073017, 0.731050, 0, 1.0};
Point(35) = {-0.073541, 0.730345, 0, 1.0};
Point(36) = {-0.074051, 0.729504, 0, 1.0};
Point(37) = {-0.074374, 0.728762, 0, 1.0};
Point(38) = {-0.074630, 0.727359, 0, 1.0};
Point(39) = {-0.074162, 0.726637, 0, 1.0};
Point(40) = {-0.073736, 0.726343, 0, 1.0};
Point(41) = {-0.073108, 0.726002, 0, 1.0};
Point(42) = {-0.072487, 0.725738, 0, 1.0};
Point(43) = {-0.071464, 0.725417, 0, 1.0};
Point(44) = {-0.070454, 0.725217, 0, 1.0};
Point(45) = {-0.068447, 0.724960, 0, 1.0};
Point(46) = {-0.066452, 0.724829, 0, 1.0};
Point(47) = {-0.062481, 0.724742, 0, 1.0};
Point(48) = {-0.058522, 0.724787, 0, 1.0};
Point(49) = {-0.054571, 0.724909, 0, 1.0};
Point(50) = {-0.050626, 0.725089, 0, 1.0};
Point(51) = {-0.046687, 0.725328, 0, 1.0};
Point(52) = {-0.042753, 0.725613, 0, 1.0};
Point(53) = {-0.038822, 0.725932, 0, 1.0};
Point(54) = {-0.034893, 0.726277, 0, 1.0};
Point(55) = {-0.030966, 0.726642, 0, 1.0};
Point(56) = {-0.027042, 0.727028, 0, 1.0};
Point(57) = {-0.023121, 0.727444, 0, 1.0};
Point(58) = {-0.019203, 0.727898, 0, 1.0};
Point(59) = {-0.015290, 0.728399, 0, 1.0};
Point(60) = {-0.011380, 0.728936, 0, 1.0};
Point(61) = {-0.003571, 0.730104, 0, 1.0};
Point(62) = {0.004226, 0.731400, 0, 1.0};
Point(63) = {0.012011, 0.732813, 0, 1.0};
Point(64) = {0.019786, 0.734319, 0, 1.0};
Point(65) = {0.027558, 0.735872, 0, 1.0};
Point(66) = {0.035331, 0.737396, 0, 1.0};
Point(67) = {0.043113, 0.738844, 0, 1.0};
Point(68) = {0.050909, 0.740146, 0, 1.0};
Point(69) = {0.054815, 0.740714, 0, 1.0};
Point(70) = {0.058728, 0.741223, 0, 1.0};
Point(71) = {0.062648, 0.741650, 0, 1.0};
Point(72) = {0.066574, 0.742024, 0, 1.0};
Point(73) = {0.070508, 0.742315, 0, 1.0};
Point(74) = {0.074441, 0.742609, 0, 1.0};
Point(75) = {0.074592, 0.742619, 0, 1.0};
Point(76) = {-0.074445, -0.744093, 0, 1.0};
Point(77) = {-0.074294, -0.744087, 0, 1.0};
Point(78) = {-0.070274, -0.744655, 0, 1.0};
Point(79) = {-0.066259, -0.745185, 0, 1.0};
Point(80) = {-0.062242, -0.745719, 0, 1.0};
Point(81) = {-0.058228, -0.746236, 0, 1.0};
Point(82) = {-0.054214, -0.746746, 0, 1.0};
Point(83) = {-0.050202, -0.747236, 0, 1.0};
Point(84) = {-0.042189, -0.748114, 0, 1.0};
Point(85) = {-0.034190, -0.748853, 0, 1.0};
Point(86) = {-0.026207, -0.749424, 0, 1.0};
Point(87) = {-0.018241, -0.749822, 0, 1.0};
Point(88) = {-0.010298, -0.750000, 0, 1.0};
Point(89) = {-0.002378, -0.749937, 0, 1.0};
Point(90) = {0.005517, -0.749624, 0, 1.0};
Point(91) = {0.013388, -0.749075, 0, 1.0};
Point(92) = {0.017315, -0.748717, 0, 1.0};
Point(93) = {0.021237, -0.748303, 0, 1.0};
Point(94) = {0.025152, -0.747827, 0, 1.0};
Point(95) = {0.029060, -0.747269, 0, 1.0};
Point(96) = {0.032960, -0.746640, 0, 1.0};
Point(97) = {0.036854, -0.745952, 0, 1.0};
Point(98) = {0.040743, -0.745214, 0, 1.0};
Point(99) = {0.044625, -0.744402, 0, 1.0};
Point(100) = {0.048497, -0.743484, 0, 1.0};
Point(101) = {0.052353, -0.742411, 0, 1.0};
Point(102) = {0.056190, -0.741144, 0, 1.0};
Point(103) = {0.060004, -0.739655, 0, 1.0};
Point(104) = {0.063791, -0.737892, 0, 1.0};
Point(105) = {0.067540, -0.735744, 0, 1.0};
Point(106) = {0.069394, -0.734464, 0, 1.0};
Point(107) = {0.071225, -0.732952, 0, 1.0};
Point(108) = {0.072127, -0.732067, 0, 1.0};
Point(109) = {0.073017, -0.731050, 0, 1.0};
Point(110) = {0.073541, -0.730345, 0, 1.0};
Point(111) = {0.074051, -0.729504, 0, 1.0};
Point(112) = {0.074374, -0.728762, 0, 1.0};
Point(113) = {0.074630, -0.727359, 0, 1.0};
Point(114) = {0.074162, -0.726637, 0, 1.0};
Point(115) = {0.073736, -0.726343, 0, 1.0};
Point(116) = {0.073108, -0.726002, 0, 1.0};
Point(117) = {0.072487, -0.725738, 0, 1.0};
Point(118) = {0.071464, -0.725417, 0, 1.0};
Point(119) = {0.070454, -0.725217, 0, 1.0};
Point(120) = {0.068447, -0.724960, 0, 1.0};
Point(121) = {0.066452, -0.724829, 0, 1.0};
Point(122) = {0.062481, -0.724742, 0, 1.0};
Point(123) = {0.058522, -0.724787, 0, 1.0};
Point(124) = {0.054571, -0.724909, 0, 1.0};
Point(125) = {0.050626, -0.725089, 0, 1.0};
Point(126) = {0.046687, -0.725328, 0, 1.0};
Point(127) = {0.042753, -0.725613, 0, 1.0};
Point(128) = {0.038822, -0.725932, 0, 1.0};
Point(129) = {0.034893, -0.726277, 0, 1.0};
Point(130) = {0.030966, -0.726642, 0, 1.0};
Point(131) = {0.027042, -0.727028, 0, 1.0};
Point(132) = {0.023121, -0.727444, 0, 1.0};
Point(133) = {0.019203, -0.727898, 0, 1.0};
Point(134) = {0.015290, -0.728399, 0, 1.0};
Point(135) = {0.011380, -0.728936, 0, 1.0};
Point(136) = {0.003571, -0.730104, 0, 1.0};
Point(137) = {-0.004226, -0.731400, 0, 1.0};
Point(138) = {-0.012011, -0.732813, 0, 1.0};
Point(139) = {-0.019786, -0.734319, 0, 1.0};
Point(140) = {-0.027558, -0.735872, 0, 1.0};
Point(141) = {-0.035331, -0.737396, 0, 1.0};
Point(142) = {-0.043113, -0.738844, 0, 1.0};
Point(143) = {-0.050909, -0.740146, 0, 1.0};
Point(144) = {-0.054815, -0.740714, 0, 1.0};
Point(145) = {-0.058728, -0.741223, 0, 1.0};
Point(146) = {-0.062648, -0.741650, 0, 1.0};
Point(147) = {-0.066574, -0.742024, 0, 1.0};
Point(148) = {-0.070508, -0.742315, 0, 1.0};
Point(149) = {-0.074441, -0.742609, 0, 1.0};
Point(150) = {-0.074592, -0.742619, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:22};
Spline(2) = {22:55};
Spline(3) = {55:75};
Spline(4) = {75,1};

// Lines: second blade (splines 5-8)
Spline(5) = {76:97};
Spline(6) = {97:130};
Spline(7) = {130:150};
Spline(8) = {150,76};

// Outer domain (points 20001-4 and lines)
Point(151) = {-13.50000000, -15.00000000, 0, 1.0};
Point(152) = {-13.50000000, 15.00000000, 0, 1.0};
Point(153) = {13.50000000, 15.00000000, 0, 1.0};
Point(154) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {151, 152};
Line(12) = {152, 153};
Line(13) = {153, 154};
Line(14) = {151, 154};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
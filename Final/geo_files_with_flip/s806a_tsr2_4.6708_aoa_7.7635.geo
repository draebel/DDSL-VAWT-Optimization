SetFactory("OpenCASCADE");

Point(1) = {0.074194, 0.727377, 0, 1.0};
Point(2) = {0.073457, 0.727322, 0, 1.0};
Point(3) = {0.070380, 0.727337, 0, 1.0};
Point(4) = {0.067305, 0.727348, 0, 1.0};
Point(5) = {0.064229, 0.727340, 0, 1.0};
Point(6) = {0.061156, 0.727280, 0, 1.0};
Point(7) = {0.053404, 0.726806, 0, 1.0};
Point(8) = {0.045647, 0.726292, 0, 1.0};
Point(9) = {0.037887, 0.725752, 0, 1.0};
Point(10) = {0.030133, 0.725239, 0, 1.0};
Point(11) = {0.022399, 0.724878, 0, 1.0};
Point(12) = {0.014699, 0.724794, 0, 1.0};
Point(13) = {0.007043, 0.725029, 0, 1.0};
Point(14) = {-0.000570, 0.725585, 0, 1.0};
Point(15) = {-0.008142, 0.726426, 0, 1.0};
Point(16) = {-0.015682, 0.727503, 0, 1.0};
Point(17) = {-0.023193, 0.728790, 0, 1.0};
Point(18) = {-0.030678, 0.730284, 0, 1.0};
Point(19) = {-0.038132, 0.731992, 0, 1.0};
Point(20) = {-0.045554, 0.733943, 0, 1.0};
Point(21) = {-0.052934, 0.736186, 0, 1.0};
Point(22) = {-0.057340, 0.737709, 0, 1.0};
Point(23) = {-0.060266, 0.738822, 0, 1.0};
Point(24) = {-0.063174, 0.740035, 0, 1.0};
Point(25) = {-0.066060, 0.741380, 0, 1.0};
Point(26) = {-0.067508, 0.742127, 0, 1.0};
Point(27) = {-0.068926, 0.742926, 0, 1.0};
Point(28) = {-0.070354, 0.743826, 0, 1.0};
Point(29) = {-0.071754, 0.744838, 0, 1.0};
Point(30) = {-0.073109, 0.746085, 0, 1.0};
Point(31) = {-0.074046, 0.747410, 0, 1.0};
Point(32) = {-0.074313, 0.748509, 0, 1.0};
Point(33) = {-0.074308, 0.748541, 0, 1.0};
Point(34) = {-0.073751, 0.749278, 0, 1.0};
Point(35) = {-0.072617, 0.749644, 0, 1.0};
Point(36) = {-0.071060, 0.749847, 0, 1.0};
Point(37) = {-0.069504, 0.749970, 0, 1.0};
Point(38) = {-0.067963, 0.750000, 0, 1.0};
Point(39) = {-0.066425, 0.749984, 0, 1.0};
Point(40) = {-0.064894, 0.749949, 0, 1.0};
Point(41) = {-0.061835, 0.749829, 0, 1.0};
Point(42) = {-0.058783, 0.749651, 0, 1.0};
Point(43) = {-0.055738, 0.749439, 0, 1.0};
Point(44) = {-0.051175, 0.749073, 0, 1.0};
Point(45) = {-0.043584, 0.748369, 0, 1.0};
Point(46) = {-0.036005, 0.747579, 0, 1.0};
Point(47) = {-0.028436, 0.746717, 0, 1.0};
Point(48) = {-0.020876, 0.745791, 0, 1.0};
Point(49) = {-0.013323, 0.744806, 0, 1.0};
Point(50) = {-0.005778, 0.743767, 0, 1.0};
Point(51) = {0.001760, 0.742671, 0, 1.0};
Point(52) = {0.009289, 0.741519, 0, 1.0};
Point(53) = {0.016811, 0.740306, 0, 1.0};
Point(54) = {0.024322, 0.739020, 0, 1.0};
Point(55) = {0.031822, 0.737637, 0, 1.0};
Point(56) = {0.039303, 0.736126, 0, 1.0};
Point(57) = {0.046765, 0.734494, 0, 1.0};
Point(58) = {0.054218, 0.732778, 0, 1.0};
Point(59) = {0.061666, 0.731025, 0, 1.0};
Point(60) = {0.064662, 0.730472, 0, 1.0};
Point(61) = {0.067670, 0.729982, 0, 1.0};
Point(62) = {0.070682, 0.729510, 0, 1.0};
Point(63) = {0.073694, 0.729041, 0, 1.0};
Point(64) = {0.074399, 0.728879, 0, 1.0};
Point(65) = {-0.074194, -0.727377, 0, 1.0};
Point(66) = {-0.073457, -0.727322, 0, 1.0};
Point(67) = {-0.070380, -0.727337, 0, 1.0};
Point(68) = {-0.067305, -0.727348, 0, 1.0};
Point(69) = {-0.064229, -0.727340, 0, 1.0};
Point(70) = {-0.061156, -0.727280, 0, 1.0};
Point(71) = {-0.053404, -0.726806, 0, 1.0};
Point(72) = {-0.045647, -0.726292, 0, 1.0};
Point(73) = {-0.037887, -0.725752, 0, 1.0};
Point(74) = {-0.030133, -0.725239, 0, 1.0};
Point(75) = {-0.022399, -0.724878, 0, 1.0};
Point(76) = {-0.014699, -0.724794, 0, 1.0};
Point(77) = {-0.007043, -0.725029, 0, 1.0};
Point(78) = {0.000570, -0.725585, 0, 1.0};
Point(79) = {0.008142, -0.726426, 0, 1.0};
Point(80) = {0.015682, -0.727503, 0, 1.0};
Point(81) = {0.023193, -0.728790, 0, 1.0};
Point(82) = {0.030678, -0.730284, 0, 1.0};
Point(83) = {0.038132, -0.731992, 0, 1.0};
Point(84) = {0.045554, -0.733943, 0, 1.0};
Point(85) = {0.052934, -0.736186, 0, 1.0};
Point(86) = {0.057340, -0.737709, 0, 1.0};
Point(87) = {0.060266, -0.738822, 0, 1.0};
Point(88) = {0.063174, -0.740035, 0, 1.0};
Point(89) = {0.066060, -0.741380, 0, 1.0};
Point(90) = {0.067508, -0.742127, 0, 1.0};
Point(91) = {0.068926, -0.742926, 0, 1.0};
Point(92) = {0.070354, -0.743826, 0, 1.0};
Point(93) = {0.071754, -0.744838, 0, 1.0};
Point(94) = {0.073109, -0.746085, 0, 1.0};
Point(95) = {0.074046, -0.747410, 0, 1.0};
Point(96) = {0.074313, -0.748509, 0, 1.0};
Point(97) = {0.074308, -0.748541, 0, 1.0};
Point(98) = {0.073751, -0.749278, 0, 1.0};
Point(99) = {0.072617, -0.749644, 0, 1.0};
Point(100) = {0.071060, -0.749847, 0, 1.0};
Point(101) = {0.069504, -0.749970, 0, 1.0};
Point(102) = {0.067963, -0.750000, 0, 1.0};
Point(103) = {0.066425, -0.749984, 0, 1.0};
Point(104) = {0.064894, -0.749949, 0, 1.0};
Point(105) = {0.061835, -0.749829, 0, 1.0};
Point(106) = {0.058783, -0.749651, 0, 1.0};
Point(107) = {0.055738, -0.749439, 0, 1.0};
Point(108) = {0.051175, -0.749073, 0, 1.0};
Point(109) = {0.043584, -0.748369, 0, 1.0};
Point(110) = {0.036005, -0.747579, 0, 1.0};
Point(111) = {0.028436, -0.746717, 0, 1.0};
Point(112) = {0.020876, -0.745791, 0, 1.0};
Point(113) = {0.013323, -0.744806, 0, 1.0};
Point(114) = {0.005778, -0.743767, 0, 1.0};
Point(115) = {-0.001760, -0.742671, 0, 1.0};
Point(116) = {-0.009289, -0.741519, 0, 1.0};
Point(117) = {-0.016811, -0.740306, 0, 1.0};
Point(118) = {-0.024322, -0.739020, 0, 1.0};
Point(119) = {-0.031822, -0.737637, 0, 1.0};
Point(120) = {-0.039303, -0.736126, 0, 1.0};
Point(121) = {-0.046765, -0.734494, 0, 1.0};
Point(122) = {-0.054218, -0.732778, 0, 1.0};
Point(123) = {-0.061666, -0.731025, 0, 1.0};
Point(124) = {-0.064662, -0.730472, 0, 1.0};
Point(125) = {-0.067670, -0.729982, 0, 1.0};
Point(126) = {-0.070682, -0.729510, 0, 1.0};
Point(127) = {-0.073694, -0.729041, 0, 1.0};
Point(128) = {-0.074399, -0.728879, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:47};
Spline(3) = {47:64};
Spline(4) = {64,1};

// Lines: second blade (splines 5-8)
Spline(5) = {65:83};
Spline(6) = {83:111};
Spline(7) = {111:128};
Spline(8) = {128,65};

// Outer domain (points 20001-4 and lines)
Point(129) = {-13.50000000, -15.00000000, 0, 1.0};
Point(130) = {-13.50000000, 15.00000000, 0, 1.0};
Point(131) = {13.50000000, 15.00000000, 0, 1.0};
Point(132) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {129, 130};
Line(12) = {130, 131};
Line(13) = {131, 132};
Line(14) = {129, 132};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
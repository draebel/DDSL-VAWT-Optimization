SetFactory("OpenCASCADE");

Point(1) = {0.075012, 0.744524, 0, 1.0};
Point(2) = {0.071732, 0.743861, 0, 1.0};
Point(3) = {0.067786, 0.743090, 0, 1.0};
Point(4) = {0.063840, 0.742308, 0, 1.0};
Point(5) = {0.059894, 0.741517, 0, 1.0};
Point(6) = {0.055949, 0.740707, 0, 1.0};
Point(7) = {0.052004, 0.739891, 0, 1.0};
Point(8) = {0.044113, 0.738315, 0, 1.0};
Point(9) = {0.036219, 0.736836, 0, 1.0};
Point(10) = {0.028322, 0.735482, 0, 1.0};
Point(11) = {0.020421, 0.734258, 0, 1.0};
Point(12) = {0.012516, 0.733204, 0, 1.0};
Point(13) = {0.004606, 0.732345, 0, 1.0};
Point(14) = {-0.003310, 0.731692, 0, 1.0};
Point(15) = {-0.011230, 0.731240, 0, 1.0};
Point(16) = {-0.015193, 0.731086, 0, 1.0};
Point(17) = {-0.019156, 0.730979, 0, 1.0};
Point(18) = {-0.023121, 0.730931, 0, 1.0};
Point(19) = {-0.027088, 0.730947, 0, 1.0};
Point(20) = {-0.031056, 0.731026, 0, 1.0};
Point(21) = {-0.035026, 0.731153, 0, 1.0};
Point(22) = {-0.038997, 0.731321, 0, 1.0};
Point(23) = {-0.042969, 0.731547, 0, 1.0};
Point(24) = {-0.046943, 0.731857, 0, 1.0};
Point(25) = {-0.050921, 0.732287, 0, 1.0};
Point(26) = {-0.054903, 0.732876, 0, 1.0};
Point(27) = {-0.058889, 0.733651, 0, 1.0};
Point(28) = {-0.062881, 0.734643, 0, 1.0};
Point(29) = {-0.066881, 0.735929, 0, 1.0};
Point(30) = {-0.068886, 0.736732, 0, 1.0};
Point(31) = {-0.070894, 0.737704, 0, 1.0};
Point(32) = {-0.071901, 0.738292, 0, 1.0};
Point(33) = {-0.072912, 0.739016, 0, 1.0};
Point(34) = {-0.073520, 0.739543, 0, 1.0};
Point(35) = {-0.074133, 0.740231, 0, 1.0};
Point(36) = {-0.074547, 0.740869, 0, 1.0};
Point(37) = {-0.074974, 0.742049, 0, 1.0};
Point(38) = {-0.074599, 0.742867, 0, 1.0};
Point(39) = {-0.074213, 0.743258, 0, 1.0};
Point(40) = {-0.073630, 0.743711, 0, 1.0};
Point(41) = {-0.073044, 0.744078, 0, 1.0};
Point(42) = {-0.072066, 0.744578, 0, 1.0};
Point(43) = {-0.071084, 0.744970, 0, 1.0};
Point(44) = {-0.069118, 0.745603, 0, 1.0};
Point(45) = {-0.067148, 0.746103, 0, 1.0};
Point(46) = {-0.063202, 0.746890, 0, 1.0};
Point(47) = {-0.059252, 0.747498, 0, 1.0};
Point(48) = {-0.055298, 0.747987, 0, 1.0};
Point(49) = {-0.051342, 0.748387, 0, 1.0};
Point(50) = {-0.047385, 0.748716, 0, 1.0};
Point(51) = {-0.043426, 0.748990, 0, 1.0};
Point(52) = {-0.039465, 0.749225, 0, 1.0};
Point(53) = {-0.035504, 0.749427, 0, 1.0};
Point(54) = {-0.031543, 0.749601, 0, 1.0};
Point(55) = {-0.027580, 0.749751, 0, 1.0};
Point(56) = {-0.023617, 0.749873, 0, 1.0};
Point(57) = {-0.019653, 0.749961, 0, 1.0};
Point(58) = {-0.015688, 0.750000, 0, 1.0};
Point(59) = {-0.011721, 0.749990, 0, 1.0};
Point(60) = {-0.003785, 0.749859, 0, 1.0};
Point(61) = {0.004155, 0.749582, 0, 1.0};
Point(62) = {0.012098, 0.749176, 0, 1.0};
Point(63) = {0.020044, 0.748662, 0, 1.0};
Point(64) = {0.027992, 0.748078, 0, 1.0};
Point(65) = {0.035940, 0.747489, 0, 1.0};
Point(66) = {0.043887, 0.746930, 0, 1.0};
Point(67) = {0.051832, 0.746459, 0, 1.0};
Point(68) = {0.055803, 0.746276, 0, 1.0};
Point(69) = {0.059773, 0.746134, 0, 1.0};
Point(70) = {0.063742, 0.746054, 0, 1.0};
Point(71) = {0.067709, 0.746015, 0, 1.0};
Point(72) = {0.071675, 0.746036, 0, 1.0};
Point(73) = {0.074972, 0.746048, 0, 1.0};
Point(74) = {-0.075012, -0.744524, 0, 1.0};
Point(75) = {-0.071732, -0.743861, 0, 1.0};
Point(76) = {-0.067786, -0.743090, 0, 1.0};
Point(77) = {-0.063840, -0.742308, 0, 1.0};
Point(78) = {-0.059894, -0.741517, 0, 1.0};
Point(79) = {-0.055949, -0.740707, 0, 1.0};
Point(80) = {-0.052004, -0.739891, 0, 1.0};
Point(81) = {-0.044113, -0.738315, 0, 1.0};
Point(82) = {-0.036219, -0.736836, 0, 1.0};
Point(83) = {-0.028322, -0.735482, 0, 1.0};
Point(84) = {-0.020421, -0.734258, 0, 1.0};
Point(85) = {-0.012516, -0.733204, 0, 1.0};
Point(86) = {-0.004606, -0.732345, 0, 1.0};
Point(87) = {0.003310, -0.731692, 0, 1.0};
Point(88) = {0.011230, -0.731240, 0, 1.0};
Point(89) = {0.015193, -0.731086, 0, 1.0};
Point(90) = {0.019156, -0.730979, 0, 1.0};
Point(91) = {0.023121, -0.730931, 0, 1.0};
Point(92) = {0.027088, -0.730947, 0, 1.0};
Point(93) = {0.031056, -0.731026, 0, 1.0};
Point(94) = {0.035026, -0.731153, 0, 1.0};
Point(95) = {0.038997, -0.731321, 0, 1.0};
Point(96) = {0.042969, -0.731547, 0, 1.0};
Point(97) = {0.046943, -0.731857, 0, 1.0};
Point(98) = {0.050921, -0.732287, 0, 1.0};
Point(99) = {0.054903, -0.732876, 0, 1.0};
Point(100) = {0.058889, -0.733651, 0, 1.0};
Point(101) = {0.062881, -0.734643, 0, 1.0};
Point(102) = {0.066881, -0.735929, 0, 1.0};
Point(103) = {0.068886, -0.736732, 0, 1.0};
Point(104) = {0.070894, -0.737704, 0, 1.0};
Point(105) = {0.071901, -0.738292, 0, 1.0};
Point(106) = {0.072912, -0.739016, 0, 1.0};
Point(107) = {0.073520, -0.739543, 0, 1.0};
Point(108) = {0.074133, -0.740231, 0, 1.0};
Point(109) = {0.074547, -0.740869, 0, 1.0};
Point(110) = {0.074974, -0.742049, 0, 1.0};
Point(111) = {0.074599, -0.742867, 0, 1.0};
Point(112) = {0.074213, -0.743258, 0, 1.0};
Point(113) = {0.073630, -0.743711, 0, 1.0};
Point(114) = {0.073044, -0.744078, 0, 1.0};
Point(115) = {0.072066, -0.744578, 0, 1.0};
Point(116) = {0.071084, -0.744970, 0, 1.0};
Point(117) = {0.069118, -0.745603, 0, 1.0};
Point(118) = {0.067148, -0.746103, 0, 1.0};
Point(119) = {0.063202, -0.746890, 0, 1.0};
Point(120) = {0.059252, -0.747498, 0, 1.0};
Point(121) = {0.055298, -0.747987, 0, 1.0};
Point(122) = {0.051342, -0.748387, 0, 1.0};
Point(123) = {0.047385, -0.748716, 0, 1.0};
Point(124) = {0.043426, -0.748990, 0, 1.0};
Point(125) = {0.039465, -0.749225, 0, 1.0};
Point(126) = {0.035504, -0.749427, 0, 1.0};
Point(127) = {0.031543, -0.749601, 0, 1.0};
Point(128) = {0.027580, -0.749751, 0, 1.0};
Point(129) = {0.023617, -0.749873, 0, 1.0};
Point(130) = {0.019653, -0.749961, 0, 1.0};
Point(131) = {0.015688, -0.750000, 0, 1.0};
Point(132) = {0.011721, -0.749990, 0, 1.0};
Point(133) = {0.003785, -0.749859, 0, 1.0};
Point(134) = {-0.004155, -0.749582, 0, 1.0};
Point(135) = {-0.012098, -0.749176, 0, 1.0};
Point(136) = {-0.020044, -0.748662, 0, 1.0};
Point(137) = {-0.027992, -0.748078, 0, 1.0};
Point(138) = {-0.035940, -0.747489, 0, 1.0};
Point(139) = {-0.043887, -0.746930, 0, 1.0};
Point(140) = {-0.051832, -0.746459, 0, 1.0};
Point(141) = {-0.055803, -0.746276, 0, 1.0};
Point(142) = {-0.059773, -0.746134, 0, 1.0};
Point(143) = {-0.063742, -0.746054, 0, 1.0};
Point(144) = {-0.067709, -0.746015, 0, 1.0};
Point(145) = {-0.071675, -0.746036, 0, 1.0};
Point(146) = {-0.074972, -0.746048, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:21};
Spline(2) = {21:54};
Spline(3) = {54:73};
Spline(4) = {73,1};

// Lines: second blade (splines 5-8)
Spline(5) = {74:94};
Spline(6) = {94:127};
Spline(7) = {127:146};
Spline(8) = {146,74};

// Outer domain (points 20001-4 and lines)
Point(147) = {-13.50000000, -15.00000000, 0, 1.0};
Point(148) = {-13.50000000, 15.00000000, 0, 1.0};
Point(149) = {13.50000000, 15.00000000, 0, 1.0};
Point(150) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {147, 148};
Line(12) = {148, 149};
Line(13) = {149, 150};
Line(14) = {147, 150};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
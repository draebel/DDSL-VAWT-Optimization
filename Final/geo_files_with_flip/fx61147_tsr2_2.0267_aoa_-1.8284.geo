SetFactory("OpenCASCADE");

Point(1) = {0.075051, 0.743478, 0, 1.0};
Point(2) = {0.072739, 0.742833, 0, 1.0};
Point(3) = {0.070026, 0.742107, 0, 1.0};
Point(4) = {0.066999, 0.741333, 0, 1.0};
Point(5) = {0.063773, 0.740514, 0, 1.0};
Point(6) = {0.060253, 0.739649, 0, 1.0};
Point(7) = {0.056513, 0.738754, 0, 1.0};
Point(8) = {0.052528, 0.737833, 0, 1.0};
Point(9) = {0.048342, 0.736902, 0, 1.0};
Point(10) = {0.043973, 0.735959, 0, 1.0};
Point(11) = {0.039443, 0.735013, 0, 1.0};
Point(12) = {0.034751, 0.734072, 0, 1.0};
Point(13) = {0.029936, 0.733142, 0, 1.0};
Point(14) = {0.024999, 0.732229, 0, 1.0};
Point(15) = {0.019979, 0.731341, 0, 1.0};
Point(16) = {0.014900, 0.730483, 0, 1.0};
Point(17) = {0.009778, 0.729670, 0, 1.0};
Point(18) = {0.004613, 0.728912, 0, 1.0};
Point(19) = {-0.000534, 0.728223, 0, 1.0};
Point(20) = {-0.005684, 0.727614, 0, 1.0};
Point(21) = {-0.010776, 0.727111, 0, 1.0};
Point(22) = {-0.015810, 0.726720, 0, 1.0};
Point(23) = {-0.020748, 0.726474, 0, 1.0};
Point(24) = {-0.025609, 0.726366, 0, 1.0};
Point(25) = {-0.030314, 0.726417, 0, 1.0};
Point(26) = {-0.034902, 0.726613, 0, 1.0};
Point(27) = {-0.039310, 0.726965, 0, 1.0};
Point(28) = {-0.043543, 0.727454, 0, 1.0};
Point(29) = {-0.047614, 0.728088, 0, 1.0};
Point(30) = {-0.051370, 0.728844, 0, 1.0};
Point(31) = {-0.054945, 0.729715, 0, 1.0};
Point(32) = {-0.058258, 0.730664, 0, 1.0};
Point(33) = {-0.061313, 0.731691, 0, 1.0};
Point(34) = {-0.064083, 0.732765, 0, 1.0};
Point(35) = {-0.066551, 0.733883, 0, 1.0};
Point(36) = {-0.068735, 0.735018, 0, 1.0};
Point(37) = {-0.070596, 0.736169, 0, 1.0};
Point(38) = {-0.072133, 0.737295, 0, 1.0};
Point(39) = {-0.073342, 0.738368, 0, 1.0};
Point(40) = {-0.074227, 0.739407, 0, 1.0};
Point(41) = {-0.074766, 0.740394, 0, 1.0};
Point(42) = {-0.074962, 0.741477, 0, 1.0};
Point(43) = {-0.074809, 0.741745, 0, 1.0};
Point(44) = {-0.074318, 0.742250, 0, 1.0};
Point(45) = {-0.073483, 0.742774, 0, 1.0};
Point(46) = {-0.072325, 0.743301, 0, 1.0};
Point(47) = {-0.070841, 0.743840, 0, 1.0};
Point(48) = {-0.069034, 0.744371, 0, 1.0};
Point(49) = {-0.066903, 0.744903, 0, 1.0};
Point(50) = {-0.064488, 0.745435, 0, 1.0};
Point(51) = {-0.061768, 0.745968, 0, 1.0};
Point(52) = {-0.058764, 0.746490, 0, 1.0};
Point(53) = {-0.055497, 0.746996, 0, 1.0};
Point(54) = {-0.051965, 0.747480, 0, 1.0};
Point(55) = {-0.048248, 0.747939, 0, 1.0};
Point(56) = {-0.044210, 0.748365, 0, 1.0};
Point(57) = {-0.040006, 0.748756, 0, 1.0};
Point(58) = {-0.035619, 0.749104, 0, 1.0};
Point(59) = {-0.031048, 0.749403, 0, 1.0};
Point(60) = {-0.026352, 0.749648, 0, 1.0};
Point(61) = {-0.021494, 0.749833, 0, 1.0};
Point(62) = {-0.016552, 0.749951, 0, 1.0};
Point(63) = {-0.011507, 0.750000, 0, 1.0};
Point(64) = {-0.006397, 0.749968, 0, 1.0};
Point(65) = {-0.001225, 0.749856, 0, 1.0};
Point(66) = {0.003950, 0.749656, 0, 1.0};
Point(67) = {0.009149, 0.749369, 0, 1.0};
Point(68) = {0.014309, 0.748998, 0, 1.0};
Point(69) = {0.019431, 0.748532, 0, 1.0};
Point(70) = {0.024497, 0.747971, 0, 1.0};
Point(71) = {0.029483, 0.747332, 0, 1.0};
Point(72) = {0.034349, 0.746661, 0, 1.0};
Point(73) = {0.039092, 0.746013, 0, 1.0};
Point(74) = {0.043670, 0.745446, 0, 1.0};
Point(75) = {0.048084, 0.744985, 0, 1.0};
Point(76) = {0.052311, 0.744640, 0, 1.0};
Point(77) = {0.056332, 0.744413, 0, 1.0};
Point(78) = {0.060105, 0.744302, 0, 1.0};
Point(79) = {0.063652, 0.744299, 0, 1.0};
Point(80) = {0.066902, 0.744383, 0, 1.0};
Point(81) = {0.069949, 0.744535, 0, 1.0};
Point(82) = {0.072679, 0.744738, 0, 1.0};
Point(83) = {0.075004, 0.744955, 0, 1.0};
Point(84) = {-0.075051, -0.743478, 0, 1.0};
Point(85) = {-0.072739, -0.742833, 0, 1.0};
Point(86) = {-0.070026, -0.742107, 0, 1.0};
Point(87) = {-0.066999, -0.741333, 0, 1.0};
Point(88) = {-0.063773, -0.740514, 0, 1.0};
Point(89) = {-0.060253, -0.739649, 0, 1.0};
Point(90) = {-0.056513, -0.738754, 0, 1.0};
Point(91) = {-0.052528, -0.737833, 0, 1.0};
Point(92) = {-0.048342, -0.736902, 0, 1.0};
Point(93) = {-0.043973, -0.735959, 0, 1.0};
Point(94) = {-0.039443, -0.735013, 0, 1.0};
Point(95) = {-0.034751, -0.734072, 0, 1.0};
Point(96) = {-0.029936, -0.733142, 0, 1.0};
Point(97) = {-0.024999, -0.732229, 0, 1.0};
Point(98) = {-0.019979, -0.731341, 0, 1.0};
Point(99) = {-0.014900, -0.730483, 0, 1.0};
Point(100) = {-0.009778, -0.729670, 0, 1.0};
Point(101) = {-0.004613, -0.728912, 0, 1.0};
Point(102) = {0.000534, -0.728223, 0, 1.0};
Point(103) = {0.005684, -0.727614, 0, 1.0};
Point(104) = {0.010776, -0.727111, 0, 1.0};
Point(105) = {0.015810, -0.726720, 0, 1.0};
Point(106) = {0.020748, -0.726474, 0, 1.0};
Point(107) = {0.025609, -0.726366, 0, 1.0};
Point(108) = {0.030314, -0.726417, 0, 1.0};
Point(109) = {0.034902, -0.726613, 0, 1.0};
Point(110) = {0.039310, -0.726965, 0, 1.0};
Point(111) = {0.043543, -0.727454, 0, 1.0};
Point(112) = {0.047614, -0.728088, 0, 1.0};
Point(113) = {0.051370, -0.728844, 0, 1.0};
Point(114) = {0.054945, -0.729715, 0, 1.0};
Point(115) = {0.058258, -0.730664, 0, 1.0};
Point(116) = {0.061313, -0.731691, 0, 1.0};
Point(117) = {0.064083, -0.732765, 0, 1.0};
Point(118) = {0.066551, -0.733883, 0, 1.0};
Point(119) = {0.068735, -0.735018, 0, 1.0};
Point(120) = {0.070596, -0.736169, 0, 1.0};
Point(121) = {0.072133, -0.737295, 0, 1.0};
Point(122) = {0.073342, -0.738368, 0, 1.0};
Point(123) = {0.074227, -0.739407, 0, 1.0};
Point(124) = {0.074766, -0.740394, 0, 1.0};
Point(125) = {0.074962, -0.741477, 0, 1.0};
Point(126) = {0.074809, -0.741745, 0, 1.0};
Point(127) = {0.074318, -0.742250, 0, 1.0};
Point(128) = {0.073483, -0.742774, 0, 1.0};
Point(129) = {0.072325, -0.743301, 0, 1.0};
Point(130) = {0.070841, -0.743840, 0, 1.0};
Point(131) = {0.069034, -0.744371, 0, 1.0};
Point(132) = {0.066903, -0.744903, 0, 1.0};
Point(133) = {0.064488, -0.745435, 0, 1.0};
Point(134) = {0.061768, -0.745968, 0, 1.0};
Point(135) = {0.058764, -0.746490, 0, 1.0};
Point(136) = {0.055497, -0.746996, 0, 1.0};
Point(137) = {0.051965, -0.747480, 0, 1.0};
Point(138) = {0.048248, -0.747939, 0, 1.0};
Point(139) = {0.044210, -0.748365, 0, 1.0};
Point(140) = {0.040006, -0.748756, 0, 1.0};
Point(141) = {0.035619, -0.749104, 0, 1.0};
Point(142) = {0.031048, -0.749403, 0, 1.0};
Point(143) = {0.026352, -0.749648, 0, 1.0};
Point(144) = {0.021494, -0.749833, 0, 1.0};
Point(145) = {0.016552, -0.749951, 0, 1.0};
Point(146) = {0.011507, -0.750000, 0, 1.0};
Point(147) = {0.006397, -0.749968, 0, 1.0};
Point(148) = {0.001225, -0.749856, 0, 1.0};
Point(149) = {-0.003950, -0.749656, 0, 1.0};
Point(150) = {-0.009149, -0.749369, 0, 1.0};
Point(151) = {-0.014309, -0.748998, 0, 1.0};
Point(152) = {-0.019431, -0.748532, 0, 1.0};
Point(153) = {-0.024497, -0.747971, 0, 1.0};
Point(154) = {-0.029483, -0.747332, 0, 1.0};
Point(155) = {-0.034349, -0.746661, 0, 1.0};
Point(156) = {-0.039092, -0.746013, 0, 1.0};
Point(157) = {-0.043670, -0.745446, 0, 1.0};
Point(158) = {-0.048084, -0.744985, 0, 1.0};
Point(159) = {-0.052311, -0.744640, 0, 1.0};
Point(160) = {-0.056332, -0.744413, 0, 1.0};
Point(161) = {-0.060105, -0.744302, 0, 1.0};
Point(162) = {-0.063652, -0.744299, 0, 1.0};
Point(163) = {-0.066902, -0.744383, 0, 1.0};
Point(164) = {-0.069949, -0.744535, 0, 1.0};
Point(165) = {-0.072679, -0.744738, 0, 1.0};
Point(166) = {-0.075004, -0.744955, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
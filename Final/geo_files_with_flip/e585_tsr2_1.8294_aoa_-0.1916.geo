SetFactory("OpenCASCADE");

Point(1) = {0.075007, 0.743263, 0, 1.0};
Point(2) = {0.074280, 0.743047, 0, 1.0};
Point(3) = {0.070295, 0.741889, 0, 1.0};
Point(4) = {0.065589, 0.740575, 0, 1.0};
Point(5) = {0.060246, 0.739118, 0, 1.0};
Point(6) = {0.054354, 0.737551, 0, 1.0};
Point(7) = {0.048012, 0.735912, 0, 1.0};
Point(8) = {0.041307, 0.734244, 0, 1.0};
Point(9) = {0.034347, 0.732603, 0, 1.0};
Point(10) = {0.027226, 0.731065, 0, 1.0};
Point(11) = {0.020006, 0.729720, 0, 1.0};
Point(12) = {0.012711, 0.728628, 0, 1.0};
Point(13) = {0.005372, 0.727809, 0, 1.0};
Point(14) = {-0.001967, 0.727274, 0, 1.0};
Point(15) = {-0.009637, 0.727022, 0, 1.0};
Point(16) = {-0.016447, 0.727046, 0, 1.0};
Point(17) = {-0.023472, 0.727329, 0, 1.0};
Point(18) = {-0.030266, 0.727854, 0, 1.0};
Point(19) = {-0.036763, 0.728612, 0, 1.0};
Point(20) = {-0.042904, 0.729582, 0, 1.0};
Point(21) = {-0.048630, 0.730749, 0, 1.0};
Point(22) = {-0.053889, 0.732091, 0, 1.0};
Point(23) = {-0.058639, 0.733583, 0, 1.0};
Point(24) = {-0.062836, 0.735195, 0, 1.0};
Point(25) = {-0.066450, 0.736894, 0, 1.0};
Point(26) = {-0.069454, 0.738642, 0, 1.0};
Point(27) = {-0.071826, 0.740388, 0, 1.0};
Point(28) = {-0.073553, 0.742074, 0, 1.0};
Point(29) = {-0.074619, 0.743625, 0, 1.0};
Point(30) = {-0.074866, 0.744212, 0, 1.0};
Point(31) = {-0.074967, 0.744601, 0, 1.0};
Point(32) = {-0.075000, 0.744841, 0, 1.0};
Point(33) = {-0.075000, 0.745064, 0, 1.0};
Point(34) = {-0.074990, 0.745166, 0, 1.0};
Point(35) = {-0.074970, 0.745262, 0, 1.0};
Point(36) = {-0.074938, 0.745350, 0, 1.0};
Point(37) = {-0.074892, 0.745432, 0, 1.0};
Point(38) = {-0.074827, 0.745512, 0, 1.0};
Point(39) = {-0.074751, 0.745593, 0, 1.0};
Point(40) = {-0.074564, 0.745754, 0, 1.0};
Point(41) = {-0.074334, 0.745913, 0, 1.0};
Point(42) = {-0.073916, 0.746150, 0, 1.0};
Point(43) = {-0.072871, 0.746601, 0, 1.0};
Point(44) = {-0.070379, 0.747308, 0, 1.0};
Point(45) = {-0.067030, 0.747918, 0, 1.0};
Point(46) = {-0.062860, 0.748433, 0, 1.0};
Point(47) = {-0.057914, 0.748858, 0, 1.0};
Point(48) = {-0.052250, 0.749207, 0, 1.0};
Point(49) = {-0.045945, 0.749490, 0, 1.0};
Point(50) = {-0.039078, 0.749708, 0, 1.0};
Point(51) = {-0.031736, 0.749866, 0, 1.0};
Point(52) = {-0.024011, 0.749964, 0, 1.0};
Point(53) = {-0.016001, 0.750000, 0, 1.0};
Point(54) = {-0.007807, 0.749968, 0, 1.0};
Point(55) = {0.000469, 0.749859, 0, 1.0};
Point(56) = {0.008723, 0.749657, 0, 1.0};
Point(57) = {0.016851, 0.749325, 0, 1.0};
Point(58) = {0.024808, 0.748800, 0, 1.0};
Point(59) = {0.032597, 0.748080, 0, 1.0};
Point(60) = {0.040216, 0.747223, 0, 1.0};
Point(61) = {0.047645, 0.746338, 0, 1.0};
Point(62) = {0.054773, 0.745583, 0, 1.0};
Point(63) = {0.061415, 0.745048, 0, 1.0};
Point(64) = {0.067390, 0.744761, 0, 1.0};
Point(65) = {0.072533, 0.744722, 0, 1.0};
Point(66) = {0.075001, 0.744798, 0, 1.0};
Point(67) = {-0.075007, -0.743263, 0, 1.0};
Point(68) = {-0.074280, -0.743047, 0, 1.0};
Point(69) = {-0.070295, -0.741889, 0, 1.0};
Point(70) = {-0.065589, -0.740575, 0, 1.0};
Point(71) = {-0.060246, -0.739118, 0, 1.0};
Point(72) = {-0.054354, -0.737551, 0, 1.0};
Point(73) = {-0.048012, -0.735912, 0, 1.0};
Point(74) = {-0.041307, -0.734244, 0, 1.0};
Point(75) = {-0.034347, -0.732603, 0, 1.0};
Point(76) = {-0.027226, -0.731065, 0, 1.0};
Point(77) = {-0.020006, -0.729720, 0, 1.0};
Point(78) = {-0.012711, -0.728628, 0, 1.0};
Point(79) = {-0.005372, -0.727809, 0, 1.0};
Point(80) = {0.001967, -0.727274, 0, 1.0};
Point(81) = {0.009637, -0.727022, 0, 1.0};
Point(82) = {0.016447, -0.727046, 0, 1.0};
Point(83) = {0.023472, -0.727329, 0, 1.0};
Point(84) = {0.030266, -0.727854, 0, 1.0};
Point(85) = {0.036763, -0.728612, 0, 1.0};
Point(86) = {0.042904, -0.729582, 0, 1.0};
Point(87) = {0.048630, -0.730749, 0, 1.0};
Point(88) = {0.053889, -0.732091, 0, 1.0};
Point(89) = {0.058639, -0.733583, 0, 1.0};
Point(90) = {0.062836, -0.735195, 0, 1.0};
Point(91) = {0.066450, -0.736894, 0, 1.0};
Point(92) = {0.069454, -0.738642, 0, 1.0};
Point(93) = {0.071826, -0.740388, 0, 1.0};
Point(94) = {0.073553, -0.742074, 0, 1.0};
Point(95) = {0.074619, -0.743625, 0, 1.0};
Point(96) = {0.074866, -0.744212, 0, 1.0};
Point(97) = {0.074967, -0.744601, 0, 1.0};
Point(98) = {0.075000, -0.744841, 0, 1.0};
Point(99) = {0.075000, -0.745064, 0, 1.0};
Point(100) = {0.074990, -0.745166, 0, 1.0};
Point(101) = {0.074970, -0.745262, 0, 1.0};
Point(102) = {0.074938, -0.745350, 0, 1.0};
Point(103) = {0.074892, -0.745432, 0, 1.0};
Point(104) = {0.074827, -0.745512, 0, 1.0};
Point(105) = {0.074751, -0.745593, 0, 1.0};
Point(106) = {0.074564, -0.745754, 0, 1.0};
Point(107) = {0.074334, -0.745913, 0, 1.0};
Point(108) = {0.073916, -0.746150, 0, 1.0};
Point(109) = {0.072871, -0.746601, 0, 1.0};
Point(110) = {0.070379, -0.747308, 0, 1.0};
Point(111) = {0.067030, -0.747918, 0, 1.0};
Point(112) = {0.062860, -0.748433, 0, 1.0};
Point(113) = {0.057914, -0.748858, 0, 1.0};
Point(114) = {0.052250, -0.749207, 0, 1.0};
Point(115) = {0.045945, -0.749490, 0, 1.0};
Point(116) = {0.039078, -0.749708, 0, 1.0};
Point(117) = {0.031736, -0.749866, 0, 1.0};
Point(118) = {0.024011, -0.749964, 0, 1.0};
Point(119) = {0.016001, -0.750000, 0, 1.0};
Point(120) = {0.007807, -0.749968, 0, 1.0};
Point(121) = {-0.000469, -0.749859, 0, 1.0};
Point(122) = {-0.008723, -0.749657, 0, 1.0};
Point(123) = {-0.016851, -0.749325, 0, 1.0};
Point(124) = {-0.024808, -0.748800, 0, 1.0};
Point(125) = {-0.032597, -0.748080, 0, 1.0};
Point(126) = {-0.040216, -0.747223, 0, 1.0};
Point(127) = {-0.047645, -0.746338, 0, 1.0};
Point(128) = {-0.054773, -0.745583, 0, 1.0};
Point(129) = {-0.061415, -0.745048, 0, 1.0};
Point(130) = {-0.067390, -0.744761, 0, 1.0};
Point(131) = {-0.072533, -0.744722, 0, 1.0};
Point(132) = {-0.075001, -0.744798, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.073789, 0.720830, 0, 1.0};
Point(2) = {0.071966, 0.720693, 0, 1.0};
Point(3) = {0.069148, 0.720432, 0, 1.0};
Point(4) = {0.066003, 0.720129, 0, 1.0};
Point(5) = {0.062647, 0.719774, 0, 1.0};
Point(6) = {0.058984, 0.719374, 0, 1.0};
Point(7) = {0.055091, 0.718942, 0, 1.0};
Point(8) = {0.050943, 0.718467, 0, 1.0};
Point(9) = {0.046588, 0.717980, 0, 1.0};
Point(10) = {0.042043, 0.717464, 0, 1.0};
Point(11) = {0.037337, 0.716966, 0, 1.0};
Point(12) = {0.032465, 0.716458, 0, 1.0};
Point(13) = {0.027475, 0.715992, 0, 1.0};
Point(14) = {0.022364, 0.715537, 0, 1.0};
Point(15) = {0.017181, 0.715161, 0, 1.0};
Point(16) = {0.011945, 0.714826, 0, 1.0};
Point(17) = {0.006683, 0.714596, 0, 1.0};
Point(18) = {0.001393, 0.714450, 0, 1.0};
Point(19) = {-0.003848, 0.714485, 0, 1.0};
Point(20) = {-0.009070, 0.714649, 0, 1.0};
Point(21) = {-0.014185, 0.715104, 0, 1.0};
Point(22) = {-0.019203, 0.715784, 0, 1.0};
Point(23) = {-0.024073, 0.716758, 0, 1.0};
Point(24) = {-0.028846, 0.717829, 0, 1.0};
Point(25) = {-0.033420, 0.719125, 0, 1.0};
Point(26) = {-0.037868, 0.720432, 0, 1.0};
Point(27) = {-0.042094, 0.721974, 0, 1.0};
Point(28) = {-0.046146, 0.723455, 0, 1.0};
Point(29) = {-0.049933, 0.725173, 0, 1.0};
Point(30) = {-0.053536, 0.726764, 0, 1.0};
Point(31) = {-0.056853, 0.728596, 0, 1.0};
Point(32) = {-0.059936, 0.730212, 0, 1.0};
Point(33) = {-0.062713, 0.732089, 0, 1.0};
Point(34) = {-0.065246, 0.733677, 0, 1.0};
Point(35) = {-0.067425, 0.735553, 0, 1.0};
Point(36) = {-0.069375, 0.737040, 0, 1.0};
Point(37) = {-0.070942, 0.738884, 0, 1.0};
Point(38) = {-0.072266, 0.740179, 0, 1.0};
Point(39) = {-0.073244, 0.741566, 0, 1.0};
Point(40) = {-0.073892, 0.742967, 0, 1.0};
Point(41) = {-0.074166, 0.744522, 0, 1.0};
Point(42) = {-0.074120, 0.745881, 0, 1.0};
Point(43) = {-0.073875, 0.746406, 0, 1.0};
Point(44) = {-0.073264, 0.747035, 0, 1.0};
Point(45) = {-0.072299, 0.747678, 0, 1.0};
Point(46) = {-0.071059, 0.747985, 0, 1.0};
Point(47) = {-0.069435, 0.748636, 0, 1.0};
Point(48) = {-0.067549, 0.748859, 0, 1.0};
Point(49) = {-0.065296, 0.749329, 0, 1.0};
Point(50) = {-0.062806, 0.749462, 0, 1.0};
Point(51) = {-0.059978, 0.749788, 0, 1.0};
Point(52) = {-0.056906, 0.749818, 0, 1.0};
Point(53) = {-0.053546, 0.750000, 0, 1.0};
Point(54) = {-0.049960, 0.749906, 0, 1.0};
Point(55) = {-0.046109, 0.749925, 0, 1.0};
Point(56) = {-0.042093, 0.749688, 0, 1.0};
Point(57) = {-0.037839, 0.749513, 0, 1.0};
Point(58) = {-0.033440, 0.749089, 0, 1.0};
Point(59) = {-0.028851, 0.748697, 0, 1.0};
Point(60) = {-0.024173, 0.748069, 0, 1.0};
Point(61) = {-0.019335, 0.747422, 0, 1.0};
Point(62) = {-0.014452, 0.746536, 0, 1.0};
Point(63) = {-0.009476, 0.745579, 0, 1.0};
Point(64) = {-0.004491, 0.744283, 0, 1.0};
Point(65) = {0.000542, 0.742899, 0, 1.0};
Point(66) = {0.005546, 0.741329, 0, 1.0};
Point(67) = {0.010573, 0.739766, 0, 1.0};
Point(68) = {0.015545, 0.738123, 0, 1.0};
Point(69) = {0.020483, 0.736532, 0, 1.0};
Point(70) = {0.025359, 0.734921, 0, 1.0};
Point(71) = {0.030165, 0.733398, 0, 1.0};
Point(72) = {0.034852, 0.731909, 0, 1.0};
Point(73) = {0.039432, 0.730525, 0, 1.0};
Point(74) = {0.043858, 0.729210, 0, 1.0};
Point(75) = {0.048138, 0.728007, 0, 1.0};
Point(76) = {0.052245, 0.726891, 0, 1.0};
Point(77) = {0.056166, 0.725899, 0, 1.0};
Point(78) = {0.059853, 0.725001, 0, 1.0};
Point(79) = {0.063335, 0.724227, 0, 1.0};
Point(80) = {0.066534, 0.723564, 0, 1.0};
Point(81) = {0.069544, 0.722999, 0, 1.0};
Point(82) = {0.072251, 0.722541, 0, 1.0};
Point(83) = {0.074012, 0.722276, 0, 1.0};
Point(84) = {-0.073789, -0.720830, 0, 1.0};
Point(85) = {-0.071966, -0.720693, 0, 1.0};
Point(86) = {-0.069148, -0.720432, 0, 1.0};
Point(87) = {-0.066003, -0.720129, 0, 1.0};
Point(88) = {-0.062647, -0.719774, 0, 1.0};
Point(89) = {-0.058984, -0.719374, 0, 1.0};
Point(90) = {-0.055091, -0.718942, 0, 1.0};
Point(91) = {-0.050943, -0.718467, 0, 1.0};
Point(92) = {-0.046588, -0.717980, 0, 1.0};
Point(93) = {-0.042043, -0.717464, 0, 1.0};
Point(94) = {-0.037337, -0.716966, 0, 1.0};
Point(95) = {-0.032465, -0.716458, 0, 1.0};
Point(96) = {-0.027475, -0.715992, 0, 1.0};
Point(97) = {-0.022364, -0.715537, 0, 1.0};
Point(98) = {-0.017181, -0.715161, 0, 1.0};
Point(99) = {-0.011945, -0.714826, 0, 1.0};
Point(100) = {-0.006683, -0.714596, 0, 1.0};
Point(101) = {-0.001393, -0.714450, 0, 1.0};
Point(102) = {0.003848, -0.714485, 0, 1.0};
Point(103) = {0.009070, -0.714649, 0, 1.0};
Point(104) = {0.014185, -0.715104, 0, 1.0};
Point(105) = {0.019203, -0.715784, 0, 1.0};
Point(106) = {0.024073, -0.716758, 0, 1.0};
Point(107) = {0.028846, -0.717829, 0, 1.0};
Point(108) = {0.033420, -0.719125, 0, 1.0};
Point(109) = {0.037868, -0.720432, 0, 1.0};
Point(110) = {0.042094, -0.721974, 0, 1.0};
Point(111) = {0.046146, -0.723455, 0, 1.0};
Point(112) = {0.049933, -0.725173, 0, 1.0};
Point(113) = {0.053536, -0.726764, 0, 1.0};
Point(114) = {0.056853, -0.728596, 0, 1.0};
Point(115) = {0.059936, -0.730212, 0, 1.0};
Point(116) = {0.062713, -0.732089, 0, 1.0};
Point(117) = {0.065246, -0.733677, 0, 1.0};
Point(118) = {0.067425, -0.735553, 0, 1.0};
Point(119) = {0.069375, -0.737040, 0, 1.0};
Point(120) = {0.070942, -0.738884, 0, 1.0};
Point(121) = {0.072266, -0.740179, 0, 1.0};
Point(122) = {0.073244, -0.741566, 0, 1.0};
Point(123) = {0.073892, -0.742967, 0, 1.0};
Point(124) = {0.074166, -0.744522, 0, 1.0};
Point(125) = {0.074120, -0.745881, 0, 1.0};
Point(126) = {0.073875, -0.746406, 0, 1.0};
Point(127) = {0.073264, -0.747035, 0, 1.0};
Point(128) = {0.072299, -0.747678, 0, 1.0};
Point(129) = {0.071059, -0.747985, 0, 1.0};
Point(130) = {0.069435, -0.748636, 0, 1.0};
Point(131) = {0.067549, -0.748859, 0, 1.0};
Point(132) = {0.065296, -0.749329, 0, 1.0};
Point(133) = {0.062806, -0.749462, 0, 1.0};
Point(134) = {0.059978, -0.749788, 0, 1.0};
Point(135) = {0.056906, -0.749818, 0, 1.0};
Point(136) = {0.053546, -0.750000, 0, 1.0};
Point(137) = {0.049960, -0.749906, 0, 1.0};
Point(138) = {0.046109, -0.749925, 0, 1.0};
Point(139) = {0.042093, -0.749688, 0, 1.0};
Point(140) = {0.037839, -0.749513, 0, 1.0};
Point(141) = {0.033440, -0.749089, 0, 1.0};
Point(142) = {0.028851, -0.748697, 0, 1.0};
Point(143) = {0.024173, -0.748069, 0, 1.0};
Point(144) = {0.019335, -0.747422, 0, 1.0};
Point(145) = {0.014452, -0.746536, 0, 1.0};
Point(146) = {0.009476, -0.745579, 0, 1.0};
Point(147) = {0.004491, -0.744283, 0, 1.0};
Point(148) = {-0.000542, -0.742899, 0, 1.0};
Point(149) = {-0.005546, -0.741329, 0, 1.0};
Point(150) = {-0.010573, -0.739766, 0, 1.0};
Point(151) = {-0.015545, -0.738123, 0, 1.0};
Point(152) = {-0.020483, -0.736532, 0, 1.0};
Point(153) = {-0.025359, -0.734921, 0, 1.0};
Point(154) = {-0.030165, -0.733398, 0, 1.0};
Point(155) = {-0.034852, -0.731909, 0, 1.0};
Point(156) = {-0.039432, -0.730525, 0, 1.0};
Point(157) = {-0.043858, -0.729210, 0, 1.0};
Point(158) = {-0.048138, -0.728007, 0, 1.0};
Point(159) = {-0.052245, -0.726891, 0, 1.0};
Point(160) = {-0.056166, -0.725899, 0, 1.0};
Point(161) = {-0.059853, -0.725001, 0, 1.0};
Point(162) = {-0.063335, -0.724227, 0, 1.0};
Point(163) = {-0.066534, -0.723564, 0, 1.0};
Point(164) = {-0.069544, -0.722999, 0, 1.0};
Point(165) = {-0.072251, -0.722541, 0, 1.0};
Point(166) = {-0.074012, -0.722276, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:58};
Spline(3) = {58:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:141};
Spline(7) = {141:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
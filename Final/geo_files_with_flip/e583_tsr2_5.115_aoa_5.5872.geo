SetFactory("OpenCASCADE");

Point(1) = {0.074468, 0.730853, 0, 1.0};
Point(2) = {0.072198, 0.730419, 0, 1.0};
Point(3) = {0.068033, 0.729684, 0, 1.0};
Point(4) = {0.063095, 0.728862, 0, 1.0};
Point(5) = {0.057483, 0.727938, 0, 1.0};
Point(6) = {0.051300, 0.726926, 0, 1.0};
Point(7) = {0.044659, 0.725851, 0, 1.0};
Point(8) = {0.037671, 0.724751, 0, 1.0};
Point(9) = {0.030447, 0.723670, 0, 1.0};
Point(10) = {0.023093, 0.722666, 0, 1.0};
Point(11) = {0.015711, 0.721805, 0, 1.0};
Point(12) = {0.008392, 0.721174, 0, 1.0};
Point(13) = {0.001166, 0.720880, 0, 1.0};
Point(14) = {-0.005998, 0.720953, 0, 1.0};
Point(15) = {-0.013018, 0.721347, 0, 1.0};
Point(16) = {-0.020020, 0.722054, 0, 1.0};
Point(17) = {-0.026762, 0.723037, 0, 1.0};
Point(18) = {-0.033252, 0.724284, 0, 1.0};
Point(19) = {-0.039438, 0.725763, 0, 1.0};
Point(20) = {-0.045261, 0.727443, 0, 1.0};
Point(21) = {-0.050666, 0.729300, 0, 1.0};
Point(22) = {-0.055606, 0.731298, 0, 1.0};
Point(23) = {-0.060040, 0.733405, 0, 1.0};
Point(24) = {-0.063934, 0.735582, 0, 1.0};
Point(25) = {-0.067255, 0.737790, 0, 1.0};
Point(26) = {-0.069982, 0.739977, 0, 1.0};
Point(27) = {-0.072095, 0.742096, 0, 1.0};
Point(28) = {-0.073581, 0.744082, 0, 1.0};
Point(29) = {-0.074434, 0.745858, 0, 1.0};
Point(30) = {-0.074608, 0.746565, 0, 1.0};
Point(31) = {-0.074650, 0.746992, 0, 1.0};
Point(32) = {-0.074644, 0.747252, 0, 1.0};
Point(33) = {-0.074611, 0.747492, 0, 1.0};
Point(34) = {-0.074584, 0.747602, 0, 1.0};
Point(35) = {-0.074548, 0.747705, 0, 1.0};
Point(36) = {-0.074501, 0.747796, 0, 1.0};
Point(37) = {-0.074440, 0.747880, 0, 1.0};
Point(38) = {-0.074361, 0.747963, 0, 1.0};
Point(39) = {-0.074270, 0.748044, 0, 1.0};
Point(40) = {-0.074053, 0.748199, 0, 1.0};
Point(41) = {-0.073794, 0.748351, 0, 1.0};
Point(42) = {-0.073333, 0.748567, 0, 1.0};
Point(43) = {-0.072276, 0.748933, 0, 1.0};
Point(44) = {-0.069677, 0.749468, 0, 1.0};
Point(45) = {-0.066234, 0.749820, 0, 1.0};
Point(46) = {-0.061991, 0.749995, 0, 1.0};
Point(47) = {-0.056990, 0.750000, 0, 1.0};
Point(48) = {-0.051293, 0.749857, 0, 1.0};
Point(49) = {-0.044972, 0.749580, 0, 1.0};
Point(50) = {-0.038107, 0.749181, 0, 1.0};
Point(51) = {-0.030785, 0.748671, 0, 1.0};
Point(52) = {-0.023101, 0.748061, 0, 1.0};
Point(53) = {-0.015150, 0.747355, 0, 1.0};
Point(54) = {-0.007033, 0.746559, 0, 1.0};
Point(55) = {0.001149, 0.745676, 0, 1.0};
Point(56) = {0.009293, 0.744705, 0, 1.0};
Point(57) = {0.017297, 0.743639, 0, 1.0};
Point(58) = {0.025053, 0.742445, 0, 1.0};
Point(59) = {0.032527, 0.741055, 0, 1.0};
Point(60) = {0.039752, 0.739478, 0, 1.0};
Point(61) = {0.046736, 0.737804, 0, 1.0};
Point(62) = {0.053449, 0.736158, 0, 1.0};
Point(63) = {0.059792, 0.734701, 0, 1.0};
Point(64) = {0.065596, 0.733540, 0, 1.0};
Point(65) = {0.070674, 0.732731, 0, 1.0};
Point(66) = {0.074610, 0.732299, 0, 1.0};
Point(67) = {-0.074468, -0.730853, 0, 1.0};
Point(68) = {-0.072198, -0.730419, 0, 1.0};
Point(69) = {-0.068033, -0.729684, 0, 1.0};
Point(70) = {-0.063095, -0.728862, 0, 1.0};
Point(71) = {-0.057483, -0.727938, 0, 1.0};
Point(72) = {-0.051300, -0.726926, 0, 1.0};
Point(73) = {-0.044659, -0.725851, 0, 1.0};
Point(74) = {-0.037671, -0.724751, 0, 1.0};
Point(75) = {-0.030447, -0.723670, 0, 1.0};
Point(76) = {-0.023093, -0.722666, 0, 1.0};
Point(77) = {-0.015711, -0.721805, 0, 1.0};
Point(78) = {-0.008392, -0.721174, 0, 1.0};
Point(79) = {-0.001166, -0.720880, 0, 1.0};
Point(80) = {0.005998, -0.720953, 0, 1.0};
Point(81) = {0.013018, -0.721347, 0, 1.0};
Point(82) = {0.020020, -0.722054, 0, 1.0};
Point(83) = {0.026762, -0.723037, 0, 1.0};
Point(84) = {0.033252, -0.724284, 0, 1.0};
Point(85) = {0.039438, -0.725763, 0, 1.0};
Point(86) = {0.045261, -0.727443, 0, 1.0};
Point(87) = {0.050666, -0.729300, 0, 1.0};
Point(88) = {0.055606, -0.731298, 0, 1.0};
Point(89) = {0.060040, -0.733405, 0, 1.0};
Point(90) = {0.063934, -0.735582, 0, 1.0};
Point(91) = {0.067255, -0.737790, 0, 1.0};
Point(92) = {0.069982, -0.739977, 0, 1.0};
Point(93) = {0.072095, -0.742096, 0, 1.0};
Point(94) = {0.073581, -0.744082, 0, 1.0};
Point(95) = {0.074434, -0.745858, 0, 1.0};
Point(96) = {0.074608, -0.746565, 0, 1.0};
Point(97) = {0.074650, -0.746992, 0, 1.0};
Point(98) = {0.074644, -0.747252, 0, 1.0};
Point(99) = {0.074611, -0.747492, 0, 1.0};
Point(100) = {0.074584, -0.747602, 0, 1.0};
Point(101) = {0.074548, -0.747705, 0, 1.0};
Point(102) = {0.074501, -0.747796, 0, 1.0};
Point(103) = {0.074440, -0.747880, 0, 1.0};
Point(104) = {0.074361, -0.747963, 0, 1.0};
Point(105) = {0.074270, -0.748044, 0, 1.0};
Point(106) = {0.074053, -0.748199, 0, 1.0};
Point(107) = {0.073794, -0.748351, 0, 1.0};
Point(108) = {0.073333, -0.748567, 0, 1.0};
Point(109) = {0.072276, -0.748933, 0, 1.0};
Point(110) = {0.069677, -0.749468, 0, 1.0};
Point(111) = {0.066234, -0.749820, 0, 1.0};
Point(112) = {0.061991, -0.749995, 0, 1.0};
Point(113) = {0.056990, -0.750000, 0, 1.0};
Point(114) = {0.051293, -0.749857, 0, 1.0};
Point(115) = {0.044972, -0.749580, 0, 1.0};
Point(116) = {0.038107, -0.749181, 0, 1.0};
Point(117) = {0.030785, -0.748671, 0, 1.0};
Point(118) = {0.023101, -0.748061, 0, 1.0};
Point(119) = {0.015150, -0.747355, 0, 1.0};
Point(120) = {0.007033, -0.746559, 0, 1.0};
Point(121) = {-0.001149, -0.745676, 0, 1.0};
Point(122) = {-0.009293, -0.744705, 0, 1.0};
Point(123) = {-0.017297, -0.743639, 0, 1.0};
Point(124) = {-0.025053, -0.742445, 0, 1.0};
Point(125) = {-0.032527, -0.741055, 0, 1.0};
Point(126) = {-0.039752, -0.739478, 0, 1.0};
Point(127) = {-0.046736, -0.737804, 0, 1.0};
Point(128) = {-0.053449, -0.736158, 0, 1.0};
Point(129) = {-0.059792, -0.734701, 0, 1.0};
Point(130) = {-0.065596, -0.733540, 0, 1.0};
Point(131) = {-0.070674, -0.732731, 0, 1.0};
Point(132) = {-0.074610, -0.732299, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:18};
Spline(2) = {18:50};
Spline(3) = {50:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:84};
Spline(6) = {84:116};
Spline(7) = {116:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
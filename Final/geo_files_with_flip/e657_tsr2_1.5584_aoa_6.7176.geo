SetFactory("OpenCASCADE");

Point(1) = {0.074239, 0.727673, 0, 1.0};
Point(2) = {0.073270, 0.727519, 0, 1.0};
Point(3) = {0.069022, 0.726827, 0, 1.0};
Point(4) = {0.064009, 0.726018, 0, 1.0};
Point(5) = {0.058341, 0.725080, 0, 1.0};
Point(6) = {0.052137, 0.724030, 0, 1.0};
Point(7) = {0.045527, 0.722902, 0, 1.0};
Point(8) = {0.038642, 0.721753, 0, 1.0};
Point(9) = {0.031608, 0.720659, 0, 1.0};
Point(10) = {0.024545, 0.719746, 0, 1.0};
Point(11) = {0.017467, 0.719169, 0, 1.0};
Point(12) = {0.010312, 0.718972, 0, 1.0};
Point(13) = {0.003084, 0.719121, 0, 1.0};
Point(14) = {-0.004175, 0.719578, 0, 1.0};
Point(15) = {-0.011401, 0.720307, 0, 1.0};
Point(16) = {-0.018516, 0.721286, 0, 1.0};
Point(17) = {-0.025448, 0.722495, 0, 1.0};
Point(18) = {-0.032131, 0.723916, 0, 1.0};
Point(19) = {-0.038498, 0.725528, 0, 1.0};
Point(20) = {-0.044486, 0.727310, 0, 1.0};
Point(21) = {-0.050041, 0.729235, 0, 1.0};
Point(22) = {-0.055113, 0.731278, 0, 1.0};
Point(23) = {-0.059658, 0.733409, 0, 1.0};
Point(24) = {-0.063638, 0.735594, 0, 1.0};
Point(25) = {-0.067024, 0.737798, 0, 1.0};
Point(26) = {-0.069794, 0.739976, 0, 1.0};
Point(27) = {-0.071930, 0.742085, 0, 1.0};
Point(28) = {-0.073428, 0.744064, 0, 1.0};
Point(29) = {-0.074281, 0.745843, 0, 1.0};
Point(30) = {-0.074462, 0.746612, 0, 1.0};
Point(31) = {-0.074497, 0.747042, 0, 1.0};
Point(32) = {-0.074485, 0.747306, 0, 1.0};
Point(33) = {-0.074449, 0.747549, 0, 1.0};
Point(34) = {-0.074418, 0.747661, 0, 1.0};
Point(35) = {-0.074380, 0.747765, 0, 1.0};
Point(36) = {-0.074333, 0.747859, 0, 1.0};
Point(37) = {-0.074269, 0.747947, 0, 1.0};
Point(38) = {-0.074191, 0.748031, 0, 1.0};
Point(39) = {-0.074100, 0.748115, 0, 1.0};
Point(40) = {-0.073885, 0.748278, 0, 1.0};
Point(41) = {-0.073628, 0.748433, 0, 1.0};
Point(42) = {-0.073173, 0.748656, 0, 1.0};
Point(43) = {-0.072214, 0.749008, 0, 1.0};
Point(44) = {-0.069702, 0.749547, 0, 1.0};
Point(45) = {-0.066373, 0.749880, 0, 1.0};
Point(46) = {-0.062265, 0.750000, 0, 1.0};
Point(47) = {-0.057419, 0.749908, 0, 1.0};
Point(48) = {-0.051881, 0.749615, 0, 1.0};
Point(49) = {-0.045712, 0.749132, 0, 1.0};
Point(50) = {-0.038977, 0.748475, 0, 1.0};
Point(51) = {-0.031753, 0.747664, 0, 1.0};
Point(52) = {-0.024122, 0.746717, 0, 1.0};
Point(53) = {-0.016176, 0.745652, 0, 1.0};
Point(54) = {-0.008009, 0.744486, 0, 1.0};
Point(55) = {0.000274, 0.743233, 0, 1.0};
Point(56) = {0.008577, 0.741896, 0, 1.0};
Point(57) = {0.016813, 0.740487, 0, 1.0};
Point(58) = {0.024893, 0.739011, 0, 1.0};
Point(59) = {0.032729, 0.737484, 0, 1.0};
Point(60) = {0.040246, 0.735889, 0, 1.0};
Point(61) = {0.048666, 0.734079, 0, 1.0};
Point(62) = {0.054349, 0.732616, 0, 1.0};
Point(63) = {0.060825, 0.731215, 0, 1.0};
Point(64) = {0.066725, 0.730122, 0, 1.0};
Point(65) = {0.071867, 0.729388, 0, 1.0};
Point(66) = {0.074411, 0.729135, 0, 1.0};
Point(67) = {-0.074239, -0.727673, 0, 1.0};
Point(68) = {-0.073270, -0.727519, 0, 1.0};
Point(69) = {-0.069022, -0.726827, 0, 1.0};
Point(70) = {-0.064009, -0.726018, 0, 1.0};
Point(71) = {-0.058341, -0.725080, 0, 1.0};
Point(72) = {-0.052137, -0.724030, 0, 1.0};
Point(73) = {-0.045527, -0.722902, 0, 1.0};
Point(74) = {-0.038642, -0.721753, 0, 1.0};
Point(75) = {-0.031608, -0.720659, 0, 1.0};
Point(76) = {-0.024545, -0.719746, 0, 1.0};
Point(77) = {-0.017467, -0.719169, 0, 1.0};
Point(78) = {-0.010312, -0.718972, 0, 1.0};
Point(79) = {-0.003084, -0.719121, 0, 1.0};
Point(80) = {0.004175, -0.719578, 0, 1.0};
Point(81) = {0.011401, -0.720307, 0, 1.0};
Point(82) = {0.018516, -0.721286, 0, 1.0};
Point(83) = {0.025448, -0.722495, 0, 1.0};
Point(84) = {0.032131, -0.723916, 0, 1.0};
Point(85) = {0.038498, -0.725528, 0, 1.0};
Point(86) = {0.044486, -0.727310, 0, 1.0};
Point(87) = {0.050041, -0.729235, 0, 1.0};
Point(88) = {0.055113, -0.731278, 0, 1.0};
Point(89) = {0.059658, -0.733409, 0, 1.0};
Point(90) = {0.063638, -0.735594, 0, 1.0};
Point(91) = {0.067024, -0.737798, 0, 1.0};
Point(92) = {0.069794, -0.739976, 0, 1.0};
Point(93) = {0.071930, -0.742085, 0, 1.0};
Point(94) = {0.073428, -0.744064, 0, 1.0};
Point(95) = {0.074281, -0.745843, 0, 1.0};
Point(96) = {0.074462, -0.746612, 0, 1.0};
Point(97) = {0.074497, -0.747042, 0, 1.0};
Point(98) = {0.074485, -0.747306, 0, 1.0};
Point(99) = {0.074449, -0.747549, 0, 1.0};
Point(100) = {0.074418, -0.747661, 0, 1.0};
Point(101) = {0.074380, -0.747765, 0, 1.0};
Point(102) = {0.074333, -0.747859, 0, 1.0};
Point(103) = {0.074269, -0.747947, 0, 1.0};
Point(104) = {0.074191, -0.748031, 0, 1.0};
Point(105) = {0.074100, -0.748115, 0, 1.0};
Point(106) = {0.073885, -0.748278, 0, 1.0};
Point(107) = {0.073628, -0.748433, 0, 1.0};
Point(108) = {0.073173, -0.748656, 0, 1.0};
Point(109) = {0.072214, -0.749008, 0, 1.0};
Point(110) = {0.069702, -0.749547, 0, 1.0};
Point(111) = {0.066373, -0.749880, 0, 1.0};
Point(112) = {0.062265, -0.750000, 0, 1.0};
Point(113) = {0.057419, -0.749908, 0, 1.0};
Point(114) = {0.051881, -0.749615, 0, 1.0};
Point(115) = {0.045712, -0.749132, 0, 1.0};
Point(116) = {0.038977, -0.748475, 0, 1.0};
Point(117) = {0.031753, -0.747664, 0, 1.0};
Point(118) = {0.024122, -0.746717, 0, 1.0};
Point(119) = {0.016176, -0.745652, 0, 1.0};
Point(120) = {0.008009, -0.744486, 0, 1.0};
Point(121) = {-0.000274, -0.743233, 0, 1.0};
Point(122) = {-0.008577, -0.741896, 0, 1.0};
Point(123) = {-0.016813, -0.740487, 0, 1.0};
Point(124) = {-0.024893, -0.739011, 0, 1.0};
Point(125) = {-0.032729, -0.737484, 0, 1.0};
Point(126) = {-0.040246, -0.735889, 0, 1.0};
Point(127) = {-0.048666, -0.734079, 0, 1.0};
Point(128) = {-0.054349, -0.732616, 0, 1.0};
Point(129) = {-0.060825, -0.731215, 0, 1.0};
Point(130) = {-0.066725, -0.730122, 0, 1.0};
Point(131) = {-0.071867, -0.729388, 0, 1.0};
Point(132) = {-0.074411, -0.729135, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:51};
Spline(3) = {51:66};
Spline(4) = {66,1};

// Lines: second blade (splines 5-8)
Spline(5) = {67:85};
Spline(6) = {85:117};
Spline(7) = {117:132};
Spline(8) = {132,67};

// Outer domain (points 20001-4 and lines)
Point(133) = {-13.50000000, -15.00000000, 0, 1.0};
Point(134) = {-13.50000000, 15.00000000, 0, 1.0};
Point(135) = {13.50000000, 15.00000000, 0, 1.0};
Point(136) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {133, 134};
Line(12) = {134, 135};
Line(13) = {135, 136};
Line(14) = {133, 136};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
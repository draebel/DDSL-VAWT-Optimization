SetFactory("OpenCASCADE");

Point(1) = {0.074944, 0.743094, 0, 1.0};
Point(2) = {0.072806, 0.742461, 0, 1.0};
Point(3) = {0.068583, 0.741126, 0, 1.0};
Point(4) = {0.063746, 0.739622, 0, 1.0};
Point(5) = {0.058335, 0.737985, 0, 1.0};
Point(6) = {0.052448, 0.736236, 0, 1.0};
Point(7) = {0.046195, 0.734432, 0, 1.0};
Point(8) = {0.039669, 0.732645, 0, 1.0};
Point(9) = {0.032956, 0.730955, 0, 1.0};
Point(10) = {0.026122, 0.729449, 0, 1.0};
Point(11) = {0.019207, 0.728203, 0, 1.0};
Point(12) = {0.012240, 0.727272, 0, 1.0};
Point(13) = {0.005245, 0.726690, 0, 1.0};
Point(14) = {-0.001755, 0.726480, 0, 1.0};
Point(15) = {-0.008755, 0.726642, 0, 1.0};
Point(16) = {-0.015735, 0.727123, 0, 1.0};
Point(17) = {-0.022626, 0.727870, 0, 1.0};
Point(18) = {-0.029349, 0.728849, 0, 1.0};
Point(19) = {-0.035834, 0.730030, 0, 1.0};
Point(20) = {-0.042007, 0.731386, 0, 1.0};
Point(21) = {-0.047805, 0.732889, 0, 1.0};
Point(22) = {-0.053162, 0.734509, 0, 1.0};
Point(23) = {-0.058022, 0.736219, 0, 1.0};
Point(24) = {-0.062331, 0.737988, 0, 1.0};
Point(25) = {-0.066041, 0.739794, 0, 1.0};
Point(26) = {-0.069132, 0.741607, 0, 1.0};
Point(27) = {-0.071578, 0.743383, 0, 1.0};
Point(28) = {-0.073373, 0.745078, 0, 1.0};
Point(29) = {-0.074502, 0.746619, 0, 1.0};
Point(30) = {-0.074969, 0.747917, 0, 1.0};
Point(31) = {-0.074982, 0.748108, 0, 1.0};
Point(32) = {-0.074962, 0.748349, 0, 1.0};
Point(33) = {-0.074934, 0.748454, 0, 1.0};
Point(34) = {-0.074891, 0.748544, 0, 1.0};
Point(35) = {-0.074824, 0.748623, 0, 1.0};
Point(36) = {-0.074735, 0.748698, 0, 1.0};
Point(37) = {-0.074675, 0.748740, 0, 1.0};
Point(38) = {-0.074500, 0.748843, 0, 1.0};
Point(39) = {-0.073277, 0.749253, 0, 1.0};
Point(40) = {-0.070919, 0.749562, 0, 1.0};
Point(41) = {-0.067541, 0.749691, 0, 1.0};
Point(42) = {-0.063197, 0.749759, 0, 1.0};
Point(43) = {-0.058009, 0.749807, 0, 1.0};
Point(44) = {-0.052059, 0.749848, 0, 1.0};
Point(45) = {-0.045458, 0.749889, 0, 1.0};
Point(46) = {-0.038297, 0.749931, 0, 1.0};
Point(47) = {-0.030685, 0.749969, 0, 1.0};
Point(48) = {-0.022721, 0.749995, 0, 1.0};
Point(49) = {-0.014515, 0.750000, 0, 1.0};
Point(50) = {-0.006166, 0.749970, 0, 1.0};
Point(51) = {0.002216, 0.749891, 0, 1.0};
Point(52) = {0.010530, 0.749741, 0, 1.0};
Point(53) = {0.018675, 0.749485, 0, 1.0};
Point(54) = {0.026595, 0.749072, 0, 1.0};
Point(55) = {0.034265, 0.748497, 0, 1.0};
Point(56) = {0.041656, 0.747788, 0, 1.0};
Point(57) = {0.048734, 0.747002, 0, 1.0};
Point(58) = {0.055436, 0.746221, 0, 1.0};
Point(59) = {0.061670, 0.745536, 0, 1.0};
Point(60) = {0.067294, 0.745027, 0, 1.0};
Point(61) = {0.072151, 0.744716, 0, 1.0};
Point(62) = {0.074977, 0.744611, 0, 1.0};
Point(63) = {-0.074944, -0.743094, 0, 1.0};
Point(64) = {-0.072806, -0.742461, 0, 1.0};
Point(65) = {-0.068583, -0.741126, 0, 1.0};
Point(66) = {-0.063746, -0.739622, 0, 1.0};
Point(67) = {-0.058335, -0.737985, 0, 1.0};
Point(68) = {-0.052448, -0.736236, 0, 1.0};
Point(69) = {-0.046195, -0.734432, 0, 1.0};
Point(70) = {-0.039669, -0.732645, 0, 1.0};
Point(71) = {-0.032956, -0.730955, 0, 1.0};
Point(72) = {-0.026122, -0.729449, 0, 1.0};
Point(73) = {-0.019207, -0.728203, 0, 1.0};
Point(74) = {-0.012240, -0.727272, 0, 1.0};
Point(75) = {-0.005245, -0.726690, 0, 1.0};
Point(76) = {0.001755, -0.726480, 0, 1.0};
Point(77) = {0.008755, -0.726642, 0, 1.0};
Point(78) = {0.015735, -0.727123, 0, 1.0};
Point(79) = {0.022626, -0.727870, 0, 1.0};
Point(80) = {0.029349, -0.728849, 0, 1.0};
Point(81) = {0.035834, -0.730030, 0, 1.0};
Point(82) = {0.042007, -0.731386, 0, 1.0};
Point(83) = {0.047805, -0.732889, 0, 1.0};
Point(84) = {0.053162, -0.734509, 0, 1.0};
Point(85) = {0.058022, -0.736219, 0, 1.0};
Point(86) = {0.062331, -0.737988, 0, 1.0};
Point(87) = {0.066041, -0.739794, 0, 1.0};
Point(88) = {0.069132, -0.741607, 0, 1.0};
Point(89) = {0.071578, -0.743383, 0, 1.0};
Point(90) = {0.073373, -0.745078, 0, 1.0};
Point(91) = {0.074502, -0.746619, 0, 1.0};
Point(92) = {0.074969, -0.747917, 0, 1.0};
Point(93) = {0.074982, -0.748108, 0, 1.0};
Point(94) = {0.074962, -0.748349, 0, 1.0};
Point(95) = {0.074934, -0.748454, 0, 1.0};
Point(96) = {0.074891, -0.748544, 0, 1.0};
Point(97) = {0.074824, -0.748623, 0, 1.0};
Point(98) = {0.074735, -0.748698, 0, 1.0};
Point(99) = {0.074675, -0.748740, 0, 1.0};
Point(100) = {0.074500, -0.748843, 0, 1.0};
Point(101) = {0.073277, -0.749253, 0, 1.0};
Point(102) = {0.070919, -0.749562, 0, 1.0};
Point(103) = {0.067541, -0.749691, 0, 1.0};
Point(104) = {0.063197, -0.749759, 0, 1.0};
Point(105) = {0.058009, -0.749807, 0, 1.0};
Point(106) = {0.052059, -0.749848, 0, 1.0};
Point(107) = {0.045458, -0.749889, 0, 1.0};
Point(108) = {0.038297, -0.749931, 0, 1.0};
Point(109) = {0.030685, -0.749969, 0, 1.0};
Point(110) = {0.022721, -0.749995, 0, 1.0};
Point(111) = {0.014515, -0.750000, 0, 1.0};
Point(112) = {0.006166, -0.749970, 0, 1.0};
Point(113) = {-0.002216, -0.749891, 0, 1.0};
Point(114) = {-0.010530, -0.749741, 0, 1.0};
Point(115) = {-0.018675, -0.749485, 0, 1.0};
Point(116) = {-0.026595, -0.749072, 0, 1.0};
Point(117) = {-0.034265, -0.748497, 0, 1.0};
Point(118) = {-0.041656, -0.747788, 0, 1.0};
Point(119) = {-0.048734, -0.747002, 0, 1.0};
Point(120) = {-0.055436, -0.746221, 0, 1.0};
Point(121) = {-0.061670, -0.745536, 0, 1.0};
Point(122) = {-0.067294, -0.745027, 0, 1.0};
Point(123) = {-0.072151, -0.744716, 0, 1.0};
Point(124) = {-0.074977, -0.744611, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:19};
Spline(2) = {19:47};
Spline(3) = {47:62};
Spline(4) = {62,1};

// Lines: second blade (splines 5-8)
Spline(5) = {63:81};
Spline(6) = {81:109};
Spline(7) = {109:124};
Spline(8) = {124,63};

// Outer domain (points 20001-4 and lines)
Point(125) = {-13.50000000, -15.00000000, 0, 1.0};
Point(126) = {-13.50000000, 15.00000000, 0, 1.0};
Point(127) = {13.50000000, 15.00000000, 0, 1.0};
Point(128) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {125, 126};
Line(12) = {126, 127};
Line(13) = {127, 128};
Line(14) = {125, 128};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074985, 0.744448, 0, 1.0};
Point(2) = {0.074054, 0.744206, 0, 1.0};
Point(3) = {0.072063, 0.743682, 0, 1.0};
Point(4) = {0.069734, 0.743060, 0, 1.0};
Point(5) = {0.067077, 0.742344, 0, 1.0};
Point(6) = {0.064106, 0.741539, 0, 1.0};
Point(7) = {0.060834, 0.740651, 0, 1.0};
Point(8) = {0.057279, 0.739693, 0, 1.0};
Point(9) = {0.053456, 0.738678, 0, 1.0};
Point(10) = {0.049383, 0.737631, 0, 1.0};
Point(11) = {0.045080, 0.736591, 0, 1.0};
Point(12) = {0.040567, 0.735568, 0, 1.0};
Point(13) = {0.035865, 0.734563, 0, 1.0};
Point(14) = {0.030998, 0.733588, 0, 1.0};
Point(15) = {0.025990, 0.732655, 0, 1.0};
Point(16) = {0.020863, 0.731778, 0, 1.0};
Point(17) = {0.015643, 0.730972, 0, 1.0};
Point(18) = {0.010354, 0.730252, 0, 1.0};
Point(19) = {0.005023, 0.729632, 0, 1.0};
Point(20) = {-0.000325, 0.729123, 0, 1.0};
Point(21) = {-0.005665, 0.728737, 0, 1.0};
Point(22) = {-0.010971, 0.728481, 0, 1.0};
Point(23) = {-0.016217, 0.728359, 0, 1.0};
Point(24) = {-0.021376, 0.728336, 0, 1.0};
Point(25) = {-0.026422, 0.728401, 0, 1.0};
Point(26) = {-0.031332, 0.728548, 0, 1.0};
Point(27) = {-0.036079, 0.728772, 0, 1.0};
Point(28) = {-0.040643, 0.729070, 0, 1.0};
Point(29) = {-0.044999, 0.729436, 0, 1.0};
Point(30) = {-0.049127, 0.729869, 0, 1.0};
Point(31) = {-0.053007, 0.730367, 0, 1.0};
Point(32) = {-0.056620, 0.730927, 0, 1.0};
Point(33) = {-0.059948, 0.731549, 0, 1.0};
Point(34) = {-0.062976, 0.732233, 0, 1.0};
Point(35) = {-0.065688, 0.732978, 0, 1.0};
Point(36) = {-0.068071, 0.733785, 0, 1.0};
Point(37) = {-0.070115, 0.734653, 0, 1.0};
Point(38) = {-0.071808, 0.735581, 0, 1.0};
Point(39) = {-0.073144, 0.736566, 0, 1.0};
Point(40) = {-0.074115, 0.737603, 0, 1.0};
Point(41) = {-0.074717, 0.738686, 0, 1.0};
Point(42) = {-0.074947, 0.739800, 0, 1.0};
Point(43) = {-0.074799, 0.740850, 0, 1.0};
Point(44) = {-0.074274, 0.741799, 0, 1.0};
Point(45) = {-0.073374, 0.742662, 0, 1.0};
Point(46) = {-0.072105, 0.743450, 0, 1.0};
Point(47) = {-0.070474, 0.744169, 0, 1.0};
Point(48) = {-0.068488, 0.744827, 0, 1.0};
Point(49) = {-0.066158, 0.745430, 0, 1.0};
Point(50) = {-0.063495, 0.745985, 0, 1.0};
Point(51) = {-0.060512, 0.746497, 0, 1.0};
Point(52) = {-0.057225, 0.746971, 0, 1.0};
Point(53) = {-0.053650, 0.747411, 0, 1.0};
Point(54) = {-0.049805, 0.747821, 0, 1.0};
Point(55) = {-0.045707, 0.748202, 0, 1.0};
Point(56) = {-0.041378, 0.748555, 0, 1.0};
Point(57) = {-0.036838, 0.748878, 0, 1.0};
Point(58) = {-0.032110, 0.749172, 0, 1.0};
Point(59) = {-0.027216, 0.749432, 0, 1.0};
Point(60) = {-0.022180, 0.749654, 0, 1.0};
Point(61) = {-0.017027, 0.749834, 0, 1.0};
Point(62) = {-0.011781, 0.749961, 0, 1.0};
Point(63) = {-0.006467, 0.750000, 0, 1.0};
Point(64) = {-0.001111, 0.749954, 0, 1.0};
Point(65) = {0.004261, 0.749830, 0, 1.0};
Point(66) = {0.009623, 0.749638, 0, 1.0};
Point(67) = {0.014948, 0.749389, 0, 1.0};
Point(68) = {0.020209, 0.749096, 0, 1.0};
Point(69) = {0.025382, 0.748772, 0, 1.0};
Point(70) = {0.030438, 0.748429, 0, 1.0};
Point(71) = {0.035355, 0.748082, 0, 1.0};
Point(72) = {0.040107, 0.747744, 0, 1.0};
Point(73) = {0.044671, 0.747429, 0, 1.0};
Point(74) = {0.049024, 0.747158, 0, 1.0};
Point(75) = {0.053144, 0.746941, 0, 1.0};
Point(76) = {0.057012, 0.746755, 0, 1.0};
Point(77) = {0.060610, 0.746592, 0, 1.0};
Point(78) = {0.063920, 0.746448, 0, 1.0};
Point(79) = {0.066927, 0.746320, 0, 1.0};
Point(80) = {0.069615, 0.746206, 0, 1.0};
Point(81) = {0.071972, 0.746106, 0, 1.0};
Point(82) = {0.073986, 0.746020, 0, 1.0};
Point(83) = {0.074927, 0.745984, 0, 1.0};
Point(84) = {-0.074985, -0.744448, 0, 1.0};
Point(85) = {-0.074054, -0.744206, 0, 1.0};
Point(86) = {-0.072063, -0.743682, 0, 1.0};
Point(87) = {-0.069734, -0.743060, 0, 1.0};
Point(88) = {-0.067077, -0.742344, 0, 1.0};
Point(89) = {-0.064106, -0.741539, 0, 1.0};
Point(90) = {-0.060834, -0.740651, 0, 1.0};
Point(91) = {-0.057279, -0.739693, 0, 1.0};
Point(92) = {-0.053456, -0.738678, 0, 1.0};
Point(93) = {-0.049383, -0.737631, 0, 1.0};
Point(94) = {-0.045080, -0.736591, 0, 1.0};
Point(95) = {-0.040567, -0.735568, 0, 1.0};
Point(96) = {-0.035865, -0.734563, 0, 1.0};
Point(97) = {-0.030998, -0.733588, 0, 1.0};
Point(98) = {-0.025990, -0.732655, 0, 1.0};
Point(99) = {-0.020863, -0.731778, 0, 1.0};
Point(100) = {-0.015643, -0.730972, 0, 1.0};
Point(101) = {-0.010354, -0.730252, 0, 1.0};
Point(102) = {-0.005023, -0.729632, 0, 1.0};
Point(103) = {0.000325, -0.729123, 0, 1.0};
Point(104) = {0.005665, -0.728737, 0, 1.0};
Point(105) = {0.010971, -0.728481, 0, 1.0};
Point(106) = {0.016217, -0.728359, 0, 1.0};
Point(107) = {0.021376, -0.728336, 0, 1.0};
Point(108) = {0.026422, -0.728401, 0, 1.0};
Point(109) = {0.031332, -0.728548, 0, 1.0};
Point(110) = {0.036079, -0.728772, 0, 1.0};
Point(111) = {0.040643, -0.729070, 0, 1.0};
Point(112) = {0.044999, -0.729436, 0, 1.0};
Point(113) = {0.049127, -0.729869, 0, 1.0};
Point(114) = {0.053007, -0.730367, 0, 1.0};
Point(115) = {0.056620, -0.730927, 0, 1.0};
Point(116) = {0.059948, -0.731549, 0, 1.0};
Point(117) = {0.062976, -0.732233, 0, 1.0};
Point(118) = {0.065688, -0.732978, 0, 1.0};
Point(119) = {0.068071, -0.733785, 0, 1.0};
Point(120) = {0.070115, -0.734653, 0, 1.0};
Point(121) = {0.071808, -0.735581, 0, 1.0};
Point(122) = {0.073144, -0.736566, 0, 1.0};
Point(123) = {0.074115, -0.737603, 0, 1.0};
Point(124) = {0.074717, -0.738686, 0, 1.0};
Point(125) = {0.074947, -0.739800, 0, 1.0};
Point(126) = {0.074799, -0.740850, 0, 1.0};
Point(127) = {0.074274, -0.741799, 0, 1.0};
Point(128) = {0.073374, -0.742662, 0, 1.0};
Point(129) = {0.072105, -0.743450, 0, 1.0};
Point(130) = {0.070474, -0.744169, 0, 1.0};
Point(131) = {0.068488, -0.744827, 0, 1.0};
Point(132) = {0.066158, -0.745430, 0, 1.0};
Point(133) = {0.063495, -0.745985, 0, 1.0};
Point(134) = {0.060512, -0.746497, 0, 1.0};
Point(135) = {0.057225, -0.746971, 0, 1.0};
Point(136) = {0.053650, -0.747411, 0, 1.0};
Point(137) = {0.049805, -0.747821, 0, 1.0};
Point(138) = {0.045707, -0.748202, 0, 1.0};
Point(139) = {0.041378, -0.748555, 0, 1.0};
Point(140) = {0.036838, -0.748878, 0, 1.0};
Point(141) = {0.032110, -0.749172, 0, 1.0};
Point(142) = {0.027216, -0.749432, 0, 1.0};
Point(143) = {0.022180, -0.749654, 0, 1.0};
Point(144) = {0.017027, -0.749834, 0, 1.0};
Point(145) = {0.011781, -0.749961, 0, 1.0};
Point(146) = {0.006467, -0.750000, 0, 1.0};
Point(147) = {0.001111, -0.749954, 0, 1.0};
Point(148) = {-0.004261, -0.749830, 0, 1.0};
Point(149) = {-0.009623, -0.749638, 0, 1.0};
Point(150) = {-0.014948, -0.749389, 0, 1.0};
Point(151) = {-0.020209, -0.749096, 0, 1.0};
Point(152) = {-0.025382, -0.748772, 0, 1.0};
Point(153) = {-0.030438, -0.748429, 0, 1.0};
Point(154) = {-0.035355, -0.748082, 0, 1.0};
Point(155) = {-0.040107, -0.747744, 0, 1.0};
Point(156) = {-0.044671, -0.747429, 0, 1.0};
Point(157) = {-0.049024, -0.747158, 0, 1.0};
Point(158) = {-0.053144, -0.746941, 0, 1.0};
Point(159) = {-0.057012, -0.746755, 0, 1.0};
Point(160) = {-0.060610, -0.746592, 0, 1.0};
Point(161) = {-0.063920, -0.746448, 0, 1.0};
Point(162) = {-0.066927, -0.746320, 0, 1.0};
Point(163) = {-0.069615, -0.746206, 0, 1.0};
Point(164) = {-0.071972, -0.746106, 0, 1.0};
Point(165) = {-0.073986, -0.746020, 0, 1.0};
Point(166) = {-0.074927, -0.745984, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:26};
Spline(2) = {26:57};
Spline(3) = {57:83};
Spline(4) = {83,1};

// Lines: second blade (splines 5-8)
Spline(5) = {84:109};
Spline(6) = {109:140};
Spline(7) = {140:166};
Spline(8) = {166,84};

// Outer domain (points 20001-4 and lines)
Point(167) = {-13.50000000, -15.00000000, 0, 1.0};
Point(168) = {-13.50000000, 15.00000000, 0, 1.0};
Point(169) = {13.50000000, 15.00000000, 0, 1.0};
Point(170) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {167, 168};
Line(12) = {168, 169};
Line(13) = {169, 170};
Line(14) = {167, 170};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
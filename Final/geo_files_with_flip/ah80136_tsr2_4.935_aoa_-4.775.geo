SetFactory("OpenCASCADE");

Point(1) = {0.074773, 0.748456, 0, 1.0};
Point(2) = {0.072361, 0.748081, 0, 1.0};
Point(3) = {0.069324, 0.747553, 0, 1.0};
Point(4) = {0.066022, 0.746902, 0, 1.0};
Point(5) = {0.062470, 0.746118, 0, 1.0};
Point(6) = {0.058685, 0.745202, 0, 1.0};
Point(7) = {0.054682, 0.744158, 0, 1.0};
Point(8) = {0.050480, 0.742989, 0, 1.0};
Point(9) = {0.046095, 0.741694, 0, 1.0};
Point(10) = {0.041546, 0.740279, 0, 1.0};
Point(11) = {0.036855, 0.738752, 0, 1.0};
Point(12) = {0.032039, 0.737134, 0, 1.0};
Point(13) = {0.027115, 0.735460, 0, 1.0};
Point(14) = {0.022105, 0.733759, 0, 1.0};
Point(15) = {0.017025, 0.732070, 0, 1.0};
Point(16) = {0.011896, 0.730440, 0, 1.0};
Point(17) = {0.006734, 0.728940, 0, 1.0};
Point(18) = {0.001555, 0.727631, 0, 1.0};
Point(19) = {-0.003619, 0.726544, 0, 1.0};
Point(20) = {-0.008768, 0.725680, 0, 1.0};
Point(21) = {-0.013866, 0.725030, 0, 1.0};
Point(22) = {-0.018891, 0.724576, 0, 1.0};
Point(23) = {-0.023820, 0.724300, 0, 1.0};
Point(24) = {-0.028628, 0.724181, 0, 1.0};
Point(25) = {-0.033298, 0.724210, 0, 1.0};
Point(26) = {-0.037806, 0.724388, 0, 1.0};
Point(27) = {-0.042133, 0.724716, 0, 1.0};
Point(28) = {-0.046262, 0.725183, 0, 1.0};
Point(29) = {-0.050172, 0.725768, 0, 1.0};
Point(30) = {-0.053848, 0.726463, 0, 1.0};
Point(31) = {-0.057271, 0.727258, 0, 1.0};
Point(32) = {-0.060425, 0.728138, 0, 1.0};
Point(33) = {-0.063298, 0.729081, 0, 1.0};
Point(34) = {-0.065875, 0.730056, 0, 1.0};
Point(35) = {-0.068140, 0.731041, 0, 1.0};
Point(36) = {-0.070086, 0.732020, 0, 1.0};
Point(37) = {-0.071702, 0.732994, 0, 1.0};
Point(38) = {-0.072984, 0.733954, 0, 1.0};
Point(39) = {-0.073922, 0.734864, 0, 1.0};
Point(40) = {-0.074509, 0.735674, 0, 1.0};
Point(41) = {-0.074740, 0.736368, 0, 1.0};
Point(42) = {-0.074618, 0.736981, 0, 1.0};
Point(43) = {-0.074147, 0.737560, 0, 1.0};
Point(44) = {-0.073332, 0.738115, 0, 1.0};
Point(45) = {-0.072174, 0.738636, 0, 1.0};
Point(46) = {-0.070680, 0.739124, 0, 1.0};
Point(47) = {-0.068856, 0.739613, 0, 1.0};
Point(48) = {-0.066717, 0.740131, 0, 1.0};
Point(49) = {-0.064267, 0.740677, 0, 1.0};
Point(50) = {-0.061519, 0.741233, 0, 1.0};
Point(51) = {-0.058485, 0.741784, 0, 1.0};
Point(52) = {-0.055173, 0.742324, 0, 1.0};
Point(53) = {-0.051600, 0.742856, 0, 1.0};
Point(54) = {-0.047782, 0.743382, 0, 1.0};
Point(55) = {-0.043736, 0.743902, 0, 1.0};
Point(56) = {-0.039479, 0.744415, 0, 1.0};
Point(57) = {-0.035027, 0.744913, 0, 1.0};
Point(58) = {-0.030401, 0.745400, 0, 1.0};
Point(59) = {-0.025622, 0.745875, 0, 1.0};
Point(60) = {-0.020709, 0.746334, 0, 1.0};
Point(61) = {-0.015682, 0.746770, 0, 1.0};
Point(62) = {-0.010564, 0.747170, 0, 1.0};
Point(63) = {-0.005372, 0.747527, 0, 1.0};
Point(64) = {-0.000133, 0.747841, 0, 1.0};
Point(65) = {0.005132, 0.748111, 0, 1.0};
Point(66) = {0.010400, 0.748352, 0, 1.0};
Point(67) = {0.015646, 0.748583, 0, 1.0};
Point(68) = {0.020848, 0.748809, 0, 1.0};
Point(69) = {0.025982, 0.749026, 0, 1.0};
Point(70) = {0.031028, 0.749231, 0, 1.0};
Point(71) = {0.035964, 0.749420, 0, 1.0};
Point(72) = {0.040769, 0.749582, 0, 1.0};
Point(73) = {0.045425, 0.749709, 0, 1.0};
Point(74) = {0.049912, 0.749796, 0, 1.0};
Point(75) = {0.054206, 0.749859, 0, 1.0};
Point(76) = {0.058291, 0.749912, 0, 1.0};
Point(77) = {0.062149, 0.749959, 0, 1.0};
Point(78) = {0.065763, 0.749993, 0, 1.0};
Point(79) = {0.069120, 0.750000, 0, 1.0};
Point(80) = {0.072202, 0.749981, 0, 1.0};
Point(81) = {0.074648, 0.749956, 0, 1.0};
Point(82) = {-0.074773, -0.748456, 0, 1.0};
Point(83) = {-0.072361, -0.748081, 0, 1.0};
Point(84) = {-0.069324, -0.747553, 0, 1.0};
Point(85) = {-0.066022, -0.746902, 0, 1.0};
Point(86) = {-0.062470, -0.746118, 0, 1.0};
Point(87) = {-0.058685, -0.745202, 0, 1.0};
Point(88) = {-0.054682, -0.744158, 0, 1.0};
Point(89) = {-0.050480, -0.742989, 0, 1.0};
Point(90) = {-0.046095, -0.741694, 0, 1.0};
Point(91) = {-0.041546, -0.740279, 0, 1.0};
Point(92) = {-0.036855, -0.738752, 0, 1.0};
Point(93) = {-0.032039, -0.737134, 0, 1.0};
Point(94) = {-0.027115, -0.735460, 0, 1.0};
Point(95) = {-0.022105, -0.733759, 0, 1.0};
Point(96) = {-0.017025, -0.732070, 0, 1.0};
Point(97) = {-0.011896, -0.730440, 0, 1.0};
Point(98) = {-0.006734, -0.728940, 0, 1.0};
Point(99) = {-0.001555, -0.727631, 0, 1.0};
Point(100) = {0.003619, -0.726544, 0, 1.0};
Point(101) = {0.008768, -0.725680, 0, 1.0};
Point(102) = {0.013866, -0.725030, 0, 1.0};
Point(103) = {0.018891, -0.724576, 0, 1.0};
Point(104) = {0.023820, -0.724300, 0, 1.0};
Point(105) = {0.028628, -0.724181, 0, 1.0};
Point(106) = {0.033298, -0.724210, 0, 1.0};
Point(107) = {0.037806, -0.724388, 0, 1.0};
Point(108) = {0.042133, -0.724716, 0, 1.0};
Point(109) = {0.046262, -0.725183, 0, 1.0};
Point(110) = {0.050172, -0.725768, 0, 1.0};
Point(111) = {0.053848, -0.726463, 0, 1.0};
Point(112) = {0.057271, -0.727258, 0, 1.0};
Point(113) = {0.060425, -0.728138, 0, 1.0};
Point(114) = {0.063298, -0.729081, 0, 1.0};
Point(115) = {0.065875, -0.730056, 0, 1.0};
Point(116) = {0.068140, -0.731041, 0, 1.0};
Point(117) = {0.070086, -0.732020, 0, 1.0};
Point(118) = {0.071702, -0.732994, 0, 1.0};
Point(119) = {0.072984, -0.733954, 0, 1.0};
Point(120) = {0.073922, -0.734864, 0, 1.0};
Point(121) = {0.074509, -0.735674, 0, 1.0};
Point(122) = {0.074740, -0.736368, 0, 1.0};
Point(123) = {0.074618, -0.736981, 0, 1.0};
Point(124) = {0.074147, -0.737560, 0, 1.0};
Point(125) = {0.073332, -0.738115, 0, 1.0};
Point(126) = {0.072174, -0.738636, 0, 1.0};
Point(127) = {0.070680, -0.739124, 0, 1.0};
Point(128) = {0.068856, -0.739613, 0, 1.0};
Point(129) = {0.066717, -0.740131, 0, 1.0};
Point(130) = {0.064267, -0.740677, 0, 1.0};
Point(131) = {0.061519, -0.741233, 0, 1.0};
Point(132) = {0.058485, -0.741784, 0, 1.0};
Point(133) = {0.055173, -0.742324, 0, 1.0};
Point(134) = {0.051600, -0.742856, 0, 1.0};
Point(135) = {0.047782, -0.743382, 0, 1.0};
Point(136) = {0.043736, -0.743902, 0, 1.0};
Point(137) = {0.039479, -0.744415, 0, 1.0};
Point(138) = {0.035027, -0.744913, 0, 1.0};
Point(139) = {0.030401, -0.745400, 0, 1.0};
Point(140) = {0.025622, -0.745875, 0, 1.0};
Point(141) = {0.020709, -0.746334, 0, 1.0};
Point(142) = {0.015682, -0.746770, 0, 1.0};
Point(143) = {0.010564, -0.747170, 0, 1.0};
Point(144) = {0.005372, -0.747527, 0, 1.0};
Point(145) = {0.000133, -0.747841, 0, 1.0};
Point(146) = {-0.005132, -0.748111, 0, 1.0};
Point(147) = {-0.010400, -0.748352, 0, 1.0};
Point(148) = {-0.015646, -0.748583, 0, 1.0};
Point(149) = {-0.020848, -0.748809, 0, 1.0};
Point(150) = {-0.025982, -0.749026, 0, 1.0};
Point(151) = {-0.031028, -0.749231, 0, 1.0};
Point(152) = {-0.035964, -0.749420, 0, 1.0};
Point(153) = {-0.040769, -0.749582, 0, 1.0};
Point(154) = {-0.045425, -0.749709, 0, 1.0};
Point(155) = {-0.049912, -0.749796, 0, 1.0};
Point(156) = {-0.054206, -0.749859, 0, 1.0};
Point(157) = {-0.058291, -0.749912, 0, 1.0};
Point(158) = {-0.062149, -0.749959, 0, 1.0};
Point(159) = {-0.065763, -0.749993, 0, 1.0};
Point(160) = {-0.069120, -0.750000, 0, 1.0};
Point(161) = {-0.072202, -0.749981, 0, 1.0};
Point(162) = {-0.074648, -0.749956, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:25};
Spline(2) = {25:57};
Spline(3) = {57:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:106};
Spline(6) = {106:138};
Spline(7) = {138:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
SetFactory("OpenCASCADE");

Point(1) = {0.074994, 0.743078, 0, 1.0};
Point(2) = {0.073676, 0.742637, 0, 1.0};
Point(3) = {0.071302, 0.741846, 0, 1.0};
Point(4) = {0.068643, 0.740954, 0, 1.0};
Point(5) = {0.065713, 0.739959, 0, 1.0};
Point(6) = {0.062522, 0.738837, 0, 1.0};
Point(7) = {0.059086, 0.737598, 0, 1.0};
Point(8) = {0.055422, 0.736205, 0, 1.0};
Point(9) = {0.051546, 0.734664, 0, 1.0};
Point(10) = {0.047478, 0.732922, 0, 1.0};
Point(11) = {0.043230, 0.731035, 0, 1.0};
Point(12) = {0.038823, 0.729013, 0, 1.0};
Point(13) = {0.034249, 0.727301, 0, 1.0};
Point(14) = {0.029536, 0.725759, 0, 1.0};
Point(15) = {0.024701, 0.724427, 0, 1.0};
Point(16) = {0.019769, 0.723274, 0, 1.0};
Point(17) = {0.014762, 0.722246, 0, 1.0};
Point(18) = {0.009702, 0.721378, 0, 1.0};
Point(19) = {0.004611, 0.720670, 0, 1.0};
Point(20) = {-0.000490, 0.720117, 0, 1.0};
Point(21) = {-0.005579, 0.719729, 0, 1.0};
Point(22) = {-0.010634, 0.719481, 0, 1.0};
Point(23) = {-0.015632, 0.719394, 0, 1.0};
Point(24) = {-0.020553, 0.719449, 0, 1.0};
Point(25) = {-0.025374, 0.719657, 0, 1.0};
Point(26) = {-0.030074, 0.719990, 0, 1.0};
Point(27) = {-0.034635, 0.720463, 0, 1.0};
Point(28) = {-0.039035, 0.721045, 0, 1.0};
Point(29) = {-0.043255, 0.721760, 0, 1.0};
Point(30) = {-0.047276, 0.722556, 0, 1.0};
Point(31) = {-0.051082, 0.723467, 0, 1.0};
Point(32) = {-0.054655, 0.724440, 0, 1.0};
Point(33) = {-0.057981, 0.725499, 0, 1.0};
Point(34) = {-0.061039, 0.726577, 0, 1.0};
Point(35) = {-0.063822, 0.727709, 0, 1.0};
Point(36) = {-0.066314, 0.728825, 0, 1.0};
Point(37) = {-0.068505, 0.729974, 0, 1.0};
Point(38) = {-0.070383, 0.731061, 0, 1.0};
Point(39) = {-0.071941, 0.732157, 0, 1.0};
Point(40) = {-0.073170, 0.733169, 0, 1.0};
Point(41) = {-0.074068, 0.734152, 0, 1.0};
Point(42) = {-0.074620, 0.734928, 0, 1.0};
Point(43) = {-0.074857, 0.736052, 0, 1.0};
Point(44) = {-0.074749, 0.737021, 0, 1.0};
Point(45) = {-0.074283, 0.737642, 0, 1.0};
Point(46) = {-0.073487, 0.738304, 0, 1.0};
Point(47) = {-0.072371, 0.739117, 0, 1.0};
Point(48) = {-0.070927, 0.739864, 0, 1.0};
Point(49) = {-0.069159, 0.740568, 0, 1.0};
Point(50) = {-0.067087, 0.741331, 0, 1.0};
Point(51) = {-0.064708, 0.742051, 0, 1.0};
Point(52) = {-0.062041, 0.742806, 0, 1.0};
Point(53) = {-0.059093, 0.743517, 0, 1.0};
Point(54) = {-0.055879, 0.744250, 0, 1.0};
Point(55) = {-0.052408, 0.744935, 0, 1.0};
Point(56) = {-0.048701, 0.745628, 0, 1.0};
Point(57) = {-0.044768, 0.746263, 0, 1.0};
Point(58) = {-0.040632, 0.746897, 0, 1.0};
Point(59) = {-0.036303, 0.747467, 0, 1.0};
Point(60) = {-0.031805, 0.748018, 0, 1.0};
Point(61) = {-0.027155, 0.748497, 0, 1.0};
Point(62) = {-0.022374, 0.748949, 0, 1.0};
Point(63) = {-0.017480, 0.749314, 0, 1.0};
Point(64) = {-0.012496, 0.749632, 0, 1.0};
Point(65) = {-0.007439, 0.749853, 0, 1.0};
Point(66) = {-0.002335, 0.750000, 0, 1.0};
Point(67) = {0.002801, 0.749984, 0, 1.0};
Point(68) = {0.007943, 0.749862, 0, 1.0};
Point(69) = {0.013072, 0.749604, 0, 1.0};
Point(70) = {0.018166, 0.749226, 0, 1.0};
Point(71) = {0.023205, 0.748653, 0, 1.0};
Point(72) = {0.028180, 0.747704, 0, 1.0};
Point(73) = {0.033051, 0.746698, 0, 1.0};
Point(74) = {0.037780, 0.745904, 0, 1.0};
Point(75) = {0.042354, 0.745221, 0, 1.0};
Point(76) = {0.046748, 0.744733, 0, 1.0};
Point(77) = {0.050948, 0.744338, 0, 1.0};
Point(78) = {0.054935, 0.744096, 0, 1.0};
Point(79) = {0.058694, 0.743942, 0, 1.0};
Point(80) = {0.062209, 0.743907, 0, 1.0};
Point(81) = {0.065468, 0.743933, 0, 1.0};
Point(82) = {0.068451, 0.744061, 0, 1.0};
Point(83) = {0.071154, 0.744232, 0, 1.0};
Point(84) = {0.073564, 0.744447, 0, 1.0};
Point(85) = {0.074901, 0.744594, 0, 1.0};
Point(86) = {-0.074994, -0.743078, 0, 1.0};
Point(87) = {-0.073676, -0.742637, 0, 1.0};
Point(88) = {-0.071302, -0.741846, 0, 1.0};
Point(89) = {-0.068643, -0.740954, 0, 1.0};
Point(90) = {-0.065713, -0.739959, 0, 1.0};
Point(91) = {-0.062522, -0.738837, 0, 1.0};
Point(92) = {-0.059086, -0.737598, 0, 1.0};
Point(93) = {-0.055422, -0.736205, 0, 1.0};
Point(94) = {-0.051546, -0.734664, 0, 1.0};
Point(95) = {-0.047478, -0.732922, 0, 1.0};
Point(96) = {-0.043230, -0.731035, 0, 1.0};
Point(97) = {-0.038823, -0.729013, 0, 1.0};
Point(98) = {-0.034249, -0.727301, 0, 1.0};
Point(99) = {-0.029536, -0.725759, 0, 1.0};
Point(100) = {-0.024701, -0.724427, 0, 1.0};
Point(101) = {-0.019769, -0.723274, 0, 1.0};
Point(102) = {-0.014762, -0.722246, 0, 1.0};
Point(103) = {-0.009702, -0.721378, 0, 1.0};
Point(104) = {-0.004611, -0.720670, 0, 1.0};
Point(105) = {0.000490, -0.720117, 0, 1.0};
Point(106) = {0.005579, -0.719729, 0, 1.0};
Point(107) = {0.010634, -0.719481, 0, 1.0};
Point(108) = {0.015632, -0.719394, 0, 1.0};
Point(109) = {0.020553, -0.719449, 0, 1.0};
Point(110) = {0.025374, -0.719657, 0, 1.0};
Point(111) = {0.030074, -0.719990, 0, 1.0};
Point(112) = {0.034635, -0.720463, 0, 1.0};
Point(113) = {0.039035, -0.721045, 0, 1.0};
Point(114) = {0.043255, -0.721760, 0, 1.0};
Point(115) = {0.047276, -0.722556, 0, 1.0};
Point(116) = {0.051082, -0.723467, 0, 1.0};
Point(117) = {0.054655, -0.724440, 0, 1.0};
Point(118) = {0.057981, -0.725499, 0, 1.0};
Point(119) = {0.061039, -0.726577, 0, 1.0};
Point(120) = {0.063822, -0.727709, 0, 1.0};
Point(121) = {0.066314, -0.728825, 0, 1.0};
Point(122) = {0.068505, -0.729974, 0, 1.0};
Point(123) = {0.070383, -0.731061, 0, 1.0};
Point(124) = {0.071941, -0.732157, 0, 1.0};
Point(125) = {0.073170, -0.733169, 0, 1.0};
Point(126) = {0.074068, -0.734152, 0, 1.0};
Point(127) = {0.074620, -0.734928, 0, 1.0};
Point(128) = {0.074857, -0.736052, 0, 1.0};
Point(129) = {0.074749, -0.737021, 0, 1.0};
Point(130) = {0.074283, -0.737642, 0, 1.0};
Point(131) = {0.073487, -0.738304, 0, 1.0};
Point(132) = {0.072371, -0.739117, 0, 1.0};
Point(133) = {0.070927, -0.739864, 0, 1.0};
Point(134) = {0.069159, -0.740568, 0, 1.0};
Point(135) = {0.067087, -0.741331, 0, 1.0};
Point(136) = {0.064708, -0.742051, 0, 1.0};
Point(137) = {0.062041, -0.742806, 0, 1.0};
Point(138) = {0.059093, -0.743517, 0, 1.0};
Point(139) = {0.055879, -0.744250, 0, 1.0};
Point(140) = {0.052408, -0.744935, 0, 1.0};
Point(141) = {0.048701, -0.745628, 0, 1.0};
Point(142) = {0.044768, -0.746263, 0, 1.0};
Point(143) = {0.040632, -0.746897, 0, 1.0};
Point(144) = {0.036303, -0.747467, 0, 1.0};
Point(145) = {0.031805, -0.748018, 0, 1.0};
Point(146) = {0.027155, -0.748497, 0, 1.0};
Point(147) = {0.022374, -0.748949, 0, 1.0};
Point(148) = {0.017480, -0.749314, 0, 1.0};
Point(149) = {0.012496, -0.749632, 0, 1.0};
Point(150) = {0.007439, -0.749853, 0, 1.0};
Point(151) = {0.002335, -0.750000, 0, 1.0};
Point(152) = {-0.002801, -0.749984, 0, 1.0};
Point(153) = {-0.007943, -0.749862, 0, 1.0};
Point(154) = {-0.013072, -0.749604, 0, 1.0};
Point(155) = {-0.018166, -0.749226, 0, 1.0};
Point(156) = {-0.023205, -0.748653, 0, 1.0};
Point(157) = {-0.028180, -0.747704, 0, 1.0};
Point(158) = {-0.033051, -0.746698, 0, 1.0};
Point(159) = {-0.037780, -0.745904, 0, 1.0};
Point(160) = {-0.042354, -0.745221, 0, 1.0};
Point(161) = {-0.046748, -0.744733, 0, 1.0};
Point(162) = {-0.050948, -0.744338, 0, 1.0};
Point(163) = {-0.054935, -0.744096, 0, 1.0};
Point(164) = {-0.058694, -0.743942, 0, 1.0};
Point(165) = {-0.062209, -0.743907, 0, 1.0};
Point(166) = {-0.065468, -0.743933, 0, 1.0};
Point(167) = {-0.068451, -0.744061, 0, 1.0};
Point(168) = {-0.071154, -0.744232, 0, 1.0};
Point(169) = {-0.073564, -0.744447, 0, 1.0};
Point(170) = {-0.074901, -0.744594, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:60};
Spline(3) = {60:85};
Spline(4) = {85,1};

// Lines: second blade (splines 5-8)
Spline(5) = {86:112};
Spline(6) = {112:145};
Spline(7) = {145:170};
Spline(8) = {170,86};

// Outer domain (points 20001-4 and lines)
Point(171) = {-13.50000000, -15.00000000, 0, 1.0};
Point(172) = {-13.50000000, 15.00000000, 0, 1.0};
Point(173) = {13.50000000, 15.00000000, 0, 1.0};
Point(174) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {171, 172};
Line(12) = {172, 173};
Line(13) = {173, 174};
Line(14) = {171, 174};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 34 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
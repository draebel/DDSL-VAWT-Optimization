SetFactory("OpenCASCADE");

Point(1) = {0.074511, 0.731646, 0, 1.0};
Point(2) = {0.074193, 0.731638, 0, 1.0};
Point(3) = {0.073277, 0.731573, 0, 1.0};
Point(4) = {0.071825, 0.731426, 0, 1.0};
Point(5) = {0.069895, 0.731213, 0, 1.0};
Point(6) = {0.067508, 0.730959, 0, 1.0};
Point(7) = {0.064672, 0.730665, 0, 1.0};
Point(8) = {0.061420, 0.730322, 0, 1.0};
Point(9) = {0.057793, 0.729930, 0, 1.0};
Point(10) = {0.053826, 0.729497, 0, 1.0};
Point(11) = {0.049565, 0.729032, 0, 1.0};
Point(12) = {0.045048, 0.728548, 0, 1.0};
Point(13) = {0.040323, 0.728063, 0, 1.0};
Point(14) = {0.035427, 0.727613, 0, 1.0};
Point(15) = {0.030380, 0.727218, 0, 1.0};
Point(16) = {0.025210, 0.726886, 0, 1.0};
Point(17) = {0.019947, 0.726641, 0, 1.0};
Point(18) = {0.014607, 0.726497, 0, 1.0};
Point(19) = {0.009226, 0.726454, 0, 1.0};
Point(20) = {0.003820, 0.726532, 0, 1.0};
Point(21) = {-0.001596, 0.726725, 0, 1.0};
Point(22) = {-0.006988, 0.727040, 0, 1.0};
Point(23) = {-0.012336, 0.727477, 0, 1.0};
Point(24) = {-0.017620, 0.728023, 0, 1.0};
Point(25) = {-0.022810, 0.728681, 0, 1.0};
Point(26) = {-0.027885, 0.729441, 0, 1.0};
Point(27) = {-0.032819, 0.730292, 0, 1.0};
Point(28) = {-0.037584, 0.731226, 0, 1.0};
Point(29) = {-0.042155, 0.732233, 0, 1.0};
Point(30) = {-0.046505, 0.733304, 0, 1.0};
Point(31) = {-0.050611, 0.734429, 0, 1.0};
Point(32) = {-0.054451, 0.735599, 0, 1.0};
Point(33) = {-0.058003, 0.736803, 0, 1.0};
Point(34) = {-0.061253, 0.738032, 0, 1.0};
Point(35) = {-0.064179, 0.739271, 0, 1.0};
Point(36) = {-0.066768, 0.740510, 0, 1.0};
Point(37) = {-0.069013, 0.741734, 0, 1.0};
Point(38) = {-0.070896, 0.742929, 0, 1.0};
Point(39) = {-0.072412, 0.744079, 0, 1.0};
Point(40) = {-0.073547, 0.745159, 0, 1.0};
Point(41) = {-0.074292, 0.746171, 0, 1.0};
Point(42) = {-0.074668, 0.747092, 0, 1.0};
Point(43) = {-0.074619, 0.747815, 0, 1.0};
Point(44) = {-0.074072, 0.748414, 0, 1.0};
Point(45) = {-0.073079, 0.748982, 0, 1.0};
Point(46) = {-0.071692, 0.749433, 0, 1.0};
Point(47) = {-0.069867, 0.749736, 0, 1.0};
Point(48) = {-0.067582, 0.749915, 0, 1.0};
Point(49) = {-0.064860, 0.750000, 0, 1.0};
Point(50) = {-0.061722, 0.749996, 0, 1.0};
Point(51) = {-0.058191, 0.749906, 0, 1.0};
Point(52) = {-0.054289, 0.749736, 0, 1.0};
Point(53) = {-0.050046, 0.749491, 0, 1.0};
Point(54) = {-0.045491, 0.749175, 0, 1.0};
Point(55) = {-0.040658, 0.748791, 0, 1.0};
Point(56) = {-0.035591, 0.748337, 0, 1.0};
Point(57) = {-0.030330, 0.747803, 0, 1.0};
Point(58) = {-0.024900, 0.747148, 0, 1.0};
Point(59) = {-0.019277, 0.746369, 0, 1.0};
Point(60) = {-0.013448, 0.745512, 0, 1.0};
Point(61) = {-0.007466, 0.744652, 0, 1.0};
Point(62) = {-0.001414, 0.743809, 0, 1.0};
Point(63) = {0.004651, 0.742965, 0, 1.0};
Point(64) = {0.010696, 0.742120, 0, 1.0};
Point(65) = {0.016678, 0.741278, 0, 1.0};
Point(66) = {0.022561, 0.740451, 0, 1.0};
Point(67) = {0.028305, 0.739644, 0, 1.0};
Point(68) = {0.033867, 0.738864, 0, 1.0};
Point(69) = {0.039209, 0.738117, 0, 1.0};
Point(70) = {0.044293, 0.737407, 0, 1.0};
Point(71) = {0.049076, 0.736730, 0, 1.0};
Point(72) = {0.053542, 0.736088, 0, 1.0};
Point(73) = {0.057669, 0.735494, 0, 1.0};
Point(74) = {0.061418, 0.734967, 0, 1.0};
Point(75) = {0.064750, 0.734510, 0, 1.0};
Point(76) = {0.067631, 0.734119, 0, 1.0};
Point(77) = {0.070034, 0.733778, 0, 1.0};
Point(78) = {0.071966, 0.733481, 0, 1.0};
Point(79) = {0.073421, 0.733266, 0, 1.0};
Point(80) = {0.074343, 0.733161, 0, 1.0};
Point(81) = {0.074662, 0.733139, 0, 1.0};
Point(82) = {-0.074511, -0.731646, 0, 1.0};
Point(83) = {-0.074193, -0.731638, 0, 1.0};
Point(84) = {-0.073277, -0.731573, 0, 1.0};
Point(85) = {-0.071825, -0.731426, 0, 1.0};
Point(86) = {-0.069895, -0.731213, 0, 1.0};
Point(87) = {-0.067508, -0.730959, 0, 1.0};
Point(88) = {-0.064672, -0.730665, 0, 1.0};
Point(89) = {-0.061420, -0.730322, 0, 1.0};
Point(90) = {-0.057793, -0.729930, 0, 1.0};
Point(91) = {-0.053826, -0.729497, 0, 1.0};
Point(92) = {-0.049565, -0.729032, 0, 1.0};
Point(93) = {-0.045048, -0.728548, 0, 1.0};
Point(94) = {-0.040323, -0.728063, 0, 1.0};
Point(95) = {-0.035427, -0.727613, 0, 1.0};
Point(96) = {-0.030380, -0.727218, 0, 1.0};
Point(97) = {-0.025210, -0.726886, 0, 1.0};
Point(98) = {-0.019947, -0.726641, 0, 1.0};
Point(99) = {-0.014607, -0.726497, 0, 1.0};
Point(100) = {-0.009226, -0.726454, 0, 1.0};
Point(101) = {-0.003820, -0.726532, 0, 1.0};
Point(102) = {0.001596, -0.726725, 0, 1.0};
Point(103) = {0.006988, -0.727040, 0, 1.0};
Point(104) = {0.012336, -0.727477, 0, 1.0};
Point(105) = {0.017620, -0.728023, 0, 1.0};
Point(106) = {0.022810, -0.728681, 0, 1.0};
Point(107) = {0.027885, -0.729441, 0, 1.0};
Point(108) = {0.032819, -0.730292, 0, 1.0};
Point(109) = {0.037584, -0.731226, 0, 1.0};
Point(110) = {0.042155, -0.732233, 0, 1.0};
Point(111) = {0.046505, -0.733304, 0, 1.0};
Point(112) = {0.050611, -0.734429, 0, 1.0};
Point(113) = {0.054451, -0.735599, 0, 1.0};
Point(114) = {0.058003, -0.736803, 0, 1.0};
Point(115) = {0.061253, -0.738032, 0, 1.0};
Point(116) = {0.064179, -0.739271, 0, 1.0};
Point(117) = {0.066768, -0.740510, 0, 1.0};
Point(118) = {0.069013, -0.741734, 0, 1.0};
Point(119) = {0.070896, -0.742929, 0, 1.0};
Point(120) = {0.072412, -0.744079, 0, 1.0};
Point(121) = {0.073547, -0.745159, 0, 1.0};
Point(122) = {0.074292, -0.746171, 0, 1.0};
Point(123) = {0.074668, -0.747092, 0, 1.0};
Point(124) = {0.074619, -0.747815, 0, 1.0};
Point(125) = {0.074072, -0.748414, 0, 1.0};
Point(126) = {0.073079, -0.748982, 0, 1.0};
Point(127) = {0.071692, -0.749433, 0, 1.0};
Point(128) = {0.069867, -0.749736, 0, 1.0};
Point(129) = {0.067582, -0.749915, 0, 1.0};
Point(130) = {0.064860, -0.750000, 0, 1.0};
Point(131) = {0.061722, -0.749996, 0, 1.0};
Point(132) = {0.058191, -0.749906, 0, 1.0};
Point(133) = {0.054289, -0.749736, 0, 1.0};
Point(134) = {0.050046, -0.749491, 0, 1.0};
Point(135) = {0.045491, -0.749175, 0, 1.0};
Point(136) = {0.040658, -0.748791, 0, 1.0};
Point(137) = {0.035591, -0.748337, 0, 1.0};
Point(138) = {0.030330, -0.747803, 0, 1.0};
Point(139) = {0.024900, -0.747148, 0, 1.0};
Point(140) = {0.019277, -0.746369, 0, 1.0};
Point(141) = {0.013448, -0.745512, 0, 1.0};
Point(142) = {0.007466, -0.744652, 0, 1.0};
Point(143) = {0.001414, -0.743809, 0, 1.0};
Point(144) = {-0.004651, -0.742965, 0, 1.0};
Point(145) = {-0.010696, -0.742120, 0, 1.0};
Point(146) = {-0.016678, -0.741278, 0, 1.0};
Point(147) = {-0.022561, -0.740451, 0, 1.0};
Point(148) = {-0.028305, -0.739644, 0, 1.0};
Point(149) = {-0.033867, -0.738864, 0, 1.0};
Point(150) = {-0.039209, -0.738117, 0, 1.0};
Point(151) = {-0.044293, -0.737407, 0, 1.0};
Point(152) = {-0.049076, -0.736730, 0, 1.0};
Point(153) = {-0.053542, -0.736088, 0, 1.0};
Point(154) = {-0.057669, -0.735494, 0, 1.0};
Point(155) = {-0.061418, -0.734967, 0, 1.0};
Point(156) = {-0.064750, -0.734510, 0, 1.0};
Point(157) = {-0.067631, -0.734119, 0, 1.0};
Point(158) = {-0.070034, -0.733778, 0, 1.0};
Point(159) = {-0.071966, -0.733481, 0, 1.0};
Point(160) = {-0.073421, -0.733266, 0, 1.0};
Point(161) = {-0.074343, -0.733161, 0, 1.0};
Point(162) = {-0.074662, -0.733139, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:27};
Spline(2) = {27:56};
Spline(3) = {56:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:108};
Spline(6) = {108:137};
Spline(7) = {137:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html
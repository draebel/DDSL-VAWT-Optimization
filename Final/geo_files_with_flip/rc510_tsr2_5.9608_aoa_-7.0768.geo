SetFactory("OpenCASCADE");

Point(1) = {0.074510, 0.748493, 0, 1.0};
Point(2) = {0.073060, 0.748175, 0, 1.0};
Point(3) = {0.069253, 0.747312, 0, 1.0};
Point(4) = {0.065450, 0.746416, 0, 1.0};
Point(5) = {0.061656, 0.745490, 0, 1.0};
Point(6) = {0.057878, 0.744538, 0, 1.0};
Point(7) = {0.054115, 0.743560, 0, 1.0};
Point(8) = {0.050365, 0.742554, 0, 1.0};
Point(9) = {0.046631, 0.741520, 0, 1.0};
Point(10) = {0.042875, 0.740449, 0, 1.0};
Point(11) = {0.039103, 0.739353, 0, 1.0};
Point(12) = {0.035347, 0.738251, 0, 1.0};
Point(13) = {0.031574, 0.737151, 0, 1.0};
Point(14) = {0.027785, 0.736066, 0, 1.0};
Point(15) = {0.023993, 0.735010, 0, 1.0};
Point(16) = {0.020194, 0.733988, 0, 1.0};
Point(17) = {0.016392, 0.733003, 0, 1.0};
Point(18) = {0.012588, 0.732057, 0, 1.0};
Point(19) = {0.008775, 0.731152, 0, 1.0};
Point(20) = {0.004951, 0.730292, 0, 1.0};
Point(21) = {0.001131, 0.729490, 0, 1.0};
Point(22) = {-0.002750, 0.728742, 0, 1.0};
Point(23) = {-0.006652, 0.728061, 0, 1.0};
Point(24) = {-0.010533, 0.727452, 0, 1.0};
Point(25) = {-0.014431, 0.726902, 0, 1.0};
Point(26) = {-0.018312, 0.726408, 0, 1.0};
Point(27) = {-0.026090, 0.725545, 0, 1.0};
Point(28) = {-0.033916, 0.724824, 0, 1.0};
Point(29) = {-0.037851, 0.724517, 0, 1.0};
Point(30) = {-0.041791, 0.724253, 0, 1.0};
Point(31) = {-0.045756, 0.724044, 0, 1.0};
Point(32) = {-0.049736, 0.723911, 0, 1.0};
Point(33) = {-0.053773, 0.723894, 0, 1.0};
Point(34) = {-0.057866, 0.724054, 0, 1.0};
Point(35) = {-0.062063, 0.724495, 0, 1.0};
Point(36) = {-0.066317, 0.725368, 0, 1.0};
Point(37) = {-0.070232, 0.726793, 0, 1.0};
Point(38) = {-0.072656, 0.728258, 0, 1.0};
Point(39) = {-0.073817, 0.729384, 0, 1.0};
Point(40) = {-0.074429, 0.730670, 0, 1.0};
Point(41) = {-0.074042, 0.731914, 0, 1.0};
Point(42) = {-0.072825, 0.732823, 0, 1.0};
Point(43) = {-0.072503, 0.732984, 0, 1.0};
Point(44) = {-0.071228, 0.733506, 0, 1.0};
Point(45) = {-0.069598, 0.734017, 0, 1.0};
Point(46) = {-0.065589, 0.734919, 0, 1.0};
Point(47) = {-0.061952, 0.735520, 0, 1.0};
Point(48) = {-0.058304, 0.736036, 0, 1.0};
Point(49) = {-0.054586, 0.736538, 0, 1.0};
Point(50) = {-0.050839, 0.737062, 0, 1.0};
Point(51) = {-0.047056, 0.737622, 0, 1.0};
Point(52) = {-0.043270, 0.738210, 0, 1.0};
Point(53) = {-0.039469, 0.738810, 0, 1.0};
Point(54) = {-0.035669, 0.739411, 0, 1.0};
Point(55) = {-0.028037, 0.740604, 0, 1.0};
Point(56) = {-0.020371, 0.741767, 0, 1.0};
Point(57) = {-0.016536, 0.742327, 0, 1.0};
Point(58) = {-0.012723, 0.742865, 0, 1.0};
Point(59) = {-0.008896, 0.743380, 0, 1.0};
Point(60) = {-0.005096, 0.743863, 0, 1.0};
Point(61) = {-0.001281, 0.744318, 0, 1.0};
Point(62) = {0.002592, 0.744745, 0, 1.0};
Point(63) = {0.006458, 0.745141, 0, 1.0};
Point(64) = {0.010331, 0.745513, 0, 1.0};
Point(65) = {0.014211, 0.745866, 0, 1.0};
Point(66) = {0.018090, 0.746204, 0, 1.0};
Point(67) = {0.021968, 0.746533, 0, 1.0};
Point(68) = {0.025849, 0.746856, 0, 1.0};
Point(69) = {0.029730, 0.747179, 0, 1.0};
Point(70) = {0.033624, 0.747502, 0, 1.0};
Point(71) = {0.037535, 0.747826, 0, 1.0};
Point(72) = {0.041433, 0.748145, 0, 1.0};
Point(73) = {0.045349, 0.748457, 0, 1.0};
Point(74) = {0.049295, 0.748755, 0, 1.0};
Point(75) = {0.053231, 0.749029, 0, 1.0};
Point(76) = {0.057162, 0.749271, 0, 1.0};
Point(77) = {0.061087, 0.749477, 0, 1.0};
Point(78) = {0.065004, 0.749642, 0, 1.0};
Point(79) = {0.068917, 0.749797, 0, 1.0};
Point(80) = {0.072833, 0.749947, 0, 1.0};
Point(81) = {0.074323, 0.750000, 0, 1.0};
Point(82) = {-0.074510, -0.748493, 0, 1.0};
Point(83) = {-0.073060, -0.748175, 0, 1.0};
Point(84) = {-0.069253, -0.747312, 0, 1.0};
Point(85) = {-0.065450, -0.746416, 0, 1.0};
Point(86) = {-0.061656, -0.745490, 0, 1.0};
Point(87) = {-0.057878, -0.744538, 0, 1.0};
Point(88) = {-0.054115, -0.743560, 0, 1.0};
Point(89) = {-0.050365, -0.742554, 0, 1.0};
Point(90) = {-0.046631, -0.741520, 0, 1.0};
Point(91) = {-0.042875, -0.740449, 0, 1.0};
Point(92) = {-0.039103, -0.739353, 0, 1.0};
Point(93) = {-0.035347, -0.738251, 0, 1.0};
Point(94) = {-0.031574, -0.737151, 0, 1.0};
Point(95) = {-0.027785, -0.736066, 0, 1.0};
Point(96) = {-0.023993, -0.735010, 0, 1.0};
Point(97) = {-0.020194, -0.733988, 0, 1.0};
Point(98) = {-0.016392, -0.733003, 0, 1.0};
Point(99) = {-0.012588, -0.732057, 0, 1.0};
Point(100) = {-0.008775, -0.731152, 0, 1.0};
Point(101) = {-0.004951, -0.730292, 0, 1.0};
Point(102) = {-0.001131, -0.729490, 0, 1.0};
Point(103) = {0.002750, -0.728742, 0, 1.0};
Point(104) = {0.006652, -0.728061, 0, 1.0};
Point(105) = {0.010533, -0.727452, 0, 1.0};
Point(106) = {0.014431, -0.726902, 0, 1.0};
Point(107) = {0.018312, -0.726408, 0, 1.0};
Point(108) = {0.026090, -0.725545, 0, 1.0};
Point(109) = {0.033916, -0.724824, 0, 1.0};
Point(110) = {0.037851, -0.724517, 0, 1.0};
Point(111) = {0.041791, -0.724253, 0, 1.0};
Point(112) = {0.045756, -0.724044, 0, 1.0};
Point(113) = {0.049736, -0.723911, 0, 1.0};
Point(114) = {0.053773, -0.723894, 0, 1.0};
Point(115) = {0.057866, -0.724054, 0, 1.0};
Point(116) = {0.062063, -0.724495, 0, 1.0};
Point(117) = {0.066317, -0.725368, 0, 1.0};
Point(118) = {0.070232, -0.726793, 0, 1.0};
Point(119) = {0.072656, -0.728258, 0, 1.0};
Point(120) = {0.073817, -0.729384, 0, 1.0};
Point(121) = {0.074429, -0.730670, 0, 1.0};
Point(122) = {0.074042, -0.731914, 0, 1.0};
Point(123) = {0.072825, -0.732823, 0, 1.0};
Point(124) = {0.072503, -0.732984, 0, 1.0};
Point(125) = {0.071228, -0.733506, 0, 1.0};
Point(126) = {0.069598, -0.734017, 0, 1.0};
Point(127) = {0.065589, -0.734919, 0, 1.0};
Point(128) = {0.061952, -0.735520, 0, 1.0};
Point(129) = {0.058304, -0.736036, 0, 1.0};
Point(130) = {0.054586, -0.736538, 0, 1.0};
Point(131) = {0.050839, -0.737062, 0, 1.0};
Point(132) = {0.047056, -0.737622, 0, 1.0};
Point(133) = {0.043270, -0.738210, 0, 1.0};
Point(134) = {0.039469, -0.738810, 0, 1.0};
Point(135) = {0.035669, -0.739411, 0, 1.0};
Point(136) = {0.028037, -0.740604, 0, 1.0};
Point(137) = {0.020371, -0.741767, 0, 1.0};
Point(138) = {0.016536, -0.742327, 0, 1.0};
Point(139) = {0.012723, -0.742865, 0, 1.0};
Point(140) = {0.008896, -0.743380, 0, 1.0};
Point(141) = {0.005096, -0.743863, 0, 1.0};
Point(142) = {0.001281, -0.744318, 0, 1.0};
Point(143) = {-0.002592, -0.744745, 0, 1.0};
Point(144) = {-0.006458, -0.745141, 0, 1.0};
Point(145) = {-0.010331, -0.745513, 0, 1.0};
Point(146) = {-0.014211, -0.745866, 0, 1.0};
Point(147) = {-0.018090, -0.746204, 0, 1.0};
Point(148) = {-0.021968, -0.746533, 0, 1.0};
Point(149) = {-0.025849, -0.746856, 0, 1.0};
Point(150) = {-0.029730, -0.747179, 0, 1.0};
Point(151) = {-0.033624, -0.747502, 0, 1.0};
Point(152) = {-0.037535, -0.747826, 0, 1.0};
Point(153) = {-0.041433, -0.748145, 0, 1.0};
Point(154) = {-0.045349, -0.748457, 0, 1.0};
Point(155) = {-0.049295, -0.748755, 0, 1.0};
Point(156) = {-0.053231, -0.749029, 0, 1.0};
Point(157) = {-0.057162, -0.749271, 0, 1.0};
Point(158) = {-0.061087, -0.749477, 0, 1.0};
Point(159) = {-0.065004, -0.749642, 0, 1.0};
Point(160) = {-0.068917, -0.749797, 0, 1.0};
Point(161) = {-0.072833, -0.749947, 0, 1.0};
Point(162) = {-0.074323, -0.750000, 0, 1.0};

// Lines: first blade (splines 1-4)
Spline(1) = {1:28};
Spline(2) = {28:54};
Spline(3) = {54:81};
Spline(4) = {81,1};

// Lines: second blade (splines 5-8)
Spline(5) = {82:109};
Spline(6) = {109:135};
Spline(7) = {135:162};
Spline(8) = {162,82};

// Outer domain (points 20001-4 and lines)
Point(163) = {-13.50000000, -15.00000000, 0, 1.0};
Point(164) = {-13.50000000, 15.00000000, 0, 1.0};
Point(165) = {13.50000000, 15.00000000, 0, 1.0};
Point(166) = {13.50000000, -15.00000000, 0, 1.0};
Line(11) = {163, 164};
Line(12) = {164, 165};
Line(13) = {165, 166};
Line(14) = {163, 166};

// Interface (between moving and stationary domain) (circles)
Circle(9) = {0, 0, 0, 0.80000000, 0, 2*Pi};
Circle(10) = {0, 0, 0, 0.80000000, 0, 2*Pi};

// Loops collect Lines/Splines/etc (blade1, blade2, domain, first circle)
Line Loop(1) = {1:4};
Line Loop(2) = {5:8};
Line Loop(3) = {11,12,13,-14};
Line Loop(4) = {9};

// BooleanDifference cuts out the circle/interface from the domain
Plane Surface(1) = {3};
Plane Surface(2) = {4};
BooleanDifference{ Surface{1}; Delete;}{ Surface{2}; Delete;}

// This one cuts out the blades from the inner circle/interface
Line Loop(6) = {10};
Plane Surface(5) = {6};
Plane Surface(6) = {1};
Plane Surface(7) = {2};
BooleanDifference{ Surface{5}; Delete;}{ Surface{6,7}; Delete;}

// extrude to 3rd dimension
Extrude {0, 0, 1} {Surface{1}; Surface{5}; Layers{1}; Recombine;}

// Physical Surfaces are the named boundaries (patches)
Physical Surface("Interface11") = {12};
Physical Surface("Interface12") = {10};

// sides of domain
Physical Surface("InletP") = {6};
Physical Surface("OutletP") = {9};

// top and bottom of domain
Physical Surface("Wall1s") = {7};
Physical Surface("Wall2s") = {8};

// Check FrontandBackF by ensuring there is nothing in the 3rd dimension
Physical Surface("FrontandBackF") = {1,11,5,21};
Physical Surface("BladeF") = {13:20};
Physical Volume("Turbine") = {2};
Physical Volume("Farfield") = {1};

// settings for airfoil boundary layer
Field[1] = BoundaryLayer;
Field[1].EdgesList = {1:8};
Field[1].hwall_n = 1e-3;
Field[1].thickness = 1.5e-2;
Field[1].ratio = 1.05;
Field[1].Quads = 1;
BoundaryLayer Field = 1;

// control points for mesh (blade and interface)
// floor((arc length / 1.5mm)/ 6) -> Transfinite Line
Transfinite Line {1,2,3,5,6,7} = 33 Using Progression 1;
Transfinite Line {4,8} = 2 Using Progression 1;
Transfinite Line {9, 15} = 800 Using Progression 1;

// For more information on gmsh syntax, visit http://gmsh.info/doc/texinfo/gmsh.html